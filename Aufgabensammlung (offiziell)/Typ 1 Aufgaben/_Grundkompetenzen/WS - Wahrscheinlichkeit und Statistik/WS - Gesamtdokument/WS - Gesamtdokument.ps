%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS - Gesamtdokument/WS - Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:58:23 2017
%%Pages: 100
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMRoman8-Regular
%%+ wasy10 LMRoman10-Regular TeX-feymr10 LMRoman6-Regular
%%+ LMMathSymbols8-Regular LMMathItalic12-Regular
%%+ LMMathSymbols10-Regular LMRoman8-Italic LMMathItalic6-Regular
%%+ LMMathItalic8-Regular LMRoman8-Bold LMRoman17-Regular
%%+ LMMathItalic10-Regular LMMathExtension10-Regular LMRoman12-Italic
%%+ MSBM10 MSAM10 LMMathItalic7-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS - Gesamtdokument/WS - Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0857
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMMathItalic7-Regular
%!PS-AdobeFont-1.0: LMMathItalic7-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 486 136 0
%%EndComments
FontDirectory/LMMathItalic7-Regular known{/LMMathItalic7-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic7-Regular)readonly def
/FamilyName(LMMathItalic7)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -102 def
/UnderlineThickness 34 def
end readonly def
/FontName /LMMathItalic7-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-1 -250 1171 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E69EBAE83EE26F7ECE50EE80EAE01E60767465
E8CD8AA4134118BC0C2FC8E80D86289F0696C2D7184A922FD78FC181EB9A75AC
58DBBCF9AC97B2CE61C3E7A70A644DF8826368372A86300790896E171B76E2DF
21E6CF6D46457DCFAC0212568F46C4F87221738C012368B1F304167406201269
A061D199AAA883079498840378602CD63BDA4C18DB60D1781FAEDDB3D4CF9FD3
34AF1E6F7D10E12B444C70B7FCF76B782F8F2A44D63F0D4647418C70B534726F
2DE6DBBC8F467528E06F97B52462605F6742F569250D30A818F73D46E3443B67
7DDC887861C7DBF79C49359CD5DDD1124701FAE9A43B9D48C51ACFD02A8E9E39
44C6F9DA4A9E2E2619A8EDCC446A637F6552E7C8390B809A1F18DAB043983BD0
38F4A4B4F84380C229A8CC0E996EEAD4B12B07B9383D607BC4108091CA09AFB4
F3C91EF63B23EF6F60481A3FB5F28FEA1A5D1D167F72D67C904E71C7445FBDAD
C2FD33F147CD4B4B68637E0472F88C663E1E2FB523CEEB3E28DAEBB0033B9A85
DC166EFE8AF30980DDF8FE96627DA6D915EC910423E3EDFC0E4BA3B9A98B1D50
A5AEB61B4B6528949859C4B74E4ED8081F1EAF5F1B0ED845FDF943A92E0C2698
58E6C91DA734C56FE063D2D2C14A7A26FD946FC77A6CBE59C6791CD7FB34FED9
FBE79C57C57A6DB0781AD8D1B236FE4172EAEB7B23428904193B3FBF94B342EF
20AC7A750FCD0BA85507793F1CE2D90191E4F248558316B020BBE971A51633BD
CDF69762E1571891A9ADE20B16F94E24C486AD2F870491E6A75B9A95267FCFFA
E0CA06454ADE3C0B5565E733B33FAD4E4EDA47D993C76935E5CAD7ACCE96226A
D858D77326BA6D4C8CC74A16DD94E5E894150D11F052412AFF830476C50984F9
4733951500CF63B4662F2489D5E56997E1C8D6634E8F60DA27CAD4AA4AAD3DD9
F6161E63BB05F59A090AB0B23F6B1B58F62749A05B436886C1BEDA94A1FA2E72
DE7F802F42B5E00A0643CFE2245DAB0FD529E70F1D17FF1A72939AEFC3033B88
B33A33AA3A90F6A27BDCEA830D08D1ABEE882F8B8E7E283844B29D7CB004560D
8660EE603794187E3FDF4536A088F477E7632AC6D2E920AAFA0FF8EBF20C87AC
6908D0C344FA5672B756BA24DB51A2A131B516923D5CC746A42F8462EBC9D7E8
7A768516600ED3FCFF8565C6A56827BADE8C69ED7F226EBFFB0FC609E366B12B
8A322327272589C6F61D91A79C2D61038BA7A2B491D66405815714836234C1D0
AF2E2F5CE1F81F873363E6378B279EC0D065F4DC7C741410CEF3AB118F93649F
DA3E1991103A48A1D2D1F1F5E4B678DFF4299C63BE12E4DCBDB2926F0B386EB7
CA78AEB2E2AC11A717255144129059241028B1D50E9E488839E97F97E955C344
1792ECD902DAA59D082283A915D36FDFEFC3ACD20197186B76EB1A38A3624AAD
FFC21A73794CF132253C51B9E6E27E63511004A58EFD38E70CEA4915F40C2487
5AF382C1268ECD03EB4698A8F1791D3B433DD2B301F57E978BA76768086AF935
F716F6C603ACC0D73ACF38F23DF776F5F3106A9747916F9A207EB96A2E6C2297
EB8656E59E82D8B8D8D9C3EEF4C16ADFC9E6BBF635DFD8CA407A41CBA205AC0B
56CF0D604833511E78B3DF0FF25780A142C31E0E387E112320B7F5C1B5FD88F7
05521060CF072D79559B316CA387DFFCF55AEA0E7CBE23CF6D927C59A5807D23
76B480BD24A600EFAAD1B220F9934FBCB525354837BF230364AB934CE5C19693
D56526CB56E9B412A72D6B9790106065F2F956E07BB110F1D7FF4A5199B53C97
13E47E2507EDD79BF25B181AD308D29C230745458EEDDA84A6665F8C59C1A2F1
1A4F507FADCC056E2766BB28D0F8DE5FD8C8FEA78E46DFB045457F8D3D33555D
B7CD7B6E984DEE494A7B01B637E77EAF484C256336524AA186982F47DA475255
69C373B4B066BA74AED718A43F0AE5BE4ADCCEB13913ADBB1A948D9A0190D4DF
BCB5CB9131A76DEAC1F5B013954C481E602C46D13E413093CBFA4F7DF884F930
5DCAB969B340B746D036FE315D8055E0C734342EDA77140BDD02F088F10DE207
8E17FA0A86A5017656773E7A78C7CCAE682238D80441858158116EDC3CAF738F
5F7DB27ED11DE1DFC7E967F6DECA7277FCA73E841737D9AC23D9ED877B83CF7E
1E095CB18DCD45B15AAD419E102ADDACDAF2EA97171E39C5557C0120DC65B284
272517D2A4ECA950A1B5148EA216A3C4F2A3D3110E7A94273C85A3C0C2D0F103
72264807F7F1342623E1E472AE1BBD6EB64F2343E9BBE066EF1D37916398FB0C
54B4FCCF6BF498DC6B43688EDA36C579733D7270248D35B370D3468CA4362903
CBEB54FF3B9D29F7F00027FCD9E515DDA77CACC5D7FB21212565CFE07DB5560F
9B17277509BA43751BE606BDC2136D9B78110B14AFB796714533652931A309ED
DD3C2B7C10E5852F62AAA51ECC6058CA2F8098BA87CAD38FD56BC8C89C3B4710
286F73222D62B39F81695079715E577F63AB74AD2B4997357EA9E94E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSAM10
%!PS-AdobeFont-1.0: MSAM10 003.002
%%Title: MSAM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSAM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSAM10 known{/MSAM10 findfont dup/UniqueID known{dup
/UniqueID get 5031981 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSAM10 def
/FontBBox {8 -463 1331 1003 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSAM10.) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 70 /star put
dup 88 /check put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE2340939CE40EE9186A0DCC3D3
D661293EC5BB40766B73935EB54125526067D631E1E3D1D6569AB3546CB257C3
4C12CA4AE98C3F99898F1448AC0B416B8E5C3EEF3D74B5FD6A1BE3C23B160E78
79A9E0AC4FC82364F946003C1B2E0EF3CEA944727E7502B65BA1331D36C159E2
1D107580F28A32E04CB876822CEF478BF4464CE4F7AE824FC786E099A1BE2A3C
7D2BFE2A748AB092AEBC2021DBFD5C40E912BC5856F3EF8615147350E75D2BF9
E428D7948E2128053FDB1F90CA9C7D6581E25A6645879F50577FE7F0B32B873F
13F97C524E19F1CFE3883C0DE1DF80FB61111978B0C2D028A99A712D3DC27D8F
C83C4EC335F0DB9912DD2AF009FAA56C5BD5855BA92851629EF6C47E6AC303A6
1A231558746ED8A78C76E476ED71246A2E15C51F465AB21A22ACACB03014B06F
201876D3C6F49E2D38D8C4FE8011F7BB148FC3227E0BFA51C0F9AAD64F0C6095
77B3D875476B666F9FB9A46763C49272FC504CC0E817A1533409D293D6D62CC8
DFDA666BC9DC70C4510BFB0DD2BC94B33D457EACFD754761B696163DB4C547B5
FF8994977A7C9910AF486487CE0320FA1E705BAF4B14FB937229D80F58D01E6E
9D9716EA3EDA84840B5D6BDE216A25814ABC4DE4C6818266C33CD4C3DA4F23BF
DAE6ABDC6D64E7EC7DE918DDB0B05D8413D32D99D15FE112C1D393D21806E0C9
7CE0F0977AA36617B8DD50937C5B0B5698947B0A71A167072FE1B3AD6F274D97
484926DF52CE7D9D2A4928A188E1F867C298E6DB475C0CBE09F0523D8BC6FE24
E1CED78178EE1E9D66A906B72505339E62499C0E4B6B5A2D596C4F8F4312F582
9413DC88D6EDFEAAE0C86BEE44CBDDD79BC02C844B80324B1FE3512E73C213BF
ECD22E7E13F98AB56E4D693B1D6045045E2F01DCC2AA1F70A4699B7D718A743F
D749133029EAD1870DF0B00EDEEDFD33642A88EB10DDF4CBBF8A7D8F7781179F
A91CF398747D52769A054CDACAEDC330FB79ECC96CF43C29515F5895D3A8C1E6
828F776844C88090405F868A872EF54467B72825B001B46F6496817A9B928BEC
ED212D4368368778F2D1B66D005F2D6E3DF4AB9B9791AF2CECCA3AE524781A41
5052FD21CB81D934F0F12CF8C8FFC656BAFBE897C5E86A21D3F42A38F7916693
ADD1DBF48F534DA16099FFCF3E3DBCB254BF49D8F72FAC2F9548477F9AFA414E
65A29F24FA16A9E0955A9A6CCC47198E6332ECD1A791F2E36E6656852179A94C
E3CF4477A9A6CF507B8184ECA5C0304FA15ABD8B0C379EAC19B9D16A630D96DB
A6DA819C2E481AE4870BCAB5963C0F9D837C97E207F7ED58B776799586B9F755
B705AC31C09C3F74AFBCDACF092B05F9E2B072C1B17EE6347523D3D5E1D404AC
636C33DD94121C3711C3D05F48E12DF8489F894E4913263176E81927BF5E3A94
99D124F64D00BCC288F03FD14F89E6352083333EC6C2044E2F81C477DD4CA9A9
55135915C27654B09BC9099FA966AD440417945879399B39C7BF20385456878F
9AAE7343912927476C2C88A445C03E3B77381F3F9A82FEECADCCF8C307144775
144279EB14E0F0443F8200C0FABD54A075EDCB83EAB07A7CAF6EAB17C6CDB239
077DC62173A54E93BE2911F4A45F72B80DD9C41B301B292EFA78D361AD74BD7D
2E94D44A2D79BB7B89708E094A21CCB28D80E0FCA707D742CC02BB81FE4B0E06
4A5E93DF0414BAC27ADDB044A0D444692973994CD028E1C62F1FFA4776554914
2D55B0F81C06A2633A4AE42AD00422A619E339F2E6F0C6FC74F70552974509A0
812F1007FD7055E9ABB8CB39F799F847993DB9593A76C388F9BC883D4A0DE2CD
BFD0F7F2A5F1C50791EB4363104B49088E6EA2C5E61EF256A9FF232357D62D78
0C876D200E4136F7B0570A3B0988F3E23443081591DDB861745B4F6F0FF7D854
8F558F995A283B346E266DB6FFB54E0761046152A864F710113B6BF12967D022
2947517E1CE2079849CF8EB01BB2B96EEC2575AAAD1AA1E019D7E72BCFDF2979
8E2A6EE0C1525389C16411E5DBD416467B9900F07223117A77E0B4C3B0D49A96
C2E3A61AF9C9B1CEB80AC6357FC0CA446FF87BA0CCCD81924F6209198BD6E1A6
9EECEF233B17CC4E9F0654024F7E857EAB409F4B9B9ADE4090F2B715443A80EA
130369A193A32A4DA3730F13E3C9E717CCC9E74611D787277B73EFCE14FCC3B8
6B11AD88F42705F65E9C747B472F379ECDCB7F8F9C3FEA64402972623EA0998F
255892C43CEFD7ED08957C495AAACDA59E9398B43788DF27F7433F72377C8F88
F54F5E3A5564244827EBF92227B94F4FE896FEC6519769AAD567E618DFF61B7D
B93EE0FFA2EA58BE1FDAA0025259789FDB31A1019661C18080567EB5C6306596
F97F039E3C9ABF9E40B4725A96F8170B49B73B68E308786FE99B0C005DE01894
7CC93C196E1F830570D51F0AD29BF27CCE45AD7D3B4332C9D50F1E9C2D04E033
1E197DB9BE1D44566F738CD26A13B8EBC8FD49E999D35F042E8A24F025414F14
D9D11ED702250F1295722F68A022196A0E38B9ADDDBA997283ABAA62898EF32B
C765387E238CA3475ED5C6EF2803CE32B5A90A8287C70386F46B84C332E8C00F
85A8CC2DE78D433A325B7862AD4D93B3EE2CABC4B688833BF263E26879AF213C
934FAFEBE8D804E2BC8433B81ED5DA99F08C2C11B93019D3D9C1C952F20C68A7
E141DEA2CB983DAC5A2B9426A98262FEB13C420EAA315C890F0B907BEA099C1A
10B0AB255AF99694C722166DCDA72FD58CFBA3328FC5EF83A52A750C5E613E74
A8572CB8B78ABDAC27B798E727E3E5AF9451416493FE3F4E95157B4ABDF3A910
64369E34A2B40176A5E0E30F472E33A41B8C7BA4CB1BFB9173783909161370AA
EA40C83C60AAE242358688CE13193C9DDC3544A959A1E6A16FCC4BFAA65A63C7
5AEF208FC201F88DD047B5E6EFBD4BB256F973269BA1B06CCFC186D48BCCB4F6
A0F512B1D6541417BB6045045CBE72B72AA2549C345B1BB466335226A0E76A10
9645C25A0FB4CD8455C7C10C0F4E7E9914D2010BA1C95C6BAE4E62C8B6A8BDB4
92281B366208ABD9C010B3660C5E150D63D6927255CF9081C0898E9B206FAB57
B306669AB87AF405C537CA7D3411DBC41C53EEFD8071C094486158E97BAFE90E
BA29BEB83BA60776D33BF9CAF9C7FEB66D4B93DA27E499B006D243FF59CB33F6
AFC65D10B74CC522BF4AD45E3451B395AD5029B148A1C9B710D5CF02B65F9189
0822C0A33C4D07F2DEFDD5B4F6E063891F0456F1BCA4540F9DCD3B0F9F39696A
52336AFCF0A33A029AEEB448CE120B9D939487EC8274AD4E1D5F5AF4C14EC910
680C5E312735DFA3A5B1835370A76DFA63A05379021A64EE55E25AD5218398A3
6DD66D1B474A2E7C6E236E0E4A9BD0E4F7AD1807C6478225C58327BFE1822000
26713D01CAD6951F456504D79867D523605ECD78F2D5DA05994BA4812BF65E7E
34ACB732150ECB3D212D03387C71677F617D76A9A42C708C89D61614F280A5FB
0BFA84A17CF9DF333C9E13DEE82A5ADC9D2E588338D247889ECFB090CC63CF9B
8D92B1CB784B65BE80E3B57998F9ABEE702E07BC127D272C67B0A97734E405C1
FAA87E6B9DDB8ECAD2B9DCD56D687DFF71BDF29BBDA0A0812695F81C5EBB83F8
0A810D6560F28D7CA1F89A11F253E1B3B4EBAF511454E4BF2C46A333BC186558
8D73374455A32DE993526063AE70EAA647454ECC62BFC5A53357F2955E4A8A02
E20AA64AB6511CEFC5A32874C8F2BC2424C6B85BAE80191216A22D93BF2813EA
18A1A961543D7C58C4F4B263D76AD6C61270F2A77468B3E59BA9D861E5AA6CE1
B7A9C4C2A13E80C4052283DF3529210B3F6E90C2EFF205866865E7E96F34513B
05A45939728619E02FF1410C0D220F6D615718893E7370A0B91675BCF681B2D9
56112D9D37ECB819017472DCD38FE4724834869F82985A69E33BF862DB420DEB
AA1CDF83099114501C037873E86E0D33FC954E12D40038FBDC78E7159B738516
A078AA386D9424B8D4913B7848D8439D2ACAFB7C81C9AB192D77F316D299D11B
24F67141B1E0FDB564B70FE68070BE6BC00F22C11A1291BA6401C722487BFE19
D7869DA874C9059677DBEF958B7AA06EB924A17B3EFE9014493EA1FA8C4C67B2
B5DC483ACFAAE88F2DFF9FAAA7825854671ECFD522540C9F6C3817C11D3B63CA
8ECF710EAC4F27506B67B972633D0821BD15F4511F305A5677F2919DEBF7DE88
4F60E36360A7856B6B6A8A866832534279AF45B4232877F45C92ABDFE0910F7C
F86825A1B6012FF93479BDC9639C01CF2C783356B33127AEC7039D40529EE54A
756D8B7524E069DA60A38AFE592B8B228ABE22B7BC9CD9B23277FBB567B1377C
77E21AE6F55ADF4F8864F4260562F0384165444385D5A8C5966EBF191900B898
85240634EBE8A5DA382E0EE3583B1B5D102B6EBFAD60AB9C335919EFBAA55A6E
36CE4887299E395EB5766080FC0B6F93B1247F28842FB817084C9C090616AA72
25F4ED6996D36CD9675009C615BA26BD4904F3130991023E4116A7E6BCB26C10
7106241DE039BA7F26E137040BAF587AE03A476526F025C70F16EF23474C0EEB
6E27D8562C7C733CF470EA198494A505A8F871E8EBA31D4F0D9F0AEB9D0EF63B
738B582F7BD73DEFD5D83707BBC7854B6FC7FA6E2636F0B68C4858B247F70C4D
F602764B9465975E9AF28C2046EAD743CC350E747D6524B9CD7F325946B9287B
F7D46E4342A71B0409B2BF5FA4D340DD549F6A5B05D2784EC5A248560F4E214B
C5304217B3AF8451C190FE1C312527746E45DE39D8D43CBEED9A19FFE143CA61
3B65344C26E189D790A0211556C609F107C78F55CA120F3449A697D1305DAD2C
D3EAB88E2CBDC022A4E036E232237C1C16ECFA62D6CF8EA3B6610B58C75EEEE9
676201206E4A8B8C7CF5EF409F2C0544DAAC926497B1FBCDEA07DF042ED870D3
9D74709FDB8CD2CAC4726655371EDDAE78A5D9E0811ED4DCE8C23DAE1ED44D06
F4DF09BD9A00C1DE178E766E05CD3CA64301C592BC01EA4F6D1973586547B170
A3338C60FA1148DC5F3F7B7DB5EAC870239BD137CC85AD54380379F5C30B0754
D0A0FD8DDDC7CE725B58F37DE7DF077916C912F2808D0E4CA32808D0439A148E
3B1E18B9C88C8B4DF23FF5C53B2881D7C23D1C239F08137BBD8FEA326E7CD1BC
C80027A40463BD58758F4402D3DCDFED46C2E3C405E1B1E8DD0062E1272AB5C8
91953946FBB4B9EB0A74D0F7F4FAAD798571EEDBF0CD4C92A6916909297F27B7
5135990685B849E8244D2EE73D5C7BEF1D3042CA8353210EB4293A2B2F1BCCEA
7FF2AA91F52D343BFBF5E91F2381AE5B6803C46605D471B7BD122153E87D872D
EBF37727370BB683A194C4C4DE13F54AECB116BEB3E0750E10AF272E0C015641
0F9264A21BA79821B29D8CB78746C314E6893765AB9BB7BB1730D758F687E615
D2AEED695331E99591AFA000AA540ABD36ACA911E91E20912AB819A80D5183A4
CB88E08E0E9911612639C05043942AC8EA0072E9CB7154C415C0FB37DFE3F01E
638D5052C87A8359DD979C44B730F06019191C5BED15E6E79FAF312ED8EB0B02
3E712A0F6C89A6F7C122A561F133FB4D2A98EE09B11ADEA53702C92C210334E6
8D5F3E1BCC0E81CE178ED749B00FF4089C1AC412DC5F6696C9D8B9D2EB24B35C
3C1F8F63EA348A95622AF76CDD5C4DFE06A8C7534A55FAF937777E864C98062C
CEAA3ECB5E518C75FEAA240910646EF782303BF34FBF8162C8650D5A6F0EADB4
FAD9AED7994003F74E09A3CFD8900A33160CD1D49AA1C7BB5E42A2B0AB5A9D20
A5AEE02435D84A2622ED87454A2867E112A9AC72653A7865E2DDB9C236384228
94DE4A396FA798ED1F370AE5247E0E703D4D4225ACC1EF410631555D7DBC814F
F84353CD407284FBEA1D371CA578165B888D771ABEF7C3ADE33DF899E55FB0C6
A99A97A474739D07FF17DDBA267EC6C0A6154094D6E7354FEEF9723F23CA6E86
D8467D66FC5DEA43D700C9712BCDBCB15EDB628F4B840A76D761CC213376A0CF
3F137F399AF2F349C1D7FC9EE28CE88F416F1069D6907C3E917AECDD245A1BBF
4375A03755C145042232F87BD3F097746E41A70FAE7761AB26D1FDBABBFB56FE
D8C80879557D3849CBFC7D25D84D137ADBB5FD4F6FEF8CC9D54824EC85DDF553
FC992F823952FC7591D08F035BDAFC9317F144C94E828F09E29A02F0D6639DF5
08D32902957CF0BE88694AA031FA8BCA9E73D48A60FBEF090FEFF955FEF964DA
F53A9B58D2732F986DD20814A1C11963E4FF24011CB93D616CF4A6DEA6ACC5B5
354626A142D85BFC4F03DBC32F26253B97414C9CFDF3C3EBDD68FE0B7908AF88
1961CDBB6A94155524361C0B95E42AF0DC1542752B2129938BCD020CA19D64E1
0EB5DE254B638D700EF4BA620D924D65E95A329AC2657D2CCA597A4FEF7F1347
05419CFB59A93578682671B9A2910BBAF099C877288C19A4EBEBCB3C64415248
C00D0295332B6388384F27779F0B0A2D05A9F3BBCB3C1F587EAE05AE4D2C5319
478E8D848ED75B368FF45ED8B2D572AAE502493D2A3660F8400E1AAF9B27AB35
99FA7E39E250E91A67101F20FAE8BFC13A07FD2F7FD3A45002C02AD891458739
10D221602C35139358B1F23E0DDEADDF0AC07B1689EE95DB17A3B6888D9BEB65
C7A9BA2CD903B2F8348489A57F5A7191D1627A2C76A856C9E178B17A40293F98
E9CACD819DBAFBD0FFEC6EF5BAA6D8AFF764786470A5B02860DA35A5B3A2BBE7
45E6E4882CCF3A980B0C35F6C170D7269F7263FBBBF4051A51437A218711AA18
A408F16E7C9FD7D61AC4E859A91CA4B18D5BC3B0F6EF0287298B75C11FBD9FA4
1BF203A988C21BC2C550839E432350ECB4471F8553F7B4E42128DCA6B1239DAF
6C9D4A8B8AB7FA8AB013EC3060F02D6DB609F59E0BDE4D05891811A41F7E47EE
7166D88DDCFF5BFE1AB84D873C38009A857DB436100CACD8DEB98548A2FD3770
B44D6194717757468A9C84238E5B83AD19921E31485ACC168C25DA73D95767E2
27EDA7FBEC3FA6C8C58DED3649994CC965F81327D8547181CE06A73A6D696552
6A6EB8009B1C40A46791E8DD0AD66E125F61CA6810BB4B74E266703F9DE0E322
41D93C72DF010EE7DF3B7AF46CAAA9463E68D5C8B792D3197C4EED52CD16D5E4
493C1F8944901537C4E6AC73E5D6621CBD177B50CFD7F86E786D6E6EC176F6C1
3D7E9346C2859A185793A764E960F236A1798FF5E3A740ADDEF422FDA93FE058
53A9989A0A7252337DDCE50B6A040E49421069081644A51C80D37BF73CB30254
BC1D8A551F71FFE93F068070448334307A87526A86A3A7D53AEABC3506E78DD1
849BFF403701D6059D6CC2CCFCBAC8BEBF440B8D3152C63908C6882E56EAAF71
2984E440F40B5F355DAC74EB02738BCB094E40A55A48A26BA9970D09EF48EDB9
C0C6BA95EC2A5E98325594AC418DFF541515964C77B8D2C8E953703063F17F36
D042EFFB97936DA27FC3601DDD601709B71382EC67BB58C8D07254A6BBF7FFF4
EADB3B735D143E4654A5F06ECF67F0305606CD0619022A5DEC8206D4F9B8D3B0
1CB47BCDCCC4F1898958555F5218EBA0BB9F6BDA92E8A8F645C51D69C597141A
DACC7696EC47C399F6BC4CC2760FF9366A7D1F2ADE54B913F1ED476D606ACA25
83D3958E9EE0547A5C54C359AD40D487FEED3555A936A7F9A2098050930339C0
DB023D22CC949331C13287D1108A4F840235AF8E613FD6176485B22BFFEFEEDC
79CCF729E7E3EDD1C4EF920B40CEA5C0AFD214806ED9D4FBF1320C845F3FB72F
5F230ADCE460200B0953E712C3F79B6643DBE02536E476BA6D6AF67397EE4B0F
E685FED900FBC398794BBAA831BF2B8EC6BD70BF700AE11171BF0222DDB5EE67
6DCAADD0E362136D27DB0DCC1E294A4BAD5517B829A18C8B8A83753DB110C400
4A1E6A9492DD631AD4EBE0E0C72BBD7843D83D5FFCC988A8F3F9AD046CE31A98
61C5E121EEF7E959CAEF3F652C8C073BA10C16660DBEB455C14F2719DAF3E980
7EE72069A505E98DDC5B93054ECC34930B868DD9FC3673053FCBFB8A3E6D456E
E54A9C829DA0E333025FB06466CE4C4598FE42B59944BBE799A9E124C255889C
4B925C621620AC9B8D9A580FD443F14AB0D8AFA9E3B6592723E8B0213AA8666D
60D44B7CE967EE0BF67ABF1E1F9402ACD59AC7A64400831CCF5D78DB732FE2DC
821D46558AEFF3AEA28C87C9C8D4547FD379B9758283F53A89595E4B11A1D27E
BD921E4828F8FFC6D2BDE2C385B089C3D7B7E2B305A5915758970693BB03340D
C8F1F5910671C73560D3944EDB330F2EB101ABBCC37D2CE40CDF658843022AA9
07D3FB303F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE505B8A69335E25F98573BFAC64A02542D3B835ABC68EE4F
0A1436DD48E963348F6F5650666F6BFF72D385A5FB67448213B032991B4970C5
79925CEFA92DDED5BE33EEE8275EEE83829329E11E4EB1E2E16669B21C3D36F1
FCA9535233B0BB982F75ACF33109F8AE7ADE4954D0B1E1802008B39E90FD6AD3
2DFBD4E8C89A9FA5772BD7C4CEA7C55882CA53A2CF19DD079F8C03E298E58711
C4321BBF26F45460900900A22E31ACD5303F037AB6059E4288B2978A1DBFCBE6
32BE7DC85EE40632B247E37B279DD5500FADF52BDDCCB2405610D5032E3F9E75
51A49BDD4B30EFC3B43C4875D056EC205D4E844E1D39319341D0F40B15EFC6B8
101C4762D9E95B430C36BDE4DD07CF59E3280EEE234606234C278A7286BDD41A
C562AEDA5BC1B4A7975A24E261478CDA81F01E0CBB7EBEBF9876CFC52EE5362F
AE1C91D7E9C281194A84A9ECEFEA5023317F88FB64830E6060C19B47EB1707C8
9BE13A7F5B1FA2402A42FB5AE7E07BD27EFE69F71B8839A3D7F629EDD78C3073
D99DFE2D837EC3178708BC1B39E5C201F77F65511C19072D9CA7FAD975A6D71C
5443FB20CF288B1041C68A322971F6A0B8C2FA887BFD5F3B2C23FCEA71E4054D
332ECD422011A3968D9FCAC28875B34AB84451525E2C91A8525079B97D9FA6FE
5B7DA4A2638139FF78BD4F987724653A6EBA1F74494C45E1ED71B301CFD72DA3
18C8D431626AC1D618F7EF726DE3ACBBBC37DD4D0C8C49143401F37676BBDF7D
F107D0701F104B7452B2C7D408B8000DA422D3C9B3F98541C5E6704C90D2DEB6
1A59B82AC210742D91F5C99F9CC0641822F954C0127CE0DE8F2C6CD32D60F958
D17EBA2AE9F59F43B4276A4D47F2D3DCA7C6C5B704B270AFB572BBED5F359EC5
BC402442BBA33B2663D564461CB3A78095C2BC29B689EEFDD4D77E5857EA2FE1
33655CB276D25CFEDBE10CD85973CB6FC0314CC4B00686B0E8BFE3F4AE25A09A
31C8793C7AE960AC01E1F72850C6BEB970218755C0A502200D6B01014FD75F69
D6F13F8EA5FFA60953E618FF54607F368EBC17D62F5FA63C265E488AFC309F27
62CDAC4E4ABB500083F2C2F5509E4FD231CF240D32CCA0886237FC6DFC2EC48E
C001CAE1DC020E57798CA25FC81B91DDCE0CA3E5B551096DD5762189E8BAE95C
A611CFBED577BEC9CAF1528AE03915D2D10FB794E91B8944E6DBE27EE47FE6FC
D96CC54C9267DAD51797ECD80DA14C24A407D408771341818CBD9212AC5931D8
E7BB028DDEBBACAE4B22606DF40BFB5AF925A3629074CDEFBB435AA165AAB321
7F0BF5A1C34DECEB8161B9E772CD941B976EB9FA21679AAA2F76EEE7E70F00AB
FE53752DC6D6FDC3BF07281523CCC8A51F1294D95ED64E773FDFDC66CF8CCAC2
A703BDC820272D681B75045B1100E22F5FC8CAA9FD450C46FBE6B50FDDAD63AF
C6D0AA51AEDE8DB6EA6900C0ECF6FB504C7E78EBF6B83B7C81104C2B64CC9042
176451719E95A92EA4B67F7E4F8A90B1DD9AE5B2B077C424BFA29904742887C1
35B3B0B7BF51EAEB2B6CD0777BC5DF6A424360965F1AF076656B93778D3CE80A
21E154136736623F97DBDE0DDB2852A582671937676F388E65B4FD231CEFD339
BA7601FE719ACADF3CEE3D5864CE0B4D078EF69D60F1ED520697B46820739DEC
DB043A8F757FDBCF47E52E4DFDE2920E049AB6D72A4A31FC7E832E3975AFB3AC
570F7B210ABEDE52B30A581AAAA0549481BC47F301B4F9403C247F2A0B1BAA88
24F423AA6BA6DDA559470A4DFF7200F08384C2487E1854D8620930068F341A32
D987A6321E0FCFE02C0190DAD305320A1193D020BD8C38D4ECC758A65C823580
589D5D68150258CB8B3F35F8ECC0B31877892C56EC43465219C332BF05F8923F
AE7B8F87F5D7B576D0B929B99174AAFF261397C9F95C27DD3F55BA766BA3B082
64B23E951CDE1188894A0BC5C9AB831EA1C930C02F6B72423947C37A9E897E9B
2BA62ACDF0418B17408D8467E84AEB7F0718273B8AB4AB1DF7E59ED302C94F59
6205C31426E4D277E12829BC462C8ED92F6E49F40A15A0412F62BF8A7C5147E8
B6E969CF4F45F06AD9936C8FFAC886DFA909582224A8F46D3777A7AA51D131FD
754085A5EBF4DF44869CB51198CFD8BF915E2FE48348D3E669B508198A13BCF3
EE5C00EBD1D37625504983813DD7F2B1E0BD4D62C7F986B7D3EE10D72ABA4CB9
55D7CEA7959BF630FACE597BF98D5DB010B3EA7377DB2E610091D8A9F0916171
FD3DCAE601CCCA7A92B14F6CE5CC00E6711B848DA1253E3B23055F41CC77A171
6B4BB23B36A81BF4E76E56867BC05BF72164DADDEFEFFFE622B7BE4BAE1C41DC
B1840F9D054863299732165899D803437F30FBE8AB82986B8FD59B111990EE73
9AAD68C401FBC8EB249E1DF54364CC99F3A4CC5C2D09539CD2E5F390F2363FFE
182BED93F6C563EB474975C4651542D3F617764A15B0B2CAD5294000A051568F
948A0A60532D414F47D6D1200B58E3C63248C292C45377746E75BDF4200A9DE1
95F94D38D27395CD96A0539ECE15857D4D04DD8C0DB52CA8657A73FAA12FC3C4
AE3C79C28D6B11B3FDC890A7A00C21B86DC4A58AF73AB0F46FBA30A15F333407
343C32E21A3E281053406BF35318CC276BC945A61B9AE6C7DEC07B53B366EC2D
5F3EBBFBED795DDBDAEB694A8453B2DFCEF193BF956861196189EA8655C6A377
37811952D66C71BEC3E1BC7E3FAABE986123AF4707BA7822E322718673CC12E6
AC29DDDD079B9650338F6F1977BA08C7AE584E51CC1432C53D7734EA2CD59645
8556395499B2F7DA1818591F67BBF1E2DDFC5B81462D8E6CAA96BA25B8B3F5B5
11952BCB0FDB3CBABB682FE69863D250EF982E69A1A5A74903BCBCB2B8E77047
195FCC11A758DA7D0166A3A9B480FD7A5F9792F042AE1A1426C719465B9724D2
CB514EDD6322E1D7F22208AC3FBC8B1AE592DC8D953F0DC39C748590E54575CB
E19A0CB539567786B6771E2CA8C3CB5CE06FB9103CA3C2328E628F986BB8FC84
FA73A263EC3B7753A7271DC0BC85DDD5BAD698C108D88BD4DAD35507D74775B4
9D0BFD71FEA2E1FBE311EDD9F578695ACCFBCA8EFD8C6901BA9E46092B3368C5
E05D7B24FADC2B17F825AF1BE745F484B5E9FAD24FCF807085BFFB26BF23DF09
3E60BC58CB15296DE583CB89EE1DDC102A142485945EF9611D751C1C43A41E07
AAFDAB7BCB7599B420A2746C60A7A948BD6B64CFA7A8B1963CE630EADACB7D34
393906FC7589158990C11D6CD005153E267647074A9592251A9D5A4811868C03
1FB4B6808E8945C7AC4D215211F9AADBDA206251037467B1E5F97E4E490C6C6B
976F7B49632AED2F3BD350E087885383907DC0E49E207FCF3489D9EF65C26FCD
AA7090C3B3411364AF9CADD81BF9B8EECDCB55384620FAA1D667B39FC2598B30
B303121056E23D29152EABED4B342CA744D6B4360CD5BCFE6AA258741C1EE9EA
728F8927845C29BF6C797041F74CDD50B984AAEC8983D71BF120587A959091B8
19D3A189930CD2A459351E053959ABD22CF464C90FA02899D7F5C7BE7EDA562A
132F4F3C10B6E9325E27C7F949F675C63297B03C9F7F766C9C1D4CD052ED69F1
A174CACCB9687732EE2363B7795346F868D58080E9AC2886042C3060A3292954
4FB00C6C7317E3D1FA1DE2C6B718F79D53E80F4646B161BD460C7FE0CFDE4D04
835F1E4E260E58C77AE27A3000AC7B9FA90C1E31F67C687158B1A0D5D178ED3A
59C1E7B9A5290CB483A7B20F8E4D9B748182A07E9B552E2533B8F8D1EC9A4BB7
3D53BE76BC65415008A84376AF054152512259D76ED642FEA728C1CA41F3E76A
04BEA6DCD6F38D241EF57C023188D949521E774E0D1523A0DCAEDC2E0C07D7FE
B15BFB12BA0A02795CBF98B0A55455706BD93336A6E91637DCE34FB55334F5E9
FB293D8AA1B758153DD21A46381CD13673F0A6C5F8FD010E39845CE2812748D0
4E165158E75F511243B5D1E06F636AD555421E345204D068A1C2CC595E37B77A
F51728611F7338AAF45B4D49623782C73D18114FEA78BF1AB7B6F6165C035459
76C38EA10A8F329E4842DBA78FCD20D38C3008A0B60D8447B4EA33843FF0108F
F78BFE74547AE119C59E9E935A18FCCBAB08881AFF4DCB54A4309DEBFCB74758
23155054817AB283BF65
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C2D1AE634032492B7023944DD1F9FD0CE2F7F4
67A41ED7A40FEA86BBD50B645BA87E3D9B98A309023373FF75491743644413C2
ED9D0848A4FA332D582D8BFFF3D0D13EE0E49102ECE2D624A0A5EEF70005594C
5E0F074DF55E0355AA33C6C0F2D5F535AE93682E855B1BDD6CE955627284BC9A
9199F188FD2CB5BE9839DD396DE541D181016DD6F0563A26851AD5E3E00BD661
6EA0A416902D3AB5EC977DFB9A5ECCECE360FCD3B1A04F16826F1B2685EF82E0
928B3862C03581AE7F5CFB6E28E1D1C86D9C66ED01B855342AE4DB0F802C1129
6A0BBDC33436A35995B50C42EAD39029814C8BCE19DE1D6EAFE04776A6E23862
E9212C1F00409F1184AE358D6F5C5432DBA9D9E35C0C8D10D99B443B1CB9294F
D84C265B934A0857ADE490147C5AB8EBC973CD8D3946E50D5357E57CD8F73589
E001EFE2B853747CA6CF900D3224297F610CA3F3B2629EE272DF9530A35FC614
5232C379D553953F21303DA3CD71A95070A9FE43ADCAD26A4C067109780A8488
50FB9B3B0285C7FADB28A3711C06273B79FBD3438B9C18E6F4E851C2F2033AFE
6DA413A1873C063202DEF40DE082B544B4AF7127EA6D5B8FF5A07351987E5325
EA8D2985AF7B9F14EA2C7C51096681B7712C92271F818BFDFC8AF8099CBCDDCD
FFE15EE19FBB79108A5969895654C00A5F30A5F801DB4597333718373A3B8F96
8B1440C691B1FA7176E0CE92270D872A5B65E2A540432B97CD7F69F767A67AF3
BAE02C93A4D69F7A08162ED8FB6C594E1B6C10BEF2DC54827C9A368306780B31
793DC3588A170E5A20B20B7C7E7B74D57A23326CD8E2332276F32283CF0F7169
EE52BD767834B73D8592C922B8284C6C64525B4CB3EBAD79CF5CD41A9E52E33F
D14670C66F070D8CF7E7607B46F62671C05CC371159F0D61B7E136F99D4F86E0
A6CBFEE98BF2D01C80F225EE14F3FD8F77D0AD0DBACF1DC91B90C11A6D6512C2
7B1EDEFDAD3E3E67342B0432C996FCE6733B371BF36034355BE2E7E7FE9B2134
E3EFBEC16BA5B0097D7290777354D1403713C59D3ABEE28BFA1EE08172B1C2E9
6426A9797747D4E2E5E735378A10FB3CFE695C7C9A778DB1DD2B545FF4B9938D
2EE9029BD66526CBA20B0323265EB13FC896A9733CBD9F87A2FBC724621FC19C
3F62414281BCB53CA46A8161D536C2D0011A2CDA4BD7D71A5116E10B5BCF752C
369CE03BB374617AD20200638DF7E3599F62B0286A83FE867DE833DA386F93AD
2F241B5CA8B55BF28DBD16720BB1C42C9A97BE58542C45F05748B1A1A133EC7D
FFCC255E05EB61E60035946C6E3002646FCD01738AACB9AD52BCD0D6CE9DE7C9
D0A7C62D6C1EFF40A7DC27E4C022403E18AD9CA02B5877B53747D33126D4E427
FD7ABAFE5A711EF72AC4275FDDEA364B0E8DCEA6E5D95B0C3B9E3114AACA2D0C
BD42EB7B100B99333D004155898A4ED4C460E1F28340DF37AA75DB61EB4929AB
62872DAFA2D779981672F5D7278419D03E92B51E62CE40C25D780F60DB82EC24
53C76DA0E3EF221EE13C10CE461087B005576CD68727714EBCDAB1E069FB552B
244921DCA2ABA2125F364237560ECA59253BA1D99F332378689F4FB174E3C634
54AFB214A8944B2299D75F55E0464E42B1D8A06DFD70CDDB936FA8B7F15B6868
26B5EE4D5B6011D4FE891B918DC0343A01080548802256FB125714890F735BA0
46895452AFE7D73D975A793B5241778A9148CA6A48C797F34C92CBD4E803317D
C22FD3C9D81F1FFDCCDD170A6C690A75A165FB9D0C92DE6274E7B9341B3A54A8
6155156D151FAA47D65AD5350276CD0478CC177AFE57D15B1C247E7FC63BCDFF
874A75714FD324FDD866414ED5F0DD2CFF466DAA91839D038ED7CBBE6993BB74
55CB374C4630FB4137D55F76088819802AC0ECDE469085BCC3A6944D9AE66BDD
C633EF0ABF651BD35A09736BCACAA027E0F029C5D7372EF249FA0267C140139E
32A3C82F1A821B58BE53678574253555AAC69C4F5FDA21D1E2BA3F3C7D49723C
B3509F29909A009B6625CD539E94D15B13BC74CDBE6EFC6692B1EC142E866CE7
5F1FBD94D01A2D221E3D64D048CE34560BBF01C461E2A4BB3A7C9A4B24C0499F
B1611320491A48DED20371FA6B02A50091FEAF534CA528E5D88EFD8566893F56
B21C5F06F30EE2F085B06BFE3AE025A0542F0D7F681BF0FA3906F211147BA146
D78C62B62FBEA3A04583F3C4458CDACF7FA1C6FF8AF6320D750231B552FB90F1
22B0C238170CEE768BA5B6BDD6D1510EFB6BEF2419C91B23F690945DACCA92EE
9061FAC3A8E1B8776C69FE99207EB96A2E6C2297EB8656E59E82D8B8D8D9C3E8
C2D184E6656CFE6D2A1A68C78C7A79A202BB5A04157296D730F9FE2F3B9316FC
41775DF4F288C71B517BCD8228BF9EAF57081F57DBF9D74E7C3017641863963C
A3AB5D13CB0500106B9ED5D16E0B45FDCB6775C88653AA81DF891DF490B9ADB6
AE50712D08403465468DA164B82D3C3FBF6D1C7B96B726329E0436DA0F24728B
F15F78C8E8ABCAEBB05F8735424FC707DCE60D51BCA42C273B2E43D802111363
88CE2ADB1B7390B800C5DE45A3519F7136A882713399C831384FA1269A135F65
3A26842C9832772C15EB82E86734FF9C26917BF1D1FAF692F9CFA48CA51F17B4
EC3602751BA8DD89E21D8EFD175AC6DA8E033FF3DF0FDC7F4F675EED0EB2B765
8DF687C9A775D9EA3C72674A561939FD2FD163FC7D32096C6A7E4E081D61DD7A
3FD9373F9A7F4BDAFCD55BBDBEEC2355065FAFFEE86C8BA72ED4E9CE6645154E
C1B30B318967776FD2A50983CBE06A0A21DB992DBD811A09457BC00D7C2668E1
663315B430D1C80D2D39F88E87D4554095A2258ACC3A750E94CFD5C2D2ABD635
DA7FFE17BD725283CE013C9E099C3AD560BBC9A72A50B39F367043BA8C5B9684
01A3CD81976D2140ACC6FA3F605EE3C84A10A9B75142A4F86E27E5BF5701F9D4
D8E4170AF7FDBF3C09162E8A4FC6CD47C150A8C737BE9915BF08A536FDF606B8
1E306AA0F78F9EC9834A8D9C9B376D9B539BEDFBE4BF99F37C4A34A69D56270F
BBCD33071471AC139C90CE7F8D073A8C47D478FE1788AF768FE9FE3A7434E53F
28C0417E0BD2BF59C4723FBA2FC1A1AFA932B1485A158736FC5E3A6EA4ED4A4D
375B2D42DBD1B70D7A5E03B4FC98EB53F373EF24A82EDCEDCE509D926BD5E3C4
F6E6C2EEF52B464FE65352F56E78D58BF1E0922FBDD3D7BC680226F1D3861E1D
799628816A876C6FBAAAF8270E031485E13A98044F77C9EF13C7B14A754FD0E0
7C68A90B3F0AE96B57C6BD029C1FD1E5EC6983AC6A3611A5046C5C859F759226
E53B46DB56C91020F69669CFD455CCAAA7A078F29CA500BCCEFBC89C7C7BF1CB
D87891D438851F6F9486AF082785CA8A5E6F4F1A755E97F12D702630C112DA66
6664A2DCDF4356ECBF3325A2494B23F4737912B17A6697F6664AC6B6C1F56502
55776305892A6E3E46F30AC78C389CE68CBF1557B048F8C9E46F213B789F4718
AFE3F1E75D12229EF8516D9F749879287F2FEF86FAE7E8E17902A5728F9AEFC3
DB3E81B5EB263B9677424481ED70F659C90D99E1000D0BFB5359042CD7CD3430
7F7C68412091A4398F807B63BE8369C7CE4DFEFFF5CB61575409A2EBC928A7F4
5C2F1AD8D7C5D40E34B1B3929EA15ABC688A410F5095D0DA56F26CFB3E6591E5
D1CBE4BF3866701360B64A0E6841AB4AD1DCAB782067526084160AF81F67DD0D
EBC79E7F50D3DF9F40CADFFF0339AAE2ACD6A055D3C50D2A260CCB6B21911ADF
4FA4F2D087E6F867A41127B3B5EE1E29A43806C04D49492B0F64BC2982D94253
CB78FFAD6ED4385D716B45109DC23451027036A00714192FAC067A9AF577AFCC
926071BC62455181F1B1B062DB084346B2CEBE6D979445443C3677D129837E6E
7558B8ECF2CB5C7C49D40D8F7CF28DC0960B055900D321DF01A1FE6FA61A1B3F
44687041F37ADD6989E85FCA21BFFEDAA41110E24E78A18E285107D3AE8CFF77
C0C883AA97F1620CFF75BDFD5B8B636585D62441FCD0648C2E3BBB5F29999C7A
0E3AC55C7435402D28F2E84D2EE643472AE32241CA1AE9D54F1E3710F18FFA2F
912FD822B23B9905F30F995C001D5F190A0BFCC817D5DBC16B44D6A53826680D
97565FE4D1E216A9C768A454647DB379C7731B3D8185011BE8B8BFB0A270084F
F6DC5290ADE2BEFC7A6B50D4D2004F7295D860A2974B73A9E8B594BC8BCBB4B3
838348C088F2C7641C90E7A21C82EEDCEA0D02C235F6AAE1541AB6B5EF2212B7
C645986B3B35D7FFF18C789CFC919AECF374D106112166CEED7D955EB82A5178
93AC156CFBAF7B0E0028AB911AAEB944998B9B2EC2B42C4E29643EC14B45B516
46F9757D88A77C5C5009DAD47FC7529C2B887C8A831B0447009CB069827F66D8
3A7B901741578485808D712DF034FF6C2A313F2C53D65802F284BAF78A1EA27A
507856B49BB21F5EB30F302D1F7E434238E2CB1194A76F004D436C27CC46EEF8
0FA1A05AB90D788643BDAF8D205A2FD871183722A407F7C4524954279E275DBB
89F2F487067554D464306A44A49AF8095E431F91B8EA9E41F7A31828CB162810
37C9A723C97E1E7DB9D79E6627C0702AE36932B1C53EA335483605847F13D509
34419AD21B8D700072E3F5010A9141AAFCE6733B371BF3603696D625A57E5950
8CC2064BFFE7C27027236C04B7C52A3F32D0C4166E42246934DD00C08EF218B0
3254F3561A55F06BBEF386127BBDB53D25E68448A975CD56BE0A9304E07BE02A
09ED1D6E9ED11DF0B9CEC7A329460CF59E2922F5E88C40FD32DCD9EEEE0F6BD5
3770FBEAED00D3C6F5A617DF7E6022E9D50B282B1284DD9EA66137C293FC044E
AAD1B895B159E2C905459D2697B2819F3B1BE7728260F2479000AD48A72EFA7F
D1AC7044A4010621690482A3E04E291EE8E9E19ED316C9751654A3CD885FDC71
3E5DF5F7CCD561DC7ABC388F4539424239C618F1D929B9A4D467D56929A551B8
800C7A6C788A20487BEA2BB326D76D2A60F888B1514F7C668D8E781B16E78E2D
20F4E6206A96B530E0992F3E91EAFB51032C05E7D4251769514AC1EEA717B266
D35EEA7C69CBA9D7C5AF86A7003F6BE1033749C529C674EBA0C482C04D17AC92
E59EBE0688490B3A656582CBC1D90D9931DFAAFEF5383F6F6E3A1D026CC64949
962CF7922D6E0ADB1F798605E091709F66FE8B0BADA48B50E47EC0AED73FA6DC
C88528C0E75B6C6298719600992548A68772C1CAEB0A3EA2D791B597CBFAA9A6
95DB4862EDD2CE09319475804FAC90468C740515971B4CE4375A1A9F1EC3D614
8A1C85086B991281DC5ED17653DFF7A81FC83C826A94C6EAF95E9ABDD65314D2
BB69D35F3F089F755BA04D5D03A83FE3E4BAA65090F19556E5626735EE984D75
D6C088333D5BB9308CF15E5DC2EE5CD4FC85CEC5A85A6059067CD3DE75CC067C
5A78D48AD4A103B90599289C9AA58E4726F0C6108C19CDE0D7F03EAF49BE166B
A3DB1BF765EF0305C857DFD645B6A83BC488F512F8C8CFA4B408662804E02343
9BF51726A76F6365030808D4B999DE15BB9EC58D2435DCEF5ED7C9269A8B2253
EE29D6495AFEE0EA8A1EEDE4946011655C21E2AD6D161EA8329829438B61B4E0
0C448F26339DA3A267B49883B9F981FDD5AE598CDFE4542834AF0D21CEA97919
30E679FD4191B1E41720D18F852CEE70B755536EE103CAEC01DEF965051DE769
CFDACB8B3D50D5F509B37E7EB3D69F4B68CE7A53E46ACBBAD8CFF61BB6F90617
233EFBCECF61496F879671BE9E446913C4321E200B177332F44DC0F2A1DD7069
72713D5DB12B55DEA614613231330AE3C852F9D90DBEA90BBC1EB44C63EAACAD
82CB34438179246880CEE94B9FB27D16E5957857BBF826C403BCB78475E4BA09
D03745D763AD531A9573CC39E8A2570FCFF3F25B87B75D65CDB23CB54D3C2666
ABBD19380283C7F7FC09358FD5F673DCC906C7E0FA7711ABE826B192BB4E415E
E0D7776B862FECDEC691CE30F65D0915B59D924302C969561C704F60EAD3DC1D
FD8ABEE45AA048017FF1B1FBA0F5D7D4B35D4E24AC4A11F6D76803145C1BBFD9
589D9FB42768AF8CAFD1490D4A0B81934810292E06548D553D4A6EDB24F8208E
BE13214E89E0209224AC1E0D295D1DFECBE39D9F77618B372E97726387541054
028AA3FF16CD189AB59B814D50658CBEB543ACA7D93AE0BD0B4DC0DE5D279F7E
3B720F7518D5355C36FB53CC844C3D02F28A0B8845A09CEC07BD95426B831753
16E6E2ECB7BDE6902166FD5B9E91E45366E0D71E54543FE04BA6F49575728D15
009517AB277BD88388082E54DEA0654438F36357E82DD0F833AE328E9F4B2B1B
0E82CE1FD16B33CA5A42CB96345F3563C2962C8E06573D4825BD189574153F8F
E0E4EFDBA8573163E51AC2C563B89563D0254194DE000681912B10DAD61CE731
EA372572B28F41AEC501195D34460B4CB2E14112962E8273DED975BD5360FEB5
B7E0272E6F077A13721FAE5E1A0F90FD85ED81634EAA4D13204E6203B8537D4D
7B517D5067DE39B784EC1E2B0E800320CE9D1388EB08F9A8303DAD8BDEEE8160
F77A55A86B68F77C160BB6F3E5DEB7A1043916E9434AD8B4941370B9CE7E88DD
DA40AD9C0ED36BE45455AEE0CE2C7ABD4C7EE0C09F389FF8D45841DF7A057D8B
5DFD6BA4091560EEA4E1181EEA1D080677F64889D70C0A332A3B86FA28DD6A9F
EEE0072E8856D8BD899F9150D97CBCF57EE34366CF3F566E604571D161E1A2A6
0512975B112899EACCDB5FF5CB13D0CAA24DBEAE0D1090E753792B5EFE63F546
AA676CDA522409846E8C52358CF3EFBD5E8B07EA48931955CB6414033D22B683
432D749F104796C2FAE81393DA14560C1643CDFA74C575BAA216CEE3C6971E8B
38579FE7E7B9A29DF26B7CCBDC5680292E5A06BF2CB796965124AF855AF2CFF8
EE38436E7C68C48BA1D5C40504D9C77E08FCF101D33E908A71B94B57A71E9E36
1AB16B4B33575A0CE6AC3E3C48AE1FC1A6A17F9584EA676B59CC5631C2A4D2D9
DF6A1C45DD0AE3299C87A5924CCEA3F4C904C19B7456A83B17083469EE367CC1
FB2EF0D89BEC7E504189315DE0E93169236EEC7E3C7AD7E06973D05E979D8392
C29DD5D1EE9526E6C38D5C2B084DDE1079D05B0E7C7BDB432343F0DDFC433D1F
9AECDB3B2802772B16F6E7154C570048AD99925459B26B5029F3356252EBA4C0
622D2B0E8629AC3D2BF93B07325DFCDB63485491936AC3A537EE237E43D40461
A4586338B377C9A822840BC8FA3E02D9B520F7E8785DFEF225DBB371339893C7
B86193998C9AF6B6EBA334E42E05C376C8D131E41C0CC8A317E994A971778FD3
D503E2D583BF5B289BBA42428460AC283786C0E4C0F45DA2C8C78EE35364810E
9342674F814BAE3BBDFFCCAA3EFA2BF0762C911B9AD286DD7BC14D5A7A87D004
F59B8EBE03E1147E98CC27D15317738826E365EA2E5831E662E3F99243D20A44
A42DA76351A047D8D0C0A6E8D9DF424556BDEB6D6C2FECECBB553C90B4F7FB94
9DD094EFC754BFFC1C0AB3920B6D0E2BC4321030752BF6E2D970D1D6002D80C5
4C73C0C06070B1A215D2D34931E96950E83E418B529E90C532A48C5147CD6462
23EF5DE660A82E05BA98AF862C10B364443EB7D0F6C3883D195661CA3A1BBAEA
7BCB4A04EBBF98BE634FD17B2A2F4306AC9C0E2C687D1D9ACDB8D4575CA47878
4ACE8B90A7EE190F692D11BCF43C8BE1270A3F2FA1D88A32934AFBECBC8527A7
37E27EFD95B704A664B44221BEDA0C08CA5DE1FB7C2B7607098276CEA639432B
543C870CD2885E71EF296FC66D1201EC8C69981531279F61DA43B1A2A5CF9110
5E58DF43B5D0068FCA1736E18B657D33C2B9836FB5DB6A0D80E2FFF611B8AF68
BCBE2C4F28F49F023763109ABA63C19FE126071C2C2BD1C6BDB9FE7824823E37
DE05592BCE6FD4F9FC6FFCC2FCCD16E95C9143AF929A15D06D5FC36307D8A759
621D8EAECDA46B81006526ACE68A28109E332454A7A2A0F70FD2AE034EAC20E1
5E45FB01B9DA9BB58997FCB4687F352DBA807E1CE810F1B50E1A916BF519D9CB
0181018FF1A73B7C1F1684BA3EDB80685331C5C5999B5AEC80E5C6524D974982
3D991D1B86B55D62ACB72C877AA2E3437B035F7E7ED7FB0C8CB367331B05EFAD
2795D667D3E495794B2EE287953283D1E73023BB66A4AE15DC7959BB36A10B51
E967D86DD9CC2D30C7486438C4EB99365D68F27B9FCC33D4AC68AD80CF22E619
04C92A4FCD68F8C5389BC7B4DDB1BE7C38A4164B91CBA8363E448B71F9FBEB52
E57A535247EDB34C7EE68BF805D039CA6AC7DECCD1A395E7BA2CF04B1AF90C7A
388469A4AFE99F2BE5CCE86EF8B6EFE71E8CECB2EA11E76136A8BEE3EF6F4297
4E0BFBEE0F5A06A836B6BB7D5985611C95E3DB481F69C517374702C9D8B44516
E95531B250C3F352B68B3A44C5A4EFFB389E664BD264351DABB7512B0C01935C
590257F4F2D842D49B89A4DB9FFD25C55A4F377E53B352830FA336B8CDA0D247
EA0B48B8B347918C4920C7E7B96773A9E3218D7EBD57032052DFAA4449FDA555
FF06BBF51728AE6724360C97CE27BF0DDC551489F0FB8CC7A4CFE322EBEEE15E
3395B062B933EB55F9AA1E14F4A9915064E7EE69353131437822B20B5E3964A0
B6D5A86178956BF7940F2912421C4F3BC76FD991E91BDB5A8CE52E360EFB5E0E
CF810FFBA9BDE380B680E4CD3C3399BCFCD4EEBBF072C05BB0528537EDB6EC99
C720B391460381531F9216A04022FDD663FDD73F1821C901A197F6B81AB5B394
19480E8C4DA16E8F425A1943D1F6F35427F212AEF710C921B4896D04E61B913B
6C4175CE44CEDCADB1E695F8A9643BF3C90F7319A5A6BBE20491F9E15FEF442F
285A81A0DE27ECAF627974E56B322FEF1A8F9907024EDEB72F0E9058E7834D32
85DE1416B017D4551590395D66CB4F4334D8B41A935B8CE43228548E00800DE1
B6C627488ECE1387233AD775DB8DDAE50695FD089F6A89149BC0AB88D400A2CD
6B4CF82916F0AB41B429CBF347632CFE037499C0CB017A18B1B44DBB0703BEFE
DB3681A2B60906330212957D8F26A28904EB2D5986B5BD875EE980E0393405F6
2F65D598C3588D856421AD456105F4F4FF47779A5523F5530C587CAE703571A8
17E2A7D1FE8496B76E5248A3CFFAEE733895E5EF148C71BD59645B448E7F05D2
FCB11F3D1B7D17BC7A036D8AED54591271ACC1809460A8DC410493B4B0A63597
D1BCA0C4BAA2BB8528C34C369BA3D45C035FC21822F84466E3BD897F50A7A62C
8A3F55568810B78B05B293AB118520A608A9F9CBF996DBC06F83A8C8CB21ECBF
2AB8B2769C12E3E69EB5AA758162328979CD3ECC032BEADE20C001B5D1E8B07B
F54FD908650F54EDCFF07F1FDC473ABE8F145319A829019C97D03FA54726D906
264C82E8AED7E4AC844EFD80E1D535150A6AB248EC5920D02B5F0678DC863C76
81CAA6EB7CCC237877477FD269CEFD659C6712CD9513CAD42C619BFDDA4FE45B
A45D218230A9C364BD2BB65C137CA2098220AA89A290DB67C4843BC163B451B8
61EEC948584C8E02E541EC16617DCB9BC822B73985B080A7AC7A3F8A6AB0C6F5
E19646935341BD381BCC0919429B21C62F2B78EDEE3E50C07073C5F650547746
D39693734B16AB45A425B9A4D467D56929A551B8800C7A6C788A20487BEA2822
6B4F583F56C127E3666DF8476D5A8A6CC0A5B1420E89A99FDC5CA2472D1E50FB
666EE9CD5F2A592C2700487AB289C92FC5064818CF1B965DF52EDCA3C65FBBA6
B128541BEA703A23B7AAF7BC504565A426421AB1F43F68399D0FF0F544CE8C5C
086BEC650C87AC6908D0C344FB7D6362193E2EA3A0861A653F3F4DF8192D7A94
FD4BF266370B42C39D2AE574676AA0592F3F052E71E8E353D430C8581AC12FD0
983C3BF578078C86E9D2025950BAC191090E18641EAC906A5EF0F9BC21080621
34A7F1095CE7C108E617BCED4F9205008079F09BB2FB82B1D1E2E0712D3E2A6C
4884C57CECE0AB1CC156049E60651AE8356B82DABFAD208F05DD64C591F2B82C
4BDA9CDD98220EEB7AC101780A1DD8CE08BC9CFD4C466847FEAEE0AEB9D8D348
A067225C8E17CF1B43A482C44FE52E57AF48D49A58092322025988003939B48C
A8DF17373001D829ED6EDAD18163EAC0A67899ACFC1C386F8B261FABD320AFC8
2C6B662E6DFEAEFCD319C14ECC81D86640D7799254D6C2AB8C3F498D0AE331A2
DEF9D4E3C06BC4ADF8132A0BA1A0E3CD883222A1C90CA4E9C08295780FB1A854
D39EB8AAD7F83BE9686C074CDB097FE395C23C08B9041792494691B655378027
94546A6160AEAD89834A3B49E3715F8E13178529FD56230A946922485958D763
12CED2FEE2B75BF73FE1049DBDB01661E65D79A249AA3FFD607D0230BF404B15
3605402FE7329F134FDC537E75B78F3CB0D6CFB87894A8FF50C8806A5D2A68A0
D7DEB72F3E4018DCDFAD58707A736411C0B2135AA84626BFE4A47EEAE12A0EBA
E828FADD77BFC2ECDC1E562DAF5662AD59C8CC9375BFF982E1A068E9C61EA876
F4FEA72D9FF55C15AC46157BE30A845EBEBB3BA89C638A1DE7017C05661EB4E7
13E3ABE342A81D178A78777A327DF7FC8568DA831B58CDCD3666FA965479B2A5
F85AFA549BEE2C136ABD36B291302D9CF74B61013834256B83DEE05DA4412238
013865ABAEBE8A6A32DF7D9C1D968238CADDE488782D1C66818F676D0D959F98
7B4513F382042F803618CAEEFCB46E6DD65747A981438EAD81C85FA3CF7A5285
4908910F452C7FD271C1B9BACA52194DCABDB4284F485D24787B52C205A0A26B
CB8C098ACA6C8E1A94F6DB5B05EC36841C4C77CB3775052A962C832BF9D3B957
510E87DE77111E90A5EED0AA43FB626B944F0148AAF65954098472255FB07C91
5411AFA730F9A17DC29FFF274B4E1CA95DCF0E238D6373AEF7EB06C3E874B88A
2E4E955B7DBA553CC32E103B9E26314B306649FD15D7B59151607AA0CAB0E8D1
57F6BED3C1D0FE8A4F802753BFFB558FD4C19085122B8D39BD7F62CFF8703071
D204F98E67C6FB2EB988DB6254CFD706847009D7C0011294084604182AE7219B
FE341207F12B03968966A34F5891EA373D75363A5E89F1F6C668696A2F128612
2C63913DE4A0E207CB1FB6B146679A710039E6666835C2D79EC99FDEA91B5DF1
3F95F72715128053E9B14A055D9F688B1F4F0AA0EE929D0E702360464B8C3411
B12176D834E8F8664A6B562FDAF5B71B02810FC3BC4404EFFB1A389A34277AE8
828C097DE4B61F61188A78DBAFBA196652FBBD20E9066AD9EA30214411A8EC22
E6D306A76C391F9759ACD8F1497E494C70B6520E59FA5987CEA4D8F5685C51A2
3A68867D0207BD48FE8067168C4412FC80CDBA62F8B30B01C2A2D5F9F6C5D3CD
3A1E7E4AB8D22107B371CE5F647438A50B4DD22B38B62EA22F5FBE8F33704397
DF2017FC8176FB0988058F98859423E1D6B4141662804563AA1051603481EB88
976ECD26A4B5D7980BB3506AC84A719DE7A70642947F38B33B5D36C221BE8CA1
BC6FBDEDB0B7D8AE9925C92F3000131DE408C2B7E0EB39A18F0BE1595C10BB71
E57F70E9EDD479DE21D36ADAE5DB602A670CA6E94C8BCCF83DB0AC7B39632F0D
44074895E69A4F2312EC701C2A55C23A71E12403A44357619824328C2718FD61
DD12AEB2F205F7524BDB04A71AE14EBCA85F944CA2938FD474019BA359F7F38A
6D94C4A3B28059913E026E132E8966C4D5790BAC88EA178A524A2FD5B7466F76
A8368D8F9543230805C8763BA4DF25DB75E4003E7B7FE30D31721B0ADF552294
F3AEAF6C9E9AB6675063A2B3BD3FA2B3E0E04ED9832582F5515AF577D2E033E3
5DB499AA42EA63A8CD56AFC62B6A88BD1D5003A39BBE63FA0DF79946504B5DD7
292B4C730C54CADD54304BA8A338C4F7B3F6AF0D13A64F1E02E9AC1FF63140FC
558D01FBDEFF342863F4C0116BBA79ED097435A41BBB8E91D060E6A3F499A8D7
3E633335336696BA072527B79291780BE365DCAE0F0CFD1C1902CA2E7BEE10F7
A86A39A9DD54CC812427C84198AE47E5F9E0807324053251191055025C731C76
4200BAC03D1AA472AD0ACD3F55E17904D85DF0A7D9E501B59E4B817D6632F177
60D5A970C9BA6C6794E3AC06D503EE876C915252EA75E40605E02883BE3D2874
FC615317B101D4DD8E99CEB62717D0831E8E3374981B68564692AB79DC4CD406
A5EDCA6AEB21FCD11E65FA0356054FC5F9B0C2A769D94B8CB7D019565FAB6A85
994BA52B3E141B2AF76AEAF89AA074D6190CAE1D738C9D02AA08ABFA2B99CD18
78EA08C7B96A938572D7480DBB61FB1A2006654683A71DF52411E737D8B61D6E
AC65E305DBCA5630F82880744EDA3374CB522C6DBDEF48DCE63F3F4869DA9D77
CAEB4DC19B208408E1A605BC8062E675FFB48A0D1AB9DDFE6A5A10F02CE55988
E28671D18D03697809C66D774B6716C278816ED37E8BF40E6F907F841D095F09
F8964CA5A04E64AE7BEEF1819F70400F53664093072BC817932F7208572B6ED7
E848D0957BB2628ED1A1A59423417C1865E2E3FBAD3BBC137FD522CEEC5B7CA9
EE53CC9F6D6BEEA9FF38C55FCDFCF9BF875507A06D7173719246C6C89D2FB896
653CB3AF6C9466BF2240E2A71EB7CB4F7FB96BC2C4563C7D80C0F466B67851DD
D3608E1ED5E0302A3F923AEC792F34C5A9EE4A2883849E7CCB2A27DD79C048B6
BC06A44D455153BCB8E3E01067B304D9B0BD509A032838E66B747B3D5DBAC1EF
8FC4C3E1227EE19627D0ACEBB7C4599E08BB84F53C5F6383D5AEA6BA56752D2E
666E4453B5C1488F2AA4E984A613FACF3DD18B784A4EE507A70844333C992103
556ED89F984EB4CD13683FE6FEB1DB4D034DB5A047B8D574769188C0679122AB
F617176B028A8325608946AAC90B2AB081EEFD469FFAD1A68A0C3496BCA768F4
AF8016D7A65BBA3AAD73CCD13B6BF610E54C5F0F31AA17890D1807CB287B9FB5
7D17FEC986E9DD69621D48CAB56919F96605E9739395ACB2C6694A816A7E1586
15829E59EE73573363006E32C551E1C312D6188D585FFA65F1B9EC81442B2266
DA8D74005AAEDAD9D7CEBA399B3FDFF494D78EEF9EC6A8C78762AAB04F4036B0
208B86BFA75B50C7D3453824D60671D11336046B5DD23AF13B20408F7DE2E0C6
BB79901D4F362BF3559056E31AF7320D8223226EED52626EC066B0DCCB2CA4B5
EDA26186578223C50EB478AC4131E908B36A31319B517B5167975510EE20E487
556F5DAFB1951A1EF7811306D168A9E62F4696441ECF94A72E8720E71C821E8F
2E2D6D8C6AACB40A53197ACFED3C707D5A9FFA3095FEA499DC328054BF07CD1C
A1159872E9A32B0A470B7EDCBD10FDD37B53D2453DDB91DDC2F18D67BAE15043
D17BB033432F3E62939E834B48B4D7F9A1ECD51F8DE829A43389FCC27560074C
D7A9D04043F8BCE201DE5A89A34A007D82C75B81149C64456A88F88F754C3C18
FA7056FFF1740378B96A92BF0E99018DAE5A86550BE58F2E8AE45DAB0A484845
7A42152F9BCF7C4A5E7EA8F56CDB1BCD36CFB0020B11D1CCC9186C1571D50641
3DA6A6C25EF78B6F2C46B77A7D53B3279DA33F642F5DE0432D0FBA35589BACDE
AAFEC6E0F31862296F17D9EB200CACE61A8AF0431F373DF8E1A969C52A99052A
4D3A2FE4EDC54063AFD716088B6E8FE0CD1702C2C33127357F43AE516A13E5C2
2BBEE1A7A909E867F3EC1086D96CAB3AB675FB979CB5494CD195A1DB0345D582
2CB94B425361E0B4AD2BE99A7A0858D7D26AB192CCFE79C07C7ED301BC3313EB
D812D550227C0665E7B5096FF9653BCEB1FB9CCE9254093C4BA6941CBD4259C5
8851C3B015F87259DE9C6E238795A66FE9C57B4981A6CEDCECFD566DD007486E
F0AC463759333B27DF0A49159707C99A752D387E777555F8C422617BE29C1D00
78D5942D9ED60284F848494DA84DF20998014260A53269FBE38672FC59BF43D2
86840C6AB9269E1FFD3D6432231D47B3729F7F9F869278A7F6A67087C57B5519
A98804735147BE66CDFF23DA3076F553A88FD966801A249712B98F8F6684D736
1A146CEDE128761D164A9843955BBFEC7213307B78378EBCD356C85E9C77F826
A402E79939286D9C9C9EA63511A07192137CEA7B60FAA052E4E631CD7AD08606
E816F3E54BB4464ACF6BB7EB6DC648DD591585A08F81174FFE68E4FE36DE5F27
AF56018CC111F42CDB35DFA8794F91D7AF1E09627186E9F40DF393CAF0F0AA8A
81AB02413F2FF29351B2B7870AE7F5774ED4172CFC330E0BDE887010091B4F81
75E5232D6644A2260837F172756F06AD2F621F3B1E07277D77FCDF7E4E239BA6
F6C7272B77E36FFE004610F9A7BBE4D94389941682F0CABD073F2376E39D8BBC
69FFA69B14BBD009A0C0F023D4D6706CCC054505976EE6CA0251C4D90C0B022C
CF3A2E4C3054A2471526C0459401AE3114CC83B1B24FE74C351EABBC368E5353
7C48819DE8E8AD38D9632C6F9348055F9A8B00B398928E8A138EE3B234AFF7BB
6CE48E4D28DF25A018A68469B6BD509A032838E66B747B3D5DBAC1EF8FC4C3E1
258578DA8D3F4E5A9502A4B17D408FB1C8E66AF7CC627E5E6E1D5D682ACA3636
0AC99B9205E4D80CF55870847B09DF2F088F84AA23178B60E48EDB7B5CBD84F2
0047CB42D0ED6613594454C0C98194B899CFE617259AF5BD51BC6E523AD01F7A
76DD5424B746A66BA0A805CF2EBE2895EFF9EAC13ADF5D5249AC0BC2B157F869
90D94315B96906526C93C55879A8EA0224911F0728FB73B1C2DF54A6E423CAA7
FFE09897138C27770510D95D6D99B372D3E4A16A244932BCD87E29AAA354ABBE
A21243084ECD3956F15DC095FCA2071BE8C67EF945078DCDD901074A7A22D2D9
4966CBFB46E98286E8AB5BBCC5A8C431D8D7BEF5B4BFD96112F27F9B4CDC7DC1
2D52AE6A36620F4FE714275293EDC8320DDD37D9C6D844D85BB710E508ABD6EA
B9125505ACFA3D838E3DCA6843B76B9B3F7CC59BB6B91D99FCA923AF2346E469
D4BE600409713AABEDFB90A38275B86306010A0C2D0E87C01423F5829A78A86E
02B8175C994CC1BC277FE4513DC2102D4A6D49F020525426F2F49B45D16CD53C
8020A15AE53C4E742567609F5014ED93592A6CE609354C2D51A2321554AF2252
858B342B4FA4B6470AF1DF4F4EBE911581EA3BE89E4CDAA34E0CB69423A6BA41
034432B5E3928F788771E26972A0A9A347CBA274592C953BD5A9CBC996C9AE76
5B71717C653670139A282357F5CFD4CEE0BB8C7C8ED352E0A1E6D976A4A23D20
3D3190EE92A37D3CDC54F6D4A3E47A532716F5A6B4C111BD7B2A4307A0C3F611
DF40E7AABF085E93E8427FCFBDEEAAC67F14F71B450BC562A195E9F1CD40060B
E9D22618FE9C8A973A4F6FD332AB98AB0BD4E3093A7F64C21C8767DFAB7E5677
415F55FF32E4308FE0B521849C266CB622F9F7DD740A0E8A1AAAEF6F9D84C266
9C8A4ECC0DE847ABED596854D54DC3CF3DE605BCDB22EF0439044F73C9458752
ED9C2228B62440412E3621469C641DA70C352DCBD07B107337DCFC405FDE26EA
B486AFDBA8D082E4057BE8562C583391781F4AAEB20AC3756E1EE7E26335DA0D
24AAF27C1EA8D041261E2FD14A354A04091A0C1E303470EE1E8AAD274E14259A
48571B86EB584D0670E527BC95332D13B3980549FA02073BC15A68F1B84C8EB9
A567928C0D8F063F0FD91867BD212E89025BDAB11CB8C655A72354626722C510
D6E242E10D264D3C88C97818E42CBDCF311CDFF05C37F2EB54F2D392C8858E8B
13ABCDE7322323B3A2A02A0BF388E89B48859545ECC6C24DFDBA3074D24F31FD
F9A7724A5FE7197933C9717D85D4C4E2E941026C25847C739B6EEAD7196A753A
FCDAC01BA256DE73FC8BE63397C8EA891CD41A4836B7AE2C8627F0C0577BFBFD
DC9A774445CB9C354809FC1491FA65C5A183BB8E20C9C72188A83CB6FCB80F07
E5E3CC6CE631EC7E3D00412D24271B9FA4FA4233558325A5B543B9F395508FF9
8E3410ADA67D0353AF45A0C2F42031D967A9782C3D1060E25FEFDA9A31D6E867
59B096790ADFB7D4AE2DE1288F04663CA7C2572E92D94B21F0C4370E3FCE02D0
64A643D3F64AEE679B05EBAB7D5171F27AA182909671965AC8849B3B885B7DAA
70ADD9BB9002FDFB55C550FD3B67A0094913958D22575E85FFBD4203E7291357
E4C4F9A6725247F3ACB290054C79158CF91ECA64BE4C153AC91451F122BDD5C7
24CB80233266408271D5613B831E9FA76E06A298ABAE1A432799B82FE9330AB6
BC5E2CECD68B9981B2BEF1AED8D00A3AE394E3D55DC081E8B58F2F29E19F7D71
5AD567F556BF4DBA9CA0ED4E790A79D8AD67234A2C9360790E4981671AE0156A
A5E7CF174EB3D74860697B255C72846F1570C72297DC518CB551334B31801C22
BAC713DE7CEEF020D20D3122C0F9C45C403EF93DB577D2E225B5250B8DC6716F
1DAE58F63D569BB78545051C2FC0B81CC7668EC6C239ED09D678C2C287675D73
154A460057914C456336C9EC7DE98CADD70F81D892B4D2DAB0BABA662175C52E
558E11BF4231141A70530E56A19F37938BC8FE2375FF04ED1E1753819D477857
A53E17D0FFAB7C8A91B883DF2FB16B08DE32994176F942821D2BC32B2AB6D0AB
93DFB1490C8ECBFF16DD187BC906E9C46EB1F9CF94C24746C3FDA17F2C848A47
115838262971D9F096540F72A7AA528BB009E0FC966D03BF5EC2AF696CE89D1B
A848F9FDECC6604E7D488ECF152B6949383D33081F251BC9BBCB4D070142743F
214C920D15E17D197F5F86A2ED82D15FCC3FDA97D5DB0C39392E35E65CA80D74
ADBE880B8E044E4662EF0AF221544DE5DDC61A508E79A2011DDE2CC5C2432BC8
32B65BEA5A7D0E8A5EFA86F199C29064CBC0503FA4BCED3641265F815F8E6889
3F306A316F2A64A8F469397D214FA4A1DAFF1C0950BE18B9B015F2CA593A2DD8
9199120346AB81E636CD8FCBE33F168DC564A9F80B8C7549D22F30A448F1A2A7
AFD70CF388A239D55F0B521B7EA7D5A39787EED0C73F297A0230F4F6665982C0
69EFEE0EEA415AC49C82B8F6D721F302498AEB3445D8CF8CEA7FDF03568AF44E
2EE4D841E2B8614AB4CAB58A065F5AF8CAFE8E0BDCF4FD673ABC998D2EA6CA54
C77CBABD46E74EDA3DB5F08458740BE217109CF830861756F6EF6AA7804B492D
DA742E2774AB7AD03A38D11BF9A3E8B0E5080A1994B7689E5EC50C3153340EBA
AB090E28DB9EEFF9B99D887C2344393FA897B0323B21D5808D636ADC789843A9
1F21C6772E261312B6E83E4BBABA6B5866E245E496357193569516DA8A59FF8E
0E5BCE6581A2C28C351126B799284434C917AC56D3542C638A9A32907BC6AB6E
2B4761FA8430E43AA585764E7D438DF32AB32B6FD323FB5A0D236560437250DC
16BB39702F57A0E7B290025C06CDD26B204CB34A50CBF6EF1341A126980C7890
794A85EF6CE32D227A95335718CC7D1D0E4A13B262BEA658AA67B8FC1B135078
78E1ADB08B3C2A698E4F95DAE539B5E403A0771421FBBBE20C096D3B6F5E0252
3C7F049D006AE59A0E81FF681C37D59F3430FD313C4E64190E98B0FE3A2FED19
7C64A3AC0ACA5AA04FEDEFDF24B58001909B7B03761FF2070D972690BB9D558E
1BBF66C0839F5FF759E791EF3D8B40B1ADEB83353DC405A46690131465B5D17B
5035E32169CBFDE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B0C503CA8A2F
7A801C7AFACD58F93FCD83DCF3EF58FE488B276F6BDFBB08490E8968CD02762C
E02CB727B8B6F46A996FDA5D5AF706F0A30AB0EF438151C7D39682CE2543936B
B67B5CF26F8C6A61D41E773D3D0004057BF9D8FFA77D79232BCAE8AAE61C9098
DFD702EDAD43518F29FF53CB0EC9013F7EA391C8922ED288DA4ED0C81666778A
B40224251203763DC185708039F299BE6BABA56EB05FD42E447E551D1193D670
F151AA96F678ACEA7000319AC548C5C31523B52641B2281242D1E85397223612
739A55C7B5A51D29A3AF781F1551F23E2D70CD53E72376156815DA56FE6AF829
04A60DE8A4FA047866E237994B244EF62EBC28DA96447F7F934EDCF05EC8CDFB
2C2612DB7A809EAD7AAFC99AE3D4148B8FAD4D27665BF4CF6A6EE65F03D3A8C2
4AE22C90AA37B15A8A79912A4C15C92579928C16B7CAA7E28807307837BDD20B
B7E8FBF0F51D45ACD5ACE34CC4A2C4B5E846DEAA57ECD125F91F9E011CAA4B21
B549C355CDB2A63055E6A52CED0FC14995EDF22E3DA9DEE713CD64E040D90C21
BEC6E6FE128784D87D5CB2B9A1B498163B39B4318B6B92D100FF8AD08FFF9906
0A5934666041D8A6607E5F3ADFBF65187E8A8379C56EA1D0CDC703BDD23E2A53
EF333A9142B2673A713B32BDC5995224D25FAD891B1A64F9AA2484CD1F872255
62F446E9C58FAC050E1EA0527DFB9564EBAFB4292516657B11080A19FE664B34
DD12080D7BBABCC56B4CC24011214CB26E194AE917ACDE48F11317DC8D95979C
D82E579F12BCC322B70C0F2A4E36ADD8DF6607517DE996E1D356B6EF747DD82B
B9C207ECE3C952BB9E765644703FA5472475ED2AAF370282862FDA054AC5E797
F51F5292B210ED5824B7895C31694E6428572AAF7507E037B08FDC6EB6C70DE7
D2184887E103E92847A4077DBEDAC68BD74ADED61BBC7F6188550D9665218417
CB3A62C2BCC3B1DEE5101CB3AF92BAE7C35C3EB8DA60D2D45B41755429F719E3
2922DC5D56D31F36A3F37E19346E1DA5B0286CD34D20699AE27C5BA58B8869F3
E29A0BE2811A735159FA02E0052ED21E50BBC80FEDBBD15602A424A87B3008B0
16B85920426612CBFF26810AAE55CD3D9FD97AE63555FCA28303B6751D812B66
4808C2508919BA1A126A54F09DCC8596DAFEDBC05D40B64167BF7EFE06C8C91D
C359235A87B540223FE08D49A928EAE91BD33669BB5563AA6BBFC21F0E91C625
2BB02BCBF602EDCE6F061D67E463118EF312D25BE165BE6FB7AA6B3E76299558
2789A3B7A57324337396E48115C942C40279CB4D931AC731148C4FAF78EB6F45
26789FD8245E4B34A38986B8D2861FA357AE7AE79A84999F4A96F9A6AC007AFE
640869B33F8E9EB23EEB04AAEEC0AE6B9AF13A25D14ECC5FF4C6D1DFBCF8CEE9
4B2BA1D06DF3651B03236C930A1938932638DE190F0106410719E4E872F3F494
398B881FD0AC7B10B67EBC2E678589B2CB965BEB1AEB597276E4E1BF52614076
A37EB854F4DDB5380033BF6A3FE89A498F9CAD2B7BE121B3509023A80521C8CE
D4E356064154DC61F3B07D2C2997B36080E666ABAC3F64FF36DCC5CEC8C378B7
407567289BEF9ECCD3AB7190B617A76BF0AE2653E6ED34C3A152B33E3D3739BF
DA2C2C29A66B179A19A60755D27E37C0EA552022AFEBBED8AC59F0C0B259F282
D950E3D31AF1C64799542857601D692427FAE835E1C4AFD36F59801E3C311766
716ADB30AA696C6782868DE3BD336ED0CAA07F97F3E84942EAAFA80265CA1574
54767E0E853CEBB05CC23BD0FFB24E73189C1E07F189389E6B85C4396797E362
836A8B56466E9DF4909EFF1F396331208B8544B26995F07752052A37B5A0D8FE
3A9E1B363EF5FA426A242A4761372D68B5C8896C540347901DB27501361CDAFC
362B7B8DE58A4D66889AE685BA64C5B1B2BE8E9E0FE83DE7F78C9B4D2B87AECA
4089FA3ECB23C709FADE274B2CDDD502403AC7D05852EA501D115F1D4CA5CEA1
0C423784344CF78DD7E31E45236BE136FB2244A23C1F7DEE99A2784B638402B3
6BB9C12EA0DEC7B0CF15C22F2D68DE885B10141D690FFE1FAEBD813A4B09604A
98D8A2F7CAF3D2FFA4E8E41BE6221CAC90AFCE71500D7684646F54CEC7144DE5
0E3DC373B735F3BCB33106F6715101BCEAEB532082B8D620A4E105DAA2F7C343
2B672D1ACF085B08B4E614F99B36CAC3A02C06EAD05922AA50495BAA60E85A74
B498957AA11AECCC0E798AC6B0713D6ABE5E003CBFCE85D87A61AE75A271343F
ADB13933C9AB092CFE6697CC9970B2A060F0C86CD0289BB37ED1C36EF147480C
AF68476355F6A03D987B3B8DDA3B64075659C318F7EC6FFF496B106857BA9587
2936987A33343980D51CDD352470C06220FA6A7CCB6CF8657EE25FCC764D43AF
B2C1C9E713BE13270C77665B552CE09108C08CEEAF03ED1EC704FED51BAAEE08
E89B256D2E771B77CB0787522746307605138D43E3CF9300D5F66385111DE439
A9B347BEBA500805884AB09186CC687DC2F4DE93E85917007D009704CA1EF93C
2A08A6610B0C71DD928325DD38E47B5314522859280C9E4DC8F14BF056FF0804
DE76474D0EE084E363C8B3335D51CA265048A748D61C4B7C040606D666133476
495BADAF30DA023468630AF059A7DC07EFF8041298B7A6A3FEACF320513D3154
E07738A2E39D6AC9429F1A359114A07FE664D88B56E6F9CEAE61FBB850C39837
7A8B3FD07C61527AD4862D912B670A8E4B7FAF29F4C411156CA20A2016579985
4C6728CC73EB14D16082A2AD69086BAB6E2D304EF8E636781DEDDEEC0F3A778B
C5A60C274D73E6B6721B7C10FE536EB7C20B0C7F985DFD01A30B6455F51FEFF3
0C60AF96AE50EFE30F929FD2A8808841E9AA773FCEE9CBC3B88AF70F6AF02D9E
C1823F423594C118A712A969CE49D328BA0C1C73E3B9F47CC51D45AFB01CB655
8FEC2D3770FC07531B5EE0EF071AE01994A1D2DB43091DD4F243C92BA6B17327
714B933EF47A3885068FCA8396A30A2E76058489FC16171D9FCEFBFD625B7348
402BEE59368220EB2EC57EAA5FD681604A5C1836D42AE44E136202623EFF3B38
751F10994E68833BA0D64D1D33C91D1D85F6DE7DD73FF40AC4AE3A4731D27B9E
B2020C908EEF49D8B255CBF6C3EF57C2FE3B897634010D394928BDB5D25DCA06
8E1F812E748CD163EDFDE3DFEEF504EDED4EB0D08D37809D4267F47DECDED134
B57F5A4EE8B184E6232341E0D14AD4129DF04F7346834F7C1FB6817C3A130FD0
EA0F77FFCD126036C44FE60D5D33726B3EF7E58F0B62041787A4BFFF6F743709
EF00A72FC61B0C70972F86F67778CCD3D07BB06DA2289639219FD191769B3578
2143B95793BAFFABFA38EAF53F517136457774C464F3D8420108BE6E28F91A54
F29EB0FE77777DBFFEF862CC94CE86743EAFFE1C6E148480E3E0A42660194519
6B4B47F81D990F9D9C2F41A1D0F7000D26E3353B41D46B30EB20B24AD6068333
FC50E8C4CF81B078BE97AC88BD739971934D9C0826F71ACACBCA875FCF77F031
AA41955F3A22F1E9A71B3ACE4E6C97FC14F515FC871276F1C21B23456034A255
0DF9331A4BC1FBB1D0E3B56B7D87C01ED5E6E499BFC6188AF98414ADA57B3431
6D07DC570EDF6AB622BD8F91DF31D967A9782C3D1060E25FEFDA9A31D6E86758
82C7C097B19D1ADFB94FEAEC654A9C665BD0ABA476A99E6FB0C9CC9510FD255B
26347C466B8D47A6BE9612C33585B5BDFD55367EF5BB0961AD2D9878329D4FFC
061721805CE84C272F8DB7D899DF793D2790319D4EDD7AA5035DD630F10DD94B
D916DE54608EEBA44F2685999592F29E8BD9667C63A91581078461DA8CA5FADB
B162FF9149DB2AAC8439F11334CF2B6E5526B62013FAD27C441A399D11328DF9
A442014EA84D0117290BCC7C63376175ECA2FC62EADAB5E78475EA2A55A51876
66E9D9BD19EC0057F585DA96CBC975B6A62600471258C4D4647681D43F5AB77D
928CF998A7A93927F439662D41466AE8AD6C93086A89788611FF913F1DD61DF1
34DB63ABC90D1A6A22EBDF86C90586811BE8C337A9C9AE52DDB4C7BDD15974DE
FBF3E891CBF33AD2D13C1569BF3ED5C5CBCCC91B8160C833004896117666771F
A77FD132AEE1ACFD64BABB90B18CE41F0F171BBEC63B9AC6BEA653498A071D4F
1397B4ABFD8DF02DF71286A13BB0D267B35592E73C61A2DC1F13CD09369054DC
56953B71EC94BBDB0DA12B2CA1C8F5A13085A364362492F72A4C96219B54E130
F55B6671E7CD10F5007C2BB01306C4A068085DA68D23F878A3B844BD1E46B211
FB69BC4274D3DE3B4E4B1D6EE40702E15F9CFF34C41FA611CE656866D14CA00A
58973668F804A90B1F5DA0ADBD8D81706BF57D9AABD5971F575C593B199457F8
FB65399CBCD9C9E4A2F974F914003DFAC638272F8363B436C5B0F17FCD9BE391
F008D44EF8BE9D5BA69087F77C6F010C92022EC0B34DF176E2FD1A3FB8C8FA19
BB685C7DA55C5E0B9F05A05CAC94F38F735C17DF38ADD1FA4019E1C78B8C7654
946E33F03C778A1A810DCD869D660DC33865B7E7C25F8EE1B4D382439AF172F4
D03ED7B859085AB38822032B00FC14C48065871D95F479057A8A29DC524D9781
A60080939CC39624FC6ED53FA7C30A414A2ADD3C2C40A7BA7521FFAB3FCB4469
0FE427DD4FC478C696979E26938914A59B1B734E8123638BCCEFDEBF0C2EFC67
0667067153BDB60A19744785585677D8104A6341DCF261CA33B6848961CAB4DA
83DD1BFD40990F3809304AADB9895623E1B08092A175467E6606632B9E56F591
F92FACEE7E81904730359D727BE0E187A5E0BD1E86E081C325ADA1546A11490A
5F3D6A87BF401A609510A0C7BBA9081F8EFADA7531AC0073CBAB65D054A941B7
A622C4B62EE3B6EBF035FAFCF9C0126B697E869FC5AE7A26F83FDCCCE8FBD74A
EDB59783DE305C69AB34A5A547513263E4D04C427D4CB79D88C960053AD6CB21
A8E7CC4E05507191B845CE8E6E1103C71E4109CC3737F2348B95346F5860A71A
5EAEB4F9F64A0B92E9333D301A47638CB90B4BAF8918ACA22B46A88776870996
A695690D05DD222F771990FF9A5BF8876030657FBF573D1866E6135FEA8CF4CB
0AC28FCFAC94FD14BC1D34862B6D2463BD6EA5F00EBF973DC09D104723BB0226
488C7624D616162EB3758DE43E0A91556E25F90889DB3CC68965B0C7CBFA7BE1
4C4F1761471125F60262ED1A23A189584BC5A786335430DA6D59971F527CC540
5D342F2F59FC4024B71CCCA1224ED62DEA5DD00AB4D765BCE169EE0A9FFCE63D
A6A6596912B800C96B179C76153EE0C49F68F730BD4091FD8E86324E0715290E
5272B2C64B15C7B364F0C0172F32136BC1076BDEC1F9F3DCA66E4EA3516D07E1
EA0897B4F8DF63107CA946BF97F48184A0C510B8A26052984E08E60726908647
542F5BDFEDC248E5F3A3F84CBBDE092177F38D447F144216341C7B4980E3E1F3
483687E9B421E623A2604865DAE693AA7D2B374E10388BABEFD997955CFA866F
514C631BF68465B62CE072F4BBDA96D180AEB14AEBDABB4F6B47CD7AB46DA299
354D1BE62B2C1DAB9FC9F25B6A0BA9038EBCFEB52B46EAFF97FCA6FE2FD9AD3C
D7E510E5B81995EC4DF9C0CB91DB784FDD8FAC587305BE07100A0270AF4CEAC0
A5656E6D19F653DFC46375FC2E6BC539FE801EE11F23F158D005CE881A01A82A
5E230905B36D2EC38F896FCB285FA5D7E21AF5F8CA1DD90BB7149E38E17858C9
4DB415F1EC1B57DDF19445F112833C2652C0703EAD1116C069FFBBA9C60AF34B
71BE90BF55B76319A3F04C0C2C02B1F9B82D8871427BB290141BFC8AF75D67E5
1A8216709B2C54E2F059BD9DF8571D5D9703F071238271FFFBFC491DC441F72C
33423DF41597727F1645D68239000ED19D067E3B2C9EA746EC3A5FBB4A0CDD16
1BEA2A6724D6EB4DEDF80BA158F65CA40BC9A1BF50BABCC457E038A31FB15C3A
41CF58C933F7AE5CC3A3730FAFD453B93EDFEF81A27F2A84F5790D03416A1E96
CAA53591FC836489EDBAC848C8FA173D8BDA0924588A5968DF42BDC77E1C3EEE
8D5CAF173FF8AB5A6B26A44DC6B684A2ABBE3BD976D458A2D39051796982167D
32AF178C2E2E968248D5B79889D9133B6ED6BD14A87B167DE1AB55FEA2AA4FB2
8CD56DAE1865B46C21E0E24B7A837B8318DE7C223C704B2759BCB427205FD7F4
C3D174B8113DE184E683D203AE0DA141A1BEA4E6E3E778DEB799D8357C685918
75202613C59ED8B3F7EF5B11150B9556D359D22D559BAD27D3C5659182E2F46A
C476D54F9E1DDDD42C5B33EE41A9FFA42303B7D4071275B6BC7F93B1CC307CCF
037137E49D090465B9D87181E61D8D29649E30E28FC315D257F36A3A8000DB78
1081C96E35A35AEE488269FE94A80FCC365FFFFDC84EB4F177DD5185D27FE82E
20F494D78EEF9EC6AD341CA086A1F1FB33869A00CF375B55B8906C9A0AC65B31
400F36E5B0018C20AB43FB4C215C95659DD7D7207A9F470D1BDE3D32EC7DD98A
C6F7061D9C3DF3C8DE35F7C20A32937C8CDBD216CF480044F96A1C9F166E156F
E0C9B9EF2C3D8DB2B6FEAC5843088FBBC07EE942C80745CF3C8D451146107C90
C7337E8B98B5F65D0BD15F7E4575DB821C65E2947C319494D4D72AE3D4CFF570
DDEC9CEA80A85F78F97654F94BDB80FC64C0DD2326B351F750E1CCE39BB6EE41
2F54DE75B31C346E738270EF660014010EFF09E6A8F664574E8102A14762BF7A
BCB06DC9EDC153E6846FA9A83C1B1A5578B8782F1740CB7889F81F1C26F53624
6673DB97A1326D2039D02BFAB883076602733486D0E1B4B3365353AEEF2AAAE8
0045EA420AE422F26A6EE846C8088648A4966FCA99AF7219C95E2F3A944882F0
46CA40B469D9E41CA91A076BF3940A6C5C23BC502679790CCE206333565A8D32
90D0BD835E2109FC0F62F7146C823A825BB0477D7524D37DC63A4008F0A39F00
9C4825ABDB71FAADB4217B888100A5B86831237D2430C72DC5A95E87293A86E2
45591E72DCC28050BE2D82F883D9EADDFFAC17D8109CEF877F2FBD95051531C5
C871A0C2B5A1E360CB0FD0FC855B2B96214C7F8D997F022559F0D2060C18704B
6A6D3F7327337E7091C7C7FE7488B910DA85BA417E571F971527F8EAC9209C8B
1C22D03E525499FC5B28BF2C9B5C4F117DE2AE82523DDC8B615DBD7D4B0ADE7B
85F3B49EB92CF5318C212AB9B9D7FF149200CB1E386A9EB278D0554E4D925EAE
4E1170988684A689D1ACD7F104F9696C78EC05192E30A5239A449B6A5613D8F9
C74D479C6F4123EA81A5BFFB28433C10035F7E9428AFBACDE84C398CA39BCA28
40D6565EB5A1C6D951BE89A3DFDD0FB6BB7C3BB487FD438317044559CA08FCCF
449F6696252F084D6BB74CAFEDAABC930F472F93E247E29CD9852001BD2E16E5
1AE49433AACE194A64DF3F74F36E77BA65D5D7E2595361CFC9AF6876DECE390C
BBA84E45C3A3C35A9E07A7DBB35EB65E93FC541D737844268F59A0008580CE78
A65245FAF436C7B4428A9E7C611DE2709F1A0462FEF13D50A5332AEC3967D1B6
C767A45C80BD479DEE62F3C5EA759F2F3951AE51289C06D33486429269E12A4F
D6E5B4F65BC8E138FAB30D1EA14E7B8EA8A5BD31E2FD4A3C65E04F45CFA1B0D9
80BC40AA303BE66D798C443008E2AF1BEAEAA1ADD2E4D9461D2390B36E5A8B62
79A5D2569F321B44C3524639CD9ACC3C44B5755DD9071DAE1E651ED94B4CDB4E
FF46620797F020956A61C93EC15ACC8EE5F47D870C0BE7277B71FBB12FD0D0C2
56B298DA8C6CE68DAE295DEE0B9F980D042DB9334244F1B53A7CD80D444A9345
57071F396C560FF935F7987487ECF74CFA1CC3A21E456DBB3483CE960BFB314E
1BCD1759871F1D84EBFE2F44AA6A619F59D4BBF338EFAC34668DCDFD42ADE014
DD113625251953233AE426DC5634ECBD0A0138DDC55D898644B44C626D739591
6C421D27476EB0281CFBC8EC5AA89624B104EF901997FA7F292F76A8F584E398
36743766E38150F4BBA96FC7F5529206548AC78713D07238DCF799ABC5C78166
F2AB48FA1853639515BFF5EDE067598E1B88D8F3A708FA4B252278EF66FD1C37
4BC3CE94A6AC6C9977B723DCF892A87C319B62B790DC6FC5B61863FFED6F1C81
CE9C338355B6917829A52ADA329A548BF616C57143B5BC55C79A04EE119F9199
E22B5E99BA339F744D4398475E78F5BCC0825A3FCC4A7FD2BAD21EF8074034D5
879BB3AB456D19D9769EAAB18CCF45FB16E4806067890E1B980D5FBE1C676D2D
239856A5A0DEDF7B0B982EBF82D0914F7C33F549D3055F1F15F8EF3AAB303ACA
4121E9C92051578244155F5D43A7F4EB2C994C0DB80E2A3617825070AAADF3FC
71121F52E8B4A087723F6ED414CBB3052B95631EDAD28E373B87DF05B6D78535
18F8522B9D5C229C89D59664FF2169D1A7FD4B57CAF14B34FCA46ABD97B5AEA0
2A3BE1064ED60F5109246873CE6AF00228DD0F73FCD8126A2D82BC9AA1EC16C7
97B31B0006D964EE87B70841BBB0011D8931F9116674F20161A512ADE5004EAC
1983C3A27BD79DB4AD5C4FF1CDB65E8DFA20E207F4C04DFF30E97A783677D0E4
244E3198DB6788CDDBA6C5518B6B2341968556BC5A1A3BA0C4C3ADDCDD64A250
D806F203C350CD1446BD25CA245FA464D3C8B1E6588A69001031614D65F00D2B
087C0D81DA3790BEAD4CF7DAC8395AFCD83AF5D154CDBA063D1B51446BC9A63A
037B09FE317B516432915D9BD11BD9132F8F18C6D35B55E4FD8F1183360FA32F
3D294ED31D68B15F2B74914BF86548D87316170A909B5280767D7AB50B2BB294
132270228229EEA3F8D8300C8448E3BFA076C19DB786990F5ADF4BDAF4FA2F41
17249C598A252DEBD64356E2CB8AD8EE622F4D0B4AD4AC68673464DEA98B2691
D0AF9A6EAEAB6297F1DE23785F7E083E44BA04A75CA357C3415525CA05E017F6
EA82A4867EDD3CECECDC55767C6EC7CAC0E6F01EA6B19E1FCC83494F05328F47
0074E8775AE6FACFC8F1DEEDD149E7EC62C8B0D09996012837CA40EDBA5A77AA
0A523CE5355B3D7B6C7AF342875AE5553998082BE32AB5498F35D05E54428026
6C79AE9C39BAF3A54B47233569EF120DFC5F5DDFB7AB0A4662B02BCCA55772AF
39BD3F66BFEF24E58DD59BE92C18D81AC4922334EA97B51533D148DCB60ED8C5
128F71667387AE8D8C0A241A7B9DB617B6F94EFBDAF620331EC1663DF0574F5A
E94F5C5513D946B09DCF303294906B1FD8BDD1A30E7692524ECA63916A2AC46A
CFE18A4FA09A8432C6F6704BEEAED43CA9903667D3AB4A474322DC22B6CBDA11
F1B003832692F6A102AD5E081834E38F4AAE288DC9DB48B71088F05830328A4F
1382646022B74C47E0081BDF28006FF3647FED0AFF1F33FB13863341D127CEA8
1A0828CC37247A7A988390FA6255DA477B8B3D24FBFD85D91DEE91DF11100B55
6812C6BB0A1A93BFD196FBB2F56716D11912AB820F7E3C976BFE0327C99C2664
B6384E4B4571E6EC44BACBC84D635579E7CF52B739B29427D60AFDEA209F3960
9EBA0BD1FE89234DBA4AD8EC5E3A8B3E4B0768AF64832930567CE13EB3B49470
51CB49675FF0D7E94AAA002512A44435058F5F23F406E248B0B79FBA84C978DB
60C14E950B4931ABC741CC519D9A311854CC0516D674D5443843F1A6D6B49516
3CC3B80A81973105F3E15BF95307E9D9581229407CF972DC8EA68B65E68BC7AA
8584379A6F7E21D717BAE2124EA78273FAF9ABED1306F76D67D59FE445CE2BDE
B2D030FBDA0382D9101B1F188E16207C5C7F8328E00145F878F1C855AEE1D028
09C86FC95941FDEF7988A9990DCA8C2B5B06D42215F7C2717D782B4A8F898E5C
BDE7B1BD54D9C453FBCA9132C26716B73584C049A786679CFB5B61B90837C621
79C428025E953ECED326847D49CFE910F5C6FC631DE9A09A8418C6C05B165B46
4CB78B447AC62DF0AEF51FB1FCF7AC3FE3DD3919F976C3DAB7F1A3F04D370088
A1278A800E17CB746C22B900917E14C4F2A3D321500914B57382B81AD4F570E0
2343F42C7AE268DFE56E10583707791A919AA31F59584455FCA7617F2744370D
43F5E2B9EE5CAD45BCDAA0A08266ECB80F39565FF7B575A80B72BA00C382DC19
99D4C45B8517B853197D91A66284B49DBF77A6C2D580E3B567A8FEF769489A0C
0275B51B89E3AF7B6C0F8F856AB64D66F7E78373DDFD3C560DC7FB06BB67D226
D4263EE9453D49801BF7518806C6D295955BB71395C433904979DACFA735A524
C8B374AACE6AEAC8CB4182A887EF4B2D82EBE9D8027DB687567832CB06403D4A
C83113CD862C0BEC250462972EF06EEB9BCD3B1076ABCC3DE786B58FD950BCD6
B3752CB69D37162CA3BF49CB0554BB43F60A3359A43B29AAAE1DC758A71B3971
8A344457B728A81C3F8BD168EC4AB2C3B52A31445FA23A4A39E98E471221D413
1A5BF5CD986A74CD4E135E14B0B17CD7B33E83753E423AF1EDD52A673D982F96
F7FBB77C2B72C0B4151366BFD92CF5DAEF593AC50490A86833F62B4E573019A9
3A8B1CC4F98EA50B299341BFF403F7FEE6A373F4674AD17C39E1F2030FC5F4F3
B99DF3E6C21D45FC95F4483FED80420E4BCD787F6C1979B5AC853D036C7633EF
1DA737CF40C5F170EDDCB3B55188773E563619DE3D32EC7DD98AC605DF2E48D6
34C7BCE821F5ED401B4D2F84941354727497D6A80125A0CA86D02F12525ACDD5
A944E7C8413B3B1E7FE50D14D0CDA5F03C4DA86F1EF4A2A929CF71CAFE3F27CF
CB8FB95970989532011E12FEA1EDCB6E0F9520A0FB7EA04CC88522F0FFAFB42A
BF6E443CC582F28EBA1C09FD0CDE4DE8400CE73E82688ACFE4B44DF7ED604CC5
0026FD0FA59A0D93F91021E7A2A4339CE37ACD9F3FD3A30F4F015CDE9893D5D6
6C804F030B04DE09CFEE4F13ED40653C899AD3D2A3CDFA71CD27224DD846DAB5
79F90FC595B448C47F0C6B8315FE0503E7F44A7ABF7FE7E8DCDF14272E857CE9
52D7234BE0EB6E149CCA7713C38B8E963A1222F91926361763B8E575D5157DA1
65BCF9749D1AA1D65424F7F79FDA80523A42AAF6C10917EF3AAAAC7F0021CC8E
0BE6E08DF7122E906AA8BB9FDDB3AF660EC44E79C083FECF5833DB32F9338F99
12E476754E7D35BD18745DE29942902818A35E1689C4D58625095A4B8425E803
8116DCD604A412FF23A2FB117C43BCB9B7F48A86059AFBDA2659DA38C1E1A9A6
055C17540B93AF986358B661FF1620D17527EF0EC2614EFC317892D059C49C08
32E1B3922E9197956950D0A9A11D8B4E311505BA96AAAFAB4EE639125A66B00F
AE35137D917F58B7E91CFC17FF79588A0DBE8669A47636E612EC6678528D88AA
8FA5A38A2A7BED7CE91AB3830B682067181026B3939F4758E242256C0546A502
E082179E316C22C95EE8FD7C40DE0224F61857D6D1EDF135A35A8E10E17BF341
D8A0E83AD725089C8E78B68456B61D69BD45526DFD666AC6C1937BCECA239F90
7EC7A8EC3A02D70409252ECBF7532C3CBD4FA5311591A355BF503A7A2757B475
013197BDDF027D4548D6F27C84EB97507C0FDE4A76DE85F17CAC79DB20904E41
A098B061C2C9ED0CC9861ADD632F10FA1AC51B5B4094EBE6198856D90B90C3F3
C665E41CBBD9BE223629132D9D73AA14F50C88989E4E3A8B8981DA7957B9BD48
478B6A18D69359B69B23BFD268AA69F8F47B089AA9AE9DB022EE512377BCDA74
BFADE0E3863F1193839C6B39CEAFB6FD0DAEDD1453385E15C2FF341BC112A76B
3C9E8A4E3295F79C9CC67E7E0CACFCD114B0477908494C50597F58D0FF0AB3A9
81DCB94ECFF2363CA48B9E48F64056886EDAA54520B8087119B40830A39909B9
795DACA6D8346F99B24562782CC7829923B618F312928758EFF7231ABEAAC2DD
D8C19A9A7B8602CE474466A3DFE7A31326783358C15D70C74D849A687903AF43
FEF1EF0E50E84F9E953A92DD2BC8E12F61C371D29A74A310287E56CD446FA24B
1DE73470FA1A112B7CC13626AD2B27443265B374C48564076FA0258AB9968C77
CFAA509FC09A722327A7A7082F7E3AF5B4891F92369E9379CE45F6CBE7E31789
17EF8519DA8B94AA8EF1F5AB6E3DE702D15E3CC75C455193EE786AA0258AB996
8C77CFAA509FC09A722327A7A7082F7E3D61CC556FCA79F7379325FB25D9E622
68CFE94C0E42931006BD5F4ECA8379F7F7BF76E823C0F68C088AA25D2E495596
D19BED1D37CA27BD023C8E61285518D4E7AE5E93A508B8B8B661895B7CB1149D
C5761CCFDEE4231FA5F99FD38217A00AD065B8AC071C6422716150B5655CCF81
257BB2516467D0BC24C0033AEC81EAD47906C21B626085A290BDA9D146F2CF49
A3DA78A56540AF54CA91885D8777FA06A8A49363C8D2B4FDB29D270820784D6C
5FCC21ECEB4E2C8A51FED4CA348E51118A29A53C6F2C42B8092B0CBD2223900A
5A4D8EA5A1169936522382A66C5B6B22C8D6110A670636BDAFD89171B3A6B280
9010B9809A5D50B74A264E3BE5594E45ADE87DC8D7AD29DA4C2C7C3A4B1FF07C
BB06A3CA7C99261FD72BF96F5F49593E28289BE88F3FBDBA96834A75A7DF7819
409F384B97CE76FB0D0F29D243A5B2F2E463443F5376EC13D4824C8F9AE2E675
EF11E395BBE415B3A2FFE0ADCBD3D1F3B66962A7C6579DE0654DFBEC814FEA32
63C3BF8ADA61A840CD78C266E7E119A2C4366101A3C4BC74CE6EE6409F66D517
503270F802BA8E2DD9A136ACD1C9780AA0F25FA907699A94684125A3816B2720
F35B3FE53F0288488FD9DF63FC20CEB298993A469E90896E2F250369FC6B6F55
04B4E002A992E25154CE4BDC7AC4D4B4C56E14EFF907A412323CC89CF7058791
D982F5AAB27AA9B071B8493902802AF4206253C2D9A22DB79411CF355A9EF3F0
28A0BAFF629CFE81D098BE30A3585D1350985FE13F6F382B6D4C68D9A7340207
D447BF9FCE147B84ED72805C08560F1CA225CDDEF4ADD3E77BFE2AF014CC3E0E
2FC058956858642FECD50A88C7CF6DCC924A2BC8619E8518074632F6BB0639E2
AA1DBBF34708FDB80CB14CBBB785117A8AEEC1909F49C82BAD55AD174D38A1AC
1AE320FC6896E2F408B840D4FB9786E782B22828CBF9CAD151571CAA841028DC
D2AC536302BF2731D1456277281E4F326196B52BF321815DE7EA7C313F62BE89
9C415584C1F7A3EA8893AC0F7BEDD9169DC9FCFB3BDE32F3C81073D56695ECB5
5EF73B4C6F230A979EBF7C63D2F56C93D6E9FCE5581DA3B2A7A02BC29585F8A4
7338E8CF9D36185A932413E02C823E6F11D83AB91A9D5651CE79A6A94205C130
4C3DA68ADFD9144FB5FB586FC502EB3C7F7635E519763C2B61D2B47D3B84C8FE
3AD9613A6CE706DB90796FB0CD95E2E3A43B0B24DFBEF21AE3C1183FCABB2F4E
65F5271B585DF0B184D86045B6AF1DA4DF3CE382969FC3B6BDFACEF662D83169
E1DAD68310D9AB774B6927F4742B411100FBFF4FCF60C3477C6632BEFE3EB9A3
37C34B4B362143F510C94CC1212D172F7FE7529ACF85360A56DDC9D4FE1A46F1
D36F177511306DAF2756A5F3210287BE390402BF424B6E90786C303D59074760
8AF3CDD6A51B5614B11D9DB0C939EB45253B4022AB3359D2EBB743BEA31913D2
06AAAA7942D7ECAF59DDCCB44754D45D2DAB9987E034DF40DD3C1FA731E3F8AE
2E624ADD58869960793A38F795AFEF5B7AD60F1A573995D21313F78DC62A307B
7B4F16CBBEB901E1DE82042F86E9B03EE7E17D01F0413547027FD0357E02A448
3BC8446F5E8F38C3A65A16FA152620B2C95C38941FD89F8C6558622D6700A054
5FC3243D2ECACAA155F36A3DACFDFB227718D94C379BB9E3A052F69C780A5D27
56542DD2099561F40C279E4B152841F1AAABAE9426A9F9142D947AEF115AA3D5
97D94A23BAB91561D07C991799FE2E38BEFB071B9FFE3D7574FBB32CA8ABAF89
B8BA62DEAA105FCD48375C11A3207B5A381FF8E1C1669DB4F1AEE9D2A6EC2B2A
F1D74131FCDEADADBF729A077015B3743D393598678351E78A1EC2AD1A904677
8ECEE66DF10954DEDA2F6264B06FE833131E80E20D97F5FC13D72D633CFAF490
7DDE965A3959752BED492B8DC2BE221746FE69E6337177422452317D2F2DDB52
9DFEA26F15DDC6DD416A1BE2785C542D471983F136CF48AB206CE8C884AA912E
5EB0584AFFF1D24ACC803C1C425774088BFA88CFDEFF949914C4B69F50F6628F
9EEC6842B79B364288B2362A3AD1F83A14BA94D46350DC9C2286F9A1E6BDC92E
D58214B16128298249B942C3780BD59AF90028728DC99F0A33FE83C973E65971
596DC7423CAF3A9E245973D0715EB7F326F77E7D2D7A60B005C63ABD05AC9BB2
F03E5B7084D74EECB0A1BF64BBCCE62E5E2182AF7384E45726E6A290B95DA276
FF1D56D108AA5F588ADAE518917C063B7A789EB1E6F3A07B777B22BE5EA7B6D8
F16D133064DF2A37E836CD1E17F9E052EF8FCBD13B129F13E62EA420B144E7DD
2F65C460DEEC306F96E48D618141832D6B2F9B41E7D5CB1C9D33D57D818BD260
608D70D7DD6051D6984D9C573F05010888D8AD090DAD6E55A54FC944132A1D02
0409C7E5D323D6486BF9C25C9FB6E846103D0703E84C757F242566EFF5D9FFDC
44787F71D921C758A6201DC0CCA60576B5E791BCCBC9C485FC65A15BFEA340D7
244018F9B4B870CC6F76E1FCD278C1CBB2D87BFD031AFF7612DD608160FB0B31
EE855732DD7DC86ADD2122AC2B78035C26D3307F7316CA6991ECD1873495FAA5
C7CD44201F5886E38BC2F50075071A5D2EC97518BF399B886FC19D0A0EFCFE05
F24318063C3FFB38A1980CB5B31E16E51F9932CD81063E82E3C485032A061769
DA9C7202939738C7354E928475B6D270825B0EF286176D725234BA7CD57325B5
A34CC3F984018DC9653649786DC9FBFB3268047B4C03A37A680D1F806296BBF9
424282C8524435F198CEB491BAD552FD0CA912D7A12E6590B5A89410B007F652
EBB6A8AE4DF9D845D516D9C59800425DDE6E566371C6D30D4941F3E2A7F3AF5D
E044750BF39CDA9AED0CD76DE2B8BBFB516D51E15344DE6832985E6967725E75
9732B0AA259C59AA0E7A51AA15DE66C03480ACE0C4056032303B61D3F78E7129
48EA8D08BF2734270F6B3D608F4089340F038C4A68DEEF068032B92728D98F37
67EE6CA0528232C3E4AA6AEAF8E2CA22AC03C8D733D46BF9E112781D53309A05
4F063DFF43BD4DC9698F7DB51E0AA12B2CA1C8F5A1304E791C635825A26663DD
A9B28CD4EB065253970B775CC146F4784382F813870D1BE59FAD51F047D1ED62
0E6066CE322A34927B8BCD0708A1B45270BE3301890038BB100E2332B0264C61
7D7B27C8492D7B642C3F44B8CCEB98F747AA922692D461AEB09452410807B1C0
DE9A67257E51FE20B5D01494A8FD21A104D906B94BB43F38D3BCCF435AA6701C
E98B48F7E4D1145CFB1F34889E106E1FF4CFD07444051DB0C9C9843DA6DD248F
2E0BACA15B0FA0098083597E359F09038051C4BC5511B6BEE5540602FB8D8D33
FAD0EF696EEC3F6C53705F7D8270F286240307439A3B94861980E7FF34A5174B
6C8AAA1CB72BEE59368220EB2EC57380D8B645F692FA6A07625BA11F71464E81
BB0E4870D71B85CE4F70227C24D4A044CCFCC4D4B1E7C1B93BF1A2C1CFF88C78
9CFA275EB02313C73A6CBD484908FF78EC89C3CC00A67C006EFA4A697DFD0007
06D74F17037CDFA5ADB353C80757DD30639113DA11A98FB90364F008A13B111F
4EC80C0C3FA72C8A70DC76B5B36B2EEADDCE7423CF77FCE11C4099C3807A0133
7FA4063B87047466804D6AA2C87DA1E68C3458B69664BDA49501A37987C8D968
36C1070FBDA920F3D8C391A5FDDF2318F6D505E8FA521F167CABC89898662200
C64E39E2DE83D6930685127D91C3AD466F05FD5DB3815F144E1EFB2D400AD025
F1AD7299298B3ECA60623AF6D9E93D1D93EC8C8C2E8D9D06EAD1CF374C60F518
EE6B939CBCCA90FD837EA47FA3CBBF92A78F4C0E2F008129872A0333D548B045
656A2C8760BADE9D1D4BC8F03084DBC222062695EBC2322303F2F233D874B205
67CF3F09D11A879A1D9EA992B3FB79991E6CE11DD03302B8A797C9CCD0C24ECB
FD1458AD7022F1A9E235154FB8D51E96EF23A385AFF4B9917C22A9C2A239472A
2212FA52938FA7D87EC7BD931B049239A8ADFBD06463981C89F3ECDC3CEDAACC
5DA03D0AE482ECB5F7AABF9749CF4B5BE7908A4AACDD44238D0238534D64E7EC
67D856934FA7BE438D3D3F09C60CDF17E6D6E4E78CB9D61F3FD30E78D7EE3ABA
3310907CC3E44AA1EA09B9528809ADADF12424004491C6D07363BE4D70DC6BD2
2ABCD043224B3CD5900AC4D5C70EF6322A8A21DD980D540792F54667A6C5F4E7
CAC301DD345E2C115CAFA68D28538C4D2A07F2F83A8E2FE76BF71D4643C27621
FDBA809506667CD0882F402794DBC8A38461CB653D97815454CE4E1C9A0A271B
585DFFABD1DF5AF784DA0937C74083746CA9A8557DFC573A2955587E3A180C18
65FB6CC5B08C2F9DD000FEB410E68F160C1FA5B72E864BC5D9534D69CC89A787
F82D8BDC1F89F0AD18953F1BEF143AEF5475FEA523A21B250F0E704EF30767FC
FB1BACE58B9B77225A134F852F6EC3B1AAB3C313DD58D02216A81D7104422533
65225052ECAC899950FF97DBAEE261D53F2C26FADCC5F0579BACA0EE477A76A8
771ECB4FB75640A678D0827C419E661340033C94E7B93BAB38B9B23A344E84B6
03738B278638F2057CED5994EE33BAB9690DBE895C4B73940A214EBF8A541459
C0EE14BA0A9D1EF6DDB7337A300CA3A1E9B53585E431E90DEB617EDC0AA82F41
FA8B6DF5F95734D8735E4A1934500BD01ED5059737AF4730B348FFE40887C4D1
357C69AFE24A19CF7D2855C2144328A4B90D93FA217D5915816D4D19F61AC003
3FFB34B9F391BEE1A83F57A80DAE185A6CA170357D1F3FD2D405A7A5606EC545
2A69E1CF38CFE5F50CF84A311E3F3A59BC1388ACF5FAEBC724250CE2D75BFFAF
4574809EAD7AAFC99AE3D4148B8FAD4D27665BF4CF67C7E32CD5BCEEF0235965
AEDBF2AAB6D34F4564D288A228E86359C8BAC14F33BF9787B1510A697072B23B
C88D9B72812DD0640C8340E5A2C652DF022102356DAA4A2A0BEDBEECB1F56FF3
3EFFC35BA38B0EF5A1D1CA311C81E78BADF599746B45B569FE6A3278A87F7806
2708CA2E3BB3BB974692770856D2C163DF16C10F38588227F822FC90422FEA21
11F06336C394D68F2D8B7A629FA2D7E0E4F4A87778B9DC1273765C1FF709438F
8E67BC122B2DDEE4A03D0AA2EAA2D7CAC14ECFDB52FEA8E03C44E5986935BB6D
5ACB376F9DB86B2C19EA4045532DA635B81D571469E3CEF4D97ED2666E9E230B
8500BC2D312B443B447D743C96B360DB10629D786A0C7D1F81425432805A253C
5E15CB44FDB7ADAABEEA29F366C82DAC76A9A891145C34BA23988B3AE7F9B31A
A45D9228D87BEF910F4A9265D7A0CDB0DB83502C8430A69C317EFA461FD06BCC
536386731FB8EBEB40CEEB9B1717906FC119BBB68EAB308D53249EC69F17DACB
D044FBC6D5F9A8BB59A81362C3068729716311B3692D6EA03CF80E93EE5D8466
6AA77B1BDAD740FAA6D29A7BDF8DCC1D4A8CD8C6FA06D47D309AE973BB998BBB
526DDE9E9EF8BBCF6332172B38D716D4D51284CDC2F4359CD8D980CE7F8F1FC5
13A2C38291511842C0C52C35387C3B5CCC7D481A1667C6B9E3E25C031522C4CF
B42F7CDA3FF3D9ACEB467BAA0DB473B9A2E2CEF2598E850BF373B3D0DD692F13
8C475A4388C547046658AAD8EAE626AE396528EE357B73856209E32AA72C09F0
6B678EE10A09BD6C0675614DEA92BDA7E693B1AB594DFC47EF8C7ABD8AAE0139
3A1575900CC6F0693622D15D7B0AC639B84951EFF154415A059CC2716B140EED
FED3A8705C3C4BCC39E8B1419A55449EA7D40DE5C5467EE47F1B192AB9AF6DAB
8D85DB426D8D504B999341CA08E3EA1A10A58DA60D818A9CB47A4D31A54DDC94
C9A8E8C4BD4E501371A37D7EB6FD903FFF0D2EDAA71C76C264009378BF97A620
6B5D8B5CE0FC39C4DB9A75F441F2448C5ABA985551AFE225349BD993C21462CC
3DC36C6A7A21C83CD105B65295AB5473940AD4DFDC6E0D39E38267DE1497B529
6D32E88361A668663AB0281BD9D984E1C0AE7B94D2308DB214A96AFB6F2BD178
F78FD601679B3F054C693A0881FADCCC1AAE54D20C6AA37B1031AF6BD896C62F
D55B2C10B0B4BB9DBB4977FA0CB24C1C28F94FE14D388F7F1FEC7200FF3A29D2
552CF6871D61D015C54CE5589CABC4085FF4473543B3FCC15B65144205D8DB83
7CEB894FC54AD148A84385F9468340E1EDB776D65CAA08942C5B7407709040D0
641CFD98F0424DDA3D5F35E1D0CB964539E7615705E60189394DB7373037692B
5F2A03A824660E5D5C96F543A985027FD271E90DB2AAD167B6D5868B361EDD70
938E63177B71E50635C86BD4F8EE094DAECCC7DD958E73DE31DFD5A997910F74
FB39FEB691B05B589DC364A44A2889157A0523D5ABE53FB0A74709B1BFFBBF73
DDB2A599A43DF112E821FC6FC206EDF66D63A5EA32A4411B27255431DA53DDC2
40DAD0A0160770E0C6C8E69EA7216371702C23A8719A0B094E42D3679340D697
AF7A0EB8FD3A6A04DDAA1F91DA782DA7DA169A70FD768FF3F8D2FCFD4EAFBA10
75836BFD236842D075EDB90B7554D464306A44A436E46F8F4F96AB923185497C
EB903B0680D0F22BADBA80FF201A92612C7F83FAFAC30C44CF91B90AB3B2C680
F61B4BB86740D108DAC254CAF0E639A7FCC078D60ED4AECAB24DBCD9F238D344
353BF0B79DBA82A2B4438F148D5F24CDDD29F6F140061C2483E753888C3FBF9B
5079D9CBA11D2DCA236F541767072D952DE884B3581E6F12562F01F0D8A23E19
1D50BF1FE898612711F924F5C6A94980D7E9052E88437037236EE951BA9B7CA2
F1A890C3D176406168669E55267744E046627E983AC5C5281FA9D75A595BF769
FF9C4D4938A9B7B8DB5B3840583F06EAA3CC021685D3869EDD3934C338E5A2E7
7333D5EE0285DEFAB9F491290EA2F5C558A0583FE784CD69B918FABCB375FC19
9D2294A24C8EDB327E2C5AC80FF72E7F3989E51B68073748933519C0F1CA5EE6
C1A999E5D7C15EC8504533D3531072AC439CAA19CF632F2AA06B5FFFB23654B0
87763487B005F173CC8CEBF168FAD7330FB1360F8A1BC40EE32CC028F2A47AB4
A14B52C9D94D0FF1F12AC0A3B04C2FDE374499544FB7D9D7E7BD3FC2B5623365
E481FB19B8877B1C343AEDACA10F4D1A27D2C27E72ABAFD75AF83D0EDA62D743
7EBD76349F8FA16F33A2455597931166052F9EA137C9AE871FBFF866562C5016
F4E3139679D678E5DD1EBC70B7E5669F8E41821550BDB1144CBE1DCA294989C4
B32FAB0AC1C993B6CEB7610C3B7F5A042EFA7D0024EB49FC9AF7A0DD94BE5F01
3F4E4767B3AFCFA152D6BAD6432F38166BEAA67912F19EB02D5638FDD44010D3
B73102DD1FB00FD372AE6C8D15F4979EF1E368B8310339B0D8BEAB2674FC0BEF
17F7C10D5878DEE748AA0ED3786CA17A8266BE9D839EA090DCB3D49F4CE26294
BF7DD94F21D87D0ED71FA83BD28627547F585C28FF2CB48B0FB1F047412F2204
092DC268EA0FFD6A3F865AC9084EFD16A606EAC5E9D56323FDAFAF0A1A69A55B
3AA01AD9BC9AAB8A562432C9EBC044ED61518AD4A25DF3C362480E6D715DE9DB
B29A23F13DDDDD0A4E29A267AB27031CA8E2A2EEA89BC5EF9C1CD3B6E3D6B954
90765DC0432366223D286DE13964ABB28D7E820035D3FF90C70B252967F2165F
62B830646213E8AD59DC2C9961DFE1F7060600D2463752D1B9C65E723B7E8EFD
49DBE58DB20691326A9907BCC37D37B2616DE103C830D508CB235BDCA2170BE3
376901B44E735440B680F1D1C3C5F60F501597BE675C1DA59FBC7E61848E2EB9
53F8F81C30055DC6D86334A278981DCDD387FC5F3849D244FF89E345AB03F53A
3E0982ADA732351389FA502740836D9F79462C09FE6CEDA0278616C15A647FB2
2352A6EE06107148231F5ECEE7083522EC61BDE2BAE2F39E12E801B648894DEA
78E0150D3B86421FD8DAF564B6E357A5CAB548388E8CB8DB1146C8C9349F2344
16670E2F48F29A4707BD0D07B38A57873FE9EC9733B3174BBB9E2FB8A8C8FFFB
A65A589206631BCDABE80ABFE6C99A5CC0831E560F9D5A34C35AB2F32907D335
049D63F83C9DC77580777BAC847FFC8F0A912766E64CCD83B53CF9A6506114DD
186060ADC5FFFDC356E8FBBC5B2493276532B3F6F992313DA7682A75C18D524D
CFDB8A5EA24BF9C716BE5458D1D0BBB426B6889AF3EF0EAB39780456DD279855
C13DF2B1606F89F009658C00F080F7625205A720F591D3AB4898298C84706D59
0F76B4DE60B87F11CA1EA10876AC8558B1FF94FBA011DF88C843C47308A7B493
19D63BE642C647EFB8F95D451256BB019605D226EF5D32541F38F14F8288CF32
C3325749D00D81D61AA46B50518AD9E7626B1A21792C91B328FBCDB70B880803
0D44BDD4EC60F553557036529B8E4DAF49C3E3279B1A76A8D42463B34ABB41A8
28EBE81D7CD6353629FD0D7677816CDB6664C0A2C4A0951F09F5CDA897FB3475
9C44FA999F8B8D0DE65984B1AD1125256AE4D88AF891BC4AF1D0844F1690076D
21D796C0DDBD1692BC17A7C2DDAD7B52DB4D3DC1F1505C69E27D6907F0A7FDAA
BB2FBAACC1FAAD41472B52FA3C6894F1A7DD515A727B3D39F903985A3CD68CB1
9341CFF9EF5D71990C265EC25112118393BE3F7FB2EF9FEDDDD2F8B9713A9C9A
850355A56A8AEA974147FE9DEC63DA79388E2B47B56C301672A0BE3128241051
3CEE2B7611052A6D0FF1A0261D5912A8B583B0AC082197A1D4DDC92F3FAD69B1
B24795AB63A7621299AE3E1B6D6B1ED623B0068C2986A1607447CF081A9E0358
1F22C0D366918ABD2CC466E57E8A3D776FC5BA0BE8F70FD84517068178925302
7FD238C67D77E2319F0B1EF2F1D674015336B76950BA2344DEB1B8D252116A28
8973A116D4C8B337A9662409EF5B5A3CA50D807226EFDBC336EDFC227ACA8D3A
2EF883558003621303FC94DE816DEC6EDFED93BA50F5817C43F7267B7D6B3678
742331427D91CAAF095DA288B3E432DE336187D11BEA93204E6AD3AA4F71348E
0F38B0EA085C649AC1D7C777FB7D07858A4F49F0AAB5BC2B0727B57D279EBDDB
AA2A2B1893BA773C651EDC344F93AF550285DA911882C64D0378B4879C5BEDBE
7CB269F41661D027430A00306BACBB8D4193F14945F41DF76AB92E2069637EA5
B102BF371C43721EC276F46D6AB334C0238CF65B3DD32E631C59D26EF2F25A24
6CE35339D0E87EC0329CF9F731C2BE359115B6ECCF6C02456647311958BE4C46
F4372F7CF2136AB0585242A0053D805AAB0AEC224DD8D457FBB5AD9DCF206BD7
06E783A53FEB1FBAB9770219B9A57C2EC5DFF5021B6247B400AB2B1D2A279994
846DCA9815FEB3900BAEB2AA27813C9ED00AC201538B923C697FDED7A02E57C6
E78836B508275D989283E27E40DF35542D5636ED8EEA5266CAB1DF2BD880B001
3C39EC405AE5B35CE516CFDE9F0649151F79FA75321BD210C33E75B729496012
18AF0A5AFA9E667FE9CE8B82D36E9B7D0A3FF0E8DD0AFA75FB61BF5AA74E8FA0
E1CB934976996F7C73A1DDA2A400F3D8DD816D834CE1EC763F641EFC38AFF629
3A112AB5FCB9BF2A003F7105C30E3B1B566FCEFA33DB5E8F0986CF0AA67A9C65
C06F84A291CBEA2DC0C77B701014F1C60B17758D05AE192CB1EC8C3BC3F0A700
8279C50C8A70DF0C09ECD9FFACC2884ABF32CE375A78FE81AC3D0BF8C2C3815B
B4189122C79476109D00D04242650CF6190E6BD59A2261DE31FD301FE18F7646
8F30BDD84535CDC48B93B262E6FB84D69248420ED8EF4C195854FD6C9038D8B4
CC171DBF21B5D71553113081631067A73FF737AE8D53E4AF5C971845757A4364
981DB733301231FE3941A9D4B7610FFD82CA9BE258FC1DEAF75288F04EB010E6
03700107E1C3324E3070B22FC8388AD656A88D5400C8D857E54DF3CC2FDD3FA0
4160163A6D61CE77BC4C5116D5A602577C091CE0F82D957E195FE2367703F7E6
A86A0869543EC6BBFD8ABCCBCF339C1877CE84EC6B9433F84DA8AA7E14A1D3D3
A35CC3904127EAFF6AD64952A6D39CFFDBA32B6FED33AF0E2D2A0521D88E6D27
96DF0FA51D4EAEFB5E310F2CB37F992EC49CB5BE569EE7BCC564DDE14DB1462E
4F9831A2695DE0705CA66B3C821DFBCB66DBF48FC793D514DEB5781AF9CCB25E
40E7D62D0A0AA9ACFAC45818EE7F6ADE7E2D63CE313FDDCCA41BBAAC2B7A4664
AF64B4CDCFC99E1C1BB8B1FFDDE5AD590215801BCFF7C434F8CC377545A4F1B1
2EC9A51FE3A38565E47F0971B8FFB3DF5B00CA12546828870EA6867B77CD1B9A
A4E8E211663E431E96AF8B94F97BD59EE330892BAD3316133BD805D6148445F2
670B645DC41F7B6A796CAC0399EE812F0C16653599FE067101E0A4474052B990
70596E912C135AC5C4ECB6CFAFF27D17B2E3EB5CCF4A06365506114CFE34A641
D2A6A7FCE16E47CF472DA483359507E1BE86F61DBAE15BE916F321133D80B8CE
62255BAF0145CEECED71D122EF8EA909324BA1B01E7AE09BC121B83F04566ED2
F783A178370A12D75CB81B1F30ED0960D93F86936EE8A94A4AE384CD4E6EB4C0
7D7D39951EAACD9ADA83E5069C0F8239B56D5EF73845FF058B704A8ED70BB4A4
7746F2ED1F5E889EF7FBCC805745F64D2013
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic10-Regular
%!PS-AdobeFont-1.0: LMMathItalic10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathItalic10-Regular known{/LMMathItalic10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic10-Regular)readonly def
/FamilyName(LMMathItalic10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathItalic10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B30E8028C685C8FFFC2
3C0E2BAF712D9A4BE80B6E38C9F5A449DD2DCD493C0A130001F01DB02EE2BE50
8CF3C1EE0898661980578B4396FB3179F301761100231D260FCA63E74EDCCEC8
08E4BD0AB6545195F32F881C99FE3877DF3BC94657DAE2BD20767AE9DA7D582A
DF256F4A52C57F9D228B3E1CC5DC93FDDE8E791DB1E6FA18E0B9B2423868792A
2BC90B78D9F9640524C758D0FEFB713A9A0D66350CD78C8FC945A63D8C07C8FF
5D66E1D7D963B7567F270FB876D2FF1E76F1FC1AD80246E413D337A718699FE7
EC080448FCCD4B5AD8453287D86BC727C140A6B2C1F62439396AEDC897D546C6
F8241122821F88FE9BA1342B044AE9A33CE496ABD5D7F76B1CBCD331A08C6DD4
37A78E15453AE3B1AB6664CFBD92B9982E6C0F5AAD267804425AEC523A184899
3A2D0259E64F914D353ED128EA5774EA6F87DEFDD1BCA35A413EA5D75E42E3B5
66539B7414AF09F23C1DAEFD913327B6CBEE7B5F6258CFB98B288A2A2019D344
E9335FA5D1887F0A3E6CD430AA65E3A59B396F035C7E84875F5A5E374875FE5F
2B49567A6E8C851A51D8BA4F6AF388BAFFF88D02B166F37F0CE1D4D4201AE26E
047084E2ED3E3662B60089E355AEFEB3964748C5F836C437C042B64BE3AF79DE
75AC4E7255CEC0F20E6D9400D29BC8D9BC2FF1E08D8E020F33BDEA08A38A5E90
CDD238866C66BFEF1B3B61F2564CCDD80BD048586674B94291DB7268CF59686E
D95927FBF8CD3224572B687E01791F40D51A230B9F12EFD86A7F90A0978CF220
FA314AB43197FE6E7C4F22C4BF4C4DF7ACC7EFE7C6B152984BE0FFDD1714ABB9
CE834B59B859F89231021E34E2BEF6C78D5697E25CB5D72D2A5F8093158818EC
60233DE494228ED13DC8AB6685A5332341BC02AB2064AA00FBE26BFD27263C04
461327FBAA2D88B6D1477815F4188980ECF40CD3AD1E29DFA34769ABC993DE8A
AF8A0E27487EA582D55E442800A045D8DAF912A00650BE9BE118F331A58BE470
4E51B50AFFD26F51BC77A62316B9732C0BF2947543F33AC97463B7E16E4769F3
4F0F85BA6CF43BC34894DBCA3F28FFB000D85F75BF5F32B3D045D89E0939286D
9C9C9EA63516BB3E2B65D78732C40F1F4B6614F932F98837F99EDEADFADFC8BC
E85D2A7E4CF939DDC479252D9451651DA6117D663E34E5A7DE2D3AD36415EE85
0751D636279C43814EDB24820781B0830A94E5D19386D6FB660D65C6BBE76370
F0389AB1DC905D2BEB738CEAEDF7D117235385BD69D068F1BB3C6B565D2C4EDD
C8234B8620A78AD003F279A4B22246BEF213EDEC0BDCC168B924C861433B8BBE
F911422ABDEBF642D3F9EA4E2A045971D213CDB68B7E73335FB1570C744CE645
FA297D149547B246B8A43A8BFB1DA868019B8E3B8B9EF8DBBEE09BA97EB18B16
ABA7F22BAB9E434B57A891D0EFA0C1F82AB6D23DA9456DA0974C1D0F99493927
231DBB1045F61740E9801B25C9A277DB7ABA077B0AA328E3B9E203D6837044CD
02091CC7E1EB73071EF8539D43E0685C1474012CCB7C67CA2A599F1F4BA039BB
B26179F2A72599892CE6F82784F8C6462D45076E249A857FC13D34B4A0D06BC5
79F770CE2937CB185B4D33770EF2E07B6974D204080B4FE69807BC5F37C37F75
307C68061FE700D79697FFB1C9913179AA9EFAF1F18BA2BDBDB30BCB757173EC
B8EDC15EC6ECBB70113CDCAAD6A553D16F4D26A2C14FD45EE87854EB7DCD5E9B
70DAB17A4CD0C0E4BAD19EFCF25E3587EE8BA5996F9ACE72CBC16114971B1916
36744AE3ADB576738EB12DA190F7B750529BEE07643472145289254B09ED15BF
CB1DC55382255E271D25341EB5D6410A1AEB659C973D52B28D6CA92DDED5BE33
EEE8274D0172004C2C2D3E3F4BA139245E95B76F3695B0B469F5CD08D2103181
F00DF8ACF62882BF41514C613A1D38BE310283619DCD7B2DFDC9DCC814084EDB
CA0BD2E720FAE7571F9542FC063B35579C73EB8B80508B7D3688935C8503A6BC
EE71DC19D578877469D27647EE4C3B13072D8054D7D84460ABCCF01BBB818178
DE44416E99E09270E3512F7F4DFCEAC871D46DFB0B26AFBFA0F031A3DBE8DC9D
17E58B5ED6F0B0AB2777F8BD57832DC49D3F11902D4C9697ED970BC6B733A341
88D06DDA8B9B876189162336DC533367701FF045830DF688781872106E11D799
463F310060FC362E6A375C3B89220B24B9AE5720C1F4C9CFA3B8FA9D88D116EE
6F2F9709188C7B1BBD7906A39CE109672627D25EDA17F52681C14DE6890A7E2B
B9FAEEFBB5B74E9745F10B834510E6B1D728B0F1306B7C81B444586CFE58CE34
EC5392256AC36CFE44EE0355A39D8553DCC718815C4C4ACF9C350137D02F63E3
DC60A6F1EA35EFE60E4BCA434554F6994D1DB78272B973A1B2AD910978FCB872
1FC2EF1C7A543EA9D59E83633D3F36E7282B2D905F4419813BAF2A19B66B7A79
3A14353966EADE7823B291E55399964E6D2B99340FA5A525CDB3C5940E713CE7
BC1547B3A4D0849EF3FBC7D1A38FED210F08CA59BF2B0C0CCADB597E64AAF88A
0E42A683658B3A29BF63D40A79877F58F60DADB4D299F5F8A93E107DFC99A08A
7FF93A505DEF588AD7FB5D833A204352E912A85D2D01EE709B5DFC0F27016178
595B5C86BADDF2E2CC0746FD8572CD1F56F3AA0DA89E536E8BF18F2E1ABFACD0
E7EED6E550AEEDEB972A60F4335F23F1B09F927C068EE2C6CF4E9CE1E4E9EFA2
EE831632153D5C6216D9C9D2A9CB9B290EBD6B1F08C4B8B4079C24CC7FF778DC
E82199DDAAF70EF3FBE792C8E221E1D0B3FD33735C3F2BEBD6CA360F71B44AC7
96B09116BE2CEDD9E8C8072A91B225068AB55209ED21E145DAC3B706D0A1D98E
BE801149B1FED0BB8F9E4F8C80AC84CEF1C8D3D84C98922304C83027C2CA971F
39B2B2840BF5216E770C1BEF8BC79F0544E4DDD41261CC49E1203AA0AEF2CE7F
9E18D1CC1A9861CB9B876DC5393033187973178CF1A51640B42BF15417466350
BF9737B7E5C8C0FB19BCA031FF048BBF260A2E137536A1414DF1019F87D02496
D758AEBFBD49FE903384E8CB9B308B85FB3528AA14EDA0FEAA8C504BBC2509AD
CE1B85A119AE121762B53FA4816BE91F9410B30F05B4D11532D839C8018E3EE7
9EEFC4C836E366D111780E3284BD102891B101D524593480B0965A1396B78875
5691892E5DB15E5391F69E6929732F827720B28CCFDE020B76AF5042F1B2C060
1EE95C12A9B1FBD8D85B6980FD9954F4592F1B3CD6A945B1D21AD5330CFA595C
6742FA1549DA6FCA228C955D4D4726875348F6A1EB221E6CF917515C01663843
EE5F579D26266AB2C36C6A07E02E42FD973D9734670105079CBD1ECF4B95F419
EEACC668D75E47C130314DA65F81AC8EAE47F6D7AC8F2F3FDA2DDAA65CC8DE5D
8F0AD355E4F48CD141ADEF15DC2BF29845112467667ED019343ACD4C5B6DF9F0
88219EB7577FA87F11DB153F46F4FABF2D40E2567E0B291B17B9F92633705CB3
D46DA50F4BCB3984A8660F7C16208958A7040B9035F352B5A0EC9B0C11D5C955
929484183A2DCF87BA82DCADA575EB1BE49354A3E0F9EB05CDFA45732A4D1917
BE859F12F0C0348089C11FB20896EDA50A032BF76E9E894EFE18D810767B0D1F
2D87588C56587A64C7625AB14F5CF73CFF612466A0780C249FC13B3586BC6C0E
11243722E6DCE1C18F090A53618FD33B7504D1EABC342FD35D6F6684A51B9E4B
803DEC3EDB3CF8B4F529827B3B3B32892FD154D8FEC6ACDA31625E371D6FC153
B936B94A7296A12F80A3CEDB16E90F617E510BB64BCBFE04A109C526A1EE28BE
AD7026C055F364ED7FD5600A176B15B27083E10C0A693E08553C8791BD543410
26C6786BAADDD50FC1658E2F26C04B2A5724AE0C6C6CEF0B476A540A2722E7B5
C15975C94092CC39A08374E37A1897A9C547BAAFB73E2349CE75604023A59B49
1D0D701DFB44D3435C0BDC14D4031E47E7EA6B7FC16450E008B9A2A9A6EE3F53
15C8B75DB0022D5F7971FF8D202E3DC40E7E4E902214427B6C1B21C075C9A3E3
32449C07B70BCE9A7F40D3136850B99A4BE5F60EE6DB4DDC508D2AA508B0E199
0E3B91476B56848925E09E3566D8E21EA8F55B7A6430337BAEAB488C015C2D18
0E7F25C2CA657C4ACE3EE476CF915F303F2844AC388C9396648451AE99BC3B6F
AEBAAD2BBFA2AA15DACA280AF0CC855F4B7E11D5D801100A075B6353F196BD08
CD5D1B6A8DD3678E9781FA7F43A57EDC74A2AE5CFD191934B8371563D0DDB3C1
AEA61CBC54C5AB21B40BFA028948381CDD28DD53210AAFC9A7DDD2319EB72B1E
E8255337B542D94BD8B6D0B9932ADABBC2AFDB15C418A5596339C11583BD28BE
8B088504EE409AADCD3C5A568BF7D6B404510AF30B892B3149B55D4DCDFC7F59
6C838A401D3CAD084B53EB42C5A39F2FE2082A98002103FC58FFEBE925CBF354
82CCF61E53887BCFE3CB5D38BC6AC0BEDED7DD4F2E6E125C45E33DEB99385934
F1B65D15929494F000708FBBCE38C1C12F14C3A911CA435D2BC5D92BC7F097F7
CA0C74F47F6D65FFA33C46A68F865C1ED23C487FC3270061D0AA94EC1CCB7B8A
84A59C67279EC5540B119C64D5B24499F55D0E2BE2041FCA02E8C651A61F958D
2BE10D856E198D6F654F6FC4F97613D6E8A3504AD71FB6748B7F5CF2A46976B8
E6F77664A942D0D38B7A27DDBB79B30712040681624B413783D22398961EEB96
2CFE88BA5A82388D934EBD35379408178585FE74D527FD8BA76ED5C041B0E982
74EDBE696BA9CC9CECDA5361D9B40B661C7191C2A20DBAF3CD031731E2B2358C
B86EAB1EEC447101210B1AD5BE7A3ED1E7D74D8812897510FB6F3CC0399C0C12
46FFDC5FC398ED867ABE62E70E255A3DEA5368E9D1368F43C9006D3D084C41B8
9C262FF00A2E69B6BBD92D3F1531F3F9301BEF0ADF6770516705F9D42EACB0F3
68A8F79A06D5311310F4BF15CC5EEADEEFA90991AC7BCCBB7DCF1A1CD15F6484
7BEBD43BC845BD65665AE8BC815542F44EC6986A6C7C049F31B77392DD3669E0
7105AD2F40F99625E07D04DCB0240832
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 78 /N put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F48833E9E
B7BFE6134591C923F2C91D77A132347F5F471F1139B9938E880CC5B3409B3385
9FE870D53EC343C11C946BB9B5FF1454AC7D547539FCBD3D77D83180BB4741A6
90189230B9B61C6C54309B61623636F98871724F9A85088E44779264257FFA0A
FA05C2842C534A411593D10A76CB09C8FB45E6E44703FC7A51D81D3C1E8F27F0
3AAA9F00AA3A998A0C661B72E46589CC08EA87EECFDF36B819B07306C38AD155
60CE44A39581BD6B555165091C5D4107149E976E2488EBD830CCB0A350C695E3
ABC1069A94F16744A6F2D97BFD4E208EB2BFECD6B74C35310CC3567F94414FB8
334C42FEAB58B02F67E9CBC1855FE7DD7C1B142979D80DAF96A3F3517933574B
07E1CAD5FEEB9AD584935A58676976DDD2B6E118FD1D46453894775B2DF1F871
924CE2C0479EA8C8C337504C1F456B77CD97DDCF704455215B860BD0241DDAC2
F375DD996474504545DD2C1B775E4CAEAC1DA45C79223AECA9329513ECA625CC
1C5FC3AFB291A6B75A593BA8B9CA4954AD9069797717CC0B929BABA88F67E4E3
691AF74A94E95E6AF67C7B550FE44C63FAA5B404457CADEA896C69E5262430E9
787D1CB2FE11612EB29CC828ADD9B2585FB30DA75565D2D87C4AFBAEBA55678A
4E32C9C491BC85622463D65C0E9723DA72D45C6893928AC6364278958FC16CD1
F7C31DF8E2DC3521CFDC4A1218F6F83BB3974123A362B879F4A7F4F84113A514
3469766791AE6D34BA5058A534B06FD147A2003BC9217289A93C5FD02EA25058
5D1D0C5CBBBD31AF86DE7198706BC7B22AF5E15A27DA30541A8DD534DA895517
EFD347C1B0BEB3D33CED9047C473A7ABD9E68F03E176745F59449B537F8A8BC1
3F149C3D94CC01BBC61D9DDFC8CB1C2D3F0A65354054433B2A57E23265677D37
989168AF0874D0D8EAF987BC4A15F80B3A1B1FE1855C92998C5E466522F23F9E
FD77D816658CBAB9131893E6F3C64A7ED38F4DCBF7291B6D7A360BFC79086819
4D35709FD0425F4D6E66251ACFD3FC990F6B69E2E1EF111C312D6EF7E4FFA2B3
15D200DF39BF923747351FE56D3D574A24B7AEC29044CF792D4CA7F2B6D9AC0C
62679B92C0F90D0B3D453EA1013FC138E71EFC4EF8F9AAE35F11A49414815E8A
07CAE9E8B59EFBC26F389D8399
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Italic
%!PS-AdobeFont-1.0: LMRoman12-Italic 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Italic known{/LMRoman12-Italic findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Italic)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-449 -289 1358 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD115081973393AA2048ECC
1B38C1B45AAF909E1D0187A0DC16F505BC42B5C6AC12168C73DFF1878FBDDFF9
5CE859CBF7A88E342F565C04C06D9DEE65C66C505D6B44F028A7659B7B18EBC9
AF12D18FB2C70E54D7C524923386E488A5781001B47276F3CCB8173466544141
F99FD85B6BCEAD8A7E1294BA184AC78C372F2F08D8C26E0D96C407EA8F1F5A28
509753BFA423684568D7C86E4655ED88226911F0DBC9B8DF79A35791C4A85AC3
E8EB007E7AA56FA62680DBEEF9E2A976C9F5A863FFD9334B04B4E297D672402F
7CDD0A80AF1403FCC0BF0C5B8BC58BA6669717265C300F0E5EC871A0896CF482
691E8AC48D1CF9C06AF63CD3C7B0AD16E4A0EF76559A251DC81E06549C9903F4
E755C2E6BAFEF9F3FCE61B6426C9C0AF1196BD504C1C2D8C735C0B1E6267C57E
93AA51E6414CE90A92DAC96F8694EA081AABCFCECB0665CBA6B56524CD5CCEB2
B5DA0717E989F874329D4C73CE852FAB8655DC1B57FCD0742B35D37C3377912E
A7FFBFFA9977C6B45233E203C745C84ACEAB8BEEC1A8C5E2B5FAD52657395DCD
3471FAD4C2A70F0F31C29BFBE131D671AA20209028882857976D4515E730CB30
4A404BE6BB5947361A0664A8BF8B33C6456686A1A4F59FA091122433AD0EDA97
E83CD285BF2D96805461215F4A5CCA6B378B9C2B93CB71E36835A8AC3FE2601C
D2B1370B82A4668FF8C1FDD66C5B526E0890BF226625457059659ED51CAB74F5
5FA7945797237B1656BA0B7B7F533F360894FAFD189B50A1CEC76E8E8974788C
239B91EBE8AEF647688A1CA66C7D5D7C0D055BD5DD5A0BA92842730DFD09DE92
3358806250590FF35564FF90E9DF85FB4B082B7806E3E941AFFA6336D4F9BDAF
124193F6E8396008E5BD04F19BB4EE30FD4A80DBE4DF9EEEADCC816B3C84FE39
07EB828519DE800A9C2CBAAE3E98D910EC76A44AB8AFD6B95D1B72B8B21490FF
528777AD3BAB19ADC5105684FD87B37B67B29AA6628DE75A69A3F38EDF33CC72
BA1C6A089FADA9A92F60CC2FD61EADF93891FC191896A5EAD415224F7E256A4E
A02D876FB0B68E723AFD17D0DF08550F90FEF1751E7E403F5F111E5712BF3AB2
51EB9FD654EF748846E38E374DE01977C142E0ED10318333382EA7FD01EB2A59
D9EE46F33362E4C2487FBD9CD96837286EBB53EFC8AF3FC1FFD3D1EF05061D80
B5E3C87AC8A76D16591A3380A49D57886D7F7BAD9BBD84F73FA38EAC51CFBB62
DEF89CE32FC2649522985C27941C58E4F50B9C2CB497E519444446F0E2F2A2CF
F9963C615AAD69907EA4205A0BC3435596988D1C67406AD33743D1E984DE8C3D
F484971F00990B88E1931C59D868369DB620A30ECD347E1717AA5D4CB03B26C4
A34300BFEE6E72FD1AC6CF819110E6FEDED3E62A92EF184C7B979C4E20450603
8E76EC13C6264E69B55D1971CD164A032BAC23C2866945E46981F9406B6E4F61
160966AA3E2B029EA8A7323F271A6643341F7720B16123685CC289FC0EFC552C
5FC511935D0402CEA398F99BBC58873131733D7FFFE2E60835E8E570EE206034
708F56EAB17C698F2052A9C6410435FF3D114F67EACD436BEF9EBFF0D3BDE9B4
FB0A540610BDB59FC4EFF8586DAA59BD102BAAFEAF854C1B48B036052A3D727C
050B93AC55B87A0E337A5DA9985EF7DBF5E1072D4D4BCADF078CDF0EDB3A2C78
66C977678C571CCC9FFFBCC76D0895C7BCA510FE3F3DA02EC5384C4E5058FECC
591ACA24662FF0B6783E357BF2DB29034B3007E7EE680C5EBF4434464C47F8DF
4DB69281479EF18DA2237CD4F3A26C1458B3F69670B72A5D4C1CD5D8613BBE22
737F3AB7AA70C37462134CBA469EFF52B99E6C1F4DE95E59DCF7E38BF93A153B
0082245B574C006312B1A0A1DCE0E4AA6C193AEA970F45D01EFCFBBD18095B62
AD860BE59DD9C26FA72639FB421C3457FDC09D3ADD6AE6CC86E8B493367C1BAB
3BC0C3405741CAD56CC6A606BF71A39EF59C9E976C5F562F31C628021C652ACF
A5745D606BBE742DCDC69705BE94A449C5EB8D42E88443AFB83F96DECD5E0B32
C5EA329CB342002792FADC15213545D7EB212CD29841E176122E3D1E147F1276
12C7EF5F32A8A3C6A4E7C3BC8F04EF6C58A10CF8D6B0D502750247BB25006F46
6250647F37A36A4911B97E5F975D12379864A4CC14D3103C4994E6CA97B1D789
3DF52D57BD6C1A6B744024CFC65AAF32058BE46AD9FA0D3E24F2FDCF57193CCA
AA36A4B774280AE1D3230BB98D2190912BBD038F21047D0019EC24C1496E1DE7
71B3FFD092BB48934353CA645CF41F7B2EDCE9FF9F84EEAD17B366D678E61C61
76FEC09C94A3784C817AB37CB52D23205066E2D80EF7C7866BAFF6B23D88EB36
BC2E699A11EC1AE28E0E6F2B383713FFE2B13A67B51AE8B12E5BFEFDE5D92BE7
BC5EC381B6B05335F5E9BDD8C3A4A82C2E598302E5493842F0A080F6AF3A9121
D8EF4BCFCC80EC71F78908BDA227422F8A56C95877234F9FD6BB97B3AB5C0F27
DBD4DD8DC2FB1BFE35F67D7A5B693EFE15A466950C44AE2D4F9D99F833D72AE0
88F54DC0BDD441EA5EB5A1FB810A2926A27D510E69512B9C70C2434513CE55BA
9EEA1BEA15C5C24ED9F31705A32503BE7225981770457FD937871241EF7A195D
4747C9FFDD581537610B95B188999EB5F2F53D263ADE076A5DDB61CB18C2C4F9
1CB227C6E44CEC46B305D67E5C253CDB908754242EC4D9CF4E75722C9F37E4C9
B4E010E3CA56EAA8868DB6F226C6E56BA3356F66D123C08884E9D27DC1FFFC23
D36AE111FFA48845C0A7FF2E0CC929CDF9447D83A7167F3FF009AF8CAC686052
7DBD2B62750C163DCCC99F21237117AD4B234438CDCA4A7E25421A64637FC8F0
AF83863CDCACA331175F46778C3202D3D4F36FEC1AB9B1973A7DD95352BF1532
EB87DC7346FD25DA53A3BBB299CFBC46A80CD1D1820D329A68E9056D5FA94871
56FED518164901F83DF3BAA6A0ED3E1145BF178CBD4637DA34744818D2364CC6
932DF0E2362CCDF28E5A9D054A1B2BED399E780DB66D502014608F6D49CC34F4
A6767064EA4E5F469E48F5AD2885076AFE1635CD9ACC3C44B5755DD9071DAE1E
651ED94B4CDB4FAAA1AE95682AB3BD762EB1D2F722477ED3C9E8221F88E54918
1454004F18A348FDA4446E35C019B5DEA938B851ACF798EB6086D99D6AD77CA6
4AA2EDC679AF04FE139D653820FB3EEA998267FB51CF42EEAD7BB5AFA236AB35
C6DCBFA1165F47F8F52B0787EB4B70B9C8A6D5E61B5B11D5B16C646BFD7EA160
518EC3FAA454407E1B8A7520C2C08F8CE3CEDE80F4C4C0838B8D797205EDA240
63103B89A932C946455256DE821247F764D8435543A6A69628B40736B1AAFBAD
A2DE6F39CD599135BBDD2D6A67F05C3FD7CF64D8F619AE619F5CF7C0B1DE078D
A0D6C0E48F1D065844515CC08B55C960DAC383D2278C7302A34A4F508E05E8C9
08C46B93419B93876B1AA19E70A1D92D48565DB08347E934C223F5A1504F2CB4
5644E610A3C02D768058BA2B97ED67821A10F50F406270CF873290E99A3BD506
A8578376F7816D6F4CD48A5197F98F35341EA3A752FBF80C009DA521C0399993
9FFC6CC50503BB871565797EC537E267EBBD1DDB3F3EDC5FA135479FC9FA2409
826AABDB6DEB72774923AC44C82D135453BD56678689754F0DF84269D869E5D4
0EB344E5D2C11E525F08CF4752ED284A1719539A584A375CC8B9C4FDF77D3016
80CB83F3BAE0A70B1DBD9977A5F4C77183F4CF9B18D3648CEBFBE395E68FC891
329882A2639575674B2A47C068AB093F74813A6BAA4F7CF2CC57A84CFBA77156
ECFCF83454E56C56A2CB0297E6C99E604FFF638C9DB5F9EBE90F1628BFF1109D
A71D85A35F40871DD6EDDB2FE95037EB3E37FC4FCE8F9492E884E432F5332C61
62371112A5529FB7CDE3A1A0DB98D05D8301FEC82EBCDC7D7A02A6CC5310ECA2
4348652BF62276DFED27FA18C1B3075EDD207C35BC17DA8E255C9216E000486D
0F3FDAD463346259844571401A131E488A004961B9D77108922CB750BE2E146E
CBDD16A1584F3EA2AB3D9A37849E283446B177BFFBD9B94C2C008FF74A20138B
EB2D0CD90BB842436D3B6DB6ED212E9BFFEDA7D3958C62CD9A5A77E01F15B23E
59C215E93A3F5018417C37FFED36B01A47F0153A926B6C6555E5389B6B68AD39
1C6A3F722B2F6C2CCB02A2A87D3D4B8954D01DDC88746908EDB625B9FC645E4B
F39E04FAEE6653798941795B253A86C73164C0B29E831F83AD94729DE9FEDEFD
6748EABD96D9FEC55051D7462136CC3306C5A6A7F2921367D2498DA3D214AE27
5931A442EE4CA0E11E8CC506066BDFE472196A930F7E527E0DF66BF48E8925C6
55C7B21A81B9FB4493377D6B952CE51F20739BC4C5106C4527DE148B31E0F553
FE1D46181A8FFFC3C6838AC1204F34A6A16569177D6B1C7CE23DA29D37E9CD14
A077B05AC1D894BDEC87BB96D4ECB175F244176BFD7625B80223C231FE14896C
C19E2DB362DE5117E6B39EC952DF96091851A33211F931022D46BB1341EE9019
40795D0F15DE5A23420BC6DB59314AE0FB32814C0BAC128B7D4D61C2AA87093F
0D9188350856B1FF3C410855F5593D1424A27B7482D2EF601673E5E859A11D4C
8C48D36D325BD229AC91336E40475264897D439788CDDCAEADEDEAE8FD8460B5
BB21912F2881FA51334A720C96C7B9CA647E44F7C808B103D657353EB568DBB2
2BA54AA1B3BE277E804C6BA17F299172AC3A4A3FC57E0F08DEF0F19151DEB13B
BE9608B43085D30037728FA95D99D376580FE5BFE1A7FCCE35DAA893E5CB7EAF
FF53372A5AA48B228CF68EE0032B1968EB88119A375D4FBDA133B5C6494E5E3B
14FA09EF6982B1220A197516A442C30D604833511E78B3DF0FF25780A142C31E
0E387E163212BD3509108B61ED33B18A73A04B5F96F94EB6DF60F5B1DEBF5A23
0721E51750128367A0AA72945C949102B7782BAB3FB8BDCE2FE2BE9B7DC14AC2
FE27CC1195254992045C0A486BB5871AD692296D2D69F6CF1E9FE72EB745E6D3
6223AB972791081FE59397EF9D69415C6994D48E7284386F6082C2362E4CCF3E
66ECC33C744624C14BF0E29C015F68BEA5EEA4CBD597C0C8AB77CF9CCD9105AA
6824BD46D237D5AA012269135E586D85A70DDE32B3521787F7A76DD68F7E5D64
0C87FFA05C0EA432E2C0E641ECC847467858898AD528633F477B739EAAF078FA
56B039D2D408B56CE03452944AEF2FCBF65E4BF33D7C43C7EFE3A8D63D2276C4
236933CA08C51C6CFF8FADA08AEA67970A39F150893C460EDABD875702C05640
E905826A2397BA520E686CAE8E9320DEF5363899F97A900FDF659BC38E6DA6E5
87C23E70241F9C323674E061FD55AB355013374B68132A30576D4DBD04EAC244
CAD6F9B9B87060EF0AC15FAD60D0F0903E76F0FA3A2CCFA0D4F8AF213E0A0CBB
C22A3CDE0856BD8640D2B9B1844E03A53BAE53445277C899FE86E54B8BDB1490
AC76FF84E0DB1B76F31FE8955F98B6EB4F83AD59AAFFCECC01B36F97FF9682F6
87343EF61149DC3BF556A632D10F0E070A5820B7C261CCEA2B02606837B57B4F
38BF32513D5EA4E27D946387E6DF677C977AB426EB6CF686087DE12B3D6080DB
90BA9AC4B9EAD70DAEAA43C5D1F96A5ADDE484DD63BA31F96DBD7DAFDE8ACA84
4DD34A2EC1F5C5C777FAEF9AFE2D1C610195FA32E61F5D12E43E43F6E03946F6
1E9135C70CD0214CF04A4EC5AD120D492F25CD6E1E8C9AD62B49EF8453EABC20
64828A2254F5568A8D9E0D617268F63AF0978DDF59311FBD5C2A43529A894801
EF317BFA201302382872B3C31E86FACB377A74258F2A8CFD319BCEF75CA4EB31
7A628F42F7EFAF5804FF385897835258981A89D3EA8E8A31F4257A299412A33A
F840C8C40110366C69BDF65F2F5EE2960AB55CE2D7045755C022F8F2A02E9CC0
7DD3427E7C5701857ABA8BE5C437E8C86BD8109410CF70CAA48DF1BDABC847D2
8F5BF1303D664BA2367CFE68C115B14C8530341AF1B995358D96E6FF4001A36A
4919F8971B4A9769B9EEE6880CA5001CA884C3EBCDAEC3577D0BD5C1B55CE306
32E78550D488096276D65901992D2DA425624BBAA3EACB09F5D5F1F5D5A5A7C7
2F066750020BDBE81D3CEA0A21B9400491F71268A43865A82AC8B53667EFA5A9
D2B7FF360764625FDC580CF571AB5262BB598582982FE4F2AA33BEE0B0C56210
AB1F215AE7F132D2DF1A81C0A47BB59C3CB6B4FBC4E80FD28FBA54A455899A71
BFFBC96D2794948C611ECD772914394855FF53ACBDF05810B53D1F7D29151D92
3C1B00B247607D71008199D7851F140E4F381EFA9ECB80B42C857475ECAC6941
3993F9E7332B2D89B67D8EF60E6A5AC3814A9F231E7139497CD830859506504F
A1A5D09A598B680477BC3C802F31C07FB0A53097AE5E0F871751CFAC5F977D49
F3E2E3998C6470234CB54E3A13DB506AF4BBD4123934126DDD37B6D4DED35048
1475617342EE216F1E123AC3D95450671705DBC45C03054C3FCADEAA2C4DBEC6
54CEA8157A8E820BA10B8D63069B97EC9D241B1D68D6D8C28D4D50460B108344
BA54668D4F0471AD693ABB4F0DCC1440A4DDCB7233B88A77611FAA6E5B4255C5
171BBFC23F84382B33AB04EDB9DBC40B3D976B011C32D2DBF6C4CD3674C7A7DF
9B74A174C6AF59E146AFD5B53602750F77EE8B0DCA2473F89341C7723D718EE1
5D3117574C43A8A8D071BC08F8D7E491950CC7076CEEE71E5A9BA77C4347E35D
A83EF42DC735B1B3247719545FE88D186373488719E87D2E5D5E97FFF1E35756
C47A6A8FD44E2528D5460A42549129EB54490428B5A48080A0E95A00D0F166D1
AA18036426410CE158403B4CFB64EB4D80157F57E0509776BD37A9D557EBEA32
30AD28974B51299ECD707A6A4F31753702DF75BE27F973AA31BE3A29A821CB8D
0CF788A3009ABCC810A6E3532F63C155FB86CBF6A62EC2D4975A0C403F3547D3
6E0DA51E215709FF69322D42C893A3086CA4276706EC7C748A40418CD85FD323
D46131B92848977E099D266E5949790A7E4B850BF6F48590284517B993221173
B92D736504B5D70713DF2ACD8DD94FAD362ABB3C90E998EA1562BF1FFB972235
DC9CE3A206109D4795D5ED5D697A6C5C686709B07B0D1C288C64E834929A8F3C
BAD326505A7B5A0ADB75D0BB8C2F7B4FEFD75CA77652CA0F9C056573F06EBF22
527466EDD4FD141284FE604DCEEA1E4C7A28421B7C993CF42412C5AC2D27BB1F
5A4CCCE8F1D8B79FC7F774143F0C626B3222D13A8FC229630CC7EA352E95012C
1187BF8E3612BFA7CF4AE2E8232F1B38B3B80D6A5703338EBCEEB427D2E4EDF4
30F878BB1C31FE86146B9C46AEC17F80AC69CC064BE22A5B91441A90D15124C4
00CDBF7319457F7523B721B2B9C0C46A588CA6BF14A5D39DE3A7ABDE2A6F2F91
C5C4EAFABA2C0CD5BFFD8203AAA65D8116654C76E72A1E10C8A19116D254F19F
CBAE6C1BB500C839DC25CB07FD277A2651EF8AC7C0F139E2F261BB8CBCD84D39
EF0F0BA674CBFB21EA39EF8BC793717B7CAFDD0882E1CD4DFF2847E10A71211C
88A1A68822E87207738565FBB27A8AD54A696FF8D147151D73CDBA27590905B2
C5726167BE310A325EC88FCB57833D6DDB5468ED99646CF0A8B2052953B7EFF8
C67DE71DE913D1EE62EB2000014AE8FA3CB0E77DC2768C85BD33CF0C347D7011
01DD5AF54A2C94BB90276BD19E08AE9F47387499EF44260DBBBBD42BD987BE1F
6BDBF90576996F65C16A382279E3914396DA0993E9C3FA88906D37E4915F3222
DB2F0E9C57B2151F84C5F325C96D3400894A6EDAB2B67C420166F0377024624E
0B67449FB7D3A09203AE2B5F713DCF6434AE97F67BDD87E81163E68BDD4B8FE6
B62B0FA657F157C5239A213A2BF53DC4A68B4EF2356E700A77DC7D364D5CE402
1B8DD85F1E8A29F10E88312F65FEBC51A900ABB51A058888867F82BA02EEA5CA
F47F031AD15A0EBF2C8F288214125072AE15C467502382EFE4E5237B3467B1A2
6791BB653B865750745817CA28E17C0C786D0D9AF799EE987D0C240CCD6046B4
105E3021CB15EEEC95A7DC4044F60BD2A1149862434B7002E64CC9189AA3E547
0914683E6EB80D0A469D302B99AEAB3043065705610F6394B36FB58D6D2AA14D
81F492A5695178756186336BF5DFBEBF01FD780E0983100AB715FA4C71223BE0
BEC782AE5B29D62ABA4BE9948E84025FA6921BC5351A070BADAF1B24FEA02222
494C379584D7CD6A27DD534399EE79E5ACA02E03BA244E7E62FFCC4DAF4A5E49
24CF6B2C3A856ED480048DA2BF2FE25B7A036BBD45AF1B0FFACA7DBEBD681DBC
3750A107065377ABA05692C03071142C9FA9A95E15B1261E581779B668D59DD1
67BC3F8D6EA6F003B6C5F9BFC1FE7DC9B4B55FB67D412D5FBF6595EC6A7527F8
C27C66EF2CBEA6273D19A834D3879487D3B6CAAA260AB575124AF1A51B15807F
7EFC5EFC798026063CE82F92BE571B849325DF6F23FDCD6B6BEE42B35A73B5F5
3EBAAA2DDDC988D12BD4E205D901F52B1B4A8495A573F01807229E455DE8DCFE
8BB5C37BAE9CF22F867DD185D8FCD5BDB48FBA277AEC0AF17D7F131F00A084D1
E8AE17309382A9D7FA440B40952749992C9A80C4EBE91711B2704C07E60ECC20
C48B5C8B718F5560439F4A9ADBAB50B5CD9DD01A8DC37C3A0521AEAC1D6CCE04
5183E4A2A2AB7B390EFBC204BB9006C6950D9FBA80BDC6528BC518950BE13AB4
3487142FA29CD87AA368FC03EE9A9E27A67505452A564C7DDCBD8880CF447FD7
3802E4CA18B5A1CA25AFF3B3189867E82D9293F9A1089AE224EC5BF2689A13E3
39EF0EEB47675D3B4D6B40364AE0FB3A1A120B3C03CA447409D52B998AFCEC2B
F71E56683C7A8E8281CEA52010D14402EBEDFF8BF2CE8D0BEED9118CC01650C4
0723E9EF59CF21A4EF92AAA96DBD982DAB1EF95AE97AC1BF9FEF7E17352D5FD7
C6E62CFADA121AA71420D60851D0E849E36397BF865846632841612908DA2FFC
E9DDBF55052B937DAFCC954A20294CD97CB1C5BF155D3C129FFB43BD234ED90F
127BDAD74977971431E20474428B00B4103376826A3461CE5DAED17F385995F1
CF7319AA0F901593A47481AD4F184F83E61DC9F3D2AC97BAB5DA126273E0EFA5
A948531F89C2204889C7F3A03283BE32C9F7785F8E984220443B8459E6131EF1
08FD7033488B1949EE50A388EDEF3D969983B7E35EBEC11B7304A5CA0258B746
F7AA7716E3C37411A201C0C59C42BB48C6EA6F2FDD190829346A140B8011BEE6
1E3FAD251CA0512B7D7F4CF80B2B5CB386B465B8A28793530FBD032049AEA7C6
0F841571060B0C181864C600C4C584191BEB11900A3408ABD49DE54D2B6D56FC
7F34AEA84EE8B55CF279135903E08DBB8BA2FFD2A86DDEE081405C47F033559C
0103B1C5AF12960ED38648636D9294C5991573C051373DB60022AEC08714C2DD
22BA4E3F297A0F2C1AC23B10A8A7EDA78CFEAD35BC2E9C405FEE036FF4A8F91A
94590A07AD44A8CA0820BE77318B93B158AB07F56F2DC86D55B7249972C4FC80
475758CC73689D208DDDA6576CC597877E031DFA259595A14F4689775ADE7F43
3FB0B09B7CE8D0170546061E6ACC5C7B0884E4B96DDE2210949BA1CAEA0C9875
6463D500433E9489AD20670F3E8B6232C17D8A69B89C42B31185D0E3A5AC1360
4FA961084B13CE9D5A354360F097E2025B8097267AEFE7621A8F900CE5C64117
85CA4A1BDC6E6FC3D2357F9CC80BE44863B3C370C720E7AC355CD9D1DD0C6F1E
B30888FFC83E4168467A22AE09E5C7F478ADCEDDDBC454294536F31F7CF7D9EA
BCB9960BD4C526766BCE79741E8D6BBE621425199C2F208A02EEB5EF065E9730
F5F85E1628E7235A9A2D6D73229CAC6C2833FC55AAF7F15D0F05F0F75C457617
68C03DD5C202D131188579342ADAE0D544BBBEE2E7CE07D108F0495F85C9C0E2
F3492D6AD4EFDCC843737A03D631C5C6780DB4E3E061A56ABBE3D226D3FD50A3
30B6CABAF54CA4847DF74EBBDE2DE04F2A568AABBB5667BC7634010BD57BB66F
473655447BEE439DBFED57D153E716800D5C2FF5F9EB68A6D40EA01B6347E366
A63E53165C61C1EE74FF00C02F5267627FEF41D96344A05EEE4C43E2AE246571
7762ECAD0EE5F36F6CD5776D5DB1B74D3FC87DDFA45129F12058A7A29C8BBA2F
807284B87741DC253D858D0820A5794EA7DD5782EA368C350935D282E88299FA
27C2083F65FCBF8737BD6A5EBEEC0D886636A6F245305DAEA03E977D91DA4D73
C7D7B79E94A255142035786BB197AE43C539F9E79D8536619DCCDD30AD32AD25
A9F79B1F1810972487EA17CF1A72924F071DBAD4A55E76FA27684628353CFD23
04B72C79F2C68EC6A37906F3DF730CC38721F99986D0A51C9D2081A05B64DD03
9EEDA12EFB166497F6781F32893D6399E29EBE6FDA6BADEF5DF8C41F14E954B6
395B87FE5E17FF085E46A822714CD44A04CE29540AA4F06C81F61ED6282368A0
7778EC0B2515C03D2B0282D85B6314D7E4CDC0258DF903DAFBBFDFB7331841E4
0418319AE1667270A5A3152BDEE9FA62931958FEE4E75630D9D3041BBED52BF2
677328C778230D5180DEF2A0633C87130DE367F7C7ED7B0D1A98B44CACB93D1D
D989DAF5A01DC9F0DC3594C483598800ADF6AA5DCBF58DD0150633F3F937E960
6C42EFE78D7D547A1C57AACB90A8FD5C40FB22842FE64316C642C853E4936F42
0867903CBBD57FB065E3B9EE857B4BE3E9651856EA0246914D3E2081926C29D0
A2CBEC1DB1D14CE8D78D0CC34582BF6088C024B5FA2DF7EC6774B51535E4F7E2
D0BF5B78C13BE70E36B30F3F319B0DBC617294DD8558B57A0B9A4864F806FA34
588D36FD7A9FE2C1B41FA4FF8A22DEB10645F21E2CD20B057D28EFD9A90BA74A
26D7BDA4C736064999355D04BB24E519FD59020800DEBFF96BA7529CB0664F50
00584AA53CAAD047D01F2D9B8D5856A2C34A27E772F3A28691A931DAAB33E447
B03C1B10A89B4FE833C10CD0854D9C53FDC93292517B21357D6972B21CAB8B8A
750A892DDAEF50A83BE1804BE79A7EEE2D390A2E2EBC2ADD386111325F49E8A7
319C9470E3731EE5202B5FD19DE453687062C1D3BC9195852713316A0CB095ED
4DC71EA4C1E2FE57C782BE2CC4F405FEC415FEC730509A74F06BB349F68AFFD2
24B1796DF787432F181170829C2564640FF4B3819BE80A491B29A178EE04B21D
1C56A44AB5AE67FD439B62FE01875E04BE73CB44E9440EB6F4F45D82E2FE82CF
72A27FA05522D0CEC45CCE9134E120F85C107CE5E670014BCD3C584CB69EC10B
0CCD7C0C2478EB2FEEA0C69754128BFF2A822F4971361A279F53E8F12EEF7E17
116174B746953A44B9C994130A91A5941FF5A10EAA8A5FE2CD4FE65FB6ABD4D5
663E33173E5C99CB752EB3EEB45A26663E1725DE8A00379FC4B64991B4D1FE77
95ADD2B571F1196CF6409E5E03218E29844B569E2EBD6271DBA6A5B619FA4BAC
BFC00136ADBFCF366596F5E34158B07F79657BBF27A3605B912C0E6A8E8E4242
8944285EEE8F85E4F937A002E228C0410921164CAA6426BD22940D7BDAEEC69F
C37E0E1FCE8D9CA5EC819D21F6ADDEF5E0510095785317831D68503AE52663DE
A826EE67D4C901F5AEB0357CEF4E19219F58288162F3026C016EF8F4C31A8412
0011A80FB1434512F1045F476C5C749139E14B63770889F4DF0714FADD837552
972E4246376BCD751AC2AD65E979A31E979859ACBC25317F23C12F502EEA9020
4B4D372CA1B7455D51E1ED8E082C5CB69F7507E322CA3BED912006D4D60B9815
FDD84D1053112674032BB57DF31DAABB7DE1EBAE20A38DC804C23194F8411E26
ACDF0AA00C21B654B1F0D859E53D70D0A8FA8CB85B43D431AC48B0240E310022
53CB4F9D5092AF17DD28088B388EE1649D60E54B6F3E705E99F8F4F54DD5F7E3
7B1BB5F4CF4A732823C65B81BF2C0BA92A38DE1B432323F32568626DBC760676
99D3B89702D2F0B19153E6E8C9F5EEEF5133D8E78AA9D9E34FEF6F0153E32D09
ED52F9524598D8B7278FFD9C5AEFD1193611E5C3BCF436209FD44EA76C173A4E
9368D7B0DADF133520A0F4E9933000A0710759B6D12F96E5E533A30B97B735B1
A91FC71909D220C7917389BCB456EB62E04FEA0A55503F88BFDF011436D9D508
886C0650E1C40EDD6DBD115CB6E00E3866E88FC69A121279C971083A4988777B
0BA569D036482645367F7E7A184249F9594F94E973E95CD7826754E0C9F973B6
50EA403422112CF9181FF3D2F637A0229A852C8EA274290FCD352F5C7EC4F5A3
D080DE8FDF09054CFB7FFA4C94D3001BF6014BB369D1B428F0F29C0B077E6EAF
0480919736DDE7D336AA883FCA5DDFCFB4E4E91CFC8B40D0ACE699748BF3E54C
8F311E70C1B7E65B0F98779BFFCBCF9202287956E019B463A64163BED9BB00A3
A2F2871CE91313B09F0E582D0F796C7B63A87D28605A16167B0AADC82AA81B9B
160EAE7E5ABD68ECFCAFE7D585F671849C8D2E8AAB818EFA495DD7323A5B4400
1DDFCA17FDF77E2AFE84E019AA5500D20ADE3C6C5ADF63851505970FBC446DC9
CE3D65FBBA7832F996C2E43ACADF8D37774963D329531451B1CA9CF537A0FBFE
FCEBF8E066D5ACDEA018E282227E1084CF008AA927C7B711675127D57F25F3C5
E8B6B20E43C611C350A4DCC6C6C38CD1827922BF5BB090A4EF343274DA68CD75
1A72052D4FD983EB8C149E08133476295F9DF37560516ED3AC51DED7023F4576
74DDC29AB8A2C97D222B4FD5C3A9B84B9A2646A2689571883954C24595839158
9B431E90D4571106E2AE72AA71D6D1747B6E865018CFA9A68FC5D652D3836885
37E7372AEABCE016B0422DFC5718733EEEF10A2E54A8082A9925BD5FECDE94E2
B9804ACC066D422EA055B39339F2E22B6858C42601B5FFA967CB41C45B44C46A
E9E42FA5AA84F623B471479F2FDF88A439720EE2E406B5B5F331EBE73CC581AA
0A19C0856D03B0B59D04529D9F910EE8E991AAAA6F5B2B856BED8BD62BDAFD0D
6AF56828A485DBD0C6602CDF5A74495CB2C6B59AE4E14959393F9F90A193F90D
35DB90C54C237913A3D550A27325171953B66EC37327EE8310F8FC87A29AD6D7
5C4863DCEAD5EA7A29CCE14F562D8778CAD47E9A3C6781ABFCBD46714EEE5011
6300D914119D59CE53AC7B8F718013E922561CB95B1DF118F21548D17AC5E874
63E58BC4780AF14EBBF41E2D574EFD751A6B7C9AFE6196B3E2024B31F85CCFD8
949341FFED1C2FE09E0AF9A4D08C642F9C07E1C3290F6D1680735B15D36B3AC0
B08922F007FB1F6127A9A61F6BA930EACEE40AFE2068FC618945860121C4BF9C
536E02B4BB18317E3AF85EF0E05ADBB822FA6AE823D871F6262B9836B983024E
E9541B603122C94655B5AFA1C37121B10E71E7D74C36412F614BC37849AD3004
BA89D16C9CDF0A6AA5B9107833EB41C864CADBA6CDE1B615028B67D49698F636
7297888BFA4500C5C9A7F2A5ED1E2D3EDE5A263D53B1C09A5C85ADBA15C364E0
88E305E4CC66375039D5F3C73F14858B43420E9D9429D02F3E7319B5F7411233
AEABBDE62457EA580E73552A729F2A7C3023E4621339A5E94B8EC24FF26B3C0E
7E0F4D95A9EF8BCC9E460CA473213D474C7D71AA008B7CD6AD6527B18993033B
3833AD6B8095C106079E6ADBB4C98C45ED12D28A95E02D489B1EBC8D7B3DAC3A
0FAF46FD5D414418AD37CD7EC433783753C96A29EEDA88780E5C1D6C47965F0E
CC5310F8D3B67F5E9F28BD3FA550D25FF4E9268E3F4E38BD1FC7F2B5E35F3791
A1166534AEAA846102B0871931229E52456DA9DA233B0D1292834EBED37B051A
E1826675A5F7CC5523D27FB37B08E03DB3C3532479AF6E3ECB544654C43CA7BE
A5B305B1BCA2F50BC62A88AFEBF38541AD1BB12E1C38C34B695E681E542BAB09
42C46A7199C7510F9B2A10DCE4F979767770FF91C137564EACCE768714D7430B
E1825C90D88DF40E76F93FA2B545716DCEC01F7A80C3ACC17CB6A528591EF32C
9453C7E6F16C8B1F5607B42DA4B685827479170AE306B675FB4A435B05827CE3
2E0D7A3E54F783FE3E4B342C247891618BBFE3A012DD55FD0AE1B8C194F43CA7
F7D91EFE489F63852A12B46114BB6BFD37897D8542A37DE12171708D1EFC4777
B8EB30EF1C7E458A884F750694B2DA98CC275E64E2E417C6B64D197D49725309
6B54F211E310C44C338F3A3056362BAD204FDD19946BC8049E5ABFF937676C9F
ABFF09F2DD8A1B610C10C0286A1DC3D0632A999177C05A2715DFDF87CF8BE002
09B1B762271E3515DC1A2731AF2F50AE29198F2F7DE813D754012FF69264FC8E
B06F4061434F77D062F6AAE96881843545920F7F6624B5C2CEE99461753A0961
7854264999009C8D902ACD8AEA2FB3B330D7FD29852913C5BF793ACB714F9B79
7B266D2A2F9A0289664EA62E732C4BD3A421E8F13A717538E5A7A81AB7A2A906
A891187692144C02E84D49BA47846EA20C8189D388506DC7D27EEBDB3572D9A8
269430E407F4161A3C45F85184B78E26180BA3DBB0466C507369F3F112DE25F2
DC4906B1A90BE3AADD483D833E4AE962A7B196546A121CC80F1E1B7F5A048814
4889677B31D3CC1AF7475AD631D13A802CB7B6D960A86183FAAAA64991793E52
72C72BC399FAF5D8B6BB4D91CDCA8525D00B99325CCBDD30F5BAB2D6F3B11B98
A43210DDE46536EAEAF6B694269D8C8640A75773638943DE96B8C4EAEC254ACA
D365657C485FF7D48E2C2AA8284ED768B1555C02AFC216B49A57FA350664D602
1078EE1EBFBDBE5AEE9EF98EC006AC2ACCAA6366E6F24A603AC3E2B599C47DE9
CFD13EF4231C62C5F3370C9D152978760F1E4491254E6665EEA85111B083E17A
A5F20F50789D3B48E824D87501BF20287771F728FDDCE8BB0876873C49ADF815
2818A12484352848F0D8B554898FE557F69574567035ACECBE7E38F2D085E30D
EBE15A07B6A046946D1BAEC088EEFB2A313DCA611EAE1563E3ED4C2024577412
8E2C348C03C651FBDCA1E23E47BCF2C96A9C58E53950DB59E4322B6AB79FEAFA
FA01CFE20B5876AAE7AF8BB5042264B6EB11389893C7B86193998C9AF6B6EBA3
34E42E05C376C8D94FE854F4DF99FEA2543E2529DDAFB9FDFE11D180105BB2DA
41EEA1A668FF1B7B51421F5E65A2A7FC13B78F8E04598D6776830D570699D66A
AF19B447457E0C03FC119AE24B9E47DBDF449974F4BF9DA358EBCD3125FEECD9
4EFD4DD8C7A95BC217EBBF8028FFAFA7BEF609DC62EEA9A59F2827C6787EB8B9
090095E257069A47979A1AD3DD12E47FC03B333A7F09E8D2547F6D8D16CA4252
9A693943467A18708A41B051F31A13C3EA3D583D1AA7F96B70041EF49EBDC17F
49804D19359F53090C4C06B1E55D76A9AE42D8C2D8E0955D009995333DBC8305
E2D7B373A4DEA590E5EB0FD33434F389C1A723FC6138CFF4CD75DAF15AE531C0
2F7BF2BD20D865F31689074E8EB7AE96AFBBB3CC59D3FBE6A84F1F9521B6E05D
0A0B2E0FC8F9BE40CD8D67922DEB40A3DD61EAA5378501DF9DF82975CD9F69B4
3CCF1D69F55D56BE380C358B794C2EE617646327A4FC47E0F66B1018EB89CA32
0F74C91902C564E5267A100E865CED746D25302D405F0492BD7ADA0073098E33
A2275285DAF560741A702B11CE084913296F4BE9B5B2ACF8559569A120F9BAB1
56215EA752F4C5C7CBD4771665208446CAA0AD7FD946EE45EF3C791B05165235
61A663B5894F0DA159792577541DC4FCDE2F9A9ED054687198A802B68AF5A812
08471F43D82DEEA17246576368B203E65CC1462B7C3E811E4FBF589BFD5C15D9
641CD64EED3455C90F1D36E21D52A210FECA5F50626F23CCDEBEC5939FB1F684
29124249E0925C85414151AC5E85421618A0FF77FB9B4D646CE42E853942F283
833B85FBCCDD70DE064903372B1EC4F2F1ED7FC0E0823871776F82AAE066886B
8E0315F5236BE48B537F6DDE0C535B22945899FDB2041597A8A577304663F5FA
4B9CF430BC88CFD4BE15CAB7CE630194962E4183C3838D9401260A7436214E77
63A3E714F7C2A423A6835071464F3057FB802BBB8D9EB779D89DC565746F129E
EAC3CDF33EC8821B5281F66D25C8878E0AE2CD2CB6A8F5D480878EA65EAFB652
4A3C88C97818E42CBDCF311CDFF05C37F2EB54F2D44B63BE5A9574D5351815A9
59020591659CF35B170D171724BE31F7E98BA78C2B52607F5AD63067BF47432A
FE428283FE9782A6B454893AC10647CC82B1937B920E851257F566B490133D65
6784318768CC9EC7C334FDFB7A217BA81B5026C7E1EF4FDDFF62E82B16CBE3D4
01AAF8EBD8698C9484AFF6873BEED3F9698D71B91903E04F1EB4BBAAE67903B8
C5CC99288333EFCB59D45103580B01E4FA84A5CEBDEEF87161DE496B634DFA9A
68FFF20AB9FB680407DFD556E3AAE3C6CD20FC30E38AAE46D5DD4CA444C409A0
09674D3973F49E02479CFCBCC6F3F444849E48DBD11C722468DBB472370CF01E
BE44062A4CDE2B9E96F837F0FFF91A2635328F0A5E6FAAABBA55A95690EE4BAC
7BBA575CFE7F484C71714FCE652FA38CDFCDB93FF5C0C632D8FB9D752C15D7DC
E35C0616D2AB6214883E44B5D502D625A371A5F803DC9543E5330062A9E9DDF1
06AE23F42736A00B539A1B3D810EBDDDDED6C81C8DC013D8E4CE08C3953F99A3
61F8B5590BA9286987A49E5AF7BA4AF93B4D5944EEFAC690FF1C17DA3D4B6BCA
8B1391EA7DA862DC3D3E6426D42279B1853D20A31C612922BFB4B41E647DC944
70C1B8DE914D79EF7E0F20E702DED5EFB89B829BEDB5E3DD60F5433EE1E6728C
071FC11A46915C613B9E6CA03E2FAB053421BDE071AA7232D55C8D25B51D49C4
8DAB045F59616134880BD8BFD50CF0087004EC5A0C83CB1E8577E6A96552ED07
652914BF07F6F173319EB999707A229E2EC6B3D435499D35A59EB84C803496FE
A6D64E1FC582E77F6E21A71D0C319A466883A5DF92EE50089F30F3C4ADE4D307
305271D998208B4AA24B44A3EEE8ABE0E207824D81AB21C8AFCF5D4BAEA7F089
5F6D1CD6C2A9FBA36545B9F8FA73BE010D7C48CA8709B5D1B4520FF18D626A20
6F1F615DF055CFE15C8C51095D1CA40B9417A1DB1BC9CFD7A726E5853FD36958
23A450DFC5A23E03EBEAA640CF23D89D1C2F0FFAB64DBBE495E6C242EA7B5C52
5587613D335148791C6FB740EAA880D24293E3ECF03B4AFBDE439F64EDA6CE61
D3F624EA20AAF76EC190BF2C39ED925CAC7738D360D07F6F88F55E0C54691132
BE1A965A3DC333680B3067FD34D284192A73243F324E91B0424EE530FAB01CB4
7BCDCF7926A5B543B9F395508FF98E3410ADA67D0353AF45A796B7CF559A079F
2FF1C3615FD8AF94F0747C51AF4683EF5F7E6C7B0C5409E2CCADA791368F4492
08C6B3C19CE8A230D7A4075E0BC6F094E9ED5A55B9BF4AC2EE65D6CE668EF0DC
35BBAF357A32CDCE079C1047F1E55E05DD0FF68A07A7593334F5596600AFA61B
697507FE0753D26633E7FD4790B24F5C442017DEAFC7C75C2E346BC8B3D04998
10BF94FA7E0D033E338E149518B5493D7E3502379AE3DD8CEC4918D7FE142F2F
BC5F9332C1ACC7C1372FA426D048C4DFAF41B77E0C77F98BF02C1CFA6831E6FF
9D7752F69281A72D0FDD5334B63F8D214124A76F93998E9EB14AAA9752283E94
DAA8F0389585B31F61BDDA1E49788AFC2729C73C29D2EF3B5853650EAA263A1E
1A8CAEABAD7E396F1FCBC05A0C6DC542FB532DA36B3979C832345C43C74E88A8
A1E527B0E77BAE62868382DA77769D11AECD6390F8027137D6FCA1F8F1EFF023
267462D05E24AEF93D86C1A0DA6BA58119FCA2570964C90540F0440927993D1E
3D64D048CE34560BBF01C461E2A4BE41E12F001742B779171454EE86CBBA0E84
F9060C62A345B89FEEFEE14143654B5371340E1067A2A61839FCC83B8D164FD2
016CC43256A16EA86B4045C16068D8B27D0BAF9B18E8CA380275D93F8F6670E1
1E5B221716F3124C27F2759EF572804409B841B034CB23828A19AE931307E39D
5A4C763EC2A172263718D3C0B2DC97F50E034CC5F7BAFA7217AC70D8D9D02544
A545F6880EED34399D272D397B3E63A1C38B55B74C9B0A9A6BD49C275E97C2E3
FB2754AF15E6F66D5889AA38107618EED26B3A0F90FBCA6B7E45476FE9A4DA66
E7ED5B79615A168A1A4DA229BDC2880B31E08031DB686DD167A1899D248BAB65
92F77A3AF3A361467D0F4BDD30DBD01665C86A6AFC2A7294C73E88BA830172D0
2040286BDA9D17A20F6DC3C0D8ABF3693132B7AE3689C9C0F4792251E945D989
0F48F7D237FCD49CE071C3737E44B9E00D437F3DDCFAF43191B2DFF734EB854B
E550341FD8148EBCF4482E9D9773843C3C1E89F29B1EFECAFF31922A16CB7859
48643D0596ED6AA1B4C5E0A1295DFA75CC2C2899BCE11AEB19C1088AA7748DC0
BA68300231A952157A8C0FED42257A27FD5FE2EBF0546053ACC5C0FF6206CD5C
181360B6569B9D3ED654D3DEFE87E4F6DFDBD3A6B0D7CD9BEE5B6647C7DE5F0D
679C788BE899C9ACFD90A866830AFB1DFE4F5C2067E4206F8D4F3AF4B2C7D95E
63DA3C2B2C868D2DA3A86257C5F46CA0679FA92419B17F95F124C0568366F1C2
F5E26BE84489840775E4744089EE8FCC971DD519276398707B066DA22EB77764
E530DE619BC10EFEB7EE0DCDFAD9087B161E74E4B1F38E4E2B8E6B7CD0350E5F
3A52A53D468179AC6B0F782B724618FD6304E416BFFFAE3C5C46E1A63DDA272E
17771E3E443C1445CC76F7B1821EDC28B9BB20254D68A66108EE876242C52E6D
FF3BDD9B05EB8DA4ED77EE4766A9ECC89FC9BCA38C4D0AA3A0F0C91A1485422C
5E37708B2FCBC33B757DC0BA1849B4C644600B28E6DE6DD563CF429674FE1512
9CF993AA60AF1E3644FAC36C64F09A8051353F493FE4C272020D2783A7427839
A47FDCC5CB31C68DA54123CCBBCE2DE16764757FC28D17D2471C2A20368E3569
A9A30ACA937D4D908877957D26BF4FADD07A03A2A6BEB3D252D85555D0F5958B
6172365DF26E91230B19C7EE752494A47593E4F9F2184F924872CEB1784FBCAD
2F5C3385405CEE83058F99F6885A49838458FE4A519209288D0FB154A951089E
15F999591B59BFD3E27006D5E22D08E8D92251786BA218A1CB03FCB94522D5F0
44CEB34D653DE06738AC0FCC6289D1A517B53B0BEA8A55C578AA1A6FD77E58A2
A625143DD7BB604910A79DF23F056AABAD822CB4B034C45A9913B1C8362B433D
B4FA3D7F4154B738C4550211BC4F92F2E5D98FF6C38B9A64284FE3151B9DF76E
DB1FEDE84EB9AEAA95107DE25B106D2AAA083B56262E792734136BE72962FD40
8DEAEB5EAB6F3521F65B48BA44DDF5D25FA4ED3399B8D287B9909D602F361A1E
903D60F944D6937DFFCD223F55B936D506FD5DB3815F144E1E694D6540F75A34
0BA798F81BBDD9819FDCDA65471E6EC1D0E16306501C18FDAA7BA40D50971C35
021354D86B7347AA63CA2630903A3881F625F40F8AF269D790FD0960E9A56422
B401F3A783BF474BC0186384A37BE9763D3D7DC69BA8C66C7144EEDF3E5C0CF4
C2A22120DF3F8D2DA3ADDA634047B164C1CA2EF12D65591D0EF3D501D91FEE28
D9FB00BE978BDB0070C55495214D9F621C590DC9F916DD38BAB69DBF6D4FE87C
D22FB392B9288E54373F9718877DA78C3D864DF862F06AAFA6004AF2F1530832
242F0D9CC02F1BED9CEBE1BA8A5E38EC25AB9BD2E324B2EDC436A06A609F4802
93D247EAED793F4A9D2E3D0EA211EB6913E5256CEE16F57997326069D202CD25
B42AEEE769A1B57BAC0DD1AD18986F9CF8D51DC520D170B577AAE0B443A6F97C
FFEED7FDADBCCFB4C1D8BAE7CFD0A83DE31181E914DD52912F3202831B68C229
32CD00260AB55A30055148F5EEDA089786277E6A2A50053209D15B6119189723
D27370A8584CD6EF58B950DBA939E8A8C869FA105434
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A229961ADB1D5023BD93644E4C23176BF787664F
CF245203C8C3E557669BDD382731E334C06F4B6EA145D5DF351211A0511605B2
8C540290A08A304CB1279FEB8FC14062F495A5EF2072B2957D98A1AB2E4B2A21
6F53829103F9CA4A8B6EB5766A44A7EAE4D5967EC3646F54568E9FAB28736D70
AE87CA7F3E445B1F49315332AC4AB47D502A6DE34C935320422C702587BDEB84
96DD4AC02CA03F0A44C34D39978D6AC89C5D7D11DDF17FE9AB73306957F2E1C9
8467531297DB07429CB5772B3F500208D2A856AF05D4E40B50B7B696CBF8BF21
7763ECEDC13B6375F04404BE94E54061C6A7A267C60BDF527264589BAD03D923
E68CACC7E596A94E378B3CC474FE084CCBF6B7E9BBA4F1EA868A0540DE681634
F5C136B963D81F4D923CFC6F974A8C927EFB3040B10E43FD32EFB67D1ABBF544
B25D862C99D26DEB4F43C6508FB7B7EBC638D425CBA16FF4714398C2D7EC15C0
E4326ED9FAA36CDCF84DCB0639028E454D0DFC4FAD9392CB0F63E8AF02CFEC5D
1080CE1B980F1795301F225BF7EA84554F18D1D7229B9AEB286BC7FD423C26E2
0CC6901AB4D7FCE79962DFCFF39385E26C11C85F54034A919453EA863CBA9E2B
52908E2478DCDEAE9E0002C0A2F3228BD60D838B309FEDE4E20970CB75F26558
76F8672335EFF97C9A52B18067200A3CE902B05309AFD84F8E4E43A71EDB733B
3F149E752CF3E510A45753BC9683D09C9E236F3939B06280308DC5FC31385B0D
04E73AA6C4B3F95C4AE6754336416227A672C36EC9BA345F326A2F2C88F98108
C1D6EF51BD9AB622FDF762195C4F1A77611DDA772CAD50279198EFFEBB186B96
AFDD15898919C397F405E140B8C562A2A0F5061CB1914BE11BBDFFC58C0AEFED
1A16BC3423548ADEAACC02491E50DBA53B064BCA82E76EFA03DB5A918548D6F4
9829AB2BED5811CEBE0079971985326ABB5BF7A74CC614C317C19CCBCBEA1500
B7D2734D36B90E002CEB831538C5B899C9E2FD885E0A145D1843B7544C5D0A18
09BD7146433F608782CCC1ADD76390F28928B0F2DF2CB15D6A4B2569B102B3F5
DB40CEC27076665466E2A03EDFBB836EA91003926178F7D5276B1378F5E65B24
995DDE561191A54850A22625C9B269004627B70B61C63895D71A1E5506DC51B3
04FAC742178534FC7576F697A6DEF1548245ABF4DF911B02E0E3F69720543C6B
D0AE8CFE6960A104D83CA4570A72EDE78AF793CF4CE63061610C84A589F0387E
DBB00B60E26CAD8EE55A75EC197937EB6F4A6075789729FCC8FAB0CC8175BD69
73B94B7E7E2919B02A7C95D0064CE26A0C095E7CAC2A3953F6DE1318ADC606DE
54A3D689E425E42FB9EB17EB1DA38ECA37EA8A895195A237D07B53F81395C1D1
E049223A86E97F55B2BF1AB8BA13F4A9687088317AF2C72D7A0BD2BB511CD6C0
305D166CEEE5FA37D1C97962AB2C4394493424D84CCDE1F8C552BA3BF2AC8295
FB2020B2BB52823D2261AA9B3FEA06F23582BC3DB2E7FDD2E78608CCCA825F21
29EC332B881A213087E5BF2D669E4DE6573E1D9D74ACB9BA45D948263B186117
F6051C4CD7EC36A0544A1811B29D46BC1104684229E1D06D47F6B05A5E7ABBEC
FAAF7438F086E5C61DE5BFC89CC61279CD1B4F7070574B7F76DBB41DB9F434C6
475AAE492E1C0B2598A21C651DA15F53FDAF1CA73FC194B92FEBFD9A691DE5EA
2AE4434408E6A2D7B84AC2E92A6246E2C9ACED7AC8875B4D339C5FED64A1E841
F24765D500BA3C4D016898BEC891EB5D0693BC221DC6236CE89594617A900BAA
C5DEBB91D489967D7F1B28DDDC35CEB64F663F571D14A2CF002C7FAD06DA47A9
D5E2552DE4FCFC82C76071E3073CEB5A13EA5B5FCB48C4D0687AC2A432DF1F97
4F43538350705179B2EC2B5A5B8696C785D30512890F8362C305052AB6F83280
BC8251D24D42C2484045FB6BC6EA07EC1C17C8F867619E86F8A5BC0DBA4C2E95
33CC7D2398DF710A00EB5616F6E087917FADC4F5DC71F65875DF9823CD08A63A
69B78A5359018E49AADB8ED1308BDB910CCAE0A7917595D9C00B1DA2EA238339
E1ABA09BEF94E92E8EEF9C7B5C250AA420F23882EF6324AB37D7E0AA5E4E8E00
FC731383FF263C3958D4880670607CFFB190BB66248014CCC73843F541164FCC
28EFF25A31DEB295AC34A050F6333A98C37C2746650455B567CD187F49EC1460
CA4DC47101543235112BFE09EEB7FF47CD920AC151D9B6688EFF838329015BD0
59818DE3BD8F311F41D39A008474C0C02A9C5CEC0DD5BAB934D213FA1529BCE4
BA7553EB47D46BA4CE2D84FD8199EF056F99A339B5BFB9A1FE88C0CE71AC16E4
B64B4C12BA3179A9042796F7470338240E44324EBC3AB047ADAA952563C6CD27
05E89853D5D3B1E5D4B3EC3864FC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman17-Regular
%!PS-AdobeFont-1.0: LMRoman17-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 805 195 0
%%EndComments
FontDirectory/LMRoman17-Regular known{/LMRoman17-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman17-Regular)readonly def
/FamilyName(LMRoman17)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -252 def
/UnderlineThickness 60 def
end readonly def
/FontName /LMRoman17-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-400 -286 1338 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105D56139855A7DFCE26D44F42E43DCD4B09BCB2
C0B13FCCF45D66724D4F9BD1AE3C5DACA322D5F106264D18B14EA595343FCFF2
E1123332F6D493151CBB41DFD055E2CD496D222EF41B4531A6CF94D6BB6825C2
1FAB496F22FD3B47B1E926B9B05CBAE6422EBBCEC149FC0C70F6F86A0F810CDA
0AFDCB50F75368AC58AE244325EB6CA36EE300BA83D807CAED125E3B16569E7D
1AA186346F4F62D8BF78541FD9DE8C6F961A6753785923F4F221656FE25458D5
0A9808613A1EC6942E9B97B18F0E235388746DDFB04A5234ADAA9F2B59A2B48C
0C094FA865AEF464EFE617DB7A93BB5C2F57C77326A329B432A6BB3AE294D926
7D1EF387E9DD04FFC10FDE445DC4ADFE15D2BC0BFD34906D473A59603FB41480
D35869D2D71EB1F97B5CC81BCDC2ABB45437BCB13EFE608A1DBF25BF03B63C27
CF678B3ABF5C53DBFB7F3E4AF705F3518F7B3682A0C50B4F026D3AD818ECEB10
ECEA905FD14A5D0D09B7B38A3238990CD98B0256D11DC6907857007F39B09C8B
9EEE545A072FE5A265C9EDF7CED499645D848821594918F4F56B9D154A316567
BD9A2462398F07C1CD521F9F3DC87C721A67F56D69470FD29CF72CF5DBC7AFE7
C602AD7D27CCD4689F232657467C14A5FF7F7D1BAEEE4E303119C510A0B277CF
F068B7F4B6EC64A5D969993146E720A1EA0524D58468F113D6E65D18FC32F4C3
90363D9FE4273E24589ADB87E3094725B46F7273BF66A03998BD0D14E16A1B78
96474EFFA7572D9D2E0EB393022F3E8341FD99DC0382C7972E10609B64468C85
4DED836B378EC22C47D64389EC39A4F9559CEBE3FAF93BB8E469C01434A269BD
92AACB6C24C5C93C36059974A75F1CDC349CFC145EBC13857CE69AD4F14FBF35
AE0E25E3A1B65947D70FFEB85C9253075B5D04025AE0344EF76894B658A64DB1
299509A1E7F6F61659F406C52B44259FB9B1C3B24665009041CFE641946FC93F
1206E30F2B6DC521CBD9141150AA9E62C83643505CE3D74F73A8D13B930E6290
9CED0E34F12EAD4B266DD80A399DE156CDC649D036DA389D47F5FC0B6D570340
2EFD2C502B9110D530661670AD0B281E212A94C9E3F324BE1BC4AED0DC766810
A1779ADA929D291E50B6F2F4222034E26E42AED14A2966BAA5D3D6DD0A38574F
EB6FFE88F4CCD35C133D00044713D8770796F7E1B46653DD2778F1181D774D8A
4CDD0A5787C961FE2354A01EBBD2FE4DC35FA945B109E02BC9D0CA8F2F54C306
AC2ACCAA6366E6F24A603AC3E2B599C47DE9C5F840B8607ABC3EBD65B115CB8C
C3532436846921964AB2BE5A83FBE336D8C2D1325E033E6CA7B01BACCF8030CA
D26310FA1CF769F4A2A6DD033D6A0D6B27DFB7E5EE5315C3163A5E658CE844D4
F0DDB7D17FC1F755919054DC900685CE73A8D5738C2BC3A5CAAD63A2DFE5DE21
E630125AE03ABBA75B3C5272D5BBD5672BAB714A362DCAECAF285C3F8DEE0BD7
82DBA0E886D584E4E06BCFF708B6DC29E0E0E03461C073EA8B3DD439E5109C42
56E14813707C96C369F883A6E09BBD083541DC07F64A09099CB9C8A8EB1F0469
2076EB31426240BB2AECAF921477FCD299B2E5EA7AE19978F96F7CFD366BF9B1
40E1940E13D7443EFCEED616163438ED70E86F742C3B5D9421E2AF8F2412E78C
A82BB17C1EB3108C53E594D933EADE2663ECCD818CD77D92C0A70F58A3967DE2
6F93EB7C1019B8A18D4135AAF5DAD0E4ECC35934343FFF7676D4A816EE593943
741564CF1F083DAD9233EC198B785F96E717350D2178CD96C11B52FE22BA824C
C6CF64C894F4718FC30F4D8AA5132D2B427B8583BA12E5708AFBD8B07C313A04
F32DDF5F6EE6D222C9572BDC4DCE6CF3F73F954505CBC76B9127245B79FB2A1C
F6C474838566F026E25F3508C48A8BB31377DE3B1B91161DACC89ED4BAC0C5A0
DDEF52F121996E2483E9C4F229DD80EEFAA50DC64C2AF35A3F9916784B964679
C691192C6D351853990FD81536DBBEE2ADCC6EA159977154EE7F9DB99A4CB309
AFB6D06F28AD54C9C388ED9D34A511312DB573060A7E73001ABA76E395D789B1
9E2A4530B7CBC274729C142A06D14003C671AF4B2C82056B6DF07609B047450F
38572C60BB4C4565531425C87B0D922B8384813E560211473610D33CF7539004
D10E53D42DAF400AA41C55881CED39A6EAD01854DD37601A02C87F60FDCD5C26
A477D10A511BF3BF9322D1438E60940A1A7B10FF68354C043DFE6F770C564D7A
A4427891F216DCA5A69E11B079D9AF78A4C998A5D1A58B5196251D74EE170361
2D0E3E69521D8E8AA506ED2E1C8D1651E7DB7278DCC6E69F910C1D7EEC7B9369
67B12274346D1DE154C9A6EC3722200E42295164DB4ADBB1652A3583ABE38CE5
5C584D2618007F44ECD7A954FDD2DFB87F22913A4347A452235919452EE72F01
985BCF3D9493ADCCB3711D7D6290DD4760DBC619E83AA5F2D8120ECA4EED74AB
F85E3E44D28B0D235571C2F16B6692E841CE94683B5EA31E9E8B0E8A152D447F
701B9712FA1A2048F7BA02A2AD093DD4439DD2802E32C10DCBCCA358C9A30177
7283C08EE11FD77BD4C4E854BCDECF5DFC2CD7D09ED923234FD2A3B560348B0E
550C064FEA8E672516730C898A58EA0A7D8FB4CBDC8D8BDE94B402A3787BDB92
45562021F755031268D3CD91C683BC0CD9442DEDB34C100132819EB6177E6F53
18BCF0D9950A195F64FD32818F90BDB1BBC675E93A4C719753BB1EED9C435840
5DEA4E75D61036020AEDB7754226F422E9551CB989C83A4A2F5F8B75858AD3B5
EE0CAE193EB0EC4A35FB78B3EF3A051A1EBC2C3852F0A4ABF75E0DBF780D8369
9E371532480797E5C6302D1F29B003E56B90BC83E6A350169601AF4CCD120E7C
16E6B195372FAE4F5E171592ECF80CDD365650AEAA5E1D52D8F88DD499FC3210
3480163422D6F9CCA70EAEC1D37A6200BB1536CA6A8CB8F15F9144E36E456648
D754560459B7C9D8DB8453CCFADA24266BE73CA1B36B4B2F2784D24BB0B50998
3872C58A3EF67D2D71970060C270EE7CD5782AE0633C33C8E4823681C0A61ED8
98C571006205524F22BC2F6FBA41D80517257610CA9E08C0A5CB8EA75ECA90D1
05D3EE27FC276277140155EAAE420BE9ED0CB1178A77A4792F69C2C8A7450783
352A92D61AEC7801F2A7157FAA847DA5E22F00136F21273615D02D9F5454A017
C6ABC65E4BC733F035FDA08CC184B04CC8965DA246D11B291C3F9A95353F3123
5306174B63477D48E5D1B1CA9524457069D854689ADC65E63D63BCB298D3B571
CEC6E771B02211A1768768D62E330CF74D696E55B08B672A1118DAA72C369DAA
39788782ADE1BC40550DBD475801848196FF59D705A0D83D21E66DD9ABFA4E34
4BAA35CBE05263C4386AD34C04CDA13FA454AB5D18C53458547017249A28B7C0
5C05EFD5269E270AD661DCC7CF1F3C51DAF60ACF4A3A1344DDA6AC0139D5F666
0FA39E408466080E03ADD27601ECC2DFEB5A9335A6FACD86116038BEB06DC30E
D8E89BBDFE4480A36CD4F924E7FDAF8955FBC699FC847F077A81047021DF46F6
9746D3879774D4DAC4B896C6B0DE4A1CA96476032496AFF7EA7B2E24B23016C6
C9934959E2E21D4D9D4C48299331869C565A9CE86B5E99F792A4C09960DCA8D0
D1EA25C291CCED6B43B67052CD04D314D73FBE96443C3EDB23C3544E1DF0BBEF
26102990E06E042986275483553D8A07FE60B2E85D5ADA1125B5E48F712A7BBF
3E039137E11AA20B0C21EDE41EBC7BE24012626F2BE1339F28FEABCA02052072
2A4B1FDF7B12B0C567B17E1E0B3EDC325FEDD473DE05BEC1641B22263D047213
AEDC309C0ECF1B3312511286D8C3D9152C6FBAE2C6354FF6A9769C00988AA1D2
152FB3681A8E54EC3176CE6D4FF9E1672415F7B96061C2E73C547FF148B2CDA2
B90CB5884440F464CD57295728A4520268148135A883BF18DFB558ED898A4B67
731DCB0BDB44E73CD0B7F53872A09437B5BAFE9071A074A158422FEA7CD7BCA5
41A32915539B07CFA88C80DD43DC642E12E3AC1F8D85467B5146B72FD47EC0C3
B4BABFA2AA2F95E47942252534868BC0BDD3AC613B1B5D087F5FE1A6FCCD2AAA
A431B36F55097E479EE8130D4C520E121A74EF9C325E5820D3C9EF826C2CABE5
E2C91A7FE5AC5F81A314DC0521630E4728D08DDD735BBFFAD51EF554621FA6B2
2F0346F9E6D4462EF7D049285CB5075C0AFBDB5FA0B27E7CE3787FED70B0431D
35DE63B672BB20632C49E4671C9168366BB2CA30F4D80E2568CFC90A5084AFA8
A975DBB3644ADB1037620E73A8013DA60A32F061B87B6C7379BBF8DF0C3F7F28
9A4F90A4C4E3311C85C93E8E44E6D65CC7A570F6E1AFC945D06642E3E9F4E403
A22EA36E867F53739AA226E5184AC3D008175AB73AC6DB83C3B9D700E8C7F303
EF9E789001F5E5C674B6BE583E3134464F5E6D442E7D8B58020A01C025DCE87E
866DF89959D51C64C7A1E697B5E0C1A4754615CE15B8E925B0A0217B02C96F5B
A40968213B2BC0322C6866C4B35FEAD22394C0C8BCCB3F0E422F7CA31B3A514A
E61523151C08B05E8F31B235AC5612C27D58DF60DEDA109CB859D96B9FAD1A03
8B3ED3DE2EFAD93BB47BE9AEFF6BE7E3F0549E88CD08AFBE65620344A5430897
F075509F64E99D5E78AF0E2182747C5247FC949ECC0FFF3F2FD8AFD7A819E6CD
2AE09852EFFF109D3B8A2E27BEDA5275F29F181789FDFD66939DCC18BDEB94FE
8B9E0FBDC3E9C16D7391C6F010CA4F84B026E49BB0BC85A603D60EBFE7C4F913
33D6CD3899778644A33617B764922337FB963344C2A01874EBC120B8A728EC00
11B6E29D3477EC8DB5E710CD843327B1F360133AB8050418585ED2A4C76A048C
8AEAE9C9724A170FAC6BCF6A85AA31C1BB79260270BB9367AC291B5554ECEB61
CA3FEDB24200F6D96AD413ABF4B85C04D8BBB173838336C13654E759E0988863
88BC1506053DF9D12BF3C580D088635FD90433C03F373B89A54E8D01944DA9FE
4C01E4EBADFC98FE382B7CA6F56EC07545AB054FB592A16E1498A7C3BC2FBAE7
9527F0C706761AF3545F58EBD511287D38F3CB364609108C991211FBEC733916
1683C3F4D34A8751256D9D4B1A16D4D3E08A67E312A2D5ADF6881FBD66D03721
BA9C1B80162589A37DB5B41D4821DD03215A441D04F7C6F42E0BDB28F0DC702D
42FEC131372A2D75A4AB18ADF4ED2688529F8F5A32DDC76CEB0953DC37D845D1
70CC98D0A48CC3094EA59494FE31586B454CCFDE1CB0F17F31B2701321F8DC36
73EC6A87416143682C4FE94904E5F5FC71490ADD5A64993E91A2E23D6B622779
FC97D1C263411D2BB7F9B296CCDB3BD7F80C944959B74FFA0CA674B3A52B5E42
8D8CAF8405815C5B5497FD0900A840A22B15E6DAC8C7C7F04A2773BA052B475D
09EB09469D2BB86F7BC232B84119A1D4A523B18B181C72BACFBB9F3A3D031A22
BBC605722889B76EED40845D9AFB54CAA90EB44E4C1819F1D9FC3FEBE12912B3
9338A6BD32CEDD4E8A51C229D30915EC1DA818B03D84FFAD9364EA2E2D2AF081
710C193DE03ED27CAA9BB32907A8031492282910DA2DF65077229861009B35FC
4F352864D039E8B2D4E72B03779B8F1B91373F67E464D8057C5EF17F1C3EB72C
AEBA74FCD8E084DAD4004F875E8048DD691A98B1DE92D88DD77E153D0B4E320C
B26E2BD241B993D1925C487FCE04C40BB7E587EB72F327E03E0A941BECC603AE
7B388FE9F86569242FDEC51E0D30CCA1C6F2D38393B14BAA930C2FAE7B1F2281
ADA3F7F72EA59BAEC0A474C21A01B13CEDE934367F083F65E18A59C857E9450A
65B0C6BFC03A7AA614FAD29F637E60ADB2A13755A5048E47B03087A55E15E6BB
75D99241ABD78D79FF72FC0E92F4903CFD05856F457DD15B1831048AEDBD06FD
79BAEAB05CCF5B81D99CD34D142C6CDFC4567EF8239569CA8DBB4063FB54132B
4206B20EC37F753893D29C3D8BE4F0C4C16B48D4B7FB7FA71528A89B1C56F4D9
28F66027A6667ED51E045924E18F0722353DE2C4F614E59B395D1D9823D7D5F1
26D93214B50903662476F2CCA548F5131F2E9E392F4234435AC61CF107A7899D
16224E633F16FA099A45538C9D5AD42883982F3DE97870BB576EE3FEB641B33A
39173CC1AFCDF3D5276898F739D55E1AB926E5F1230538D96AB2484EA1193C61
4AA25C250C84A7ED5BECBDAE3D7C09AF01A444FC71BCF3E2015E6C596E8FCA11
4445ED0052603E442F5EA42D75357E4F7EB0E6F223CEA5C7CD8039F50685A38B
22DA623C9FFB2EB88E891DAA8375B1F1DE7E346ADB577EF31FC3A1776396FEA4
5B9CB382BC332FD121959382B860EC40872F3E7AD5D15BC626ED3A0752A698D4
275D81725E961D50F182C0D09E7B470D9D91F2C1BD1ED08C01D4B98559AD18A4
1A8B8519445360C8081081030F8F05464D998B930B8273CE40C93A4933500284
43C6EABAF73BC1B4BA5328595B3780254A8860DD18EEBD72E9B9F46ACD230977
EE7D7D0BB134C783D8B7162B0D094CB5DD44E6AE702FDC9D3D0920F69FEF9D27
0035F96FA9C8CC081BEB7063357DBB422FEBBBE3B003C4C96BBCD4ACFCE875BC
A9550E20D899E2F3DBA7F211C30A4DC08B2473442AB00336285F6CA589699349
1692973EB657B77F40B56B481E6F36564141D71D0EDDAF6E7780F00DA62502C9
4A10EC87F2DBA24C72DA894861B8C01544C76C128632A537E9C871617B7A26BE
64BCD5B5207541D34D08480F1A1CA16F2E2F888A21C4F261DECB1C4B4EEE54C6
A9D14DC90A39B3E3C0ACD4177CF5F25AAB7D45791021199BE22D89940BD35FDF
BDE7C4F285F9BD614A00DE6825572189A19315AD3C9B04268B6A21389CCFDC5F
C3AF1E9DE106E3CC7AF6AA07CFDE69211DA05FF14547300FFAB1FD3940917542
6826B3AF7CB7E7ED91CB43236FBCC50D20C11C6929C93AA2BC13FC942C261D73
8A72D9EDF590013F0B471586972DAC3915DB200E5ACCE752D0CE0191D57EE7FA
05CC52EAD42FE8977B2DF4970EE03C65448E5F85C74B44F1E8423103611DEBB5
30443E9AEC490116A94C1982EEDF64795C31AE17B3A5F26C726618551ED6F3B8
5C5DB458FEEFB12CFF282A651B6282D3DBD1EA51A98D632626758BE5BFBFDDD9
7C3713D2D2751EBCDB6B4D935084759EDBC202C5A286E5461354ABFA8BD2B6DB
BC8AECB140BDDF39ED3609B14BBF10E66264FD1E6EAE175987CC0DE53C520EB3
7B68ECA8E317C53791E197D7688AC4FA0BFEA1865385EF78B1D0F72CE3FE6E47
5E5D061105933646FF72E8AC2B6D64A6930EF0F1FA9BD328DA2BE70941CC77F5
A98C90F1F1907585979F1578EBFE7790A7AA4CF7F6E97E1A8F30C66C22BA495F
96F4ECD23EDFF11182E78EAC5FD448E92E67031B18FCC2557726A60AC1B8AEF5
E1B803A45C0E6C112F1CD5A5708C65CC4DB4078D6097DDE844FAE64D32EC3EB4
B6A2A82F34478E7C279D48E8721060CDF3022F452D00E6C3F486108289E9F1B5
E29E5C5E73A4427891F216DCA5A69E11B079D9AF78A4C998A375108187979A7C
20DDCA027B92FBDB05DDBC14E325F9E110527BB2894802F6E0E5B3B0B42C4E29
643EC14B46645C193016C4CF81249AF3DD504B34BEBB4632F4D7E48E97C916BF
9A6BDAA24DE24D6CD65831B8E50C195D01DBF687067554D464306A44A49AF809
5E431F91B8EA9D9365223E0910BC6092E488A3488D54C024C9D1D083F1B597D6
41F1C153F22C13C33B10A1FF7AE6EB0FBB6D8FAE9E9FA09CB534581ABDDF50D5
941C63845E8C5B821F557D14FE18094DEF50873AC01A67C834C5B2CE27AEFEC8
F0D89A6B610790FD82681B0435C7EA8C1A0A48D9715AF16356A2A5C3B4C1F7A6
71760EED5D95F602687628AE541FADB35D9A3FDEF856C43D283247162C392D23
E1F8643B0BE5018CEEA86FBE5B2B3E46711774FEC1F7707C365D50FAB4B93F60
4A39107E1AF5BF14572C1ADB190399535DFB0D05AEA2DECEBF3B0A3D71FB6018
521C35916C2D07B32DEC82DFA25B448F8B7AC3262739A32B140311904E143CED
F9EEC52118FECA4C326D9D8B30A01DDE65747AF9A496EF5AE62DCFB82C50EC9E
FD3DB2AFCF4C308C9E0F0E0B6075AB71CA71ADC08570D5DE3EC220C719B63A93
0AAE383328B7794A9FE5A62A71CF04E474D5B60252DD152E0A1694B4EDD77D8C
C208D4D5EDF68A2E830DACF4A646B5C0C84ADB342A8B94BB153B1BA9CDB18DBF
7655DA193E2FC8FA50EF20ECB3E308909AE3A8DBE5110E1D36C2F94AEE23ED8F
2E409FD1491EACC670E4CA4A0DF9A847490B82EE29D475A1E4C28ECC3F08B56E
856479C4B6F4D9353365BCD58700851E5D295528EB7FC619753F044D70B53663
04116296EDC47A40EA032F23ECC57D275B6BC6BC5BFF4FA22014B3741BA64842
BA7EF54B001949483D3BE38D9FB4F96C2C54591C85D37B4476DECE569DA1CC53
2B9FC6714B59908E6BD232187139D89FD28162CF3A762A40310717779DEA5827
40E49F0880CDD248376693092414F78048461E82A63A9A4DBB219F42CC87EF9B
ED29CEAD50C3030B6E9C2D912D00754678C0508DBA86A2ACDAE6B930FB8DAF84
6931370FF1C38399C00B278B799FD5FBC0040B0DB844ACE08F8DE274CC7221A7
51E247D95BAD5D9ACE53B1D3BFFC14B720633A4E83BBD9B63477E629422DE7C7
A241F80041603CE71AD90036144449635059049FC2FE518032FC84A1821D8EAF
F2CB0EA7EFF277DD284D9F65CE83D261129FD3151C5E51D640C742F1EDE144F0
53F55B75BDE37DFB733B24E29DCFA72BC6427E5AAECE0EFE6F4D911B87A6E3CF
09D9297237758B75F5ECCDF503383715F45158FEBE490A727E970BF81334F2F8
43EB703B00BE97F434F30C3CE42CC2A7C10394B4FA2872BB77817D1E2258EB8E
4A11442C5BD0C2D2AE64840D9C42E15EC96FDA3AD6350EB8C383D4A2227B717D
3E2A53E09A4EFE530A666EE9AE0534DDF2ED14AFAE4C5E3ECD95DE9669AF2D60
E58A7295345E09512D622B23F00ABFD6759758A409DB1C7394DD3CCAC9A305EC
C299FBD9A74AC0CD41EFED2D2CC5A3142CD5DADC18411DFC4649C76F725697E6
99B40A3CA81C0B5D5BCFCB4F3C90BFB9F256F3160A370EBA3775F4284E297622
B3655D2AD5151CD72A5836CA448E139EF8FE2640ABD78D79FF72FC0E92F4903C
FD05856F457DD158F60D6E9CAFFC77013F4B7689E4DA16C4AC387CC4804EB8C5
45AB58388D6060D8095361657973BEE789B15787BF12622E98E6B2E528F9898D
AF77BFAF6D425FD2DDFCF693E462EF5BD178D748C3134D3F226155BC9D1A36F2
AFC37683C7175D9456CE5563DCB2642830EF891F67390B5E90678F7F3C2B15E1
3CEAB77811E50A8FCCAD408CB9D78C3A8E085E0825AADF5CA658B222EC0071C5
9FC20ED0E36DDB2C39A425378898A4F73255C901CDA70093DCF3AAA514B1A496
AF69E0C2A56B23FF3DBA241ED043BF3FDCE6F520A16FEC6BC543657B58D17313
B32AAD53A0A17D654540154501884BC744D368CF55C05722A9CA9337B00EE34F
824317E8766999D17EAC8B28132D2BCC01740D5ACBCB0882F35AE8A3E3B1FE39
03A941EA2093B734045A1E8EAE967B6738797AFCF77E5C4A3292CDAB4BF3A86E
62886E826B1E34FEC34A90D3FAC2AF1FB27694321CE0730E2148AD363D40FC75
EB3F94FDF3A7307F6B34819AF5EDC88C5B249C58CED5C6CBCF63B4FD2249911F
FFD0226D540527F178815DA109C80D6CC9DDDAE81CE66EBDEEACBE2D711F4EB2
4E6647BE39F450F947350E31A76FE4BDD1BECB4F085845D39491FEB49ACAAB7F
B1EDBAEF8C333AC729A8D8C7C5251B43F643B6B833A35C168C4F3EC1A6F87E92
2188BB5D80BD50F22325CBA0DE89AB7BC810C8F15E1EC3EF927AD2F5908E08BE
CB3BFA054EA84D0117290BCC7C63376175ECA2FC62EADAB244466F4B62DDE381
2AA8D94831947CDC43C756A23827716E1C783A24F95BD0EFFDCD8FC061A2D99F
8C01DF70C9ED68761C112AD3010556416D3ADEFC9229AC326E3422D24059D79C
EF1D6C55B3F1ED51C694C79F3FF3AC9B19E0B170469C3378D351024653D62366
3F0C3CE8A597F35557085F0408A462B7639B2610BE2FDD5E67DFD5333621BB55
61E9AF3C9B374D73F52611F17AAA550E93CCF9B4A65D410D9F9BF7165218F0C9
0C55B3D9BE5338BD4F4E7E8535ED02349884DE2E55FFF208D6D731C47D6726B7
914195874CFED7C0517136457774C464F3D8420601DD64A4B74F21DBCC8F9669
7ACAC75B1E69BE9B771070E43CB1FCEA21FB89065ED98CEEBC0A2B16D5EBC947
A0ED578B354E369E7AD534BDAE57A86ED294AB6E397A0BDAAF2DEBB2EE0FD693
36E7070E3EF345D6D1EDF0BF67F95A8773FAF9ABED1306F7C5D34E2B7D5A9E4F
F573556CC711C5DC5DED743A7ED41E852DC45BCA016BD810EF756156A332F6ED
55AFB396E0C5AFB06E6C5B432D12DC2CD5FAE581E04BD937DB4BE342FF23E08F
149D9FCF05AD37DE55B277110EC87721D864EF9C47AFF828B76C0C9E79D906CC
E3DD6D2642911FB5137597F9697B34F8670FEE01DE39FE83DBC1A06B49DC5E9A
9FFD534CD2D73904D84E95D6D79E0FDB6BA53C1C524097F7E107000266EE4E1C
968B32BBC2E17B75CAF20CAB7938D921D339FFB1DF79FF1E8C00E7541B2DB7C9
E5641428336BB88CA008EF343E48EA15A6D4AD59014E61259C607ACF39E5B65E
D5AE1081304809DF523EFE64D400BA4D227736637189D861ADE17A55B76D038F
FC64D4CDA9D2C72DF5CBBB91484CDC022ABE678A7F2E298A7FAD967A2EA7DC47
67F39D23C61FD5E78CBFE7A6F095480314679B3B1962D1FE9F7291EB281588AE
F77FA121D1C64E3A6BA529C1116FAC71CB65CA8AD5869CC9FD7C4C194AE8D5D2
0A72540041AC7B05A753D4A64198FECDCFA99435A478B0BC09CF1FCC9E7E83A3
AF9B7752F69281A72D0FDD5334B63F8D214124A76F939EF4215B78478AFF62C3
E3342FC26AAA58D46BECFF52BDC159CE4BDF4907ADA234C6DE77DC4957B68394
7D545F88FBCB7641550C829B842802A4139BCD07D076306C9E6F867EF86DE95F
31449EF355650C284961104DE93C32E699861F30D092FC6BA87AD98A0BAEC9D3
F17AE9CC54535ED87773C6B3A8ABC8ABB13ECC3B249F1878A8F09EF1C2FFD235
E47595EB6986213CCE3FE132472DDC7AF9352D393A58CB456F1E32792C3F6C3B
01AECC58B5FA08F7AC203D58C90DC6F1E8D3FD25D8CA59CCD3581C0EA8EF8D48
8E75BBF597DB49E3F42610D596C1D91A878C7386FE64293B5FBF0A378306459C
022F4127F2E220714EA9C30632A54D8FD7D1420E3F5F92C0CAE0749E97B7A3BA
906F07D41FAF883A6CFE045B60E7795A4E3B23493DED51FB514D0FEFBBF1F536
06B8481ECD5FA685C548E0E968C0D453945F999AB6082714B4EDAFBAA48EE80B
D0A14F4F90FF43CABCCE04E27E3D9DABF95CE121CA4B3445BBE45CB5402826C5
2949BA958A4E4E57F1F0D6391B49519D57A88C79B55D644CAB29554F2E31FD68
43FD8370A36EB26A2B905FB8E060AB87F85696AF202D90C6A91D6AA55A17080A
DA886EDFF49FFDB283EC049D3A60151451D0168D1299CA31BA75666C0E78321C
9CB5060AE1BD1ED643ED19312E207A4E25603286C219BBF030BA70BC3F6F857E
F419616A0D2E3D646143431C318824FC3E5E4B3BE35B72E214974B2B275CDC9C
AE7B507C0A23ABA7C4DBC2B2F72F6D19FA0C4EFE4E73FE9669F35AA9828530AD
A1BB60B87B9F39D486C776B1FCB57C5F991B56510F9E30B9B61C6C54309BE136
E27A372AF4CE5A6460D0B6FD7600696818D3D3CD78604674650E4B066099269F
F7731B8B087C0C1D51C663DBA72B2A6879C6F55EF4503C369946C3BAD318835D
4707E90A0340BB7B6AB94DAA37DE55B277110EC87721D864EF9C47AFF828B76D
3079570C1792AC0CF18BAF9E6FC668A573248CAB68725B62B12864F6E2B0DBCD
892E146924C758EB39B567FD99AEC3B06FDEAF2A75E2CFC5F6D3D16AB9E1B599
54F5A02D6AD172CF9DD1B8DC9E23D1751721FA293BE262D4719DB87520299E85
1534408F39443AA946A7630D1876FDEEF847285162043549D78E2B9DF1ECC680
AF5AEFC6AB74B7310879760E6E7AF5B06207BC4D8321734432C5BD91CB93D7D9
640B9469F723C84543BEE989037E08EB3BA52B38BBE71D4A8624F7E5A2AC0BA9
E61AEB6C096333A409FF2E3952261C0205AF3BC52223C47281BA7C778408057D
6AAA2EFF416F401936169B51765AEE96012B56EBDDEAB533317418A8E967F635
ADA03D2EFF80D461C156D1EC4A3D0035E2A57BEBDC39E7AB9B8A6C79FE207DDF
F6A166F0A2E988FC20F16EB782F9BF109726F7FD19650402E7895F3C8D5E18DB
68271F9A0B3BBA37E6285F2577B16B4C3933695839961674CE2B5AEF26AFE679
0CE5D833A1E4C4ACBA7793B1FA243568C3DF17E4F256ABF14F0EE0986BD86BA8
65BB11FBF008D13A744CAD6F6F5474C8E9F0FA8A340FD5DCBB930E177C708F0F
49D311B306F880D67F16B316CBB5CDF1977988257A0ACAE85F6B4CFED76CD146
8654399362FBE876D8C50485E42E1F62F65694328781509A5C4F020EF1D81AA3
D7E7FF56C99C66C9CE3D5F6EB1C5D7524C125C86A63F7AF293C8646C11B43D85
601ED4EFFB48E83B9BABAFFDF4A50906FE329A1A6DC3B27ECC2018FD2B609EAD
2728D71DBB164685F91D980CC66EAFB9E1E29EFBD9F0198C07B86D8CFB0A7D19
F73EEE205A47785EF3C453E6F77A08AE9F92CED37D506DCD633FF85AB8335BE3
7225FEDD4A7A8C40ABB298B4D253969673DFF8ABCEFE681765B54067A2EC3E76
BBF1045055F162A009CBF703FD54101BB80A110A48FA929F48743EC18678FA41
4D2F33B16A28C4A677F8FF7749FBE31D6CC6B63FC347F5E8ACED4509C0A4F07E
14EF926255FD030246AC687884A3547DA00438951DDEF48BD7D667D4808E9FC8
F28213E5C3BDE4B435014829FFFB91E8663C31910979151A2DE3027DB02BB080
926D3C80C2455D7C0DD3BB0AB14C9FC65A584CBD3C65762F1B3BCCD6BBCD7921
89A12FC9366BA7134EFD67A22B4B8B185A11469E6953D87210584A891361BC4F
FF499F27B34B23BCA2096671FFEE9B7C4B058BE8B5CF61805BB0D39B53DB4486
9CB51198CFD8771A99ADD18E9C3289A1AE43690B051BD5EAFFC3CBC07187392D
22FFE55A492871303500C656827B3B49A5F4F7357F9C88B45034BDCA7C38A18F
0BE1595C10BB71E57F70E9EDD479DE21D36AD692841E8D1718EC76B4126B1DEF
C3C980F9B685AADCB17B47AF0F39883F6536C3E621D99D18CE42EE5A34FC22C6
3D9427FE267051934E366F7C7B2CABD2C65921BE9A9B19F650F767A53A82F9D8
3704FECC98C90250928D193AFC0B77BB85D026CE39C8A5D9B970AC4A2E427255
7C5065127B1CABB84D2439BE88596B165E5DA6866E080C9D1EADB479F7FA8379
7FE2BB8B58C67B5A49AD185BC3487E8535ED02349884DE2E55FFF208D6D731C4
7D66681A8B26305B0A8476187101E350556D777258A7BC232C6D61249C43A10D
5C2F624E2116CC9174AABF8FC76C73A1FBCF2E2FECF757FE7DF45F18E7E2CC96
7C95F21F10614ADC97DA44BD9FA34500F72B7B38CEB8258173258D969B12F44E
4113E500453BF785898CDE9DB44128799C23E1B13B03CBA0C37EC251BD452805
722C04F19A3954F17FD24038848D6697C68C519487D2C0D18EFC778270AA1ED8
CB928BA33D61D0F17C1E7D2A1403C4ACB7DB9680D1C19112C669F8F85FDCEF2A
89AC6E6A8E718F558FC7695D85DB4B8EB762BDA2CCDA2F5E5ADA62706D4C669C
EDDCF7538EACD4A65A2D435DB47524BBB52D5F3F5745A80A303950EF8E8D07AD
70A62B8B43DD7108277DA2C7B9463A89A504AB57C377BB062C02225DCA03E648
59F92A8570054C243ADAB55F1BD0A2AC1D73029F6E0B5F7E93D839B8729EBEF8
8073E20168E2E404C35FD2BCBC0C8B2C23380A3492F87E469A8D4A0B9D7C5926
D1B06E4D4CB67F2E1799CC7AD881CD1277452731409EE7F5BAF3212A6711889B
9BDAC517D8BC6677CC095B22141C6E3172301E5F59D0BA242F5FE84EA48A0961
8DEEDE0DE951FF66ADE17A55B76D038FFC64D4CDA9D2C72DF5CC6925397C3D4B
3BC97F1CC3EEFB3E577C48B5548AF394635184580D8132CCA0AF6111583071A3
40C757238505DF03259DD7D8F3B3D6F433B5D663ACB77850F858A12AE2605171
C47A257EBC1FA6B40E10B77C81889061E66E53E1CDC599E8BF2CE72DE9FEDF54
7B68A41FC346A14E0DD825BB14B6C71F406733E7B606F18BB772EF73E44DBB4E
C891E283ED970B130C0A04502D832AE53000DBB39BF9D70B303E2D6010F849FE
4E17A69F02E7B4C69CA804C2CA66CBB224FBF95B8DE8FB0274CC120718A9ADBC
8BA84C0089676139B95B6170A1856367EE3FBBBB3212CF91BBD728D3FDB15075
E1A6F45197571530C9B48983CB57023DFDF9ED71D4E41598D5D59389340D67B1
EE88B7BFC195EBE60A0D0CFCD9EA63D68BF541CC8CDB125135B653BCDF199F90
DF5B338501403614E907DECA018315715F30BF915A60F7C027C153000E975E75
13D0156D21727A0C5ED8C8CB4191E950DBCCD311A20B14B4177146C45208EF1D
C1009C1E9D28B71A246B043CE44E65F6FC3094DBF0F028FF400BBFD75E4B8650
BD529514561CFBBEE6B2EEAD5218376B67951041CB6C3B3F93392703BD4BE770
072ED026236425D096E84DD009F55A48C449BBE556AABE87F5FF7CE82821390B
2F3CEBAE20DBD257BBEFF0795FAD09FCE908A5BAC001904C1FB4D0A379653115
E1BB3713F94D198424FF07A0D1ED3B50A1FCD29824C5BE799C9F485827AB1033
2BFA0505B5EFA4F5C59B3ECC15FE185C146C3B2548A3018AAC559F33FC9278A5
42AB27CA175059B26DC2CC164A385FBCA376332D27BBFE72E01C0FBCB856474C
1D32ED249BA1FC48995AFC71334854CD26548C24AD096915F3D1256D4F620A7C
BE61870C60DB75CEFF3C692BCD8174BB9537EDB0F8769AD434D51AA87E3A80D7
5383603152011530B8ABD2294D02A125F7254D4E70B69FD185D5DA60AA63051D
D7BE711EA9D3F370A49628C217C17F074E0E1B2739006E78E1E2277050B4AA21
AC42B13A3B38664AFC53F5576EDAEB54B01B1EF54A3589AB493D1673B1A27375
90A0A17D5D39D1039DD72B814A8C332C88E38324BBD2D4042E32532BEB2BD6D8
A3B723539698E5C6EF96832C8915D0C0E3A338E5E8108DC4406159F721C23335
89F78A0F7496601C3DEC537A7E03BD98EE97FA23D768F48EA462E9C8ADE63D57
D8BE2DC7029117D29FF0A396A4A4AB4BB2CEC3DDCAD3F815611D1498D2FC4219
34DF2663935BC91CA74F32E1B62954843A34841FBFEB762EE097D8190E80B9F1
46170D53D5C9B29D359A568FEDB965DF31CBF39003945CD7354A23DB779C68B7
30D263835BE9FA0240382170AD72EA13910335910CA61F5B4984C9A127C4BFEF
9A3BEC10008C71804A8D2F25B580BFAB9F2D969CECE3555FED25AA6231DDD2B6
A02530540DBD7FF0FE7EA3CBCCFFD996C0A40AB5B4758AF32EE889194AB0C6FC
BE00A4ED5E1F5042DFA3B1458EA90D68B2B13A5D4A79B827C93FC547E4730E85
75200F70D3AE26F23322B5F5B1AD9F607BEC57882F78857C87E574E30710BA97
31D8F27AE69883663620836DA8BB5CE31BAA722DDB36BA5642CE4117AC6303FE
FE0AA5201A69D83BC517F09C0F7D604CB840E814D146FD2B6C69375E9E0B1B27
2B51BB1829FEDEA5CBC1FA7A0F008D1751CE85D3677E2992991F8911FC30F5D3
C51682D23ABEC2E24FA835DF271E3C376B5ACCACC9AFD87DC8C6325F0460690B
E677AA6DB7E0250B51932C949C70E9EE8CBEFCC44FE0E4FCA929E0834456AA86
D69CE2FB17A3F10D2A23E38AF27353D2850F28C2C13325823461B49331578ECF
6BF06DC225B10C6267D04FE107ABEF4789F1350905881AD6417E215513F8A822
4D0EF4BD41515FE91E1433A56A4B1C717A38CF9C88CB71E420EDF0786C7F4EF8
C2A5A242E84CFD4DC50ADFEA0C2CB85F421DAC67295BBC1A9A2021B064295C22
677DCCA7ED538CDC0263A623B9667246FC2462100547A0C0F58A5D3AAB51C16D
1E2C79A7488B9C54BECCF570BB1321CA0C957CEB198392CDFEAAB4E9A75A7A48
17071CADB864645A70AB4E3C9DFF0D2BB80CB291F8E334678484A1683D001B4A
49B2CC4717EACDF33AD11FEF95ADBBE87B2CD962DD8D3DB70C51870D9ADD147E
7E9A41383D1E637B2C40CB73B31B54F16384D54058913521F90293851FF9416D
DD82D1A1D297D1973E6125FF805E17D38C76F5B6A4D40817AEEC11C8E1544DA7
4B369425D80E2A4707E6D31DC14AD4D5221259538F0CA3263BA0B22C5E531A62
97609E81A1F0E02D8D3A3C8FAAECF7839D20329CBC5CA4057D1883C61EF03346
81CCACC5D024F39309DDAE771E8F801CE631C747480C8C7504D585BC4A036D73
CCD2AF15033884FF18C918F7956F817281F619F322A3635B283C21E23B4554E1
9407D4A864472E90A42B6F41EAF8E72E41A2EF916B6A2EAFB651D0E490A79CB8
484AE4B3A53D8169AFC52C182BDCD360996564FFC6E3383906248E65DA27795E
FE5F6E32A89FFBC59649CC759617E70E0D2DF5EB9256410A727E47F14F7B9E53
0ED94405E886746ADD81CE07ADE6E6B2935B26BD94ADD389BFC649D88B3883D4
DE05CB5C6CE7C221A2038461896FF0EBC22DE7D03BF71AB474614D9A42140FAE
137A7F48B332D42DD24923B9DEB2FD22CDF770BB77CEA13495326FAF2753E541
370FED9E0F297D698CCA8215BA271A098F840FEB4D405832075CB13E7FDADF31
737F3614E907DECA01831EB304A3B51AB7386DEC1D1553299043885CBFBFF18D
6F663F7FF162F64ED65962C52C7A22BF7AF3BC490D254621308D575A409EFBAA
E5D96D65773EBE8D69A606A0B7451EB3E85EC2F094AB06D427B5E1E7412B3369
336C722015ED76FFD70142E86EC2265134BAFF2BF705AEB13BA733B5C6494E5E
3B14FA09EF6982B1220A197516A006024926111FCE9CBA64FCEB47C459257725
EF093E0E41A764CE15CE5FB25F9B5007370486152FB88A27DD9F869E42399138
0559772A4BAEC8E6A32DEEC19B54F971D5197FEA8B0CE24F5AD8FC38E6FA64F5
DC5F5C77251EEEC97E68343B19F132F844FD60CF31773FD625E7BA82799AAA89
8D22AA1652DB46555E053696443F9CEFFEBBC29BE7E6F986A1A42CACE5555E3D
323D084FAB03EE96EEAF58EBBF45E95CA7A662582B87A0AB15EB0E3391781F4A
AEB20AC2440FF9CC43F9F2709E1050E430198D4A0802AB1786A8947230CF372B
F9E3365A300B1B5CAC415B67E99A0DBF8DAC7B5F39C90745B3CF0A61FF3EA499
D0494AC6DEEA63CEA2C708BDAB621ED37F36B78B774D7D5C819FB2C13A6427DD
2C92073E5F6A2C16984A1FD32AEE5BC8F706177D8B81EB0E0862BA43B85A86AA
49C57652C1FC51D5BB79B026E2487EBA762DC50512BBCF9B42A3FA000C2ECDFB
697226B7CE6C571106EF6398CECB850E5687F1307D70CD400946D99DF3DA042D
07817D5B6EEE1D265D053E2FF9EA84774F0860C99B50EDBEC3980B0CCC18890C
FC9820CCC2FA8A0D50E67175C8EA5084E4FED0637D79FC8F79C31586588F030A
8ADD95AD49D2958D1F43234E8313B88AE5740C603A20D269BE9F82045151E28C
FDBC5AA5FC3DE14A8793FE43F32B0DAD0B42E128E0550738740E4B4DF3860431
CB0D60799B44D28C392EBBEFC17C5AFB7BCF143DC8E45F53C1E5B144CE365C50
57EBC57FE82317DE41244FEA464DCE99DF58DF6EFF5F8E95C4D7838F12914939
E3C161976C14E6DC400011459478D62521D6F189FC8F0E01E07260178DFBEC58
7957C26B2B1551D7647921828BF269ECCE011D431D1E90D75AE565E857D69257
0D2C6951438E3BD156E6174C5C555DAD5EEEB9110AE468D1CC587A732BBECDAA
DACC89C52E4241BB747C37DB43119263FD591E7BA8126B689964B87ECC23E83F
19351612FB0B1E70DE02B54C1B985F03669B546C110680DBC9E1DDE716C4A599
73860A3510E482B8F1F7BB9DC38C6306041A2FCFCC9F3776F03030D6C3C4F978
5345DC4DF5CA39D3651D4980E97B22C939E53FCA5279E6D6CB8B00D4CEBBFBD6
07945430862ADAB0BF07ABE1C88808D56505A77E31A11EE8C9681E3241D35742
3FC99A860EC434B5B257EE5F59881DC2B5C1F5B4C78F9D234E2B8BCE975B2C5D
2AC4BB0ADA4E76FE8170E4BE9EC3AD1CC27F39C878DD86835717B057F36FC89B
572F045852D1C1A184E9C1CDB236C429AFECE8A5A9273AADBBEC8DC3E4DB074D
F497A0A78C62823FF461B999C85AAF3A2346EA93FE7B04414B71D626B84A999A
5A0D92AD7941AE16EF07E5A3F279911E3F7F591A28052BDCC3C2BCA83E140FF0
26BA19580F998DDE3588795CB7E7D31B14B33F5A1346966AD18CE43609C4B17F
3C0B767B454C78CA2855D18CF0C5FF21459037FB85853368DB00DC1CB93B4788
83A74F9DEA8323ABE3BA4E5F75438191A73BF6B637510D0C652E5935691379CE
AE3107D7C04F449AE7AC8CECC9740B2C3C8AF32066397C95AA2B88FC4001E690
86A3A0896DD470D4DC49BF5D7E85930282F102E66F4AED26932CB44AA85ADF6C
9108935595DA856256A5356180E60A1FDDF6B44A2552C20E9C17F1F3478D685F
972CD93E6CE310DE9062984F6951B5AA2EBC98536501922110882D7ED7BA6583
A6C2EB5F2781310B9F71EF1D05A871DC118C488F11D9AEF8DBAB34EE26443381
C8DB3FA8EBA92F0FBA35589BACDEAAFEC6E0F31862296F17D9EB21394E7C1B7D
D226CFBA55A428BCD167EA1DC8475192452D4DEE67471AD76F25C6AB3EED42FB
EB0E316AD709E0C9E2F1802B93E6208D6555416F71253007B8C2A6733B886202
CB9F5858F7D48E2C2AA8284ED768B1555C02A867BD9116C0E58457A66912291D
AA0915E7D640105F3E37FFE0356382226C92B9537DF8C4F37383902B4E16617B
34A15021AF9FB97DE82874FE58772E82FEE206948CB03DEBB636E211FE8040A6
C037E088916D86F943E2F31BFD291BEF04BC5891D8B2B9580922A59B2C6C09DA
9BFB01BF9A46BDFB9AF16C28B522C549C8388A64766240D13AC5159D3E204DFE
881714C36315B9C281B5F44ACB5CD2EDAEDDB0C05EF9B800AEA43F36617296E0
17703A94DE4C32329886F1F84CB90EB3AEA2512098FA28C6F2581A3239EC71C1
ED8263707E8AD9DE9D9D3EE03908AF2CFD2E4908981F51AC4E66A3F826101D74
DA0C8ED4C094D0E56E9499AD2DA32386E6AA4B811FE015A6150680EF84597F1E
5486FD79F660C4DD1D5F3D7F7BA6F533D3AE96EF148ECA646A8C3CC88384C7E4
3AE38988F36222BBAE11B6FBA29AE0A974673C2865DD78234D8B851D3FE8B9ED
08ACE959392226C2D9AF9BCFA3C3E5789D5B364AC04F853C9662EB595EA7D095
A30CEFF4374320C4EE81FB61511D39BE1ECFCD0A5AC5D5D2AF77D33D764AAE31
588108081B45B0FA90778B9FC5BB4844563C631C4387E4C939C9290464242FDD
2586F2C4BB86FF0E9EFF3392500F5584053B18D3FEF7BD471173F171FA132A7E
3A8CE9EF8104E51E1A5382BF37B85E5136962CD76766AD76D2B9D320CBD699F1
5A2671F123D485799661E8A45D1E257C3253CC3D952AE94F30C00D2361123B85
3030E095D536274984B73FD1A0039F86E8489003F84951DB804FB8070D31E6FC
60F8C7961BA96362CA771E3DB9DFFBD870F93163CFCFF3CC0B052242B13E4FEF
9FC126F2C6CFDE985F7F3F727C28A8F51540075E8422CB7F2AF125AFD821262E
3BC94EB6977E0EA86079E7BFC0EB9E699F90281D777D34E79689E51189D62EFB
BE20044B7B8038A4A9CE91B2B4158622C50E536A9EE689462B4613D492827333
DE3ACF7862B620C9D67B61BF20739B025AD193071140F5FCA7025A2F8AFCEC2B
F71E5668383D1139CFEAED6935F88625620CE2D7C64250A8F2D0FC7D1127E46A
9E6313BAEB3A19493375F93917170A43C500D6BEC5D0C7C8B6147928A0CCDB84
2F2F84219987ACD79064415CF099E2D5173413B319D17575329E62A135327B73
C291210476CFC5FFF86C197EF11C56A85BEE25C61EF24054FB0CA433D872CF0E
16DA8BC1AA67E5337538932E676D9E92111587231C3F49C2A83D751CE16CB775
57C39A3514B89505110D2DBB9220CE04B94F73ACBB4CD27975A7D842654223C3
2BBDFDDBA1C764174646AD7CF22497837AB3C2B0B2A85823E7169DF80E23A6F7
EF4ADA5F16E48155E7EF2DC1C36937123329824946320837A6F8F67AB3D3FC68
C8E444AD667F9BD757CC7D708592EDA8C1D5D953C8ED0FEF53FFB91E213252C5
8D39514E9BF54E7B0F89A114C17D7BB7A7D771AEA61BBCCDA82A297301E09707
AB2AC90AF731CF03E0FC58752B3FE0BF9544122430CA8122B523648D1111EBFF
810B931332B6D22D8E468C62DF2BC059F9E6E936BF6789A39BFADB79BE2FBC90
B06B5CD552932CC7FB9769F4F7B6C08FC6023222D9FB9F4B02A814FB05996D9A
01BC263FFCEDA7969B5ACCB0F33CE5A0AA7E7664C9546524A5EBD615F7C5168F
E698970152E794194E97A1EB21EF743E064A53A585C8FBDFBCB680BC0998937F
297CB8632829AE73C4E152CF08CDCC2E483E112DAF52BD9C89C5509E0B8D1357
4FC2C16321FE446CB294E9511AA1C5BAFFD1B11E93F60FCF857C7BC2649AAB40
42B77A195624968FA19415D8AA4271BD58E19FE93AAA4F12C642D0F539064B79
C1B35FE3327C5BA34387D20D1ABD88802C8B92BED72545CDEBF0AEC2D470031B
710B535A8B0D70647B50227D19B694385AEEBF375B074D3457BE61468B5CF311
1C0B8A3BBD60286AADE06BFEB1E828255CF22D3D1FA529FE33A71FFE65DCCA47
FBB31392FE4F5F94724C1B4F94407B21AD14C38A072C6AC3B3D16BEE28177D4F
FB06520AFBB10240A344C911FF165960436A8BDE59944B035538FB4BB86879DF
E1185BF04BBE2AAD1FF41882C62697C409C18D1CB04194BA82F9C63597B3E0A7
FB7F2826B6E7A49B3146B6996CDFA77691D2A96C86CD62618C937FFD461A7C68
B455F4467F9DC59C93CF07080F5C472ED4EAB880A7A059B91756AD1171ED381A
ECD77F4D887AFA0963BA6A1CBB1FAB162679076CA54F2A762F64A11900664ED4
E6D4DAFDF0C64F9446C356248B627D21164292A62CDA15C49DC36F749242714C
6D0EE5AF262A9B23992492626D803FE071A2DC7981C82B896682D55F6343E2E2
1E4F330FF9D869E1F2FC3FF4B51D4F8CC62356886E9B27AFB1ABFE628A656776
8FD3A70D9ECC410505B03C28B5A0D0B0C052CD7679FFFF591C227590AFB51717
8C9DFE59CE8B036E3B067B364E0F7072DC1826C09695A77009E865489ED903FD
61FEE4772F32C09890A2C4B2232B747552E1E3CA33F4B00DA53B515C279B21E5
96A4C38489B465FC8AAD6D7660054DDEA055239C76F4BD11A8215CAF3D49B84A
FD965BF021D6DDA71DBE46014A352D4CE11AA45A8E98921EEAFD82A9516D47CC
0D6183D68AFB18890918B52AE133CC3977DD3448946BD058A0C86C7D9AF6F3A4
EC26ED6581AFA8B6D5AD4F28DD5B022349F9096B6066901ABE065899ABF96DAF
189873BBAD86DE9A708C950A51B8BC5DA5D6AE5D4BFADA6A5F92A1A038236D6A
63C0650922F21520BC9388F0377B43E5DC9DF903D62C8B5044530B33095755FD
69A33D9E78BB5FF7B27925BCE1C797FBE313E2AA15FE971031E20DAC566263EA
5133CBDF3E37A98E26195BEA2BF360AC155E18F376175AD2165FFEE1F7B1F47B
D893BA857E25E91F6E379574ED93946224169065679D58F0E3F0579998983964
2D041F6F00CA4D7B61E613C440A686E566386C48BBFCD4D9039B59C3CDC8D90D
AFC59AF724EA4A600E126FED9A0BE98145F8D823FD3A1C8FD75D73E73F25FB75
6AC34A9A671EE439272AC4AAD584B6688D0DBBA8BCC32D52C3059E127A279AC9
D9A009793B1C1FA056374433FA2129B1301EE091D9F7A4D345114235F4BA2895
28CFA3DF9F5F7175382997B8DDC1BC31FF9BB31C292003ACA40EAA178D11BE7F
34711A204432DA217576D98719C99D9BB3D1C77BF9ECE6A91142D95593EF9FD5
1E984FF26E329CF3D929D1CBD7B767B02D64F2C1E338E66C738E5E56E3EA0BB5
CE010201005AD0317780B06EF63A012F6D89A30208BE14B7747A8C2FC981C859
014644862B91D09D95A31481563A639DC65F914562F1933143160D1328098681
49271523CD805A322145A01ED56434EA4CFBC6F54EB185FDA7817CD383437E1B
961BAF0ED7490C81CCDB1A4264B946DFA79309A7F87B1F8055C98B85349C3A72
C5F7B479782C00EC18B985878701474825502CAB554CA4065043D5B38398C388
47C5C2A4EBDDC4878E19695600FB49787563234276EB55A8EB42FB3AF8A8C985
BB4374AD1C0E33D4270296E3705B48373EE14491A03346BB7DA151BA69722BAF
78DE86A40ED5DBDE8B5E537B68A693ADD2F91D5FCE4783729578878D2C9CC4DE
CF246DFCBBD6E0011E4289A675DFE39DF546A3BFF3244C90733BA17E429C4352
233B804496666ADAA0D84BBC6A705A9C77B52681FB4FD910C8D37E7BDCC2C074
C2F322737FBDE1BE1EC7065EBA0B028ABD6FDFB38BE88C6F5D704FB871BC47A0
418C77FED6B293669B9E9683EB4C4567A7BE6F097B40A32C1045FD7E0F586CBF
2D967E468B2E8E763415D2C7FFE48987D716DCFB6FAFBEAA28B0A27F096F99C8
4515CFCE8A2DF6DD952B33819FF58DC3B451611B1DACAA91135FC80B4FA1AA84
73D0572495EB8FB49019AAD648525B66C4DA164EC2F64DD3E2383554FE5F16DB
AF19B455392EEFEC695D829948C67FB7047537C33B4B59FE8B091A1CB7241E18
44B319D5C1BDF34A5CD888E13C5F6970BC17C3539B2B2BA8850638B5AEEEDFDF
9EC9CE6DD9B7D529854E9CA62C62AF22CCE26B31363BDD6EB7644258E1A49C6B
865B75EAA21C02F7007978FF7159E0A74E3AD3F267F646450EB7DB5799E8120D
2A486245E55D5610C7969FFAE73E095BF64D523EA5C09FE173C494EC80191219
CEF2A45184E57FBF18D08F3A33EF52E6CAAA53CE4751360555149EDEF99EB70A
B8A20C2518B02627ED62B8EE1C63E7E9ED6A4FD98F6F839491020D2028768461
C4F539111C09E51DF76F3EBF68C51607D588F74F08626093D9491E4BD2644223
7EE2121C14F116A1114838B333EF11A87B3B050C51BCF03328E2AF74242014DE
38609AB9B1ADBFD3E20C6EF4140E2744364834CE13CA9FECBA2DFBDDDAB41A10
58A0472CE2059E675557E53A7F82EE005221FD82E4874C1052D0EBF84B62EA1A
E3A900879B375DFDB279144E9FD272CE6A23BADEFC0FC80B646A2FC08C849A9F
CFF7F8EA237FD355ACA0F21EF5CBDFCDEF457F85CDC6926E84918A39238AD5F2
A84C51853099A987EA39A677F38FD2923A2BA43BA9064D59C171AE87BB22E474
4AD772AB4C64DDC84B9308951D2E3D03E1F9908BA097A23140E664D88B56E6F9
CEAE61FBB850C398377A8B3C4DECF762FB6ED54CC9E41E6562CBB4F3DF32AE56
3383014DAAFDD92534DA0E0876FACE36FE6F39331DC4E3A3159F4364C09B4071
FAC531D1CBC64BD28DE9517C0A6B7E69B5EF887D0B6044853C5346D37B79D2EF
02E958DE2F64C1DE6AB9D8CFC684B943C926F9F9276268ED0F22FC3BED3E7A20
A15D4EBE57A5FC3A7182C58F366E8E98C459B715DD5462BA30D9734504DBBD67
3F79CC1DC21B27ABFA53F4AE2E622FD9C63A7E021790A1443758736475A38D8E
5132C5733B4EB0AB41457847C5EC09C01622C089AB3CB216A5C27D61D073139B
BDAB6E38DD0C8EA24C71DC0D1BCAE5CC377E105C2E5552F6710622AE17C4513A
CBB00E392472C11F1949427CD9686127B7EBAF076B4450D4A5C230E43E83C1FC
BECD57336E8D6104DFDA236D8D4E7B48130E59DA01E46A79ADAC47F93E3E7D63
B8DC952C181A024FA45EE3BC19A0B83A23617EFB674EEB80B449727229C51AC1
80D4E0B49CDA2AD518E0A4E157E949296F4F4BFCE07C464B7E26A3EC22FD954D
8F2E98627D5C5CABBC2EFD97442931AB6DB7538DDFCE939A2CCC094AC64D8234
BEB4BBDD4E0134FACCD645919FE70809F527C12FFB5E7EF526C550BEBDB1E4A7
B0185AD1141E7F83BD54064E25BE15AEC63EF577427823965F9090FA47AAEC45
621D3A4BD9F0B7E0B278A1560702F8A06D2840649255664728596D8E8033053E
E101BCB7B0D138205E1306A31A05EA7775700F4A6E371DF22655E13817F9A12F
F3ED7C6B4EAFAE848B962866A572B31491F9BC5E58C8A93855793FE2798EE554
3D775A3A54F98A822ADDBB620C0868AFD6C9916FF4F83185A2B9793C0F5FF73E
6602CB9F5858F7D48E2C2AA8284ED768B1555C02ABF30C3FC721D2AB878551E2
30E37FE21382B89450EF7F5CBD80228DBE62EDD18DAC476DE8F8ECDB94457791
7AD7132653B00D7E484A88A248FD17FF0E7A075A554F9ABC1DBF427E51D901EE
474FC82EAF8FDCC119B80A5EC07D651EE32B2425551E7F03D504F27BF98F90DB
C75FB6B0A4BF735C312FEA9A1AC7289E4B43B953D2EC568762D12FB302659522
BF22518338243E2958069A906E35BA15AA7159C81527B9512C40DDC92C489AE3
1BC9A983B4D3D3A181E59ED9410F4D901B9CD2061595FB27C9B1765AC7B86DB9
C4EF5E16FD6E2A4523B99D267AA8087514B726D9A5930533FFBFA7D3873F8ACB
0692B310ACA0DC6F0249234EB51EB6E52C6840365835E3C5F9582E3BDAB20672
53875DAE598DECD3C4C26E19284730BAEC36E69C2F2AF0022CA7C9CD80CAB18E
2F8F36CEB9CCF1F475C6D0892AF19D50CFF1C8E6F121CE477BC13FB3235F563E
3658BE14B4C59A1AD1EFBD0B82213FD463BC757AFC8750D960797BBC187FD331
34CEDB86D1A5992304E473A07CE535607DB32A001779973DEAB1CFF05FE0BED4
795D9194F80315901081B98FF3AC06F5C24B6A33DC92C226182982BD27F7D36A
F358986C5F85EFC3EBB3655EE11D8832F9E827505B27AD12B9AA2BD0774AB3D7
4F9B3EB9C8CD94D505A649104701909913270E0060FE23E1D83A2DD204C9F508
DE64083AA7CD0A8F3C0EEA6E6D9A01EE3E57299D8A4CFC9F68C106D0A836A54A
A3C6F4E4A9AC0308084AC2A4D0FD15EFFAE30AF47621948723B390226C089493
E3B7C7A3BE9AB31FFD0D9227EABE6152905454CE0EC7494D4247243DFA8385DB
C5760B397F0EFC678E36BF66A4EAEEA0E6B037497DE8AE398F0ECD902E34E26B
D22862FBB603738B2776D1C11C1CA08BC250C82B4D1593310AB5CF3C2E2A3768
C7DCCA5C9F6BC48A4E817FC8A4F76C9B6DD93C12E49D04DC071AD33B11836019
6DC6527835848FBD6FD2D909977882A9A1E80EFBD820ECF07F9BE1DA54BE9178
4B721065224C925E7F593526AB218EF1FCDAE565AA6B7DFF792E33459D996A28
76AD4C86CBB53775A35F4C4F79078BE326D09EF99C25BBD192FEC633F4D753F6
CC0F03177916551AC63C78F5024DC9E3311C85C93E8E44E6D65CC7A570F6E1AF
C945D7CD83D64E24F517ED326030FCAA6F3262DCDFCAE93B9FDC3CA3A8571D54
EDA7D7E39BFCCB87122F41D6F72A72D5C7E75A39906AC28A3DA273EFEECF9175
8E02FE252D1AE7BC6B36475154CACD25A07C74FEAA2928802611B3E6F2EB5C69
C1005B864AD5B757C661F15531E735F35D57B4C2557C27033737A162B1C30CBB
B59EE0981B0F6F83CBD21CAC6764484364FBCE6D701FB389257B8BC393CA1BBF
12F6BD2C48903EB29EACEC9D81382A5996BD2A9B9ED248CA6EDC8DC08C7D4C9C
F06A7107F844B8FC493EC72ABE60B076AF8B8596F841E42A5BC60D93D42D0C28
4CBFFD7C6573996FFF0F45EB89F518E225C5ECBBBFCB7D5E1BDCF7DF04DF478F
135700B7E80ED61FBC5624B90F8DCD06939764FEC56AF0E96BDC8237A7FE55DF
98DCBE60666EF11D10EFD7E85FA038927FF295E0CEE2DCFD71A8A10F8AFF617D
C5BB52DD2ADE463EF4EBC6F97D187D7F790F6618D40F813095C5B9165700CF94
403B23B2B7887A0F94B02C699996D6947840CC115F91F9CBC391AC7A2CB19FCC
45FCFF2C629545612739FABF864912E8C6290D18280CC4867949264F207EDCEB
6F5EC0C552439FC2E9F8500175F4760E43CE6C8F041B79B420BB9E031AC71BAC
DC390C32A10912E41B77C22EC0D1B0F31398B13B3B5973E171D9BC7ECA7FEA2B
7ABE317AAB1C982F2624773EF079C73C113F7F0D00B0C41F91FADDE2CB392E32
CE2B47C2E6FB9E7D7A57858FC794317654C29D2E5AB4FE0B53E041A384BC6836
3ADA664B9E0E22F31790506872FCCEC8D7538AF44A083569519AF2F597A0F043
F088266C4C28FE4D8F7FF429F96D0DCE41EEC1EA29EA44F73EDE22D9433F0FC6
1DD06BF1493BFD06A184A94E7EC18DDDF3C31130737273FFB6429F1A3DE552BD
D61FF284641C0A26CA59DDA6D011F79FEF550DF52C435281D07E30528362FD4C
1BE830FB6349CF3F62635784974407FD5FD0E73F07DBADC24085D141C7728748
B660D054057574CBBF19D30364065CC9706434B12503163A21012A6EA10D9C8D
741BAD7871776B6A4EE938452D5294EBE1BDF98378FC18DFE2E7D56C84071892
EEC6DD71D71D6EF0FDF64A9DA04DCC501580BD13E4F0D697BE7A67B481D71265
DBE5375BF68D3E054C25C11DA4AD8079FC4D0B48D302F0478EEE42B8FD9ED59D
08692E6DE5CFE7BEDA2E67A0EDF374A32C4DD1D61DFB19DF8BCB741FCC90E115
F979056CAAB4BF04573935176AE382C902AF1A86C6E9E498361675D2B472AE38
7E0EB047051BE634D62F6F164085EB045535E44A641819B498D32C9487CE5089
F7ED4D8217F1F0DB37E3FF64D500C91B5F5A7979906E7215776C277A08749660
1F447E90793784480596E2853A9922271DC7E6EE3F0F650AB5B8E81DDFE9B58E
CB933965934C5CA2043B9B0E54EAD025EA62AC3112B58FAB45A60654591AC4B1
48425FA7E5C7C86996B95C59BA14D3E597D9BD47E5D3B31772A0F53859FD9E1D
5455234F366F8919BBA377177966F80E201CD7C570A39F1135C4E9D0CFA54B5C
45CD1CA9C88F1BD8E481CFAB40DBAB63E602D113C81A461ED958FF0D31A0AB5F
2ADFF816D65619DB7368927E5B23E102594076026355FDD1C3C40F2D73104612
FA58833A4EFA2E8398E3DC0B975063CBC21192C28F980C58B6ED119B8A271340
1C2C0A05FFFED46A72C245F7529B8EA55A038EDDB6CAE365F6E262500B0209CC
A5CAD7328D8654B7678E5CBEFD24EFAADA5632EB660B9C433383CA46EE9C71D4
3B800BBB94851B40657C4251E28174F4A81959C7F63EC529CDCA512B82877CB0
13CF131D789B2B17B64D34D51C34E6FF73120542EA25681E01597C9A8068828C
2AD9DEC1268A9B618529F7CD8EA0B82FFBB80FEB9F71BF086F517D998C848242
9C9098EBE6653FFBA886EE977BB30BCE49F1BEF302F68197D1C902409E2D391E
D3143A205D2E64590861B7EB700A41AAAE98152F0C2297B3A0B9FA6D0BD118CD
900AC231610AB97CEC9FDEA056D705D285B98AE381EDC905276B7C9BE5BB1E0D
293A0032D6CF19AD21811FD0A4E11C873E88DFFEBD9DB939BF23B27B2DF046F3
14DBFE68DDB61B2D4B98451194C652A189F6D7F922B8592EAC05D8CC0A9AD89B
897410F1A272D122B1BFBEBF1123C036E02397C332F85518DF70AFB3DF76BA83
E7EC6781315DC47D24E2CDE66BC6BA989EBB3EC8E44363ED00547846796248FF
F91FD52CDEA7FAF96105243EDF44B40529ED81F18430B571D1DE58FC6F22A3C5
D499DB9FE842BCBFCDF9A35C2AD9BC423E9CA4DB019ADE5687C1F2603F034B24
723A954072436EDF60F30CD8AFF952E9BAC60210D1996B3C557F2EF918269225
5F7A98CE9B93A645D041EAAE60AA436618C281E0A0E3B3A9303CC927663E45E6
D8C6DE37E623426B8ACF222C196AED0DDFA568EAF3E07301BFECB764BFC86DFE
3CE45E0BA3ED4B504D203E2522B47B4AED2D7507431FA021B312A37FE8ACD04C
5388B8892F2DBA833118BED3EE67EB2603E21287761A7386D19E3FEF3A65E4B3
A979663717D9A0A9F91ECE47ADF5F78F486AA2561A37676AB20FAEFA93C3F0A0
CDE3BD4C2ABA9816226EB744128F41014C24426A003C77DF9D4FE71401EE8488
638D7C483D983B49B04B94CB39EFB1C2B245CD622A4B9456FC899830D6050CC3
237D1C26008EF53B1D72088642CDFBF5CACC3AD41CD762C52B76915338141E9A
B69F495A99B90D08BB5BB166C8B328AA2E694C3EC4C62D25B1ED56B8E0DB87E2
AA9BDB542F5356359BEE3F8AB635954BC10B7C0A32903B67BD558BF9C884BF7C
D06926013E42448A78501B48AFBDD26AF2D989559FDF570FB390CAFF2E9A33B9
15F473EEC8A587B776F597724874212FCDDA0248DBD58A8A0BE0453B6A0E1613
EFDBA05F2F56151259B17B974C56D8467780A7C3D88E9DC831DCF5595CFBFC2B
4BECD311905F8B1D43B996BB744C3CA7A9E5DEF03CDB67F04C1470E08C365BCA
A589B9FB46E97AB020DD38D71B7FC46BFC34AF05EFE033CD1DC39CAE40A9346B
57C8105A377A3E16A0C180F8EF599A7C4146180B615B9585EF842C7E6950C87E
B126A88A279B73A0615F840608A17BA22DCA7F5E2DD56FAD7828E5E203F328AD
955AB433987B22935383319A809EAE7BCE9A7AB5B1E77B1B8CD7F5618619ECE0
94ECDB043188968A9B764661916B832E25CE49ADA5BFAD178EE10572D29BF719
BC6C31CA404A9C2F3983A42473FC98BE95AF020AAE36B57C5244013011F77091
4EDDDCFF8C54171E3379E1A86B0079EE25B86A0C5C464F9C2D7C52E02D7BA9CF
50549D78F86E725A9FB02147E7E7610D8A1D644FBF257E8C925FF8F244F361E7
8961993397B8926F0E4B4693B8DB4AA1EDD6D94926CCC30F165E2F50A4280C83
5E316588A64A0B14D9A6F44932C4B0C06A03E6F0AB1F2B5C97A5E4566EB1A48C
B7D1A07C76DA47A746EE82204A98FBF7A1F2C9A00C6561DF4B4C685326CD8EAA
7D1909D5833FAB8D6671564F796B070A2B34F70831E8490313BFC7599FDC7A3C
F5B6AF26E79DF062A40FE561D5CD198B29532908C4B94A66B22ACABC95B131BA
7C2F1C1F08244C3460FAA3BBC9C5FC2DBA24698BF56FF3A32F6B29B0EB5D5276
E4D6171BD9AA3BEA81915B81C56CD5055CD7F526BD757A006F96E819D05B97F3
0674951C27062E320654D6D23C194BCC54B5D0B529CBAE4AD98688183FD9E2B6
D862B755645D8DED5E4E059D5534E951165BE6CB131EA371B8148137CBF8B8E4
2F059715079C80C962D5D7BB0BC394A66DE390DF06504969DA2A6A0EE7DED9B2
EA37BA2C137810954373AB66CC420B563DFBD4C87B0C94C76E065F5F7F74DE46
1C7DF6560579C4F897117208399840C19930A68EB4655A46507A85203B5BEAE9
EF8D735BFB4715B7E2454D0F598F0BF61BA5307C62E49A4D20FE29087F469ADA
8F5D5D8547404A04CA819978622CDD235325B07090D8770796F7E1B4665157E1
26DA4338FB27A18C3E1F59CD6063225001812692D4A464298E5767D6881C64BE
717E10AA577ED3D5590491467F1536F5E8A1E4D3E727B1688F745FFB4F9E56CD
A8BF4732B014DA6DE060318DA4E5B1A2E4808D2705FE6F9CB45F0686ECF92650
521E67C0200D1BFE9BF830D264F0C3873D52C25C27C3C771B5531D103D50C16C
7ADA4B3A932692615492C046257CAC1867D98E969FB1F684291242494E52311C
02C8A34C0A58AA3E02DD3E4310B29A262C08F61713E439B6E14230F7C3051CA0
C559AD8DC9780426676724C864184A3E809D46E3BC3BA66933054518026CA3C3
5805BA4101E5B57F5C923F247467259BADF061BF5F70E4BA0CD7D2227F5C5BDF
63430063A0E77220CED0EF8DA2C258BB069706D9C6951A195027DB020897E28D
A4C2E24AC43738F84207EBDE856A628A9B0EA9AF81B6CF75F8109E9C4CDAF000
5B1825CF51D3CD318F065A9D95FCFED1AC343C31DEFFFC23C14065D013427D28
2B07510C3A6A9597B5C69D8F75E14448B512388D1CF765ACDCA5950D6035DD2D
098B5C296C2E3794AF5BC45F581841847BC67F9DEB35111CAD3EADA98518DD60
4EFE6715F50897F075509F64E99BEAC321181170BB05CC2CAF62830C2C50EFD3
4C4EF05D2DA6D26CAC14916C11B1FCA1C171B7B183EDF89D009DA184A7A0DD23
23D70F6BC699CDA42774EA23C62ED02160A13F5DB00C952DEE1F6CE6A0752411
EC61354347A6A283C77C2D7887B361297AE1D1E38DC82512E4336F16EE4B36FE
13D6FFE686B1CFD0EE0B6B7F873F7E4A94CB6E0E97A927AEFF1F1FA4FF431058
CC7C5468B27A13C584C96F36E9033E6406E6904C934DDF1025D0C7DC1252B14F
F01D2B6FFBD4E372B3B85E00C10EB6B5399326CCA603D337AA1E47A08C5A40B1
08AC669CDE8F23699C46DE51F6F44F8CBDC82A51AE32A4F5BBC03CFD2EF702F1
F72A16B277AB18DD59F18E3EA673CB87130BBB537D00C1F5165C07E3D267B89E
436A816CCD32E7E044FAB2E17F6874422629C08443F8B24AC016B8EF496CC4D6
CEE647700DAD2DA776EA703E6EE873EC04694B3E8243B1847292D7D4C7EABDB0
E4064184CC0FDD22649DFC2EB8EC45E5F326A3FE4769199872A70259B37B6D90
4FB0008BD647A448A8CE29ECAF881590FA30DD9567FB499DEA14079C31D65CD9
8FA769BDC5386A26673BE7E3BF825235FA140CEF7FB92ED1997C08FC0F939AA7
78396E977008090235A6078F8A673AB6F3264280B7101D384B1B43719D207E6C
29B69E80D205669E929607730606CFA7786F12B7CB19D5C7ED23A3308BC012A6
70F78AEC964FC928DC4EE33CD2B296D91FAD4848A098ACCA36F24BD9CCBA13E2
CC6D8257D9814601AFEB7EAD595A6AD78FA307C708044BC078EB8BF412CA3035
EF9C2C397740F24605882F6C5C0259E2410A72D950C9A90DADFDC11833C93823
FC4992BED1A2323DAB45601994C67F6A07F238E7BBBD6ACD40D03EF76649A6AC
929DCD3FF06B9FBF62FB189BCEE9965967502E946FB13220933FB217C7B41D72
1BF4524E85513A94BE894217DECA2F18BF6FA92CFB8D5F24C619E8EDF5D67770
223229186D86186C4086912C0574E3F52DAB2F21FB94C2D83DB87BC60B681295
05626EFF415114FFBB6E4E809BF9C33329ED0A010BBAD2A987B32794C35A3685
3AE144AC5AEA6395A2CBA52FE80E688C4F68B7FF086FC52C07FAA5BB36405724
BE29C2C16D4CF1BD1052C07117D7D6D347CCB42DDE1168CA3F7539678564AFAB
184A16968075BF2BD23DCA9572979472770FF2DF39E20DA2A9CE7073E023593B
7598A0131902B3F3D3BD3DA94067637198A7E82258A6D414179202EB74294587
304998154C59310D317A2CE6B61F2E522FBDF3F7D10C8785024E627213596C41
51DF7D5DB5AD7787A917622B6A369379949DD9BC5D4B5F3926CD47F8CD3FCB12
D0CC866F1414BA0DFB337558AA398E37BF984F934C66986C2EE9A510A819ADF5
81AA672B92965E2EBA4725344BD3C039A064E25FAA3EAEB35FA5C74AAE3A3CF4
BF3E3E7E1F8D696ADFB6EFF3D97094ED2C21EC501C3F055320126651F8DFC631
6F9DC04F1E0EE7251A03EE454C754DA9F485DBF256C3C4987BDB800DA1C4306A
C740184CB367D70D8AB7D59420CFD73B90688BAFC791B2E6517A4E1BA2F39AF2
E4141460A14440DB21AAA7719EDCFFA927B9976CC8974FA5CCBF53511D26FE98
C66E17C49C6AC5B8EBC8C2711BF67B786A58AE7C2F43D985874AB8A3F2044DBD
4B924FD5B123DD472A01FE93EA14C8ED5E9949CD49DD86CCB17F0C9C46EEA673
F31E8E07AE5C862F196EBD7415B50F8CFC497CC5A17D5E2DBC4D5C1BD11B579C
53E67DE41EA70A15EFAD684EA2927843B2F5BAD762873DA18265930F7BCC320A
4DD22B38B62EA22F453092DD5EFC206AD76D04AC8AFA92B9D29E97B41C7FAA9F
CCB40379AAB0A13F05E828A53DA78A2BE1798639B3B73E6C85C94E17C2358D2B
6EC01E2A72DD2857FAA29D07D9ED91B163A2EB46574D7853E1F92D55FE379782
B53CFB08CD56263A98BA99A20C3F1F5ED1AEE8968093BE12C2192065CD29640F
BC8E25A93D2DB28C8252AA45E015ED2236AFFF1E849FA5704CB591AF41601B3C
DC834024E7091495E95D0E66F1870354CFDFF7CEF80359904E3FD4627274C872
53CC0D096497D057C6C78109F232AADB573D69000A044B73BA7F086987A9C830
1084AE35E096FA8AF89E587F3D2370911E7F642D8DFC067362D65DF9C6AF6650
3D32708C76C3DF9AE669FB01AF398DDAE67428EC237581FB9EF12F984325BAF5
0DECB4EB0B32811C3136CB0DC4EE711AE980E163D0FF4DCE1F91681D437250A1
AAE042301E30075D8DB528B05CE3458588D34C36D40D9872B8436445C9C6EA0C
98434FAE3938FE003FC5B11BE86BEA1DDEB1C3BC70DCD4923EA83CB76A3093DB
B92DAC4C3612FA1DB75B2EC562680B5158241D7EFF0EB99D04FEB88B6DE54F9F
ECBE4553E28F07CCEB2B8C71EF93ADFC93CDB2CF8FD8F7494DDD15B13D41FB68
9E3ED3B819302826EB3561933F18FF8BA5ED8776308D50335BAC72B1DDB3E12C
DDA3AC6C0C12D6E35A3CD63446FCBA8FF12EE1BD53FEF56EE115276541AE2BEB
A473AB45201810C0E65E0B0D90DA1ACF96A6BCE7AAC18A2476DF9DB80DED33FF
223D2D0C6414CB82B46BFC0ADDA332EAB9C01219326F3ECD532BACAB16671A3A
9D540C64C71066C1E6F38BB29830B2B95EEEA34F72F4E96CC3F7ABC0F0961873
BB3759B49F68A6966852ED2F1DD38A57AB287E49BD876648568690E7B29E4310
CFE6F1F2304397E76107AC8F1DC8412CD9EC30DC0B32DA7A548BF00647E76687
C0050E685417998FF095EEA92C452CE44D0E6A9026DFC298FC5B35D43B84217A
F5CFE5AACB18FF2AFBD1A04DA19ED24E940ADDDBFCAF37BA25A1BFC2A9DF0173
E6C2DC3211D0108EAD343C0BC66DFF2A70BBA4974BBF0A2D99517A35BC45183B
7BDB88E7553211CC88CF7C7FE223927A7A4144BF87804637C528B0516E0B138C
E179402015908B125793A2111417553B9017131F4A3B1715FDB07CE7C933BD98
4E0D446A2CC4D70BF4BC52B8FD599898344A0FAFA940922DE0C110B2ABB7CAA5
6B479E9EA0B09D0A3DA94D8013DBC1E8C3388045181D7510E59A94B5887B03A0
4738103885EFB58B7D3C2AF94919F45065F9B4C16F2970BDFEC647593DACA920
1556835E6B3B6A67C6C131152BDA977F2CE16668DD4B280FB89734F437A9AB1A
1E1080CC8EC3BAD659996699E3B1BA71580FE5D6D31BFBFA40063DD2CED9C62D
6E42A47733C4B5A0D253BC5812DC72F64DB8F92BAE5E42D399D0264FCC92A625
F422DFFD3B72A1685A039E71C0EF9EAE428ED9C10AFA623CBD64B13A9B5600EE
6464719934B4342C29C7C093E776586AB4799917BC052981768601D6F1488B88
76141911D145E9787B84251AAC0FE9CD251468F3DF51AED0CA3C752EBFE7A5D9
AC68713071E844AEB6A4B845E7E9C744E32F554AE64097012FA02A1A2CECE709
78C3749F7097AD9718F79FBBFF7591A4F0CB6EFE96E4063FB23B0C1398731F8C
A865F0EB2522965FC8D8D5F5106102F77D40846CBE1D756ACC8283ECEB0A10FB
D859CBDBE800017D31FE968B8184553CE425C1502DC3E1D795A7D2D4891502F2
A50A06EACE6846A08CBDA708B34C1EC084CF1016095CF50708E38F5276221755
B4CA0FA5A8CC3B4E2AAEC6CF28297E3ED75F2776FEEF58AC323CF2E44DABF414
5B00C950347ECC97FC48061FF5440E64CEB8CE434A35760F616A00FF9C69E7AD
6267328459A805D4EC307CDE09822502713C27A28F74408AEDC0846725F763CF
B0CC9BE1E7C9ADE3554A88FB6A68DA5D76D3CBA7C5E432748363BAEF50044DB6
CF61E4A1ADEE59F8B69ECD7E001950D95D5A90DCFD30531B19FC76C331B67688
1217067428C1403FCE556557BAEEB38E8C59A2E3B70C54AB60FF57109863D8DA
F13EE20647FB50E1A01BBC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Bold
%!PS-AdobeFont-1.0: LMRoman8-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Bold known{/LMRoman8-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Bold)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 54 def
end readonly def
/FontName /LMRoman8-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-519 -307 1704 1136}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105F332F89EAB76829F343C32D55C117728048C3
4CCF7A24765C866D3358620BE013CFAB4BFE9F6A9DDBD3AC5B860DACF39EC43A
6647BB7036401325A952F6BB0DAA5A3A236FC933F3DC95CB14E7AF036A954CCD
0705F4B462AE4BD96196A04EED549CB4F6892E90BD44FBD79D4B0C4190B7F3F1
BA98776794C365CEE49ACF063DFF9578710B26AFC3BB5BEC4B3CAD467D7EFD3A
1424E188EA6D39EA7EAC6BD4C4A20DBFCB04466A6B068A001BF9F5284E263753
0EFE138FCDD0C9B580D1D0ACAE1AE950B42F0072FFAC47CEAE0BA3A3E44268D6
211E311F618634E8FA6C523BE5C46DAF17DADB107A437D688E896F9A95AFB014
066F7ACB02B1070101773BF971B6F8641D3F42F1D0BF99AA5D41FE1CDC633A65
10CF89C90964CBA27DCB88807D235C769E06A937586AD07B82DD25DE718F1081
20433661B7BD38774D191F60D7124A15DACACF1833AD2B56C7C56D0362895A94
FF1371BDB237172C5CCB561C6EC136E74AB802AACB7F485106CBB4D59F07EA21
61B24C809D866BF9BD71AB5D296D881851AC736AECAC9F20664CADC0284A9ED3
13B983196C14E5DF8A2BFE526CCAC2CBCF90124FA9CFA7B56B80E9898D75D501
35BF4E96D5036DCD805FB64AC8F6F96F6CC176DC1EE6786681E34B27A0110576
B295B3EE9772D76F289091BBB20F4FC0BD937EF5482B08FA1259611A86559D77
EB355475BA9D9D36AACB5F1F6CD453E214601EA1288E204500779AC4019BE725
0D264A96D76F16FCDE62596D87B391A94E23331C52A894B559C5A73D5596C286
AC9F5320EB77740E5A46FB37CA9887908B8216E0B1954C3E8856CBE4CE138B57
1ABBE037881F6C47A8E9DD62FF1347CBE2B823D0D5F7A7C07D2BE76D1108C199
1B88B062391F2676C0CBBE4871D1DAABFA24A9C414C900AEB44C51E080489E97
5B80F148B55429CE1F6990173529970048B6EB117644E955DE66067D4B71F142
8A74D97E2D53AC26AD01CEB4658CA78761713780C6A3520AB4BEB4FE5BD6975B
583024C06A48C7D5F84C2BCD06B9D09F6C3F5782288F63A287ADC5B34ADE0644
C0F55A6A87E740D8095E63F78C7C487D6094086F1DE6749FF3C622A38F15E122
C28FCA68A67A4552820E583E0AB51C2D9CE82A3F2BD73789B3CD654E2E45D721
A38D05E1FC212028BC7B3EC68B932CED8C9008B4FCD3DAD20FE0C6DC07949849
C1E9F9B5DC087429A3D691163C6C771B112CADA74CFF4BD78B817C02F7491040
C32C0393AE250B09CC34151D889198743D5BBD1EC08E9F58EBD803A2F090A3E1
90CD2CA3DE2CCD2A72104CF1B404906DD2A1FA3458D3F0BA3FD7DB1C1ED50943
8C43F1BA4FC8D83F382E452115769CE63EBA96263A8DABAF62E453C785C7D827
190D9ED5D06C04491752C8EE2B3B2B10399CA17B715C8A6DA4099DE697FA5B28
1A08DB3C631E95910F965940AB8DB67D033098AC3B0B2A925839C8C34CC82E72
8B395222C1E9BB7172F4618CDC774CAC643C8A0519441C6043AFE0663F4F91B7
7B22E158BA172BE33861E18AAF3A48C72C74839530DFDD8B9C9935E7B787F601
DADCC81385EBE775A3D3261F152EBA489EC9E5BB44ADFB7558DD95314D45238D
D0FA9F678D4929D69D192707B1BA6A2F2305D7FC8FD35C3A2FDA178DC51B0D9F
7E1037D7599DB6383FB3CF998B84796AD4F1646204CFA8DE394E35D6A1DD200D
31F6BA872ACBEBA94F1FE5920A18A7EB5697146F66B9C5BFA5415ED1D6DC627C
B8D85DDFCFBCF7322BAE688DFD73F7115169B32AB8B6C05B24A4748888F24F4F
B46F07CCD2FB9583937F0BE8B4197E4192D1193BD94E99C0CCF702D9EC100066
E1490B390E2C08646BE73DF766E216FCC9E0D3B13991A131B275F892F868823C
C55D4859C09148529FBA57A3916212947FD36BB2C736225102573D21FD0B0396
9BA1CB2331D6B04D84EC272A85F97D2358B1DC13AE97EE47AC99E70422024A71
11D9A6816E165DFB4DC616FF628D9C930DAAF6848E3A72DFD018BA844429BD3B
59701387CB512AA64E156D060119C53CFC33D924B396928324FE2647C4AC2955
B7719019C977EC66869BDD283CA886E10296CE26A4E176415F55FF32E4308FE7
138B252D3920883C966C6C44E7FFC2E83ADA764F9BE93ACD646C1B9E0113A1C0
9295667F372F2176DB8BB77D73304B66C6BA835EBDDFC19E88CF11D2E7FBC54C
479EEF9C03F89E026963830B08E9BED0FDF83EDDB246DE1E57E1B738ADF6FD49
E6A53BF48C6C2A730080DDED690D96080BC8A4AB8CFFE1809DF7903F6844B14C
4BDA9AE6DB8755B830F8D53490BFAF28A556C6C49622969F5488761BF2229D98
546B4D60320FA0F2B43DE13EEBA9C102C40045692EE3B52643A0DE3E60417B86
3AC7E6CCD3D272C580211B33A99DC5E168EF07120C3B6B1BE15CB055823E59A7
06B3E0260FFE7583FDD1A53D0FB7A4EA0734BCB86FE47C846E94E393D66B761A
5E47340C37814FE1FB817C7C68A5AFCE827F3A4C13ECA61A8D261B3A74307AAC
38B50C0E552726397DBE404BA26E352CBF1D23E685CA897AC54A3D7DE1A758EC
0F8CCFB7E060FC724B0190424C7B39DA5FA5C111311744B77AEBA5674EF5FCA7
70729FEF0D1C0A261708AAF92541E013073FCB815A2B83CF7E28063D3B8D6DDC
59C6DA3DB9B063A7C548C58576081F36DE3E0CC49BE3BA370215A15953B84105
8296B4C1B9CF393561712972B4422D91CC4843EC97AE75953CEED7ACD77C30FB
52A523A63E5294B8EAB30ADC515FB8C8C8DBEF05911B631E9EE13317E8FBB485
151A410BBFE58D8315D95C3F4E7B7B2E1F2895057F1AECF69BF2F43AA3B9AF63
A2DDD3A44E4CF388DDB70D053195996477A763C3178F38BB3685144A0D49172E
098D84CE608DF598EA17CA0E8100C13E89B700D4CE116057B1FD87B119E54704
7F43E9CCDE1C1F8645DA03E94B872EAA06E9F7541E748C473676A396158E522E
D70BCA88F8E98A4B3C055C01823C4384724518CA938CE4C6D6CD198B29532908
C44B42DA92FEAB15171D254076B8626AE3FEB4F127D094B167C7ECAD42D00305
86A238349B82BD0EFB82FA41790431CA16082699BBF878B0E924B11C3DC8938A
559F0D5BF2DAD4417251602DE610C064F95504C55B0B33BA921D3E0053747489
69CE7950969557336AC8DB3B61E01D64D56E8C49283BE475B6AFA056DD3F3F52
5DA26365A2DF7F72C8838237E30DB8618BB04B765781A7EAA080503F9514C6EB
1984E30EC73AE00E97EEB44B3FCB53808E0E47D67BD7BCE91BB83992C45710ED
1D59C50642A0CC134B0E7DD748B8F839254BA9139D345103CB03226F4AEF886C
5417DA88F96BD9BD67E0A5EBCEC560B2C889C3F9D662FC2E59673DEF563AECCA
BF724C09CEEB5B55EAE86EB7E2DC73C347153B9B9135A79D2898CBF3B1C83587
A2536500DAFBE0CA7772A589F8D9CDE095894CA55DC54B2B25B0996C2C590BBD
DE3789C01AB433ECC4A22BF194362C862C904C6646E450C3BDAEC1510C6F70C1
B6E7AF8E11BA4798C1DD2EB7D4F962028130AC20BD16ECAAB6DAE2D890767124
8569054F4CE8D00B423765C2FF3AE200C83D5ED0A4866444501B48FBDA21D0A9
02F21C5F50FCDA01045EF1F9BCE3693ED2E19B6A5BF6B667F721032A8FE68032
B72C34E7056606C6576B9697457E6FF9E0F1EB6964C2FBF1772069F9F59670F4
69C6352D659FA6F3703FC79A13034AC236DBEBC18195D4BA3F2D9C1BA99FCFC7
C1AA0F2DA733242BC98C5AC006030B0E5C758F7A279110D73E986668628BBE87
506B6EFE85BC3E9E6E9B3D7798E83B8FA2A51DFB6604687AEF8F52D54E743292
24C0D1AF05E482ED4FBBBCD151358672B9E6D6A900BA44046812884F2FEFBBD3
9715FB1DEB0D0FC5BC9721317E21378E75D88DEDAE45EBDC90D56334B16EBDE1
6DA9FCCCFE6933499EDC15F23FFF7A8AFB0869D655CC9E8B8BB20FFD9430E3FF
F706DB281940D45D3F9B39005FE49A79CE949CEDB65B1960783913F1B3A6F4F7
DE7899B7F10887DB9B912FE4464F14D0F503064F1C78C7A6DE3181A839528F7A
F714C74744F93ADF8FE08B4C8BDE976D18C8F669EFAAA19213E10848498C3410
54EBD5FD116DE2BBD1C0E4828191A04EA90994D3233D447E8F87527C35F3CDE9
4D93ABCDF45E0D732902199C52E26368C631242A501B1BBDC7AE37A8D78C8996
A34FE405AD6C94D34A2D6E714578CBDA4AF2E9B350DB04B85024823654FD33D3
C4D429D0D495EA7EACCFD32F670C45D154E8F01C7F8542871DA42E536C037EC5
139AE5F97CC27F2840FA366F1E2283CAA452D72AC7474753A387E4FF6B9907F2
8808DC922FBED66607B11A2A76D8695FC766529FDF04B414323D1270446C105F
0258CE2084F898D7571091B18B212D48B4392E4C3700C49E10091FAE714F63A2
4AA98A5781F2DA463A5A93C7129FC3118662032D05CC768DB05E7B70CD601AC9
BA0A4BF8557C4FDCA4A0A4EEA74A36B3873BC99F9B02120E72412526349C5B4D
3FE5690BF4E925AB2CBF5867C2CAF198CEB491BAD552FD0CA912D7A12E6590BC
0F4E3F553934AE1CDEF29DE336B98C4ADD7F99BFF30C1A94DEDF81F7703CE2AA
B392531104ADAE188A6685F3B41738EB3D1BA708653BEC6F7AC682EFC326331F
40C3020CDE2BEA26EE8E974027A8027D3F4EC6373B30B200BDA19050332212CD
062A6B96FB18552EDB51B9918709BD4B5AD87BC27392D7A101E273541B8FFD8A
9F88AF46C2E5D7ABD94719F604EA68B1108EBB5BEBC3EF465BDD27D6BA009C25
F0C7568C71846E413E504BEAA3F4594C145A00E1EF6358A8DF8CF7B4AF6BF074
A9EF6D192C2348ADBEEC84B992D45A2680BAC63497C593C90728B12FB175D662
435C900AA958F922C60B2FDBBCB7E7026A91E11CB3F30FDC52C4F01C92EE0943
40736483040A14051B0671ADF319AA50F05431FD7996DB1B6A97E165EADC6CE2
3BD6CB9700745AF1DF2DF7278597CF205683610586A8BEA497E867582A10D6CF
F394CD7FA1132EEB0C7442A63B99930B70AF8F8013E3F431C43C172F4B2FCD30
3237B01E13D2AAAE0E884077CEE01DC08FFBA8919951279F1ADF950EE828851F
832B5F97C1A80E20385D4B83145AF95FEBC160B04369AC0460C55FDEB881EF52
12133C9FD7C7BBC8675CE57729209861009B35FC4F352864D039E8B2D4E72B03
779B88B0BD861801D55698E3D6ECE62CE5CC9FE34A8AAB8BADEF7D89093DEEC9
37526816B76078DD6593D8DA1D4D800473F1CB0C0E77D7AE4D4EF60D44B745FC
A49B09DBBDC312189D77F70AF8035C331FF71F130C31ED8EECB10E5F93097129
01FD044F3AAB455EB7D85772D62439D87BF2647F3E3B8E35767A23F132AC8690
9FFDD31DB374E6542FDC8DDC2993BAA42FADD50EE2FC151AC9B702F40D8065F0
25842B0F91F6E4080B3C6D4A4A49F2347598EFA855C8CF4E76AE27517A9B3ACE
EE42F3101F449C2F6746E80EEBD1B06127A7E7797B41DBCCE9E48F09A9375711
1A5955246043C8659E8714C72144E350AC33AD80C9280F51BC2300C56A6A6FA7
700D6F6C131841B0AF27B4451326750308A8F0348CD16D7E9BC60A0E8E6D9A15
C3F90C55830CCD8D5B824BB25F6B221581344C344A2B9834F97C6EE56522D30C
F42556F87D1216539DCB188A534455CF1DDF844B80FD932D1C02DA3CDB78AED5
3F98161464DC5DFD2B460B990E9D8C75EBAB53F758648FB82BC37BE81D825F13
72C73E9096DA19968541E940E2965DEAD4F76711CE6B9D74B0A2E25CD23969EF
9E387BB3BE62A351C14DAC4BEA7FB4CA6C26130180B89DC4F46FF9216F1C43F4
414B7C12B6164EDF95A39C74183F41E46F2C56BCB59CE6AEF7E9165EC02EFB6F
A0A9802B8B22DAE7BC3650E52286E6F70B104D33496F8D1A112381C573C14103
789F6FAA26FA10E73CC09A62F2A89E84964B2B68602D92E9EFF00404DFE37583
AA92C55955E1D06531A5EED36C30AA15C66D57D161719A2D1B7F5A905DDE997F
3513AF3FCC9BA70E3A319D56A104A3ED4DED4B0752327FAABA1B604C266E6FB1
1E0AF0066B4EA38D4011CA65109CBCE47B48D589829CCD689CC0DE5B6E8F976A
E8191B49153930BD20FD2351D91540E33AAE83E984389A3BB7B9F5B3406E3F50
064E0DB82C471A918E8924B6861D8AF54191792FEEAAA468EA1D26C738D1E878
2D670A7D3641826B57C7A59BEB12FC0A87EE76AD317CD944528FD6D2338146CF
A73BBE3898EAA4C17D53E4CFC681A17DC79899EB338C037A88DA00FF11BFB205
B9A42EC1F50B435E4D44E14E2152E5054FB8B0A13AB598BBC481A3240450D145
3A1CC3FBCB32024C378A87CFE7506B67F7A6FBF8635703C7EBBC26661DA6A7C2
E6C5ACB12FB054A7F7E2988C00C40D31D3819006D1FF3412D504943284C1658B
6FF324C0F901DA864D8D0C9C297C3062343972BD08BB543638203F9D23269A51
CE9FE17DE9159D0A1B04E4B2AFA895CCC65D57660E1296A414C2CF494ACCD741
FE70DD833BEFE93156F059330D67F8BEC315412BA9A18E9744CAC5F1C047BDAD
0EB4C7D348B097477DF8C6C324CCCF965C397AF1B7F0475079E7E96DDAD9059A
3D7F3BD63827E28F17D57CEF44D31AAC43F4EC19D387D38B78DBDAA0645B2FB1
C9EA8D6685B5393B876ECEC4101176BE636CB678AE18A2C283E940457962C372
3BF6E61E3C3E10DE25AE1908F863EE4F6A6DF0234233EF08A17ED68AEFBBC891
4D0B482513DD6DF3651B03236C930A1938932638DE190F0106455220B85563A1
1A1C5B6FF398F35BC5DA8C0901C0933C6799C47C2EC1C285506A1AF4C7592C47
1FB73047F2C2447008AC29D1F25C3EF360ECC5DE85C9F339E8DE7FEF4967FC92
3AB87182C9D634BE8B5E06993230B0D079701E8936B337C6925E0CB5BD963CB7
91E28CB54B37655E4201A789CBE20DEC1DA560FCE287B86E393C824960DFE41B
C99C4FD0FDB0357BB5233F3D0F6212F013072DBB672A3D31DE5E0367B7006F75
7508FCB5D653DAD14A81020A55C920430B9B73AF085CD308DE598078BF655B07
CFA3237774148DADF08503BF166A9F41AAA88EE6187F3633847B83AFF2D45661
D8895227166F7AC9B7A2D6B55A19241BC72354153521F52CEA26439A9CAD543D
A059407D5945415FC06B0EC169287349C52D39779DAAF3AD7EC4E8E27CF34B97
2AD10DFD269E762E83D1FAF55AA92E985E8CE27B8C4B6E8B4F056867F1C0B014
E2B65B5C3A8F71E443E19808D80B366E84FBEFACF55316F9F40C1386F58B199F
71C9B3616A0F7573B82A681D124DE7E6AF4034D031967AEF5E1D41A8DBF2D5BE
B908CC73E80431B1721C8F989103E4F6F8A25A31E864651CDCFEE7AF19339533
448F2FD46C3C3C7017FDEA8AE2DA33E799775F787AD291C4F0BECF14318F0C96
8433143A19DAC00CE647F98992021217D666CAD26486FD8A4E1F4023DE10B61F
8CEF273808B048A910329044B0344247E6C405F16DF96657943255D62F0C84FE
8A630204A8E64D8F940DEDE5957272239B7DA8B9139CCF9ABC5294AF21AF58E4
A76787838F532359D6FBC18512610FC852B07E15D4B247548724FB731C3D6403
E3C10BC977ABCC68ED6F3A241766E0E18B1B22579F08F4E68EDA829B4C0F8235
86C2033BEBE0F523F174D1B87F8E5A06CB2F03B396D8F5223486FE982C7C8890
636CDEFDED3CA00B86C57DEF55FB60F5B2320F6AD8E6CFB0D2666679C13A65E1
D6872B1E28C1B4941370B9CE7E88DDDA40AD9C0ED36BE45455AD3AB3CABC5928
AE68403AC7D2174BADE4B196DE9E61C31E75BB463992A775E1D468BB6EDE702D
60DEA3E87672461319DEFDA17AC2E515BDB3D6B2980655EFDB97B56E08C371BB
6CCB2BF3DE8FCCEC8F095F164208E827A9C735E522D1183612B014A768752492
1D1F4D39C1DD6D8AF62E86BAAFF593D3F0E6EE3118647B765FFAA4E16B494211
A725867D8C47D291939025EE8A893CBCA7253327A6C8DB6A267733EEE15CDA5D
8597493D825B14C2FE7DA51E175778EACAA24805B0C79243DA91D2701CB7A4A9
988B75B8B18D8D9B9D2227C7649133EC6A81002AE7A205CD21E82E96046449A5
58A88D426B6C046E9A088FA1A77E4526D5861D0184F4956DB9D9BEEF25BF0242
7894A1DCED30955B9E08D8BD04B6A33FE4897153F85738BE6CBCD57B97F5CD56
CB80CC88111C9E1CC5A95D86E6614FE980EB84C857186645C467EC0164AB6086
D2C2D95C19D297E22194A490DCFBAF39159FB3A63B24AA15B2D7A204204B0D7C
712C1367086F0E83C9A242C22593968F5C85893FC874E4C934D42A9189737343
ACE032D575B0D7D87AF1986FBD7FE6830B885C8EC5C9866A2A0732535FFCD58C
CE004BCF212516296D5EFE0E2EA6E2FD72EB38DD5E113605DCA21404B9128559
9E58D1F25BC54EF6FFBB790D209F321D7FA34172BFC50C04FC2A6D8B6285F5CA
5D56BC06286039E75042D510134D54D45D7BA56255BD7D3DDE6560E9414A1410
886EFF8D5789A925F499A5E23CC2A3BB444370D98713904754558B8A0BEA8C8D
4ADAC9367191767CEC3941BE4A948B3490EA861BD99423B56C2084560DFF5E8A
62A9926FB0E1DCFECBACAC50B4CE8CD9DA18334EC1AD011D0985932814A716D8
401EC872E2222476134A0926182486AFA66185016F9E506375D1E089C675FA0F
A140F5535D6AF761F437E074AC111838A2837E1EEB471986461CDF084B59B578
6859662242E4FB89185D36D77C7E9F73E4CCD51A57D7682998D349D4B7BF5031
1D85046CCA214F7DDCC1A0BE0EFC7B05BE85D1DF560D44E03674D56665F190E7
C0BD07CEF58273EFC3332282032CA7361AF27A3C413336CA6D80889436779796
A918B7431FC1E88B8BAC63A006735A03AA2C8633A9C8DAB77EE26D2988439EA9
6FEA19D808A4FF78BFF8C9AE5A3F38C68DD60FD6FAD3C8ABCD673A03A694FA77
09C320C5484340A830DDD392F93F6CE1294B62411E6DF77D4A4C2D13B485F688
4A7B560FAB7F0EB5F6FA72DABD6F0BE0240CBA9EFEF377E49B7A134356A09947
85F9078D1B8D7705C960DE81273E2CC87AFCE644D65932A5F34BD9703793C4AE
F5E1E1F02AC9FCD1D87929953EE6CFB6C2FB2B3C7E021790A1443758736475A3
8D8E5132C5733B4A7C74977E1210E201BBA9A805612B4645162EF6350933F1C1
A6D6273E235930A6084624F35F8E4D6A4C78CAE5480535D5579F8E54D3989E1B
31830CBFB0EF9AF8F15566AC294E182359C7A01DA9C60ED3C0A20A34F5041056
A43F90D0E6A47C2521C1058E8C66894CB1C4CE5BDE7A2C9A124900DD8F173279
1A32ED4820FFE98481D067D7A65C52482D6E2C5740794958D0D12B5541B51C9A
222C6861BDBCCBF5B17AA9F218A80D732FA18E2E5F958A4D4D40C21D7643EC07
24B2284CCD6B34410AE1CD0B91088F3DE113E86442C14C4F16926330A6CC983B
5BB223BA6AB44C3DE99624DB1B364E6474BA273DBBA6C8991992A2A1A278B2E9
A7E7C3CE68481869E5DECD50589E0980EEF27FF33ACB54F0A6AD8849F98CF9A0
B95F8B4911B8C82EA079623BA19E2CD19ACC174A587B898AFAA1644FA922FC56
B0B93D32362BA966DDE41AE1BFB7F1786B432C43F3C7361171FF479FB4FDFFC8
1475A048F4D6B25E3C834F74628B06ED1299497DF6964570E66646EE4A3F0349
311B6AB1110FCF6163A409D01F64CC553BAC7EEA79290016F6CE1A8332A77F78
B569AB435C4347780ED76337619F86AF1FB6373D0CEE6B46717AC5F34CAC53C7
21060702EE12C6641799994DEBD48FC6792E35BBFC367448EB7FE9D1349E90AB
58CBFAA79D5C8BB6D237AB3A9CE8C36492E99AED33256A1A6F3303F356F5996F
F48C5C5ADC8820A6316463981C89F3ECDC3634FF5424EC1C28487B7D93628E03
9E14526B19E4EC1603597DA47285A073A8183732577DE94ADB70CEB5E67078C5
6E0E7854CB47132679FBABF1DF31D16F8FA295C83C19C1B72D6702AE620AF391
022A8ECABC9E50D69CC6C14D48F13599875048DF2F55ECEBAF8931ADDAA4018C
278DCF28953286A517B34F61512C317E9210A89F4D2BFF4ABF0E3FA1B3BBBA9B
8CA038F113C57B5B2DFA65BFB5D19DFE9E7E2ECF47D44931E96950E83E418B52
9E90CF2C9554E7D9855E01803A2E4A4A44D467EB26AD61D695AA560664A99038
D69D48D76476BF5010E5E251A42205CD31588DE29FEFCF03915CB1C641410492
19FC028D02E27BB696C8285F78C66D154289455C5FF2D23C1A5EA34EE5399237
AD01061BCDE92EF88DF3CD9B962A65FB06A1C28E3975893E1B15A653F05FDA97
C15FF191604BF31B2D41FB10A63104AD5F9CF990CCBB01C6ECBE840DBB8AF55E
0C54691132BE1A965A3DC333680B3067FD358B2528A177FF01BE719F6DD2F442
48DE66B6EADC06031330073AF8D0CD314243BDF9C1C91A6EAE8CD0ACCCB30B6B
DA27795EFE5F6E32A89FFBC59649CC759617E708660D6AA899A70DC8848152E9
51C0C3F6AD7B57B980E191D4C6DFB8FFBAAE1AB34DAAFD32AA716301301AF68C
3F86AF8CEF2A277D9F0F8229E041D85DFF60479439B95D1D2705E323EDB4957F
9A271F30E71EA8E2F40D990C8EF0F52DC619649FAF3BC7D3F0867D1B8D78B9A9
DE9A1A1123236F5F33E63C9115F80624303534894DF0C0E88E6094310E4C81D9
D739DF88C655165C148CA55C7A1C49146F8F3B0DFB89AA1D0FA3717BF3CD52E7
FC86C8FE383A014E46DD1F1C5C860525CFAA157F44AACC55D51C6ACFC8FE00A7
2C7D2F3AAD415B961F52CB0E71C1237F5653387DBF7F59869CC9A2D5E699820F
4CF92C09C7BAEE3DAA7F73D90272AF096968AB75F3F1EBB30B5DDD605EB0838B
9314BEBFEED880C0B58DF772B2BAB6BE97ED600EA7DB19BAE8A38B794E7B2864
4C3FBC75583A7943ED882DC2C6ABDAF38CAD4CBD421B2C55A43C3D7FD8317443
078E3A7FDB6B95539DADEAACB72F3FE026E0D86E3C761B8BE4A0ECF381E74CAA
10E10A03AE12C23098B235D5F448AFFB74D75189760F0BB9427C07939EB5649D
ED6075ECFF58FBACC2E0C602453F5F150324F5348BEEBAF5BE5B3848DC05D38C
68A6D268F5AAABF3E48C1DDF045E80CFE0284337B737CE453EA292BBC6F33628
CE825E163FEA3BE751DD38527D027F572991AA890A8B6CB720A8FF751E0626BA
ED7D922C011F78FE6D542317CCB82B906D58ABEC0C1485BF51A4162D29F9FA78
CDB32A0060FBE6744617685896E9BD38CF00A0FFECC8A7D0D58259E53A4B2012
9777C73F0C0519737DDBB167F06DC088C78888EEBB74C92AC1A16A4C2B8626B8
6EDDB355D66FC9A90DADFDC11833C9333B111505F5B7695B2F355214B7B880F6
1980377137386FFAC3A407C19851D98823AC4376B8270587E8F3721EFDC6F066
C4D6E151ACA5B821C74BE4A19E86229BFCB98310AB2F720FC5142AF5CEAAD07B
020D3CCBFC275E71959D709EE54D544E286F873B83CA675BFB2D7009025501D8
996B3C557F2EF9182692255F7A98CE9B93A645D49F213FEBEB709BB571CBD6D5
1C00B349268DE077F06EC590484CDC022ABE678A7F2E298A7FAD967A2EA7DC47
64654D02C0902B167500C2538273D545447091D9D01E9F4968E74FCA43C0A00C
038BB32C43288B1149ED2093D5DFC5FA4A4247E469A15621739B6E1DB9F51288
987FA9ABA65A8CC12079C24C649478843833534B15A83434C294608B289F60FF
F8C732825DA065D7C95992607C9E3938A24B7130A94CEF9322DF0CCE8FE0405D
523BD8070B89CADCB0655FAF3BBA11181556B22414DDD6C9781DCF850CF86E8A
78841C25F3AA946FCDB5C0B35D25F8D8D023432A48F3FE434C00771CF4751D8E
85BB97A7F1555F4DDD5C79D026CE9F5B78A5923B07946AF750F7C23DB8E9E75D
ED7E5034670F9B401A4E995B235DCB849F985999088274216CBAB096E8804492
D23773D92B41C75C5F1DA6C042AC6847F2B3291D30D4EEB934A0173199B1E74C
3866DF6F25481C94C0C99771491E1E13819CF6A55CD86E751565EC4E0AC8A7E4
182AF7DEA896207FFB11945D230464AF01944BA2D55B6E014C8A068F6391E117
63F9D9FC648CD35B1E03827411BA7AD177E43BD168057F11F5029011D8526850
A8606A7EF26357BD2707948B53F626C361BE135F4E101511B9440376547482A1
BB752E5979B7A7D6C45C305D4E5E329E91344E2B3EB75F1A13E4F1526DCF6D38
9B34C824538EC663458C94BCA7D8288B17D2DDB83815E3868E2F4F86F53BE69F
3BBA3D0D55FB9044CCE1EB5FC3CB80149DE54B2FE9459AF2DD2B9BB65D0FCB8A
5F3E321815C3C7AC714C3DC89D78925406DE6700D6A10203D03263B1C28B26EA
DB953ED292A6003B3B10E1DCF7DBB4EB6DC13F61C0A90C6BD0FE377262CF6F63
A8DF81E537B689FE89AD254C935178E836E1BD9D6CC5FDF052322E21FC75A175
250DE6FB69CD1F3DC9262AF28647D31AC19E694472A215D2F495D9F2B2AF4E6B
0ED7A97EEE66BC28B9DEAD2A7B39EAD4D4A4E454768C043311EF45E6EF1F6C38
9CABC69B231B033132675A5B9D97BC1D32360ECFB378192605E726A3DDA7E5B2
878028143F6B180067B2F9E68C5528E0DD9A56E20DB6BA916FA557F6F211E57F
18329A7824A3550E96593387F9BA9D63753FAB6F4BF4D7B35D01E3A198153B35
49111245A4E2D29711B655EFC1D043C7BB99785482A577F8201C041306FB82B9
73E484683DFB445134A9805F40B678B82F58DCF6C885FFA8B3E42F7CBEC366E6
0C18416C423A3FD70D1FBE03B7E6E5B7FFD0EEBBC826E2C4F588D15BEF57A74E
AA4CEEAEA98AF92D5E758C290A579C29BBC367D7B1F6342DCC35BEB2EB86AE5A
B1D2CE23F3263950BDC80F8BE5CD3D12247C36E4258C6BDC84ABC8F5382CF6CD
FAE2AB99ABA68FADE90898D7F48AED17DBE9CF41F01FB0F15F7D3786FE1AF77C
E0C06AE18F8C86E5F2CAC3913293D99529B8F9EAC85FE548406DE5D90A0FF73F
771DC0346FB0B2BE60F45ADB075D21522955F05154A576C4288FBC0046ABE6DE
E542E1F77DFBD40A3D19B46EE23D4C54A325CDF9C7444F649C145CE13B21A2AE
A4C8348BD4A6AE9FEE690C5A5AA7C69E764A8CF05242D972C33816113602163D
500E957D7591699856E44453AFAB99C2D6657E242BEBBC0D9C6CCDB639869DB9
B640ABDA5D6C7F4B7CE7389C563D11219A887F01853AEF9F30D2BDE1D7CCD1A9
73BF297FE6A8821E03A381C468BC3FCC97D6AE51B8EE6A26F358B803419C1016
875C2FC5B3063A8B82FF19251B1D3735B67FF464CD57295728AE4A81711419BD
805E1F6A2B94E8823C3996FB208C3A9CA555332849ECE66F8102383F02F7401C
3481B529E3E7B8AE1343E5403003C28CF53047A07DC8A48FD12C2F3BDF2974D6
4CF20AF491CE10C53D272ECDEC1C574EE6880500E8A3010266862CF39FBBA573
AADD91993E707C36F856D715668BBC03B92FF441FC74C7773F68111CE4A4B446
779D9D0EA35D4BE263DF490DC590052EAC34F2AE5A043A449C6652666AADBC2F
5FA54F47F8B20547A2A61D2C5B01191AC5FCAA0ED19FE46DCA9886450C36C749
3CAACC2060694BC641C156B1BCE10ABC618BF77560ECA48700DA3E929B52F207
382364B1C62AE8311C433728464079E8F147BDDB1DC607885E12FBFA7343990A
15C648B6B44B7EE36B8356A8740617776F18D167F6AD72DBCCA6BC918A4FFA02
DFDE27DD96537D6B45F1FABF411B97D99A1D21DC64FC882372B81445BEDD4CCB
91A7A246F323E50AECFCE6876E4E770CD78BF0179451C84FE2CBAB4265B11F1D
1501F7C4FF2686F1BF27180E6F9B00981BC4796293CBC9423D966DED4F341D22
5723A96091CEED5DF7EEC7F87E5FB5F9B4D986B6E975BF8F27A17CC6DEC1C8F8
C4FCBCE04F3C65EA91889541467D451A5EAFE21BCFDF65AF0146DF74E0240022
D6B75361C9DE43CA6C541E1EFB7AF0F1EFF4F1FD4C20B8E3F22CE2C0394FB784
5E26DD1E3BD852A017138F4C9CF842249CC9E1F442754ABEAA80881D2272C1B9
691FB5D5274499BC1302E4EFCB517109806DD2CB6704EBB0D4389D1217080B73
AA8F48073CA60ABA155F4A03A5FEC5A8E14E5A17FF676D81584056D02CC030BE
48814FFA0AA41F08AE0D5B33C5776547F63EEF3C0ED308218EB19B25DF20C182
AE98C6B087F06E8E01DE68CBC124049EA103CD8FD9A327887500B2E7A7C849F2
80C7BF46E448EC325BFB498F928E8A4B08908ED9FE7959EE2EE52949E995E7EF
9153005F251ACE17F036C10A982D3D5A26CAB55D1F43B9F5C8642AE277F29D40
5791E7A1701989FB0AA3F0D78EAB67ECD30D76FB49A7C535BD506B2B226033A2
97EA3C8C9C8CD1B4A8D91896E73AFC4DA03A52EEFD6EC22A73914655B352EF83
324E37079E6B44A586D80CFEB32246F16C0F1A5CF8C7C52F0052A6652E6CB6DC
A3252162B0A68F3050C5A16B2F5431B34B0B08C970F39BB0B33254A1DEC83759
A338E60FB97E9B4C0A2D50833E3CE505A453E68052A79CDF16DC6A00064D7077
F2DEF495F3DAD5C26B051EFB4CA3DC5AC833C4B0091084660574D12B0EADD3BB
463008E9D4AB856B9CBC75EEEF8D77DCFD4CD6F5A57F0C9D14DBD893D279F20F
49DC8C5F2C43537EDC6CF4451263612755143BDCEFDF9812CB59F95F25C76E05
50BBAEC90FE98236360548F75D58871FEE5164282E9A503E6F07D3673A778B83
3326CE8172363B1B4AEFDFEF230B3AF7E84F05543BAF5C0E25FBBA5BD8448937
9218C0E7D800169D9B8A4E33ED8CE8EC3AD987CE15528ADEA1C78E3BAA9C6CCD
31E1B3C5D46C68A5E4FB3D8509D3FF3BB8BB9CD9676102B0B9E22A4744EDBF29
9DB408B7B0B56F98EE85B34A9A5F22879FB0BD63A2938F9981B2C52A73BF53BC
DF199F90DF5B338501403614E907DECA0183144C2EC1976155C3A0DBEA41F63C
710152DE098194D6BB29FE5B83E1D2DD33E5F85C523665E89BE08571244810A7
EE9DC972DDFE5750B9009F8741061465C24DAFD49153BE2F7EC3151F50BB9D5C
0D6ACFBAFA134AEF156E1B9819F41999337A57A67302CD793D3CE49CD8DE2762
AB836EB4F5FE15650CF4487A938A117EE85ACC8102EB23DD52BAEDC245455943
A3DFE5422C5E45E5D0CD32FD2EC7241402A3EF85B6AA5A10B9373716136C63EA
DBA897031A513BC9ED89A17D8CDE9B86BB0D7806B03A4DB95C7888422B0051C2
82B4B49CAE5BEF89C4830CF8E300B02E73FC4B62D766B257DB2E4947F750508B
0076DF12914E04DDEFD817355D4F877256023ADE33D6EE10BE2F9E359A1ADF85
5A6BEFC921B4896D04E61B913B6C41736EE4B1733FCD50FD46178004C1FF0F26
06AE7022A3315F8CF3D734E62C1E3E2E2BB873147AE0CC255E05EB66D2375990
E282C94F6C12EF4B456CB7B423E3CAF96725B2D3662E48F649117CA18CA484E1
1F30598F44A65E28AB69E6111008B70521E4C3F3EFD4F84DC63083CC9EB79310
C0528917E8327FB8B6B10274907C8E9A28945C75A0DAE5EAF6B977FD1DCB5EFC
2B60537995FDF06E846072DBEA36D27409617359037AA954D63423CA65D64459
74885FB547FA8D8E2EC2BE15336C1B2C006DA31157A6A7FA506762286E5F5AA0
B73BE21C91DC891ABB0F75E4F0CC3A553C55AA3402337C6C9B077A033B01F3B8
78BED59F33BE34A345A80518480DA06DBDCE3E790522806ECB0467A82845403A
4DCC892D2809761DB613442B58CBE6ABB4EF904FFEF935954AFB9BD2041241B1
BC8519EE8A49E0D2A3BB67D048395E96F45F0AD0B7C512232E0B8373CC674C4D
0ADCFE9C9883B5B532CA46FBF8872149742B6835375E0B9E13B07B4D38BF176C
177353670634A2FC810A39E38267DE1497B597DDF127081FBCF0407FBC06A42E
F6FBF55D8A0F6FD9E30E3B040CE6D23102936554095C9B38704024072C5FE89B
E9DCCE26E345425F481804E06BB7EC873DFABFAAA713F9F7D2697844E0FA8071
4580AB02B561FF49E6D9BC9858A3ED3CAA1D77CE81E3F153EEC4FDC93D0FEEC7
24C9AFC18168AE7D0CA00AE1F4637E52C0CE533016DDEEA851DE7E5567C54994
B2B76D91C2946D5B9FD8DECF9B210557E0784EE5F62B3733B60456344BDB08C9
29F9453553452C97E016C26D37FABF6D684FD9084AC279F5EBCA452889175FC9
0DDE059DA8962DCCDBA5432CFA52050EF03C0F93AFF40959EA7096058D10C669
8B02878350F3965C4EBD3FBDE0C95D977CA473A1FD2E01CB1197990EDF8444CC
83F1AF7EB91F8F4EBCCF7BA65CBB6605D4D72E11338D87D5B02D2F924E59812F
6CD9F83F21CFE1217CF272748BB9CD7007BD9FE903A205E1854AD4364CB8A305
47FBF908AE01D82B32D92BD20A3E2112F44701EB6466C1DE8DF646D9265169D7
62FDC1622DF8D7621812685D7D153D09606FCED30A9985A13B16D058121778E9
3631D91E3BD5243D4AEA1CF05F787B2B565746C211F30813630C7EE7DC33F45B
E3B4BDE678D0712508C2D49378842275701D9CB7CDEFD0DBADC1EA404EFAAF8B
E15176E475E95DF937A618EF24F2D80EB5CC9C2D3BD64C29728FAB41BE31F50B
CF9F9A5E53D1C1C1E4306F83CA58D52A369E8E8645AA93505DB1DE6054E882EE
083ACF0B95B9F10B011176003C07B5418FC765D3EA63E5EEB2380E4AB9E6E655
AFE35503425F12AB398D1B9340AC24BC42C1E43A2FB584A69DCEC51E46955F30
A76C6B243487AE5A649D850B6E250CA17397EDB859A9F9A257A366CF288A27F3
2BBBB40E1FE57668D569B2BA9FD4066AD925D51BAF05CC288C093690088DA065
84BE2E6A1DFAC98532A65305D47C7234C5D186FADD7D7ABF910EE4798D537E85
42C599D4E6B9BFBE9FBE6E3E609D282666D71108683107EA60C6A2890CBA291D
372242340BA0449DE1343A610605FF377C58F5AADD170CCDFB350BA1C7F3ED4F
1FCAE0F8BF9ED8F4FDB3B745459A36D8F643413CD4B4125AEE2C4A30C9371B81
2126A755F8B48199315804893830B3542A09B69E1EA6B0F747412F2204092DC2
8DDD20976C2FC2D3BC35ED216DBC6D00C44C6FF0D374BE43AEF027BD34EDDDE4
AE8929B98D35736FD2CCBB0E36AEB6643C283A61B6EE1E9B745CF02D7378466C
DB231C7A899431DA79EF5371D2159C29074B680191367ED29A5A7FBB4EB2423B
73BF33B172499B916012CECABF4989E9508EC480AD837EEA864136590BCE1D42
0F1B6DB72361A82EC811DD60CFD6AB2D661DA6A7C2E6C5ACB12FB054A7F7E298
8C00C409FFA862A135EBC938BBD745F701B259F9C797559384A20B59B2A6B8B8
195337FCA53EE1174424C26B9F11A2703A3B266EA89EFB538C274E3C6468D760
A28E8B84C5E59904124CCAA942BE9EA866C03B25956C36B5DFF93277B9D9877B
A8DD1F5A472158D75C45B9678668CA56B6DF9B5F710E1090077D54B2DA24FA63
90F65149A5D0C1E27647FF10C61AA552D1158304FC892466EEE88F51B7E88D7C
A3688F37D1756978C648F4297C9C04BB882813BAA27586ECC2D3B9395DDB1780
ABAE5FF50DFFA7D1CA347A8620A93397E52BB9D83B411ADF61F9C187536679C4
96D82F903EE6695DCF3CED36060BBA2543BF6C09B3A973CC43AFC2BE532ED012
C3EB58266CBEEBF2DDE7EFE8DDD98B55CACEA45D4046B046D2BD09D897291B57
A1B312AD723585048D44006BD7390AB0E318392110EEC79C50CC844E607854D3
2C6D52E83F24A890B95FC3A370671F12FC2A455157B1BF595EA3E14929085DBA
1EC29C38F2C2F487CA8BC0696574F4D97784BCD075E67826A814D84D969B2AA0
1A9B83E82F1BED7F32F9EF2C85224925810A365A9D8E21D9FD21944D8BD1E10A
52F64E74E7BDD95906C31E33AC2E1F9EA80951E4920AA689DE799A722117650C
8F7ED57684A4CDF5D554B1CB65ABF05B2226F3FAD2BE387F0BBF649A5EFC7BF1
36C8ECEC8591A1C3981F3B8A7AAE82B7642C9DF1E1024D89E14F44C22D559E0F
0BA59CCCFB9D76F547735EE0F40D261F6336900716A4E585578EC5D5769AFA45
5C17BCA32CD5AF706309D198B7D05743D17711B8E138E42C9E9B2D301131410A
8D02E2EB73D4E7D573A06A88806F4661B0AE22A7FBCDF61347F594AE5FEF6C37
73F335A7CC092ADD26523D2BEE7D6858FD8EB114AACBAE769A5115F7BFDDCA23
830BB9DC0BB659B2598C8A3062BB4D58D6E0EF213BD5F4516895203B8B15293B
65444080B62ADDDCA6F9771997C4574658A3E865BBEDEF8E1BCD305A5ACF3C42
092187CDE8DB8724D14D4DA223CDD16E6515EF0693651A2D0A3A66D7E19CD940
1354E70E91D1079439233B523413DD88AC29A6F9004B478D6B6C70889E7BEB52
136F731D397F8DE601741DE4509EC41E52196A8C9FDEA0C8CBD8774A450A85A9
163ED0C8CC1080816FAEF0986F666716473F85FF85369F8745430EE172BF8D7E
4AAB4135794361FBD8D70AB1AC2065B09B185B1C8E9C4255F5522698DC76DBBA
DF193233FB4633FEB114CBAB8C3F498D0AE331A2DEF9D4E3C06BC4ADF8132CE3
C38C5F6AA9C7698A1E383942D0C6CE6F6240554BDAB784379081693B70E98C18
01A6B5C62854B3D276E1E29A7460AD65654709589BAD7E23898C781A33C18EE2
704CCE4C9C679AFE350E0168E12BD0DF359CCD59FA104D8A731354D0417B94BC
DBEF51157B9089806E6D33041F610EF1E29C578948CA7987EF5621585D16F8AE
FE0525B14946794F96BDAF0BD36479D99FE32BC07A2450AAED0AE4D3E3043A86
0F652A34C6998140760A039B1B77F03CE50B118D2B932F1E32E43D20631F1BE5
623FAC43BA476178E8419F8F9D7A21275F7AF0F8A7863552ADE2DCC586ADF778
8671895F7B2D7EF1AA59C9DDFE1F60AB10B6F9F83C5FFDA82C4340F2E793A0ED
8D143B9CB5FD8950EF78BB3090C0C8FE00A72C7D2F3AAD415B961F52CB0E71C1
2379A54962EADEF7E262E32940DB52D0635323E8E33DDA82C69EF58A9813080D
0D13DF2D681EDF7F07AF550F3C88DC4ED4BCF8AB4CB14661759C675824F94CD1
51CD192E88D97E4A3C59ED5565F2096BC24D7F12FC905E2D6DC46E268E6DD1D0
D5A8590FA66FE389609A47A92464C8B07E5ACF610D4AFB61CF85D718D772F812
C6DE3091F3A2ACB1CC88AAB0CD130921560822D8F89DCA5B1802B72CCD72F5DA
72A975945FBB6481FBC4F25889CCCD84E3374D94469582FAC2901B629CE41373
26A88F6E1DEC6637650638A22CC05BAB0E04758C7E99F48FE6C200F40F5F4FDD
ED3C7882787B65558B61949A229964FACD9FF2B634166C3C5DCC5B4EFFCE08FE
019DAB0B0085001908C4F3A484B4973BDFAD8CB5CF26D1D9A92A93BA0CF4B079
6C113D22152BCC51D37A229E4E4BD0B8F9C6B3C67B7E6107FAB7B0BE98E6EB83
1862EE554E9164C29F2A000B55A9AE5E10C21879B5A61D3BBCF2B9DB1B6F52EE
33A42EE78D80F752ECF4FD37E61600E790B267787325DB8D0098125D86265402
07E4A52B755FB1EB39EBEF8C5F3A75B96D98C17AC253906BA2ACDC45B30C4250
6AAC676750DCEED099E66D428930A8484AD5F62716C4BFE510F180C63CD039D3
99B1D9C4208BDE9975BA00B09507CD86D2AA045ED87A1B8640873D9B6C7288C1
9F4FD5440372901D17D378F39149346F23D2B1EAD4530C53F460DDCA13DB1F0D
B668EA4C8F3C9E38F2B845DE24BFEE15DF9DB5B2A6D4C0D58C10F8E3C4E29080
95AA92A2C4F2837527124582DBF9B81EB3B2C7642AFC675C4C1DCB2C662679D6
B692A04DA68DAFF042AFE03FC4BCE19873ABA104A9DC3B36E2ADE80DA3F4EA84
9BDA7D1BE960D91B6BF3715E88D977CC25DD7A119778233A125FD5AE10813048
09DF523EFE64D400BA4D2277366421F85519C036A4AF7E79D9015D88D623E83E
C18C1D711447839B74411B7B4A3385DA035E9EE81724A19ABB7BC18DF9E3CB38
01A1338E70052F863C4AC914313AB457FD1C652EF97E2AA16B50DEA5759F8297
54FF928F0BAABD27942293274D0297943A864F686189756B5934361BBA4D76B6
29D1A1B8E267F7BA17F65DE43BE20D3ECB645E33249F8E83376913386ABE994E
43F4D9C50E81F583D049D68F7F48CD6C17CBB9303FB192661D2DD29E79A49D85
7A2C5D718778DDF3CAC156B4EA0DE7E79E9AB6AFE60BA18C4AF2397149ADDEA4
7B1B5A6B4202DE3D1092A72523920CFC9BB999946FEE7A202A0FE61CB5AF6D38
8C0216D7213938576C81F457FBABE48CB53364CE4B089A976F98E08D98A7EC74
DFE4B9A148D9DB524EF389B1FD4EB8462D9B14AECBA8B20ED2CF3FDC5CC361F3
9C73245DBCE1C05723E725D41D2B5EE0C3F03A603A161713216AF97C87628B2A
F034C738EFD85CDB54556BC6C7FF68FBD0436E777131E0EFC7FA91D2E9AB6B3E
D5569C5C5673B880A2F947F46CFA54D4184BA475B5D0F2361EAADB7574BF393B
0459A8C4DA9C56A0E7FDF5AB5DE3BB012A4BB5176376C38A4170544DDFC5C889
ADF505F6E5B52EB05F1BFC0554A50A66A7F0E606D1ED7577FF45529994A69627
05C0DB6B1A94DBC963FB1BA1018BB02F3E02EAAFB0BF862DFE1755F3530F8334
C211D603F86004C9D4A7379CBA8C9FD8E30152DD5AF9200F8AC8B8FA39413858
E8AE25B28A2C24D781EAEFEFB6AA49B036F3A5D6B2E57ACB461D7EDAF9B56C36
17FEA2E77A32F1D21471D485F512E4D5E361ECEA4E7DDD253666AA024FFA986D
DF098E43023E3D6E537AD3B43C6F3A905597570A8C6B0B4A5E09964A8FA43925
639BEF4B041AD7722616B477CCFE4F4E166B5AB05F22604D380FD3572448A7AC
138BCE2F26105022A3AC5C7AD5348F07AFB5F7A27C2B8D494E4EA1401BEBE9DF
C0F91FD52CDEA7FAF96105243EDF44B4052B45464213B4FC74A1DBA9ADC2B4D6
E38CC1F7D36D1F04397E447D968F75DC250C3954162F74C0EE7A00160C3C311F
48346D2C00518ABADDEA6ECD7A1713DE7AD5B639995F98FE2FD44122E511E5FB
2FDC8CBDF6A69012CF9F1D1D6F5FF943AFB3C5EE92636BFD30E26E9161790F01
6608DA6A271351A831E47B7741A1EE4FF0706BCC02E75FFCD301929BE09F85FB
EE99D21B512779E121066B43B0324B08F47527C3D37F285153BF1EC03635E0A8
F5146C13E80E156920B7AD241AB7309430CC88DA52512681E09AB96FF071BC1C
3B8023F9F47A64E9F02623E0997C77BE03EEDF430B9B73AF085CD308DE598078
BF655B00624B869AF24C16FE3DEE57917017C65752C45EE8EE6FA1008901B9B0
A0DF61A899BABDCFBC4030DEB1309E91A49800A649B80FE0359DDB6BDCD292EE
0320B1B6AF50C86D1A523D4FCCF54A0886B36BE8F6E9775A927F2EE2A123BE31
F7E98BA78C2B52607F5AD63067BF47432AFB3490E5465BFA656C08344C43DAE4
7ECC664BCF700818D2FC9BBFF2EB908D91B24511AC525E15EA2EB389640BEAB3
1D2E9B06FAC2DE33D3B1965E05B2B363111F45FF01F93B5F3789A77B21A4B5B8
5EF3945AB516BE7B6C395E583F31906127617D2AE1B888EA771422EB425F3963
4AD887A0215C07DDBBDE53F1A751EF7D3B64D21A8A69415B1C921EC9198BC03C
E04A0F0B2113C7B19A19D7E6C07E010ED88BA5053465DD483F36AB6A169951A8
78D3A85D180832F10589F0FF9F1D002A4194A89B0BE1A6F385603E1A4D816B85
DADE28C0C67A74F8126AE35689EF89555AD63F2CA0FF6BE3B8CC09301BEF5ACC
DD50E32045C4FACB777CA1C5C32CC0FA8AB3125B0ACBBC32D386FAC013AF8224
33B0E8C971CB07469780A64CF28E5256D3CBB816E9FD1247E31B3B62EC4BE2B7
4B57119AFA5405B39FD265AF493DA79E9B3A2FA343BEDF77B840B2BE0A014BA9
6C9C79539574C2C49EA3A32B7A2826CEA8A852CD213A8C3EAF808D30E08C4AF6
34888FDAB5D7234377B595D9864A920F648436B2C37E25DE16CF312E54FD8DEB
51DB7ADBB202C8C98CA44FD069F63372B9182E8CE99598513A485B0615F0D3D8
80CAE4ACC7B6E8B260A180B7665E4C43A33EA29CBE2AB98CD0305DD935D8F0F5
EE365C1F19DEFDA17AC2E515BDB3D6B2980655EFDB97B56ACD5FAE1D80AAA5FC
3B713F6ED26A0E7A657DE220EC3ED53913C6F89B4DBC3027B3CAF2C6EF0A5000
F53914FE302C686A3D22F12830D995534A8D82E4B822F07B115BFCEEA61F56E5
B463649E058E104A8537D3D81053D9DAB76063A19BD8063ED4C879861B6777AC
724163300BE8601114CB0940FD9FCDD82A301269AF10459826880114143B3D73
F91714DF5153EB24AD6BF4739C511499D4D2B1F245E01C1F36626E3819E7DCBA
9450A2BAC75D0E0ABD18DA8559D7632BD41D1B82A28B48E37067C10DE96B095B
4D29114FDD325E6CEF2AE08263950FE6CD70EF9B49A0E3E2DF4FEAC551B910E8
AB17977A1A785B3D30983C4FCDD1836FEDC80308316401D8B181EE2D5E09EEBC
53684706E5AA02982C49EA0FE82B5C3D0E0E591D2704C329A4047457D5602459
CFD87158D2B21EA834487F659F22DE959D8A41598061F2E1FE237A54CB90EEDF
717B1904A90850C46D793D572A1C405E1F8665870D89D1561CB28638D1D24AA9
F358AAFF93B9564AB1B910293F2CF30358B76F04C6C0E80D3AAF01749ADCFB9C
2F8547D95025D9B717498EFC65F8B5D38042D86D3F1C7D679092147F5BF9CC0D
4CB358EA58704A8EC892960F9560387BC6B7C2CCCAED347A6C741B8976945E19
AE8761867F79996954F36C5C090B0A18F81586A94C06850A116464090C441AB1
D0BD751575D0A364947AC31318BA2E9224A7554D77CAD3FF8AF4F8CD3B277C28
9C864D59A1D953121BAA5F9D9225C407C60A015F642EA2054D7DF02E8A41DA9F
3E4CC07736068896CD3CED88E29373F15EC4410332BB292482F4EAE349549927
0DD88D160344DD5A66AA91E5B215EAA4A65C880D6A11F2D202FF26F6AD1B4D86
C188F1E2EBC7191F8CF6627BC3064CE5E640948E27E1F2FA81FE54BE6C57EF8C
2B2E460F08608C22B91BEB6A6961BC58263EC5157743FF649F75309BB2270A39
F3FF2A2F7121B0C1D25CE74C0DBB29116D97B15092EF95A63990BCD918F159DA
7EF9DF36E73806275B85784A4EE507A70844333C992103556ED89F984EB1BF26
52C6B23574478290F37C42140BD42106DF4CE939D02CD15317738826E365EA2E
5831E662E3F99243D20E855AA9676AA0B493D7D546F9D46F5873F4E401797235
9AF2469F71248E271FE38DB3B824A78B6761B22CE4D838D0C07EB52F3849F14F
D66B8A34A64B53A37CF300ED057A1BE2F98C8C73A33DAA0A97C4C4DBA825B0E4
D340DAC9B1CFD59EEBA7F5DC2C1BB8614BF8524B14273B086F69E1AE01528C75
262EF6C5B60BD81D2770945D3D69DB8AE094B48AE11662FFD3D82CDC8C6B8E69
3CA78283525623B1F41340EB97BAA2AAA2D619527A955C5840E062C3505D979F
C7385149C47AF9B23BDC083B62C5AE6256BD512098DA104ED36FECE5E8A3A1C0
0D543A2EDEE3EB5D2E44D418FD23D84FC4E874F5F49506FC6999EEFCAADEEC12
77F9FBFC43D5683219FE9F9089EF50E6B3D85DC53C915A90E7B8F96E9FC47D29
5DDABF9DD69B17A2799EF97B8A93A198E955D662DC9AD78F82C29C3DDC08B6A5
51B0C06C42F896029B671A1993426378241B3230E538EA282FD6243BE1BD4F9D
B7BFA685B2B8533B1CF6A78D926AE9BFAD727FD97F4B7BF77964423ADE6B21CE
57BE8946488EBAF4EB40BEE8B5C55D9F5CDCAD17EA73EE0AAD14A6148B140749
BCF7BAE63A8A6D1F499F067ECB8C163606C3851355ACA79EF5C5033D4A4B8F36
B344E43F5EE5683E3A7F18BD164E2E92CBD92DB51A60BA9D54EA09C0E2FCE850
7F619CDA4BACFA4A9084A08BE9EB710C0C4158958CD6707E3DE6C99E7B22C7CC
70F0229EA507D4DBFA5ACE89BFDFCE18AA88283650B7C48467250DF1DA97A883
DBEEF75D9A9869D1612D5D29C26B7E45476FE9A4DA66E7ED5B79615A168A1A4D
A7212D01EEFD648EDD54A1BE9C8ACB2070D262AD3270B5F307E18BA5F2D87535
3AC655038C76A8C28C5DB37EA170AA764573F1394D6A310BC16894B35E8D57E6
CEC103906AF6D480C76F8B0EEDE11F9BA22D8CB5E80FBFBA2FFF1155EDDEFA2E
F538083B9CB7359B7501011CC5E799B3728AF82636AD29812F61D0894D782011
9F555DD52E640679AC1F52F1B5E07C08619F9F9207BD27291A7AAD14E945924C
F1C45F6C5921F3B67F8C92ED932589114E28A4E64D52AD39D3BDE3E416E13D6B
23272517D28E9E093AE16C3658BF4870481D8FA433728039209E7FDD13ADBB95
A0DDA073E552117442D802DF52CEE62D333C8680E45B76EC57882F78857C87E5
74E30710BA9731D8F27AE69A6B01851F0E8333769BF901868D3A942347330560
1078841CDD937194ECD03E78CBB916BC57037DBE008CF0C8B52429984E45911A
2FA16D8104CAFD1564D3B589B580D0100E116E1CD6B5888BB4EDE0EB9190DF3F
07E2D6219B7824A3FF370EEFBCD54039208ED7DA3A6C181536F502EB480D7C43
865049C3FBEA1B9E7BCE95777759EA2981114E7682641E7F09BFCEB269B2B71D
44B77142FCC413AD1BD94ED66F67FE83BC051480758FFAA8B678DF131FB3530E
61E7C365D68A64D44F23B08D001E397185892595CAB07E357F5ED54CAF1186DC
0C60E13D5CC57BE7A2EB9D0EC0BCDB65EACFBAE64657F8A3E9827F6E4730B1F9
745DA9590BA94CE6D342D6916059AE84C186BA3DDF8A3D03A6269D7BB2137241
40C128BE483D01113B2BD7AD8D322D32EEDA3DFF2E9A386959299DD9529CD003
AD4E0847689E519FBB2B7796522ED09DBF020D89506CD1270C0B3EA235BDEFE3
E2419A962F17A615B1FD4252DB7D7139592E2A6D585CED47F2C5E05587419C70
AA92193462DE726263DBFD9635B70589521B47C6DA9DBF0F87E5F9CC7BE01927
BD85A7797D499F07FFC01CBAA10C0032E8E7384836BDE8A66BD3DEACB7FFAD8D
5DB44108662E33BD80F37982E97287961A1F4AB0041A3247EB7E667B2842D65A
5E184D7383D2D3BA577DE32847B3CE5B6F1B549B9AEBB0B61DADB95B6204C044
DE8B99D6205FECE23D72A9F61619E09C929922E4FDA94D06EC532E7F720BEDE2
D292AB7B01E9712C464511BF6D56A1F0B72D203A7C5FF3017508DF9821E38471
21A0080D2E917EC3E48A45B3380636F06F3DF2CABFF3B59F90EC4E790133AA57
8C8AF018B06D7B9F5E1382E0A0098DCDD32D50196DB55BC8463033C452199671
D8FCC9BD8E80C4653E80F243C7469D4550235FD56FB84D5274CE25BBBF3E7B16
0A35E96685E39DE90AE39CDFAAAE022967162A1F55641176C3B6700F1A001295
64D37065A0F6F9D726CB2CD81B49A9F47C12FF76284D3B01CF3D87952E5A701E
0F825B35DBBF865F372CC051A9D01408C9615F0DA4B21E7AC862145E3D814E78
17C6B9307253EC20A9D8AED089AF77F0C5D896228A3AF8A96329A5E2B530D6C6
977137319321BFDB6A526B7AEA07EB667FF9BEDF5E26A4CAEAC397152D34458B
281D8EA05D66B691CF201E3A4AFDB7509A19756865981D6C109D9D4FED1FCB48
3BA3EBCD9AB2E58CB96372CC1CBC690B43D80BA21706F748014CD294E91F19F8
3E7C0F58421A0C3041E852D07B30951C7BBC506AAA36D5F42B1CF906AD42EC31
B59E4DAC2C64FF09E360B3C3A85CAB5CBB66B464B941F26B04B69FB1E640A4C0
9191F2A840375C3B8977CAB538996BD041721579FA422968D8557733F46E88F4
93197B79723F7A2CA078E32C968C0BADA2601C1CE1C1B4F81F8C27504FFFF0BE
8E237AD5EECA0A809F8EF098A4B06FEE33CF2810647622AB644595F7860F1538
363CABDB8EC033F6D1A5B6E1D8A2A3EA61B8AF242E4F815D3119DFBE9B4D20B0
BE8BBE3C1A5459A27799E63F136B6CF3BF60C4D07048BCF34879B683B2846019
287CC9C411C0FC0007733572C4C243D9DF0E9D06A41B396DEBEAAFA70A015209
3E834FC1F528AE69C8454E5D0DA086421634EEE0F45A6CEC462468AD09E6EBBC
D1EB55B342D95E2505A17DCD8BED5A8ADC08494E5BA8B57CE522758AC34578F1
9A26D9BEC6A777904EDD6949D621BE879C3EED73977F936EA40B070524C76749
AAC7760A44DEB1D538DBE4434034B48EA578982D5F6BB2C396C57BEA6D1DC84C
A22B4B525D05C90AD313D29262295E2C7E90D9F96E2389B76EED40845D9AFB54
CAA90EB44E4C1819F1DF921F5B74E8F1633C58C6C2770DC561F2703F8A109E6A
84CFDA96F7CA93B7288B2491380B2F4F87646F6BA4243B7827D34D3E982DB93A
891AAABA4C543AE5D534E65D813E0B4E320CB26E2BD241B993D1925C487FCE04
C40D2B19109CAA85E7535243002B3C3264CF573DB6FB5CFB0046A0F3744E683F
88050A9CC76AD73A11DD8736326702EAA49285A45B4BE4AAB05AF4C971DE2097
309D269F7318EB0E1351CDC979DCC5C686D4C9E96650E4FA7093056682E8CAAE
F1F93926CA457899A06AC3DD5F51240599607AA13E1F15030EA41B1E721FB0E2
3746B9F8A98F0A163741A724CEEF08DD9F520F03E5F54901E7D1914D4B91D3E4
D1A8B6C56DFDE887E01FCF6FDE7E553889B94401E231AA18D6C51D9DD3D307AB
F939BD3783CDF913105901D9477A7DAC80AF7C8244917DA635EEFA010F6283D0
F4545EBC55591235C56A4CA40CB555A4BA1A2E7E3B37375DC205CD8FFD81E90B
BF30579F13EA06A36998F43019B3EBFF84387DC0AE4856109095A7780A665FC6
63276F38247587B5B9B36B62A41A88A2BCD96FC01F540355F9558FD8D9D5B747
8A9A196FB1265991CF32B730B9D0738C4058BC14A458F48494769116E197A253
5597ACFB00C65F6F7FEE25EC23E5DF02A3787BDB9245562286488CDACF7FA1C6
FF8AF6320D750231B552FB90F12361FFF3BA821F31DB2754D4975BBD240BBCE9
4315760513017D1B7C37610A75DEC881250886C5863A4D3B7259B41E09C916BA
B4746FF9E2C557AC4504E3369E3A3FABF49EE07EFFC894400464219578846685
909845C2A0BF4CAA5FFD6DED41E0AD41690F22866F0EE5D39073FCD7ED1AA129
4A88CACA2481C23A34DBE22090B97CAAF5171AB72DD33B92A53D58C697C487E3
C9F825B5BD086A6F17367230AB37C02E120339A1BAB7493AE33853F181E22738
DDAC41D60D4F71F6CEC22AE275C6B2C110792C0F0A75EEBC9695DD8C5936023E
B71C52CDC9D40D9B1A3233D8FDEB2D1AF844712AF0F70DDAFDFC2E0B23C3575B
A7422D8B8743AEA49E26DED6E9861BAAD4020FFC9E1E34E55F359081DB55863E
11A21455AE0DAA5C0FEAFE4828FFFF9682A94A759A52DABC55192C708AC32DD4
739F3143F0E12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B2B662D2DA2A3096
0687F2DCF03E8EC3B3355440F8790FA57062157E6D94CC34A4E8E3C92492497C
655970855C4672FB06379D3A469D9AB505B94F2B82BC63104BB1514F2FB43746
36F2E5DB8CF80B65E415BDD44B433185E033DC662AA69A316267E1B0C145D36E
FDB7CFC476690168B83AC1F2FB02C145A7F169398989C741A0326A1D62782953
55E2C03DA634AA10D12CC0C35B8399330235BF13206A3DA1E62970AE119EF374
04C17535023E73FD32A1EF0C65955316358B689AF6978D929610EB3B5B3F8617
9CB516D728726E9760CD44D71FBB7259FF3D745033E903863C24A2FBD2233C85
4A7CE8539682A09B7C6820CFC12980C2E94B0ED3CA0B9CFFFF0802EF93C18A00
207C13BD757BD17E21925621AC4EE580A496B1062FDB354D0361A3054DC28FF8
8E4D0A27D4DE5AB3F44DF52033A1EE28195612BDDA01232775857EDEBD007AA9
E1BEE3F6605B45B2B19AA1F17DA30AFEB722FEC5701CB3691A04D0896F1A6F2B
30F1F2C83C47168665599D948896FB43C31F703202BDA74F19126C17DD16A391
3F27F12C896BDE5C6BFFBFD272589D06D3FAD451B9C70A1870543B57FC8ABFFF
46A2951615938B81AFA5C99B02AB37CB7492A3032BC29A9F0FEC35CE3F946D7D
804C18E9DB580E492F7617EAE272D8ECDFB1034D0314F44164667B8993158E72
300A27BC5EB5D12BE21B2B2B48FF19EC93CE7420EA4E8638DE339C8146D02EC6
4F0DC1C91B985B114CE454186605DDD70CA4FD6A4DDDFF737BC32456C980EBB4
EA8B81AC104302529C635EF4F0F627F510F88B13609014E6BC506A9E9F251401
8792CA5E16B365ED83C24C44A68CC2E0CE3482804FE10153467FC0AFC951B645
E30ECCABC655EA0B4027ADA78E407D0E670E2F2454556BF38810457171CD44BD
6DB6A7A50B07D3BA3E41BC17DBD54CEF2C90CDBD10050A1DFDCC768878F88AE9
0E87FD781289145C5009490ED863242A2203F226507612115330743692D0D47F
C6348A527EE4B7681DE25865DD5159CACB293FE234CBD463FC2F876B779DC3E8
C553F076877079FE2C27A8F95C3A194D84C7B6487A232F85E82EB2C9D5C2056F
460B57D118F5B418877256CDC5A7A08C426A39C954F7861E03D364410722F6D1
60A04EBCC9B06A2E3F4E207AAD54A6A4BE1FE073DB7DEED7DC4A62C0B53A5731
671DE03CE6FC40AEC595B42C0C9E56BD799B6A93858BDF6E0BA462BADF76E107
548BA0552E4D03D2F128BD6AF030D18E559DAB50A977CF474EE1410D7097785D
1205C987214494EEF9B605BC284EE34062E3B392D2CD315816A2B33F25434DE5
76FD76BAB1F0ADFDF40D0BE8D9D796D7093AE4B6CFB2A7D380936EF03DC811A8
503601B00D4CEE94D1CEDF1E2D29BB43864AB5B770A14C98A43C9C773107BC34
BD195096C9A611AFDC17298B4BC7B1751EB7B435C8664B7FA44D468232B48D68
3FC3536CAC658AB6CD5E16B47B0CD568C66EF1168FA287440D5D8A2E1E7E81C9
582C36A894798598F28A525CC0DB7CDE2FDE3B37F6BE5F347D6C294E2696139F
0365C277336D959D1871BEC575BBC7636091AF42D8B2A4823899781D1E749C6B
CC3C3B73DC0CC3EB09475E7E7257B3142AF54A203CA38E8B086AFEDC71A687CB
17E4958E7BB99F1A104B0B38943A1E86C4E965501F2271CD1D2B02623F2BD64E
6E57D1ABD3CC18C001B3CC5287036C50757847790D1948B7FE979969998A42A6
9C01188C5B9A01C4B661F681941B435FC633150A8281CD41E2B4271AB9689998
B5EC31CA5272E8711E9E015E0D1D3591BEFF2D1E7298808BB9EE7325CD18DFA6
A8DE369F3FAA212538014DC7DCEB4DDDFF1266E87F8449EA57ACAA7CC99A7EBF
02801B05E6AB4BE8D816524ED13CB06564350AF7CA583A1573D40EF34ACA9A41
E986B66DD6397D7BEF067C7257DF083F2771255EBCE57776365988BC7AC45FAE
8695FD595313E165E8FB1005C030C9268E492FD6C6CF6B4480898F7AF245A0E6
D9454C95E9E7D77E07D64C91659A68A452BD6EC7369BCE21C5BA8B1D3308C2C0
8AA62D0646F262EFFD72A5AE2829C0FC8BB237C55CE4C8CED0A831A6D84DF2F4
0D7EA9206C04AD6C3C2231C5E34A93ED6D24E1D1DF16D6654B35FB04C8D9896F
238737DB296B9DA4E599743D37D975968224C50A9B5209F7E581E04BD937DB4B
5D75F9026552697528C7E8F4904A1A00E1BB27EB0303FE4A3155D41819ACC33E
CAB1C24AEC817DFB50F53177890AD60FF059AFCC4B67828D60CC8C0C1792035B
C66EC4E30AF7620DACC3C175DEA9E4AD4B92CF9327C0B4AEA7AECEF514F72326
C3F650CF1C6F62E2F3B69D5CD73255BA48202A5F61C55D91B6309E7F1224F81A
09A5696316B1DDD8566CD049434825159F4CAFA356E38B5A0A71BF9F85D77085
E425643F78D0241961D51099C454900E33839C306D63E9DB75642A3CAEC0E02B
6FD9BF44B1637415C3EC919B6E5DA9B0BE84A132E345973DDE9F3B04019CE02B
F379243E0850550ED5A274188A69F0FC132C56972CD11256C8A41505C5803892
AD1A6AA18A21C4FAF6A43F3D84AA8A2296E2AE08995EBD925705AF75F33B1ABA
5FF72E0256646342DF1111DC4F70CA8642AE5A5463A92BFFFB6279251CD4D6B4
CDDB087D9A62A389C590700D01F43DFD338485347C0BFF45043294DC100B0CC5
152259D7DFADBB3FAB61A1AAECD0DC303FA6728B7E1F7D96DE9699A98604F4A3
1EC4C71DF4A027C2FA705ACA11C2A6719E94730DEA008B164DE6B4A2EE2376CD
9FF8C58F7EEBFDC1C940ECEE3BDD6FD4D3F5CD9757984BD58123DCBFF4518D1F
02E07794D36505D87209C8FDED6D73AE279EF12B8D0065D37C3D0AFDE3B08F88
C9961E8137897CFA719892FD16526A057057F21F7BC923340957142B1A91E26B
1708066B73C74412E8F6486B8A322300A1E3AA07AF91F30703A8D69B9C0B4EC4
13CCE70D9BAE626783C10B79E2C6129504138041D13A4D4F1488C39AAE610DA6
49A8307E12314A864470E9C8F9B6E5C4662E406BF29DFF6E01E8662BADF79F03
E033D587F0BA008D4B6AE8A432C28E729621556740DC1CB6F481B0385ED60CEE
5EA5070F08F2045155F5CEC43251BFA60655881F568BC224101B947454CC9DF5
4FD6F361B0664B8EF31A3A42490DA4BC6F938BB5B219B7C9F0E930AFFC09788F
5DC36F2DE63FBCDA1E3C3D50B413DDAE2003E308606D4D3EA7E7391BF7A5CC67

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D6F6BDD983146333DDA29DB81DA54F44DCF5364857E
A20DB59006F78BA077D29ABE7A537D2358B1DC13AE97ED90F7D1AE27A1CB55C2
F534E2B546BA5531AE88840CAA741A57ED1F4587A72E74AFA15F15C69046ADB1
B3B6C392AFD856716F96B850D6FF61144F6A9E51CC1B8A86A35087D4A3A37081
D7529F94493EB4739C267B8C54B3A1FC2146237C1D110D4A10112D496250647F
37A36F59299DD9529CD003AD4E0847689E519FBB2B7796420946754A6F74249E
9F5EB754DFFAAE0F1936A0063645B0F489940C0030CC4694BF66B002DF4A5276
1B6CEFC37BFFDB7D6340DFE55265AD2D48616DFA73BD22222ECD57E442DB41EE
4592719F816E3A27E315FA2DBBAD1016DEE5B7016B5BA9BE25E8F90C80723BC0
3D94376DF869923899FE218AF45CBBF0E38549F95B53F4D5E0EEA2F21919F23B
883C113C2E7A8DF0AB9C9B35E71B0BE1A3A7054146A46DE0F2FBBD5CFED6016A
7F8A61F00CB29BEE53D6328CE84D859005B46DE8AF9E0AB043462ABAB74B9D77
E75CA0D9FC3E4CA72D84970E59DF93DD050DAC8729BCC6295747DD18ED3EBD42
DF28CB68A536E380517D0677AE84787D2C6270BD3EEC27997BCE72F4BD148FAF
44B95165076E6C2AEC6F7B0BB69266D0FDC747F0F89C2635D595FD984CA1A59E
A7D6903CAA69ABBDE28354EC29F50B434FDBF23713AF8A80CE98F77A8DB7603A
320818C51BDA7D5CC21C0CBEC58D042BFEEDC6940243B30FE5335239FD3F429A
3CE8FEFB2CFB20525E56F1F2A4F3432E34EC92902761F7557FEF701AA67B20A9
B019C760B2BBADBC356EE5059463613DD36491F24D7C3D634B25C2CFBE29EC53
1D24870365A38AA8C5EEDD3B474825105BDE26CD19D97B0DD0851E102988B469
066B2139F4B5999369C8BEA6BA277694B4AA7C84BFEBC5B85EC1006DB4F50EE6
35A4C8F7A3B6866F93CA641F3F2CC939DDB477F5A3D7ABF80CC031C2F2BE5D63
3E49E6D10F7E1D3EBAC9C62A85B0FA3B7D20D6B99BF18F27DCA9E7971A3BA1EB
49A99E4A0751C83C9E00E14195D91E30C3D2E555C654EA93C17FC5FA5386AE8A
45898C17A2977ADDEBB88B3EFADE13D197CAB89B8A9C0B39ED96503E76ED4DDD
5CBD3F1D0E9D0D051655BE4409DED3C88D337082EAAC56D75B67922AE367B5D9
5FF86D54B725B012871719B3D70A94234A5D37E9CEF88BE26DC9F3D41F14F7BC
111186A0F38F64220DA6B5818F4258AD0ACE33EFDB43D3E5DAB48710EF309881
61FDF9A472926A8EFBE651B0CDD5EF5539EA278477BC1D0056FAF929178B7AAC
AE1D371228606B58787EBCCA903E99F7EB4E1D1C5ECFA2D925E13BD7D67620B5
D4DD42D1BD888D966E97636661BA71EB2229A1B1EED0B0F3996A06852EF82E1E
517A76130A94ABA8DA23FB9B285F57C48318B9B8647DB6078D9AB19B1DDD3345
666C5D7549F81BA6B221FAB4FCCBE0570C5916F2EA99E13818D23C61043B5881
BEAE3EA8F1EB48AC809BE050BAD39813DCF287E7B822B598E793630EF8783BFA
BF57EE205926A3FC636BA6AB206648FD74B1077724560AA6AFDB6EC9401084DE
82B50E7615BAB550A8E0F36D01E48058D763BFCEB4A3775285081A42B6D057F6
EC114201BA0980FB9D57D114AE2C0B3B79737C4FB5AC8873282C20ED288B9AF2
D9050464A9EF6D1A99402FBFAFC58388A7787CD10ABB9ACA1B14C9B44126B900
4A1D3CB91E07B59DE674FB6221DE7F70742DFF1C32767A1969F241A304D2A538
771C2736F2BE8A9E8E3AFAE62120CD26CBE665283763DFE5FAB469647FD62073
AEC9C0755DDE3F75A125E3EFB2E348375AC634F353E294246ECFDF32DB614ACD
D35C73A406DD513F69FDA0502D42A692CF0445C15CCD7E924F1EDCE5B4B6FBB0
23A9F6ADF2EE46CA9892E41372567D578D98AB3F01A7558863287499474B2A07
70C08D7BAA1C9495EC43CBF2532389AFC45E2798140DDAA61A7C6E7F88FE91CF
5C972DB80E2536BC72063FC06EF88E66E8CAFD3809EC2D9F5070C8FB0EE71C20
6C5B76AA89D4D97C41211821CFBFC6C469C8DE1D6DC82CD641A944E6BE297E2F
5DC03EACAFBC7CF408F62E8C5DE233B83C0FA83D3604E6B6FAC063CE5F00756D
9F2EA8F7CF930224FC37B4B2187CCF2E47268C60A13171710D55400D109DD1BB
962993E064DF63D57F462402C0F82938EFB9123E754C4C97C18F3273E387FBF0
C1F3CDE8AEB8DBBB1C1FF12E5BFED5C93C1F71436C42BBD0D99EC0EE8ED70560
40B78A4C87D5637F5ACB47D5D41FFA632DE1DD2743EA718F527BDAC2A67ACBF3
0930ED372DF336D7AA32212E41DB9BB0747FBF07D6DF4B419621299872875824
1D75D2E3983C2FA852A1A9CA3304D95D76B785AD8CED27C48B3C544DC0C42593
9CD279BD1FAE526F7BA16D270072955D4B7FC788F3C9975CBEF3116EACF315A7
003A3A9BA333C8DFBE41ABF7442F23B380EDEFE95F43F226D4EA97EB6EEC0408
7B177117042E3CDAC1F10921DA469FB7D8F0175D7B013698B3B97F4F076063FD
B71DAECC9F8EFAA003691505CA98F081115B8C3F60CF75677B6E5A7485BBBC15
D805A8D2A9AE2488AD6317063073127E8B4DD8B90F76FD06B28AEE1FC0DDD412
F6C1A64905C993ABE2D959FC5CAC264C6F994E45F4E63C120BE8C591CE3482CA
1B0382D6D25869A664F4172B9E540C12CEC6A55FF105E007BC1737628A7E3867
0DC06577F1D8B3F77346F602991F1553B00F7C30E9A4637B013284C56FD0680F
0CA893F265D661905FA0A8F33C38EBA194AE19475C1B8043F729E76F02917371
86BC0206F9FC5D061495326840677816E2793E27627366100D13C49DFCEE34CE
CEA2620CC3B2B0D0B5888165081166CD181C03F72AA5F93F3DE240AE91431389
B8EF6EAF69A91AD94D5E5787222C31DEE5690409AF51A19C8FEFCCE56952E90F
E74CC192AB1C5494A751DFA085E02B67F1F49898A2A66C7F08F8D690E9A583E7
A9200B1742C039A5F6CD9248E23C9D05A9911727F92C7E6ABED6895BBF928E38
9218FF77275190C9C5CCBE03C99973CF3A70D796BF0B9F394D886901C4BE9EC2
DAF9174B05D8E0971F82FD29B25BDBD973C1C57EC077B2F62663072885973233
7C0EF730BF96C2AB93307FD16938B59B1883BF0FD06A1AAB433DB93E696E9170
287A2786EF65AA2972A68450A9AC16CC84825B771C32AED590434831B500E783
CA44C574F0BBC29A355A16DEF5C93B0DBF14B2EF8C30B25D50BB3D35FA5165A3
FB90CBF9FF17196E21329E5EAED92B08F5DBD571F8DF568760E359BAD1409729
8E64C0D982C78808A212FDD56CA407917FB19FA6740CF2FE33663E2263BB143C
DAF2CC0071CBE52BCD44DA268AEF6C1CCC1B0174BCA511F1118261A09DC81E0D
30CCA1C6F2D3CAEBF41F5AC7EA12139DE25EE1B224DB61C73A130D3C1B81F8F8
0A859CA0F2E7CB032AC20392E527D52B7F1BED8C3586364776D350CBF47CF509
FC1D30F48BFA90450618C64731C66FB6641D80005C6B801815A2737FF9939DCB
61D35A421508DD617E7CACA791A1D40B11CEBFD4791D158F72B6D5907CC3FCF2
9A1C30C7E7D099AB88F6DD8FBD5731D42C1757E51B04645D5090B80D482B858F
2F9DDB79060361E7C9B54E68B148866FD9DF157BFD00C49235EDD9089E384123
CB1201DF4AC5A33759DAB42843D6400249B6252CFA47B063564ED0B6A26E6EAD
BE7560B9B4C5936B1ECA4CC8DD910925349A11072BCD8D2E95C9739ADC597A32
2DC7D4991FE9169B1263B76BF69299D82DFE46DD347E2CD7CFD85CEFB7BB4A69
31B74AC336AEBA008B52E295197997D1EF695ABA46757C29BC2CF57EF6C8FD3E
03D2B15854319DBF07A444FB3743578739161C82B85AD1C857697BD47B988563
CB3E01E39C6DE80EE8B5A8D2778DB669B8DBFDB91A94440220FE80F4C8B46FEF
26AB2052CB06A7FD5626F2623BE2B8411449F5750904A56683E9146BD9919760
51BB22D31682D23ABEC2E24FA89704A7B842FE04004DF13573C82E8229C8F81E
7209E53F9B149F594666FBB5585F7D44E3980D0687FA78E0A17A1ED4147EAE96
F3F5A85ACF83F6978579CF2ACBD30F01DBBAE7BA9B4C0C0FE29E6DD2F68F3D87
C14BE57927829AB008CFE873FA0774A5CF61ED432C9A63344EB40817DFF6E861
D806A58054902FECB788131EA0BD2E0B96D9042BD8373AA66B1DA71D826A9249
01F7F34C7675E5796151EC1BAA2D7A29D18856AA8FF2FFA7FFE8672E1BC7CF42
9512B45E850B3E1EE29E8AA197E87FF777404724FF1C25E689F69EF4F3FB2AE5
03BE5F418A39450CC87B1C1978A58B140D8F8E30025A5EE21EC6AB5382EC8C5E
46A22E8DEA8E7146837223316D9B953AE23D61648E116EE05DA458BDF4EAB422
D060AE9906D94323E1AE9A227E7EFA9AB6A4031C410258524563DAB7E213F6F9
B199FB2546AD27E548235C85DC062B1EAC09CFF1AF02BDA2822E489AAD1AABCC
C2F7904FE1A79B6A753A53512954A72D9D6330FB5996D3BE6F4DAFCD70EBA269
AA563365C4006058DE54201C17E23158A63B0BA7280B4221F56F71F4B2908BAE
CBAC5AE43BA062657EC493FBC9BC3E20842BD6802991E47FE0389A740C4AF4C5
3101E2530B94810815E9E9627BCAEE97D9E5DAF8412610881E1A906363D10418
0C512A16A9AA28E8836E440A2D9756D122B58B17DC949124B6A2FFD4D7483E82
4333B7ECAE35DC62FFFE2AFDC832408B55164EC2848012E880B86BD24FE55CC2
A2BB87E8E910BC4009B232E4246C0015BC5FE5CA15E755C6D308EC50F72EC752
E30D965C8FB16980964257C379837DDB2F1F129819661286BAAA71BAA4DEB61A
12E55143836ED6B9B2A82F6CC1DA3971416E0D883B5845756CECE20632C0C295
18EA86DF3A55F7E33060E4C9AAD91D9A1FD10990F7CC99FCD4280D074617A0FC
BD78DEA586EBEF8DB6C9A39B14B94D180EEE10E00C6A9C817B403F3B740E39D2
9E8903702BB4E3656F6C2028E97CDCA298C41A6F679865300FA7FB97C91D5A7D
07BEAA6548992B9EEA4126927132E44F3038D4B63CE386465DA3FE59E3E4A157
220D51A4649430116F296C2BF502DDD603620D208A640F566954DCF1BFEE63C3
1C4C80E431A8A78B4A0C5CA746DC05B38BDD90A634566D6582C18403B73D690B
9BF1F1D3603D6B78A1C642D89390B99E58589D8350F0B01E35CED53E59D372DF
5704DC4B00C6120E15BA2987330AC9AD0925054E0AC0931F49028FB2FB9CC39C
DE0C6BF14945ABBC307B1F5CD8E4B913D66646781541A0FEE150982A19A2E287
7623506C6FEAB72566A923AB2041E57138FF0BF810B96AFACDC41F3FAB282812
BC62A9D7E1C4C805B75E3E488FC88A81D6876E7702EBF036FE19151657E8C0CC
50995DE10410724E8EAB8EB54F0F61F205F52CCD54257B29568426CF02A82E7A
8C79A5F6084621D3FD3E4A8711E7E3E2D4A20CACA7264F858986CD74CE4EDF35
04C004AE553040FC5096C4EAB1A402E73ADF059EFE2C480AC61D8522AEF79241
DB4494639F73244B3AC13EE5796757340F2A058750DC5E2A495FDD99ED7F857B
8C8DFE8F3E6F15342FD66513AC844A20D172D1F48D340701518B1EAC5FDDC91C
20E1FF1403FCDF8EAF466F5C6488DB11FFD93F2B0A9E338EA52819BD395257A2
9CCC13ED72C8A0AA2517FCDDB70683EA5BE4226439FC39A13A4A565A109C21EF
28DD0433357615AB0BD4C9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic6-Regular
%!PS-AdobeFont-1.0: LMMathItalic6-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 417 117 0
%%EndComments
FontDirectory/LMMathItalic6-Regular known{/LMMathItalic6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic6-Regular)readonly def
/FamilyName(LMMathItalic6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMMathItalic6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{0 -250 1241 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD113E9A4707A44200A15F1431F9E64
6F74A5028622F1CCB472247A2D3C92D19C0AF82A97AA93420B2252C089999F87
E9B99CE919915A7841E47F18EA2729DBFB8D0F265978077327D4885A16B99026
3AF09EBA03D665F320B724646224778F5207197EDECD6BA321B46A9C7B1BE014
C7AA72E7AD74DEF4CCFD1905F237AF725D38159039E347BB692EB0BB42D933B4
A4F5113867999A3BDD6E56036DD46F7BAD9445E0EB69D6BCF844741CD349792D
3F6A794164344B7301C4BD8C500C92214EAB1BD409FE0D61470E69C69E668D73
F1418A89939E9AD8AE9F3EB718A13741D72F79B4E51DEFB2029F4979E0C7F79F
8178AD7DFC03558964BF7FA8302240FA1B7CAC01375924C41D0200C60452AE3C
2CD5F7EB6BFA476372518118DAADC1D6E053E534830EEC37A0160A24FA76B86D
3FD75B97E83D4B1E1216C901748E31B5AC51D15BC8B8EB18D83CE35525239F0C
0FF52411E08D5893C09162BFA0EA49E1290193D19157A30A5F21797106802635
1F19BFECA6B40461144E82A051FEDBCFA7B096E34A7EEC13F93B74652D2EF4A7
08522EB97A15EABB2AF74CE73F5B8935F65DC93EA24E129BF18D5F8B4E890B81
105D0673055DAC2775314AC07C1D99428076035B0EA20A382B61A8B4548BCFF6
0F0A48E059E7497260326AD89AD9815B1F9B36430AB8527D61C5EFB8AA5B6B83
2B5053D7C25089EFD48A2E023C219158420D77BFE7CB795628865715FAE6EDB8
89F423F0B97DB7AC2927F97EC4ACC2E9F4BCE46EE66B37A2F169E33177ED4408
5F93FDE909FA829DE0AE5D9BD0BC4A75A0141AA472AD0ACEF816F27FB4A6CB04
13BF8944FA31EECB2BCE2983E7CD2C9C68868890B42D91D3182096A7719209AD
32A69532F10D71FA1567B10B0CCD4813495F34F89764223F7D45F888FE1889BC
F7E9E0C3E520C1536228FCE80FD44B49B8059ACFE6DA964B7D4264039022F974
E8A6827C6C472B256C93764DB10436956E134C91DE3157FAA4BD45965949563C
96042779A46D091414276284CF0B0724C8C0A9A026276ECDA2CF30CE3FB80656
BDABA466503D32708C76C3F755C52C22964438FAA61F9694817BBA9025D99E3A
86A4DB4C064CCBCF3F06D0CB07AF646EE7912F0E113563E7B2708EA788D1FDC2
2ED4BEBCC59426426F104845FE5C4E7C75B9499AA1A2293DE0F1635AABED98E3
1EC57687C22D808125EA81913338B104F7A8F401034AAC78A9E51BC115E89D7E
BBF9496E3359BA42560E881B76D6D5D885CC186681C90FA96D04926140B21B2F
27E6D26CCD855C8725826D01B6AE8F6688DD9D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A11065111310A46FCBB19212E33F0B75634F4B5550
DCA5BA87E18E4F07B5CFD4BAB729CB705A53CE0E0336424602EA4A3032DED7AA
13FDD13235C6514EEA804EE4C5F3035A6AEE4391BF9839800B20C7E958E4B42A
1EB67E90C22A997075D4F197AF8485F01346CB8E17CD12A285205B2D5D6FBC1E
930909D9A6A38BB39CA02AB2598B2EBB03A60FDB795A3BFDCC677895D8C041C1
092F4FF2D03D6091E3F950ED7BF3F41289F48AF0A0D302D14F972D7E215AE40C
27F118AC052C2E917C8ED53F194AC6DDD541E4160DDE659F85AC3B58BE49788B
4428D9918CA66CD99164031767650ED4A3681A84D170419B1D9D825F30DF959C
EB471230A8942C6B0834FB86AD04CBD02303654E4D1E40609B14C8D1F9635666
1F43F7ECB1CF1480CDFA71035F9EF833A4B1B51E56065ABFEF1036EEAB8E04F0
95EC4B3D758F2C2368FAFCBC926D5660E96B9741B75A6395CD7C83F9931A7999
0298B08DA5149E3FD6CBEF3D79B7E604C912EA7DAC8E354F1CEA9C76D10F5718
23F71101D2FBB9CAFCD196E7A653070E680B42E542CB7DAB82C4B4329E5CFF8A
B0F213E9D5CF55D422C79C38F2C2F487CA8BC0696574F4D97784BCD075E22809
C78DD4A7B6D83F99EAD74396128B0C14658CE0A473AB3EAB6060F37CA8DF3344
6E877BCE976680AC346250670C41BEB73DDEB6099C156F65478D26C2CCE2BBC2
D1323B239944FC0727155B6A248DE14B83C362595A23B2F32A46B578F76FE702
7B3CFB43CFEB594BFF9BE4E7F8ECC5B006D8B46997F3DB8CCDDE45B16F33F170
30AAA7B0A2CEB87A0360124FD1504C60DE1339C3BADD2EE20443E015CFC5A976
34E4948BA2142FB8383DFB5DA7A5A97407F3DEF442B8DCCDEC2DDD4A96ABAD2C
F549FFE58BFDFF5FD8954C0B4A8233C657E19241996C2FE81439067979C57205
08AAB6B59476C63E035056CDBBB9F4DB89659D42B100853BCBD6B4196EF1712E
B3029E680F9156D505934B2008BDFD071E49305C993D4CE9A3FA7F588F2073CB
A7DE351875F46D0DF3AF3420D94859E53AEFC9D1DD75BF4A02A4E4BD2B3B7349
934E69E48EB70222D8B9D52981FA04764322F1D67522E273B443AE9820ADB530
3CD0D839FE2DA6AFC55AC786BB5451BFB6C5ECDAD7BAA8CECDD581C5F70C2E00
5213489EA21075A3BAB4C488358207F7D538B0B8EB1F74EF96BF93802DB51EC3
DF27141665AEFAD538B644942B6B97E778000DE2F2AC2B228AC44299443BCBA9
770319B732CC695D238F69A4CE6BF98BC4EDE0996427EDA0CAE0F19C2B1D5B91
7C508B83F0A2BBD5B56D32B90E027D459D467C66E0B2E159858689CF391A95DC
4C962D8ECEA8E753C2DEA7E42C8C52188E0DB5CA45552F8867037B2180897707
BFB944811C58BD3A3C1B47EA135377F86ECC12B42AB036AEAEDC4A456134C235
D3B273A659AFC6F867A0A6B4726433C75F1DC0671FE716B7B6D84B9B963D21F3
225933FAEB94966600A8B720DC21DE0755EEE6F50ABCAEE853F4D847CE7B282D
DE7EF7DC6F24FD7D8118F5301E3EB92D3CF24F6243BC42E7B1F1F575D4877A14
A10F8C8CFEAA802AA756D295E404B2B331CD0C7DA22F5FAADE6BE18603642142
C01F7924228A89E064588D4BE70311218D1226787AA0A3FD23E2890634946E91
D1AF215890547EB22A1FB22654555F8CA81A98FF701E4E3F32A4B1E22FEFF347
BD3FDAC64590A3E6AA52D0F676F11979C7744E54E5B0088835B64AB5BD2A130A
2D8C8272237FE1ED4B44EB22E96CC5D185F48BB1713E4DA77B4F636BC2CCC399
49980502A7FE534FE6B7220E6B0CADBEF44EDFF90FBCAE8C4272E2CE583FD73A
055ED8294860FA3B4DA4284E7DD36A5A8DEF27122E4081AB0A60CB630389A4F6
01F284FAF60214272C9F9FB2DF078049C357718AE82962EB54D0F0DFDFAA44D0
CC32979A1EEEC2389C5A37BF4368E12CED705AD291DE2A3F9351A8674BEF0BD4
CB42E6B1D03FEFEC635C4E3E11848915759C1D2CAD099DD60AA7BFA31435DD57
C23D90ACEC09D7F9DB5A1476962A592ABFFD7C6573996FFF0F40F4D2FBEC5B7F
4C7EF6B6759AFB2EBBC09D2A621E972546C8A4CE88818DBDE72D030D8E884D31
5F5650C4367D80A903CC4192686020D0716C1FE23EF60C89987505AB9A92AD9A
55EE0636C143463EF284A9444AD2113D19B43A4F31EC8856A7DECEE7309C0D14
8691BB0887AD84C2E2099F73A2E468110AAB2BC83671602420FD0665DDC72FE8
375C91FBD9035841767258BC7385E4084932266C621A42B8A3139CE953DFA968
751076FDCAA3AFFCC71DC7D819C3A202A4E77553F9C1A1E88D7CB8E40CD6C4FA
69CF3A22D252AEBA66664D8243C852C84769D1E4176F64EF3C2D266ED2B909E0
D1CE8031E1273A9000C8139BAF088951C2DCEF71207362FAFDBE73F8F6F99550
EAB6973C075EA14B305AAD86838F1CF017F9E87057F94EC125B3ECF744CD5792
291BB7FDB904D149467FBA73927F2CC982DF1C269DCF2346C02C33635ADD8E05
F70604A8612824099CB3A8BC081F33CB005350D208EBC4F8E80A54D110C33382
DC13235551CF1F50DC361C2E70132FC29AD6067C60D1CC7AB83FEC19C5ABD83B
ED1F6DCC6B93D8F7EE51A9C5DE68C1187E0087584DA4B3E460C495751816D944
88534EED21843FE41405C42C30D07D729FD472241852ADEFDF3176894372B84D
03D1B17BEC6B9C98D4CA52DEB18C093EDBF1E43A44DEF95381CF2347FF33C4A4
0439CBAD94858AE0C6D3DEC58319987C4D8948335B630A8C2E7CE1413F99C1EC
1E0CD4D4D8A18B49B7048C06456BE79073B38E8EC302C9A3E0E5F3292C976836
C6017B46AF959F77888B74F9FC08D98CAFC92EA0B6BBE53ADC954B9B32F1F852
DB888567C1C1717D06FAE23DC20555C129B4924BFCE14913B22B6848FEFA6107
790BE7B3C7F55451676EF647EC262E4C15BA42E855E249A638240239D55726B6
BA413F846A887BD133E37CC9BD591FF8ED0655E753AE55712F2E5C55F4100385
2B5883FD2CC9F33C5535522E2BE0AA2CB6451AE5AEA575249E6D4963C88AEE9F
E7537C3F8E2D32BDE94E7B47ECE15B865346D956FA91D2C2028FDD2C0BB09735
A0A8003D3C3D8DFD37D8FC6B3FFE84EB2F9A0D0344E6E5627D613BA2540DA3F0
64922470DD9BE07311783290A0EA08384809CF652F1E602E7F2F5933FD06CD0D
1A78AA64AA9F0BA11FFB42D173043053598F3690B13F76C5737253FB5D2AE802
38045C9284AF035C5C9DB485B0EE7DDCBD013DF7135B2E98644F993998F6C5EC
D1AD840B521DA3259676334E609FCB048910F3D70211659CDBCE05F0733AF962
65CC9C001359DF6DF52D943BC285B007D1135D8732354D59E915398CF620966A
E7CDA967A7611E49A6D4B8224C70EAE8E808F089357E3671F2D1F18F6CC6F463
0E1809D3042B7CC8E67CD47713C9A925DD73C4C95CF2906028E08CB5287A726D
9734CC34EF0D0885ABA3C73F1D78F811430E0A4B5911E3800333FCC219DFFAD9
A7F756EB629D05BBEA26008EF805F7F1CB2130680354524F74226670A1FD29CD
BE15D728D7D835AD3B998FFCF4AD1325A524D676161BE42DA6699C5C0B88F3BE
8B398445FE9D5637A828209E9660AB74E830939CEF9EFB35880DA8FE850E9A17
5C83CF703AE440955E69DB70483A4203F9797F25663FCAA783FC4360E8E49BB8
0F8F138B43CFEB4C301E5596CCFA7519DBB19F4593906E5B9711CF60A04277EE
7E0EB69D76392B84CF4113223A6709CF1783C386AC2358F315677479DB92989D
F9FF5D6A997B23CF1B52822FCEA099C47966D70C09BE127C7DC26427B6660464
D5830030D103F984035A523CA99481FE7A0CADC3AECD739C9C425D09CB50B4B4
BE2819EF816FD8D85DBA9094E105CA0C6CF6C122C2ECBB711ACA5C2D1B67CD3C
F5EF4349B3DDDE8CBDA5AFDB24648062C1F3C410189522F61655505F37D6A182
ACDF7D3B149C98B5ABA942FE0F7E1CC26DF0F139B04229B10355842E811EC2ED
337020C0455852748C0477712A9A9258B7F172C5C6E2C88FA9336082C86E8431
0DF2E15C2A8EF19F7E23FF7B7A9FDB181D64BF5A3390EF29EA6A156CB2134AFF
9DF396E5EFC66EE2362A836FE257B06BD8EC6B1611A1720790B0B6722BE633CC
1D753D694C8F8DC44FBA568718A8ADE9EB26B0402C5F61327EFA5AA4E83950F1
79CBD4DA333EC3590B03917367C9806FE3800B715372499F6B85E0FCA48B718D
D31B2571A78D4463B995CF6379645825941C8B7E1B1401AEBC356EE505946361
3DD36491F24D7C3D634B25C2CFB93493174088A505C703C2029593EA286E5C67
C0B1A29E4B3ABD9F8F9A2FCF96A2FE44B06C66C5A798A8B862D91D8C1FFC172A
D2E5ED14C9849A1475958C8045F32105E1D523D2D201ABC2BC9C88D9709ABD02
ECED38F4E38B52E7DFC146AFB27C32BD7A3AE60ACBA39AB615F9539E8AA538E5
13B26906E9E6BC229D511F324E32956174BF714947AA98663DA46206E7A75B1E
7AC0247834B4577FE61889E74D4359CD47A00060F2893F9317906695A424A000
7A3400DB62AF5F35B78CD823562BF35530FE3528670D822220DF70E2DBDBC34A
90B473A06E4865F1E32B00231C2F48C01DD13DA40F4C615A21E1C03EB6AED38A
09485DD0A55684B7D1EA7CC556F584599D046E22628B26C43D6407CA7C624A72
C20520513461CCA12FAAD6F17B048A63FDBFD917BBF167A00045D328FBE1B57F
7C62DEB91D306EAA8DFEB21B2A38AD5725FA821D890C325F962342C0D2A9D3E1
05A19D1B55670A5C6DB3F15DF83E0185CB1398EDC35E34404FCE19BA725284BF
19FC952FF8D47D723DCAE7E031BC6CAA62BBA7170473D18BE8365338117FAE90
B9F3164E2A29F9D3CF1B8B7879B21FDC78BAB3C944BCDCD6A65B67F369296669
BD3EBCAA2B6F925AC601D2358D2F60E741D6C453B12DDDE6A5B490374097FAA2
C1DF59835E8856E8D8DA2489B76EED40845D9AFB54CAA90EB44E4C1819F1D9FB
0221DFBF5BC78580A7EF7997467C254D74D50922404DF379C1EF67CE435AD936
77B705BC81144F2E45854B033BED88ADFA6979C0AEA23547CABE56A5A785FCFD
E406928F342B105165652CE2B1F4AA9A11B291D291582C295B346BF4C4B8B877
F6057712DAFEB78CC9C896CBE0A67170CB45F2AC14CBA2892E518BCDBBB6AB1C
2D00FC1CF3C5FE30D09135334EF960AFD102753E8AB43E92840BD2987024D277
4A0E6CE2E74E8B47BE08F21DC4243C507798176998BEA55A234A2798DF2EEEF3
6AB9ED7C85272216A20FBB4489E38DD4A5C259786822401AB64F51DB04096B82
284D6A75198D3709DB41B886F9E10F6E6772362D43FFEB446FE889E03A64359B
C513D8C384449A71FC6A88495F421F35EB45FBB2781CB050CEDAE7659CF16DC8
E72CBDD2FF361ECADB0F6833590AAACDA1631CE4ABEF8423DF21F6FD82D4047D
F9B0B2AFB03CC96E0DDEEE9FE726F7C12D5C234119A6904DF4A034CF2FA7D9FF
944DCCE92FADA46EBE4A67787603ED2C97B53738B4B2ED56EBE617BEF17B9DF4
F314A7A00AD4F22E8B3A5E0490DC2123B0A51F0F464405DB2F184AB46FD9A4A0
2AA79B59753974A403A8A38B16470EB207D088EE8EED35002AFFE0288621C12E
FFE5CE09E38295FE4D35A2236AD028BCBBAFF3957699F87206A02851A8AA1F9F
64277A9AFD2339BD5E2B553EE908C6BA3621AFC93F0927DD241E10AD212DEA10
748F81DFDE2C7EF5B3C5422806EBA4D2DF54395F4572141881665D08232C5A14
A7EF671899B0597C59F3CAEBED1987D64A444A48361E1417EB9BE565358E59BD
3CE5A5D1134E117D38C827049CF60C90B5E3C756DCD299049E92A7DF9313DC12
E050920A13610136D6E1579B73D4F0371C96EDEC11B2330ABBB5A7964685AF85
8407DF0FB704C5DE06C86869BDE4B8F35C341C90E60DB25D7AC267E0D478FDAA
DC38FDE58C8251C5D0FAF6B6392869150AB8206D97E4C59DD6682ABF66B4DC16
11DBEF6694C550016D504DDD4A952944A2F6CE7DC133ACE8E1E02CEE1BF9F05D
F95A2C2F45CE722D9E1C8D4B202B90439EFF8BC53C16D34888A41F8C3108AFD4
ED24D99E187352EAB89E23E9B06A948F46D6E175C5B6F56199CC1DA41FA72586
7D8C47D291939025EE8A893CBCA72533241CEC30C90E221969257543026AEDC0
2C1CB17CAF8D1D110FD364410722F6D160A04EBCC9B06A2E3F4E207AA41385B1
0A9E09D504E360902F0680AC09575B8AD8AD46061F0C7C563CC2D2EE272B0674
040D7B82B7B40EAF7DA2C88F8D742049016DBF2EBE83E22175FD33DE7F728350
7586DAD3BBAA7BCC1FC72BF1E02379BE1B8F3D3BA0C3A66F0105CF821C0B3CDB
FB19FE2D0349FB9596AB501385739C1FE770576F4593A1DD7ACF15A1E166892E
FA74FD1E640D484E5F57C00B1336A8F61DE8919B9F5A59F2C9D9B107BBF43CDE
F5D2A41B5CDED1A9D574718B9BB803F277624D7CE37CEF647886270A57361A13
1EDA5CE54928827057BB3F9495AF32699904D4229F797E793F9BD3EE2AA44362
A10F1795E0780C412A606D33C0739B87ADAA1ED3F498EB33F599A9B377084AA5
BBEC4DF7F7680B70E8F668607F499E1C514C1363EB254FC019CBDB6284450445
0958CBC3FD7EF6D0B586320E85CF476D0EB78B22EBE619598C6FB61C68169211
790027B87A0F07D9D8FF1C13FB67A3B5FB0BD500E9EBBB7881F729289F586645
3AB36E6E325AEDAC9D82657F8ED07C3F4BAB170804D12894A5D3A331145DE6FB
505CC19634E9A1548CA1F6DAD029C877E97221B1424E32836D6CA289095479E1
8C475C093525EB5729D8AF505B26F99EAC72A872C3EE268A76D6FAA6A668B258
5A3D90691FE8093FE2F40306B91DDDF82D9FB40BF0DBD0E3801B9A7F1FC23AD9
4FFDE5CD57B0E70B00E9F5AD1C279E68EE254EAA23E9A195048439B2A9E2E525
FBF6539D57FF0DED6661CA21F0B23F7C0E45D0EBB8D70FB94D734BF44CECB039
B86F475DB68A6AFA0948DB499B8F55FB4E2D527FBF80D86BDC60DB268EAE4450
B76032C7B6E3A06E957827E12CCBFE313429614179017902E012FFD2192CA829
5936A18B42F96BE5854A7003C2840A97582FD9DE63E6754CB8D0650938D7D1D9
0A82EEFFFF5D3562B7402574ED20EEDBD321C2DE4B757895A22E4177D440BE21
B75A75962A0675857389A433E787DE9CA6EB9EEF33CC0AF6A8C1095C81DC1E52
C828A7A11559791B3C70CC0055BA8777786C48E71D0A4EC6220EE0DA72EE177E
799855334DAC3760EA1B589B5562F3D48653611BC2DFC870A1A7E340D504BE0F
EABF24B5BC879E7279FA4F09E759C757A92D105F0EC00FA3D3BED24154894FD0
99588AE327FCD17A869E735536A79EE6E19AA0D75663AF5C437BEAFD6FE8A872
9EFAD4F0824858C82E404CD859D0F608E8471A5D00FE89254E9AA76611355D1C
C117742DCC7AD417FDBB4227DDE271911CE00E5CCBA29145AFDF7AF1044E9171
86B45659FA187A08C675B566A0D996BCF230FAB30D130B77DDCA5849ADA89579
90781C74E528690A0B7FD11F3162295E5C1B8D5B92EFB334BA82F846986F1BB0
3D22CFC67966D8B24E2EC871793CC0E92E4CDBDEB7C7BC4B3F988AB0C9ED06E7
DE0757EF4985B11AC1806B4526023B8B50A149D4DC5FE1616B5B5E4B670FA18E
AE8680F166E7D0E4EA7556A9AD96AC2CDF44D2809B809CB466B5027B5F08B905
9F0E2D4CC01A7498634B519D57A88C79B55D644CAB29554F2E31FD6843FCD1BC
BA8ADA66958A20A94176FBCFC9EDD1195D91EE411237A5462EA74965A151E842
83C2FFC9FBA8B7F9D8DD16DC6EA4D637174260A2DF58AF4C523FC0CE23DD0887
46583C563E6EEB73BA022089A4C47ECF01BC054639363BE0B1733FCD50FD4617
8004C1FF0F2606AE7022A33772878D2ACAB012882ABEE024335FA4F71F71FEB7
A70B0D8A81757CFC8ED6BAB565E981282F89B639AECCCEE6D0DBADB4C01ACF9C
3A5CE3902C9EB8F0875B02434555D99F2E2C7281FB6F335092E2695EA58DD588
DDBD3228D8BDDDED88EBF1308537CEEFBB741AE73DD39484B57CFD1D671C08E1
E75F77152FD1E2B02BC91AF1B954ADD83E2C032BCA77237626538F66D0EAF9C6
9AE053F2C2663E663EBA789D4FC966579E1AED3BE97145CAD7D6A7F5B7E81EFA
F7223E9D7B39DEF7203248BB6D5ED9A5592F173DC75E79EF118D6930C73050AA
A94D8CA1BAEFA72DE80AEB1757E191DA795FDF71D10E1D5D11BD5A328F0F7861
DD577C9C65D7561AC7536C61F215557C0D82A9476E2D326C0BEF4C80125934B2
FB9D7EFAA0A98BCB4594445B5926A7AA84A5E96521F3A544426A80EB406071AB
F86D736602AF9D374A8D11CB5F883B5FD6AE51F50352D41A9E52E33FD14670C6
6F070D8CF7E7607B46F62ABA18DA530B3F2D2A59FED439D11DED107279134ECC
91283BB66A51D65D864AA64B5B352D305553A14C5951B3FAAF507DDFF4885399
DB68282CAC77A0D589518437C3BCD3F33E0E13DEC23F367F3CDAADB9A370228B
DD712FB109589611DC0A84475089DD2C1469769932A1904236D118513BBA722C
A46E21F697AFBFEE1989A09F9F9CE8CD9D179FEC22D258A9F7CF063183A0278A
8DE53E7EAAD888850EF4DD9314C0FEA2661CF8688C3D53F22AA74E7F31D26A76
333D3B376B4CFB907A890BDF572C18A2378FEF4FF32B384B76574A5049D92162
72F667546E7CCFE7545E6BBB4892268FB19A5045B43DFBC136091D765183A901
BCD0AE5C798FA74EFE4492AC0F942BD70074DD55D041B5F2C74A612B250A421D
472016F1ECAA65E9151602766105E7EE951C15E047206C072EF4701514195A43
A81826D8B89CC5276FC320C05FEF8BF68D616695ACD14B3594882B491EBE2868
5996CB7A4E5B5FD2744D9A6788E87B1E23C26B4279C37D7206C5DB69FD3CE06B
C4717BA1189D46817630A4E809647F4903CFD661ABF9A72CA38820E8B7ABB95F
57397A31C9C1FD4E6E9232204FE04146BB1305BB73A725231EEBE74E7A1D47BA
F2BE9C5690CA893C2FDB79DF7505FBC79DC557CF731016C85A4E041C2A901612
4EDFF2C4A2EC29E0365972E9FC06E73940C1341F7720B16123685F6ABACE7620
233E4952E6F77BDE1D2F14C6E25E50942F96B16249AB089CE81A8A67C0E20DEC
5CD4696759CC35D6FA96F38E5F3B91656FCEEA5466934B7B24AAD00C484D7763
A3E714F7C2A423A6835071464F3057FB802A8D3E2FC60563D081F110CBB181C0
3581AE7F5CFB6E2DFF2710CB3B9B3029C0186C862CE6D0ED3BE5D5861FFE07DB
66202167DF4DB18E58917EC6842451E3F7441B4DE23BB308188BDFDA900480BD
689CA4F326D85EEE2E3BB430CA552AB2211E6DBAD7D7931CE6C467F9CB65F034
0F13B6011FDA90BC02ACDE8A3A4BCFF003E895AA051BB7E364B09E9191559979
90277E415BCB9C0DF2342B714EDFB7A1FADD93BD3CC207D8623EB59F6B3FDF30
2405193D77ED9D3F4875B1976810CAD9099468F5D521B51EA95B9438044E5FA8
DF3F67A3BD6F6E2FE3D03C122F84AC1401B02AC1925E792B908A541D32880AC4
1C3C5F8069B7F194CF371C1A07A95681A598232B4F17C90B1F91DC69D5DB1DC8
0645A5DFBEDC32C58223FB032506BA84171C80C2CEEDA53D58C697C487E3C9F8
25B5BD086A6A2F6DD509FB645CCFCEE8A7AE31D22483C53080C6ECEB01733264
3958992778F2BC6CE209D3AD173924E6DC3A8813F631B66355C40937313BBFDF
AE2F250B43DEAE70032EF9AD54E05F9811643264282FCC0CD09617237F5992E2
A8801F32D217226E080143A8E35F88E3464A38D470229586AF5FA034769A116E
2AD25B9F11BD929F39DA3E3739C6F13F534DDA1DA88A06EE36401A2A54A603C6
F393F7D2F96BB74F5E3F01C4FD8DDC8DEB238A2554A7715CF7EEC7F87E5FB5F9
B4D986B6E975BF8F27A17CC02016DF194628D5FBEA6CF56D0F5346B6B6C1DA1D
D8DB53909354E99021A7DD438484EB96819782D70BB7AF54DC0FF4423FE21D4D
2625E646CE72588478BF941F1F777DF2B8C7C89D872CD46D534EAA090CE65B15
285AC2692350CC55C22C572934C084DB60B13F58C8E45D64FF0A43CF3C9A5EC6
C5AA5AC433BE2ED3CBC620ED2A12432CB1FD28493BC2A472D5CF659CB8BCC308
27B484622F44A692333E15418156EEEF9A3A5F77CD7C0098265EDD8DCF20EA91
075E2C08F464E50BDF59815F4192BE27320AC4798C4A051C009742A11FA4CAC0
31296DC6147F368F8A74776D9E86917785258CCBDB883B1F2DEE7B1C27B49A05
61A1302E8F79920ACF6403DB623C98F7394FC4DCC1467C38F6BFDED12EA66033
FB688FF4C0EB78449BFF61D9A893DA0177CAB77BB183F54581052B66D6C4F158
60AFD1DAC1D9EDEBA1A64811CFF78285B9468D2DDC1A985E6F3CE8B6695B3C20
1F4B7CD67C0896DD80AB24C8217E924000A0F81F7D46720081C498018149DAF2
01513207D9C72D6CD3ACA35686FB366E3AD523DE3466559A53BFC7CC1CBDAE2D
8231BB7CD198E97C7592193FD79FF10136EB44A8DE87DA279FF7D54B40F95490
1B710FC0CCD8482EC70CA6A0A4A162381D825F45C11FB4962F16251FD20BEE1A
1572D7A182F0DEEEB596F450EF898EA1C386BB2E6987F80805D3DA126E4EDD88
04F6300E2DFA3C80BB7D7E09A12CFDCAE0432930CFC34EF656B926B1A463F3F2
DC46DD4C7847179BC0AB88D400A3F8A7DA05386BEACC3228335BB67811370645
D5A389200A2DA5B4C20D441996D671C582A6F5E57840EBD7706FAF626D70DD0E
E5E56361CD2703264B69BD25A5D100A0746387838F532359D6FBC18512610FC8
52B07E15D4B37474F63F693DCA492BCBB376A278F2D4AE601E817965E0EA376F
D88FD8806394F2AA95F0320828C6D74015EF16F0FAD8EA305C71530FD9173A18
E079156D95730D300FC32057B8749C89D2581040E9CFADDA43C0BE6B4EA5A9F9
F217E907C79DB9CF3744EB03FEBA08935FE0779C68DF5BE02E44D31A948E810B
6D13391FA794098F3F04566156FC3F24FE6E6EC301C670028FEF178AE85EEF95
BF738378CBB6585126F5302B9FBDE0AC56D4BF37E98809E0A5511219AFBFABAE
4AF312575682E6A86792FF4EA7C7DDA6930768FE6AFE6D28C37D65824F530A6D
FB4D5105BFE243CEB4203F46DD2D9D5CDF38153D93983974E8CA62680A74F03B
3BD3699DF7769E0A6E389AD0B2A5D10CD4C41A40097EF754AB9C2DAE1934E475
C3AEB56C96D1978FC7659ABBE845A08E72D9586113BBDECEDB4192AE9991497A
922907E7923554FB4E9E9E4CE34660A7B6C084967A50FB5E53F42139435AD8B5
690C5BCA6D17B9E51F0E0BF508297838F85C5BCA925A37EEE489C7FC5E4422CB
072899913126F8296AB284767DAFF3330B7E95B2DDA1814B058ABCF7C91E79F0
180D81459D660CAB4AB3879DC6E8517D66FE1F4873DF465C27AE3A558D36A8DC
A52875B5E59A5E474F75DFA7C624EA885430175F88C95D871E2F847F4D2E8748
E25BBD0E75F70B0F06F5417CA5CB3E7BD25031B17A64AB4B91945C512870DB25
935546B48FD61007E1664368DD500A80ED96EFFA1CF769F4A2A6DD033D6A0D69
4A35309B022629167664E7533AEEF54C6A6DEC9D5D6430973DE968A11E61AF16
CE3C561BB821C5577F7ABE974C1A9C5E04DC906ADA5253757383F401C518141E
6BF49C1DF3367206AA0B64A692241F315C706A63D4E868BA35E1C3763C1CC5F8
EE61FF07245DE131EA6611B00C4E98ADC253FBB76D129DA851411F7D28F71BFD
25F6FBA8ABE0ADB9F11C2D1B9D7B6576029D6C19FCC634E08E4CFB29B9EE0CD6
84470469798AC194B31AA1E693DE59D2CAB0283A0129D49E7E9AFCA904B37EDB
25A80BF2A0454C6C422A49EF8453EABC2064828A2254F5568A8D9E0FC52A2352
7E08179748C47D3233B795E69BB6708FD21A96ABB9CA97C357ABD25D6B8DCB78
E81FB5B8D5C70212BE1BA4F4719E66EE3C64292C209A832AF504B1BCEFB09D27
39CE68A552AA47F3854D2757F509F2B1769D6E7222B902F4106A0A97B8191D08
9289B8A09A1009A55A9D74E6E1F02829CC670224DEBE914998A327FBA3E1DBDC
611FBB8DDBF3A89D699C1FA84E704B02BC85D61ADA5CF072B0CC1D1484D908C8
A61059B21A2B3771D04D150A1A133FDD00FF97794144F0343368A9170BECE87F
D517537D483136F29CA63D63D277602BF420FC302D910C01E39BE9EF9EDAEA21
73C69C564A8BDA78F61B61AC987514BA3F8F2A0690AD9C9E0C854FAA7A230473
BF69CA8AC695D8977912FBD2AC4CCF96760637BF1042155BE10E5A7F38760B6B
FEB2B9B16652CAAB36F65AC444CE9359159AFE9772B67F797F9EB5B41391DA87
E6AD902DC4034700F72EC8D2A2347451F3EFA021D02B02DB6D0832526603ACD6
0B440B4B15716DAC2AA7D4EAEB84E976434740F6349BF23EBFD6F7D9D4618054
064D0A6D0235ED4B36CC4E1A158E799D50610BA45F2003568AF44E2EE4DE7F41
B72D0B7798D38091A3CEDBE91B068D1E432A2C5A2F35CD7AA88C4440621D1573
6E9DFA4315D50D8B9315CE8970864FB3E45F678E37B79A0D3ABCC1C4DD55BB8D
2E94633F373987DF19D29CB845F00A177EAD188847E02D257EBA5400A1B90902
EFE6792F207136E1E16B417B2B78B45669B6CAB61314565222A1493030E61D65
7AEB2877FC7F462C08C8815468D59BDA8F0A1A0372C6F83E56E86968B878036C
6EC2CD975545CA4ED25EB096A304B14E00EA6A7AC505A4349861F3FE8BCDB2B4
47A53439D68D91B65AB541047FDE9483B73A3BAC9478563AFE4CD75DF5914825
ABDB71FAADB45F85B90C026CCE185EAEA9DEE81B0A41EBD0CC6D71A2E4B55282
96D8827B8E99A3E7BED36EB2C52BA18EF531DE09B52B7093D785F43FD3BA095A
1B6EF1661A4DA77B723EEEAE8EF961E3CDB057EC94E9588ADB63BDBECC4C2560
8757CEDE3C2E0177CC66EDE7648A99D75B0C6E5665DF193233FB4633FEB7CF52
10210B7563D3E69FBCCC5924146E5EEF76A3EB45A95163C4DC2999A5D1A7DF5B
0FF04C42C7A0919190F8B2CC8AA5CA60411CC615B9778A9B58A168969D018428
8DDA21E5EFD3BEC41F18FB8C6D2B457E60950E1CEE7512BA46AF5D119EB97ECC
F4099E01BE746CD9270154A8B9C222AF7C60C6CD394D7C4BC204610D3A925410
54C056911283141A95222394672BD2981221E491ECE4FEABBE23D5E50433EF51
7BD0FD04C73FBF1058A8907ED43A93F55030632D452BC8A23D12AA1A295EF5F5
0B62E4E6C75D89C1B76C61582F341E570DBBE34BE213E7DDC520CE268948DD3A
E550B3D8CBD6A090B9572E2881A8D9E077FAF13EEBD103E038CAC430E4350E4C
3DC89D7892540A11434F729F7934CBA23B5A181AA5B60EDCF5B16D22F36CFB09
F35EA042B3B551F67D4F81FC0F0766E196C52F643682D938AB70D416CD39E856
2FD546F1E50BFD46273CD9D66638FDA8BDD4DE1F10153D551CCD7325032FF609
7DEE9D4CBEE4DC23636D83F81ECC28DB55A59A2E4478924147AFBE2E6D1929EB
ECD716C6D7EE18FABC75230574A252291322ACF12EE7FE8A738607329268F447
952B4D4E104FD0B58642160A0A7BC252745EEB8E97EB778D98A5679207C76C99
9903969568B43673A80D0C5497CBE5003D5F23F7CC75812D2FCB2475F074A0D4
4FB1DF7642F3BD4C077811073FB73D34FE110BBDAAE3FEAD40688FEF977EF935
0DEA65494BA63540CBA2C8B08013AC0BCA59E93C086058929DFFD724C1F65219
25BD4FDD05BBD8D9235ACCEB4E79BC37A36535F4C3ED8C840F18C6684CFCE0AD
FD99BDC3BE161F4C1FBA9B854899BDB131DF4A2CB7F628FEF7E2E78B2EDA73CE
47DC93CBDA0226F327698E2316852222C1C8FFB4B6B3CB02A3A4A604FF0E46E6
D246D604E27CC427B415DAFEC7C78C8BAB8DDC7F63ACE221E3BBF2A45CE39B80
FB268D543A28FD47620B952C8F3DE9FE43B77F8D7ECD9644E4E719601395D174
23FF7B7A9FDB181D64BF5A3390EF29EA6A156CB718B39D93C41B6028FC2870E4
E57BA1B4773094EA1952E001DD3716B714C94D0F9376E878ED733E90EF3EE623
D1F70F298368509D3A43EA64942D937F2FAF5C06C8C163A530D6704BCBE14EA5
296654634482491DC499382A320A4898FFEE955E7C8A927D947E18E7DD9DCA76
378EEA91BA4C7AAA81B42EC94C58208B09AB28544504409572BFE52C2A97EFB0
D86DD9BF2F3AB34DE24D16AF015DEE59BEFCA363411DE10FE5FB70E0DD011746
63D1A9F48608268A3665B519CDB7E2378F46DC92FF8F7970CE59F50015B8AD23
DF0A82CC481EAD70AADE0E2676CAC461FD96FA0C776B5F6027EA3FD56E6B640D
8A37438527454CF0CB3A3B7622E5A704402F59B2EFB224107BCE6BEF0327ED5C
68257D75A455702A4E56A3BE26B0826453390BAE20DA94B1438B4AEB72DD3680
CDFCE4008A7DC06BFCDD03A874EBBE8395A3F64AB35A92C36AE66F30A2BBC4DB
23699143C3BB3C7475E21AAF22AD06FB556EA67D8A279DEEC01DA4A4B30051CC
74AC1BB800B2B30D034B4F9745E34FC40DE4F2C1AB3B8A063D0C75AEF4964669
5F2E47B28A45D6F516078C72A4B155A2715B713EC35F96DCB006DE3E4BD74C1C
A8891A8E08C09A601506D577779CB68833B7ADDA86A3104E83AE7D12FE930AC0
7EF55E89C461A2C93D616618D9CA254878ECF291309CBDB70E361A942C82E3E0
5B19390A1775D2A5F9EE021B222079787E6410E86C95AE03AF069A47EC3367E8
743EC5C40EB895069298C245C2EEC225EE3317550502994505DD5A5A4ECBA961
F57134842D4BD222E9A43CBB183FEF68E725600E8F851307C6204A7730012E07
44E449388FB5274D1BD28D88BC029D03BCEC52B4CA60F44FD1B87D55E05EE830
98F89FF38B30D840A9079480F30EB64479F58970C058BC13013E94942CDCF8E2
0DEC5CD4696759CA52203D6D50D8A7B453A4A15E8B8137495F25DBBEDCF2C921
3CDA4D34EB48C5503AE619A9355D3649519A904C22CDE9965967502E946FB132
20933FB217C7B41D7217BF0A54B95BE28FC0E42FECBAABAC04219E6DDD321D54
36B184E051483708BA1696E2FD8A0E1D60CDBE68ED50FF21ADC336A4AFAC6A91
0A6B158DC42E97769D57AB2EB1A0101270D15AA6590DA4E9FFFDE23B9AFBDC82
C3CDE768BC009A12A564240DBB494670FC1804D241E14CED5706197D7542BC10
E7F9CF2FDDFE83B006FE1A6D13CA7EA9BFC1CB3D5932FDE0FE6CC0C876B0D072
EABAB7EF7C55E892E1E6E683D2545B0EE0343D1FF764ED045DEB08658F1A815D
7F9C36FEA622FD1E43D9493B4E713CD749D92F0BA8AF0618554EEF9AFB78017A
A9E3E58E2416BE086393D8C1C67069B08A4EDB0707B8D64EE28807FA1928BBB2
E6C2F219AAD63568B6B2F3D5E86F722CAE43967E66E0671A1A0C7CE77B97D88F
0FBEF8863DA7CB1F0514DEECC225301813E4ECE6D689B0A67AD0211352ACC3AF
E91F9FE082F213C45F0EF13072F771D1F248332BAD0DECA08CA39B2D7C51A80B
C733253749E93D79B7E604C912EA7DAC8E354F1CEA9C76D10F5213C441D4B25F
A514BAB9F71497FB0B5F6FE0FB86C519CFBC1B7105AAF3401BAABAA9BD6B2A52
11FF41FAFEDFB3521682903BE2F3CA2AAC7BC366AEB8855A815E6553A1CBBF20
560D772C14FED32A6D10966242774A0E978D799C09E798C85AFDA5331918B4B0
19B338AC46D6388748CF94A4355AA673AA61555EE91D01EFAB45F6927C79A919
9DBDBA916602E032521102C48CB58FD53CC14CA45682D6FB660D65C6BBE76370
F0389AB1DC905D2BEB7F6EDA87A2181F1D6DE4E183631716C21F0F952E0666A9
E06FE007B1E80EB405BA27F77FD35747A755A5367DBDF3546034C9C7D5C18FE5
C273C0C08E671CDD80A6E1F2C5DBF9D2AB32E9A21F3938325477FB5F3A48DF5E
0C7E5722600C577CDF514D89222B39F7D09A121118428CE3134220082622BD4E
3E50B189223DD7593D3674AEB6FF1FCFAB8E76A44DDDB0F5E05E68FFF8954305
33036E23822A7C6A09E9D28B9FC63F2975CD9BB71FA698571B162E23FBFB1F3A
49E2B149F0E5A7EAAE21CFC17AEB48492B36D469741F1ADE900657709B4DAD35
578DD3E41C3EA2BFBE4E6127C9DC4AD6EF6EE0D15AE4C65321DD0AD87D673579
C9FF815B7E04662CBF7AA7CFFB1F54474C2C710C60DF7A27D153F5B5FAECE0EC
B558341F4CF2448C56DC474D5EAA684B8EADC5D12DA28C937A52B3D1546B38B9
6D3097A806EB2F90AB0BE4B689C0F6AF3F4573DBC10054AF471A92C5D9AFF98D
FC652FAB7731D6A6987F93E9FFC2486A7512E11970FE4972A46C8746C562A5BE
309D5D926AE5C673625845E1981A3314080EA42EF6FBF55D8A0F6FD9E30E3B04
0CE6D23102936A540DE6C7AF6488D173C2BD0597AFD091C43DA89EBDDFC13E8B
807AB38A8553E4B5345123312D43AD2E836C4E92E6B82EFD33741743178CF16F
2D4E2880EB4A142B1C2C6AD62D05AFDCDCE4E33091132D471EDCAE38607E8035
91AEE6B2BE7557A33DC06C5284A9C8FBCC63BCF8F546FC6A22380B10AB2CAAA5
C81CA7B836A376E0D29E3F53B06A1720430E0DE1278C559D42176DEA4E100EA6
129067FFE6A05DCE65C7B986CF466B6A832F1921A69230B2BEFBA37CBCC7A0DE
20F697627A5CB22BB3868497D8BDEB9820A92F8C86B98A36AB956ECE9F5C5620
713614CF80D2ED544D78E6FE090066EE46091A0CE2690803C872CD892A017557
914059220B58617297C43DFA17B32A7CBFE8CCD3F6A21C5A0CF54DA689745B87
7D7ACCD45422A73DDC800C45740A543AB3F5D165D628AF8BF48F0E3EA122D6BC
79EA3A1963B94B9903CD874CF329240A0A1C7A04277C8B701D81BF0951FDC6C2
38657A7D1B2F0E04210E615B56BCDDEB8E688933804EFBC6E4263041E9E1BBC1
1B40ABFB7CE655281EAE4F27B1E027C2A23978DB48A4DEDDCEF664ECFD1D0433
1C07AE954D0E9CA4F3FF267772934E2A0C643BCF9365990B3C9A32A0B530C694
FB356A8CD7124C119706E8F6070A92ECB856495E6E8E5731521B1FF4CEEFE05A
2CF53FC70A50B6569D0299B1FE0AF47722E48B590F4D9D412F7DCF5ECC838770
40D69F65A6F56EC07545AB05B3175433ECDF6F8FDC108D3745CFC13D346DED4E
5C41BA28ED0B2D4F7D552B0AD8284C6E8B8EC85C7E817DBABA0EF88B4B5FF189
E3CC45102B5373CFCD00F80E7AB72FC34F555E2B805CD5E3F019389F728B5AE8
82993B65CB1D221CD6760C5EF4D8410FCFA8D263EA652469679120F8AD0AAA66
5BF990030A5BE9A55AB8C45DCAFEF8EBBF69F5A4190B42F2165F14E21F15FAD1
C17A00F1C622F2C4B302D4E9B86F20D016E78CA8F80DD6F81FBF885D9A81A19D
7A793E9F55563131A50F7B84136682B29B82D49241BC973ADFE6F45BD57DB169
FD3568C8E044865DE7308E8D64EFD64EB3D1D7AA13FDD13235C65170B3DCD304
924CE866D32A1A2A286554B6F5855285976C19752BF25E25325E8DA824902088
F96E1526A3B551E20C2B73F2D453415901E8E15B898EE9C354EBA9491DE8D4F6
A966B44B5B3469A1A6807386156CE96A0D6FD073ED94FA1BA5FEFFCF9E893B9D
38F7E281DE688E9F4B51649521F8E598688821F31EA2F2DE994B31046E24E975
8E28A2F618BD6613AF05633D26FF18C3DC9B521C9B11899B66B2C321CDEA65D3
C803D2E7C263A7325BA70C80F2197A5002738F194603349DB63F0F20135E821C
31F15AF183BF2D13330CA1E357D0294339F3CD13BF39538A77DAA7992E4AB27D
6FFD26588E200B227618316174701CE922447FE94BB9DE48521DF3A5CA638963
5E0807D47A6A3AE43493C7F55CA85B50D346AE0972B13B878A951AEABF1C5FAD
F09B85317739E538CF3E36AC63BAF114252BA2D15DD65E8788DFA863BB85390D
41F662A0996FB2BC44A9D36FE8FB6F2D60B0E7F2EAF51CE106814837A52A57FD
80BE7D7903672E129183D4E3F9ADC0E08FF17FDFF057846B215F7C8062036B04
B21AA94F9223F4925336C274C5E225C8A9E7655BB2B4E1B37DE4506A51042BD8
20355DB5AE82315D97D3B2C7C54DC1DF59D3AC3D4228D86808BBE02A688A4544
870C8EF39DABADB15108D6A0747C5BC548BC5950382AFF39B6FB8056C6BC8576
5BF509A2B550B5B90B43F71349A07D545DD2A41E7C3FCE9E64669CE88F98F884
E9ACE66D6F79866D50A6972E7316AD8EB38915933DFABCD7E9F03FF76B4E21E0
AC1FDA49A185B59122715D8A2FE339937E47BC93F7F9F68BE137BDE5D6868484
D17E485D9C99491722BDC87F424EE908B21877915F7A8063E670557A6CC1AC76
3D90BA0719EE726BE95E5F11097682845F3E4266B7AE8CF5C0E0B715CC6F7CB0
4B786BB095B8607A45D19CD363D2F94F5188FFEA1DDFA6D03DCA1EAEFCBEAE26
CB47E3C982D5BC126993C8786387A6E0F37C424B33A746579A16EC8226726C50
951D9DDEAC57FE9E1EAC9D7A6130CEBEBF66B1FFD2FF8958F2ABDBD5FC80CBAC
453EE278DA1DB5EC2142B9D88E6875BAE7F0C98C8F7D320476A7DD59527772CD
9F45FAE67C2BA0A71DBDCC05617B3E2927B5F38ECB79F793EC4FA8B1D4AD0338
4FBA38F951EA3485C4B91B23351480E019659A31CF1D4AB0A966F154F03096A5
E16F183AD709492A45091718C314DD92F0686CAF993FDCE0113E5C9A994CF761
7891736D86CCB53BE427BDF9D42B997DDFB57EC2C4396609C225C03999939FFC
6CC50503BB871565797EC537E26A7A7D3A4024AA45A41C5B8F6BE9C3B30C0E56
880907BE5F48D4E3D1F8DD43E4D83E0EA1EEA217BBF34029D1B75A7023FB5814
09AAF09F2E35801F5D1CA27904E13AD6DBA90EDFCE71F069DDE5C27548F81D86
8D7BA0EF22A2E20D631FC76A0B663474890B9C67AD71F288C38A06172F90EC91
23611212A43F9D80877DD48403ACAE68C5D148C875AB9FCC0447F3496C73D8C2
B08B0D89A7D7B5CD1E284BD4C87761A251CF741D1A69DAC6F237C4F02F647C8E
311D25F44E5782DA0FFDC4E04B53B1B05D4BADB4EA0813E6A2FF2104666536D2
7854DBA740AA1A0655A2D1EFC1120BE7A608DEA9A9FAE8581E65A89F851C4F92
B9317B507875E601E6C0BC1BEE8EC0B014E2B65B58FBC60099446EC783186F66
BC0AC81566F40B37C5DBCF49724595670CACF315EE9AF24FCB51D47263552636
69F3FBFF5816E15696BDC2A2B728A8AD0A75F70774A89D7B1B3DC8659F68E523
B4A7A0A282915DF4E2EA59636FFEECBDF2577FFAC6D0D770765D530ACC5A5D2C
87BAC9907BB5D7627E6D90DEB855786B72CB49D8BA8FC2866AE91E0E4FF9BD3A
8731B8C400556298DE5016DE66B3DF1208C992E57075394491E440BC1FAC6774
2DFC48851F1C2292F44421C7E20BE7E0A78FBA272C69F7A34493D0929B016E04
B4623EDD9332FD97D03F0162CC8BDB0FF0E6CC0848F81D7791BE55A3D2349D8C
D1B9C42470787CB8CC7D5E04D1331ECE4C3BEFD805E463E79C4B5DD326139FDD
9053E8EF5DDE4397B17CCCD1FDE5A470EC84323888CE470FB85CD46FA01BD1DB
E3BBED64B67E78FF4FA25862A71483BFA2C91631CE075A285FE83EB9A7E9A983
55AF89406E0DCB3739C5EB6549482C2D874F438B7F4F3575ACC2212FF754243D
F678E03C4B2BE5C143D499C36E95B907FF9A70043A559AD37202170DE7E17B30
FA7264731A5157CD6840562669DC9FB0BAB3D8CDF1ADC4DEE31BAC10B73345AD
3D7E6F08F124310B4EDB2491F09D5508497F8400FBEFA5A0589459B752731457
5F40353CAC7D3F80A843304F206151EF062D518DB5955B1E5CEABEC42B556828
362D6B0DC62BF2A285A98E8C2289567906FE61337CAD44686AFE62DF387F59F5
07F74E231EFCBDD4AFB595E8C3F0E8CAE46A759A0C47EEA6C17E4FDDF8AAE29E
BAADEB9AF7DE85916482EB8BFAA3D4CB5E17327404D6A835514F62BD91BB8F48
17B56DF72A4239D252DACA3195B1DB317AF64FFB41BF17E6263D94B85131343E
AB8CFABDE9C751CDF61004CD0D20D0178B3FE166F79E430E124B19C23ADC124E
687460225D615CC8A27EF3CFD50E3F8B4B2B1AC80DCF9AC1C2EB88130E0B03A6
3ACA026CAD661D007A47AECE52D4401D79AF71E837AFC2824958AFB92BEB7384
6017D901631454E44F8F1DDDC35C898DC95FC92F894AF2260EB117A1D25B82FF
4823A3216557921404D591512179FE6218E090422F74FD548341A957DDD557C9
CB68DD804D0E5BAB0FEBB77BC95EDED08DB8941E040A0A9868D62FDDDC616ADC
7E9F13E6B8A5628C9C333267E502B6A016406B269537BD1E24DF87765E01195A
8D419013AD2C973AF35B2B4F4346D3A243D622F9FD9578447F6E5374A0B9A56C
8E76C3D42C5DE4E6D71562ADF36F41BFF59D7CC8117F5473A0DD977B6463CF8C
C179FEA1C4F7C10287D1C8B0D65402BA2ACC3DE9E0B9CC4D6D540E1FBB8CF04E
F9264E4BAFC2D6FEBA413EDF78843028002461E739CC5333EED9599322752A53
C6213212E127B968C9D09176613CDBBF70DD34936FFDBA1AB7FCA5E3B9A0C63F
ADBAFA0F37397279F2A7E7E2F3D8EF686CFC5506C7C15F6B9D5EC69C8D84107D
9C71ACD894B73CD1297C6FC49DFA3370259AEC31E565B633042B5D49A971F125
238DE14F4F908066D56D63BD44D4E2DF12801358123442F4A15CF2683E283A2F
CB0B8625F7201587A6630861B8E566A0321256A8E4CA391D102F956EE64A0B15
C50A9B5A2620DF266F2D73A2BED8BE6B8206B8EE9F30A507A00DC5D8620B5382
6BAB9D1330B8873DAD3A2AD5FDCC3A3170EB4071FFFEDBFC68BB6DEE7287BD15
014325789756550F2FEEE6BF6D7A4673AF12E11BD233A755A05BDB4EDA13CBB2
7E44C6D15A70B40D5512EE965133FF8ED1E383E230A9A1095DF657706A2D036E
02FDC6366BA2ABACB9AD1760964ADA843670085CC319F918FD9D6B8576F8DC39
304EFA9C75A6F7FF45B45BE46853BAAABB1E488061E68C6AACBB3D86D3AC9394
D0E8FA5EA1F320AF7A46A6FA6984C4A3C0802B6539133D7BE7145DDF7895639E
F076420C7E6738C407666DD2C7FA3BE929C04FB79D76EF0ECDF6D939F7A56080
65745EB5F1A1B135B5E584118C7D7E7D81425F285FE1D3AAD9982E39836ABD4B
338C7D477AF12EEE8DAA362A5BE7DBB1AACD433A864650E97FC7FC486B104F7A
D39994F18DC9E084712617D54F3243263C1E2B0538412DDC1EDBC912C16415FF
47ABC3D43F270D453D57EC8B091E8CF78EBE55ABDB3D4D6F4825CF63C13B40CE
21656E37A0FCB6836AAAC07A1E001D35604B5068382C766444A2469A1E3A1E65
5362BB04DFCA9544EC564A89131E477924792100C3886C5D2022E097B8C5A797
7E22129795B64AEC86D05777143014FB448620EBE100EA237747BF0B8F9B5F9B
34522F0F346F76232094D40EB66C62B4BE8E235D1819CC22B64E687E934AD4AF
516E8A8FA4A2F4EAB6C4248CA41757BE8D8E0F60C50E5D5C9960E58DC5AAC40B
D5181B17BD2AF015DA38AA4B0A18ED3071A483B2CFE3261D75F0FEC1B8A256B8
26ADC9AF04407466DB60CA06FB5E2946C0CC24C60A25E893A97EA564DCB2D5E2
064A5BF82A475FC9C2AD57951480CE200E9A68812E7799FF4DC332F143833396
06F4670595CDF4378BA86D70CF9AF06CF67B1EB40C8A664FE68BFEDB98E14E30
73ABF39EF1EF4573D8D6D9906D0DDD6FE21381EBD7E779723FDD3D4076C9CA5E
9E71CAAF5A17D5598D8E8BB772EF73E44C8A6ECB0A12CA088220D7CC2B4F8940
696EAE0FF8E22DBB74F4E6C680F80F4DEE34DCE95EFF26051637DB5C7B4D6868
1A58192505DCDC7D05633FF8FA485252CCC336B7BAA6B22D6E11FE1CF1F10958
BED3D331764ED7BFEC9C54B9259DB7CA0A469FC74AD1FD8AD169825CC3824EAB
C2F1F5A8A2414EFBBE235F96034313A66D46B39AD43FCEAD8E9D972E5A3465B3
152AA65732AE92B077E73326BE4C650BD6D0D1A9F33BC90676E4B6F3271396CB
9B10359D0C9B2274C7E4810ACF55805797F0F20CDAA1E2C646DD3FAFA6567B14
8FED908BBED52F22B36BAB08B4382E5CBAD64F2BCE1AE655C5411E8A10DB97EF
FE1D1C9DC79E940D78388C147D38F271939CA6A2E79535DA08F87D352652A3C1
D34FB08CEE0ECA2F070C601E09DA0B9690C4E3D619F1351F986F65FF8371A04B
2624925C3ECC35A77F3C7E09A302B4CF22FCEDB439024E5CBBB64C9A6D74009E
D0A60BB85F876B7075C9CD07ADEF02C501503B308516DC018F9E6A48D39AD4BE
E243CCAF3E174D63EFDF332EA9941E1A62E5A19E31BD4F55427B6B4DB2CC0865
C8B477E0BD6FF3E81950B07150F5CCE18CFE8EF5061330625D091759B1BFC960
8EA69AC84833870E3626DA519B750C34B0DF36A8825B776FAAEF162FA24EB17C
99F424097BCC23CE96786CC228DD6B5083846A8B87CCA84D6AA4304182761D7A
661259F65D9E513C9EE1F856CB82F0C9580414F496C93469DF9E7A6A4F4F4C2F
37F44E51046888D4EF44390E56772811F3F39F713E9C668D1BC3DE5341C0CBF3
B6F550D9CC8C652DD6C9608F38B0BDF04D9B6C35B95E4AA4A46B5BE173AACFFC
B1ADB530A01BCD2DEF65642CB4140974AE1C4250D72AF248AC87C4FF2A80FD50
4DD13C8217AAD826CDA74D58806E7A164436B7C9FBC7802C9863B910735B2D9E
726099AEC5C9EBE07696DCDD90A6E49F727F5E1DA7C76AF424E5A9205D66E40A
E25A2B9C215C092D9CF2B5EECBF40835B42C18C67C861948075952A6133EB005
F4D3ABF8867224DEF47E0E727D62DFC13059E9F1D9CEAA07C26E5C198CE7802F
B54FA4036E3A244ABF42987A64BD097C08F461C76DA5167DD0ECB8A6AC2D6F29
365A5745012C8AF29441FD2AFBDC947585D9FA5D06CA205A18199EE19891C1AE
436C49FF7CA14721971AD29B2FD6BE6E35913A372507ADB09807DD97BF0CF0AF
10341737EDF248638F109FF088ECBB2D8199F4F2C8F9A5E1688DD785225AB867
10516D9E0C2AEBFB94C5514CA45867CC8B36265072E76AA3EBB782D6C139DC00
FA3538D11C8F8323B8A3DC645D6937A84BAD294030AA8FEFFA83412B07E613C4
798B2BB2DB9D168701DEC92548464DE53A96830841499F9FC786D3256B046F7E
559C29106EF2924E49D59702A6B3E394C790FB4FB698F2DE0127483C3E113F7F
0D00B0C41F617D1E75F9FFBAC6391F9DC0DDAB5D08A98A05DA37D8F2472DAF9B
CF16DCB5A2AE3B89484F6AAE53308B3E93FF3786069B431E31811FAAFD8706B5
2A5891A81A667057912B82FF2875AA26D74F9976C51D6CA3B551D4BB89070E24
159B1F0E8D0B7F2B65DB3A2EAE8BCAF81DBFDDD488FDF240C9426E90F57925E6
B90462A69B5B7B8D3A9BB6DBA82586B006A01A109A8C2472A167232A5C3E69EC
1524B9156A684968000895E007A562998DBC86D32DE01B5CA37095AE929DD33A
49596AAAA8C88EFD62DC05F21C91C59B89E90980270D20693B93A216561ECAC6
2F2119DFB90CA1EAA48CF17D20C6581AB79F36697A74526C132802381E0B4091
A675C22F13004BC7009F6F9D284B26151856EAD7EC62CFC83D6523E37D870ACE
8732CDE7B5FA4762664BD9358E617DEB684C22292F705C2C4CC7649DDA280AF2
BFA69FA9D819BCB73B95E494365A41EC460E56D3F8B685FCC7E7B0792B465EA3
0A8D9171048A21ACB089853E4F960595D9BEBCA430AE206C0ED54987206F420E
2AC6581D9412C230C79E0F37377B0FBFD4A166552FB430E5B2B07F8B41277553
2E7E9951452DD167989D319EBFF6BCB11CE36A7843934C3D7960975173BA6CBB
05B260A50CABC6672B05369DA0A335D03B74002BDD34303AC60DFCD69198918F
A4340BAA063C6BC896FDEC31351C18F0C93A1BCD7D614BCB41F763FC0EB52B6C
2E3794AF5BC45F581841847BC67F9DEB35111E09CBED684F4F0B391CA938B48D
2AA2E7021E29FF39F0F3BA7A64135F3566FDD11403617AB2EA0965C54F38A047
49C4044E18C4CD499B20534DCF17560FA9D6ADD3662B36F9DCFFDF80A274C915
44ADA95688D0301837935A5A25D0E3CFBBF2A33EB19BE7295D429409E2975D24
B65AF623EE5977FC8B1F739A5962AC8AC5BB2551BFEFF1BD4A7B2F6D8237E9B4
BEDDDDF27B0F00D5EA93F3D28703DFB713F881EA0FC1302CC06549094059B52D
3D03BA910A1A3A3DF6E16BAC6A8895CD79A508F4D999A67FF2DB2B9124D8470C
C85EAF68F64F325AD3810CC0010F8B030BDA8E5D1761040B2B046E9E3D8563A8
1A45E57344787FFB3F217B33D315299CF83861D4EC1ECA95017D2FE22BB8ECA1
2177C069FE06DE3B4636F2E5DB8CF80B180911B17E098E3D7A699744B4E36B2D
5B1F9323DD1AC0B0FD9C10DEEE24F277A862FF30FFA8FB3BC3A00A94140F2BCE
5E7B469A1F0A7793990A8559E3374C521813E51A8A942278FFFD07CF7CBF0424
400D94216C27C8FA6DCA0BBA0FFC3DD4CFF6A4A20522F49ABB23BCE187F99B12
206461009C36ADBF6DA11E08CADC2446DF2621A8A75A9B3786DDB109DCC55681
A20372574DF6472862C0BA51709D0EDFAE439429D53149FAF72063D6A6726D78
0C28D5E347555B8A5167CE9056C077EAE6F2F7D7FC59E95AEA69D149FA897899
0319C453911C7F03FED7F9039DD6AA15B6DD86726F1107016FD88A03A679E339
382783758D1D5AE4904590697E8612476C7782BF11C85BE11A75FD38ADF1D15D
6A0CC02BD9E2665DA9C303B80ABEB6320CB7B552FFB89F11EA22D02AE6333848
C96146013E1D02CD57C8961D1E0EA51C02097026083440BA4ACC96FFB2E49F5D
EDBD72973EEDD3D9CEF5B4636A0D6EC173F5C76C9E32348310D7DDCB7267875E
F184244B884B2D2D92911A1F15C34709CB75C60CE414873ED858F6273CFD9AC7
010080424AB97E5449331F404E6DA3C9399BB41AFBDB059561B07406CB790822
0A35A18E340FAA13BECC4F9BD45220F53421ECEB8CF325679B2BF0C2333A6222
51E57BAFE610E9315E543BCB1AE8B9A31FAC442E6DE9D586CD7E747E01FCA42D
2288C59342EB4AFFA2FF6949244517F8CD6E226026A5FF47B5F9BCD99DD7C7F6
A848C8784F52F92BFA8F6162526066286D20AE5C8FED698A0E588E23379C167F
8E22028D560DD7DC88880D8C360C24FBFD400EB65F88C0AF8782C30F4FBCD501
0D94DDA30568C75286BF4A9DFBCAF5D526CBFEA960FF97CF1B59C7003CEA2AA8
A92BADC336A4AFAC6A910A6B158DC42E97769D57AB2CD7CB6F831A69254A546B
6DA8EECA492D56B2F9F55B3721D1B477F5A3D7ABF80CC031C2F2BE5D633E49E6
D10B247741CFC4905B7C195F49CD4B2F3040B545FD263651D97AD1E361BAD8DE
2B1AD0B30D5A2B2DC4A6A78E59C062FBA1CBC2DA26BCF2A5DF594688D1714610
671D3927F484CCFEF0BFB148E17AC26F748ECCBD48000277EC979A62D8D75B75
AB13FB2E9EC427D116B7E72400BE1E7B07D49235C7430364163AEC6E911191B0
6F159BBBE9A45C3F41D388979BE5B243819BC319F32FA018ACAF2E6E091B5518
748C52AE2E635E398E2F1C08A02CC95A7B97B182D68E1F6C0E31A6BF8DF32EA2
AA0B977471F1F5F5F540F396385F036919319667051D6E84DDC473CA682CB10A
0610278A7FA0F22FEF5C3D35EDF9B5DDB0F49CC286751550CC13B3B6DD8F80E0
FFF5A79D1CFB24F69D23C61FD5E78CBFE7A6F095480314679B3B1967D840D38A
9C18114D2952D05A84180BD1D23E7D4743E43B246A0F78C35CCEDEF16C8D4D75
81E399C828405A4D023B0DCE106274BF756175BAF6E448AA2732335A3E0CEC4C
7729F122F9A3EE04C985D2285F1FEB36AF127406222E9F827D7984ACC49EE907
D8CB3C4D070B704B0B0EB7B7F7435B508C0FB63B6F6E5679D2432045BCBDFB06
04AC7402F51C8402B2991B3C4D4ABE8989263FE7070EEDA0098DCDD32D50196D
B55BC8463033C4521996702874FAF2B50A51B1A4E64F58210DECF59C716CCB29
0E885C51C8EFC7CEA6075FE46A0725A98DAF86117A3399E38B4C0BAC128B7D4D
61C2AA87093F0D9188350856B6E477FBD67770D83E94791D4639F18EFAAE2D7B
19DDB072A6C50F41F471FDA76C76BB4C5A3038B10BB408BACFF7F9BCB90C1AA9
570FD8ED20E9C58B14F394EB05C9102D4A6D49F02052569FBDAC6DCE622EBFF3
58E63D9F6000F11FC2357FA3ACFB31182FB46CB5E1B2410664A91CEFA36B5E52
38204D40A8FB15F7268EE8C8B13F21CB3369A73AE76FEC8DC62AB313F6A3B091
9F5FDC56FCAB104C61F82CFBFAE0530F29ED0A010BBAD2A9892D70175FF02C58
724CDB27DBC1BEF92517B2A7265C3DB7929C75AB092422F8550342E59F197DE0
BA13F5A70DE8C7C3467E0B4882D34F84D3317769445EF9A9424E70856303B619
9BAEB56D942C7C5A3F184EA9FEE35C7C13D49B67384467348275326E953638FC
5EE3AFDCB678E4C7014E46B8B2335187F07413FDE2A91445EF7A572607719059
3BC7BBAEC5DB6455C89D3BE5BDEC8E9B944DBB4E06300116F6CBFAE14512CCBA
0CD8E60A9CBC82E0466CAD402D596C7394D958F997AE0F7DCBD3120EF21F48B1
6C604E8B8101FFAC7B89E57382FDD49BC425FD7D7EE5953A40F8BCE27C810BDF
97896866D0014A2523949B68137F604BA7F1A81BDE6D8E876A494CDB6694AEE7
D63B32A6A32C93477AE6756D18A5ECE67EAE73CB4E02BF60F5463B41824A7602
82014033BD01946548E3CAA720DE09040727F3C56F84FE0DA93DC9EA5FD07845
CB40A46FBF381DF76A439E25B4604FD0B4A9E3F91374FD7CBBFD7B8CE4DA16E6
F8F9C38012EF59343A1DFF96CF5497F70B4116FEBF8041052D41F01CF73CEC5B
7877077E421392293506C391705E1111D146FD2B6C69375E9E0B1B272B51BB18
29FEDEA7A98C355C72004F7DC1CCC96ADE75C27BD02FAD481C1DEB3B6CED5070
126F1D2EE3EED672411FF3D43F15A95E09247AE9760100AAF181CFF5D32FB809
E253B8189EF9A88F78416CBD885B875BB3EBFC1B038F004E566312F066B8FDFF
0A4DF05CA06A6E39A66E89087CCEF84674972C820FACA78A9D155C11A9A0DC5A
9EFB7130EE72EB3313510EDB1DF48D8F0C3583EA001C76B681675F5E4400D758
C423D376E2C5B8E428E2E96E73CD01019E64A01054E5E94ABF52DD9EFE56ABB2
7E42E2314850D21041D6849F5A34F0C817D11A21FFEEB4C75EB7B3A707A6D447
DAEFB6250ABAC16B06DC34249CF38A1BBE0C7FBEA0A637D2489345AAB266589F
D92E637DB18B31A993D5196231AC15CD53CCAFFED25B367F2A9A54E21FE6EE61
ABD20F52DD2C7797DD5C44A672F9820A60830163A4B86A2F487BB059DD7A3BD1
CE641C8300C593CFAEFF57C2FA041DBF351FD9F074C98C6D159862B0AC12E46E
B296E0C9709DF0F438F43BF90D3E31F21790CF6916E28FC6ED8F2CFAAAD6C474
579E1EBA617A7AEAE69342B7736DF833335014342FAA0690E534DA3733EDE92F
FACAE308984612F337F31FC100C92E6405D7DD1C1CADCF7E712A8AEAE3963A6A
627A97A3CE8303F1448801AB7027FD69010BC7E6FBB51A6B22F119C4C93318E3
1E8740CD5E163F8EF725E7A6289EF2D94821C2EFF158FB722E8DBA6CDEA879AE
6E3933A576C6B0758D49F3155D448D505F73A52069DDBC8FDE7770F5D6DE5B32
03C9BCCA8EAAD9B6DCAD1E5A0AF412E961B6A448F677202801A0DF8552CD2205
8BC7BF36033DD982C103CBF7F05C8FB699F385698FF5F023FACEAFE7CC313A46
6D42E4B5318C92AD47786C00AFD0E4B4C9307EF5249224A7554D77CAD3FF8AF4
F8CD3B277C289C864D58FA024E380036EC605313952366F3C351EFC4332567EC
EF47FBF4BF0447FF90BEAD2A71C7FA1D43ED96BE413E1E89938F64584CB18B06
2220F7F8662F12D259AF8965F9861359C5206655B2812DB2C5695FF759E791EF
3D8B43C5B850A3777543507A36A011003198719EFA2336BE2E0A9BABB47C3D52
10A5EF9A48789C545A4F1951B7E0A4CB835130CB81757CFC8ED6BAB56194F39D
218F20C4027148117CD4073D0C3B04A19E77E5FD258C149C444976F34F301F29
13653868434F9020E40EB3B7B8313D84EC9DF1631AA480BB650E191E30718AF8
3515CA59C834B546BC0D0275D415EE55FE5E327737A97B7A9423AADD44869CB5
1198CFD8840D550834E1AFCB7D59ADE152F021C82CC09FDEDFC541C72068FAB1
29E280EF8AF253AB4E8C1A2983B23E6D74DF90C6371BA41E5781D9EEF129DDE1
EE89C451BB69C750584B5478F90B097142D73136458A6868587A364E5DE7D5F6
0E85979BE5B243819BC3EAE9E2425C10CA4129850E72876F5A6555C04D0A8661
9FA46249868CE8429DD4646677C72DE1210BFE3CE7DEE4C16D48C9152A95B64F
F197C221265B6555B32B69CB5523125B79FAB0163139BF35865FFBFA49D35026
13152B01640F83836359CC0D937A77AD4BFEF033DAC5CD34562943A2236CA475
D96F399FCB8976B56750C4A15FC3CBB1E614189E8E19D5D516EA33B82AB544D5
7E154189AFC02D37984B5A1D0BFFF67983F049683A01A4BE071864549E581985
35EA5F3A6319F0426619FE5F40B46BE7D221A2E4C4E7A8CEE9216B659C2B371A
2751DF25066A7FFE8ECA8ADB39F78C332764392B428BB973455BCD00B7CAF1EB
339BDD4E095C77C2066630F980DAEA04C9C09A2646A2689571883DAC661D89F3
B76B92097A94B6212A1708B1A968EB32F1B0DBA5452C2185568A0A17E49A3E72
B961942B30CD88E0FFE51395ED67AD441581D7A43EC3324CFF3DAB7E157BD374
E07CA2BB35988541C96FF775BCB4FB7C6FB859DC7F6436B04C62D7D9A776FA5F
414B7F08B25AC603F88791AD5AFB62E20C07BDF50553191D573A851E9211DAEE
B713C3B27A48DD89BD4033BCF60A45425BDEA7959CA64C7EDC850C1A6D1D2AA8
D1F8C8308663DAF949FC63023C677469F05E927A02FCD789CC927A0CA9D1C214
9ADC103F3DE7CD6B56AD2781926594A4119B0A1919DD476B248A6FE29A67DC74
0862E7DC228F06A2D7C8967F5CE0783CC5966D08350F17E02E9E276C9170022C
77B8115D9CAE436969674D4C79B5F27373761943436D3B6DB6ED212E6BE0B476
B7F04C96BB798644915AFFEB6FF1F25A87AE59585003E625B516959B8533A31D
F1D816240E9CBD5D4E8869D9BB0C1D07F643040264442F31881E3DB985834F02
8AB83E12325AF506D88E32379E2C8F02E1379F36DB5250CBB55D7D6DA2E4F9E5
FA2905FB26784F9F27A3F3F2264493E2354E0F6220F6063DD3A44072F1D24EEB
D0E9D5EDADC9740590DD9E18801779FBC3307C0BB8A5784518676AD14C29FEF6
B211BD4356914FF31EF22D4E33B72BD8EA886A4CF91C45816B9AC1146B1BB7AA
A74FF92F4273B4273345C985E9FA2045FD193E6EF5F8491B730E6F3509FE2691
9C91898053E8C0153F4CB3863431FF9F94DF8808F3FAD9DE513E0D6D14A39800
14FA109C9235A7D553D0F5862F2CAE2F8B6A8DB26A1287AB3DD941A92AC5789B
93627429929156E236281118679A10464816AE98730F9D826137D6F1401CC1CF
6E291DAD048F1AF5732A58749B85730A4930EF1E3E733292C806C80C8865645C
6569B479012A286CE76585722024CA3316F837CB5142AC10EDF01AA3B369FDA7
294F9DDA7669A9E080B40CA487A1F122EE94710F8FD27D9C1D968238CADDE176
C70FE801392BE09C8FEEAE1803EEABEEFB1ABC2BFCA76F6F1227D0D8FF713353
93E9F72BBFCB7462632EB3251C51A50C395F7036CC9A304FD0C555D88875305B
AE278DCF5F957B2F2CD39BF76B47EDEDCD5A24E346EBA124324705C655691016
93F0D22636A00F432618538761C26330126DB67AA65CEE2C609379CF16CC165E
F655F67C13AE89A82159B49C1DB34B2597987D6EBED2896DF199CC9BF7ED09C6
8598E9DE35BAE0BAD07223D48A24FD62240372831EA5F4A11707B4E5A2AD682C
6C0F0067967A1A37613DA435C80DF812D8CF9F07F4948492C93ED1FBC9BAB99C
DA1AF62F5ABD2F9D924C17E7674C8DC6629C8B333C2DF4166A90FB1A389A3422
7808BE3F1DF31CD64AD21688B2FA3BDF5E36CFC58596E48B4069039B2B119DA8
9FCC5D526829AFA5269D435BA29CC16C12CD2A46F5111DA9D83893DDE7A8B1EA
1475F8E66871B95EF620469675DDAD4AB727D984B0EBF3CDF8C25CC7A82E6357
7ED559628F0A41EFAD8DFD4B6F32872F8677DCCBA8CECEE2F4E167D391FF964E
A0A59A8163A90CB2B497024BCC92EB5E087F117A6F028D2F2BB95F7428AAB77E
BC61E050651DDE5AF8A03756C12F189494DBC735E3C86A6D4BC275BB1BC72792
92B2722E1893A8FBC3A7C56C8995076E089E9D38A4E5DE096705B4034226D6B5
DE97BBDD74234C5AECF44B9D06542B9F9833A1E36C15301FFDBAAECC1619922F
97CB79720246673BF3BC51B6185221DE666B88BEF1AA329748EB929258416A34
D1F24F412C71012850288D08AD0E925226F6B25349D7766C105A0C3CFA4205F4
51F55968F63A8507C386FCB705BBF46AAE7CE33CE348FF99E9C2864447914DF3
ED83F6EBDF7F764AEBF183127E6CA6240CD0C9FD8D275F7850C6565B03039501
AABCC76D02BE5E1465B0FE4575C2E872B28958713C9BA8A1038D30AA55C471E7
EA37AB0F48DCD3E967DA500C58AD8EE472B30B7BAD8B85CCC2020107EA6C37D4
6BACA453D38B476C7B79AA3A0EBFCE8A593AF5AF11EC929FC657A99A86DEDC17
37FCDAE025AA14564222201FB6DE616809BB7CEBA64388EDBAAF5A3E1C9CB339
F3AF52C20A9A19C16BD126202B3AD48021700C552280CC0421EED1BC8C0976DC
D965F5FC4EE010D6ED3ECE6C33042ADB926EC8CC9BFFE37D3A7B41CACEDF26EB
AB9DA18D51B6F3880C38FB2349BE51D981A08AA153E57C0D3CC3CAF0FDFF0801
76C321F77478E1EA7C8D88CB5B57A9D344768EB7DC6A46178EC6035FC8F3399F
07B6CD679C871CEFC3A2904C546D6F2E217EB4D2251DA746456339E191757875
4452EE407DD09E19F97884BD0673DFA32AA4BE0BF974B952A4B466E6A31040AE
138A86C95BD65708D2B5757B57A7F5497B3A632A2BCA6172867B27CAD68B88A9
D5848AB3E791019B009C58A7C090F77FE072E656B0AA854D2F15F7AD81CD3384
02474F27E4916B43DE80ED1D02F6E4D208B014C20A4307BBC94AE5888A7A4FD9
2860505B4F912847080C3BA2E0C4F7FD2D7D2ED6170CD24E71476A3EFA631A99
A93591CE58DCDE5998E5D85161661C364F0DB5412952413A4AE7040D28E2027A
98BF9148F4B1118179748A77C458F6F56CFB6FDA12DD94D5837F8101D3D65F56
FC702AA2134D9DAFFA3EBF6C9D6B4E9B7DF27DC66C4E39C946E6BC27C886EA39
6C89FB414CAEBEA0EBC4C4EBD6F30745418E617DEDFC0E4077566D4E41C8F0E9
27101745EE5636F0EDCC75AF25592EB7E7829E4EFAE3C6BAD0D4CF96A89172B1
A13A4823E645378959E3A4959132D9C78043BE10B839DF0E5EAB1B036C24E04B
900120FCEB6C3CB46FEEFE876009CC5D804B1568458CC0F65C2826302C5D92AA
7DA073557950FB39CA16035234AC7B1684F03F46F7649B7281DA8FCD885A5714
3660ABFB71018B1EF27918BD25D2D1E8ED86030B6F4D3930B88EDA6AD1B0092B
1BC22A21C9DA362C6AAF430EDE6A0833F7E2FF19418203B50A6E97E61CE59835
0A470C355EDF1EC6429F804F56D5C5CCD2474922303653495CE8EFF5B1571E1A
E716D0BFDFD8EFF9C479B853BC3D4C51DD6325400FA5FCBAC9063C6102EC5410
BB966FEAEAE46B7AC309B0B626FD934D3BC1ABC8DA0F18928EB91958D7B43EEA
506E0B4A36A18E25B5BDCD761AB577378B0FB26F46CC8D6A5018E9E4413584CD
0A700453F62786B324FADE614137AF03557647E96D18D1E9FA5BB5D125CCBCD4
1BE10E91F084D7CA917AB99AE447CD92C8A7D7BFBB4636A2BF72216E3CC4EA85
1AF4CB1A21CE915CC4BB5E507C9FD85B65CC1B53B2921BC4B6837323484973AC
3D7C9D53126432B6B3DD17FDFEA03D4E0C927C631F0B5815DC0751A926103E66
2A0348E70A97A4658580AA066F41264F0AC879A67E1B0B621CD8572B3C609C9B
5E6F3636AAA62701259915BC2641DB03EFBAC85B5D6A976033D6C69771373193
21EE7C2410E94F98BC606B33BD990F6449D209139A5EDDD83D4F86D12D3B4001
07B2D5D260D28129A5DC6D6E921FF8DA47CF97D4BBA0064B7339877DE9B4D3E3
621852C9221A8534A1618604CD2A317F0B1BB0722BBD7E2CDCE9B243C773862E
06BD9EB89855E00FA4F2651B5EC4339208EBDD9F27C3248B6BA76044B9B6CFAB
FB24B11A1FB8A82C80E04CF5E36852B8D47BB67197B7162E76483A80F569D9A7
E77724C7A25C16C6E72CA35D7386FF1C84C5BDE55D757904286A5B0F6408C189
665735038CC258295275981AB3A1ACAD28E6B9F8DED080E1C5488C1E68831FF3
69191D409E506EDBFE9AA1872C3775C377D3C5C7267BEFE151C52A60427176D7
02F1A1D39FC8C589974C55513AE70589392CB5599C78917B507958CD969A7D3C
B2390AAEAD3C15E072DE0A84250C62246A020B897874871354ED9AEBB6A04871
200746A55EEB4271A8D23206617653EF1066578DBC01294709603394EDD5AC22
7A5EEAD3076353921BA7BB7C9A57EDC4F6C72AA78CB54D6910AB318C0BADA260
1C1CE1C1B16D7B6EC1C3314567C88BE2A4333B1E9964BDA8C46D7D0B50FAD0C1
8B03564EB61A0D261812A3EDE5BF4023EC594E9E5DCC2E4B1C631F005C08F425
1173001AC87E9FC8FBF409AF6444F6FF65EC938BC15C536800DB79CA524892F6
EC3194330BD1930D363DBB5EFFDC5B5D4C32E2A2BD2FD61493FDA21156402702
F323E26201B40407019A2844A06D53E278A12020E698FC58D68EFBCA5B08A24D
ADB49B0D3DA2C9BAC838DA2797BA6CD6DB3BEC3C49B15F5B12A5FBABEC2FBBF4
98AB96F55DA6D35FB7CCE5313A38D6DDCB1BE272B237572D0738C5B7A9E30E97
B78975EEE2C3353D6C8B4E84FCB8FA302C68CE6852965F3570FA1A112B7CC136
26AD2B27443265B374C4856404C1F0648DF86B62D63BC05E6D3BB770AF9B5A74
7EB1D6D1BAB1961E212D20880069F0F3B5536CDE53D4A4D01E4AE1642416405B
CCE8D41818D663AFDC9CD1C81B95101A3A8B82FF19251B1D3735B67FF464CD57
295728AA0F8C87B5B40E142062C58232464E499FA9FF58001665ECCEB28B3E98
C808CF435FE1617A7E9CDA86B3581FEBD0DCE7F6D38731EF1E8CB0917657EB74
9149E1D61A1ABBC54A16581287CA52C91C957F37ACD579854CD11DE71E1E229E
8FF040BFD4CD3B9F79F1BF79818A68219E832698D7BFAFF83C13AF40E46F7154
198D7BC2C6F10583D700DE58740986A9667EFE80A71D28F3A9017780009EF4C2
B86F8A036EE89251243053A311780FF94ECE61C03D5A437BA800DA48199DB25A
9063B43BA2AD37B6941EB9F43E42D727F9EDD61A9C9A71CD02986992B15F4CAD
81E8CD4B2A1A43D191A2C4BCA6B90B4A5C5E47F999DC291B0F002A0C69B1BD50
276F8595FC6E2DC97AE7BD985281BDF4F0B2E7CB263642FA5DF59E7F3AF5AFFE
939F56F9162BA8BD1EE0C46E47A7C65EB3AF97E72594C518A0034038946E838D
5D7E55560DB1D261236A9754D3989E1B31830CBA45B51C68CE8D7F8AEF58EC30
3E62B84EA810FCEBB293D178A5A517D1522E930BAC7F0C316E428E93741A4C1F
B18D04609B43776382C4389362AEA7FE4E03637B459F8EE8E06FA21B47A2C431
ED3DEFC7267AD9DE87E23C2183CE9E093B65AA059139E380F71124DE871B3CD1
B8A4CEC4B7756E06B403EBE8AA158C45390FC5BDBA029840F31FB46AC8CCA89F
ED056BE9B0C4964AE88138CB39EDD3BB0DBCB73DE06AA84522EFD87ACD132F40
F2ABEB46B6A3E883449A3734F9EA75154BBA688D6AF88DF1AFCA1A0A3E18769D
C85F902C47DD4D423C293761928D80683456820D638C1E6063224889B12CC4AF
21165863743BFFE1959EE14DD40726C5DB3854BAD2B61D6EAC65E305DBCA5630
F82880744EDA3374C0B7D691A3461AA5D1455A660188741658BA6AB0F43F350B
052622539A012D18FD7A725BBE933A2033A1ECE86680E3344310564C4248AC74
3C803C8FCF1F71AEA28A08F8A12C4E681B4F5B61922DC4A068F35B9E7EB17E89
5A9862CA1C85D68C8F9CB791254DF65FD37B11F9BFAB23D87A6ECEF42B077A39
E77C2AB7825B89A2B15B9F852E5F33B0545BABA6D7B5C08967B38478FD9A143A
1D7010531EC38684D7EFE3CF25BB0C4EE70CAB7C5DA7C9BCDCFB67F1B6605C37
956C3EDD05BE74CC57E6AD93A6A8549ADEEA0BC4EFAAF47C936E6A2C452093DB
4231E1B05E7DAB444168FE1E60D7C2D3174873F55307E929B392CE3475109E28
E1B59392974E09C2413E9C5122A11A7013315C3951AF975CEB90A8F016953104
BF2422B1B8B7C195E8AFFE8868052BA9031FDBB4C35720C810C9E981BDFDEB88
6B73277835696365A2461286E7B18A4FBD460F3424D8908193BFF7C1F734ADAE
9B2C7C8890636CDEFD4AB64B26FC5C1BE21F5539211524BCDB1C93B392C4F89A
F8302FB8B5DCFC24E4E4769C354FF1F617FACCDFEE8EF9E991CABF6EAD018427
7A3798B0DC6BA8472552A1AF959CB70C6E41B33B67AA6E400A9AD8E790239E1C
1D34FDE64332DB4C9AD7D4408A86264EDC9466F1B88FFEF31523001CE48D8F35
5B2BD540177BAD35E2109EBA9AF8CCD56551AEEC8836C1176E15AFDEBEEF7D64
405F299BECFA1A5646EA8EEC99E20396F2CB3DB2C8533624EA884178145C0814
E624ABE4E4FC102CFF05A5D9F7D3F2CC4F5CC1E0C6E328D7FB3D03E0F9530087
93259254CC43613F2A5D48CAFE65BAEC4AACF739AA843A55C28EA3056E1B4FAA
CED3B34AAC6E6BFF0015EA34741E8398A433D6F3C4B442E014E3E5A5E82E52DB
5332A44120664BB5DE104EB3D74860697B255C72846F1570CA4F8DE6A0988C56
A71701327F3123ED0ECDF2560422F9B3E21DD163F6308772F7668176B87BE2E6
F91B49BC2EBD0AF2AE15B575C6682DD2135AFB3B1D62AE03D55487148CE83C7D
F9C9B0C007F4C50242E47F6A98CEAC24A6D5356244E1E7C7EB170638B95951EB
377C66A393239C3468B177C20D63CB3E2E24D61819BC85159520ADC69ACA26ED
5D96EE50A5F005953EB28BEF26A9BE5C6B9AA0D1E9EE8B39ACA243C925E8C00B
B3E642A64685456B6BAF629AB80857E206F038FCDE2A796E981760EED747888E
8FFAE3361ADE56D7F8607219A13C7B03257D8CD384F37EF087732A08121144E5
302C584C766900ACEEA1303B6B7283508FDA01F038FCDE2A796E981760EED747
888E8FFAE3361ADF0D94CE082C9B9A6C7AF788223EFB01D867563247D5A540D8
D3E30A63243E9F7DBE231C3DE32B82A38A9BA607F7FD74C95042B4E88B99BF90
C760D537A5F601A5CCF1CBBB6A1AD61413D43312587B22E6AE0BE55C3BEDCB58
43AA4956B71E6B5758D8423C1610C7FFED2F5728D3DEC90B2B0BD44F9515593C
1E7C135233EFBDACB6C76BC5C3B86B7B293F61AA10128510BAD1D1EC6BD40637
AF8858625016F38DD12AB8309895AA3F6C14460286A02109B864FE34566E17B4
A1A09F9BA10DED0F4DEF52DDC6BEA07E93C31D65640378033A2EFAC8C46ED66A
08746F7366B3855C49CB8396EE7E475F29A557362DC3468ED1F1CFDDD540B560
C2E1AB253A9BC1F8A01D3B993C5B31CBF550EE7E64A3684B3F2BFFB49B4B37F1
29E3A64C2FFCB5623DA1351D022216004880C2367165A7274F68B44FE0CF3188
25B1B79B0A9E4BF1556BDF885D9C15A102C4B921DBE5AD97F9A81604C9D6FB31
DAA01DA3E20573B2557FBD72B49C9E53EEBC7BF2253AEA89151CA460BC7848CB
14BF26D15411CD48CCEC93C8AD8328DA0A238A97C18AD92FC229CE2A91FF4F2E
156ADC6BF80C1719B58FE7BC03C79B7D7372DB2DC3607C9B6AB0B075C2BF0794
CD7C5F984D9514FE8C9A9B331892A90206E858DBDE9EAAC737BD2CFEFB9C9912
51205ACD10B27D7D63DF0520ECB90206EB153F292D5695FC00824C474269F8F7
B27885AFE7E0BEF760E8DBAF304E7DC51C69967B97BDD1C31D453DF28978FAC1
3ACFAA555CF90D2EF851D0F4F7286A5073B57D04D0ACFA00DB9658F94475AF51
1838F3D566049C13426EBF6E4FCA6B47A5CCD885415480FA9C2599126CC7E4E0
0F1B8790D086F6654F013BAD1DFFC033CE7E4DF4291DDE6BEDD931460E2842F0
FE0312102AFBAC3A0F39BB87F6B7C0BF806059AC1EAB0945A4951B3C060770E4
CBB96F020F2D846907C300A333641FE578F6DD8F7BA75507DEB17061FA24EF5B
D9E5411B779293306B44A7BDD35F6381D43E0B47EA5B47AFCD0F0FE5D103468F
3956C5FF252A7B669C01B1DFC8C29FB050A574A2E071CBFE34DF9D08705B0816
E69C511D2C3E17204C07FF868017FC8280FDD0C96D02AA0CDFCCE02A3976483C
362E977B2433B6BD77628DB883A54FFD0B098E0DF5137533450CC4571567FB87
56A71D20E26FBEE148D8C68F2FF41CF3E78797DD8DCFAA23A772DBBB56930CF0
D3392351F59C855E45E12320192B95B042F501C821AC2D2164405F5A9538EA6F
56AEA8107945273D0ADF020BC4EF5A417B7321211F7C2294477CA8F97661CD5F
C2694E3CD08C597D458B37427057781A80CF3E9584C97933EA251CD6755B77AC
FE88F3E895037F777F2A2E54A09479D6F02071F57A7233EC34EBCA14F43D6F39
B82B4DCEA86BE60949B23D75F1EC40ECF2CB16855940285B4126297104044BD2
70A059331AF7FC27E3D41B3BDA6A441508F3E98BC2FB441E807480043FC226C8
D8BD33A067CB647E53E340C506C69991575387D8D2176685B17DA1B5DDE6DBC6
E943C604A43D75E94F78E424702C0B64C930C98C418038FAC02041DEBCB1FC8F
4F890A41E37D4356391B2277491DDE185777FAF0A741E72787180E36AC1835CD
C84E8CD799C3E02E808F859C1F9EB8ED84B64C9FA45E8F83F6DDDC2551B0039E
D2F0EB2087D7D8C99AE405C045C305C997C2BAFB8A262295F5A6E97F47C61D5E
A0390BBA045AEA45A04F184800733B1385A12AA3BE255179576A3D72AA3CC5CA
43840FE216D07C58E5292CB6B29B547A9A81755256175249F6788D39AAB579C2
6A9FBA5F1D63C1D0114C8B49875196E5F7D1568DBB30D12C477041149BEB4819
70DCF9F0D7A08347A2660B90A70A4589AA2BBC29B7A0A40A0B4C988E87D3934D
CB34C8608596FFF2FE5D5DD1C3FF86294DC8FF33DC575DE822084B0D35000C2E
AC84049BD8F9372680EC54B736EB9C1F23771C4878B7492E36B0F3CB83AF3245
F40EB6241068AC952A7CC6FBBAF411F7B27C395E61076D59048451E732B99D11
6357AF029C73AC8ABC7C8F40E70DDB8978A9E78EA099CB74574EDE6EF3CE8B54
2C817BE9EB63076703B29D4DBB496D2A73344C77A5A26E2CDBCB2EE0C0F4E48D
92E1E19DB4880AC12610EE092EAB28D48CF9FC8F442E1B73ED54D7C7F105B195
10725235F92D8DA29782A15EFFEA7B0E7A144F0C676D44CA31E7BDC8CA7D1249
C9A4F71FFD15241EFFFB65664E178226763850EFFC3459542A14C6DE76BF6410
E008092E4CFAB08FE564D42304C6517CBD0365295EC933578304396433089083
22112BEDB6A0DED17E81C232AC4877084A68514479067110D2651A5AE2C9F0E6
3E91C9258EF3444D448470923E3EF18CA8E6AE9403CFFB2A539E5B69070B5243
BE463AC1FC035CF703E80A39CB9067300CBAE9D53F7912299AB2A982137C1AD0
219F352D193833713D0DC654EE86F83E84C737964E9B7F733FBBAE7EC21DBAD9
D4FCC9F9C78662BE5FF26528DA57885F8A6EF9DC3DB9826E6322C4D623E240E2
96CC9DF619BC6DC34CD465B4F9248F725B9E143FB21A7B06BBD319026C9F570B
D5678CC6D1E166BDE0F038E2C4AB069414435DDCF8C2D8492EBACC6558F73220
998806755691794E9DFD3A1FE98A6317BCF4C6456B6117035D18ADDEC7139CE8
DDCABE6B507407B50ECE69E7B56A2EAE9FEB6752B624EA12BD63B4905036521E
7ED6C02676970C54B4D895433137DD1F3A4A44B8EE4053FBE6BCC37212FF55CD
44478DDDA49399AC6A21D59D47457F208FE36E2B6B996CD8893079E777DAFD32
BE80EE57186C0C65D59F053F97D855E45BB9D331350E066C4D37916556636233
CD545D84E7A21E16EC92624F3A5EFA2A4A18D74B18755786B5354BBC57C6E5CC
3CA455594DD5DEB13F055DD1BC8041D29E4457018A53B0202E80844E81F7F5CC
21752A832F90E2F47BE978CC1F33A51DC2D89E6094A7C7CA3300AAF103C08100
44E2CD650A94B12A5A82E83AC1BA3D0E8DD454A1DAFB8771F8B09E0091902EE4
4133108B677857CEECA8E673CA176FE527CCA001FA9EACDC143849F68DB06274
AF40ECDCFCB7A3820169C2E018B40801F16E36F87D11213AEE0F4563C6F0A627
3E31D1C99665B860D21C95DE6DEDAA55B9F3D9B119BDAB5813A2AAE16A5DB7A8
F3E3AD0454C5FFA9F57E156D7A10F582201D1AAC4400596FE32F2FF51717A630
BB042242EEB942BEF4149FE835BA89CA24CF15290BD8809E7ED42E3CF8B8467A
4AD1A3607689EA575C0AD128085AE31D62D53811289FDBA34A3F20C75014CCA6
B7E4C7845E35A370B252E27C6A7FF7B47A7D4A5411E46EFF08177470598D225A
23D8321E46C34B6931B48525FB4CEC87D1485BEC7148460EDEE8EF37F0B04B03
C3B5314DCF2061A4D2209F8A2C5EC72F6E7AD1D61A353502B191785402893148
3C022DB05C56AF56D3641527DB237B1CB2C4DFF1B689397B0AAD72581FCB92AF
3AECF1C252AEF6883B361411739CD860C85ABA6D16016A42CF492CD0BBB13EEE
795C2CFB5650C21C900FBDB4BF52EA853A218E86B044C99F0A83F4D7D95D55DD
14B6C35AD45A2144F3C7B1BE885DCC5A3B60478C7CD708B731BCAE0D1415F3FB
86E105E67FEB69AEC69102F7E18C5DAE5951B7E207358537632BF538EA2FD251
55FBCA4DF4359B785EC17E5A0F92605FABDE83CCF1F663D6E73CC101DC1A8323
54DA961095C48A44807A66808B8F027D3B334E6AE7F0644559C22125E840C273
1E1F13A22FFEC59FD60DE0A3EEFD03CEAD971E74275AE9218B76D08719C53CB3
44BC34DD5044746B13BF4A1145739CF63E0CA3C33F00D2222A77FC181CA0042E
22BF04147C9D47EBBE063DB359D486B7EEB912120044F640DE9098B65224FBB6
A04D63564667BC9AB828940B80F66EF1BA602D310C17399541F9BEBB6D10180E
9B5FA223C8D9BA7D5C888FDB040C64D16B1E23D2BD7B58F87C0B53D4E84BC33E
9C7F4A9E5A31D6C0FA0586506B9D6AB3F48F8674549EEE2FB29911EB7BCE610A
5D626580DAFA66E7D0E4EA7556A9EC3F84D8CBA64E13C4418A1EC6E63785E59B
554F46772A82D367BFB9DA0B411A4F04267EFF030E08CCE3E8AB6B99839B187F
8BFF03AEBBD97617A9FAE6ACC5D1077CDABE9380FAAE9D3211598ED525B9D769
5F9962AB89B64FE56D0D6F31EF09ED8837879C973BA08DEC6A11AA9672B36D31
F12823AB225D79F08D59DCDD7D5FFECB833B06FBDC800C6F44A3E24783497802
989C9EF5A787B376309311CF355A9EF3F02861F4523F11117EFEF41C059CB2ED
4A7E0BAED4EFA07BF6BAB563F050FDC093E109249E9F969DBAA8CB29F74199D6
0E0EDE139C8FB6C94D821DB792EDF09BF5E5139CA9D42483C2B74ECFE9279787
36FB52B7CEA032ACA21C6944F2389CF08EB41B55B0FA8ADF1ED49FE4DC0E2ABA
F9128A3690AC26525398A9E4A20E1D258F24F27EBACF8962AB120EEB299C2761
9998E88F2619BD60674918D1B42B22879A9BE70F422D68F7F396B3D0528FEFD9
83845BC09052BAC73C590A8A7D30A9F268F3E3D32F21DD9E4DC3334573FC6573
C64AD12231B60611B924F5B336209C225484A37DBAB656064C8B3726CD39555D
C55EA79FD8E3A90AC781C2F93A21B9C54C0D8517E463358D70DE7BC67B28D04C
BA2FAC31EC9D6DF5310BC7BA2D15DB730E3A1CDDD3EAD0E1367D17E582D2FB1D
86B14464FFD13ABC20639E8F4C770BE48420CAC2B13BD34A26467B4611F9F0E3
B92B0DDFDC521BDEA4D2626A0AD6F86D04A4571B32DA7FE1B4EDABB5212870BA
0D27B1455A1904A00E780E2B0E3CC668ABECAD629D2C7CB94EBC4A7BD5AF5D39
381C4E6063E8DFD27A5BB3075030EE48A9F2613E35DC65F3B1137455D94AAAA5
BF1771B33C695D19D971527948647F2DEA2111F06336C39426E73CF01A8B0893
132A3B2490D9C225850E14F1F6C8816A6D9307F0C10F3194686EFD3836CD0122
F60874F87B8C2ED71B16BEB04414302924F0BE6CEA77D21DE7617ABD07D6DCA7
328FA192A93E48DB3C0984310D51A143BBDA16BB2A1E7E00F98AC3DBF3066258
E9243DF72D0BFEC3902F07C83B3DEF8CFE3424FB86787E6F4AA8C9AB432B3878
A18E51DB54FC1AC7BA4F7D05397100A586EA5B251F0ADDE9F5B5735D67270C4F
240BF3F1B5F738C1188C316A1D3CD06942517ADF3F7FB21D85A0AE65586DEBE9
EEEF6638452622A3C63993FE661CBF2C10CAEED59151AEABE760FDF860981256
80DA8176D8292BE5B334AD38AB0C2EAA1B49E38FBDA657E70BE7684ED064E9EB
737A99B1A89291769E76947DB4E8D2B2401A5F53468EDF7E3F4DEC51CAA495C7
506F3895D7F7A45001E3A1F65ABE3589F6719D7F8665C167D1E60BEC071E81A3
0E84E58FE917C13E7A2F91FAA610FE8C4CCDEC84FA4E8B222F8C923B29155F49
B83D9D85CDED84012244BA14C61A71691DC1F87479F5AD930B13DF1D79D67B63
583D17FCEE675D6FC882EF3A79C9F067B164C6307FB892DE853C5E96C1EC00D1
2624A64FC76F91CB2AA38B89E8CAF6517BD9FF53EE2A694E4E0F9783CDEDB694
8457F69094FC48052FA5AEB7E0B6BC7D8F0C55F012AEDD5F299E658FE8AD6869
5C94AF484A56260BD7483F4AEB8F536616F5610C549062F81F9086D347746B19
E1BAC203AB874BF020DEA340275230FFB6CC5274E76F5DFCAE8054E334CC51AE
4CEB15D89C437AD3F5C168D9D46806D137870C875D288CA30296F5FE7CE7A168
009047D9FCC4A4DEE8088B9F6BC4A127B35BD02098CBC568421D1A59AE9C6E2D
BA4B7944BCAA140633AF68D92B0C85BF1CFFC872CA021275E7035D6B22AACF73
713AB7A5D26120462D155A821E532253E9BF2BCB01902D304268452D575F9FAF
A0E8BC304B2EB968669E92BC7B616581EB33BD1AACE6F06A39B77A52E13598B8
94CA3CD9EC0F5D7B93B39B117CA37CDEF3A4760004D1BBBF5D93A7E7B8603427
F6AADA1A7DC63112D5634C44A335561B0E88C0987F8C04894FC60A23362EA344
118DF4A966EA0DA7DD6D5B746F3FAF28F1EA5ED5911494232D54DAA7B54F9E18
14F5B50155179A7DE5DA51EDB75575380E4DD8F61E48CE61F5408E776365299F
25EBF2565E7D5F44B3F7A8B9D7D4B885AB7F5DD1C7C0789EFF30C9716EE7F872
BBCED3E44F1CCAB10B3CDB36212B3C2962256D6EA3D0E0F7C94492DDC799623E
C3918F4A07173B59CCC2A4D0613D27A4B8FD4073405AE222BF26F17020341D7A
26C21EA931676E857484BC231FC2F24CB1E5E12E89BA84D39969D24654852288
3A90FFDFD13ED5548962C6FA9F0FEC85B80F4462C1F5081CCC9B10537E5FBED6
CD436C84C3DACE2C64
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Italic
%!PS-AdobeFont-1.0: LMRoman8-Italic 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Italic known{/LMRoman8-Italic findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Italic)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-489 -292 1472 1124}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD115081973393B704D9D8B
0462850E51DBFB8616C22B791B3CDDF2039D509E454786F4825F8101A18C49E2
08AD15A3C7A5879AA4CD3DC5E43C24D225BB39F3DCF4FC3F621B881512F86C0A
F2952E088E3335306E2FA4A8080B7A1A8AC5DDD22CDB2E8CF5D9648CB41369B6
EC5189E3927429DA99031EE0D51228E5A7956A04A91430B7C0E422FC2BE35F21
4CC77A15E5D9FEFEBBEA0F73A77580CB02BDFE846CCA0671C8007C5080D22262
B9A41DA20C793CCAC644B70497D7D1D7799F589CB718B52F52A1E494DE352095
49E9F7D4250DA0A890AF86BB288D85A8366508C2B91C6B3F99F69B79DDF04B48
1D0C74086E615842106C345F07B25E93AA0E672A658E4801BA3254DD5CF00295
4856C8D85A90A841236F26B782904EA31482F6E111F95E88808DBF6C40C0F933
CD4BA0243926E746C5FD765065A7DDF5E44A7F94E041E79C9E83A6EAC906E40D
69DC5B47ADE559E7295F0E742E4C458BC1E8EC7AB04C695DFAEFEE778A90ADB9
4CB21EA81EC7D47950E964E23C0EA286D73D87F60DF0702BF6439EAAD17BACAE
07B6BAF3DFDD2546250E451F8F83AD2F5E29CE5E2C278BE49FE3AD78E960F75E
AF6F23F450D71BCF85002DCBECEEAB0FB990E25612ECC9000164E0470806A0A9
AA5FF1D671E9E5F0572DC847F1D3C43D42A12152F6221EA726ADD196BEBFFB38
375CD9DC1B68D9DC4410BD7FC6FF3C6B7E8A04016F1E3AE257F3177B7804ABB5
F3949CD5C11CDC905FCCBCBDA96A501D8406B46C02F8F5D6444C486AB68204C9
AEC313044A6A35B7E699F540DF4D3B0C8FB1C9537262BDF381769FD74BFF42F1
7EDFB698E6C082C327D461587FC9B86564CC1E48FCE385666CA784F59F84FA71
1026006BEFDEFD1F659AB9DCD7A333AC57AC912FB468D39C0BB84BF39517DB14
A19A851ED4E1C217D5FD8475C0CA36A84C1FFFDFC0342838AEE12EBB684C6C1A
3C973E2D56BD97E39F61E1B1B9ACBA7BDB3F901428C98CD7E3DA090E128C794D
9D6EF7E18E06469CF003B9537B60F93E351800999ACC476DBD709AA7DAAA193C
E2C27178ECECAE03BF717833F0692E2DB3C86B8880C0AECFEFE1DBB7E42DA12A
67E70B290AC88D73F30514F88E8FD48F0B675F296A83AC1938FCE2DF9E91EB4E
B8B2ACC2214FCC5F2514F24E0A4593EBDA9D17A20F6DC3C0DE48A796A43EA25E
34BA76F1681A3282F7FC211E13B3A1FC467F98A7E2F4511DEB9FBAB2FEDC321C
73E17058A7998FA34AAD8C78DA36221A147B7E77EF2D99CDD9306DEA21534DE1
FCA4F6C6BE4FDBCB6C7CFC456E5CBE116BC3DFC67B18E95621D03FAEE361D368
613638EC5DFD9187CD14D47928961611E7390BB77F218FB837E7B5327028F742
94FB777078BAD84FE0B9E27E5EB32D904084F969E166E6A53CFAB75F75CC28A5
3483CF315106F5A1B428B4A87D42F5F09A321BED127C7018C59B0A5872B6C996
C44E712F82A71C040CC46914D29D51457905A91173BC23B3D1657C9E8DCBDAB5
22E1F4AF48BF0E3FA1B3BBBA9B8CA038F113C57B5B2DFA65BC1531B4470B5A03
4CBA00791EE592FB4DAB538C280A8EE09234A543243B3FF8E29549C849F55923
9032005FBF0708D97515CB6CF112C2A89D2D44816E9074168B3A76FC1FA1CABA
526EE65F6439F9FA6F27F76365253722074E8876405E2368CF3BC65040648818
172D8DA9F06957159A569F6487BBEB0C1D62CF242FCA104861F63E0CE6FF00F9
36219E4F59A514F54313F10BE8A0DFE6A7B72430D7DECEBFE8D18792D44F39EC
680F178A07F4A84C5DD989C47288DEB2DE91E7A5A4CA9E3B305E2E4ECE098AEC
270F112CADA74CFF4BD78FEDE423B40140F7AB6FBC84982A912BCBF17E8709D8
6605CA1C8B082E81EE08E8D3D565E42987DDAD25034D1C61659E33793CACC755
49D54E2A04A2F2C6DE71FD8EDB02B3CDA24BE5B94F4D4C0FAB79CD0D3E7F885D
842B769850D291C9D92C836531BC2351FADCEB22C0DF2EDF2C3F52D34947E096
4D0E8E89F6043C0D2E7B91334762A700EE46CCFF0F8222069A239E9C090D382F
755A2F3209D4F9DFFB69F2296D9F724349DB496B42FB35256D93962CEBB58438
1E580898746A33391966B70D7882E0121A128CF3F3B5E6428E1F6EBFF807821F
105AAD8F008A01ECC02E7933E19CDA965A884BF7B208519979ED23271B6AF228
8430995CF657CB2305D67A473BCBE4830AB55944F07DE38907B58D11F2FE9FE9
8E660A780BA6BFF75BC9DE9B0A4EDAA177F8F6D7E6A9E866BAE054F5EE51C829
C26F9B88AC1091128220F5E734EA2DE6F8CD4225EB94D4436925DAFADBCEB0C2
01C64F56CF4AAE64E1F2AA294C00718D04FD696B3F07019B87120BA7E2FB7B0F
59266719A4646127E2CCC2232674924E662B27AAB6D57C09F26A63C400F5C62E
9FC8B9E84BF464065CC9706434B127E0AB3069ED10EB8C4212CEAFBC79B61186
AA832CA31EA12A4D2A05B5C1F8295AC799CAC6349A8030F0285D30E48A620A29
7B211C3996726C2BD5AA99752F71F391D7403FDE31BC694628B99661DF32F2D4
BD16E36C755D70BD5E2BF0DDDEB2CCBF9AE69C1496A8BEA1B556EEE562106998
F7FBFAF7313B1FA589C0DD6CA8844B165777B02C5938A3F19631D6133A8A826B
EFACA741F53EFF9021D9D4C491F26BE8F54C61165CAD7A2D32C54D4A3D3C1FD8
F8F90A234A4F10E1AAF04B2316EC9C9749EF2864DAAFC2B4886C6E9E9D214EF7
4D7E0BD6E972A3F81C7EF13974A6A7771FBECEF7BEECD78B8AE3B5A2E6CFE659
1438894018072909D00732D71F63668F44D454435EAB031BC8901A89EECE3BB8
CA238922035C69BA8423CB111552301916EC174222485E973BAE1751B0850541
44022BE6620E3BE3BCFF07C029D465A2D09597CE1A2C03653896E07940025DD6
8C11C8EF4E59452CC7349D12683C6D610AAB4267EB6D070EE775A1418AA997C1
6C2988EF7E0148A1DF74DA038B94770B57EB61C47265049EF59628DC8B04C719
0BCA2E26CADC13E2FBE104EE488385C954AF46D90692B49F7A7672F7DAB6811B
1027FDA86CF66E032F1B0D494612E30065D79AE1FB42841F918580F3EA43D284
AD3FF9631052511C02B6F9C5319E4159C386DFD7E08913A010ED27662EDD2380
36C9A646C280EFC242ECD53B63EE65640810BD7C466F5F433EC555E83C466B69
8F58418FD60D1E9B8A9DFD05C44C457C2669807F31630BBDFEA94C6A4EA4A96C
696DD0E62D1A74313C4E0BBEB6E94DBFDF8A78969FF3C08562DE4012BAEF33DC
753C32A0A371A51F64CDC4E06F544F2055F67F0ACD4B0F72207FAF08E24C5D0A
20A385910CF5CC9590B7D2B2CAB2A1DD50A23E443D8A30572DD2A12550B2D61E
E24635EFC15D5D7BA5444EB942582DB27E6C1A558C89543D83B3EBB1F1EC7A55
8CD8D86DAD66D3EC933AB8DBBA73A64A421683D25AD6436A70B0C1C43A419F5D
B99410D0BB68B865F3E4BB7CF3CD00DA8E491D38E5A77CCA98D62B1B218C8B37
1843DDF5DCBACC2CB25F1041B0EE4D1E1AFB6B6FA6EFF9D626D24C4FCC9B0117
25B1560B30D6CB37427427EF4079D701BBBF3DE5EDC9E2C1FF4F9E51156B1A36
A5D0F0E0CAFCBAF87E8A9F9AE8BF9E2E340162023B85CFE6D9AFB6B92D74B09E
123754F7752507DE77C8B35CA1A3F7D176D5B00F6B6966A3380F67C084786D19
2891C18FC29F078BEFFCC010D53C07AE90526031B40619B4D27AEA5E7C3BA7CD
D616DD17877C265E77F708D49AA47248A27C570FCFC6600196DE9ED27F8DF650
516F54C844FF7BA81A1C6ABCB45E5A9848A2485EC84D12EF03328885D837A7FE
7FBAE9F372C30CBE0298C7CF0424F68D028DC56C55084EE590D2BD58FD9784BC
DCC3D498BE2BBDA1A81A0D8E75880EF3D7798AFB3431A9C936B1549455696100
79DF9E96CDE8D005FC25E59B029C0AAE7202F91D76B565BC0A760A0DE6682329
78D1FC49305728AA57F99008E157FCDC9D79CC6D60881693CC49E31E91520E8F
904FF4D138518DD564140AAB4C9462CC97D47608E12E15E4A069800228BAE3E6
D4040A1FB6E9C3C4AC7AA8B27CFF05C5E768115C104826CC10B9ECFD085F54CD
9DD02FBBCB47FE1A015EFC812D65DFB3BB4678F19A26D9BEC6A777904EDD6949
D621BE879C3832EE8F810591B0C92761BC20D9E6F8ED30903CBFD917CEEFED9C
4910218E0E1F254137D816B21F76617F02A6AC8A319A73F84CE822BB61C6C628
BD648CCDA44DB60DC1A297F739879F1507A6001113B11FCC641D676CD122C1B8
6FE985561EBCF74DD0AADD279F095AB2975A5DF4153D79572D2DB7F7BD8C2056
2D791FC03198CA758ECA0E24D2B48F6DD3BDAF7171A45B6434D91BF070E12C44
D08012210A5917CE236D356F1181E9D49336567AD43DCFDDF3C1DAA7F1FE10CD
F6C081F3345BB234239D342296275C663F183246F0377048C48AB0D05E92A03F
CD2BDC4556E7A1F53FF5ED7B2E617D6273562E2837A23DAE26D26652E807C045
3067C105F79A954D8AFDBAC7A28A8C8472B933865552B6B9F998FF85298CBBAC
78BBA0A17FE622D3505E555EC90AD1EFE819DD2DEB414DFD0EC3122B64707069
2E6AEB04EAD823AAA6C5FFBC6DF009416E82B5CE51D229B3BE5AFDD189B9D128
BF0081E31702AC06FD3E56E171C25804C38478DFD3C9EF826C2CABED7C4CE491
2E5431C06D2C1CEE39D5413C110EB25E120C62761759B4988BC354F399A7EA0F
ADA7995818043B72DD0EA143FBA1C9F662A35F3BEB5A529B512E85E0C64706A5
2B393C1329F91FF6E05E273B5DB89549315DD15FDAFF81DBE43CD8F459770323
F9A29B49C2FF1894F735FDBB064FB7945535F2F9C287D971BE65A9828EEDB4EB
F6AEA562347DD12AFE72E2FA971F0B7F498FA3DA42D7FE846CCCF3F2280D3158
A253F22466A7F758FCABEA391FBDB665ED969B8B374E4975E93D1552B7E094C1
6CA1ED1FFF918FE67201ADBC70726F25090D745663323F4AFD58B7F63766A85E
FA245B9004F69A3E8DB84607142C217A7D76D8A8022D9216DA7964982FB1A662
A4C97C3CEB8C6CCF629B3734013689A99E137219EB039742484F84DF747B0FF5
BF4BFECCDF86624F61E7995E2B7066704E97D15EF77FC87DBE1723429E976EF5
9576CAD14DD5B8EE3CA070B8C00E961B884164BFC2C3EDB87F3482F7BEE425B7
1D233F03F54F614BB18DA64759564E7DBC28BF461366D05F10FF84996044DA3C
5B900B6859581E7BC99280169F0935302095B6913DC2BC911C49295BDBC13358
EF03E41C7C740652547A1DBC1E7FC3E74AA11616B36DA258CB42DBA9608BFEB3
5299D77DA9370B63525B99F0A8D519F488BA37A41767EDF87245ADDCD1E94D2F
EE120C7BA60C279DF5F5BAD37D218B1C3735FB7D517C344AFEC68F301DB41BA0
CA5700D1495B99CBA96A3094AD97D837B75AC220B8429C356780330E38BA624F
7B660BD34A8C20D773BACF0AD11ABF592276F34D4827534E414B81558C55E3C8
A322030C9EBA796D4186444D0741991AEEBB537CC6BB2BD573CB45C6BFE3EA37
44BF1DD096105924368F9E6524C011B79CC93E8247D831EF285071922A2D3101
C64023ACC59352BDCCF7BDEDEFE293DC26A2AEC006838C6370FEA4ED1DA0C57E
99C99841CC560FF6D96608EFD2BDD57B9A8E717A86558021766929B21C4B184C
272D776BBB5FE7ABB591951AEB4D9B7C6524A82F08D7A67036C85DEC8943FE99
E02D544CD77E53B9581EB9A9F99AE1AF018FFB189D1DA2F6D5922452478EC39D
D17C1D4D030D7C1CEDF745B8BE29FCE6F56F93CC01814CE35C353A7EE338CEE0
B8964878C02328BD308424854AFD3AD930AF497ED86BFF93B9FED0372D8DF634
81255FB07C915411AFA55607F038FCDE2A796E981760EED747888E8FFAE33613
748B3B68A5BAFCB4F1BBB90BC96AA1876AC4F908AE0478BCEDD0897269186E9B
9BDB90A1C44D61641030BCD1A4AAEE984F3B94BE904F870B9858491583267DA9
D0F1F3E460B219665BCBBF90F7ADEA6BD244304967F3CF5F117E6E53DEA11221
65030B06F279AAF28C4BD44168AEEC453982DB9489F29797B7A08928CF9313EE
3605BDD147E79F18529348E82AAF23426BA35F356ECC8E939196C3CD9763637B
FC029EBAF000C3D3A8FFC54C5FF109FE32E6B1C408B8B539677ECF48CAAB8D3D
F601023D688D4CA975802D0ADC270D4BCECF15DF40DE7BA9966C21B5CFE205BB
11DF658AE768F2651FDAF4EB4C7239D2B31614A06578A79D1AD88E04B941F727
0988BA5EFB188CBFA895E87729004573FCCF8DED2AB6A609EB89EEC242EDFDD2
EF552359727536916792582FD9DE63E6754CB8D0650938D7D1D90A82EEFC504F
A7E04CA4256EAD3DCB103B9E31342B7A47EE9CA54D1EC662172A702A6F91DBB6
B894E45AA7E25825A8BF710439369C35D7262448F165365151D5EBB6B84F3EB9
B7D25A8E69F4E4E2C393803A98EED710D6CEC48A28BB846E86CF6D9DCF7F3A34
E6AA3CCB13CCC61FCEE7C7706FC3987BDB800DA1C4306AC740184CB367D70D8A
B7DC78803DD09EB442AEA8A8F2F13427439971B8428AFE5B15379E7C89DC1921
5FA388179DE4D224F19182BA7A3CA8C4D734EFC0B94C4A58600D51FB4D89FA79
7068AB8EEDEB5B4DF76423A7DB7ABF711BB0C7C703843BB4FDBF3C187C80FE52
EE1275B05D19E6DC95D93914B71382086A46D74E23D93A69FB240C1D824CCCD2
68420F8B91DF6CEFFB278220918E8C476DFC80BE6DFE08ECE9E00162F5406205
126E4CDCC23EB4C431FC6C1DBBF79938BA671280F0A33C46EC274A77BC37F4CF
7C183FA6844ADA6C3C2EE4E4FF707C55BB3148051B2B6F2E8AD884FC8A25BA6B
F26CF6367091BD71D7EA1069F48D987D3E76BC13E5BD9EF666E63DDB2427EA83
A5974A57C507260CAC9F0D419FB0832014E8629D27C2D02E23D2324F7348D4FA
5B5C754BFDCBAF4EA9021861F290135A92692B6433708E7811EA44E754404417
650D70EA17254DAE87A972CC94981CD4AC4AA888BF1A20B01CAED7EE23F1EDCC
8E5DA0553218A6B8C354F178C0CEB0AA22DEA142F9EDA0AE9C77356A42F9DE61
FDC26E840D305519386A04F9D4DDD7FABA7781D9D5E4E5A84B5D57F900EC91DD
E4B334421EA05999F7C53BC2ACAF87A392FAD2B5E5A56A604E8EA03484476F9D
6F645EFA35C60549632B341E305712EE8000F2D6F2D4DC7D9113FE47C8ABAF3A
7CA29BF669B44C004280055D47B5B0A3725EC5101252F708A3F3B5CFACD77D5D
E9FC4B58E6CD01B59C73A14DBFB287B7017F6AE0F6F15F19331CDA93CF358AB9
FC23F12BA3BAD27A85825DDF136C2CFFD8EA20EA384D74D11F9273358E7F80EE
2D8CDA9171BE3366206684D3DCBDCA5537ABC8C2B536D47C6EA714D9689C94CA
612BAF4375C33F9F42FF4C40D091CDDD76048FBB9B8B867BEF191661E65D79A2
49AA3D1972C296A11ADF59C4919F63C78F9B7C2FA998F5BEFF8B055C36FCB240
7ADBDBD37FE825BC3853BA73139F46781D91678E402EC73D4064328E15B8921F
38FDB6F24414B768492FEC6A122D532233D18D088E387D5D7D631CBE053CC770
27D8A3C0A06A48BCCDF5D6D6770402B4F7D0A6D704C65455EFFD4BEA1607F0B0
B5FEE06533568EFA5888EF29BDF6223F82F41B3259A86D6541C9150BDFB32C71
7297729BE47A5332D3D80C1D7A697A6B345354572894D0114F25B895935FBE69
0A6AAA4CFB18B11053314A115FA8383BAD84C3F44D158AF7969556CD7CDF2305
498C0D0D372F9225FBA4356DE1EF78EAA26824BF5FBCDD02D727021892E32742
0606D5CB281336EF2380A37A882606D35282BB6DEB6866AE147806BB43CF5C6C
35FA55C0B4BBB2612F93792757CEBEB0661827629481A2FE20B49B9E7245AE5D
2B6A0884699720F20146ECF684242C6D962C70F7F425D9D102B254A312C6E124
BB10F89BDFCE2464D64360914F500A28A6B2126EC9DB90BA60D4F0CEFF050A2D
0A52B5B411DD3E71BB572126735E724E95A1FE6CB9D8641B380C444EDAAAD0E7
9E07E8E875F2F271E06CEF9C6B306137CD190172A2ED3864249EBB98ED102B32
55C994B91C2DE6B146DEC313A1ADBB6BF93418323C479C2C0A9DF9E3E7818C63
F990E9070D3479E7DD9A727A8594C04AE9D0594B75515EA720D3FF84861AF5CF
FA05D6BBA8E738E159B2DC0C4145D889BDE466A82DB36E306769AA0E85D4BC17
130857DFF8BB965D7BBB37C0DC5B31FA12C8CE54E4A3E6E6A2A78B06763E9C2D
ADA3728C9E3E0893C478B3F7443D9A332101D6E8D60A69D7649A14AC21316C18
3F16D35B8B5BB7BD6B02982078B99CF8CC1C7997C361753C007853880666D38F
510BE2DD1F8300A22975C6DAA9B6DBA5B09A6FA444DBD6FED0942684F14B7DDE
D833E4403F50AC10395D6C8CE0BC55DB2F959BDD0BF872AD824934360373D978
E8CD0F612DBDA661B7D65177D6E50EF170E1FF1A73C2E46EC98299320F814265
2E703F4370BFB5E3419169C1A4678199F00571EFE7E7D1F7A2A5590F8AF3F625
CA0C2A1BECD6F22EAE4A9B30A152186EF35D59BB974980F8D0478935C577AACA
E1079604CF5D555A41FA4A0C8ABE2A103876AF4A02AA19B8E3FEF14FB9026D08
DBF658240148259F667D1ABB4212F0BBA1C94295A44055F0C74DDC1E9AB17155
0825EA8A69E54AEFF71681C44770EDEA27C615E62F0F1D361D536CC790C6A92D
331A6F462228EDF6E7CC7454E876C48B858634D80027DCF41B3084D2AABFC0B7
183B1B1287B51D8222A1A56CCADC1061789494C65A584CBD3C65762DB7AF347F
0642DDA30F1997653E0DDA51C90CB9815BE1F83A6F84CB56870EA2BE9D0B1D1F
3D34CEBAA0367AD81ABFAB0F671B02BA487CF6B588EBECD26F9BB7E8DE0CB528
661C25AEF923E6760935EB5E9618CBE11F8DAE3BCD34F09B4884979D611382D9
6BE1124E7ED7538635EA24E0CB5F989871CCE60042E3E8AE2DDB34FB454F1FD7
5DABFEC9AE1E158F1DEEFC669CE61D741A02E26104C2A1DFA474A1B1E08A37A4
53F973652909111D4BD00D426F21AA3CD3F011D7E206F3B881887748EA3B0E66
B1A413A807A35C81E3C3B6003F6DD194CB4618827F3E93512F79E772F5D4790E
F4F92E3F780B6126EADF2E12E547218BCD106710C6BF245202E76E99984CF577
DA06C054BD448159FA31469FAD7504D520F20576A0012383DCD03FE01172D338
6C0DDF493F875241C7D7773C99DC40C53BB0F0A68C7C49C128507F648221B16B
1D8E873523346BD5A991D00BAEE2F2A82E2D45D45FDE59C4BB5E507C9FD85B65
CC1B53B2921BC4B6837325204227AC73F2027D99026A671F83624D4D29B082C9
0843C4AB3C586AF1689FE77C7C772DDD390EF466D40B6AAF7C4247FC0D40A2C3
CD57E796482600AA5E73A63B54251EFAF569047B3FE1143CC1040F97CBD3AE80
40DCD889E170888A77473C84F15F2BCD2249D705EF92A998797BC18E64D86252
B69A28E33BCB4F4665F07AB827BB2ACBBD620C56973E51B882C13785523B2218
DF0980B9496CD8015CE08F99D3CC6FC472E5FB314CFB957757B3A3E737986204
6476ADED15087DA8D19A2C3B7260FB620B6A9533E9C9B38EF5D524E99EAD57A6
6C587F16F3B41289D4F736708280E7BC03A0FAFA64A7C5FED819BEB1AADEB1C1
C003F982B905BD7D67725C83EF7119C2C4ABACC91DF8B388B207BDEAD9C007BD
094F08F395887CE66F564582A39CB410107BBCBE4B5F3F8CF3C20A8E023AEE90
F378ED9C00BB1712A05D62932BE6D33A3FECC4F4608EFBCD74B1477B93807D36
B8C8B29B24B3EDEBB7657AA44BE494F415493E68C762C83A6D2C43F63840D038
0A0B61571C281CEEDB41658D2F362F1723BF3EC42E3A2E47C6E200706BADB590
E92109E12018C02DC886068880A1B5077C3B95CA0BC9705B3AE1BF023E0A0E47
902BFA9A6E4067C523E758A774470BD07DE4C4FBB141C1AB5878D613459B02C9
AFB0968EA773E8D88672411E83748B5C34B2FB59588DA3A69410EEEBF42BA0BE
D42D28623E295399B61D5CAC79805BFBE669F45AD5AA8A9C20E5CBD3E8CEA13D
18E12C35B9A1D4CDF40A76214A719F8C8F905F3225491379F3703DE550905815
891EB61D63CD500D6589644A770DAFD5FB061E419D3EE4FA2FACD50B5AFC75D3
256A1FC325F77987BCCBEA11228D35651699B67105E95809E22B8EB64D035396
838CC902D1CB601CDC970E3A7BD29028ED61C58260832E6C4EA037F4A4453F77
73B6C473C510CA28AB90147613F0EBC94C3EA000104374AC639A43AC6F9F7AD6
B6E558F1E9C5DC4C9888AD0D486DBA6AC4B35FEAD22394C03A72D4AAC6C42C08
5ECAC812069D1C7443607554F1F1B427F0E6CE30FA91CA3F30CC75DC5314F745
CE66BB59329A83A42A73DC9D59023D8615102A0089B28F0225AF0EC1856CC9B5
DBFD8B179B0D53AA69D3478E0CC4D688E03FDA13CE39482B68AAE971DEDCAA31
E7EC79D611B97AEC290CB83DDD47E0747C26F14BD3341D7ADDF2C4568CD5D9E5
E84C246F36A0BB9D454A35D273951F0248F3AE47589068427C176D1EF2E0375B
8F8640A75773638943DE96B8C4EAEC254AC3090A5A1A72EA11EA272C5C8B83FF
8F16ED7860E2AD1023995F1BDE6D2489C6239BA3626FA35F918EE8B16707A3BA
BBCD4897246289B24E63471D8080D64616D716AD7EF941D328DB7651ED7427DC
4F2FF6B89E35D55DC675F44688FF0A75A5C94AA0B23B5F5D92C70B77C1E94F29
2C16E732C0E1871CEF589E4AA8C9EC85D332360EC2D07EA64F4B87FDB081392F
2F46CBE9591562EE8EA03A1B8571F3E21FDC608AF3CDD6A51B56112A4D6E273F
C28CA962BAB90AEC62F1C351596257BE6F85A0B2C6694A816A7E158615829E59
EE73573363006FEB8ECAA283448C7FF5400BFA745C859192C2623460A8170F65
F4C45137F1848A3687D5BE45FEF3D084AE1B3A48DCB4DAC6C83A858307703A6F
79AC6ED05FAAC5784FE959F32B47D4836ECC48CCAE1FB7DBBB6ED76DBCB40B5F
308A758825ED631CC7897D81D8DB5E1BDC5FA5472DE3B1E303F8B56D1161CAF1
4DC202B636DB484CCA840696D723699143C3BB3C7475E21AAF22AD06FB556EA6
7B2E85B29862F343AD8B98EFC32D0A1F2ED51B7A46D69770BCA983D7B5A446BF
526A58DA4682C9F22549FE68EFFC355327A582968548D1C5648CBE6BA93CEA0D
E409FA59FE5679E65E8DFC7CD8388B363496A07862ADAA1F31D20A1C14E0B494
30B7723CD88E73A424682095BD130F460C80DA2411B1340618E31C86081C1634
E890FED9E22FDA3FA08A099BE60DBFFA3AB45CED09BD7EA1DCDFCE5759872FE9
6F2049AFE4A69DCCBF9E2726272A7F3F8AB3D56162F369FF93A3F4E91547C49A
D1852FE7BF5606F2C1DB42C069893A6C31F0A44812EB0380609943F8E1F5413B
11FC9A0751C9864D727013B6AF798D3CD7571EAE5FB3FD08D95F9EB0F889FEAA
41F3B26B7144D29454A8D2E421E2A0CCEB2AFA2FDD93834089E0C8B2983FFBCB
8EE7E0A553ED1C167611B98529389D46C775EE6F17BD7166DF1E02BF6E503703
7DF1CA63B9333E6FFEBF224C84D1A517B53B0BEA8A936F9CF329B2F4350B0A06
467F457962C3723BF6E61E3C3E10DE25AE1908F8605D84FB696C84881BBECF84
0080C51CA6FD9C78AC2A3BB7607F52A3424F1B7995A97253C8F822C11204E340
652E452C5AA2F385A84BB64B27DA576A7BD8350C2860979DE20376A9CE8E4B6C
4211CBFCF9709AA29144F3A403AF89D7A3A1B81718F3A994AA4CEAEAD1F1FB02
B3052D52F986F3270D22EFA230C261DA2FB591A3D5C55971AF6DD7177CF5F25A
AB7D45791021199BE22D89940BD35C48C11763ED8073F0AC8279680F56E6017F
F5D962F67BD7EA8531A574C42BA2F296A2166926C9D207751DE0BF309A7C0B5E
6825980CAB56D409278CCA62106CAECCB2FDA2F4ADE4F8C24106E0D76B8DEDC4
64BC4C4261AD756D26F053A2A7CDAD63A0DB6D50166C927D3D083E2F6C578D2D
90D46BBD8F7B95A7BACEF0F59D7A86D619FE049961612661F780459D9932AF48
2B5E2351E3BADBEFFC85A1B44EC231CE55AEF07E942B962DBFC96A6B7DB7CB28
515A07564A9D3C2275458700FD01CB5E99962B8E8D8B1BEB02233D61F7602829
4FCFA010ADBA06F53A700AAEA9213F7E64ABAFDAB5F42B0E4036C2DD237344E5
945428ED26E5A2583C8C7A4D020A8EEC2D80FC67A306D1643187AB11CD2BA196
6F4EA30DF566B55D4BDA83DA712843AA4227182ACF455865CA526CD0C3AF1F22
BD3E39EE904697F94F59B8AD259D2DDF433930B270C63EEEBC745D332849ECE6
6F8102383F02F7401C3481B529E3E6843F38B1FE6F1A7578AACCE5E275E11BBA
1D0821C1D790EF1FF192AF561E7AFB4C6710520C895701EC10BF04769E72A508
E242A05D015A9A32809DD51DF932DDED7A2DAC31CEBB0999EFCFD079ABA71327
FBC15077E17CB75A4D5B62954F2E65342FDE538763E4DDD7B9015E4C8A4891FB
3317DB9C1872D93F6BFF63D42DAE91FC4CD6FA81A210274671D30D947ACA6806
9C71DCB150C658EF9225428FEB2FF5261EBF78258671671BE4E51A9CA4C30B4E
6DAA86CE6F98AAE3EAB58E1F6053BD6154660CD64C63295997DD487BC7C40572
53875DAE598DECD3C4C26E19284730BAEC36E258E3188310DE7110A48839DED7
9BE381088BC7191A40B026C36FC9583A048A83F68049C707E5FC1473E7DF950D
54A68791DA15FF5999A8A0A26A1C469440C75A4BAD6949B720E8DD38E27D05E8
01B0A19AE1B5998A9FF519344A606E08F30998D4C5AABC95068BE7A9DAA9F9DF
79732FF2D971B0398468408AE8A9D786D4459F1AFCF285CD3FDDAA06862E0BFB
5C0D788E57D2FAB457DAD3CF24F25F7374441FFECBA1924D32D059448FD4B669
BC65CA0CC120213AEA97259581392B9BC171B1AE1279F582DC721E8249A33A6E
064AC1250B4C879999B04BF7CFC2FFED27563E8545D12267B73080D802BE7341
B5F4E5D10C07264C69EECF460CF82F033635EB5B3A4F7DF718E0EC1009231584
54E29255E8846AB1AB9E444B82AC000DE3D95736F69CA8A0282200D23FB0EC43
EE107184712353FBEFD7AC8A23E53D9E640BA6D2C2D5C7681ABEC649AD586E58
CB1599834A73F6A7F1957BF95A52353BFF9D34D91328DEECBA64BD825113E613
717E3D948CDC7C93B31E42C65AEF0DE3631E0FEA8C168B1F07AF698BBC601328
C575AC3C97FCC08A6E6797D9D6D4D6794945B39D248DC63672546AF3EDE43B35
792D80CE15A6BEF1CE58128B5E881F0C1E9BD75AF56BBDE24109B2B136AD0292
B6FF75C638C7E933DEC5A0694421F7E826D4D257DCDEA4C478AFB9A208FD0DFA
792028968E84E511B51A5A93B4FD48A27BCD3ABDE16A8320A3DE7CF8BE67751B
687B0D51AB87E4FA193238B26A7DC6BB321D23CCE16C49D5B5A13362817731F3
0F60B22B808E0102F0F13104AD66890B2F0BE0D9707B7DCB885D6B04DF891FC8
07DDC7F0A7853BAAC2B681D7A60153CE19AB3CE48BB89C85B9B0B26FA57A3504
92CA1038FEA46B99D05AE5ED8E3208053523F97D6883F450ABD1799F8579A036
AA6F4FB6094903AD8D38399F2F9CF07D450B0C058AA52E4C6251C38D6E5AC8BC
D2705F21C50FC01B842C00CD7A003C927B62FBFA825D2ECDE445F16A4C9642E9
8179B838E8686E86479FAD17DE3E8666A274B783740218847F0FC79D2860EE10
31DF1081E83957FE43600504259E1D1B7997302B451F10650B9C1473622C6324
425CA629600DD87A29F1884E7C4B715935E2B9D435CB9B033D64CBA4F5559692
B7327B6720BE086562C6CBB48959460E76FB49A7C535BD506B2B226033A297EA
3C8C9C8B245F49B289A9B088BD9EC3B6580F2817D63DE90FD71BE3F97BEFD291
A0DBA52EDFD3A216173C3E69F47405B8A86382BAFFE585B2474643F58C3BBB89
4CA3DA52D54D2D77E1A09B2C55DB06808BA486D91078E593A5F8193EB4A6549B
D550F5600AA8036BC6094AD5D0C723C2131C25396252EBA4C0622D2B0E8629AC
3D2BF93B07325DFD89E1E9757F438418A09605DCA1C039D918A075AC7F0DFA9A
95A07DCCF0DE54B996C728BD33342978D99464D6C8FA2C0019156FF9B33C8FDC
27D67EFC22C9DDBF49940AA06B4FDC1DA224656F15133D61C144DF45E747C966
E5224ED29CFC03F5FF651B72D3E5B70D2836DFE33E7EDD803229CB814E449D98
B39F000F922BCE8C297E4E0ADC1EFFD39B1742918B32AE929B96D9BD90607978
45C4FCF06DF5E525250725A95D15EFD0B5EC317437135C5AA68F6EB4F5FE1565
0CF4487A938A117EE85ACC8102ECD40566D52D087A2188BC928DB56231BEA405
1318283A37F917C13B4E2AAEC6CF2829C1F8AB2E1A7FDE227C2B2D8ABC623D90
6EC7632CB075B9D013C9266B223C04E45E4A30E9CB34CD780C1B9A210A65E46E
113C9B602A2B6A6673037ADCD10E8F00818EE88AD2EA98D6B7F1EE7C5CDB22DE
3DA6095E85675A81A0E8B75D1C32E17928D5893A29C8DE0FF82A43D64F468C73
A24EA2637C80EF0BA23539777EA791A503CDE266BD99CE1D2976040390CC6F13
DD92F0686CAF993FDCE0113E5C9A994CF7617897252E19A54DA73A385F9AF86E
F6E3F5211BBE23CFA17E6B479453E9207EE1F683EE4C2E93F10DBB8ABA0C945B
E4B995D5F9D95F7484B2B05FCB49861F7EA05779AC02495D18DE0B91E73A2AFD
5F8DC4CDF14C1A9D0B93E9A9F4450EAECFE4448F77D161F6228107C92BBA3269
401E18981C21F744CE7F3A67AC069D0099A5BBB4F12FD99B9C1430529B3EE149
554EB95268A1A07E6E7BCD1EE19BC386DF55429E396C9C0AF8D0AC0CE02F15E4
5F1353E6047BA9CE343DC452615EF60DDB7E70F095A1D511491BAE1FB85C1904
A00E780E2B0EFDBF5EF51C5C3F8184C0FFDF892B72098784F1E01467DE591787
3A449E4ADE299989394E987600DD4D04CC5246DA7AA16DAD7A3EAE2C53D5FF4E
8D5FDF29913F71CEA58830A18AE1C56554E9452CE71493D9F365FDD09268906E
F9FD12D949C7221F0E646CEFB649B15B905E4134FB8A0ECA85100824A14C5A57
20D709C036188AF869E8D791FE3DCFC3E1A07E4B008EB3F156C524E15C7E5DD0
1D84D9C3FDB21824068F947F8A9C95C58A97DEC9CFCD7E12B1206AAB94B430C0
AF367F909B8B374E4975E93D9FD32DFA0AE84699D18551A6BD25908C20527C35
F23B2FB06496EA462C2031D219705B73E8F285A967624AB240C4186FB5E47200
60CFFC9E9CC68C4EE6544EEE1B5F966B881C2977F80396C16FA272BC6AE0FCA6
6760484CFF4BA51454712FDB8104BEF9514520DE675D073F415271514ACFA19D
2B9D2E2CBB099C46EEA673F31E8E07AE5C862F196EBD7415B504D40353F3D80F
49365D5006829FED63CB9571B219B3830F9A490A7A695330AACB6D18A25A7846
9D984799D130B5BEC196A23123BB399318B4D2A836F88D24D6FE3899846823E6
A4AB07D283706CD71D72D330171ADA792E155E75A75348EEE15DFFDA2503C447
72003487DAAB5D9C3E5BEBCD5B2C139389EA1E172679B2EB1444E570E4FB2C31
A3AADCE73F5F0181BD8456E553AF718E0CF6AC6A28E2245FE08E8641C30244BC
43DBEEC6496DE182F8F914CFD85E713ED14AB7E9F1BFF78299D07C5C1572205B
598F5E10A403087977EF07D53BBD4DA7921C1210D2C98B7D3D11ACA0FEC3AD55
5140756C29A24A789A87ABF1698672D6AD3E0F12CECB7595C5E680E31F06B8DF
8B49F1A4AB5C77B5FFC96866641D00B0AB0281C7CD4FBD96E00784A852A32989
A63805EEEA8B14A64CFECA4BE788FBA88D839EADD20F9A893744085F176E43E1
878F89835BD324D3CDF776EAF4F2E07CC84C4B6A6EC0C35155CDA6EDA571EED8
BD7ECF7829B310429383B5497FF39971E0C7989902475E6CE9C732AAA49CE107
C713A3CCE7D5FDCB68063B65B26A95C303711943DCE9AF05FCF2841BD8E20EA6
1D28475F515B0D494B3B9353361CF3B0578398546C927D62A6E61E1F705A0403
E9A5D876942801142E6E95B9E2C710DA59618F442E4009B55F53BBA8345AADE3
0B6F236A3BCB744CEF08A998F91E8FB121DBE3B4A020C6E9A7B5EDA261865782
23C50EB478AC4131EE773248ADD641A983CA3BCD930955DFBE0DA8B9619E74AC
91FF3818954DBD2C212D2C708E9C9661587C8EA6D3EB41912C929018D4C3503C
BED9CE6D260DC546841B21C7842091EB36923F31341B9DF942E732F5332C6162
3DCBF2EB20F747EC99431D5C184CBB71284EC3CE8741D2CDAE45EE3DCB18B1DF
5F8B1351F3977813674AA6FA7B7ED42D65375AED5CE3785DD783D37A4028D961
1305AC1B94700C0BC04DD197DF85B94D1A14D2204853DD5017B2ABA6ED0144AF
AA79DDBAA9230C3B2CD654ACA8A513F352B24A37006F26BDBA4BF29F957B8682
D21CF1CCFCBAC8BEA39BF72E881F5CBA918F299A849F5ED006AA52A23114FD6A
E73B524700CCC455A521EFDAB11378FA57CAB556A4FC335351F930853B1D8F89
835127E6D5BE96DA47CE498BED3840267D7D1A70288C3CBA2FFCDF1A4368603D
69260CD366B9CBC118E355CDC5E86364FF13B34B86F0637C37F8B6FF0B0D28B0
49F33DA50B0FDF4FA8F2153C30DAEFB59A09821BD121F361A0BB39E02217B34E
09C281743C60B819EED0051D631CC75E597DBAD011C449044D44503C37149C4C
BFC016A8E8936023921EED7FC56841CFD9237A76D6C78D9BEDC7423B8BAEEAF7
8082472E90E01B9EDC153B42E554EDD8AAAE14C6FCCE8EE99064EF3CBF68D25B
0E9FA4FE677E198B66757D72D5EADBE16A9B432DC8D7FAD2ADB181B6FA6021C5
1CDEDF8642BAE68B02F45617D8511F94C19D4110E183542CA76DDBAD88E69D2D
C27FF8FC3190D55919924CD89FF87DFBC54BE35E31946286F802ACD2F58D4E5A
47427C40C3D66CA13092F3490B1845EF88BDB22224DB751F436DA24A2EB3541F
D4CF62460B4C4EDE542BF4A17E92DFB106AEFF870B0726827D47021FFCD2AAEC
351545AF6706F8498F8B7FA86B35AB339ABB48DD4EBC17DC91AF265022039C88
E07AD466A721B175FBA0FD900892D103769FE7C545D49E68B74B883E91EDF506
914F349B72E664AC8C8EA9350A9FD4D4C0CCC3859BDB788C097170F5F25AAB7D
457910DD7D3FA31002F1F7328B2F81B82B51CD473DCA54AB20CEFABF0A301EC9
F7A07D26963A85F7F664FB2356A2D379E5B23B6C460CD8666B261434B56B8EE3
C13B1EEF396F59FB007CA71808FD4DF63FBC668B9E2B7DEA0E9F45D87E787DC0
ECE57CB7B2AF041B8FA750D06B5EFD12558BFDBC199C00D72DE760A98868ACB4
B92759259C38B1E4AD205C8550B899571D812F32AE4B15D172D0B30128964875
3DC1E9250F5FC77A1298A1613E32928777B1D5EB522C258B318E8D3296CFD607
B785465647616B06B01D0E8104D0C499ABAAEE58B21F857AD19A53F6AE69D489
4860169E3FB9F6B253F056A901776AA47D8A986FD1AEC3308C6D2C2B01D38A24
77527EFD046C89C88E43DE71E368DF1D347741A716BF3623DD3501319E07A7DD
BDD3F7D15135701F576BCB5267F9DF880ED342A3D70C7DDABE98B213EAA0F4BB
F3D66D9374833A6376605F47286CAABBB2887B24C190A1858267B5D6CE63E342
3C73594181BB8AD7FDB639F4FEF44A4923ECE3552643210EF9E12BF80A29E52B
5664DA5AB9BA57F6168EB379F4D7020CC7BD726141A24E406CAAA040B84F1166
3D6250C3F8846E1D5FB2E72455B486F88206728847B7F8FC0CF1487664B9D832
159F359CFACF746967E395779307BCF2B6EF38EA58B9B121CAD10AA544A7FE14
2F7FC8531C390681485357AD848E0A39124E82DB5DEDF0EE3BE8D73472BE05A9
58F30DA71CA3A5E50C330CE3A1F0FC0B9E3704A4B780BB2B531C444D75CE9A4C
5CCC89B4827BB1B0548376E1F25A60EA3AF2BA7C53F96C33A5D5D03F34A59E89
A3EAB09F3A91CD89E22793D92FAF294B72EF9BB34EC21FF050016A1D804982B8
3997E1667A4E8C6891730DE346EBD252F322DF0BBEAA28E89448D1B6864411F1
3AD333C3163AF812A45AC9A490C5769C12FFF86C12ECCDA6A7FA4795B458B9A5
C81E996AF366B25092AD5495582B3F1A410CB647362E039AA71F3CB294FA440F
C9807B33DF176C85A4612C37B3AC8E62BA4676860D0FC3FF8A8801E7EC2E30F5
D864BB07DCD3D8EC564103542F4B1464E2EAA7C8A7F30457EDC1F9C9D970BDF5
DD88349D475E194E632FAE8A1FBE0E749BBCAD6110AFA7A68A0B39EED7C3C976
D8343FA381ADFD66A53CF866A410609286A46B6F34BDBC9F57937F128B1672F9
2DBE6C5700AA20610401C8EC0CC9FE150645544B3BBBF70EDF576D4FDC1DDE7C
92150A4C8903D3F128148FBEF1C470E81BB487AE816C771D616C82180C9EB56D
E6714EBD3EC0E343BB164499612322E209205394816BB72D87EE3B34B4115DD4
B34D3D6BC021E852C3A8F8B2ABF8BFD2B4A0B422CA67D992CC989F6F9D2BAD3C
05BC5A5873890DBC261109E6BFE3D0246A98F9F47E7C9D5FA16C05D4111D389D
9BCCCFA334EB04721325740FEEDAE5EB82EC45B768E9FACC930A1BC6F1680D94
D42801F5468F31A6071381F02370BACE1787F0948B2034519C0A4C08DE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80381FF096BC19431A8B3B1
880A35C206720A4963693791456740F913B52648FD5D4B05AB450057E27BFA25
D698B2777C497318CDB711161E2DFC121AC9484517D7C558C8ECAC25FB9EE32F
0F94CC9DE7136AAF0B41FE083B062CCDDB620596CC91711D12A4155E5D1DCFDE
9F4ECD69FD31FE27E7B4CB920DE053CA8BF7D166CE3E0B04FCDA3B150A099993
B56AC7B3B56D0478ECBFB339E94C930D379A98504567A22ADB01AF1DCB0E8959
857A595C26DE3A10290AE7E3E01879B5DC8375014D057DC4E23576F354A66710
A4674F99EDFA00C51088440AE9D3C2238E0D3B595913A41E866DA6742CA27060
7CEFFEE6D54641B7E558F1E9C5DC4C9888AD0E77C0287AD45948B2225F0183BD
481A526F5680F6A5B1A5A9D78DAC108CA1FF9400A3DE2CCD2A72104CF80B0F7C
072B05B4A5CD9F0DE3EE7FE13BB25E2856FBAD156E5CE91FBD5F44F0E247D957
956045B1613117331061BA53184111DA5E9394DCEA8EA947CC9AC1257ACE00A1
9A3389B06DB5DF396F0783135AB26A74D382966B3EDE9EDF028C0019ECC8CAA5
E07458583101DF37369DD094770C1A1B8477244E8695B6DAF079BACED60DB2D6
9ABA96673E399338B988234E9E9616EF372577738F553F81135829F9118F4BFE
20CD51190E7D02670CAC5ADDE78A45B552D7C6C98468ACA69BD8EE5503E25738
CFEFBCF081E46C55D9E7AA3C194B3F514DA06353DDFA9C87125E5C9B69FE0A59
23903203E230A868D4872655A2BD4F485C7FBBFC1A88E17F1450615960AC334A
5E3CCB2F8DCA630494BBFED0BA2BEFA77D3E67E54011D9DCF8C70A6E4AF6B269
BAE0CDB19D93C41B6028FC2870E4E57BA1B4773094EA195459AD8FF6D402754F
0A59F7B466741F359B651D4858046E62753E97CE1C0B152D66E148E1C5883A9E
A152F67BEA64E08722DCE6A5762E55A5F91337B511777C4690F6B64AFF820F57
6404D526D66EF00BB3F49D3246261DE1DE2CADAEE76E15B3B7CF6D59301FFC30
0DE2E19A784B1D204DBA858C9AA085B3B5A87A04282C152610C6DF152CD384D0
4A294115CB01446379D93A84DA7DDE692830CEEA2E14524F98584ACA7958632C
ECDFE1ABA0F78067D00DF338FB71E7ABE6EFEB2A6172CBB0FB50132566DBD214
6CD88C3A2FAC47231E7B1033B4F51FBF490CC6277C9995C6F0BFEB3F5BC0FE45
B681C73C50BA9A434AAF78C09E13E90690A80DF614F24E9D390EF786681B0441
11D831971C4BA33E9FD206A7B97E69443C961E0B060D472889E553C988126096
DD343532E74B59C0AB38E1D71D781BD8282FD2969975CDB303737E0E286C5E86
F0126AB25A5CA2875B48C61CB8112A4CF9B8A7B534C0238CF65B3DD3986298DE
5016DE66B3DE6237E6FC9CE04E7AEA2C7E4A824F8054FE402799ED4DB5A5B214
C02A57BB9900E406B2FC13BE715ECE4B585AA5F99198A39BE62AF7CFBAB277B8
A66C8413AEA916F69FC8885EAD2CAB2644F1E25DF5F6EF5B5ED47CD8B47E300E
3F5F6B8B75060C761A63AC861E5E78D3780C7A70B5E6928526F8EA94A2EA40EB
14DDDBCEC549909020E717531A147C9ACDB6F5079C10E2B967CAE8E2646B86F3
F1CE756E4036C1A1BD27291A7AAD14E946491C639CE22CFB40A99FE068BEC315
186B6E7A6F5F190D9EAF4AC53F0C4598A5BB79E23DDA5F25039ADA8A80553F05
2F97988D4B276110BCA39FC05FB995912980707299900AE4F349771B17DBE1B7
FA91F2F7F3C15296DDB13A3D8F34A84DD42541141BEBB07219595A46DA8FDDB2
0819F2337432A326ECCE79B1CD12C56C7856D4B0ECD4E415CC9290C79FE24F1E
DAC12771C6D0E14A141A52D9465223B3ED9E26A5D9B0C31FBC84A663DBE4E3FE
D3696B649CFCC810261051FF67E1BDD3F5A6455087145759F387B2E8551B45CB
6F6CDFBEA8F56A2BCA48DBD42C11E120CBD1E6B9479E52D42C8B3806FA06180F
1EFF5CEA5ACE58B45624D6DA288C9EE68A76F7D836D0AE73FA5299A6343F5838
C23AE0E328D4FDC5C2E8652C59215D05298EF6304FC37E8EE4EF7F2450F67A96
D44A2CC71B3B327B16527BB2894802F6E0E5B3B0B42C4E29643EC14B422E5BD3
BB0208A83E16FD4236560DA1C968928FCD6484A476D9F0942E0AEBE6BD0EFD1F
37687B723EB4242BA8FAD974BFFABD8E22DB7EF8B5E3A28F83EF3C454918DD08
7768EC44A893A7EECB6D95C35BB87DA2B60A0AF369640C43F5923329E4C03C24
A07FFFB684DE7ED68996FA2403795AB210E4155A1F61F98EE74BC9078A559E15
331A0AD3B0182FF6033CFE1620E967062F19345B9C2F4A5F2891AB13FCB507AB
790F40C12BE5B2CA616D526C530E15DFAAC1A7F55790E477C71A2FF28C91C1A8
BF2C73424AB98FF24C1197A24B0FDD2FD1A3676A2E5FA086AAD262C1B358E0D5
2FFB821C17B58701F3DC3453281288884D5B37EDC8DEF2EACD9C3985BA9ACAC6
9EE37C201D3D31032AC8A1BB77DD481E807EF825F48411558E58AC00AA0CCD15
B2E395482539E49E919F3B177DC742585727C12F16E867F7B692C959CDB7A45A
996C806CE627529201F1A70ED484FE92F0C684F4A0437873EBAD6AFB646F54CE
C76AC98678B54E6E3A1034494CB67F2E1799CC7AD881CD1277452731409EE7F9
F5E396EA1B598CDC2B459A81B19A090AA25E8D003DC50C08476F761BDD8D791C
F23DE48A9C4071388376DA3372563DAB6D3481A92A83B4687F352DBA807E1632
E2C67A22346CF155930698C2E76B71C22AD65A76B04AC2C007C9D8FC83BCB2EA
05A9C4D09B9A6A983A0E2C816A464CB9910A2F9AFBC83648300C8C4E43B82EAB
441956C911829EDA98948B372809F295F67DCDFF37359A60E233CBD430618695
7AD9A2ED31221E1CB19EF42F8B7C7BB88C50C6B50764FAFF860CA83C46485F21
D4EBCD3EB0F2AB9D84E98621B64F4CCBE09A6338DBD1E11BCB2E5323B4D8E08C
2E56EC2B520F06515DB1DE6054E882EE083ACF0B95B9F10B0111760DB3DFA8CD
622F9B0C79E4635A10CFB39EE250AD0FEC90BAFB33F5D1B00F3C41E62742F33E
63946D3BE1C5E6D72C71F22E69ABD544A91A25E3AD355BBD85D66D6168515162
62A472830FDBEF494B97F8FDE3D7DBFC5EB25AF039386386C91650FCC4B0F0FE
41FA6D102A0D360D54FB3283AD67D9E796A2EA291F4CDFCD49FF485EB0770F48
DB9DF7C7F03BBD687E7E9A41383D1E637624202EDF2C3F52D34947E0964D0E8E
89F6043C0D240FB3D84202CA456F51F990B89C6C1A186EEA1CA1B109F5AD5700
A7F5DDAD6266E74BBAD5754ADF5D3020428FCCFCB941386C9D6E9D1A5E8FBCF3
2D200E0FAF7D7D4CE58A8A847A0A30A41818600D7A52B63B131A1F7879F1313E
3F00E01279397F0866694A393F509873CC60D31ABD8E3814C7FDB09D1CBB17BC
2DC9AB2A78CCF3BECEFDCA01F49A272BAEA9778943218112CD8531337CE6282A
95402298DC4DEA171EC5C963DC2C09EACBD00EC8225D1082D41D35290A4BAFD9
4F16AABF817C3990E0919992D4136D2A635F38704953F0C80579314EC3273507
A4528B22E706120DE24FCB6708F22014A1F153C01E3FAA67A32E5086AD75C35E
37CC601CD2968FE7A5468249EBCC78279F6DE910A6F15C634F340128602AC3D7
C3E919D9EF9156D530727ECA3C4570CC1FCD2159FEF8330266D9B4171074B0B2
1AE17730E12A2A8E283EC2047174DCE591B80222620E649AA4B5498ED78B529C
B76DA0E260C99444E7C55F697AE4A3790AFD3FCA0F2784611B128D23C916CA2A
98F374BA4309F9AAD8241B5A21BDB7FB6657943255D62F0C84FE8A630204A8E6
4D8F940E9DD816BBB215E47107A17454A4B4234536BFA1677F9F159DEAC0EB2B
C5CD3AB101473EC3D862D62A6472020BC022067BE81F9E65B25658B77D081C31
64D9C7293989DB79A7F06A3C36A4C792D168DC61B0E00C91D6056457B456990C
8285E8B30A95FE7E65D68DF8951796A6472F10D8ED343F64C6CAC65D8218E75E
CDA7292A0F2FBB4A669AC911C42005B99D58516FA232E661C7AC66134A7308D6
CCEED22733C4FA131A51FD0D4D032ACCE3241BB2F50D6F47A2F21CD6B7480D63
381B1E2022957AC237C42F3852733BB66AB7EC5195DB43B2E77689C96E5188F0
4CBFB963CE62F33F0C59263FA14E1C9A0A271B585DF66F240C75A0598ECB1CBC
2F70B1A43AFF3862063C0BD73FB8FC54CE7FA79049B46B4EA1E288DA232D0FB7
40759DF548A2949B594CE021B128A4CBA019D4C4866C86C6C90753F139D58961
2C93B39C532C413DDB9247BB1171F9EEBC7E1273D0CEE014CD877E222A744A61
73174AE1A404F8E6D3CB89EC090276EE60E54173DA526366CC99D9047C509D24
027446B0481EF2940F2AC033A7F9759BF94C6689A03DC7A566BEBF80422E5DAA
38E2C82420262A6BD8C8C86ED4882764DA0CDDDAE0FBAB39361B65ED532273EE
3B751A742FEABB796415085A0DD9EA22D54793F22D21EA39CC10C66A180FDFBB
D830A3B067CE5850C70EC57F21B7752012BDC08AF8A15F4A4DF395605AB68B1C
6988F963BB0D75314A0897985AF2EFFD964AB8EE4B7842324226FF4EB6A81CA6
6D64E5F1CF3B39740406621C0C1B952D9DFDD4862214D52D36D5BF0F0F1E3905
5E8696FAE7C94E4163F0BCDF76875ACB9DE099EF4FE7664871559B45D7A3FF6A
4CD12A91B39732A00119F4D26416C3F9BAF3E90E621468EC36C38FFEE58A7C7A
ED7361F0EE076BD4DF9B5909B87129A7365B3CE17144BF96CE0731E2045B7882
12270B5786AD55546EA51C7257973435D5593A75071F79CF9F58F15C92A6FBF7
BEEA9B0DBBB869C08B929591DC20A23F814F53B9901E9645E53E53B9A042CBD9
DE2B19F5F89F17A00CB10996909C4BFFCAF261538F608C93ADF044C39BD2A560
B752BCB7A575129688E11519C333540AC42F545EA9394332C6915AC23D5090E7
48679849A829F4171A1515A6C5DB927B0C82B3C81DCA45DDF8591C3B4904EC5B
76A47DA0CA1930D18C3B1C647F00D147F33C8AF90554E794E9A1516FF6A767D4
59B2589413A17D8B65CCB6E8BCFD8FDBABAFA8C339C5AAB51AB884232E9D200A
40A68E4799E75A129E672CE9991EB8C422B5C54257C66582997E8245A798AE77
F9FF2EE7FB7DF90EC4E6205794ACC10BB2DF96E92505E3ED7565083022A07F2D
ABDD90859F3DE0E6AF7FE62E6101B51F0D07F66AADF8A594E4DFB2332F31E6BF
87422C3CF3ADC3A1BF06F1E787DEF42A610E752FF28235442CEDDD4EAE1E5E9D
914DDFDEFA36EDF8594A94496F1A11735968BD0E06478F2B489B0E9B262C6907
D2CFCE5BDE7A2C9A124900DD8F1732791A32ED4820FC415ED2C05DE5DBADDAE7
385F40448804C7541E7517809C850E682566996593C9C96C4229682C3F93F19C
0D6A8DA7C3B10A749A1436FEB3E08921F839844E412A15C7787194A67F21E8DC
CEEB631E12C66EF61E9288A99A616BBD1008CC50EB51B4E1C3F08E35EDE80013
3D57DCB87952B055B6F1530D4C0E5E38467F77261BED14BB6577743EE7227EC0
C4F85CA74278CE1F76F4545C11F0614001B4746BDC1BA4A84F7B70846E33CE5F
285F32FC4E50101ADFEFECDF6B1C287FA48581CF4FB723E2238AB55834ABF581
AA672B92965E2EBA4725344BD3C039A064EB99F773334A51ABAE4FB18FDB08CB
AC531C2BB522055ABF47BD33A68A7BBB747AE3093704F3CC61C9D49C04819363
FBEA63CFAF0EBEEAEEEB033229E3E407055A71CC90A2E712E7F1A21910B16A76
F50BA744F7C0A97123FB71403E154150FFB491F08D774693C45373611268013B
15430C8552DCD0CC211BC9A7E353E233A79C4895DFF884D14BFED98B5D61AC72
CE873D9107FE0A031605CF6872260A0C808CCF3EB5F15529115D38B484207D8F
70375F3368518794382D9ECDF1387960FB843E1A31E4F20296F2B4608AAF2AC8
A4CBC05186338503B91199799ACACB28A6201C90B2B07B3AC6CC7EF5541D2082
F8FE56F386DFD3F1E770926269BCBD30416E874194A2C4AA475A156096793EF6
0EA9B3F50E53CABCE615BA7A3D5E4110030E18F7DDF6B4D491A3380AA884E7CB
26A243D7AA497B71C1E241F05439FEF67A293F61AA10128510DF3D629D32242B
41FC3FAA26D6DA81D9A989869EB84A0148568011F42CB3AF1B248BDF58FDD07E
52160CC9282D1C9889EBD30E55ACCFE82F5FDCEA0020FDC7A51F0FACA1C9F265
90A7894CA6F9E6214B0A3B32BFC3D80ABCB006353331A5D8A953C6B82258000B
6D88AFEC97220365FC412309F0466C28A95C1223824482D800F7C8894D369A47
46BB2FF08D2A07B4F53B9FAD6199644165A2747A198D8311C32EFB6FA0A9802B
8B22DAE7BC3650E52286E6F70B1DC2623C7F03BCBCD562759C12B4BFEB798B45
78ED8DB620C75EA72EF317F76DDDFA3ACC3761B10C6BF22F5D8FDF01F290968A
3807DF83B40761D4CFD11CB1A45974A0F2FC1662493942C21F78C831ADAF4E40
611505FAE9902F2AF0022CA7C9CD80CAB18E2F8F36CEB9CCF1F472BF44F65951
ACCC3EFE9914296F95C51784F74D7C167559656A904300CF179607A73EEFC602
B26191B61BEC3EA5E6BD12F041CD64AFE61BAC3A46E4A43E85BEA75A6E5F7556
2AE2A9B800166E14E49DF641E5329F12B7A6E3C9DC5442DD3E19B955F0154DA4
6F6640F1B0930466DD3FE0318CD532395FD31FDC369BA91DBC1F1553A8769C86
284F355C15D20FAAC79540CDCD5CE9F800DA7293E5B1C596FCF9D3E2FB425159
3589540033FFA39DB14BFE4312EFCC8BE299B33BBD923AFC2F0AE54C0459012F
23416F3A15DA0432E4E6B15F9E7C2C8477AB5B1C5A25CA3A0B4F520C5AAF132A
27B809011676A70056DED9C4CA390D0680F1E0C94AB5509CD19279CE7A23C719
63F36B98C47981412461A5CB5799C8151E4BA86E75B44ABB2752D56622182633
C428423544EACFAF6F4EFFE258C054C95F11B8FDD312B5CBFC4A916A6CDB708E
37926B072B9BAB7FB0E5E81D3AC401C2546E53D9D3DF896FB2B71CABB69EF1AB
ABB5EA4F9031F861445EB8E445EFDE8E05878B38F525793AF97A9CE3BF875DC5
D845C884413A42E2FEE9A7F8F5B59726D99E2108E0FFB4CB01CF7EB213E68B18
80C35CC98FA817B5B18F120E99BCEF403D89FC885FEB0B752AB14124C9EA7F68
2D72A617F89351455A02DA9EB76A51D65D864AA64BA8B17ADEBC02714D774082
EE851993F1B4BD12292460BCD025878AC44DB91F33D815AC9DC3F4429790CB89
0E6C6A01AF6C1A517F86D2C6190AFE9B31BC892A2AF7E0C938782A18FA9A9882
C955044A55AB970C2E673801F5A26B783AFA95962E9438FC3B10239FC8BE780A
A7167BAE6FB1A37122677ADF4D17A7689F02B48F1A901175ACD9152362D16269
8BC6F7535E14CF202C75FD9F83EF705E77AEC7686E7239AE6BEF8873E2414668
CB104B6BDC7DB84DEB6DA73092F21F04F718009DBA58BF45FBA8FF54FD72789E
BA34CC609FA509C6886BBBC3E736732CA0930855DC9A70014620301BB34F6662
44ADAC2F08BEFF3D5179BA96D4C42B0063B3407F3CF897C932FEE1ECC54D8652
DAAC725D06E4441F403A9D105E4738D580D942C6CA069465E5A64A0E8A150835
751C717DAFFC71398601BB35995950CB00A5EC95FC4A76220272D548D3FDD1CC
19BBE5E79C53C00D984C48306AF8703A9722C7D039708617F736363D15A6F2F0
0157D9BDD7E2AC003FF35047FE9E45207DF129E186581092F2425F71524B25B8
D106EB51E101B3481A982BEE3ECAE48E76964B259293DB485A39975206452DE5
16A6EBC987B057A516F7CE9C37819BA79D31AEEBFC1457D8B9EC0579FB5E1F42
C45330563F816AF233C3C2792A42338D892C8E1C2DAB56438F1B61A820AA0539
291B9B8004F29F21B2A9D8EA7F0DAD2491BF0F6B6966A3380F67C084786D1928
91C18FC29F0DBB1A495850B3DBD091C7D41B7859835D08CF0AE8B33D23E7C8F0
4DE5000FE419755D087A3F3D5216D8AA3510EEAA80F7E284024B480E431BFC32
AD6FFF7054156B28C7DD60E2A8E037290EACAB5FC3D90C30A01449D0F3ECB10A
D81D4F0F7E49D329237064384825EC71945DF03DFFDD55EAE00597C351139020
D27A614DF27C3A72B168F8F39A46F0792B732E027546FDA56BA1B42B00074900
4585F1370268AB1F0E9E41C1E7B82193A0F5CF51A6756DD92A50914B9E6E6695
473421E51F733BD3F8D9589E9D7E09953D96E82256D4FD6A58DE78D6A0A736DD
7500238B4EDC669BE3E7B3D64B9BC13B7748AAB82B42836658B42A04DBCDAFFB
AA05DDB016BBA5D31D4588F7C1D7F378B62DB43CA4BC3A8669F6E924D719F182
A9F348401F4EAEA57B8955BA7DC58262E52A30CC903D6193DFF6C5C708439E4E
EAE16EED2627A072AAF76AAF5F056E01C1A481E945FD890AA23745900DF0B0C1
83A9955E39CEF43EE9C02CB6F255D6D194DB073BD84E7991763772D12DEDA34F
4923F2300BE6180AAB8EEA7DEA86B3B7FFD2698EC2102D06B1B1A638E9784A74
772983C01D2DCDA032E44C49017CEBA3A38EE6BA2063A650CBC87EB9D1C2DBC0
C1C8D370A91F29A4CA724B9809042BE9B2EDEA366C4D1A74B817793536F67C15
88EDD14D6BCBAF4D8D22068CFBED21FD054E895299785FF6190EF689DDCB6281
B4927DF96F7CFD366BF9B140E1940E13D7443EFCEED61616319C8BD38CED32B3
4BD8D1A690B61E603799AF425985B3C244B691274F7B85695F5F2079000CC6A6
A6BA86F4E3A3DC6D9AF57EA283EE09BBD61FC4AF42608C6E01E5089180172780
B141F2E169D2E94BD6E749162099864F9046583D810F0E024464F875A3FA9F16
84F095F8B4E2A329E2C8B6D05AA6861E3ABED84D6761ACEDE777F2D3BBFBFB83
9DEAEA332CA6D50B5A6E3B5AE6BCCD2299EE48F75456B353EA0D2FCB03FD86FD
6A1A1A68C4191BBF1B55676C71FDA5E29DF4C794A4FA812B13AD32B28BC2D675
BF1EDDF0880B1CD099FC69F102DA10621ED249A14C9B9D38A4E5DE096705B403
4226D6B5DE97BBDD7426D14B827690BF7B6E45B4F8674A6FA270F14B4944F270
ABF6FDBBEF4498694C0884FBE6911B1ED7148B9DBEAC64D9B003E817265F192A
9EC17289B7061E41E35F1C0AB975CEEC4CA652F989068D45ED87B4D7B85771D3
938217206EC7409A8676469E4D94CAEFECD0EA62D9FCAEBF905EC5C277D22217
312B08735B76A3672054A8A2DCF6780C4E780A9B59F3176A5C5AFB83AB20AC92
EEBB2361DA7D756A5A66EF30FB955E04347E34C0950E250511B89E77477FCC1C
2B27F947178FA27C8B9483B4550C5B67E1470645C8AABF5A037944087CB2D5D2
60D28129A5D9DA44FD4C57C95F8F304E10ACEC91E65F8C929000F8C3690CDEFF
8CEB2BF67DAC531B53256C34A5211FAE935F1AA8467025504983813DD7F264D0
CD24F900DAC40CE0F3B53EC6EE9F5D1BD504FC7BB2C643439EFCCB150985460D
9C47B5AA7198D3CD5441817EBC3C873171E2213EB17535BE372682C7DE3BA585
8C38C9C130EFD55426E1A7C849F280C7BF4617975CA0BA4918E16F9527D2AD0F
1364600991477E36918EDBF84BC2F29B7E4052723279602E561E663D55FE4DD9
EE467FDFB659801940EE4E7B14727B086F27E43E6E3EA6EF0DE68E1CC5F9AC22
8154EC7DBB3A58840236BA90D553D86CF2DE61CF25D34DEB46C4AD0D21BFC3A9
A11405B0873D4E9581761CC1EB7E515D7ED2B1A30A3D1B4C852865F417EAA487
CF88A7DD5419F12E32DE866604580CDC0B07E9FFEA8387EEA92C452CE44D0E6A
37CF3696FD8206E691FDFF51CBD8F89F81127D86DAD35262BEDCD4DB77132F84
76C083BDB2CAFF3EEE454AB8558EC865DEDF781D4A93680C3F74813A6BAA4F7C
F2CC57A84CFBA77156ECFCF3C0630A4D308ECECEE20AD96793284647ABF2CB16
65149250B9C453592938E50753358D106FB48726A31D7C129534CF064F5A123C
B8C7A62FAB9DD62DD40022B4AB9EE974E17058A7998FA34AAD8C78DA36221A14
7B7E77E5C456BB43C2E61C6F69E97493F3EBCD5EBDBBE63A7C59C0186EC83AFC
FCF697DCC8808A931CB62997E29B687D5E1152317729929156E236281198F7FD
0D0A229A631F7B1C2F9B769C772FB4880C0EC80EB9A42F9ABF48FD69D228F722
EC13D6CD3D48CCC71F41C32B303AEA6B90706004ECB3764B6430F0C5C4970C22
D6087973C557588532474D9E9B852BFF97CA0E3744DD0CEE1A450FC9D4F3131E
5B68B3F0D735E5233B3F095FB486A911840172E6DEB0A1713EB71AE0C78D9FFA
D64D237AF16A5DC459B83164ACCF0690464B7E4950FA6224C46259182E8F03D6
7D73718EE565F9C9AE0CB17FF2D3E3D2947353648C62BCFD951918E3C38FC184
0ACBA25B6B41E04B3165928EC47EA505C0871967BD941CDE5475207D2AA24769
12EE771037F8D51B8031B5BA4DC772731EC605C2C85F79D5C6DD740FA2EAE0C2
119F4B945677A9C4CF1D411322A0A3F988455D7AF8D58D6DFD698E663237E829
70FC0EC032AED2A2FD2D948114EEAB1BD24A2FBDC4EDDACCC1DDB52E196DDE78
16C174146DD39A86F5A809952F25B26C6557DD62C2B52388A1B7BA26B7CF3F71
B4C23DC40447A2D21270DD055EA707AD54B06FB391DD9F3CC8B68DD5F343C14C
3C7AA45C67039E7D62A7462EFA11B131B70FD5509D40C202ACF1153F65502C4C
6B2558C0BA02DE051B617F9A19D5DAECF77E2397D6ED60D7967278469F815175
0EBC9BF2355EF3F599749BE6BF5E56B2FAEE303A56DCBE13825F41740DC018A2
B9EDA7F670CF057032D303D466CD687CDC89BF0E6E59F135FE14F2CBB58922F0
503241CE88F7E280B79C990FB7C53589750BE5BD6543BEB9C341427D0A4107DD
5FC8AAAEDDBEBDA6B8EF328EA7E5E6F658D88D55F4B2A8090A562D560F713E39
BC1555E82FEF5C3D35EDF9B5D848DE354A23DB779C68B730D263835BE9FA0240
3821770F24619117DC6AF37242576C4E9A56BFF2D3E717DFA5F9630F64F18D71
64BC597A28D5E06E1A1833C74A1F042F47875FBB75E16CFFEB450CB8BC91FFBE
6C83D561EB25E4E2D494D5BEB32197BF52B989DD185DFABAC4C2122F5F3647E4
140325114C5985EED0B4F03E7872206B3C1A6EF1BE88C20A59AE40E7A7DCF577
F22D21E2C2BED283AB62A6F0B3867EDE0A050EF258A7F49F5081F1FE0DC05774
C836A0A50D8BBB2E0EF842E744D6F2588DF12A2ADE78BA585CF8613E31AF65E3
DDB4AEA10E8E04BE407216C992E57075394491E440BC1FAC67742DFC4885196B
00A2D2352DE559933C8B4E514DB0410B1E140095EA227E095558FD029922164D
C90A3564CDD2050E48DBFBEA5899D0BD87F6DBB5CF39C981133CCE565A472449
4E5B24AB471FA444491570EBF12F70F2863F9CBC2CE3E0735AD684566DCF0B43
A0B0F975DEAE2F7601EB63C39D6D3840FAC27A27B59664E856EDDE290103A0D4
90FD74613FF8E64FC5F6ACAB079419240001579068F1BEB923257E298A7C0953
D590A62AD8AFFCCE8A861F2E8433620D8F23394B58987CD8D037DF90A9485399
5AAA6FC10413A373A9E0DDCE6E0CB20084673725C43CE44DD04F6367E04C3CBB
3400BA3C1943B874CFB57B086C17624E97F8035582667799D7B99A1DB2A7E90F
A91AE5730EDBA7B453A4A15E8B8137495F25DBBEDCF55CCDE4FC15EFF6D20269
A6F4463B12C214D99E68F113C2498E43CEB5C4BDA5A093F493F51B52788B4525
A509F616CD3303017DCF56914874816B3D5FCFE77C698540DB87A191848F9C63
0F52EB497E89B5F145D01D5669460E145D2D51D462DB7E2B61481F78C14D62FD
B3B1963B454AFBDBA229F6F44316033FEB0A4244F4405709FAE5B3CF41D4B25F
A514BAB9F71497FB0B5F6FE0FB86C51E3567DD518B9E0DA580DDEBC4B9FC00D1
328949B97B1AF522B463D183FFFDF1A2886838CB11B791158E1FB4FB8E23931A
BF77E16D1B0387843CD39A2AF0EC9B5167725C44811F1176F994C33D602D4A4B
689B02E2D40285060BFF20CAA8448523E4FB61522B51536AD69F860DA406BC70
4CF7213C1D22AB8C5F24DCDE8F5BD88CC2F21D2AD2CD15FAA0DF5303BDF4C897
57BD860D5479A701BBE6AE4FE4C67955EDE53044811EEA8D75D9A93A375C05DC
82A28BE86A783BD5E0935B9AE0C20F25A9379E3924A5FCED733A19B030315740
9B88DA26F87AE38BDF0272132971820678F4B87B292CF288D338C41D88929285
1E827770A2BA08E242A05D015A9A32809DD51DF932DDED7BDC7EE4A450C722AF
53D42EECD5FC0D9343070BC392C369BE591EB9678EBB5A676561BF61FABAB830
9AE123A6CBDDA766EBCF15CA68D755C30E02C012629BB5113F9595775EDC2FD9
98E405A987C4205CAD91AB441DD7633D99E171ECADDAAED1A55A4848B35A67DD
0F3AC45F63D18B7F3688CDB4211AD140E52239FDDF5CD68DF5A2AA094488672A
8F4CD9081D31AA56A0AA8C210753B55039CA42A5DD2B3791D3E11B88FA8C6A73
EA0539CBFEFF0B6333CE9B953972BCABAB06157DBFB18A3A746FA3102EAF96FB
6D456DAFB6C4040E640837330E3AAD079A9D6268353AD07AA6F56EC07545AB05
B3175433ECDF6F8FDC16A5CE2D6A40C4A95AA66BE98967F52A855DB02C498F16
FEC683BDB2CAFF3EEE454AB8558EC865DEDF781D4A92B6B1DBA7C99B203A6F69
270539FF862BB27F404048C8B00A31B2C698D1CBEE55968EEEBDAB9195ACC646
A3CCCB4626B51CADA6D39CFFDBA38C11C7238C738370C48D06F3D25E12AA256C
9519F4F823F3A4FBFB4195790057DD1CE2CDEE9BEE0507016F7651418558D452
E731374B2EE7B59A570932E1456B87390CEFA94CC862DD34E1A199BAE3D06A85
73ED0BBCF641FDA888EB1B9654C0CD0F3CA5C1651CF31D319EC3E946CFF341E7
B705B7CA5811F5054EA84D0117290BCC7C63376175ECA2FC62EADAB379FF91BA
1BA0D16FF764CAD09F99A6F73C71DC1C0D12D0976BE08F5766FA4F3557D0CCC9
EDF31BF84531D663CF61FBBE740D39ED276776306F8D5D3805E3CD4E8ACDDAD4
25D400528D5160C7E9F656D93EB214E1FA04F019812931B6CBA3D9E7EA775BBA
2EC97CC91D926CC76EB200D1E81852FE74F0D0781CDC5303AE631B7AA2484EAF
FC3B91A8F7BBACAF0CDB9B68E1561371E8F78898E720CBED9A482B50F8B7224B
C9D6A2C79FA0D79AA7CAF3D642CDC9ADEF90506454D1D85D87CFFE8B6BDD781F
814F62D84F94EE544C1C96D8734A38806889AEACC54237FC21B8CDE3633FD159
C855C4CC46FA71B56A2DA46A21D7293181993F22458F76ED92628EF6550CB6B7
F6BBDAA2D81FCA21E2CFE07DEA46CE64D8A8853C695C665F456F9009D8E3CF77
29009495AF32699904D4229F797E793D3FB14C18DF8A379C22193172318686ED
9E447F8E185F50413D1F8700B04CEAEA603A0833E91FB4A44AC83C4FBC126910
F350B8EF85203E4DAB28B15D18FE1EA4974918BB939DC3B2F7E23DF36325C38C
CA699BCEED8D80A2C0DFE7F49CA94439534EE75D8B82DBC7BE9BFE27105D0834
2BBD43CB8103899EA8517AB8C18737EC2FAABD1DA6CE2BEE8993C4CBE39FBE83
BD728E3724990B905664DCD0321B64AC31C545859F011EB636016EE266358CD7
CE5AF8C7C52F0052A6652E6CB6DCA3252162B0A68F3052B81A11D9B9DF27ED6A
8E4E5C370542ED6B9BD96F7429FEB7EE5A0E8DC4A1C038E4A4321756215EAC98
410CA381CE673D94DD4A12913ECF9F9DED12CA0A3B389CE4D4AAB8DFEFDA12D5
9DE5A8E2A2AFD63B328775E3B44F81A46D859BD71981310F02B957C55D77B1D8
DBDA6BB71B0E0684F5EFCA127055FB69CEB9AE3082F13883F9D03782C850F201
365D3D90DE7011CAE69D1C8E2CE1F253FFCDB6B41CAC835A14B1FA3C5919589C
C2B5DC722448E64B36FE13D6FFE686B1CFD0EE0B6B7F873F7E4A94C8DDD8F784
9F129A102D85699E82645BC6784423AB9BD3934E2ADCB4A04DDF34CB499EC864
B2332429C9661A9FBB0A5592691CD1E265DB2F523B702D4D0DBA35BE10A16712
CA21E2CFE07DEA46CE64D8A8853C695C665F4568359CD40C7F31F7B91923F051
1EA1FC0941BADF67DC1A2F2586EAF130825F3AFE76608695CFE97AB3C6AFC8F0
2D72BF4CE8474F10D0A7A3E62B081CED085D691970511CC2356B089AE2FEE038
E500C4AFCACF3663809DF7154DE438CC9B047350D4E144978CB3DDB03B9C6389
A23EA3F80EBDC8BE3EE5686F6ADA07160EBAFB6D65493243EE607CC5E8C7189E
78D019562D5C0EFB92332CC4CF7E8DA48AE10F19464273ECAC6A6CB033D045D0
5FD5EB73B9CEAB98A5E5B24B1B627B7A8FAEC8F1094B6F195B123171A69B2D42
6181910E8EA5EBF6D1D6CCEBFCFB1E1F43E822EE2721E984E4FFF861E8489076
F29672BAEAA3AC1DFCE60C71E20313F9E3AD9DB0705090E075D1DE07002E8696
1D2048A927713588BB8FC5EEC5F82B2DD4E4EB5D8B7370D2FFAAB5BA10132096
25EAC6C9ACE03B34DF5EBB3885DD636E8617400D051B27D8A20410871AD97A31
979E71EB80DA85B9AA0C6DC537C7DE9DCDEED10BE76BC555C63113ADAD38F76C
7ACCE6A1B5EEF3AEE83693A8A2CBCAF17570ED25CEE324888E6498D825BE9731
6CD29DE3D5E84A070772AF9A660127AF6A4EAAF068B80C012A81DE2CD195F0A4
4AA3747B7A4D5D19D90F347835DFE50FE376DA9079A23E8776392D1E02356830
FF6333593140C974A8B13E94CF0E77EFE6E92AA391E4A62D5AF6B69ABD9CFCCA
E361770F7112D3525CEDC79F098182DC77880F7443289E6E8B0FC127B3901BF6
7FDDAC9BB599A95E1F1CFD654ADAF5DE725EBF12B5BE5B57E3D3D80C06EFA0CB
7B6606ED644BCDB9A47936496141CA7FACD96BDBFC373E1E1F87881FD7BC3A7B
8C205EE2D6D31BFBFA40063D732B10D2F6C24D1574CE8C66D4410060824D13F7
9652B119EE55207B3DC19A5C95DA89F857321157F8E4BA8449B79A5881E202CB
5BF6BA70700CF2A0339F932107DCF0735034F53154A16BD3102E112D7A8432CA
3BC75E4CA0C1DCBB6CD5E7C8C137FF98117E8B247BF551BD9FC251BBACF9B450
22C2122781C919BA74F512AC73798C966811321813A03874595258B450806EC9
100A418DBE92BC62843F3E8130E33961FE2DCEB6BA6EB11B9DA679B6784D757A
8D724CBAC3C084F337D7F98591B70190C6F31F4FE1B0340441D0146DF341ABC3
CF4EBAD40ABBEE1FF71F130C31ED8EE923DEFB8DD3A98800C31CEA9AF8D9C251
CFC247E61E08F7FA08DAC0D98B2253EE29D6495AFB5FCA774E0673364D2F5F08
BD9F392CA41047466A036A28B75D0E4A8C0DFE90BD2AB4370BF03E8058B5A0E0
9A0B739F476E455B01C64FB89E724580B4CD7ACB9E6D11671328AEAA7F817529
5BE364F4FF90ADDC9DB515FBD209460EA3612ED810C22F1915008ADA79128203
2FBD34F6FA158905238F53B5565761668A6EA34CABAFA33A7F5910977271074F
78E59A64D710D418B800EDC6B8980F9EB446D86FFB6D567AEF67B112126E2ACF
3642047B512BA82B8DE7532BD19CFDD69285BF725FB229FAC5B0400718D51FD5
79661F3E2FAA54D811386573C91A067181368687EDF29D576787EF5896E8747B
D177565DB81496CD36EFA673A3FFB3D478EF32B286D1738E60C074C6C7B9E021
4C0B15C50A9B5A26205F096D63762A9B14F2606F5F70C5FA1D755AC45ED908F9
1532280A19FB38556709B820D2CF9F5F9F1FFEBC01C83CBA3F6CB29E1EF04F5A
290A8E141775ED7DA74734480B48D114719BD5B35963972183036CEE800D650F
E2CD2E74C038665ECA680A606FBA54E11929F21078AB158F3D371257512495CD
7EC477C0593D9F6B89968B1A8550A5FD751E70531636F7BD04EBDCF96A9307BF
3FAEF5716595A08356F0703977CEF624F40B331D853D2C54E5123E5E2F843602
DCE3AEE421CE4388D715C1F56885B36AB435E9C8813CB052EAF4688A86C3D98C
ADF1E924E6C6725EDE1262199758B7BCCDFACAF58611D2FD16232973483E312C
DAC16CA06304C97C9CCC20ABDE11FB9C157BA35862BC4E1B5025A87766D33DEA
3BE90FD366CCA9F67943DF89183F2CBCD2F7CF121E11712C9DB2DD051A85066E
4C8A831785480A350D72243748F7A097529B9C4495A1F67111358F429EEAC876
572FE440D7EDC6EBCD2AF0D56D5CB3D90AE89B3F84A474C16BF818185B8F3636
CC60CD3BB9897D23CCC7F764FBF953363D4938CB53DF6625EA1B7B2F79EF71CB
93BD6F404F7EE8FF79183BADC72D04FA41CF9142B54CB6BBE17C7ACBBCED6317
CFFAD9D527CEA2C3BD052CF78CE4FB4AABFF8C19660E90EBD654BE880D2923BF
DF281E19CACEB0AF61CB8BF381E4422A63077D8630E5B05BDCA9F9AB383942A2
54B15E33DC89129C67BB6FDCFCCF48CC8A8F673F39EECD543A70C72C9FC4AEDA
0D814AA042788BA068D0B8BB143E60CF3AF1721ADAC17657E8F8488F2C81DDBB
1ED0516E253DBC972C15A3A7C44363169DCE9A690DD8CE7F06961C58C3B8AA3F
685E0D8BAF37338055BA8ED34E5CE74A71ED0B58EFAB5BD9941205655220EFF6
D72E3186A01539F275390911B85EE2CFC5D17115BCEB129E54C9F4C610A10CD3
F81A81432D24BB5DD0DF2A15A68D78906473F51DADBDB7CB75B5E1B56CFA6643
0D9119D68939718D9AFDA560488258A128441FD4DB477B89A45540CB6255FC57
93389BDF016FBFE42BF7DE5EC45B64A1F152E13CB5661B02C76A1E62E9B4CD26
88FF913D3F49FACC1EFA3F4FEA1B58013125B46EEB49FAAE1A3EFB65A6987E52
3C5C71722B84DB1673C5048CCFDA141B8EC0A52F7088DC1CE24459EA1004E728
6CB3985B9B5A2644429E15B86D82B4B278619AAD48CDE8DFD6F8E4FEC608BCFA
9CF5605557303C42E25CDF5D8663A23FDA9ECB72FC0E7204C28541A5214525B8
6CF1223B5E1DE52BD642C5F31A2CBCB8D137C4C210D51CA8FAAFFE4DE6ADD7B6
548E29F5307473C624AA62B81A968541E940E2965D7A9BBD492EC41D38B31203
C4E4A260D4741F19619CE0D5AF620D437665D303828D4B312ED6A78BB636FA3A
8067C4A432C9AA8E6E9A686334E0B78E67428C0E7D4D6FBC6E754CCA5A60FD8C
01A891FDA31701852CD2B90011BAF691E59F99954B534E489D17891C0A87E88D
EAD5DDB12946BD78B3C2595D926E6CBB02375425502538A50616AA20FA65446B
9DC380266080750F5D503A797793F02A928344951101F872127FB20B8A78FD50
C52A20226E582EFF3AD57EFF641CE2A5EEFB478579F9F9251EB16E4320384F1B
9CDA934D898A93EBD0D6C1600012DDD41EFF5D7C390B33941DA0C41AE0995EC3
E12D4694617B891FC3C4606F35A5784E154A987D19F7CF6257E0BFC03575BD1A
FEC6B8D1D94CFD194BE3B080FBA8560E7B11C0779605839C918C65DBFDC19BAA
13BDE70712D0933DDA945E1E6404F8DA1D3074C02CC001CEA62F778FED4D5F11
2F9EAFDAE4174CCA0353F93D93D1229E96D1AF240F5DCEB2AC1F5EB3DF673A28
C6A4759E6D45A78F4C70B203C875AE766B4CA8DE3C3A58E1DE08DA98F1FF79D8
F5506F6485A45B01FB16B54F15EE16EFEEC0043E299F26137990B2F19230E6E4
5BF089CCB8D47FD3D3C9E3A490993E4937D52AD03E116FAA8CA1D9E3929172CE
FF6F75C397FB5EACB87B841F270FB28C98C1CE4A045E2EFCDAC93FD3F66DD219
7386BC8412E8755B0E02A92859408418A58B109A76F02BEDB7017B741C97D557
A9C1CB4F4A675711B12421C0F53103F280735529395A8FD76D541A4354DD3BE9
32301256A94C983C1F98273287C8672CE3C46D4E75F5736719CAE05D8842F260
009449B6284E2885A193904A9149B8F71D794844EB316125A913E76069A43A38
A71EC0F43DF961B5427F4D8170935DD75F90EE3C355A93802FC460562AD90279
726A40CC08D228F0EF87F08E8BDF1380924357A429C5AC916B956CA6F5184EB5
4EAAB77BBBA58C975C6FB1C66E9D431355F6A78D6617F6EE57E42263941FFD0E
8B5A5C47D84EEFEF5CA00E908CED069D958450A2456B5CCD957EB2CBC1609A9B
45B38D4B8CBD2425EF63189F47FDA51B131D4424FE07131D907671248569054F
40171EEEB9CF08C2BAD47CA484F64080B76D7947EFF83724E7D47ECED7296340
6AB79426A14A17B3118E50A9DC19175BA26CD53F29D5FACE40BDF7778376B17E
02474EF3D25F60D8C790DC0F31D4A40F45F3768F2BAECB54E664284B66E654BF
C3ADBFCC7FC57B8815E761DA75D393457786174F7E991F689C88E262D782B36F
1196002CF6036BDC8A9AA170D1D41AB797FC0F9466EEA0A7CD6E834AD1123BC6
A5EE41E4F22B20F069B8A43BC1862DF145151C0BBEE07EDA4D97848215E2075C
D26D6A21C9AEF627AD7DF7532A7DA26473A8D43EE844C05A4862DA7D6AF4EB22
55DC451B77DAF0DFA8679650FC927FA31EB678EB60C86BAB81350F9F2283A52C
69B7F9535C4BB445FEFEBB1E5752CBC7539470C7635D7DD252A31B771FDDB27F
E8CCA96B27EF6AF2440DACC4BBD68D7A46C2A62917E17B90006D60E9393BCB62
195007BD4D0C3A72FD57041D24979B8A430EB22EB6A6E28F445C02832B965A43
190D045AA03E7576EA7531A3B5552F5E374BBCD5B4D11AB7F3AA3EEB5CB5E2F1
F9882A9A191B01EF05CE447376E19ECB5AC79C0D9927701F3A9772C7FC06B8EB
8AE3E84D7B77D65D423EC6CC83B5AE74220F28E45A84B0FFB59DD0BB4E2F82B0
22F2E1995377F4F453B44EA0139308B4BA5A15A3D79A39EABE11631B56C13E9D
583A380AB1392BE19C570F0FE1389CD8E80BC9A470FF155543B9677F813C1D38
13FF3504ABCF33925084A7E013FDA8738399A76140543101047811E325500F0F
8EE5760AE947B851C2B23D68A4A882A0A8F9025E2E7C40747BEF27001ABFEE72
C98E9401739B345583F0AF507DDFF4885399DB68282CAC77A0D58951843119E5
2CBBC2EFAF3B7F0B7478DD477AEF90C0AAF406F8905B93C7129FC3118662032D
05CC768DB05E7B70CD6455C90398C0F1488E0908556D21F55AA35F4B1FD83805
D296D80AE7DF574E40CD96A5F8D209C04C8D65E96671970E42346913B797A79C
7EC13BE1A8B6C38912CFF1E87600E2902635CB96ED8D26B76DA3F5E1517965ED
E77E80807A73E43BA255DFA58DC2FB79A7E5860D8537491512D22627891E12C3
0E70392AB11B1710DF3497F4C281D865184D9BD7BD9695E46B9A2A27EE043CA8
EF6480AE170CB78E4B4F409C806CDAEC49D63742682FF3B81AE0B9BD7AE769ED
C121C9AC7EC91D47F114580067A64D855EAF77D0B01560EEE219A54E8C6E350D
ABBA7ACD44F8CB84B50AEC31AB8F0337E4AA76933C20364732E157C0072FF255
E1E7F6B679AECA665598E869B53917EB1C55760A9B4EFC95FC901632A1AD53FF
518C6EC46462A533D8E525F0009C3FD3BC481B7EA2D35D3351869CEA92E13430
C7CA1FC658FA031AAD0EA5B01D2226E3F5C88A313272183BFDF418D3C46EE0B1
269CC8781AEEA710178DA537CF2D70FE89779503F8517E45A6960AADBDD1C7DD
CFB3C0BC713A510C33AEF197E21B5A6D85AADB453C52DCB11DCA3EF937610E60
C79743D015E902141B2ADAFCAAF852F8C47EDF09CA0481C7562180774836BB15
70D56E060D415418B606AEA842A13A8EFC0B977C004C5A638EB0CC80E3D123DB
92BFE478D087805EE745AE62336AC62E5ACE65BC998D156E229A9E24006A4FCB
9FD975A3DD40FFED4F17AAEF29B1E8466584F4C121EEF463347C39635611DF06
EF70462FC702175EF82B68E8E655DBB8205C2343A6804912E9E426A141EFB611
C950F4FD2FFCAB33952BA81F875644D4B69E5AB68E932F9CF6587B1CFD786E55
FC1D4E5C384145E24E624CD2A3CEEB593522BA1A46B739CE7CB08C919FDCA336
BFF12AE46A654009DC858518A05B716A76BC59D33CA1ED4A8ED2D9B0F340E9E9
1C068FE2BF89D5100B69B065048A7729089205E5F4D03ECCDA8985D01678CADE
0EE48913BB0C4CB09F2124ED1AD4B59F7E1D6907127625D2616C2571B6413523
BE590AF5861B243E54E318551EBD9B8F4AA038DF79588063FA5C12788DA0BCCC
8FDA657C5FB7C1EF58B1C8DAC7BE2803411D670266A8BD3EA3F8048550B79DF3
DE6B91C587973E36E55F7F465190769B7003BEE06D08CBFF7F01F5C69FEBE294
10589CEFF347090DE4D4527D2FCF7C279EA1E950329DCF0F17B8FFB17DE71BA8
5A8175F5944CF502E1FC7C07D8DA9CF08E25E09309B297DE286F5C96C8777272
B49FA274BE93EC2AE0FDEB52BB38FE3BE7F89883E3C7686A50DD234E9382CDB4
4CF99676DD11A8C76BA67564D8F8C191AE01680FCC1E9DC40054FE5378B92948
31E9AB927B8F82AE3BB788D673BEF8DF9EBA2E4E51911AB4A5B13382C7C399DF
E35C9BB12863BB7DFB3D7C92793E5C9CC4451621D06007103947EA8CB6466A7B
88FF4F2F1ABD61DB5F2EAEE63D757B718D1B2B62EBB72A34E29EEB7379232B12
6B0280739704DF64DD2D18411A3A0AB79B9C073251E57CDE2338C2B15DB2DC33
012F4D4F5AED7EE34D7BAF598CC541E5A5E1F3EF470454A3E2CCECC584A32D85
C9ADED943F7178E63BBE3908B5554F4FE735311352ECDBB37574DFD6BE3A35AF
3935C78E9FE2930F4BDB216446FB39843A0D3EC3FEA351A1149FA771BDCB667A
EB8BC5AA67DA5909F718F1647DB2339D25B9CDA4C28E3975893E1B15A653F05F
DA97C15FF191604CA92D0BE25E49A815619A4F69E6142B447900FDB1DA07AD5D
8057567BF58497ECE9A3914678EE3A7C7BE835834A6A65486ED66FA9C48822F1
7C10052D6BE7BDF368C102899E2EC6E35DF26CEE4EAE7FED1F5C44847AFA2483
C3D34CF17C3CF466EECE27B15A1B37BDAF374E87B18ECDBC56C1DF1EFAB84E80
8EDDED4C7425DA6884981C4CD79BBBE75789E883E8F072D98B46B3A699629069
36FCBF27B8E38463971827560FE47CE6FD5A699E79AB2545D0D6FF5080A9CF4D
6DEF1273656B4C502908E1F70A3649337C2BF093784BAFCA66DB631E5CF7BD32
8C4505E33DFD17F6080B00299A4BEB08F1C8666E06C3B75FD0A69FF2AFB0C4B3
35F9D85A045B7660D38BB2AB4CB7FFC83085306C8AFD02352FDB36D81DA0FB68
7A52AE99EB0E6CE0C1E08CF6EC724DCC1611B78FC106278497F4C3A21DB4F6F8
7B1AC5DA7CD95C6C7076F886F1522EC81FDE4C8A387019480B34C5753CE55D3A
4415BFDB60F2C68A60D0CE69EEDE25A0C58C9B3042225E238514C5B184B42EA5
1426B98C1BA4BAE7F1AE4FC4C0568F9F9412227C459AC5ADE68858CA07C34E23
4CAB0E30D064011255D17D41B2A8D2662AC9A25B9EA980C7E3F2EFA1E4E6E295
5AC652C12AAAF9F6FBD2CB7A4BF30BEA7E7B6F4E1967A759AB2671993D8905EA
914FBDF71BDFAFD1961498F233C67C67B063E6ACB654B2B529F5CEF09CD61ECD
EB123F6BA59230CEB38F253DB2E9F1C661D93DF47B1310556883CEC750C615ED
CBCCDF38DD4C73ABDA4E51FBD5CD958AC961ABCB59A013FD8778C2D4BD783791
621D24C1F4E072139591019A7246DB65016B2B6AFC8B177301027619A428EA70
8F7175830224E08F033E187748A2286683D2F20ED1CDCCFEC85EC079235746B6
B4CE4F3A89611D3409ADBD5129BAAE1CCE250ADCC32D1C328ECF5B6C0C2F014F
43B38AA9FF115235BB3354BCDEFD91004F3E926B74236B0797903A8B55340E2A
24629A3BB1A0D986D709320937AA58157E7B53ABA05461DA40B675F081053377
364DE8EED66042CD991A055D41BC77DA4210A8D394ABA1B3FB17787E639D4F15
A4E5D214862AF49C6D8266AE3AA4A4BDB33D046C8F183488D764D82838596E5B
75A00E0F3844FB7D1C7A025E9700E4444B6D937C1183BF58D33CE403DDCB912F
EF1A68E9D05D045908D5CDC71B3D792A4C23796CFEA56C81D9B950E9EDE26CF9
B3B3D6A066F6755F481CFACC00E7D0B34725E86C76AC269D65E7A3F58A1BC1B3
78858278F46995901DE345492750EE7C24B660C83D41E7A8B82EAB6FFE9C2919
E4AD5B53A0553EC00D46513F0358C4CAFA113BE38B3D3CC56D89AB783B8DF63C
59EFFEFBC437B4AD19468AFC2940A1F596E987952550BFB01DDC26BC966D8515
BD92A26907F5E94297CB7ADD70BC343C692E871C341A0E52D8C5C1A416371AA0
3AFAB80807D61C46D61594E6DDDE2D44C7B834EF79CFF2DE7C8F871AD2B99167
7169FDE9AC8919F3199A21986843754B5527B93C9497B86B5C1F9A48F0C3D0F2
2F0BD945C59D7FCAEB2EF3E41809567D5EA4F8CDCC76D6B36E31804704527607
27909EAD3875080E51A9730FBD24711C708302BEF4ABA0604CADADFCE6247669
F6392D621A8E54EC3176CE6D4FF9E1672415F7B96061C2E7308A9F6BB8688493
9432C6F8249D2523785CCE943D4204B0C859651C96F669F41E6C7A0F334E32C8
A06F72B5C8B7D2102DFAC433BBFE18909D2DE63C6070D928A9744BF907A28DF1
223C5DD36482B691E80815B40DB60793FEF816F3A50DCE82965F2752C19E17E9
A588356A5AD24A193B41934111F1B7FC4605247509EC6933E968C0BD4F493F4A
0BD95112EDB20B013EBE06F9C4FE72428F10CFC6FFEA6CCAA9A03683A0B79273
12DD2044F266FA8898F9DE31D940E3C50EFEF14A340139AED3BD880657D156F1
B6D68DF8951796A6472BD4A5D3F463B7D1B4520FF18D626AAEF3E6B1458F61BC
3FA79B9AF29E38E8A4A88BC020DE4B2CD685A84CE97EF4A1A224892A61786706
AF36193170C158D4872DE065A8D9F14A1D50A915859453BF07A256004510BC57
459E8A9BA27E83631EDDE8826D00162BC178A0E5E69CEF9901D5E3B39CA40A1B
AC9D272688B1DC907E25291D11D02F4C228059146134C82BC2BE6F136D0439FF
5B2585A53C7CB0DE93ED2C703FDE664856D62E28396EF04438DADE39375FA3C3
224E478A7F6D06C8B1E2F418A3B0ABD79930FD3AB13DD289ED3F701A7A68D851
262474C7F2CA9D42EC60FD5009DD888825D59F9BA3E67A745AEFFC78B2CB860C
D16C7144C0E423A3802A2AC44E741B069BF6DA5509E74D0B263AA890A14283D7
B3E5D447023D6437AD7638A5DEDFC141D172973277D99C7D5E2F19DFEC03C8AD
7AE44F03E005A46A109664B4697A789EBBCF13FB5EE2DD305EF375F90F44014E
B332E30608AFC259ECDFF0FB79CA948C6F9DA0EBE442D1702ED5C1BA713BA5FB
77833410E28BEBBA0ACC2CC8ECDBC30E6ACD490B85A42907F8B1FC653767368E
B03B421D2FF6B934595261E7C6E0E59E82D8B8D8D9C3EABED40CEB089401871C
26C7DDFC5D5CBEEAE249871AC12A46E77A7F75ECD3E4BB1C5044FC34C3D4A30E
CAA69A3CB647B08E3298DAD55706543999A4EE422BC2E21AF36D54FDE9EC5BF1
1678614972B3C8E0613845832400C357685A3A8488480AA5CA3067A7848E064E
D24C15AC1F7255D754E05A10A65C687760C79F9DF0F8E92B8FCBDE74B1285FC4
DDC75AF7826C578AAB09D46A15ED211EA264A96550459DF30E987275FAEB796E
59A52A2638B7E69F1377C5EA36FFBC1300DF6EF1D3B0284E5EB7C81C7148B62D
C5774A8ED805DEBEEB81C57C5CE82C795219B86A54BB89D6CD5CFE02BC58C425
2F387C82814B6DBC840089398BD3E1EBA009EE187B82310A24D8AA492934045E
4EC5A68DF0A43BA935CCA30ED45AD40C0450D6599AF701C1F710366DE2EB8262
B9F8853186E6690AE8FBC87D544F6BCFEC7BFCFF2000E67AA8C8A8FC6BBA3CC7
87EA4DBEC846A2D55F3D05D1F46EB17A9E1A25034E3BA0A5FD68CFB278A18F0F
DFA52A8276F7AE3C31ED07FC934F777430F3B0A2399A89BB5D28D682EC91816C
E978E111F4AE3CEBC6F392369847E379F85BE822EB97AAF4E7094F7CC79170AB
E99D4F5CC7779253CF5B0E4CE131BF3C0F225073C449D7BE5E77546CCD243B42
8E9730E3A239E135670584FC82FDAC032794D4822228F05A11ED4750D9D9846D
38286D3EF8B3AC12C9EEB2F44515FA36C8E7772937DE05895926749738A4D684
7A30443BBFA72951FE6E7FE7BB9F66DE2BE45C2D6F1D07C8345B44FC96D08126
FA6EF4AB5CC7D6094DD71179C4380EFC9731FB2A32A4C0367FCCB69280F82FD7
C58384A299FD28333A2B35F2418668DD5023C8F481EEF637423D14845DD2BD78
3AA468EBE5A123B061E8C58C4132B0BBD89DE2594BED47BDCA77915D50C152D5
4A43A0F758DB6319970BF3EA0D51D9FCB8A59AE9FB7ECD21715B643E6BF80A0E
721E1C591F6E470EE771D8613F69026F6918BD76DD347620C420CD9BC76873DA
9003CEF8F9188B385A066CCE1330B8109CFB7BF11FBC01741594C0E393D6BF18
C21E968275341759A092C8833B330F1AAA69E59F399CB28CEBF1B460D76EF498
EE3F28AA078DC8AAB00146D5E2BE8C77CB9DFD70CC097E46D8E3DC5375637ACD
0F4EFCF7DA278080245ECD4A86D9CD1E425EC6604B34DB71915DAF3D37DEA279
361317A3375B296B721B1D2F5C3D4D9453EECCEBE145319C23BAE23F9BE46A42
01D1ABFE168BE61D4FF951360474C33ABC8CCE3B5263A7148C71E330336647C6
602C1DF2403184FA50789D9292CF94DD976CAD3598535F7A83D2135D0A9F0B44
BED0E1BBBFC0E72C190EDD5F0A3A1EC860B19FC5B875712955EBCC31279CD27D
DA52E02189CD002C9DD9529CD003AD4E863D9B84ADD4F8F3A1DF78FCE21D01CB
BF42B85229E159F5EC61950D17B2DC31B565354A4D54FFF1156406C38B1D1EE2
3C65303EE163DD1D03C238FC5C419BDE4288CA78C4FA6523549949EFC7EB4C3D
782F2BB7EFF536480AA43F0D960075B605C243CBADEE0BAA08C4A5A3C3F3998C
D3328F0DC964B69B65E7D47D33495A954F676F7D7AB4A7DBA6627B7DA805F8D3
816AB401E195AA03884C72658F6C6193632BD6929E7905FE4FCD5447C90C8417
AB90BCA12F9F6CDC95A7D66A90856D4569C4A09CFE4BF6BA42C25D0D6F49D459
1D0C01EF34971E1BDD616AAA66BF2F2E35B99080062338AABF250654CF283BE4
E8046EB725147BE97BFDBB23E47D8DC9F47355C030F00B2CAFDB42E034546745
204038B869534AF0E9919016E27F91191DB2D51F3896412869A387405BDF24D1
D2E37237E46E10D6CB94A9A561DDD8BED09263FEBBD10D85A801E96AA157139F
BA09D14E27155FCAA8366DB08701092595D44011BB4F24FF3D75F725FF498C30
ADAE8FB6E33CA153EB711DC1FFC77C67CA2A599F1F4BA039BBB26179F2A72599
8928AF2C54EF68A6F45AEB7201BBCDED53FC161D391E60C9098E5450771F19B5
9A2760C52C87C36694BE5257D9DC0F2E60D6D2816C1ED130F192EBD50939A091
C436545AE7A0CBBBCD032C311031C35271761080D17C2E829D1612685B3F2DAE
9B5BDACC756C38EA95CE91C7F56270316A11B11AD77203020E7A7DC2FEE08D35
C5B15C354671D3764D89FCD77C059A9D1F0C174C6CFB2426C5186856F31F1495
E189EE9B7CF55F6D6952210EB2073CEB06E2B726DACE9E47598585ED0C78B42B
B28162AAB4B17F958442F35493135D7AD9006AF6D8B97AD21A57078AFEE5DBEF
3FDB828AB24C1301B1875D877AEB2AB4BAD9B8A72A59E082F151CB4BEEDF1A87
8FC749D5491D6167B8AE31AE343F37D03922A0C6441EE2E5D74E6D3B251A65E9
93BFD6F32044944278D9C16E1160174F0952DC11B0AB36AF2DE67DF6B075FA0A
0A828D29FC4EDEDDF868A32B7653892144F3AAD80414BF4EAA7A437400E9091E
230B63B74CA174BBAA6D3B37773FC7FAB723CCA1CC1A1E27086D9F876FF9057E
F384DE62EA94ACBF5A8730CF2BEED71E9593D31072A4AA9719189186CDC274F1
8A40FFC86D9C66ED01B85534A1E39BD5C20DE216B335D43D77ECA99EA55B3781
A7A6A992819907C8F393567A395AB995912980707299900AE4F349771B17DBE1
B7FA940556F60C29AB8B417E2D6092F8BB70A2DD5DEDD4BE6A6A82EB82319481
8E6DE249207343C37BE9B926EEDBEFBAF001DE4C2236D33C447ED04ACA9DBA34
8076F8E004FADF83040BF71A9A9B369976055E2BD80245F249E81B7F44C0D75B
75AB13FB2E9EC45391329A5EBF0BF04157FE584D8B9A4087D8C96F276683D25E
D83428CAB4EB57476C8C58346BA012C7959C51C77398F5808DF06F015548A042
80785BF24E0729F721BA0C20731E5FE8E31BE287C56F55EA1C9BE0A9A7F95C1D
60F4EA9AFBD64BB0C1257FE26C5A2B31E4A44E3BBB8FEEE21469C20CCBAF503B
16761005F80C3963CEAC3498BCA7796DB008B43C8F5E2D26F5704637EACDC4CA
29BEE3449DDB5E0D8DA6FA5FF0A7D1EBFD710931901E36D9FA13DB9B8CBDC0D1
46C11A17F8EEB93F1C143489363330FE17A7CAC73B25AA241453B6678880C0AE
CFEFE1DB37030977C13AD37F82413BBF6D30AE540AD4662F8457859B8DBA5165
5025FA17F2FF26C0A9D46BAF26F0F97242A8E2A4EF3E11F3B4E63238381267A2
B06A906FE1F4332276B8583276639586B876FD260042AFB4E19A95C7D9B71C7D
637420B70C1EBAA2969C40FD797CD026EC07C07C8D2AAAF8C7265959C7DA13D8
60842BAEC5EB5C217FC685C06C5AE447C99617B9328CD416EC3874534612967A
D795497F72ED1E09CDF6CE9ACC73F75B045E923878E5F33D28C98CD7E3DF0977
21A0080D2E917EC3E48A45B3380636F06F3DF2C8C9AEA04B73CB2E4EBCF70184
C5E1D9C9E3DF6D0AB7F393564B55C3949FF9CB12318E20B680A50E700B9A05B1
04624130C75C7F9C638FE616B4FE7EF39F517A6D2F7881EB5365C5052DB8D75F
D0F744EC24F58E7E3AD435C11789D8AA71823A49F668EC54C12BA29DCDE18F44
DDA6D68A7F9FCDF7CE86C12D889C70FF54DBA3244546F16042BFEB920313510D
FE1973DC8F7B8C10CD82E6A350169601AF4CCD120E7C16E6B195372FAE4F5E07
19737DDBB167F06DC088C78888EEBB74C92AC1A7165351AA82FA97890367A50F
6EC66B43972080D9DD484FB90DE0EA0F868E0B1E18FA0BCBD8FE37D68320539B
D4E72E5A4AD5D70A1383661FFE7B1C6B551CC09716C9680111101DF7A6D6AB00
453F8A3BF40BD057DCC61A05D3DB11292882FB011477999CE8E1D631CE1E37B5
7178972ACEE54C5779E4A1093E8A3CB3498FB39AADA61390D6BEE27AEF291E4B
E0A8D89A1D102EBBC01F5887A8B81E4A35D75F51FE08F52A283CC86032CFFED7
063D6FB88A6C91B77EC2113DCBD1D8C57BB81FAE3E5EE64C8D835CDEA64084E2
039F6F6EBA080A14F56ED1959BD60C7F7F5BFAF8497205D4BD5CD03D265531BD
241735EFDC419077B3882F31F29C2818E65A1A17C87D7082371D3D4884B50E12
95C517FC56BE0C35B2177D713F6C9D6E9D1A5E8FBCF32D200E0FAF792A1F5938
2BD146D760727435017FEA7BD2EEA5A0EA86F5B682A77F43EED0E48923A841E9
65740D7746F1688402BD18180B09D73FAF4BEB874139626FB369AF5703F015A2
10D9182678AF5F984DEA53961C2D4A0F81DF32984302EB1804481D62AE03D554
871482FAB8F6413BA4DEB76CE1B7C8CFD866C961BF468F25AFF0E6209962BD34
06653A98653F419EAFBB18DF86BE7D9912C083266239609D959B3A2823DFCAB2
710877276174EE63924E796A16106569AE551719D165FF589054B7779923A4BD
DD100FB91605600729FEE9A0C548CC8EE1C016A35F5831C3F3ADAA22B5FDBA51
398D360D6B462C4E491AA6F1F8523E200FA546107734B276D7DF579E72EEA163
B82E56389248E7594FB9F4A2522CCEA4ECA7BA5F8E29FD340CEC0051A4EEF653
6117DABD154C98447AAB29F2297F935D7EC3EF639EDC6A269DD67528731356F0
9E37EE46EA4FE2572575CDCBFAFEC3F5BBDE0394E61480D9224F0ADF94AC50CF
93C0382E7D2547C9B4789E6638E49ABBEE7E445FC37F7FE02F12957CBCE6C9B7
F19E99D4CC8B5071973A08AF28BA695688554A89F34A8FA3A0BCAD3F519713DD
1E567F28531C836BBA36A1886FDADA6E09DA69E5BB94BFF93FC7FC6CFD60C667
171C7D0E0FC8F74DDB53E5AA0002676C6644D109272065B1AFA1A187E372B967
6731777CC84FD5F766F52626B6321F9F5421C8716EFBD51FBDAFE1177E614AAF
343CFFE0744FE3D6B1093F9F3749B84F64B1FD5992C1EF09AE2E40C5F0C3D20F
A60319B227A40368956C663531BDD37006CD4763EEEECB0B9E3568831BCB4EF1
82D1377FBC2A6F77CA449EB2C8475B098FFD95A56E575639AB793B3333D2F077
A3443B9336946C5DB19CBB3AB0F969475F70DE15FF67FD9F8598AD4F7285A4E8
8D7CB8E40CD6C4FA69CF3A22D252AEBA66664CD09BE249E05265271E6E9F502C
FB76992DB3EA558344A211FE0E34C3A0D652DBBAAFF4E2E4C84F9FFC8EB65B4D
0C2E34495B2003D81A4BABBDE2AC70FE50F1A22B3EA98F5ADA485A644A34CD0F
70B5ADA7DCC9E6A4672E74DA5ED29F290C37D03C0EFFE15D0917BB65CFA0C062
33C87A1B4699D58D1C7E4B5CC4377968133627229187185F60AE68490AC4A06D
76D724BD1E3382C31CF18B06A31EAA90DE61532D4087EA70319A93AEE4CF5A9E
01D2EE48C965A3F2FF949221327DE584EEA50F61F4C703C3B4C585BD959FF8D0
CB69DC465F32137D1B4A8F90B59F0CE689686598FD8B539BDCA0918C1D553B8F
53F12FD6919948721CBB28300C34C85564072A8D253073583C89A7778A54B4D8
764B03B93D275E50D03696A026FA7A544A0D2C7239E4D976BA9A90F152D60E98
48C2441BEABC0328C19234CC435A9174BC31E8E97AE93DD71C5048B6811DB571
7DFFE80B0BC84BB3ED8FCA285454D785197D34B67A4C3C632ECD4C850CA78831
4CC66195511A245E4CEAEEDEDD30EF202F7F81C9F8A48D7CA6F34FA50227BF41
2D2AD23B1AA7D7880F133E5B492C009A9C95317204A88570D92045766E500950
A71DFD2EE8F17109AA3AA81FADCDD8841BE2E34E37517009A2A8F55C04FECD7E
3FDAE6E5BB1B3A453D6916159877EC00BB2604708E4076B7EE20CB36401A9E08
6802377EFC9208BB45283186D67327CD487B978FD50D9BCA2508355C52668773
9C1FE770576F4593A1DD7ACF15A1E166892EFD857B41908EE317225BEED285D6
3426D018F92E02B8E36B09C9613EA1DA0CC8F59B9D3F25F4F87A7831568B0EC9
749188DC2F17B837F667983FDAA9889E3756E47C3DF62247CB10F893048CA980
A002DB2E7209B2CCDFC5C7AF334EB40D0B8BAC8502FADB1859C7F2394B785CAC
065F13AEF5326FAC4F24964CD62648BAFA26ECA0EBA92D51B9D081E2273700CD
1CF3B7B5DA96D07E2EBB87C7C6F4A3D6C7EF7A7BDCDD7C5F8BB54022892B7636
8A317D7732DB2D5E4887178F2A5A89CD3E510A12D121F85D4258B64ADBBC029D
DD48D7A6A15E8DA190DFFB25E67F6FB7656BA39CDC059EADFFD09839B0D82B00
CA0041ED32AB7C35907BB1A9406E64784822AAD346A181A368E60BA882DD92E2
5DC7654DA6A94BB299223ED8525202C6A55E6122A9696CFB3A0C9B5ED57ED3EE
4435D71ADBBD0E53A1E996936EC7D0A2324269307CAEBDE021B4AC23BB40C927
DF8321C365A5104F1AEAF8EBBCD44A60F2B8357B7F89DA43EB1118F160769E25
F5A821EF0FF7C0DB57A06CBE4EC601A942B2492B0F98A898FA2E757ACD16A747
B3B47E05ADEF48DF001A387234D59AB7D172BD52AC78D64457748E0DCA7FBF21
303E2394D380D8D49C800573F91F48FE537E74676E8944CC0907B92E7E1C405A
CF288F720082BFC592A2F671D187923D006048FE34AD63390F64979D77A4C7CB
54C9AB8207AB962836E6CD43B3EBBE0FF0E5955E1A824A4F089D7E46502B22D0
3FDD383C388C068DAAD15CE0680D10805D19400A736213F9916D014A560CDB43
1363B68A509E5CD1768470D8A13609B66B1B21C0668DEA8816C1AE9864777612
2A26396D984DADE28954EAA105FFF7F2F4C8CF8587EDB0874A4551E00462CF53
D08212FB827683A85BEF5F37D69CC9C71C59A0D0F33022188CAED6BDBAF734E2
BE64FF1822562B0143D35A5C72261EE296E28AEAEF8F7D549E21A4313141CC86
7DD5980ED1DEBA9B8F941A6294B15AC6950D97B64E595CA37FF9328D69D3DB36
9626DB03244237C980DFECC233D463546CFF41328B645024CCB6531AEC9E3519
4640F371500EF13B5C9C07499771B1BF3039398675E0706F8E17BF369C5D9458
8BB274601B3DEF8AD3A9120CE9A368F6DF4B1E7F498E1476886A591038C3F3F0
3B1CA5CA98BF762DF6F5E6524D427CE5CB08B391C039D918A075AC7F08F65DCC
8116E9E1BF3011EE34B5DA50E9F2B07FCE1CFA496BB9025E687E41A391C8C7C2
8775C60610D3DB56111F6FEF915C946AA3D0D9056DE40D5A21DE4F376D3F0A39
1CE981FF38A306FE6BA6A35630A7D636C1FCDB9368816CCDF6788877A3104070
C223170140A7516D83EA683E7CFD260042AFB4E19A95C7D9B71C7D637420B70C
1D81351370D560276298242DDCFB5B93FEED8AFAE28D55B651A1EF84B8FEEA42
5E21913CBA31E0267C2BD4636B3258BB107EBA01F71E56482BE949C47E09E593
868BF87865A53392984708361306B919EC936918571FB4B4687728DA4142DB9C
5891AB5BA93B1B7213D920075C9CD47B1070873F9D00115D6F5EEE9257AC0099
68C688FB09D2A8E94D0ADB138953A982A7A78D7EBD6B856E496113E9063B238C
D649ECAA1E2B6AE9665D9CD62C48BE6191FF21F9B7CDAA72829887030A4588CE
1501E896B9EDD025AAB005E7995D3D9BC48AEA1FB37AA15078FA4B4FA22BEBA4
73AB4520184AD9DF7C554C69C61B48CF60D7A0ABCEE6550EF7DC96CC0CA58B10
D2757772E27128C5BDD0A24DDC0866AA6E54F71F1E219545FA3A158EB85472FD
E51BCDE1D62E5DFBD25D0F0805B0EA04ED10F3D442573A56648C90B3CED20511
81315AEF884EABB76C5B134E7E0185E7D59DB5C9D734EFC0B94C4A58600D51FB
4D89FA797068AB89E60719A3CC34CD2B4F23B41E48AE0EC38B4BB1CBB26DE46B
A991719A5DAC9CD0B0EE7DE5F5722BD715DF2C1BCC8076CD217D78472D45D88F
12CD081ACF2464284F585A571A1321F0556787B430782E249FF04B43988E2590
55FEEB43B3E4DADF95A986DBEADEB75E8F1B1862240D10D530661670AD0B2C41
833F2FA4335EF6B9C7A662359D8DCCE1D2B9CAF794DC6E6A65792B16720DAEAC
440C578B2E507397E65DA5889E33BACAA9D5DCB31F5F1605CB1D9DDDDC5911B4
2B00406A863AD3974EE703C1E583BCBBB60313B361930CF9B67C032ACEF5767F
24979248DBD30EB70B6B0E91590635EADD02BC13F010CFFDA7D339EF0A594773
1C8963554083117746434DF37B10670BDF8A0D5A826235FDAE0F2269E6CCA5E6
E543778DA680B25213E6AABE35B01B991AE9E0F6F8339C25B544926FDE333846
C445AF29A8C5B6DBC06C79C7CF538BE380ACA5AA995EDCA2CD08718B49AE8CF5
99C651E27AF40D2CD8C640558938D5D54DB8B1EB68A0B53C977307CE56259FF8
42E91C82E428D93B426EB0E6D69461F38D18878CA1FBABACC7C75C1BF1CBE663
22EE907D1C3FF4A6562E2AC409F8A6677FCDDAD480B889F83B3CAD005996A630
9A63BEBA0FE32D74AD6D4AA1598B436C0190DB0806D6AB666B48CEBE799717BE
481462384D0B6BCA5C7794423931DEB499C71ABE7CFE0E6BB75FD52D81EEB6FC
227022120BEF4803811A28AA123D18993CC91FE947C21072039C8206693ECCC9
59DC2A53AD5E8DEEA70B9D144D3E1EE72343AD613C0861F0A58D8467322EB65A
2F8BC6050605CB87F380D793300E28CC2835DC6FD4D20D3C2FCA0333719B2750
5E17E095EF4832B7157B4551647E37381B1D5699A466C2BB1128F4874647AEF6
A75528E0DD9A56E20DB3180C846A63A6F73A85D559518B65CA4B327F296E625A
3654E318407DBAE644AC025A9BBB1C8B52A43A8BEA762DE3991B1267B19E780F
F56247F66A8E2E07ADB69D132E407295B5234D80522A9D571F190FAB66E95C10
E5B0D69E77228C397002CD36C77463E1D9D374179B3272DB9F483B4E3E83CB73
5E0A04D6A74092A710A9A82AF7E4210EEE6AC5E5FA4682330EBB47AFB14105E2
0E1132918CD7C110693722C8174864AF6B9D3EA5F9A365966424B74C146E164A
77E1326AE8754C9789DCD73BC1DFF4E35A030B679B9D2313515507EF116BA99B
0D74901738B40E635AC2EE56264BC3FE03C7D9738E03D9B5DE922234C3AB8B2D
CC9E561E97769BEAF49D19F0841D5E8EC7CCEAA4D28DDB3D661F0B078E5C8EC9
98673E8B1A7FA3C723DAC77B64A17121235FE1AAD24686217338A79309F8C996
2D02AC79730F7ABBD9E82CCD3229B5836092A7444313C171B4CCE5DF7A470EB9
ED9E667094025A81C470D33021157B3E876937B1C71EE24B40DE0C0645462B24
048D4A236A2CF42E6183B65695DBC787545C03D1F0DB0AFEB1FAEA7834796256
D8B11234AC83DF6D4E53F99153122815AEF3FF77045912DC998E960BA243AE4A
79C194CCFBDEAED491A64635879D0E9E3155CB94633C9CA212ADDBDCBDDDA4E8
7A982D645702ACC3F554170D1B22CE7818EB99A8E80923EDD000526C93C55879
A8EA0224911F0728FB73B1C2DF57CF842BF406DBAC4C5F555EC96E760C8245A1
AD9F508E33E70672536DCC4F9E890C18E864D5138DC0905AFE8B5E9DD38A3063
C028B58483688C56C3DA40B73CD36BC28D1DE96CFDA0CFDFEEC52BF01E44723D
3E0C74580C2F8F07939498C1DCBD58F8C08E9425D1377529CF100E882E462990
DB2960ED2C624CAAA8C031D718CB10253E71A08D504A6A047A230D44CE62907F
F59F4B76ABE5EA5EF729DE62AB4AEDA6C91B74EE325F660CE036E4E671E52588
E7C60A53469584AE9A37142A3E14CE5AE65A2C7882233223F8DAA41110E24E78
A18E285107D3AE8CFF77C0C88504CB381D534A63B80CAEACF1E3EA8C7A9EC5C3
EBD3131FBC11A19B2D697C75CE2B6171EA0D39805B15434A07B152BE2DF9CA92
0E1C9E27FE6C9D4D841359D93CC99A65C462822E409FD1491EACC6F092296AFF
00D80D3B94C15F127C05A753D4A64198FE3E7896C5ED5767C311C0B77C00FB8A
600F088414D8992ECDA0ACC39AB210921D09AD3834992526F12590D8A23920DD
B449A83E0D7012AA4DAE637A01ABB0AA925AE1D38F1BEDF83FB349ED5A48497A
F956F627EC8A046F0545CF02B922F7408933501D2592D42AFFA103EB8E401206
A523148D709F42FD506EC0F58D5BB5248A30B3A98E792A5C807BC9C2A57259E7
48629C8BA2C8F8A84AD8D2C22CDC8C629A910811E0353EA9B59A6202ACFBA635
A73EC67F26C4A36894C4120C6ED5282711795BA6FBFAE1FEB94739ABF82F37B2
54F397FA47D5BAFBC5AF2DB87907BE0561EB348CDF8229A2AF7F048A665FFFB2
3654B08776938DFC3DCEEFBBAC6F783F9EE07C887741C0A255A16DCC32BB7BB5
4CE2DC59D6B77AB733CB16BB1D590CE52AF689811782ADC4C3CFB70C54313138
C08B57E355BCB696C3A4769AB80A30ECE7E5384C78283B9C627586F74CA84271
1133462708DA8F5C29F60512FC389917ACF73444EF953FE56AFA5DC8AB200BFF
20B297F46E2D3EE28A14388E6D56BB7D469B77935BF68D5A0FC139834F4EB038
C0A52286CE9CF8612857DBA7962DB9B7851E6EE24A0C53475186BB44083AEFDF
E432E7417C007C7F9F89E8A8E368DE280688A88614ABC2F6A6210EDADE29D28F
D21894744C824E290A945EEE81A5687549CD60A676FD984F0C50AFC2F783594D
E07F64F683E0A69FCC925C5D25BBD041EDA5DD5659A0354220919D12354AFED3
7CD28F168AA61BB6A1D0581D6E7175041EF49EBDC17F49804D19359F53090C4C
06B1E107BB7BF54FD908650F54EDCFF07F1FDC473ABE8F1456BF7FEFC9548086
229ADAC4953EEEF78155D1AAAF6A1F14B8939C8FF15B8532C33BEB4193F5455B
B10DC043CA3B726464C1748D1F24E11B7818466292094D89D5FB090112339F76
F1F7F4F9843B3655D82885E15A05F59D56E5EDBBEE0692FCFC8615892C430468
6401B0AAE619F7F850AC8A9E0C44350085E0428AAAC1CAE08123E5A6FD958CF7
E7000D215B6555B32B69CB55983BA444F1B6A11A2B9F7718BCE1D7B9AD890D6B
C64614C5CF9B2479B4E7C3B2D85D951D72E8991FD4F07A583179EB3D1309D247
613CCEA8AB73502F8DBA3FA0FC5BB976307B4CEAF35B050A61A9DAE6040C150F
8FCEE87A7483F92277B32B4863B8E5A6F8366FE6622ECEB154CE3857FB4314F2
EFAC60FECEB0A8DA1B30A710FDA8E19C96C0CF4B8DD9CE727EBFF3331DC6A599
CAFB5997D5A77B20D702EDAD43518F2B53D55A8FEB3C0FB8C09606DF50490C7C
AFCE844147A52F32B915F473EEC8A587B776F597724874212FCDDA024983BA11
B3D21C5AE58CBE93BCDC3C2076B38DE3CEFFE2F72AD8592CD96686A3AC144B9D
82073854FB9719189186CDC274F36C4CCEAA27F308890D53425311F216F89D4E
ABBF21D4740F61F9985B1E8DF38D20996E76C827664C55FFFA5C0BFA8F0BAEC0
BBE3AA65484A084AB10B4B81E57AF7AB7D574FA49A9BF810D563CE7A2122D429
5C909D5C57F4B148BA1DA73CD46EC1056E4450D7209FF534E678FAA1384CA302
AC83996AEE2E6BA4049F503205F3C61644F2B2E2DD94C933DF27385632565093
46128EBAAF7D11ABA3DC2932E9D0E569A67D7E9E578F849E100471974C6BB91E
C150913C1B3E67613B409DD33F766E798D2137E6B0AC10F2D31DF8A70B9DA5D6
3471EBF5739689B9658F75B4746F0788B24D85A475D567791289908F9708D1FF
A5F4099812BCA2C43C934B4283C233C8744FD5EC84144B2966F72FDA2608996B
B404CAAB9038A56948BE52FD491822DDC1FD037271F101DD501B215E0C207067
F1E695951C726032A76E8C8A13DB3C180FED865DBCF458A707DE151974ED3BCB
2D12048317F4628F7570D3DBE35B3F60391D13C26C2F9E1644E2902EF213A594
FB8E6E5A8941D32C44AB4FF9F60734C14F8F8D31B1B2C357FAAA44467CB2180A
B460484820969F199BAF6C36A54B457D8FFEB126888D0252B6C59BE0ABF7EAB4
FC8DCA302AFEB280D3B07ED0792AF18F9EC9834A8D9C9B376D9B539BEDFBE4BF
99F3725865093880A3C18EC4503D3F55A3374474F1D4BE7271FF18F75E4E696E
55B08B672A11A733D41C4F04DD3EA2E8E91E4ECC9E68BF7583314055B41D1A7A
6F59DC8AFD7EC48B3750415CA80E8590F52DE971DAB656E0A43ACAC1C1B6E1CD
7EDE034DCC447400BD2FBB2EF796783E4C8F328A2521C4A6CB6CE8817373C2E8
85C88F882E29F1BBE9DC170CBF5F561E004C322217D2A01680D7EC23778D1A5A
4DF80041603CE71AD9F2AC7E8DB53B169D9EA3ECD9578C34519695EAD030B18D
2B1B928D2CB8CAF6B1356908C55795337D8A456AF592730E8722A632641B2149
25F116B667887F864FE14B9986B90BE6C4280377C00FD341E21EFE2B0B8A550B
4264FBEB14FF75816A95565C98DAEEBBA391A78868DAF1C8562B2F59C613A428
E01521E8BA630090AFD344BB225F08F47868D6C4D857CDA694C0A457F1244C6B
5E4238967370A588E43EA7817B327E31D3ECB9C3167D895F2258475EB78FD45B
0085003A579095EE7425D2AE291D57D958BC4E21399F96B0A967D9789BAD6036
DD7F5A106082285AB2311EC11F6415476634CB3C060AEC69C2987EB7A31BFEFF
1FB15E3D9E752D947482AF73565297DCC5E5173553FB6474E6DAFEFEDA17A784
01D745354987995070A6989FA9386736476F5C0B74AE795A7AE3DDC5D3DD00A9
D00912332B00C42D7768512B958CAF84AFBF5D808D32016889D6FB468D0E9DA5
01524CD25B2EE32BC4E7ACB2425A25C51765413E9FDF23B383E39712D024E59E
EB2262C786EB15A5F0DEC6C84224D85D200152BA034ECC39B5FDB574F86D6680
0C660B41F45BC90AA04A67093B78A0DEB9119BB0F6150E583E0AB51C2D9CEC7D
5240A0B956B9C9876181C5BF3BADCFFF53C23B0C35C06E51C42FB9B6A9C43624
29C2FBCD39A24463D3E0AD6A68646C141124505A0B81DAD09945A4B5465AA2AC
52AD9C44C82CB3D7EFE9E4562AB7EB56B08BD9D4F68A98645F1F1F429B016589
07028620CB3C0DF0BE9FEF9DCCBAADBFE9C5A69BD9DEEF190BD49F06C4798C4A
051C0097C2707758E51D211465518EA31C7A02F478B38C8121230A4C97780EB2
060E9F6B51A13488A52C863DC5D7F55FA1324A41A2C2E9885483018E1CCC8554
0C318B1B323A1ADEF835B8B927C465E38A44FCA86C07B1442AFF5FA6C1914E87
3DAEDEA22B733F4AFF575F0DB6873996D74EE1BE81F85D0CF49592568AB3719F
9CF0981CE2A115E610DE447590E460E58B1885FF02066F253C6E2A1BA52E255C
78B5BEDEF975B5A3DDA3866B7ECF2D88CF32CB24AF7F1BFFA8A4155ADFECC671
F952C68430023F3534A84FFEC131372A2D75A469CD4DE008B74FA00BA91B69D3
00C2D90A2DE281E039B3CBA088D3922EEE71EA03D2AF9DC626A8C1BD8B99F7CE
D0462ACE95E6DCA24FE75ECD41B677B9EEC38CADC8A8A5A65580C3CC5960075A
D70BF03EB99A23AE97933AB39701B84F546229DA0E6CC8F544A81899A88395FB
886D410C9E288D49E359178883F7F37CBC224FCC9297EFE94AA00FE886E5D255
B8CA2F556837587FC55990313452AB1B436DC8C16A7C1D0E4A13B262BEA6F936
7E022DEB710A47CD928289E7914CBAC6B3F8F9D5AEF7CF79342ECA357F20BD32
EEA61B1635C3E6C3A432C4FDCDF4BB2142B7882A30E3272609833B9C3193A9DE
A9AADC6A53F74E84B0A757657849EB31257889F7D62C0B4304279284007CCA8A
72ABF030C501C010594F3DBBEDDD3B1543783436362668AD11B38BF1C967C4B6
CFB15F3F315E77C92F6C2790656708CA42FA055F7A6F61B3BD104B311E1F887D
3CB5E885329B50602BAE656C1D78B42A8F9123ACCA7463348ED17F329EAEE793
B7CEF00B19BB38FCFE2DE44EF169D0466DA819F9B3006C93C4A0585939CF5F03
372A9A32657D04F98746CA8E1BD8D70F42DFA60418996A224AB069C0BF4776BF
479C3469026D7A03D89F1575FD7CEA509400E269E22AEE4DAF0C546A19DD2C09
FC58D0A1C69B1E2D37C950B0A358C4C24251ACDB9F9290BB8D480E56E7FA55E6
C8675C36D098FFAFAF7E7B95B842994A424F69919E7C926CE3860D1254AA7843
48494EA62A358080030BA419BBB7F1047CC60348144C15518102FAD2A47B69F9
C94FD588738F4D4C0A44213038B120A0A9D550CE211CB15607A89C1D417E2915
251350006CC2E3EF10816C6326EB1B9FFBFB8EC9C57983FAFC88F6842EF89C6D
5B80E8BC805F868D85691596025FDED8E801C1A5EE2C083F78794E3F576BDC16
7ED1F3EC4CAC6A5951AC352389D34F9578021A52EE3087CCC5D35B634D6C9F01
923A3DF2B7CACD0E4F1079E4532EC981F45B1907912E910F9F6B0C074FDF73DF
C7B7BFC3CE867EEF472415598E1470196FC4F393E145D0B5800D99DD23462CBC
1772A789AB1CE577EE970A2B5EC3419607547DEB6913F38DCAA64A11F3E294F9
7672F2AA237958DD91B4A16DE196CDE1258B3736F01DC4EBFA57CD19704B4840
B9042B7AA25486B45E4951B92AEF439417C11680EA8EAA2EB5975F3A5E52E836
91937A5842E583273D14E723C6BAEAC5C187D7D5D354B026FF130EF62E524985
AA22FC24BB920439031AEEEB92B052ED783EFD03B3150859BA7BDE6E9A8DDEAC
E22462A36FCA7F5219894C9A702A77FE46E04B83F2CDCFA96298115B4949B947
44DD482B2F88FE8B278ABEBE8B85C17DABD97F15B6B80B30616E545DE0A63DFF
773B8AB4AB1DD0025BB3D8BF1D091CCE97764CFF165928560AB494E709A853AE
C879BA1E9FCFC91196E22FD45086F515FD64378C51370CB9EA6A1555FA691986
3773E798741FC58254C152D14DE1D41E963C93AE5F9D794D57E5875EBC162932
5376674B4FC6249F322B3428E32E839EF8B578DA2F12583C3707C6955021D541
0A7DE4689432A44373D6BC8BEB42B549F9708EF0B24AEBE67F15B7DAA4286575
4B98F591406667C738FBE1A1790283C7A32F45DB717AEDB17BEC0234C59554B5
5EDB02D3BCD9755D9FE04AA651CD50B3154D4953681A4FEAA3A532A4F5F82D4F
A48D4B9AE00876C34308ABFB2869DD34388C961C9E31F7BD1C7FAFF3C8A1D8D9
2CF28A2423849EB02F42272F4FB1D21E1DE3CC48570C4B79600F89C67E58AB7F
8DE61571CD08C84E80BD132640C4746BDDCE3BAC197FFCBD2277C60DF4B6A87B
879EDAC422E1BD01CC707CDF44A7502CD402DAFD4EF09DADCDEEE30BF5607219
A13C7B0325C2A00B46AAC89B796EB3536ACBC2731215747F32755212FB7FC859
3B446AF408EBEA3FBA1192575C94B843053F6A5587D4357034D5D337F743BF0F
19169A6044AC49E9324C283729D1A43CCEADD2601FBB27B46DE114D19E284C46
B1F1CCA6A445A75C92113D551AEA43213043BEFF854B09CA55238BE1BB910EF0
ED021857F33C1ACE43365F347D7FAFEA2599C9AA8990E26D4324A7431B41F337
6D6E406E1B5122761F7A7B52C205A0A26BCB3D22453904748466449AB9440A44
28E1DB6A9C26FD1AE606D5F0448B44AE8591A20D99EC2E8AA146F491A9F0661A
7EB1D3B3F939D0C2BEA9FA1E6C7206CD4424A80831F30E75FB0DF0DACC8B783D
A9042336E3EA97A756193E9E74EFF3E610CEE0821C68FB73C18D6EB3122D39F1
7FA51A78EDDD60D757C6FC5529115D38B48420C701029F30AC506460A747DCC5
79FD0271CEE331F5C578390E1E324C159A70225DA33653931EB003262EE0552B
4C4EB1F73BC4BB577D299F7468739A3DC3F37157E1DF2365C8A73C1E04C54CA7
B1D39A42DF43A14DC9410EC3D0EF136424EE8D926FD0DA324A3F4202FE8916D7
6B35F684B86D5301445B8B5EA3613548659DCBF19C82C7BEA0365ED1BCF7BC50
77E15C5D216AF5FFBFA8A371961EB8AD8A29161B824ACEC2FAB46E491841F9A7
F55F08E23E3A64DA6BDFDDEC44248064399FC8D417A060A126C2BF45A265EF77
28BFBB674510A397F20F65CC78D74A2C2CA1977B2DC90FC8DBEB5BF310C71FFD
FF5C16E34677614B1E7EDBCD16F269A3D5027949586F71D17952C62D47DEB00A
17267777F8A3F2CE8B63714D9F8840C791ECD2C30A719D63DC0E1D4B596A6A0A
8421FFB276424F92EB48556D4A3C703D215CD4D87BD21341A4396821D59464F7
A66AC07872A99574BC468AA55DEA4D5E32D24742C763D58D9E8D55287C3635F1
2690AE14ACB4B2F537DB64116A703BA53EF8B7CB5AFF45FEBE641EA51F37E2A0
E400FE6B8B1934EC8632711BEACB92D15B206C0E69D88A391C9262A1474CC8C9
E30C761F49AE7014B5818F73F52A4EBE11928E1679CCBE201236BB0936241211
76F994C33D602DF5A1F4A15851A97A19D5DC949C7AA80DBAB53BD0D04CAD98D8
0EA2FEF9AF8AAE54494234FCCEBC7BD19C3E68B1EB7B38FB719F8474E0D6ABB4
96338EF1A1F680A07649CB0BC7197CB6C8249B0A0E7224BD6800982C9A57C5C7
44CDFCFABDD27E39F010324C5E128F0BE9710CB609E9E0A4C02B7FDABFE16EFD
E614FFFFE614E2AF37FCBB01ECFA2AB7BA545BEC87678026968855B882399036
CACCF55E12BEE23FEF89988C93FB8ECCCE94E661E1CDB4CDE6CEADA8C38E62DC
F3FBB4DDF09D5FDB39E8E29863D6D5E314B973C792A0BD3AE62C929D8E4F2553
6590EA0F2ED0D41F4D7F376C87F630ED63180D34D2FBF7A8090F1FACEA8F691D
91602BB145954864DE8FA557C6588820BEA3986DB74641655C139324F6D790B9
1B3D21C4966B5C66496F93A84A42F4D2017E8272F509A18450C90339060C1C41
8F72157C5C0D0A2437B9647608415923B67EF636C0BD1B8527DB979515F462FB
E9AFF979E67074CAD316FCEE735F63CC8A90417E28DE93F97043DA7AE13AC3D9
3DD3CBC663D268432884E49D7D2BCAAF12C9E75504F8C324DAF89EFCC08E3373
B0F1EE282141B5DB8674E6E61AF95A795244D58C4995506A5C56A36F42D731B2
E1D385C473FAFE109218A0B879947568F43FE4ADC361A7661BC1441D65546C93
4ABC52A12758234BFCCBE116FD8334019A1D2FA36F074109FD40DA976E80A682
C683C7B4E9C418673A343498ECCDCB076A6AD7B7EA80BBC0D371BC76B214DD85
1ABA3017F8E94DC4A45B9B38704024072C5F7E9D7F76934363D7DDAC50628733
5BBD632655322856EC645214C84C24E010646AEB170E243BEFB3C2162092BBF9
0781A40E1F1D7FD351ABEECA638A2673F425EA0ECF47164DFD3BAB637000C9D3
BD4D2B7E770E26440C0B864AC929AA80FEDBDD902405357FE3FDB18650903AE5
412455B539FDD19CA8E5FA90D9DB6452869070F850D52476FB6BF96D9C319B52
F91CE551B245766E054061C4B9B9A4620051A688EEF8EC837ABEA8F2D184733F
03F111BD6D78E210D30567D161C30A849D1C45A6877C4C032C9D233CCF7CACEC
A6971946EAA6DA151BD40FFE9891F2B5A82E6BD321C6AE468F7C9638B0C71EEB
EE7C96F47ACD60190D351A251A3968A27E3646F562FFDC443619FD243F52E7AF
9F9AE7581D93BB225684B50F7946A065FFE98CB2B25DD82A7A09E18E4950F8E3
9FA463B5D955A864479CFC2AE3202D498F5B4B335DAC12F0C58FD536D0DF6A2A
BB1AB54E33515705EC94D49CD30C8DB362171EE694027E42D7D26DECA1C8F9F9
970E628CC1AA6F6431A19A3956D49AF14816B2D65955EE5EE89153E0C7A33FB3
DF353F11454B8BEB4F4E3223727784D5B3E5FB86DDF83E7C92A3150202EC7947
5D331E905D7F2D6FC21C94BF7809C5EEDB7D74548F5D56181441189CCC7CDA06
41D868A47FA01768F84A9E3787DEFA3DDF7E0A2D30B94B74EF9E1CCA299B444C
007D0FEB2439A1633114D0BF582182FBE2B7C8C7718626C568A93E7852BB99AE
7D7E08269409D273B5C11C806404D41D98D9ED1E8B3BEC029E99ACC7FF7F059B
8B2F88E94B2999B5CC37910B427A11B5CE2F6C389C3C9669222935346C10BCA8
5D30E45C31EABBFB741DA16BD578556B3532FC1E6B885285A10F7A6E330A0DB6
5DF560C339546E3CAAA653A24882405C26CCD8FEA111740F8A9EB0AC67D3EA8F
D27934B6B18BE240DC2176D995B599FED79F3677B2B3B1E4F1C62018571B1963
165226380AE1F3D611408D1F038BB6173E6E61A6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC88F86B07C1097F9C5C5673B88582CEA8CD622F9B0C79
E463DF7F2F4C6640FF3852BEB520F7B23D8A22E7E601EF9CC6D0A2E6E82E6840
65B82C6A3A6692811E2B4F57723AA3A6E27076A2F63D6CE1FBA7ACD844E732FA
02797B386F2EDCE9FF9F84EEAD17B366D678E61C6176FEC09C94B74DFC090CCC
40AE9DA65E5DA02E7A7E8A840B45B752AF11A279BA06F821525DD0F477831176
84C80B29D318260FBC314986223F9EC4DB5B0EF2EF5D424C6DA581B49C709E1E
98149FEAAB15DFE7F94977C9F4AB20F3D8C391A5FDDFDF5B67E9BC3976D5E50B
846FD2CADD6E5C3689987A6BC19336039591AE9BF280352F53526F7E07CD703C
93CDF2B76B90F055096EAE10BF6794F563F2AD650671AB36C99BBD45E7A8CE34
CB792A606A7D9EFA0F25751BDCE7740D2BC14DF0A3538EC25105BD0CA2485783
361EBC52149C5B9660C0FCC847FD80F67BB3A1F3237F7522F4084B7F2C9EBD9A
3A98C5081C21D9F531E53FC7C4D6917246D72A76F961401A9CAB50B232CCA671
ABFA21478452687DA0ED7B35C7DDEBE156FB522363376E09EA621771B13A43A0
A0D2FBF212F6188AA88B716BEB13F79197A6F92E3D9C8017A2B3D67440A8ECF2
6928148CD1A1FD3EA97F7946AE39A9802585D84BD2DC74A11C491663E5EFEA2E
5D3A0D46E63F12EC9DCB0572AB667F33FE709E3DDBED5D26699EC49934C17F83
AFF2D45661D889D8D929C4A239CE2035CA8BF1FE8536CD48608962F6B41BC4EC
B1108EF010D6BAD8233B9A7C632C29108F2298FA72EE508C977583656C256DB6
728C0AF21D7DFFB9FB28C67DE72985041253E761AB1ACE2D780F5624CF53DE04
6A36EFB35B52F055B7EDD09B83EC24060AE2D76C998F43431B76F6E246BC63F4
B7B9C980D80C7A2356809205B0045BE1142602D5EA70082482E21E11ACC67860
F8A4D2387283F96D066F4EEC9FC5B94242713C8CE3D97502780776CBF7731A35
3F9135ADD8866ED15BCF2FBA48D1D82ABE94D827E44B9676C4DE3DCD32FFFF35
DE82180E73462742EEFBDEC55725716BB87540BBB26EFBC56E6A02947E10C0BD
DB8FCA6750CB48A95CA4EF427035F12A2661AB1FC21C334C3B24D31C9E2835EE
79AC09C2524BA6F14909BB76402EE3CFD8FF0DB4D5A4DE5714FAE3FCBD718187
C621FFF378682547D23D19EED0D6453C2A29C46BCC1E5CAB15FF198D47B5F533
DC47AF095144FCE0B8E3023B00EED1535B2F4885CD255C52E1A0D8987E10C911
D5DF364D808798973E8E7FC0C507DB216105AC441F7544C3FC07A6D7625392D3
0FF009C9EC96B865FF69F9D74E7122EE2166023FAF19A49ACA2F0EC5FB5BF723
533CA8316CA6A698AF633AB1874F82A5AC6491C2297D5B212A317179E56421A3
B1386C8878EBDFF132070DF8A4E24786F6EFE16DF346CAD55B0BEF4687BFECC4
9F79B165C46185D8670D124295932A92AD174964D0D2D7A6F28ED451B661ED57
6348F0A3559C5DB8EE5285456A3F8D65AE5376E703F5C659E58DA27EA4484013
476F55C3A0330D333BF4A74051ADDF7DC9BEC7A910FF77316D9AD1B5DC2D5D7B
AE2EFCD83D72207DFBCF21BC28BA428F53EEFBA3B7C6E6F33C0CBDFA4AAB15D2
A58D3A4D4C76A47A1335CAF7156952FBA0BB786444D2C648F3A56589E246CDE0
BD6B1DF834398BE1B6666E82909A1D8257267A809F2EE79138D5B9FDD43B088E
0293273AC148E6C410793E7CADDC2C3309492A8533422A75ED92AF90530C99B5
373DD6E2901501EFE5807C6B3969B4441963E5EB2BBC47434C1FA9AFF2F3E15F
91DF01C1F094DECCDDFA26AB8C1D393A0B94328EFDF863318482E9B1E732156D
DA64E989FD208C31A9447504FAAE0B5B7E17802B8F1B15359AADDE0826ECC576
FA95412E2A7FDC96BBDAF34C4254E956C02723505DACC792086E18039526155A
BFD0D2131E40E20E0EF6EFD917EE286053ABE89DC08338BA8A8BDD3F4D746B3D
9E7742BC469423D0982C80FEA34EE00F77A025329F4328803979CDBBCDC96B5F
791E79254ECD13F2577B17E686BC0E3B26CC627FEBDAB4FE37D8692A080EA82B
FA55FA2FD44122E511E5FBAF7633087EC1EC2FD6F8873BF1B78D2E881314A5EA
B2CD59DA87E417F8D8BB4D6D32458C9AB8228E7E95CB02C24517CADC846B1944
491CA22B7EEB9EE84D8B0E8E04BE113FD095130D6134F03F0D1043C5F19CC418
428EEA7FE850AD26B544F0EED6939D6E904DCA67194B58956A2D84240FBD48DA
48AB3272F1B9065DCCB886C602CE0222E0F327D802682B09568230E03EFAD7FD
C529D8B4607F8E38CE1F07B88F23F3970AA8CE2B5FC8B9A08CD7A881F4463AD8
20EE1B77E65AF11BC2B7DC41A531FA7A62D02E88EF93966DD7ED455D2D95193B
6B3BBA65404D638134B442CF7AC711AA8E73FE291EAC95A322F2ECB3C4D1B76B
6EAE78D63964C3FAA8FBED90532819C5710A7AADC1A930053B0368B02E1F3CB5
1099F2E915AD3B19B1998273EA5EF842A7E5DA12F7E9711E60EA0560B06F69F4
7B68B0CCDF34DFB19946A82FEEBE69C29A46D030226A47A48F6C8D76F553DB8F
87F078A779D8E15B9CF7BAFCCDE3E2E63215E0514B55044CF57103AB9AFD5FE4
2722E7AF2528B5463D6254B68ADFBF8783CCFE5BCE1774E51F33E4B6143A043E
F7A2AB4CD4693098C7B87BB6C961660D7A22894DE3989AC6D82796B05803C586
A258BAF0EB6A98110E6596B5ED20D22596190675DBB0718B5B7D4FB7605790A3
B6DAD9D983379F0B75DEAACEF8580912EEA18F010B53F7B9FC88544193E234BB
DBD0DE61041C8A79D1B51396AE71A7222BCA351A5EC765DAFF123D2E295CFE0B
FD631FF0C7F6266F6B611B59AC26615202BB61A93C6E4EF664C4DD6D97233FE9
E1FB6E6FDF95B6D1E7272B008C0D62C26FC525040EB396BE80CA76205BBB4288
B733F5E5027FB3B8B6699C9BF4786AAFD25ECC0587EF1FF1A3231EC75F4B1852
C9888F191FEE7A95CCE16FD85CA74D191EF39801C04D1F19EC8035484AD8D42E
C83BD3BC481154D16BAEDD00449D4EEEA88DE84D859005B46DE89CCAE370CD5A
37440624BCE88B7EE21F89A70AD7EEB2B3178DB7DDF6E51AA3DB4A21AB48AA71
ECB71A85F3509C8597EFBCDDF6767DCEAA733019C1BC09ACA5394FE206A35A06
FC430D6D27F3DA958377BD3E166EB9AB7308D893E54F77F9A654B8F286553ED4
30517E689C6B9D81F1AA7C2A72A4971F9949BC68384C34F453BDE2C4FD331CEB
509DD6FE137EFBA46587874E2ABC67072F9BBE784822DC8AF459A23C8F62A20C
BCF5E13727ABFEEB1822A1FB3DE8A88821CA3BD8A7AE5678D63F510433CD71F5
64D0528E4880681DDAF351301C10572FF65F77EAFE34924988183F53B3390E24
5CB97DDCC1010D5E0A81B873BBA3837ED316E4983570074F6C216D3CAE33B697
8B187977BB860B5F180E34CFD7BB96517DE242D72C513F0BC355E5C9DFA94A99
1A868609598F64862DA37620424CD0A372B21C74569013C06D4E38A1A6E02A13
AFAFA8AEE419D42544AFF7F477A5BCA51B220D145588101B26C3CA960371AB15
551706376210DFE94989AE3F4EFD6AE56C87213C72337B19F886F826655EA359
17AA672E6D7BD0EEE3C8D25CA0B7B497C0A78169585F1437150A40605B3BEB14
D7F793FF1DEC2EB69FB3F632DBCF65E21CFDBF46BB0E4D5D73F5357A5E688811
B91013C26D1D11F7270813C651F86F7DB004C9B2C59476B32398E5FA84CF9507
29588E81CE616706EE7EFA0BDED029049760DA45BB52E843A78EB0C67E2BDD8A
757B9F06D85E58C89491168080E2FF8B3B171AC056F35CA6FD234C360D90F7AD
7213DDBC23385AE1BB98F26EF2DA322459BB487F31D178AE96B0D0BBCAE6C5A5
218A94C2B01891CC1B0755F40C6A65D76BE1D4EB0846F915CAAC6996DC168E2E
8A7B6706066B75A8CD65A460CC354AEEC8F0A8141447FF1DAAF62E21BDB9644B
96FC580B85AAE5519FE8C727E1F28B77BEB98FF68BD286821A2DABD98C99F47E
4B743C960AD2713EF9218E00FEC24B911FB5DCA62DB9E13906558F41D07643C9
D96F6B1123B3CE1C6F40C96978F2AFE1FF22260CD5A247F427E214FA6357E975
E9A083788C906596F39C6DFBF64DF94CA5AD0D15C36232C8B53FE06247914AD7
670AE7D5CF038A1A8E86F26600F9E25EB4796930175EAA91D919D5DCBEBAB385
E154F14CDD0D726FD8D80E257B9F8F69BFCF8FC497E0FFBD2676670708C01770
9C4E9EC40514F3EAF536B7EDE4683A0882158B5019C47ADC387830906A4919B9
B65648AA4DAFD8C8F2C5E6E6CBBF998F0B33FED9BDF421BF14077CBDB0D7D33D
FDE001D55054EEEE82E0D1A061E2B188CF3C897CF79365042C0F90AB3BE7C6C1
670C8E1A30BF9779A42585505DEDD12791B04B138E943BF57C6214114A2B6491
1E5D917DDCAF6D8D37F60EE3244177463BA70955107C135BC7AF698CBDB05BF8
6CCF6AB6B447B36BF132D373D9E5DDE7BB67975A3E05C0DFD88554F27E5DCFF4
6D1AD237A3EE31AFC72337F82C2E61B9DE12DF866621AD4A5B3522D5BBA445F3
E3A3AFBF631D6D99683F97031542A055B166D4D38995EA13EAA422B75C8AC614
C68C24547595851B12A3C1E14AEEBD5959096EBECC8434DCFA8AFC9062DB042B
EB470E4E2748D29DD23B2E92EEE1412624C076AEA690BCD4A89D0A0F56822325
BA22A1D9DE960AD7546681B894FBAF27BF69EE392554ABC9C6D091712BF7DEA1
A33B48E71B8D7A661F9B241FDE50F06E2E928BE25A918B25D5602E1F20CC0235
91BE966512F0FA82155AE1672CD216004001295995CFE099E028253242ACF6A1
E598279BCE3A5E959005A98041B66040D55CE2A1F0CEECB75AC377FF76F62236
D07D659DCE619F9B78DC4A5D594F0CE21786CC659481422721D6D73E99E2A056
CE95C6AD39DD867BB61EF4F4C872CA3AE196D981E29B04FF40E7335890924885
750572B1E72A34E1A1275D1BC7C9EAF404F2C3F12DE5932B4429AEC80A6D673F
9748BAEFF7250C41F105CA938DED30C762698FB5A3D738A5684762E5F9E3E1D9
6404F0994D054D2BA656E5D9ECC0EC380671A8BFFD68418D5D737295109D49A9
F92F7AE723AC4AD17E445E228C654C384E8E144EC73D2CED46584FB1ACC40855
DC3711DE78B3D8BB0D0208B460AA19A9BF4A6BA1069D64CDDDB66D2FDEE6973A
191B272C2A0CCFEB754055F97A776BD710C3CD81BFFEFB63DB061FFB10283A7C
B95D03210FBABF92B9FC976745794F0078D98D3145003CB42EB4467CDB3FFE7D
6FB7951C4176E0D7B2BF0898698DF9C74703D61CB65A556288A51C06FE862553
47D511B5ED405C5CE7E9A08F036C3701082B112FCB63D92A2B32FF0AED809027
AB3C2FACFEE0E478940880215AC88F81995D8859C8EE3DD6E1043AF6616360AA
4273BE763A8C36EBFBCC295C4862008DEEF836E50518185821C2B7C0DB68F37C
9C5AF87284C85530C7ECEF7B00F4B7B64973D2E6979F67A8A10100D30BB09D84
6D9E0D0920C9326B4927B96C3E6E7D4BBB170912EA6633D9B329D78EC0B7C231
6B065FBF365055273DC9D165CAD2FF87F61EF8AA402B49835AFEDC7D9D9FE091
215A097ED07CC927FE026DCB781D3F06025300A668B00986F88B47A7595D656A
91783AEC25692BC4ECDBE95484F9EA433788F73137F0D5673854F516898BB67B
1F46BE8A1A38B7E0CAD244D54C1EB0B2F11CDB77104DC6FB618E3C3E5768F9CE
47856B5863EE37FAF5919A2893BAD39B2BCC382BDF827ACECB758B372B27FF4A
BA7EA0F618984E41AE632EB37879399C1DC7704B61A4411391FFAA2B44144439
21028BC6302F39E283057DED4E0B80FEE0BA1F18BD5DE61BCD3A5A73A33FA0D0
DC55CCF04EBD92DC0B1D8A7E41A64BF84B764CF7AD19FA0E067BAD661DB2FD0E
727B8BE5D7C62B1F522FDFF221F9164C52C82648A0FD0B371626F5DFC999DFFD
49D56C3D9FA971F37C522062EDDF4F3E51C8A18D65EAA3835E5D4D56CCBE120C
D781E24F409CEECD8C4953D481C8129CB897910BDD102E96DE3EEB75D1697321
DF2C11013F08973DAA783B85D0EC03B1CC506A834FC78AAC178899735CED5429
063EB25183B54A42F70247DD1E00689644E91E9AD2311170C68FDB4D55B946B4
960EC95242526A0AEA296C03C2ECB94703B8C1587C3197C64A2E168E2FAB5343
4801A61B40B3841830892E645D4901608A1672CFC487B00D0524359B96A856FF
0D6968C7FFD81C96EBEB4B718B47D6B3743F8F56A44F6C6F7BE450251D8C3B7A
4A0FE0E471647520CC6FE3BF7D64AD70184ED01E14641A43908FCF9A03964850
0AB24FFC5E0336758B0CC0A6F10555A9C603F6D9A99AE1C3A0AEDAE1BA4CC2D1
4CC4F6650C788C405099DE41980A9BBB9D05EF772D8FC3C2E20FF1E5DDF27E87
B2186D931DD32D85583EB7945637790EFA29E130637DB0F0A7BB6F40F4C4739A
1A6AF1EE890B38AF3ED2821458FA9D9085ACF7254301E4842C94C4680A8CAE38
3CC10CB0081F5E095180887AC8AD3A50BD5696C95D164AA9F736B0047488A006
EC35E96A5D40DDCA122D14745A62248C8AFE06CCFDBB0EA0E11B31B16BA39DBB
9576BCE99708E6AEA2C79D28B76A3F8646A4C9AA8A4CE2CE8397A741488F66B1
4C9CBC34EE2E2CC13ADE7BCF0ED245A67A37F88E294303FB5A4689E7B96A04BD
D4D40C906598D132FBF6EC5F2B3DDFE352A2B2766137804C54018D4E519B79ED
40EA77CFC83AEF9EF6F7BFAA22A6073DC190FC6BDEE9CC421B6354D32B6C0392
A11F3FAA3C654E55B7AA7680B5DED4CFBE138939A39B2DB7E2092E790D0D5FAC
3BB6F317CD897973E6318FDA5D9EBF56749306C6159ABC75DF51A7FAD7F73D28
07A7E9415BB196660C9E3696B382B177BC2C4780C082E5132F784330B2C2F5BF
CAA63612279C853AD2B2C251EFA0C134D2AA2E8DAA00ACAAC3CB07E48457134B
D4E4BA9A2E93CBB3547AFC92E9445ED59221EACF806F34F3D2E174D5DBC4FF98
E647D2ABA859A22CC6EB3D1EDEFF12CFD4D75722D1806359A2BF1C62AE535FFC
89F3CD3E9275C01F742A3859BFFABD86FD9217420E42678E9DC64A6BCE2A32C2
CB22F03157C4CB375734C30A0D400CE49A1809C966FCFEB0EC7F44810E513D55
CB409F3BBE92848E9ADB6AE26CA7E684C237CE55873259F641FC7B1B0AEFA292
EA1CC7A65500006E81B8B032CB4FE362A303027C863417BB05F19AF229B999FB
C9AEAA338F27E2400C41C7ED6B13611B5D4280CD86030D749AB6F6C92E267692
732CA9D1F8644A06CCA92162277117AD4B234438CD629E1A3C5F3C664F29710C
E2E342E2E2F177AFC17AAFC6CC3AAD84F8335126BE4D8FEE7154F0405FA9FD33
7B70942108BDA6688DF40D7E5591DA66F1AFB7118FC6602E32F61E1ED328733F
E5E5AAE0106CD9973FBF40889DBF8F24BE17DDA8FBAF89F1033CAD35629C11DF
30CCBA83C329F37DCBCC3C5042012F635ECE1205CE391B89028B56AB8236DC62
99C79219AABFBB8DF740C02582AEF84CF25A7985AB770AF5CFFD4D5FAF153071
B612210C20BD1FEEC5EC5ACC544FA18B62334C09943254B9F84A607310D791F8
7CE70CE792C19B1ED672E41ED3B6A95A1958EED1B1A395CD3F93E15388E227F7
D3C2200DB9561774DD6D4E62CE78EF4DA12FB61113E9B10EA6ED34AFDC4B8EB0
A825E33BF3B8C917CC26345FD77C1B37C56CC87C4A7CBAA1BF7703604C043A1C
CDB1FE8CCF5FEC3301220D51EF1B0D1195CE1BC096415A429C2E525160534D79
A31E935796F8A3307D9AF6A28AD65691844D890EBDEDEE724216EBDE9F505D96
91618BE7A7F135F7D93165EB3CFA357365D183C826D483003AD4C9C56D178DA7
4E69BC472F5575B136A739F7D87A27B22FE3456221BD2CE8C7A34455850D5141
D7FAA4BDCB2AAEE96B3B25186051580818B0749C13E62EC40E4BDAC4AAB85981
154F56ED5F8CCFE670430C76BD3A1E56CA4864EE66FE35D276632938C5D0FCE3
A6825AECF8222CE596D5AF00998C6C694D2A39DBA481E0C7A95F48C65A73E54D
771E4EF1A91C7599CD1C52CE0F1298728FF5162D6A341FA2A935BC9E8B1B6CB3
6B6C77C2FAA1D712B0EA3E858FF46CDF9893ED5F8FA0C6FB3C509B252E430F23
0EC76806369716D68F15D7C7E499FB005DB7C1540C266449833D9607474CB70A
CFCADB1B9773994734F6AEB1F2BF02EDCF0C968B1652B2927AD1E898D67ADC22
0275A9EA74F8C94C5E6FCD6054BDD34D4E59340CA51DBFEA7059FCE9D62BCFBF
F521E314AB4F125343E90504BD8C3E0C4DEF475F228A2372E5B7634125AB806F
8AC1838EA31248BA6716FEAECD5FD3CB86DDDE38062AF62E9FA4E03FC89B77EF
D32CA03F1AB50EDDBC59C199568000EB5A3C9FA1C5CEF0DCE30AE825935F1C07
A10671754AD1548D7D32DB14D423AB41B8C13E4A0808D451A68BF1FB892445C2
DE8CDD138FF989B1C0917D9223D100D1D77BB9330E72BE5E80E688C655AB1362
9258466539130609D2A976AEDE1F637A73A6C01555C0984F52027BB18D195CFE
C33F3B05BB5407B6FD8AB3705C530F17E97405352CE17AE32FB0C080542041B1
69D97A2586AD8E9B0612D414250AF322097C264D16499C68C09A7DF9A1230E06
1A199F8087DC7A899E1081EFA859692997257C2D91E1252CC5E45482B8ACD247
6CC172D927C43AF5E138A6E29C9022DDE0CA8D8A63D18E85E5EDD49325A84753
6F191BF5A62CAAEA933E41D6020759798E706982960A3367F899837FB5239084
F81B54096DA1801EF973193CA75956C68EA6079054DA0D46650CB814D05A4181
514AD58521129AAFC4A37BBCF4D543D0F908D186E9660BB629D044FA30990FB1
B5C1603658A83E0472D5FF4E0011E9A1DF2246312D0302A462CD351447968C44
ECF1D312ED1925A6BF2442523F77515CACE1B7474F987679EC2BA2FAD4A066F7
9AF60896F62D58067B33A698E94C869108C97C806DE2190F6BDD87C030D14E5B
73DC3D894CBCAB2DC0CB3C110F4BC0E76FBD49D97CDA135F39F64D747EE7DE59
053B40A4A050B00DFBF738DD12E8EF4D2BC07D964CF167FB16E454895FC348BB
E82D16BACBBBE3A449B87BA53723482623F784E76909F41479FDE684938120E7
059B383F0B8634FFEF589278944F91AE8C9F3AFFEDD9027AAE965F4B43379AA5
4D01356DF73E4FA459143B5F4F1EEF453F1B236DDF9F0FF11A2EEFF8B772D7B7
3D4557D06DFF0940335EE0473005C8C4BC2420638562964327B10DDE16535A86
B4579E53B6BC641D1C582ACBEB6C218EA9D72F448887DAE791C64EA44DE301DA
251A900CA86050EA0F24DFDC80205113A94B07BBCF9937F607DB4CF12ACEF533
1DD854190E414BAEC73E2F6AF8E75BD1054C091059DA6C7E58ED2AACA64C5CE4
765F2EF538A7008E0EE3AE1888C9E99557FD364A5186316611B24651344D0D78
237BC6601800B017EFB68A4D34A35F2691206B836CE97770E2651A48C49CBEB9
3F6B83AF5B2C4A0F86A6CBE4E56DCE74851F0E614F43466A923235C1F0D56E0F
642D8214368DC945EFC13FEE8618AE9039473A4B04CC8E23FB511FC6EE1CA396
FDAB27541C08197D0EEC13FABE5B84CD1ADF619584C53D5AC08C1131BEBBE9C1
FA41CFFE840FFA39C517D69E373AC39DCEA99B39B9DA2687013448D8F9BC189C
96505A2C3AC76ECDFA064ADC11188E0B7BB45F740679207ECE532A3FACED7137
256C6A801B16C855571B41A20F2222843DFFC78B9238B8E9B6DF89E3B8D0E674
6AC6BC2C44960C832684EFD56A0EE0696149147D0311FF3970E6C973D278CA13
C1AF01FF9ED602B69A79ACD8882A71952C2A7D6D8BA6C36EB9357E6D2A420DC1
D6947C7478676C0871CB0404CCF4AECF617549384491BB7312E7C2BCB2CCA1E1
FA7FE96387244782CF2E0306966CD3C90402AAFD2B6018DD063871C6AD7592D8
CF19B22D06CC4C3BC49A72B20C0C6C0A36E0C484663BC57F030A1D641A0BF130
711C0DE6E4D870B3263816E831379B76E0B7A880CAD8F4B2560379BAAF977738
74109732DC03ADD3A343E8D18FF89240A0D2F8513F9F40A487ED95860B9805B9
7D6E8E2D21709989070D2B8506CFABDAF23D0179EC245AD32BB6ED6085DF137B
9FD35FF0E91B5E1794CEC3794C16294DC0BDCD0AC8C4BB8017B58269D1718009
5F65F77B4121F0FAFB2C425FDB74237B4B926C86AF41FA0BC59878C3611EF2E4
51CCD3E804D85254DFA26596758A2A9C01B3C3D8428989B223F33C4E7D5249C0
A7C9E9108D9C5350F41ABD016B58A9D69B6A72F632C1DA273934B37EB7431978
9F6C801650EED058C86321AB8FA42F5C91AC9228D25DA7111284BEF038185330
55F5A03B87EEE5C46A507708BF2D2A6A26C6FE94806647A10E9A76EB5F108141
9FE3422418993FCC464C124E3083A6738EF1206167016A7F6471BA52815E9C12
D3D7575410A63733EC75C497B9D5A7FBC985CB137C42221C2859E0796886E4E9
8D9B044E32E5276500CEDA8C8E3C7726A2E641D87B9BA98BAACAB7D8DDFB1AF9
496A36A57EE7050ECF76AF76B4D6E051FEB46B922A4A7A2029E40B2584F57013
7FA6584797BDDE11327EB1BC68AC4D595E9A8E587D8B8760D933878889EBEA1C
DB66CD57B72C8A38D87FD06691F8E989621C954DA539DC1571A8A28C1CA33E6D
9196F9B4FD906E7DBFBD9E97303E7EB27590609F2F41EB8C82C14CE60BF6217F
D3EAD880FF486334D966D4B33DF682DAF7C9B522BB7979F175F7B70C424E47C9
51A0AB1042747FCE27C565B9D6B295BC777E6D394FD29CA23E01EB7001FE69C9
5B4B095836562F6F486F9C307A09A010E9A8CD2C3C36C61598BAC8F31AE29B46
CD6BB7BE5CB0BDB0D989F6757F4D32A88B2A9FF9FC6F3EF211153DCD89E123C1
1D928596037F13A2CD78A55C647E530352D643CDCA5FEF8C0B2595801EACBFDB
38F47998C2CD0DD0E9AB06BCB22D752F1B0A43B3DD0E1474415E131410A6307D
DCBF3205675296EF2EB2769A379CA05C4D969C833520EFB4D2DD74E2FB83A0AC
B6AE0F3D7D472C0125560BD5329A3A002E8A02AB0ECD74BBA5EFB660B8CBAD91
46F7641BF42629127002E6B9D69DD799D54721AC1259A5D3CE36CE55612D3516
5138654B5212D2B7D6771D1F7B364CEE832E9864CE8A9D69CFEF5E9BB6C0E791
B5B0C4573CADE3F5DD6978168238E506A7843D9CBE574123D0C80BE29BE4D7F5
A5533D1865D78F4E4C0B8F46F44E6A57C2C6D1755B11961907ECD315037B0CEC
51E8DF4B61F36FCD15581041C014F503E54474CEECD043F9119D25693CF3E1D8
250CE27817099ABF8A65B186C6B64C000DF261D020939F5024447ECBB7CFFE60
E412EC9B8A08E18292E50280DC150A36E54A79B3FCD3C5278CF5CC5B7677F487
A93A3813D9FF2D3D3B1A7C6B660B4F75D9F820C5CA59EA6378CD05D968F8D1D5
FAB59D5C5EA8C624BF820B1D5045F5E2544A2247F2D0EE14C9F60DACED04E4C4
F96DCBC61AAA0D5249756F1F74B879A5CC9995D58A1B95C6AE66CCDDED6B1D3D
0DD5744A0938B7F6617D5DB72455E0AD451C86FB310957A53CB2DAB1017FF5AD
EF48827148CD0A806FA2ACF1038308AE43AEFDE26480076B5C9ADB770607023D
66A8DF81E537B689FE24B930E1603E945225D9A84E8E34A50AB5693DA39AA2BC
5CEADEB59F51C67B6B922E636388FA032ED39F62A73230BE7242668C135B2793
772F854045944AD929C008599E593A977885A030AE01DB7EE1132214E4322FC9
60B0619F5B9B104B795B02B114340588F5DFC596B1B132214FA28B10590DFA9E
32D26300FB665BFF559BD7954EBE9542A9CF93FF0897B103AF30E4A3A54E3986
335FB07DF40788B2D73B5D5037F90A391ECD81B75EDA6FB4CE5FFA19DBABB3CA
3E6B8DF4832E6DBF41289F53F68FB03956F9BDD7C115E7EE37AB81456EDC2701
ADD42A26616BFD3458B408F83B8ADCEE957E834F7FDD3E7D859C9845EE515AEC
273AB0FAE11C2E1C6C41C8F33A8B96EE0D6A05CAC15C6250CFD74B449B318047
E4C3D1581F57200600BE083F30FF7BD46F4BA6731E7073E18145B1D2D9026F95
B829F93C3EF754683F9871A3EC35A1EB07CDFE54B305B3A9CDC9D6B23783B233
8C183C16F7D0BC3745C636F77F0C344EC7EF87A2ACADB1BB69201E03907A529F
B3A2E8541979CEE207CF91D47DC45CB37ED818CF6CECD1C3823F53AEF92A3F1B
37747AF78AB05F1DF040294D69198995C75E10E69288B406EEA67C60106EF9BC
3EAE29F4A506BDCA6CE26C6BEEA64FFDFAA93B0EF8E3171F02222DEB9B73E49F
379E2C8D2D983F3CA5DF7ED10BDB4FBCA97BDBF83F01E61C0EFAD5440D97DC5D
2132AEE75CE89648C7313C07588302A53419C9DD4AF7CA4A880875418B7F51C6
AC562393B6871F6D67A1E18322EB4EED0821F9F116DC3C2A9AB3725BAB56D176
062E0BCF6E01705CEB114B14106183F9718B5D877E4AF05C4D56D49D8D3353FC
7DF3C7CC3616FEB7836DC01EEDA7C8A4E07867860FF20216E56ACAD50F430653
1F6782313B7159F73C1C98A84BBFC012D08A05CC66767060ECFDBF6D6348545E
457252EFDC98CA97AFEDD5BA3A0283BDFD2748D3399C43447889E71FBE493A30
FFF747CC05CDF973F8A970F011FBC5F1032FAA255167642D6CA5AD0FAEF4B61F
19172652E6CA873D2C4D1DBC107EF1175B1262DADEFBBD4027941D1C2B930DED
9C5415E6A15689C6134D0B00DCB485D18FBD2E0F4F2E424496BDABFFAEEBBF93
B767F93AFAC162B8F0E7FCAF24D32E86C68B76C2C1DD1EFA4DCE7EDA5EC3F51C
0A805F5FDD42340C05E03C9D95D836DEB64854126EA0AC3425A2D7F6C8BDCD0A
E6F42CE8FAA73696B073C2006E6A4963027356A1DDAEE32E251C5E2CF75E4AA4
8700BF643E920F8604C2CDF0C5A8649559F8C6484B6409E16A123AF503C12F0D
615F672573B2E44618387E87FA566DCED1941E48299F67168AF7E61FB4841785
DF837AF74EC2DCB1C5CA1C061E51C6D024E98DCDCCE533F88CED4C3FC13ED112
4573399AF78AFCC1F38F0B0800EE0DD09F32D95B1DAE82D805D98AE0A8D09337
2B9B424A8AA46C873705862494166AC3648C0C8BECD8488619A5CBF84DCDDCEA
2C13D1FC45EA0FA5DDF8C644DA14F5AE41380E4BE4B0D6294E3635B05D96B50C
6724D4578229078B5C8C93421BB9192611B0C857DA8AF592FDA0E5F2C0BA88AF
FD89252E9B298E4FFB652E3BFB145DF29ECCD1EB155CA1E70456701630713ED5
8B8AB193F2790B535D95DAEC72A011DC3D1A39E856F9FD2C3086059271359012
BE8994EB1A222C92FBA4BF0371EB8466E4E5523392EDDC45A57070EB43EEF7B6
3235C97DEDD6A34336D4161E5C19B34805E72294D75691060AFF695195654E87
8B7432F79AB7C9C64C10C84AB72B896C0804B6A3EEE55FD2DA79C4F1A8A75ED4
C7283A31F3A1503754DD361220FAC7A680393B06D5C56F301FBB7B0A20A8D682
30E8FD28F9505E12AB92162F73E40648FCB36C7BCB160B872E2F5D76B83B43EB
9C6BF77236DCDC9CCE0893BBB6EE54AD51729781A48D0EEA390F489B02638E2E
C3A8BFC43DE54B4BEE3303888E83268264554D22EC84675E305A49887DDEB93F
5B2BF10807DC9C3C8DFF6229E81CC3B204D2404E098592B5847F5AE5A51CB5F6
82A7867EE714AB354C545BB1EE155EE5DA0B0611643525DAB7FD70A30094A4A0
1AC307DD51248D34AB73E4101621E398D65F59AF6DEAAD1BBA4710EE0373CF9B
B096F29F3DB6D73CE4BB2EC9D0C1000C52F08756688D83BEB0374230FD2DB094
472910FF74914711E682C692BAE7A804E3D53EED8AB9A74C8AE03C672D4C85AC
D5AB36A0777E5F931FDA06800A254E4CD0F2301019FD648C4CB0AC8D466E40C5
FEFE6726932F89A981EFE2222E53C9794ADD95BA554028EA96FD574F71432CB0
4D1247236C5C25982BB0F5E881622BFF25A5069CEE790AAD8835192204E8EB50
64558166842209685283D6CD0CB89C9E4DCAA67FB65EB27163FF3AE09D00BA95
F3195C1CB306B1AF6BF504C3BD0FB87F46797E7A9EFF4855FC8E30F5E74B334C
4E3A36326AE90E00135B37D4CED49A3FC64EAD3F9997E18A980AA717C4CE7052
1076153DA2389B5D24799FA9FD4AD0702F7E144F802C1B7DACDD481422EB6844
3F229838D86F88CDB6B3CF11B65719A99A0751F32604AF7A97E42E28639E842C
9D034DA7D1F9A6A1BE2A30B80817D27A149DE3AEFD58BD579A337D56B39ABC90
0503F0A056B5BDFEE0F1CFF6178CD268D6D39E7A5B2641CBD359A17F50274810
38EA4C04977F323354AD975D01AAA2F058960ECAB2866947B09F2D6BB99378B2
A9E952F4E5AFDD30C1F9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E08614769C017F6D4F14C52D7189D4AF8CDA367D8B04CA8D3F2307C
0A7A179419A80695912F456637F539123745CA8E696E250E0BA6B7C6277394E5
98A8799C29B6272613C152B0CAB05F3C7795791EC9AF2BDD416861A3D13FA858
BCB6ACF5BDE40E5DFBC1A171A7280E8FF4AC0D4C8A2199E9E2BAB5CB9131A76D
EAC166A7C449A549EA5111F1750CA2C6E1EC6F00CB6C62BA52D17FC66E06ACC9
1E6B858F9393AF9AA5E69F799E01D301B647DA57225C2920E3BCEE9D09CA5C60
F22B07F24A26DD8F4D6F9C78BFAA8D12A21531E713B80CD03A5FF4F3BBA2AD82
3BEF7DA8C97C30F1452006AA3B1A168483F6EDC4089ED02E567923AE6DBBCCA4
8C246A080448200C2A29C34AE6255BC79B73AE14B980A7C357681BB0962894CB
DA32FF2B70B21AF4D158E0F74652684A7150D0967F83E13EBBAB33588541AEEC
0DE8C53851845A44FFB46A93CEE3E8A0263882542F7F103D13C367EA8E1ABFAF
6486A9DBF6668550BE7858F5790BC87C66492C0FD34DB08EDF842E1AF58A09B0
85A9B7FA402029FE2439769D67DEBDC8AD8C861E90E5322951A2904FD702766B
36916DBA8F9C96141BBF4788FA435556B2B4E1B37DE4506ACC4224CFC00A8F83
33941A050B51B9508758F4EB2DC074D799F5116296B8822ADD743A043F9A6426
88D10767A9F99A072BD4C88CB579B34687BA4953B96DBA29F33211B12A0215F7
5F2F873E5074A7D593DAD0EDD97270FB9A87BE870321A49958B10E3353D075A1
E740C054E9AA191CC6A2B8E854AC7E02D6C53ABB1608ADACCABE3D5AC2F894E8
5E234F72A1C099901DE1E49328D413CEE1295B615F37F139B70238D0C3177995
99A49939640D06478EF23B0FA6C4056FC2D15FB7800AF689C6868DB1E0A5D946
81993A3B3C100B5FA02EC334CEE85D1801AAFFC4A9253F6BC832A0E63EDB6F31
07FCC58C94F34096603C9E8E3719950691B4B5D8C0BB08883E09585EB7530664
C79582CCDFDDA4B4E487A57D8207DD18420AF0A75C5534B47DC12F571F827CA7
B93D28D1B195DACC47FE5FDC29EDD6C97DEF92E40FA9F957D6EC2A2902F7C4D6
8E837E7D573068C55D4470801D8E2D6B5972D30B54C54E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DF7740107CE11D9F1E95F04ACAA904AECA8C
66082082F59CB8E5E7A96FFD63BF90F69931F3D5B5F81C3E234904D5FE5CCAD9
17381670D1548D72FE715FFA30FEBAC715513E0525049188B9D91BF7EBFF4444
ABA5490DC6A5CD8C1BF3EF1341A126980C7890794A85EF6CE32D227A9532B61E
E1FDB83CCE8849508A3EA0FDABE92387B526ED0C9A92315083DF5BEC01ECCC91
62D605160067EB251A8B40D3229C18FF655220D3DC72B74618CE98CDB7E370A0
BA04A0FFC4D3C3AFAD0869003BE33A0CC74D81D8BB0D87E5C0AE932B4309387E
9DBF69C52ABE85006D83B9020CC042DA9597CE1A2C03653896E07940025DD68C
11C8EF41CED336BB116AB3BE6175D6DD1CAF80144DD5D921D9F734EB854BE550
341FD8148EBCF4482E9D97738693472583DD53F4D15F219219825BEA068392E9
EC101A958BA3D4C45B156302AD722B13F05F71D8C40C2ED1766F45ECB609FDD6
6F3014B11E63D70CA13D96BD5AE19DAD78AD44C7C99DD91D71CC2A3E0EF74012
0DE42BF30706C80B42BB37178508EB5EB02F088194A4AEF86083F9A849BDD896
A9B2F6F431345964D7EC4F60EA071D0061F16D88796C4BA0C670D0E715ED9330
13619BC67D712BF7CEC27CE0B7ED8D31A29D7F2D8884AEABFBF6919D7FFD1E7D
0B2FA582811CDA7DEB06661A2D27741CECA6F2956BF0F2DCDF5326BD8683B5E3
828D8A7AE0C2040DE5F9ABF2B4CB8517A00888053AE978BDF45C9B464B9DA129
0584B298711CB71771E933AB92CA36C6D06E8D4E51000F60EB69CFE870326E00
4D436C27CC46EEF80FA1A05AB90D788643BDAC66F405924BF40E49AE3D7453C6
30FC3431FA13B333D69F672BCD4D19F6D70059D309B72D0A48EC241A28AE69C4
8B50DDF960297D39DF2B708BEF605075EE15741BE0742A7D74895BC47DCAA02E
982F9ED1C700AE14F72B455074678DFDBED70D546BC7E2C50ED4DC57B3D87551
CE86D4E2DB7607F065FACA01BF64480CC5A1E8891B692ACAE9C6921FF496F522
F4F6B7362A3E60B1A2E645D49F8DCB88685B9321172315171071A3F8A9D704FD
FC4178A14780955A89C2CF9BA8E32B49BD096999887AD4D12DDFD616EEB4FC37
08B3E83D87F323E24EDF17B8187F0EB71EA7D10F02928D6E29D2F9F2FC89FC1C
20F741AD7BCFFE1FFF0D4758515A86D82794F04E7E9865773AF83D1611360216
3D500E1FC9C23244B8402D1A983F3DECBD76E17E95FB425AAC96FCE977839530
DFDD8B9C9935E7B787F601DADCC81385E9036778E69BB90B0D130A32445972FA
44213D14B42FA2BB0D4C4560D8DF4183D3598FB9584A4433C91319E3A1614154
78975E25D1E928C5867A495F88565BA516314A268E9A30EB41F7C771758410E7
D1179567B10FEED34039982ED5E5664949215B7B7C699903F93FA67DAAB60FAF
8B43F9409392E4D9197B434AFA1C9FBB838F0E570E8CF04E85BA16BBB3123ECF
3733A72C364FC2FD02F3F6970F6306B22213A308C0C5BC56711B73E44218A69F
41A55F3C8296D12EADD820721F4C7AF96CF1DE87958E94147897470374D33501
DA608DE239D45886741463E26AD685C330FF9B4020A256C0820CFFB71A8598FC
3ED02114F4C179D7B00C40CA23F99A91A601E5E290A8B8D528BEC85ED2AECB1F
2868B1AD53080831000B7B82E2B24477097AA2DB2E8385C7B35F69B7D06F576D
7570D2B23AC52BCBE12DA950703A90C352983D6F88861882EF3B6D43899175D1
89B06D743A93B49963136BB32D1B6B235AE5810F201E3B2C79E9201295016793
5869EC0E7889E8F98F0A8B4645AC96636979A8D75386EF83D072F76E195C0E3F
2B12B433D7DA1F634865DA6E5ED7555195196DB28B1A5318E868D3EFBB90D58E
EFD17FB418D20EB82747C47F18DC85145900305F3881436FF37CA806711890C1
AC5997F21A14E7523CEDB295474F3A38E8A031AF7237DCDC24831191B7FEBAA7
946C2AA4CB8888144889677B31D3C8C38C2EE39B6A5BF6B667F72189E90D571B
49F6965350470B7AC7749809795D33F0F3A475A8D9D46A50C126DD7C1F7BB870
59684FE70A0DE7AC63225592B42926CF2AC2CD8B3C4A090BB25FEBCE1C41A775
AC5C3DEC9DCCC7E4B2DE82CDF9793E621833FC3E9046997A918D26C871FA7B33
F0B669AFE85EB30D4982435FA36C73968C2409AAC3DD643E0EFE1857807BFA0B
97FA21F94E9C9CC7BD30C73E7F151C5C6505DECBAAD59A2B2158B7FF166C507B
49AAF6FA4A71C74683F2BFB99BE54606BD96D7A485AF1114173E61A36005E195
72FFAE0685C7C24E70ACB8564454277C41C28075AC8FDE7784E9FB3C39EDD64D
59FD94E698D0A65005A59FA1C74FC929BAACC1D9275B3C3CC4A76F9D5C431044
C8C0A3C14544F068343D3ECC39B6820E33508184AB9F0286C64F328339EED21D
83604BCB1609A7926169AFACFADE342458015F57983ACF8912B5CAD20ECBB665
19EE8B3A333B63D44EF29D334A64C61964CEF23027F94A43288B69A9E79012C9
C5064D6804B4B23FCE995D5060C9B13CA0FE121D17B57524F6D8E00EC7F51B34
1A01D47A5FFCC91ED4B7E13900CB00E970C83917341C8A74C4C04BE75CF00DFC
C413B504773D9A5D63C55D55195909B820B4965C880D6A11F2D202F1F959D248
C6D982B908FDFF6E6135A30D1F0CCA7F03E52F060655DED219AE758B5A5537E8
AD1DA5DD7393D7B8CBCB49FD9FFD260F56CD6070B9165275291022571AF7D103
6FA5C7935303AD6D0DDE22CC3126DA2FA88A174649A0504BBF5BA6C59C6BE0B2
BF3FBC77534627AC73F2027D99026A671F83624D4D29B082C901E3E1F32E3F90
B51313D7430BE1825C90D88DF40E7C91EF2A16CF64A53CCB1757BE376972FA53
7DF301CF7A41C8C4C3AB23EBE6039BABDE34DA37BACF547F38B832DF0E4167A1
A8C656D66246E89A7FB298A96DA2A9D408C119D51988265324E090E6584F3EA2
AB3D9A378C122A1C3480163422D6F9CC5B133CB1B2FC237FADC20659B5F19B18
9771555403B83025FC251DAF1CB2DC271F41BD9099A31EDEF7C65C5AC1C17E22
5F975524A20C452EB77B9EB60B3B446C3A5030AC752C65104F6D00146DD50B98
3B1028EE4FDC7EAA06594799CF96059C9CD621ACD583D527CD51A75B939E4932
55CB5BD83002BD6C986D9AA1B07BB7CD33D936A234149ECD5BB2834039C9C2BC
84771199CB1637833A4BCCB240C1DB56B2ACDF379F91659FEC75B3179FBFA7A5
8A319EBEAEDF306CCF2727CA44BF53813612BC821736B1BACD469FC371D452A6
C23E1379381AB6EF650938D7D1D90A82EEF4C84E01FCA305E0699ED2002033D0
851E28921CBC7B5629158018D91CA8EF5D527207AB1709E1A3FA4C1A848A13E8
3EE1FB4E3367DE4DB71312CBB85ADD21D5A1F98AF889200505C07E64B2D4509D
1270CDBEFF01A02D940F178B7B2CE55A8F36653841CD79FD3514557D6911E32D
723823EC950F683A6BFB55D22DFB161E1D6B6DB4951CFB1F1B7224B598AC585A
FC792F2F5F04FDB35F1A3E41089C0A6E1E7B4D9287CE71718F81073EBCBB4386
CD76CE12B7531AC67791D0E6842693642532E9F0DFAC17EF696E3A5BD9BC2C57
BCEA7F68B2400553B84BDCCE18ADF4ED2688529F8F590BD0822148A4F5B423E1
5C8D8045173BFD2359E59BF8A7967E94CBABF8F1206501A7BCF422C9A4A46BCB
3A9089D8B41B2CB300792285EDC3A2249FE4068D529E201B45DD4739C514452C
5BBE2C42FFFD53ABAF7ED904BC8AE20B2B15F19F8A046074A11770D4FAD1B1B8
D4D0F6BBFD2C717646CFED938F50F5C1D8EF063ADA63F3351D5E8B2A5BCCD284
480EA5AA2907D82BA5229E9F8D232BA28D8F7C27EE929233D54793954B483350
9E1FD137D8B823953AA248937D59F5781BB3EAC35A0F9FEF8D15D24510A6AB4A
2B8CE67E6CB7BCACA4693DF0370A98042E527BD65EC1E77D32A07C20B7905A1D
4BD179AE5684053CA89B477D5A7CA9BE21230E4335502C2819D626576715E6B5
77374C6F891A421CBCE056A0158E03373577B6D2BF8FDC26D77EA9BF76C35A57
7025504983813DD7F219D0985B823093F92D049DE6A73D8E7942C3B7B50DF9FC
E2D65B769292B48547DCC1DD53135153F5E978E40E04F2BC627789E469307028
F74294FB777078BAD84FE0B9E27E5EB32D9040905A654B57FD48914E72FC476A
3D4019D08C25E598B3F200C235888D9E3D24C7DC65F407F99A68AD7AAE841AAF
54CBA525E3B94E09048C9A1CB787B5078DB3DE9178325A8AB16E3C947A011221
956AE269FF01BC59792475D9B31C3B79CC12A12989636404D1AE3271837120F1
F018CFBDE77FBD3285F689A85BFB655736FADE275B118DAAEAE947CD0507219F
411B53860AA70DAD6D49C257765C4801FB76F1115A0A0AD71B28FFD7708ACF17
205F5D584C42B434EAE97EFEE20A68E59A7C8DF2AD01D024C15591752E36A8EA
33F54127C841A107958D3CD79461408ED2E4C5B7D00F8CE9D7A31F7924228A89
E0645CC5CFDC156E75482AB01D1425FFF604D25E90D4F384A673AE9BAE545DAE
5B36EB0402AC658B2A1DB3DBC08C1F72289D2F0A57C44593678127F480DB722E
01BB158D43DBF3DF9DCE6C63F61FE293146B355777B9C0EB5891CFFFAAFE02AD
CAD1982AA51F2D946ECEC04AFFD9DB5ABFE6B08069C5A9450664751BBAF49819
6299EEC281EEF14315CF0F9F714229942165A6E8E5A01BA202CAEC8CBCA4BB45
C49782D9B2884339D885C49302F7FC61D97D8DB121DF70CF32BB8E6121744435
A6C21C9DB0C939EB45253B4022AB3359D2EBB743BEA31FCF1177D64B65F245F3
C8B987ABBF94ABA8DB33E6BEEB4430E03923EDA8E2FBACB8D3C58CCD07BFCAE0
8D822B1651E4DFC31967328CA6364D5DB8DCD4482272C24A3B7607717FB43013
DA06FF41184DEF3526C06FD5BAB6F1919F78E431EBCBBD0149BC294A9A296408
74F1BC3549FF45547BB2DC104E45B02002887372A7028342D5DA1DC46E0B709F
3E069B85A57224B291F935CF503336C056D6C0411A61468B3B727600A2734A9B
3D141296D9BD9060797845C65EA343C2122F18ABCC0D24CC8C08E7076D8D7079
F3CAC6F3CE6BFD3D847DA4F518B81FADA81814332B622EB79713A20D44F2E50F
091E00982F4FD83A14682E0D74320A0B649CC38DD4B2E9218138D27F49FBA3C2
072D491A8234B7ACA789EAE744D803921A773BE8A081FB687F9C593C647D207A
2C4C66B6B17090656A4B1FB5B4F0460EA3AF086EF1D9291FE9663A4F2022DACF
26DAC5A32458FBF75069C968FB3FF4848C380C0B1ECFC66C58100FC151391571
F69B4EC965F20FD1C0F396053B668EA3FC26B184488B73E32595B2F9E201CDA1
889B7D6498A0F0C355F94E92659245514FB4863BB9645BE24281BDC1FD61013A
B7602079B3C763CEF76E976EE6BC32FE658EDF0883371DAAD3E660F09D520E75
E0F3A92E5909A8F0811FE2758B6161A8A960546C2617D78EC3EC1406810B1D9F
FF19AE1DCC2AA5081B915CF2A24E3D997127AC4128988F49B6C70DEF077D7850
BDD5C735BC0AE405CAF079FB5E1F42C453305508F2DEDDE150529A568F66A773
6D8FA6A6FA2700AD236C6B19BE738E626F2AC95F8A624BC961432ED9AE3B92A8
06EB2F90AB0BE445530439E0E8AE43B43A15B2D32C4A7B17865D9B7D0FC9DAFF
F25889365D607263E8F3AFDC577DF8F4B125C0BAC2EA874D558B0F46BCE1E776
CA6C311D84D4D071C1465C95E05BD1F6B603A8E5D1E0302A3F923AEC792F34C5
A9EE4A2883849E7CC940A4B4EE5DFD07ACFFB18E8DFDE785893B5EFD6019A594
F7674EEB53294C36C60F1F06698D3E30BA3AE1061B2CF5A5898126B5CD10691F
B92B423F318E96805010FE266C83C8FC2BC4B8FD8CB01EE268EB9B4BC5367497
AB17B4D2307FA2031528C46E49AC34635D0CB50E7EFBCB423F463C06F87F3046
5B40B6014C294E99F10136EB44A8DE875A4D6C043CF9F79BCE7830E819AAC9FE
CB2B5D9B34522F0F346F762779E369841C42B4988F48BEE08EDEC618A6BD6E46
74AA5F3C5728AA57F99008E157FCDC9D79CC6D60881693C4CBF6215B2B0B1A7C
67C3FEA42EB54F22E9A730AB8D4D5EE69C62F47CFBB85BFDF8A699A64CFBF0FC
A8D2C584AA458EFCFE0B0E04C9FE4EEE7FDD86D0996B5D111D5565C3084C9E52
819B5FF425210905BDAA9AEB535B8769F00F9C94C86199E443C252CB4F4DA0DC
C64C91B7F64A553BAECD57F4EBDA26C4A0694A0C7B838BF2BC337085D33E5320
7552934829824046137CF08C33C73771F899F8DF490D177E72F543F36EB6DCCC
E9171FE3C81517DB81CA5A9C55306AED6DC20E867C5897138683452EA8A986BD
2385C65246A71EE8354BC251E1B64DF5D843B0514647A70CB32D9A9EA279638A
6E7794E521E1447DF673F327C0031F415662B8F9B31E1C6F2CFE731360E35AD6
0073525038B0684FCB2D97DFC11AC139CA000B293D12E5797D09B504F072B85E
8E4352CF9DBFCC96B5155C7598D6D71114D161E132C41B5973FD23BC99D34FCB
2E6586DE317EE3BC34234AEDFDDE797192B5A2F9860B20D5214B61CD6B1DE194
DB09E347EFE39C2AAB5DBC6B4D224FC0BD03B4E41501101AF505A1C47538C692
108055EAC99DA91CD3B0A2B7AA4D3E146684200650870F0B9A39231246409F64
587223CBA39888F794BED5E77E07C36E69E259E3E3D4156C9152A59746F89602
9B671A1993426378241B3230E538EA28280560E47542441899995DADD36C35F7
BD089186F1FF6BC6F5C4370E3FCE02D064A643D3F64AEE679B05EBAB7859820B
83A62A0D2D3A7BB0659B58E3E4F021F638EAE7F15B40732FE2BA1F6ADB2A95D5
64B19A3035E27F66FA61C275734240E4B00DC0E60C98FEC6C11C49CBE7C4DC80
72A6C8F9C33E90BD705474E6FDFA990C996F1A54AD3BACA5617E1CA933E7FF89
3E32E154B890317737F63BF2EA00951944E8205963AD84F305C99A04E9DE6CF3
3A6BCEBB6C36374EB7584F372B9A40089708F461991A7804A762D27BB3031255
8EC7AD3692E77A34193CD294FE9CABC0D51AB943797023065C805B19DBEBE4C9
A81AC255E302EC5CC7560001713655F54E759FC4ECAFC7C0DA772B69FC2B4A13
B3B4891F94E4829E3B4E99FDD2019CCE96E0CC6F5A17D0A887B5BE606C0A21EF
E6853F86AFE1FB7A6A0A8421FFB276424F50CB186BBCB369B984A2B2BB546124
1002CC42F60DAA610BB3944222C01F0BA82B459FB1498EBB9CA680A624C20CE9
5AA5B5D4FA8B02D5B7D32F030C155D3A2FAF6407776001F79BD11779E217A9CC
23650C429AF024EF5EC2592A32E90CF70EF4A1CA0DFC98A7DB137EEF6F9B96B6
F4BF8514A9BFED3E1145BF13B13CED8937BAB81F8FCB42A086EF56B8D16A8028
91E2161E824029AE78FAE1833DF62CBE183F6251777E69372CC0E84BCA862797
1E08828144BECC3142BD83B0A2ED12E3D46580F0345DE59440BEA478CEEC8EA9
E1EA5883050D0FB58AFC897FB6687B41EF508FB64B4D693D755CDA51BAC2A625
B109E467E910AB9EA47FFE2D1A175DBECE19551B0DB6414BC23BC256CBE8FE79
DBD95553AFEB4B7C2BC018EDE986D00D3F68C0CBC50521346A87A21AE5DB70F2
E2D71D2B5EE0C3F03A603A161713216AF97BD0AC022F158043BEB6A6820566EA
D71325D69BF3460E9C3776F41FEC04B5C12B40DD1B386D89AD8616B4153F908C
B26DCA26247A2D23E1068AA8DC7910808480E69702019B6E71FC3C112A2667AB
420374B85A3C89DCB80DE5C1D79481D91814C47A0A3BFAF7465542D6822F564A
8EAE1D15D24FA0E75A402A26F8A840193183474E4C438512E4EDC1C82BBB16B6
4D84F21DB82B4F4A1CDCF5A561849F8D396EE71AE398A74F66DBAAC72AF65F4A
1828236BBC63F2C9F25FEA61819636683431C0AB9223ED294DC6311C566D9748
76BF33F7A4D2380379FC58B32631B8F6C5ACFFCD25915FD1F4A888BEA2428F28
CA6FC859BBC57ABF1D12D7540EC39965ACC3B63CA4E8FE26808EA08264BDEB1D
A81F088C9AE16443C5E70BC18F029243D6F681B7BB0FEBA676168ED633145AE0
E97EAABB279579DF674534207FCA8C9AC9557F97784FBE0050F215500F281FDC
4239732BAE5C829A64F189DB3FB249EB775AEF178D33D4EDAC2A39A813FC4891
B49E7775375100F55E9F16B9F3D15FD4B7B6E0580904A27FB07FF02D4882FEEC
8C946B907908E7851BBF2779EA237021FE653D031928B5E86B50A5A15F4BAA4D
77BCA32DE67243C4871F75B38BDD6804D2D07B7DF4172993E0068A1B74F45732
DA28DF082D1AC8D447982AE814685DDA19B52F6C77733CF3FAB3EC61CFA865B4
9FAFAEE9506D2F10DEE673E177D6279B6D7006565DD690BE86152A3FF14219D3
63B0105CACD4F013C7F2D238B7EDA1CA4AD405276E3513DB07C21861CE8A21F7
13D83149911CCE2064C0AFB4D935B09F36A432EB30CF3C66C21426637245657B
86A2BEDBEA23EDE718B706FAF7AB4D8D807961392FB22C4F8680188E87C33594
6E43EB001FA13E44683DC6CCED04122D1FFF56BB1B3D01F904E211AB3D3362FE
A9B831E269C4FC8B2C762E2355C3B2917105F07880B0302D9B4134FE022A98AD
E5093D0FC6F0573D737AC2C6BE8BA93B1BE04C1D3D7510A603C11FEC72AEECBD
604674650E4B0660987317423B361FE7CEEA92A4B32467966BD1C113A2A3EC8F
AC9EF923002CEFA1CB9EDE40AB003C822420A9A4C760690A13F56BB1A0E289C7
A999A4330CD4CA8DAA5B4BB237830400478600592C2FF2A519E5ACA10F637832
A71D7AD9788F635D7C1D238E43779FC2850256D81DD96016886A41B74ACA861A
AABDE11879E3ADCF4CE6147FF458D4AAA0DBBF4E4BF9A7AE1677EEB4BB3D29C2
241E1075E302EF14AE8BD323700B083E6FB9B54FF40B63FFE9B9A16A38279A44
29B293905951355C4D4A4F65BF1A71ED8B91BDCF0E009CC38FCBE921D7D2D3D8
77B0447946CDDDA889CAC631360E013D4F720D99CF9C02B4C1C5234C10425516
5BF75291EF6E74899AB3A9D824CE570B01122B8DDE790812C4251449DFEC7067
7B8B3BDD77FCA2B98562AE673E6D288CD2A3095CF4B93D2773F4C10B3456EBA4
9181D8B7A384A09170D9DE5F61E1FFA0ACDE9AA68FF47B21A1B617B4AE15F2F5
C02EBB5C74893583625527FD6D23858BADCC0E79E4EEED2A7788F44FE2170613
D026CC98ACB47E3EF8BB1A0BA110FFD14534C83B5286AED879118BE4F2D2F5B4
D6D5A90B188505175088F301B0B7177AD139137E1E992023356C5C546DEE5401
E1B67847AEDBC9B65463A916F24547591825062E84BF5AC90CAD98F472C8099C
DDB5F3D5062474D0B7DDD69F2BE0EFF90A8E0068725315DAF2A3E82B46C468C4
43FB502408ED3271A2EBFBC82BDC79A36CA5A87825005D32E05A06356AE169D0
57D96F59E5FC80EA6C2640F759968D2172C3A6482254BE2EFD56230A94692248
D224912F77E5C213D713C19E71403114E83232F59828A82927ABDD00DDC69417
700544C513B87939EFD9DF31C42A62BF096B816BF1E3596B3C63E62401FF8E32
AC2D33BEA4BBD681EB4AC7FDE21B6F5E771BE54B09E2D6EBFD77645845B7C083
89F875C168CC03FAE8A0C82756B94420EADF6C5BD8BA61B926A391E8E0FF266F
35E74C00B1E3A31706A6CFF712A5A5B775057AFFB896DCE0E7484FB30B628215
3E3C9B6E2B56D68CE2E2E1297D3C8BAF3BC9C0D59C932DDD7FFA97082369335A
AAA0160B31FD6AECAE1334D54DD7C9D2774B244FBBC13D1F26011B27D2B2188B
0E51975FE4B7BCCC713ADA5AD9CF793A60D8C28AAB3C60C966DA3E64AB0458A4
FF3304518C35E555FECDC007DA2476B611F1F52A0406F36FC045D8FB220D402F
3CAFC72EEB0A75F9E8A3C29947E1DB06B4D1BBCAADDEB2432FC8030E7BD1AC4E
B394446615226D34EE5635E6F4B165D3AE8B2375E8BAC6A008C752A8110547FD
77535048F542DF72FB621AD89DE7AA67252F703EF4C389028018C1AA37D3F368
BFF332A7540EAA317D4A1D2390B36E5A8B6204887605C25E0DFF776A7B407095
AB17A248BC4766A7C2E45E643704BDF21BFFB63A8B9F41583F75A2D1339A463C
AC4F12312900526B412117FA7BC81CA4B50CBAD741F9A8699154EA8C28BC52DF
F62714BBB110A4121E1ED7FFDC64A744A9FDE44F9811361F0B5E6C8C4D85A2B9
A83AA9A5DF9DDA78F22714FB9DE80D3833DEEC7848D7C0BF831D6F2CFE731360
E35AD60073525038B0684FCB2D9442BA0DBD3998E1FAF95B38C37DF0CB58C972
E3A3DDED3902FE1D95ECFE48911B4F84FF71A7A260E60CC675EF417C08A12DDD
A2501C6655411A4DF2DF658F42D355F4FD0B35A2259A0B74B311F18C11CC6302
6D8847FEBBE83ECFCEF5820C6FC3A77F5F55D30C021BD7151232F1B06A8E5A90
540E5FD5922F512C0A83999C07CEB7A37F7751EECFE7DA6DEB238A87FDC41A64
7D79A3E56C4B5AB32B8895C459191023377A30F50EE2D9C8C41FCF68538E054B
3EA6496A486815A6150C8063B5D2D0C03EFB23D53CE76D28074A54E0785BD51D
FFE90077736717DED0EEBA4A5E930A6CE175920C2EC7B3815B58F2A48BC4D4A6
91F1284FB2BDC18FE07B44B71BF2602A64A1FA91CC02AD319F8D42C2A174C3E0
F92D268D63B559A404DCE765AEB03A06F2A4771CF854FE240328C4A2F37B9C73
FA6801A260251EEBE74E7A1D47BA78CAC708C675AA7545CABDBBF4DA73458BDA
9F31F188D5BDBEAF62F00E36C571F459B42F92904B4D0DA750DFF2A83A30B03B
C1DB36ED8A1D97C5D9896F2BFD0D101F03E134E14130A409334FE9046B323448
4519287C20D811074449DC64461585B840CB020ED7EF071525CDB93880A24EAE
ADF171B5C07637E6A2F72B4F6B519FB73BA2A718C137174824F59FEC47B03C5E
B5611852AFD27654A467FF3CA388E840184FBA9D47889486E4F573A87A19E5DA
17E070DC8FCED3EB7C0AED59E41847A2C431ED3DEFC7267AD9DE87E23C25C5A6
1F67864B77D3B6731568489E133C772BB5787ECB23DBE16BEBED01CD6E398E99
1F8C8B53CE665EF509BCABCC03D7AE54FB21540CB38643877EC7932CD4D6AC12
63C1EC08EE0788839B0C980422DA610C84BB89848222BFCDC8FB28D079CE0A3E
0E358320AEA32B801E4AF89319F6B0B5F32883144D56858DB7D425C678755F62
A3B464A0300513DB48355B3D1870DC2BAAFF557EFE61648E12A39638FB42AE59
1FE504A2614B11462CC74BFB60D38C2AA5F2CDB2BD662749FDFF8BFB8A054448
4883A0F02FB4B3781CFF5E1D1550A313D6ADBE9110845142660F556F69906E24
16B7550D5216A8F41248CA8686071FF45FF489BCA0F4BAA4D5D965566CFF3AFD
C9F0ACBCF6E45B59E95CAA975F9D6597FD4A96DCEEF76083AA9BC41826C942C8
41D1E97FCAAF1A9A3245AF79BAE54B4E5F84D18147590E054B70E3F30CBA56EC
7DB751ACA01F7DF1FBC7452B5D1E789929A97CE2DCA6C2054A7EE25762D02DFA
0029231EE1E3133136F8BC08D99B74149C5F5242D3CB253C36A84CC837D76B2B
A1884E66AF59DAD680D649457B2E75DDD203B12B4A5AFD895D850CB7085567F6
AD3F4B37851566D69AA649F97EFD918263BB49B5A0E536FA063D6D8C53508A79
C1DE7638486DC83B98128FCE221AB56BE701148A9A15B7F7786C5225803AC6C3
532C8392799D7238BA4E404B7D6D1A22D6146C659B937B96A1F5453B7CD92928
3CE90F64202F1612BA34F3B17063DC90998921E687F2CB6EA298A92B76065465
257FAC9F7EE6EA74F7C07916C7B7569E6080D7D857CBBC9A49408580D7A5BFC8
89CDA4EA23EDE66A33CE5C9001F9E7A0149021BE5A65DB754E14D890F37EA7DF
9F5F7175382997B8DDC1BC31FF9BB31C2920050514F0516B499942E56EFB6139
518D822DC063095DBD7EB56116420CFAAE8DE28CFED91459D645C92FFDC3153D
106E798755FB13C9221F730F4CE2BECA91F339C38F001D8AC33B498F8F495661
C0069515C10E979589DE9D226770A01E13666A84DFEBC5A5DC04BFB1D49BF5BE
B3FA7A2176F487FBF625F17BDA24AC5310B950DED8E8F22B686F1F4AD63F015A
117D221294A8AAEEC417AA6A4A9D163B1C46DFA6D249F9A5AC9142541DCF4704
DBE9A574B1E60889D97FAC2C7318AACB9A592F31D9B197F8CEAD769222D85D0F
E43443C7ADDAECC5D0D48796C48532D7048F27E64850AF042F96BFFFD3B3903C
60869AB6F73F83D4DE05CB5C6CE7C221A2038461896FF0EBC22A4676961A6F47
65EDD46D0649032160DDBEC424C3BFCF0C3562275478A5CC6EE68F395A1EA5B4
75FB3AA771E44AACDD111DFAF08A68119DC69C2A9360CA05073141C93B9BCF24
D571EF958527CC1DF6AB5C1ABD2BB2058BEA843AFB1027D141234E6CA6A30546
260103133D05A389653E1E8EADD19E252396699126A3C769848DC244DCD56BD1
E4F662AA2B647AFF05722E88E6320A422C7025D6BD06210FE250E64C24A95C93
42F0DCC0ADAC14486164A20E53445D7F23FA6CC431D0EF8DA2C258BB069706DD
0E845D79276638214467316210E275C4AAC7931329F0BE20271280ABB91D54CC
819680322EAB72E1250A760F17A15C1DB4324935F474EDCB620ADD71ABF4845A
F9970BC71F4FBF6C97AEB8FC5D0821D4070F65BEBD55BE6E04AF1C83C0BBD182
EC25281FB52C452BDF2419D6F7A550C28DB0AE8D8FD27767696A71E401C3D7EF
A3F6906B32E516B7F259D4D3D6D1F0B06737D3F368BFF332A7553200D034F31C
23B04EE90FCB4484AB2053E8DD69A2EE3D6EEC81FDB4F9D9095FE29374D1DF47
2DA46570BECB49D7710083A77BDC82ADA7B15D4FCBB6EEF0D1E8D955F8C2EB19
84E30EC73AE00E97EEB44B3FCB53808E0E439B69F5CDFAAF3113D089D7C85E58
59F27B8DC4C5D863C20677DC7D364D5CE4021B8DD85F1E8A29F10E88312DF769
2DED8555858792C68064F27BDB7F01696826682DF5B7A4D7DF929FFD88F15A1B
AE76C6EEFC79C130434C8E18B6D60587C3FF1A6C11283200B83A849EB440CC74
96E833AB92CA36C6D06E8D4E51000F60EB69CFE8703310DC487754695A4C0075
8EE3D1E1C28495B0064C2A1E5F08F74FA1B72C6FC4C10EEEE3A3B686AEAF7630
59525646984239EFBC4A36C40D9A406871E2FDE9D7A8A0DED8350E59147D08F2
5BBF3EDD39BE705D8A5AED5F1BFCF462B5E9E1260F6699D945A611A7EA348DB3
C86BE4B146717E968A4CE41B89961BBB7F30C807B959F9270F7DFD319D4AAD46
370C76C3162444F3AA3672C66C81B3B7E7812205E640375A9CAA5245667D057C
95F2CA95993C9198EACD5CCB89BA3C73F2196C7834B1A544B12F93754864791D
FFB4FF1570574EAC7E17C772540440EA91FF459F62DE3AC44E259355E90734F2
6F242E24AFCE4C0102626D27F9C29B7A881D2F26F2E0A88153CFCBB70E29B707
3AB33F7BE2B6BD070EDBE636DE38D01D7F56D4B0ECD4E415CC9290C79FE24F18
2F561AF122DA22C4CD306406B316B1705EB7C713DAF21775399BEF9EB82E6BD0
16871B1147B362BF40B39A4681A4DF621FBD84163C13A65128994D74CAD21F2B
A381E57985EDF454F39D7AD4B5AE946C7E207BBDDE96E9AC7AC4FFE3C7FCED23
8E4B22808263B7D46ABD253063090F3090B7DCAE4B0B3A76793F902E074A6A6F
A42F3015AB151CBE57A799DC6042F339AB93A7432453B6534ABC365C03167D70
2466832B32DC035DFAF601E2EB6615E0687A9DAE510F7C12F9E53A150D29B92C
ECA783F8CB9499DF0A6EF16CA75D4D5D0A7358BEC9A5E384E2E27B5DA93F60E8
5B250CD253802AF02306DC582AEBFCD0C9105357F2638CD9FF5592D53F8DE3D4
29F5D06F3DD650AB8EDBB1969AED96B7999229531B651E4C98B0BD07C1AC6383
4B1460B49A9C1002E4C38C0D8088CCC17B6CD45256892093700FC74B0439374F
251F8BEF1154F701F3F8BD461F9025773C7EA50CD01DF13A42E9491468078635
B87B3A4D95D4D5188EBD111ADAF13004B95BB6A1F91BE31E8765EBCD0BD1C62E
95F659D68F0D69B85BA188CD25915189C29DF8F410C6BDC20BC853E357D67471
7EBD47F78D41970883CD836D1668B85BD642F7F50AE117B63267087727DA51CF
F0E36D2F6F445CB662BD8BCC4CDAD9E20B5916E65AB744B6FD259CC8D48D85F6
692F098F35F1E48E4212282BB7BDFC55B4522C394B3A5441598C496095FA79F3
54B447141CD77CD1AD6B8D17AFDDDF85C3CA7D440690CEC6D8F706168889EA49
BD5A2DFAB27D564FA7E04CA4256EAD3DCB103B9E31342B7A47EE9CA0432A7B0A
DDFF5AC82153843C6F7837AF311F4FF876ACFD8C862EAB22C5ADD53E1979713C
24D3C84013DC49C6AB18E573C039463C85D6D80D2E3F6E3D9B0F29434DB0B52E
F3637E1F4F8AFE15ECA11967C6324047308F7F91BB77FC7B4221C1A677B413EC
24C29DA1F2D33041FFA74F7C05C65CCF78C7DDD293EB63D5E7C466E528CCAF33
7EAD9CAFD320D8F1E60750FC8FA17A96860BDD648B82EC45261EEFA7E4AA3A53
36ADD33204A9E3BA4FD94789E3F82C0019156FF9B33C8FDC27D67EFC22C9DDBF
49935E85D34CEEF0FE8FEDE01A7AAD5D667300F07CB0251FDFAE3ECF59AA38B2
FEEB448B4CA0C8726ADC87E473C4391E47D767D4558876E85ABB0B8396FEE0C3
327CFFEB98459E5E03218E29844B569E2EBD6271DBA6A5B619FC251A53F25736
55D4AA05C100CE303EBCC73BB5F44FFB8C900B6F71FC815A42A6DF5A23909E98
A97DD3D6B597B5006B3234484519287C20D811074449DC64461585BF254B6BF1
2F8A8BACD0154C4727E881704817CBC33E6576BDBFDF5D0A48DEAAA63DC107C8
352E4BD2361E66C454DA281BB7AEABF17F24254496DA229B295EAB9A6864B877
89BAAD70364C33665F90E24D35581DA77D776D19FEC2B9F084C0D81A912ED19C
84EAAAE99801DDC5B98E873E8E9C9216B45B933D0DE9BDFECD4A17063BEC1E08
47F0859B7494E26582C63DA46ACFF5D5CA41BAF982AA51E096545945C5EBA0E4
FD6B949B546AD49D1BB161EA501007F0082339FA96FA33678BB8CF50911D06B8
6C9758A4B686AAD19F4E39A73DC2E00310DB85AF8D9080E98EF7CB8EE7E0A553
ED1C167611B98529389D46C775E8B2B34486E7038C3C3492C914860E06521EC9
E8056816F6578CAD41225BB627A6D60FF613EF2279B10F44600BF0013D25F737
D807E2CB59BD81ABAC51D01B15D0A65A27E4581C35B9E5670AACADC42B84738A
C04F961E0310E1FF10D626A9235C76FC3010895BE4AFF551597F0B1E000ADEFF
8CEB2BF67DAC531B53256C34A5211FAE93596239C694DA7DCA8F8DACF03CB8AA
F73775122C66EC7E0828397DBE404BA26E352CBF1D23E685CA897AC54A3D7123
011EF6036096398D8D10ADD46B3FCFC12980C2EA74D0799CCD89C4D25FCDBE77
2D82F92392B9224C232ACD7BC290B203FEC93C2A55B85A45990EDC7897E3FD04
7277FD2DB400DF06C70397503DF67C10B47377A99EBCFDD05501AA0E604200A1
7BE95970E062EFACBBE9576531C6315B46B7EBAF4D51258AD07F49A868C4FFC4
5840EDCB1A932EE564AC972810186782E79F47AE51B972A21003B3D84202CA45
6F51F990B89C6C1A186EEA1CA1BC391EE937074345AC93636B71D9DDB8E53A0F
9813258D503B5967828D60CC8C0C1792CEF900D2AB0171C4832867D43F4BC399
F6BC4CC2760F7973D6FE77F7AB2E72FC28A675E1FDCE064578CE287B9AB89600
1714CD4537F924E28AE939DD00EB511CA34A70D944561F1DEB1CA290E2F18D40
163340A17A117E25C5C463F511124CA3AB616D276C584ABD904D7018A00F6017
ADF508BF63F64AC2A429571C437ACDBC56D765E2C7F61226CFC5613463D95EA8
F58665A2B2A2399C57BE1BA0D45CDD151E01EA0DFC7F79FBD2B4103EBB92A3F8
01E579FDFB30EFF76BCFB3F994CF5322A710B0E857532D25F4F4CD9C3542C853
2923E2091B95996D5D2895B500E692731BF22EA7654C27976097D2C5E6EC8DC2
4FDEB0B8D539D079FCDC56E9BC4B19F8DFD5472EA4AB02F0D34C0B2BC6AC92B7
69213ACFDBEDECB172BE416FEA0D359CBE04C83230BF3F1AC0969AA5BB5E968E
DE4B8D2EC13F789CF1A4AAEB28A369B4658746948CA2E878BEA4BC99CED5B296
F1916C4EFAAC63A99D90883B5DF70118B704B26735286F105FEC8DBF217CACB1
0FD7EC61BF69D36ECE3C13C6069C64B22F4466F1E9C8F2D11C5BC1C5A5A08B94
2528B4FDF9E42A5F68338BB4A5B3301CA9B795626F48588DD09D1AAF7BD67610
6F73D317A84B0C8332C0AB111693C2FDB3FD4C41C97A262B019B0E714C76571C
12AF0A6796EB5ACFD9AD1D03F1BC806A41F7F1107728BF1E9A648CFF974273D1
896D2065251B4A2D0D33D3D98D9ED750A11AF32C0D836887181F1AF6535C0E67
D552DD7F7974F93EAD75FC26B2D4FCA0BA0AB57A17600467ADC64D600AD4CB66
D8C64B8636E97B755E4E02F77721A9E29F41FC78136D61A9B83C9AAC3B5951B5
57D62C7728D6E3F13BE05939C2A6FC14D88929EE62456392E5DCAD96A497438F
76E7AB5789E717E2CC6D8257D9814601AFEB7EAD595A6AD78FA30B16DF9285AD
770F5E87B0F864EACC0F71D1FAD30B15C074F0FAAA9FB441525882FC923BC3A9
787F1F829DCF48F569ABEF71D59DC7BCCCB1BFFCC5C70B67BB5867F440776025
6E4AC6D819088D50C66063FFEC2811B93E04BD804A77C3751BE6F455B48BB452
D8EAB1CE63B736201F92250FD7A8424CBB1560CD79DFBE13D597A4FF1AD2CDD0
0A71C5A3443002CFE126DF212DEF67B4CC168AC0BBC922EAAFE0C3DDF1358C8D
D87504652967C679E62DBC4240CDC4A30790A98F2ED8F648FE2285E3198DEA6F
04D04CCC4B264DD76F31F017E07A31B99351BAC71A091693B956D89B4557C719
2C3F8F3635306543D15B1DA98E136B5B147E7C0D6AACEC7A555A028C65CC1AE5
190F1A6F4783B5BBF2264C72FE65E0C55A0E929960B5F0AD71B3E46F6090974C
0FF0D79CC68FB1A5DE7EF8497F2B33F1604CFBC57F1B0A7E8F6FB6C483282DE6
13E28E0AB1E17CD025BA2011F58CA17FF178B705EA12B5550286FC001731FF05
318CC3F90635CEE5E03D4910567FB7EF2CE783BE064CFEC333BCFD5A093BAB44
BA86FEBFCCBFE37B96E080B4C93C463A4D7E48F5DAAA4F97931494D07E5334E2
427F1D5F591DEA4A35A333EAB50618D08F7EDFE1281FB2EDE880C30EE66110F3
D0C57316578102AF0CB45C86FAA1644FA922FC56B0B93D32362BA966DDE41AE6
A0A6B802610A0BF6A7DDBD2B1241785EE4E3C12C9815BAB364F4C54CEF25313C
D7BF2F4750ED01F4B4644644E5E72BF2869A9A97398E0C20F5F017CA9DB7BAB3
BAB55F535D049BF9B0C16328F8992A1287FBE4016ECACDDD3E9DF4C2DD173525
73C90177484F7E742B00B7C92F193DC3998C1290727A9E2960C608C0E9A1EE96
7B95EFB9DD663DF718FCF9190B3B86C38960B5D418A3D4AE53CA372F4537748B
10A647F1CEA85D597A49335CC40D38657B3D8B3D4321C04AE86EF9AAE55767C0
809544F5291F7D578E58AC00AA0CCD15B2E395482539E49E919F3B159F286AD1
72CF9DD1B8DC9E23D1751721FA293BE262D29AB00C8A5BED21A826EC20AC4384
A8CFF8CECF07A597EFB891147CE9E15E1B72BD078B9B595DC4936FCC046089B6
33B3466930A61D40AE2FF90D4BCE846DD9FB0555F5EF1DEA2126F3A9076269B9
9888609B62B7CBA5C6A66EB801C1E350E571D93F96910C91BDEE18E063B395DE
602539A9092422F8550342E56C98651609E284BBE73803E76E0D75E77A06A2EC
0B7193DD414AA8135C8E1DC0A52C350AB5803CB705BCFA9E5004B2FD887CA074
CA9B5C997C0B5E6825980CAB56D409278CCA62106CAECCB507395F702D2B7E4F
A697803C1F44946F43E83836A5EA28F6A49579DDF488E5850C8DD4EB768A107F
D11D6C046E5196A02F947946C46A6DA7027DF02E54B72AC91B974494944C34C5
7BAA186858CAFA75BA7DFD613802C1AE16490233128BDB6370FA61522B51536A
D69F860DA400862BEAF7528F8332383568F2E35C017C5A11590CF98CDC032950
A86415391A609A7ECF4FF731353DCBDBE24A09C9D485D93D8209C94E8875065A
8D2F7D8A673AA4463B8DB4A19233A6C2DD7C2320DC37049BE2D63A06FFFCA9B7
60A33FC3EB7E5EF0CA1552EA6F28C7E78FDD18E2731ACE0D7DDCDD51450B59E6
F6F5D07B42B2A559646F8C2B77B1FF7BFE2936706D6462D732EA0600919560C9
8C3EE2B960B9E2E5B7002E9ADDE9FF91B610D21BAB5247CC82C4AF968439153B
32467EA58BC68B82428C0DD741D6DFBEA18083A0D86307814E6848BDDC056CF2
307BE94804C23FFE0CFEC5A8E14E5A17FF66B954E9F28FC4439A37411A466AF6
FE356DF558D5BEB5EAE7BE2E3FF63B935B920FBA4349E8FC2D3BEAC9B8A5D93A
57629B2A34F7B248BE6F3BD18BF5876F02ECA44D6F13147C7FD415A4563F4BF8
2637B1CBC21339D004F8AC8E7777879540308A37BE2189303F46C13EC56B4F1D
BD154018096F9AE12D3AFEDE2B7274448D22AFE5DC00D74F598757FDA4173A5A
B8A668AAF19E94A939E8B9A47E2EBA2A19DB2C441088141705DA3D29A052287E
5B6057AD47AFC20C9AF2E44F76E1C7BB99785482A577FED9DA7BBCF6519A1C1B
39778132980F974446223D937EB0644BC34CEDEDF3C9219682FC5A09A0ACB07F
7E0BFCAA6B028BD2C165DFBBE32740BAEAF30CA520E1D9D1264BEFFB3B20B922
2A781DF98911E7CC25E4E5FC6D730A8819CBDBDC2BB0998ECC824A4C9A2E727A
016A8DBE1921CEF14A8E2976F930362A13F8B33FB90153D89494A5690BA80B8D
F226855F8F6AADE6FBAC5E6188AA0C033488F6799368E3ACD6478D4074D79C2C
AABA3A58D076630E3D90AB48F94A61737995C4687D54376A528D058510D91431
853D9F7FD7A60D265AEA10CC53339C167D04C8E0875032E159EE42B6F6F9BF1C
F90632E54F8CCA66D16E3DD2E4E56C04CBDE6E8D9F81777EE3CF58DB92023B68
0CD3ABE8A642FE7D62C94020818EAD0D6EB00FFEA6E249124460B4969A024AD9
00D1B35BF32A2520B6D454DCD7B5E07EACFFCBE137C37D3AEE3E22BB35EAC71F
027F380F87157330DA2DF22413B756487E8429F0CE6B0AB1D1E4E56CEDF0C19D
A9F18908959B417CA900B72D050735E042432799FFB8529C0EDAD85653FC6F1D
4888E37184BF0A21E04C0914C44CE566B2334BDF94ECF54D5A460DD5DE004E61
B1F33081F26422C7605CAA960F567FBD55BAF4DE07A0292E8AA5208AFF3A57DE
7F79CB7E773CC01ABF27DCF2D06B71859D7766964D49C989758A788341896EBB
8DAA5C58B0577E8A13AB28F2524B72978839942A7C602430B97BBA6F744C078D
505CA9065D3EC0813C867F35E01957E283E2A4770EFB589F58BE4B4875D2305F
D11880ADBCDB6CF9C3C154FDE2987B8E0DC929E277E8FB6D70A79B00E116C6F1
D3C77D6594C00C7C664AD2F5E2A96EC2F69469C14070D6A8268C41A83AB55428
9BF863BAD00C9938DA2463A0D46C43BA9BF586443D3D689570B6D3B51D2A94A0
6B5FC887B1920A4A0AF369CFE0D27A17284C94130A3C930740A9A773C747D71E
3F86F013A7ADAFF83C650D5EB0A48DB45DF38D2871BC9A5B8E45582DF031E7DD
186B58694D11C178B9CA946D39D94E21B42E8B979A327D9163D9A8E1FCBEB4C8
97B0584509CD14BF3DF7AC014565A95C787DC92C6C02E5931E4560B274ED212E
4FDAB5DBD08FC6DDEB23147592FE81FA62BBF0CCCD8865800CBBE77C168374FD
C0D7BF5BE99158F6F19D6A35918251053A561DF1161A53D8EBADC19FEC33DD6B
0DC4F6C58F596DB80B4A8BCA33E2CA12037F3F4926F59E73D2A628392368D68C
28ED60CDCE0CD13F54F0F6FDF6C3816323AC8D9694308E210C6DF4A9D6FDF26F
266887351F496B160F38923862F03CE21F32307262CE3B68E50935042F73546E
1489A087FE8BF8B4898845978677E31B0D9E1A417480714645FFC38DE0899CC8
E32017AD6803082EB07E6B26C4B19A5A9B3996195685B21ECDA7DCF6027ACDA5
C1BF393AB3A686EA2A66BF8D2C690BC64D7781F96BA94B4D963E55EBF79CEDE4
10AAC6264495484EF07046FDD6DABE1138B455843B5A14743D2EF8C133705679
A1BB6DBC35BF20551DF2B7BF467F40B91CE4735D330FC51339B4E8EEF169B785
AB3F04C096284C81A0DA04F434ADF862A8CD185E9C7048F719C49907C9DA271D
6366C883E49621E29ADC1DD602D2420CBCE1454CD3412AE49AFABEA75DBCEA81
B2808F3258B157BA82160DD33DD4DBE36034877C2955CE13D20108FA663C5816
2EB058E6EB59D73742C2AD69986A62CCB7F8E134A945E3AEE48E86B24327EFF3
CED5914D64204DAC92A0AC0A4151D294D348BC257CF3003999E237EC0B8850A2
3D2AA4C7B7A7F7DEF956B4371015435E7634F56E2F2414D3D82E76ACFEE879FA
1757B327D5FCC8C515CD951AC0BAC03D1AA472AD0ACB5867FF72940BA3ECFA1C
2AD0E4174917B2684EF827C40A1AA9711B886A186DB61E3F985EEFDAD748E35B
A035E3A81DE262A477FDD4A0C3CB5562C583C3568A953E0B4BF9FD28E3A89C6A
CF9F1DD83513831037648B67164ED1D94FFD585D34238161F4BE248A3921AA01
4CD36E61E65022D76237F28A247038CC03588C9FBB4DB891CBBBF7D9EB946527
63516D9FE1E51589997D4D75D295444565DEED9FBBFFC44B4320D923C5D416D5
20182CC0EDE3873C014B3FEE7CDC415CE8E7DCA1F919559EBB7DD20B1D456F50
39788CDFF2CF343A68A6510AD6BD87E9BD0F7E93A67159F5E75767C46F8B148D
CA86642048F2BB4DCFF0E1BF468D27DEE760CC91C62036D3705E771E93F9232F
EB35A8AC6CC6C948FDECB270961B183955048D80896843738725E9A5888D56A6
D966AF27D2D3691999FD1B9728796786EDE15CEACB81478E505BC34213315C3B
4C301058742E2263F4A9F0668682BBDCEA1247333B420A0B3F2ED76ADD39CDC0
8E1430B3F4203D007C7B2B651B722270F3E6017EE0B5227783C5B79BDE6702EE
041B0719757E18FA55C3AF7DB37305D6AFCD68087FED6379BD4BE6C1BA9E1CA6
C2BE01BBEB7512B7E89B1673956A8754FE0FF4F4F06DE0A576867AE494DDC1FA
1F621B1C51CBB13BB492201E3AAF5C41EBE3D6131603EF1AD7BB91A5AF75EFC8
D22A8E991888FC44FF9ED2954B7A9DF5CF6BEAE29044CCE1EB5FC3CB80149DE5
4B2FE9459AF2DD2D7C8BB7B41CE33E468014DA1E2925C9442D6B2E5E447488A8
C70FDDBEB5C8F3CE43DCDA76AFAB49FE55F687BA6E7E10A60AD209E41B91596D
B95EE25F656A07E05C4BB23D97F91E71E4D5B22EBA4D6606CE3C8A04EA62EB94
3EE023D6D5D7B94F3C30EDAEE7AFB3BF08B8D074859301E9E1E485FA45D14237
F4799CEC25D08AE521B35406C5062BCC5B09598C06424DE01B150151F7CD404F
4E1DB6DFA510A2F182A623F3601F5CF9C3E937B85CF86122D402696EF9C8DDAF
81170AACF4196F722D376B767B72CC28CF8C3A153868BBF78B59099BC7DF7BEA
D25E42DF6E52CBB7CA0597CF88315FEF3CA6A95C8106FE68CB6C8C0F45E5DA31
A53D7AF57B3268B936B4D810A60A4C58622B448DE97F6E7AE9B17331881B1117
1B2040FB6637140BE927369F803A4FF311D3B46592FBFC83F4332A5DB7FF85AC
E0F25ECF30A3C900B28B18662259AB0CCC303901A207C83125D327B276967CD6
B4941370B9CE7E88DDDA40AD9C0ED36BE45455AAA855E1CEF30330B0AC6E3AAF
A7C3882BB3538E15B9C6C0270BED8A8CF2D09B98B2CBDFA71196E5E374EE8BBC
89E3427FCFBDEEAAC67F14F71B450BC562A195E9F1CC9E54A681C37C4B05540E
DA577F37D95C0183AEC8DF03B4BBE70F4C1F0A6FDF949B932A548B95400D5839
50C8353523B81E8BACDB2E4A9C66325D163473E2469FE9DDA0564A5B4013734E
0F8971257559092D6733594EF7721851BE3D1493379B3F9481220248D3CA33A2
842DAD9E20A483044FE0A2EFDA643EDF7C90EAE9B8DB60B9A04A3A755615D952
1283139769F56B466B95CF4D412DF23AB1A7E039D45886741463E26AD685C330
FF9B4020A256C1BFC0DB3E8400B1E80EB405BA27F70280BAF0AA5543E9C351BD
1751D40122A7584BFD603FBBB3DAECF4C083E5F848B2852D67C8A8801F50176A
AB21D4EBAB520AF3882D8B9CFCD29514DF7E59DA3CC0D62A041A3C173D87E8F3
E94CBB3F1E999235DE9DC0A29BAE98DE99D7C943C71BDCE5FD99ED2DC3B1005E
FAC6E50E3037EAA2A6B45CF23978DFE3751B2FCBF4CC9FE2AAF0EB6DAFAAB233
14B7E1AB100CC5369BE9444C6CDC7C6263B93715BDEFB354398CAF586AA54DF1
1E69D80820EFEB02CDE5BF04124A73943179CF7D59AAA53516B0E47BD6BF3C2A
F239B6D75F4CD6A7B9584A93A6504C8E5946B97D7D565997E06B1BED6F703A01
471C745E7789D434234E673D222CA433871762CD51B690861D3F6017FA9C6024
9BF200843BEF3B3DB3C2A7A780476A0E2F3CA21869CC19CF9CD0F897F0E26E2F
AE249582383C74DA9B46A084917667745A11596AE22B3C57B0C6F25FBAEF4A82
1C5FB52680D2EEB4AF542BB7AA67978989ECEAEA884E74EC00C73D2B996BE69E
78806F5FDA1D3AD11D5564EA2BADAFABE5FB01B4FBDA34C73D7B5EDE9C4A4528
7148E8708650CEF6AB452AC9550CB8FC60C79289FFDEAD73DED2F55446765F33
10B11D4A23A2E4D3B9E928D9A4A68426E0F76F816DA0AE20CAC201F346D1BA6D
D1679026A9856834217DE131F13E76EEDDB6F4EAEF1B77BDF5E5F656B78B84FF
D048028B40B3A979563915DB9ACA9992E6CCE9AD6B1A33FFEFCBACE2A33B83F4
C66E340C17A78EF9ACAACE3CEA0A3378A8AE9147145481879B5A1D505B9431BA
82301322BADD90F85A4B8D6F78C1097F0D6D7DC137A904B4F7BA0C6BC6B6062A
24A690EB6AE46D1C16D3EFB17060493B5D129F1DF1310EFB648DC93E59CE23D1
47F22F28C1742D7DDD447325904CFCFE4299A7BC9F1495EA88C8A3E7F895603B
EFF0D40C283A254270FBA13D66F30ED91281575F79F6E6D8846ECD8D2096F92E
BAED840C491A0010B16B4B33575A0CE6AC3E3C48AE1FC1A6A17F9583330764C3
FD8BCE3B9F209F7A660942605D7FD33E5D9B8D55EB7D3935D7616CF1356E0253
F1149568B593FD2811CE0FC280D48630BB59C53C1CB7BFE324EEDC3B355D8B71
2AE9C2027F17597642473D169440905086902370ABEB4D521F3EBB9FE83E3E68
109B18272D5B43A727025E5B23E9EDFD422C969BFBB8C47A0976BD0C0D2512D7
931EBC886B052717039570A75CB813B32469803074D86EFA1D7CCD206638F69F
FC139BB72D6451787A0F17EDBF9B8D010255944700567530AACDF076289EF77F
E36D3F05CA0DFF5AB13A99F7F3B5EAC90749A9211BF778490545353B4BBCAE7D
46C6EDB38058A0FE41932F20E28000F77C1EE85436893B241BE0BCD0445CCFC2
A052BD618774698EB3933599769D17F6D621053402A295632FE351CD2348264F
5277BC5EF11B01A588399B10AED7BEC3ED6251A095434D81B1A68AFD88B506A9
66D1224D078F1CF5B88FBEF99742137438E51623CE0E21C27B67F5AABAA935C0
E086E03D6A47EDBE0DC8DB890D11DF8866C0F0715256DC9C88264BA94E6AA363
62BED496EE166BD45F0536B3A439E4A45FA2899CA538600870B4C2AB3008FF3D
0140E444A560B11A07FD5A494C760BB586E187C2E97D829473EFB88CE5CDF4DC
444744337A84E4AD14328223825F44E996E8FD2498D84BAC4D6492012971C6FD
F28FA577B39003387F79289C663EDF22047C9223D7991556981C6250ACBD41F6
BC45942323685ED6027799FB1A16BA7C04D6BCB2EF697C8B88DF9E0588010297
5D5481596EFC7E25E931DFA833544D863634F703A8E27F66CDF16B3328B34950
B61AEEAF24D2BBF27AB75648B7BBF27BA90A9C66D66782435F428997E2A731A4
F36BC4D2F22AA61AD3B7DB9F1AEDAFBCEDF7FF4D4B41DD39F7F5293179CDE1B8
EDE326D1D6EA7372C7B354CAA86084922F1285A970EA1D9178E0F72B1C2BA9CC
6F5E547CF546530BACA016BB975DDB84ECB1AAC6ADE0A1E89CAE1284F967B9EA
3A7CD78A16D8B903A50DFEC6942E2E9BF9025963DFDAD4D21590A2A0877E06AF
B332E64753B7E0993B4F19F3C39B192C3EF1B95169328D39AC2529C31D74F465
C1DF3740917F79015C7F7DF07972B781258B0F84C4A5F6B3BA45FCF2A4842222
C00F1A5B7F57A47DE69FF255BEAEFE757F8078B1445F9C377287B14870471A7E
3AF5CAD460D198644521893ADD06367B1DDC46274CB3971729F9B1DB49F96AF8
96F9B09E68528214503E95BA711A78DFF6ADC0518080E65394803B042D00BE5F
C126CAF386AC8B0E4AC89FC702EC9C93E20774970CDFF1706294DA30CEB7F66F
8A7CEB9C6E2D98696FC62A780897F946965A4290BA61A4FFD1B419EA8FFF25F6
2EC27E8BD2856CF08D7395D16EDC4CBD6B79ED93B0DFA54233B5A7EE22E74DEB
386938CE44881BC3306EB6C8A8BA2F767265E37A52AE799414817B8E95FAE3C4
1F1EC609519F1A6B0C75B3A5F4D1F8AF809CA9E1E972CB2FD07B1D420C1CA028
054700083783563C7202F2E097F5A563B06B53F16A2A032ADC8A61B50F46B5B9
122BBC434AAAD46FF165FE342BBCBF05B837E703278B2024AD7C7D039985F262
5EA0B5B6DB576B177A69483B2175350C3F76F9FE0B6D85C50D9B2C4875701BA0
3B7B042821DFDAA75AB11F53AD21C32584A311EAC4880910941258548803F39B
651232A8D7FABF0997DA3FA41E46190012DA6C5CC4B911AECB98452E47E3874C
471BAF92F182397D0A1204951AB6CF159D963A72757150EAEFF40574465F1AA0
9E5729ECF19A78F4B07F725305ABD438E927362B9BFF0CBF49E77038E34AE6E0
4AE11B71698F9D8B968FCFE0E69372DA9DD554294996C46E696085340606DD34
D2856CBE86BA310CF2E968A9729E07B26587FACCA7B0CF97C5406A808ACA2BEF
48ED42E0963450193CF76F52EAB3DBF70D961BFE3CF1731C823B21FD299416E4
C4B3D9B9F195F9B25F24DDD3CB175F3E1E612EB31904E7287731B70785C23DD9
E87512FA8954C3ADE058196AD761C6AF98B2DACF65736B83FE34300613AD383D
6AFA45EF0CCFC2AEA3B4E47F70BA2D5AEE9FFAE55F34FE2E2E897C1AD9E6A375
D7771A6AEDB0E02641A9748F7159542BA952A714D454416CB94A007509B3DEE2
4B4091DBA2903489ABB6B2EB9F977F3F4D690B31E8F6E76655D44A6DF4145BE3
1DCDEBF74C4F5F423B9F065B6FFD29EFAC6603B40474F6A4B936868DC3014915
A910772B3597E7F45883D5717EE6278F4BBBC32A5E6578F5EF50AE9EABAA2D1F
645BE3265A3AAF5B5968CF1F8270437EF8E10CE74AA6F0D3A657FEA4B4C43695
10C902AEF486AD9FD3FF406BFCEC6AAE3EA397A03AFD4B5D69779E49078AFBBA
91E004CEE7220A24C3C45E8E29EA9053C5F3EFB0EA307483F841C23B766D1879
8AB984E37AA1D0570FF3D6830161135EF44A07A92D2414058ED9897604C74DE7
80339F6347AA20A118C56E000F8022B5653CE3F47BA05406AC52FF4992956F66
4EF49C6471203034B101013A05699303AB7CBAC0EE97E47A30E491801685EA89
7511C6D907113A297CAE8586AEF804DD42EF49C196B9D8755ED0325A6BEDE0A7
CA54B96CB0F2A4D5C9B8F91D3597D2B5C51AB018C697E40A62C9EAC215ED841E
70EE59B4A1DEECC5808C894FBAD5C3DCBD4935278DCA3075D7C0AE8CD809AC26
CF43F8ED397FF1E6E1C03155BA09825DDDF466EF01798C14859E201C46C092E2
DF9B35F469AF18EEB59A570932E1456B87390CEFA94CC862DD34E1A43FF74052
A3424F1B7995A97253C8F822C11204E34061D32AF9AD54E05F9811643264282F
CC0CD09617237F5DD6228D08AD0E925226F6B25349D7766C105A0C3CFA43303F
8B330F4FE46308F0A45FE9D048852E65AF29308823AC201BBB0EEC2B2DF9C9B0
BC81F8E67C176724A96890442607ED2AE5C43C796F362D59872E2818C46135FF
714BDC5CF1E22D793380121F788110CEDC2658487B64AA6AB8B859F86170551D
55EB7197B0A93FC6AE2449B2B06CC00C18BF41632A63C856C853C375CD70D214
84E901C1BA1C325A6B77BC52459AB04BAE5B49013C58DA67583EEF7258A0C6DB
3819F023687A43CAC0EC9B106EEAFDEA8FC61B74F45732DA28DF0C6A8BE424B4
0537B7081C1E40433C3511F9C637E680F29092E2E542186BF255B2894F3FE445
439F65967C51EDC8515D06D306390158C91859859A1422520BECCFCC4A59898C
CAE33228E1E6E2034652553A03E1341025B4F6CFDE83EC8118D800F3B2A7B5EA
03E16B204962BC68AE3CC34CC973934DCE0AEFBE747888AA5472E4EAE9451D41
CABCF08208F87957A6A15F77E1E234889B0FE75B38801ED115B700DDCE8BF664
2AE971DB809A152552F2DEE5059185AE13AD4E96C8522735074AD649CABF3920
1E0AB1B42AE6E5FCA3C6AD820A8ED4978E6E330DA55D37F0EDE06CE9466B313B
6255925F7C908937E3BF94DB35DB4A2859A2A254B508C25C05E14E56CDF2585F
60BCFAE743B6054324FBA85C7BCF74DEF071CA50ED47B8ABB1F9E2900D42CF29
61D9249CF1280C35D0972229D29B1F0733A801A4D3621409DB5D676C4EB4F9DD
F7AFBCBE96EE55963838A83C324AF0629A269CF1DDE5E871D4347680EF8ADD02
DB425252C052698A7CD8971581ADF8059823BD2AB80B431C25516C268AB4F1C4
E84AAF58ACE41208A8C24BC204EC43E1D550CCE29D99B737B0DCAA77579BB8F3
5BFFD6BCC81BE509CDF2C0A520EA29CDB7FC45180C67FB664148B097444F8D8E
F623639FD3511FD8D1F41527E4DDB392685584B5BDC9308F35A246EFDDB2C8E5
5A62B68E710728B40D3955F2954B2172647A7E768DF36D422FCFC22D86B42FF9
1FCE7E06435BB294023284FEF52AC951645949706C496AA57DDBD563A334866A
6291BAED83A073A4E8F5811CE18CAA7D9A5F611286C6960B826D1C525ACE7408
2EED5868431CE6446EB5E0F9F5B996D28AB144EAFB5744E654C8AC3E8D668AAC
1AC8373BDEEA5E6B5F5897445B471395DF6F39D245EE0221FBE781CE97DF0683
0FC498BDB073AD2CA5EC36B485FF68AF583ECCBE6FE0329A031820D4D1DA9D11
F0287F177B95D693D287C2B543AF840091D69A3C1C428F1C5B30580C16F60E1C
E273350076DA9B152901A965A817507D15D2DE0197C5D6AD69FA6B299BF0C520
73450E19CE62E0B3803B0FC882B80D1E1C4022CD9BAEFB623FA601A095EE1224
500D4E89F4CD31A93C312EA4674730466AB38E110795251CEBE01D7F81D61317
763D0C226C1F59045D457E55E2913AEE591678EADA8F6E6D3FAF39BB0A3958DC
33153C408ED9FDB7A1BAFF2F1602E398D589D970AD3FC3501C39A9BA928BEDC9
EE6D595278E7DAF9C1CAD6D09693336984A0495B5A0D963668C399AD46919FB7
86A24ED918974C3793244BD64149ECAC4871F06D755B065AEE672F2BE7A25592
522D3B9266B601DF279DB58D7C7868EF371BF4BF97B6774BDD5FF2C298D34F38
11D5DD324439EB423FEF2A459B73B7EDC24C3F47D24C382A9A1583836249967E
0161BA93CAB3B988CDBA3FB5AAB821D59255616D49DDFB5B0CE85AB720C9471F
8C3DD2664D314997390D4E557E6311D79CEDBA8BEEFE2CD529F4B45382F3E6E1
BAA64D67CEF2D7F0D6DC1294CE570DC3D0806B687549BC36630F1DDEE35840F7
4BCAA4EDB3C04C570FD23ADD4E062E83C76DDE45C1923A4C9597BAD114925E4F
5BB6C1C2F17D04F7ECDB2001D7590386B64579036F45378CD7FCEECE082CD5F8
B74D44AAD27A5BA22CA442362F0D5B4F2FFD85AC2EC608C8FDBA44D09EB096DB
EDAD317C7D03E100374F4DFA4074A5896BA7F138882A4824882377C7EFD185F8
85BF76C69DC7389E8D15B325EBED86B1CAE2074B7E3BC175C3A3BB199137C3DC
BAF784D79C2F0A87795B71B194517E84068E49784990D3377486A6E2D75B35C7
3983141BA943A9A26489E29737212EEC59147B0B6223727FB72ECC108A50B1F5
41409E3EEC73482CC83F64ECBB83C9A77A3FBAEE640FC7E512A28BF6C44A2EFB
FB1F3A49E2B149F0E5A7EAAE21CFC17AEB484B86AE3479CA9B27527C68B896ED
B1FAE22EE3B71C15AE8333378E0843451E4D9840AF87F800D3B6E0248AC51D7D
D787D816967EF9422ED96D7BCB0090025BF191602563CC2F0299A244D75A68B2
60382B6F31690EB437384631FC3CF3612B7F3E2CA943F9F575BD2DCEBCE2997E
7C44261C0286C536C7CBB69186F7F60DE4F411A118233180D4E6FA6E6549487E
EAA7844BBA05EDEC8206F75F78B8D65A0659325E714FC274D26ED9F5E13ADBEA
3BF76DD09C822B780F02A8FE42C6DAA59D9C57DE0C572DF41353E95A22BC2F6F
BA41D80517D22AEFABCC27AA458695C1DFB52CB25131D7E92235E46005137742
93FC3BDDAEC84CF12CA660409166E7E5B3AEFC69FBAAF81D763ACDFBAEC50F70
CF0B45E1962DF6AAE5843C9499524ECA2DCDE69DCB84E7473AC72096D90F2971
53D4A16A2DCA156A83AA7FEE602FBFB67B621B585BA716A3D04B97F1F060ED72
1F2B3F08CEE5A7E23940A833AB5D309CF795520A8122F5EFBE0D7F58C0B3B312
0BE5635BEAFF9CE68A0E1D6EBBDA6647C1B13C0522D01EAE2FD7B1186AE95F87
24AD5B0E332D05B7674D94EBC9A78AAD012E8AF69B8C6AF163747B603D5258E2
36BD701CFA08B3DAEDCE50F91BF5B36541FF240FC0DBD2A65BA4A65FFE7179D2
096AE48F387E2523C39EDAF5CD7F0C4CE5B4DDD0B6250BADA65F839B337BDFC2
0A1697D2FF3339104430B8DF2EBC5913F1FE79CEDCECD460760013A78277CDE0
5CF091281E754A9A4C16417C62E589160165AF0495078A02EC5681D000A8BCAC
5AADFAB3456F5C40438041095FC620AD94696DBB89DDD4043CD555AA29B01C53
A85FA15A5AC2D817632C6860143D563819EB1ADD2696710A2E41C74ED56599CA
1B203671F2DFC03B251D8FF519B2ED5B28AD0CF0A7C36886429F9D70DA0C55A9
A185561A17AB07A0CDFC782280B8F292038D3C169807E5821CCEFABFFC27A29A
6DBEB692DA688278B3F9BFA1BE9F9A7576FB51282F98CDE35FCE79414F3F7940
F725CBE91EA91EB0507C9D25D99E401CC459C39D77191124E694352684D49061
E9685FE4ED877802608D426DC433391AB622F2148E20A34097DBF413C759948B
4C94DFE7B5ED8CB474000B0F64A7847014116756135133BBBFE1A1F5C12A5181
2BD113D4C2F5C4ECED55B0805981A5FFE1F4E73AB0D9DAB6C9E21B2800EEF0B9
F2C24C2B7507031FE3E5CDD94A2EEE7009EDE8100554BA5015A94D32EC4B9604
A6F8F0392D1504F4BAE7BC51585253C1760F8DA257DC2063A50D0B9CEA5492BB
312429680927DE1107EC1C2331270753DF6605E7A9B4710BE9DF1A43B2465475
9F7631E13386287BA1D79CC97CE6CA04111BF31D4E427DCE5EB3B010FDFD62A9
2291FFFD9CDB78B8619DA47DA7550ECAAA8F63C6C2A74A199E3CED8BA610AF85
E4F3CEEE61BD96095821D9B1E85677D60E5AB8B197E71BC91760CA2142BEC03A
B7FC544C63091E3A83EA001C76B681675F5E4400D758C423D376E2C5B4AD65DD
A53F44B6905704CF35D7BF8C3CB2AFBE3096942FF36D76863F16000383F5188E
09A9E1B8C023F7E76EB5AAE4015F53DD5994514C074D8D84A638CDAC659683B2
81B2482372B2C20ED895E24A946B868F9AB139E0D52459CBF98371D3C4FEA5AB
ADAC5EA22527593E92E11995D4FD9C313B5546109906B88A152D9DA644A1DC3B
5E9F9330814EAAA49FCEE679C989CCC086CAA9FEF18B2CEC51997227CDFA49FF
D913B25952FB9F925B1174BA9110845142660F556F69906E2416B7550D5216AD
F7AD439351E9B9EF85ED875422A0A51F2333C9056CE84A887F0FC79D2860EE10
31DF1081E83957FE4360050193A496C2930545F8CF0EB3B959AB1A468E881781
27D4338CA97518ED2ABE4ADEBF8640219A0D5CC9D0F39C26E9EAA1DCFF772B5B
6C7434043B2960936E204F735DA45BDB18344BA5CC8E4B3FB29F2DDC7EA1B24F
F6C382ADA7F6549B2EC30EDDBB288EA85EE61F6133348A263E8CA6819A781190
659588E9170E71E38419BE40C23AF5E0D4ADC0BC2D08D64BDFC3240507494F7F
10B401C9A2671CDC00202AB45200693D9EFD2E0110B640E38CB4A7EDCF271826
5178E45959BD7D3CCA69C4BCE2D5E9EC06945B69AA5D71B0F83384D9F9DA3D46
7CD72797017348ED2C6242DA2FF180A3D7E8EA917D96B6B1C07E4B12A77A5DD7
213111B6B5FA34108CE6151D158AA7D6F4DBE64EF728E2CF410380BF34AC17B2
E42C84A0B24C1063C6147F728253A9BDEE22D46F9CEC8C17FF66C1F90D8C4E36
6813976295CE18217C34587290413C870368709A54C7F3E9A79A2548177B3196
BAA257EDDD055A37FC3D5A6F2E1C44DC9434D310AF8455122F4C993BF3C63FD0
A0683F715CF8474D4B29E1502195D99E0CC14FD8CE9CCCC7447D29E14F215704
F704BD3ADCC78221B0081DCEE0635A2AB436C58A28CD0FCA766ECE69CC4A6082
9A62619291E739D44AAA942280A326B0C489CAA294E34547E7C24FAF84335FC6
39325A05529F9C758AE197EE47973AA840ED76687F4FC982B1AC13D672FDC9CE
663AA242C9A7373C3A40AF6A57D1934E148831AE7C815BDCFDCECD662966EBD6
7D279B93C6D340C9839D58A365195647F6BCB28B5B18C7EB48D22E71F0F57E90
6AE3F15F062CA4814BEFA3F91C6CC407654A8C311D3B3C8F5901B2AC785B222E
5DE26DE0D19C3D69EC4B6AC687A6FFB981919CAAA657A12963CD3C023951C59F
3E09157F87CA9762F00A7EE3605559F8A58E98A93DBFD4A001BD6B09F5BBEBDA
BB92D9EED8443E86A351C8566C8788F8372033BC88F3435A169B30FCC9CD217D
4F47CF87AF84CFB24D9356111575D04F9AA82DA07E89122460848153C749EFFD
8437A5F6EAC2FAFA74A06B67BD2696F2294DF207D3D59DF7DACB37D973948282
AB4E7C0D8C1F0683360F2D3622BF4ADAFF8E6C6A79D4E8BFF1463DDD942178D2
52686B85B2286A4364A8CE71574F2DEA72E061762B22C96022905E2555193FC5
D973408F12F0DC4FF3EC066040B65B782D0978E9A3BB258933CAE88ACE50B291
BD1BE5B48F755E748411037887C4B65F6B0C12DCD840C0DB82DFEA436DEB4794
ACD823CA8A116DB35E6143D9E5045ED8B257409615C0E2C1B198297C989203D0
E7BB16A2789F0C4CE77C906DC8EF3CD04A15F0161A5882FA56D979F3691C3EA7
CE65D30AE5B6E9197E470E7277AAFACF46EF40F4BE6FB515312A345FF18B169B
121155CC01828C697BC8E498A4419A69F3E76C4A1DB85360D56B2BD7DE3AB4CF
D3C77A50DFC84CAAFD32AA716301301AF689A8AA159E9E240E0ADCD0DF9EA71F
D357BA6B94419F2D44144D129ECDB576A5BA94F054E551AC2D62B22B8848AAD0
92373E4B88789736CFBAF1AC7F16BB81496BCCD88C6F3D469493E2CEAC47428B
18CA08C4A6BD94D971C16801459F46A6E21178E1B738BE7DE9DD671B3D8B3E25
DF7804EF844455C2B8BA0F91B4728718EC61593EC32F0C344B0DF25879638250
E227FB0B8E436A6C6F2A78A166ABBC2E734581506FBF423892154563BFEC6F28
AEFE032A82125B0C341F2EC81614CC18D1CB92D63B3CC603C7323B183FC136E0
ADDFA67AAF3565F62C32C66D100AB8293C9A07C12FEEA0C69754128BFA2158B4
FD78D89E2167E977EB8C0475E6BF7B0A64688595EE9AFA29111A71BCFDDA20BC
D6006B0309EF09261A4E9259D1FE04E335F3DC475FE7170420241336556E4465
9904664AD2265787132E8B07B3FD7631DCCAB6698C0E1B3883394BA9D92B8B4B
E682E5162DC70CD52C30C67B52B16D78473327FC82414283FC7AE67D07BFD4AD
7D7C4574F0F0515712E486C25AF2E0C86F2AEEF587F7FF90E05A28234C71C00F
50DE4855462F941DE00884102BCC0F7095A328915653657F59658779E1F56C5D
8A1589528DBE0C561289A1F90CDA6BA8684A5D1DEE81415796E13DCF906FCDAD
B59F92F5265392E03264AE22D81E75A04AE68344A9F151D0BDC64F0A8FE98AD9
4A97AEDADF621368DD7980ED84CFCFFD63D6D53CE9FEB02D5261A7DB036355DA
8332C4835D2AF667AC6987857EFF043AC923ED57EFB8E168CEBDA82ADA3B150A
099993B5687E49A8A15EE28E5772676DF8F2F603F3442EE12E199D953BBC2A06
A959B629EF7444863CF361D2F7242677C5167DED134379E63D9D00667CC3658B
3E33987BE2F5314842D2C191A16ED86E07D8E45FB322FD0B3D25692D2F761894
927AA91B20D4919792C0C0401277C8AA20CBEB355AD40E3BAFBC93DA7B077DB1
6656E1501071A01D7EA267BDD89944986C15BEFDD997DBA47860159D5B6A6B2C
99867D33D1140F3F2A16A735AE2094623E8FBCB986543F6074EBC66039E7D368
E75D440300F0BB495ACA74EEE28CFA47054DC41A389203BFB3D601BC9A475CE0
21F2D9971412E29FBE30049247EC92CD5E35949F4A01F1EC5E7B5AB9C6544250
D956689A9284D1FE34E3D53C11945C8D5D2F3D79423BE782A8C7F59DF0C0EBF5
A121BB933F48C0646D2DD818F9433F9D5D1004E5B7FA8F7BE1A7F6EC679E1C63
E82438F76F9C951F43F37CA724436EAB202A661A1364E29B665C8B5628D34A3C
4CE4E45AA81136B66DEFB509F4B1F3947468603C50777FB0F4FF5BD2388C81D9
75E2B41B3109A19FC1BF7201BE51E7B3C0453409A7BE6F53829103F9CA4A8FBE
5A095651C20901F88098B1C82599B3DB0FE2951946990C0F59C2F235C2A2AFBE
D4D63F523C771F29D09DA5ED43D76451DCBA5D761E49FFA85A1AB47D180AE3FE
435DA7035C5E100F42BE4DEFD9F94C4D90966BBEF12F3C8DF63F2B38C3967051
FF9FF10CFE04F2987EAEFECC8A70E43447EFC2E50A7BF28A3F7D8A661BD1CAEE
40DF78CC747EAA5E4C2B6EC623984918C077E311AE445882DB04C5B7154D1DF0
103E0A79EA1639541F6B32FC4F39FFFAE3470872A0F7FB1ABE5A9B3B6C2DFD9C
A0C8D20472FAD8CB8C5B8ACFC11D750B8B9E9AEF4D4B7608ACB47F35DCB27088
206A12224DDC3F4197EBC05BD8462953EDFE14AC8FE5A79EB40847661FEE0F6B
879E97C02381CBE7658AE83374D4C2D34FC7886AC7504F981E131CB81B136793
9AF0BFF66F35F6816A95BB8C640C387E066A485F3B1D0C21299E38A93996A0EB
7A3357ECEC940240926797C0FF3963633223EE144CF28896B00F6AEB2422ED37
B4105AE85529A9AA5BE172DE470E2D0FB11E58ABF296C7A9189A9F1613606839
8E090398D30C70B8DFCF9F139DC715445893B5114C47C7868E4E078D6CDB0377
6DA2F5709FEA2BBDB9DEE7A5CFF0C2C062DF5FDDD22F1873BDE4D108734120BE
31DF778C9B9E07A0A939C466A92E8621EEF394E2E6C7320D74E1FD032CA2FFCA
F7B7C913CE0EFA7FA8708DFC17961FA82A0C847ADCC5187331D0863A4573BE52
0C157E2176F487FBF625F17BDA24AC5310B950DED8E8F66FAFA591816E90A4E8
99E0B7AD32E22A432EE212F87FF8D8998E82194DC83C7784B773CF1FF25D7EC9
99965192BB03E98DA3807C9149CCE55F703A9939D5146629773BD2D54959ACAC
182EFCA0C834A6CAFF4B1A495F9F839546983922682F313EF3FE72148ED6C631
EA37F8149988EF22E2FC522017A6BA8E027961B9AB06757A05760017C4791B18
829A964E2B80466DBF5CA45728E92242C866F3C4AD294D52F199F9C7094BF0EA
D8152BF74914B59EF666E63DDB2427EA83A5974A57C507260CAC99591332DFDA
1A5752B5222EDD9012B45CF0DF0644B2E3D0BEDFCEB65F4FEECA2A8F28EFA9D0
8A38EE36B8D5F27DE7FCD8E2D7970ACD60A5C4094B6892EFC99C0E85370EE0A9
E191B82FBF48C20DCB99FD2B5DCADE708A743860D6C9B5432DED2E8B2A3A02DA
C9023D280FF035CD0789F91277DF1E391ED326A81361C89D81B3C53C5B458EAC
70ADFC54810310CB0AAFD149CA78C51FCA3587638C90683909D6D65D9F18F4EC
BE5131565720F61FF5AC827C2A085375313DCF0516FA634AAC54ACC206DC00F5
B58A70D546BDE99255756B2C5329167694E1FC7E62FF0800968648454AEDA437
9DD3F0CD712EC46352ED1B976706A6AE560AD6A82C3B0C678BF889200505C07E
64B2D4509D1270CDBEFF01A02B3E9E0DBE3B1EC0269ADC9B69CDB6C18852EAAA
0B86C9C1ECC79C50CC844E607854D32C6D52E83F24A890B95D6D363332A81A2D
1032BD4E945838F280D66A50943713A21050452573A97EF319AA589E50FB35F7
6EE1819C6DDE6A40A63DD28732CB57F2E9550309CEB6CE0B242DE8BFC48A19D4
F199BBD874DD442CBAB18D8A0543D7AC9C4F6CD5627F2F8BF3787EF76E05B43A
89FB68A9AACA01BB548AB553986E7F8FFD4171EA645516FDB1E8130823FA5051
B3D743AFEFD90A9A9AECDCE9993C761D42514E9C5B2BA8BE7D6136C56B539F34
635BF0A6EF883B19FB2CFC04EB04F018BAB0F9083C66F075BCC54997506AEB4C
A82AEE9A73D7DCF772264F945E576DCE2F0AB9A32B63A95CC91EF41B8178DA7B
BA1594306DFE612047BEFFD06259B256CD1A08F6238DC2F7540FA825DE6E0B91
0F0CAF88E6309CB00AA35160399611F568608C6A8E353335EE276D9E9E059BC4
5E897CE95A9C383309DE6323A125AD02F1EF2A57BBB050933463FAB7C48DDE7F
5C8D654D5B6816A6DF50DF6F25D1BB4F3D54E2FE91BB9CB9682E9DDC99910D12
31B049B169BA2D77E4788F021660104698E9BC23BD9DEE2243F4472F446DD080
41E4FA544EFA4FE87D7A73186CF588D68AE3E876D7BC661DEA90F559625C437D
454B153D80514590F1A6F5EBDB837B5DF27E58C30BB08FAF25B6EF8FE6D2DC18
EB4C02C6BFCEC3E71E20E6D98C2CD3FDC27CF78E392506AAF7A5C8A21E06037F
69846FA4E0DDE9B1A7A1071CCC95F1306C180EBAB7AD3B0F9AB5D2687ADCBF4D
6FA08D7289D923565955106A2FFAF76554AD3B0B79A7504BBF5BA6C59C6BE0B2
BF3FBC775342FCD0D434E7C0F668AF758C46B5E53F46EF208122D2125715A88F
AB1C999BD8C391F4F045EE1155E8E9933CF14088BD62694A5DD0BDB90C60A5EA
34DEA9503526264180BC9A835DABD16A1F78C77D6495D7FA19437402F3A9A71A
400A73B32CC5E3C28D3A33E4A6BE8A91321F248F013EE2B3F74B7DF109DB0C0F
324AE5BF50A969796BF3E807C04A3B0CBDA9FF1FC3FF4BEE95527AA116CF31B9
71CAF5DBF65ECCD01FF043439D7FD542A150832F513E2360F5FB6761DEA090CC
0A6FB9A659F2DA60566CAC0B6A1964390C3F2D8520A94CFD21AAD0DF06B4BF02
9003FC108A0BA679774FE82475745461C7B873D44D6F7D41AC91E8404D8AE952
C3C78E4A6BC9A43D8E420B0D93133DD2DC58828E007E0C19A802A795CF46E828
E1E6CCC05F61819E9D2C464D0E3D7358A6A0046A8EC2FA9A72C364D0FC44D155
6A57DDA0E73A6DE9601D7AF80CF2C539F60B15AB2180C00C79763C7E570067CF
4482BD42D94EA58ADF7078D5FE8E1EF1CE1666D70382E4706841CC185AB61EEA
65500D048E11CB8A8E505E9E31AC0608B92B68FD220CD70AF44BB32F9C1DACE3
EB09ACA945EEF636045B5F3A3E6DB94D42D21D3EBF967018EACBF1A9DC9F280A
7DDDEE95B71FB8E0A9BB79B73DF988E4DF91A926ED82B2F9D5CB5D32B93F2CA8
FA546DB1A5A2BF38CA270E13A57B48CC839F5DB46CEB46F8027B303F4B3D3DB7
871065E8C41CEFA4148A2827452E7CB712C10492594501AF33637D19547C8D92
E24C1190A50E8DCED4CCBDF2DBCAF910A75A1ABE13802EBC5EF7908D61DC742D
EAB3F8790D4FA04FE263E9D7F4313861B4D82AC0887B54543BABA67E59508CC2
064BFF414128B73F197FE9A867640D620FEF39AD07E42A06F9439EE105C467F0
5AD100DEC127DAAB0F7B3A0929E7770DE989D69AD435231EF7695FD9106CFAE6
230C5ED1AEE07727D070AE579AB1C8C257EC4A6C0F3441C002CE71B9439CB32E
A91176D5C3100AB4F2826244FCB581300D7C3717A97F98B26B954F9A2B20D805
0A9C99E9CEA176003C233B8547D3A8E869BEAAA7C629184E2CC529482945CD71
B8CB52CF9919C19E97816B40B5FABCB4EA85EBD2457101244C3F63AA9EA53765
FB6BA436C6382B9ABB385D300EAA72C877DADE6260F4B0C4032A9800E5888A24
5527E79C94DE0BA350C7CB319F95F8038848C195AD8F5A5671335A0075A7A9BC
1C6733221507E02CB0EDD67622BC5CA310AA57295EB52BCAE72A9D41A40B32B7
4740CF0AB3C5BF48047FE58C151A81EFB5E51602A3787BDB9245562DBA3F435D
57928987EB0BBAF4DC8E5CA93CCDAE25F69440E0F6A9502C60DF0E395A770399
E200761F620B0ACD8F54015BBF75779BFA80227216783DA1C202363415F5C32C
F0976EF58F7AC64DF0474186E98BF276495B5C6CBEBDBD569AAFF423E8A70717
9011BD1716C6763544EF3D5D6E29CA1E73AAD2327257F5D1E734F6C9F5BFF0B9
49E663B43E93E23CB13A0643D3681F9DCB79A86D90D7633BDB4B34A50483F9B5
3E467E7DCF12546E71D61C636D6AD25B03A4435C68645EA1076DDEA892BE5622
E1B3F8907256A57D37BDF1124BDE237F6222DEF186A36DB117FF0B51019EB4FE
D06363114119E8A2CDD3F5477B7C100C82E82FAEC0BBEA7AEF073940AEB76731
EE262D684627DC8F839EECED8A0313FA9A04256097044F84EB90EEAED7EC1C6B
0C1E2BB69D2B47F64416E90772ADBE89EB2297A025219D0B26577B76B413366D
E2EB8262B9F8853186E6690AE8FBC87D5442D1568BF989377808FAA8E35418AC
833780EA85DD29E32C27D9A5930533FFBFA7D3873F8ACB0692B310ACA0D27E76
80CDE53DBFFB0C6D14EE78D04912B1902F054A29F39F2F0B29BC08D0426078E8
0114385D6B52E2C15B9FDEADFADFC8BCE85D2A7E4CF939DDC479252D945C1139
2C643D94A36B2FC74B53A9E929C04FAFAA990BFD66B1165B3942784392AFC144
4339665254CEFC2A3F928FE43E874C8E24ABDC6DF356C169F769CD62F10B3828
E2D4688EEDFC1361FF64A136F8D64239194AB8ED0EBD436BABAB0A3073E0D179
7F005621C1A40C37B2512709447BCD13409FD3F34ABA473660D1AF95A76D2984
DDD361F4918D6867E328F1F84E5BDA904FBDA4B3EF695BC512E973F4736851AE
BB3A3A400F90F4CA3AD5276C6CD7F3B16DB3E06657D8CAA835EC5A06F8509B06
FC40ACFB93A216DBB2B83A17B98CEF4A5E6EF44A0AF00EF84677E7D2EEB2C866
C5E930DB26D3CD19C0729CA4B2997185F11DB62CF719325A4D79CB1A6B4D4085
B05A59E67108085652BA059748C85DBED592F94740B610C95A7661ABB023DEDB
F901C9D1C609E57DB693220C67330DDB4246A135BE0037649F82D4160A072700
B6C9378D166585674696E4BF1AEE808D6CD7CACB5374C2DC72A657050B17966A
0376B6E1B8866BD68E1B92EF6E158C31B9CD1453AA60F74C6E518695AB12F725
34843E5E93A788C06093704501B9BED09FADFEF45E20971711D9CED53A980B33
42CAC159850323FAD883A1DBA0D1C540F91A6DAAF4B6696F617B10306CF8B3E5
C0AE6E940C93E3661DD7D2C438D97A0EC787BC848FAE976D9F2965CCFBCA090F
790E4D1823482C89F05C2E19AEF463E41152F769D70FA15CCEF61E47BB2C4FAB
D6F49449A363445A2CB7744E64268A3F81C45B337E0CF018D199A3BA93F0C164
69DFB20D3E91FCEFEE045440027541E3A6DE06E1E75236742F8777F2140393FB
0630AE944938B003B93809FC794081B4BCC7E123D21F0989771722D29E400445
609DACCA674E3E1D9055BB1DACF3492713DCED43D56007338877C233706636B8
B8EF7788256139AF8220AA4043D3256B9332638583F1A1A46CC8A98C8C37FDBA
01091438C6D2B696F88E67326344E88A60C5DC94FE90BA95194C5A11FF8D86B6
13F9E6BD8BE1C6B8AA8CEA805166C863AD560E34415B2723B2BB043BF0184226
1EAB214165FBEFD1011B373B255A9813504480158BE5EEA656F599E2731CC10D
D6DB26A54F0B55362064607B53B6E9E2BEF60B791FB4C2BEAA2C0B4C9DA8A09A
699A1D22201D489E294787F2C4891E1011B47B6CB027C95910766B74CD7EC155
4372441CED52C7D3FAC100263FC0857A362FB0407DC531A5B3DCA5380E62B246
EC7794F369B376E3CECCD7784A4E703B0F2A00D0AC8582B951C445BC4D21C7EA
DB5A61DBD821EB242E2C52CAE772DE30147A944E55858B993EC6561EF98D3746
3124DFF7ACBDE3451210DBCB89FAEEA1340BB4BA54BD5506E99FAFD24751055E
E518EB30EDD6A5B7B1D97522704D7111696D9452272D003CC87818324ACC8BE5
F5982506E90DB96568E8E944F28E1FA96CD089597BCB2DC77DB3C39A7818A32B
26E86E7C5C16FB6CA52DE3D7DFD4B51B184A3121BF95695A8D3B2E58976623B6
015B6C9C9CBDA3DCDF1090717E2CB1741985769995FBDFA43757B660B7C8FCE0
D6E3EBF2A56E823884FC7484B6B481595E203D92B01A833755B8B23531629696
168CBAAD715A424D25A1A42990C65FDC194942A1B609F6A9259F928A67DD3DBB
45AF9B595799D8634D207C42E626EC16A306ECFE9FDD199496803668EEBCF5B6
65A529E95BD7992E5CD85084052BEC0D68A2CA265BE867DC78B20D922EA546F6
C80B053B3C44D12B7C448E42EA9CE40BBCDBAC1D918F75D0C8C268C6BB20D3A2
885C733AA69397DB03DC92C12B52CF7B0E707E906F4EDD8C8ABCBBDC57AFBCCF
04C452B965886E365CA56F65F2CC11BB4A7FD9E7073686D697ACE9D8180E0530
5BC80AA708A1700C7CC368C586FB3B83FEED36650E9293CCA8F2BF0C466D7B16
408CB7D8C1817E4B54ACB51E7CCAE7FDEDE173C638E45C00965DD17DB0BBFEAD
C851CE6466422E848ED3E8C88845495A91E16F10EC7733E1200CD9B5E64328E0
78A586F8FAEF9A1DF16295BE4A457FFBF9561B9BEB82C5F01A2DB2F322DF0BC7
34A36DE3D9CD62AC71A5C903832446E4AF11C73D5233632E57E5F6A5272B1157
3030EF978EC3DEAD155E703A6243FF6AD2C9659FAD6BC68B1E20E357DC26BF8D
354BAFA9BF5769B9B462BDEE65E58E919FD4268765042E86538696AEFB7AADA6
0F8696B62E6732328008BDC572D7EEE2B35C58847F36B825C9E7A72CB9B13E31
B1C77B64350E03C3EB6288733565FF7840345788383D23049D0FABD9CFAAD964
A083F0C10CA164F462CA2261391248ECB33B87804B6A79D8761E1B9676F17CE5
DCADDC5BB14E21CA654D2848A7A5BA25E9B4A056C6835EDF612F0BD9A42048BC
85D1D0C279B6737260E7D8B906297D286BC2FD63EFA70423D5D133B68D3D7EA4
280488CDF1F81BF7F5D47B4404BEF951F37D4506E99DA9405E0C9A126B06199F
D6AFB85D730234CF7E732FE4D264A57EECE04AF3F7E37503E38D2D9487818C3A
714750C47BFCB7B07188F0B14632CC4CD083E6709D5F74956D7C9B33DFDFF7D5
296EFAE16611E0396CDE60B749F3B66A99BBC92D6C3E62D4026AFAFE20589D7F
A8E1EC06D9A0DE7FD6200053FB4DCE51D99ED63865F084CF4D3CED5BD186A7EE
DA89ED4821174AE106733C7E82FF9F61B1D67A79CAB6B60CE94E08D458303971
C48A29293222794CE9C93F2DA22AC2E04E4054D766FEE1A0A3F7CE859C6B5E5D
D37049D7EDF4B3A8E2FE93C04CA33B92CDABCE638B03A3F6E6AAC605BC08BFF7
974C1B26A3B398605449CE921AB4410933AA87F7B296E5E70B4516A0348F345E
A56D9F24F9FB03EE9EAFD25E662465BFB49CE363E97FACE154528BA0D43180D1
B3424F0FE3595C5D7E2FE5978681DDC0E39FBF53A05F66C783194A7AEE8B5ABB
1C943592DD14EAEC1D64FA96373B7C84EAED02064FEE05CDF0467376C93FC18D
41A64928465344E95B587EC37F045AEC42606A82964DE2E70123EC030F412741
9FC18CB1B7D814AB1A333EA3B05D9CEB457B664312DB7CB40D2AEC64B75961DC
4A4AE0A86EA34DD9E0B5425E6AB6C03F430E350B8661EC9089946B994E0D56FD
CB2C872F0F99E521E1447DF673F385AC9551AD0557273CD47A02DFA0F15ABA55
3A6FA306A682CE7A73C47B1F9E25793691582E1D995EEB254F680083B8398878
40925C1E8F6E71FC3C112A2667ABF09651A946CFB44714DF14B486E543C9B53B
9526F268A1F41F4214221915492A07E3EA323ED9AB88101B419186E4C649A91E
0FBD21BA4CC1F454D89FB03C2EF38CECBB926C2C30020C55CDBDB3BCB660EB75
4688115D0B5FCE28465154613721EEDDDBE05AAF3AD67DA33B8F654D14F289A1
3066255D948D11D2767C5E7DE106150CBED0B480B45A7643C7A3A1B81718F3A9
94AAB514F774C56DD5B017BD8E32409AF2822760693F057E98F08E929A7C6134
6C6CC3CA71379B22E1CC806EE5650BA53FFF1A7A6792112038FC060531657E68
6BE337971B5CB3646AAAC03853728AA9BE36671BCA4A893E9F1C0FC5763A2468
92B9DE511DDA68E9EA8B7766F05B96014F57D9A12FD217BCF4B244551122AD08
152B2ED68C455B8716FE20A8895AB63A611871355D9BCAC20BBDC54427BD6DB1
88290564779125A9ED3A0B6744B698A6F6B6EA0BEC93E6746D31E8A4D0B6FCB4
6EED58577B5F76D69AD40DEC88D1FD75A8096591F6A4EA0E987A34EE7EC76B55
D5B9B58454EC138D9973A9C38BD4CA187F2E2295B566CFBC2227612303851540
047B466EDDA8ACD42B1222DD04735CC7BCB87BC3368E357C10FA3A3E722F5045
A4520964C8424E12F1A42B0DC82797EECCCE013CC3CA6425B54D0B502EDF26DA
EC366BB332156BD1E98DE83A0C52B13031B8C132C8BE81AE334F8E4683D2660E
765D8E4B90F85E2CF4AC8FF488B7342EF860AB6D90C4AD79640977C977BB8360
CA0DB80D9A452808A42C56B96EA6801F659B3DB50D0F5135683F9672FA59C9B9
1889E22999325D4CB6879C39D92422FAAE6A64708F8AF6DD58BF4982B330931C
A208687CF7B48B4D990036623FAFA4504EEC448CC520D857C2261F13C46D6993
E16CDE168789BB5740B2EFDC3F386C91A359EFEE9E6DF439266FF753A769F612
4346CD340486B7CB05BA79760C0FF807CD1FE2354FB7FD5D8BFDA5BC9E13BA27
21E9495B7156C1CA16598BB0569564AB1AA3099F1FEC266D8F6033E4EA7C2DB0
749EE0F361D5561FDEA8C30C2CD1F97240F79293739B573E585E11473F0B605C
0EE1ADA95E0A59BEBB390BC7E1CDBFE9250FC166EFBF14290131AC1F4A2F64EF
0D8D44B234D6E1E972609FA421B90BE5C4A6986372FD48D950ACFBA2E0244F99
EF169D76A94A4B90E6763944E8AE5C5B1A41FB9610A91DC60B36B27E8F1330C9
B4D3ED93F719D58A2FB86F6089F4BB342ED08C4C57DB3FBAA1698CB6FA5D0ADC
4A44D1223B088528B6D91A6D8DC5CD73DDC4010FB21BC64F6E19BF71EDC8301E
D4A6270A5108BCB77C3E6976D8E60928B3C2CBAEF5920A0C48D6F45953DE6FB0
E62EBDBE81A0D758AEAAB9E584ECEE31D76E6AF7D0DA99658CCA34508372A853
38F7FDE7CFF32F5AA209E9A492CBCA5E1285AA10C265C7A676685B4E87933D41
A7F388D695CD99946881938BB464AE47F9AF7290D9920DF2F3117D261F2C0669
EC195E00255E24DC8D40D379AF0AF9272EBF5128A0EB4E914F60A0F2B390BE63
8C4313878F39719F70FD78F543B95AB63B09FFD9819242FA606513BAFF67C081
7E3AEAD3CC66F0BA4DB644B855729461B31B72B21D9776D464C2652A439BA818
67077B7E712AF56817021C63FDA41E1070870F50E2C0D1F0E45CE14779760693
C5F46E4B8A87E217FE1B6B256971F354AB4CB688638A47540C4E556FB32B2E76
A1F4D8E199854A8E1B65EEB52FFB958D70EDE7B41F921212437F2C4A56A8DCEA
AEFA6F9335A36BB499C85AAF3A2346EA36D061AF594D2068DE0710B0AB4D5210
17BECD3E85F0E3F8AD2F0D64F93FF369928C40DBE7BEAEF4437B5B253F35C537
954822BB8D386E2CB126F79C5D281046EA18DAEA3372171FD26DC978879FD8E0
7A3197AE02AE2BDC6550A7A474E68ABE91037931C69BB6E125F20863717851AA
44975855AB505ADD97E2378DDE7F1CE70C55C9CD55D7AAAD77290FCDF46F9BE9
D719F27C2DE62D00A4872649AABA511E0ADBF53EACC57A1210DFB128A91A9BE4
1E20B23917D8FD7F93B26EE71BE9695447C83229EE0ED440492419A7E232176C
51FAE665989C6C343894420861F4A1A01C483DE72FCC8B15E47F7238FF254653
58327AFE2CF7D8C5B3D11D6E6B9A8E3A663A7A44FEC0C39EBC259AB299A0B706
1292E745C6DBF90FA2164061BECABBF6ECB0317CDB1AD7AEC2C6BEA305957917
EE5CD95843F7E0D04E6A27CE9AA4C0FBE6459E14C4F90CAC63E350FC752EA75A
629298482F4B4D2F50ED0B7DD50504D212B6E7A84CC72B3734C6D488B3B0101B
2A9489C0141943A419FEC5669837B6C183B2385C4A11071D9B174D0AD34D875A
E07B8C58AA92FEBB826261E53DB3FBC4D83CCFCBF957F8DCF5356ED525AB3CD8
46477467DF5C576E370EF4D5BB0A0573D2F18F5E535CF13BF27BBC7058F17310
5DA771EFF59D9A04486C484B9323775412394CD8422CA8B29C409D502801DC9E
F0447BFB95F7E8F1DCA6A9AEC46BA650BC738C88C69D35FF53A769F6124346CD
459142D732DE05F2238D58A0871C289DE014E51E1321132076E88A6D39E72F86
71239185BC51AEDF1958B7642E614EC53106167C7D7F03327A621E320C53B478
0E72832E4C96FE7675CBE54BF15DC7F368791FC6BE9BE7FAFB2A0732E1785EA7
EB0BB4F2C8AE029B7BAD4B9521790938B5D48EF28EF674BEE050C09990492774
D2653DA11011D3AD80DF800FDAABA9E9DDFB91D069FB0EFABC692C9A23A62ABE
AA6FE92DF1B6F8DE632DD52F71552D5AFE036708AB6C5C2337EAE431375E8AEF
82DC6C900965F7526EC2BB282E7CF12079ECAE515EC7C62F5B247A3A3FD9CCA7
A9F8BCA4DCC9C420FB00A07A0AD952E1AB36C27E40DF3DC75C7F9C638FE6161E
997475ED0194D3BB58AB9DF4B298391CDCE4875A3FC6718E7B1B4B0422B9E17B
8A707F1C58BA2BEFA2EC531A31073AF6BBE13651240A456C3E18B956725F7876
3B308560FF8C2D0F0338BC57FF67A3ACFBAD6D1FE9595B56E42E947DCA8D294C
3F1E439996152F4715C6C3B74E4F4038576EA0B90AE87A5F2ABC479FDC316DAE
7EA697E4463AACC0E34CAA61ABBDBCA7D4C9D90F41448C097C9961DA36069CF4
E3BFECFEDF7A2AFAE55599605F785525C719F50DD9BE6B2EC951A5960C507152
F8F8772342C542F9C4C039F8EA5BBFE249B7B816DF6B6F05572DD2B8AED15E49
CFFF71216786AAD4BA6096F6E7C9330DAE71FC0527D7A1A7089C46A21FB7CF53
3220B98033C4544D1052832E6D533C96DB913E96A363543CBD983F30026264F4
8273FE6FD0FF059814C123CA62473B4B61600701A090D2B5165F07E4185D56E7
2F0161CAB48C3A9DD7403CC91523FA8758F9B05EF9C229D467F2E7A0AE65B18D
7B61F66FA13ED6DDCB1BE272B2373B428C15DE4F5496436BAF009619BE6F0019
D0948118957FDC43E5EDD6A0F3E143B03936C7F00F91005BEB9C01EAB27B971C
CD97C383546E8123B003E96D77B514A5BF7F9AB873E9AFDDDC257EB660656500
4EDF1CC8D5BF787D7FCFC3B798F4402C6D2FE6F686D20428B541B72B24BBED5B
6316A452C3F522AAA8B62ABFDCDC23669BB1366A09E303A4A7D4962E8E0D9EE1
14BDD569684E646646877484991E51495E77D2C3C67E71D8BE2BDD5B1C0E5DBA
127D25B21722D34A326D4B780385107B96FDE0B66FCA83454877A25DE5234B15
9C810CBE34C75CCC596B82EDF5182C68CE44C2F0767BFB31541E90FE5FBD4046
3C4CDA9AAA5DEA15B56223DC62B4331E023C73184AA75969A17F5C62AD9CA923
5A7F4C3EA503DC3CE3D7F2C576ECBF22119A128330DA2B1285241C7F04FBDA6D
15F94F5A4CF24AE6686EEB06A17D521585E9573365FEE8C3A66C85DCF0FB22EE
BCBB2566C8310109A07160EEF75F4485745A0E596C3B5A3159282272E9299476
19931E2597265C85F501FBCBD3FD55400450516DEA5160D68AFE4FAD3E393598
DBF688E9B26BD7BFD160D6B884487FF98FF981D227C5927C2208D9378A355DA2
8022585465176F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492801936F5E8A1E4D3E7274DF2F942B199
6D1183CD9CE1840868C9F63FFD1470AEB47FFF33703961AA34F3DDAB60E003B8
2AC1CF96295105A1686F43AB0766CFB77AA11B6C2A35FAC32CE4B5F87EB125EC
C6514500A94323FE593E382C53036412B09BC866F7FDE874F7CC79FE5120FF31
49483DFA3A94C37DC02088BCC1F9216D904E39F0F309DD6CB08C7537A7232DB5
812FF744EB62B67DCA2A8F59A0CF417AE778624FB2EDB7C4BFFC78BF8F01FD26
CC7062272CDBEF76089EC94D81E8CE1799CE9683265DE8EC9081A4880B2A464B
362143F510C94CDA3E6D8CD562DA5BB51608D3FECD3CE7F9544C28040B982EBF
8250E2EF1CABCA3F1DAAC0C57FA98CDF96EEA922F4D8370DABD6EAE8A6A87593
E33305B43B9266E2F919DD8B7797BC540066E380100B9EC3D442D09379385581
F3364B326657D7172A764FB4B7694BE549678FF4A9990BEA9CE519F34D465E01
301F4F26DC0970629D51DBD141B845BBC7080D960C1297C7925F24BE0B3832AA
D8C9B7FDB02CD351E05A2A51475934C7A76DC59C4B00181228D92288345BCA78
F879078CB928997E517D5E8DB9AE11433CC61033F9D44CC9B5C2E85261C505BF
2F227F31FAF8CB61DD5E0BF53200DD4FB17F45EDCB4C14E3DF23487EEDD3D9CE
F5B4636A092EC5DF2FA0F4243D324A5983198F2A73CDBD54D8633CA393BAFCF3
13178E02D3BFFC709F92ACB6CB2BA47A5DB2B394F6C7F031E02AA401E30A9096
08E8C4C56CA2ED91162BDEEB2DCCD7C4B742DC3CF9CAC9D7E3D281E9C6BAE428
11C87F72082C9BC07B07893B2E4F162655033BEBC0D2F93158A6728EB552FA09
202865142FE8D1300E2E0E66D52D087A2188BC928DB56231BEA4051318283859
CCD6D02CBFF67018A565B949A243A214842D1606270CA23CF3A2456A87125569
56C5A48721B1B1E140ABF9408EBC65BEB7705A43DA4915B95B8BC2391D848094
4EAD3B91C8BA9E2EA5654B276D8B695D12E43E43F6E03946F2C402ED527D6D94
1A52336F85BDA9D84810C541FB5CB6F89CCF85AFF0C765A2418D01DA1DFE6F39
368C16F7DE93B26B72FFD337D62DEAFED226F2B8ADC613C45F872522F3748106
B4BAC63967F79359D1B291F8702D49E38CE7F78DDB94091786761EC80A22088F
D4C9D5156F2043E9B57738EF8AD1C3D450F67B0FFD5674189E887AD14E32A6E0
67F6112896AB991D6C62169A602E510EA85A1675EE98A1F25F9884B61D126806
EC59743E29682DD755AF7C35A3444D643B1ACDED1FB6FEDBC81F42E9372DE5AF
64F15C4ADFC2BAB2DD04B1A7097D9A060C74ADF8ADFEEE2DB7270781DAAA3488
8B83CC15BAA041EF80C5BDC12EC1F5786BB41A5A210EF1503F63E46DE52CC01A
232C2456EE913CABB9B2A1CEA9E0573B012EA2371452E23091C65D76AAB3B0B4
77418D6682D55F6343E2E21E4F330FF9D869E1F2FC3FF4B1C049135B3B1530C3
0E1288EB5D9D11D7D9BB39FDA701503D426C7859229DB42614A54EBFB4DC8097
C0D9B0FB97171C0C5AD05C2736E54B1C37962B6AFC229BC6F0A4AD169C2EC212
D7741D517DCE40C6943373DB96EF2F4010ACAEDDBEBDA6B8EF328EA7E5E6F658
D88D55F4B2AAE6A9516F92F7CB040FE694AB4879DC5D9F5FDD8580DB9122DF99
42B38B748FE347926A7AD4A39C3E3E57EFA61F56E5B463649E058E104A8537D3
D81053D9DDDCCC41A6A77F829E3F6CB40BCBA184059390CF33937128D70FE747
739A0C92EF6EC74EBA6CB20D0AC3FCCDE4F78E0DDEA0146E9E5F0EF49715BDCD
ABD4EFA0BD65C68721BCFE282588EABC04F4E40A42037773349DE530D0A2E148
0210E0BA1D53E704FA24F55107E8C5B9DFFAA7864BFB720C86C730D91093F42E
30A6D341225812EF3FF71793B01AE3C643439EFCCB1509860B0FDF032739CF2C
C73F89825EA046A4D883F795D4E16F79713957F4ACA332BDCB5252DD213CBD4F
A5311591A3A52101009DDE43B62C069E427308EBC12D763FBD6503011ABA247A
0AF3051EE9FD3C2388C1E140DA4004919027257F2186CF716C685176CCFA85D1
17825A1595466DD4A1542B74D7A7D21A017F4FDC7D79FCF8CBD4F22FB2FB76C1
EE427DD625A2F527FC8EE49F6068CAF0F6C4215D24E482152142BAE76A41083B
036DDF4CE43930119F7238E314A92695B19D551F3819A196F5CDE323CFBD7566
DF1B34B583A55D5659F886A3E68A7D3D06321D6DB80CD676DACAB1311AAA2CFB
7F1A888116A70B06EE212F87DFD1C76A574B199F1775B48EE0F0C862742F9A5F
889F5C57CDC1BCC32B6E3FC28ACAA03E1E72C0D37CA7DC832D75FDFAD81AA210
A2080AAF04E81A47A3FFDEFDBA01DDDDEF0125E3465D4096377D2B1B27D50B5F
8E93AE8BF9453BBE8FD563B464468472BB6B2F202276A7F985C31CD8F76524EF
15561690C9312E87FBDBC45E45A08706F0E124592741656B6363B046D86FFB6D
567AEF67B112126E2ACF3642047B54BD12FD844E958D92EACFFC826FC39DA0D6
86041177ACA8473F6BCE8C5B4270F6A9C95573E2B64373F20D95B2C45021CFE1
7E2DA671A7FA88213B596074FE4D777E0688DF71EA7A458EB6620FCBB0A5872C
27D7B74DB62ACE58DC16B92EE2BAACC2BC51A8ED14F7A1FA42886B5EB480BC1A
E2FAA8D878652A4CAFD1F9EB162702D1F680589B791039A1379C374B81944E67
1E72CFBD77CBE0A95797B82E8521474FCB68D8D460A41B61369BDAF603292F99
1A813A22F039CACA201AB5BC51D79FF8D818EA9EFC3F37B5222166C447B82E75
52DE05711B3883394BA9DFC3DD84705383D05EA02D410DA660EE50583BE34AA6
7E925AB1FE7D0D6EE6721F4F33BA41B670AF286F432239DB702EA6E109CB0C7C
D17D94D85644B1EEF3318B83B5AA236835375E0B9E13B07B4D38BF176C177353
6706311EB78A2DA52D5BD2F0B2A939C42476B611F1F52A0405CA821B9D986588
7D4EF8AA7AE6AB234B252A506EA2EB5DF30E34AF76A51E49D3987DE5A6D98BAC
A13BCDBD1531A0F70903410B4C7EE09941F9ED40BDCDAFC20C8BE5EDF8A7DF54
973E9F237FD4F509708D4C043017B3ED910E01231450985FE13F6F382BED2C03
33FCCDE9366DD9CE67C1063341E30B49E0AF725F33C1522522D8B549791B5289
C33C65E4D6D12AA512DEB267C6C06AB90DF171E51DA849E99BE97280ED370D69
09828DE61CA45D557DABB453BE17D4F25AB9ECBD3CCB4EA3A262534603D41B84
8EC91CFFB79D7910F03973685DD97F036BD60D4E370E139161520C5D9CAED67D
9869D7CC5684BE0ADB28455D1308078F25132450F9540DF8438A07647427475D
12A0264A1B9924DE9EDDB672E5CF64E5F89CA229298398F53940E5604C958091
0F6742AC40A7CB3E08E73FA1E156091B19E56F01DF05AB58428789656A2049EE
BDF3A700F251720BADA482532CC7D31442097396CFFFE9A495BD5D5926A7AA84
A5E965D2148388C79555E642DA9C8EBDE42F5C0EB3D35D6C037EC5139AE5F97C
C27F2840FA366F1E2283CAACE06BA0AE68F883D9F85B81A3A160369B6F94F049
EF27E940F53F9B36D7DA980C81000E8E512EF9D135FFDDDEA0CB78723FB40B62
5D7418A892CFEBFF58AE1CD0F1209C706A2746237C1D110D4A10E173921C724E
CE93FF4730578302DFCE9C91A5EE36401A2A54A603C5C5DDA792DBFDA066A17F
3ACB2D4F9250BA3A967E7617604D60C241FC6484F61D4BB16B1AA92D8B9D5BC8
9BDAA48AF15A6383BD24A600EFAAD1B25DA7DA966802BCCEF0C7C1730CA43FB0
DF73DE5CB14426DE596A6E32B69840EF7F145CEF49ED3EC7A94077CCBA8D822C
41A2DE2DE9462DF4721D8AC30EFBEDF2347DFCB070CF727224EB5D877FAFDEC9
45EC1954197B12C590CBF46A09BAE5AF23D33A9136CD7E5948E01D854F05D770
3139CB39160A511C9177E57EFDAB737460B7A5168E512013C74769E497F266F9
79707A651E8B0FB5B886111E4913F65D28D29FD6E5D65A8A2548AA66104BF95D
06295349391B578D1E8AFF68ECF136CF9D10AFF24F36F255168AF0431F373DF8
E15542DEF5CB225978DF4843E022480E93CE7C9B35D08E6D3C3DF11ED0A79F0D
71E2D065D66EAF49D0A85D7764EBB31166A29307F6343DCA5AE987602B0BB097
35A0A8003D3C3D8DFD37D8FC6B3FFE84E00CEA22A540F581EC9293DBB7A4F493
722E61DB62F5D214953EC36A606C0EC22D17904AAF144001329CB3826EA63B1D
AD7F654DAEF4707A8E93F8B0391134E78949DE2851686AA02BB0A6D65F9B9E23
E4C2AE4B9E985EC7CA837D48E7D337FEC7836ACE1832AA323CB673968374FF48
41971EFBB28E3A558353E437D0740605CCC9193FA96454A3ED81F506337B15A4
1723B562C552CAD67A60480964C02C73490B48095FD5C0F11B0E26915084E24D
8EE1207F2426CE0CBC97FDF256FD2D20CC12B6228C0105AEA3CDC0C14C46F09A
E76760B013F5BF8F391A1179E6D3E8018F284F746EBCFA56734DDC425136AB0E
C6828301F70C4F652DF6A4537FC25299BE55008332B6ABA850F93A39D818910A
1BC4CCD59FE2E917BCC939A9173874F357FD2AC0EB3A7C3D9294946F1ACB88A6
3ED32F8E5D4D981863ECE4DDE11AA3604E2022AFC909284A4D43B36EFF1497E9
7C252D233534F47521E168D225F364D6DD429C06B11BC67975A2DA68BFAD5210
039E61598ECE5CFCCA60B0E1AD2F8A011E072D55C073C6294F2D411978D5F127
5767FF734AF11D92AB2B290CEB82632679BD0E5CA71598F0BA5A856038C66F72
0952543DC7BD16845DFD9BB96840C512BF9AFB028AD7A598FB92FF2E8F498BAE
3D508B398A3F149B2EBDCB7F957E10B5E4720060CEC82B470D7D7F201AD2A486
937EC5E0331D522494F1235DA84C02C18C315CD2390E3CE5611FD77CE4D53433
8835C86DB57706DA244B8DFDC8661514CDE029EAA738F667D8AFFFC0A69B14BB
D009A0C0F023D4D6706CCC0543AB6C685521AA479B5B48F87B903C224628F319
1DCA7DDED14C073356BD62BFD5E6625286B9FA5CCCF91A14644049DED12F4BC6
804F85BD448314C80C79DC71ACB94E9897F239B97FFEA835A10AFFBDCEE06CD1
CE0B1D2B370671C52CEEC54AEAD7ACF2405A282E1B51C5B59DA1CF3A94FB514A
AA60AAE58AA03C03FD54101BB80A110B7EC09C39260DF18DDAB0BA5A40946D55
0B7831A2EE254B2A846239EB7928E4FEB7C2BDB9732C0BF2947543F09C13D8F8
AC93832B0AE9E5660F58AEFBFD489E95ED67AF896350B352014576858A26DF96
9402AB30E0F9C56D545BFC9AB1B3116F6B641F000B5D48C4D4DE24CADB6010AE
8964FDF277230D34376F35CEAE039A36FD6C59DBD2A9358C18601D05AA8B2E28
98B489DF9F38829903FBF1D34D8DE9DC7014B9A821F6ACDDE16F6ED77B41505E
EF70B3490F7B6A8A76C8D453AFE0EDF8A1D487734BF1923FF75AA8408E16FF19
B5FA97ECDC9F3680E6E4F77B93A925018BC8E9971D40D7AED32A610FE034216E
250F47FF6578594AAB0F98E8C06969C51D0F116AE19F25B99BA876793C0261F3
A55F821A532B78080598232B4F17C90B1F91DFFA9047131A5493374B3357EF63
E27FA3BCD491C478BA8E1F056476FC098BE5F6320443D477777AD2F477516B9A
C737F39F38BBD343B9F9954221EF653D38F4B9C0B376B51523394318C22B863A
359B68FCBAADEDB675D7588606F7AB41B429CBF347632CFE037499C0CB02212F
AB228445EE6695730F7DE25553176FC19609A26DB043AF5EFE9FF1743C357A09
FA4DDD599A38B3E396234176BF2014155487DC65939F04DF25603E4E215532F4
D99E03086E183FB95F360FED53F1A1E6E7CE34EEA6DAA9B293A32F6702E0FF3B
AFA6428355378CA104CC837DFCAECC1EFDCC281D68285BA128E09B840E807E6F
6D0204027CEA8756FAA7AC4AF2361EB14BA5BA08543D81624737B2C25CCF3AF3
E0E78A42FA0F970C9B27AD62328590140E708EB3654A3C66EDFFFA17A94FFFE3
D9F9F98960BD660253A72E63479DBFE0FB8041A873898332B8C42185F79FC85E
67561B3C73B9D2DB0F8C6FF6FA866BC6BD612B1434B56B8EE3C13BCE897D183E
C366DEFAA4A2E5F3AFDC577DF8F4B125C0BAC2EA874D558B0F46BF771E29330A
33E361C619BD62942EB727CA1870F9437985943F24272A6677F20E75A8F7FB6C
1EC7E50A4654EC273731FDA08D2A0093B1C31CBEA19AAE4FFC83A933DEF3E7EC
A5BFC73C09D36274C91F1149C89024DA3E3E034AE6B70836AA1F5BC1328762B9
1D4D9D5F1BDC264D440B20D0C4BAAC09EF178818B4EE699A5EFC7BF136C8ECEB
DEE65D377D3EC454B9E8E4E4B7897387234F730A1D2D59F55B440BCBFDBAC428
DDBE93CE72877DD4A49B269B910AC08A430B643B6ED36DCAA09B41FEFDB90E10
C8AF0A0349F2371FE7807F8382AD9D1E7E446E73FB596F2B399592C164DFEC11
5BCDA359B58305C56E941651E327F9970FF6310EBD4306E2D9D1D13E303C932E
DEC2896C751B0053B7E9268CF93B9763BA70C77A82B01C2B174798E72F04CFCB
0DE24EA6A803EA7D37FFE87238BC763115BE9D63753FAB6F4BF4D7B35D01E3A1
98153B354910626A7ECB0E22541651CD027D5B23BE4FC86005E73CF4346D96DE
26FB54D3FDE40B8DD6233DA59A402050DDC549D6EFEECCD0A65DBB37026729AE
B90253B022FE6E2F49A329B0215256CFF25F22E753393188F7B79B49C0F2ED43
95E0ECC246A1A96A67E7EDE8C1B81FA5A78EE72EEC5F0878E112CB53F9792361
238817BA3548735C48CC9E2E271E6DB67AA65CEE2C60617072702B67183114C9
895464ADC2E62CA33C542EEF57BB334A8B1A40CFB7DDF41F7827E4C2AE9DE83E
8BAD62DB170EA4E4DDE87DEACF756B352E24F6F16B58AA7B006877B1C6EBD9E7
8621ABDDF6149ECBC35E7209149B2F24EDE629C429925BE5E43D9E9731AAD07B
020D3CCBFC275E70E16740DEAF4B0DBC9D59A559B2BDBAC48EAA0CF06C0E9F8C
05F542BD304D2D1798BABD827BC8A689C3C35078CC33A5170569833A45342B06
0E73EDDBB89A0429A4F9A551BC5DCBA879EC7DFFCC255E05EB60292825A8BD3F
121C8D281DBFB9C2BD9F6C9D816102A7E8549ACE943EF47A3885068FCA7F2DE2
0B19CC754921E04C0914C44CE56146D33B41354396F37130C0E4883E1DB33E54
86A1AE2014E322E034E26D6BBD97BDE6C6DD182371AD0BC6BFFBE163DE9D02BC
317841B4696BE7DA9EDE7FF90D22DF221264996510CF314DFD121CD97988D700
2598288EA2C13DBD98402012BE0E43B7C69F2BC1FA11191A2974874205A7DDA9
6A4861060714F6F7B0126F2E1EA686D7693BB1BDB187E14E7B323A3B8F968B14
40C691B1FA7176E0CE92270D872A505391883AA61465DFA97CD1B0B290B6AC14
4B55EBB8EC20F0333E981166F8F5DA8E7B4448DC3FBB1B774C3423B5104C3F9C
4174811E9E24F8A93063FC085C5A5647F5AE375E90AB1DBC3657E832895AF589
D7E094DA3775AF78DBE5632F6471A4330CD4CA8DAA5B4BBE8811CDBBFB04AAAA
21C7DA9C8CA81CD3D122FAB3560226ED53F1BB7DF1C66513FB59862A2679B71C
2BA4FED7049F2291FAA610FE8C4CCD57A7A8C9F5071193E20C5BEC91DCF28E58
E376E2CF1810A7EDD21D89F33FF7E0A9EBF9E889ED33DC41378E58BD33F44D76
204AFF41F0CE8D4A8C4AEB40D68457BC8D0D18F1647DB2339D25BFE3D970F363
40D8417D27A83D007491C542505F3BD5D21774BDCF80B61524827F3870095BCD
16CF26E00CD63E569E15329DD2C1C33B75F7D74D1C8F961A514F6FD6A86993B3
5C1CA40B9417A1DB1BC9CFD7A726E5853FD3695D2505A17DCD8BED5A8ADC0849
4E5BA8B57CE522758E01401FC2EC1724DBCF6E42D06B418F7CC6D43D43344FE6
4EA1D4B6294F2A0C317554A76DED2743FC862C057D57D63453CC07AEC23F393D
0F3A6193A08272AD735FAB523EC6955BE9ED8D0F033FB488ECF0ADD93E7E4BF0
5FA8D8E4455805FD5CCE647F990EC29436C60A8C9DCE535BCCF8423D79C383AB
B001990A07F8B008FCFEF55C2E21664ADC97DA44BD9FA34500F72B7B38CEB825
8173258507B9070C1A92470E3AD7F1CD944E91ADBD1EFF555D1204133764B8D3
051BE747C134397AF98F26AE6BE96AE877570C1792AC0CF18BAF9E6FC668A573
248CAB68725ABCA9801E168543480A39A5063AE31266DF857E7233E8EBC07A0B
B1C59B638E677A4FC26F9D9A17F28132BF021FC8B8E3B1270C1BEB1C4042BBA0
D34125774CAC72B756F590155BF03A84F0DC427C57B71704D2F4FE437B28778A
CE5C18720E3E3C72B08FB19807710498752E1B1855E4DE8F5DDC3BBA41CEB43E
46E9972EBB66CA1F2390889EB779D89DC565746F129EEAC3CDF33EC8821B5281
F55F19AD53BB4FE9559A1CD46A71E1847119E030D75EEEDCF7155D293660ED7E
91867553D12CA559E3D625BD41A27B1BD42213757E16CEFFB075813DF7B7BA6C
66C6457824330F5052B43E42A8D9BABC1C3DDA7B54BE6D81470564C34F1F2208
5EA743F93B2A013FFB45C5ED5E8FC6CD67F1244DBF5A2C79B9B3E165B723C934
3E236869175728EC36D2C57F6AB5209856B7CC39AFF37556536D462E35E10DC7
8B53F3E0B671098413E318D9A0B75C53A9D6518FE2EEAFEC10ECA86DBCD67524
4FA279980B91B1C194F42673BB21073D7A313CDC5FBCB16FF1571FF48BB11A12
4D1DCA305FD1D602269C73C8B107D49B98E5E0C209A729E3DC9063F4DFF450CF
263B5C9CC18EFB659E7663356B904264A92A74FDB2B29ECD6CF81A54A3638217
93A360249D7EFDECC8DD734D9BFC4A3D813CCF13D5D929E4A9FA65A75E27349D
DAEA619E52650F8D44A7B98EAE15759FD67200DFF251DB7C95C09E89EA1F66EA
DC36A959452D4993506570FC63D8AD2EBFB6B8C0EFF6D40633B8C0B2F509DE97
AF69B284FBB5586F0FF2E48916D9E3EBDDBF1D95FCFEEE32F189B1F6477232AD
8B11FBDAA347BC0BBD19FECDF86A5980B9B83F8BFEBC6C8FDD7236E4C82C9F43
A749101509FEB31E38C10077F1BAFD0E134BD71C1C6EF00A8A55B6CB2F2E58E7
60A0B62AAFD5A4B37E3B39F2CDE81B5A0F4E79BA5B0A828281C823748C51E4AC
C809B0EC851E3DF647BBA2684C5C2EE1F1785600C021434CC2FDC35A4FDC88E3
65F40B9D576708B6BAE82FD7F27C852C97CEE1630AA99AFB93D3548358D27915
54002A2DB1C9F9FF6A9DE9A3D778A6463E16EABD266B068F98C3564F42D2F7F2
6014DE37C4DCCB6B3084AF705924E9FF4B42159E5978724D0874215B49AC3C1C
39B750D90F2CC97C981D1FC2366FBCD0FC05F53B4C42D0B59B11F2C862279255
4F2C5389FE22C5569B2DB1289CB7476F2EF2991878E11F38FF36D1F1D67E0A15
4F2A9F02A3C989247B02E5DB75B1683103305C5A43ED712AC76B7494E68E3439
1E2542903355658BD278E6769617CFEBC43E0568A928CFC41192701622D89283
1E9B14655DB5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E989012E682C4F6
C7A55DD17959CA190630ACFFCDE63ABC91B1594A04C8A90B658A61B785B8AEFE
9DBA015D717D4CBB6970DFB390317A8F1B0971C84FBB39F5FB23526CF92128A4
FBA8DF907229C1CCF681450F0BF41741C5D9267EE012A4ED81A8493B153CEC0F
AFAAED622EF19068F9200270BB9367AC291B5554ECEB61CA3FEDB24200F478D4
5275BCB2DC287840236DF4AC604119029F54CA5691194AED3709422940A8C369
62BC1D166C17512383C94FABBC94C08DD5DBFF32556ACDB60C6F6DF6CD99E6C5
4695F00E10311791747231C40A3885F028D80A83C90BAF07428D1D8869EFE48A
460C0BFB2499E7ECE43FA2D85AD7FD719276D25B1F67A774D6DE23B4AE10F280
D6BA0D981250CC5A3B60478C7CD7C2D18483F808522BEC54DADE32E9CAAF95CA
8FB8D7D6F8E6B1F1470D1BFD1C6F714295E0ECC246A1A96A67E7EDE8C1B81FA5
A78EE72F9E2B4A122D90C64FC0793B178018DB98ECBE34ECC1CE14636376AC6E
3F7414E4A017F9FAE43F47C36E5544A796E9C6D6CD198B29532908C44B42DA92
FEAB15171D2055712018126F3577E87ADE936A6A10BF199A9527D50C430ECEEF
52B4AB5A78768495F4A0B56EE8FD852899B8F1AA8D27625CBFF10A27E2B97314
A9BFED3E1145BF128ACFB3D788014BCFF4A793A6027E94DF79BEB0058C713FD6
750BA2C340B265B989E10F811FFAADAB3C186FE78F3F6581296F85483FE343D5
4EAD9D29D5AB7DC23CFEF22998842822EE91CA5F54DBB4DA24D13497EBE63300
753541B8CEA23BA55F4DCE156C876E12918275E17D92EF1ECEE7DADF069B160E
9D17FEB980F5F2FADE062DB928FBE8FCC548E655D710716EC5F734EB4D4E85FC
D8DFE03DB2177D713F6C9D6E9D1A5E8FBCF32D200E0FAF7FD33ABAAE9DE070E7
3A17613406C711B92AEF8134F99F5E7ADC0AAC6DA6407D2629816D401982539F
BBD85CE2116E99BDBC1508FBCE413C07B29419190E4223F9582215E723358E19
2532476CD8EA1F5AF507CB853A32E8C3503725A28A20C7E32793E2DDA8ED6D90
F8041298B7A087A22D77211A860F0CFEDA2199DE30E50EC3777E8D0C58B07E6B
7B0934D43B9A24F5A9BDEA3D6D9690B071FEE1B27CE2AEF79E27A7CC1D6B68A5
B9F504BED3487D1E1432FFD51B5492DB49BF8810AF0BDC54BB1D0874081F90EC
F847285162043549D78E2B9DF1ECC680AF5AEFC1A738BD094687B76E2D4E16BF
BAC62ECA4C3EF29948A761B482DB56A88D5400C8D857738570EB8036B255BF4D
E859F59784794A0288065E86D7F5A832B11D5CDF6CAFF23F1E89F29B1EFECAFF
31922A16CB785948643D0591FC53F230448C09073A73F51F7E4AE79246673B08
00049F563BDE06CD872EADAA457F6BC078B85EA3793D0871565F684DE7C79850
BDDDEE9EFBC6BD9C192EA36BECCED490E6086844117D223CC2C4B14C8E3E833E
87535CC8D0D55442DD3E19B955F0154DA46F6640F1B0930466D8CFDAC6DE37E6
23426B8ACF222C196AED0DDFA568EAF059A4A0FAB8F42D90434A48E3F4993DDF
5FDF93C9E21DCD10F50EFF6DEC3B15060C553536AFA1AB550740F7286EC572C6
2660D9A9EF2A95B7D9759B38C8F96A77B1F40BC30AA52EA9DAF365763EC4B390
A80F5806924BF40E49AE3D74A09700D1FE75352022A81FDA4CB5B549B69AC94F
E998BFE6B0B60411388FD7F8F95FC7A4542DD071B9BBACDBA04B584EF886716F
299981EC9BEA227BEE986A9A0D418DA1AB5E0FD14B7DFB4AE346574ACBE4333E
0446D56C398913DCD823DF8673A3ED3D91ACE4B124110BEAD1F797A23A6BF1BB
DD51D96BA4A5207AF1044E917186B2F8EBF1516AAD7B89846E96852878792D64
A7BEA283E0EA4AE53B170C19D0071038D64FE15E5D2A5BE446EE0C6D1CFCC006
19CA95CD8F97EA85176570BCB441E9B749400E86770FA787F267499DA09EB723
9641CFED8CA4683A1BC5D98A6566CB91770EC7F8004DA518F5ADAFBC89A2EDE9
DB08733416741C77C30A39A9B881E6454A486E0C7BA416ED9175D5C9919AA651
6F0E77C57E563C368FC55723E725D41D2B5EE0C3F03A603A161713216AF97D4C
5AFEBD6FD869276EAC3B0E5079A047920ED4CA5480AB87B0E1BA88DBD549EDC8
E5930F17EF0AFCF839B2EA4AE9F3DF1F7018376F68D27AC36660F8B1F03444A2
D16C7D1CC421D34F98B69FF4C335B95F4222A8BAB77667BB1C1FB99B83BF35C8
C3C0F03DD8E221098CBC3E05C6D2443988CB308AD7FF6297A576398B0ACAA04C
99BF3E5D60A74761441DAD725DDBDF6824B0A4F0D6954F57E96413167E7AB4A2
C62B23E03259AD33593BFD738991C41D1D92295BB7FEEDE3A4F983FA3424D890
8193BFF7CD4084A6F2EF86E2824686D085BBED345F7E6EB57D050C10E7AF5A2C
93E5C578285B76AB6823AD536B1E3F3D212C0571C2F82B6FC9E762657E8A4AD3
39BA55BB19D3562BB53313EBD812D550227C0665E7B5096FF9653BCEB1FD783B
D457397797B1F5E1DF730CF36E7E0DA7F9805389E2D9461D2390B36E5A8B6279
A5D2569F321B44C350E2926FA78E2DC624B2C253F76778698BD1510D509244AA
6194832C8EC9EDCF022E141A5DE5496F54EF7A0057A9A5608768C3033D0A0FB4
B6D89FF0F07276434B5F901767FE185C0962BAB12D247676FDCE51B2C79A29F5
7C51262D5A857A5606152631CFB763AB502FBDEBAC58640AEDF364214BDABB66
70615D89ED4F6A69A0A5F44B948ACF6C46063431DC9645FCB91AE053D37C2645
2F9B772CD7C7A87E156478E76014DF9C546D9201261AA71B05F2E629B081F30F
FB2587943DFDB4C6864CF1FC7152CC208607524291E214967EF9422ED96D7B37
665D1ABC5777E2588A7301FE1C1497851C7B11300C3D6948D6FF4B35E682CFDF
C33E8A3F98100A686ADB740C45D0CB167BEB8857F6EB6C14E38C3695295292CC
EE57A365680B483E6222669DF4980A50D39360DC793D9C260F9A68379C031C3F
301BD1A184688CD0FACC7802A28ADB7907E056D20AEC2ADE13A030BEF5C410DC
A1D11F770EBC2E641196A40F411F24CCDBFDF1767ACE6635BE8ADDF24026ED1D
06839AB37F010ED88BA5053465DD483F36AB6A169951A878D1CAAA776E11669B
81EAA99EF9150B8D39695D096825DA20E945ADD93477273C251BE66ECFF63B31
2D6BBBFAA8DB48134565813A441931DA182401251F09576C023ED108AA5603E1
BB9A4DAF0258C35EE990F664417C84F84FFBE4D1CEC49379962163A2B4BF57C5
89CE3DE6B2E2BDA1502BCC478177F585F15CD2912847D0F53FF2986C6E0EB717
EFAC4D403595265F0306D9CB3B26CB5F05EC5A4D568727B404136F691BE1541A
E3E64BE682605CE4E916351ACA662221E1EB8A14C45F69001E24261089F5EC21
A49D85192393C682B739EB43CAD8C3FD4053B2D5396846B1160919C81067D754
42072E34982759C289C8FFD9BB88A0065D3BC9ED89A17D8CDE1BE835B0BFFCA1
24DDBDC4F7FC29C71982467CF612F56FAB0B77D63809AC68678180EE2161D0C2
DFF541E09DEE432622E8AB074E7C4DCA5BFD1EABCE2CDFA9DEBC79D600A4C6A0
29D3C8908638B45DEEF72270009E8401FB552E8CC4E2CEB8F2F188FCB4227C27
5763E934DA9929DD09DCA158FCC9D147F2CF5C15BBA98487BDF8B9A49AC53010
A86557CC57BDA529C65B0D9358B78640EEB66274C87AF540C030D0D3A5BAC4A2
D52C8B31DC84B31200F5B35BA0CEC0EE568DEA53659C2C8779E6FF88BDC632EC
CE672D5A6EC117F73386E184BC32D3AEC992B620A98338F962CD1669D6F626ED
59B8B12AC6686B4CD6EC15993749CB0FEDB08366E420875EA20B335E5774D372
A74302D7C0572EFB9CF97286C846176BA842EC02DE100ED07D85821780B85442
17A316D20029808051840A3DEB81AE5944BFF97A5D08D77946EB5AEE5D7B1C9F
5B8CD31B99193E499B57947E7F00C384CAD9B562AAA71579A4C648EC96BCC8B8
073DB96BE3925AB3A5F7C6A0C48AABBFFF93FEC6E0DB11761A37D19B0E21FB50
CE7AA5FC170784BB01C5EAE983475D1DBCE80FADAB1CD17812F9302EE8C0D082
3444D29630950A393F4F1720D2D1EFCC74A32169CDBD4559A1CDC2955B99F7C1
F7445E339A49EA3160FD7505DCB0BECA5884AE664930CD18057029E14AD94FD1
A9AD418EAD4BA17A83620B995A2415BB0AE5C33A48147E00D1187605457C1FED
651AD85149CF2BF2B61A4745C2CE77F1D617F16A1A2EF1E8DB2BD0F1AC8AF11B
D8115BAF6D0B4EFAE56D834B172E69D7530BE6E888C1B6CE57F1F5D5F5616020
45960328A29BBD1C9467FAB1BE7F4A50640859AABF811E8FC5CA46E3CC815AF3
AD5C73EF3E6A25FF0BADEC200C80C72D514DB1DD5616F244AB0D66C9FDAC74AC
5310B950DED8E8F5BE846388F2571C1A3AFF4C57B0BA991A87CE8F0D473AB071
A72210B9DCD367CA87AED21050C6F22D896FA298187AD65C7DF9E1824907FCF9
2578BBF0F342733A4578AF4F07EDF3FBBCBC09EB6BD4BA65104B666C56177E95
42010DE65C5BF43251571FAB09E7266D8295DD3E7B8F897F72247CEB8266A2F3
3301B752578DD8F845711596A2EE7104FE9B1831B8741C74A5F7CB6C404D0DB0
D5D5A72B9C7FCE4C6AB75FB563C2D4D0E0F482EF6A32EAAE6ACF9DB36DA88066
007EC278056FBA507E49FD77BCEBB1BA1632E116FFE3B7158A8BF35603C68BD7
15F69641BDF0D09F4F55520E1B8F35027D3E063E0D4707495A5533C5120A6ABA
09A638D92F2984CEC9762E549F76B87FCECA8F97578E5861B3553B2DB9B7B026
2B8B2B3E2CA94A4D9156BC3736AC9B5E83B764D8BEE80EC0C0796E88DE392BC5
245575248D08CEE038CC8CB25F0A26826907CE8D216B264F08F341CF0A262C1B
DA49E0986DE13D30BE5606C81BE8D2B8597024EC4A5A66657F8D9794DE5045AE
82030C64B0735E3CA178DBE92A6CBC54B35CF9D14F691A6F8C8E5C3947315169
4C5E22E8B2B198FF0153904EEA760E4B419056B03E41642FC4403B711E97735A
BBACCE69775DA6C6668A2E52030122548F777C6F46D946AEE7A345E589375BC7
31F7FD37207430E18B426321401906F2A3C92052C25C17961ACECFF7B5776C19
881F75E3B952BDA649489811142600AD22099991A431A27EF8D41A50A15E51D2
A8D120310CDC8C3A48F55BC83442A80E90F3A6A0F261578F5663B53ECD519591
EFAC2C98099A482326CDCA1BD13F48D1F53EDB4DF83773F210B588C3560357F5
CEB1DDA70C024EEE8C9F465AFB48EF3E0900B75A43F93430BC8708B9324C96B3
669F7F7B6B43012461E75CA95B661A6BAB06B5CB773FD4DEAA2A82A209E2449B
6718BAE295057EE59E3D2F372B87A9C9DEE25CBB8D7030E271D9F3A9068D32AC
DB476F04E5FFEACBC97E5A960F5E0B57C235799D547BD2B0D09768497160926C
C7313E317758DE09BA9F44FABF3BCCF69A6F5EB975A98110A2CFDCB848E6AE05
2136C69772271E58ABC74DF6129155C02E034EC8F9C7F29131B0BC07D51C2E44
0071529D105622426B18596F112EACFFD0BBB557D917CD5CF3AB5C1241BE16A6
0841F52D3B69F49F4799A0528DF285046C7CCA63C9F73BA5E20C9872476833B2
52DE2527B6B42D01ECD4F8D399E8581EEA8743187F7F0DC1A2696AE6D1FC7C7C
9A6BC085CAAAF76C56B65B412D92483A81E1C94CD568E40E9FE5C76F419156E4
C4C6A57D1A25277E51296690753FDD174BA1AFC22EE15CBAA1DB0383B9A60C9A
E8CE678F1845157E625558A56214D91D87138A764BB19A0EDFAEC048405EF7C2
AFE2385DE8F1FF8B67523A1D27F4B80F7467EB6520D65BF2EB35E61A0B4D447D
411475CAC901F5E2C9C8051D1A58348209A0E36E1140314CA702D588EF88A488
99F63DDD00409FCD59327A3399E54129075CC03DE96F824741BA2CF596FD49BD
1A280BE0D9707B7DCB885D6B04DF891FC807DDC7F0A1DD51D0F5ECE0141EC96B
DBB7F71253B2A130F0B7E320CCE30412CAA716D346DB180834C18522E1A5E0A0
04365C3AF19E5ED720170DF5D38DAC91D03CF6B8B88FD51EF0A55A5F89AC435B
01B0212F2ED3FBA2D2437E08FC1C06430B3A7AED6E39D9B649FFDE0935853B03
4BC1CAD9A4727FD485539D19E16E9C11B444D7F8A570F2B6FFF24F6A58DFA783
FC0BEF4D48FAE317FAF6E12DBA1F2FC76D2F7AF3BDE5EF4A0750C2E570B4B343
E1937BB8B26C098B1226A2BB1953F1E0120DE8B13F6DFB07E1DEBBC2F42E6E73
22F9355AD961790D552E9D77BD0FB9A42F9ABF48FD69D228F722EC13D6CD3D48
CCC177FD03A456AD324A41A2C2E98854A0AAFB184C86FF2A5FB0456EFA93CE18
B4E5D735A8C29BE984EB17C1551CD769039D846032270EDFEEE9AC115387CAE6
CE38B10440BE8FBF9081E56B7DB5489030B6C457699F6B49597BCABCC4572D7A
5E383144B7421EC5A40923A2C2A30CF206C6E302E3D5DCDD74CD554B1AC78B08
6B62F48FBE7EE1ED0672DE68E0511DBE82236C7C3E686096085C53E921E77221
D1A184DBD109348E0875500680D500A77467C4E097ABDCB5EFA30FDCF3436E7E
B6BA1C2D5E2C2076C6BD721F6187120F9B499AC6F1A6731B9520B5E5D03D621D
5486E9F273E7D988C12E6602C8D22B531EC6DB8BC46B119C39985B0B058A0989
1EE2D2F565A5BCA5DB2670C5D1EA2C536C4F0F415E977E6AF5BDB25F059452F9
F7FBF26FE85D13550FC6C7F1EB96A3AAC9A4C2FF819EF6EC7DA0AF51524320CA
603CA2158839923A92343BFEB7CC1E4221336C627BABC4737FC72F8F4F6BB7D7
3551EE33D5A09FFFF566E7A6ADF80D431A13D1F870E79B3C0A88023A9EC3E9AA
CB6E1659234A264036C6017B46AF959F7BCF64B4F1C0E1F3BC91F69C38CC6292
A8DEFCE3BBC37EB76CAD15C413E3CF780F0DC2F69EF5286F9B64BF324EADB5AA
6258C260E5B298AC83F8D7BA8E3CBE761224D73BA95B8E166D89FB193608A400
1C340843E753A7A7DE357BD865772E3A4CF4F0053B2F0AEE733829C08909E27B
A4CA1CD8D284DE33A6DD517CED067F82A1CE14726C5750CF8AFEFE271713761B
E19B383F284C199EAC6A31E1C30A523DCB49A81AF0632588BA0EA7805A438AAB
423BDF2A5066A59B547C6443F5F2DCCF5040BB1C1F9171E81D21B432F937C0BB
397BB8C0AB6D3BB9EE1AD3D66CB756C75BCA54315BA098ED4616CEBD1C88CCB9
033DF0784B1E57D9B72D9731B14852BCEBDC7FD2FE2969859077DB8DF9387F1D
ECB52BAA9A6B31AABBE56FA23C537435A355CB11DE709FBDC80AF36F29C959B9
F55008D181FCC7C2B7A3824E03160C09F0140CCA77CA6B6D852972F73908D584
857517A5F51E22F1A9196CF42650C763613B3DB11FF04A5DB8AB0CC2347EA3B6
5C4FB813606256234EE696AC022842A1711BD7D3474551BC872E62208FC06DE6
01915F732C19DC9B1D1A8258CA931F2C97DB65A9DADD7B5C8C667CA23AD8758B
2935146401426923DE489CCE99E541FF31C5DF2718F16F2FD76D41EE6107DA65
A117AA6933017088E8C9774F290A6DD4AD66FA521AF1D3927C234986AFF04FF0
3C1DB4D1F2D9F60CF2E4DC5DAA8A47838490E80AFCBB1340C523C7E247273704
AF5EFDA259C9257E6969D486CA532E43C4092483C697B6EB43E999BC9A8205BC
0E601B03697D065BB3FC314C62E30E7D394FED54127E1F07B1B4C368F3407F8C
28D3BF2C68404982046414CFEA680CDB30CC0CBD58ADD2F8AAAA5E77AC7F5A5D
F71AF1341A747682013C7D8B06F42696EC3806AE1826A90EE3F2DCFB5810C954
24ECCFCE68F9EBB4498014D68B3CB557E57181A4170E28C24DDDE853AD4E5490
5F25CC52035BDB3289A2A81EA6B5676EE829C16BC4FE435F9EB320734B8CADCB
1E6102FE69D3A90E733934D917D7292C98FE7D46A379AC28897F46C49662EEEB
97997BB38C7C5A3322851508E326ACF3FBBF3D96A022C25E063DC9104DE018F8
1B73A231E69E0351E0D743677515B0CC73C48B28477C5280F0DBC00448C8DDCD
413552ACFE007F5F6A442CF69D8758B680972FC1275B1A6FABC94D45D1A132C9
868D57D81B4BAA91AF23663CD93DA088D84D3A6457369A57F0B9ECE37C79DEF7
342F8707620F60A95F9DA22A5A9F0AF66BC4D39996EAAF061B99448C132B881C
6940FE9E87A5CC5EA3BD8E1B64C2BE39E5A03CCF5FCD34186E8405263EB2F569
9CA7F6D82F271A27F016CCEA83F8B1466AAF15AE77FB2118BEA003505869C506
7F583FB79958492119F5E0F2DD4F3919123D266E6642098CAFB1A681C5D4AD7D
593F4EE82CD8C640558938D5D679953FF24F687A12FAF693187713FE85A8D83C
BBFD19BE9BE814CE3E3E1F2AEE06BBD073D6A76D18EBD839D4B19C7EF336196C
96E0E91AB6E12908576BFE7BCEAE124F08321C2F09F63FDF5B6F184E605ED29D
979D044A30F4B23CB945A692001D84F98D84DA75F7A31EDD523A192A7C826FE4
EE298EBDD405262AD8C2F673B2B29EB31CD0BF25572189A19315AD38423D7BA3
2FE3CACD173F5A11A8D4798A2F9E569A9F3921FB62A0A4097367F3005CAA9206
F980305871B47C372599C1C452DEFACB1DF8667D0C23BF0C82D32433CA4EA3A4
42C951ABCBE9A170A73930AE2BFD2194844CDEA16D5DA958C2AAB038C4234B7F
853F6AAC9952DA59D36EEF206298852DE71501DEDC251152D992F2ECFBEC9657
00730C46F4B358C2890599A4F5CBB914737AA5CEA6BD1810DB78052DCD299EEB
942BCE1994678DFB09463FE15EF2DAF9BB3C19BE207736AA1E052EB8954657BF
7017016826D66A06F6979F54729073A925FFC6F6200DA5498BEDE98BB76CFE51
3CD79441EE4685CAA6174E404885E72BBB74948C2009D5CDFCC03B22DF3ECDD6
6C9E26DC599ED04E664B18674EC0008B3FF5394B48A158D6F3084DDA7A700E95
98759F09195CFE9C4C87F4492FAE466EA0AFAF486218A8F99051491418509E0B
205F91A63C976F5A5103D3B7C48B8EFBF2A4617558378BA14DAA5A4745550F8B
3480EB2CA0828FD1D17105FB8A840D893F79F3230443D11313D6EBB935EE4629
4A12DFF2792ACA6EE48DB3F6306AF161C4C10A4BDFB82816295826028B9D7AAD
00D4A1210D33390476C7432C29827F7D631AFD10AC64001A1D2F0735690FC9FA
D1A454BA51B9D545FDD96AC5033338D4DB1D1EB6661C68C98DD077FDBA406F20
C3009B337B026D00419F181626E0B9F32FFCB29B4A9154B14050C99021DEB876
48C7A4EE7A3FD71C56407473E72CB2275A21A0FD2F675B923C6502F69C1E1B6C
3C00F66ECE4758DD720F7FB8BEBCF8F27B60AFF6A7476A409208FF97B0D1F8C5
D768ED0301D187886C43C45917A02510D184864FB659D7B252C8902750AA5A5E
84CE1AA1FDA3F4F14BCD08A859CC266874FA46F51B4F8B100411672475B760A3
F8F06E0315EAE6E7616AEC4DEEAF289990D3594CA8494F402E015036BEECF427
50CE54AC34ED593B82E1F98843E67E89DCBF2D83E08383B7F1D8304C62775DD2
7571C8B1D22AA7CEFA8DEDEB8B2AC557D89F1B20277A336F30DE74EA9FB522C7
880985F8FF207F24A25E5F537FE0A69BF0A5F7960BFBDB7D540272D1070C4E9F
C98F7859299FD3A24971CA7AAE82C032F0C7B22398DDAAF2068FD31D2E0217DE
72D65B0B0518F330C0154C37F8B2D7F674B9D137B168F36A6280D83CFC4C7642
FA275F1908B0453B07398B9E66A78C2FEA5BF94F4CDFD1EE0D55C214BD51B468
A8E6470C7E3E84D2BF62A3CADC1B0510538C6323ACCDF2B54D0863861BE7F596
EA27CBE2E758E842F3DD1859F772AB1FF1D85875298E7A41C721A8748AD80433
3383BBC8C5B7F1B0CA4D87D8A6FA6087F9727BA709EEF64AA776985E61FD21EA
D729CDB7B3F8BDE044E4EA28E2FE759AB3B72233FCA1831A959C7C672FAF4955
D2C7EBBE2562F1FC9D17A2F0E4EF2D9F7072EC8059DA3863A73D971367111089
F8172E9281EC0B1EA85404BFC1ABBB217BDEE58D2BC727C3A6690ADE582BCF43
1A0D17BA0339312188F9BBFC753A9491E1B70FADDC7800CF611C06D6C72FC4DB
326FC1900C1051219EDF45FBF0FFE5DA14F52E781B9F48A74FC95FD76E3E09A9
5F7932520BA26FA98D6B05129C3B01E773387B6202FCC0BBF85B6AE37A1EE47A
20168E86F772C9E8D323291E00997F8ECA293D771B921D301A69340113B7130C
14B676FE69ABAD5DE703340F7AE36D6AD94AB07EFCBBFAD92A2A9B2399249262
6D007139EA55D02ACE0206BD8A73F6CE73715C6F86ABBF7054DDB7D2FF401927
2881FE58BBB24A6F19AB7077224FB0F34CE508681B21E6EFA6CD23F77ADD5569
F88523159CFAD1E04389EAA305AF273778E274DC8E826602568BC87422F320B4
A16FD48AA5B34666168BDBB207BC99C281F5F3D3D54E62DDA6AABC6CB70325D3
431E104D4FA87028F6C3B8A0F36A6E8BBFB42E747C203E50D19E75360D313583
C4E43DE6575828E3351D167F2E5CEC4AC4DA96D7DED4E3D807F34B485DB9D6C4
4899224FBF12666FC1D3BC4014CBE09EE22012DCA626F8A2147B14842F1FDDF1
AC53BB638F51CFE80ACA4A37BFA5635B446092FA7B8AA3866FB247E9FB015004
48E7447559630AA686820E071214352072B64F57198BE7F11898B3E27CB327C7
48D9756D66B87C8385923EEDCA5B142FA708391F9A2A85C0FA608D24D8A9F11C
EFADE7DC7060B70EB513592EDC6C78DF84381B2D6DCEB864EB2AE5E40192B4EE
8F5099E317A3969B15CF5789CDCE35F28D1EC38671B07BC68EC5F2C0D6DE6F4A
B3493967062FFC2760C60BD758DA027B35FE02218B107EE92BBCDE5EB698C3AB
964F7127EF70C3317AAB1C982F262474A9734223E045D831BB05A5B84D1F2F28
F0ED22066817761185275DB00C952DEE1F6CE65034DFAB9216A27FA98E98F70A
375F3C7A25D55910181104FCA93C1B696A4EAA17FBB3CB842464CAACD24AF70B
D6A043959A0781D4DF51E730C5753F77B66AD6AB1544912C13BA358361E98630
29C0162D032ACEF5767F24979183D4870DE90DBCD8AB3972CEF5BC502DB98B9C
81A16B3D664AD032FA5866AA125B2366C809788C3C94CC35BAC5B183B551D97F
5F102C96B6BDB6EDB622D7241A0237E71AC1D16EA4ED36F489AE9110A9DB5860
FDF52CEC4D62F8F21C79BE8FC114CD4EBA3624C3BF337C2FDE034E530886F3A0
7AD731FDF275B6C92B4F5515E2A24FB2968A4727E0288F321EA6C042AC6847F2
B3291D30D4EEB934A0173199B79BF7B01B4C39C37DE56BA2662E21344E73C741
48C1E8657B73E55E60523BC0392B050B1A7EF18E3D7EED24AD78B6DB2DD0EE69
A36DCF1F306A31ECB752127B7720277953D2123F40223CEC6BF47435DF72BD5F
0AF969E0E02B09130F163755953165BDA251127334083A3D7D8F0FF904C0A22B
E812A43E4873A95B1DDBDEA29D777EC0F9E5C3BCA79544B1A2F7DCFD4197905A
8FE9AD6FFB899A8E42DEDC7553716F0DC90240F0F4D2C782A73125A941742B22
D6436AD983F62C68896A9615B888E60741CB02697178F9073941F85C85E6D8EE
C227E50752BE338A88D4334F73958664844D536A9FB9DA8CCFE6E3BE310D9446
136CE17B1F48E22B013F3400C2BF500E32F7F6C96FC7D6D2EBD120550F75DFDC
9C8029B8AE597FF74BF3911CE54D9018D6C051525FCBE33DC36CE001B6AACD35
D001B474243E411761D2898F38ABC9B005BDB5DD31F0CF4F3351B26B253AF6B6
1CF9F13E41AD6EB43C58263A1C2B374EC185C17196B7193463719640D0ABF0EC
072ACB70A7565FF6BAEA069D06476FC24EA05F615BFB603335832053BCB7D7A5
954AA1F9E3D31DCFE783101E0551E83DBECAAA4F2F82168968B84724210CFBFA
C2FD0F856D882428F1CBBCBEF513F3AC3F0B33369B0CB6C775B75918B46E63C1
9927E90E939481828E14B44B9E1812A859C06821FBBF1194D5676912D5E868E3
84EF6DFFE2645458F781186DEE74ADFAD3428690834B8990C19329126379A165
479BE7A0357A951FFAA4D9628D42E58E2AE4C3955C3BC0A32118D85C21DA2A2D
F6A9A8E14D30C5B3ABFB5546935698B027493A61388719E17826703CA5626D73
C94825334610B96A74297C2DD6CA388BDE534130879F2032497581825B637A6D
15736C339C5BFB43AF47577453FF94AE6546DE92842C7EC50271156B4E7C01BB
D70995DF003B7396BE8D515391EF6C45BE6D1FB305392D9301C5F8D7CE465875
7E82237CC0242BC30124602FCDC8945E3AF5E951169BB41A33BBBC6050C3FA97
A1C358595790732953B47E21E6FD6194B45FE0AC0CFA400D7A935D335D9132E2
552397020FD388D9229C1E361D6B9529C42CE1633636307C390FEA9AC4785AA1
A2B368DEB5A761114346C06AF01FF1D478BABC8F60269694DE6292427838CB39
5A1AE8A974CE0D4D43B110AE04CD4E70E61396C761E05691371C17A316788406
8D907E9EFBB0C9055AD6CDD9E7EFB7595CC780515AB950C6354B963A11F305C6
10D8D60410CDF5CA46C0252F1918B4EBAF5DB938AECA1124060D8D138F01FB47
337A754A06E6616AEC4DEEAF2899E0E4058F0E2F39C7E4A8F6FBDC8AE306CF39
8A852D74EB70A107D7B2274F62D6DDE044DD01436C0B9117203DC37B84E5FC16
713416019E24BA4C68736A2D3623114FEF087A1079E12B6CAD360FD9E1E1F211
E51EAAEC0F6DFE2AA6FD30AAA07C0CAAA57932CCE22798816FAC800F9908DEBE
B80E04623D0517232107B05D32C2DE49274D4F80DE8D7E5643C7882C8430F953
0AC9394EFEFB397034235CB2E8D675C168BCE41EB82D1554A6E73DA1350834E2
38B72747966FDC79F79BD469140A79B3C48FDEC696B2BAFCAD5FD88398EC5CAD
1A7C1B69936253563063210DB91FEDA8BB322A712B781A609CFC01A10D239E27
60DCD7A74045EA1843CF43D409DA195E1F7987D027984E73914C69757229F079
CA53B5FB0C840D0170B54AAA9B17F72A8824D3542458FF8D4CBE085CD1FA4977
2EEFAEF04BE98E9F185732BDE2852188C5DEEABC4FFADD155FCF6F7A8181EC2D
288635D507AB35E277C79BF6BCBA6948FFE6410BC7E74F3FE437C52850E944D4
7992413B4D7D1EB9E03780803A4FF311D3B6D625BE97316CD29DE3D5E84A0707
72AF9A660127AEBF500F92C0DFCC7356BD6CC7414C701A1D4AACFBA62313FA27
698E2316852222C1C8FFB4B6B3CB02A3A4A605A9B1132A7760C13A25D4F58FC0
C20BED7AE3AFC8DC88D07CFD2330BB056519FF432CEAACF2635CF12B5B561673
3FEBCACD7D7FCF0B24166A994B25783A0EEEDF552B69D99C4990335DE7D7C8CE
6F6054685F09636591FEFEE33599734695230048892EE648DD028C65CBAB090E
92DC2AA25743D1C7579654DB07E4ACEAD34F3969214FE787F739DA02FE3B3ED2
D387289B7CF9FC41135DCD03534A3591D2850D230B02F8DC0EB56870E7C7C935
0DCBC7DADF42EA1BB050535CAF5284CA9CCB2240A0ABEC3BE6CEE22FFDB7314B
D9A0170CC19568A0E08CE6352CB79629CB55B775C25EE70F2575FE3A0DEF48E5
C9008EEA4F990890C988D399379362163602A8298579A0FAB59919316A6BC937
0B4722DF9C2EFDF708DA7E6B7EEB96B10D2B02F59E52692865ECB5B5F51713D0
B744EF1670EB8CA66F6AFE3BEA1CDDFFF04A30101C7D89126A356F991670DB1B
A2073C07A042D1E85397223612739A5696ADE0BDDC4400A37D6E1F717DD65F6A
274994C80C34069B955B388CF75B423EDFC1C24A1DBDE5751D4F0D3DC709916D
82BFF79DB21BF5219168DF7E84BCF0549449C830BAB74BACC41E2CE0D00EA594
359A0CA95CFE816E9D36AFA630C7177C09D25BC486CCBD478B02911815F77FD5
725609E2347B0B2248558788EFC79A0297F6D2B97C371D5466B8FF94029D622F
F29E2C8B4244E4E16FB7DBF90258AD42F3498EACF1BE7A6D0A79AF4060158140
DBC758027600AFFF90F77B1C162F70930C149124685D8A72A8305C93A1153F95
BC44728E12CCBDF1B1FBC5283A4D17B0334995C15193E48A184D87E401ECCBF6
DFD3DEF05D530F2504362AA93F51EF690F901A50B84441C4DB391255574BC6C5
F5C3B927979656F1A784A31205E7FCD7CDAE6896C7ADE6607434ED807D5E5883
1A67F62EECC1B69AAC2294A0ADC9DCC816801ADBE116E0E90E6199B6C6B3594E
3B7002EC170A5C4DC3BE1FDAFD9348548BA85064FEA8D15C112181B041DFA1B7
7304C21C3636EFCCF24A6425D4C7A8D33AB9E716D79199A4028F1AF8776256C0
E934F6A013AF4CF894BD39DCAEFBBB0536841ECB85068A365DD2BC10EA09D5E7
2B38B2856305810D0BEBB6AC3388F430651ABC747237CE139EAD22EDAC162FF1
74D989E81F06E9D1A83545B3EF3B55DC0F503057FA50F09BD7C219551E479E46
87B7C2BCDC476D736541C6122F4CD904BB1FB162424993DA00A8499D157C1A92
B8D097C2A6E9EE722B42F18D47EA3103B59CCB38B77BBF8AC03961CC556FCA79
F7379325FB25D9E62268CFE94C0CEE131E26638EDEAF429CFBA86FFC5C0E993F
CF12ACC1A5AD56D0136C16C2109C87627A1CFEA2A6707D6B09A8678F95C5DA16
13D52F0B05412BEDB2B9F46B82A1C852617441CFC4905B7C195F49CD4B2F3040
B545FD263652801283AE4A530FEAC44A63E2B90731652CCDDBEEC582DFDBD7C1
8DD6A189304A5B5BD93348951B354102F98A82A420DBC872DEDA90B79F113F5A
4BE581DB49C5EB8BED4FDD5A06F0387A7CD0F3B5576E51448EB9153928BAEBD3
276C2986028E92B75A61FA1AC7349F3C19DCACAB80BAAAFC64C955D1931BDBB0
7EC069EC699F7612A817E3AC309F75DE4162352354810FD45F1E0DABF04F1F1B
C032E38B815EC475EBB3444D08F3EC366CF071C473CEAF7FA64B863164AA9024
24F84BE80DBD34ADAE1D899DD64BC02EB64DB7060DC96B9F4BE1514FFED49364
D2E81715E78DF8DFDCA58542937E2D9B04F87CF8EB48C7478C15610EB43EEFC0
EAE4E59656DE2F08C9BD32C9A4C3A60188E6ACBF73F69518DBBF8C5871C78DAA
ED58E7D84095FA260EA13D49E598EA1B3FFE78D778FEC5D6646050AAECD4C7A7
B32E58BC3646A7FE2F660B6A574CF06BAAB6827A8CEF38F49605DE8ED0099FD7
AC311D1896BF83C97099089F3B91C6DC4BA18BB9CEC7A329460CF59ADB02526C
30495743403148569D17B205AF6BAAA16D9964E72A31F90BB2FA2B170541099B
4A4DDE26CDB31C2E43DEA3CB7977B54AF1BB837802D7C53003659D705455ABC0
B37B3A1C57F0A516BF0710C7A18F596C2A638DFA3A2A0E4088072A3C9E36431B
336608AAA990E81BE87FEA27BCD1382A83DC20215D1FF3506B5E62627A97A3CE
8303F144A0866EE49F4E66271CDB00041860F692706C58D4C69FE477B57D0BC6
12009075B681FCD7156DFF004BB5EC2D2F38D2C47100AFC57E8D98A441A16147
589A2D3DADBBEC9D15A1F9579E144AB84FB67314F229ED09AB3B55B7441A972F
FEBC440ED38ED06B026410432E378FCA804C23D8CC810E306A5D5F00ED9D2EC1
7787C412E7273D2D2B39BB55D84E02F4D2E2A6B93114AB483F7290C1486979F5
2CB9F8D910D4F8E65713857070E9C97218BF9933BD15DF2DCB6C04B95F601D40
B2E38725FD5F812CA8EE70C47687D9500DA5759D88CA1554989F7B118F9C0019
B318CD3A83CB0A1E8891BE5F6A0BEE028F120A45FDE2CCCD226811D375A23B26
115CFA8B0C2B1CE8555BAC70FF538C735C97B246EE8CA0A342F44DC195A6DA74
EACC51C1AA6868E09AC51A69A964929C5BE6F5DBB5F7709411498A8A583208AA
76ED2F4A8197498A11CAF0A779A959DD5B99DE44C5D0D23F518D05E8FB8FDDED
B64E0E969F9A0743F17CFCF60793A0ECE5F10099E82620D2618AC4BD618B1418
D1B0C90D10A22D106CECC573AB00C43668A9DACFF7970D29AA4D18D60A4514F4
00B31CB20ABC909C2BB2E60254E307F927C744DB8CC9662BEA42BF67BACF558F
56BE5DD221F4E05D7C795BF3E58E64A23BFCFEEC9154548E7A0082DC23289A56
D8B940001B984B139E95295629556192C95CF2CBC7FCAB7886FC655762EC4630
6800B751F1D05B400620E9AF4EE88CE2F79FFC9789586711C653BCBA255D4524
1AFBBFB78BD035CC1E3B9FBB7A95B46902ADAD3AB1510B502F73E15F83137425
652F6AA8F9FE730F311D7707B9C1376A76AC60829FC11CD8EDF9A7C75CC957A5
7D10093A193FE8F09130EE36B7B1F51E645A850C35B267F87726155A4E50C3B0
C3EC1F7562AB48D9326985DC273B24FC9B07F1134AAD7C32A4E430E800EED4DC
B43B0B1969A53C181C52D9DCD913B459F1349A71216EF16A28469B6B0C248EEC
80946CB3D0B5620DFF2CB459AB7EA91A802B34425BE1529AAAA00F7EBA11A7D7
613AA7C519BCE1182B6C30F93DD0D7DEAF212B176FDC196FA9834045C8D38B43
0615796DED6C7432A10AD7ABE3064F74DE76B69F4B120AFB3B0176204635CE05
E96349386689386BFABA5CFC0CE6369C638E6E43C76923815823D50EB25F6836
6376BB450F972887884CEDF3E6B0768D5D5DA27B83258CAC03E91281C6ACE365
02B817406C1F824F552DC9205BF323BFAE4921CC732F6D38AA8052854792C3AB
62A9BA295200A2222E49919A201DDE448D6B0B9DE5BD1E14CEE79EA5FDB4685C
29D7AB36CE0F1D16F70485731B3D2A878C95AE34A5874BF49CB38DD9CB125971
6A2EE31B3C8277857A875283012C6F6F33146C9445A8E95843FC5892ACA107D0
B0F3A166C3C3BD05FAC737A38CA8CDAAC39FE833103755EBA8ED086F5AA141B9
C3D96BE0FF692AFFAF1876891B7C0FA432809D06000E180484769815A5B90B7A
954FBE6C326C3D04434A4DBDEB200C0C2A31A235CFC4B550DFA1EB6464AC86DB
C3773E4BDECFCC88C900B2C64786B17CA0899337C38FE6C3301A3342BB96B0EF
D4EE839A79AB94847B2B51CED6D011B6B08696203E8A3BA8903CD94A45AA4913
371D2259CFDA8954867D44CC09BAD7FE89D6A84BAAA892BF31443C40E10CACAF
75ED2CC22B05B89ABA446304EEAAC280A94CF9C808E942A2FEAEAAC3B3A5CC1C
97E93E3E08F7835F120511110A69E01961B926344464B758935C30298D0485A7
CEB1659306A7BCEB9518A47CE6423EB053A11BD770399E31F391B1067BD05868
E556C18D08CB16EFC39515042E7F4ED2BB0D0DD6DA2D7CE01CEEE2BDCEF3E03D
FE70A6B27181675149F8B6F85D61A7380B018987F338415EFA2C253ADC521631
09C7494D4247243DFA2913AE9B027915D60AB496AB7D22076E4F706C5B9D0C35
9BC89EF5B6D16703A6152ED496CE36468053166EBE2A274A106506CC50B53A0C
B8F89FDDE68976BE50D33C47148FA8683F6FE0F152908B4D4EE6C5C2102A4701
5BBD679A9888BFA33108AFCF40D29D29FB46A6325274D033EA53605E665A1253
013DF128C593FEA5DA1B805E4B36040CD37CA8CF48FBF19FD75DB95E654836F1
8A3A1CB8A8D3424283A088E9C11222CB75AD3C0A327A90E16092E727CB2BAA01
28995EB7CAB1BF40C37A1425A4C8D3CFF13016EFB49AEFDFC3DF1F751A8ADCB9
5754AD2269814B041E109ADC5A3A7916DE51BE538619071820BDDEBBFF6170BA
CE74C2010D8006EB4A076F82EC251D595EB2AD0C65E1E301C0A32EAC006EC66F
72A8B35E9CC52B8AB63B26B70A24B348BBA780FED4BD272FBBE73FD147038AA0
A51F2333C9056CE8414D7E86EB5FE4B3AD545CF2DC302D330A414824E7D72ED5
B28B5CBE9A74A953D0596ECC5A6B2E897CA1486479FC9474B89A60646EE5682F
AE012E388A49E2B9A1B14E9E931D88D50312D434E70F3D4D71719C1180FB331F
ED95A43EF0C9C39205BD0A525316943C6E16AB2BE182814BC07F7FE1882981EB
41E0B7EBE2698EA4B718F3303EEF2857AA1201895AD52AF6E17F4B3DA69B24E7
BC71027180E3338F06CC2510FA1363A7326E022BA9CDF2FED224A0C21706A33C
CB741E91304FA287688FF87FBAA13F47BA5C1868021E69F6DCF2B27FF31EA794
BC8B59C1887FC639481AD72268CE454554DBB8E693716D9FFD95305918D9505A
1121B2C09C520E811EDED8DA4E014B8DE1201840299D659144AFEF2C34824615
385C77FF85DB14B709595DFA7958AC9BB93E2B639DB05966D83B6C58357F59EA
E73E42EF2934D3A0AF831C35D5014816515AE422881812754E938391958D56D1
6234E4FB8091315F7B8A91A98B169B121155CC0183BF3DC09BFA054D70678B01
042D2922D1880D207870D2D0F5CC22C5909B0388D377DAB868978A320C21CEF6
97F705C3338C04A228325CD86CDB5F0A7F24F0567100B18B54628AF18546E746
ED2A636B455AD79E24EF13D6591FED451A3871DE4536ED4190E435145CAF1608
528E74403A59A5F1FE7DCF86D9EE54A16A3BF070E02343F42C7AE29B9710AE8B
EE2271D5E9E8FF54D36D825D83F69A56D5D1D84DFA98AF76A5801EF51614681F
42701839C978B750C9FD69E18FC6B682CA632FA2C538C885519815287BB419BD
974BF795D871B9E5D2BE15CAB7CE630194962E4183C3838D9401260A74339CE9
ED9E894C6C87CC693DEC50A769B3F13AB497D39E76088526BE617D312031A0B2
A1393715F6BB4C673BD57735966402C7CD1BF158D83A2FBCE72DE36B235799CA
03AC7D27D6C69CDD6E0F3F68B7B0B1B5F474722C2C0261EBAD9152F9277E2176
0A67FA05EDC752EDD6305A96631A95E115C25548C7B89CEE675554A4DFBE2E76
58401207F8C18DB3B7D8DD93021D9EB12338ADB31DE6AF6A39A9DD54CC812427
C84198AE47E5F9E0807321F315C6CDFEDDB367620BC0E945C4F1DEB5B044B5F6
B1A124A78AAB1ABE0991ECA3980EBE30557A417D3036A9619A18115DE1097B3D
9123E213615B1E97EF5C5BBE4BE182B460E8A77755AE4D8D4931A27BA3CA8C36
2C3FCA8FA01579E1495AED6998533822FC1F1C59E66F860D538ABBF3825CABB6
E3FA7D105F375EEB7585683D08F1DCC78BD17C233A085BFC36DF24F2008D619D
B75BBA85281C413245BACBA984A7BAF7DEFB9CEC1E1B34631245B0CD0A89C7B5
7D9A213E40222126B2F695F1A7E22D58E88CE48EBB53934A0654A5EF15475D82
30F99EEA23F9B20E756119651566720F80391C52B0BEAFE329DE1EDED3C5F825
B443FF99D895F6EEA78F46BC873AB34CA0AF3C2155B38DF603DB446FF3C261AE
FA9000DDB63772D73C3608037C664996A7AA87F324A7FFA69D062E8F30FBBE0B
3C377733C603D1F6EE813708498882A9ABB228117908E0D1A2BFD79F8F3A42EC
7CA9B48948F5212C2422D5E49397386B7304DC96956B41861EF9F3739F063D8D
054594C2273160DAFB42AAD7A3960EA2A923105FFD3E16420F9601D0E1AA6235
CA53F9D8080F64D6023F0B911BA293B86D1B07293724911F271963907268939A
7077AB632AFF87A0BD19CC18F0A78587E1256B84AED44FF79C846C17499A42CE
54242CE158F72D0A2C2BD9906580856DEFC1B690A8BD9688E92EB1ADB8E291B9
2A7493F4C2DD17352573C90177484F7E742B00B7C92F1AE848CC81B3445B02E2
7AC2A2FE3A14C5CA57DB545BA49172598AB20A52DABAF7035C85986DE59AD301
B93AA96BF75425AC6D0D8B416DD36D77969F9C1BBE36A2A6D4F3FCBB9F0567BA
745DF8ED9E5BB4F90C21B8F6E94D6A1DE2E8333D03F30C4653CC2D8C18BDF9A3
90CB20EDB7C0E303DB994C5F5824813B7747219EB756FBB3456BB556CEF1ED29
91BBB16C4B5B534D65565C631575379577E2653608C0A0CAC3E2A3DCF5050D25
66D3586E219C55EC4EA46E42986A204F0B48F018F352EBB1A1303E87203FCEB2
3CE074F149C2EEB294F905701A5D90094EB79BF159A65B012A2EACFC2FD63E7C
25CB1D32CBF502628B110ABC798069F2B5CE2BDD828A2CD81013AD061A8C29E5
E5B6B7B028D1D17A11B5B3809743F870068FF2DE1ECB8393C499A920D83A9844
43DEDE9D0EF69B4EC965F208766CABE874264F76A5963F0D97630BB5170BF2E4
F05395034C9514123716A8CAF039A970D2E940CC24EF3D017881413CEAEA988D
7384DCF20A3083961A28BE66F462F417FC15EE79D98B2F15FFA7271DF32AC89C
D89D6CBF5A82C037D70EBB73931AFFDB7E29FB0DF739EE110A34004817B886A7
9776907A47591803200B898B8DF214F09E29FF55CF49C204324D050BF5D846C6
8450FD2AC0EB3A7C3D9294946F1ACB88A63ED32F8E5975B6B665BAFF54513822
A58693DE9B496928ADA65022FA01AFC652554B6BC2B2B5705FFA43F4066BC3F1
1414438C205D7E1D43BE82C54BEF39793B84BB6C66B998AFDD353A68C9ABA26E
B4DDB91F40A5DD5E82B01CD96B092A2ED7A424E372F09011E601D8160C2D6E8F
DBB4AEF2054421E951E63F6C3AAB962CB9E16A240013CDB4F38DF570E3B1ED87
BB4F4954ABAC17E8B0DAFECBFA23611B7B354AE3289693D7B83FE88A4C5830E7
293505827D992EDA8A7654C668223B86632842682BCD4EED2766A69EF6B97655
AC5A24843D955A35B70900EAD57E09228E923A91B2F7795BD8A2F9B4BE5A76DA
F30053CE655A7C984B6BB390F0706D74355655EB64342E5FB6E18F2149FCF4C0
F743AF094E2E9743F3F9B0C5ECDF97B61BCB879A08709139BA1C63777739FC42
EE3624CA9754C4B6A8B33BC05A3C700173D75DFE65755150ABFC0FAC57A90A7F
EFCD4B77DCC082D4A626666BE886B3315158838DC59AD0A094883355D2F5F979
F004AF81C8F356470C31B4F54AA5E59A55D849F95EBC9D54EA09C0E2FCE81906
682C5C40CCA199559A629DFE89ACC734AF7C72347DC27711612A55A6B1215C54
D02A60074079C254BF516641EF92B02E24B2A954DB76FFBE2AB51344990FFB38
A6DBEC4DEAD0073DFA597ACB9868737617F9A60D1F58E74D0933AAAB8320EAA2
23B4FB7B82B0FE1ADB57AA6E7229B320C813847E00951BCE07935F9672E13D8B
EA0BB739CDAFDE7BD06E9738F31414347EE3FB1EA1379B0F4A171E1E4A66D911
FDA963370FD6E94F8EB12AF34C942F3773D7897C064248241A6D5EA27D9E3C82
BC443C5C7B5FF75830F9E1FC38B277D0ECD231B96F93C47D22E22208EDB1C3DA
6EA5F41067BE3ABF9CDFA61857585AC81535E51CD34FFAA32B6CDC70CAA01952
E32DFC9F59B39DD9BB281398ECB6204DB3F6A96281564D7ECE44BF6CD22747FD
308450AE7338B33D7969A92EB33FF10975EB7633E9CF7353102D74FCD30EE31B
2004F31E02A08CE90272314C412C5DB4A6BB35BC938B24815C2EBBADECB26AC9
EB6F7548E63D6E83F77B0929D99246B2B3CAEFA77D4B05540EDA577F3759A940
D23E73451C967225FA778B9392103BDE93E7DF942EE24E70797F78338B50DAA1
F080A817A9D497B5917E22FA212D243C390C6A8095190C24854B63D87511443D
2BD8C69DB194030EDD883DFDC88C3BE21FD28CDDB4DF678DCCB345355610F7EA
A82A172382CB5065C66FA0E55CB3E2ADD3A587EDAADE9C76416584C8D40E7F67
3FBA10119DB4398ABC368A1C2948525AECD467305D50913ABA3FC5CD9FD03E49
CD3060542DA0BE96DA84EE916EF1BF70C062A450AA17FA2460B3A7A743AFE1C0
0B35898E8E6C7CA53B04622E60199F82933F7490FEACFE691338C4B129C97FEE
B6B011B87FD081D4F769B5CD39EFDC8A772041F7D4011AAE2D2BB725865EECDC
87AC22689BCA04E9CACCE8B88F74630D9995BF9B44F1A28BB2733ED95BB7437C
84AAD8AD7E332930C4EE8A4A0158DAAD78D215ED49C79E5BEF7EA4C37C568B69
CFF2871B7483B43B43EAC0407AB6BAC956EB8CD2CCF439F86D5D62D2CFF2A335
D8E21B5ECE994BC3F09C750B3478EFF396763DF2958D5770E81CDDA653C2698E
05E0E076FD9B97FFB1C9913179AA9EFAF1F18BA2BDBDB30BCB739BCAFCD1A6D9
12D434767D7B8A4C9B926AF19C0DF704F9A1F1CF8F38923B7507D06C197FA096
2EF63BDD5B52DFB71D42D04C4D41FEFB65AF81C51D429FD0A49893FB7149FB71
21155B13ED556A5A5134B85CF61DE04C9E9D18DB44E350E3CD021EF8E51C69EE
E25F89C79593177E40D02110999B1647582D91BA6FA0CFA8861BE3814E034833
F97419F753FF9C5850EE37E59A4A3B90EE6AD37BE01E88597E05F600FD03CC51
5AFA76D3B85160322A1ED462CA40D2F1CEC1E150F553908DFCEAE061855719DC
71EF18828F520F3850EDC06E8AE52E61B9BCD8880061E8668909E34F824317E8
766999D17EAC8B28132D2BC9FD9E7422B53CCE01B56A7B0FC859F6A13415FF25
D97E32AB4B5D29044819A5F8BB070D9623DD2669B121B2590E1F0771249E2BE3
4467791E6D9214DA36221A147B7E77E0C5080105EA9F2C66500DD9691644C968
7E096E18CF916ABAD7B08797CEB731BBC4B3B42213F643CE0B6A1BF2E296D65A
0A2DEF5563A9EBEC3B5A1BDE88057173C037A4CFF9A2EB68A0B53C977307CEA5
32F5D1228B14034D47C30F4E07BB2CCBEFC2AFD096AE936963810F34AB6A285C
2350088D00C56F7C6A90C26944439B59CDD0C32A0411F64D448641380E51FA66
2752F76649AA8A88517E73083A5C8E612E3342C10EC44E8A3EDCADDF8FCD6E28
9C19A7056DA716700904E68C8145BFDD5DED06932D5C782CC8771109BBE03D76
37E7DF5ECC80AA99969497BA4A5BC3111D164100DD8AE6F468BCB171BE65A982
8EEDB4ED53681B1AE8BFFDEE3E46DD584F6223F04289262C09F82EC227AB6297
82C9FCE9D26D34522EFB22EEAD592D7060C3BECDB2BF7BCAEE19FD0C6CBA017E
AD3C0A327A90E16092E727CB2BAA0128995EB7CB63793FC26850D46337619F86
AFE35711CF679322F8DD5F6EA79C90124E5381358402EE6DE558224448274773
118D801C595958F6B8E22D80D1148B449CF1DF8E35E139427E3381FE06E03BA9
F1BC28D527BFB50F1A7BFA3EED23ED5A99E54D544E286F873BF6B30C13778155
B279ECAEEDDB865C73F29AD853A65511058A9A71B7F6AC379F1D0261DACD4617
1F18BF75E71B5B6E7022B99AA55C94130C7A4AFA95E86DFFE2645458F781186D
EE74ADFAD342869083492E3A0B42C39D2AE574676AA0592F3F052E71E8E353D1
AE8AE37645E63963E93778DFFB58C420EFE7799210D96ECC35ED72A0DAC208D1
B93A07374374666771E209FD426E494FAC96076E3AD1F6363EFF053CCD8421DE
0670BEBC2E2003270E99FB4B586B78251E39BE13B690D788D9F512376E6C068E
A4A2F4EAB6C4248C541C5DCEE10C45F01234138E4BE44B8F5E92D2F88DC8BDB5
CF53E44C832B9BF69A0F1148A5CC5C9F4F3BE200877997AEFFCC41456009EFB5
B10568EB0BD821F8B99500A30D1F959A117F176AEFB85E36FB9674ABD86A8330
9CFE771F4A5F8ADA324718560C3EAD19E82EA3D9E657C8233CDC098AE31F54AB
0D8DFA764F314AC16BB1740C1B9A34534A154E2B0404D578D36FB14FF28B55E3
4DD28FF9F20C92E257EA85AEB58BF91027838110F8FF6DD6820A929BE40D8978
9D48C502BE8321430B4EB6B72238B57AAB07DDEECA4ACA58D77BF74371E704C8
F7037F433A0AB962F52147208D9D29FDDCF26A4DA2D231954FB93FB790C6B8EA
D46FE7E5CC993247E7CBDCCD90E10600663B161A15DB54D1C7DAF1D8AB6B9C88
10A52BC5F9674D286FD002DFA5BB313D5F5C645F5A8D84FB1C177AED502F9F05
4D68CB91DE60C5BCFB788A08592733067371EEBB2E9F3E4AAA7AA9EA4BF0BD2A
06FC203245246BE57408FCC7B3586AEF5F4F11516516CF0731B05959EBD9845C
420298B2E454C1E6305A4012A15C5BEB754BB4D83E4CA45A3FE9F894F47696CA
B5C3919307C6580720B0A2C11C80CF098B6FF0BDF6453D33995F4E54BCAC1227
B51CE018B956D4E094531061EA1994E911990FF5829740C38207AF9F7F3A479B
0D3A6A587952E2FD49ED67C1A51A9365941F774F8CB14B810A9AF0B756C9D5A3
D2C267A1899D248BAB65963138487AA6935446DCC68233C74FBC0A5284906998
4F59CBC7A902DE0B104E047CC929B38B5E444C59A7A86BF1BD10D45F8F7722EA
9A2F7451518F4821B793330761E1CECDA2BB9E7A52BF9B5A18EFE76481A3DBB2
199A8DC08CAA78FD1031B244332BAD0DECA08CA3A6038EEA6FE80B7B94843203
88680F5A19C641DFD1D001D485CBC95C776157B2644A4D89FB69C90D01A29427
6F86BAB688A0B913AEBE0AC477F395975B3C67FEE4A4C90C6B2B58EAB426EF14
7AD9890BBFB4CADB3DB95CE2C74DB09F6C18D083A389BF5263A41F9990EF6C92
7B65657F25C0011DCF5A74F5D7E2E2B33197426A1A86E9150D3A1EC4F892A2F0
92A3E45F5DE6FAC7F3CC74DAD0DFEF443B13421FDCBE3048AB8632CE97395AF2
746AFFEDCFF76037E0AE8348F559D6AD28E6D0CADA707F28536D198CC103494F
8433322961DA5DD486AA56CADC16FFCEB954B9A1D28E99EB00F3D166F2445E02
0BAE616137E1E381C974555ACDD144F3ED4B275EF4C9EF1C649A86128B5940B2
D2216BF4EFEF53B18C99512BDA16162BD50C023BA4EB480072AA303DB361464F
948D43D925F08B67D8B162BAC327DC55865CA756C058FC32391C040298C4B93F
C4EBBAE2DC26FF4CFFB4C707B8CCEF0694F57A327C47727D3C9969AF06A708F7
CEAC99A20BCA3573AEC93793461F994D643758B7B210BC4E6CD5B400D9440DB8
DC2FDF3A3D6E537AD3B43C6F3A905597570A8C6B0B4A5E0B7BDD48A796A43EA2
5E34BA76F1681A3282F7FC211E12F2F10154B6F0BF23742B9547BA97B2B014E2
8D06053F4FCF250C5A8FBA5FE616E33EA206D6BD570AB56FE0B01A20E4142578
24E595A614146FE0C602B75BC7842B4FD7E988DA6A2C671B13F6702A0537B9FC
B7B78BDA3F52B03D2109F10EAA7620CC6B6CEB330921798D929A0A9FA5FAACD8
9307970FA910AF67B7E659EF3794B2678A04EAD1565FD603D36259C433CA1E5C
A81DB46A985DBB245254972A9E478182DA289F5A2329CA7CCFD274E8D89AD16E
B307FD6D0EDE789048E251123D63D702E8127B374C619A7EAF760C21CE025476
B6782981FDFFFB4BE737E984AAA5319EAD14C7E5F3BE6A79BAFF2B53E169AD04
E892B860A37B40D2063A1D0C54EF86D4B19AA893C597C672757F28C5C7F4ECFA
9007FD8BF42B2779496C5129145F9921D5596B74095D35FA46F719B503CEED69
F0578B137D1D05383455044BC42BCF3C5002C5E2BF576CFE2494C71322D68F6C
8E886289C7876FB6A038F3A8A9BBEE9C86E1B2D2D6122E36AF36300CB97EC3C4
DFEE71D3D47F8E8502CAEA7A753A976BD608B2614D6C1619C4B47D24E68065CB
58F012DDF5E0293E70BA0042B8163524F882A3634FCBEC9471E3AC6EDB64E09B
CA691A44DFDE65B2DB018E5CC843D27A4547FBFF43DAB5C8D7173D2FC8909D4C
122E619E7999CE78FF1921A97B39A053F6C1A8CC221380C8B5A931654ECC01B3
04C12C7A0FDE6305F93420BF939ED61500EA8BF680C9721265B20A3D1F80869C
FAC303798D251DB01F85072B972F735F74AD1101195E12611D81D8FC47407839
4B9C7BE97C54CD6D44B0AB144CEFFBEDB202555CDF1940324F5DF4FF4E59CF18
981E959DD72648D7E16595B11C1C5128C106296B137F1BFF9984FA2DABC9702B
0F43EC51E4CA8FF7ECE554F88B44EEEB4686AB62F9479F56586138E300894BC8
8EB6C6F6A26DFED9BC310412D6270E1AC97ABE66AD8CD905754A860A32048BC3
7B74A9048663E46E7E218A3868A11A05EDAADEF1000D0594A2A00A887ABC11D5
93B2C14F387EF30718C340B0A856FC81493A43B7356973C2FBABFD40D295760A
5429BFEB119478C4FCD34BF48B926C42A3B3B50E1A599453A24E0832C29915C8
0A8669CCEF2FBEF9B95D1782281B7F08F279DF4AD4B8AD7ED293241DE6803E94
2E2BEC063FC3722B8F6B622D3748C31BD664AC6DE2FD83DC2539BFCBE044FE54
9564072C0BDDEB749B5B31BEECC444A144B86A307BEA398227369AE59C263594
C930FD82EAE81F0CC35C7576821CC8F0055B559CC6085E8FC620274895A705E8
A811C483019A865705F008C4F3394ED09466F1B88FFEF3159132297163054DC6
F9401E00967B72DFD744B035927D5C3838BA43A85A59BA636E06B13DBDF7D144
2DEC70EF58858B321FE749C0B66D513D0C5169526B0A0F238627952F4E9DA19F
34ACBF9773CE4F3473F2DA753965881438B9985C5152A644E000F4070984DE10
D2A09145627E654103958703241B18D6B1A903C6ABBCB26423C688F32BFA52E9
8E8A08710E471627C95009C89CA69518F66E73ACE9F3359B827071B5C40230F4
033767FD7FA1B679C44809DC803392752DF14358384005A1B14EBE5E2B08219E
16DE8D008A4CCC030BAC75651B34A8B30CCFD8D6113E5353A63689C56C19AD57
DF4FD2A7AD2101D94C31E95BD90FB695F3882115392A4B3708E7272F42EF480F
3B7526683CA99376EFB83FEBB19ABE932FC27877856055B1C5A09EB0901BB045
38E2E801917CAA7744EC34E58BF6CEBE3F909862E9610F58EEB4BF101638FDC9
77F7C86E348D9768CB6460F8CDCEEF70411C6BF5693A7D80EA28D426E41511C3
B3F2F2281A8701545ECA6EF216E6566B58BE13B6476A01E672A2A8A5177878B1
7AC9FA4C3A57B665F205469FF0C0DBC79674B6FDE5615E834EDC52949321FFD6
6589124C92F2889BE40F8F946A1DE500A35DA4FEFB00EB4858C7CB0AEEB543BE
E45C28793675F75823778CC4536B6F0AFC173FA518CA5D8FB966CC20BFA30DB4
AE498A48E854BF48FE678CE825750A867521BF00AAD7B2164CD00BB9646C783B
ABAACD7C6D4B08C4E9AE0029A1CC580F052434E654E1AED741D06C42CD7D149F
680DB0D14BA5307464D13AAD6F66D2F6C2A3A0DC926BB8741BA176BD05DB5BF5
2B27322D263DE891A9548EF8589F7479F64DE90E4A93D0A8447808D02685F123
B8F9B6814A8D9C09282145DAEA11A7711B4C37809F39E2C35DB7F5D8FA0B4163
6E6AADBADFA2047026BFEE094C6824183E455AC47176BADEFBAE6DCDF351FF15
623F07B124F08332E5A3F154AE48C769FEA5AF814C90EA247ED0C71843DE19ED
C49F56A6B784D78AB0B83B713060A57FE93AED19B393EBC1C91CE8260A360A3F
BE5D819711DD3C21F75B967011A9F2148EE98B44832D7B2849E6561A63BA651C
803FBE4DCBB04F3C4BBB5E7D38EA8316CD927144402A3BF82EB40E3EBD554514
C88813D69AFD731DC4FF234C567624ECB22104BEB5B84BCEEF7C603C28C0B290
7D8BCCC3C392ACC76946EDA9B022EBE0E95524C89E6C8C2C03A1E0FDFFB32100
21BC2CB486EC4A7D7ABD5C1B84B049B3C2456A96ED95A74DAB65E997E864FA6C
E514BB7D7A130C644A586FE98F5658ECA9B67A5B3EE489FD97464DBC951161AC
3947A99B164D19F16CE11422159BAF88754E34C7B0AAB2ED51D0D1241D39D306
0039670E5F9BB4B6E4EAB79766ABF6DD0CE250DD0E7F002EA1ABC24925AA050D
281C971E838AFA67B5BE425706690EE9DA0787D6FE33D87B01717ADB13678875
38E299A3B8401CCCA3D24C157CD100B77E3360C229F74199D60E0EDE75F3EC39
D231AAF95F863E673482CEFAD197B047D8776E25757CBB1085EB11A7A46DD0C3
5168C2EC339A3E142EA23FCFFDB8163FE831400509CAAE3F8EF8AF289326382B
6B92B1A038602371D28B022AE0AAE7BBF7DCF9166B6CACB67D910C8662B41661
5E9F5151F0F61F5792D93D10C77B3E28E7135F19A93919CD356B38BE8F9A6CBD
A3CD6F61804D052A5DDB4A41FA25A8B7209B89A8BC30CD13DFDB155FD94F378D
7D6ADA3476CCE84832BD0CD508AC54B68D45CBA874D148E5FD08E6DD8D01AE15
C0556C341C47892667F99C96E882FE7501216F9E28099560064A2D4F8898AC9E
2B360686E2240942C93C2E9FB8875903ADE43A62C25142E31B2354D9E619A9F6
D1348041A49B29FA8B6F38FA2CC3680CDD8837FBEC84A6BAD560112B94B91FAC
3CD9A004F3AD58D1E6005B7D72A1A824B60AB522B761714BC8C50BFFF2B57EFF
E571CE87A7259127441B74A311E6CCBFE9B3A6D717D0F864A139CB4ABC830DC6
01965875339AA277A0E8C8E6B6795E5EE593141D86F657EB318048F0283F2779
17E2263045F75E6731708E8D368AFC1EC51E278502B5004D1904E1F97C2B2459
6611771069FBC59F6699D7FD82562779B6EEF3D05FC343C598976099F1360EE1
418A44A62EC285C8C81A489B5949A7AB514E696DCAC4605D42A4D6C693EB34F5
7342E85D4948290DE4B9167B6430BF7A9BF12DB1A8F3A6EB9EDEF3B19FCE4C08
6F309AE624D625483D7C87FC2D623DA7A70F0D5D38005025E850B6C9024060AE
DD81FE6D5A3BCF2847779F98DA718A94F064FD5860CB7395D6C5AA3873F2FC21
822F3AA7B2AEAF56C980DC6018FAF21AB1CB205356746694CA93EFE225382F37
2F4AF43B3CA606CFAFC7DD6902937D7E43DE2DA1EAD41FAA5D19294AD7DDA24C
FDF0F24F0B5D61E4F5DDAE77018279B5DC8C83E5AD6B9F764E268D0FA5C5A634
ADD0133D0E2B4ADA5D6F94622540EABE4DF92AAE2C0E5F7FA183793198838A24
C04E884F72907A95E93C2C115039881E2A407A8CD6ADEBF9C515C4EE279E14A3
C962ECA7F564F561B230C2B84AA390AC6607EBDC0A7AC49371A05C2546A17207
04F3B64856B1755FC48B9132AFF546A04A1A636BAD358130FAD5803D1D72C049
F5F8E2397D83829CA60DCBD01E55E7A513EFB4250FFF0DAC0579E1583E55158B
97EC2EECAAF9F398C51A24C5604C70DC9E9885DA775776A80C26A1C1EF618AEC
A67FF564BE623A24732ED59D38C8E3AFB685CFAD273E73B8885273D9349FB1D5
A1E3A7D87373B3B9853DEC40C1032AB903477EAEC46CB9E3C44A7162FA00F6E0
5E871E6EC3BF96BF62DC96ABCD9829AD5BEBABE99419629B931565E7DF3B43FC
B4C9DFA8EE4AC3C0297E51BCC72D03E8D00C4C7CB5AA5D4A1FCB1136ECEFC056
F812DBAFF78D9008A5E67F8B19EDF5EDD4DF519608AFCF2A8079CAF427454F55
4BC90D884E68C3BD88096009DEFE0A34A388FDBAAF005B2DFAA2F37D6D6BBB94
B39D617F4F6DAED538152665D2E72DF52ECC19A800AF0366151C68B2BBBBFF91
733446E508BB06936E1790B4B40FD96A9F55CA85BDC3A5A3643FD07D8F6E3727
FD08F1235696826811579C7525F8E85EEB18D69A1C807DEADB6D4BB557CE2A83
0347E68339FBBE8EE44373E17EE95917293BC66F56BEFED8873A4255BAB5AE96
6173C0165018C64216C1885EEAA6316F7E195BDA83C24FCD2FB69D65D8D97025
E1967870902A430D0832DD584201CEB8DEF2F37DC84F3D8F2A9545F29E4868C9
3534EBBADBADC853FF68CF498DC033E5DDF17364061D1A117ED82608CD2C28DC
2593FB450D2E45AC24074D226304256FC121657A5C5B5D6DA58464B84F24BA83
A70397167CCB5C14F388EB36D0A6D9EA1324A3417645CA17CC83641D635534EC
6A9B35E03BDDC3D0CF986356EF3489330937CE842E8596EC2DADC369C2EAB0ED
4B490B793479FD06551BB89AEC64DDFAE60C7B303E99B8138FF0370C00ADBCB1
1BE564D6F1ADE3B7BB317060F5F2A26252FAACF1351B88EF38F54138373CB415
E02DB5C4103EFB0846049D92996C67331F986E548F45FC1328AAA7E4AE474B2B
CDB5FCEE2E26771651403EA16B54DCD5A75498EA0332EAEA05AC82EDAE43F46F
E4D39AD20AAF774330F69C468EE9EA90241AB4025D61C0D21CA15522D81092A7
EC95FFDF4AEC42606F66A388D6DE1BBDBE432826DCE0D15F7F2971AF1EB81509
F4849C6F0451A25ABF30FA6668F6984517C9867E011BA39EFC0F90C2E4A6D9A9
BCD897A4FC5249C464B65E811201F06029956F22CD8388F25C9DC02E19319D67
08877E5A8F4937B52F89EB4BF2462F74D40F724F370C4F93C858F447116E4D38
C565127AB7718F40CA7D109ACF4077C018B14C9574893C5CA6E8743910B2C138
743811FE1F00D6221AF5A69788F9A27C3E00AAC9476100B6A4767B8C3F0819DD
6BD9F8539DC21532A721E2964A8BFD584536C6536152162526DB8894DE531A28
C3C03480CBFBAB7553B0AEB2D3A5069E616E2BCE521149B1504EAA8B4FA36A9B
42DD4504A4E584DE2C3452FA3F8BCBBF9D012D31E56D54CF4088D49C36D45E38
6DF384320110AD0A3F47246F6F9019754C53BE0FA4284D3A889D04CEF2FED234
3512ADA1B78E71C0B080AC0D35015323B5F558BFCAD9A7867E8A9E96EF865406
974F9A39C43B6E0E35D83E3AC9E4AAEAFE92E007183A8BB3B0C7AA7D55D30DAE
2341581FD0AE7048ED246DA97A1D4F89C3686AA18F9AB646475258F3FCB18708
805D2CC876CFD20E1B0571BCA13FCE962FFF83D5713FB164F7F485C93BA4B8AC
33EC9A83A3D1A99C1B152C26D8D9E298CCD10DBFC1E39CB57829EB063B4E97A9
5FD53C2F390820AD6F1B4D9999ACC3F3352C8B6604B47B7B310ED3FA6A14AB6A
3CAD1E8BED3422864FD51CD6B1B90F94EB5D3609F1827230E3A4BB15A7AB1E2E
940EDD590CC9DC6E62FD05D75A35E754D993B3A5EAD8628A12102E4D4DAF134C
CF445E6510DA02AD053B17ADF5AA787730D15171C9565E7C1B27A05A566E776C
097B297146B5927BF826DF2E74519F043C7C7D4B0798C24B05F2F81BD4277667
465EC736B7DF7AD730A8BA94664807A5BFCECE29840CA557C4FFD2FE9613385A
800253B479C67F1E7FC5443A2BBF32C2CD5B3C52635D78CA7CCFA2481592DE51
6EB438825EA95704FC7D4F210D3900326DC252E550A3895788186E0909A5C587
B510B61CF55094B727CBE30A8231C2318EBE219475F4DCC5ACB7910E5E12BA6D
00C44C6FF0D37474F607C5BA2C322CE79F6D54B05EC23D15C43A5185861C0712
416C24D51B0D41194157FC09DE1DF4736AE524F8A77F9AFF481217D908840BAC
3115FAF1129F72A1FA5552B1598BB3BBEFD9C8A4FF5DFDA2408683D53E1F62CE
210184B9AFB99DDF1B7944B6BE4F705EE69FB0C2F5C6F859B939D7829696F9D3
AB42076CD2E19254C2187A40BB9C66888E1266C66D5BDD9F6329628766BACDAF
01EB18A0F8266F8524DA4D7B86DE6A316C147E4148F43FD667B80094988852DF
069CBE0015FE50A1EBBD12ECAC267009641A81FEA1DC11AC5DED1473A861EBC7
0C17F110110F980EC2172E8954FE7E4A4A052733A2ED0534E47E95BEA41C5B65
77BAF27DDC5393AD925FD23F98C3964D6A7B0219E9448CB59E51689AFDD90C8C
EF609C78F48A3DD49FE7FAE2FE041D1654C13F3CC083D9D5F0CC2360CEAF8569
70EACE868538C966EE0B33A375B32B3A1A0D62DB12710DD27DEC301C60987164
1736319D670D56BE3902E7FB9D506471263A84F86B6DA57961A929B09B43792A
D15775F37B0038DCD8B9CC59A07C092824139A718B9680F19850E2E3AD661CBC
A20CA7882F88D8210DE6C1F0ABB08D781F487DFE123D40094D172F4F29103848
B7A110A55B341E1FD95D26F9FF77F8A8043733D6A40741661B6012A2AEE10E47
046A64A77EB31854AE5FCB9603494065269EE3BA64E237859DF9C13B4C285163
FD79CAE47E057B4D0C3A2104BD2E8E4855FE87AD674B6D8C9909571604A2A768
8AC93D924B3D3C3F1F09002110297B15D4671A148119CEF249D35F72E314ABEE
45DB22C0E09FF8B79881FE6820EAA975F1737F14A2E8462D078AA8793C7079C4
31203596BE9CA56FB71D6C2D9054054E23C5D5DB65EB50861606DF0F7D3D498E
B30FBE4BD97D69539C64320401B3298A65B705361B2A4788A175A0908CF632FA
C74FB900762D0E21DF72FDE110FF6704EBE16800E450101D4B682AC0779F6EDE
2A5E21DF7FFC719F37B565CFF23544E456AEFF15422EC210D4205272A9ACBCAD
F816DA7CF8FF17FBD0A73391F305EDAA090F0E209BC60809B14C8A7A40431B2E
788642F9A55B30F6D8BC888540BB14F30F08224DA9E6E522C552D1A023BD1DB4
9D3E0C518B82314AA2C2A34C07B1EAC8DBA9BAEA7FB2000FC805B5119EC6A811
0BBC79184949E6E3A387B2F4AF929058D78EEE5CC4220F3EAC7064AE4000EB1E
0AF84707418BA9F0993B66CCB0AA4ED4D8CA07CA0394FCBEAAA8F2625FF15335
50F4C6831FDC6FDE523E347B5BF9516D223663C8BECA1CA42515C0DD00D9C7A5
8BCC78D54E721BBDD7DF12C56C7856D4B0ECD45332CE2EACF338DBACF2E0FDD4
6C20AF28775DFE3769F7BF068F02924CD64A48816915A6E62DCE3607E2B0B302
578EF6F64889DEF77746CF563059333B27DFAAF7DDD11B07A752B23734A61206
4240D970563DAB6D3481A92A1538F66897EA0F8BCAA6463F4565785F19CACB68
E63D9E68FF14FDA197E294D68A9165B02E0CF5EDD63496A4C214B143210059B5
DDEE6BE5BABBB07C3C114AA1D350A644ED597DE5E6B306B47492E206B6B19159
E22D8AD0739B1F3E894490798866397C831BCE51BCB1975DB7AF7FABCD7443F7
C1B338B42FB504231ADD0B102D64B0619ABE9C2F9C77DD605AF118FB7AF0F1EF
F4F1FDDA5EB000B303E77F7AED007434FE2752E38505F74DDD0BA8E7B540E584
66E8A6B03950F3DB258EF24F880D60B3444FD72C53888003BA61967C95D53FBE
1EAEAD1A4B8E005DA490C50E343FD037EC601DB6B09ACCE1CD31EFC034FC2AD2
0ACD17E9A31ED471CBF264FB6FB79D050AEE030FEFADE4DE578515328B33E2A0
9904E43C32E3D138D0384D7180D0882690B48342CBA550C5FEDBC92F93448A4D
E6F6BD2D7E4135522EADAC9FFE11A7E22476F346DC3A4411A92FBD201CC323F7
27E1F2FB6CD7200979D99132FD733702294672EB7E02E3B49D66FF291A9DD47D
E5ACECFAE9F3CDAD724492F758F9A0A34DB459A43236F207CF4A3DE59ECC25FB
A488564A4E38D828287E5A61321CF76EB4244FE7CDDA0E1768CC582E9BB35A60
E13EA99312F11DCE2B6E01908075FF57F0AA74BCB8DA953CF383887AC28102FE
8FC13A8C389803377039F113F26301CA825335692DCEB544BDF77610E72C8265
609505E424460E9DD29C7816E302C9902E00F9C78AA6807978B0B8D63AFEEC32
2CFBDBCE5B3C37D40C1C54983A9D6C71F894F0AF0304FB877CD8D2E428C8B94D
3EC98FC76F600D4C06DC69080C3BE59B7B9B1363EC136A3FA109DD661A87E171
5DD5B4BDC7CBB362ED65E73202CA15077FB5236E297BF4C669C12F1978C360A6
CBE7B187D685141AD00BA8A65BC2753B38A3AB006681F25B5D5F6ED1E6B569BD
F181EFC66311752D23F14FE89C3390B864EAC2E49B637812762D37D20E5F6894
BF4A34FCD2A8CAE4D6F1BB1A1BF2233374F2D23D3072C9FA7C22D31BE81407B7
865B757E8A1327634977FD97334C471B44221D671520AB51C816ECC165A06458
AC7236A130C5BA0279A1693397BF388AA966BB675F1DF8A50B68911C20D19E3F
76132F119758A1FC2E29F9FA78CDB32A00026A5C14C5793F147ABA0AA13E4B79
68EE55E4ADF2F7AB43D6810F8BF16C3E5000352A6785791F2177E0AA799E23D7
1CD724A2741A316463E1B39EB349E4FA3D00CFBE267C724CD6B407CF5EC14D6C
5A66EF30FB955E0495F871E2900F75F9BA9C1ADFE2953C9F94E3060C661F6142
D05C40CA2FA46E7CF3B7401D47B090305EE318A53743D2130FD673CB005177BB
B028AC3AB77E4D7FE31471A7F542BF67533FA2ED5B58B09B7A756FE96908BD6E
BF84E4C1AFB1D00D4E9AD5BB16049667ACEE5918BF8300E8B9ED086616297022
0DCEE3D30B873550EA67F1AFDA469CFEB5F7A967DADAAB7083B36A7F254CC76B
E3605C6E9F00D9C4587AC495570D5B7D7B71F9B636753632A98201EEC4F05DC1
14E09FFB0FB34072C29C91DAF3DBFAE639F2551C834E4D0162F2F506E3DB3D67
A26EB254E3DB3F9B1EFAE877E374111D020612DDA594C3F31510B2FA77970C00
54576FC9D03838EC6DA6A33BB28F0B9E47EDCFA072040CD2CC6070FB8358F03C
9A206ECDA902B252880A3365320B1DD7D20FF34205B86399033545C1C6511E6D
0D0B3B4C6E5E1DBFD4B663B1DE90EB47896026D9DC6771ADA96AC2280B1C7350
42E819EBFB7BD67936AC9A7775C05C209A4CDEAE4D754EC97591E6B8B11F7BCD
F3ABFD43DBEB19B848CB4312DC8CF633CD55E0B257232C3B40EAD07963D5C9AC
3F69F7383C409652F6C99B4B9805779C92414E52AE761FEBD6283A988B83C072
507F1D8491C1A9DE26CEF16D9B982071216F41EA8FEEBD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: TeX-feymr10
%!PS-AdobeFont-1.0: TeX-feymr10 001.001
%%Title: TeX-feymr10
%%CreationDate: Sat Jan 5 18:49:54 2002
%%Creator: Thomas Schröder
%%DocumentSuppliedResources: font TeX-feymr10
% converted after April 2001
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /TeX-feymr10 def
/FontBBox [-178 -195 823 877 ]readonly def
/PaintType 0 def
/FontInfo 12 dict dup begin
/version (001.001) readonly def
/Notice (converted after April 2001) readonly def
/FullName (TeX feymr10 Regular) readonly def
/FamilyName (TeX feymr10) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3166449D69AB0542CB99558019EE
97CFE9FA87FAC14B55E860B5663A3D528CD3784FC9647A2EB72CF1AF4E31964A
3073722CB69FA5370CC5D9CDBF105662CA6188C1B3BFA7658F71EA5765A0D152
E60FD5E1DE3B99CE70C03D8CB4F775B5B17CE9573F5046E61444C0DAFD894CFE
E17604820BBE5A8FA11A10565933C0A8320DC5D116C780706E315C54E72426DD
AF1E6786D883AD182ED327CBB03C39C1A2602471C39296B7681215EC4F0E0E0B
264FBAD453DD3B112065828DC04E265255F9FB51F5EEC233C6A752ECA0246E0A
A2BA69049BBF94E6C8F510D29A7735AE4D122DCCA7B22929270D51C3F1E68174
E38AC54D6418690C765264C7897AD12A84B2C5269A6BFBABF05C20A37C94D927
81FD24D7817897529ACEDD9B062949D02FB9B0E1B2D0BF765675BA16EBFC1C7C
DC437BEE4D9FAC437C6B9E5B0C00111499A90E1BD29C52263829FFEF1946619B
1C81623A436D2FBD670D126855C400F38CE0C88122C60EA0D331AA9636B27218
0CC9B0EDE940FFB5EBCF83EDB330F8E83C7166452669E04F2E95A7718ADBDA8F
F99C2DC815F7ED17655111692621430D077DE661F297A8B6A33FECC10B3892A2
4F8E139F3E446CC7D7F5D64E4DBEFDAD72AECAE4D64289A3E2BE0212CF4A91BF
04F60B14E7522795440054CCBC40C49886656B6918198778A498EDBE40AF4536
7F96E77E40A9D65B1D5447D2596B382447AB5549A11BD5B765F9133E1C5C3071
32075009D2AC8147BC53B4C07B14D548E0F914E600CBF320E1639435733D7563
0053CC74AE3E7F5B9741E8CCB3DAFC411B5F846FC583B7771A7088B1C9B9613B
86FBCA1EE9E8263406C1894EE246BE87CDCAD2BA7ACB7030E45B0866062055D9
EBF7F562FAB6190196A7B8AA1B61F407B2BE0F537129E27376C8DDC7C6416358
384B2A676AB3228144586258F2B82A5BD9AE9E5442462DA626088BAB0C29E8A8
0EC75BF6E5E897761B5D095E2A8EDBF2CA742F3BF155B4DF28110FB8B7FB9A6E
9229F9D0B47376BE7AE5CE6A6AD32F50B62023CB32E8E0CBCDE2110AD8251854
5F8934CDC91E522248E019A6DCA06A0C2D005D541C6ADFF72812F474050C709A
5ED08B5F83DA1FD76037AFF77515188E13073B30F9A49A970613659071E0A130
5A4DD21C42ADFC1DF8CEE802CFAB2A75B7460E9F46DAA8CE31D5F287D3163B98
5966C073653074E89114B1B8A097A43E58DC5E49AC1F70F04A922FF9955F9FA7
20A6FCB10A2670BB3F44D959FC897BA487147A0FFDDFD368EB1A41F4CCCB619B
A362730B373EAC754EF5CE2692576DE100E10402670F41FD38F11A1BB43B7F42
B4BD7BB5F4322C4A9D04BBE445358F4B59B1A5C85FAE03B06C950485E5B304E8
BDA4BB926C21E17B3EC2D4DBC9353CFB90DBC6976B566C310DC801A28907CED3
2126B72E26578DF77022D969D09E111BC1C489E88E7B0315E926B0376B085BB5
3CEAF925AEF208D454C49A6B239924FA18001BD1A7D3EA4E7904830A6A948A79
F50CA56EA772D92627A8380A37F3C30845647AB612D5F6B5CB916996A0EE6697
BC62B6266F4314BAAD796EF51EB965F7C30C001F16442E0CB7A6984B78AEFC46
7D6938EFB347E3287600228311BA24326714E77F1932B80334F933C2926274FA
21BAAD0605BBC9A01BDAD6D5ABB885A4E651B8DFAB60487319C1C386CE6A17CF
CE6F1E639526FE52759F1C88A2B52EED4B93C0AEFE101EEEE8C108F389F9D1E3
205904304DCD3F06198594F313F1BFF10CE7F410ABFE3BD5F47CC3D7DB91E197
AE2EFFB9015482D6C79EE33D31EBC91E7797ADADAB7F682F72DFB7B0B0B6AE27
CDA9C0538E1246167FDF86008881E9F917291B498DFD93885C05A1AC6F3A7C11
57128C3D6CA767C80C7AD866074879C24CC063341E85B910ABD13E4BBC7A48B1
53E24D05C43CAC6F3337ED734614EA91EBA620346F23693C7FAA9F488FEEF7DB
E525E547787CCBE1B9824B1CF0B92007A8884194388AE40560BE9D79CD4DE9CB
96359F98E85F2A49F75B7B66C6444DB0ADF62964CF1A47855F8C4688F95EE5A4
50C96A072FB8069A59B20CD2FC703F2F90D3AD1BAA56A93E3D2E2F33C6E2A7AD
258451B1411DD8DBF07CA0246640732F5ABE58B44AC29D9EACBB671334A141D5
FF7CB44C5D629EF4C3E479B76B6A11B47AE63003DE140FB162E88854291E52CD
218D3E70E007E24FEDE321E5814C501169EE40269A4130721A95CB23F48C32AE
DD7B0B4F6320A76DA8A605679B0863982D6B3D4903CD8184B2B829CE9FCBF77D
6CC854455B66AA88CA78910178F748BAD7A4F32521BA7CACB879CFC719BFE2BC
13CF49FDAEE217C53CE31DAB6FDCF81ECAA2E72A2CF15BD84D275BE55251F82D
C8A19F36545C0BDA65AE10E063F5E05A8DB056F7A41D4DB694C98E4246E3B38E
230D155F7ED10F13F00679BCDF5604F46E28FD15B81B55471B8262F8A2F72AF4
E5387E41E401274B350EEFA6C4F03A1E6E4A6B16E528088EA3C7E0299E38DF46
D345559937225879790AF29198B2FDEFE6FC99C66C69959F3FF98F67C07CE90D
F2993F8732E88A77355D4A186BBC8C299C85DB3CFE829BF9F22AA8D3BD63F0D9
CAC57A7CBE25193B289D8A9A614DA9202F69ABA8FFB96F4281592634A7FC4A21
456B69BF77848502657B7B934003418D2BC937720E67D4890E00A199636842D3
DB74B2F004A6E3F3EA6972D62C62E5D4F096AEB2F194E77B656822D9CFF41D2A
7C14F16D7F07E90306AC87B528175244B92D6C10024132A3A1FC2FE78F688904
3568D0BD312C635BF2C024B53B5624F8B17BEEEB424E619CBE804E24E6EE1BE7
3F159A72AB7ACE1C0347278BC542E4525E503DAB0127B4DB6D8538634CC60BB6
7851F14F0753BA3838ABD61E83ECC39C427E62AD4293F672F8E7C2A49B534F60
E877F23EF5EE0E849AEC5F5E12463F6F05D059854D701CE420D546867EE7E6C8
7CD2553F33682A0BF985671C6433700CA8FFB638E7C7BAE78BDFEFAD10DC5846
AFF08F08956041F2912B4D70FD34495C96D3F9B091293B9C738CF5C9563277EC
3C6863C4A69B09E4DDD525D77FD06C322DAE13FCD48A4EA7B1B6C8F0256FC16A
3B47A4BF0DA1C49EF53974B4BF01C9BF194CE7EEC2C3AFA9E4CECD8C4029CC6F
377E4269806EB0FB78AA812F1513C2CEFB8F50CD18615EBAC10976BD12CBC1CE
8CCAD0333D455C3ED1518FD7F80539AE63A5045D34B982ABB471ED8EB18B50D3
1A150C82182B6C31CC9B161A87361A6D96B63CF0D97A286090DA8CB72991B175
EF3D690C64D9CB5EDDFF5B00B7C179825A1794CA054B6F7A8CAF03DFD7E62F10
CE5BB34BB02E50AA4DD4FD704F147DE3DCEBD3B1DEBAF3483E01CA3076EB19A5
FA2A8815CD360568A9A05176CF4111CB27C54BC8B4B991853982BB7307283D8B
93E5A2D6DF853B6E17BEF7C06A182456EB73D4A1B77FD58A853B07B04ACE12EE
D04046A4E977A39963B144EAB63C7D27F2EE65F677B9892C999BC81B3BBDA70B
E7FFF8E673275F9B84D39E641BA990B9AD160BB73CC391B6C36A7C1D68438243
1606D2298D58EA3879D2CAE2D285011E229372F7FA98F55556F0C4007621168A
A3C1F9A9DE81DA70AB287ABC70C4BAE94321D94FAD2DC3754CA39F689C8221E1
6E7E57EA41F552EF612080D82122D5733CC48978F6BC62E40728DCB3134F4536
C33E222D0E79486EBF9A506F92CCE773BBDF3A764B3793E96393DB8EF1FF0FA1
F3801274B7B982FC53258A752D43261486A2A94B321D90C9393EECE5B3CBFAAB
D0BBA6E49ED462B20AFB384AC2D3E290BC8FE7805D5C0B0D37F04586BDC8C812
686C653A47B40A803819C86FB0C8EF10AA1344350972910363FC0E3DB49A5D75
BDBED15C823E1E870E2F0EFB93A856F3A63E28CB7ECBF17E444B271FD92157C5
8727745CE16AA9376735A8B02F2CB426BB91CCC365CEE49AE5C9938B08DB12B1
EEE55B954D3694FA0AEC0836883D86F6EA4E10ACAFB7CE5D16F858F6DFF1246F
B2135837B67DFE58003AF012885480947A19B0F90980366EC245AE6D8D33FD30
E080775680F701952B697FC8FC07A014B78DEC48017E46AD78EF6EE80BF81760
B2ADCBB63D91D25DCFC77F2B8867BC0092BD9DF8EDD0F7DEDF2458F1F938D05D
DD4C3A7D4B3008EE86F787EACD7C687B6BB09D362E814AFBC75209C457A19F37
C9780469DCD173C5E5BB7C88F4A8FF1E664AD95E1F5D005B4F15416A320366E4
41E5CE5C8A53B64D290AC210490EF404D08C7C93531FF8CFB841AFF5A0E5A8DE
1E25EB0D03018A76C701E737D941569CE252FF92E3C0A05798F47B75B501B03C
D92B56739CF0D76A13E06283CB4F55177E3D6B28C265954DE0EC80A4CDFD91AC
A2FEE87917A4C63BCBDB24928F99D4836A62D3793411FFAA4CC7B12C934350E8
0C241E5C83E1BF8BCE56FFB67F9C7970CD00D64E7CF92F0A9CB5E672852960AE
8959AE74D4DE18D69B095F9F83C2D98F5D6D14B13E76E4686B85A3B606479B6D
F3B52D950EBCFE01639F6B0D9C205C947D60F2F0540D0E8B1B78AF3C5376F94E
D5769B92FC21082A872ADC4BE261FE71F0EA2422B17EF9C0338F63F4D4BA4AC9
D6C76169A46B500885E2CFB8671C053163F186C242F539453A72E3CD4F416A30
6C7A154B28FD021A13A11C78D113E65FAE2A6602D55510502603AD648CA7C698
E61A5B8F3689308EF934594FC5EFFDB86BED8324C690350CB92005EA3EBBB9CF
83EF65EA37BB27D684B89F18AB93968DBB6D0BD835EDDBF6F9425AE707A9E732
7418E39DC60A6EB89299E14D62AEA38D7E1ED70829196DB28D4906BF73574AB4
5DCF1FD068BE2B5B597021EC43C0396D5F172A723556BD8937D6800A6CAA33F6
A061415D49DA0ECE5C1959D9AA8513D8E616BEF8C9411F93E9FBCB6D2637AEDB
B0E719D54E5840E6F71109A5BFB26839255C305080216C0FD2477BA7613C8198
8EB16ECFFBB6D745422204786A17705DABE8FC123005E476FECEBE1C3E240E66
9EC0C64922C42D88A87D2D9766DB3E6273110B2F9281D80F004D184E9484EF54
222058917A0DFF5AEDC9213979C8716488573FC308948F839BFADCA37353F9F9
C7FC6FF049F4DD9DBD476228E880E779C7122C3823385F85F86DA752C3E01A8F
8A103A854A8545E4109BE8AD304A60B54F124EF2A6AD3E5E7EBA6AE533E22954
261017699960A1E27D714C2E2D370FB1449ED84B4169EC1057AC8AE70B3962A8
2A16D2F5EC8818734A52C2211FFFB785AC27000B218464AAD820DCAAB31DBD3C
2F0ABE99FB90E8A188E9E95E3320B650E814FA72E425FC6D0B5E245330843CC3
DB6AB767C90E8EDD41E12FA1973E681A7180A3917CACA630FB0BB7A62FAAF292
EE1F836E10730B4797B72E335F6C291A3BFD7F71EE335C3A6233735DB2A379D7
4D1CC655A657023C0B72C819D778F70D9654BDF7C3DD44B733468029F6DBC37E
1D00A80D8D9E7DB37593FE4C2AF5E00949062085BDB51E9448A41DB88FC7401F
725593E1E2281E1F880F829778EEE4197E71F8E59420EAE7964C98BDA67D7224
51A7781696EE91A0E6138EEA37EEA66A29A778841BAED8A196FA2C9DC4DE9BD6
4915CDF114F441422F0FE6F6DFC899C05D171FC0E370C9D27025B9407AFBA04C
19CBF35CBA1E6328BEB3DC8BF3F27EADDDB063543BBE32195A9AB39C791A053B
9D6B918B1E101C98DA8A4EB26FB47BCACE2863C768381DF68C4C8033BB3BBEF5
E93514207A5AA561F78B3F9C70C691B40F4ED7449650276BAF866B77FC16D797
B91398B1797FC8A8CB148D5C234F59A7E4E6F661431598B68DBA780DC8B34A19
AF4EA912CB694B86D5C7672E57EC16F21F87944F7585ACC0847A31E2777D0068
69A9C658B4729A5A2DB08E093EDFF069067F02F93C4495F9F171AB52A1A5BF64
C71D97FA60A71E3E705E51531028D02B1AD3E8E032AC8E599DE4DA19227401AC
F79915BC3230D5D90FA77C29DB133FB7B4ED7B0D7BDD3B018BAB38126626BE19
57BA72362A12E23AB2C4F2C20CE67ADBB39FCC59111A7A0A61ABB82CE1711D0C
193F0D086B49494669F901CA6013B32E0160B72239DB3C2E229535BEF14DD08C
A8E603EF0B6A5D6FD9CE8EB6DEA304E959E394802B82E7C4BC31E75E1CF077A0
6F520EC408B4237E2C5D41DB0B4395D891BCFD008BDE2F5936C9B7D3D7F7F9D9
06FD7B552B784F7814AE16D8351899FC23B6772BB69B5BFB57D118FFFF07511E
8C6E994823E198A79376EF3E24C11B6FA1F6DEA71942741038EB332490625EED
2F92A7EAA26C64B36C180E45C35457FEEF8039855872511C30AE0BD536024FEF
2E0F40D53EB1845EF5EA9E10FD5C63E01D074E58590F0C8112BC26F1969F9C24
6A4027E715AA573228315FBE916274AE6D17F25A21DD9629263D6D83E1C5E6F0
D0A42464C558BDB4FDBF9201F57C808EDE384E12A8235EC30E90CCA8AA3C36CC
C09C6A6D74F9A30B50CF7D4ADDBFC902F6A006AACD90582B29ABAC673E1C6D67
3A70B27EEDD61AD0C422B387CE691F8ED807C137C5841779A540211331282F9C
2997E5A81A6BE710AEC12B347D9238B584F24C63DD4A34D620644424F315D15C
C710ED000B0D28DDB19A4D99AC1E0E5589B7A6F7B2C86F2F7FA4CB217F201436
991656F10224C5AA8341E6658ACFBCD76E73AFAB6E5B0FC14CB8AA60A1E845E7
5AAE0C73DD9F872EE3D28075C27156BB8D803A64E4126866360A54D16EFA11DB
13E7E52C0693982399545875D6ACAEA88BA0A3474783CCEF9A4B65EE64958091
8951AC0C438C2B0413761A253A43579B0B640FDD1497DE8C21A0856E475510E5
142E3842906AA80914CDE9402E4B37D2A6E53BD127D2D3AD5149AEB5ECD8CE0F
A7609D35FB71A5E542B436D5C7D71A4CB29EE71D11E0C2769C4FE6E728D24E56
A0169D3676D3B731B35E37C70B8015A53A9C15AF4F78D0FBDCE03FDD2C3D52C7
5D852346EA02BAE2FD29487245DE75FBAB597E741336005E4A549429A51271D6
5CBCFF634640DB0D056DD5EC6D5A7DB00E37F666CA703105ECCDBC670A47CDB7
48FE6D422825339A8CA5AAB0B1235F8D8BD2F5D6A3515FEFD32540521E20DA01
A0141AA1F8B223BC02156AE4E096FED912A6C33DF4E150052091700123102EAC
E6AE38599BA0A0CB94E1099475C28A540D3EBC4EEB382E906F6B4A1CE6940F16
77D474945B0DFDB54731F85B138577CCA34AD3BF8B7677378DCCF3999EEC8E5B
5BE10FE19D636B006E7D7290A3DDAE1DCFD312C2726B08676AC7B03A9E5BF580
BBD88C779EF23B655F9BBBC31F4D54BCD94E4D1FB85ED55AC4475DE0DF309494
49CF2BC0A9C60D7DE24DA0C0AB8F50953F4DCE4B2FF8E60DFF1EA75F4BAD4B11
3C735758AE622B81CEB5A8F845B2547C6A43812D4ECF9C9E042425176A20004C
2C4A815A38E237DA4ACD903D32B7F9844B2E42AA7F5A5008C4CFBB51F2A20C24
C4EA6D69F6CC5E79CC490EBDB8A9D4AF6103A6CE3906449DCD35B922EFBDE023
3D5ADD67F4F5BCF49D61F67FB313A8E2F92D29A0B15C6792D299B9510A5DFA30
56DF9000191FA35C2999FDD7132B3EB5E95020B032C8EE2BB4543DAAEA0DEC97
3133A99719D7ADBB2678384749B7E1ED994548266CF51E5DA1E7D78283F24197
0EB74E258585FACA9CC47BAFA7AE9E116FC4A042404FDEFC6D20C8510CDE6796
BF13356BC9A3EDF5DF353F6CB8D21EDF5EB9B50AD6BE2804F23B1727C373DC13
E4B7B7F5F1A0333C4BA7842F4E9F3D067DA11B64EC3D1EA2AFD82DAF0087AD2E
0876AFC12C5777A2743F938C01847747CC7525DE041402CBAA4C45F273A75DE8
528FD3BC80427F9E3AA1EAB57E9E2F625484D388DBA06AA511B556E660B7C58C
232E6191D34214218E9C35838F7532579EF7430063A099A176DA59B024B2CE56
FAD58E3E9AB280F49EFE8B13EB67D91B6BF3BBA8BD16CB5EE0B3FB9BEF37503A
F4114D06702D250FD78E921D8ABD0BA3647C711CB3FF3CB1EAB2DD7137A9CA46
4E545382727CD0F1D75102D7BEB5737B3D3009136C2DD9950F1DEC8859F21328
330224F695949BFE58241CABC4D378ED409FBA824D76C2EB94A55575E0B44B99
5F05EC9CCDC503CEA55FA4032192CEB9D7160B024084A468FCE4AB2F876A1B22
2FCE1702E00029F29A50C636A6C59226685F2B7F885CE26FF2D2836BD9C03367
13420C1A8BCFCB324EA9D26744B77B4BD9099611FC2209A53321B737E518950C
751B2F929CFD04EC824A2439E9BE1C56A3A02420C2B86C24BB936C7752DFE88B
A682B788BF0113BC92352E873AFFFC279F2F3ED949F3ECEED537F134E3C8A2C0
13BE80DE36288A86E93DB390E241AC83B926EAE86FFDF45E037CC3794DDFF403
DC64962FAF85B9714D399C221E36A633C0BB26EE127EDE93B54A6C34C1B1F322
7503847E9CA4622FF6CEB1E9828DABB65D66D658349E0404BD3E7871E3952C91
81DA87EC0F40B008BBE4253D7E8E7EF16C916674FCC41131B68BA2A9FDB59917
8206CB366282C90FC91B59C8A0FBBB26408CD0110EA1587A07E4FB09130E5B0B
852C429A88461C2C51F924B919B8C4F98BA8BF058EACE6ED42C208AAC866A1CC
DB9FBF4227F1CCD9FFAF49713AE4B85EC34FFD123CC49EA507D36DD69F0072CF
B01CCFDD0BDEB72A427A0485F0FEC84B315C854A341951CD338D8B4E7A77E3B7
41ADBA8C621DE2AEB91E65A0D3E1BDEBD508A0CB08F4C4E57D8481592C817520
4B6BCB5196CBA074
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /Box put
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890B0BBF10075D53739F7E84CEE95B40C3DB68D5
6E9847E37B7920412068C3DE2065A77281345980956AFAD312499818890B454F
5DD8C92695818BA4DAFEBCDD4D268763515CE077A64C5F3AB384A6DFD7DD9641
FCDA0A3344B3A14F82D478B4BE7BFC2822A4D67AD3FD07B11589B93842066528
1E51D954D7E6019F6921DB9B00ED303B4B8F557EAC7A0B0340A268B0DDB25B3E
BE0982129B0D3416CA5D07ADC689CAA181270B8141F9D0F60C60F156CB305E5B
E71D9A5D5FB3216BFB66284FCABF6D74564D1288EA99D3FCF6F29C3AA690A596
02C0AD2BB29A2D457C66031E5571A1454758212EB4D053F4C28FF629FA94DBF2
9677AC4B92C4DF5C7FFDE31A8F2D6F9477896C11CBA890DD464C9231B1C350E8
E8CEE17F2E0F5D10416F7D7FBC6085E9BE09E692951EA7B93A9F49CD458476E0
A380E1D122F275093ECFD398FCA6D714187CC12A2B16318F9E1D2B0E9EC134A2
C4D2674AA68D2E7EDBCCA383
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrschein)
@start /Fa 145[547 110[{ enclmmathit ReEncodeFont }1
774.872 /LMMathItalic7-Regular rf /Fb 167[922 88[{}1
1106.96 /MSAM10 rf /Fc 143[922 70[1107 15[861 861 2[861
19[307 861{ enclmmathsy ReEncodeFont }7 1106.96 /LMMathSymbols10-Regular
rf /Fd 194[861 3[553 553 553 553 553 553 553 553 553
553 6[430 430 2[922 28[799 8[{ enclmrm ReEncodeFont }15
1106.96 /LMRoman10-Regular rf /Fe 133[515 1[633 12[576
18[917 7[711 17[861 2[307 31[633 4[667 22[{ enclmmathit ReEncodeFont }9
1106.96 /LMMathItalic10-Regular rf /Ff 241[1148 14[{
 enclmmathsy ReEncodeFont }1 2295.84 /LMMathSymbols10-Regular
rf /Fg 185[1255 70[{}1 1328.35 /MSAM10 rf /Fh 177[959
78[{}1 1328.35 /MSBM10 rf /Fi 27[664 105[531 2[863 1[697
432 531 548 1[664 664 731 1063 332 2[399 664 598 1[598
1[598 1[664 19[1165 815 4[1005 2[981 2[965 65[{ enclmec ReEncodeFont }
23 1328.35 /LMRoman12-Italic rf /Fj 140[1107 1[1107 47[969
969 10[738 738 738 738 969 969 30[661 661 16[{
 enclmmathex ReEncodeFont }12 1106.96 /LMMathExtension10-Regular
rf /Fk 198[1263 1263 2[1263 2[1263 1263 1263 48[{ enclmrm ReEncodeFont }
6 2754.12 /LMRoman17-Regular rf /Fl 254[337 1[{
 enclmmathsy ReEncodeFont }1 1212.12 /LMMathSymbols10-Regular
rf /Fm 194[943 3[606 606 2[606 4[606 4[943 43[{ enclmrm ReEncodeFont }6
1212.12 /LMRoman10-Regular rf /Fn 143[610 52[337 59[{
 enclmmathit ReEncodeFont }2 1212.12 /LMMathItalic10-Regular
rf /Fo 139[975 990 975 2[1263 2[688 1335 1[688 1407 1[759
1119 1407 2[1263 12[1839 1407 5[2341 5[2000 3[1839 1802
1909 7[1263 1263 2[1263 2[1263 1[1263 1[688 1[688 44[{
 enclmec ReEncodeFont }26 2754.12 /LMRoman17-Regular
rf /Fp 242[1594 13[{ enclmmathsy ReEncodeFont }1 1594.02
/LMMathSymbols10-Regular rf /Fq 139[422 428 448 3[603
904 301 2[301 603 542 1[497 3[527 22[559 407 7[817 23[422
422 40[{ enclmec ReEncodeFont }16 885.568 /LMRoman8-Bold
rf /Fr 134[465 530 4[435 2[474 1[571 2[490 1[320 1[448
452 436 11[545 774 28[261 261 18[613 39[{ enclmmathit ReEncodeFont }15
885.568 /LMMathItalic8-Regular rf /Fs 196[252 59[{
 enclmmathit ReEncodeFont }1 664.176 /LMMathItalic6-Regular
rf /Ft 198[406 406 406 406 406 406 1[406 406 406 10[664
37[{ enclmrm ReEncodeFont }10 664.176 /LMRoman6-Regular
rf /Fu 136[632 437 510 316 389 2[486 2[777 243 437 1[291
486 437 1[437 1[437 437 486 15[729 22[291 10[486 291
46[{ enclmec ReEncodeFont }20 885.568 /LMRoman8-Italic
rf /Fv 3[830 134[830 581 1[610 3[830 1[415 2[415 830
747 457 682 830 1[830 726 10[1128 11[772 3[939 12[747
747 5[747 1[747 48[{ enclmec ReEncodeFont }21 1328.35
/LMRoman12-Bold rf /Fw 143[1107 8[664 664 51[886 8[1328
7[1328 7[1033 3[1033 1033 4[664 7[1033 1033 4[369 1033{
 enclmmathsy ReEncodeFont }14 1328.35 /LMMathSymbols10-Regular
rf /Fx 133[604 634 739 1[629 1[470 613 586 1[653 1[776
1138 1[676 1[444 749 623 641 603 676 560 553 683 6[890
755 1079 1228 758 1[762 800 1[1030 838 2[1258 1[1107
1[574 1[1026 1[963 1080 1[988 975 2[1012 1[1012 361 361
18[852 11[739 671 3[783 8[675 13[{ enclmmathit ReEncodeFont }46
1328.35 /LMMathItalic12-Regular rf /Fy 254[261 732{
 enclmmathsy ReEncodeFont }2 885.568 /LMMathSymbols8-Regular
rf /Fz 3[449 37[621 91[363 1[427 578 427 449 320 324
320 427 449 406 449 664 234 427 1[234 449 406 255 363
449 363 449 406 1[595 4[492 2[811 595 595 578 449 587
621 3[724 1[617 415 294 595 2[544 608 2[595 5[234 234
406 1[406 406 406 406 406 406 406 406 406 234 277 234
2[320 320 40[{ enclmec ReEncodeFont }60 664.176 /LMRoman6-Regular
rf /FA 3[523 5[470 17[470 7[705 5[732 91[418 2[680 497
523 366 371 367 497 523 470 523 784 261 497 288 261 523
470 288 418 523 418 523 470 3[261 1[261 2[705 966 705
705 680 523 1[732 640 732 705 862 1[731 483 339 705 738
614 640 718 1[666 705 3[732 2[261 470 470 470 470 470
470 470 470 470 470 470 261 314 261 732 1[366 366 2[784
37[{ enclmec ReEncodeFont }72 885.568 /LMRoman8-Regular
rf /FB 160[361 1[361 1[361 29[1012 1[361 361 650 650
650 650 650 650 650 650 650 650 4[1012 1[506 506 2[1084
28[939 5[1012 1084 1[{ enclmrm ReEncodeFont }23 1328.35
/LMRoman12-Regular rf /FC 154[966 101[{}1 1328.35 /TeX-feymr10
rf /FD 27[553 7[830 97[492 2[799 584 615 430 437 434
2[553 615 922 307 584 338 307 615 553 1[492 615 492 615
553 9[1138 830 2[615 7[861 569 2[869 4[784 830 7[553
553 553 553 553 553 553 553 553 553 1[307 369 307 2[430
430 307 5[307 33[{ enclmec ReEncodeFont }48 1106.96 /LMRoman10-Regular
rf /FE 160[909 45[606 606 606 47[{ enclmec ReEncodeFont }4
1212.12 /LMRoman10-Regular rf /FF 203[993 1[993 50[{}2
1328.35 /wasy10 rf /FG 198[470 470 470 470 470 470 470
470 470 470 4[732 1[366 366 2[784 37[{ enclmrm ReEncodeFont }14
885.568 /LMRoman8-Regular rf /FH 650 2[723 5[650 17[650
7[975 5[1012 17[975 73[578 686 686 939 686 723 506 513
506 686 723 650 723 1084 361 686 397 361 723 650 397
578 723 578 723 650 3[361 1[361 795 1[975 1336 975 975
939 723 957 1012 885 1012 975 1192 813 1011 668 469 975
1021 849 885 993 939 921 975 1[614 1[1012 1012 361 361
650 650 650 650 650 650 650 650 650 650 650 361 434 361
2[506 506 2[1084 3[361 2[1084 723 723 759 5[650 2[613
1[613 16[{ enclmec ReEncodeFont }90 1328.35 /LMRoman12-Regular
rf /FI 1098 2[1196 23[1046 7[1654 5[1616 91[956 1136
1136 1554 1136 1196 837 849 879 1[1196 1076 1196 1793
598 1136 658 598 1196 1076 658 982 1196 956 1196 1046
6[1315 2[2223 1625 1654 1497 1196 1605 1[1470 1616 1682
2041 1293 1685 1111 801 1682 1691 1353 1412 1649 1554
1530 1625 7[1076 1076 1076 1076 1076 1076 1076 1076 1076
1076 1076 598 717 14[1793 1[1196 28[{ enclmec ReEncodeFont }68
1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x FI(WS)717
b(1.1)g(-)g(1)h(Studiendauer)c(-)j(MC)h(-)g(BIFIE)p 0
TeXcolorgray -741 4800 a FH(1.)p 0 TeXcolorgray 651 w(Das)483
b(nac)-36 b(hstehende)481 b(Kastensc)-36 b(haubild)482
b(\(Bo)-36 b(xplot\))483 b(zeigt)h(die)e(Studiendauer)f(in)h(Semes-)921
6792 y(tern)433 b(f\374r)g(eine)h(tec)-36 b(hnisc)g(he)432
b(Studienric)-36 b(h)g(tung.)921 20580 y
 currentpoint currentpoint translate 1.43535 1.43535 scale neg exch
neg exch translate
 921 20580 a
1355 20580 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 279.1578 a add def
/d 0.0 a add neg def /h 70.06035 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1355 20580 a -33840 17623 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 597.09863
 0 317.94083  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 317.94083  597.09863  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -26.71829  def /maxTickline
43.34206  def /dT 3729358 abs 65536 div viceversa { neg } if def /DT
2. abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 597.09863 0.0 317.94083 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
-34075 18968 a FG(0)5829 b(2)g(4)g(6)g(8)5594 b(10)5360
b(12)f(14)g(16)g(18)g(20)-63696 b(0)5829 b(2)g(4)g(6)g(8)5594
b(10)-33840 17623 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray   0. true 398.33841 8.5359
483.69664 31.29819 0 Frame  gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 341.43292 31.29819 341.43292
8.5359   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 569.05487 31.29819 569.05487
8.5359   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 426.79115 31.29819 426.79115
8.5359   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 398.33841 19.91682 341.43292
19.91682   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 569.05487 19.91682 483.69664
19.91682   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 32256 20580 a
currentpoint initclip moveto
 32256 20580 a
921 20580 a
 currentpoint currentpoint translate 1 1.43535 div 1 1.43535 div scale
neg exch neg exch translate
 921 20580 a 855 25117 a FH(W)-108 b(elc)-36
b(he)616 b(A)-36 b(ussagen)616 b(kannst)h(du)e(diesem)i(Kastensc)-36
b(haubild)615 b(en)-36 b(tnehmen?)616 b(Kreuze)g(die)921
27109 y(zutre\033ende\(n\))431 b(A)-36 b(ussage\(n\))433
b(an.)p 1062 29810 44260 45 v 1062 32873 45 3064 v 1770
31670 a(Die)i(Spann)-36 b(w)g(eite)432 b(b)36 b(etr\344gt)434
b(12)g(Semester.)p 42912 32873 V 45277 32873 V 1062 32917
44260 45 v 1062 36061 45 3145 v 1770 34858 a(25\045)h(der)e
(Studierenden)e(studieren)i(h\366)36 b(c)-36 b(hstens)432
b(14)j(Semester)d(lang.)p 42912 36061 V 1 0 0 TeXcolorrgb
43621 34821 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 36061 V 1062 36106 44260 45 v 1062
41081 45 4976 v 1903 37621 a FG(1)p 1903 37834 471 45
v 1903 38602 a(4)2846 38144 y FH(der)339 b(Studierenden)e(b)36
b(en\366tigt)340 b(f\374r)f(den)g(Absc)-36 b(hluss)339
b(des)g(Studiums)f(mindestens)1770 40136 y(17)435 b(Semester.)p
42912 41081 45 4976 v 1 0 0 TeXcolorrgb 43621 38926 a
FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45277 41081 V 1062 41125 44260 45 v 1062 46003 45 4878
v 1770 43067 a FH(Mindestens)386 b(50\045)g(der)g(Studierenden)d(b)36
b(en\366tigen)386 b(f\374r)g(den)f(Absc)-36 b(hluss)386
b(des)f(Stu-)1770 45058 y(diums)434 b(zwisc)-36 b(hen)433
b(15)h(und)f(17)h(Semestern.)p 42912 46003 V 45277 46003
V 1062 46048 44260 45 v 1062 49111 45 3064 v 1770 47908
a(Es)g(gibt)g(Studierende,)e(die)h(ihr)h(Studium)e(erst)h(nac)-36
b(h)433 b(10)h(Jahren)f(b)36 b(eenden.)p 42912 49111
V 1 0 0 TeXcolorrgb 43621 47911 a FF(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 49111 V 1062 49155
44260 45 v 47992 4800 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 6792 a FD(WS)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 53183 54804 45 v 0 TeXcolorgray
24746 81281 a FH(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a FI(WS)717 b(1.1)g(-)g(2)h(T)-179
b(agesums\344tze)716 b(-)i(O)-60 b(A)717 b(-)h(BIFIE)p
0 TeXcolorgray -741 4800 a FH(2.)p 0 TeXcolorgray 651
w(Die)479 b(T)-108 b(agesums\344tze)480 b(\(in)e FC(e)p
FH(\))g(eines)h(Restauran)-36 b(ts)478 b(f\374r)g(eine)h(b)36
b(estimm)-36 b(te)478 b(W)-108 b(o)36 b(c)-36 b(he)479
b(sind)f(im)921 6792 y(folgenden)434 b(Diagramm)h(angegeb)36
b(en:)8775 24836 y

 8775 24836 a 8775 24836 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs


 8775 24836
a


 pgfr

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 [1.0 0.0 0.0 1.0 -70.68663 -17.65697 ] concat

 pgfs


 16629 21452 a

 16629 21452 a 16629 21452 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 save

 save

 0.3985 pgfw
 0.75 TeXcolorgray
 0.19925 pgfw

 /pgfsc{0 setgray}def

 10.08012 -12.80052 moveto

 10.08012 140.79814 lineto

 20.16025 -12.80052 moveto

 20.16025 140.79814 lineto

 30.24037 -12.80052 moveto

 30.24037 140.79814 lineto

 40.32051 -12.80052 moveto

 40.32051 140.79814 lineto

 60.48076 -12.80052 moveto

 60.48076 140.79814 lineto

 70.56088 -12.80052 moveto

 70.56088 140.79814 lineto

 80.64102 -12.80052 moveto

 80.64102 140.79814 lineto

 90.72115 -12.80052 moveto

 90.72115 140.79814 lineto

 110.8814 -12.80052 moveto

 110.8814 140.79814 lineto

 120.96153 -12.80052 moveto

 120.96153 140.79814 lineto

 131.04166 -12.80052 moveto

 131.04166 140.79814 lineto

 141.12178 -12.80052 moveto

 141.12178 140.79814 lineto

 161.28204 -12.80052 moveto

 161.28204 140.79814 lineto

 171.36217 -12.80052 moveto

 171.36217 140.79814 lineto

 181.44229 -12.80052 moveto

 181.44229 140.79814 lineto

 191.52242 -12.80052 moveto

 191.52242 140.79814 lineto

 211.68268 -12.80052 moveto

 211.68268 140.79814 lineto

 221.7628 -12.80052 moveto

 221.7628 140.79814 lineto

 231.84293 -12.80052 moveto

 231.84293 140.79814 lineto

 241.92307 -12.80052 moveto

 241.92307 140.79814 lineto

 262.08331 -12.80052 moveto

 262.08331 140.79814 lineto

 272.16344 -12.80052 moveto

 272.16344 140.79814 lineto

 282.24358 -12.80052 moveto

 282.24358 140.79814 lineto

 292.3237 -12.80052 moveto

 292.3237 140.79814 lineto

 gsave pgfsc pgfstr grestore newpath

0 TeXcolorgray
 restore

 save

 0.3985 pgfw
 0.75 TeXcolorgray
 0.99628 pgfw

 /pgfsc{0 setgray}def

 0.0 -12.80052 moveto

 0.0 140.79814 lineto

 50.40063 -12.80052 moveto

 50.40063 140.79814 lineto

 100.80127 -12.80052 moveto

 100.80127 140.79814 lineto

 151.2019 -12.80052 moveto

 151.2019 140.79814 lineto

 201.60255 -12.80052 moveto

 201.60255 140.79814 lineto

 252.00319 -12.80052 moveto

 252.00319 140.79814 lineto

 302.40382 -12.80052 moveto

 302.40382 140.79814 lineto

 gsave pgfsc pgfstr grestore newpath
 0 TeXcolorgray
 restore

 restore

 save

 save

 0.3985 pgfw
 0.75
TeXcolorgray
 0.00099 pgfw

 /pgfsc{1 setgray}def

 0.0 4.26659 moveto

 302.40382 4.26659 lineto

 0.0 8.53317 moveto

 302.40382 8.53317 lineto

 0.0 12.79976 moveto

 302.40382 12.79976 lineto

 0.0 17.06635 moveto

 302.40382 17.06635 lineto

 0.0 25.59952 moveto

 302.40382 25.59952 lineto

 0.0 29.8661 moveto

 302.40382 29.8661 lineto

 0.0 34.13269 moveto

 302.40382 34.13269 lineto

 0.0 38.39928 moveto

 302.40382 38.39928 lineto

 0.0 46.93245 moveto

 302.40382 46.93245 lineto

 0.0 51.19904 moveto

 302.40382 51.19904 lineto

 0.0 55.46562 moveto

 302.40382 55.46562 lineto

 0.0 59.73221 moveto

 302.40382 59.73221 lineto

 0.0 68.26538 moveto

 302.40382 68.26538 lineto

 0.0 72.53198 moveto

 302.40382 72.53198 lineto

 0.0 76.79857 moveto

 302.40382 76.79857 lineto

 0.0 81.06516 moveto

 302.40382 81.06516 lineto

 0.0 89.59833 moveto

 302.40382 89.59833 lineto

 0.0 93.86491 moveto

 302.40382 93.86491 lineto

 0.0 98.1315 moveto

 302.40382 98.1315 lineto

 0.0 102.39809 moveto

 302.40382 102.39809 lineto

 0.0 110.93126 moveto

 302.40382 110.93126 lineto

 0.0 115.19785 moveto

 302.40382 115.19785 lineto

 0.0 119.46443 moveto

 302.40382 119.46443 lineto

 0.0 123.73102 moveto

 302.40382 123.73102 lineto

 0.0 132.26419 moveto

 302.40382 132.26419 lineto

 0.0 136.53078 moveto

 302.40382 136.53078 lineto

 0.0 140.79738 moveto

 302.40382 140.79738 lineto

 gsave pgfsc pgfstr grestore newpath
 0 TeXcolorgray
 restore

 save

 0.3985 pgfw
 0.75 TeXcolorgray
 0.00099 pgfw

 /pgfsc{1 setgray}def

 0.0 0.0 moveto

 302.40382 0.0 lineto

 0.0 21.33293 moveto

 302.40382 21.33293 lineto

 0.0 42.66586 moveto

 302.40382 42.66586 lineto

 0.0 63.9988 moveto

 302.40382 63.9988 lineto

 0.0 85.33174 moveto

 302.40382 85.33174 lineto

 0.0 106.66467 moveto

 302.40382 106.66467 lineto

 0.0 127.9976 moveto

 302.40382 127.9976 lineto

 gsave pgfsc pgfstr grestore newpath
 0 TeXcolorgray
 restore

 restore

 save

 save

 0.19925 pgfw

0.5 TeXcolorgray
 10.08012 -14.21794 moveto

 10.08012 -11.3831 lineto

 20.16025 -14.21794 moveto

 20.16025 -11.3831 lineto

 30.24037 -14.21794 moveto

 30.24037 -11.3831 lineto

 40.32051 -14.21794 moveto

 40.32051 -11.3831 lineto

 60.48076 -14.21794 moveto

 60.48076 -11.3831 lineto

 70.56088 -14.21794 moveto

 70.56088 -11.3831 lineto

 80.64102 -14.21794 moveto

 80.64102 -11.3831 lineto

 90.72115 -14.21794 moveto

 90.72115 -11.3831 lineto

 110.8814 -14.21794 moveto

 110.8814 -11.3831 lineto

 120.96153 -14.21794 moveto

 120.96153 -11.3831 lineto

 131.04166 -14.21794 moveto

 131.04166 -11.3831 lineto

 141.12178 -14.21794 moveto

 141.12178 -11.3831 lineto

 161.28204 -14.21794 moveto

 161.28204 -11.3831 lineto

 171.36217 -14.21794 moveto

 171.36217 -11.3831 lineto

 181.44229 -14.21794 moveto

 181.44229 -11.3831 lineto

 191.52242 -14.21794 moveto

 191.52242 -11.3831 lineto

 211.68268 -14.21794 moveto

 211.68268 -11.3831 lineto

 221.7628 -14.21794 moveto

 221.7628 -11.3831 lineto

 231.84293 -14.21794 moveto

 231.84293 -11.3831 lineto

 241.92307 -14.21794 moveto

 241.92307 -11.3831 lineto

 262.08331 -14.21794 moveto

 262.08331 -11.3831 lineto

 272.16344 -14.21794 moveto

 272.16344 -11.3831 lineto

 282.24358 -14.21794 moveto

 282.24358 -11.3831 lineto

 292.3237 -14.21794 moveto

 292.3237 -11.3831 lineto

 pgfstr
 0 TeXcolorgray
 restore

 save

 0.19925 pgfw
 0.5 TeXcolorgray
 0.0 -14.92645 moveto

 0.0 -10.67459 lineto

 50.40063 -14.92645 moveto

 50.40063 -10.67459 lineto

 100.80127 -14.92645 moveto

 100.80127 -10.67459 lineto

 151.2019 -14.92645 moveto

 151.2019 -10.67459 lineto

 201.60255 -14.92645 moveto

 201.60255 -10.67459 lineto

 252.00319 -14.92645 moveto

 252.00319 -10.67459 lineto

 302.40382 -14.92645 moveto

 302.40382 -10.67459 lineto

 pgfstr
 0 TeXcolorgray
 restore

 restore

 save

 save

 0.19925 pgfw

0.5 TeXcolorgray
 -2.83513 4.26659 moveto

 0.0 4.26659 lineto

 -2.83513 8.53317 moveto

 0.0 8.53317 lineto

 -2.83513 12.79976 moveto

 0.0 12.79976 lineto

 -2.83513 17.06635 moveto

 0.0 17.06635 lineto

 -2.83513 25.59952 moveto

 0.0 25.59952 lineto

 -2.83513 29.8661 moveto

 0.0 29.8661 lineto

 -2.83513 34.13269 moveto

 0.0 34.13269 lineto

 -2.83513 38.39928 moveto

 0.0 38.39928 lineto

 -2.83513 46.93245 moveto

 0.0 46.93245 lineto

 -2.83513 51.19904 moveto

 0.0 51.19904 lineto

 -2.83513 55.46562 moveto

 0.0 55.46562 lineto

 -2.83513 59.73221 moveto

 0.0 59.73221 lineto

 -2.83513 68.26538 moveto

 0.0 68.26538 lineto

 -2.83513 72.53198 moveto

 0.0 72.53198 lineto

 -2.83513 76.79857 moveto

 0.0 76.79857 lineto

 -2.83513 81.06516 moveto

 0.0 81.06516 lineto

 -2.83513 89.59833 moveto

 0.0 89.59833 lineto

 -2.83513 93.86491 moveto

 0.0 93.86491 lineto

 -2.83513 98.1315 moveto

 0.0 98.1315 lineto

 -2.83513 102.39809 moveto

 0.0 102.39809 lineto

 -2.83513 110.93126 moveto

 0.0 110.93126 lineto

 -2.83513 115.19785 moveto

 0.0 115.19785 lineto

 -2.83513 119.46443 moveto

 0.0 119.46443 lineto

 -2.83513 123.73102 moveto

 0.0 123.73102 lineto

 -2.83513 132.26419 moveto

 0.0 132.26419 lineto

 -2.83513 136.53078 moveto

 0.0 136.53078 lineto

 -2.83513 140.79738 moveto

 0.0 140.79738 lineto

 pgfstr
 0 TeXcolorgray
 restore

 save

 0.19925 pgfw
 0.5 TeXcolorgray
 -4.25229 0.0 moveto

 0.0 0.0 lineto

 -4.25229 21.33293 moveto

 0.0 21.33293 lineto

 -4.25229 42.66586 moveto

 0.0 42.66586 lineto

 -4.25229 63.9988 moveto

 0.0 63.9988 lineto

 -4.25229 85.33174 moveto

 0.0 85.33174 lineto

 -4.25229 106.66467 moveto

 0.0 106.66467 lineto

 -4.25229 127.9976 moveto

 0.0 127.9976 lineto

 pgfstr
 0 TeXcolorgray
 restore

 restore

 0.0 -12.80052 moveto

 300.4113 -12.80052 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 300.4113 -12.80052 ] concat

 save 1.99252 0.0 moveto -1.19551 1.59401 lineto 0.0 0.0 lineto -1.19551
-1.59401 lineto pgffill restore

 restore

 0.0 -12.80052 moveto

 0.0 138.80562 lineto

 pgfstr

 save

 [0.0 1.0 -1.0 0.0 0.0 138.80562 ] concat

 save 1.99252 0.0 moveto -1.19551 1.59401 lineto 0.0 0.0 lineto -1.19551
-1.59401 lineto pgffill restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.92654 -26.55591 ] concat

 pgfs



 0 setgray

16629 21452 a FB(0)16629 21452 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 38.69441 -26.55591 ] concat

 pgfs



 0 setgray
 16629 21452 a FB(1000)16629
21452 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 89.09505 -26.55591 ] concat

 pgfs



 0 setgray
 16629 21452 a FB(2000)16629 21452 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 139.49568 -26.55591 ] concat

 pgfs



 0 setgray
 16629 21452
a FB(3000)16629 21452 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 189.89633 -26.55591 ] concat

 pgfs



 0 setgray
 16629 21452 a FB(4000)16629 21452
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 240.29697 -26.55591 ] concat

 pgfs



 0 setgray
 16629 21452 a FB(5000)16629 21452 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 290.6976 -26.55591 ] concat

 pgfs



 0 setgray
 16629 21452 a FB(6000)16629
21452 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -47.37021 -2.95554 ] concat

 pgfs



 0 setgray
 16629 21452 a FH(Mon)-36 b(tag)16629 21452 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -53.12775 18.3774 ] concat

 pgfs



 0 setgray

16629 21452 a FH(Dienstag)16629 21452 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -56.79988 38.54802 ] concat

 pgfs



 0 setgray
 16629 21452 a
FH(Mitt)g(w)g(o)36 b(c)-36 b(h)16629 21452 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -66.78502 61.04326 ] concat

 pgfs



 0 setgray
 16629 21452
a FH(Donnerstag)16629 21452 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -44.28232 82.3762 ] concat

 pgfs



 0 setgray
 16629 21452 a FH(F)-108
b(reitag)16629 21452 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -51.34145 103.70914 ] concat

 pgfs



 0 setgray
 16629 21452 a FH(Samstag)16629
21452 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -49.65065 125.04207 ] concat

 pgfs



 0 setgray
 16629 21452 a FH(Sonn)-36 b(tag)16629 21452 y


 pgfr

 restore

 restore

 0.0 -12.80052 moveto

 302.40382 -12.80052 lineto

 302.40382 140.79814 lineto

 0.0 140.79814 lineto

 closepath

 clip

 newpath

 save

0 0 1 TeXcolorrgb
 /pgffc{0.7 0.7 1 setrgbcolor}def

 9.96277 181.44229 0.0 -4.98138 pgfe

 9.96277 191.52242 0.0 16.35155 pgfe

 9.96277 120.96153 0.0 37.68448 pgfe

 9.96277 131.04166 0.0 59.01741 pgfe

 9.96277 201.60255 0.0 80.35036 pgfe

 9.96277 272.16344 0.0 101.68329 pgfe

 9.96277 241.92307 0.0 123.01622 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath
 0 TeXcolorgray
 restore

 restore

 restore

 newpath

 restore

 pgfc


 8775 24836 a


 pgfr

 restore

 save

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 921 31336
a FH(Berec)g(hne)433 b(den)g(durc)-36 b(hsc)g(hnittlic)g(hen)431
b(T)-108 b(agesumsatz)434 b(f\374r)f(diese)h(W)-108 b(o)36
b(c)-36 b(he.)p 1 0 0 TeXcolorrgb 1054 35087 a FB(4)221
b(800)297 b(+)e(5)221 b(400)296 b(+)f(4)221 b(000)297
b(+)e(2)221 b(400)297 b(+)e(3)221 b(800)297 b(+)e(3)221
b(600)p 1054 35675 24947 45 v 13202 36896 a(7)26502 35985
y(=)369 b(3)221 b(800)921 40522 y FH(Der)434 b(durc)-36
b(hsc)g(hnittlic)g(he)431 b(T)-108 b(agesumsatz)434 b(b)36
b(etr\344gt)434 b FC(e)650 b FH(3.800.)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a FD(WS)369 b(1.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 44256
54804 45 v 0 TeXcolorgray 24746 81281 a FH(2)p 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a FI(WS)717 b(1.1)g(-)g(3)h(Bo)-60
b(xplot)716 b(-)h(MC)h(-)g(BIFIE)p 0 TeXcolorgray -741
4800 a FH(3.)p 0 TeXcolorgray 651 w(Die)437 b(Nettogeh\344lter)g(v)-36
b(on)436 b(44)h(Angestellten)f(einer)h(Firmenabteilung)e(w)-36
b(erden)436 b(durc)-36 b(h)435 b(fol-)921 6792 y(gendes)e(Kastensc)-36
b(haubild)433 b(\(Bo)-36 b(xplot\))434 b(dargestellt:)921
14214 y
 currentpoint currentpoint translate 0.55235 0.55235 scale neg exch
neg exch translate
 921 14214 a 1355 14214 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 658.09819 a add def
/d 0.0 a add neg def /h 105.08359 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1355 14214 a 4345 9691
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 631.08208
 0 -27.01611  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa -27.01611  631.08208  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -40.86174  def /maxTickline
64.22185  def /dT 1864679 abs 65536 div viceversa { neg } if def /DT
1. abs viceversa { neg } if def /subTNo 1 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -4.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 631.08208 0.0 -27.01611 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 4345 9691 a
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 4345 9691 a 4345
9691 a
tx@Dict begin  { 631.08208 64.22185 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 4345 9691 a 4345 9691 a
tx@Dict begin  { 5.0 0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 4345 9691 a 4345 9691
a
tx@Dict begin  PutEnd  end
 4345 9691 a 4345 9691 a
tx@Dict begin  PutEnd  end
 4345 9691 a 4345 9691 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 4345
9691 a 4345 9691 a
tx@Dict begin  { 0.0 0.0 pop 631.08208 64.22185 exch pop } PutCoor
PutBegin  end
 4345 9691 a 4345 9691 a
tx@Dict begin  { 5.0 0.0 0.0 0.0 -40.  Uput UUput } PutCoor PutBegin
 end
 4345 9691
a 4345 9691 a
tx@Dict begin  PutEnd  end
 4345 9691 a 4345 9691 a
tx@Dict begin  PutEnd  end
 4345 9691 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray   0. true 113.81097 8.5359
312.98018 31.29819 0 Frame  gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 28.45274 31.29819 28.45274
8.5359   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 597.50761 31.29819 597.50761
8.5359   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 199.1692 31.29819 199.1692
8.5359   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.81097 19.91682 28.45274
19.91682   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 597.50761 19.91682 312.98018
19.91682   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 4345 9691 a
tx@Dict begin  { -21.8562 -7.11317 } PutCoor PutBegin  end
 4345
9691 a 925 x FC(e)650 b FH(1.000)4345 9691 y
tx@Dict begin  PutEnd  end
 4345 9691
a 4345 9691 a
tx@Dict begin  { 263.68802 -7.11317 } PutCoor PutBegin  end
 4345 9691 a 925 x FC(e)g FH(2.000)4345
9691 y
tx@Dict begin  PutEnd  end
 4345 9691 a 4345 9691 a
tx@Dict begin  { 546.03339 -7.11317 } PutCoor PutBegin  end
 4345 9691 a 925 x FC(e)g
FH(3.000)4345 9691 y
tx@Dict begin  PutEnd  end
 4345 9691 a 74203 14214 a
currentpoint initclip moveto
 74203
14214 a 921 14214 a
 currentpoint currentpoint translate 1 0.55235 div 1 0.55235 div scale
neg exch neg exch translate
 921 14214 a 2545 x FH(Kreuze)433
b(die)h(b)36 b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434
b(an.)p 3699 17726 38985 45 v 3699 20800 45 3074 v 4408
19597 a(22)g(Angestellte)g(v)-36 b(erdienen)433 b(mehr)g(als)h
FC(e)650 b FH(2.400.)p 40275 20800 V 42640 20800 V 3699
20844 38985 45 v 3699 23918 45 3074 v 4408 22715 a(Drei)434
b(Viertel)g(der)f(Angestellten)g(v)-36 b(erdienen)433
b FC(e)651 b FH(2.100)435 b(o)36 b(der)433 b(mehr.)p
40275 23918 V 42640 23918 V 3699 23962 38985 45 v 3699
27036 45 3074 v 4408 25833 a(Ein)g(Viertel)h(aller)h(Angestellten)e(v)
-36 b(erdien)g(t)433 b FC(e)650 b FH(1.400)436 b(o)36
b(der)433 b(w)-36 b(eniger.)p 40275 27036 V 1 0 0 TeXcolorrgb
40983 25831 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 42640 27036 V 3699 27080 38985 45 v 3699
30154 45 3074 v 4408 28951 a FH(Es)433 b(gibt)h(Angestellte,)g(die)g
(mehr)f(als)h FC(e)650 b FH(3.300)435 b(v)-36 b(erdienen.)p
40275 30154 V 42640 30154 V 3699 30199 38985 45 v 3699
35328 45 5129 v 4408 32059 a(Das)434 b(Nettogehalt)g(der)f(H\344lfte)i
(aller)f(Angestellten)g(liegt)g(im)g(Bereic)-36 b(h)4408
34051 y FB([)8 b FC(e)433 b FH(1.400)r FB(;)221 b FC(e)434
b FH(2.100)r FB(])p FH(.)p 40275 35328 V 1 0 0 TeXcolorrgb
40983 33095 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 42640 35328 V 3699 35372 38985 45 v 47992
4800 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 6792 a FD(WS)369
b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 39400 54804 45 v 0 TeXcolorgray 24746 81281 a FH(3)p
0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a FI(WS)717 b(1.1)g(-)g(4)h(Nationalratsw)-60
b(ahl)716 b(-)i(MC)f(-)h(BIFIE)p 0 TeXcolorgray -741
4800 a FH(4.)p 0 TeXcolorgray 651 w(In)728 b(der)g(folgenden)h
(Abbildung)f(sind)g(die)g(Ergebnisse)h(der)e(Nationalratsw)-36
b(ahl)730 b(2006)769 6792 y(\(linksstehende)486 b(Balk)-36
b(en\))487 b(und)e(der)h(Nationalratsw)-36 b(ahl)489
b(2008)f(\(rec)-36 b(h)g(tsstehende)484 b(Balk)-36 b(en\))921
8784 y(dargestellt.)433 b(Alle)h(Prozen)-36 b(ts\344tze)432
b(b)36 b(eziehen)433 b(sic)-36 b(h)432 b(auf)h(die)g(Anzahl)g(der)f
(g\374ltigen)h(abgege-)921 10776 y(b)36 b(enen)433 b(Stimmen,)g(die)g
(2006)i(und)e(2008)i(ungef\344hr)e(gleic)-36 b(h)434
b(w)-36 b(ar.)921 38543 y
 currentpoint currentpoint translate 0.79137 0.79137 scale neg exch
neg exch translate
 921 38543 a 3089 38543 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 493.84802 a add def
/d 0.0 a add neg def /h 286.64555 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 3089
38543 a 7070 34879 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 11 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 457.88138 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.4523
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 1 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 253.5497 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 2845.27435
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 457.88138
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true
and or { /viceversa 0.0  457.88138  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 253.5497  def
/dT 1864679 abs 65536 div viceversa { neg } if def /DT 1. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 253.5497 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 457.88138 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 253.5497
 0 0.0  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false
and or { /viceversa 0.0  253.5497  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 457.88138  def
/dT 1864650 abs 65536 div viceversa { neg } if def /DT 5. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 5.69046  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 5.69046  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 253.5497 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 457.88138 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 5825 35165 a FG(0)5825
32015 y(5)5354 28865 y(10)5354 25716 y(15)5354 22566
y(20)5354 19417 y(25)5354 16267 y(30)5354 13118 y(35)5354
9968 y(40)7070 34879 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  [ 48.36957 0.0 48.36957
200.87326 19.91682 200.87326 19.91682 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.5  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0 0.2  setrgbcolor  [ 76.82231 0.0
76.82231 166.7305 48.36957 166.7305 48.36957 0.0  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 1 0 0.2  setrgbcolor  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 1 0 0.2  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  [ 133.7278 0.0 133.7278
195.1828 105.27505 195.1828 105.27505 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.5  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 162.18054 0.0 162.18054
147.95197 133.7278 147.95197 133.7278 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  [ 219.08603 0.0 219.08603
62.59506 190.63329 62.59506 190.63329 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.5  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.2 0.2 1  setrgbcolor  [ 247.53877 0.0
247.53877 99.58305 219.08603 99.58305 219.08603 0.0  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.2 0.2 1  setrgbcolor  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.2 0.2 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  [ 304.44426 0.0 304.44426
62.59506 275.99152 62.59506 275.99152 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.5  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0 0.8 0  setrgbcolor  [ 332.897 0.0 332.897
59.18074 304.44426 59.18074 304.44426 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0 0.8 0  setrgbcolor  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0 0.8 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  [ 389.80249 0.0 389.80249
23.33092 361.34975 23.33092 361.34975 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.5  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0.6 0.2  setrgbcolor  [ 418.25523 0.0
418.25523 60.8879 389.80249 60.8879 389.80249 0.0  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 1 0.6 0.2  setrgbcolor  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 1 0.6 0.2  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 19.91682 200.87326 19.91682
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 48.36957 200.87326 19.91682
200.87326   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 48.36957 0.0 48.36957 200.87326
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 19.91682 0.0 48.36957 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0 0.2  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 48.36957 166.7305 48.36957
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 1 0 0.2  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0 0.2  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 76.82231 166.7305 48.36957
166.7305   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 1 0 0.2  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0 0.2  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 76.82231 0.0 76.82231
166.7305   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 1 0 0.2  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0 0.2  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 48.36957 0.0 76.82231
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 1 0 0.2  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 105.27505 195.1828 105.27505
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 133.7278 195.1828 105.27505
195.1828   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 133.7278 0.0 133.7278
195.1828   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 105.27505 0.0 133.7278
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 133.7278 147.95197 133.7278 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 162.18054 147.95197 133.7278 147.95197
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 162.18054 0.0 162.18054 147.95197 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 133.7278 0.0 162.18054 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 190.63329 62.59506 190.63329
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 219.08603 62.59506 190.63329
62.59506   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 219.08603 0.0 219.08603
62.59506   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 190.63329 0.0 219.08603
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.2 0.2 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 219.08603 99.58305 219.08603
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.2 0.2 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.2 0.2 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 247.53877 99.58305 219.08603
99.58305   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.2 0.2 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.2 0.2 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 247.53877 0.0 247.53877
99.58305   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.2 0.2 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.2 0.2 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 219.08603 0.0 247.53877
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.2 0.2 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 275.99152 62.59506 275.99152
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 304.44426 62.59506 275.99152
62.59506   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 304.44426 0.0 304.44426
62.59506   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 275.99152 0.0 304.44426
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0 0.8 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 304.44426 59.18074 304.44426
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0 0.8 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0 0.8 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 332.897 59.18074 304.44426
59.18074   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0 0.8 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0 0.8 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 332.897 0.0 332.897 59.18074
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0 0.8 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0 0.8 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 304.44426 0.0 332.897
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0 0.8 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 361.34975 23.33092 361.34975
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 389.80249 23.33092 361.34975
23.33092   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 389.80249 0.0 389.80249
23.33092   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 361.34975 0.0 389.80249
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0.6 0.2  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 389.80249 60.8879 389.80249
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 1 0.6 0.2  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0.6 0.2  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 418.25523 60.8879 389.80249
60.8879   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 1 0.6 0.2  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0.6 0.2  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 418.25523 0.0 418.25523
60.8879   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 1 0.6 0.2  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0.6 0.2  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 389.80249 0.0 418.25523
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 1 0.6 0.2  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 7070 34879 a
tx@Dict begin  { 38.81166 -7.6508 } PutCoor PutBegin  end
 7070
34879 a 1111 x FH(SP\326)7070 34879 y
tx@Dict begin  PutEnd  end
 7070 34879 a 7070
34879 a
tx@Dict begin  { 123.97583 -8.17014 } PutCoor PutBegin  end
 7070 34879 a 1111 x FH(\326)g(VP)7070 34879 y
tx@Dict begin  PutEnd  end

7070 34879 a 7070 34879 a
tx@Dict begin  { 210.17848 -8.68938 } PutCoor PutBegin  end
 7070 34879 a 1111 x FH(FP\326)7070
34879 y
tx@Dict begin  PutEnd  end
 7070 34879 a 7070 34879 a
tx@Dict begin  { 295.34265 -8.68938 } PutCoor PutBegin  end
 7070 34879 a 1111 x
FH(GR)g(\334NE)7070 34879 y
tx@Dict begin  PutEnd  end
 7070 34879 a 7070 34879 a
tx@Dict begin  { 383.10349 -8.68938 } PutCoor PutBegin  end

7070 34879 a 1111 x FH(BZ\326)7070 34879 y
tx@Dict begin  PutEnd  end
 7070 34879
a 7070 34879 a
tx@Dict begin  { 23.2329 215.64183 } PutCoor PutBegin  end
 7070 34879 a 996 x FH(35,3\045)7070 34879
y
tx@Dict begin  PutEnd  end
 7070 34879 a 7070 34879 a
tx@Dict begin  { 51.27493 180.84976 } PutCoor PutBegin  end
 7070 34879 a 996 x FH(29,3\045)7070
34879 y
tx@Dict begin  PutEnd  end
 7070 34879 a 7070 34879 a
tx@Dict begin  { 106.83931 209.41042 } PutCoor PutBegin  end
 7070 34879 a 996 x
FH(34,3\045)7070 34879 y
tx@Dict begin  PutEnd  end
 7070 34879 a 7070 34879 a
tx@Dict begin  { 136.95834 161.6362 } PutCoor PutBegin  end
 7070
34879 a 996 x FH(26,0\045)7070 34879 y
tx@Dict begin  PutEnd  end
 7070 34879 a 7070
34879 a
tx@Dict begin  { 186.83226 76.99269 } PutCoor PutBegin  end
 7070 34879 a 996 x FH(11,0\045)7070 34879 y
tx@Dict begin  PutEnd  end
 7070
34879 a 7070 34879 a
tx@Dict begin  { 220.56433 112.82333 } PutCoor PutBegin  end
 7070 34879 a 996 x FH(17,5\045)7070
34879 y
tx@Dict begin  PutEnd  end
 7070 34879 a 7070 34879 a
tx@Dict begin  { 277.68689 76.47337 } PutCoor PutBegin  end
 7070 34879 a 996 x
FH(11,0\045)7070 34879 y
tx@Dict begin  PutEnd  end
 7070 34879 a 7070 34879 a
tx@Dict begin  { 307.28667 73.87698 } PutCoor PutBegin  end
 7070
34879 a 996 x FH(10,4\045)7070 34879 y
tx@Dict begin  PutEnd  end
 7070 34879 a 7070
34879 a
tx@Dict begin  { 362.3318 37.00769 } PutCoor PutBegin  end
 7070 34879 a 996 x FH(4,1\045)7070 34879 y
tx@Dict begin  PutEnd  end
 7070
34879 a 7070 34879 a
tx@Dict begin  { 390.3734 74.39622 } PutCoor PutBegin  end
 7070 34879 a 996 x FH(10,7\045)7070
34879 y
tx@Dict begin  PutEnd  end
 7070 34879 a 7070 34879 a
tx@Dict begin  { 34.13799 8.44704 } PutCoor PutBegin  end
 7070 34879 a 0.5 TeXcolorgray
FG(1)p 0 TeXcolorgray 7070 34879 a
tx@Dict begin  PutEnd  end
 7070 34879 a 57756
38543 a
currentpoint initclip moveto
 57756 38543 a 921 38543 a
 currentpoint currentpoint translate 1 0.79137 div 1 0.79137 div scale
neg exch neg exch translate
 921 38543 a 2545 x
FH(\334b)36 b(erpr\374fe)373 b(anhand)g(der)g(Abbildung)g(die)h
(folgenden)g(A)-36 b(ussagen)374 b(und)e(kreuze)i(die)g(b)36
b(eiden)921 43080 y(zutre\033enden)432 b(A)-36 b(ussagen)433
b(an.)p 1062 44047 44260 45 v 1062 49298 45 5252 v 1770
46103 a(Das)317 b(BZ\326)d(hat)i(seinen)f(Stimmenan)-36
b(teil)315 b(v)-36 b(on)315 b(2006)i(auf)f(2008)g(um)f(mehr)g(als)h
(100\045)1770 48095 y(gesteigert.)p 42912 49298 V 1 0 0
TeXcolorrgb 43621 47004 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45277 49298 V 1062 49342 44260
45 v 1062 52601 45 3260 v 1770 51398 a FH(Die)435 b(GR)-36
b(\334NEN)433 b(erreic)-36 b(h)g(ten)432 b(2006)j(w)-36
b(eniger)434 b(Stimmenan)-36 b(teile)433 b(als)i(2008.)p
42912 52601 V 45277 52601 V 1062 52646 44260 45 v 1062
57897 45 5252 v 1770 54702 a(Der)f(Stimmenan)-36 b(teil)433
b(der)g(\326)-36 b(VP)434 b(hat)f(v)-36 b(on)434 b(2006)h(auf)f(2008)g
(um)g(fast)g(ein)f(Viertel)1770 56694 y(abgenommen.)p
42912 57897 V 1 0 0 TeXcolorrgb 43621 55603 a FF(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
57897 V 1062 57941 44260 45 v 1062 63192 45 5252 v 1770
59997 a FH(Die)i(Anzahl)e(der)g(erreic)-36 b(h)g(ten)433
b(Stimmen)g(f\374r)g(die)h(SP\326)e(hat)i(v)-36 b(on)434
b(2006)g(auf)g(2008)1770 61989 y(um)g(6\045)f(abgenommen.)p
42912 63192 V 45277 63192 V 1062 63237 44260 45 v 1062
68229 45 4993 v 1770 65293 a(Das)406 b(BZ\326)f(hat)g(v)-36
b(on)406 b(2006)g(auf)g(2008)g(deutlic)-36 b(h)405 b(mehr)f(Stimmen)h
(dazugew)-36 b(onnen)1770 67284 y(als)435 b(die)e(FP\326.)p
42912 68229 V 45277 68229 V 1062 68274 44260 45 v 47992
4800 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 6792 a FD(WS)369
b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 72302 54804 45 v 0 TeXcolorgray 24746 81281 a FH(4)p
0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a FI(WS)624 b(1.1)f(-)i(5)f(Median)f(und)g(Mo)
60 b(dus)623 b(-)h(O)-60 b(A)625 b(-)f(BIFIE)h(-)f(K)-60
b(omp)60 b(etenz-)-2331 4515 y(c)-60 b(hec)g(k)718 b(2016)p
0 TeXcolorgray -741 7823 a FH(5.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)433 b(ist)h(eine)f(ungeordnete)g(Liste)g(v)-36
b(on)434 b(19)g(nat\374rlic)-36 b(hen)433 b(Zahlen:)921
10368 y(5,)h(15,)h(14,)f(2,)g(5,)h(13,)f(11,)h(9,)f(7,)g(16,)h(15,)f
(9,)g(10,)h(14,)f(3,)h(14,)f(5,)g(15,)h(14)921 12913
y(Gib)e(den)g(Median)g(und)g(den)f(Mo)36 b(dus)434 b(dieser)f(Liste)g
(an.)921 15459 y(Median:)p 1 0 0 TeXcolorrgb(11)p 0 0 0
TeXcolorrgb 921 18004 a(Mo)36 b(dus:)p 1 0 0 TeXcolorrgb(14)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7823 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 9815 a FD(WS)369 b(1.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 21479
54804 45 v 0 TeXcolorgray 24746 81281 a FH(5)p 0 TeXcolorgray
eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a FI(WS)1030 b(1.1)h(-)g(6)g(In)-60
b(ternetplattform)1029 b(-)j(MC)f(-)g(Matura)g(2014/15)g(-)-2331
4622 y(Haupttermin)p 0 TeXcolorgray -741 7929 a FH(6.)p
0 TeXcolorgray 651 w(Die)607 b(Nutzung)f(einer)h(b)36
b(estimm)-36 b(ten)606 b(In)-36 b(ternetplattform)606
b(durc)-36 b(h)605 b(Jugendlic)-36 b(he)606 b(wird)h(f\374r)921
9921 y(M\344dc)-36 b(hen)639 b(und)f(Bursc)-36 b(hen)638
b(getrenn)-36 b(t)639 b(un)-36 b(tersuc)g(h)g(t.)638
b(Dab)36 b(ei)641 b(wird)e(erfasst,)i(wie)f(oft)g(die)921
11913 y(b)36 b(efragten)329 b(Jugendlic)-36 b(hen)327
b(diese)i(Plattform)g(pro)f(W)-108 b(o)36 b(c)-36 b(he)329
b(b)36 b(esuc)-36 b(hen.)328 b(Die)h(nac)-36 b(hstehenden)921
13905 y(Kastensc)g(haubilder)433 b(\(Bo)-36 b(xplots\))434
b(zeigen)g(das)f(Ergebnis)h(der)f(Un)-36 b(tersuc)g(h)g(ung.)p
0 TeXcolorgray 0 TeXcolorgray 3168 32997 a
 currentpoint currentpoint translate 1.29338 1.29338 scale neg exch
neg exch translate
 3168 32997
a 3601 32997 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 278.83255 a add def
/d 0.0 a add neg def /h 102.43085 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 3601 32997 a 8011 24493 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 41 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 0.0 0.0 -76.82314   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin
1  setlinecap stroke  grestore grestore grestore 5.69046 0.0 T } repeat
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 238.99933  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 238.99933  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-149.23373  def /maxTickline 0.0  def /dT 1864650 abs 65536 div viceversa
{ neg } if def /DT 5. abs viceversa { neg } if def /subTNo 5 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 5.69046  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 5.69046  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 238.99933
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 7776 23938 a FG(0)2679
b(5)2444 b(10)2210 b(15)f(20)h(25)g(30)f(35)h(40)8011
24493 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   0. true 45.52368 -34.14362
142.2615 -17.07181 0 Frame  gsave 1  setgray  1. .setopacityalpha 
fill  grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   0. true 22.76184 -68.28723
113.8092 -51.21542 0 Frame  gsave 1  setgray  1. .setopacityalpha 
fill  grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 -17.07181 0.0 -34.14362   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0  setgray  0.3
.setopacityalpha  fill  grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 182.09473 -17.07181 182.09473 -34.14362
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0  setgray  0.3 .setopacityalpha  fill  grestore gsave 0.8
SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 79.66644 -17.07181 79.66644 -34.14362
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0  setgray  0.3 .setopacityalpha  fill  grestore gsave 0.8
SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 45.52368 -25.60771 0.0 -25.60771  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0  setgray  0.3 .setopacityalpha  fill  grestore gsave 0.8
SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 182.09473 -25.60771 142.2615 -25.60771
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0  setgray  0.3 .setopacityalpha  fill  grestore gsave 0.8
SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 -51.21542 0.0 -68.28723   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0  setgray  0.3
.setopacityalpha  fill  grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 182.09473 -51.21542 182.09473 -68.28723
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0  setgray  0.3 .setopacityalpha  fill  grestore gsave 0.8
SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 68.28552 -51.21542 68.28552 -68.28723
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0  setgray  0.3 .setopacityalpha  fill  grestore gsave 0.8
SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 22.76184 -59.75133 0.0 -59.75133  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0  setgray  0.3 .setopacityalpha  fill  grestore gsave 0.8
SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 182.09473 -59.75133 113.8092 -59.75133
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0  setgray  0.3 .setopacityalpha  fill  grestore gsave 0.8
SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
8011 24493 a
tx@Dict begin  { 159.33289 25.60771 } PutCoor PutBegin  end
 8011 24493 a 610 x FA(Besuc)-26 b(he)314
b(pro)f(W)-78 b(o)26 b(c)-26 b(he)8011 24493 y
tx@Dict begin  PutEnd  end
 8011 24493
a 8011 24493 a
tx@Dict begin  { -39.83322 -22.50104 } PutCoor PutBegin  end
 8011 24493 a 610 x FA(Bursc)g(hen)8011
24493 y
tx@Dict begin  PutEnd  end
 8011 24493 a 8011 24493 a
tx@Dict begin  { -39.83322 -57.33588 } PutCoor PutBegin  end
 8011 24493 a 610 x
FA(M\344dc)g(hen)8011 24493 y
tx@Dict begin  PutEnd  end
 8011 24493 a 34467 32997
a
currentpoint initclip moveto
 34467 32997 a 3168 32997 a
 currentpoint currentpoint translate 1 1.29338 div 1 1.29338 div scale
neg exch neg exch translate
 3168 32997 a 921 36982 a
FH(Kreuze)433 b(die)h(b)36 b(eiden)433 b(zutre\033enden)e(A)-36
b(ussagen)434 b(an.)p 1062 37948 44260 45 v 1062 42745
45 4797 v 1770 39808 a(Der)g(Median)g(der)f(Anzahl)g(v)-36
b(on)434 b(Besuc)-36 b(hen)433 b(pro)g(W)-108 b(o)36
b(c)-36 b(he)434 b(ist)f(b)36 b(ei)434 b(den)f(Bursc)-36
b(hen)1770 41800 y(et)g(w)g(as)434 b(h\366her)f(als)i(b)36
b(ei)433 b(den)g(M\344dc)-36 b(hen.)p 42912 42745 V 1 0 0
TeXcolorrgb 43621 40679 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45277 42745 V 1062 42789 44260
45 v 1062 47844 45 5056 v 1770 44649 a FH(Die)435 b(Spann)-36
b(w)g(eite)432 b(der)i(w)-36 b(\366)36 b(c)-36 b(hen)g(tlic)g(hen)433
b(Nutzung)f(der)h(Plattform)h(ist)g(b)36 b(ei)434 b(den)1770
46641 y(Bursc)-36 b(hen)433 b(gr\366\377er)h(als)g(b)36
b(ei)434 b(den)f(M\344dc)-36 b(hen.)p 42912 47844 V 45277
47844 V 1062 47889 44260 45 v 1062 52685 45 4797 v 1770
49749 a(A)g(us)376 b(der)g(Gra\034k)h(kann)f(man)g(ablesen,)h(dass)g
(genauso)g(viele)g(M\344dc)-36 b(hen)376 b(wie)h(Bur-)1770
51741 y(sc)-36 b(hen)433 b(die)h(Plattform)g(w)-36 b(\366)36
b(c)-36 b(hen)g(tlic)g(h)433 b(b)36 b(esuc)-36 b(hen.)p
42912 52685 V 45277 52685 V 1062 52730 44260 45 v 1062
57785 45 5056 v 1770 54590 a(Der)434 b(An)-36 b(teil)434
b(der)f(Bursc)-36 b(hen,)433 b(die)g(mehr)g(als)h(20-mal)h(pro)e(W)-108
b(o)36 b(c)-36 b(he)433 b(die)h(Plattform)1770 56582
y(n)-36 b(\374tzen,)433 b(ist)h(zumindest)e(gleic)-36
b(h)434 b(gro\377)h(o)36 b(der)433 b(gr\366\377er)i(als)f(jener)f(der)g
(M\344dc)-36 b(hen.)p 42912 57785 V 1 0 0 TeXcolorrgb
43621 55589 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 57785 V 1062 57829 44260 45 v 1062
62965 45 5137 v 1770 59770 a FH(Ca.)419 b(80)217 b(\045)418
b(der)f(M\344dc)-36 b(hen)417 b(und)f(ca.)j(75)217 b(\045)418
b(der)f(Bursc)-36 b(hen)416 b(n)-36 b(\374tzen)417 b(die)g(Plattform)
1770 61762 y(genau)434 b(25-mal)g(pro)g(W)-108 b(o)36
b(c)-36 b(he.)p 42912 62965 V 45277 62965 V 1062 63009
44260 45 v 47992 7929 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 9921 a FD(WS)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 67038 54804 45 v 0 TeXcolorgray
24746 81281 a FH(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1794 a FI(WS)696 b(1.1)g(-)h(7)f(En)-60
b(t)g(wic)g(klung)696 b(der)f(Landwirtsc)-60 b(haft)695
b(in)h(\326sterreic)-60 b(h)696 b(-)-2331 4817 y(MC)718
b(-)g(Matura)f(2014/15)g(-)g(Neb)60 b(en)-60 b(termin)716
b(1)p 0 TeXcolorgray -741 8124 a FH(7.)p 0 TeXcolorgray
651 w(Der)415 b(W)-108 b(ebsite)415 b(der)f(Statistik)h(A)-36
b(ustria)415 b(kann)f(man)h(folgende)h(T)-108 b(ab)36
b(elle)415 b(\374b)36 b(er)414 b(die)h(En)-36 b(t)g(wic)g(k-)921
10116 y(lung)433 b(der)g(Agrarstruktur)g(in)h(\326sterreic)-36
b(h)432 b(en)-36 b(tnehmen:)p 6538 11747 30490 45 v 6538
11747 V 6538 13739 45 1992 v 7246 13141 a(Jahr)p 20509
13739 V 12183 w(1995)p 26000 13739 V 2892 w(1999)p 31492
13739 V 2891 w(2010)p 36983 13739 V 6538 13783 30490
45 v 6538 13783 V 6538 19759 45 5976 v 7246 15177 a(Anzahl)575
b(der)f(land-)g(und)7246 17169 y(forst)-36 b(wirtsc)g(haftlic)g(hen)
7246 19161 y(Betrieb)36 b(e)434 b(insgesam)-36 b(t)p
20509 19759 V 21217 15177 a(239)217 b(099)p 26000 19759
V 1375 w(217)g(508)p 31492 19759 V 1374 w(173)g(317)p
36983 19759 V 6538 19803 30490 45 v 6538 19803 V 6538
23787 45 3984 v 7246 21197 a(durc)-36 b(hsc)g(hnittlic)g(he)1227
b(Be-)7246 23189 y(triebsgr\366\377e)434 b(in)g(Hektar)p
20509 23787 V 22121 21197 a(31,5)p 26000 23787 V 3180
w(34,6)p 31492 23787 V 3181 w(42,4)p 36983 23787 V 6538
23831 30490 45 v 6538 23831 V 0 TeXcolorgray 0 TeXcolorgray
921 26527 a Fz(Datenquelle:)275 b(h)-22 b(ttp://www.statistik.at/w)g
(eb_de/statistik)g(en/land_und_forst)g(wirtsc)g(haft/index.h)g(tml)921
32503 y FH(Kreuze)433 b(die)h(b)36 b(eiden)433 b(zutre\033enden)e(A)-36
b(ussagen)434 b(an.)p 1062 33470 44260 45 v 1062 38525
45 5056 v 1770 35330 a(Die)378 b(Anzahl)e(der)g(land-)g(und)f(forst)-36
b(wirtsc)g(haftlic)g(hen)377 b(Betrieb)36 b(e)376 b(ist)h(im)f
(Zeitraum)1770 37322 y(v)-36 b(on)434 b(1995)h(bis)f(2010)h(in)e(jedem)
h(Jahr)f(um)g(die)h(gleic)-36 b(he)434 b(Zahl)g(gesunk)-36
b(en.)p 42912 38525 V 45277 38525 V 1062 38569 44260
45 v 1062 43624 45 5056 v 1770 40429 a(Die)435 b(durc)-36
b(hsc)g(hnittlic)g(he)431 b(Betriebsgr\366\377e)j(hat)g(v)-36
b(on)434 b(1995)h(bis)e(1999)i(im)f(Jahres-)1770 42421
y(durc)-36 b(hsc)g(hnitt)432 b(um)h(mehr)g(Hektar)h(zugenommen)f(als)h
(v)-36 b(on)434 b(1999)h(bis)f(2010.)p 42912 43624 V
1 0 0 TeXcolorrgb 43621 41429 a FF(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 43624 V 1062 43669
44260 45 v 1062 48724 45 5056 v 1770 45529 a FH(Die)h(durc)-36
b(hsc)g(hnittlic)g(he)431 b(Betriebsgr\366\377e)j(hat)g(v)-36
b(on)434 b(1995)h(bis)e(1999)i(um)e(durc)-36 b(h-)1770
47521 y(sc)g(hnittlic)g(h)433 b(0,5)i(ha)e(pro)h(Jahr)f(abgenommen.)p
42912 48724 V 45277 48724 V 1062 48768 44260 45 v 1062
53823 45 5056 v 1770 50628 a(Die)383 b(Gesam)-36 b(tgr\366\377e)382
b(der)f(land-)g(und)g(forst)-36 b(wirtsc)g(haftlic)g(h)382
b(gen)-36 b(utzten)381 b(Fl\344c)-36 b(he)381 b(hat)1770
52620 y(v)-36 b(on)434 b(1995)h(bis)f(2010)h(abgenommen.)p
42912 53823 V 1 0 0 TeXcolorrgb 43621 51628 a FF(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
53823 V 1062 53867 44260 45 v 1062 58922 45 5056 v 1770
55727 a FH(Die)378 b(Anzahl)e(der)g(land-)g(und)f(forst)-36
b(wirtsc)g(haftlic)g(hen)377 b(Betrieb)36 b(e)376 b(ist)h(im)f
(Zeitraum)1770 57719 y(v)-36 b(on)434 b(1995)h(bis)f(2010)h(um)e(mehr)g
(als)h(ein)g(Drittel)g(gesunk)-36 b(en.)p 42912 58922
V 45277 58922 V 1062 58967 44260 45 v 47992 8124 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 10116 a FD(WS)369 b(1.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 62995
54804 45 v 0 TeXcolorgray 24746 81281 a FH(7)p 0 TeXcolorgray
eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a FI(WS)477 b(1.1)h(-)h(8)f(Anzahl)f(der)h
(Heizungstage)f(-)i(MC)f(-)h(Matura)f(2014/15)-2617 4622
y(-)718 b(Neb)60 b(en)-60 b(termin)716 b(2)p 0 TeXcolorgray
-741 7929 a FH(8.)p 0 TeXcolorgray 651 w(Die)350 b(K)-36
b(\366rp)36 b(ergr\366\377en)349 b(der)f FB(450)i FH(Sc)-36
b(h)g(\374lerInnen)347 b(einer)i(Sc)-36 b(h)g(ulstufe)347
b(einer)i(Gemeinde)f(wurden)921 9921 y(in)385 b(Zen)-36
b(timetern)385 b(gemessen)h(und)e(deren)h(V)-108 b(erteilung)385
b(wurde)g(in)g(einem)h(Kastensc)-36 b(haubild)769 11913
y(\(Bo)g(xplot\))434 b(gra\034sc)-36 b(h)433 b(dargestellt.)p
0 TeXcolorgray 0 TeXcolorgray 3170 23972 a
 currentpoint currentpoint translate 0.51146 0.51146 scale neg exch
neg exch translate
 3170 23972
a 4037 23972 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 707.11163 a add def
/d 0.0 a add neg def /h 175.84727 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 4037 23972 a -508442 15190 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -56.90549 T 1 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 5336.71503 0.0 4629.6034 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 284.52744 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  4609.34445 0.0 T 25
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 96.51425 0.0 -79.33302   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 5336.71503
 0 4629.6034  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 4629.6034  5336.71503  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -79.33302  def /maxTickline
96.51425  def /dT 3729358 abs 65536 div viceversa { neg } if def /DT
2. abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 96.51425 0.0 -79.33302   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 5336.71503 0.0 4629.6034 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 96.51425
 0 -79.33302  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq true and exch 2
lt false and or { /viceversa -79.33302  96.51425  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline 4629.6034  def /maxTickline
5336.71503  def /dT 3729358 abs 65536 div viceversa { neg } if def
/DT 2. abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ yStart } def /MaxValue { yEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {
 0  setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 96.51425 0.0 -79.33302   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 5336.71503 0.0 4629.6034 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
-509687 9176 a FG(2)-510419 21728 y Fy(\000)p FG(2)-502378
16536 y(2)5830 b(4)f(6)g(8)5594 b(10)5359 b(12)g(14)h(16)f(18)g(20)g
(22)g(24)h(26)f(28)g(30)g(32)g(34)h(36)f(38)g(40)g(42)g(44)h(46)f(48)g
(50)g(52)h(54)f(56)g(58)g(60)g(62)h(64)f(66)g(68)g(70)g(72)h(74)f(76)g
(78)g(80)g(82)h(84)f(86)g(88)g(90)h(92)f(94)g(96)g(98)5124
b(100)4889 b(102)h(104)f(106)g(108)g(110)g(112)h(114)f(116)g(118)g(120)
g(122)h(124)f(126)g(128)g(130)g(132)h(134)f(136)g(138)g(140)h(142)f
(144)g(146)g(148)g(150)h(152)f(154)g(156)g(158)g(160)h(162)f(164)g(166)
g(168)g(170)h(172)f(174)g(176)g(178)h(180)f(182)g(184)g(186)-580467
b(2)5830 b(4)f(6)g(8)5594 b(10)5359 b(12)g(14)h(16)f(18)g(20)g(22)g(24)
h(26)f(28)g(30)g(32)g(34)h(36)f(38)g(40)g(42)g(44)h(46)f(48)g(50)g(52)h
(54)f(56)g(58)g(60)g(62)h(64)f(66)g(68)g(70)g(72)h(74)f(76)g(78)g(80)g
(82)h(84)f(86)g(88)g(90)h(92)f(94)g(96)g(98)5124 b(100)4889
b(102)h(104)f(106)g(108)g(110)g(112)h(114)f(116)g(118)g(120)g(122)h
(124)f(126)g(128)g(130)g(132)h(134)f(136)g(138)g(140)h(142)f(144)g(146)
g(148)g(150)h(152)f(154)g(156)g(158)g(160)h(162)-508442
15190 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray   0. true 4666.24994 14.22636
5064.58835 42.67911 0 Frame  gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 4666.24994 42.67911 4666.24994
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 5263.75755 42.67911 5263.75755
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 4836.9664 42.67911 4836.9664
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 4666.24994 28.45274 4666.24994
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 5263.75755 28.45274 5064.58835
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
-508442 15190 a
tx@Dict begin  { 5183.19716 -39.32527 } PutCoor PutBegin  end
 -508442 15190 a 915 x FH(K)-36 b(\366rp)36
b(ergr\366\377en)434 b(in)g(cm)-508442 15190 y
tx@Dict begin  PutEnd  end
 -508442
15190 a 82311 23972 a
currentpoint initclip moveto
 82311 23972 a 3170 23972 a
 currentpoint currentpoint translate 1 0.51146 div 1 0.51146 div scale
neg exch neg exch translate
 3170
23972 a 921 27624 a FH(Zur)928 b(In)-36 b(terpretation)928
b(dieses)h(Kastensc)-36 b(haubilds)929 b(w)-36 b(erden)928
b(v)-36 b(ersc)g(hiedene)928 b(A)-36 b(ussagen)921 29616
y(get\344tigt.)435 b(Kreuze)e(die)h(b)36 b(eiden)432
b(zutre\033enden)g(A)-36 b(ussagen)434 b(an.)p 1062 32316
44260 45 v 1062 35461 45 3145 v 1770 34258 a FB(60)221
b(\045)435 b FH(der)e(Sc)-36 b(h)g(\374lerInnen)432 b(sind)h(genau)g
FB(172)221 b Fx(cm)435 b FH(gro\377.)p 42912 35461 V
45277 35461 V 1062 35505 44260 45 v 1062 38568 45 3064
v 1770 37365 a(Mindestens)e(eine)h(Sc)-36 b(h)g(\374lerin)432
b(bzw.)i(ein)f(Sc)-36 b(h)g(\374ler)433 b(ist)h(genau)f
FB(185)221 b Fx(cm)434 b FH(gro\377.)p 42912 38568 V
1 0 0 TeXcolorrgb 43621 37369 a FF(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 38568 V 1062 38612
44260 45 v 1062 41573 45 2961 v 1770 40554 a FH(H\366)36
b(c)-36 b(hstens)434 b FB(50)221 b(\045)434 b FH(der)f(Sc)-36
b(h)g(\374lerInnen)432 b(sind)h(kleiner)h(als)g FB(170)221
b Fx(cm)p FH(.)p 42912 41573 V 1 0 0 TeXcolorrgb 43621
40425 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45277 41573 V 1062 41617 44260 45 v 1062
44761 45 3145 v 1770 43558 a FH(Mindestens)433 b FB(75)221
b(\045)435 b FH(der)e(Sc)-36 b(h)g(\374lerInnen)431 b(sind)i
(gr\366\377er)i(als)f FB(178)221 b Fx(cm)p FH(.)p 42912
44761 V 45277 44761 V 1062 44806 44260 45 v 1062 49942
45 5137 v 1770 46747 a(H\366)36 b(c)-36 b(hstens)351
b FB(50)221 b(\045)352 b FH(der)f(Sc)-36 b(h)g(\374lerInnen)348
b(sind)j(mindestens)f FB(164)221 b Fx(cm)352 b FH(und)e(h\366)36
b(c)-36 b(hstens)1770 48739 y FB(178)221 b Fx(cm)435
b FH(gro\377.)p 42912 49942 V 45277 49942 V 1062 49986
44260 45 v 47992 7929 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 9921 a FD(WS)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 54014 54804 45 v 0 TeXcolorgray
24746 81281 a FH(8)p 0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a FI(WS)1077 b(1.1)h(-)g(9)g(V)-179
b(erurteilungen)1075 b(Jugendlic)-60 b(he)1077 b(-)h(MC)g(-)h(Matura)
-2385 4515 y(2015/16)718 b(-)f(Neb)60 b(en)-60 b(termin)716
b(1)p 0 TeXcolorgray -741 7823 a FH(9.)p 0 TeXcolorgray
651 w(Jugendlic)-36 b(he)459 b(sind)f(laut)i(Jugendsc)-36
b(h)g(utzgesetz)457 b(1988)k(\(F)-108 b(assung)458 b(v)-36
b(om)460 b(23.3.2016\))i(P)-36 b(erso-)921 9815 y(nen,)361
b(die)g(das)h(14.)g(Leb)36 b(ensjahr,)361 b(ab)36 b(er)361
b(no)36 b(c)-36 b(h)361 b(nic)-36 b(h)g(t)360 b(das)i(18.)h(Leb)36
b(ensjahr)360 b(v)-36 b(ollendet)362 b(hab)36 b(en.)921
11806 y(Die)511 b(nac)-36 b(hstehende)509 b(Gra\034k)h(zeigt)h(f\374r)f
(den)f(Zeitraum)h(v)-36 b(on)511 b(1950)g(bis)g(2010)g(so)-36
b(w)g(ohl)511 b(die)921 13798 y(absolute)390 b(Anzahl)g(der)g(V)-108
b(erurteilungen)389 b(Jugendlic)-36 b(her)390 b(als)g(auc)-36
b(h)390 b(die)g(Anzahl)g(der)g(V)-108 b(erur-)921 15790
y(teilungen)433 b(Jugendlic)-36 b(her)433 b(b)36 b(ezogen)434
b(auf)g(100000)i(Jugendlic)-36 b(he.)5423 42092 y

 5423
42092 a 5423 42092 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs


 5423 42092 a


 pgfr

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 [1.0 0.0 0.0 1.0 -40.51985 -14.86554 ] concat

 pgfs


 9925 40440 a

 9925 40440
a 9925 40440 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 save

 save

 0.3985 pgfw
 0.75 TeXcolorgray 0.4 TeXcolorgray
 25.35765 0.0 moveto

 25.35765 210.2876 lineto

 76.07297 0.0 moveto

 76.07297 210.2876 lineto

 126.7883 0.0 moveto

 126.7883 210.2876 lineto

 177.50362 0.0 moveto

 177.50362 210.2876 lineto

 228.21893 0.0 moveto

 228.21893 210.2876 lineto

 278.93425 0.0 moveto

 278.93425 210.2876 lineto

 329.64957 0.0 moveto

 329.64957 210.2876 lineto

 380.3649 0.0 moveto

 380.3649 210.2876 lineto

 pgfstr
 0.75
TeXcolorgray 0 TeXcolorgray
 restore

 restore

 save

 save

 0.3985 pgfw
 0.75 TeXcolorgray 0.4 TeXcolorgray
 0.0 0.0 moveto

 380.3649 0.0 lineto

 0.0 80.87984 moveto

 380.3649 80.87984 lineto

 0.0 161.75969 moveto

 380.3649 161.75969 lineto

 pgfstr

0.75 TeXcolorgray 0 TeXcolorgray
 restore

 restore

 save

 save

 0.19925 pgfw
 0.5 TeXcolorgray
 25.35765 0.0 moveto

 25.35765 4.25282 lineto

 76.07297 0.0 moveto

 76.07297 4.25282 lineto

 126.7883 0.0 moveto

 126.7883 4.25282 lineto

 177.50362 0.0 moveto

 177.50362 4.25282 lineto

 228.21893 0.0 moveto

 228.21893 4.25282 lineto

 278.93425 0.0 moveto

 278.93425 4.25282 lineto

 329.64957 0.0 moveto

 329.64957 4.25282 lineto

 380.3649 0.0 moveto

 380.3649 4.25282 lineto

 pgfstr
 0 TeXcolorgray
 restore

 restore

 save

 save

 0.19925 pgfw

0.5 TeXcolorgray
 0.0 0.0 moveto

 4.25221 0.0 lineto

 0.0 80.87984 moveto

 4.25221 80.87984 lineto

 0.0 161.75969 moveto

 4.25221 161.75969 lineto

 380.3649 0.0 moveto

 376.11266 0.0 lineto

 380.3649 80.87984 moveto

 376.11266 80.87984 lineto

 380.3649 161.75969 moveto

 376.11266 161.75969 lineto

 pgfstr
 0 TeXcolorgray
 restore

 restore

 0.0 0.0 moveto

 0.0 210.2876 lineto

 380.3649 210.2876 lineto

 380.3649 0.0 lineto

 0.0 0.0 lineto

 closepath

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 15.39488 -10.37465 ] concat

 pgfs



 0 setgray
 9925 40440 a FD(1950)9925
40440 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 69.70789 -10.96393 ] concat

 pgfs



 0 setgray
 9925 40440 a FD('60)9925 40440 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 120.4232 -10.96393 ] concat

 pgfs



 0 setgray
 9925 40440 a
FD('70)9925 40440 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 171.13853 -10.96393 ] concat

 pgfs



 0 setgray
 9925 40440 a FD('80)9925 40440 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 221.85385 -10.96393 ] concat

 pgfs



 0 setgray

9925 40440 a FD('90)9925 40440 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 272.56917 -10.96393 ] concat

 pgfs



 0 setgray
 9925 40440 a FD('00)9925
40440 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 319.6868 -10.37465 ] concat

 pgfs



 0 setgray
 9925 40440 a FD(2010)9925 40440 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 380.3649 -4.10085 ] concat

 pgfs



 0 setgray
 9925 40440
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -9.95395 -3.7643 ] concat

 pgfs



 0 setgray
 9925 40440 a FH(0)9925 40440 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -30.76512 77.11554 ] concat

 pgfs



 0 setgray
 9925 40440 a FH(5.000)9925
40440 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -36.61824 157.99539 ] concat

 pgfs



 0 setgray
 9925 40440 a FH(10.000)9925 40440 y


 pgfr

 restore

 restore

 0.0 0.0 moveto

 380.3649 0.0 lineto

 380.3649 210.2876 lineto

 0.0 210.2876 lineto

 closepath

 clip

 newpath

 save

 0 setgray

 1.99255 pgfw

 10.14305 83.30623 moveto

 10.14305 83.30623 13.80727 83.05005 15.21458 82.98271 curveto

 16.62192 82.91539 18.8788 82.88828 20.28612 82.82095 curveto

 21.69345 82.75362 23.95033 82.4301 25.35765 82.49744 curveto

 26.76497 82.56476 29.02187 83.0818 30.42918 83.30623 curveto

 31.8365 83.53065 33.38972 82.65619 35.50072 84.11504 curveto

 37.61171 85.57387 43.53279 87.53635 45.64378 93.82062 curveto

 47.75478 100.10489 49.30798 114.37036 50.71532 129.40775 curveto

 52.12263 144.44513 54.37952 193.22206 55.78685 202.1996 curveto

 57.19417 211.17715 59.45105 194.33604 60.85838 194.11162 curveto

 62.2657 193.88719 64.52258 201.92863 65.9299 200.58202 curveto

 67.33723 199.23538 69.59412 189.56812 71.00143 184.40604 curveto

 72.40877 179.24397 74.66565 167.41716 76.07297 163.37727 curveto

 77.4803 159.3374 79.73718 157.75812 81.1445 155.28929 curveto

 82.55183 152.82048 84.80872 146.25702 86.21603 145.58371 curveto

 87.62335 144.9104 89.88025 150.21208 91.28757 150.43651 curveto

 92.69489 150.66093 94.95178 148.99681 96.3591 147.20131 curveto

 97.76642 145.4058 100.02332 139.29123 101.43063 137.49573 curveto

 102.83795 135.70023 105.09485 135.8316 106.50217 134.26054 curveto

 107.90948 132.68947 110.16637 126.62141 111.5737 126.17255 curveto

 112.98102 125.72368 114.53424 130.57648 116.64523 131.02534 curveto

 118.75623 131.47421 124.6773 129.18332 126.7883 129.40775 curveto

 128.89929 129.63217 130.4525 131.07187 131.85982 132.64294 curveto

 133.26715 134.214 135.52403 140.05762 136.93135 140.73093 curveto

 138.33868 141.40424 140.59557 137.49573 142.00288 137.49573 curveto

 143.41022 137.49573 145.6671 141.8531 147.07442 140.73093 curveto

 148.48175 139.60875 150.73863 129.40775 152.14595 129.40775 curveto

 153.55327 129.40775 155.81017 139.38431 157.21748 140.73093 curveto

 158.6248 142.07755 160.8817 138.8889 162.28902 139.11333 curveto

 163.69633 139.33775 165.95323 141.67522 167.36055 142.34853 curveto

 168.76787 143.02184 171.02477 143.51724 172.43208 143.96611 curveto

 173.8394 144.415 176.09628 144.9104 177.50362 145.58371 curveto

 178.91093 146.25702 181.16782 152.18547 182.57515 148.81891 curveto

 183.98247 145.45233 186.23935 125.80853 187.64668 121.31976 curveto

 189.054 116.831 191.31088 118.03804 192.71822 116.46696 curveto

 194.12553 114.8959 196.38242 112.24095 197.78973 109.99658 curveto

 199.19707 107.75221 201.45395 104.33089 202.86127 100.291 curveto

 204.2686 96.25111 206.52548 85.3686 207.9328 80.87984 curveto

 209.34013 76.39107 211.59702 71.08119 213.00433 67.93906 curveto

 214.41167 64.79694 215.96487 58.68234 218.07587 58.23347 curveto

 220.18686 57.7846 226.10794 63.69391 228.21893 64.70387 curveto

 230.32993 65.71382 231.88315 65.28824 233.29047 65.51266 curveto

 234.69778 65.73709 236.95467 66.43367 238.362 66.32147 curveto

 239.76932 66.20926 242.0262 64.70387 243.43353 64.70387 curveto

 244.84085 64.70387 247.09773 66.5459 248.50507 66.32147 curveto

 249.91238 66.09705 252.16927 63.98402 253.5766 63.08627 curveto

 254.98392 62.18852 257.2408 60.0755 258.64813 59.85107 curveto

 260.05545 59.62665 262.31233 61.0198 263.71965 61.46867 curveto

 265.12698 61.91754 266.68019 62.6374 268.79118 63.08627 curveto

 270.90218 63.53514 276.82326 64.36722 278.93425 64.70387 curveto

 281.04524 65.04051 282.59846 65.73709 284.00578 65.51266 curveto

 285.4131 65.28824 287.67 63.64737 289.07732 63.08627 curveto

 290.48463 62.52518 292.74153 61.91754 294.14885 61.46867 curveto

 295.55617 61.0198 297.81306 60.29994 299.22038 59.85107 curveto

 300.6277 59.4022 302.88458 58.34569 304.29192 58.23347 curveto

 305.69923 58.12128 307.95612 59.15448 309.36345 59.04227 curveto

 310.77077 58.93007 313.02765 58.43463 314.43498 57.42468 curveto

 315.8423 56.41472 318.09918 52.77306 319.50652 51.76309 curveto

 320.91383 50.75313 323.17072 50.45297 324.57803 50.1455 curveto

 325.98537 49.83803 329.64957 49.54698 329.64957 49.54698 curveto

 pgfstr

 restore

 save

 0.5 setgray

 1.99255 pgfw

 10.14305 23.13162 moveto

 10.14305 23.13162 13.80727 23.34294 15.21458 23.45514 curveto

 16.62192 23.56735 18.8788 23.82822 20.28612 23.94041 curveto

 21.69345 24.05263 23.95033 24.10684 25.35765 24.26395 curveto

 26.76497 24.42104 29.02187 25.02786 30.42918 25.07274 curveto

 31.8365 25.11761 33.38972 24.47525 35.50072 24.58746 curveto

 37.61171 24.69966 43.53279 25.47757 45.64378 25.88155 curveto

 47.75478 26.28552 49.30798 26.6014 50.71532 27.49915 curveto

 52.12263 28.3969 54.37952 31.22975 55.78685 32.35193 curveto

 57.19417 33.4741 59.45105 34.68938 60.85838 35.58713 curveto

 62.2657 36.48488 64.52258 38.32855 65.9299 38.82231 curveto

 67.33723 39.31609 69.59412 38.9214 71.00143 39.14583 curveto

 72.40877 39.37025 74.66565 40.48479 76.07297 40.43991 curveto

 77.4803 40.39503 79.73718 39.2712 81.1445 38.82231 curveto

 82.55183 38.37344 84.80872 37.6536 86.21603 37.20473 curveto

 87.62335 36.75586 89.88025 35.69933 91.28757 35.58713 curveto

 92.69489 35.47491 94.95178 36.62035 96.3591 36.39592 curveto

 97.76642 36.1715 100.02332 34.19395 101.43063 33.96953 curveto

 102.83795 33.7451 105.09485 34.89052 106.50217 34.77832 curveto

 107.90948 34.6661 110.16637 33.94626 111.5737 33.16072 curveto

 112.98102 32.37518 114.53424 30.1267 116.64523 29.11673 curveto

 118.75623 28.10678 124.6773 26.21819 126.7883 25.88155 curveto

 128.89929 25.54489 130.4525 26.46591 131.85982 26.69034 curveto

 133.26715 26.91476 135.52403 27.83578 136.93135 27.49915 curveto

 138.33868 27.16249 140.59557 24.37614 142.00288 24.26395 curveto

 143.41022 24.15173 145.6671 26.01703 147.07442 26.69034 curveto

 148.48175 27.36365 150.73863 29.00453 152.14595 29.11673 curveto

 153.55327 29.22894 155.81017 27.94801 157.21748 27.49915 curveto

 158.6248 27.05028 160.8817 25.99374 162.28902 25.88155 curveto

 163.69633 25.76933 165.95323 26.69034 167.36055 26.69034 curveto

 168.76787 26.69034 171.02477 26.21819 172.43208 25.88155 curveto

 173.8394 25.54489 176.09628 24.15173 177.50362 24.26395 curveto

 178.91093 24.37614 181.16782 26.69034 182.57515 26.69034 curveto

 183.98247 26.69034 186.23935 24.82504 187.64668 24.26395 curveto

 189.054 23.70285 191.31088 23.31966 192.71822 22.64635 curveto

 194.12553 21.97304 196.38242 19.7478 197.78973 19.41115 curveto

 199.19707 19.07451 201.45395 20.44437 202.86127 20.21994 curveto

 204.2686 19.99551 206.52548 18.35464 207.9328 17.79356 curveto

 209.34013 17.23247 210.18968 16.40039 213.00433 16.17596 curveto

 215.819 15.95154 225.40427 15.95154 228.21893 16.17596 curveto

 231.0336 16.40039 231.88315 17.45691 233.29047 17.79356 curveto

 234.69778 18.1302 236.95467 18.60236 238.362 18.60236 curveto

 239.76932 18.60236 242.0262 18.01799 243.43353 17.79356 curveto

 244.84085 17.56914 247.09773 17.02963 248.50507 16.98476 curveto

 249.91238 16.93988 252.16927 17.35782 253.5766 17.47003 curveto

 254.98392 17.58223 257.2408 17.9731 258.64813 17.79356 curveto

 260.05545 17.61403 262.31233 16.28816 263.71965 16.17596 curveto

 265.12698 16.06375 266.68019 16.98476 268.79118 16.98476 curveto

 270.90218 16.98476 276.82326 16.17596 278.93425 16.17596 curveto

 281.04524 16.17596 282.59846 16.76033 284.00578 16.98476 curveto

 285.4131 17.20918 287.67 17.56914 289.07732 17.79356 curveto

 290.48463 18.01799 292.74153 18.71455 294.14885 18.60236 curveto

 295.55617 18.49014 297.81306 17.3214 299.22038 16.98476 curveto

 300.6277 16.6481 302.88458 16.06375 304.29192 16.17596 curveto

 305.69923 16.28816 307.95612 17.68135 309.36345 17.79356 curveto

 310.77077 17.90576 313.02765 17.43362 314.43498 16.98476 curveto

 315.8423 16.53589 318.09918 15.00723 319.50652 14.55836 curveto

 320.91383 14.1095 323.17072 13.99194 324.57803 13.74956 curveto

 325.98537 13.50717 329.64957 12.81136 329.64957 12.81136 curveto

 pgfstr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 329.70056 45.78268 ] concat

 pgfs



 0 setgray
 0.3 TeXcolorgray
0.3 TeXcolorgray 9925 40772 3483 1501 v 0.3 TeXcolorgray
0 TeXcolorgray 1 1 1 TeXcolorrgb 10257 40440 a FH(3)217
b(063)p 0 TeXcolorgray 0.3 TeXcolorgray 0 TeXcolorgray
9925 40440 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 329.54561 9.04706 ] concat

 pgfs



 0 setgray
 0.5 TeXcolorgray 0.5 TeXcolorgray 9925 40772
2616 1501 v 0.5 TeXcolorgray 0 TeXcolorgray 1 1 1 TeXcolorrgb
10257 40440 a FH(792)p 0 TeXcolorgray 0.5 TeXcolorgray
0 TeXcolorgray 9925 40440 a


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 /pgfsc{0 setgray}def

 save

 /pgffc{1 setgray}def

 /pgfsc{0 setgray}def

 29.19315 192.98984 179.56686 176.68852 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 182.5557 184.9831 ] concat

 pgfs


 10036 39040 a

 10036 39040
a 10036 39040 a


 pgfo

 save

 /pgffc{0 setgray}def

 save

 /pgfsc{}def/pgffc{}def

 0 setgray

 1.99255 pgfw

 0.0 0.0 moveto

 0.0 0.0 6.14426 0.0 8.50412 0.0 curveto

 10.86398 0.0 17.00826 0.0 17.00826 0.0 curveto

 pgfstr

 restore

 restore

 pgfc


 21370 39040 a

 21370 39040 a 21370 39040
a


 pgfo

 save

 save

 save

 [1.0 0.0 0.0 1.0 -49.59245 -2.55362 ] concat

 pgfs



 /pgfsc{}def/pgffc{}def

 0 setgray
 21370 39040 a FD(V)-92 b(erurteilungen)370 b(absolut)21370
39040 y


 pgfr

 restore

 restore

 restore

 pgfc


 10036 40440 a

 10036 40440 a 10036 40440 a


 pgfo

 save

 /pgffc{0 setgray}def

 save

 /pgfsc{}def/pgffc{}def

 0.5 setgray

 1.99255 pgfw

 0.0 0.0 moveto

 0.0 0.0 6.14426 0.0 8.50412 0.0 curveto

 10.86398 0.0 17.00826 0.0 17.00826 0.0 curveto

 pgfstr

 restore

 restore

 pgfc


 21370
40440 a

 21370 40440 a 21370 40440 a


 pgfo

 save

 save

 save

 [1.0 0.0 0.0 1.0 -82.01314 -2.55362 ] concat

 pgfs



 /pgfsc{}def/pgffc{}def

 0 setgray
 21370 40440 a FD(V)-92
b(erurteilungen)370 b(je)f(100)186 b(000)371 b(Jugendlic)-31
b(he)21370 40440 y


 pgfr

 restore

 restore

 restore

 pgfc


 9925 40440 a


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 5423 42092 a


 pgfr

 restore

 save

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 855 48281
a FH(Wie)603 b(viele)h(Jugendlic)-36 b(he)603 b(insgesam)-36
b(t)603 b(gab)h(es)f(in)g(\326sterreic)-36 b(h)602 b(in)h(et)-36
b(w)g(a)603 b(im)g(Jahr)g(2010?)921 50273 y(Kreuze)433
b(die)h(zutre\033ende)e(Anzahl)h(an.)p 18483 50981 9419
45 v 18483 53707 45 2727 v 19191 52763 a(792)217 b(000)p
25492 53707 V 27857 53707 V 18483 53752 9419 45 v 18483
56478 45 2727 v 19191 55533 a(3)g(0630)g(000)p 25492
56478 V 27857 56478 V 18483 56522 9419 45 v 18483 59249
45 2727 v 19191 58304 a(3)g(863)g(000)p 25492 59249 V
27857 59249 V 18483 59293 9419 45 v 18483 62019 45 2727
v 19191 61074 a(387)g(000)p 25492 62019 V 1 0 0 TeXcolorrgb
26200 60988 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 27857 62019 V 18483 62063 9419 45 v 18483
64790 45 2727 v 19191 63845 a FH(258)g(000)p 25492 64790
V 27857 64790 V 18483 64834 9419 45 v 18483 67560 45
2727 v 19191 66615 a(2)g(580)g(000)p 25492 67560 V 27857
67560 V 18483 67604 9419 45 v 47992 7823 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 9815 a FD(WS)369 b(1.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 71633
54804 45 v 0 TeXcolorgray 24746 81281 a FH(9)p 0 TeXcolorgray
eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)723 b(1.1)h(-)g(10)g(Sc)-60
b(h)g(ulstatistik)721 b(-)j(MC)h(-)f(Matura)f(2013/14)h(Haupt-)-2331
4622 y(termin)p 0 TeXcolorgray -1391 7929 a FH(10.)p
0 TeXcolorgray 651 w(Das)553 b(nac)-36 b(hstehende)550
b(Diagramm)k(stellt)e(f\374r)g(das)g(Sc)-36 b(h)g(uljahr)552
b(2009/10)i(folgende)f(Daten)921 9921 y(dar:)p 0 TeXcolorgray
2468 13020 a Fw(\017)p 0 TeXcolorgray 650 w FH(die)434
b(Anzahl)f(der)g(Sc)-36 b(h)g(\374ler/innen)439 b Fv(n)-42
b(ur)435 b FH(aus)e(der)g(AHS-Un)-36 b(terstufe)p 0 TeXcolorgray
2468 15565 a Fw(\017)p 0 TeXcolorgray 650 w FH(die)613
b(Gesam)-36 b(tanzahl)612 b(der)g(Sc)-36 b(h)g(\374ler/innen)611
b(der)h(1.-4.)j(Klasse)e(\(Hauptsc)-36 b(h)g(ule)612
b Fv(und)3734 17557 y FH(AHS-Un)-36 b(terstufe\))921
43433 y
 currentpoint currentpoint translate 0.7091 0.7091 scale neg exch neg
exch translate
 921 43433 a 1355 43433 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 569.05487 a add def
/d 0.0 a add neg def /h 284.52742 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1355 43433 a 7654 35559
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 21 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 512.14938 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 14.22636
T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 1 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 213.39557 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 2845.27435
0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 512.14938  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 512.14938  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 213.39557  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 213.39557
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 512.14938
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 213.39557  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 213.39557  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 512.14938  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 213.39557
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 512.14938
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 4370 32694 a FG(10)157 b(000)4370
29545 y(20)g(000)4370 26395 y(30)g(000)4370 23246 y(40)g(000)4370
20096 y(50)g(000)4370 16946 y(60)g(000)4370 13797 y(70)g(000)7654
35559 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  [ 14.22636 8.5359 28.45274
8.5359 28.45274 0.0 14.22636 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  0.6 .setopacityalpha  fill  grestore gsave
0.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor
 [ 28.45274 25.60728 42.67911 25.60728 42.67911 0.0 28.45274 0.0  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.62745
0.62745 0.62745  setrgbcolor  0.6 .setopacityalpha  fill  grestore
gsave 0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  [ 85.35823 0.0 85.35823 21.33955
71.13185 21.33955 71.13185 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  0.6 .setopacityalpha  fill  grestore gsave
0.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor
 [ 85.35823 61.17322 99.5846 61.17322 99.5846 0.0 85.35823 0.0  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.62745
0.62745 0.62745  setrgbcolor  0.6 .setopacityalpha  fill  grestore
gsave 0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  [ 128.03734 58.3282 142.26372
58.3282 142.26372 0.0 128.03734 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  0.6 .setopacityalpha  fill  grestore gsave
0.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor
 [ 142.26372 177.82964 156.49008 177.82964 156.49008 0.0 142.26372
0.0  /Lineto /lineto load def 0  setlinejoin false NArray n 2 eq {
0 0 /n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed
} if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1
def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto
/n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub
x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11
sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos
add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add
y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.62745
0.62745 0.62745  setrgbcolor  0.6 .setopacityalpha  fill  grestore
gsave 0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  [ 184.94283 45.52455 199.1692
45.52455 199.1692 0.0 184.94283 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  0.6 .setopacityalpha  fill  grestore gsave
0.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor
 [ 213.39557 176.40692 199.1692 176.40692 199.1692 0.0 213.39557 0.0
 /Lineto /lineto load def 0  setlinejoin false NArray n 2 eq { 0 0
/n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed
} if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1
def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto
/n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub
x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11
sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos
add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add
y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.62745
0.62745 0.62745  setrgbcolor  0.6 .setopacityalpha  fill  grestore
gsave 0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  [ 256.07469 18.4941 256.07469
0.0 241.84831 0.0 241.84831 18.4941  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  0.6 .setopacityalpha  fill  grestore gsave
0.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor
 [ 270.30106 0.0 270.30106 68.2864 256.07469 68.2864 256.07469 0.0
 /Lineto /lineto load def 0  setlinejoin false NArray n 2 eq { 0 0
/n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed
} if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1
def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto
/n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub
x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11
sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos
add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add
y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.62745
0.62745 0.62745  setrgbcolor  0.6 .setopacityalpha  fill  grestore
gsave 0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  [ 312.98018 39.83366 312.98018
0.0 298.7538 0.0 298.7538 39.83366  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  0.6 .setopacityalpha  fill  grestore gsave
0.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor
 [ 312.98018 125.1919 327.20654 125.1919 327.20654 0.0 312.98018 0.0
 /Lineto /lineto load def 0  setlinejoin false NArray n 2 eq { 0 0
/n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed
} if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1
def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto
/n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub
x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11
sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos
add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add
y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.62745
0.62745 0.62745  setrgbcolor  0.6 .setopacityalpha  fill  grestore
gsave 0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  [ 355.65929 19.91682 369.88567
19.91682 369.88567 0.0 355.65929 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  0.6 .setopacityalpha  fill  grestore gsave
0.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor
 [ 369.88567 86.78094 384.11203 86.78094 384.11203 0.0 369.88567 0.0
 /Lineto /lineto load def 0  setlinejoin false NArray n 2 eq { 0 0
/n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed
} if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1
def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto
/n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub
x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11
sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos
add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add
y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.62745
0.62745 0.62745  setrgbcolor  0.6 .setopacityalpha  fill  grestore
gsave 0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  [ 412.56477 12.80363 426.79115
12.80363 426.79115 0.0 412.56477 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  0.6 .setopacityalpha  fill  grestore gsave
0.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor
 [ 426.79115 36.98865 441.01752 36.98865 441.01752 0.0 426.79115 0.0
 /Lineto /lineto load def 0  setlinejoin false NArray n 2 eq { 0 0
/n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed
} if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1
def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto
/n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub
x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11
sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos
add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add
y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.62745
0.62745 0.62745  setrgbcolor  0.6 .setopacityalpha  fill  grestore
gsave 0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  [ 469.47026 92.4714 483.69664
92.4714 483.69664 0.0 469.47026 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  0.6 .setopacityalpha  fill  grestore gsave
0.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor
 [ 483.69664 173.5619 497.923 173.5619 497.923 0.0 483.69664 0.0  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.62745
0.62745 0.62745  setrgbcolor  0.6 .setopacityalpha  fill  grestore
gsave 0.2 SLW 0.62745 0.62745 0.62745  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  [ 263.18787 170.71646 277.41425
170.71646 277.41425 177.82964 263.18787 177.82964  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  0.6 .setopacityalpha
 fill  grestore gsave 0.2 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.2 SLW 0  setgray  [ 277.41425 163.60327 277.41425
156.49008 263.18787 156.49008 263.18787 163.60327  /Lineto /lineto
load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3
lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll
/y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1
add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.62745 0.62745 0.62745  setrgbcolor
 0.6 .setopacityalpha  fill  grestore gsave 0.2 SLW 0  setgray  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 7654 35559 a
tx@Dict begin  { 284.52744 176.40692 } PutCoor PutBegin  end
 7654 35559 a 610
x FA(AHS)313 b(Un)-26 b(terstufe)7654 35559 y
tx@Dict begin  PutEnd  end
 7654 35559
a 7654 35559 a
tx@Dict begin  { 284.52744 162.61774 } PutCoor PutBegin  end
 7654 35559 a 610 x FA(Gesam)g(t)314 b(1.-4.)h(Klasse)
7654 35559 y
tx@Dict begin  PutEnd  end
 7654 35559 a 7654 35559 a
tx@Dict begin  { -2.84544 -4.26773 } PutCoor PutBegin  end
 7654 35559 a 8121
39585 a
 gsave currentpoint currentpoint translate 50 neg rotate neg exch neg
exch translate
 8121 39585 a FA(Burgenland)12865 39585 y
 currentpoint grestore moveto
 12865
39585 a 7654 35559 a
tx@Dict begin  PutEnd  end
 7654 35559 a 7654 35559 a
tx@Dict begin  { 62.59595 -4.26773 } PutCoor PutBegin  end
 7654 35559
a 8121 38534 a
 gsave currentpoint currentpoint translate 50 neg rotate neg exch neg
exch translate
 8121 38534 a FA(K\344rn)-26 b(ten)11493
38534 y
 currentpoint grestore moveto
 11493 38534 a 7654 35559 a
tx@Dict begin  PutEnd  end
 7654 35559 a 7654
35559 a
tx@Dict begin  { 103.28358 -4.26773 } PutCoor PutBegin  end
 7654 35559 a 8121 41041 a
 gsave currentpoint currentpoint translate 50 neg rotate neg exch neg
exch translate
 8121 41041 a FA(Nieder\366sterreic)g
(h)14767 41041 y
 currentpoint grestore moveto
 14767 41041 a 7654 35559 a
tx@Dict begin  PutEnd  end
 7654 35559
a 7654 35559 a
tx@Dict begin  { 160.18907 -4.26773 } PutCoor PutBegin  end
 7654 35559 a 8121 40562 a
 gsave currentpoint currentpoint translate 50 neg rotate neg exch neg
exch translate
 8121 40562 a
FA(Ob)26 b(er\366sterreic)-26 b(h)14140 40562 y
 currentpoint grestore moveto
 14140
40562 a 7654 35559 a
tx@Dict begin  PutEnd  end
 7654 35559 a 7654 35559 a
tx@Dict begin  { 233.31241 -4.26773 } PutCoor PutBegin  end
 7654 35559
a 8121 38674 a
 gsave currentpoint currentpoint translate 50 neg rotate neg exch neg
exch translate
 8121 38674 a FA(Salzburg)11676 38674 y
 currentpoint grestore moveto

11676 38674 a 7654 35559 a
tx@Dict begin  PutEnd  end
 7654 35559 a 7654 35559 a
tx@Dict begin  { 284.52744 -4.26773 } PutCoor PutBegin  end

7654 35559 a 8121 39376 a
 gsave currentpoint currentpoint translate 50 neg rotate neg exch neg
exch translate
 8121 39376 a FA(Steiermark)12592
39376 y
 currentpoint grestore moveto
 12592 39376 a 7654 35559 a
tx@Dict begin  PutEnd  end
 7654 35559 a 7654
35559 a
tx@Dict begin  { 355.65929 -4.26773 } PutCoor PutBegin  end
 7654 35559 a 8121 37513 a
 gsave currentpoint currentpoint translate 50 neg rotate neg exch neg
exch translate
 8121 37513 a FA(Tirol)10160
37513 y
 currentpoint grestore moveto
 10160 37513 a 7654 35559 a
tx@Dict begin  PutEnd  end
 7654 35559 a 7654
35559 a
tx@Dict begin  { 398.33841 -4.26773 } PutCoor PutBegin  end
 7654 35559 a 8121 39296 a
 gsave currentpoint currentpoint translate 50 neg rotate neg exch neg
exch translate
 8121 39296 a FA(V)-78
b(orarlb)26 b(erg)12487 39296 y
 currentpoint grestore moveto
 12487 39296 a 7654 35559
a
tx@Dict begin  PutEnd  end
 7654 35559 a 7654 35559 a
tx@Dict begin  { 469.47026 -4.26773 } PutCoor PutBegin  end
 7654 35559 a 8121 37612 a
 gsave currentpoint currentpoint translate 50 neg rotate neg exch neg
exch translate

8121 37612 a FA(Wien)10290 37612 y
 currentpoint grestore moveto
 10290 37612 a 7654
35559 a
tx@Dict begin  PutEnd  end
 7654 35559 a 7654 35559 a
tx@Dict begin  { -42.67911 142.26372 } PutCoor PutBegin  end
 7654 35559 a 8264 45700
a
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 8264 45700 a FA(Anzahl)314 b(der)f(Sc)-26 b(h)g(\374lerInnen)18405
45700 y
 currentpoint grestore moveto
 18405 45700 a 7654 35559 a
tx@Dict begin  PutEnd  end
 7654 35559 a 64347
43433 a
currentpoint initclip moveto
 64347 43433 a 921 43433 a
 currentpoint currentpoint translate 1 0.7091 div 1 0.7091 div scale
neg exch neg exch translate
 921 43433 a 812 45978
a Fu(Quel)73 b(le:)341 b(http://www.bmukk.gv.at/schulstatistik)921
48524 y FH(Kreuze)449 b(jene)g(b)36 b(eiden)449 b(A)-36
b(ussagen)449 b(an,)h(die)f(aus)g(dem)g(Diagramm)h(gefolgert)h(w)-36
b(erden)449 b(k)-36 b(\366n-)921 50515 y(nen!)p 1062
53216 44260 45 v 1062 56279 45 3064 v 1770 55076 a(In)434
b(K\344rn)-36 b(ten)433 b(ist)g(der)h(An)-36 b(teil)433
b(an)h(AHS-Sc)-36 b(h)g(\374lerInnen)430 b(gr\366\377er)435
b(als)f(in)f(Tirol.)p 42912 56279 V 1 0 0 TeXcolorrgb
43621 55079 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 56279 V 1062 56323 44260 45 v 1062
59386 45 3064 v 1770 58183 a FH(In)h(Wien)g(gibt)f(es)h(die)g(meisten)f
(Sc)-36 b(h)g(\374lerInnen)431 b(in)j(den)f(1.-4.)h(Klassen.)p
42912 59386 V 45277 59386 V 1062 59431 44260 45 v 1062
64227 45 4797 v 1770 61291 a(Der)429 b(An)-36 b(teil)429
b(an)g(AHS-Sc)-36 b(h)g(\374lerInnen)425 b(ist)k(in)g(Wien)g(h\366her)f
(als)h(in)g(allen)g(anderen)1770 63282 y(Bundesl\344ndern.)p
42912 64227 V 1 0 0 TeXcolorrgb 43621 62161 a FF(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
64227 V 1062 64272 44260 45 v 1062 69327 45 5056 v 1770
66132 a FH(Es)424 b(gehen)f(in)h(Salzburg)f(mehr)g(Sc)-36
b(h)g(\374lerInnen)422 b(in)i(die)f(AHS)g(als)i(im)f(Burgenland)1770
68123 y(in)434 b(die)g(1.-4.)g(Klasse)g(insgesam)-36
b(t.)p 42912 69327 V 45277 69327 V 1062 69371 44260 45
v 1062 74168 45 4797 v 1770 71231 a(In)427 b(Nieder\366sterreic)-36
b(h)426 b(gehen)f(ca.)i(3-mal)g(so)g(viele)g(Sc)-36 b(h)g(\374lerInnen)
425 b(in)h(die)g(Haupt-)1770 73223 y(sc)-36 b(h)g(ule)433
b(wie)i(in)e(die)h(AHS.)p 42912 74168 V 45277 74168 V
1062 74212 44260 45 v 47992 7929 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 9921 a FD(WS)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 24421 81281
a FH(10)p 0 TeXcolorgray eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 24421 81281 a FH(11)p 0
TeXcolorgray eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)919 b(1.1)g(-)h(11)g(Computer-)f(und)
f(Videospiele)f(-)j(MC)g(-)g(Matura)-2385 4515 y(2013/14)718
b(1.)f(Neb)60 b(en)-60 b(termin)p 0 TeXcolorgray -1391
7823 a FH(11.)p 0 TeXcolorgray 651 w(Computer-)430 b(und)f(Videospiele)
j(m)-36 b(\374ssen)429 b(v)-36 b(or)432 b(ihrer)e(Markteinf\374hrung)g
(ein)h(Einstufungs-)887 9815 y(v)-36 b(erfahren)595 b(durc)-36
b(hlaufen,)594 b(b)36 b(ei)595 b(dem)g(festgelegt)h(wird,)f(w)-36
b(elc)g(hes)595 b(Mindestalter)f(f\374r)h(den)921 11806
y(Erw)-36 b(erb)577 b(des)g(Spiels)h(erreic)-36 b(h)g(t)577
b(sein)g(m)-36 b(uss.)579 b(Im)f(Jahr)f(2009)i(wurden)e(3)h(100)g
(Spiele)g(die-)921 13798 y(ser)484 b(Einstufung)f(un)-36
b(terzogen.)484 b(Im)g(Jahr)g(2008)h(w)-36 b(aren)484
b(es)g(um)g(114)h(Spiele)f(w)-36 b(eniger.)485 b(Die)921
15790 y(nac)-36 b(hstehende)432 b(Graphik)h(stellt)h(die)g(Ergebnisse)f
(der)g(A)-36 b(usw)g(ertungen)432 b(dar.)p 0 TeXcolorgray
0 TeXcolorgray 5828 19775 a Fv(V)-125 b(erteilung)501
b(der)d(F)-125 b(reigab)42 b(en)500 b(f\374r)e(die)h(Jahre)g(2008)g
(und)f(2009)7667 42980 y
 currentpoint currentpoint translate 0.69809 0.69809 scale neg exch
neg exch translate
 7667 42980 a 8101 42980 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 403.49094 a add def
/d 0.0 a add neg def /h 288.3602 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 8101
42980 a 12624 33496 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 12 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 362.63268 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.45444
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 1 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 202.68315 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 2845.27435
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 14.22636 138.28857 28.16837
138.28857 28.16837 0.0 14.22636 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1.0 .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.62745 0.62745 0.62745  setrgbcolor
 [ 42.67911 0.0 42.67911 149.38579 29.02191 149.38579 29.02191 0.0
 /Lineto /lineto load def 0  setlinejoin false NArray n 2 eq { 0 0
/n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed
} if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1
def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto
/n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub
x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11
sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos
add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add
y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.62745
0.62745 0.62745  setrgbcolor  1.0 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.62745 0.62745 0.62745  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 85.07385 0.0 85.07385 41.25893
71.13185 41.25893 71.13185 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1.0 .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.62745 0.62745 0.62745  setrgbcolor
 [ 85.9274 36.13712 99.5846 36.13712 99.5846 0.0 85.9274 0.0  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.62745
0.62745 0.62745  setrgbcolor  1.0 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.62745 0.62745 0.62745  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 128.03734 55.48615 141.97934
55.48615 141.97934 0.0 128.03734 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1.0 .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.62745 0.62745 0.62745  setrgbcolor
 [ 142.83289 49.79526 156.49008 49.79526 156.49008 0.0 142.83289 0.0
 /Lineto /lineto load def 0  setlinejoin false NArray n 2 eq { 0 0
/n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed
} if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1
def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto
/n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub
x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11
sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos
add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add
y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.62745
0.62745 0.62745  setrgbcolor  1.0 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.62745 0.62745 0.62745  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 184.94283 30.73079 198.88483
30.73079 198.88483 0.0 184.94283 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1.0 .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.62745 0.62745 0.62745  setrgbcolor
 [ 199.73837 29.59259 213.39557 29.59259 213.39557 0.0 199.73837 0.0
 /Lineto /lineto load def 0  setlinejoin false NArray n 2 eq { 0 0
/n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed
} if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1
def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto
/n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub
x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11
sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos
add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add
y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.62745
0.62745 0.62745  setrgbcolor  1.0 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.62745 0.62745 0.62745  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 241.84831 14.7963 255.79031
14.7963 255.79031 0.0 241.84831 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1.0 .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.62745 0.62745 0.62745  setrgbcolor
 [ 256.64386 16.50357 270.30106 16.50357 270.30106 0.0 256.64386 0.0
 /Lineto /lineto load def 0  setlinejoin false NArray n 2 eq { 0 0
/n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed
} if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1
def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto
/n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub
x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11
sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos
add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add
y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.62745
0.62745 0.62745  setrgbcolor  1.0 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.62745 0.62745 0.62745  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 298.7538 3.9836 312.6958
3.9836 312.6958 0.0 298.7538 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0  setgray  1.0 .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.62745 0.62745 0.62745  setrgbcolor
 [ 313.54935 3.13 327.20654 3.13 327.20654 0.0 313.54935 0.0  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.62745
0.62745 0.62745  setrgbcolor  1.0 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.62745 0.62745 0.62745  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  [ 128.03734 170.72662 128.03734
163.613 119.50143 163.613 119.50143 170.72662  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0  setgray  1.0 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.62745 0.62745 0.62745  setrgbcolor
 [ 128.03734 156.4994 128.03734 149.38579 119.50143 149.38579 119.50143
156.4994  /Lineto /lineto load def 0  setlinejoin false NArray n 2
eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed
} if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1
def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto
/n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub
x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11
sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos
add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add
y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0.62745
0.62745 0.62745  setrgbcolor  1.0 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.62745 0.62745 0.62745  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 362.63268  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 362.63268  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 202.68315  def /dT 3729358 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 202.68315
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 362.63268
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 202.68315  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 202.68315  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 362.63268  def /dT 1864790 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 2.84544  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 2.84544  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 202.68315
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 362.63268
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
10437 33804 a FG(0)158 b(\045)9967 30654 y(10)g(\045)9967
27504 y(20)g(\045)9967 24354 y(30)g(\045)9967 21204 y(40)g(\045)9967
18055 y(50)g(\045)9967 14905 y(60)g(\045)12624 33496
y
tx@Dict begin  { 135.2786 170.77985 } PutCoor PutBegin  end
 12624 33496 a 571 x FA(2008)12624 33496 y
tx@Dict begin  PutEnd  end
 12624 33496
a 12624 33496 a
tx@Dict begin  { 134.65385 156.60056 } PutCoor PutBegin  end
 12624 33496 a 571 x FA(2009)12624 33496
y
tx@Dict begin  PutEnd  end
 12624 33496 a 12624 33496 a
tx@Dict begin  { -22.76227 -1.13815 } PutCoor PutBegin  end
 12624 33496 a 13152 42775
a
 gsave currentpoint currentpoint translate 60 neg rotate neg exch neg
exch translate
 13152 42775 a FA(ohne)314 b(Altersb)26 b(esc)-26 b(hr\344nkung)23513
42775 y
 currentpoint grestore moveto
 23513 42775 a 12624 33496 a
tx@Dict begin  PutEnd  end
 12624 33496 a 12624
33496 a
tx@Dict begin  { 56.90549 -1.13815 } PutCoor PutBegin  end
 12624 33496 a 13152 38023 a
 gsave currentpoint currentpoint translate 60 neg rotate neg exch neg
exch translate
 13152 38023 a FA(ab)314
b(6)g(Jahren)18027 38023 y
 currentpoint grestore moveto
 18027 38023 a 12624 33496
a
tx@Dict begin  PutEnd  end
 12624 33496 a 12624 33496 a
tx@Dict begin  { 113.81097 -1.13815 } PutCoor PutBegin  end
 12624 33496 a 13152 38430
a
 gsave currentpoint currentpoint translate 60 neg rotate neg exch neg
exch translate
 13152 38430 a FA(ab)g(12)g(Jahren)18497 38430 y
 currentpoint grestore moveto
 18497
38430 a 12624 33496 a
tx@Dict begin  PutEnd  end
 12624 33496 a 12624 33496 a
tx@Dict begin  { 170.71646 -1.13815 } PutCoor PutBegin  end
 12624
33496 a 13152 38430 a
 gsave currentpoint currentpoint translate 60 neg rotate neg exch neg
exch translate
 13152 38430 a FA(ab)g(16)g(Jahren)18497
38430 y
 currentpoint grestore moveto
 18497 38430 a 12624 33496 a
tx@Dict begin  PutEnd  end
 12624 33496 a 12624
33496 a
tx@Dict begin  { 213.39557 -1.13815 } PutCoor PutBegin  end
 12624 33496 a 13152 41237 a
 gsave currentpoint currentpoint translate 60 neg rotate neg exch neg
exch translate
 13152 41237 a FA(k)-26
b(eine)314 b(Jugendfreigab)26 b(e)21738 41237 y
 currentpoint grestore moveto
 21738
41237 a 12624 33496 a
tx@Dict begin  PutEnd  end
 12624 33496 a 12624 33496 a
tx@Dict begin  { 270.30106 -1.13815 } PutCoor PutBegin  end
 12624
33496 a 13152 41270 a
 gsave currentpoint currentpoint translate 60 neg rotate neg exch neg
exch translate
 13152 41270 a FA(k)-26 b(eine)314
b(Kennzeic)-26 b(hn)g(ung)21776 41270 y
 currentpoint grestore moveto
 21776 41270 a
12624 33496 a
tx@Dict begin  PutEnd  end
 12624 33496 a 12624 33496 a
tx@Dict begin  { 9.10507 145.11763 } PutCoor PutBegin  end
 12624 33496
a 499 x Ft(48)p Fs(;)p Ft(6\045)12624 33496 y
tx@Dict begin  PutEnd  end
 12624 33496
a 12624 33496 a
tx@Dict begin  { 28.45274 156.21483 } PutCoor PutBegin  end
 12624 33496 a 499 x Ft(52)p Fs(;)p Ft(5\045)12624
33496 y
tx@Dict begin  PutEnd  end
 12624 33496 a 12624 33496 a
tx@Dict begin  { 66.01056 48.08797 } PutCoor PutBegin  end
 12624 33496 a 499
x Ft(14)p Fs(;)p Ft(5\045)12624 33496 y
tx@Dict begin  PutEnd  end
 12624 33496 a
12624 33496 a
tx@Dict begin  { 85.35823 42.96622 } PutCoor PutBegin  end
 12624 33496 a 499 x Ft(12)p Fs(;)p Ft(7\045)12624
33496 y
tx@Dict begin  PutEnd  end
 12624 33496 a 12624 33496 a
tx@Dict begin  { 122.91605 62.31519 } PutCoor PutBegin  end
 12624 33496 a 499
x Ft(19)p Fs(;)p Ft(5\045)12624 33496 y
tx@Dict begin  PutEnd  end
 12624 33496 a
12624 33496 a
tx@Dict begin  { 142.26372 56.6243 } PutCoor PutBegin  end
 12624 33496 a 499 x Ft(17)p Fs(;)p Ft(5\045)12624
33496 y
tx@Dict begin  PutEnd  end
 12624 33496 a 12624 33496 a
tx@Dict begin  { 179.82153 37.55984 } PutCoor PutBegin  end
 12624 33496 a 499
x Ft(10)p Fs(;)p Ft(8\045)12624 33496 y
tx@Dict begin  PutEnd  end
 12624 33496 a
12624 33496 a
tx@Dict begin  { 199.1692 36.42168 } PutCoor PutBegin  end
 12624 33496 a 499 x Ft(10)p Fs(;)p Ft(4\045)12624
33496 y
tx@Dict begin  PutEnd  end
 12624 33496 a 12624 33496 a
tx@Dict begin  { 240.42558 21.62538 } PutCoor PutBegin  end
 12624 33496 a 499
x Ft(5)p Fs(;)p Ft(2\045)12624 33496 y
tx@Dict begin  PutEnd  end
 12624 33496 a
12624 33496 a
tx@Dict begin  { 256.07469 23.33263 } PutCoor PutBegin  end
 12624 33496 a 499 x Ft(5)p Fs(;)p Ft(8\045)12624
33496 y
tx@Dict begin  PutEnd  end
 12624 33496 a 12624 33496 a
tx@Dict begin  { 298.7538 10.2436 } PutCoor PutBegin  end
 12624 33496 a 499
x Ft(1)p Fs(;)p Ft(4\045)12624 33496 y
tx@Dict begin  PutEnd  end
 12624 33496 a
12624 33496 a
tx@Dict begin  { 312.98018 9.38997 } PutCoor PutBegin  end
 12624 33496 a 499 x Ft(1)p Fs(;)p Ft(1\045)12624
33496 y
tx@Dict begin  PutEnd  end
 12624 33496 a 52766 42980 a
currentpoint initclip moveto
 52766 42980 a 7667
42980 a
 currentpoint currentpoint translate 1 0.69809 div 1 0.69809 div scale
neg exch neg exch translate
 7667 42980 a 5068 45526 a FA(Datenquelle:)315
b(h)-26 b(ttp://www.usk.de/pruefv)g
(erfahren/statistik/jahresbilanz-2009/)316 b([21.05.2014])921
49510 y FH(Kreuze)433 b(die)h(b)36 b(eiden)433 b(zutre\033enden)e(A)-36
b(ussagen)434 b(an!)p 1062 52469 44260 45 v 1062 57524
45 5056 v 1770 54329 a(Die)h(Anzahl)e(der)g(im)h(Jahr)g(2009)h(ohne)e
(Altersb)36 b(esc)-36 b(hr\344nkung)432 b(freigegeb)36
b(enen)1770 56321 y(Spiele)434 b(hat)f(sic)-36 b(h)434
b(im)g(V)-108 b(ergleic)-36 b(h)433 b(zum)g(Jahr)h(2008)h(um)e(et)-36
b(w)g(a)434 b(10)217 b(\045)434 b(v)-36 b(erringert.)p
42912 57524 V 45277 57524 V 1062 57568 44260 45 v 1062
62623 45 5056 v 1770 59428 a(Die)342 b(Anzahl)e(der)g(in)g(der)g
(Kategorie)i(\022freigegeb)36 b(en)342 b(ab)e(16)h(Jahren\020)f
(eingestuften)1770 61420 y(Spiele)434 b(ist)g(in)f(den)g(b)36
b(eiden)433 b(Jahren)g(2008)i(und)d(2009)j(nahezu)e(gleic)-36
b(h.)p 42912 62623 V 1 0 0 TeXcolorrgb 43621 60428 a
FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45277 62623 V 1062 62668 44260 45 v 1062 67723 45 5056
v 1770 64528 a FH(Im)350 b(Jahr)g(2008)h(wurde)e(ann\344hernd)g(jedes)h
(dritte)f(Spiel)h(f\374r)f(Kinder)h(ab)f(6)h(Jahren)1770
66519 y(freigegeb)36 b(en.)p 42912 67723 V 45277 67723
V 1062 67767 44260 45 v 1062 72822 45 5056 v 1770 69627
a(Im)422 b(Jahr)g(2009)h(wurden)e(w)-36 b(eniger)422
b(als)g(500)h(Spiele)e(der)g(Kategorie)i(\022freigegeb)36
b(en)1770 71619 y(ab)434 b(12)g(Jahren\020)g(zugeordnet.)p
42912 72822 V 45277 72822 V 1062 72866 44260 45 v 1062
75929 45 3064 v 1770 74726 a(Im)g(Jahr)g(2008)h(erhielt)e(et)-36
b(w)g(a)434 b(jedes)g(zw)-36 b(anzigste)434 b(Spiel)g(k)-36
b(eine)434 b(Jugendfreigab)36 b(e.)p 42912 75929 V 1 0 0
TeXcolorrgb 43621 74730 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45277 75929 V 1062 75974 44260
45 v 47992 7823 a FE(___/1)p 1 0 0 TeXcolorrgb 47905
9815 a FD(WS)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 24421 81281 a FH(12)p 0
TeXcolorgray eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 54804 45 v -2331 7116 a FI(WS)759
b(1.1)h(-)g(12)g(W)-179 b(anderungsbilanz)756 b(f\374r)j(\326sterreic)
-60 b(h)759 b(-)i(MC)f(-)g(Ma-)-2331 10139 y(tura)717
b(2016/17)g(-)h(Haupttermin)p 0 TeXcolorgray -1391 13446
a FH(12.)47613 b FE(___/1)p 0 TeXcolorgray -50901 w FH(Die)546
b(Di\033erenz)e(aus)h(der)f(Anzahl)h(der)f(in)h(einem)g(b)36
b(estimm)-36 b(ten)544 b(Zeitraum)h(in)f(ein)h(Land)921
15438 y(zugew)-36 b(anderten)579 b(P)-36 b(ersonen)580
b(und)e(der)i(Anzahl)g(der)g(in)f(diesem)i(Zeitraum)e(aus)h(diesem)921
17430 y(Land)433 b(abgew)-36 b(anderten)433 b(P)-36 b(ersonen)433
b(b)36 b(ezeic)-36 b(hnet)433 b(man)g(als)h(W)-108 b(anderungsbilanz.)
921 19975 y(In)485 b(der)f(nac)-36 b(hstehenden)483 b(Gra\034k)i(ist)g
(die)g(j\344hrlic)-36 b(he)485 b(W)-108 b(anderungsbilanz)484
b(f\374r)h(\326sterreic)-36 b(h)921 21967 y(in)433 b(den)g(Jahren)g(v)
-36 b(on)434 b(1961)h(bis)f(2012)h(dargestellt.)p 0 TeXcolorgray
3147 46077 a

 3147 46077 a 3147 46077 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs


 3147 46077 a


 pgfr

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 [1.0 0.0 0.0 1.0 -36.72902 -16.22862 ] concat

 pgfs


 7228
44274 a

 7228 44274 a 7228 44274 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 save

 save

 0.3985 pgfw
 0.75 TeXcolorgray
 [ 2.98883 2.98883 ] 0.0 setdash

 8.14871 0.0 moveto

 8.14871 179.10362 lineto

 16.29742 0.0 moveto

 16.29742 179.10362 lineto

 24.44614 0.0 moveto

 24.44614 179.10362 lineto

 32.59486 0.0 moveto

 32.59486 179.10362 lineto

 40.74358 0.0 moveto

 40.74358 179.10362 lineto

 48.89229 0.0 moveto

 48.89229 179.10362 lineto

 57.041 0.0 moveto

 57.041 179.10362 lineto

 65.18973 0.0 moveto

 65.18973 179.10362 lineto

 73.33844 0.0 moveto

 73.33844 179.10362 lineto

 81.48715 0.0 moveto

 81.48715 179.10362 lineto

 89.63588 0.0 moveto

 89.63588 179.10362 lineto

 97.78459 0.0 moveto

 97.78459 179.10362 lineto

 105.9333 0.0 moveto

 105.9333 179.10362 lineto

 114.08202 0.0 moveto

 114.08202 179.10362 lineto

 122.23074 0.0 moveto

 122.23074 179.10362 lineto

 130.37946 0.0 moveto

 130.37946 179.10362 lineto

 138.52817 0.0 moveto

 138.52817 179.10362 lineto

 146.6769 0.0 moveto

 146.6769 179.10362 lineto

 154.8256 0.0 moveto

 154.8256 179.10362 lineto

 162.97432 0.0 moveto

 162.97432 179.10362 lineto

 171.12303 0.0 moveto

 171.12303 179.10362 lineto

 179.27176 0.0 moveto

 179.27176 179.10362 lineto

 187.42047 0.0 moveto

 187.42047 179.10362 lineto

 195.56918 0.0 moveto

 195.56918 179.10362 lineto

 203.71791 0.0 moveto

 203.71791 179.10362 lineto

 211.86662 0.0 moveto

 211.86662 179.10362 lineto

 220.01534 0.0 moveto

 220.01534 179.10362 lineto

 228.16405 0.0 moveto

 228.16405 179.10362 lineto

 236.31277 0.0 moveto

 236.31277 179.10362 lineto

 244.46149 0.0 moveto

 244.46149 179.10362 lineto

 252.6102 0.0 moveto

 252.6102 179.10362 lineto

 260.75893 0.0 moveto

 260.75893 179.10362 lineto

 268.90764 0.0 moveto

 268.90764 179.10362 lineto

 277.05635 0.0 moveto

 277.05635 179.10362 lineto

 285.20506 0.0 moveto

 285.20506 179.10362 lineto

 293.35379 0.0 moveto

 293.35379 179.10362 lineto

 301.5025 0.0 moveto

 301.5025 179.10362 lineto

 309.65121 0.0 moveto

 309.65121 179.10362 lineto

 317.79994 0.0 moveto

 317.79994 179.10362 lineto

 325.94865 0.0 moveto

 325.94865 179.10362 lineto

 334.09737 0.0 moveto

 334.09737 179.10362 lineto

 342.24608 0.0 moveto

 342.24608 179.10362 lineto

 350.3948 0.0 moveto

 350.3948 179.10362 lineto

 358.54352 0.0 moveto

 358.54352 179.10362 lineto

 366.69223 0.0 moveto

 366.69223 179.10362 lineto

 374.84096 0.0 moveto

 374.84096 179.10362 lineto

 382.98967 0.0 moveto

 382.98967 179.10362 lineto

 391.13838 0.0 moveto

 391.13838 179.10362 lineto

 399.2871 0.0 moveto

 399.2871 179.10362 lineto

 407.43582 0.0 moveto

 407.43582 179.10362 lineto

 415.58453 0.0 moveto

 415.58453 179.10362 lineto

 423.73325 0.0 moveto

 423.73325 179.10362 lineto

 pgfstr
 0
TeXcolorgray
 restore

 restore

 save

 save

 0.3985 pgfw
 0.75 TeXcolorgray
 0 setgray

 0.0 14.9253 moveto

 423.73325 14.9253 lineto

 0.0 44.7759 moveto

 423.73325 44.7759 lineto

 0.0 74.62651 moveto

 423.73325 74.62651 lineto

 0.0 104.47711 moveto

 423.73325 104.47711 lineto

 0.0 134.32771 moveto

 423.73325 134.32771 lineto

 0.0 164.17831 moveto

 423.73325 164.17831 lineto

 pgfstr
 0 TeXcolorgray
 restore

 save

 0.3985 pgfw
 0.75 TeXcolorgray
 0 setgray

 0.0 0.0 moveto

 423.73325 0.0 lineto

 0.0 29.8506 moveto

 423.73325 29.8506 lineto

 0.0 59.7012 moveto

 423.73325 59.7012 lineto

 0.0 89.5518 moveto

 423.73325 89.5518 lineto

 0.0 119.4024 moveto

 423.73325 119.4024 lineto

 0.0 149.25302 moveto

 423.73325 149.25302 lineto

 0.0 179.10362 moveto

 423.73325 179.10362 lineto

 pgfstr

0 TeXcolorgray
 restore

 restore

 save

 save

 0.19925 pgfw
 0.5 TeXcolorgray
 8.14871 -2.8349 moveto

 8.14871 0.0 lineto

 16.29742 -2.8349 moveto

 16.29742 0.0 lineto

 24.44614 -2.8349 moveto

 24.44614 0.0 lineto

 32.59486 -2.8349 moveto

 32.59486 0.0 lineto

 40.74358 -2.8349 moveto

 40.74358 0.0 lineto

 48.89229 -2.8349 moveto

 48.89229 0.0 lineto

 57.041 -2.8349 moveto

 57.041 0.0 lineto

 65.18973 -2.8349 moveto

 65.18973 0.0 lineto

 73.33844 -2.8349 moveto

 73.33844 0.0 lineto

 81.48715 -2.8349 moveto

 81.48715 0.0 lineto

 89.63588 -2.8349 moveto

 89.63588 0.0 lineto

 97.78459 -2.8349 moveto

 97.78459 0.0 lineto

 105.9333 -2.8349 moveto

 105.9333 0.0 lineto

 114.08202 -2.8349 moveto

 114.08202 0.0 lineto

 122.23074 -2.8349 moveto

 122.23074 0.0 lineto

 130.37946 -2.8349 moveto

 130.37946 0.0 lineto

 138.52817 -2.8349 moveto

 138.52817 0.0 lineto

 146.6769 -2.8349 moveto

 146.6769 0.0 lineto

 154.8256 -2.8349 moveto

 154.8256 0.0 lineto

 162.97432 -2.8349 moveto

 162.97432 0.0 lineto

 171.12303 -2.8349 moveto

 171.12303 0.0 lineto

 179.27176 -2.8349 moveto

 179.27176 0.0 lineto

 187.42047 -2.8349 moveto

 187.42047 0.0 lineto

 195.56918 -2.8349 moveto

 195.56918 0.0 lineto

 203.71791 -2.8349 moveto

 203.71791 0.0 lineto

 211.86662 -2.8349 moveto

 211.86662 0.0 lineto

 220.01534 -2.8349 moveto

 220.01534 0.0 lineto

 228.16405 -2.8349 moveto

 228.16405 0.0 lineto

 236.31277 -2.8349 moveto

 236.31277 0.0 lineto

 244.46149 -2.8349 moveto

 244.46149 0.0 lineto

 252.6102 -2.8349 moveto

 252.6102 0.0 lineto

 260.75893 -2.8349 moveto

 260.75893 0.0 lineto

 268.90764 -2.8349 moveto

 268.90764 0.0 lineto

 277.05635 -2.8349 moveto

 277.05635 0.0 lineto

 285.20506 -2.8349 moveto

 285.20506 0.0 lineto

 293.35379 -2.8349 moveto

 293.35379 0.0 lineto

 301.5025 -2.8349 moveto

 301.5025 0.0 lineto

 309.65121 -2.8349 moveto

 309.65121 0.0 lineto

 317.79994 -2.8349 moveto

 317.79994 0.0 lineto

 325.94865 -2.8349 moveto

 325.94865 0.0 lineto

 334.09737 -2.8349 moveto

 334.09737 0.0 lineto

 342.24608 -2.8349 moveto

 342.24608 0.0 lineto

 350.3948 -2.8349 moveto

 350.3948 0.0 lineto

 358.54352 -2.8349 moveto

 358.54352 0.0 lineto

 366.69223 -2.8349 moveto

 366.69223 0.0 lineto

 374.84096 -2.8349 moveto

 374.84096 0.0 lineto

 382.98967 -2.8349 moveto

 382.98967 0.0 lineto

 391.13838 -2.8349 moveto

 391.13838 0.0 lineto

 399.2871 -2.8349 moveto

 399.2871 0.0 lineto

 407.43582 -2.8349 moveto

 407.43582 0.0 lineto

 415.58453 -2.8349 moveto

 415.58453 0.0 lineto

 423.73325 -2.8349 moveto

 423.73325 0.0 lineto

 pgfstr
 0 TeXcolorgray
 restore

 save

 0.19925 pgfw
 0.5 TeXcolorgray
 0.0 -4.25194 moveto

 0.0 0.0 lineto

 40.74358 -4.25194 moveto

 40.74358 0.0 lineto

 81.48715 -4.25194 moveto

 81.48715 0.0 lineto

 122.23074 -4.25194 moveto

 122.23074 0.0 lineto

 162.97432 -4.25194 moveto

 162.97432 0.0 lineto

 203.71791 -4.25194 moveto

 203.71791 0.0 lineto

 244.46149 -4.25194 moveto

 244.46149 0.0 lineto

 285.20506 -4.25194 moveto

 285.20506 0.0 lineto

 325.94865 -4.25194 moveto

 325.94865 0.0 lineto

 366.69223 -4.25194 moveto

 366.69223 0.0 lineto

 407.43582 -4.25194 moveto

 407.43582 0.0 lineto

 pgfstr

0 TeXcolorgray
 restore

 restore

 save

 save

 0.19925 pgfw
 0.5 TeXcolorgray
 0.0 14.9253 moveto

 2.83487 14.9253 lineto

 0.0 44.7759 moveto

 2.83487 44.7759 lineto

 0.0 74.62651 moveto

 2.83487 74.62651 lineto

 0.0 104.47711 moveto

 2.83487 104.47711 lineto

 0.0 134.32771 moveto

 2.83487 134.32771 lineto

 0.0 164.17831 moveto

 2.83487 164.17831 lineto

 423.73325 14.9253 moveto

 420.89836 14.9253 lineto

 423.73325 44.7759 moveto

 420.89836 44.7759 lineto

 423.73325 74.62651 moveto

 420.89836 74.62651 lineto

 423.73325 104.47711 moveto

 420.89836 104.47711 lineto

 423.73325 134.32771 moveto

 420.89836 134.32771 lineto

 423.73325 164.17831 moveto

 420.89836 164.17831 lineto

 pgfstr
 0 TeXcolorgray
 restore

 save

 0.19925 pgfw
 0.5 TeXcolorgray
 0.0 0.0 moveto

 4.25189 0.0 lineto

 0.0 29.8506 moveto

 4.25189 29.8506 lineto

 0.0 59.7012 moveto

 4.25189 59.7012 lineto

 0.0 89.5518 moveto

 4.25189 89.5518 lineto

 0.0 119.4024 moveto

 4.25189 119.4024 lineto

 0.0 149.25302 moveto

 4.25189 149.25302 lineto

 0.0 179.10362 moveto

 4.25189 179.10362 lineto

 423.73325 0.0 moveto

 419.48134 0.0 lineto

 423.73325 29.8506 moveto

 419.48134 29.8506 lineto

 423.73325 59.7012 moveto

 419.48134 59.7012 lineto

 423.73325 89.5518 moveto

 419.48134 89.5518 lineto

 423.73325 119.4024 moveto

 419.48134 119.4024 lineto

 423.73325 149.25302 moveto

 419.48134 149.25302 lineto

 423.73325 179.10362 moveto

 419.48134 179.10362 lineto

 pgfstr

0 TeXcolorgray
 restore

 restore

 0.0 0.0 moveto

 0.0 179.10362 lineto

 423.73325 179.10362 lineto

 423.73325 0.0 lineto

 0.0 0.0 lineto

 closepath

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -4.48325 -12.90805 ] concat

 pgfs



 0 setgray
 7228 44274 a FA(1961)7228 44274 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 36.26033 -12.90805 ] concat

 pgfs



 0 setgray
 7228
44274 a FA(1966)7228 44274 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 77.0039 -12.90805 ] concat

 pgfs



 0 setgray
 7228 44274 a FA(1971)7228
44274 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 117.7475 -12.90805 ] concat

 pgfs



 0 setgray
 7228 44274 a FA(1976)7228 44274 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 158.49107 -12.90805 ] concat

 pgfs



 0 setgray
 7228 44274
a FA(1981)7228 44274 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 199.23466 -12.90805 ] concat

 pgfs



 0 setgray
 7228 44274 a FA(1986)7228 44274
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 239.97824 -12.90805 ] concat

 pgfs



 0 setgray
 7228 44274 a FA(1991)7228 44274 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 280.72182 -12.90805 ] concat

 pgfs



 0 setgray
 7228 44274 a FA(1996)7228
44274 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 321.46541 -12.90805 ] concat

 pgfs



 0 setgray
 7228 44274 a FA(2001)7228 44274 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 362.20898 -12.90805 ] concat

 pgfs



 0 setgray
 7228 44274
a FA(2006)7228 44274 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 411.42093 -7.77176 ] concat

 pgfs



 0 setgray
 7228 44274 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -33.40845 -3.13689 ] concat

 pgfs



 0 setgray
 7228 44274 a FD(-40)186
b(000)7228 44274 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -33.40845 26.7137 ] concat

 pgfs



 0 setgray
 7228 44274 a FD(-20)g(000)7228 44274
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -8.50119 56.5643 ] concat

 pgfs



 0 setgray
 7228 44274 a FD(0)7228 44274 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -30.08755 86.4149 ] concat

 pgfs



 0 setgray
 7228 44274 a FD(20)g(000)7228
44274 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -30.08755 116.26552 ] concat

 pgfs



 0 setgray
 7228 44274 a FD(40)g(000)7228 44274 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -30.08755 146.11612 ] concat

 pgfs



 0 setgray
 7228 44274
a FD(60)g(000)7228 44274 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -30.08755 175.96672 ] concat

 pgfs



 0 setgray
 7228 44274 a FD(80)g(000)7228
44274 y


 pgfr

 restore

 restore

 save

 save

 save

 0.19925 pgfw
 0.5 TeXcolorgray
 415.58453 -4.25194 moveto

 415.58453 0.0 lineto

 pgfstr
 0 TeXcolorgray
 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 411.10129 -12.90805 ] concat

 pgfs



 0 setgray
 7228 44274 a
FA(2012)7228 44274 y


 pgfr

 restore

 restore

 restore

 0.0 0.0 moveto

 423.73325 0.0 lineto

 423.73325 179.10362 lineto

 0.0 179.10362 lineto

 closepath

 clip

 newpath

 save
 0 0 1 TeXcolorrgb
 /pgffc{0.7 0.7 1 setrgbcolor}def

 /pgfsc{}def/pgffc{}def
 0.4 TeXcolorgray
 -2.98505 6.97394 0.58739 59.7012 pgfe

 2.23878 6.97394 8.7361 59.7012 pgfe

 7.46265 6.97394 16.88481 59.7012 pgfe

 5.97011 6.97394 25.03352 59.7012 pgfe

 15.07455 6.97394 33.18225 59.7012 pgfe

 28.35806 6.97394 41.33096 59.7012 pgfe

 31.34312 6.97394 49.47968 59.7012 pgfe

 -8.95517 6.97394 57.6284 59.7012 pgfe

 7.46265 6.97394 65.77711 59.7012 pgfe

 14.9253 6.97394 73.92583 59.7012 pgfe

 47.76096 6.97394 82.07454 59.7012 pgfe

 52.23856 6.97394 90.22327 59.7012 pgfe

 50.74602 6.97394 98.37198 59.7012 pgfe

 -26.86554 6.97394 106.52069 59.7012 pgfe

 -35.82072 6.97394 114.66942 59.7012 pgfe

 11.94023 6.97394 122.81813 59.7012 pgfe

 17.91035 6.97394 130.96684 59.7012 pgfe

 -13.43277 6.97394 139.11555 59.7012 pgfe

 -1.49252 6.97394 147.26428 59.7012 pgfe

 14.9253 6.97394 155.413 59.7012 pgfe

 44.02963 6.97394 163.5617 59.7012 pgfe

 -34.32819 6.97394 171.71043 59.7012 pgfe

 -2.23878 6.97394 179.85915 59.7012 pgfe

 4.47758 6.97394 188.00786 59.7012 pgfe

 7.46265 6.97394 196.15657 59.7012 pgfe

 8.20891 6.97394 204.3053 59.7012 pgfe

 2.98505 6.97394 212.45401 59.7012 pgfe

 19.4029 6.97394 220.60272 59.7012 pgfe

 67.16385 6.97394 228.75145 59.7012 pgfe

 88.05928 6.97394 236.90016 59.7012 pgfe

 114.92482 6.97394 245.04887 59.7012 pgfe

 107.46217 6.97394 253.19759 59.7012 pgfe

 49.2535 6.97394 261.34631 59.7012 pgfe

 4.47758 6.97394 269.49503 59.7012 pgfe

 2.98505 6.97394 277.64374 59.7012 pgfe

 5.97011 6.97394 285.79247 59.7012 pgfe

 1.49252 6.97394 293.94118 59.7012 pgfe

 11.94023 6.97394 302.08989 59.7012 pgfe

 29.8506 6.97394 310.2386 59.7012 pgfe

 25.373 6.97394 318.38733 59.7012 pgfe

 47.76096 6.97394 326.53604 59.7012 pgfe

 48.50723 6.97394 334.68475 59.7012 pgfe

 59.7012 6.97394 342.83348 59.7012 pgfe

 76.11903 6.97394 350.9822 59.7012 pgfe

 67.16385 6.97394 359.1309 59.7012 pgfe

 35.82072 6.97394 367.27962 59.7012 pgfe

 37.31325 6.97394 375.42834 59.7012 pgfe

 35.82072 6.97394 383.57706 59.7012 pgfe

 25.373 6.97394 391.72577 59.7012 pgfe

 31.34312 6.97394 399.8745 59.7012 pgfe

 45.52217 6.97394 408.02321 59.7012 pgfe

 65.67133 6.97394 416.17192 59.7012 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

0 0 1 TeXcolorrgb 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 0.0 0.0 moveto

 0.0 0.0 moveto

 0.0 2.98505 lineto

 8.14871 2.98505 lineto

 8.14871 0.0 lineto

 closepath

 8.14871 2.98505 moveto

 pgffill
 0 TeXcolorgray
 restore

 save

0 TeXcolorgray
 40.74358 0.0 moveto

 40.74358 0.0 moveto

 40.74358 2.98505 lineto

 48.89229 2.98505 lineto

 48.89229 0.0 lineto

 closepath

 48.89229 2.98505 moveto

 pgffill
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 81.48715 0.0 moveto

 81.48715 0.0 moveto

 81.48715 2.98505 lineto

 89.63588 2.98505 lineto

 89.63588 0.0 lineto

 closepath

 89.63588 2.98505 moveto

 pgffill
 0 TeXcolorgray
 restore

 save

0 TeXcolorgray
 122.23074 0.0 moveto

 122.23074 0.0 moveto

 122.23074 2.98505 lineto

 130.37946 2.98505 lineto

 130.37946 0.0 lineto

 closepath

 130.37946 2.98505 moveto

 pgffill
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 162.97432 0.0 moveto

 162.97432 0.0 moveto

 162.97432 2.98505 lineto

 171.12303 2.98505 lineto

 171.12303 0.0 lineto

 closepath

 171.12303 2.98505 moveto

 pgffill
 0 TeXcolorgray
 restore

 save

0 TeXcolorgray
 203.71791 0.0 moveto

 203.71791 0.0 moveto

 203.71791 2.98505 lineto

 211.86662 2.98505 lineto

 211.86662 0.0 lineto

 closepath

 211.86662 2.98505 moveto

 pgffill
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 244.46149 0.0 moveto

 244.46149 0.0 moveto

 244.46149 2.98505 lineto

 252.6102 2.98505 lineto

 252.6102 0.0 lineto

 closepath

 252.6102 2.98505 moveto

 pgffill
 0 TeXcolorgray
 restore

 save

0 TeXcolorgray
 285.20506 0.0 moveto

 285.20506 0.0 moveto

 285.20506 2.98505 lineto

 293.35379 2.98505 lineto

 293.35379 0.0 lineto

 closepath

 293.35379 2.98505 moveto

 pgffill
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 325.94865 0.0 moveto

 325.94865 0.0 moveto

 325.94865 2.98505 lineto

 334.09737 2.98505 lineto

 334.09737 0.0 lineto

 closepath

 334.09737 2.98505 moveto

 pgffill
 0 TeXcolorgray
 restore

 save

0 TeXcolorgray
 366.69223 0.0 moveto

 366.69223 0.0 moveto

 366.69223 2.98505 lineto

 374.84096 2.98505 lineto

 374.84096 0.0 lineto

 closepath

 374.84096 2.98505 moveto

 pgffill
 0 TeXcolorgray
 restore

 save
 0 TeXcolorgray
 415.58453 0.0 moveto

 415.58453 0.0 moveto

 415.58453 2.98505 lineto

 423.73325 2.98505 lineto

 423.73325 0.0 lineto

 closepath

 423.73325 2.98505 moveto

 pgffill
 0 TeXcolorgray
 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 148.7276 190.53828 ] concat

 pgfs



 0 setgray

7228 44274 a FD(W)-92 b(anderungsbilanz)370 b(1961-2012)7228
44274 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 3147 46077 a


 pgfr

 restore

 save

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 0 TeXcolorgray 4527
50593 a Fz(Quelle:)276 b(ST)-65 b(A)g(TISTIK)277 b(A)-22
b(USTRIA,)278 b(Errec)-22 b(hnete)275 b(W)-65 b(anderungsbilanz)275
b(1961-1995;)g(W)-65 b(anderungsstatistik)275 b(1996-2012;)h
(2007-2011:)f(revidierte)g(Daten.)21003 52198 y(W)-65
b(anderungsbilanz:)274 b(Zuz\374ge)j(aus)f(dem)h(A)-22
b(usland)277 b(min)-22 b(us)277 b(W)-65 b(egz\374ge)276
b(in)g(das)h(A)-22 b(usland)277 b(\(adaptiert\).)p 0
TeXcolorgray 921 55179 a FH(Kreuze)418 b(die)g(b)36 b(eiden)417
b(A)-36 b(ussagen)418 b(an,)g(die)g(eine)g(k)-36 b(orrekte)418
b(In)-36 b(terpretation)417 b(der)h(Gra\034k)f(dar-)921
57171 y(stellen!)p 0 TeXcolorgray 24421 81281 a(13)p
0 TeXcolorgray eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1062 209 44260 45 v 1062 6998 45 6789
v 1770 2069 a FH(A)-36 b(us)337 b(dem)f(angegeb)36 b(enen)337
b(W)-108 b(ert)336 b(f\374r)h(das)g(Jahr)f(2003)j(kann)d(man)h
(ablesen,)g(dass)g(in)1770 4061 y(diesem)377 b(Jahr)f(um)g(ca.)h(40)217
b(000)378 b(P)-36 b(ersonen)376 b(mehr)f(zugew)-36 b(andert)376
b(als)h(abgew)-36 b(andert)1770 6053 y(sind.)p 42912
6998 V 1 0 0 TeXcolorrgb 43621 3935 a FF(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 6998 V 1062 7042
44260 45 v 1062 12097 45 5056 v 1770 8902 a FH(Der)434
b(Zu)-36 b(w)g(ac)g(hs)433 b(der)g(W)-108 b(anderungsbilanz)433
b(v)-36 b(om)434 b(Jahr)g(2003)h(auf)f(das)f(Jahr)h(2004)1770
10894 y(b)36 b(etr\344gt)434 b(ca.)g(50)217 b(\045.)p
42912 12097 V 45277 12097 V 1062 12141 44260 45 v 1062
17196 45 5056 v 1770 14001 a(Im)434 b(Zeitraum)f(1961)i(bis)f(2012)h
(gibt)e(es)h(ac)-36 b(h)g(t)433 b(Jahre,)h(in)g(denen)e(die)i(Anzahl)f
(der)1770 15993 y(Zu)-36 b(w)g(anderungen)432 b(geringer)i(als)g(die)g
(Anzahl)f(der)h(Ab)-36 b(w)g(anderungen)431 b(w)-36 b(ar.)p
42912 17196 V 1 0 0 TeXcolorrgb 43621 15001 a FF(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
17196 V 1062 17241 44260 45 v 1062 22296 45 5056 v 1770
19101 a FH(Im)434 b(Zeitraum)f(1961)i(bis)f(2012)h(gibt)e(es)h(drei)f
(Jahre,)h(in)g(denen)e(die)i(Anzahl)f(der)1770 21092
y(Zu)-36 b(w)g(anderungen)432 b(gleic)-36 b(h)434 b(der)f(Anzahl)h(der)
f(Ab)-36 b(w)g(anderungen)432 b(w)-36 b(ar.)p 42912 22296
V 45277 22296 V 1062 22340 44260 45 v 1062 27137 45 4797
v 1770 24200 a(Die)435 b(W)-108 b(anderungsbilanz)433
b(des)g(Jahres)g(1981)i(ist)f(ann\344hernd)e(dopp)36
b(elt)433 b(so)h(gro\377)1770 26192 y(wie)h(die)e(des)h(Jahres)f(1970.)
p 42912 27137 V 45277 27137 V 1062 27181 44260 45 v 0
TeXcolorgray 24421 81281 a(14)p 0 TeXcolorgray eop end
%%Page: 15 15
TeXDict begin 15 14 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 54804 45 v -2331 6795 a FI(WS)723
b(1.1)h(-)g(13)f(St\344ngel-Blatt-Diagramme)g(-)h(MC)g(-)g(Matura)g(NT)
-2439 9817 y(1)718 b(16/17)p 0 TeXcolorgray -1391 13124
a FH(13.)p 0 TeXcolorgray 651 w(Die)532 b(nac)-36 b(hstehenden)530
b(St\344ngel-Blatt-Diagramme)i(zeigen)g(die)g(Anzahl)f(der)g(Kinob)36
b(esu-)921 15116 y(c)-36 b(her/innen)511 b(je)i(V)-108
b(orstellung)512 b(der)f(Filme)i Fx(A)f FH(und)f Fx(B)579
b FH(im)513 b(Lauf)f(einer)g(W)-108 b(o)36 b(c)-36 b(he.)513
b(In)f(diesen)921 17108 y(Diagrammen)435 b(ist)e(die)h(Einheit)f(des)g
(St\344ngels)h(10,)h(die)e(des)g(Blatts)h(1.)p 9416 21029
7126 45 v 9416 23021 45 1992 v 0.9 TeXcolorgray 9460
23021 7037 1992 v 0 TeXcolorgray 10946 22423 a(Film)g
Fx(A)p 16497 23021 45 1992 v 9416 23065 7126 45 v 9416
25057 45 1992 v 10124 24459 a FH(2)p 11439 25057 V 1373
w(0,3,8)p 16497 25057 V 9416 25101 7126 45 v 9416 27093
45 1992 v 10124 26495 a(3)p 11439 27093 V 1373 w(6,7)p
16497 27093 V 9416 27137 7126 45 v 9416 29129 45 1992
v 10124 28532 a(4)p 11439 29129 V 1373 w(1,1,5,6)p 16497
29129 V 9416 29173 7126 45 v 9416 31165 45 1992 v 10124
30568 a(5)p 11439 31165 V 1373 w(2,6,8,9)p 16497 31165
V 9416 31210 7126 45 v 9416 33202 45 1992 v 10124 32604
a(6)p 11439 33202 V 1373 w(1,8)p 16497 33202 V 9416 33246
7126 45 v 24758 21029 V 24758 23021 45 1992 v 0.9 TeXcolorgray
24802 23021 7037 1992 v 0 TeXcolorgray 26248 22423 a(Film)g
Fx(B)p 31839 23021 45 1992 v 24758 23065 7126 45 v 24758
25057 45 1992 v 25466 24459 a FH(2)p 26781 25057 V 1373
w(1)p 31839 25057 V 24758 25101 7126 45 v 24758 27093
45 1992 v 25466 26495 a(3)p 26781 27093 V 1373 w(1,4,5)p
31839 27093 V 24758 27137 7126 45 v 24758 29129 45 1992
v 25466 28532 a(4)p 26781 29129 V 1373 w(4,5,8)p 31839
29129 V 24758 29173 7126 45 v 24758 31165 45 1992 v 25466
30568 a(5)p 26781 31165 V 1373 w(0,5,7,7)p 31839 31165
V 24758 31210 7126 45 v 24758 33202 45 1992 v 25466 32604
a(6)p 26781 33202 V 1373 w(1,2)p 31839 33202 V 24758
33246 7126 45 v 24758 35238 45 1992 v 25466 34640 a(7)p
26781 35238 V 1373 w(0)p 31839 35238 V 24758 35282 7126
45 v 921 36942 a(Kreuze)559 b(diejenige\(n\))g(A)-36
b(ussage\(n\))558 b(an,)i(die)f(b)36 b(ezogen)559 b(auf)h(die)f
(dargestellten)g(St\344ngel-)921 38934 y(Blatt-Diagramme)435
b(mit)e(Sic)-36 b(herheit)433 b(zutri\033t/zutre\033en!)p
1062 39975 44260 45 v 1062 44772 45 4797 v 1770 41835
a(Es)h(gab)g(in)f(dieser)h(W)-108 b(o)36 b(c)-36 b(he)433
b(mehr)g(V)-108 b(orstellungen)433 b(des)h(Films)g Fx(A)f
FH(als)h(der)g(Films)1770 43827 y Fx(B)67 b FH(.)p 42912
44772 V 1 0 0 TeXcolorrgb 43621 42705 a FF(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 44772
V 1062 44816 44260 45 v 1062 49694 45 4878 v 1770 46757
a FH(Der)434 b(Median)g(der)f(Anzahl)g(der)g(Besuc)-36
b(her/innen)433 b(ist)g(b)36 b(ei)434 b(Film)g Fx(A)f
FH(gr\366\377er)i(als)1770 48749 y(b)36 b(ei)434 b(Film)g
Fx(B)67 b FH(.)p 42912 49694 V 45277 49694 V 1062 49738
44260 45 v 1062 54616 45 4878 v 1770 51679 a(Die)435
b(Spann)-36 b(w)g(eite)432 b(der)i(Anzahl)f(der)g(Besuc)-36
b(her/innen)432 b(ist)i(b)36 b(ei)434 b(Film)g Fx(A)f
FH(kleiner)1770 53671 y(als)i(b)36 b(ei)433 b(Film)h
Fx(B)67 b FH(.)p 42912 54616 V 1 0 0 TeXcolorrgb 43621
52509 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45277 54616 V 1062 54660 44260 45 v 1062
59797 45 5137 v 1770 56601 a FH(Die)435 b(Gesam)-36 b(tanzahl)433
b(der)g(Besuc)-36 b(her/innen)433 b(in)g(dieser)g(W)-108
b(o)36 b(c)-36 b(he)434 b(w)-36 b(ar)434 b(b)36 b(ei)434
b(Film)g Fx(A)1770 58593 y FH(gr\366\377er)h(als)f(b)36
b(ei)434 b(Film)g Fx(B)67 b FH(.)p 42912 59797 V 1 0 0
TeXcolorrgb 43621 57561 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45277 59797 V 1062 59841 44260
45 v 1062 64977 45 5137 v 1770 61782 a FH(In)326 b(einer)g(V)-108
b(orstellung)325 b(des)h(Films)g Fx(B)393 b FH(w)-36
b(aren)325 b(mehr)h(Besuc)-36 b(her/innen)324 b(als)i(in)g(jeder)1770
63774 y(einzelnen)434 b(V)-108 b(orstellung)433 b(des)g(Films)h
Fx(A)p FH(.)p 42912 64977 V 1 0 0 TeXcolorrgb 43621 62741
a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45277 64977 V 1062 65021 44260 45 v 47992 13124 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 15116 a FD(WS)369 b(1.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 69049
54804 45 v 0 TeXcolorgray 24421 81281 a FH(15)p 0 TeXcolorgray
eop end
%%Page: 16 16
TeXDict begin 16 15 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(1.2)g(-)g(1)h(Bo)-60
b(xplots)716 b(zuordnen)f(-)j(ZO)f(-)h(BIFIE)p 0 TeXcolorgray
-1391 4800 a FH(14.)p 0 TeXcolorgray 651 w(Eine)618 b(T)-108
b(ankstellenk)-36 b(ette)619 b(hat)e(in)h(den)g(Shops)f(v)-36
b(on)618 b(Filialen)h(die)f(Umsatzzahlen)g(eines)874
6792 y(Tiefk\374hlpro)36 b(dukts)514 b(jew)-36 b(eils)514
b(\374b)36 b(er)512 b(einen)g(Zeitraum)h(v)-36 b(on)513
b(15)g(W)-108 b(o)36 b(c)-36 b(hen)513 b(b)36 b(eobac)-36
b(h)g(tet)511 b(und)921 8784 y(der)433 b(Gr\366\377e)h(nac)-36
b(h)433 b(festgehalten.)921 13322 y(Ordne)f(den)h(angegeb)36
b(enen)434 b(Bo)-36 b(xplots)434 b(die)g(en)-36 b(tsprec)g(henden)430
b(Filial-Umsatzzahlen)435 b(zu.)p 0 TeXcolorgray 0 TeXcolorgray
2683 16763 15666 45 v 18348 16763 4523 45 v 2683 21287
45 4525 v 3391 20342 a
 currentpoint currentpoint translate 0.29709 0.29709 scale neg exch
neg exch translate
 3391 20342 a 3825 20342 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 429.34616 a add def
/d 0.0 a add neg def /h 80.12448 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 3825
20342 a -29136 18058 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 727.10878
 0 297.76262  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 297.76262  727.10878  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -20.64056  def /maxTickline
59.48392  def /dT 1864679 abs 65536 div viceversa { neg } if def /DT
1. abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 59.48392 0.0 -20.64056   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 727.10878 0.0 297.76262 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 59.48392
 0 -20.64056  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq true and exch 2
lt false and or { /viceversa -20.64056  59.48392  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline 297.76262  def /maxTickline
727.10878  def /dT 1864679 abs 65536 div viceversa { neg } if def /DT
1. abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ yStart } def /MaxValue { yEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {
 0  setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 59.48392 0.0 -20.64056   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 727.10878 0.0 297.76262 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -30381 15193 a FG(1)-30382 12044
y(2)-26222 19403 y(1)2680 b(2)f(3)h(4)g(5)f(6)h(7)f(8)h(9)2444
b(10)2210 b(11)g(12)f(13)h(14)f(15)h(16)g(17)f(18)h(19)f(20)h(21)g(22)f
(23)h(24)f(25)-76295 b(1)2680 b(2)f(3)h(4)g(5)f(6)h(7)f(8)h(9)2444
b(10)-29136 18058 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray   0. true 455.2439 14.22636
654.4131 42.67911 0 Frame  gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 341.43292 42.67911 341.43292
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 682.86584 42.67911 682.86584
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 512.14938 42.67911 512.14938
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 455.2439 28.45274 341.43292
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 682.86584 28.45274 654.4131
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 51352 20342 a
currentpoint initclip moveto
 51352 20342 a
3391 20342 a
 currentpoint currentpoint translate 1 0.29709 div 1 0.29709 div scale
neg exch neg exch translate
 3391 20342 a 18304 21287 45 4525 v 0.9 TeXcolorgray
18348 21287 4478 4525 v 0 TeXcolorgray 1 0 0 TeXcolorrgb
20117 19482 a FH(C)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 22826 21287 45 4525 v 2683 21332 15666
45 v 18348 21332 4523 45 v 2683 25856 45 4525 v 3391
24912 a
 currentpoint currentpoint translate 0.29709 0.29709 scale neg exch
neg exch translate
 3391 24912 a 3825 24912 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 429.34616 a add def
/d 0.0 a add neg def /h 80.12448 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 3825 24912 a -29136
22627 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 727.10878
 0 297.76262  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 297.76262  727.10878  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -20.64056  def /maxTickline
59.48392  def /dT 1864679 abs 65536 div viceversa { neg } if def /DT
1. abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 59.48392 0.0 -20.64056   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 727.10878 0.0 297.76262 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 59.48392
 0 -20.64056  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq true and exch 2
lt false and or { /viceversa -20.64056  59.48392  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline 297.76262  def /maxTickline
727.10878  def /dT 1864679 abs 65536 div viceversa { neg } if def /DT
1. abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ yStart } def /MaxValue { yEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {
 0  setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 59.48392 0.0 -20.64056   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 727.10878 0.0 297.76262 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
-30381 19762 a FG(1)-30382 16613 y(2)-26222 23972 y(1)2680
b(2)f(3)h(4)g(5)f(6)h(7)f(8)h(9)2444 b(10)2210 b(11)g(12)f(13)h(14)f
(15)h(16)g(17)f(18)h(19)f(20)h(21)g(22)f(23)h(24)f(25)-76295
b(1)2680 b(2)f(3)h(4)g(5)f(6)h(7)f(8)h(9)2444 b(10)-29136
22627 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray   0. true 341.43292 14.22636
682.86584 42.67911 0 Frame  gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 483.69664 42.67911 483.69664
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 51352 24912 a
currentpoint initclip moveto
 51352 24912 a
3391 24912 a
 currentpoint currentpoint translate 1 0.29709 div 1 0.29709 div scale
neg exch neg exch translate
 3391 24912 a 18304 25856 45 4525 v 0.9 TeXcolorgray
18348 25856 4478 4525 v 0 TeXcolorgray 1 0 0 TeXcolorrgb
20075 24052 a FH(A)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 22826 25856 45 4525 v 2683 25901 15666
45 v 18348 25901 4523 45 v 2683 30425 45 4525 v 3391
29481 a
 currentpoint currentpoint translate 0.29709 0.29709 scale neg exch
neg exch translate
 3391 29481 a 3825 29481 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 429.34616 a add def
/d 0.0 a add neg def /h 80.12448 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 3825 29481 a -29136
27196 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 727.10878
 0 297.76262  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 297.76262  727.10878  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -20.64056  def /maxTickline
59.48392  def /dT 1864679 abs 65536 div viceversa { neg } if def /DT
1. abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 59.48392 0.0 -20.64056   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 727.10878 0.0 297.76262 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 59.48392
 0 -20.64056  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq true and exch 2
lt false and or { /viceversa -20.64056  59.48392  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline 297.76262  def /maxTickline
727.10878  def /dT 1864679 abs 65536 div viceversa { neg } if def /DT
1. abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ yStart } def /MaxValue { yEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {
 0  setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 59.48392 0.0 -20.64056   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 727.10878 0.0 297.76262 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
-30381 24331 a FG(1)-30382 21182 y(2)-26222 28541 y(1)2680
b(2)f(3)h(4)g(5)f(6)h(7)f(8)h(9)2444 b(10)2210 b(11)g(12)f(13)h(14)f
(15)h(16)g(17)f(18)h(19)f(20)h(21)g(22)f(23)h(24)f(25)-76295
b(1)2680 b(2)f(3)h(4)g(5)f(6)h(7)f(8)h(9)2444 b(10)-29136
27196 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray   0. true 512.14938 14.22636
682.86584 42.67911 0 Frame  gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 341.43292 42.67911 341.43292
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 512.14938 28.45274 341.43292
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
51352 29481 a
currentpoint initclip moveto
 51352 29481 a 3391 29481 a
 currentpoint currentpoint translate 1 0.29709 div 1 0.29709 div scale
neg exch neg exch translate
 3391 29481 a
18304 30425 45 4525 v 0.9 TeXcolorgray 18348 30425 4478
4525 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 20090 28621 a
FH(D)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
22826 30425 45 4525 v 2683 30470 15666 45 v 18348 30470
4523 45 v 2683 34994 45 4525 v 3391 34050 a
 currentpoint currentpoint translate 0.29709 0.29709 scale neg exch
neg exch translate
 3391 34050
a 3825 34050 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 429.34616 a add def
/d 0.0 a add neg def /h 80.12448 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 3825 34050 a -29136 31765 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 727.10878
 0 297.76262  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 297.76262  727.10878  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -20.64056  def /maxTickline
59.48392  def /dT 1864679 abs 65536 div viceversa { neg } if def /DT
1. abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 59.48392 0.0 -20.64056   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 727.10878 0.0 297.76262 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 59.48392
 0 -20.64056  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq true and exch 2
lt false and or { /viceversa -20.64056  59.48392  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline 297.76262  def /maxTickline
727.10878  def /dT 1864679 abs 65536 div viceversa { neg } if def /DT
1. abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ yStart } def /MaxValue { yEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {
 0  setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 59.48392 0.0 -20.64056   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 727.10878 0.0 297.76262 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -30381 28901 a
FG(1)-30382 25751 y(2)-26222 33110 y(1)2680 b(2)f(3)h(4)g(5)f(6)h(7)f
(8)h(9)2444 b(10)2210 b(11)g(12)f(13)h(14)f(15)h(16)g(17)f(18)h(19)f
(20)h(21)g(22)f(23)h(24)f(25)-76295 b(1)2680 b(2)f(3)h(4)g(5)f(6)h(7)f
(8)h(9)2444 b(10)-29136 31765 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray   0. true 455.2439 14.22636
569.05487 42.67911 0 Frame  gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 341.43292 42.67911 341.43292
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 682.86584 42.67911 682.86584
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 455.2439 28.45274 341.43292
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 682.86584 28.45274 569.05487
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 51352 34050 a
currentpoint initclip moveto

51352 34050 a 3391 34050 a
 currentpoint currentpoint translate 1 0.29709 div 1 0.29709 div scale
neg exch neg exch translate
 3391 34050 a 18304 34994 45
4525 v 0.9 TeXcolorgray 18348 34994 4478 4525 v 0 TeXcolorgray
1 0 0 TeXcolorrgb 20163 33190 a FH(F)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 22826 34994 45 4525
v 2683 35039 15666 45 v 18348 35039 4523 45 v 0 TeXcolorgray
0 TeXcolorgray 24451 16763 4567 45 v 29018 16763 15621
45 v 24451 22045 45 5283 v 0.92 TeXcolorgray 24495 22045
4478 5283 v 0 TeXcolorgray 26223 19861 a(A)p 28973 22045
45 5283 v 29682 18317 a FA(Umsatz)314 b(Filiale)i(1:)29682
19623 y(12,)248 b(12,)h(12,)g(12,)f(13,)h(15,)f(17,)h(17,)f(17,)h(20,)
29682 20928 y(20,)315 b(24,)g(24,)g(24,)g(24)p 44594
22045 V 24451 22089 4567 45 v 29018 22089 15621 45 v
24451 27371 45 5283 v 0.92 TeXcolorgray 24495 27371 4478
5283 v 0 TeXcolorgray 26274 25187 a FH(B)p 28973 27371
45 5283 v 29682 23644 a FA(Umsatz)f(Filiale)i(2:)29682
24949 y(12,)248 b(13,)h(13,)g(15,)f(15,)h(18,)f(18,)h(20,)f(20,)h(20,)
29682 26254 y(22,)315 b(22,)g(24,)g(24,)g(26)p 44594
27371 V 24451 27415 4567 45 v 29018 27415 15621 45 v
24451 32697 45 5283 v 0.92 TeXcolorgray 24495 32697 4478
5283 v 0 TeXcolorgray 26265 30513 a FH(C)p 28973 32697
45 5283 v 29682 28970 a FA(Umsatz)f(Filiale)i(1:)29682
30275 y(12,)248 b(14,)h(14,)g(16,)f(16,)h(17,)f(18,)h(18,)f(18,)h(22,)
29682 31580 y(22,)315 b(23,)g(23,)g(23,)g(24)p 44594
32697 V 24451 32742 4567 45 v 29018 32742 15621 45 v
24451 38024 45 5283 v 0.92 TeXcolorgray 24495 38024 4478
5283 v 0 TeXcolorgray 26238 35840 a FH(D)p 28973 38024
45 5283 v 29682 34297 a FA(Umsatz)f(Filiale)i(1:)29682
35602 y(12,)248 b(16,)h(18,)g(18,)f(18,)h(18,)f(19,)h(24,)f(24,)h(24,)
29682 36907 y(24,)315 b(24,)g(24,)g(24,)g(24)p 44594
38024 V 24451 38068 4567 45 v 29018 38068 15621 45 v
24451 43350 45 5283 v 0.92 TeXcolorgray 24495 43350 4478
5283 v 0 TeXcolorgray 26292 41166 a FH(E)p 28973 43350
45 5283 v 29682 39623 a FA(Umsatz)f(Filiale)i(1:)29682
40928 y(12,)248 b(12,)h(12,)g(12,)f(18,)h(18,)f(18,)h(18,)f(18,)h(23,)
29682 42233 y(23,)315 b(23,)g(23,)g(23,)g(24)p 44594
43350 V 24451 43394 4567 45 v 29018 43394 15621 45 v
24451 48676 45 5283 v 0.92 TeXcolorgray 24495 48676 4478
5283 v 0 TeXcolorgray 26310 46493 a FH(F)p 28973 48676
45 5283 v 29682 44949 a FA(Umsatz)f(Filiale)i(1:)29682
46254 y(12,)248 b(14,)h(14,)g(16,)f(16,)h(18,)f(18,)h(20,)f(20,)h(20,)
29682 47559 y(20,)315 b(20,)g(24,)g(24,)g(24)p 44594
48676 V 24451 48721 4567 45 v 29018 48721 15621 45 v
47992 4800 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 6792
a FD(WS)369 b(1.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 55088 54804 45 v 0 TeXcolorgray
24421 81281 a FH(16)p 0 TeXcolorgray eop end
%%Page: 17 17
TeXDict begin 17 16 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(1.2)g(-)g(2)h(T)-179
b(estergebnis)714 b(-)k(MC)g(-)f(BIFIE)p 0 TeXcolorgray
-1391 4800 a FH(15.)p 0 TeXcolorgray 651 w(Ein)415 b(T)-108
b(est)416 b(en)-36 b(th\344lt)415 b(f\374nf)g(A)-36 b(ufgab)36
b(en,)416 b(die)f(jew)-36 b(eils)417 b(n)-36 b(ur)415
b(mit)921 6792 y(einem)292 b(Punkt)f(\(alles)h(ric)-36
b(h)g(tig\))292 b(o)36 b(der)291 b(k)-36 b(einem)292
b(Punkt)g(\(alles)921 8784 y(nic)-36 b(h)g(t)499 b(ric)-36
b(h)g(tig\))500 b(b)36 b(ew)-36 b(ertet)500 b(w)-36 b(erden.)500
b(Die)g(neb)36 b(enstehende)921 10776 y(Gra\034k)528
b(zeigt)h(das)f(Ergebnis)g(dieses)h(T)-108 b(ests)528
b(f\374r)g(eine)g(b)36 b(e-)921 12768 y(stimm)-36 b(te)433
b(Klasse.)855 16752 y(W)-108 b(elc)-36 b(hes)990 b(der)g(folgenden)h
(Kastensc)-36 b(haubilder)991 b(\(Bo)-36 b(x-)921 18744
y(plots\))433 b(stellt)h(die)g(Ergebnisse)f(des)h(T)-108
b(ests)433 b(ric)-36 b(h)g(tig)434 b(da?)921 22728 y(Kreuze)f(das)h
(zutre\033ende)e(Kastensc)-36 b(haubild)433 b(an.)p 0
TeXcolorgray 0 TeXcolorgray 31014 24382 a
 currentpoint currentpoint translate 0.53024 0.53024 scale neg exch
neg exch translate
 31014 24382
a 31881 24382 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 214.01466 a add def
/d 0.0 a add neg def /h 331.73 a add def a neg d moveto a neg h L w
h L w d L closepath clip newpath 0 0 moveto setmatrix end
 31881 24382 a 36988 20422 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 12 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 170.72557 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.45274
T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 295.95134 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 170.72557
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true
and or { /viceversa 0.0  170.72557  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 295.95134  def
/dT 1864679 abs 65536 div viceversa { neg } if def /DT 1. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 295.95134 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.72557 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 295.95134
 0 0.0  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false
and or { /viceversa 0.0  295.95134  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 170.72557  def
/dT 1864679 abs 65536 div viceversa { neg } if def /DT 1. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 295.95134 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.72557 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
35743 20707 a FG(0)35743 17557 y(1)35743 14408 y(2)35743
11258 y(3)35743 8109 y(4)35743 4959 y(5)35743 1809 y(6)35743
-1340 y(7)35743 -4490 y(8)35743 -7639 y(9)35273 -10789
y(10)36988 20422 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 56.90549 0.0 56.90549
85.35823 28.45274 85.35823 28.45274 0.0  /Lineto /lineto load def 0
 setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 85.35823 0.0 85.35823
113.81097 56.90549 113.81097 56.90549 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 113.81097 0.0 113.81097
85.35823 85.35823 85.35823 85.35823 0.0  /Lineto /lineto load def 0
 setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 142.26372 0.0 142.26372
170.71646 113.81097 170.71646 113.81097 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 170.71646 0.0 170.71646
142.26372 142.26372 142.26372 142.26372 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 85.35823 28.45274 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 85.35823 28.45274 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 0.0 56.90549 85.35823   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 0.0 56.90549 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 28.45274 85.35823 28.45274
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 56.90549 85.35823 28.45274
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 56.90549 0.0 56.90549 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 28.45274 0.0 56.90549 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 56.90549 113.81097 56.90549
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35823 113.81097 56.90549
113.81097   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35823 0.0 85.35823 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 56.90549 0.0 85.35823 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35823 85.35823 85.35823
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.81097 85.35823 85.35823
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.81097 0.0 113.81097 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35823 0.0 113.81097 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.81097 170.71646 113.81097
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 170.71646 113.81097
170.71646   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 0.0 142.26372 170.71646
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.81097 0.0 142.26372 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 142.26372 142.26372
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 170.71646 142.26372 142.26372
142.26372   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 167.871 0.0 167.871 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 0.0 170.71646 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 36988 20422 a
tx@Dict begin  { 54.43819 -22.90945 } PutCoor PutBegin  end

36988 20422 a 915 x FH(erzielte)h(Punkte)36988 20422
y
tx@Dict begin  PutEnd  end
 36988 20422 a 36988 20422 a
tx@Dict begin  { -25.18182 219.47417 } PutCoor PutBegin  end
 36988 20422 a 37903 34439
a
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 37903 34439 a FH(Anzahl)g(der)f(Sc)-36 b(h)g(\374lerInnen)51921
34439 y
 currentpoint grestore moveto
 51921 34439 a 36988 20422 a
tx@Dict begin  PutEnd  end
 36988 20422 a 36988
20422 a
tx@Dict begin  { 14.22636 -5.69046 } PutCoor PutBegin  end
 36988 20422 a 836 x FH(0)36988 20422 y
tx@Dict begin  PutEnd  end
 36988
20422 a 36988 20422 a
tx@Dict begin  { 42.67911 -5.69046 } PutCoor PutBegin  end
 36988 20422 a 836 x FH(1)36988
20422 y
tx@Dict begin  PutEnd  end
 36988 20422 a 36988 20422 a
tx@Dict begin  { 71.13185 -5.69046 } PutCoor PutBegin  end
 36988 20422 a 836
x FH(2)36988 20422 y
tx@Dict begin  PutEnd  end
 36988 20422 a 36988 20422 a
tx@Dict begin  { 99.5846 -5.69046 } PutCoor PutBegin  end
 36988
20422 a 836 x FH(3)36988 20422 y
tx@Dict begin  PutEnd  end
 36988 20422 a 36988
20422 a
tx@Dict begin  { 128.03734 -5.69046 } PutCoor PutBegin  end
 36988 20422 a 836 x FH(4)36988 20422 y
tx@Dict begin  PutEnd  end
 36988
20422 a 36988 20422 a
tx@Dict begin  { 156.49008 -5.69046 } PutCoor PutBegin  end
 36988 20422 a 836 x FH(5)36988
20422 y
tx@Dict begin  PutEnd  end
 36988 20422 a 55572 24382 a
currentpoint initclip moveto
 55572 24382 a 31014
24382 a
 currentpoint currentpoint translate 1 0.53024 div 1 0.53024 div scale
neg exch neg exch translate
 31014 24382 a 11181 27083 24022 45 v 11181 34522
45 7439 v 11890 33577 a
 currentpoint currentpoint translate 1.03651 1.03651 scale neg exch
neg exch translate
 11890 33577 a 12323 33577 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 172.48085 a add def
/d 0.0 a add neg def /h 48.36436 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 12323
33577 a 12746 31867 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 142.26372
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true
and or { /viceversa 0.0  142.26372  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 32.9215  def /dT
1864679 abs 65536 div viceversa { neg } if def /DT 1. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 12511 33213 a
FG(0)2679 b(1)h(2)f(3)h(4)g(5)12746 31867 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray   0. true 56.90549 5.69046
128.03734 17.07181 0 Frame  gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 28.45274 17.07181 28.45274
5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 17.07181 142.26372
5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 71.13185 17.07181 71.13185
5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 56.90549 11.38092 28.45274
11.38092   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 11.38092 128.03734
11.38092   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 31416 33577 a
currentpoint initclip moveto

31416 33577 a 11890 33577 a
 currentpoint currentpoint translate 1 1.03651 div 1 1.03651 div scale
neg exch neg exch translate
 11890 33577 a 32793 34522
45 7439 v 35158 34522 V 11181 34566 24022 45 v 11181
42005 45 7439 v 11890 41060 a
 currentpoint currentpoint translate 1.03651 1.03651 scale neg exch
neg exch translate
 11890 41060 a 12323 41060
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 172.48085 a add def
/d 0.0 a add neg def /h 48.36436 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 12323 41060 a 12746 39351 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 142.26372
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true
and or { /viceversa 0.0  142.26372  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 32.9215  def /dT
1864679 abs 65536 div viceversa { neg } if def /DT 1. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 12511
40696 a FG(0)f(1)h(2)f(3)h(4)g(5)12746 39351 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray   0. true 56.90549 5.69046
128.03734 17.07181 0 Frame  gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 28.45274 17.07181 28.45274
5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 17.07181 142.26372
5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35823 17.07181 85.35823
5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 56.90549 11.38092 28.45274
11.38092   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 11.38092 128.03734
11.38092   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 31416 41060 a
currentpoint initclip moveto

31416 41060 a 11890 41060 a
 currentpoint currentpoint translate 1 1.03651 div 1 1.03651 div scale
neg exch neg exch translate
 11890 41060 a 32793 42005
45 7439 v 35158 42005 V 11181 42049 24022 45 v 11181
49488 45 7439 v 11890 48543 a
 currentpoint currentpoint translate 1.03651 1.03651 scale neg exch
neg exch translate
 11890 48543 a 12323 48543
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 172.48085 a add def
/d 0.0 a add neg def /h 48.36436 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 12323 48543 a 12746 46834 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 142.26372
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true
and or { /viceversa 0.0  142.26372  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 32.9215  def /dT
1864679 abs 65536 div viceversa { neg } if def /DT 1. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 12511
48179 a FG(0)f(1)h(2)f(3)h(4)g(5)12746 46834 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray   0. true 56.90549 5.69046
128.03734 17.07181 0 Frame  gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 28.45274 17.07181 28.45274
5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 17.07181 142.26372
5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.81097 17.07181 113.81097
5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 56.90549 11.38092 28.45274
11.38092   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 11.38092 128.03734
11.38092   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 31416 48543 a
currentpoint initclip moveto

31416 48543 a 11890 48543 a
 currentpoint currentpoint translate 1 1.03651 div 1 1.03651 div scale
neg exch neg exch translate
 11890 48543 a 32793 49488
45 7439 v 1 0 0 TeXcolorrgb 33502 46101 a FF(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 35158 49488
V 11181 49532 24022 45 v 11181 56971 45 7439 v 11890
56027 a
 currentpoint currentpoint translate 1.03651 1.03651 scale neg exch
neg exch translate
 11890 56027 a 12323 56027 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 172.48085 a add def
/d 0.0 a add neg def /h 48.36436 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 12323 56027 a 12746
54317 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 142.26372
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true
and or { /viceversa 0.0  142.26372  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 32.9215  def /dT
1864679 abs 65536 div viceversa { neg } if def /DT 1. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 12511 55663 a FG(0)f(1)h(2)f(3)h(4)g(5)12746
54317 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray   0. true 28.45274 5.69046
142.26372 17.07181 0 Frame  gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35823 17.07181 85.35823
5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 31416 56027 a
currentpoint initclip moveto
 31416 56027 a
11890 56027 a
 currentpoint currentpoint translate 1 1.03651 div 1 1.03651 div scale
neg exch neg exch translate
 11890 56027 a 32793 56971 45 7439 v 35158
56971 V 11181 57016 24022 45 v 11181 64455 45 7439 v
11890 63510 a
 currentpoint currentpoint translate 1.03651 1.03651 scale neg exch
neg exch translate
 11890 63510 a 12323 63510 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 172.48085 a add def
/d 0.0 a add neg def /h 48.36436 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 12323 63510
a 12746 61800 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 142.26372
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true
and or { /viceversa 0.0  142.26372  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 32.9215  def /dT
1864679 abs 65536 div viceversa { neg } if def /DT 1. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 12511 63146 a
FG(0)f(1)h(2)f(3)h(4)g(5)12746 61800 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray   0. true 99.5846 5.69046
128.03734 17.07181 0 Frame  gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 28.45274 17.07181 28.45274
5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 17.07181 142.26372
5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.81097 17.07181 113.81097
5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 99.5846 11.38092 28.45274 11.38092
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 11.38092 128.03734
11.38092   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 31416 63510 a
currentpoint initclip moveto

31416 63510 a 11890 63510 a
 currentpoint currentpoint translate 1 1.03651 div 1 1.03651 div scale
neg exch neg exch translate
 11890 63510 a 32793 64455
45 7439 v 35158 64455 V 11181 64499 24022 45 v 11181
71938 45 7439 v 11890 70993 a
 currentpoint currentpoint translate 1.03651 1.03651 scale neg exch
neg exch translate
 11890 70993 a 12323 70993
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 172.48085 a add def
/d 0.0 a add neg def /h 48.36436 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 12323 70993 a 12746 69284 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 142.26372
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true
and or { /viceversa 0.0  142.26372  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 32.9215  def /dT
1864679 abs 65536 div viceversa { neg } if def /DT 1. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 12511
70629 a FG(0)f(1)h(2)f(3)h(4)g(5)12746 69284 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray   0. true 99.5846 5.69046
142.26372 17.07181 0 Frame  gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 28.45274 17.07181 28.45274
5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.81097 17.07181 113.81097
5.69046   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 99.5846 11.38092 28.45274 11.38092
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25  setgray  0.1 .setopacityalpha  fill  grestore gsave
0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 31416 70993 a
currentpoint initclip moveto
 31416 70993 a
11890 70993 a
 currentpoint currentpoint translate 1 1.03651 div 1 1.03651 div scale
neg exch neg exch translate
 11890 70993 a 32793 71938 45 7439 v 35158
71938 V 11181 71982 24022 45 v 47992 4800 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a FD(WS)369 b(1.2)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 76010
54804 45 v 0 TeXcolorgray 24421 81281 a FH(17)p 0 TeXcolorgray
eop end
%%Page: 18 18
TeXDict begin 18 17 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(1.2)g(-)g(3)h(Histogramm)f
(erstellen)f(-)i(O)-60 b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray
-1391 4800 a FH(16.)p 0 TeXcolorgray 651 w(Bei)623 b(einer)g(LKW-K)-36
b(on)g(trolle)624 b(wurde)e(b)36 b(ei)624 b(500)g(F)-108
b(ahrzeugen)622 b(eine)h(\334b)36 b(erladung)622 b(festge-)921
6792 y(stellt.)g(Zur)e(F)-108 b(estlegung)619 b(des)h(Strafrahmens)g
(wurde)g(die)g(\334b)36 b(erladung)620 b(der)g(einzelnen)921
8784 y(F)-108 b(ahrzeuge)433 b(in)g(der)g(folgenden)h(T)-108
b(ab)36 b(elle)435 b(festgehalten.)p 0 TeXcolorgray 0
TeXcolorgray 13415 12924 19987 45 v 13415 14916 45 1992
v 14124 14318 a(\334b)36 b(erladung)433 b(\(in)g(kg\))p
25735 14916 V 1373 w(Anzahl)h(der)p 33358 14916 V 13415
16908 V 14413 16310 a(v)-36 b(on)p 17389 16908 V 4350
w(bis)p 25735 16908 V 5605 w(LKW)p 33358 16908 V 13415
16952 19987 45 v 13415 18944 45 1992 v 17389 18944 V
19778 18346 a(<1000)p 25735 18944 V 5203 w(140)p 33358
18944 V 13415 18988 19987 45 v 13415 20980 45 1992 v
14124 20382 a(1000)p 17389 20980 V 3054 w(<2000)p 25735
20980 V 5203 w(240)p 33358 20980 V 13415 21024 19987
45 v 13415 23016 45 1992 v 14124 22419 a(2000)p 17389
23016 V 3054 w(<3000)p 25735 23016 V 5528 w(80)p 33358
23016 V 13415 23060 19987 45 v 13415 25052 45 1992 v
14124 24455 a(3000)p 17389 25052 V 3054 w(<4000)p 25735
25052 V 5528 w(40)p 33358 25052 V 13415 25097 19987 45
v 921 28115 a(Zeic)g(hne)433 b(ein)g(Histogramm)i(der)e(Daten)h(im)f(v)
-36 b(orgegeb)36 b(enen)434 b(K)-36 b(o)36 b(ordinatensystem.)921
58370 y
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 365.85812 a add def
/d 0.0 a add neg def /h 249.3187 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 58370 a 6724 55891 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 312.29974  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 312.29974  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 226.9326  def /dT 1863500 abs 65536 div viceversa
{ neg } if def /DT 500. abs viceversa { neg } if def /subTNo 2 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 0.05687  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 0.05687
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 226.9326
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 312.29974
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 226.9326  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 226.9326  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 312.29974  def /dT 932183 abs 65536 div viceversa
{ neg } if def /DT 0.04 abs viceversa { neg } if def /subTNo 2 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 355.65944  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 355.65944  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 226.9326
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 312.29974
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 5479 56177 a FG(0)4276 54602
y(0)p Fr(:)p FG(04)4276 53028 y(0)p Fr(:)p FG(08)4276
51453 y(0)p Fr(:)p FG(12)4276 49879 y(0)p Fr(:)p FG(16)4276
48304 y(0)p Fr(:)p FG(20)4276 46730 y(0)p Fr(:)p FG(24)4276
45155 y(0)p Fr(:)p FG(28)4276 43581 y(0)p Fr(:)p FG(32)4276
42006 y(0)p Fr(:)p FG(36)4276 40431 y(0)p Fr(:)p FG(40)4276
38857 y(0)p Fr(:)p FG(44)4276 37282 y(0)p Fr(:)p FG(48)4276
35708 y(0)p Fr(:)p FG(52)4276 34133 y(0)p Fr(:)p FG(56)4276
32559 y(0)p Fr(:)p FG(60)6489 57237 y(0)2207 b(500)1502
b(1000)1268 b(1500)f(2000)h(2500)g(3000)f(3500)h(4000)f(4500)h(5000)
6724 55891 y
tx@Dict begin  gsave STV CP T /ps@refangle 130.  def grestore  end
 6724 55891 a 6724 55891 a
tx@Dict begin  { 312.29974 226.9326 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 6724 55891 a 6724
55891 a
tx@Dict begin  { 5.0 84.19461 8.29999 2.5 130.  Uput UUput } PutCoor
PutBegin  end
 6724 55891 a 2064 56212 a FD(\334b)31 b(erladung)370
b(\(in)g(kg\))6724 55891 y
tx@Dict begin  PutEnd  end
 6724 55891 a 6724 55891 a
tx@Dict begin  PutEnd  end

6724 55891 a 6724 55891 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 6724 55891 a 6724 55891 a
tx@Dict begin  { 0.0 0.0 pop 312.29974 226.9326 exch pop } PutCoor
PutBegin  end
 6724
55891 a 6724 55891 a
tx@Dict begin  { 5.0 66.16713 6.88875 0.0 -40.  Uput UUput } PutCoor
PutBegin  end
 6724 55891 a 3062 56273 a FD(relativ)-31
b(er)370 b(An)-31 b(teil)6724 55891 y
tx@Dict begin  PutEnd  end
 6724 55891 a 6724
55891 a
tx@Dict begin  PutEnd  end
 6724 55891 a 1 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 99.5842 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 1.6 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.8695 99.5842 0.0 99.5842
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.8695 0.0 56.8695 99.5842
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 56.8695 170.715 56.8695
99.5842   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.73901 170.715 56.8695
170.715   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.73901 56.9068 113.73901
170.715   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 113.73901 0.0 113.73901
56.9068   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.60852 56.9068 113.73901
56.9068   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.60852 0.0 170.60852
56.9068   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 227.47803 28.4534 170.60852
28.4534   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 227.47803 0.0 227.47803
28.4534   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 41420
58370 a
currentpoint initclip moveto
 41420 58370 a 47992 4800 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 6792 a FD(WS)369 b(1.2)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 60406 54804 45 v 0 TeXcolorgray
24421 81281 a FH(18)p 0 TeXcolorgray eop end
%%Page: 19 19
TeXDict begin 19 18 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(1.2)g(-)g(4)h
(S\344ulendiagramm)d(-)j(O)-60 b(A)717 b(-)h(BIFIE)p
0 TeXcolorgray -1391 4800 a FH(17.)p 0 TeXcolorgray 651
w(Bei)735 b(einer)f(Umfrage)i(w)-36 b(erden)734 b(die)g(480)i(Sc)-36
b(h)g(\374ler/innen)733 b(einer)h(Sc)-36 b(h)g(ule)734
b(b)36 b(efragt,)735 b(mit)874 6792 y(w)-36 b(elc)g(hem)791
b(V)-108 b(erk)-36 b(ehrsmittel)790 b(sie)h(zur)f(Sc)-36
b(h)g(ule)790 b(k)-36 b(ommen.)794 b(Die)d(An)-36 b(t)g(w)g
(ortm\366glic)g(hk)g(eiten)874 8784 y(w)g(aren)801 b(\022\366\033en)-36
b(tlic)g(he)800 b(V)-108 b(erk)-36 b(ehrsmittel\020)800
b(\(A\),)h(\022mit)f(dem)g(A)-36 b(uto)800 b(/)h(v)-36
b(on)801 b(den)f(Eltern)921 10776 y(gebrac)-36 b(h)g(t\020)556
b(\(B\))g(so)-36 b(wie)557 b(\022mit)f(dem)g(Rad)g(/)h(zu)f(F)-108
b(u\377\020)556 b(\(C\).)g(F)-108 b(olgendes)556 b(Kreisdiagramm)921
12768 y(zeigt)434 b(die)g(Ergebnisse:)p 0 TeXcolorgray
0 TeXcolorgray 23459 28394 a

 23459 28394 a 23459 28394
a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 1 setlinejoin

 /pgffc{0.9 setgray}def

 0.79701 pgfw

 0.0 0.0 moveto

 85.04042 0.0 lineto

 85.04042 46.96713 46.96713 85.04042 0.0 85.04042 curveto

 -14.86285 85.04042 -29.474 81.13849 -42.3606 73.73561 curveto

 closepath

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 42.59805 73.59935 ] concat

 pgfs



 0 setgray
 23459 28394 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 55.07547 91.6391 ] concat

 pgfs



 0 setgray
 23459 28394 a FH(C)23459 28394 y


 pgfr

 restore

 restore

 save

 save

 0.5 setgray

 0.19925 pgfw

 43.12386 74.29674 moveto

 53.10815 87.53824 lineto

 pgfstr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 6.03038 32.67691 ] concat

 pgfs



 0 setgray
 23459
28394 a FH(33.3\045)23459 28394 y


 pgfr

 restore

 restore

 save

 restore

 save

 1 setlinejoin

 /pgffc{0.8 setgray}def

 0.79701 pgfw

 0.0 0.0 moveto

 -42.3606 73.73561 lineto

 -83.0836 50.34093 -97.13028 -1.63757 -73.73561 -42.3606 curveto

 -50.34093 -83.0836 1.63757 -97.13028 42.3606 -73.73561 curveto

 closepath

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -73.73561 -42.3606 ] concat

 pgfs



 0 setgray
 23459 28394 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -100.8399 -62.58507 ] concat

 pgfs



 0 setgray
 23459
28394 a FH(A)23459 28394 y


 pgfr

 restore

 restore

 save

 save

 0.5 setgray

 0.19925 pgfw

 -74.433 -42.85498 moveto

 -87.96385 -52.44917 lineto

 pgfstr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -35.53389 -18.39758 ] concat

 pgfs



 0 setgray
 23459 28394 a FH(50\045)23459
28394 y


 pgfr

 restore

 restore

 save

 restore

 save

 1 setlinejoin

 /pgffc{0.7 setgray}def

 0.79701 pgfw

 0.0 0.0 moveto

 42.3606 -73.73561 lineto

 68.75665 -58.5717 85.04042 -30.44331 85.04042 0.0 curveto

 closepath

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 save

 [1.0 0.0 0.0 1.0 73.59935 -42.59805 ] concat

 pgfs



 0 setgray
 23459 28394 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 91.63934 -63.31117 ] concat

 pgfs



 0 setgray
 23459 28394 a FH(B)23459 28394
y


 pgfr

 restore

 restore

 save

 save

 0.5 setgray

 0.19925 pgfw

 74.29674 -43.1197 moveto

 87.53848 -53.02528 lineto

 pgfstr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 33.53589 -32.40402 ] concat

 pgfs



 0 setgray
 23459 28394 a FH(16.7\045)23459 28394 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 873 43215 a
FH(V)-108 b(erv)-36 b(ollst\344ndige)834 b(das)g(folgende)g
(S\344ulendiagramm)g(anhand)f(der)g(W)-108 b(erte)833
b(aus)h(dem)921 45207 y(ob)36 b(enstehenden)432 b(Kreisdiagramm.)921
78632 y
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 439.10324 a add def
/d 0.0 a add neg def /h 277.96487 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 78632 a 4073 75115 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 33 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 410.62424 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 8.53546
T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 1 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 246.19194 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 711.9751
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 410.62424
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true
and or { /viceversa 0.0  410.62424  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 246.19194  def
/dT 46660000 abs 65536 div viceversa { neg } if def /DT 5000. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 0.1424  mul cntTick add def x abs MaxValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for subTwidth SLW
subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0
gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 0.1424
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 246.19194 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 410.62424 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 246.19194
 0 0.0  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false
and or { /viceversa 0.0  246.19194  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 410.62424  def
/dT 2796900 abs 65536 div viceversa { neg } if def /DT 50. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 0.85355  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 0.85355  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 246.19194 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 410.62424 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 2828 75400 a FG(0)2358
70676 y(50)1887 65952 y(100)1887 61228 y(150)1887 56504
y(200)1887 51779 y(250)4073 75115 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 42.7185 0.0 42.7185 25.60638   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 1.6 SLW 0  setgray
 1. .setopacityalpha   3.0 0 0 add  DotLine  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.43701 0.0 85.43701 25.60638   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 1.6 SLW 0  setgray
 1. .setopacityalpha   3.0 0 0 add  DotLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.87402 0.0 170.87402 25.60638  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.6 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 213.59253 0.0 213.59253 25.60638  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.6 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 299.02954 0.0 299.02954 25.60638  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.6 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 341.74805 0.0 341.74805 25.60638  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.6 SLW 0  setgray  1. .setopacityalpha   3.0 0 0 add  DotLine  grestore
end
 
@endspecial 4073 75115 a
tx@Dict begin  { 57.35234 18.85599 } PutCoor PutBegin  end
 4073 75115 a 915
x FH(?)4073 75115 y
tx@Dict begin  PutEnd  end
 4073 75115 a 4073 75115 a
tx@Dict begin  { 187.19452 19.36137 } PutCoor PutBegin  end
 4073 75115
a 915 x FH(?)4073 75115 y
tx@Dict begin  PutEnd  end
 4073 75115 a 4073 75115 a
tx@Dict begin  { 313.66417 19.36137 } PutCoor PutBegin  end
 4073
75115 a 915 x FH(?)4073 75115 y
tx@Dict begin  PutEnd  end
 4073 75115 a 4073 75115
a
tx@Dict begin  { 53.13669 -10.33311 } PutCoor PutBegin  end
 4073 75115 a 915 x FH(A)4073 75115 y
tx@Dict begin  PutEnd  end
 4073 75115 a 4073
75115 a
tx@Dict begin  { 186.14526 -10.8385 } PutCoor PutBegin  end
 4073 75115 a 915 x FH(B)4073 75115 y
tx@Dict begin  PutEnd  end
 4073 75115
a 4073 75115 a
tx@Dict begin  { 311.13478 -10.8385 } PutCoor PutBegin  end
 4073 75115 a 915 x FH(C)4073 75115 y
tx@Dict begin  PutEnd  end
 4073
75115 a 1 0 0 TeXcolorrgb @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 85.43701 0.0 85.43701
204.85107 42.7185 204.85107 42.7185 0.0  /Lineto /lineto load def 0
 setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 213.59253 0.0 213.59253
68.28369 170.87402 68.28369 170.87402 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 341.74805 0.0 341.74805
136.56738 299.02954 136.56738 299.02954 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 4073 75115 a
tx@Dict begin  { 53.13669 216.37389 } PutCoor PutBegin  end
 4073 75115 a 837
x FH(240)4073 75115 y
tx@Dict begin  PutEnd  end
 4073 75115 a 4073 75115 a
tx@Dict begin  { 185.50826 77.89682 } PutCoor PutBegin  end
 4073
75115 a 837 x FH(80)4073 75115 y
tx@Dict begin  PutEnd  end
 4073 75115 a 4073 75115
a
tx@Dict begin  { 309.44852 146.12457 } PutCoor PutBegin  end
 4073 75115 a 837 x FH(160)4073 75115 y
tx@Dict begin  PutEnd  end
 4073 75115 a
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 49528
78632 a
currentpoint initclip moveto
 49528 78632 a 47992 4800 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 6792 a FD(WS)369 b(1.2)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 24421 81281
a FH(19)p 0 TeXcolorgray eop end
%%Page: 20 20
TeXDict begin 20 19 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 54804 45 v -2331 6795 a FI(WS)717
b(1.2)g(-)g(5)h(Brotv)-60 b(erbrauc)g(h)716 b(-)h(O)-60
b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray -1391 10102 a FH(18.)p
0 TeXcolorgray 651 w(In)460 b(einer)g(B\344c)-36 b(k)g(erei)461
b(wurden)e(\374b)36 b(er)460 b(einen)g(Zeitraum)g(v)-36
b(on)460 b(36)h(W)-108 b(o)36 b(c)-36 b(hen)460 b(A)-36
b(ufzeic)g(hn)g(ungen)921 12094 y(\374b)36 b(er)355 b(den)h(T)-108
b(agesb)36 b(edarf)357 b(einer)f(Brotsorte)g(an)g(einem)g(b)36
b(estimm)-36 b(ten)355 b(W)-108 b(o)36 b(c)-36 b(hen)g(tag)357
b(gemac)-36 b(h)g(t)921 14086 y(und)432 b(in)i(einer)f(geordneten)g
(Liste)h(festgehalten:)888 16631 y(232,)369 b(234,)g(235,)g(237,)g
(237,)f(237,)h(239,)g(242,)g(242,)f(242,)h(243,)g(244,)g(244,)f(244,)h
(244,)g(245,)g(245,)888 18623 y(245,)g(245,)g(245,)g(246,)g(246,)f
(246,)h(246,)g(247,)g(247,)f(248,)h(248,)g(249,)g(250,)f(250,)h(251,)g
(253,)g(255,)888 20615 y(258,)435 b(258)921 23160 y(Stelle)f(diese)f
(Daten)h(in)g(einem)f(Bo)-36 b(xplot)434 b(dar.)p 1 0 0
TeXcolorrgb 921 34242 a
 currentpoint currentpoint translate 0.50516 0.50516 scale neg exch
neg exch translate
 921 34242 a 1788 34242 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 796.45714 a add def
/d 0.0 a add neg def /h 150.67719 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1788
34242 a -726361 26688 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -56.90549 T 3 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 7374.3723 0.0 6577.91516 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 56.90549 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  6572.58376 0.0 T 28
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 82.43028 0.0 -68.2469   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 7374.3723  0 6577.91516  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 6577.91516
 7374.3723  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-68.2469  def /maxTickline 82.43028  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 82.43028
0.0 -68.2469   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 7374.3723
0.0 6577.91516 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 82.43028  0 -68.2469  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -68.2469
 82.43028  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
6577.91516  def /maxTickline 7374.3723  def /dT 3729358 abs 65536 div
viceversa { neg } if def /DT 2. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 82.43028
0.0 -68.2469   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 7374.3723
0.0 6577.91516 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -727606 20674
a FG(2)-728338 33226 y Fy(\000)p FG(2)-723446 28033 y(1)2679
b(2)h(3)f(4)h(5)g(6)f(7)h(8)f(9)2445 b(10)2209 b(11)h(12)g(13)f(14)h
(15)f(16)h(17)g(18)f(19)h(20)f(21)h(22)g(23)f(24)h(25)f(26)h(27)g(28)f
(29)h(30)f(31)h(32)g(33)f(34)h(35)f(36)h(37)g(38)f(39)h(40)f(41)h(42)g
(43)f(44)h(45)g(46)f(47)h(48)f(49)h(50)g(51)f(52)h(53)f(54)h(55)g(56)f
(57)h(58)f(59)h(60)g(61)f(62)h(63)f(64)h(65)g(66)f(67)h(68)f(69)h(70)g
(71)f(72)h(73)f(74)h(75)g(76)f(77)h(78)f(79)h(80)g(81)f(82)h(83)g(84)f
(85)h(86)f(87)h(88)g(89)f(90)h(91)f(92)h(93)g(94)f(95)h(96)f(97)h(98)g
(99)1974 b(100)1740 b(101)f(102)h(103)f(104)h(105)g(106)f(107)h(108)f
(109)h(110)g(111)f(112)h(113)f(114)h(115)g(116)f(117)h(118)f(119)h(120)
g(121)f(122)h(123)f(124)h(125)g(126)f(127)h(128)g(129)f(130)h(131)f
(132)h(133)g(134)f(135)h(136)f(137)h(138)g(139)f(140)h(141)f(142)h(143)
g(144)f(145)h(146)f(147)h(148)g(149)f(150)h(151)f(152)h(153)g(154)f
(155)h(156)f(157)h(158)g(159)f(160)h(161)f(162)h(163)g(164)f(165)h(166)
f(167)h(168)g(169)f(170)h(171)g(172)f(173)h(174)f(175)h(176)g(177)f
(178)h(179)f(180)h(181)g(182)f(183)h(184)f(185)h(186)g(187)f(188)h(189)
f(190)h(191)g(192)f(193)h(194)f(195)h(196)g(197)f(198)h(199)f(200)h
(201)g(202)f(203)h(204)f(205)h(206)g(207)f(208)h(209)g(210)f(211)h(212)
f(213)h(214)g(215)f(216)h(217)f(218)h(219)g(220)f(221)h(222)f(223)h
(224)g(225)f(226)h(227)f(228)h(229)g(230)f(231)h(232)f(233)h(234)g(235)
f(236)h(237)f(238)h(239)g(240)f(241)h(242)f(243)h(244)g(245)f(246)h
(247)f(248)h(249)g(250)f(251)h(252)g(253)f(254)h(255)f(256)h(257)g(258)
-810388 b(1)2679 b(2)h(3)f(4)h(5)g(6)f(7)h(8)f(9)2445
b(10)2209 b(11)h(12)g(13)f(14)h(15)f(16)h(17)g(18)f(19)h(20)f(21)h(22)g
(23)f(24)h(25)f(26)h(27)g(28)f(29)h(30)f(31)h(32)g(33)f(34)h(35)f(36)h
(37)g(38)f(39)h(40)f(41)h(42)g(43)f(44)h(45)g(46)f(47)h(48)f(49)h(50)g
(51)f(52)h(53)f(54)h(55)g(56)f(57)h(58)f(59)h(60)g(61)f(62)h(63)f(64)h
(65)g(66)f(67)h(68)f(69)h(70)g(71)f(72)h(73)f(74)h(75)g(76)f(77)h(78)f
(79)h(80)g(81)f(82)h(83)g(84)f(85)h(86)f(87)h(88)g(89)f(90)h(91)f(92)h
(93)g(94)f(95)h(96)f(97)h(98)g(99)1974 b(100)1740 b(101)f(102)h(103)f
(104)h(105)g(106)f(107)h(108)f(109)h(110)g(111)f(112)h(113)f(114)h(115)
g(116)f(117)h(118)f(119)h(120)g(121)f(122)h(123)f(124)h(125)g(126)f
(127)h(128)g(129)f(130)h(131)f(132)h(133)g(134)f(135)h(136)f(137)h(138)
g(139)f(140)h(141)f(142)h(143)g(144)f(145)h(146)f(147)h(148)g(149)f
(150)h(151)f(152)h(153)g(154)f(155)h(156)f(157)h(158)g(159)f(160)h(161)
f(162)h(163)g(164)f(165)h(166)f(167)h(168)g(169)f(170)h(171)g(172)f
(173)h(174)f(175)h(176)g(177)f(178)h(179)f(180)h(181)g(182)f(183)h(184)
f(185)h(186)g(187)f(188)h(189)f(190)h(191)g(192)f(193)h(194)f(195)h
(196)g(197)f(198)h(199)f(200)h(201)g(202)f(203)h(204)f(205)h(206)g(207)
f(208)h(209)g(210)f(211)h(212)f(213)h(214)g(215)f(216)h(217)f(218)h
(219)g(220)f(221)h(222)f(223)h(224)g(225)f(226)h(227)f(228)h(229)g(230)
f(231)-726361 26688 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -726361 26688 a -726361 26688 a
tx@Dict begin  { 7374.3723 82.43028 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end

-726361 26688 a -726361 26688 a
tx@Dict begin  { 5.0 0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 -726361 26688 a -726361
26688 a
tx@Dict begin  PutEnd  end
 -726361 26688 a -726361 26688 a
tx@Dict begin  PutEnd  end
 -726361 26688
a -726361 26688 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -726361 26688 a -726361 26688 a
tx@Dict begin  { 0.0 0.0 pop 7374.3723 82.43028 exch pop } PutCoor
PutBegin  end
 -726361
26688 a -726361 26688 a
tx@Dict begin  { 5.0 18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -726361 26688 a -727409 27020
a FH(f\(x\))-726361 26688 y
tx@Dict begin  PutEnd  end
 -726361 26688 a -726361 26688
a
tx@Dict begin  PutEnd  end
 -726361 26688 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0 0  setrgbcolor   0. true 6885.56393
8.5359 7056.2804 31.29819 0 Frame  gsave 1 0 0  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 6601.0365 31.29819 6601.0365
8.5359   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1 0 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 7340.80783 31.29819 7340.80783
8.5359   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1 0 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 6970.92216 31.29819 6970.92216
8.5359   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1 0 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 6885.56393 19.91682 6601.0365
19.91682   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1 0 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 7340.80783 19.91682 7056.2804
19.91682   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1 0 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 89953 34242 a
currentpoint initclip moveto
 89953 34242 a
921 34242 a
 currentpoint currentpoint translate 1 0.50516 div 1 0.50516 div scale
neg exch neg exch translate
 921 34242 a 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 10102 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 12094 a FD(WS)369 b(1.2)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 37717 54804 45 v 0 TeXcolorgray
24421 81281 a FH(20)p 0 TeXcolorgray eop end
%%Page: 21 21
TeXDict begin 21 20 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)827 b(1.2)f(-)i(6)f(Beladung)e(v)-60
b(on)827 b(LKW)f(-)i(O)-60 b(A)827 b(-)h(Matura)f(2015/16)g(-)-2331
4622 y(Haupttermin)p 0 TeXcolorgray -1391 7929 a FH(19.)p
0 TeXcolorgray 651 w(Bei)535 b(einer)f(V)-108 b(erk)-36
b(ehrsk)g(on)g(trolle)534 b(wurde)g(die)g(Beladung)g(v)-36
b(on)534 b(LKW)h(\374b)36 b(erpr\374ft.)533 b(140)j(der)921
9921 y(\374b)36 b(erpr\374ften)505 b(LKW)i(w)-36 b(aren)507
b(\374b)36 b(erladen.)506 b(Details)j(der)d(K)-36 b(on)g(trolle)507
b(sind)g(in)f(der)h(nac)-36 b(hste-)921 11913 y(henden)432
b(T)-108 b(ab)36 b(elle)434 b(zusammengefasst.)p 0 TeXcolorgray
0 TeXcolorgray 4313 14319 38193 45 v 4313 16310 45 1992
v 5021 15713 a(\334b)36 b(erladung)433 b(\334)h(in)f(T)-108
b(onnen)p 19919 16310 V 1372 w(\334)369 b Fx(<)g FB(1)221
b Fx(t)p 25358 16310 V 1373 w FB(1)g Fx(t)369 b Fw(\024)g
FH(\334)g Fx(<)g FB(3)221 b Fx(t)p 33909 16310 V 1373
w FB(3)g Fx(t)369 b Fw(\024)g FH(\334)g Fx(<)g FB(6)221
b Fx(t)p 42460 16310 V 4313 16355 38193 45 v 4313 18347
45 1992 v 5021 17749 a FH(Anzahl)433 b(der)h(LKW)p 19919
18347 V 7146 w(30)p 25358 18347 V 5695 w(50)p 33909 18347
V 7251 w(60)p 42460 18347 V 4313 18391 38193 45 v 921
23401 a(Stelle)405 b(die)g(Daten)g(der)f(obigen)h(T)-108
b(ab)36 b(elle)405 b(durc)-36 b(h)404 b(ein)h(Histogramm)g(dar.)g(Dab)
36 b(ei)406 b(sollen)f(die)921 25393 y(absoluten)433
b(H\344u\034gk)-36 b(eiten)434 b(als)g(Fl\344c)-36 b(heninhalte)433
b(v)-36 b(on)434 b(Rec)-36 b(h)g(tec)g(k)g(en)433 b(abgebildet)h(w)-36
b(erden.)p 0 TeXcolorgray 0 TeXcolorgray 5417 63082 a
 currentpoint currentpoint translate 1.51974 1.51974 scale neg exch
neg exch translate

5417 63082 a 5850 63082 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 209.98137 a add def
/d 0.0 a add neg def /h 209.99374 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 5850 63082 a 7929 59869 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 191.20247 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.45444
T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 180.97023 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 191.20247  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 191.20247  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 180.97023  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 180.97023
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 191.20247
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 180.97023  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 180.97023  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 191.20247  def /dT 1864790 abs 65536 div viceversa
{ neg } if def /DT 10. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 2.84544  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 2.84544  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 180.97023
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 191.20247
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
6684 60154 a FG(0)6213 57005 y(10)6213 53855 y(20)6213
50705 y(30)6213 47555 y(40)6213 44405 y(50)6213 41256
y(60)7694 61215 y(0)2679 b(1)h(2)g(3)f(4)h(5)f(6)7929
59869 y
tx@Dict begin  { 99.5846 -13.65813 } PutCoor PutBegin  end
 7929 59869 a 738 x FA(\334b)26 b(erladung)314
b(\(in)f(T)-78 b(onnen\))7929 59869 y
tx@Dict begin  PutEnd  end
 7929 59869 a 1 0 0
TeXcolorrgb @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  [ 0.0 0.0 28.45274
0.0 28.45274 85.36331 0.0 85.36331  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 1 0 0  setrgbcolor  0.15 .setopacityalpha  fill  grestore
gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  [ 28.45274 0.0 85.35823
0.0 85.35823 71.1361 28.45274 71.1361  /Lineto /lineto load def 0 
setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 1 0 0  setrgbcolor  0.15 .setopacityalpha
 fill  grestore gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  [ 85.35823 0.0 170.71646
0.0 170.71646 56.90887 85.35823 56.90887  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 1 0 0  setrgbcolor  0.15 .setopacityalpha
 fill  grestore gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 85.36331 0.0
85.36331   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 0.0 28.45274
85.36331   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 0.0 28.45274 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 85.36331 0.0 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 71.1361 28.45274
71.1361   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 0.0 85.35823
71.1361   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 0.0 85.35823
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 28.45274 71.1361 28.45274
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.71646 56.90887 85.35823
56.90887   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 170.71646 0.0 170.71646
56.90887   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 0.0 170.71646
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 85.35823 56.90887 85.35823
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 29094
63082 a
currentpoint initclip moveto
 29094 63082 a 5417 63082 a
 currentpoint currentpoint translate 1 1.51974 div 1 1.51974 div scale
neg exch neg exch translate
 5417 63082 a 47992
7929 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 9921 a FD(WS)369
b(1.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 65118 54804 45 v 0 TeXcolorgray 24421 81281 a FH(21)p
0 TeXcolorgray eop end
%%Page: 22 22
TeXDict begin 22 21 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(1.3)g(-)g(1)h(Bo)-60
b(xplot)716 b(zeic)-60 b(hnen)716 b(-)i(O)-60 b(A)718
b(-)f(BIFIE)p 0 TeXcolorgray -1391 4800 a FH(20.)p 0
TeXcolorgray 651 w(Eine)618 b(T)-108 b(ankstellenk)-36
b(ette)619 b(hat)e(in)h(den)g(Shops)f(v)-36 b(on)618
b(Filialen)h(die)f(Umsatzzahlen)g(eines)874 6792 y(Tiefk\374hlpro)36
b(dukts)514 b(jew)-36 b(eils)514 b(\374b)36 b(er)512
b(einen)g(Zeitraum)h(v)-36 b(on)513 b(15)g(W)-108 b(o)36
b(c)-36 b(hen)513 b(b)36 b(eobac)-36 b(h)g(tet)511 b(und)921
8784 y(der)433 b(Gr\366\377e)h(nac)-36 b(h)433 b(festgehalten.)p
921 11994 49436 45 v 921 13985 45 1992 v 1629 13388 a(Umsatzzahlen)p
10213 13985 V 1373 w(12)p 12886 13985 V 1374 w(12)p 15559
13985 V 1373 w(12)p 18233 13985 V 1373 w(12)p 20906 13985
V 1373 w(18)p 23579 13985 V 1374 w(18)p 26253 13985 V
1373 w(18)p 28926 13985 V 1373 w(18)p 31599 13985 V 1374
w(18)p 34273 13985 V 1373 w(23)p 36946 13985 V 1373 w(23)p
39619 13985 V 1374 w(23)p 42292 13985 V 1373 w(23)p 44966
13985 V 1373 w(23)p 47639 13985 V 1373 w(24)p 50312 13985
V 921 14030 49436 45 v 921 15867 a(Zeic)-36 b(hne)619
b(den)f(en)-36 b(tsprec)g(henden)617 b(Bo)-36 b(xplot)620
b(und)f(trage)g(die)h(angegeb)36 b(enen)619 b(Kennzahlen)921
17859 y(un)-36 b(ter)432 b(der)h(Gra\034k)h(ein!)p 921
20559 51002 45 v 921 29546 45 8988 v 3934 28949 a
 currentpoint currentpoint translate 0.60104 0.60104 scale neg exch
neg exch translate
 3934
28949 a 4368 28949 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 672.06929 a add def
/d 0.0 a add neg def /h 126.09666 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 4368 28949 a -5639 23320 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 762.46544
 0 90.39615  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 90.39615  762.46544  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -50.85207  def /maxTickline
75.2446  def /dT 3729358 abs 65536 div viceversa { neg } if def /DT
2. abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 75.2446 0.0 -50.85207   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 762.46544 0.0 90.39615 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 75.2446
 0 -50.85207  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq true and exch 2
lt false and or { /viceversa -50.85207  75.2446  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline 90.39615  def /maxTickline
762.46544  def /dT 3729358 abs 65536 div viceversa { neg } if def /DT
2. abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ yStart } def /MaxValue { yEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {
 0  setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 75.2446 0.0 -50.85207   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 762.46544 0.0 90.39615 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -7064 17439 a
FB(2)335 24931 y(2)5650 b(4)f(6)g(8)5324 b(10)4999 b(12)g(14)h(16)f(18)
g(20)g(22)g(24)h(26)-76566 b(2)p 1 0 0 TeXcolorrgb -5639
23320 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor   0. true 341.43292
14.22636 654.4131 42.67911 0 Frame  gsave 0.6 0.2 0  setrgbcolor  0.1
.setopacityalpha  fill  grestore gsave 0.8 SLW 0.6 0.2 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 341.43292 42.67911 341.43292
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 0.2 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 682.86584 42.67911 682.86584
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 0.2 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 512.14938 42.67911 512.14938
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 0.2 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 341.43292 28.45274 341.43292
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 0.2 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 682.86584 28.45274 654.4131
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 0.2 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 78763
28949 a
currentpoint initclip moveto
 78763 28949 a 3934 28949 a
 currentpoint currentpoint translate 1 0.60104 div 1 0.60104 div scale
neg exch neg exch translate
 3934 28949 a 51879
29546 45 8988 v 921 29591 51002 45 v 921 31649 45 2059
v 3293 31051 a FH(Minim)-36 b(um)p 11112 31649 V 3572
w(erstes)434 b(Quartil)p 21304 31649 V 4205 w(Median)p
31496 31649 V 3955 w(drittes)f(Quartil)p 41687 31649
V 3197 w(Maxim)-36 b(um)p 51879 31649 V 921 33707 V 3945
33110 a Fx(m)369 b FB(=)p 1 0 0 TeXcolorrgb 368 w(12)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 11112
33707 V 13927 33109 a Fx(Q)14957 33308 y FG(1)15852 33109
y FB(=)p 1 0 0 TeXcolorrgb 369 w(12)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 21304 33707 V 5156 w
Fx(med)f FB(=)p 1 0 0 TeXcolorrgb 369 w(18)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 31496 33707 V 5155 w
Fx(Q)35340 33308 y FG(3)36235 33109 y FB(=)p 1 0 0 TeXcolorrgb
369 w(23)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
41687 33707 V 5665 w Fx(M)508 b FB(=)p 1 0 0 TeXcolorrgb
369 w(24)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
51879 33707 V 921 33751 51002 45 v 47992 4800 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a FD(WS)369 b(1.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 35788
54804 45 v -2331 41089 a FI(WS)717 b(1.3)g(-)g(2)h(Geldausgab)60
b(en)715 b(-)i(O)-60 b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray
-1391 44396 a FH(21.)p 0 TeXcolorgray 651 w(Karin)563
b(hat)g(das)g(arithmetisc)-36 b(he)563 b(Mittel)g(ihrer)g(monatlic)-36
b(hen)563 b(A)-36 b(usgab)36 b(en)562 b(im)i(Zeitraum)887
46388 y(J\344nner)499 b(bis)g(\(einsc)-36 b(hlie\377lic)g(h\))499
b(Oktob)36 b(er)499 b(mit)g FC(e)716 b FH(25)500 b(errec)-36
b(hnet.)498 b(Im)i(No)-36 b(v)g(em)g(b)36 b(er)499 b(gibt)g(sie)921
48380 y FC(e)650 b FH(35)434 b(und)f(im)h(Dezem)-36 b(b)36
b(er)433 b FC(e)650 b FH(51)435 b(aus.)921 50926 y(Berec)-36
b(hne)325 b(das)g(arithmetisc)-36 b(he)325 b(Mittel)g(f\374r)h(die)f
(monatlic)-36 b(hen)325 b(A)-36 b(usgab)36 b(en)325 b(in)h(diesem)f
(Jahr.)p 1 0 0 TeXcolorrgb 921 54758 740 45 v 921 55463
a Fx(x)369 b FB(=)3543 54940 y FG(25)p Fy(\001)p FG(10+35+51)p
3543 55153 5489 45 v 5816 55921 a(12)p 921 59296 740
45 v 921 60000 a Fx(x)g FB(=)g(28)921 64538 y FH(Die)434
b(monatlic)-36 b(hen)434 b(A)-36 b(usgab)36 b(en)433
b(b)36 b(etragen)433 b(durc)-36 b(hsc)g(hnittlic)g(h)432
b FC(e)650 b FH(28.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 44396 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 46388 a FD(WS)369 b(1.3)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 68271 54804 45 v 0 TeXcolorgray
24421 81281 a FH(22)p 0 TeXcolorgray eop end
%%Page: 23 23
TeXDict begin 23 22 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)701 b(1.3)h(-)g(3)g(Mittelw)-60
b(ert)701 b(einfac)-60 b(her)701 b(Datens\344tze)g(-)h(MC)g(-)h(BIFIE)p
0 TeXcolorgray -1391 4800 a FH(22.)p 0 TeXcolorgray 651
w(Die)544 b(un)-36 b(ten)542 b(stehende)h(T)-108 b(ab)36
b(elle)544 b(bietet)f(eine)g(\334b)36 b(ersic)-36 b(h)g(t)543
b(\374b)36 b(er)543 b(die)g(Zahl)h(der)f(Ein)-36 b(b\374rge-)921
6792 y(rungen)519 b(in)i(\326sterreic)-36 b(h)519 b(und)g(in)i(den)e
(jew)-36 b(eiligen)522 b(Bundesl\344ndern)d(im)i(Jahr)f(2010)i(nac)-36
b(h)921 8784 y(Quartalen.)676 b(Ein)e(Quartal)h(fasst)g(dab)36
b(ei)674 b(jew)-36 b(eils)676 b(den)e(Zeitraum)h(v)-36
b(on)674 b(drei)h(Monaten)921 10776 y(zusammen.)358 b(Das)h(1.)g
(Quartal)f(ist)g(der)g(Zeitraum)f(v)-36 b(on)358 b(J\344nner)g(bis)g
(M\344rz,)g(das)g(2.)h(Quartal)921 12768 y(der)433 b(Zeitraum)g(v)-36
b(on)434 b(April)g(bis)f(Juni)h(usw.)p -2331 16133 53254
45 v -2331 16133 V -2331 17477 45 1345 v -1485 17738
a FA(Quartal)p 2507 17477 V 3215 17086 a(\326ster-)3215
18391 y(reic)-26 b(h)p 7344 17477 V 7388 17477 V 23587
17046 a(Bundesland)314 b(des)g(W)-78 b(ohnortes)p 50879
17477 V 7388 17522 43535 45 v -2331 20087 45 2611 v 2507
20087 V 7344 20087 V 8114 18391 a(Burgen-)8896 19696
y(land)p 12181 20087 V 12936 19044 a(K\344rn)-26 b(ten)p
17018 20087 V 17880 18391 a(Nieder-)17727 19696 y(\366sterreic)g(h)p
21855 20087 V 22926 18391 a(Ob)26 b(er-)22564 19696 y(\366sterreic)-26
b(h)p 26693 20087 V 27401 19044 a(Salzburg)p 31530 20087
V 32504 18391 a(Steier-)32912 19696 y(mark)p 36367 20087
V 37788 19044 a(Tirol)p 41204 20087 V 42109 18391 a(V)-78
b(orarl-)42743 19696 y(b)26 b(erg)p 46041 20087 V 47398
19044 a(Wien)p 50879 20087 V -2331 20132 53254 45 v -2331
20132 V -2331 23056 V -2331 23056 V -2331 25666 45 2611
v -1622 23969 a(1.Quartal)-843 25274 y(2010)p 2507 25666
V 4006 24622 a(1142)p 7344 25666 V 3663 w(1)p 12181 25666
V 3897 w(119)p 17018 25666 V 3662 w(87)p 21855 25666
V 3662 w(216)p 26693 25666 V 3428 w(112)p 31530 25666
V 3427 w(101)p 36367 25666 V 3427 w(131)p 41204 25666
V 3663 w(97)p 46041 25666 V 3662 w(278)p 50879 25666
V -2331 25710 53254 45 v -2331 25710 V -2331 28320 45
2611 v -1622 26624 a(2.Quartal)-843 27929 y(2010)p 2507
28320 V 4006 27277 a(1605)p 7344 28320 V 3428 w(80)p
12181 28320 V 3662 w(120)p 17018 28320 V 3427 w(277)p
21855 28320 V 3427 w(254)p 26693 28320 V 3428 w(148)p
31530 28320 V 3427 w(106)p 36367 28320 V 3427 w(138)p
41204 28320 V 3427 w(125)p 46041 28320 V 3428 w(357)p
50879 28320 V -2331 28365 53254 45 v -2331 28365 V -2331
30975 45 2611 v -1622 29278 a(3.Quartal)-843 30583 y(2010)p
2507 30975 V 4006 29931 a(1532)p 7344 30975 V 3663 w(4)p
12181 30975 V 3897 w(119)p 17018 30975 V 3427 w(187)p
21855 30975 V 3427 w(231)p 26693 30975 V 3663 w(98)p
31530 30975 V 3662 w(121)p 36367 30975 V 3427 w(122)p
41204 30975 V 3663 w(61)p 46041 30975 V 3662 w(589)p
50879 30975 V -2331 31019 53254 45 v -2331 31019 V -2331
33629 45 2611 v -1622 31932 a(4.Quartal)-843 33238 y(2010)p
2507 33629 V 4006 32585 a(1856)p 7344 33629 V 3428 w(53)p
12181 33629 V 3662 w(113)p 17018 33629 V 3427 w(248)p
21855 33629 V 3427 w(294)p 26693 33629 V 3428 w(158)p
31530 33629 V 3427 w(102)p 36367 33629 V 3427 w(183)p
41204 33629 V 3427 w(184)p 46041 33629 V 3663 w(52)p
50879 33629 V -2331 33673 53254 45 v -2331 33673 V 921
35972 a Fz(Quelle:)275 b(ST)-65 b(A)g(TISTIK)278 b(A)-22
b(USTRIA)921 38518 y FH(Kreuze)487 b(die)g(b)36 b(eiden)486
b(k)-36 b(orrekten)488 b(Berec)-36 b(hn)g(ungsm\366glic)g(hk)g(eiten)
486 b(f\374r)h(den)f(Mittelw)-36 b(ert)488 b(der)921
40510 y(Ein)-36 b(b\374rgerungen)432 b(im)i(Bundesland)e(K\344rn)-36
b(ten)433 b(pro)g(Quartal)h(im)f(Jahr)h(2010)h(an.)p
10871 43210 24643 45 v 10871 46428 45 3219 v 11579 44446
1138 45 v 11579 45151 a Fx(m)369 b FB(=)g(\(1142)296
b(+)f(1605)h(+)f(1532)i(+)d(1856\))371 b(:)e(9)p 33103
46428 45 3219 v 35469 46428 V 10871 46472 24643 45 v
10871 49914 45 3442 v 11579 47806 1138 45 v 11579 48511
a Fx(m)g FB(=)14599 47988 y FG(2)p Fy(\001)p FG(119+113+120)p
14599 48201 6430 45 v 17579 48969 a(4)p 33103 49914 45
3442 v 1 0 0 TeXcolorrgb 33812 48525 a FF(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 35469 49914 V 10871
49958 24643 45 v 10871 52787 45 2829 v 11579 51035 1138
45 v 11579 51740 a Fx(m)g FB(=)g(119)296 b(+)f(120)h(+)f(119)h(+)f(113)
370 b(:)f(4)p 33103 52787 45 2829 v 35469 52787 V 10871
52831 24643 45 v 10871 56272 45 3442 v 11579 54165 1138
45 v 11579 54870 a Fx(m)g FB(=)14835 54347 y FG(1)p 14599
54560 941 45 v 14599 55328 a(12)15968 54870 y Fw(\001)296
b FB(\(113)g(+)e(2)i Fw(\001)f FB(119)h(+)f(120\))h Fw(\001)f
FB(3)p 33103 56272 45 3442 v 1 0 0 TeXcolorrgb 33812
54884 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 35469 56272 V 10871 56317 24643 45 v 10871
59758 45 3442 v 11579 57651 1138 45 v 11579 58355 a Fx(m)369
b FB(=)14599 57832 y FG(113+119+119+120)p 14599 58045
7841 45 v 18049 58813 a(12)22868 58355 y Fw(\001)296
b FB(4)p 33103 59758 45 3442 v 35469 59758 V 10871 59803
24643 45 v 47992 4800 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 6792 a FD(WS)369 b(1.3)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 63831 54804 45 v 0 TeXcolorgray
24421 81281 a FH(23)p 0 TeXcolorgray eop end
%%Page: 24 24
TeXDict begin 24 23 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(1.3)g(-)g(4)h(Datenreihe)e(-)h
(MC)h(-)g(BIFIE)p 0 TeXcolorgray -1391 4800 a FH(23.)p
0 TeXcolorgray 651 w(Der)600 b(arithmetisc)-36 b(he)600
b(Mittelw)-36 b(ert)p 18426 4096 740 45 v 600 w Fx(x)600
b FH(der)g(Datenreihe)g Fx(x)29707 4999 y FG(1)30233
4800 y Fx(;)221 b(x)31554 4999 y FG(2)32080 4800 y Fx(;)g(:::;)g(x)
35066 4999 y FG(10)36665 4800 y FH(ist)p 38645 4096 V
600 w Fx(x)653 b FB(=)f(20)p FH(.)602 b(Die)921 6792
y(Standardab)-36 b(w)g(eic)g(h)g(ung)432 b Fx(\033)481
b FH(der)433 b(Datenreihe)h(ist)g Fx(\033)416 b FB(=)369
b(5)p FH(.)921 9338 y(Die)434 b(Datenreihe)g(wird)g(um)f(die)g(b)36
b(eiden)433 b(W)-108 b(erte)433 b Fx(x)25938 9537 y FG(11)27304
9338 y FB(=)368 b(19)435 b FH(und)d Fx(x)33759 9537 y
FG(12)35124 9338 y FB(=)369 b(21)434 b FH(erg\344nzt.)921
11883 y(Kreuze)f(die)h(b)36 b(eiden)433 b(zutre\033enden)e(A)-36
b(ussagen)434 b(an.)p 1067 12850 44250 45 v 1067 17905
45 5056 v 1775 14710 a(Das)h(Maxim)-36 b(um)434 b(der)f(neuen)f
(Datenreihe)i Fx(x)23910 14909 y FG(1)24436 14710 y Fx(;)221
b(:::;)g(x)27422 14909 y FG(12)28854 14710 y FH(ist)434
b(gr\366\377er)g(als)g(das)g(Maxi-)1775 16702 y(m)-36
b(um)433 b(der)g(urspr\374nglic)-36 b(hen)432 b(Datenreihe)i
Fx(x)23459 16901 y FG(1)23985 16702 y Fx(;)221 b(:::;)g(x)26971
16901 y FG(10)27969 16702 y FH(.)p 42907 17905 V 45273
17905 V 1067 17949 44250 45 v 1067 23004 45 5056 v 1775
19809 a(Die)435 b(Spann)-36 b(w)g(eite)432 b(der)h(neuen)g(Datenreihe)h
Fx(x)24373 20008 y FG(1)24898 19809 y Fx(;)221 b(:::;)g(x)27884
20008 y FG(12)29317 19809 y FH(ist)433 b(um)g(2)h(gr\366\377er)h(als)f
(die)1775 21801 y(Spann)-36 b(w)g(eite)433 b(der)g(urspr\374nglic)-36
b(hen)432 b(Datenreihe)i Fx(x)27036 22000 y FG(1)27562
21801 y Fx(;)221 b(:::;)g(x)30548 22000 y FG(10)31546
21801 y FH(.)p 42907 23004 V 45273 23004 V 1067 23049
44250 45 v 1067 28104 45 5056 v 1775 24908 a(Der)434
b(Median)g(der)f(neuen)f(Datenreihe)i Fx(x)22313 25107
y FG(1)22839 24908 y Fx(;)221 b(:::;)g(x)25825 25107
y FG(12)27257 24908 y FH(stimm)-36 b(t)433 b(immer)h(mit)f(dem)1775
26900 y(Median)h(der)f(urspr\374nglic)-36 b(hen)432 b(Datenreihe)h
Fx(x)24831 27099 y FG(1)25357 26900 y Fx(;)221 b(:::;)g(x)28343
27099 y FG(10)29775 26900 y FH(\374b)36 b(erein.)p 42907
28104 V 45273 28104 V 1067 28148 44250 45 v 1067 33203
45 5056 v 1775 30008 a(Die)435 b(Standardab)-36 b(w)g(eic)g(h)g(ung)431
b(der)i(neuen)g(Datenreihe)h Fx(x)29648 30207 y FG(1)30174
30008 y Fx(;)221 b(:::;)g(x)33160 30207 y FG(12)34592
30008 y FH(ist)433 b(kleiner)i(als)1775 32000 y(die)f(Standardab)-36
b(w)g(eic)g(h)g(ung)432 b(der)h(urspr\374nglic)-36 b(hen)432
b(Datenreihe)h Fx(x)34406 32199 y FG(1)34932 32000 y
Fx(;)221 b(:::;)g(x)37918 32199 y FG(10)38917 32000 y
FH(.)p 42907 33203 V 1 0 0 TeXcolorrgb 43616 31007 a
FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45273 33203 V 1067 33247 44250 45 v 1067 40294 45 7047
v 1775 35107 a FH(Der)434 b(arithmetisc)-36 b(he)433
b(Mittelw)-36 b(ert)434 b(der)f(neuen)g(Datenreihe)g
Fx(x)32147 35306 y FG(1)32673 35107 y Fx(;)221 b(:::;)g(x)35659
35306 y FG(12)37091 35107 y FH(stimm)-36 b(t)1775 37099
y(mit)716 b(dem)f(arithmetisc)-36 b(hen)714 b(Mittelw)-36
b(ert)716 b(der)e(urspr\374nglic)-36 b(hen)714 b(Datenreihe)1775
39091 y Fx(x)2514 39290 y FG(1)3040 39091 y Fx(;)221
b(:::;)g(x)6026 39290 y FG(10)7458 39091 y FH(\374b)36
b(erein.)p 42907 40294 V 1 0 0 TeXcolorrgb 43616 37103
a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45273 40294 V 1067 40338 44250 45 v 47992 4800 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a FD(WS)369 b(1.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 44366
54804 45 v -2331 49635 a FI(WS)759 b(1.3)g(-)h(5)g(Arithmetisc)-60
b(hes)758 b(Mittel)h(einer)f(Datenreihe)h(-)h(O)-60 b(A)760
b(-)-2331 52657 y(BIFIE)p 0 TeXcolorgray -1391 55964
a FH(24.)p 0 TeXcolorgray 651 w(F)-27 b(\374r)433 b(das)g(arithmetisc)
-36 b(he)433 b(Mittel)h(einer)f(Datenreihe)h Fx(x)28274
56163 y FG(1)28800 55964 y Fx(;)221 b(x)30121 56163 y
FG(2)30648 55964 y Fx(;)g(:::;)g(x)33634 56163 y FG(24)35066
55964 y FH(gilt:)p 37739 55259 740 45 v 434 w Fx(x)370
b FB(=)e(115)p FH(.)921 58509 y(Die)526 b(Standardab)-36
b(w)g(eic)g(h)g(ung)524 b(der)h(Datenreihe)g(ist)h Fx(s)27183
58708 y Fr(x)28293 58509 y FB(=)f(12)p FH(.)i(Die)g(W)-108
b(erte)525 b(einer)g(zw)-36 b(eiten)921 60501 y(Datenreihe)400
b Fx(y)8151 60700 y FG(1)8677 60501 y Fx(;)221 b(y)9893
60700 y FG(2)10420 60501 y Fx(;)g(:::;)g(y)13301 60700
y FG(24)14700 60501 y FH(en)-36 b(tstehen,)399 b(indem)g(man)h(zu)g
(den)f(W)-108 b(erten)400 b(der)f(ersten)h(Daten-)921
62493 y(reihe)433 b(jew)-36 b(eils)435 b(8)f(addiert,)g(also)g
Fx(y)17394 62692 y FG(1)18289 62493 y FB(=)369 b Fx(x)20409
62692 y FG(1)21230 62493 y FB(+)295 b(8)p Fx(;)221 b(y)24403
62692 y FG(2)25299 62493 y FB(=)368 b Fx(x)27418 62692
y FG(2)28240 62493 y FB(+)294 b(8)434 b FH(usw.)921 65039
y(Gib)523 b(den)g(Mittelw)-36 b(ert)p 12617 64334 682
45 v 524 w Fx(y)572 b FH(und)523 b(die)g(Standardab)-36
b(w)g(eic)g(h)g(ung)522 b Fx(s)31543 65238 y Fr(y)32619
65039 y FH(der)h(zw)-36 b(eiten)524 b(Datenreihe)921
67031 y(an.)p 921 68871 V 921 69576 a Fx(y)417 b FB(=)p
1 0 0 TeXcolorrgb FH(123)p 0 0 0 TeXcolorrgb 921 72121
a Fx(s)1534 72320 y Fr(y)2455 72121 y FB(=)p 1 0 0 TeXcolorrgb
FH(12)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 55964 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 57956 a FD(WS)369 b(1.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 75968
54804 45 v 0 TeXcolorgray 24421 81281 a FH(24)p 0 TeXcolorgray
eop end
%%Page: 25 25
TeXDict begin 25 24 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(1.3)g(-)g(6)h(Geordnete)e
(Urliste)g(-)i(MC)g(-)f(BIFIE)p 0 TeXcolorgray -1391
4800 a FH(25.)p 0 TeXcolorgray 651 w(9)526 b(Kinder)g(wurden)g
(dahingehend)f(b)36 b(efragt,)527 b(wie)g(viele)g(Stunden)d(sie)j(am)f
(W)-108 b(o)36 b(c)-36 b(henende)921 6792 y(fernsehen.)433
b(Die)h(nac)-36 b(hstehende)432 b(T)-108 b(ab)36 b(elle)435
b(gibt)e(ihre)h(An)-36 b(t)g(w)g(orten)432 b(wieder.)p
0 TeXcolorgray 0 TeXcolorgray 15097 9198 16624 45 v 15097
11190 45 1992 v 15806 10592 a(Kind)p 21455 11190 V 3540
w(F)-108 b(ernsehstunden)p 31676 11190 V 15097 11234
16624 45 v 15097 13226 45 1992 v 15806 12629 a(F)g(ritz)p
21455 13226 V 7765 w(2)p 31676 13226 V 15097 13271 16624
45 v 15097 15262 45 1992 v 15806 14665 a(Susi)p 21455
15262 V 8137 w(2)p 31676 15262 V 15097 15307 16624 45
v 15097 17299 45 1992 v 15806 16701 a(Mic)-36 b(hael)p
21455 17299 V 6050 w(3)p 31676 17299 V 15097 17343 16624
45 v 15097 19335 45 1992 v 15806 18737 a(Martin)p 21455
19335 V 6519 w(3)p 31676 19335 V 15097 19379 16624 45
v 15097 21371 45 1992 v 15806 20773 a(Angelika)p 21455
21371 V 5473 w(4)p 31676 21371 V 15097 21415 16624 45
v 15097 23407 45 1992 v 15806 22810 a(P)g(aula)p 21455
23407 V 7224 w(5)p 31676 23407 V 15097 23451 16624 45
v 15097 25443 45 1992 v 15806 24846 a(Max)p 21455 25443
V 7929 w(5)p 31676 25443 V 15097 25488 16624 45 v 15097
27480 45 1992 v 15806 26882 a(Hub)36 b(ert)p 21455 27480
V 6410 w(5)p 31676 27480 V 15097 27524 16624 45 v 15097
29516 45 1992 v 15806 28918 a(Lisa)p 21455 29516 V 8120
w(8)p 31676 29516 V 15097 29560 16624 45 v 921 32578
a(Kreuze)433 b(die)h(b)36 b(eiden)433 b(zutre\033enden)e(A)-36
b(ussagen)434 b(an.)p 1062 33545 44260 45 v 1062 38342
45 4797 v 1770 35405 a(Der)415 b(Median)f(w\374rde)g(sic)-36
b(h)414 b(erh\366hen,)g(w)-36 b(enn)414 b(F)-108 b(ritz)414
b(um)g(eine)g(Stunde)f(mehr)h(fern-)1770 37397 y(sehen)433
b(w\374rde.)p 42912 38342 V 45277 38342 V 1062 38386
44260 45 v 1062 41191 45 2805 v 1770 40246 a(Der)383
b(Median)f(ist)g(kleiner)h(als)f(das)g(arithmetisc)-36
b(he)382 b(Mittel)g(der)g(F)-108 b(ernsehstunden.)p 42912
41191 V 1 0 0 TeXcolorrgb 43621 40121 a FF(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 41191
V 1062 41235 44260 45 v 1062 44298 45 3064 v 1770 43095
a FH(Die)435 b(Spann)-36 b(w)g(eite)432 b(der)i(F)-108
b(ernsehstunden)430 b(b)36 b(etr\344gt)434 b(3.)p 42912
44298 V 45277 44298 V 1062 44343 44260 45 v 1062 49139
45 4797 v 1770 46203 a(Das)h(arithmetisc)-36 b(he)433
b(Mittel)h(w\374rde)f(sic)-36 b(h)433 b(erh\366hen,)g(w)-36
b(enn)433 b(Lisa)h(anstelle)g(v)-36 b(on)434 b(8)1770
48194 y(Stunden)e(10)i(Stunden)e(fernsehen)h(w\374rde.)p
42912 49139 V 1 0 0 TeXcolorrgb 43621 47073 a FF(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
49139 V 1062 49184 44260 45 v 1062 51988 45 2805 v 1770
51044 a FH(Der)h(Mo)36 b(dus)433 b(ist)h(8.)p 42912 51988
V 45277 51988 V 1062 52033 44260 45 v 47992 4800 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a FD(WS)369 b(1.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 56061
54804 45 v 0 TeXcolorgray 24421 81281 a FH(25)p 0 TeXcolorgray
eop end
%%Page: 26 26
TeXDict begin 26 25 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(1.3)g(-)g(7)h(Sp)60
b(ort)-60 b(w)g(ettb)60 b(ew)-60 b(erb)715 b(-)i(MC)h(-)g(BIFIE)p
0 TeXcolorgray -1391 4800 a FH(26.)p 0 TeXcolorgray 651
w(150)477 b(Grazer)f(und)f(170)i(Wiener)f(Sc)-36 b(h)g(\374ler/innen)
474 b(nahmen)i(an)g(einem)g(Sp)36 b(ort)-36 b(w)g(ettb)36
b(ew)-36 b(erb)921 6792 y(teil.)370 b(Der)f(V)-108 b(ergleic)-36
b(h)369 b(der)f(Listen)g(der)g(Ho)36 b(c)-36 b(hsprungergebnisse)368
b(ergibt)h(f\374r)g(b)36 b(eide)368 b(Sc)-36 b(h)g(\374ler-)921
8784 y(grupp)36 b(en)367 b(das)h(gleic)-36 b(he)368 b(arithmetisc)-36
b(he)368 b(Mittel)g(v)-36 b(on)369 b(1,05)g(m)f(so)-36
b(wie)369 b(eine)f(empirisc)-36 b(he)368 b(Stan-)921
10776 y(dardab)-36 b(w)g(eic)g(h)g(ung)432 b(f\374r)i(die)f(Grazer)g(v)
-36 b(on)434 b(0,22)h(m)f(und)e(f\374r)h(die)h(Wiener)g(v)-36
b(on)434 b(0,3)g(m.)921 13322 y(En)-36 b(tsc)g(heide,)419
b(w)-36 b(elc)g(he)419 b(A)-36 b(ussagen)419 b(aus)h(den)e(gegeb)36
b(enen)420 b(Daten)f(gesc)-36 b(hlossen)420 b(w)-36 b(erden)419
b(k)-36 b(\366n-)921 15314 y(nen,)433 b(und)g(kreuze)g(die)h(b)36
b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434 b(an.)p
1062 16280 44260 45 v 1062 21490 45 5211 v 1770 18221
a(Die)349 b(Sprungh\366hen)d(der)h(Grazer)g(Sc)-36 b(h)g(\374ler/innen)
347 b(w)-36 b(eic)g(hen)347 b(v)-36 b(om)349 b(arithmetisc)-36
b(hen)1770 20213 y(Mittel)434 b(nic)-36 b(h)g(t)433 b(so)h(stark)g(ab)f
(wie)i(die)e(H\366hen)g(der)g(Wiener)h(Sc)-36 b(h)g(\374ler/innen.)p
42912 21490 V 1 0 0 TeXcolorrgb 43621 19217 a FF(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
21490 V 1062 21535 44260 45 v 1062 26663 45 5129 v 1770
23394 a FH(Das)427 b(arithmetisc)-36 b(he)426 b(Mittel)g(repr\344sen)
-36 b(tiert)425 b(die)h(Leistungen)f(der)g(Grazer)h(Sc)-36
b(h)g(\374-)1770 25386 y(ler/innen)434 b(b)36 b(esser)433
b(als)h(die)g(der)f(Wiener.)p 42912 26663 V 1 0 0 TeXcolorrgb
43621 24431 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 26663 V 1062 26708 44260 45 v 1062
31504 45 4797 v 1770 28568 a FH(Die)310 b(Standardab)-36
b(w)g(eic)g(h)g(ung)307 b(der)i(Grazer)f(ist)h(aufgrund)f(der)h
(geringeren)g(T)-108 b(eilneh-)1770 30560 y(merzahl)434
b(kleiner)g(als)h(die)e(der)g(Wiener.)p 42912 31504 V
45277 31504 V 1062 31549 44260 45 v 1062 36759 45 5211
v 1770 33490 a(V)-108 b(on)434 b(den)e(Sprungh\366hen)g(\(gemessen)h
(in)h(m\))f(der)g(Wiener)h(liegt)g(k)-36 b(ein)434 b(W)-108
b(ert)433 b(au-)1770 35482 y(\377erhalb)h(des)f(In)-36
b(terv)-72 b(alls)435 b FB([)8 b(0)p Fx(;)p FB(45;)221
b(1)p Fx(;)p FB(65])s FH(.)p 42912 36759 V 45277 36759
V 1062 36803 44260 45 v 1062 39866 45 3064 v 1770 38663
a(Beide)434 b(Listen)f(hab)36 b(en)433 b(den)g(gleic)-36
b(hen)434 b(Median.)p 42912 39866 V 45277 39866 V 1062
39910 44260 45 v 47992 4800 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 6792 a FD(WS)369 b(1.3)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 43938 54804 45 v 0 TeXcolorgray
24421 81281 a FH(26)p 0 TeXcolorgray eop end
%%Page: 27 27
TeXDict begin 27 26 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(1.3)g(-)g(8)h(Mittlere)e
(Punktezahl)g(-)i(O)-60 b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray
-1391 4800 a FH(27.)p 0 TeXcolorgray 651 w(Ein)752 b(T)-108
b(est)752 b(en)-36 b(th\344lt)751 b(f\374nf)h(A)-36 b(ufgab)36
b(en,)753 b(die)f(jew)-36 b(eils)753 b(n)-36 b(ur)921
6792 y(mit)442 b(einem)g(Punkt)g(\(alles)h(ric)-36 b(h)g(tig\))442
b(o)36 b(der)443 b(k)-36 b(einem)442 b(Punkt)769 8784
y(\(nic)-36 b(h)g(t)432 b(alles)j(ric)-36 b(h)g(tig\))433
b(b)36 b(ew)-36 b(ertet)433 b(w)-36 b(erden.)921 12768
y(Die)396 b(neb)36 b(enstehende)394 b(Gra\034k)h(zeigt)h(das)f
(Ergebnis)g(dieses)874 14760 y(T)-108 b(ests)434 b(f\374r)f(eine)h(b)36
b(estimm)-36 b(te)433 b(Klasse.)p 0 TeXcolorgray 0 TeXcolorgray
31014 24382 a
 currentpoint currentpoint translate 0.53024 0.53024 scale neg exch
neg exch translate
 31014 24382 a 31881 24382 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 214.01466 a add def
/d 0.0 a add neg def /h 331.73 a add def a neg d moveto a neg h L w
h L w d L closepath clip newpath 0 0 moveto setmatrix end
 31881 24382
a 36988 20422 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 12 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 170.72557 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.45274
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 295.95134 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 170.72557
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true
and or { /viceversa 0.0  170.72557  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 295.95134  def
/dT 1864679 abs 65536 div viceversa { neg } if def /DT 1 abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 295.95134 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.72557 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 295.95134
 0 0.0  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false
and or { /viceversa 0.0  295.95134  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 170.72557  def
/dT 1864679 abs 65536 div viceversa { neg } if def /DT 1. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 295.95134 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.72557 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 35743 20707 a
FG(0)35743 17557 y(1)35743 14408 y(2)35743 11258 y(3)35743
8109 y(4)35743 4959 y(5)35743 1809 y(6)35743 -1340 y(7)35743
-4490 y(8)35743 -7639 y(9)35273 -10789 y(10)36988 20422
y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 56.90549 0.0 56.90549
85.35823 28.45274 85.35823 28.45274 0.0  /Lineto /lineto load def 0
 setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 85.35823 0.0 85.35823
113.81097 56.90549 113.81097 56.90549 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 113.81097 0.0 113.81097
85.35823 85.35823 85.35823 85.35823 0.0  /Lineto /lineto load def 0
 setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 142.26372 0.0 142.26372
170.71646 113.81097 170.71646 113.81097 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 170.71646 0.0 170.71646
142.26372 142.26372 142.26372 142.26372 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 85.35823 28.45274 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 85.35823 28.45274 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 0.0 56.90549 85.35823   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 0.0 56.90549 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 28.45274 85.35823 28.45274
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 56.90549 85.35823 28.45274
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 56.90549 0.0 56.90549 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 28.45274 0.0 56.90549 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 56.90549 113.81097 56.90549
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35823 113.81097 56.90549
113.81097   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35823 0.0 85.35823 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 56.90549 0.0 85.35823 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35823 85.35823 85.35823
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.81097 85.35823 85.35823
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.81097 0.0 113.81097 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35823 0.0 113.81097 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.81097 170.71646 113.81097
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 170.71646 113.81097
170.71646   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 0.0 142.26372 170.71646
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.81097 0.0 142.26372 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 142.26372 142.26372
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 170.71646 142.26372 142.26372
142.26372   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 167.871 0.0 167.871 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 0.0 170.71646 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 36988 20422 a
tx@Dict begin  { 54.43819 -22.90945 } PutCoor PutBegin  end
 36988 20422 a
915 x FH(erzielte)h(Punkte)36988 20422 y
tx@Dict begin  PutEnd  end
 36988 20422
a 36988 20422 a
tx@Dict begin  { -25.18182 219.47417 } PutCoor PutBegin  end
 36988 20422 a 37903 34439 a
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 37903 34439
a FH(Anzahl)g(der)f(Sc)-36 b(h)g(\374lerInnen)51921 34439
y
 currentpoint grestore moveto
 51921 34439 a 36988 20422 a
tx@Dict begin  PutEnd  end
 36988 20422 a 36988 20422
a
tx@Dict begin  { 14.22636 -5.69046 } PutCoor PutBegin  end
 36988 20422 a 836 x FH(0)36988 20422 y
tx@Dict begin  PutEnd  end
 36988 20422
a 36988 20422 a
tx@Dict begin  { 42.67911 -5.69046 } PutCoor PutBegin  end
 36988 20422 a 836 x FH(1)36988 20422
y
tx@Dict begin  PutEnd  end
 36988 20422 a 36988 20422 a
tx@Dict begin  { 71.13185 -5.69046 } PutCoor PutBegin  end
 36988 20422 a 836 x FH(2)36988
20422 y
tx@Dict begin  PutEnd  end
 36988 20422 a 36988 20422 a
tx@Dict begin  { 99.5846 -5.69046 } PutCoor PutBegin  end
 36988 20422 a 836
x FH(3)36988 20422 y
tx@Dict begin  PutEnd  end
 36988 20422 a 36988 20422 a
tx@Dict begin  { 128.03734 -5.69046 } PutCoor PutBegin  end
 36988
20422 a 836 x FH(4)36988 20422 y
tx@Dict begin  PutEnd  end
 36988 20422 a 36988
20422 a
tx@Dict begin  { 156.49008 -5.69046 } PutCoor PutBegin  end
 36988 20422 a 836 x FH(5)36988 20422 y
tx@Dict begin  PutEnd  end
 36988
20422 a 55572 24382 a
currentpoint initclip moveto
 55572 24382 a 31014 24382 a
 currentpoint currentpoint translate 1 0.53024 div 1 0.53024 div scale
neg exch neg exch translate
 31014
24382 a 855 27038 a FH(Wie)491 b(viele)h(Punkte)e(hat)h(die)f(H\344fte)
i(aller)f(Sc)-36 b(h)g(\374lerInnen)489 b(b)36 b(ei)491
b(diesem)g(T)-108 b(est)490 b(mindestens)921 29030 y(erreic)-36
b(h)g(t?)921 31576 y(Gib)416 b(an,)g(w)-36 b(elc)g(hen)416
b(Mittelw)-36 b(ert)416 b(du)g(zur)g(Bean)-36 b(t)g(w)g(ortung)415
b(dieser)h(F)-108 b(rage)417 b(heranziehst,)e(und)921
33568 y(b)36 b(erec)-36 b(hne)432 b(diesen.)p 1 0 0 TeXcolorrgb
921 38105 a(Der)i(Median)f(\(Zen)-36 b(tralw)g(ert\))433
b(ist)h(hier)f(anzugeb)36 b(en.)433 b(Er)h(b)36 b(etr\344gt)433
b(4.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4800 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 6792
a FD(WS)369 b(1.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 41912 54804 45 v 0 TeXcolorgray
24421 81281 a FH(27)p 0 TeXcolorgray eop end
%%Page: 28 28
TeXDict begin 28 27 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)687 b(1.3)g(-)h(9)g(Eisho)60
b(c)-60 b(k)g(eytore)687 b(-)h(O)-60 b(A)688 b(-)f(Matura)h(2015/16)f
(-)h(Haupt-)-2331 4622 y(termin)p 0 TeXcolorgray -1391
7929 a FH(28.)p 0 TeXcolorgray 651 w(In)520 b(der)f(\366sterreic)-36
b(hisc)g(hen)519 b(Eisho)36 b(c)-36 b(k)g(eyliga)522
b(w)-36 b(erden)519 b(die)h(Ergebnisse)f(aller)i(Spiele)f(statis-)921
9921 y(tisc)-36 b(h)325 b(ausgew)-36 b(ertet.)326 b(In)f(der)g(Saison)h
(2012/13)h(wurde)e(\374b)36 b(er)324 b(einen)h(b)36 b(estimm)-36
b(ten)325 b(Zeitraum)921 11913 y(erfasst,)356 b(in)g(wie)g(vielen)g
(Spielen)f(jew)-36 b(eils)357 b(eine)e(b)36 b(estimm)-36
b(te)355 b(Anzahl)h(an)f(T)-108 b(oren)355 b(erzielt)h(wur-)921
13905 y(de.)558 b(Das)g(nac)-36 b(hstehende)556 b(S\344ulendiagramm)i
(stellt)f(das)h(Ergebnis)f(dieser)g(A)-36 b(usw)g(ertung)921
15897 y(dar.)p 0 TeXcolorgray 0 TeXcolorgray 10928 35087
a

 10928 35087 a 10928 35087 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs


 10928 35087 a


 pgfr

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 [1.0 0.0 0.0 1.0 -34.54425 -36.02106 ] concat

 pgfs


 14766 31085
a

 14766 31085 a 14766 31085 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 save

 save

 0.19925 pgfw
 0.5 TeXcolorgray
 20.71999 -4.25174 moveto

 20.71999 0.0 lineto

 41.43997 -4.25174 moveto

 41.43997 0.0 lineto

 62.15997 -4.25174 moveto

 62.15997 0.0 lineto

 82.87996 -4.25174 moveto

 82.87996 0.0 lineto

 103.59996 -4.25174 moveto

 103.59996 0.0 lineto

 124.31995 -4.25174 moveto

 124.31995 0.0 lineto

 145.03993 -4.25174 moveto

 145.03993 0.0 lineto

 165.75993 -4.25174 moveto

 165.75993 0.0 lineto

 186.47992 -4.25174 moveto

 186.47992 0.0 lineto

 207.19992 -4.25174 moveto

 207.19992 0.0 lineto

 227.9199 -4.25174 moveto

 227.9199 0.0 lineto

 248.63991 -4.25174 moveto

 248.63991 0.0 lineto

 pgfstr
 0 TeXcolorgray
 restore

 restore

 save

 save

 0.19925 pgfw

0.5 TeXcolorgray
 -2.12627 18.06906 moveto

 2.12627 18.06906 lineto

 -2.12627 36.13814 moveto

 2.12627 36.13814 lineto

 -2.12627 54.20721 moveto

 2.12627 54.20721 lineto

 -2.12627 72.27628 moveto

 2.12627 72.27628 lineto

 -2.12627 90.34535 moveto

 2.12627 90.34535 lineto

 -2.12627 108.41443 moveto

 2.12627 108.41443 lineto

 -2.12627 126.48349 moveto

 2.12627 126.48349 lineto

 -2.12627 144.55257 moveto

 2.12627 144.55257 lineto

 pgfstr
 0 TeXcolorgray
 restore

 restore

 0.0 0.0 moveto

 257.00737 0.0 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 257.00737 0.0 ] concat

 save 1.99252 0.0 moveto -1.19551 1.59401 lineto 0.0 0.0 lineto -1.19551
-1.59401 lineto pgffill restore

 restore

 0.0 0.0 moveto

 0.0 151.59457 lineto

 pgfstr

 save

 [0.0 1.0 -1.0 0.0 0.0 151.59457 ] concat

 save 1.99252 0.0 moveto -1.19551 1.59401 lineto 0.0 0.0 lineto -1.19551
-1.59401 lineto pgffill restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 17.79344 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085 a FB(1)14766
31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 38.51343 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085 a FB(2)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 59.23343 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085
a FB(3)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 79.95341 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085 a FB(4)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 100.6734 -15.8812 ] concat

 pgfs



 0 setgray

14766 31085 a FB(5)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 121.3934 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085 a FB(6)14766
31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 142.11339 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085 a FB(7)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 162.83339 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085
a FB(8)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 183.55338 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085 a FB(9)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 201.3468 -15.8812 ] concat

 pgfs



 0 setgray

14766 31085 a FB(10)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 222.0668 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085 a FB(11)14766
31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 242.78679 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085 a FB(12)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -12.08022 14.30476 ] concat

 pgfs



 0 setgray
 14766 31085
a FB(1)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -12.08022 32.37384 ] concat

 pgfs



 0 setgray
 14766 31085 a FB(2)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -12.08022 50.4429 ] concat

 pgfs



 0 setgray

14766 31085 a FB(3)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -12.08022 68.51198 ] concat

 pgfs



 0 setgray
 14766 31085 a FB(4)14766
31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -12.08022 86.58105 ] concat

 pgfs



 0 setgray
 14766 31085 a FB(5)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -12.08022 104.65012 ] concat

 pgfs



 0 setgray
 14766 31085
a FB(6)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -12.08022 122.7192 ] concat

 pgfs



 0 setgray
 14766 31085 a FB(7)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -12.08022 140.78827 ] concat

 pgfs



 0 setgray

14766 31085 a FB(8)14766 31085 y


 pgfr

 restore

 restore

 0.0 0.0 moveto

 258.9999 0.0 lineto

 258.9999 153.5871 lineto

 0.0 153.5871 lineto

 closepath

 clip

 newpath

 save
 0 0 1 TeXcolorrgb
 /pgffc{0.7 0.7 1 setrgbcolor}def

 36.13814 9.96277 57.17859 0.0 pgfe

 36.13814 9.96277 77.89857 0.0 pgfe

 108.41443 9.96277 98.61858 0.0 pgfe

 54.20721 9.96277 119.33856 0.0 pgfe

 144.55257 9.96277 140.05855 0.0 pgfe

 36.13814 9.96277 181.49854 0.0 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath
 0
TeXcolorgray
 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.8802 -32.11945 ] concat

 pgfs



 0 setgray
 14766 31085 a FH(Anzahl)434 b(der)f(T)-108
b(ore)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [0.0 1.0 -1.0 0.0 -22.40695 31.75916 ] concat

 pgfs



 0 setgray
 14766 31085 a FH(Anzahl)434 b(der)f(Spiele)14766
31085 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 10928 35087 a


 pgfr

 restore

 save

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 921 43074 a FH(Bestimme)e(den)g(Median)g(der)g
(Datenliste,)h(die)f(dem)g(S\344ulendiagramm)h(zugrunde)e(liegt.)p
1 0 0 TeXcolorrgb 921 45619 a(Der)k(Median)f(der)g(Datenliste)h(ist)g
(6.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7929 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 9921
a FD(WS)369 b(1.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 49094 54804 45 v 0 TeXcolorgray
24421 81281 a FH(28)p 0 TeXcolorgray eop end
%%Page: 29 29
TeXDict begin 29 28 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)865 b(1.3)g(-)g(10)h(Median)e(und)g
(Mo)60 b(dus)864 b(-)i(O)-60 b(A)866 b(-)f(BIFIE)h(-)g(K)-60
b(omp)60 b(e-)-2331 4515 y(tenzc)-60 b(hec)g(k)718 b(2016)p
0 TeXcolorgray -1391 7823 a FH(29.)p 0 TeXcolorgray 651
w(Zw)-36 b(ei)428 b(un)-36 b(tersc)g(heidbare,)426 b(faire)i
(Spielw\374rfel)g(mit)f(den)g(A)-36 b(ugenzahlen)427
b(1,2,3,4,5,6)k(w)-36 b(erden)921 9815 y(gew)g(orfen)444
b(und)f(die)g(A)-36 b(ugensumme)443 b(wird)g(ermittelt.)h(\(Ein)f(W)-36
b(\374rfel)444 b(ist)f(\022fair\020,)i(w)-36 b(enn)443
b(die)855 11806 y(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)421
b(nac)-36 b(h)420 b(einem)h(W)-108 b(urf)420 b(nac)-36
b(h)420 b(ob)36 b(en)421 b(zu)f(zeigen,)i(f\374r)e(alle)i(sec)-36
b(hs)421 b(Seiten-)921 13798 y(\035\344c)-36 b(hen)433
b(gleic)-36 b(h)434 b(gro\377)g(ist.\))887 16344 y(Jemand)d(b)36
b(ehauptet,)431 b(dass)h(die)f(Ereignisse)h(\022A)-36
b(ugensumme)431 b(5\020)h(und)f(\022A)-36 b(ugensumme)431
b(9\020)921 18336 y(gleic)-36 b(h)g(w)g(ahrsc)g(heinlic)g(h)538
b(sind.)h(Gib)f(an,)g(ob)g(es)h(sic)-36 b(h)538 b(hierb)36
b(ei)538 b(um)g(eine)g(w)-36 b(ahre)538 b(o)36 b(der)538
b(eine)921 20328 y(falsc)-36 b(he)434 b(A)-36 b(ussage)434
b(handelt,)f(und)g(b)36 b(egr\374nde)432 b(deine)h(En)-36
b(tsc)g(heidung.)p 1 0 0 TeXcolorrgb 921 24865 a(Die)434
b(A)-36 b(ussage)434 b(ist)g(w)-36 b(ahr.)434 b(M\366glic)-36
b(he)434 b(Begr\374ndung:)873 26857 y(A)-36 b(ugensumme)432
b(5:)j FB(\(1;)221 b(4\))p Fx(;)g FB(\(2;)g(3\))p Fx(;)g
FB(\(3;)g(2\))p Fx(;)g FB(\(4;)g(1\))375 b Fw(\))434
b FH(4)f(M\366glic)-36 b(hk)g(eiten)873 28849 y(A)g(ugensumme)432
b(9:)j FB(\(3;)221 b(6\))p Fx(;)g FB(\(4;)g(5\))p Fx(;)g
FB(\(5;)g(4\))p Fx(;)g FB(\(6;)g(3\))375 b Fw(\))434
b FH(4)f(M\366glic)-36 b(hk)g(eiten)921 30841 y(P\(\022A)g(ugensumme)
433 b(5\020\)=)14102 30318 y FG(4)p 13867 30531 941 45
v 13867 31299 a(36)921 32833 y FH(P\(\022A)-36 b(ugensumme)433
b(9\020\)=)14102 32310 y FG(4)p 13867 32523 V 13867 33291
a(36)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7823 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 9815
a FD(WS)369 b(1.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 36766 54804 45 v 0 TeXcolorgray
24421 81281 a FH(29)p 0 TeXcolorgray eop end
%%Page: 30 30
TeXDict begin 30 29 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)539 b(1.3)g(-)g(11)h(Netto)60
b(jahreseink)-60 b(ommen)537 b(-)i(O)-60 b(A)540 b(-)f(Matura)g
(2014/15)-2617 4622 y(-)718 b(Haupttermin)p 0 TeXcolorgray
-1391 7929 a FH(30.)p 0 TeXcolorgray 651 w(Im)308 b(Jahre)f(2012)i(gab)
f(es)f(in)h(\326sterreic)-36 b(h)307 b(un)-36 b(ter)306
b(den)h(et)-36 b(w)g(as)308 b(mehr)f(als)h(4)g(Millionen)g(unselbst-)
921 9921 y(st\344ndig)370 b(Erw)-36 b(erbst\344tigen)370
b(\(ohne)g(Lehrlinge\))g(40)217 b(\045)370 b(Arb)36 b(eiterinnen)369
b(und)g(Arb)36 b(eiter,)371 b(47)217 b(\045)873 11913
y(Angestellte,)561 b(8)217 b(\045)561 b(V)-108 b(ertragsb)36
b(edienstete)559 b(und)h(5)217 b(\045)560 b(Beam)-36
b(tinnen)560 b(und)f(Beam)-36 b(te)561 b(\(Proz-)921
13905 y(en)-36 b(tzahlen)433 b(gerundet\).)921 18442
y(Die)878 b(folgende)h(T)-108 b(ab)36 b(elle)878 b(zeigt)g(deren)f
(durc)-36 b(hsc)g(hnittlic)g(hes)876 b(Netto)36 b(jahreseink)-36
b(ommen)769 20434 y(\(arithmetisc)g(hes)433 b(Mittel\).)p
18621 23578 23420 45 v 18577 27517 45 3984 v 23160 24928
a(arithmetisc)-36 b(hes)434 b(Mittel)f(der)19403 26920
y(Netto)36 b(jahreseink)-36 b(ommen)435 b(2012)f(\(in)g(Euro\))p
41997 27517 V 1525 27561 40517 45 v 1525 27561 V 1525
29620 45 2059 v 2233 28956 a(Arb)36 b(eiterinnen)433
b(und)f(Arb)36 b(eiter)p 18577 29620 V 28683 29022 a(14062)p
41997 29620 V 1525 29664 40517 45 v 1525 29664 V 1525
31722 45 2059 v 6908 31058 a(Angestellte)p 18577 31722
V 28683 31124 a(24141)p 41997 31722 V 1525 31766 40517
45 v 1525 31766 V 1525 33825 45 2059 v 4484 33161 a(V)-108
b(ertragsb)36 b(edienstete)p 18577 33825 V 28683 33227
a(22853)p 41997 33825 V 1525 33869 40517 45 v 1525 33869
V 1525 35927 45 2059 v 3010 35263 a(Beam)-36 b(tinnen)433
b(und)f(Beam)-36 b(te)p 18577 35927 V 28683 35329 a(35708)p
41997 35927 V 1525 35971 40517 45 v 1525 35971 V 0 TeXcolorgray
0 TeXcolorgray 921 38773 a Fz(Datenquelle:)275 b(Statistik)h(A)-22
b(ustria)277 b(\(Hrsg.\))f(\(2014\).)f(Statistisc)-22
b(hes)276 b(Jahrbuc)-22 b(h)276 b(\326sterreic)-22 b(hs)276
b(2015.)g(Wien:)f(V)-65 b(erlag)277 b(\326sterreic)-22
b(h.)276 b(S.)g(246.)921 41319 y FH(Ermittle)618 b(das)h(durc)-36
b(hsc)g(hnittlic)g(he)616 b(Netto)36 b(jahreseink)-36
b(ommen)619 b(\(arithmetisc)-36 b(hes)618 b(Mittel\))921
43310 y(aller)434 b(in)g(\326sterreic)-36 b(h)432 b(unselbstst\344ndig)
h(Erw)-36 b(erbst\344tigen)434 b(\(ohne)f(Lehrlinge\).)p
1 0 0 TeXcolorrgb 856 45856 a FB(14)221 b(062)297 b Fw(\001)e
FB(0)p Fx(;)p FB(4)i(+)d(24)221 b(141)298 b Fw(\001)d
FB(0)p Fx(;)p FB(47)h(+)f(22)221 b(853)297 b Fw(\001)f
FB(0)p Fx(;)p FB(08)g(+)f(35)221 b(708)297 b Fw(\001)e
FB(0)p Fx(;)p FB(05)371 b(=)d(20)221 b(584)p Fx(;)p FB(71)921
48401 y FH(Das)434 b(durc)-36 b(hsc)g(hnittlic)g(he)432
b(Netto)36 b(jahreseink)-36 b(ommen)434 b(b)36 b(etr\344gt)433
b FC(e)651 b FH(20.584,71.)921 52939 y(L\366sungssc)-36
b(hl\374ssel:)921 54930 y(Ein)440 b(Punkt)f(f\374r)h(die)g(ric)-36
b(h)g(tige)441 b(L\366sung,)f(w)-36 b(ob)36 b(ei)440
b(die)g(Einheit)g(Euro)g(nic)-36 b(h)g(t)439 b(angef\374hrt)h(w)-36
b(er-)921 56922 y(den)350 b(m)-36 b(uss.)352 b(T)-108
b(oleranzin)-36 b(terv)-72 b(all:)353 b FB([)8 b(20580;)221
b(20590])355 b FH(Die)d(A)-36 b(ufgab)36 b(e)351 b(ist)h(auc)-36
b(h)350 b(dann)h(als)g(ric)-36 b(h)g(tig)921 58914 y(gel\366st)503
b(zu)f(w)-36 b(erten,)502 b(w)-36 b(enn)501 b(b)36 b(ei)503
b(k)-36 b(orrektem)502 b(Ansatz)g(das)g(Ergebnis)g(aufgrund)g(eines)g
(Re-)921 60906 y(c)-36 b(henfehlers)433 b(nic)-36 b(h)g(t)433
b(ric)-36 b(h)g(tig)433 b(ist.)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 7929 a FE(___/1)p 1 0 0
TeXcolorrgb 47905 9921 a FD(WS)369 b(1.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 64640 54804 45
v 0 TeXcolorgray 24421 81281 a FH(30)p 0 TeXcolorgray
eop end
%%Page: 31 31
TeXDict begin 31 30 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)477 b(1.3)h(-)h(12)f(Statistisc)-60
b(he)477 b(Kennzahlen)f(-)i(MC)h(-)f(Matura)g(2014/15)-2617
4622 y(-)718 b(Neb)60 b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray
-1391 7929 a FH(31.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(ist)h(eine)f(Liste)h(mit)f Fx(n)h FH(nat\374rlic)-36
b(hen)433 b(Zahlen)g Fx(a)29302 8128 y FG(1)29828 7929
y Fx(;)221 b(a)31093 8128 y FG(2)31619 7929 y Fx(;)g(:)g(:)g(:)j(;)d(a)
35215 8128 y Fr(n)35841 7929 y FH(.)855 12466 y(W)-108
b(elc)-36 b(he)556 b(statistisc)-36 b(he)557 b(Kennzahlen)f(der)h
(Liste)f(bleib)36 b(en)557 b(gleic)-36 b(h,)557 b(w)-36
b(enn)557 b(jeder)f(W)-108 b(ert)557 b(der)921 14458
y(Liste)433 b(um)h(1)f(erh\366h)-36 b(t)433 b(wird?)h(Kreuze)f(die)h(b)
36 b(eiden)433 b(zutre\033enden)e(An)-36 b(t)g(w)g(orten)433
b(an.)p 15260 15167 15864 45 v 15260 17971 45 2805 v
15969 17027 a(arithmetisc)-36 b(hes)433 b(Mittel)p 28714
17971 V 31079 17971 V 15260 18016 15864 45 v 15260 21079
45 3064 v 15969 19876 a(Standardab)-36 b(w)g(eic)g(h)g(ung)p
28714 21079 V 1 0 0 TeXcolorrgb 29423 19879 a FF(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 31079
21079 V 15260 21123 15864 45 v 15260 24186 45 3064 v
15969 22983 a FH(Spann)g(w)g(eite)p 28714 24186 V 1 0 0
TeXcolorrgb 29423 22987 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 31079 24186 V 15260 24231
15864 45 v 15260 27035 45 2805 v 15969 26090 a FH(Median)p
28714 27035 V 31079 27035 V 15260 27080 15864 45 v 15260
29884 45 2805 v 15969 28940 a(Mo)36 b(dus)p 28714 29884
V 31079 29884 V 15260 29929 15864 45 v 47992 7929 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 9921 a FD(WS)369 b(1.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 33957
54804 45 v -2331 39258 a FI(WS)913 b(1.3)f(-)i(13)f(Mittelw)-60
b(ert)913 b(v)-60 b(on)913 b(Datenreihen)e(-)j(O)-60
b(A)913 b(-)h(Matura)-2385 42281 y(2014/15)718 b(-)f(K)-60
b(omp)60 b(ensationspr\374fung)p 0 TeXcolorgray -1391
45588 a FH(32.)p 0 TeXcolorgray 651 w(Bei)682 b(einer)f(V)-108
b(erk)-36 b(ehrsk)g(on)g(trolle)681 b(in)g(einem)g(Ortsb)36
b(ereic)-36 b(h)680 b(\(Gesc)-36 b(h)g(windigk)g(eitsb)36
b(esc)-36 b(hr\344n-)921 47580 y(kung)644 b(50)h(km/h\))f(wurden)g(die)
g(Gesc)-36 b(h)g(windigk)g(eiten)644 b(v)-36 b(on)644
b(20)h(F)-108 b(ahrzeugen)643 b(gemessen.)921 49572 y(Die)434
b(Ergebnisse)g(sind)f(in)g(der)g(nac)-36 b(hstehenden)432
b(T)-108 b(ab)36 b(elle)434 b(aufgezeic)-36 b(hnet.)p
0 TeXcolorgray 0 TeXcolorgray 9122 51645 28575 45 v 9122
53637 45 1992 v 9830 53040 a Fx(v)481 b FH(in)433 b(km/h)p
16265 53637 V 1373 w(45)p 18938 53637 V 1374 w(47)p 21612
53637 V 1373 w(48)p 24285 53637 V 1373 w(50)p 26958 53637
V 1374 w(51)p 29632 53637 V 1373 w(52)p 32305 53637 V
1373 w(54)p 34978 53637 V 1374 w(89)p 37651 53637 V 9122
53682 28575 45 v 9122 55674 45 1992 v 9830 55076 a(Anzahl)p
16265 55674 V 3459 w(2)p 18938 55674 V 2023 w(3)p 21612
55674 V 2023 w(5)p 24285 55674 V 2024 w(2)p 26958 55674
V 2023 w(2)p 29632 55674 V 2023 w(2)p 32305 55674 V 2023
w(3)p 34978 55674 V 2024 w(1)p 37651 55674 V 9122 55718
28575 45 v 921 58485 a(Gib)846 b(das)h(arithmetisc)-36
b(he)847 b(Mittel,)h(den)e(Median)h(\(Zen)-36 b(tralw)g(ert\))846
b(und)g(den)h(Mo)36 b(dus)769 60477 y(\(Mo)g(dalw)-36
b(ert\))433 b(der)g(gemessen)h(Gesc)-36 b(h)g(windigk)g(eiten)433
b(an.)p 1 0 0 TeXcolorrgb 921 65014 a(Mo)36 b(dus=48,)434
b(Median=49,)g(arithmetisc)-36 b(hes)433 b(Mittel=51,4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
45588 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 47580 a FD(WS)369
b(1.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 68748 54804 45 v 0 TeXcolorgray 24421 81281 a FH(31)p
0 TeXcolorgray eop end
%%Page: 32 32
TeXDict begin 32 31 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)581 b(1.3)g(-)g(14)g(Mittlere)g(F)
-179 b(ehlstundenanzahl)577 b(-)k(O)-60 b(A)582 b(-)g(Matura)f(NT)-2385
4515 y(2)718 b(15/16)p 0 TeXcolorgray -1391 7823 a FH(33.)p
0 TeXcolorgray 651 w(In)467 b(einer)f(Sc)-36 b(h)g(ule)466
b(gibt)h(es)g(vier)h(Sp)36 b(ortklassen:)467 b Fx(S)77
b FB(1)p Fx(;)221 b(S)77 b FB(2)p Fx(;)221 b(S)77 b FB(3)471
b FH(und)465 b Fx(S)77 b FB(4)p FH(.)468 b(Die)g(nac)-36
b(hstehende)874 9815 y(T)-108 b(ab)36 b(elle)613 b(gibt)f(eine)h(\334b)
36 b(ersic)-36 b(h)g(t)611 b(\374b)36 b(er)611 b(die)i(Anzahl)f(der)f
(Sc)-36 b(h)g(\374lerInnen)610 b(pro)i(Klasse)i(so-)874
11806 y(wie)520 b(das)g(jew)-36 b(eilige)521 b(arithmetisc)-36
b(he)519 b(Mittel)g(der)g(w)-36 b(\344hrend)519 b(des)g(ersten)g
(Semesters)f(eines)921 13798 y(Sc)-36 b(h)g(uljahres)433
b(v)-36 b(ers\344um)g(ten)433 b(Un)-36 b(terric)g(h)g(tsstunden.)p
0 TeXcolorgray 0 TeXcolorgray 8686 16204 29445 45 v 8686
18196 45 1992 v 9395 17599 a(Klasse)p 13686 18196 V 1915
w(Anzahl)434 b(der)p 22393 18196 V 1914 w(arithmetisc)-36
b(hes)433 b(Mittel)h(der)p 38087 18196 V 8686 20188 V
13686 20188 V 14394 19590 a(Sc)-36 b(h)g(\374lerInnen)p
22393 20188 V 2729 w(v)g(ers\344um)g(ten)433 b(Stunden)p
38087 20188 V 8686 20232 29445 45 v 8686 22224 45 1992
v 10445 21627 a Fx(S)77 b FB(1)p 13686 22224 V 5439 w(18)p
22393 22224 V 10395 w(45)p Fx(;)p FB(5)p 38087 22224
V 8686 22268 29445 45 v 8686 24260 45 1992 v 10445 23663
a Fx(S)g FB(2)p 13686 24260 V 5439 w(20)p 22393 24260
V 10395 w(63)p Fx(;)p FB(2)p 38087 24260 V 8686 24305
29445 45 v 8686 26297 45 1992 v 10445 25699 a Fx(S)g
FB(3)p 13686 26297 V 5439 w(16)p 22393 26297 V 10395
w(70)p Fx(;)p FB(5)p 38087 26297 V 8686 26341 29445 45
v 8686 28333 45 1992 v 10445 27735 a Fx(S)g FB(4)p 13686
28333 V 5439 w(15)p 22393 28333 V 10395 w(54)p Fx(;)p
FB(6)p 38087 28333 V 8686 28377 29445 45 v 921 31395
a FH(Berec)-36 b(hne)386 b(das)h(arithmetisc)-36 b(he)386
b(Mittel)p 20637 30691 740 45 v 387 w Fx(x)21376 31594
y Fr(g)32 b(es)23170 31395 y FH(der)386 b(v)-36 b(ers\344um)g(ten)386
b(Un)-36 b(terric)g(h)g(tsstunden)384 b(aller)921 33387
y(Sc)-36 b(h)g(\374lerInnen)431 b(der)j(vier)g(Sp)36
b(ortklassen)433 b(f\374r)h(den)f(angegeb)36 b(enen)433
b(Zeitraum!)p 1 0 0 TeXcolorrgb 921 37332 V 921 38037
a Fx(x)1660 38236 y Fr(g)32 b(es)3436 38037 y FB(=)4949
37138 y(18)296 b Fw(\001)f FB(45)p Fx(;)p FB(5)i(+)d(20)i
Fw(\001)f FB(63)p Fx(;)p FB(2)i(+)e(16)h Fw(\001)f FB(70)p
Fx(;)p FB(5)h(+)f(15)h Fw(\001)f FB(54)p Fx(;)p FB(6)p
4949 37727 23096 45 v 11817 38948 a(18)h(+)f(20)h(+)f(16)h(+)f(5)28546
38037 y(=)369 b(58)p Fx(;)p FB(405)p Fx(:::)p 921 39877
740 45 v 921 40582 a(x)1660 40781 y Fr(g)32 b(es)3436
40582 y Fw(\031)369 b FB(58)p Fx(;)p FB(4)p Fx(h)921
43128 y FH(Einheit)433 b(\022h\020)h(m)-36 b(uss)433
b(nic)-36 b(h)g(t)432 b(angegeb)36 b(en)434 b(sein!)g(T)-108
b(oleranzin)-36 b(terv)-72 b(all:)435 b FB([)8 b(58)221
b Fx(h)p FB(;)g(60)g Fx(h)p FB(])p FH(.)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7823 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 9815 a FD(WS)369 b(1.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 46935
54804 45 v 0 TeXcolorgray 24421 81281 a FH(32)p 0 TeXcolorgray
eop end
%%Page: 33 33
TeXDict begin 33 32 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)1141 b(1.3)g(-)h(15)g(Bo)-60
b(xplot)1140 b(Analyse)h(-)h(MC)g(-)g(Matura)f(2013/14)-2331
4622 y(Haupttermin)p 0 TeXcolorgray -1391 7929 a FH(34.)p
0 TeXcolorgray 651 w(Alle)303 b(M\344dc)-36 b(hen)301
b(und)h(Bursc)-36 b(hen)301 b(einer)h(Sc)-36 b(h)g(ulklasse)303
b(wurden)e(\374b)36 b(er)302 b(die)g(L\344nge)h(ihres)f(Sc)-36
b(h)g(ul-)874 9921 y(w)g(eges)542 b(b)36 b(efragt.)543
b(Die)f(b)36 b(eiden)540 b(Kastensc)-36 b(haubilder)541
b(\(Bo)-36 b(xplots\))541 b(geb)36 b(en)541 b(A)-36 b(uskunft)541
b(\374b)36 b(er)921 11913 y(ihre)433 b(An)-36 b(t)g(w)g(orten.)921
36213 y
 currentpoint currentpoint translate 0.88916 0.88916 scale neg exch
neg exch translate
 921 36213 a 921 36213 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 456.95097 a add def
/d 0.0 a add neg def /h 240.1412 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 36213 a 3378 31489
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 434.75787  0 -22.1931  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -22.1931
 434.75787  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-42.67911  def /maxTickline 197.4621  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 434.75787
0.0 -22.1931 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3143 32834 a FG(0)2679 b(1)h(2)f(3)h(4)f(5)h
(6)g(7)f(8)h(9)2444 b(10)2210 b(11)f(12)h(13)g(14)f(15)3378
31489 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   0. true 113.81097 128.03734
227.62195 156.49008 0 Frame  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   0. true 113.81097 28.45274
170.71646 56.90549 0 Frame  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 156.49008 56.90549 128.03734
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 284.52744 156.49008 284.52744 128.03734
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 156.49008 170.71646 128.03734
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 142.26372 56.90549 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 284.52744 142.26372 227.62195 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 56.90549 28.45274 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 227.62195 56.90549 227.62195 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 56.90549 142.26372 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 42.67911 28.45274 42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 227.62195 42.67911 170.71646 42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
3378 31489 a
tx@Dict begin  { 109.8276 -22.76227 } PutCoor PutBegin  end
 3378 31489 a 610 x FA(En)-26 b(tfern)g(ung)312
b(des)h(W)-78 b(ohnortes)314 b(gemessen)h(in)f(km)3378
31489 y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378 31489 a
tx@Dict begin  { 10.81218 91.61786 } PutCoor PutBegin  end
 3378 31489 a 610 x
FA(Bursc)-26 b(hen)3378 31489 y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378 31489
a
tx@Dict begin  { 13.08844 184.94283 } PutCoor PutBegin  end
 3378 31489 a 610 x FA(M\344dc)g(hen)3378 31489 y
tx@Dict begin  PutEnd  end
 3378
31489 a 3378 31489 a
tx@Dict begin  { 54.62921 170.71646 } PutCoor PutBegin  end
 3378 31489 a 570 x FA(2)3378 31489
y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378 31489 a
tx@Dict begin  { 26.17647 71.13185 } PutCoor PutBegin  end
 3378 31489 a 570 x FA(1)3378
31489 y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378 31489 a
tx@Dict begin  { 111.5347 170.71646 } PutCoor PutBegin  end
 3378 31489 a 570 x
FA(4)3378 31489 y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378 31489 a
tx@Dict begin  { 111.5347 71.13185 } PutCoor PutBegin  end
 3378 31489
a 570 x FA(4)3378 31489 y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378 31489 a
tx@Dict begin  { 168.44019 170.71646 } PutCoor PutBegin  end
 3378
31489 a 570 x FA(6)3378 31489 y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378 31489
a
tx@Dict begin  { 139.98744 71.13185 } PutCoor PutBegin  end
 3378 31489 a 570 x FA(5)3378 31489 y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378
31489 a
tx@Dict begin  { 225.34567 170.71646 } PutCoor PutBegin  end
 3378 31489 a 570 x FA(8)3378 31489 y
tx@Dict begin  PutEnd  end
 3378 31489
a 3378 31489 a
tx@Dict begin  { 168.44019 71.13185 } PutCoor PutBegin  end
 3378 31489 a 570 x FA(6)3378 31489 y
tx@Dict begin  PutEnd  end
 3378
31489 a 3378 31489 a
tx@Dict begin  { 282.25116 170.71646 } PutCoor PutBegin  end
 3378 31489 a 570 x FA(10)3378 31489
y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378 31489 a
tx@Dict begin  { 225.34567 71.13185 } PutCoor PutBegin  end
 3378 31489 a 570 x FA(8)3378
31489 y
tx@Dict begin  PutEnd  end
 3378 31489 a 51504 36213 a
currentpoint initclip moveto
 51504 36213 a 921
36213 a
 currentpoint currentpoint translate 1 0.88916 div 1 0.88916 div scale
neg exch neg exch translate
 921 36213 a 2546 x FH(Kreuze)433 b(die)h(b)36
b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434 b(an!)p
1062 41717 44260 45 v 1062 46595 45 4878 v 1770 43658
a(Mehr)f(als)i(60)217 b(\045)434 b(der)f(b)36 b(efragten)433
b(M\344dc)-36 b(hen)433 b(hab)36 b(en)433 b(einen)g(Sc)-36
b(h)g(ulw)g(eg)433 b(v)-36 b(on)434 b(min-)1770 45650
y(destens)f(4)217 b(km.)p 42912 46595 V 1 0 0 TeXcolorrgb
43621 44488 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 46595 V 1062 46639 44260 45 v 1062
49703 45 3064 v 1770 48499 a FH(Der)393 b(Median)e(der)h(erhob)36
b(enen)391 b(Daten)h(ist)g(b)36 b(ei)392 b(Bursc)-36
b(hen)390 b(und)h(M\344dc)-36 b(hen)391 b(gleic)-36 b(h.)p
42912 49703 V 45277 49703 V 1062 49747 44260 45 v 1062
54883 45 5137 v 1770 51688 a(Mindestens)332 b(50)217
b(\045)333 b(der)f(M\344dc)-36 b(hen)332 b(und)f(mindestens)h(75)217
b(\045)333 b(der)f(Bursc)-36 b(hen)332 b(hab)36 b(en)1770
53680 y(einen)434 b(Sc)-36 b(h)g(ulw)g(eg,)433 b(der)g(kleiner)h(o)36
b(der)434 b(gleic)-36 b(h)434 b(6)g(km)g(ist.)p 42912
54883 V 1 0 0 TeXcolorrgb 43621 52647 a FF(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 54883
V 1062 54927 44260 45 v 1062 59805 45 4878 v 1770 56869
a FH(H\366)36 b(c)-36 b(hstens)402 b(40)217 b(\045)403
b(der)f(b)36 b(efragten)402 b(Bursc)-36 b(hen)401 b(hab)36
b(en)401 b(einen)h(Sc)-36 b(h)g(ulw)g(eg)402 b(zwisc)-36
b(hen)1770 58860 y(4)217 b(km)435 b(und)d(8)217 b(km.)p
42912 59805 V 45277 59805 V 1062 59850 44260 45 v 1062
64905 45 5056 v 1770 61710 a(Die)435 b(Spann)-36 b(w)g(eite)432
b(ist)i(b)36 b(ei)434 b(den)f(Umfragedaten)h(der)f(Bursc)-36
b(hen)432 b(genauso)i(gro\377)1770 63701 y(wie)h(b)36
b(ei)433 b(den)g(Umfragedaten)h(der)f(M\344dc)-36 b(hen.)p
42912 64905 V 45277 64905 V 1062 64949 44260 45 v 47992
7929 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 9921 a FD(WS)369
b(1.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 68977 54804 45 v 0 TeXcolorgray 24421 81281 a FH(33)p
0 TeXcolorgray eop end
%%Page: 34 34
TeXDict begin 34 33 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)668 b(1.4)g(-)h(1)f(Eigensc)-60
b(haften)667 b(des)h(arithem)-60 b(tisc)g(hen)667 b(Mittels)g(-)i(MC)
-2617 4515 y(-)718 b(BIFIE)p 0 TeXcolorgray -1391 7823
a FH(35.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(ist)h(das)f
(arithmetisc)-36 b(he)433 b(Mittel)p 22376 7118 740 45
v 434 w Fx(x)h FH(v)-36 b(on)434 b(Messw)-36 b(erten.)855
10368 y(W)-108 b(elc)-36 b(he)658 b(der)g(folgenden)g(Eigensc)-36
b(haften)659 b(tre\033en)e(f\374r)h(das)g(arithmetisc)-36
b(he)658 b(Mittel)h(zu?)921 12360 y(Kreuze)433 b(die)h(b)36
b(eiden)433 b(zutre\033enden)e(An)-36 b(t)g(w)g(orten)433
b(an.)p 1062 13068 44260 45 v 1062 19857 45 6789 v 1770
14928 a(Das)408 b(arithmetisc)-36 b(he)407 b(Mittel)g(teilt)g(die)g
(geordnete)g(Liste)g(der)f(Messw)-36 b(erte)407 b(immer)1770
16920 y(in)390 b(eine)f(un)-36 b(tere)388 b(und)h(eine)g(ob)36
b(ere)389 b(T)-108 b(eilliste)391 b(mit)e(jew)-36 b(eils)391
b(gleic)-36 b(h)390 b(vielen)g(Messw)-36 b(er-)1770 18912
y(ten.)p 42912 19857 V 45277 19857 V 1062 19901 44260
45 v 1062 22706 45 2805 v 1770 21761 a(Das)329 b(arithmetisc)-36
b(he)328 b(Mittel)h(kann)f(durc)-36 b(h)327 b(A)-36 b(usrei\377er)328
b(stark)g(b)36 b(eein\035usst)327 b(w)-36 b(erden.)p
42912 22706 V 1 0 0 TeXcolorrgb 43621 21636 a FF(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
22706 V 1062 22750 44260 45 v 1062 27547 45 4797 v 1770
24610 a FH(Das)365 b(arithmetisc)-36 b(he)364 b(Mittel)g(kann)g(f\374r)
g(alle)h(Arten)f(v)-36 b(on)364 b(Daten)g(sinn)-36 b(v)g(oll)365
b(b)36 b(erec)-36 b(h-)1770 26602 y(net)434 b(w)-36 b(erden.)p
42912 27547 V 45277 27547 V 1062 27591 44260 45 v 1062
30655 45 3064 v 1770 29451 a(Das)435 b(arithmetisc)-36
b(he)433 b(Mittel)h(ist)f(immer)h(gleic)-36 b(h)434 b(einem)g(der)f
(Messw)-36 b(erte.)p 42912 30655 V 45277 30655 V 1062
30699 44260 45 v 1062 35754 45 5056 v 1770 32559 a(Multipliziert)344
b(man)g(das)f(arithmetisc)-36 b(he)343 b(Mittel)h(mit)g(der)f(Anzahl)g
(der)g(Messw)-36 b(er-)1770 34551 y(te,)434 b(so)g(erh\344lt)g(man)f
(immer)h(die)f(Summe)g(aller)h(Messw)-36 b(erte.)p 42912
35754 V 1 0 0 TeXcolorrgb 43621 33558 a FF(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 35754
V 1062 35798 44260 45 v 47992 7823 a FE(___/1)p 1 0 0
TeXcolorrgb 47905 9815 a FD(WS)369 b(1.4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 39826 54804 45
v 0 TeXcolorgray 24421 81281 a FH(34)p 0 TeXcolorgray
eop end
%%Page: 35 35
TeXDict begin 35 34 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(1.4)g(-)g(2)h(Monatsnetto)60
b(eink)-60 b(ommen)715 b(-)i(O)-60 b(A)718 b(-)f(BIFIE)p
0 TeXcolorgray -1391 4800 a FH(36.)p 0 TeXcolorgray 651
w(Die)620 b(nac)-36 b(hstehende)618 b(T)-108 b(ab)36
b(elle)621 b(zeigt)f(Daten)g(zum)f(Monatsnetto)36 b(eink)-36
b(ommen)620 b(unselbst-)921 6792 y(st\344ndig)379 b(Erw)-36
b(erbst\344tiger)378 b(in)h(\326sterreic)-36 b(h)378
b(\(im)h(Jahresdurc)-36 b(hsc)g(hnitt)376 b(2010\))k(in)f(Abh\344ngig-)
921 8784 y(k)-36 b(eit)434 b(v)-36 b(om)434 b(Alter.)p
-2313 11596 48191 45 v -2313 11596 V -2313 12941 45 1345
v -1604 13854 a FA(Merkmale)p 5359 12941 V 6068 12549
a(Unselbstst\344ndig)6068 13854 y(Erw)-26 b(erbst\344tige)p
13031 12941 V 13740 12549 a(arithmet-)13740 13854 y(isc)g(hes)13740
15159 y(Mittel)p 18498 12941 V 19207 13202 a(10\045)p
23965 12941 V 24010 12941 V 30511 12509 a(Quartile)p
40367 12941 V 41075 13202 a(90\045)p 45834 12941 V 24010
12985 16402 45 v -2313 15551 45 2611 v 5359 15551 V 13031
15551 V 18498 15551 V 23965 15551 V 25859 14507 a(25\045)p
29433 15551 V 31345 13854 a(50\045)30660 15159 y(Median)p
34900 15551 V 36793 14507 a(75\045)p 40367 15551 V 45834
15551 V 5404 15595 7672 45 v 18543 15595 27336 45 v -2313
16895 45 1345 v 5359 16895 V 7597 16504 a(in)314 b(1.000)p
13031 16895 V 18498 16895 V 18543 16895 V 24196 16464
a(v)-26 b(erdienen)313 b(w)-26 b(eniger)313 b(o)26 b(der)314
b(gleic)-26 b(h)g(viel)315 b(als)g(...)p 45834 16895
V -2313 16940 48191 45 v -2313 16940 V 27047 20510 a
Fq(Insgesam)-30 b(t)-663 21895 y(Insgesam)g(t)3826 b
FA(3.407,9)3653 b(1.872,8)2916 b(665.0)g(1.188,0)2551
b(1.707,0)g(2.303,0)g(3.122,0)-386 23199 y Fq(Alter)362
b(\(in)-143 24504 y(Jahren\))-685 25849 y FA(15-19)315
b(Jahre)4171 b(173,5)4385 b(799,4)3281 b(399,0)h(531,0)g(730,0)2916
b(1.020,0)2551 b(1.315,0)-685 27194 y(20-29)315 b(Jahre)4171
b(705,1)4019 b(1.487,0)2916 b(598,0)g(1.114,0)2551 b(1.506,0)g(1.843,0)
g(2.175,0)-685 28539 y(30-39)315 b(Jahre)4171 b(803,1)4019
b(1.885,7)2916 b(770,0)g(1.252,0)2551 b(1.778,0)g(2.306,0)g(2.997,0)
-685 29883 y(40-49)315 b(Jahre)3806 b(1.020,4)3653 b(2.086,1)2916
b(863,0)g(1.338,0)2682 b(1892,0)f(2.556,0)2551 b(3.442,0)-685
31228 y(50-59)315 b(Jahre)4171 b(632,8)4019 b(2.205,0)2916
b(893,0)g(1.394,0)2551 b(1.977,0)g(2.779,0)g(3.710,0)-423
32573 y(60+)314 b(Jahre)4668 b(73,0)4253 b(2.144,7)2916
b(258,0)3282 b(420,0)2916 b(1.681,0)2551 b(3.254,0)g(4.808,0)p
0 TeXcolorgray 0 TeXcolorgray 855 40135 a FH(Wie)601
b(viel)i(Euro)e(v)-36 b(erdienen)600 b(genau)h(25\045)h(der)f(30-39)h
(J\344hrigen)f(mindestens?)g(Gib)g(an,)874 42127 y(w)-36
b(elc)g(he)483 b(statistisc)-36 b(he)482 b(Kennzahl)g(du)g(zur)g(Bean)
-36 b(t)g(w)g(ortung)481 b(dieser)h(F)-108 b(rage)483
b(b)36 b(en\366tigst,)482 b(und)921 44119 y(ermittle)434
b(die)f(en)-36 b(tsprec)g(hende)431 b(V)-108 b(erdienstun)-36
b(tergrenze.)p 1 0 0 TeXcolorrgb 888 48656 a(3.)435 b(Quartil:)e(EUR)h
(2.306)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4800 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 6792
a FD(WS)369 b(1.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 52390 54804 45 v 0 TeXcolorgray
24421 81281 a FH(35)p 0 TeXcolorgray eop end
%%Page: 36 36
TeXDict begin 36 35 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)857 b(1.4)g(-)h(3)f(Arithmetisc)-60
b(hes)856 b(Mittel)h(-)h(O)-60 b(A-)858 b(Matura)f(2013/14)-2331
4622 y(Haupttermin)p 0 TeXcolorgray -1391 7929 a FH(37.)p
0 TeXcolorgray 651 w(Neun)642 b(A)-36 b(thleten)642 b(eines)h(Sp)36
b(ortv)-36 b(ereins)642 b(absolvieren)i(einen)f(T)-108
b(est.)644 b(Der)f(Arithmetisc)-36 b(he)921 9921 y(Mittelw)g(ert)448
b(der)f(neun)g(T)-108 b(estergebnisse)448 b Fx(x)22152
10120 y FG(1)22678 9921 y Fx(;)221 b(x)23999 10120 y
FG(2)24525 9921 y Fx(;)g(:::;)g(x)27511 10120 y FG(9)28488
9921 y FH(ist)p 30316 9216 740 45 v 448 w Fx(x)393 b
FB(=)g(8)p FH(.)449 b(Ein)f(zehn)-36 b(ter)447 b(Sp)36
b(ortler)874 11913 y(w)-36 b(ar)448 b(w)-36 b(\344hrend)446
b(der)h(ersten)f(T)-108 b(estdurc)-36 b(hf\374hrung)445
b(ab)-36 b(w)g(esen.)447 b(er)g(holt)g(den)f(T)-108 b(est)447
b(nac)-36 b(h,)447 b(sein)874 13905 y(T)-108 b(estergebnis)433
b(ist)h Fx(x)10920 14104 y FG(10)12285 13905 y FB(=)369
b(4)p FH(.)921 16450 y(Berec)-36 b(hne)433 b(das)g(arithematisc)-36
b(he)434 b(Mittel)g(der)f(erg\344nzten)g(Liste)g Fx(x)33583
16649 y FG(1)34109 16450 y Fx(;)221 b(x)35430 16649 y
FG(2)35957 16450 y Fx(;)g(:::;)g(x)38943 16649 y FG(10)39941
16450 y FH(!)p 921 20283 V 921 20987 a Fx(x)1660 21186
y FA(neu)3548 20987 y FB(=)p 1 0 0 TeXcolorrgb 433 w
FH(7,6)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7929 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 9921
a FD(WS)369 b(1.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 24721 54804 45 v -2331 30149 a FI(WS)555
b(1.4)h(-)h(4)f(Statistisc)-60 b(he)554 b(Kennzahlen)g(-)i(MC)h(-)f
(Matura)g(2013/14)-2439 33171 y(1.)718 b(Neb)60 b(en)-60
b(termin)p 0 TeXcolorgray -1391 36479 a FH(38.)p 0 TeXcolorgray
651 w(Um)552 b(A)-36 b(ussagen)552 b(\374b)36 b(er)552
b(die)g(Daten)h(einer)f(statistisc)-36 b(hen)552 b(Erhebung)f
(tre\033en)g(zu)h(k)-36 b(\366nnen,)921 38471 y(gibt)434
b(es)f(b)36 b(estimm)-36 b(te)433 b(statistisc)-36 b(he)434
b(Kennzahlen.)855 41016 y(W)-108 b(elc)-36 b(he)627 b(der)g(folgenden)g
(statistisc)-36 b(hen)627 b(Kennzahlen)g(geb)36 b(en)627
b(A)-36 b(uskunft)627 b(dar\374b)36 b(er,)627 b(wie)921
43008 y(stark)386 b(die)f(erhob)36 b(enen)384 b(Daten)h(streuen?)g
(Kreuze)g(die)g(b)36 b(eiden)385 b(zutre\033enden)e(Kennzahlen)921
45000 y(an!)p 15260 47700 15864 45 v 15260 50505 45 2805
v 15969 49560 a(Median)p 28714 50505 V 31079 50505 V
15260 50549 15864 45 v 15260 53612 45 3064 v 15969 52409
a(Spann)-36 b(w)g(eite)p 28714 53612 V 1 0 0 TeXcolorrgb
29423 52413 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 31079 53612 V 15260 53657 15864 45 v 15260
56462 45 2805 v 15969 55517 a FH(Mo)36 b(dus)p 28714
56462 V 31079 56462 V 15260 56506 15864 45 v 15260 59569
45 3064 v 15969 58366 a(empirisc)-36 b(he)433 b(V)-108
b(arianz)p 28714 59569 V 1 0 0 TeXcolorrgb 29423 58370
a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
31079 59569 V 15260 59613 15864 45 v 15260 62418 45 2805
v 15969 61473 a FH(arithmetisc)-36 b(hes)433 b(Mittel)p
28714 62418 V 31079 62418 V 15260 62462 15864 45 v 47992
36479 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 38471 a FD(WS)369
b(1.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 66490 54804 45 v 0 TeXcolorgray 24421 81281 a FH(36)p
0 TeXcolorgray eop end
%%Page: 37 37
TeXDict begin 37 36 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(2.1)g(-)g(1)h(Ereignisse)e(-)h
(O)-60 b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray -1391 4800
a FH(39.)p 0 TeXcolorgray 651 w(In)433 b(einer)h(Sc)-36
b(hac)g(h)g(tel)432 b(b)36 b(e\034nden)432 b(sic)-36
b(h:)14184 6859 y(3)433 b(rote)h(Kugeln,)14184 8851 y(20)g(gr\374ne)f
(Kugeln)g(und)14184 10843 y(47)h(blaue)f(Kugeln.)921
13020 y(Die)403 b(Kugeln)f(sind)g(\025)g(abgesehen)g(v)-36
b(on)402 b(ihrer)g(F)-108 b(arb)36 b(e)401 b(\025)i(nic)-36
b(h)g(t)401 b(un)-36 b(tersc)g(heidbar.)401 b(Es)h(w)-36
b(erden)921 15012 y(nac)g(heinander)486 b(3)i(Kugeln)g(nac)-36
b(h)487 b(dem)g(Zufallsprinzip)g(en)-36 b(tnommen,)487
b(w)-36 b(ob)36 b(ei)488 b(diese)g(nac)-36 b(h)921 17003
y(jedem)434 b(Zug)f(wieder)h(zur\374c)-36 b(kgelegt)434
b(w)-36 b(erden.)921 21541 y(Der)360 b(Grundraum)e(dieses)h(Zufallsexp)
36 b(erimen)-36 b(ts)361 b(ist)f(die)f(Menge)h(aller)h(m\366glic)-36
b(hen)360 b(F)-108 b(arbtri-)921 23533 y(p)36 b(el)352
b(\()p Fx(x)p FH(;)g Fx(y)48 b FH(;)352 b Fx(z)59 b FH(\).)352
b Fx(x)p FH(,)g Fx(y)400 b FH(und)350 b Fx(z)411 b FH(nehmen)351
b(dab)36 b(ei)351 b(die)h(Buc)-36 b(hstab)36 b(en)350
b Fx(r)36 b FH(,)353 b Fx(g)399 b FH(o)36 b(der)351 b
Fx(b)h FH(\025)g(en)-36 b(tsprec)g(hend)921 25525 y(der)393
b(F)-108 b(arb)36 b(e)392 b(der)h(Kugeln)g(\025)g(an.)h(F)-27
b(\374r)392 b(das)i(Ereignis)f Fx(E)471 b FH(gilt:)394
b(Es)f(w)-36 b(erden)393 b(k)-36 b(eine)393 b(blauen)g(Ku-)921
27516 y(geln)434 b(gezogen.)g(Gib)f(alle)i(Elemen)-36
b(te)433 b(des)h(Ereignisses)g Fx(E)511 b FH(an!)921
32054 y Fx(E)447 b FB(=)368 b Fw(f)p 4375 32054 40857
45 v 40857 w(g)p 1 0 0 TeXcolorrgb 921 34599 a Fx(E)447
b FB(=)368 b Fw(f)p FB(\()p Fx(r)-36 b(;)221 b(r)-36
b(;)221 b(r)36 b FB(\);)221 b(\()p Fx(r)-36 b(;)221 b(r)-36
b(;)221 b(g)48 b FB(\);)221 b(\()p Fx(r)-36 b(;)221 b(g)48
b(;)221 b(r)36 b FB(\);)221 b(\()p Fx(g)48 b(;)221 b(r)-36
b(;)221 b(r)36 b FB(\);)221 b(\()p Fx(g)48 b(;)221 b(g)48
b(;)221 b(r)36 b FB(\);)221 b(\()p Fx(g)48 b(;)221 b(r)-36
b(;)221 b(g)48 b FB(\);)221 b(\()p Fx(r)-36 b(;)221 b(g)48
b(;)221 b(g)48 b FB(\);)221 b(\()p Fx(g)48 b(;)221 b(g)48
b(;)221 b(g)48 b FB(\))p Fw(g)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 4800 a FE(___/1)p 1 0 0
TeXcolorrgb 47905 6792 a FD(WS)369 b(2.1)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 38407 54804 45
v 0 TeXcolorgray 24421 81281 a FH(37)p 0 TeXcolorgray
eop end
%%Page: 38 38
TeXDict begin 38 37 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(2.1)g(-)g(2)h(Sc)-60
b(h)g(\374lerinnen)g(b)60 b(efragung)712 b(-)718 b(MC)g(-)f(BIFIE)p
0 TeXcolorgray -1391 4800 a FH(40.)p 0 TeXcolorgray 651
w(In)441 b(einer)g(Sc)-36 b(h)g(ule)441 b(wird)g(un)-36
b(ter)440 b(den)h(M\344dc)-36 b(hen)440 b(eine)i(Umfrage)g(durc)-36
b(hgef\374hrt.)440 b(Dazu)i(w)-36 b(er-)921 6792 y(den)379
b(pro)h(Klasse)h(zw)-36 b(ei)381 b(Sc)-36 b(h)g(\374lerinnen)379
b(zuf\344llig)i(f\374r)f(ein)h(In)-36 b(terview)380 b(ausgew)-36
b(\344hlt.)382 b(Ev)-72 b(a)380 b(und)921 8784 y(Sonja)442
b(gehen)f(in)g(die)h(1A.)g(F)-27 b(\374r)441 b(das)g(Ereignis)h
Fx(E)25057 8983 y FG(1)26024 8784 y FH(gilt:)h(Ev)-72
b(a)442 b(und)e(Sonja)i(w)-36 b(erden)441 b(f\374r)g(das)921
10776 y(In)-36 b(terview)434 b(ausgew)-36 b(\344hlt.)855
15314 y(W)-108 b(elc)-36 b(he)397 b(der)h(nac)-36 b(hstehenden)396
b(A)-36 b(ussagen)397 b(b)36 b(esc)-36 b(hreibt)397 b(das)h
(Gegenereignis)g Fx(E)39483 15513 y FG(2)40009 15314
y FH(?)g(\(Das)g(Ge-)921 17305 y(genereignis)361 b Fx(E)8466
17504 y FG(2)9352 17305 y FH(en)-36 b(th\344lt)360 b(diejenigen)h
(Elemen)-36 b(te)360 b(des)g(Grundraums,)f(die)h(nic)-36
b(h)g(t)360 b(Elemen)-36 b(te)887 19297 y(v)g(on)434
b Fx(E)4307 19496 y FG(1)5266 19297 y FH(sind.\))f(Kreuze)h(die)f
(zutre\033ende)f(A)-36 b(ussage)434 b(an.)p 5516 20338
35352 45 v 5516 23401 45 3064 v 6225 22198 a(Nur)f(Ev)-72
b(a)434 b(wird)f(ausgew)-36 b(\344hlt.)p 38458 23401
V 40823 23401 V 5516 23445 35352 45 v 5516 26508 45 3064
v 6225 25305 a(Keines)433 b(der)g(b)36 b(eiden)433 b(M\344dc)-36
b(hen)433 b(wird)h(ausgew)-36 b(\344hlt.)p 38458 26508
V 40823 26508 V 5516 26553 35352 45 v 5516 29616 45 3064
v 6225 28413 a(Mindestens)432 b(eines)i(der)f(b)36 b(eiden)433
b(M\344dc)-36 b(hen)432 b(wird)i(ausgew)-36 b(\344hlt.)p
38458 29616 V 40823 29616 V 5516 29660 35352 45 v 5516
32723 45 3064 v 6225 31520 a(Nur)433 b(Sonja)g(wird)h(ausgew)-36
b(\344hlt.)p 38458 32723 V 40823 32723 V 5516 32767 35352
45 v 5516 35831 45 3064 v 6225 34627 a(H\366)36 b(c)-36
b(hstens)433 b(eines)g(der)g(b)36 b(eiden)433 b(M\344dc)-36
b(hen)433 b(wird)h(ausgew)-36 b(\344hlt.)p 38458 35831
V 1 0 0 TeXcolorrgb 39167 34631 a FF(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 40823 35831 V 5516 35875
35352 45 v 5516 38938 45 3064 v 6225 37735 a FH(Genau)432
b(eines)i(der)f(b)36 b(eiden)433 b(M\344dc)-36 b(hen)432
b(wird)i(ausgew)-36 b(\344hlt.)p 38458 38938 V 40823
38938 V 5516 38982 35352 45 v 47992 4800 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a FD(WS)369 b(2.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 43010
54804 45 v 0 TeXcolorgray 24421 81281 a FH(38)p 0 TeXcolorgray
eop end
%%Page: 39 39
TeXDict begin 39 38 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)942 b(2.1)g(-)h(3)f(Spielw\374rfel)e
(-)j(O)-60 b(A)942 b(-)h(BIFIE)g(-)g(K)-60 b(omp)60 b(etenzc)-60
b(hec)g(k)-2385 4515 y(2016)p 0 TeXcolorgray -1391 7823
a FH(41.)p 0 TeXcolorgray 651 w(Zw)-36 b(ei)428 b(un)-36
b(tersc)g(heidbare,)426 b(faire)i(Spielw\374rfel)g(mit)f(den)g(A)-36
b(ugenzahlen)427 b(1,2,3,4,5,6)k(w)-36 b(erden)921 9815
y(gew)g(orfen)444 b(und)f(die)g(A)-36 b(ugensumme)443
b(wird)g(ermittelt.)h(\(Ein)f(W)-36 b(\374rfel)444 b(ist)f
(\022fair\020,)i(w)-36 b(enn)443 b(die)855 11806 y(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)421 b(nac)-36 b(h)420
b(einem)h(W)-108 b(urf)420 b(nac)-36 b(h)420 b(ob)36
b(en)421 b(zu)f(zeigen,)i(f\374r)e(alle)i(sec)-36 b(hs)421
b(Seiten-)921 13798 y(\035\344c)-36 b(hen)433 b(gleic)-36
b(h)434 b(gro\377)g(ist.\))887 16344 y(Jemand)d(b)36
b(ehauptet,)431 b(dass)h(die)f(Ereignisse)h(\022A)-36
b(ugensumme)431 b(5\020)h(und)f(\022A)-36 b(ugensumme)431
b(9\020)921 18336 y(gleic)-36 b(h)g(w)g(ahrsc)g(heinlic)g(h)538
b(sind.)h(Gib)f(an,)g(ob)g(es)h(sic)-36 b(h)538 b(hierb)36
b(ei)538 b(um)g(eine)g(w)-36 b(ahre)538 b(o)36 b(der)538
b(eine)921 20328 y(falsc)-36 b(he)434 b(A)-36 b(ussage)434
b(handelt,)f(und)g(b)36 b(egr\374nde)432 b(deine)h(En)-36
b(tsc)g(heidung.)p 1 0 0 TeXcolorrgb 921 24865 a(Die)434
b(A)-36 b(ussage)434 b(ist)g(w)-36 b(ahr.)434 b(M\366glic)-36
b(he)434 b(Begr\374ndung:)873 26857 y(A)-36 b(ugensumme)432
b(5:)j(\(1;4\),\(2;3\),\(3;2\),\(4;1\))p Fw(\))i FH(4)d(M\366glic)-36
b(hk)g(eiten)873 28849 y(A)g(ugensumme)432 b(9:)j
(\(3;6\),\(4;5\),\(5;4\),\(6;3\))p Fw(\))i FH(4)d(M\366glic)-36
b(hk)g(eiten)921 30841 y(P\(\022A)g(ugensumme)433 b(5\020\)=)14102
30318 y FG(4)p 13867 30531 941 45 v 13867 31299 a(36)921
32833 y FH(P\(\022A)-36 b(ugensumme)433 b(9\020\)=)14102
32310 y FG(4)p 13867 32523 V 13867 33291 a(36)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7823
a FE(___/1)p 1 0 0 TeXcolorrgb 47905 9815 a FD(WS)369
b(2.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 36766 54804 45 v 0 TeXcolorgray 24421 81281 a FH(39)p
0 TeXcolorgray eop end
%%Page: 40 40
TeXDict begin 40 39 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)703 b(2.1)g(-)g(4)h(Rote)f(und)f
(blaue)g(Kugeln)g(-)h(L)-179 b(T)703 b(-)g(Matura)g(2014/15)-2617
4622 y(-)718 b(Neb)60 b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray
-1391 7929 a FH(42.)p 0 TeXcolorgray 651 w(In)324 b(einem)g
(Beh\344lter)h(b)36 b(e\034nden)322 b(sic)-36 b(h)324
b(15)h(rote)f(Kugeln)h(und)e(18)i(blaue)f(Kugeln.)h(Die)g(Kugeln)921
9921 y(sind)387 b(bis)g(auf)h(ihre)f(F)-108 b(arb)36
b(e)387 b(nic)-36 b(h)g(t)386 b(un)-36 b(tersc)g(heidbar.)386
b(Es)h(sollen)h(n)-36 b(un)386 b(in)h(einem)h(Zufallsexp)36
b(e-)921 11913 y(rimen)-36 b(t)497 b(zw)-36 b(ei)498
b(Kugeln)f(nac)-36 b(heinander)496 b(gezogen)i(w)-36
b(erden,)498 b(w)-36 b(ob)36 b(ei)498 b(die)f(erste)g(Kugel)h(nac)-36
b(h)921 13905 y(dem)621 b(Ziehen)f(nic)-36 b(h)g(t)621
b(zur\374c)-36 b(kgelegt)621 b(wird)h(und)e(es)h(auf)h(die)f
(Reihenfolge)h(der)f(Zieh)-36 b(ung)921 15897 y(ank)g(omm)g(t.)921
20434 y(Die)434 b(Buc)-36 b(hstab)36 b(en)433 b Fx(r)470
b FH(und)432 b Fx(b)h FH(hab)36 b(en)433 b(folgende)i(Bedeutung:)p
0 TeXcolorgray 342 23533 a Fx(r)470 b FH(.)217 b(.)g(.)p
0 TeXcolorgray 867 w(das)434 b(Ziehen)f(einer)g(roten)h(Kugel)p
0 TeXcolorgray 411 26078 a Fx(b)g FH(.)217 b(.)g(.)p
0 TeXcolorgray 867 w(das)434 b(Ziehen)f(einer)g(blauen)h(Kugel)921
29177 y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36
b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357
b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36 b(h)g(tigen)921
31169 y(Satzteile)434 b(so,)g(dass)g(eine)f(mathematisc)-36
b(h)434 b(k)-36 b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36
b(tsteh)g(t!)921 34659 y(Ein)705 b(Grundraum)e Fx(G)i
FH(f\374r)f(dieses)h(Zufallsexp)36 b(erimen)-36 b(t)706
b(lautet)p 34064 34659 3150 45 v 37685 34611 a(1)37213
34659 y Fp(\015)p 38807 34659 V 3855 w FH(,)f(und)p 921
36651 V 4542 36603 a(2)4071 36651 y Fp(\015)p 5665 36651
V 3583 w FH(ist)433 b(ein)h(Ereignis)p 0 TeXcolorgray
0 TeXcolorgray 2484 38023 18226 45 v 2484 41108 45 3085
v 11272 39805 a(1)10800 39853 y Fp(\015)p 20666 41108
V 2484 41152 18226 45 v 2484 44485 45 3334 v 3193 43208
a Fx(G)369 b FB(=)f Fw(f)p Fx(r)-36 b(;)221 b(b)p Fw(g)p
18301 44485 V 19009 43151 a FF(2)p 20666 44485 V 2484
44529 18226 45 v 2484 47862 45 3334 v 3193 46585 a Fx(G)369
b FB(=)f Fw(f)p FB(\()p Fx(r)-36 b(;)221 b(r)36 b FB(\))p
Fx(;)221 b FB(\()p Fx(r)-36 b(;)221 b(b)p FB(\))p Fx(;)g
FB(\()p Fx(b;)g(b)p FB(\))p Fw(g)p 18301 47862 V 19009
46528 a FF(2)p 20666 47862 V 2484 47907 18226 45 v 2484
53028 45 5122 v 3193 49759 a Fx(G)12406 b FB(=)3193 51751
y Fw(f)p FB(\()p Fx(r)-36 b(;)221 b(r)36 b FB(\))p Fx(;)221
b FB(\()p Fx(r)-36 b(;)221 b(b)p FB(\))p Fx(;)g FB(\()p
Fx(b;)g(r)36 b FB(\))p Fx(;)221 b FB(\()p Fx(b;)g(b)p
FB(\))p Fw(g)p 18301 53028 V 1 0 0 TeXcolorrgb 19009
50799 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 20666 53028 V 2484 53072 18226 45 v 0 TeXcolorgray
0 TeXcolorgray 25207 38134 20330 45 v 25207 41218 45
3085 v 35047 39916 a FH(2)34575 39964 y Fp(\015)p 45492
41218 V 25207 41263 20330 45 v 25207 48310 45 7047 v
25916 43123 a FH(die)748 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)748
b(dass)25916 45115 y(genau)433 b(eine)h(blaue)f(Kugel)i(gezo-)25916
47106 y(gen)e(wird,)p 43127 48310 V 43835 45118 a FF(2)p
45492 48310 V 25207 48354 20330 45 v 25207 53409 45 5056
v 25916 50214 a FH(jede)h(T)-108 b(eilmenge)434 b(des)f(Grund-)25916
52206 y(raumes)p 43127 53409 V 1 0 0 TeXcolorrgb 43835
51214 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45492 53409 V 25207 53453 20330 45 v 25207
56712 45 3260 v 25916 55509 a Fx(b)p 43127 56712 V 43835
55415 a FF(2)p 45492 56712 V 25207 56757 20330 45 v 47992
7929 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 9921 a FD(WS)369
b(2.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 60785 54804 45 v 0 TeXcolorgray 24421 81281 a FH(40)p
0 TeXcolorgray eop end
%%Page: 41 41
TeXDict begin 41 40 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)717 b(2.1)g(-)g(5)h(M\374nzwurf)e(-)i
(O)-60 b(A)717 b(-)h(Matura)f(NT)g(2)h(15/16)p 0 TeXcolorgray
-1391 4907 a FH(43.)p 0 TeXcolorgray 651 w(Bei)400 b(einem)g(Zufallsv)
-36 b(ersuc)g(h)401 b(wird)f(eine)g(M\374nze,)g(die)g(auf)g(einer)g
(Seite)g(eine)g(Zahl)g(und)f(auf)921 6899 y(der)433 b(anderen)g(Seite)g
(ein)h(W)-108 b(app)36 b(en)432 b(zeigt,)j(zw)-36 b(eimal)435
b(gew)-36 b(orfen.)921 11436 y(Gib)366 b(alle)h(m\366glic)-36
b(hen)366 b(A)-36 b(usf\344lle)367 b(\(A)-36 b(usg\344nge\))366
b(dieses)h(Zufallsv)-36 b(ersuc)g(hs)366 b(an!)h(W)-108
b(app)36 b(en)365 b(kann)921 13428 y(dab)36 b(ei)434
b(mit)f Fx(W)181 b FH(,)434 b(Zahl)f(mit)h Fx(Z)529 b
FH(abgek\374rzt)434 b(w)-36 b(erden.)p 1 0 0 TeXcolorrgb
921 17965 a(m\366glic)g(he)434 b(A)-36 b(usf\344lle)435
b(\(A)-36 b(usg\344nge\):)434 b Fw(f)p FB(\()p Fx(W)-36
b(;)221 b(W)181 b FB(\))p Fx(;)221 b FB(\()p Fx(W)-36
b(;)221 b(Z)95 b FB(\))p Fx(;)221 b FB(\()p Fx(Z)23 b(;)221
b(W)181 b FB(\))p Fx(;)221 b FB(\()p Fx(Z)23 b(;)221
b(Z)95 b FB(\))p Fw(g)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47901 4907 a FE(___/0)p 1 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
21772 54804 45 v -2331 27074 a FI(WS)717 b(2.2)g(-)g(1)h(W)-60
b(\374rfelergebnisse)714 b(-)j(L)-179 b(T)717 b(-)g(BIFIE)p
0 TeXcolorgray -1391 30381 a FH(44.)p 0 TeXcolorgray
651 w(Zw)-36 b(ei)417 b(Spielw\374rfel)h(\(6)e(Seiten,)h(b)36
b(esc)-36 b(hriftet)417 b(mit)f(1)i(bis)e(6)h(A)-36 b(ugen\))417
b(w)-36 b(erden)416 b(gew)-36 b(orfen)417 b(und)921 32373
y(die)433 b(A)-36 b(ugensumme)433 b(wird)h(ermittelt.)921
34919 y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36
b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357
b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36 b(h)g(tigen)921
36911 y(Satzteile)434 b(so,)g(dass)g(eine)f(mathematisc)-36
b(h)434 b(k)-36 b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36
b(tsteh)g(t!)921 40401 y(Die)1111 b(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit,)1111 b(das)g(Ereignis)f(\022A)-36
b(ugensumme)1110 b(6\020)h(zu)f(w\374rfeln,)h(ist)p 921
42393 3150 45 v 4542 42345 a(1)4071 42393 y Fp(\015)p
5665 42393 V 3785 w FH(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)636
b(das)f(Ereignis)h(\022A)-36 b(ugensumme)635 b(9\020)h(zu)g
(w\374rfeln,)874 44385 y(w)-36 b(eil)p 3728 44385 V 7350
44337 a(2)6878 44385 y Fp(\015)p 8472 44385 V 3583 w
FH(.)p 0 TeXcolorgray 0 TeXcolorgray 921 45868 12064
45 v 921 48952 45 3085 v 6627 47649 a(1)6155 47697 y
Fp(\015)p 12940 48952 V 921 48996 12064 45 v 921 52255
45 3260 v 1629 51052 a FH(gr\366\377er)435 b(als)f(die)p
10575 52255 V 1 0 0 TeXcolorrgb 11283 50958 a FF(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 12940
52255 V 921 52300 12064 45 v 921 55559 45 3260 v 1629
54356 a FH(kleiner)h(als)f(die)p 10575 55559 V 11283
54261 a FF(2)p 12940 55559 V 921 55603 12064 45 v 921
58862 45 3260 v 1629 57659 a FH(gleic)-36 b(h)435 b(der)p
10575 58862 V 11283 57565 a FF(2)p 12940 58862 V 921
58907 12064 45 v 0 TeXcolorgray 0 TeXcolorgray 16663
45868 27170 45 v 16663 48952 45 3085 v 29922 47649 a
FH(2)29450 47697 y Fp(\015)p 43788 48952 V 16663 48996
27170 45 v 16663 54051 45 5056 v 17371 50856 a FH(6)f(kleiner)g(als)g
(9)g(ist)g(und)e(das)i(Ereignis)g(\022A)-36 b(u-)17371
52848 y(gensumme)433 b(6\020)h(somit)g(seltener)g(ein)-36
b(tritt)p 41422 54051 V 42131 51856 a FF(2)p 43788 54051
V 16663 54096 27170 45 v 16663 59329 45 5234 v 17371
56134 a FH(die)434 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)433
b(b)36 b(eide)433 b(Male)37545 55611 y FG(5)p 37309 55824
941 45 v 37309 56592 a(36)17371 58126 y FH(b)36 b(etr\344gt)p
41422 59329 45 5234 v 42131 57044 a FF(2)p 43788 59329
V 16663 59373 27170 45 v 16663 66420 45 7047 v 17371
61233 a FH(es)344 b(n)-36 b(ur)343 b(vier)i(M\366glic)-36
b(hk)g(eiten)345 b(gibt,)f(die)g(A)-36 b(ugen-)17371
63225 y(summe)332 b(\0229\020)h(zu)f(w\374rfeln,)g(ab)36
b(er)333 b(f\374nf)f(M\366glic)-36 b(h-)17371 65217 y(k)g(eiten,)434
b(die)g(A)-36 b(ugensumme)432 b(\0226\020)i(zu)g(w\374rfeln)p
41422 66420 V 1 0 0 TeXcolorrgb 42131 63229 a FF(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 43788
66420 V 16663 66465 27170 45 v 47992 30381 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 32373 a FD(WS)369 b(2.2)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 70493
54804 45 v 0 TeXcolorgray 24421 81281 a FH(41)p 0 TeXcolorgray
eop end
%%Page: 42 42
TeXDict begin 42 41 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(2.2)g(-)g(2)h(Rei\377nagel)e(-)
i(O)-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray -1391 4800
a FH(45.)p 0 TeXcolorgray 651 w(W)-108 b(enn)453 b(man)h(einen)f
(Rei\377nagel)j(fallen)f(l\344sst,)g(bleibt)e(dieser)h(auf)g(eine)g
(der)g(b)36 b(eiden)453 b(darge-)921 6792 y(stellten)434
b(Arten)e(liegen.)p 0 TeXcolorgray 0 TeXcolorgray 18911
13178 a
 currentpoint currentpoint translate 0.5215 0.5215 scale neg exch neg
exch translate
 18911 13178 a 19345 13178 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 151.90195 a add def
/d 0.0 a add neg def /h 69.71608 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 19345 13178 a 14120
2214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 -85.35823 56.90549 -85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 -56.90549 85.35823 -85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 183.79666 -43.50313 142.26372 -85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 185.49724 -86.01292 162.90645 -64.55528
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 36160 13178 a
currentpoint initclip moveto

36160 13178 a 18911 13178 a
 currentpoint currentpoint translate 1 0.5215 div 1 0.5215 div scale
neg exch neg exch translate
 18911 13178 a 921 17163 a
FH(Besc)-36 b(hreib)36 b(e)492 b(eine)g(Metho)36 b(de,)492
b(wie)h(man)f(die)g(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)492
b(f\374r)g(die)g(b)36 b(eiden)492 b(F)-27 b(\344lle)921
19155 y(heraus\034nden)432 b(kann.)p 1 0 0 TeXcolorrgb
921 21700 a(Der)415 b(Rei\377nagel)h(wird)f(eine)g(b)36
b(estimm)-36 b(te)414 b(Anzahl)h(\(n-mal\))f(fallen)h(gelassen)h(und)d
(man)i(no-)921 23692 y(tiert,)463 b(wie)h(oft)g(er)f(auf)g(w)-36
b(elc)g(he)464 b(Art)f(zu)f(liegen)i(k)-36 b(omm)g(t.)464
b(W)-108 b(enn)462 b(er)h Fx(k)35118 23891 y FG(1)36108
23692 y FH(-mal)g(bzw.)h Fx(k)42841 23891 y FG(2)43367
23692 y FH(-mal)921 25684 y(auf)488 b(eine)g(b)36 b(estimm)-36
b(te)487 b(Art)g(zu)g(liegen)h(k)-36 b(omm)g(t,)488 b(dann)f(sind)g
(die)h(relativ)-36 b(en)488 b(H\344u\034gk)-36 b(eiten)1054
27153 y Fr(k)1544 27276 y Ft(1)p 1054 27366 952 45 v
1244 28134 a Fr(n)2590 27676 y FH(und)5342 27153 y Fr(k)5832
27276 y Ft(2)p 5342 27366 V 5532 28134 a Fr(n)6878 27676
y FH(N\344herungsw)g(erte)452 b(f\374r)f(die)h(gesuc)-36
b(h)g(ten)451 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eiten.)452
b(Je)g(\366fter)h(der)921 29668 y(Rei\377nagel)423 b(fallen)f(gelassen)
g(wird,)g(desto)f(zuv)-36 b(erl\344ssiger)423 b(ist)e(der)g(ermittelte)
h(N\344herungs-)874 31660 y(w)-36 b(ert.)921 36197 y(L\366sungssc)g
(hl\374ssel:)465 b(Die)i(A)-36 b(ufgab)36 b(e)466 b(gilt)g(b)36
b(ei)465 b(einer)h(sinngem\344\377)g(ric)-36 b(h)g(tigen)465
b(Erkl\344rung)h(als)921 38189 y(k)-36 b(orrekt)434 b(gel\366st.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
4800 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 6792 a FD(WS)369
b(2.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 41923 54804 45 v 0 TeXcolorgray 24421 81281 a FH(42)p
0 TeXcolorgray eop end
%%Page: 43 43
TeXDict begin 43 42 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(2.2)g(-)g(3)h(A)-60
b(ugensumme)716 b(-)i(O)-60 b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray
-1391 4800 a FH(46.)p 0 TeXcolorgray 651 w(Zw)-36 b(ei)445
b(herk)-36 b(\366mmlic)g(he)444 b(Spielw\374rfel)h(w)-36
b(erden)443 b(gew)-36 b(orfen)445 b(und)e(die)i(A)-36
b(ugensumme)443 b(wird)h(er-)921 6792 y(mittelt.)921
11330 y(Un)-36 b(tersuc)g(he,)677 b(w)-36 b(elc)g(hes)678
b(der)f(Ereignisse)h(\022A)-36 b(ugensumme)678 b(6\020)g(o)36
b(der)678 b(\022A)-36 b(ugensumme)677 b(9\020)874 13322
y(w)-36 b(ahrsc)g(heinlic)g(her)433 b(ist,)h(und)f(b)36
b(egr\374nden)432 b(deine)h(A)-36 b(ussage.)p 1 0 0 TeXcolorrgb
873 15867 a(A)g(ugensumme)432 b(6:)j FB(\(1;)221 b(5\))p
Fx(;)g FB(\(2;)g(4\))p Fx(;)g FB(\(3;)g(3\))p Fx(;)g
FB(\(4;)g(2\))p Fx(;)g FB(\(5;)g(1\))376 b Fw(\))434
b FH(5)g(M\366glic)-36 b(hk)g(eiten)873 18412 y(A)g(ugensumme)432
b(9:)j FB(\(3;)221 b(6\))p Fx(;)g FB(\(4;)g(5\))p Fx(;)g
FB(\(5;)g(4\))p Fx(;)g FB(\(6;)g(3\))375 b Fw(\))434
b FH(4)f(M\366glic)-36 b(hk)g(eiten)675 20958 y(\022A)g(ugensumme)433
b(6\020)h(ist)g(w)-36 b(ahrsc)g(heinlic)g(her.)921 25495
y(o)36 b(der:)434 b Fx(p)p FB(\()p FH(A)-36 b(ugensumme)432
b(6)p FB(\))369 b(=)16669 24972 y FG(5)p 16434 25185
941 45 v 16434 25953 a(36)921 28040 y Fx(p)p FB(\()p
FH(A)-36 b(ugensumme)432 b(9)q FB(\))368 b(=)13381 27517
y FG(4)p 13146 27731 V 13146 28499 a(36)1289 30063 y(5)p
1054 30276 V 1054 31044 a(36)2497 30586 y Fx(>)4245 30063
y FG(4)p 4010 30276 V 4010 31044 a(36)5453 30586 y Fw(\))434
b FH(\022A)-36 b(ugensumme)432 b(6\020)i(ist)g(w)-36
b(ahrsc)g(heinlic)g(her.)921 35123 y(L\366sungssc)g(hl\374ssel:)617
b(Die)g(A)-36 b(ufgab)36 b(e)617 b(ist)f(k)-36 b(orrekt)617
b(gel\366st,)h(w)-36 b(enn)616 b(das)g(ric)-36 b(h)g(tige)617
b(Ergebnis)921 37115 y(angegeb)36 b(en)434 b(und)e(dieses)i(k)-36
b(orrekt)434 b(argumen)-36 b(tiert)433 b(wurde.)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800
a FE(___/1)p 1 0 0 TeXcolorrgb 47905 6792 a FD(WS)369
b(2.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 40849 54804 45 v -2331 46277 a FI(WS)687 b(2.2)g(-)g(4)g(Sc)-60
b(hie\377stand)686 b(-)h(O)-60 b(A)688 b(-)f(Matura)g(2014/15)g(-)h(K)
-60 b(omp)60 b(en-)-2331 49299 y(sationspr\374fung)p
0 TeXcolorgray -1391 52606 a FH(47.)p 0 TeXcolorgray
651 w(Ein)392 b(Sp)36 b(ortsc)-36 b(h)g(\374tze)390 b(sc)-36
b(hie\377t)392 b(innerhalb)f(einer)g(Min)-36 b(ute)391
b FB(20)p FH(-mal)i(auf)f(eine)g(Sc)-36 b(heib)36 b(e.)391
b(Dab)36 b(ei)921 54598 y(tri\033t)433 b(er)g(b)36 b(ei)434
b(den)f(ersten)g FB(17)h FH(Sc)-36 b(h)g(\374ssen)432
b FB(4)p FH(-mal)i(den)f(innersten)f(Ring)i(der)f(Zielsc)-36
b(heib)36 b(e.)921 57144 y(Bestimme)534 b(aufgrund)g(dieser)g(Daten)g
(einen)g(Sc)-36 b(h\344tzw)g(ert)533 b(f\374r)h(die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)921 59136 y(dass)741
b(un)-36 b(ter)740 b(der)g(Annahme,)h(dass)g(sic)-36
b(h)741 b(die)h(V)-108 b(oraussetzungen)740 b(nic)-36
b(h)g(t)740 b(\344ndern,)h(der)921 61128 y(Sp)36 b(ortsc)-36
b(h)g(\374tze)432 b(b)36 b(eim)433 b(18.)i(Sc)-36 b(h)g(uss)432
b(wieder)i(den)f(innersten)f(Ring)i(der)f(Zielsc)-36
b(heib)36 b(e)434 b(tri\033t.)p 1 0 0 TeXcolorrgb 921
65665 a(Der)g(Sc)-36 b(h\344tzw)g(ert)433 b(f\374r)g(die)h(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit)433 b(b)36 b(etr\344gt)30254
65142 y FG(4)p 30018 65355 941 45 v 30018 66123 a(17)31461
65665 y Fw(\031)369 b FB(0)p Fx(;)p FB(2353)i(=)e(23)p
Fx(;)p FB(53)221 b(\045)874 67657 y FH(T)-108 b(oleranzin)-36
b(terv)-72 b(all:)435 b FB([)8 b(0)p Fx(;)p FB(23;)221
b(0)p Fx(;)p FB(24])437 b FH(bzw.)d FB([)8 b(23)221 b(\045;)g(24)g
(\045])p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 52606 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 54598
a FD(WS)369 b(2.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 71464 54804 45 v 0 TeXcolorgray
24421 81281 a FH(43)p 0 TeXcolorgray eop end
%%Page: 44 44
TeXDict begin 44 43 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)951 b(2.2)h(-)h(5)f(W)-179
b(ahrsc)-60 b(heinlic)g(hk)g(eit)950 b(f\374r)h(eine)g(M\344dc)-60
b(hengeburt)951 b(-)-2331 4515 y(O)-60 b(A)718 b(-)g(Matura)f(2015/16)g
(-)g(Neb)60 b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray
-1391 7823 a FH(48.)p 0 TeXcolorgray 651 w(Im)406 b(Jahr)f(2014)i
(wurden)d(in)h(\326sterreic)-36 b(h)405 b(42162)i(Bub)36
b(en)405 b(und)f(39560)j(M\344dc)-36 b(hen)404 b(geb)36
b(oren.)921 12360 y(Gib)474 b(anhand)f(dieser)i(Daten)f(einen)g(Sc)-36
b(h\344tzw)g(ert)474 b(f\374r)g(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit)475 b(an,)f(dass)921 14352 y(ein)433
b(in)h(\326sterreic)-36 b(h)433 b(geb)36 b(orenes)433
b(Kind)h(ein)f(M\344dc)-36 b(hen)433 b(ist.)p 1 0 0 TeXcolorrgb
3591 16111 a FB(39)221 b(560)p 1054 16700 8549 45 v 1054
17921 a(42)g(162)297 b(+)e(39)221 b(560)10104 17009 y
Fw(\031)369 b FB(0)p Fx(;)p FB(484)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7823 a FE(___/1)p
1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 21498 54804 45 v -2331 26800 a FI(WS)914
b(2.2)g(-)g(6)h(W)-179 b(eic)-60 b(he)913 b(und)g(harte)h(Eier)g(-)h(O)
-60 b(A)914 b(-)h(Matura)f(NT)g(2)-2439 29822 y(15/16)p
0 TeXcolorgray -1391 33129 a FH(49.)p 0 TeXcolorgray
651 w(Beim)524 b(F)-108 b(r\374hst\374c)-36 b(ksbu\033et)520
b(eines)k(Hotels)g(b)36 b(e\034nden)522 b(sic)-36 b(h)523
b(in)g(einem)h(K)-36 b(\366rb)36 b(c)-36 b(hen)522 b(zehn)h(\344u-)921
35121 y(\377erlic)-36 b(h)371 b(nic)-36 b(h)g(t)371 b(un)-36
b(tersc)g(heidbare)369 b(Eier.)j(Bei)f(der)g(V)-108 b(orb)36
b(ereitung)370 b(wurde)h(v)-36 b(ersehen)g(tlic)g(h)370
b(ein)921 37113 y(hart)433 b(gek)-36 b(o)36 b(c)-36 b(h)g(tes)434
b(Ei)g(zu)f(neun)g(w)-36 b(eic)g(h)433 b(gek)-36 b(o)36
b(c)-36 b(h)g(ten)434 b(Eiern)f(gelegt.)921 41650 y(Eine)601
b(Dame)h(en)-36 b(tnimm)g(t)601 b(aus)g(dem)g(no)36 b(c)-36
b(h)601 b(v)-36 b(ollen)602 b(K)-36 b(\366rb)36 b(c)-36
b(hen)601 b(ein)g(Ei,)h(das)g(sie)g(zuf\344llig)921 43642
y(ausw)-36 b(\344hlt.)550 b(Gib)e(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit)549 b(an,)f(dass)h(der)f(n\344c)-36
b(hste)548 b(Gast)g(b)36 b(ei)548 b(zuf\344lliger)855
45634 y(W)-108 b(ahl)433 b(eines)h(Eies)g(das)f(harte)h(Ei)f(en)-36
b(tnimm)g(t.)p 1 0 0 TeXcolorrgb 921 48180 a(L\366sung:)6156
47657 y FG(1)p 5920 47870 941 45 v 5920 48638 a(10)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47901
33129 a FE(___/0)p 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 52113 54804 45
v 0 TeXcolorgray 24421 81281 a FH(44)p 0 TeXcolorgray
eop end
%%Page: 45 45
TeXDict begin 45 44 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)699 b(2.2)h(-)g(7)f(Online-Gl\374c)
-60 b(ksspiel)697 b(-)j(MC)h(-)f(Matura)f(NT)h(2)f(15/16)p
0 TeXcolorgray -1391 4907 a FH(50.)p 0 TeXcolorgray 651
w(Ein)717 b(Mann)g(spielt)h(\374b)36 b(er)717 b(einen)g(l\344ngeren)h
(Zeitraum)f(regelm\344\377ig)j(dasselb)36 b(e)717 b(Online-)921
6899 y(Gl\374c)-36 b(ksspiel)436 b(mit)h(k)-36 b(onstan)g(ter)436
b(Gewinn)-36 b(w)g(ahrsc)g(heinlic)g(hk)g(eit.)436 b(V)-108
b(on)435 b(768)j(Spielen)d(gewinn)-36 b(t)921 8891 y(er)433
b(162.)921 13428 y(Mit)400 b(w)-36 b(elc)g(her)400 b(ungef\344hren)f(W)
-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)400 b(wird)g(er)g(das)g(n\344c)
-36 b(hste)400 b(Spiel)f(gewinnen?)921 15973 y(Kreuze)433
b(den)g(zutre\033enden)f(Sc)-36 b(h\344tzw)g(ert)433
b(f\374r)g(diese)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)433
b(an.)p 19167 18674 8051 45 v 19167 21818 45 3145 v 19875
20615 a FB(0)p Fx(;)p FB(162)221 b(\045)p 24807 21818
V 27173 21818 V 19167 21862 8051 45 v 19167 25007 45
3145 v 19875 23803 a(4)p Fx(;)p FB(74)g(\045)p 24807
25007 V 27173 25007 V 19167 25051 8051 45 v 19167 28195
45 3145 v 19875 26992 a(16)p Fx(;)p FB(2)g(\045)p 24807
28195 V 27173 28195 V 19167 28239 8051 45 v 19167 31384
45 3145 v 19875 30181 a(21)p Fx(;)p FB(1)g(\045)p 24807
31384 V 1 0 0 TeXcolorrgb 25516 30144 a FF(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 27173 31384
V 19167 31428 8051 45 v 19167 34572 45 3145 v 19875 33369
a FB(7)p Fx(;)p FB(68)g(\045)p 24807 34572 V 27173 34572
V 19167 34617 8051 45 v 19167 37761 45 3145 v 19875 36558
a(76)p Fx(;)p FB(6)g(\045)p 24807 37761 V 27173 37761
V 19167 37805 8051 45 v 47901 4907 a FE(___/0)p 1 0 0
TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 41833 54804 45 v 0 TeXcolorgray 24421 81281 a FH(45)p
0 TeXcolorgray eop end
%%Page: 46 46
TeXDict begin 46 45 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)811 b(2.2)h(-)g(8)f(Sc)-60
b(h\344tzw)g(ert)812 b(f\374r)f(eine)g(W)-179 b(ahrsc)-60
b(heinlic)g(hk)g(eit)809 b(-)j(O)-60 b(A)812 b(-)-2331
4515 y(Matura)717 b(NT)h(1)f(16/17)p 0 TeXcolorgray -1391
7823 a FH(51.)p 0 TeXcolorgray 651 w(In)290 b(einer)g(F)-108
b(abrik)291 b(wird)f(mithilfe)i(einer)e(Masc)-36 b(hine)290
b(ein)g(Pro)36 b(dukt)291 b(erzeugt,)f(v)-36 b(on)291
b(dem)f(jew)-36 b(eils)856 9815 y(100)434 b(St\374c)-36
b(k)433 b(in)h(eine)g(P)-36 b(ac)g(kung)433 b(k)-36 b(ommen.)921
12360 y(Im)518 b(Ansc)-36 b(hluss)518 b(an)g(eine)g(Neueinstellung)f
(der)h(Masc)-36 b(hine)518 b(w)-36 b(erden)517 b(drei)h(P)-36
b(ac)g(kungen)518 b(er-)921 14352 y(zeugt.)331 b(Diese)f(P)-36
b(ac)g(kungen)330 b(w)-36 b(erden)329 b(k)-36 b(on)g(trolliert)331
b(un)e(es)h(wird)g(die)g(jew)-36 b(eilige)332 b(Anzahl)e(darin)921
16344 y(en)-36 b(thaltener)481 b(defekter)h(St\374c)-36
b(k)g(e)481 b(ermittelt.)i(Die)f(Ergebnisse)g(dieser)g(K)-36
b(on)g(trollen)482 b(sind)f(in)921 18336 y(der)433 b(nac)-36
b(hstehenden)432 b(T)-108 b(ab)36 b(elle)434 b(zusammengefasst.)p
0 TeXcolorgray 0 TeXcolorgray 10751 20742 25317 45 v
10751 22733 45 1992 v 0.9 TeXcolorgray 10795 22733 14570
1992 v 0 TeXcolorgray 11459 22136 a(in)f(der)h(ersten)e(P)-36
b(ac)g(kung)p 25365 22733 45 1992 v 2197 w(6)434 b(defekte)g(St\374c)
-36 b(k)g(e)p 36022 22733 V 10751 22778 25317 45 v 10751
24770 45 1992 v 0.9 TeXcolorgray 10795 24770 14570 1992
v 0 TeXcolorgray 11459 24172 a(in)433 b(der)h(zw)-36
b(eiten)433 b(P)-36 b(ac)g(kung)p 25365 24770 45 1992
v 1373 w(3)434 b(defekte)g(St\374c)-36 b(k)g(e)p 36022
24770 V 10751 24814 25317 45 v 10751 26806 45 1992 v
0.9 TeXcolorgray 10795 26806 14570 1992 v 0 TeXcolorgray
11459 26208 a(in)433 b(der)h(dritten)e(P)-36 b(ac)g(kung)p
25365 26806 45 1992 v 1698 w(4)434 b(defekte)g(St\374c)-36
b(k)g(e)p 36022 26806 V 10751 26850 25317 45 v 921 29868
a(Die)384 b(F)-108 b(abriksleitung)384 b(b)36 b(en\366tigt)384
b(einen)f(auf)h(dem)f(v)-36 b(orliegenden)385 b(Datenmaterial)f(b)36
b(esieren-)921 31860 y(den)441 b(Sc)-36 b(h\344tzw)g(ert)441
b(f\374r)g(die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)442
b Fx(\032)p FH(,)f(dass)h(ein)g(v)-36 b(on)442 b(der)f(neu)g
(eingestellten)921 33852 y(Masc)-36 b(hine)433 b(erzeugte)h(St\374c)-36
b(k)433 b(fehlerhaft)h(ist.)921 36398 y(Gib)530 b(einen)h(m\366glic)-36
b(hst)531 b(zuv)-36 b(erl\344ssigen)532 b(Sc)-36 b(h\344tzw)g(ert)530
b(f\374r)h(die)f(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)531
b Fx(\032)g FH(an,)921 38390 y(dass)434 b(ein)f(v)-36
b(on)434 b(der)f(neu)g(eingestellten)h(Masc)-36 b(hine)433
b(erzeugtes)g(St\374c)-36 b(k)433 b(fehlerhaft)h(ist!)921
40935 y Fx(\032)369 b FB(=)p 1 0 0 TeXcolorrgb 433 w
Fx(\032)g FB(=)6195 40412 y FG(13)p 5959 40625 1412 45
v 5959 41393 a(300)7872 40935 y FB(=)g(0)p Fx(;)p FB(04)11709
40670 y(_)11564 40935 y(3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
874 43480 a FH(T)-108 b(oleranzin)-36 b(terv)-72 b(all:)435
b FB([)8 b(0)p Fx(;)p FB(04;)221 b(0)p Fx(;)p FB(05])437
b FH(bzw.)d FB([)8 b(4)221 b(\045;)g(5)g(\045])p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 7823 a FE(___/1)p 1 0 0
TeXcolorrgb 47905 9815 a FD(WS)369 b(2.2)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 47288 54804 45
v 0 TeXcolorgray 24421 81281 a FH(46)p 0 TeXcolorgray
eop end
%%Page: 47 47
TeXDict begin 47 46 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(2.3)g(-)g(1)h(Kugelsc)-60
b(hreib)60 b(er)715 b(-)i(ZO)h(-)f(BIFIE)p 0 TeXcolorgray
-1391 4800 a FH(52.)p 0 TeXcolorgray 651 w(Ein)384 b(Kugelsc)-36
b(hreib)36 b(er)383 b(b)36 b(esteh)-36 b(t)383 b(aus)h(zw)-36
b(ei)384 b(Bauteilen,)g(der)f(Mine)h(\(M\))f(und)g(dem)g(Geh\344use)921
6792 y(mit)305 b(dem)g(Mec)-36 b(hanism)g(us)304 b(\(G\).)h(Bei)g(der)g
(Qualit\344tsk)-36 b(on)g(trolle)306 b(w)-36 b(erden)304
b(die)h(Kugelsc)-36 b(hreib)36 b(er)921 8784 y(einzeln)508
b(en)-36 b(tnommen)506 b(und)g(auf)i(ihre)g(F)-108 b(unktionst\374c)-36
b(h)g(tigk)g(eit)507 b(hin)g(getestet.)h(Ein)f(Kugel-)921
10776 y(sc)-36 b(hreib)36 b(er)433 b(gilt)h(als)g(defekt,)h(w)-36
b(enn)433 b(mindestens)f(ein)i(Bauteil)g(fehlerhaft)g(ist.)921
15314 y(Im)611 b(nac)-36 b(hstehenden)609 b(Baumdiagramm)j(sind)e(alle)
i(m\366glic)-36 b(hen)612 b(F)-27 b(\344lle)611 b(f\374r)g(defekte)g
(und)921 17305 y(nic)-36 b(h)g(t)433 b(defekte)h(Kugelsc)-36
b(hreib)36 b(er)433 b(aufgelistet.)p 0 TeXcolorgray 0
TeXcolorgray 921 41486 a
 currentpoint currentpoint translate 0.58363 0.58363 scale neg exch
neg exch translate
 921 41486 a 921 41486 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 765.77196 a add def
/d 0.0 a add neg def /h 310.89581 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921
41486 a 53112 58784 a
tx@Dict begin  { -116.65642 426.79115 } PutCoor PutBegin  end
 53112 58784 a 53489 61042 a Fo(Start)p
53112 58828 6349 45 v 53112 61396 45 2591 v 59417 61396
V 53112 61418 6349 45 v 53112 58784 a
tx@Dict begin  PutEnd  end
 53112 58784 a 53112
58784 a
tx@Dict begin  { -330.05199 327.20654 } PutCoor PutBegin  end
 53112 58784 a 53488 61042 a Fo(M)832 b(defekt)p
53112 58828 10641 45 v 53112 61396 45 2591 v 63708 61396
V 53112 61418 10641 45 v 53112 58784 a
tx@Dict begin  PutEnd  end
 53112 58784 a
53112 58784 a
tx@Dict begin  { 62.59595 327.20654 } PutCoor PutBegin  end
 53112 58784 a 53488 61042 a Fo(M)g(ist)f(o.k.)p
53112 58828 11383 45 v 53112 61396 45 2591 v 64450 61396
V 53112 61418 11383 45 v 53112 58784 a
tx@Dict begin  PutEnd  end
 53112 58784 a
53112 58784 a
tx@Dict begin  { -441.01752 216.24101 } PutCoor PutBegin  end
 53112 58784 a 53488 61042 a Fo(G)h(defekt)p
53112 58828 10300 45 v 53112 61396 45 2591 v 63368 61396
V 53112 61418 10300 45 v 53112 58784 a
tx@Dict begin  PutEnd  end
 53112 58784 a
53112 58784 a
tx@Dict begin  { -221.93147 216.24101 } PutCoor PutBegin  end
 53112 58784 a 53488 61042 a Fo(G)g(ist)f(o.k.)p
53112 58828 11042 45 v 53112 61396 45 2591 v 64110 61396
V 53112 61418 11042 45 v 53112 58784 a
tx@Dict begin  PutEnd  end
 53112 58784 a
53112 58784 a
tx@Dict begin  { -36.98865 216.24101 } PutCoor PutBegin  end
 53112 58784 a 53488 61042 a Fo(G)h(defekt)p
53112 58828 10300 45 v 53112 61396 45 2591 v 63368 61396
V 53112 61418 10300 45 v 53112 58784 a
tx@Dict begin  PutEnd  end
 53112 58784 a
53112 58784 a
tx@Dict begin  { 168.1467 216.24101 } PutCoor PutBegin  end
 53112 58784 a 53488 61042 a Fo(G)g(ist)f(o.k.)p
53112 58828 11042 45 v 53112 61396 45 2591 v 64110 61396
V 53112 61418 11042 45 v 53112 58784 a
tx@Dict begin  PutEnd  end
 53112 58784 a
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -285.80167
341.43292 -128.73329 399.62437   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 113.81097
341.43292 -45.91269 399.62437   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -398.33841
227.62195 -342.79268 293.8687   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -170.71646
227.62195 -225.56969 295.14294   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 227.62195
53.47218 292.59445   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 227.62195
227.62195 173.24323 292.59445   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
53112 58784 a
tx@Dict begin  { -233.21472 400.89818 } PutCoor PutBegin  end
 53112 58784 a 1734 x Fo(0,05)53112 58784
y
tx@Dict begin  PutEnd  end
 53112 58784 a 53112 58784 a
tx@Dict begin  { 19.0698 399.62437 } PutCoor PutBegin  end
 53112 58784 a 1734 x Fo(0,95)53112
58784 y
tx@Dict begin  PutEnd  end
 53112 58784 a 53112 58784 a
tx@Dict begin  { -412.87129 283.67519 } PutCoor PutBegin  end
 53112 58784 a 1734
x Fo(0,08)53112 58784 y
tx@Dict begin  PutEnd  end
 53112 58784 a 53112 58784 a
tx@Dict begin  { -191.1673 279.85289 } PutCoor PutBegin  end
 53112
58784 a 1734 x Fo(0,92)53112 58784 y
tx@Dict begin  PutEnd  end
 53112 58784 a 53112
58784 a
tx@Dict begin  { -12.78453 283.67519 } PutCoor PutBegin  end
 53112 58784 a 1734 x Fo(0,08)53112 58784 y
tx@Dict begin  PutEnd  end
 53112
58784 a 53112 58784 a
tx@Dict begin  { 206.37183 278.57864 } PutCoor PutBegin  end
 53112 58784 a 1734 x Fo(0,92)53112
58784 y
tx@Dict begin  PutEnd  end
 53112 58784 a 85689 41486 a
currentpoint initclip moveto
 85689 41486 a 921
41486 a
 currentpoint currentpoint translate 1 0.58363 div 1 0.58363 div scale
neg exch neg exch translate
 921 41486 a 3985 x FH(Ordnen)463 b(den)i(Ereignissen)g
Fx(E)15957 45670 y FG(1)16483 45471 y FH(,)g Fx(E)18272
45670 y FG(2)18798 45471 y FH(,)g Fx(E)20587 45670 y
FG(3)21578 45471 y FH(bzw.)h Fx(E)25608 45670 y FG(4)26599
45471 y FH(die)f(en)-36 b(tsprec)g(hende)463 b(W)-108
b(ahrsc)-36 b(heinlic)g(h-)921 47463 y(k)g(eit)434 b
Fx(p)4103 47662 y FG(1)4629 47463 y FH(,)f Fx(p)6076
47662 y FG(2)6602 47463 y FH(,)h Fx(p)8050 47662 y FG(3)8576
47463 y FH(,)f Fx(p)10023 47662 y FG(4)10549 47463 y
FH(,)h Fx(p)11997 47662 y FG(5)12956 47463 y FH(o)36
b(der)434 b Fx(p)16536 47662 y FG(6)17495 47463 y FH(zu.)p
0 TeXcolorgray 0 TeXcolorgray 2683 51162 16109 45 v 18792
51162 4523 45 v 2683 58209 45 7047 v 3391 53022 a Fx(E)4354
53221 y FG(1)4880 53022 y FH(:)g(Eine)f(Mine)h(ist)f(defekt)3391
55014 y(und)632 b(das)g(Geh\344use)g(ist)h(in)3391 57006
y(Ordn)-36 b(ung.)p 18747 58209 V 0.9 TeXcolorgray 18792
58209 4478 7047 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 20588
55143 a(E)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
23269 58209 45 7047 v 2683 58253 16109 45 v 18792 58253
4523 45 v 2683 63050 45 4797 v 3391 60113 a Fx(E)4354
60312 y FG(2)4880 60113 y FH(:)368 b(Ein)g(Kugelsc)-36
b(hreib)36 b(er)368 b(ist)3391 62105 y(defekt.)p 18747
63050 V 0.9 TeXcolorgray 18792 63050 4478 4797 v 0 TeXcolorgray
1 0 0 TeXcolorrgb 20534 61109 a(D)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 23269 63050 45 4797
v 2683 63094 16109 45 v 18792 63094 4523 45 v 2683 67891
45 4797 v 3391 64954 a Fx(E)4354 65153 y FG(3)4880 64954
y FH(:)434 b(H\366)36 b(c)-36 b(hstens)433 b(ein)g(T)-108
b(eil)435 b(ist)3391 66946 y(defekt.)p 18747 67891 V
0.9 TeXcolorgray 18792 67891 4478 4797 v 0 TeXcolorgray
1 0 0 TeXcolorrgb 20606 65950 a(F)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 23269 67891 45 4797
v 2683 67935 16109 45 v 18792 67935 4523 45 v 2683 72732
45 4797 v 3391 69795 a Fx(E)4354 69994 y FG(4)4880 69795
y FH(:)368 b(Ein)g(Kugelsc)-36 b(hreib)36 b(er)368 b(ist)3391
71787 y(nic)-36 b(h)g(t)433 b(defekt.)p 18747 72732 V
0.9 TeXcolorgray 18792 72732 4478 4797 v 0 TeXcolorgray
1 0 0 TeXcolorrgb 20519 70791 a(A)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 23269 72732 45 4797
v 2683 72776 16109 45 v 18792 72776 4523 45 v 0 TeXcolorgray
0 TeXcolorgray 25005 51162 4567 45 v 29571 51162 15178
45 v 25005 54421 45 3260 v 0.92 TeXcolorgray 25049 54421
4478 3260 v 0 TeXcolorgray 26777 53343 a(A)p 29527 54421
45 3260 v 30236 53175 a Fx(p)30889 53374 y FG(1)31783
53175 y FB(=)369 b(0)p Fx(;)p FB(95)296 b Fw(\001)g FB(0)p
Fx(;)p FB(92)p 44705 54421 V 25005 54465 4567 45 v 29571
54465 15178 45 v 25005 57725 45 3260 v 0.92 TeXcolorgray
25049 57725 4478 3260 v 0 TeXcolorgray 26828 56646 a
FH(B)p 29527 57725 45 3260 v 30236 56453 a Fn(p)30846
56635 y FG(2)31708 56453 y Fm(=)336 b(0)p Fn(;)p Fm(05)136
b Fl(\001)g Fm(0)p Fn(;)p Fm(08)g(+)g(0)p Fn(;)p Fm(95)g
Fl(\001)g Fm(0)p Fn(;)p Fm(08)p 44705 57725 V 25005 57769
4567 45 v 29571 57769 15178 45 v 25005 61028 45 3260
v 0.92 TeXcolorgray 25049 61028 4478 3260 v 0 TeXcolorgray
26819 59950 a FH(C)p 29527 61028 45 3260 v 30236 59782
a Fx(p)30889 59981 y FG(3)31783 59782 y FB(=)369 b(0)p
Fx(;)p FB(05)296 b(+)f(0)p Fx(;)p FB(92)p 44705 61028
V 25005 61072 4567 45 v 29571 61072 15178 45 v 25005
64332 45 3260 v 0.92 TeXcolorgray 25049 64332 4478 3260
v 0 TeXcolorgray 26792 63253 a FH(D)p 29527 64332 45
3260 v 30236 63085 a Fx(p)30889 63284 y FG(4)31783 63085
y FB(=)369 b(0)p Fx(;)p FB(05)296 b(+)f(0)p Fx(;)p FB(95)i
Fw(\001)e FB(0)p Fx(;)p FB(08)p 44705 64332 V 25005 64376
4567 45 v 29571 64376 15178 45 v 25005 67635 45 3260
v 0.92 TeXcolorgray 25049 67635 4478 3260 v 0 TeXcolorgray
26846 66557 a FH(E)p 29527 67635 45 3260 v 30236 66389
a Fx(p)30889 66588 y FG(5)31783 66389 y FB(=)369 b(0)p
Fx(;)p FB(05)296 b Fw(\001)g FB(0)p Fx(;)p FB(92)p 44705
67635 V 25005 67679 4567 45 v 29571 67679 15178 45 v
25005 70939 45 3260 v 0.92 TeXcolorgray 25049 70939 4478
3260 v 0 TeXcolorgray 26864 69860 a FH(F)p 29527 70939
45 3260 v 30236 69692 a Fx(p)30889 69891 y FG(6)31783
69692 y FB(=)369 b(1)295 b Fw(\000)h FB(0)p Fx(;)p FB(05)g
Fw(\001)f FB(0)p Fx(;)p FB(08)p 44705 70939 V 25005 70983
4567 45 v 29571 70983 15178 45 v 47992 4800 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a FD(WS)369 b(2.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 77350
54804 45 v 0 TeXcolorgray 24421 81281 a FH(47)p 0 TeXcolorgray
eop end
%%Page: 48 48
TeXDict begin 48 47 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)696 b(2.3)h(-)g(2)g(W)-179
b(ahrsc)-60 b(heinlic)g(hk)g(eit)695 b(eines)h(Defekts)g(-)h(O)-60
b(A)697 b(-)h(BIFIE)p 0 TeXcolorgray -1391 4800 a FH(53.)p
0 TeXcolorgray 651 w(Eine)447 b(Masc)-36 b(hine)446 b(b)36
b(esteh)-36 b(t)446 b(aus)g(den)g(drei)h(Bauteilen)f(A,)h(B)g(und)f(C.)
h(Diese)g(hab)36 b(en)446 b(die)h(im)921 6792 y(nac)-36
b(hstehenden)490 b(Mo)36 b(dell)493 b(eingetragenen,)g(v)-36
b(oneinander)492 b(unabh\344ngigen)g(Defekth\344u\034g-)921
8784 y(k)-36 b(eiten.)434 b(Eine)g(Masc)-36 b(hine)433
b(ist)h(defekt,)g(w)-36 b(enn)433 b(mindestens)g(ein)g(Bauteil)h
(defekt)g(ist.)921 42042 y
 currentpoint currentpoint translate 0.39687 0.39687 scale neg exch
neg exch translate
 921 42042 a 921 42042 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 1023.77255 a add def
/d 0.0 a add neg def /h 690.70839 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921
42042 a 67493 32329 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -284.52744 398.33841 -56.90549 569.05487
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -398.33841 284.52744 -284.52744 398.33841
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -455.2439 170.71646 -398.33841 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 284.52744 170.71646 398.33841
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 170.71646 56.90549 284.52744  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 227.62195 170.71646 284.52744 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -227.62195 170.71646 -170.71646 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 398.33841 -56.90549 569.05487
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  11.0  11.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 284.52744 284.52744 170.71646 398.33841
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  11.0  11.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 341.43292 170.71646 284.52744 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  11.0  11.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 170.71646 56.90549 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  11.0  11.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -113.81097 170.71646 -170.71646 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  11.0  11.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -341.43292 170.71646 -398.33841 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  11.0  11.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -170.71646 284.52744 -284.52744 398.33841
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  11.0  11.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -512.14938 569.05487 -569.05487 569.05487
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -512.14938 398.33841 -569.05487 398.33841
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -512.14938 284.52744 -569.05487 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -512.14938 170.71646 -569.05487 170.71646
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 67493 32329 a
tx@Dict begin  { -547.3224 491.12024 } PutCoor PutBegin  end
 67493 32329 a
1882 x Fo(A)67493 32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { -549.78014 348.55391 } PutCoor PutBegin  end

67493 32329 a 1882 x Fo(B)67493 32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a
67493 32329 a
tx@Dict begin  { -549.78014 235.48448 } PutCoor PutBegin  end
 67493 32329 a 1882 x Fo(C)67493 32329 y
tx@Dict begin  PutEnd  end

67493 32329 a 67493 32329 a
tx@Dict begin  { -233.9224 526.37575 } PutCoor PutBegin  end
 67493 32329 a 68258 34064
a Fk(95)p 67626 35261 3790 45 v 67626 37816 a(100)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { 79.47717 526.37575 } PutCoor PutBegin  end
 67493 32329 a 68889
34064 a Fk(5)p 67626 35261 3790 45 v 67626 37816 a(100)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { -398.33841 384.11203 } PutCoor PutBegin  end
 67493 32329 a 68889
34064 a Fk(9)p 67626 35261 3790 45 v 67626 37816 a(100)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { -469.47026 267.45561 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Fk(8)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { -201.96819 384.11203 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Fk(1)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { -349.96883 267.45561 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Fk(2)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { -251.1288 267.45561 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Fk(8)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { -128.03734 267.45561 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Fk(2)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { 62.59595 384.11203 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Fk(9)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { 246.62401 384.11203 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Fk(1)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { -20.07312 267.45561 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Fk(8)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { 207.29527 267.45561 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Fk(8)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { 99.5846 267.45561 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Fk(2)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { 330.05199 267.45561 } PutCoor PutBegin  end
 67493 32329 a 68258
34064 a Fk(2)p 67626 35261 2527 45 v 67626 37816 a(10)67493
32329 y
tx@Dict begin  PutEnd  end
 67493 32329 a 67493 32329 a
tx@Dict begin  { 292.09735 575.92232 } PutCoor PutBegin  end
 67493 32329 a 1882
x Fo(T)-216 b(eil)831 b(fehlerfrei)67493 32329 y
tx@Dict begin  PutEnd  end
 67493
32329 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 284.52744 569.05487 227.62195 569.05487
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 284.52744 512.14938 227.62195 512.14938
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  11.0  11.0 ] 0 0 add  DashLine  grestore end
 
@endspecial 67493 32329 a
tx@Dict begin  { 297.0137 520.61668 } PutCoor PutBegin  end
 67493 32329 a
1882 x Fo(T)-216 b(eil)831 b(defekt)67493 32329 y
tx@Dict begin  PutEnd  end
 67493
32329 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -56.90549 569.05487
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -284.52744 398.33841
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 170.71646 398.33841
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -170.71646 284.52744
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -398.33841 284.52744
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 56.90549 284.52744
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 284.52744 284.52744
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -227.62195 170.71646
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -113.81097 170.71646
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -455.2439 170.71646
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -341.43292 170.71646
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 0.0 170.71646   false
NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 113.81097 170.71646
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 227.62195 170.71646
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 341.43292 170.71646
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
114248 42042 a
currentpoint initclip moveto
 114248 42042 a 921 42042 a
 currentpoint currentpoint translate 1 0.39687 div 1 0.39687 div scale
neg exch neg exch translate
 921 42042 a
2546 x FH(Berec)-36 b(hne)473 b(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit,)474 b(dass)g(b)36 b(ei)473 b(einer)h(Masc)-36
b(hine)473 b(zw)-36 b(ei)474 b(o)36 b(der)474 b(mehr)f(Bau-)921
46580 y(teile)434 b(defekt)g(sind.)921 51117 y Fx(P)181
b FB(\()p Fx(X)474 b Fw(\025)369 b FB(2\))g(=)p 8371
51117 18898 34 v 1 0 0 TeXcolorrgb 921 55654 a Fx(P)181
b FB(\()p Fx(X)474 b Fw(\025)369 b FB(2\))g(=)8675 55131
y FG(95)p 8439 55344 1412 45 v 8439 56112 a(100)10279
55654 y Fw(\001)11311 55131 y FG(1)p 11076 55344 941
45 v 11076 56112 a(10)12445 55654 y Fw(\001)13242 55131
y FG(1)p 13242 55344 471 45 v 13242 56112 a(5)14140 55654
y FB(+)16050 55131 y FG(5)p 15580 55344 1412 45 v 15580
56112 a(100)17419 55654 y Fw(\001)18452 55131 y FG(9)p
18216 55344 941 45 v 18216 56112 a(10)19585 55654 y Fw(\001)20382
55131 y FG(1)p 20382 55344 471 45 v 20382 56112 a(5)21281
55654 y FB(+)23191 55131 y FG(5)p 22720 55344 1412 45
v 22720 56112 a(100)24560 55654 y Fw(\001)25592 55131
y FG(1)p 25357 55344 941 45 v 25357 56112 a(10)26726
55654 y Fw(\001)27523 55131 y FG(4)p 27523 55344 471
45 v 27523 56112 a(5)28421 55654 y FB(+)30331 55131 y
FG(5)p 29861 55344 1412 45 v 29861 56112 a(100)31700
55654 y Fw(\001)32733 55131 y FG(1)p 32497 55344 941
45 v 32497 56112 a(10)33866 55654 y Fw(\001)34663 55131
y FG(1)p 34663 55344 471 45 v 34663 56112 a(5)35635 55654
y FB(=)37619 55131 y FG(33)p 37149 55344 1882 45 v 37149
56112 a(1000)39533 55654 y FB(=)f(0)p Fx(;)p FB(033)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
4800 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 6792 a FD(WS)h(2.3)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
59588 54804 45 v 0 TeXcolorgray 24421 81281 a FH(48)p
0 TeXcolorgray eop end
%%Page: 49 49
TeXDict begin 49 48 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(2.3)g(-)g(3)h(FSME-Infektion)e
(-)h(O)-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray -1391
4800 a FH(54.)p 0 TeXcolorgray 651 w(In\034zierte)766
b(Zec)-36 b(k)g(en)767 b(k)-36 b(\366nnen)766 b(durc)-36
b(h)766 b(einen)g(Stic)-36 b(h)766 b(das)h(FSME-Virus)f(\(F)-108
b(r\374hsommer-)921 6792 y(Meningo)36 b(enzephalitis\))409
b(auf)h(den)e(Mensc)-36 b(hen)408 b(\374b)36 b(ertragen.)408
b(In)h(einem)g(Risik)-36 b(ogebiet)411 b(sind)921 8784
y(et)-36 b(w)g(a)313 b(3)217 b(\045)312 b(der)g(Zec)-36
b(k)g(en)313 b(FSME-in\034ziert.)f(Die)h(FSME-Sc)-36
b(h)g(utzimpfung)309 b(sc)-36 b(h)g(\374tzt)312 b(mit)g(einer)855
10776 y(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)433 b(v)-36
b(on)434 b(98)217 b(\045)434 b(v)-36 b(or)434 b(einer)f
(FSME-Erkrankung.)921 15314 y(Eine)587 b(geimpfte)h(P)-36
b(erson)587 b(wird)g(in)g(diesem)g(Risik)-36 b(ogebiet)589
b(v)-36 b(on)588 b(einer)f(Zec)-36 b(k)g(e)587 b(gesto)36
b(c)-36 b(hen.)921 17305 y(Berec)g(hne)564 b(die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)565 b(dass)g(diese)g(P)-36
b(erson)564 b(durc)-36 b(h)563 b(den)h(Zec)-36 b(k)g(enstic)g(h)564
b(an)921 19297 y(FSME)433 b(erkrankt.)p 1 0 0 TeXcolorrgb
921 21843 a FB(0)p Fx(;)p FB(03)296 b Fw(\001)g FB(0)p
Fx(;)p FB(02)370 b(=)f(0)p Fx(;)p FB(0006)921 26380 y
FH(Die)434 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)434
b(einer)f(Erkrankung)h(b)36 b(etr\344gt)433 b(0,06)217
b(\045.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4800 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 6792
a FD(WS)369 b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 30114 54804 45 v -2331 35316 a FI(WS)717
b(2.3)g(-)g(4)h(W)-60 b(\374rfeln)715 b(-)j(ZO)f(-)h(BIFIE)p
0 TeXcolorgray -1391 38624 a FH(55.)p 0 TeXcolorgray
651 w(Ein)381 b(idealer)g(sec)-36 b(hsseitiger)382 b(W)-36
b(\374rfel)381 b(mit)h(den)e(A)-36 b(ugenzahlen)381 b(1)g(bis)g(6)g
(wird)h(einmal)f(gew)-36 b(or-)921 40616 y(fen.)921 45153
y(Ordne)511 b(den)g(F)-108 b(ragestellungen)512 b(in)g(der)f(link)-36
b(en)513 b(Spalte)e(die)h(passenden)g(W)-108 b(ahrsc)-36
b(heinlic)g(h-)921 47145 y(k)g(eiten)434 b(in)f(der)g(rec)-36
b(h)g(ten)433 b(Spalte)g(zu.)p 0 TeXcolorgray 0 TeXcolorgray
2683 48852 26748 45 v 29430 48852 4523 45 v 2683 53907
45 5056 v 3391 50712 a(Wie)322 b(gro\377)g(ist)f(die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)322 b(dass)f(eine)3391
52704 y(gerade)434 b(Zahl)g(gew\374rfelt)g(wird?)p 29386
53907 V 0.9 TeXcolorgray 29430 53907 4478 5056 v 0 TeXcolorgray
1 0 0 TeXcolorrgb 31200 51837 a(C)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 33908 53907 45 5056
v 2683 53952 26748 45 v 29430 53952 4523 45 v 2683 59007
45 5056 v 3391 55812 a(Wie)322 b(gro\377)g(ist)f(die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)322 b(dass)f(eine)3391
57803 y(Zahl)434 b(gr\366\377er)g(als)g(4)g(gew\374rfelt)h(wird?)p
29386 59007 V 0.9 TeXcolorgray 29430 59007 4478 5056
v 0 TeXcolorgray 1 0 0 TeXcolorrgb 31158 56937 a(A)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 33908
59007 45 5056 v 2683 59051 26748 45 v 29430 59051 4523
45 v 2683 64106 45 5056 v 3391 60911 a(Wie)322 b(gro\377)g(ist)f(die)g
(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)322 b(dass)f(eine)3391
62903 y(Zahl)434 b(kleiner)g(als)g(2)g(gew\374rfelt)h(wird?)p
29386 64106 V 0.9 TeXcolorgray 29430 64106 4478 5056
v 0 TeXcolorgray 1 0 0 TeXcolorrgb 31209 62036 a(B)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 33908
64106 45 5056 v 2683 64150 26748 45 v 29430 64150 4523
45 v 2683 70939 45 6789 v 3391 66010 a(Wie)322 b(gro\377)g(ist)f(die)g
(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)322 b(dass)f(eine)3391
68002 y(Zahl)464 b(gr\366\377er)h(als)f(1)g(und)f(kleiner)h(als)h(6)f
(gew\374rfelt)3391 69994 y(wird?)p 29386 70939 V 0.9
TeXcolorgray 29430 70939 4478 6789 v 0 TeXcolorgray 1 0 0
TeXcolorrgb 31245 68002 a(F)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 33908 70939 45 6789 v 2683
70983 26748 45 v 29430 70983 4523 45 v 0 TeXcolorgray
0 TeXcolorgray 38303 48852 4567 45 v 42870 48852 2436
45 v 38303 52297 45 3445 v 0.92 TeXcolorgray 38348 52297
4478 3445 v 0 TeXcolorgray 40075 51033 a(A)p 42826 52297
45 3445 v 43667 50371 a FG(1)p 43667 50584 471 45 v 43667
51352 a(3)p 45261 52297 45 3445 v 38303 52341 4567 45
v 42870 52341 2436 45 v 38303 55786 45 3445 v 0.92 TeXcolorgray
38348 55786 4478 3445 v 0 TeXcolorgray 40126 54522 a
FH(B)p 42826 55786 45 3445 v 43667 53860 a FG(1)p 43667
54073 471 45 v 43667 54841 a(6)p 45261 55786 45 3445
v 38303 55830 4567 45 v 42870 55830 2436 45 v 38303 59275
45 3445 v 0.92 TeXcolorgray 38348 59275 4478 3445 v 0
TeXcolorgray 40117 58011 a FH(C)p 42826 59275 45 3445
v 43667 57349 a FG(1)p 43667 57562 471 45 v 43667 58330
a(2)p 45261 59275 45 3445 v 38303 59319 4567 45 v 42870
59319 2436 45 v 38303 62579 45 3260 v 0.92 TeXcolorgray
38348 62579 4478 3260 v 0 TeXcolorgray 40090 61500 a
FH(D)p 42826 62579 45 3260 v 43534 61461 a FB(1)p 45261
62579 V 38303 62623 4567 45 v 42870 62623 2436 45 v 38303
66068 45 3445 v 0.92 TeXcolorgray 38348 66068 4478 3445
v 0 TeXcolorgray 40144 64804 a FH(E)p 42826 66068 45
3445 v 43667 64142 a FG(5)p 43667 64355 471 45 v 43667
65123 a(6)p 45261 66068 45 3445 v 38303 66112 4567 45
v 42870 66112 2436 45 v 38303 69557 45 3445 v 0.92 TeXcolorgray
38348 69557 4478 3445 v 0 TeXcolorgray 40162 68293 a
FH(F)p 42826 69557 45 3445 v 43667 67631 a FG(2)p 43667
67844 471 45 v 43667 68612 a(3)p 45261 69557 45 3445
v 38303 69601 4567 45 v 42870 69601 2436 45 v 47992 38624
a FE(___/1)p 1 0 0 TeXcolorrgb 47905 40616 a FD(WS)369
b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 75968 54804 45 v 0 TeXcolorgray 24421 81281 a FH(49)p
0 TeXcolorgray eop end
%%Page: 50 50
TeXDict begin 50 49 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(2.3)g(-)g(5)h(Laplace-Exp)60
b(erimen)-60 b(t)716 b(-)i(MC)f(-)h(BIFIE)p 0 TeXcolorgray
-1391 4800 a FH(56.)p 0 TeXcolorgray 651 w(In)423 b(einer)f(Sc)-36
b(hac)g(h)g(tel)422 b(b)36 b(e\034nden)421 b(sic)-36
b(h)423 b(rote,)g(blaue)g(und)e(gelb)36 b(e)424 b(W)-108
b(ac)-36 b(hsmalstifte.)424 b(Ein)e(Stift)874 6792 y(wird)308
b(zuf\344llig)i(en)-36 b(tnommen,)307 b(dessen)g(F)-108
b(arb)36 b(e)307 b(notiert)h(und)f(der)g(Stift)h(danac)-36
b(h)307 b(zur\374c)-36 b(kgelegt.)921 8784 y(Dann)433
b(wird)h(das)g(Exp)36 b(erimen)-36 b(t)433 b(wiederholt.)921
11330 y(Beobac)-36 b(h)g(tet)546 b(wird,)h(wie)h(oft)f(b)36
b(ei)547 b(zw)-36 b(eimaligem)549 b(Ziehen)d(ein)h(gelb)36
b(er)547 b(Stift)f(en)-36 b(tnommen)874 13322 y(wurde.)306
b(Die)g(W)-108 b(erte)306 b(der)f(Zufallsv)-72 b(ariablen)307
b Fx(X)410 b FH(b)36 b(esc)-36 b(hreib)36 b(en)304 b(die)i(Anzahl)f
Fx(x)h FH(der)f(gezogenen)921 15314 y(gelb)36 b(en)434
b(Stifte.)921 17859 y(Die)d(nac)-36 b(hstehende)429 b(T)-108
b(ab)36 b(elle)431 b(stellt)f(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eitsv)g(erteilung)431 b(der)f(Zufallsv)-72
b(a-)921 19851 y(riablen)434 b Fx(X)538 b FH(dar.)p 0
TeXcolorgray 0 TeXcolorgray 18793 21998 9232 45 v 18793
24787 45 2789 v 19501 23950 a Fx(x)p 20904 24787 V 1373
w(P)181 b FB(\()p Fx(X)474 b FB(=)368 b Fx(x)p FB(\))p
27980 24787 V 18793 24831 9232 45 v 18793 27620 45 2789
v 19546 26783 a(0)p 20904 27620 V 24229 26260 a FG(4)p
24229 26473 471 45 v 24229 27241 a(9)p 27980 27620 45
2789 v 18793 27664 9232 45 v 18793 30453 45 2789 v 19546
29616 a FB(1)p 20904 30453 V 24229 29093 a FG(4)p 24229
29306 471 45 v 24229 30074 a(9)p 27980 30453 45 2789
v 18793 30497 9232 45 v 18793 33286 45 2789 v 19546 32449
a FB(2)p 20904 33286 V 24229 31926 a FG(1)p 24229 32139
471 45 v 24229 32907 a(9)p 27980 33286 45 2789 v 18793
33330 9232 45 v 921 38340 a FH(Kreuze)433 b(die)h(b)36
b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434 b(an.)p
1132 39307 44121 45 v 1132 42749 45 3442 v 1840 41346
a(Die)g(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)434
b(mindestens)f(einen)g(gelb)36 b(en)434 b(Stift)f(zu)h(ziehen,)f(ist)
40787 40823 y FG(4)p 40787 41036 471 45 v 40787 41804
a(9)41390 41346 y FH(.)p 42843 42749 45 3442 v 45208
42749 V 1132 42793 44121 45 v 1132 46234 45 3442 v 1840
44831 a(Die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)434
b(h\366)36 b(c)-36 b(hstens)433 b(einen)g(gelb)36 b(en)434
b(Stift)f(zu)h(ziehen,)f(ist)39992 44308 y FG(4)p 39992
44521 471 45 v 39992 45290 a(9)40595 44831 y FH(.)p 42843
46234 45 3442 v 45208 46234 V 1132 46279 44121 45 v 1132
49720 45 3442 v 1840 48317 a(Die)h(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit,)434 b(n)-36 b(ur)433 b(rote)g(o)36
b(der)434 b(blaue)f(Stifte)h(zu)f(ziehen,)h(ist)38568
47794 y FG(4)p 38568 48007 471 45 v 38568 48775 a(9)39171
48317 y FH(.)p 42843 49720 45 3442 v 1 0 0 TeXcolorrgb
43551 48332 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45208 49720 V 1132 49764 44121 45 v 1132
53206 45 3442 v 1840 51803 a FH(Die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit,)434 b(k)-36 b(einen)434 b(o)36
b(der)433 b(einen)h(gelb)36 b(en)433 b(Stift)h(zu)f(ziehen,)h(ist)41025
51280 y FG(4)p 41025 51493 471 45 v 41025 52261 a(9)41628
51803 y FH(.)p 42843 53206 45 3442 v 45208 53206 V 1132
53250 44121 45 v 1132 58305 45 5056 v 1840 55110 a(Die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)434 b(dass)g(mehr)f(als)h(ein)g(gelb)
36 b(er)433 b(Stift)h(gezogen)g(wird,)g(ist)1840 57102
y(gr\366\377er)g(als)h(10)217 b(\045.)p 42843 58305 V
1 0 0 TeXcolorrgb 43551 56110 a FF(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45208 58305 V 1132 58350
44121 45 v 47992 4800 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 6792 a FD(WS)369 b(2.3)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 62378 54804 45 v 0 TeXcolorgray
24421 81281 a FH(50)p 0 TeXcolorgray eop end
%%Page: 51 51
TeXDict begin 51 50 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(2.3)g(-)g(6)h(Laplace-W)-179
b(ahrsc)-60 b(heinlic)g(hk)g(eit)714 b(-)k(MC)g(-)f(BIFIE)p
0 TeXcolorgray -1391 4800 a FH(57.)p 0 TeXcolorgray 651
w(In)639 b(einer)h(Sc)-36 b(hac)g(h)g(tel)639 b(b)36
b(e\034nden)638 b(sic)-36 b(h)639 b(ein)h(roter,)g(ein)g(blauer)f(und)g
(ein)g(gelb)36 b(er)640 b(W)-108 b(ac)-36 b(hs-)921 6792
y(malstift.)462 b(Ein)e(Stift)h(wird)f(zuf\344llig)i(en)-36
b(tnommen,)460 b(dessen)g(F)-108 b(arb)36 b(e)460 b(notiert)g(und)g
(der)f(Stift)921 8784 y(danac)-36 b(h)433 b(zur\374c)-36
b(kgelegt.)434 b(Dann)g(wird)f(das)h(Exp)36 b(erimen)-36
b(t)433 b(wiederholt.)921 13322 y(Beobac)-36 b(h)g(tet)546
b(wird,)h(wie)h(oft)f(b)36 b(ei)547 b(zw)-36 b(eimaligem)549
b(Ziehen)d(ein)h(gelb)36 b(er)547 b(Stift)f(en)-36 b(tnommen)874
15314 y(wurde.)410 b(Die)h(W)-108 b(erte)409 b(der)h(Zufallsv)-72
b(ariablen)412 b Fx(X)514 b FH(b)36 b(esc)-36 b(hreib)36
b(en)409 b(die)h(Anzahl)g(der)g(gezogenen)921 17305 y(gelb)36
b(en)434 b(Stifte.)921 21843 y(Kreuze)f(die)h(zutre\033ende\(n\))d(A)
-36 b(ussage\(n\))433 b(an.)p 14812 22883 16761 45 v
14812 26101 45 3219 v 15520 24824 a Fx(P)181 b FB(\()p
Fx(X)474 b FB(=)368 b(0\))h Fx(>)g(P)181 b FB(\()p Fx(X)474
b FB(=)368 b(1\))p 29163 26101 V 31528 26101 V 14812
26146 16761 45 v 14812 29587 45 3442 v 15520 28184 a
Fx(P)181 b FB(\()p Fx(X)474 b FB(=)368 b(2\))h(=)23017
27661 y FG(1)p 23017 27874 471 45 v 23017 28642 a(9)p
29163 29587 45 3442 v 1 0 0 TeXcolorrgb 29871 28199 a
FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
31528 29587 V 14812 29631 16761 45 v 14812 33073 45 3442
v 15520 31670 a Fx(P)181 b FB(\()p Fx(X)474 b Fw(\024)369
b FB(2\))g(=)23038 31147 y FG(8)p 23038 31360 471 45
v 23038 32128 a(9)p 29163 33073 45 3442 v 31528 33073
V 14812 33117 16761 45 v 14812 36559 45 3442 v 15520
35156 a Fx(P)181 b FB(\()p Fx(X)474 b(>)368 b FB(0\))h(=)23017
34633 y FG(5)p 23017 34846 471 45 v 23017 35614 a(9)p
29163 36559 45 3442 v 1 0 0 TeXcolorrgb 29871 35170 a
FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
31528 36559 V 14812 36603 16761 45 v 14812 39821 45 3219
v 15520 38544 a Fx(P)181 b FB(\()p Fx(X)474 b(<)368 b
FB(3\))h(=)g(1)p 29163 39821 V 1 0 0 TeXcolorrgb 6337
w FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
31528 39821 V 14812 39866 16761 45 v 47992 4800 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a FD(WS)g(2.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 43894 54804 45
v -2331 49195 a FI(WS)717 b(2.3)g(-)g(7)h(Reihenfolge)d(-)j(O)-60
b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray -1391 52502 a FH(58.)p
0 TeXcolorgray 651 w(F)-27 b(\374r)305 b(eine)h(Abfolge)i(v)-36
b(on)306 b(f\374nf)g(v)-36 b(ersc)g(hiedenen)306 b(Bildern)g(gibt)g(es)
g(n)-36 b(ur)305 b(eine)i(ric)-36 b(h)g(tige)306 b(Reih)-36
b(ung.)921 54494 y(Diese)413 b(Bilder)g(w)-36 b(erden)411
b(gemisc)-36 b(h)g(t)412 b(und,)g(ohne)g(sie)h(anzusehen,)e(in)h(einer)
h(Reihe)f(aufgelegt.)921 61024 y(Bestimme)469 b(die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit)469 b Fx(P)651 b FH(\(in)468
b(\045\))h(daf\374r,)h(dass)f(die)g(ric)-36 b(h)g(tige)469
b(Reihenfolge)921 63015 y(ersc)-36 b(hein)g(t.)921 67553
y Fx(P)550 b FB(=)p 3321 67553 12599 34 v 12598 w FH(\045)p
1 0 0 TeXcolorrgb 1054 69575 a FG(1)p 1054 69788 471
45 v 1054 70556 a(5)1952 70098 y Fw(\001)2749 69575 y
FG(1)p 2749 69788 V 2749 70556 a(4)3648 70098 y Fw(\001)4445
69575 y FG(1)p 4445 69788 V 4445 70556 a(3)5343 70098
y Fw(\001)6140 69575 y FG(1)p 6140 69788 V 6140 70556
a(2)7113 70098 y FB(=)368 b(0)p Fx(;)p FB(0083)j Fw(!)e
Fx(P)550 b FB(=)369 b(0)p Fx(;)p FB(83)221 b(\045)921
74636 y FH(L\366sungsin)-36 b(terv)-72 b(all:)434 b FB([)8
b(0)p Fx(;)p FB(8)221 b(\045;)g(0)p Fx(;)p FB(84)g(\045])438
b FH(bzw.)c FB([)8 b(0)p Fx(;)p FB(008;)221 b(0)p Fx(;)p
FB(0084])p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 52502 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 54494
a FD(WS)369 b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 24421 81281 a FH(51)p 0
TeXcolorgray eop end
%%Page: 52 52
TeXDict begin 52 51 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 54804 45 v -2331 6921 a FI(WS)797
b(2.3)g(-)h(8)g(Zollk)-60 b(on)g(trolle)796 b(-)i(O)-60
b(A)798 b(-)g(Matura)g(2015/16)f(-)h(Haupt-)-2331 9944
y(termin)p 0 TeXcolorgray -1391 13251 a FH(59.)p 0 TeXcolorgray
651 w(Eine)477 b(Grupp)36 b(e)475 b(v)-36 b(on)477 b(zehn)f(P)-36
b(ersonen)476 b(\374b)36 b(erquert)475 b(eine)i(Grenze)f(zwisc)-36
b(hen)476 b(zw)-36 b(ei)478 b(Staaten.)921 15243 y(Zw)-36
b(ei)334 b(P)-36 b(ersonen)334 b(f\374hren)f(Sc)-36 b(hm)g(uggelw)g
(are)334 b(mit)g(sic)-36 b(h.)334 b(Beim)h(Grenz\374b)36
b(ertritt)331 b(w)-36 b(erden)334 b(drei)921 17235 y(P)-36
b(ersonen)433 b(v)-36 b(om)434 b(Zoll)g(zuf\344llig)i(ausgew)-36
b(\344hlt)434 b(und)e(k)-36 b(on)g(trolliert.)921 21772
y(Berec)g(hnedie)397 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)398
b(dass)f(un)-36 b(ter)397 b(den)g(drei)g(k)-36 b(on)g(trollierten)398
b(P)-36 b(ersonen)397 b(die)921 23764 y(b)36 b(eiden)433
b(Sc)-36 b(hm)g(uggler)433 b(der)g(Grupp)36 b(e)432 b(sind!)p
1 0 0 TeXcolorrgb 1289 25786 a FG(2)p 1054 25999 941
45 v 1054 26767 a(10)2423 26309 y Fw(\001)3220 25786
y FG(1)p 3220 25999 471 45 v 3220 26767 a(9)4118 26309
y Fw(\001)295 b FB(3)370 b(=)7550 25786 y FG(1)p 7315
25999 941 45 v 7315 26767 a(15)921 30847 y FH(L\366sungssc)-36
b(hl\374ssel:)921 33392 y(Ein)533 b(Punkt)f(f\374r)g(die)h(ric)-36
b(h)g(tige)533 b(L\366sung.)g(Andere)f(Sc)-36 b(hreib)g(w)g(eisen)532
b(des)g(Ergebnisses)h(\(als)921 35384 y(Dezimalzahl)435
b(o)36 b(der)434 b(in)f(Prozen)-36 b(t\))433 b(sind)g(eb)36
b(enfalls)435 b(als)f(ric)-36 b(h)g(tig)433 b(zu)h(w)-36
b(erten.)874 37376 y(T)-108 b(oleranzin)-36 b(terv)-72
b(all:)435 b FB([)8 b(0)p Fx(;)p FB(066;)221 b(0)p Fx(;)p
FB(07])438 b FH(bzw.)c FB([)8 b(6)p Fx(;)p FB(6)221 b(\045;)g(7)g
(\045])p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 13251 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 15243
a FD(WS)369 b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 41183 54804 45 v 0 TeXcolorgray
24421 81281 a FH(52)p 0 TeXcolorgray eop end
%%Page: 53 53
TeXDict begin 53 52 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)1155 b(2.3)g(-)i(9)f(V)-179
b(ersc)-60 b(hiedenf\344rbige)1152 b(Kugeln)i(-)j(MC)e(-)i(Matura)-2385
4515 y(2015/16)718 b(-)f(Haupttermin)p 0 TeXcolorgray
-1391 7823 a FH(60.)p 0 TeXcolorgray 651 w(A)-36 b(uf)350
b(einem)g(Tisc)-36 b(h)350 b(steh)-36 b(t)349 b(eine)h(Sc)-36
b(hac)g(h)g(tel)349 b(mit)h(drei)g(roten)g(und)e(zw)-36
b(\366lf)352 b(sc)-36 b(h)g(w)g(arzen)349 b(Kugeln.)921
9815 y(Nac)-36 b(h)580 b(dem)f(Zufallsprinzip)h(w)-36
b(erden)580 b(nac)-36 b(heinander)578 b(drei)i(Kugeln)g(aus)g(der)f(Sc)
-36 b(hac)g(h)g(tel)921 11806 y(gezogen,)435 b(w)-36
b(ob)36 b(ei)434 b(die)f(gezogene)i(Kugel)f(jew)-36 b(eils)435
b(wieder)f(zur\374c)-36 b(kgelegt)434 b(wird.)921 16344
y(Gegeb)36 b(en)433 b(ist)h(der)f(folgende)h(A)-36 b(usdruc)g(k:)888
18889 y FB(3)296 b Fw(\001)f FB(0)p Fx(;)p FB(8)4159
18407 y FG(2)4981 18889 y Fw(\001)g FB(0)p Fx(;)p FB(2)921
23427 y FH(Kreuze)406 b(dasjenige)h(Ereignis)f(an,)g(dessen)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit)406 b(durc)-36 b(h)404
b(diesen)i(A)-36 b(usdruc)g(k)921 25418 y(b)36 b(erec)-36
b(hnet)432 b(wird.)p 3563 26127 39257 45 v 3563 29190
45 3064 v 4272 27987 a(Es)h(wird)h(h\366)36 b(c)-36 b(hstens)433
b(eine)g(sc)-36 b(h)g(w)g(arze)434 b(Kugel)g(gezogen.)p
40411 29190 V 42776 29190 V 3563 29234 39257 45 v 3563
32297 45 3064 v 4272 31094 a(Es)f(w)-36 b(erden)433 b(genau)h(zw)-36
b(ei)434 b(sc)-36 b(h)g(w)g(arze)434 b(Kugeln)f(gezogen.)p
40411 32297 V 1 0 0 TeXcolorrgb 41119 31098 a FF(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 42776
32297 V 3563 32342 39257 45 v 3563 35405 45 3064 v 4272
34202 a FH(Es)g(w)-36 b(erden)433 b(zw)-36 b(ei)435 b(rote)e(Kugeln)h
(und)e(eine)i(sc)-36 b(h)g(w)g(arze)433 b(Kugel)h(gezogen.)p
40411 35405 V 42776 35405 V 3563 35449 39257 45 v 3563
38512 45 3064 v 4272 37309 a(Es)f(w)-36 b(erden)433 b(n)-36
b(ur)433 b(rote)g(Kugeln)h(gezogen.)p 40411 38512 V 42776
38512 V 3563 38556 39257 45 v 3563 41620 45 3064 v 4272
40416 a(Es)f(wird)h(mindestens)f(eine)g(rote)h(Kugel)g(gezogen.)p
40411 41620 V 42776 41620 V 3563 41664 39257 45 v 3563
44727 45 3064 v 4272 43524 a(Es)f(wird)h(k)-36 b(eine)434
b(rote)g(Kugel)g(gezogen.)p 40411 44727 V 42776 44727
V 3563 44771 39257 45 v 47992 7823 a FE(___/1)p 1 0 0
TeXcolorrgb 47905 9815 a FD(WS)369 b(2.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 48799 54804 45
v 0 TeXcolorgray 24421 81281 a FH(53)p 0 TeXcolorgray
eop end
%%Page: 54 54
TeXDict begin 54 53 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)829 b(2.3)h(-)h(10)f(Maturaball)f(-)h
(O)-60 b(A)830 b(-)h(BIFIE)f(-)h(K)-60 b(omp)60 b(etenzc)-60
b(hec)g(k)-2385 4515 y(2016)p 0 TeXcolorgray -1391 7823
a FH(61.)p 0 TeXcolorgray 651 w(Die)949 b(nac)-36 b(hstehende)946
b(Abbildung)h(zeigt)i(die)f(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eitsv)g
(erteilung)948 b(einer)921 9815 y(Zufallsv)-72 b(ariablen)435
b(X,)f(die)f(die)h(W)-108 b(erte)433 b Fx(k)414 b FB(=)369
b(1)p Fx(;)p FB(2)p Fx(;)p FB(3)p Fx(;)p FB(4)p Fx(;)p
FB(5)436 b FH(annehmen)d(kann.)921 43718 y
 currentpoint currentpoint translate 1.56857 1.56857 scale neg exch
neg exch translate
 921 43718
a 1788 43718 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 199.40451 a add def
/d 0.0 a add neg def /h 179.96141 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1788 43718 a 5947 40613 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 161.82932 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 14.22723
T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 1 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 151.91069 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 569.05487
0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 161.82932
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true
and or { /viceversa 0.0  161.82932  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 151.91069  def
/dT 37293580 abs 65536 div viceversa { neg } if def /DT 20. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 151.91069 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 161.82932 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 151.91069
 0 0.0  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false
and or { /viceversa 0.0  151.91069  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 161.82932  def
/dT 932396 abs 65536 div viceversa { neg } if def /DT 0.05 abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 284.52756  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 284.52756  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 151.91069 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 161.82932 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
4702 40898 a FG(0)3500 39324 y(0)p Fr(:)p FG(05)3500
37749 y(0)p Fr(:)p FG(10)3500 36174 y(0)p Fr(:)p FG(15)3500
34599 y(0)p Fr(:)p FG(20)3500 33024 y(0)p Fr(:)p FG(25)3500
31449 y(0)p Fr(:)p FG(30)3500 29874 y(0)p Fr(:)p FG(35)3500
28299 y(0)p Fr(:)p FG(40)3500 26724 y(0)p Fr(:)p FG(45)3500
25149 y(0)p Fr(:)p FG(50)5947 40613 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 21.33955 0.0 21.33955
28.45448 7.11317 28.45448 7.11317 0.0  /Lineto /lineto load def 0 
setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 49.7923 0.0 49.7923
85.35913 35.56592 85.35913 35.56592 0.0  /Lineto /lineto load def 0
 setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 78.24504 0.0 78.24504
113.80928 64.01866 113.80928 64.01866 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 106.69778 0.0 106.69778
28.45448 92.4714 28.45448 92.4714 0.0  /Lineto /lineto load def 0 
setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 135.15053 0.0 135.15053
28.45448 120.92415 28.45448 120.92415 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 7.11317 28.45448 7.11317 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 21.33955 28.45448 7.11317 28.45448
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 21.33955 0.0 21.33955 28.45448
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 7.11317 0.0 21.33955 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 35.56592 85.35913 35.56592
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 49.7923 85.35913 35.56592 85.35913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 49.7923 0.0 49.7923 85.35913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 35.56592 0.0 49.7923 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 64.01866 113.80928 64.01866
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 78.24504 113.80928 64.01866
113.80928   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 78.24504 0.0 78.24504 113.80928
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 64.01866 0.0 78.24504 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 92.4714 28.45448 92.4714 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 106.69778 28.45448 92.4714
28.45448   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 106.69778 0.0 106.69778 28.45448
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 92.4714 0.0 106.69778 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 120.92415 28.45448 120.92415
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 135.15053 28.45448 120.92415
28.45448   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 135.15053 0.0 135.15053 28.45448
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 120.92415 0.0 135.15053 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
5947 40613 a
tx@Dict begin  { 12.16283 -4.83647 } PutCoor PutBegin  end
 5947 40613 a 571 x FA(1)5947 40613 y
tx@Dict begin  PutEnd  end
 5947
40613 a 5947 40613 a
tx@Dict begin  { 39.74466 -4.83647 } PutCoor PutBegin  end
 5947 40613 a 571 x FA(2)5947 40613
y
tx@Dict begin  PutEnd  end
 5947 40613 a 5947 40613 a
tx@Dict begin  { 69.1356 -4.83647 } PutCoor PutBegin  end
 5947 40613 a 571 x FA(3)5947
40613 y
tx@Dict begin  PutEnd  end
 5947 40613 a 5947 40613 a
tx@Dict begin  { 98.07417 -4.83647 } PutCoor PutBegin  end
 5947 40613 a 571 x
FA(4)5947 40613 y
tx@Dict begin  PutEnd  end
 5947 40613 a 5947 40613 a
tx@Dict begin  { 126.56035 -4.83647 } PutCoor PutBegin  end
 5947 40613
a 571 x FA(5)5947 40613 y
tx@Dict begin  PutEnd  end
 5947 40613 a 5947 40613 a
tx@Dict begin  { 73.20494 -19.06372 } PutCoor PutBegin  end
 5947
40613 a 610 x FA(k)5947 40613 y
tx@Dict begin  PutEnd  end
 5947 40613 a 5947 40613
a
tx@Dict begin  { -34.99457 93.03932 } PutCoor PutBegin  end
 5947 40613 a 6612 43918 a
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 6612 43918 a FA(P\(X=k\))9917
43918 y
 currentpoint grestore moveto
 9917 43918 a 5947 40613 a
tx@Dict begin  PutEnd  end
 5947 40613 a 23861
43718 a
currentpoint initclip moveto
 23861 43718 a 921 43718 a
 currentpoint currentpoint translate 1 1.56857 div 1 1.56857 div scale
neg exch neg exch translate
 921 43718 a 4538 x
FH(Ermittle)g(den)g(Erw)-36 b(artungsw)g(ert)433 b Fx(E)78
b FB(\()p Fx(X)104 b FB(\))p FH(.)p 1 0 0 TeXcolorrgb
921 52793 a Fx(E)78 b FB(\()p Fx(X)104 b FB(\))369 b(=)g(2)p
Fx(;)p FB(8)434 b FH(-)f(T)-108 b(oleranzin)-36 b(terv)-72
b(all:)435 b FB([)8 b(2)p Fx(;)p FB(65;)221 b(2)p Fx(;)p
FB(95])p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7823 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 9815
a FD(WS)369 b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 56600 54804 45 v 0 TeXcolorgray
24421 81281 a FH(54)p 0 TeXcolorgray eop end
%%Page: 55 55
TeXDict begin 55 54 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)656 b(2.3)h(-)g(11)g(Mehrere)g(W)-179
b(ahrsc)-60 b(heinlic)g(hk)g(eiten)654 b(-)j(MC)g(-)h(Matura)-2385
4515 y(2014/15)718 b(-)f(Haupttermin)p 0 TeXcolorgray
-1391 7823 a FH(62.)p 0 TeXcolorgray 651 w(In)482 b(einer)h(Un)-36
b(terric)g(h)g(tsstunde)479 b(sind)k(15)g(Sc)-36 b(h)g(\374lerinnen)480
b(und)i(10)h(Sc)-36 b(h)g(\374ler)481 b(an)-36 b(w)g(esend.)483
b(Die)921 9815 y(Lehrp)36 b(erson)644 b(w)-36 b(\344hlt)645
b(f\374r)g(\334b)36 b(erpr\374fungen)643 b(nac)-36 b(heinander)644
b(zuf\344llig)i(drei)f(v)-36 b(ersc)g(hiedene)921 11806
y(P)g(ersonen)433 b(aus)g(dieser)h(Sc)-36 b(h)g(ulklasse)434
b(aus.)g(Jeder)f(Pr\374\035ing)g(wird)g(n)-36 b(ur)433
b(einmal)h(b)36 b(efragt.)921 16344 y(Kreuze)433 b(die)h(b)36
b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434 b(an.)p
1062 17311 44260 45 v 1062 22565 45 5255 v 1770 19170
a(Die)339 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)337
b(dass)h(die)f(Lehrp)36 b(erson)336 b(drei)h(Sc)-36 b(h)g(\374lerinnen)
335 b(ausw)-36 b(\344hlt,)1770 21162 y(kann)434 b(mittels)9462
20639 y FG(15)p 9462 20852 941 45 v 9462 21620 a(25)10831
21162 y Fw(\001)11628 20639 y FG(14)p 11628 20852 V 11628
21620 a(25)12997 21162 y Fw(\001)13794 20639 y FG(13)p
13794 20852 V 13794 21620 a(25)15301 21162 y FH(b)36
b(erec)-36 b(hnet)432 b(w)-36 b(erden.)p 42912 22565
45 5255 v 45277 22565 V 1062 22610 44260 45 v 1062 27864
45 5255 v 1770 24470 a(Die)340 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g
(eit,)340 b(dass)f(die)g(Lehrp)36 b(erson)338 b(als)i(erste)e(P)-36
b(erson)339 b(einen)g(Sc)-36 b(h)g(\374-)1770 26461 y(ler)434
b(ausw)-36 b(\344hlt,)434 b(ist)11420 25938 y FG(10)p
11420 26152 941 45 v 11420 26920 a(25)12494 26461 y FH(.)p
42912 27864 45 5255 v 1 0 0 TeXcolorrgb 43621 25569 a
FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45277 27864 V 1062 27909 44260 45 v 1062 33164 45 5255
v 1770 29769 a FH(Die)356 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)
354 b(dass)h(die)f(Lehrp)36 b(erson)353 b(b)36 b(ei)355
b(der)e(W)-108 b(ahl)355 b(v)-36 b(on)355 b(drei)f(Pr\374f-)1770
31761 y(lingen)434 b(als)h(zw)-36 b(eite)434 b(P)-36
b(erson)433 b(eine)g(Sc)-36 b(h)g(\374lerin)433 b(ausw)-36
b(\344hlt,)434 b(ist)31829 31238 y FG(24)p 31829 31451
941 45 v 31829 32219 a(25)32903 31761 y FH(.)p 42912
33164 45 5255 v 45277 33164 V 1062 33208 44260 45 v 1062
38463 45 5255 v 1770 35068 a(Die)337 b(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit,)336 b(dass)g(die)g(Lehrp)36 b(erson)334
b(drei)i(Sc)-36 b(h)g(\374ler)334 b(ausw)-36 b(\344hlt,)337
b(kann)1770 37060 y(mittels)6246 36537 y FG(10)p 6246
36750 941 45 v 6246 37518 a(25)7615 37060 y Fw(\001)8647
36537 y FG(9)p 8412 36750 V 8412 37518 a(24)9781 37060
y Fw(\001)10813 36537 y FG(8)p 10578 36750 V 10578 37518
a(23)12085 37060 y FH(b)36 b(erec)-36 b(hnet)433 b(w)-36
b(erden.)p 42912 38463 45 5255 v 1 0 0 TeXcolorrgb 43621
36167 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45277 38463 V 1062 38507 44260 45 v 1062
45754 45 7247 v 1770 40367 a FH(Die)435 b(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit,)434 b(dass)f(sic)-36 b(h)434 b(un)-36
b(ter)432 b(den)h(v)-36 b(on)434 b(der)f(Lehrp)36 b(erson)432
b(aus-)1770 42359 y(gew)-36 b(\344hlten)467 b(P)-36 b(ersonen)465
b(genau)h(zw)-36 b(ei)467 b(Sc)-36 b(h)g(\374lerinnen)464
b(b)36 b(e\034nden,)464 b(kann)i(mittels)1903 43828 y
FG(15)p 1903 44041 941 45 v 1903 44809 a(25)3272 44351
y Fw(\001)4069 43828 y FG(14)p 4069 44041 V 4069 44809
a(24)5438 44351 y Fw(\001)6235 43828 y FG(23)p 6235 44041
V 6235 44809 a(23)7743 44351 y FH(b)36 b(erec)-36 b(hnet)432
b(w)-36 b(erden.)p 42912 45754 45 7247 v 45277 45754
V 1062 45798 44260 45 v 47992 7823 a FE(___/1)p 1 0 0
TeXcolorrgb 47905 9815 a FD(WS)369 b(2.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 49826 54804 45
v 0 TeXcolorgray 24421 81281 a FH(55)p 0 TeXcolorgray
eop end
%%Page: 56 56
TeXDict begin 56 55 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)917 b(2.3)h(-)g(12)g(A)-60
b(ugensumme)917 b(b)60 b(eim)918 b(W)-60 b(\374rfeln)916
b(-)i(O)-60 b(A)918 b(-)h(Matura)-2385 4515 y(2014/15)718
b(-)f(Neb)60 b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray
-1391 7823 a FH(63.)p 0 TeXcolorgray 651 w(Zw)-36 b(ei)447
b(un)-36 b(tersc)g(heidbare,)445 b(faire)i(W)-36 b(\374rfel)447
b(mit)g(den)e(A)-36 b(ugenzahlen)446 b(1,)i(2,)f(3,)g(4,)g(5,)g(6)g(w)
-36 b(erden)921 9815 y(gleic)g(hzeitig)551 b(gew)-36
b(orfen)550 b(und)e(die)h(A)-36 b(ugensumme)549 b(wird)g(ermittelt.)h
(Das)g(Ereignis,)g(dass)921 11806 y(die)591 b(A)-36 b(ugensumme)590
b(durc)-36 b(h)589 b(5)i(teilbar)g(ist,)g(wird)g(mit)g(E)f(b)36
b(ezeic)-36 b(hnet.)592 b(\(Ein)e(W)-36 b(\374rfel)591
b(ist)675 13798 y(\022fair\020,)479 b(w)-36 b(enn)476
b(die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)477
b(nac)-36 b(h)476 b(einem)h(W)-108 b(urf)477 b(nac)-36
b(h)476 b(ob)36 b(en)477 b(zu)g(zeigen,)g(f\374r)921
15790 y(alle)435 b(sec)-36 b(hs)433 b(Seiten\035\344c)-36
b(hen)432 b(gleic)-36 b(h)434 b(gro\377)g(ist.\))921
20328 y(Berec)-36 b(hne)433 b(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit)434 b(des)f(Ereignisses)h Fx(E)78
b FH(.)921 24865 y Fx(P)181 b FB(\()p Fx(E)78 b FB(\))368
b(=)p 5742 24865 15749 34 v 1 0 0 TeXcolorrgb 921 27596
a Fx(P)181 b FB(\()p Fx(E)78 b FB(\))368 b(=)6200 26698
y(7)p 5875 27286 1301 45 v 5875 28508 a(36)921 32134
y FH(L\366sungssc)-36 b(hl\374ssel:)921 34126 y(Ein)533
b(Punkt)f(f\374r)g(die)h(ric)-36 b(h)g(tige)533 b(L\366sung.)g(Andere)f
(Sc)-36 b(hreib)g(w)g(eisen)532 b(des)g(Ergebnisses)h(\(als)921
36117 y(Dezimalzahl)435 b(o)36 b(der)434 b(in)f(Prozen)-36
b(t\))433 b(sind)g(eb)36 b(enfalls)435 b(als)f(ric)-36
b(h)g(tig)433 b(zu)h(w)-36 b(erten.)874 38109 y(T)-108
b(oleranzin)-36 b(terv)-72 b(alle:)435 b FB([)8 b(0)p
Fx(;)p FB(19;)221 b(0)p Fx(;)p FB(20])437 b FH(bzw.)d
FB([)8 b(19\045;)221 b(20\045])p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 7823 a FE(___/1)p 1 0 0
TeXcolorrgb 47905 9815 a FD(WS)369 b(2.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 41917 54804 45
v 0 TeXcolorgray 24421 81281 a FH(56)p 0 TeXcolorgray
eop end
%%Page: 57 57
TeXDict begin 57 56 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)477 b(2.3)h(-)h(13)f
(Maturaball-Gl\374c)-60 b(ksspiele)476 b(-)j(O)-60 b(A)478
b(-)g(Matura)g(2014/15)-2617 4622 y(-)718 b(Neb)60 b(en)-60
b(termin)716 b(2)p 0 TeXcolorgray -1391 7929 a FH(64.)p
0 TeXcolorgray 651 w(Bei)648 b(einem)g(Maturaball)h(w)-36
b(erden)647 b(zw)-36 b(ei)649 b(v)-36 b(ersc)g(hiedene)647
b(Gl\374c)-36 b(ksspiele)648 b(angeb)36 b(oten:)649 b(ein)921
9921 y(Gl\374c)-36 b(ksrad)507 b(und)g(eine)g(T)-108
b(om)-36 b(b)36 b(ola,)509 b(b)36 b(ei)508 b(der)f FB(1000)i
FH(Lose)f(v)-36 b(erkauft)508 b(w)-36 b(erden.)508 b(Das)g(Gl\374c)-36
b(ks-)921 11913 y(rad)402 b(ist)g(in)g(zehn)f(gleic)-36
b(h)403 b(gro\377en)f(Sektoren)g(un)-36 b(terteilt,)401
b(die)h(alle)h(mit)g(der)e(gleic)-36 b(hen)402 b(W)-108
b(ahr-)921 13905 y(sc)-36 b(heinlic)g(hk)g(eit)472 b(auftreten)f(k)-36
b(\366nnen.)471 b(Man)g(gewinn)-36 b(t,)472 b(w)-36 b(enn)471
b(der)g(Zeiger)h(nac)-36 b(h)471 b(Stillstand)921 15897
y(des)433 b(Rades)h(auf)g(das)g(F)-108 b(eld)432 b(der)i(\022)p
FB(1)p FH(\020)g(o)36 b(der)433 b(der)g(\022)p FB(6)p
FH(\020)h(zeigt.)921 18442 y(Max)617 b(hat)e(das)h(Gl\374c)-36
b(ksrad)616 b(einmal)h(gedreh)-36 b(t)615 b(und)g(als)h(Erster)g(ein)g
(Los)g(der)f(T)-108 b(om)-36 b(b)36 b(ola)921 20434 y(gekauft.)881
b(In)c(b)36 b(eiden)876 b(F)-27 b(\344llen)877 b(hat)g(er)g(gew)-36
b(onnen.)879 b(Die)f(Maturazeitung)e(b)36 b(eric)-36
b(h)g(tet)921 22426 y(dar\374b)36 b(er:)423 b(\022Die)h(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit)424 b(f\374r)f(dieses)g(Ereignis)h(b)
36 b(etr\344gt)424 b FB(3)221 b(\045)p FH(\020)-181 b(.)425
b(Berec)-36 b(hne)422 b(die)873 24418 y(Anzahl)433 b(der)g
(Gewinn-Lose.)p 1 0 0 TeXcolorrgb 1289 28432 a FG(2)p
1054 28645 941 45 v 1054 29413 a(10)2423 28955 y Fw(\001)3896
28432 y Fr(x)p 3220 28645 1882 45 v 3220 29413 a FG(1000)5603
28955 y FB(=)369 b(0)p Fx(;)p FB(03)h Fw(\))g Fx(x)f
FB(=)f(150)p FH(.)921 31500 y(Es)434 b(gibt)f(150)i(Gewinnlose.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
7929 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 9921 a FD(WS)369
b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 35234 54804 45 v -2331 40662 a FI(WS)729 b(2.3)h(-)g(14)g
(Einlassk)-60 b(on)g(trolle)728 b(-)j(O)-60 b(A)730 b(-)g(Matura)g
(2015/16)g(-)g(Ne-)-2331 43684 y(b)60 b(en)-60 b(termin)716
b(1)p 0 TeXcolorgray -1391 46992 a FH(65.)p 0 TeXcolorgray
651 w(Beim)500 b(Einlass)h(zu)e(einer)h(Sp)36 b(ortv)-36
b(eranstaltung)499 b(f\374hrt)g(eine)h(P)-36 b(erson)500
b Fx(P)680 b FH(einen)500 b(unerlaub-)921 48984 y(ten)626
b(Gegenstand)g(mit)h(sic)-36 b(h.)628 b(Bei)f(einer)g(Sic)-36
b(herheitsk)g(on)g(trolle)627 b(wird)g(ein)f(unerlaubter)921
50976 y(Gegenstand)392 b(mit)i(einer)f(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit)393 b(v)-36 b(on)394 b FB(0)p Fx(;)p
FB(9)h FH(en)-36 b(tdec)g(kt.)393 b(Da)h(es)f(sic)-36
b(h)394 b(b)36 b(ei)393 b(dieser)921 52968 y(Sp)36 b(ortv)-36
b(eranstaltung)362 b(um)h(eine)f(V)-108 b(eranstaltung)363
b(mit)f(b)36 b(esonders)363 b(hohem)f(Risik)-36 b(o)364
b(handelt,)921 54959 y(m)-36 b(uss)400 b(jede)g(P)-36
b(erson)400 b(zw)-36 b(ei)401 b(derartige)f(v)-36 b(oneinander)400
b(unabh\344ngige)g(Sic)-36 b(herheitsk)g(on)g(trollen)921
56951 y(durc)g(hlaufen.)921 61489 y(Berec)g(hne)610 b(die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)611 b(dass)f(b)36 b(ei)611
b(der)f(P)-36 b(erson)610 b Fx(P)791 b FH(im)611 b(Zuge)f(der)g(b)36
b(eiden)921 63481 y(Sic)-36 b(herheitsk)g(on)g(trollen)433
b(der)g(unerlaubte)g(Gegenstand)f(en)-36 b(tdec)g(kt)433
b(wird.)p 1 0 0 TeXcolorrgb 921 66026 a FB(0)p Fx(;)p
FB(9)296 b(+)f(0)p Fx(;)p FB(1)h Fw(\001)f FB(0)p Fx(;)p
FB(9)370 b(=)f(0)p Fx(;)p FB(99)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 46992 a FE(___/1)p 1 0 0
TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 69760 V 0 TeXcolorgray 24421 81281 a FH(57)p 0
TeXcolorgray eop end
%%Page: 58 58
TeXDict begin 58 57 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)863 b(2.3)h(-)h(15)e(Haus\374bungsk)
-60 b(on)g(trolle)861 b(-)j(O)-60 b(A-)865 b(Matura)f(2013/14)-2331
4622 y(Haupttermin)p 0 TeXcolorgray -1391 7929 a FH(66.)p
0 TeXcolorgray 651 w(Eine)389 b(Lehrerin)f(w)-36 b(\344hlt)390
b(am)f(Beginn)g(der)g(Mathematikstunde)g(nac)-36 b(h)388
b(dem)h(Zufallsprinzip)888 9921 y(3)413 b(Sc)-36 b(h)g(\374ler/innen)
410 b(aus,)j(die)f(an)g(der)f(T)-108 b(afel)413 b(die)g
(L\366sungsans\344tze)f(der)f(Haus\374bungsaufga-)921
11913 y(b)36 b(en)433 b(erkl\344ren)h(m)-36 b(\374ssen.)433
b(Es)h(sind)f(12)h(Bursc)-36 b(hen)432 b(und)h(8)h(M\344dc)-36
b(hen)432 b(an)-36 b(w)g(esend.)921 14458 y(Berec)g(hne)573
b(die)g(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)574
b(dass)g(f\374r)f(das)g(Erkl\344ren)h(der)f(L\366sungsans\344tze)h(2)
921 16450 y(Bursc)-36 b(hen)432 b(und)h(1)h(M\344dc)-36
b(hen)432 b(ausgew)-36 b(\344hlt)434 b(w)-36 b(erden!)p
1 0 0 TeXcolorrgb 921 20987 a Fx(P)181 b FB(\()p FH(\0222)434
b(Bursc)-36 b(hen,)432 b(1)i(M\344dc)-36 b(hen\020)p
FB(\))368 b(=)19381 20464 y FG(12)p 19381 20677 941 45
v 19381 21445 a(20)20750 20987 y Fw(\001)21547 20464
y FG(11)p 21547 20677 V 21547 21445 a(19)22916 20987
y Fw(\001)23948 20464 y FG(8)p 23713 20677 V 23713 21445
a(18)25082 20987 y Fw(\001)295 b FB(3)369 b(=)28279 20464
y FG(44)p 28279 20677 V 28279 21445 a(95)29721 20987
y Fw(\031)g FB(0)p Fx(;)p FB(46)i(=)d(46)221 b(\045)874
23533 y FH(T)-108 b(oleranzin)-36 b(terv)-72 b(all:)560
b FB([)8 b(0)p Fx(;)p FB(46;)221 b(0)p Fx(;)p FB(47])561
b FH(bzw.)d FB([)8 b(46)221 b(\045;)g(47)g(\045])p FH(.)562
b(Sollte)c(als)h(L\366sungsmetho)36 b(de)556 b(die)921
25525 y(h)-36 b(yp)36 b(ergeometrisc)-36 b(he)365 b(V)-108
b(erteilung)365 b(gew)-36 b(\344hlt)365 b(w)-36 b(erden)365
b(ist)g(dies)g(auc)-36 b(h)365 b(als)g(ric)-36 b(h)g(tig)365
b(zu)g(w)-36 b(erten:)921 28927 y Fx(P)181 b FB(\()p
Fx(E)78 b FB(\))368 b(=)5875 26491 y Fj(\020)6536 27186
y FG(12)6771 28234 y(2)7477 26491 y Fj(\021)8433 27776
y Fw(\001)9097 26491 y Fj(\020)9758 27186 y FG(8)9758
28234 y(1)10229 26491 y Fj(\021)p 5875 28617 5016 45
v 7251 28794 a(\020)7912 29489 y FG(20)8147 30536 y(3)8853
28794 y Fj(\021)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 7929 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 9921 a FD(WS)h(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 34217 54804 45 v -2331 39646 a FI(WS)1051
b(2.3)g(-)g(16)g(A)-60 b(dv)g(en)g(tkalender)1049 b(-)j(O)-60
b(A)1051 b(-)h(Matura)f(2013/14)g(1.)-2331 42668 y(Neb)60
b(en)-60 b(termin)p 0 TeXcolorgray -1391 45975 a FH(67.)p
0 TeXcolorgray 651 w(In)552 b(einem)h(A)-36 b(dv)g(en)g(tkalender)552
b(wurden)g(v)-36 b(ersehen)g(tlic)g(h)552 b(4)g(der)g(24)i(v)-36
b(orhandenen)551 b(F)-108 b(enster)921 47967 y(nic)-36
b(h)g(t)433 b(b)36 b(ef\374llt.)921 50513 y(Berec)-36
b(hne)427 b(die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)428
b(dass)g(Sie)g(b)36 b(eim)428 b(\326\033nen)f(des)h(dritten)f(F)-108
b(ensters)426 b(das)921 52505 y(erste)433 b(leere)h(F)-108
b(enster)432 b(v)-36 b(or\034nden!)p 1 0 0 TeXcolorrgb
1054 56519 a FG(20)p 1054 56732 941 45 v 1054 57500 a(24)2423
57042 y Fw(\001)3220 56519 y FG(19)p 3220 56732 V 3220
57500 a(23)4589 57042 y Fw(\001)5621 56519 y FG(4)p 5386
56732 V 5386 57500 a(22)6828 57042 y FB(=)8577 56519
y FG(95)p 8342 56732 1412 45 v 8342 57500 a(759)10255
57042 y Fw(\031)369 b FB(0)p Fx(;)p FB(1252)i Fw(\031)e
FB(12)p Fx(;)p FB(5)221 b(\045)874 59587 y FH(T)-108
b(oleranzin)-36 b(terv)-72 b(all:)435 b FB([)8 b(0)p
Fx(;)p FB(12;)221 b(0)p Fx(;)p FB(13])437 b FH(bzw.)d([12)217
b(\045;)435 b(13)217 b(\045].)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 45975 a FE(___/1)p 1 0 0
TeXcolorrgb 47905 47967 a FD(WS)369 b(2.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 63395 54804 45
v 0 TeXcolorgray 24421 81281 a FH(58)p 0 TeXcolorgray
eop end
%%Page: 59 59
TeXDict begin 59 58 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)587 b(2.3)g(-)h(17)f(Alarmanlagen)g
(-)g(O)-60 b(A)588 b(-)g(Matura)f(2016/17)g(-)h(Haupt-)-2331
4622 y(termin)p 0 TeXcolorgray -1391 7929 a FH(68.)p
0 TeXcolorgray 651 w(Eine)390 b(b)36 b(estimm)-36 b(te)390
b(Alarmanlage)i(l\366st)f(jew)-36 b(eils)392 b(mit)f(der)f(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit)390 b(0,9)h(im)g(Ein-)921
9921 y(bruc)-36 b(hsfall)616 b(Alarm)f(aus.)i(Eine)f(F)-108
b(amilie)616 b(l\344sst)g(zw)-36 b(ei)616 b(dieser)g(Anlagen)g(in)f
(ihr)g(Haus)h(so)921 11913 y(ein)-36 b(bauen,)433 b(dass)h(sie)f
(unabh\344ngig)h(v)-36 b(oneinander)433 b(Alarm)h(ausl\366sen.)921
16450 y(Berec)-36 b(hne)403 b(die)h(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit,)405 b(dass)f(im)g(Ein)-36 b(bruc)g(hsfall)404
b(mindestens)f(eine)h(der)g(b)36 b(ei-)921 18442 y(den)433
b(Anlagen)h(Alarm)g(ausl\366st!)p 1 0 0 TeXcolorrgb 921
20987 a(M\366glic)-36 b(he)434 b(Berec)-36 b(hn)g(ung:)856
23533 y FB(1)295 b Fw(\000)h FB(0)p Fx(;)p FB(1)4791
23051 y FG(2)5687 23533 y FB(=)368 b(0)p Fx(;)p FB(99)921
28070 y FH(Die)421 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)420
b(dass)h(im)f(Ein)-36 b(bruc)g(hsfall)420 b(mindestens)f(eine)h(der)g
(b)36 b(eiden)420 b(Anla-)921 30062 y(gen)434 b(Alarm)f(ausl\366st,)i
(liegt)f(b)36 b(ei)434 b(0,99.)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 7929 a FE(___/1)p 1 0 0
TeXcolorrgb 47905 9921 a FD(WS)369 b(2.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 33796 54804 45
v -2331 39097 a FI(WS)749 b(2.3)h(-)g(18)f(Mensc)-60
b(h)750 b(\344rgere)f(Dic)-60 b(h)750 b(nic)-60 b(h)g(t)749
b(-)h(O)-60 b(A)750 b(-)g(Matura)g(NT)-2439 42119 y(1)718
b(16/17)p 0 TeXcolorgray -1391 45427 a FH(69.)p 0 TeXcolorgray
651 w(Um)509 b(b)36 b(eim)510 b(Spiel)f Fi(Mensch)534
b(\344r)-66 b(ger)g(e)533 b(Dich)h(nicht)599 b FH(zu)509
b(Beginn)h(des)f(Spiels)g(eine)h(Figur)f(auf)921 47418
y(das)391 b(Spielfeld)g(setzen)g(zu)f(d\374rfen,)h(m)-36
b(uss)390 b(mit)h(einem)g(fairen)g(Spielw\374rfel)h(ein)f(Sec)-36
b(hser)390 b(ge-)874 49410 y(w)-36 b(orfen)414 b(w)-36
b(erden.)412 b(\(Ein)h(W)-36 b(\374rfel)413 b(ist)h(\022fair\020,)g(w)
-36 b(enn)413 b(die)g(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)413
b(nac)-36 b(h)412 b(einem)855 51402 y(W)-108 b(urf)433
b(nac)-36 b(h)433 b(ob)36 b(en)433 b(zu)h(zeigen)g(f\374r)f(alle)i(sec)
-36 b(hs)433 b(Seiten\035\344c)-36 b(hen)432 b(gleic)-36
b(h)434 b(gro\377)g(ist.\))921 53948 y(Die)542 b(Anzahl)f(der)g(V)-108
b(ersuc)-36 b(he,)540 b(einen)h(Sec)-36 b(hser)540 b(zu)h(w)-36
b(erfen,)541 b(ist)h(laut)f(Spielanleitung)g(auf)921
55940 y(der)408 b(V)-108 b(ersuc)-36 b(he)407 b(b)36
b(esc)-36 b(hr\344nkt,)408 b(b)36 b(ev)-36 b(or)409 b(die)f(n\344c)-36
b(hste)408 b(Spielerin/der)g(n\344c)-36 b(hste)408 b(Spieler)g(an)g
(die)921 57932 y(Reihe)434 b(k)-36 b(omm)g(t.)921 60477
y(Berec)g(hne)397 b(die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)399
b(mit)f(der)f(eine)h(Spiel\034gur)f(nac)-36 b(h)398 b(maximal)i(drei)d
(V)-108 b(er-)921 62469 y(suc)-36 b(hen,)433 b(einen)g(Sec)-36
b(hser)433 b(zur)g(w)-36 b(erfen,)434 b(auf)g(das)f(Spielfeld)h
(gesetzt)g(w)-36 b(erden)433 b(darf)36 b(!)p 1 0 0 TeXcolorrgb
1054 64491 a FG(1)p 1054 64704 471 45 v 1054 65472 a(6)1952
65014 y FB(+)3392 64491 y FG(5)p 3392 64704 V 3392 65472
a(6)4290 65014 y Fw(\001)5087 64491 y FG(1)p 5087 64704
V 5087 65472 a(6)5986 65014 y FB(+)7426 64491 y FG(5)p
7426 64704 V 7426 65472 a(6)8324 65014 y Fw(\001)9121
64491 y FG(5)p 9121 64704 V 9121 65472 a(6)10020 65014
y Fw(\001)10817 64491 y FG(1)p 10817 64704 V 10817 65472
a(6)11789 65014 y Fw(\031)369 b FB(0)p Fx(;)p FB(42)921
67560 y FH(Die)598 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)597
b(eine)h(Spiel\034gur)e(nac)-36 b(h)597 b(maximal)h(drei)f(V)-108
b(ersuc)-36 b(hen)596 b(auf)h(das)921 69552 y(Spielfeld)434
b(setzen)f(zu)g(d\374rfen,)g(b)36 b(etr\344gt)434 b(ca.)g
FB(42)221 b(\045)p FH(.)874 72097 y(T)-108 b(oleranzin)-36
b(terv)-72 b(all:)435 b FB([)8 b(0)p Fx(;)p FB(4;)221
b(0)p Fx(;)p FB(45])437 b FH(bzw.)d FB([)8 b(40)221 b(\045;)g(45)g
(\045])921 74642 y FH(Die)608 b(A)-36 b(ufgab)36 b(e)608
b(ist)f(auc)-36 b(h)607 b(dann)g(als)h(ric)-36 b(h)g(tig)607
b(gel\366st)i(zu)e(w)-36 b(erten,)607 b(w)-36 b(enn)607
b(b)36 b(ei)608 b(k)-36 b(orrektem)873 76634 y(Ansatz)433
b(das)h(Ergebnis)f(aufgrund)g(eines)h(Rec)-36 b(henfehlers)433
b(nic)-36 b(h)g(t)433 b(ric)-36 b(h)g(tig)433 b(ist.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
45427 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 47418 a FD(WS)369
b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 24421 81281 a FH(59)p 0 TeXcolorgray eop
end
%%Page: 60 60
TeXDict begin 60 59 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 54804 45 v -2331 6795 a FI(WS)717
b(2.4)g(-)g(1)h(Binomialk)-60 b(o)60 b(e\036zien)-60
b(t)715 b(-)j(O)-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray
-1391 10545 a FH(70.)p 0 TeXcolorgray 651 w(Betrac)-36
b(h)g(tet)433 b(wird)g(der)g(Binomialk)-36 b(o)36 b(e\036zien)-36
b(t)23791 8265 y Fj(0)23791 10258 y(@)24759 9616 y FB(20)25040
11608 y Fx(x)26060 8265 y Fj(1)26060 10258 y(A)27462
10545 y FH(mit)434 b Fx(x)369 b Fw(2)f Fh(N)p Fx(:)921
15777 y FH(Gib)569 b(alle)h(W)-108 b(erte)569 b(f\374r)g
Fx(x)601 b Fw(2)e Fh(N)570 b FH(an,)g(f\374r)f(die)g(der)g(gegeb)36
b(ene)570 b(Binominialk)-36 b(o)36 b(e\036zien)-36 b(t)571
b(den)855 17769 y(W)-108 b(ert)433 b(1)h(annimm)-36 b(t.)p
1 0 0 TeXcolorrgb 921 20314 a Fx(x)1660 20513 y FG(1)2555
20314 y FB(=)368 b(0)921 22860 y Fx(x)1660 23059 y FG(2)2555
22860 y FB(=)g(20)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 10545 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 12537 a FD(WS)h(2.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 26534 V -2331 31836 a FI(WS)717
b(2.4)g(-)g(2)h(Sc)-60 b(hisc)g(h)g(ule)716 b(-)h(O)-60
b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray -1391 35143 a FH(71.)p
0 TeXcolorgray 651 w(Einer)570 b(Sc)-36 b(hisc)g(h)g(ule)568
b(stehen)h(in)h(einer)g(W)-108 b(o)36 b(c)-36 b(he)569
b(neun)g(Sc)-36 b(hilehrer/innen)569 b(zur)g(V)-108 b(erf\374gung.)921
37135 y(F)-27 b(\374r)621 b(die)h(in)f(dieser)h(W)-108
b(o)36 b(c)-36 b(he)622 b(geplan)-36 b(ten)621 b(Sc)-36
b(hikurse)621 b(w)-36 b(erden)622 b(ab)36 b(er)621 b(n)-36
b(ur)621 b(sec)-36 b(hs)622 b(Sc)-36 b(hileh-)921 39127
y(rer/innen)433 b(b)36 b(en\366tigt.)921 44440 y(Gib)433
b(die)g(Bedeutung)g(des)g(A)-36 b(usdruc)g(ks)20660 42159
y Fj(0)20660 44152 y(@)21628 43510 y FB(9)21628 45502
y(6)22279 42159 y Fj(1)22279 44152 y(A)23681 44440 y
FH(in)433 b(diesem)h(Zusammenhang)f(an.)p 1 0 0 TeXcolorrgb
921 47761 a(Dieser)505 b(A)-36 b(usdruc)g(k)503 b(gibt)h(die)g(Anzahl)g
(der)g(M\366glic)-36 b(hk)g(eiten)504 b(an,)h(sec)-36
b(hs)504 b(Sc)-36 b(hilehrer/innen)921 49752 y(f\374r)640
b(die)f(Sc)-36 b(hikurse)639 b(\025)i(unabh\344ngig)e(v)-36
b(on)640 b(der)f(Zuordn)-36 b(ung)638 b(zur)i(jew)-36
b(eiligen)641 b(Grupp)36 b(e)638 b(\025)921 51744 y(auszu)-36
b(w)g(\344hlen.)921 56282 y(L\366sungssc)g(hl\374ssel:)470
b(Ein)g(Punkt)g(ist)g(genau)h(dann)e(zu)h(geb)36 b(en,)470
b(w)-36 b(enn)470 b(die)g(In)-36 b(terpretation)769 58274
y(\(sinngem\344\377\))434 b(der)f(L\366sungserw)-36 b(artung)432
b(en)-36 b(tspric)g(h)g(t.)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 35143 a FE(___/1)p 1 0 0
TeXcolorrgb 47905 37135 a FD(WS)369 b(2.4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 62081 V 0 TeXcolorgray
24421 81281 a FH(60)p 0 TeXcolorgray eop end
%%Page: 61 61
TeXDict begin 61 60 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(2.4)g(-)g(3)h(F)-179
b(erienlager)715 b(-)j(O)-60 b(A)717 b(-)h(BIFIE)p 0
TeXcolorgray -1391 4800 a FH(72.)p 0 TeXcolorgray 651
w(A)-36 b(us)484 b(einer)g(Grupp)36 b(e)483 b(v)-36 b(on)485
b(Jugendlic)-36 b(hen)484 b(\(14)h(M\344dc)-36 b(hen)484
b(und)f(10)i(Bursc)-36 b(hen\))484 b(sollen)h(Be-)921
6792 y(treuer/innen)432 b(f\374r)i(F)-108 b(erienlager)433
b(ausgew)-36 b(\344hlt)435 b(w)-36 b(erden.)921 12105
y(In)g(terpretiere)432 b(den)h(W)-108 b(ert)433 b(des)h(A)-36
b(usdruc)g(ks)22691 9825 y Fj(0)22691 11817 y(@)23660
11176 y FB(24)23985 13167 y(2)24961 9825 y Fj(1)24961
11817 y(A)26363 12105 y FH(im)433 b(gegeb)36 b(enen)434
b(K)-36 b(on)g(text.)p 1 0 0 TeXcolorrgb 921 14474 a
Fj(0)921 16467 y(@)1890 15825 y FB(24)2215 17817 y(2)3190
14474 y Fj(1)3190 16467 y(A)4738 16754 y FH(gibt)579
b(die)g(Anzahl)g(der)g(M\366glic)-36 b(hk)g(eiten)580
b(an,)f(zw)-36 b(ei)580 b(Jugendlic)-36 b(he)579 b(dieser)g(Grupp)36
b(e)921 19441 y(auszu)-36 b(w)g(\344hlen,)359 b(unabh\344ngig)g(v)-36
b(on)360 b(der)e(Reihenfolge)j(der)e(A)-36 b(usw)g(ahl)359
b(und)f(v)-36 b(om)360 b(Gesc)-36 b(hlec)g(h)g(t.)921
23978 y(L\366sungssc)g(hl\374ssel:)470 b(Ein)g(Punkt)g(ist)g(genau)h
(dann)e(zu)h(geb)36 b(en,)470 b(w)-36 b(enn)470 b(die)g(In)-36
b(terpretation)921 25970 y(des)433 b(Binomialk)-36 b(o)36
b(e\036zien)-36 b(ten)435 b(sinngem\344\377)f(dem)g(der)f
(L\366sungserw)-36 b(artung)432 b(en)-36 b(tspric)g(h)g(t.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
4800 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 6792 a FD(WS)369
b(2.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 29703 54804 45 v -2331 35132 a FI(WS)1135 b(2.4)g(-)h(4)f
(Elfmetersc)-60 b(hie\377en)1135 b(-)h(O)-60 b(A)1135
b(-)h(Matura)f(2014/15)h(-)-2331 38154 y(Haupttermin)p
0 TeXcolorgray -1391 41461 a FH(73.)p 0 TeXcolorgray
651 w(In)574 b(einer)g(F)-108 b(u\377ballmannsc)-36 b(haft)574
b(stehen)g(elf)h(Spieler)f(als)h(Elfmetersc)-36 b(h)g(\374tzen)574
b(zur)f(V)-108 b(erf\374-)921 43453 y(gung.)921 48692
y(Deute)433 b(den)g(A)-36 b(usdruc)g(k)12977 46412 y
Fj(0)12977 48404 y(@)13945 47763 y FB(11)14271 49754
y(5)15246 46412 y Fj(1)15246 48404 y(A)16648 48692 y
FH(im)434 b(gegeb)36 b(enen)433 b(K)-36 b(on)g(text.)p
1 0 0 TeXcolorrgb 921 51061 a Fj(0)921 53054 y(@)1890
52412 y FB(11)2215 54404 y(5)3190 51061 y Fj(1)3190 53054
y(A)4590 53341 y FH(gibt)431 b(die)h(Anzahl)f(der)f(M\366glic)-36
b(hk)g(eiten)433 b(an,)e(v)-36 b(on)432 b(den)e(elf)i(Spielern)f
(f\374nf)g(Sc)-36 b(h)g(\374tzen)921 56028 y(f\374r)558
b(das)g(Elfmetersc)-36 b(hie\377en)558 b(\025)h(unabh\344ngig)e(v)-36
b(on)559 b(der)e(Reihenfolge)j(ihres)d(An)-36 b(tretens)557
b(\025)921 58020 y(auszu)-36 b(w)g(\344hlen.)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 41461
a FE(___/1)p 1 0 0 TeXcolorrgb 47905 43453 a FD(WS)369
b(2.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 61495 V 0 TeXcolorgray 24421 81281 a FH(61)p 0
TeXcolorgray eop end
%%Page: 62 62
TeXDict begin 62 61 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)804 b(2.4)h(-)g(5)g(Binomialk)-60
b(o)60 b(e\036zien)-60 b(t)804 b(-)h(MC)g(-)h(Matura)e(2013/14)h(1.)
-2331 4622 y(Neb)60 b(en)-60 b(termin)p 0 TeXcolorgray
-1391 7929 a FH(74.)p 0 TeXcolorgray 651 w(Betrac)-36
b(h)g(tet)433 b(wird)g(der)g(Binomialk)-36 b(o)36 b(e\036zien)-36
b(t)23791 6645 y Fj(\020)24452 7340 y FG(6)24452 8387
y(2)24922 6645 y Fj(\021)25583 7929 y FH(.)921 10586
y(Kreuze)368 b(die)g(b)36 b(eiden)367 b(A)-36 b(ufgab)36
b(enstellungen)368 b(an,)h(die)f(mit)g(der)g(Rec)-36
b(hn)g(ung)37462 9302 y Fj(\020)38123 9996 y FG(6)38123
11044 y(2)38593 9302 y Fj(\021)39623 10586 y FB(=)369
b(15)g FH(gel\366st)874 12578 y(w)-36 b(erden)433 b(k)-36
b(\366nnen!)p 1062 15278 44260 45 v 1062 22325 45 7047
v 1770 17138 a(Gegeb)36 b(en)623 b(sind)g(sec)-36 b(hs)623
b(v)-36 b(ersc)g(hiedene)623 b(Punkte)g(einer)h(Eb)36
b(ene,)623 b(v)-36 b(on)624 b(denen)e(nie)1770 19130
y(mehr)393 b(als)h(zw)-36 b(ei)394 b(auf)f(einer)g(Geraden)g(liegen.)h
(Wie)g(viele)g(M\366glic)-36 b(hk)g(eiten)394 b(gibt)g(es,)1770
21122 y(zw)-36 b(ei)435 b(Punkte)e(auszu)-36 b(w)g(\344hlen,)433
b(um)g(jew)-36 b(eils)435 b(eine)f(Gerade)f(durc)-36
b(hzulegen?)p 42912 22325 V 1 0 0 TeXcolorrgb 43621 19134
a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45277 22325 V 1062 22369 44260 45 v 1062 29158 45 6789
v 1770 24229 a FH(An)434 b(einem)f(W)-108 b(ettrennen)432
b(nehmen)h(sec)-36 b(hs)433 b(P)-36 b(ersonen)433 b(teil.)h(Wie)g
(viele)h(M\366glic)-36 b(h-)1770 26221 y(k)g(eiten)553
b(gibt)f(es)h(f\374r)f(den)f(Zieleinlauf,)j(w)-36 b(enn)552
b(n)-36 b(ur)551 b(die)h(ersten)g(b)36 b(eiden)552 b(Pl\344tze)1770
28213 y(relev)-72 b(an)-36 b(t)434 b(sind?)p 42912 29158
V 45277 29158 V 1062 29202 44260 45 v 1062 35991 45 6789
v 1770 31062 a(V)-108 b(on)362 b(sec)-36 b(hs)362 b(Kugeln)h(sind)f
(vier)h(rot)f(und)f(zw)-36 b(ei)363 b(blau.)g(Sie)g(un)-36
b(tersc)g(heiden)360 b(sic)-36 b(h)362 b(n)-36 b(ur)1770
33054 y(durc)g(h)504 b(ihre)g(F)-108 b(arb)36 b(e.)505
b(Wie)h(viele)f(M\366glic)-36 b(hk)g(eiten)506 b(gibt)f(es,)g(die)g
(Kugeln)g(in)f(einer)1770 35046 y(Reihe)434 b(anzuordnen?)p
42912 35991 V 1 0 0 TeXcolorrgb 43621 32929 a FF(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
35991 V 1062 36035 44260 45 v 1062 45074 45 9039 v 1770
37895 a FH(Sec)-36 b(hs)433 b(M\344dc)-36 b(hen)433 b(einer)g(Sc)-36
b(h)g(ulklasse)434 b(kandidieren)f(f\374r)h(das)f(Am)-36
b(t)434 b(der)f(Klassen-)1770 39887 y(sprec)-36 b(herin.)641
b(Die)f(Siegerin)g(der)f(W)-108 b(ahl)640 b(soll)h(Klassensprec)-36
b(herin)639 b(w)-36 b(erden,)640 b(die)1770 41879 y(Zw)-36
b(eitplatzierte)558 b(deren)f(Stellv)-36 b(ertreterin.)558
b(Wie)g(viele)g(M\366glic)-36 b(hk)g(eiten)558 b(gibt)g(es)1770
43871 y(f\374r)434 b(die)f(V)-108 b(ergab)36 b(e)434
b(der)f(b)36 b(eiden)433 b(\304m)-36 b(ter?)p 42912 45074
V 45277 45074 V 1062 45118 44260 45 v 1062 49915 45 4797
v 1770 46978 a(Wie)435 b(viele)f(sec)-36 b(hsstellige)435
b(Zahlen)e(k)-36 b(\366nnen)433 b(aus)h(den)f(Zi\033ern)g(6)h(und)e(2)i
(gebildet)1770 48970 y(w)-36 b(erden?)p 42912 49915 V
45277 49915 V 1062 49959 44260 45 v 47992 7929 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 9921 a FD(WS)369 b(2.4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 53987
54804 45 v 0 TeXcolorgray 24421 81281 a FH(62)p 0 TeXcolorgray
eop end
%%Page: 63 63
TeXDict begin 63 62 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)713 b(2.4)g(-)h(6)g(Jugendgrupp)60
b(e)711 b(-)j(L)-179 b(T)712 b(-)i(Matura)g(2016/17)f(-)h(Haupt-)-2331
4622 y(termin)p 0 TeXcolorgray -1391 7929 a FH(75.)p
0 TeXcolorgray 651 w(Eine)610 b(Jugendgrupp)36 b(e)608
b(b)36 b(esteh)-36 b(t)609 b(aus)g(21)i(Jugendlic)-36
b(hen.)610 b(F)-27 b(\374r)609 b(ein)h(Spiel)g(sollen)g(T)-108
b(eams)921 9921 y(gebildet)434 b(w)-36 b(erden.)921 12466
y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36 b(k)g(en)358
b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357 b(Ankreuzen)g(der)h(jew)-36
b(eils)360 b(ric)-36 b(h)g(tigen)921 14458 y(Satzteile)434
b(so,)g(dass)g(eine)f(mathematisc)-36 b(h)434 b(k)-36
b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36 b(tsteh)g(t!)921
18650 y(Der)735 b(Bionmialk)-36 b(o)36 b(e\036zien)-36
b(t)15289 16370 y Fj(0)15289 18362 y(@)16590 17720 y
FB(21)17240 19712 y(3)18223 16370 y Fj(1)18223 18362
y(A)19926 18650 y FH(gibt)736 b(an,)p 25588 18650 3150
45 v 29210 18602 a(1)28738 18650 y Fp(\015)p 30332 18650
V 3885 w FH(;)g(sein)f(W)-108 b(ert)735 b(b)36 b(etr\344gt)p
921 21749 V 4542 21701 a(2)4071 21749 y Fp(\015)p 5665
21749 V 3583 w FH(.)p 0 TeXcolorgray 0 TeXcolorgray 3885
23122 30768 45 v 3885 26206 45 3085 v 18944 24903 a(1)18472
24951 y Fp(\015)p 34608 26206 V 3885 26250 30768 45 v
3885 31305 45 5056 v 4593 28110 a FH(wie)630 b(viele)h(der)e(21)g
(Jugendlic)-36 b(hen)629 b(in)g(einem)g(T)-108 b(eam)4593
30102 y(sind,)434 b(w)-36 b(enn)433 b(man)g(drei)h(gleic)-36
b(h)434 b(gro\377e)g(T)-108 b(eams)434 b(bildet)p 32243
31305 V 32951 29110 a FF(2)p 34608 31305 V 3885 31350
30768 45 v 3885 38396 45 7047 v 4593 33209 a FH(wie)340
b(viele)h(v)-36 b(ersc)g(hiedene)338 b(M\366glic)-36
b(hk)g(eiten)340 b(es)f(gibt,)h(aus)4593 35201 y(den)489
b(21)h(Jugendlic)-36 b(hen)488 b(ein)i(Dreierteam)g(auszu)-36
b(w)g(\344h-)4593 37193 y(len)p 32243 38396 V 1 0 0 TeXcolorrgb
32951 35205 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 34608 38396 V 3885 38441 30768 45 v 3885
45488 45 7047 v 4593 40301 a FH(auf)421 b(wie)f(viele)h(Arten)f(drei)f
(un)-36 b(tersc)g(hiedlic)g(he)419 b(A)-36 b(ufga-)4593
42293 y(b)36 b(en)322 b(auf)g(drei)f(Mitglieder)h(der)f(Jugendgrupp)36
b(e)320 b(aufge-)4593 44285 y(teilt)434 b(w)-36 b(erden)433
b(k)-36 b(\366nnen)p 32243 45488 V 32951 42296 a FF(2)p
34608 45488 V 3885 45532 30768 45 v 0 TeXcolorgray 0
TeXcolorgray 39150 23232 6601 45 v 39150 26317 45 3085
v 42125 25014 a FH(2)41653 25062 y Fp(\015)p 45706 26317
V 39150 26361 6601 45 v 39150 29620 45 3260 v 39859 28417
a FH(7)p 43341 29620 V 44050 28323 a FF(2)p 45706 29620
V 39150 29664 6601 45 v 39150 32924 45 3260 v 39859 31720
a FH(1)217 b(330)p 43341 32924 V 1 0 0 TeXcolorrgb 44050
31626 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45706 32924 V 39150 32968 6601 45 v 39150
36227 45 3260 v 39859 35024 a FH(7)g(980)p 43341 36227
V 44050 34930 a FF(2)p 45706 36227 V 39150 36271 6601
45 v 47992 7929 a FE(___/1)p 1 0 0 TeXcolorrgb 47905
9921 a FD(WS)369 b(2.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 49560 54804 45 v 0 TeXcolorgray
24421 81281 a FH(63)p 0 TeXcolorgray eop end
%%Page: 64 64
TeXDict begin 64 63 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(3.1)g(-)g(1)h(W)-179
b(ahrsc)-60 b(heinlic)g(hk)g(eitsv)g(erteilung)712 b(-)718
b(O)-60 b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray -1391 4800
a FH(76.)p 0 TeXcolorgray 651 w(Gusta)-36 b(v)554 b(k)-36
b(omm)g(t)555 b(in)f(der)g(Nac)-36 b(h)g(t)554 b(nac)-36
b(h)553 b(Hause)i(und)e(m)-36 b(uss)554 b(im)g(Dunk)-36
b(eln)555 b(die)f(Haust\374re)921 6792 y(aufsp)36 b(erren.)519
b(An)f(seinem)h(ringf\366rmigen)g(Sc)-36 b(hl\374sselbund)517
b(h\344ngen)h(f\374nf)h(gleic)-36 b(he)519 b(Sc)-36 b(hl\374s-)921
8784 y(selt)g(yp)36 b(en,)396 b(v)-36 b(on)397 b(denen)e(n)-36
b(ur)395 b(einer)g(sp)36 b(errt.)396 b(Er)g(b)36 b(eginn)-36
b(t)395 b(die)h(Sc)-36 b(hl\374ssel)396 b(zuf\344llig)i(und)c(nac)-36
b(h-)921 10776 y(einander)394 b(zu)g(probieren.)g(Die)h(Zufallsv)-72
b(ariable)397 b Fx(X)499 b FH(gibt)395 b(die)f(Anzahl)g
Fx(k)440 b FH(der)394 b(Sc)-36 b(hl\374ssel)394 b(an,)921
12768 y(die)433 b(er)h(probiert,)f(bis)h(die)f(T)-27
b(\374r)433 b(ge\366\033net)h(ist.)921 17305 y(Erg\344nze)639
b(in)g(der)f(T)-108 b(ab)36 b(elle)640 b(die)f(fehlenden)f(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eiten)638 b(und)g(ermittle)h(den)921
19297 y(Erw)-36 b(artungsw)g(ert)433 b Fx(E)78 b FB(\()p
Fx(X)104 b FB(\))434 b FH(dieser)f(Zufallsv)-72 b(ariablen)435
b Fx(X)104 b FH(.)p 1 0 0 TeXcolorrgb 921 23835 a(Gleic)-36
b(h)g(w)g(ahrsc)g(heinlic)g(hk)g(eit)433 b(liegt)i(v)-36
b(or,)434 b(w)-36 b(eil:)p 0 0 0 TeXcolorrgb 921 24801
46294 45 v 921 27789 45 2988 v 5004 26893 a(k)p 9728
27789 V 4790 w(1)p 11837 27789 V 3549 w(2)p 18127 27789
V 6488 w(3)p 26113 27789 V 8183 w(4)p 35794 27789 V 9879
w(5)p 47170 27789 V 921 27834 46294 45 v 921 30821 45
2988 v 1629 29925 a Fx(P)550 b FB(=)369 b(\()p Fx(X)474
b FB(=)368 b Fx(k)45 b FB(\))p 9728 30821 V 1 0 0 TeXcolorrgb
10570 29402 a FG(1)p 10570 29615 471 45 v 10570 30383
a(5)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
11837 30821 45 2988 v 1 0 0 TeXcolorrgb 12679 29402 a(4)p
12679 29615 471 45 v 12679 30383 a(5)13577 29925 y Fw(\001)14374
29402 y FG(1)p 14374 29615 V 14374 30383 a(4)15346 29925
y FB(=)16860 29402 y FG(1)p 16860 29615 V 16860 30383
a(5)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
18127 30821 45 2988 v 1 0 0 TeXcolorrgb 18969 29402 a(4)p
18969 29615 471 45 v 18969 30383 a(5)19867 29925 y Fw(\001)20664
29402 y FG(3)p 20664 29615 V 20664 30383 a(4)21562 29925
y Fw(\001)22359 29402 y FG(1)p 22359 29615 V 22359 30383
a(3)23332 29925 y FB(=)24845 29402 y FG(1)p 24845 29615
V 24845 30383 a(5)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 26113 30821 45 2988 v 1 0 0 TeXcolorrgb
26954 29402 a(4)p 26954 29615 471 45 v 26954 30383 a(5)27852
29925 y Fw(\001)28649 29402 y FG(3)p 28649 29615 V 28649
30383 a(4)29548 29925 y Fw(\001)30345 29402 y FG(2)p
30345 29615 V 30345 30383 a(3)31243 29925 y Fw(\001)32040
29402 y FG(1)p 32040 29615 V 32040 30383 a(2)33013 29925
y FB(=)34526 29402 y FG(1)p 34526 29615 V 34526 30383
a(5)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
35794 30821 45 2988 v 1 0 0 TeXcolorrgb 36635 29402 a(4)p
36635 29615 471 45 v 36635 30383 a(5)37533 29925 y Fw(\001)38330
29402 y FG(3)p 38330 29615 V 38330 30383 a(4)39229 29925
y Fw(\001)40026 29402 y FG(2)p 40026 29615 V 40026 30383
a(3)40924 29925 y Fw(\001)41721 29402 y FG(1)p 41721
29615 V 41721 30383 a(2)42620 29925 y Fw(\001)43417 29402
y FG(1)p 43417 29615 V 43417 30383 a(1)44389 29925 y
FB(=)45903 29402 y FG(1)p 45903 29615 V 45903 30383 a(5)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
47170 30821 45 2988 v 921 30866 46294 45 v 921 35514
a Fx(E)78 b FB(\()p Fx(X)104 b FB(\))369 b(=)p 5907 35514
25197 34 v 1 0 0 TeXcolorrgb 921 38059 a Fx(E)78 b FB(\()p
Fx(X)104 b FB(\))369 b(=)5907 36775 y Fj(\020)6568 38059
y FB(1)295 b Fw(\001)8310 37536 y FG(1)p 8310 37749 471
45 v 8310 38517 a(5)9209 38059 y FB(+)g(2)g Fw(\001)12258
37536 y FG(1)p 12258 37749 V 12258 38517 a(5)13157 38059
y FB(+)g(3)g Fw(\001)16206 37536 y FG(1)p 16206 37749
V 16206 38517 a(5)17105 38059 y FB(+)f(4)i Fw(\001)20154
37536 y FG(1)p 20154 37749 V 20154 38517 a(5)21052 38059
y FB(+)f(5)h Fw(\001)24102 37536 y FG(1)p 24102 37749
V 24102 38517 a(5)24705 36775 y Fj(\021)25735 38059 y
FB(=)369 b(3)921 42596 y FH(L\366sungssc)-36 b(hl\374ssel:)409
b(Die)g(A)-36 b(ufgab)36 b(e)409 b(gilt)h(n)-36 b(ur)407
b(dann)h(als)i(ric)-36 b(h)g(tig)409 b(gel\366st,)h(w)-36
b(enn)408 b(die)h(T)-108 b(ab)36 b(elle)921 44588 y(k)-36
b(orrekt)434 b(ausgef\374llt)h(und)d(der)h(Erw)-36 b(artungsw)g(ert)433
b(ric)-36 b(h)g(tig)434 b(b)36 b(erec)-36 b(hnet)432
b(ist.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a FD(WS)369 b(3.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 48322
54804 45 v 0 TeXcolorgray 24421 81281 a FH(64)p 0 TeXcolorgray
eop end
%%Page: 65 65
TeXDict begin 65 64 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(3.1)g(-)g(2)h(T)-179
b(estung)715 b(-)j(MC)f(-)h(BIFIE)p 0 TeXcolorgray -1391
4800 a FH(77.)p 0 TeXcolorgray 651 w(Es)314 b(w)-36 b(erden)313
b(zw)-36 b(ei)314 b(T)-108 b(ests)314 b Fx(T)13708 4999
y Fr(X)14920 4800 y FH(und)f Fx(T)18164 4999 y Fr(Y)18974
4800 y FH(,)h(b)36 b(ei)314 b(denen)f(man)g(jew)-36 b(eils)315
b(maximal)h(zehn)d(Punkte)g(er-)874 6792 y(w)-36 b(erb)36
b(en)407 b(kann,)h(auf)g(ihre)g(L\366sungsh\344u\034gk)-36
b(eit)407 b(un)-36 b(tersuc)g(h)g(t.)406 b(Bei)i(mehr)f(als)h(f\374nf)g
(Punkten)921 8784 y(gilt)581 b(der)f(jew)-36 b(eilige)582
b(T)-108 b(est)580 b(als)h(b)36 b(estanden.)580 b(Die)h(Zufallsv)-72
b(ariablen)582 b Fx(X)685 b FH(und)579 b Fx(Y)869 b FH(b)36
b(esc)-36 b(hrei-)921 10776 y(b)36 b(en)403 b(die)h(Anzahl)h(der)e
(erreic)-36 b(h)g(ten)403 b(Punkte.)h(Die)h(b)36 b(eiden)403
b(un)-36 b(tenstehenden)402 b(Abbildungen)921 12768 y(zeigen)434
b(jew)-36 b(eils)435 b(die)e(V)-108 b(erteilungen)433
b(der)g(b)36 b(eiden)433 b(V)-108 b(ariablen)434 b Fx(X)538
b FH(und)433 b Fx(Y)288 b FH(.)2683 28908 y
 currentpoint currentpoint translate 0.53793 0.53793 scale neg exch
neg exch translate
 2683 28908
a 2683 28908 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 319.49422 a add def
/d 0.0 a add neg def /h 205.94556 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 2683 28908 a 4686 26654 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 301.40257 0.0 -18.09164 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45448 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 12 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 185.58371 0.0 -20.36185   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 301.40257  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 301.40257  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 185.58371  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 185.58371
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 301.40257
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 185.58371  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 185.58371  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 301.40257  def /dT 3729587 abs 65536 div viceversa
{ neg } if def /DT 0.1 abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 569.05511  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 569.05511  mul cntTick add def x abs MinValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
exch moveto cntTick tickend exch lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 185.58371
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 301.40257
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
3441 26939 a FG(0)2708 20640 y(0)p Fr(:)p FG(1)2708 14340
y(0)p Fr(:)p FG(2)2708 8041 y(0)p Fr(:)p FG(3)4451 28000
y(0)2679 b(1)h(2)f(3)h(4)f(5)h(6)g(7)f(8)h(9)2444 b(10)4686
26654 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 4686 26654 a 4686 26654 a
tx@Dict begin  { 301.40257 185.58371 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 4686 26654 a 4686 26654
a
tx@Dict begin  { 5.0 6.67703 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 4686 26654 a 4316 26940 a Fx(x)4686 26654 y
tx@Dict begin  PutEnd  end
 4686 26654
a 4686 26654 a
tx@Dict begin  PutEnd  end
 4686 26654 a 4686 26654 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 4686 26654 a
4686 26654 a
tx@Dict begin  { 0.0 0.0 pop 301.40257 185.58371 exch pop } PutCoor
PutBegin  end
 4686 26654 a 4686 26654 a
tx@Dict begin  { 5.0 51.52182 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 4686 26654 a 1834
26986 a Fx(P)181 b FB(\()p Fx(X)474 b FB(=)368 b Fx(x)p
FB(\))4686 26654 y
tx@Dict begin  PutEnd  end
 4686 26654 a 4686 26654 a
tx@Dict begin  PutEnd  end
 4686 26654
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 0.0 28.45274 113.80928   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 1.2 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 0.0 56.90549 113.80928   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 1.2 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 0.0 85.35823 56.90898   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 1.2 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 227.62195 85.35478 227.62195 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07469 113.80928 256.07469 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 284.52744 113.80928 284.52744 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
38050 28908 a
currentpoint initclip moveto
 38050 28908 a 2683 28908 a
 currentpoint currentpoint translate 1 0.53793 div 1 0.53793 div scale
neg exch neg exch translate
 2683 28908 a
24324 28908 a
 currentpoint currentpoint translate 0.53793 0.53793 scale neg exch
neg exch translate
 24324 28908 a 24324 28908 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 319.49422 a add def
/d 0.0 a add neg def /h 205.94556 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 24324 28908
a 26327 26654 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 301.40257 0.0 -18.09164 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45448 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 12 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 185.58371 0.0 -20.36185   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 301.40257  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 301.40257  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 185.58371  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 185.58371
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 301.40257
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 185.58371  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 185.58371  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 301.40257  def /dT 3729587 abs 65536 div viceversa
{ neg } if def /DT 0.1 abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 569.05511  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 569.05511  mul cntTick add def x abs MinValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
exch moveto cntTick tickend exch lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 185.58371
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 301.40257
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 25082 26939 a
FG(0)24350 20640 y(0)p Fr(:)p FG(1)24350 14340 y(0)p
Fr(:)p FG(2)24350 8041 y(0)p Fr(:)p FG(3)26092 28000
y(0)2679 b(1)h(2)g(3)f(4)h(5)f(6)h(7)g(8)f(9)2445 b(10)26327
26654 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 26327 26654 a 26327 26654 a
tx@Dict begin  { 301.40257 185.58371 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 26327 26654 a 26327
26654 a
tx@Dict begin  { 5.0 6.15965 5.16667 2.33331 140.  Uput UUput } PutCoor
PutBegin  end
 26327 26654 a 25986 26811 a Fx(y)26327 26654
y
tx@Dict begin  PutEnd  end
 26327 26654 a 26327 26654 a
tx@Dict begin  PutEnd  end
 26327 26654 a 26327 26654
a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 26327 26654 a 26327 26654 a
tx@Dict begin  { 0.0 0.0 pop 301.40257 185.58371 exch pop } PutCoor
PutBegin  end
 26327 26654 a 26327 26654
a
tx@Dict begin  { 5.0 49.73776 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 26327 26654 a 23574 26986 a Fx(P)181 b FB(\()p Fx(Y)658
b FB(=)368 b Fx(y)48 b FB(\))26327 26654 y
tx@Dict begin  PutEnd  end
 26327 26654
a 26327 26654 a
tx@Dict begin  PutEnd  end
 26327 26654 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 0.0 85.35823 28.45448   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 1.2 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 0.0 113.81097 113.80928 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 0.0 142.26372 142.26378 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 142.26378 170.71646 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 113.80928 199.1692 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 1.2 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 227.62195 28.45448 227.62195 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 59691 28908 a
currentpoint initclip moveto
 59691 28908 a
24324 28908 a
 currentpoint currentpoint translate 1 0.53793 div 1 0.53793 div scale
neg exch neg exch translate
 24324 28908 a 921 32479 a FH(Kreuze)488
b(diejenigen)i(zw)-36 b(ei)489 b(A)-36 b(ussagen)489
b(an,)g(die)f(aus)h(den)f(gegeb)36 b(enen)489 b(Informationen)g(ab-)921
34471 y(lesbar)434 b(sind.)p 1062 35179 44260 45 v 1062
40257 45 5078 v 1770 37121 a(Mit)295 b(T)-108 b(est)295
b Fx(T)7609 37320 y Fr(Y)8714 37121 y FH(w)-36 b(erden)294
b(mehr)g(Kandidatinnen/Kandidaten)f(den)h(T)-108 b(est)295
b(b)36 b(estehen)1770 39113 y(als)435 b(mit)e(T)-108
b(est)434 b Fx(T)9737 39312 y Fr(X)10635 39113 y FH(.)p
42912 40257 V 45277 40257 V 1062 40301 44260 45 v 1062
43106 45 2805 v 1770 42161 a(Beide)g(Zufallsv)-72 b(ariablen)435
b Fx(X)539 b FH(und)432 b Fx(Y)722 b FH(sind)433 b(binomialv)-36
b(erteilt.)p 42912 43106 V 45277 43106 V 1062 43150 44260
45 v 1062 46368 45 3219 v 1770 45091 a(Die)435 b(Erw)-36
b(artungsw)g(erte)433 b(sind)g(gleic)-36 b(h:)434 b Fx(E)78
b FB(\()p Fx(X)104 b FB(\))370 b(=)e Fx(E)78 b FB(\()p
Fx(Y)288 b FB(\))p FH(.)p 42912 46368 V 1 0 0 TeXcolorrgb
14209 w FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45277 46368 V 1062 46412 44260 45 v 1062
49476 45 3064 v 1770 48272 a FH(Die)435 b(Standardab)-36
b(w)g(eic)g(h)g(ungen)431 b(sind)i(gleic)-36 b(h:)435
b Fx(\033)25080 48471 y Fr(X)26347 48272 y FB(=)369 b
Fx(\033)28467 48471 y Fr(Y)29277 48272 y FH(.)p 42912
49476 V 45277 49476 V 1062 49520 44260 45 v 1062 54656
45 5137 v 1770 51461 a(Der)434 b(T)-108 b(est)434 b Fx(T)7905
51660 y Fr(X)9237 51461 y FH(un)-36 b(tersc)g(heidet)432
b(b)36 b(esser)433 b(zwisc)-36 b(hen)434 b(Kandidatinnen/Kandidaten)
1770 53453 y(mit)g(sc)-36 b(hlec)g(h)g(teren)432 b(und)h(b)36
b(esseren)433 b(T)-108 b(estergebnissen.)p 42912 54656
V 1 0 0 TeXcolorrgb 43621 52420 a FF(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 54656 V 1062 54700
44260 45 v 47992 4800 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 6792 a FD(WS)369 b(3.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 58728 54804 45 v 0 TeXcolorgray
24421 81281 a FH(65)p 0 TeXcolorgray eop end
%%Page: 66 66
TeXDict begin 66 65 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(3.1)g(-)g(3)h(Bernoulli-Exp)60
b(erimen)-60 b(t)714 b(-)k(MC)g(-)f(BIFIE)p 0 TeXcolorgray
-1391 4800 a FH(78.)p 0 TeXcolorgray 651 w(Beim)500 b(Realisieren)g
(eines)g(Bernoulli-Exp)36 b(erimen)-36 b(ts)499 b(tritt)g(Erfolg)h(mit)
g(der)f(W)-108 b(ahrsc)-36 b(hein-)921 6792 y(lic)g(hk)g(eit)469
b Fx(p)f FH(mit)g FB(0)428 b Fx(<)g(p)g(<)f FB(1)469
b FH(ein.)f(Die)h(W)-108 b(erte)468 b(der)g(binomialv)-36
b(erteilten)469 b(Zufallsv)-72 b(ariablen)921 8784 y
Fx(X)518 b FH(b)36 b(esc)-36 b(hreib)36 b(en)412 b(die)h(Anzahl)g(der)g
(Erfolge)h(b)36 b(eim)413 b Fx(n)p FH(-maligen)h(unabh\344ngigen)f
(Wiederho-)921 10776 y(len)508 b(des)g(Exp)36 b(erimen)-36
b(ts.)508 b Fx(E)586 b FH(b)36 b(ezeic)-36 b(hnet)507
b(den)g(Erw)-36 b(artungsw)g(ert,)508 b Fx(V)797 b FH(die)508
b(V)-108 b(arianz)509 b(und)d Fx(\033)921 12768 y FH(die)433
b(Standardab)-36 b(w)g(eic)g(h)g(ung.)921 17305 y(Kreuze)433
b(die)h(b)36 b(eiden)433 b(f\374r)g Fx(n)370 b(>)e FB(1)434
b FH(zutre\033enden)e(A)-36 b(ussagen)433 b(an.)p 15162
18272 16061 45 v 15162 21543 45 3272 v 15870 20155 a
Fx(E)447 b FB(=)18660 19323 y Fw(p)p 19767 19323 2389
54 v 832 x Fx(n)296 b Fw(\001)f Fx(p)p 28813 21543 45
3272 v 31178 21543 V 15162 21588 16061 45 v 15162 24806
45 3219 v 15870 23529 a(V)289 b FB(\()p Fx(X)104 b FB(\))370
b(=)e Fx(n)296 b Fw(\001)f Fx(p)g Fw(\001)g FB(\(1)h
Fw(\000)f Fx(p)p FB(\))p 28813 24806 V 1 0 0 TeXcolorrgb
1372 w FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
31178 24806 V 15162 24850 16061 45 v 15162 28068 45 3219
v 15870 26791 a Fx(P)181 b FB(\()p Fx(X)474 b FB(=)368
b(0\))h(=)g(0)p 28813 28068 V 31178 28068 V 15162 28112
16061 45 v 15162 31331 45 3219 v 15870 30054 a Fx(P)181
b FB(\()p Fx(X)474 b FB(=)368 b(1\))h(=)g Fx(p)p 28813
31331 V 31178 31331 V 15162 31375 16061 45 v 15162 34649
45 3275 v 15870 33372 a(V)289 b FB(\()p Fx(X)104 b FB(\))370
b(=)e Fx(\033)21649 32890 y FG(2)p 28813 34649 V 1 0 0
TeXcolorrgb 29521 33344 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 31178 34649 V 15162 34694
16061 45 v 47992 4800 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 6792 a FD(WS)h(3.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 38722 54804 45 v -2331 44023 a FI(WS)717
b(3.1)g(-)g(4)h(Erw)-60 b(artungsw)g(ert)717 b(-)g(O)-60
b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray -1391 47331 a FH(79.)p
0 TeXcolorgray 651 w(In)428 b(der)g(nac)-36 b(hstehenden)427
b(T)-108 b(ab)36 b(elle)429 b(ist)f(die)h(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eitsv)g(erteilung)428 b(einer)h(diskre-)921
49323 y(ten)k(Zufallsv)-72 b(ariablen)435 b Fx(X)539
b FH(dargestellt.)p 0 TeXcolorgray 0 TeXcolorgray 11152
51728 24513 45 v 11152 53720 45 1992 v 11861 53123 a
Fx(a)12544 53322 y Fr(i)13353 53123 y FH(mit)433 b Fx(i)369
b Fw(2)g(f)p FB(1)p Fx(;)p FB(2)p Fx(;)p FB(3)p Fx(;)p
FB(4)p Fw(g)p 23482 53720 V 1881 w FH(1)p 26517 53720
V 2384 w(2)p 29552 53720 V 2385 w(3)p 32586 53720 V 2384
w(4)p 35621 53720 V 11152 53765 24513 45 v 11152 55756
45 1992 v 14253 55159 a Fx(P)181 b FB(\()p Fx(X)474 b
FB(=)368 b Fx(a)19394 55358 y FG(1)19920 55159 y FB(\))p
23482 55756 V 3765 w FH(0,1)p 26517 55756 V 1373 w(0,3)p
29552 55756 V 1374 w(0,5)p 32586 55756 V 1374 w(0,1)p
35621 55756 V 11152 55801 24513 45 v 921 58900 a(Bestimme)434
b(den)f(Erw)-36 b(artungsw)g(ert)433 b Fx(E)78 b FB(\()p
Fx(X)104 b FB(\))433 b FH(der)g(Zufallsv)-72 b(ariablen)435
b Fx(X)104 b FH(.)921 63438 y Fx(E)78 b FB(\()p Fx(X)104
b FB(\))369 b(=)p 5538 63438 15749 34 v 1 0 0 TeXcolorrgb
921 65983 a Fx(E)78 b FB(\()p Fx(X)104 b FB(\))369 b(=)g(2)p
Fx(;)p FB(6)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 47331 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 49323
a FD(WS)g(3.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 69790 54804 45 v 0 TeXcolorgray 24421
81281 a FH(66)p 0 TeXcolorgray eop end
%%Page: 67 67
TeXDict begin 67 66 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)480 b(3.1)g(-)g(5)h(Erw)-60
b(artungsw)g(ert)480 b(-)g(O)-60 b(A)481 b(-)f(BIFIE)h(-)g(K)-60
b(omp)60 b(etenzc)-60 b(hec)g(k)-2385 4515 y(2016)p 0
TeXcolorgray -1391 7823 a FH(80.)p 0 TeXcolorgray 651
w(Die)949 b(nac)-36 b(hstehende)946 b(Abbildung)h(zeigt)i(die)f(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eitsv)g(erteilung)948 b(einer)921
9815 y(Zufallsv)-72 b(ariablen)435 b(X,)f(die)f(die)h(W)-108
b(erte)433 b Fx(k)414 b FB(=)369 b(1)p Fx(;)p FB(2)p
Fx(;)p FB(3)p Fx(;)p FB(4)p Fx(;)p FB(5)436 b FH(annehmen)d(kann.)921
43718 y
 currentpoint currentpoint translate 1.56857 1.56857 scale neg exch
neg exch translate
 921 43718 a 1788 43718 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 199.40451 a add def
/d 0.0 a add neg def /h 179.96141 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1788 43718 a 5947 40613
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 161.82932 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 14.22723
T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 1 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 151.91069 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 569.05487
0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 161.82932
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true
and or { /viceversa 0.0  161.82932  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 151.91069  def
/dT 37293580 abs 65536 div viceversa { neg } if def /DT 20. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 151.91069 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 161.82932 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 151.91069
 0 0.0  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false
and or { /viceversa 0.0  151.91069  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 161.82932  def
/dT 932396 abs 65536 div viceversa { neg } if def /DT 0.05 abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 284.52756  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 284.52756  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 151.91069 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 161.82932 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 4702 40898 a FG(0)3500 39324
y(0)p Fr(:)p FG(05)3500 37749 y(0)p Fr(:)p FG(10)3500
36174 y(0)p Fr(:)p FG(15)3500 34599 y(0)p Fr(:)p FG(20)3500
33024 y(0)p Fr(:)p FG(25)3500 31449 y(0)p Fr(:)p FG(30)3500
29874 y(0)p Fr(:)p FG(35)3500 28299 y(0)p Fr(:)p FG(40)3500
26724 y(0)p Fr(:)p FG(45)3500 25149 y(0)p Fr(:)p FG(50)5947
40613 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 21.33955 0.0 21.33955
28.45448 7.11317 28.45448 7.11317 0.0  /Lineto /lineto load def 0 
setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 49.7923 0.0 49.7923
85.35913 35.56592 85.35913 35.56592 0.0  /Lineto /lineto load def 0
 setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 78.24504 0.0 78.24504
113.80928 64.01866 113.80928 64.01866 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 106.69778 0.0 106.69778
28.45448 92.4714 28.45448 92.4714 0.0  /Lineto /lineto load def 0 
setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 135.15053 0.0 135.15053
28.45448 120.92415 28.45448 120.92415 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 7.11317 28.45448 7.11317 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 21.33955 28.45448 7.11317 28.45448
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 21.33955 0.0 21.33955 28.45448
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 7.11317 0.0 21.33955 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 35.56592 85.35913 35.56592
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 49.7923 85.35913 35.56592 85.35913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 49.7923 0.0 49.7923 85.35913
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 35.56592 0.0 49.7923 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 64.01866 113.80928 64.01866
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 78.24504 113.80928 64.01866
113.80928   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 78.24504 0.0 78.24504 113.80928
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 64.01866 0.0 78.24504 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 92.4714 28.45448 92.4714 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 106.69778 28.45448 92.4714
28.45448   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 106.69778 0.0 106.69778 28.45448
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 92.4714 0.0 106.69778 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 120.92415 28.45448 120.92415
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 135.15053 28.45448 120.92415
28.45448   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 135.15053 0.0 135.15053 28.45448
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 120.92415 0.0 135.15053 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 5947 40613 a
tx@Dict begin  { 12.16283 -4.83647 } PutCoor PutBegin  end
 5947
40613 a 571 x FA(1)5947 40613 y
tx@Dict begin  PutEnd  end
 5947 40613 a 5947 40613
a
tx@Dict begin  { 39.74466 -4.83647 } PutCoor PutBegin  end
 5947 40613 a 571 x FA(2)5947 40613 y
tx@Dict begin  PutEnd  end
 5947 40613 a 5947
40613 a
tx@Dict begin  { 69.1356 -4.83647 } PutCoor PutBegin  end
 5947 40613 a 571 x FA(3)5947 40613 y
tx@Dict begin  PutEnd  end
 5947 40613
a 5947 40613 a
tx@Dict begin  { 98.07417 -4.83647 } PutCoor PutBegin  end
 5947 40613 a 571 x FA(4)5947 40613 y
tx@Dict begin  PutEnd  end
 5947
40613 a 5947 40613 a
tx@Dict begin  { 126.56035 -4.83647 } PutCoor PutBegin  end
 5947 40613 a 571 x FA(5)5947 40613
y
tx@Dict begin  PutEnd  end
 5947 40613 a 5947 40613 a
tx@Dict begin  { 73.20494 -19.06372 } PutCoor PutBegin  end
 5947 40613 a 610 x FA(k)5947
40613 y
tx@Dict begin  PutEnd  end
 5947 40613 a 5947 40613 a
tx@Dict begin  { -34.99457 93.03932 } PutCoor PutBegin  end
 5947 40613 a 6612 43918
a
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 6612 43918 a FA(P\(X=k\))9917 43918 y
 currentpoint grestore moveto
 9917 43918 a
5947 40613 a
tx@Dict begin  PutEnd  end
 5947 40613 a 23861 43718 a
currentpoint initclip moveto
 23861 43718 a
921 43718 a
 currentpoint currentpoint translate 1 1.56857 div 1 1.56857 div scale
neg exch neg exch translate
 921 43718 a 4538 x FH(Ermittle)g(den)g(Erw)-36
b(artungsw)g(ert)433 b Fx(E)78 b FB(\()p Fx(X)104 b FB(\))p
FH(.)p 1 0 0 TeXcolorrgb 921 52793 a Fx(E)78 b FB(\()p
Fx(X)104 b FB(\))369 b(=)g(2)p Fx(;)p FB(8)434 b FH(-)f(T)-108
b(oleranzin)-36 b(terv)-72 b(all:)435 b FB([)8 b(2)p
Fx(;)p FB(65;)221 b(2)p Fx(;)p FB(95])p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7823 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 9815 a FD(WS)369 b(3.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 56600
54804 45 v 0 TeXcolorgray 24421 81281 a FH(67)p 0 TeXcolorgray
eop end
%%Page: 68 68
TeXDict begin 68 67 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)623 b(3.1)g(-)h(6)f(Zufallsv)-120
b(ariable)622 b(-)h(O)-60 b(A)624 b(-)g(Matura)f(2015/16)h(-)f(Neb)60
b(en-)-2331 4622 y(termin)717 b(1)p 0 TeXcolorgray -1391
7929 a FH(81.)p 0 TeXcolorgray 651 w(Nac)-36 b(hstehend)598
b(sind)g(die)h(sec)-36 b(hs)599 b(Seiten\035\344c)-36
b(hen)597 b(eines)i(fairen)h(Spielw\374rfels)f(abgebildet.)873
9921 y(A)-36 b(uf)342 b(jeder)g(Seiten\035\344c)-36 b(he)341
b(sind)g(drei)h(Sym)-36 b(b)36 b(ole)343 b(dargestellt.)g(\(Ein)f(W)-36
b(\374rfel)342 b(ist)g(\022fair\020,)i(w)-36 b(enn)921
11913 y(die)599 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)599
b(nac)-36 b(h)598 b(einem)g(W)-108 b(urf)599 b(nac)-36
b(h)598 b(ob)36 b(en)598 b(zu)g(zeigen,)i(f\374r)e(alle)i(sec)-36
b(hs)921 13905 y(Seiten\035\344c)g(hen)432 b(gleic)-36
b(h)434 b(gro\377)h(ist.\))921 28300 y
 currentpoint currentpoint translate 2.02617 2.02617 scale neg exch
neg exch translate
 921 28300 a 1355
28300 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 51.1347 a add def
/d 0.0 a add neg def /h 50.85945 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1355 28300 a -4425 38817 a
tx@Dict begin  { 58.25917 140.2718 } PutCoor PutBegin  end
 -4425 38817 a 920
x Fg(F)-4425 38817 y
tx@Dict begin  PutEnd  end
 -4425 38817 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 142.26372 56.90549 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 99.5846 99.5846 99.5846  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 99.5846 56.90549 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 99.5846 99.5846 142.26372 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
-4425 38817 a
tx@Dict begin  { 73.10464 126.04544 } PutCoor PutBegin  end
 -4425 38817 a 928 x FB(\001)-4425 38817
y
tx@Dict begin  PutEnd  end
 -4425 38817 a -4425 38817 a
tx@Dict begin  { 87.35013 110.39677 } PutCoor PutBegin  end
 -4425 38817 a 1021 x Ff(\016)-4425
38817 y
tx@Dict begin  PutEnd  end
 -4425 38817 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 71.13185 99.5846 71.13185 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 99.5846 85.35823 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 128.03734 56.90549 128.03734
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 113.81097 56.90549 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
7015 28300 a
currentpoint initclip moveto
 7015 28300 a 921 28300 a
 currentpoint currentpoint translate 1 2.02617 div 1 2.02617 div scale
neg exch neg exch translate
 921 28300 a 31504
28300 a
 currentpoint currentpoint translate 1.88956 1.88956 scale neg exch
neg exch translate
 31504 28300 a 31937 28300 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 51.1347 a add def
/d 0.0 a add neg def /h 50.85945 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 31937 28300 a 26158
38817 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 142.26372 56.90549 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 99.5846 99.5846 99.5846  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 99.5846 56.90549 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 99.5846 99.5846 142.26372 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 26158 38817 a
tx@Dict begin  { 58.89738 139.41826 } PutCoor PutBegin  end

26158 38817 a 1021 x Ff(\016)26158 38817 y
tx@Dict begin  PutEnd  end
 26158 38817
a 26158 38817 a
tx@Dict begin  { 73.10464 126.04544 } PutCoor PutBegin  end
 26158 38817 a 920 x Fg(F)26158 38817
y
tx@Dict begin  PutEnd  end
 26158 38817 a 26158 38817 a
tx@Dict begin  { 87.35013 110.39677 } PutCoor PutBegin  end
 26158 38817 a 1021 x Ff(\016)26158
38817 y
tx@Dict begin  PutEnd  end
 26158 38817 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 71.13185 99.5846 71.13185 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 99.5846 85.35823 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 128.03734 56.90549 128.03734
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 113.81097 56.90549 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
37598 28300 a
currentpoint initclip moveto
 37598 28300 a 31504 28300 a
 currentpoint currentpoint translate 1 1.88956 div 1 1.88956 div scale
neg exch neg exch translate
 31504 28300
a 921 39049 a
 currentpoint currentpoint translate 1.88956 1.88956 scale neg exch
neg exch translate
 921 39049 a 1355 39049 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 51.1347 a add def
/d 0.0 a add neg def /h 50.85945 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1355 39049 a -4425
49566 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 142.26372 56.90549 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 99.5846 99.5846 99.5846  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 99.5846 56.90549 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 99.5846 99.5846 142.26372 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -4425 49566 a
tx@Dict begin  { 58.89738 139.41826 } PutCoor PutBegin  end

-4425 49566 a 928 x FB(\001)-4425 49566 y
tx@Dict begin  PutEnd  end
 -4425 49566
a -4425 49566 a
tx@Dict begin  { 73.10464 124.62315 } PutCoor PutBegin  end
 -4425 49566 a 1020 x Ff(\016)-4425 49566
y
tx@Dict begin  PutEnd  end
 -4425 49566 a -4425 49566 a
tx@Dict begin  { 86.78094 111.81906 } PutCoor PutBegin  end
 -4425 49566 a 920 x Fg(F)-4425
49566 y
tx@Dict begin  PutEnd  end
 -4425 49566 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 71.13185 99.5846 71.13185 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 99.5846 85.35823 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 128.03734 56.90549 128.03734
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 113.81097 56.90549 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
7015 39049 a
currentpoint initclip moveto
 7015 39049 a 921 39049 a
 currentpoint currentpoint translate 1 1.88956 div 1 1.88956 div scale
neg exch neg exch translate
 921 39049 a 921
51120 a
 currentpoint currentpoint translate 2.02617 2.02617 scale neg exch
neg exch translate
 921 51120 a 1355 51120 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 51.1347 a add def
/d 0.0 a add neg def /h 50.85945 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1355 51120 a -4425 61637
a
tx@Dict begin  { 58.25917 140.2718 } PutCoor PutBegin  end
 -4425 61637 a 920 x Fg(F)-4425 61637 y
tx@Dict begin  PutEnd  end
 -4425 61637
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 142.26372 56.90549 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 99.5846 99.5846 99.5846  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 99.5846 56.90549 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 99.5846 99.5846 142.26372 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -4425 61637 a
tx@Dict begin  { 73.10464 124.62315 } PutCoor PutBegin  end

-4425 61637 a 1021 x Ff(\016)-4425 61637 y
tx@Dict begin  PutEnd  end
 -4425 61637
a -4425 61637 a
tx@Dict begin  { 86.78094 111.81906 } PutCoor PutBegin  end
 -4425 61637 a 920 x Fg(F)-4425 61637
y
tx@Dict begin  PutEnd  end
 -4425 61637 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 71.13185 99.5846 71.13185 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 99.5846 85.35823 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 128.03734 56.90549 128.03734
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 113.81097 56.90549 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
7015 51120 a
currentpoint initclip moveto
 7015 51120 a 921 51120 a
 currentpoint currentpoint translate 1 2.02617 div 1 2.02617 div scale
neg exch neg exch translate
 921 51120 a 31504
51120 a
 currentpoint currentpoint translate 1.88956 1.88956 scale neg exch
neg exch translate
 31504 51120 a 31937 51120 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 51.1347 a add def
/d 0.0 a add neg def /h 50.85945 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 31937 51120 a 26158
61637 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 142.26372 56.90549 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 99.5846 99.5846 99.5846  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 99.5846 56.90549 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 99.5846 99.5846 142.26372 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 26158 61637 a
tx@Dict begin  { 58.89738 139.41826 } PutCoor PutBegin  end

26158 61637 a 928 x FB(\001)26158 61637 y
tx@Dict begin  PutEnd  end
 26158 61637
a 26158 61637 a
tx@Dict begin  { 73.10464 124.62315 } PutCoor PutBegin  end
 26158 61637 a 1021 x Ff(\016)26158 61637
y
tx@Dict begin  PutEnd  end
 26158 61637 a 26158 61637 a
tx@Dict begin  { 87.63449 110.39677 } PutCoor PutBegin  end
 26158 61637 a 928 x FB(\001)26158
61637 y
tx@Dict begin  PutEnd  end
 26158 61637 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 71.13185 99.5846 71.13185 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 99.5846 85.35823 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 128.03734 56.90549 128.03734
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 113.81097 56.90549 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
37598 51120 a
currentpoint initclip moveto
 37598 51120 a 31504 51120 a
 currentpoint currentpoint translate 1 1.88956 div 1 1.88956 div scale
neg exch neg exch translate
 31504 51120
a 921 61869 a
 currentpoint currentpoint translate 1.88956 1.88956 scale neg exch
neg exch translate
 921 61869 a 1355 61869 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 51.1347 a add def
/d 0.0 a add neg def /h 50.85945 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1355 61869 a -4425
72386 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 142.26372 56.90549 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 99.5846 99.5846 99.5846  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 99.5846 56.90549 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 99.5846 99.5846 142.26372 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -4425 72386 a
tx@Dict begin  { 58.89738 139.41826 } PutCoor PutBegin  end

-4425 72386 a 1021 x Ff(\016)-4425 72386 y
tx@Dict begin  PutEnd  end
 -4425 72386
a -4425 72386 a
tx@Dict begin  { 73.10464 126.04544 } PutCoor PutBegin  end
 -4425 72386 a 920 x Fg(F)-4425 72386
y
tx@Dict begin  PutEnd  end
 -4425 72386 a -4425 72386 a
tx@Dict begin  { 86.78094 111.81906 } PutCoor PutBegin  end
 -4425 72386 a 920 x Fg(F)-4425
72386 y
tx@Dict begin  PutEnd  end
 -4425 72386 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 71.13185 99.5846 71.13185 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 99.5846 85.35823 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 128.03734 56.90549 128.03734
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 99.5846 113.81097 56.90549 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
7015 61869 a
currentpoint initclip moveto
 7015 61869 a 921 61869 a
 currentpoint currentpoint translate 1 1.88956 div 1 1.88956 div scale
neg exch neg exch translate
 921 61869 a 4537
x FH(Bei)475 b(einem)g(Zufallsv)-36 b(ersuc)g(h)475 b(wird)f(der)h(W)
-36 b(\374rfel)475 b(einmal)g(gew)-36 b(orfen.)476 b(Die)f(Zufallsv)-72
b(ariable)921 68398 y Fx(X)538 b FH(b)36 b(esc)-36 b(hreibt)433
b(die)g(Anzahl)h(der)f(Sterne)g(auf)g(der)h(nac)-36 b(h)433
b(ob)36 b(en)433 b(zeigenden)g(Seiten\035\344c)-36 b(he.)921
72936 y(Gib)456 b(die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eitsv)g
(erteilung)457 b(v)-36 b(on)457 b Fx(X)562 b FH(an,)457
b(d.h.)g(die)f(m\366glic)-36 b(hen)458 b(W)-108 b(erte)456
b(v)-36 b(on)921 74927 y Fx(X)538 b FH(sam)-36 b(t)434
b(zugeh\366riger)g(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eiten.)p
1 0 0 TeXcolorrgb 921 77473 a(Die)434 b(Zufallsv)-72
b(ariable)436 b Fx(X)538 b FH(kann)434 b(die)f(W)-108
b(erte)434 b Fx(x)23463 77672 y FG(1)24357 77473 y FB(=)369
b(0)p FH(,)434 b Fx(x)27922 77672 y FG(2)28817 77473
y FB(=)369 b(1)434 b FH(und)e Fx(x)34622 77672 y FG(3)35517
77473 y FB(=)369 b(2)434 b FH(annehmen.)921 80018 y(Es)g(gilt:)921
82564 y Fx(P)181 b FB(\()p Fx(X)474 b FB(=)368 b(0\))h(=)8418
82041 y FG(1)p 8418 82254 471 45 v 8418 83022 a(6)9021
82564 y FH(,)434 b Fx(P)181 b FB(\()p Fx(X)474 b FB(=)368
b(1\))h(=)17313 82041 y FG(3)p 17313 82254 V 17313 83022
a(6)17916 82564 y FH(,)434 b Fx(P)181 b FB(\()p Fx(X)474
b FB(=)368 b(2\))i(=)26208 82041 y FG(2)p 26208 82254
V 26208 83022 a(6)921 87101 y FH(L\366sungssc)-36 b(hl\374ssel:)921
89646 y(Ein)472 b(Punkt)f(f\374r)h(die)g(k)-36 b(orrekte)472
b(Angab)36 b(e)472 b(aller)h(m\366glic)-36 b(hen)472
b(W)-108 b(erte,)472 b(die)g(die)g(Zufallsv)-72 b(aria-)921
91638 y(ble)416 b Fx(X)521 b FH(annehmen)415 b(kann,)i(und)e(der)h(jew)
-36 b(eils)417 b(zugeh\366rigen)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit.)416 b(Andere)921 93630 y(Sc)-36
b(hreib)g(w)g(eisen)431 b(der)h(Ergebnisse)g(sind)g(eb)36
b(enfalls)433 b(als)g(ric)-36 b(h)g(tig)432 b(zu)g(w)-36
b(erten.)432 b(Eine)h(k)-36 b(orrekte)921 95622 y(gra\034sc)g(he)500
b(Darstellung)h(der)f(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eitsv)g
(erteilung)501 b(ist)f(eb)36 b(enfalls)501 b(als)g(ric)-36
b(h)g(tig)921 97614 y(zu)433 b(w)-36 b(erten.)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7929
a FE(___/1)p 1 0 0 TeXcolorrgb 47905 9921 a FD(WS)369
b(3.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
0 TeXcolorgray 24421 81281 a FH(68)p 0 TeXcolorgray eop
end
%%Page: 69 69
TeXDict begin 69 68 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 54804 45 v -2331 6795 a FI(WS)717
b(3.2)g(-)g(1)h(Binomialv)-60 b(erteilung)714 b(-)k(MC)f(-)h(BIFIE)p
0 TeXcolorgray -1391 10102 a FH(82.)p 0 TeXcolorgray
651 w(Die)460 b(Zufallsv)-72 b(ariable)462 b Fx(X)564
b FH(sei)460 b(binomialv)-36 b(erteilt)461 b(mit)f Fx(n)414
b FB(=)f(25)460 b FH(und)f Fx(p)413 b FB(=)g(0)p Fx(;)p
FB(15)p FH(.)461 b(Es)f(soll)g(die)855 12094 y(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit)308 b(b)36 b(estimm)-36
b(t)308 b(w)-36 b(erden,)308 b(so)36 b(dass)309 b(die)g(Zufallsv)-72
b(ariable)310 b Fx(X)413 b FH(h\366)36 b(c)-36 b(hstens)308
b(den)855 14086 y(W)-108 b(ert)433 b(2)h(annimm)-36 b(t.)921
18623 y(Kreuze)433 b(den)g(zutre\033enden)f(T)-108 b(erm)433
b(an.)p 4866 19332 36652 45 v 4866 26674 45 7343 v 5575
21054 a Fj(0)5575 23047 y(@)6543 22405 y FB(25)6869 24397
y(2)7844 21054 y Fj(1)7844 23047 y(A)9108 23335 y Fw(\001)295
b FB(0)p Fx(;)p FB(15)12083 22853 y FG(2)12905 23335
y Fw(\001)g FB(0)p Fx(;)p FB(85)15880 22853 y FG(23)p
39108 26674 V 41473 26674 V 4866 26718 36652 45 v 4866
34060 45 7343 v 5575 30721 a FB(0)p Fx(;)p FB(85)7886
30239 y FG(25)9179 30721 y FB(+)10485 28441 y Fj(0)10485
30434 y(@)11454 29792 y FB(25)11779 31784 y(1)12755 28441
y Fj(1)12755 30434 y(A)14018 30721 y Fw(\001)h FB(0)p
Fx(;)p FB(15)16994 30239 y FG(1)17816 30721 y Fw(\001)f
FB(0)p Fx(;)p FB(85)20791 30239 y FG(24)22084 30721 y
FB(+)23391 28441 y Fj(0)23391 30434 y(@)24359 29792 y
FB(25)24684 31784 y(2)25660 28441 y Fj(1)25660 30434
y(A)26924 30721 y Fw(\001)g FB(0)p Fx(;)p FB(15)29899
30239 y FG(2)30721 30721 y Fw(\001)g FB(0)p Fx(;)p FB(85)33696
30239 y FG(23)p 39108 34060 V 1 0 0 TeXcolorrgb 39816
30721 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 41473 34060 V 4866 34105 36652 45 v 4866
41447 45 7343 v 5575 35828 a Fj(0)5575 37820 y(@)6543
37178 y FB(25)6869 39170 y(1)7844 35828 y Fj(1)7844 37820
y(A)9108 38108 y Fw(\001)g FB(0)p Fx(;)p FB(15)12083
37626 y FG(1)12905 38108 y Fw(\001)g FB(0)p Fx(;)p FB(85)15880
37626 y FG(24)17173 38108 y FB(+)18480 35828 y Fj(0)18480
37820 y(@)19449 37178 y FB(25)19774 39170 y(2)20749 35828
y Fj(1)20749 37820 y(A)22013 38108 y Fw(\001)g FB(0)p
Fx(;)p FB(15)24988 37626 y FG(2)25811 38108 y Fw(\001)g
FB(0)p Fx(;)p FB(85)28786 37626 y FG(23)p 39108 41447
V 41473 41447 V 4866 41491 36652 45 v 4866 48834 45 7343
v 5575 45494 a FB(1)g Fw(\000)7849 43214 y Fj(0)7849
45207 y(@)8817 44565 y FB(25)9142 46557 y(2)10118 43214
y Fj(1)10118 45207 y(A)11382 45494 y Fw(\001)g FB(0)p
Fx(;)p FB(15)14357 45012 y FG(2)15179 45494 y Fw(\001)g
FB(0)p Fx(;)p FB(85)18154 45012 y FG(23)p 39108 48834
V 41473 48834 V 4866 48878 36652 45 v 4866 56220 45 7343
v 5575 52881 a FB(1)g Fw(\000)7849 50601 y Fj(2)7849
52593 y(4)8587 52881 y FB(0)p Fx(;)p FB(85)10898 52399
y FG(25)12190 52881 y FB(+)13497 50601 y Fj(0)13497 52593
y(@)14466 51951 y FB(25)14791 53943 y(1)15766 50601 y
Fj(1)15766 52593 y(A)17030 52881 y Fw(\001)g FB(0)p Fx(;)p
FB(15)20005 52399 y FG(1)20828 52881 y Fw(\001)g FB(0)p
Fx(;)p FB(85)23803 52399 y FG(24)25096 52881 y FB(+)26403
50601 y Fj(0)26403 52593 y(@)27371 51951 y FB(25)27696
53943 y(2)28672 50601 y Fj(1)28672 52593 y(A)29936 52881
y Fw(\001)g FB(0)p Fx(;)p FB(15)32911 52399 y FG(2)33733
52881 y Fw(\001)g FB(0)p Fx(;)p FB(85)36708 52399 y FG(23)37706
50601 y Fj(3)37706 52593 y(5)p 39108 56220 V 41473 56220
V 4866 56264 36652 45 v 4866 63607 45 7343 v 5575 57987
a(0)5575 59980 y(@)6543 59338 y FB(25)6869 61330 y(2)7844
57987 y Fj(1)7844 59980 y(A)9108 60268 y Fw(\001)g FB(0)p
Fx(;)p FB(85)12083 59786 y FG(2)12905 60268 y Fw(\001)g
FB(0)p Fx(;)p FB(15)15880 59786 y FG(23)p 39108 63607
V 41473 63607 V 4866 63651 36652 45 v 47992 10102 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 12094 a FD(WS)369 b(3.2)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 67679
54804 45 v 0 TeXcolorgray 24421 81281 a FH(69)p 0 TeXcolorgray
eop end
%%Page: 70 70
TeXDict begin 70 69 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)523 b(3.2)h(-)h(2)f(Graphen)f(einer)g
(Binomialv)-60 b(erteilung)521 b(-)k(MC)f(-)h(BIFIE)p
0 TeXcolorgray -1391 4800 a FH(83.)p 0 TeXcolorgray 651
w(In)433 b(den)g(un)-36 b(tenstehenden)431 b(Gra\034k)-36
b(en)433 b(sind)g(Binomialv)-36 b(erteilungen)435 b(dargestellt.)921
9338 y(Kreuze)360 b(diejenige)g(Gra\034k)g(an,)g(die)g(einer)f
(Binomialv)-36 b(erteilung)362 b(mit)d Fx(n)370 b FB(=)e(20)361
b FH(und)d Fx(p)369 b FB(=)g(0)p Fx(;)p FB(9)921 11330
y FH(zuzuordnen)432 b(ist.)p 0 TeXcolorgray 0 TeXcolorgray
3296 16984 19912 45 v 3296 29983 45 13000 v 4005 29038
a
 currentpoint currentpoint translate 0.73485 0.73485 scale neg exch
neg exch translate
 4005 29038 a 4438 29038 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.56885 a add def
/d 0.0 a add neg def /h 136.57199 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 4438 29038 a 6517 27463 a
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 187.78989  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 187.78989  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 122.34476  def /dT 1118818 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 8.5359  mul cntTick add
def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 8.5359  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 122.34476  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 122.34476  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 187.78989  def /dT 1864793 abs 65536 div viceversa
{ neg } if def /DT 0.1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 284.52756  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 284.52756  mul cntTick add def x abs MinValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
exch moveto cntTick tickend exch lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
5272 27749 a FG(0)4540 24599 y(0)p Fr(:)p FG(1)4540 21449
y(0)p Fr(:)p FG(2)4540 18299 y(0)p Fr(:)p FG(3)4540 15150
y(0)p Fr(:)p FG(4)6282 28809 y(0)1420 b(2)f(4)h(6)g(8)1185
b(10)949 b(12)h(14)g(16)g(18)g(20)6517 27463 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 6517 27463
a 6517 27463 a
tx@Dict begin  { 187.78989 122.34476 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 6517 27463 a 6517 27463 a
tx@Dict begin  { 5.0 6.51384 8.33331 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 6517 27463 a
6156 27925 a Fx(k)6517 27463 y
tx@Dict begin  PutEnd  end
 6517 27463 a 6517 27463
a
tx@Dict begin  PutEnd  end
 6517 27463 a 6517 27463 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 6517 27463 a 6517 27463 a
tx@Dict begin  { 0.0 0.0 pop 187.78989 122.34476 exch pop } PutCoor
PutBegin  end

6517 27463 a 6517 27463 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 6517 27463 a 3675 27795 a Fx(P)181
b FB(\()p Fx(X)473 b FB(=)369 b Fx(k)45 b FB(\))6517
27463 y
tx@Dict begin  PutEnd  end
 6517 27463 a 6517 27463 a
tx@Dict begin  PutEnd  end
 6517 27463 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 0.0 0.0
0.0 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 8.5359 0.0
8.5359 76.8714 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 17.07181
0.0 17.07181 81.1435 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 25.60771
0.0 25.60771 54.09566 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 34.14362
0.0 34.14362 25.54565 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 42.67952
0.0 42.67952 9.0825 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 51.21542
0.0 51.21542 2.52243 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 59.75133
0.0 59.75133 0.56006 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 68.28723
0.0 68.28723 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 76.82314
0.0 76.82314 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 85.35904
0.0 85.35904 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 93.89494
0.0 93.89494 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 102.43085
0.0 102.43085 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 110.96675
0.0 110.96675 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 119.50266
0.0 119.50266 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 128.03856
0.0 128.03856 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 136.57446
0.0 136.57446 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 145.11037
0.0 145.11037 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 153.64627
0.0 153.64627 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 162.18217
0.0 162.18217 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 27305 29038 a
currentpoint initclip moveto

27305 29038 a 4005 29038 a
 currentpoint currentpoint translate 1 0.73485 div 1 0.73485 div scale
neg exch neg exch translate
 4005 29038 a 21791 29983 45
13000 v 23164 29983 V 3296 30027 19912 45 v 3296 43027
45 13000 v 4005 42082 a
 currentpoint currentpoint translate 0.73485 0.73485 scale neg exch
neg exch translate
 4005 42082 a 4438 42082 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.56885 a add def
/d 0.0 a add neg def /h 136.57199 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 4438
42082 a 6517 40507 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 187.78989  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 187.78989  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 122.34476  def /dT 1118818 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 8.5359  mul cntTick add
def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 8.5359  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 122.34476  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 122.34476  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 187.78989  def /dT 1864793 abs 65536 div viceversa
{ neg } if def /DT 0.1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 284.52756  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 284.52756  mul cntTick add def x abs MinValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
exch moveto cntTick tickend exch lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 5272 40792 a FG(0)4540 37642
y(0)p Fr(:)p FG(1)4540 34493 y(0)p Fr(:)p FG(2)4540 31343
y(0)p Fr(:)p FG(3)4540 28193 y(0)p Fr(:)p FG(4)6282 41852
y(0)1420 b(2)f(4)h(6)g(8)1185 b(10)949 b(12)h(14)g(16)g(18)g(20)6517
40507 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 6517 40507 a 6517 40507 a
tx@Dict begin  { 187.78989 122.34476 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 6517 40507 a 6517 40507
a
tx@Dict begin  { 5.0 6.51384 8.33331 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 6517 40507 a 6156 40968 a Fx(k)6517 40507 y
tx@Dict begin  PutEnd  end
 6517 40507
a 6517 40507 a
tx@Dict begin  PutEnd  end
 6517 40507 a 6517 40507 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 6517 40507 a
6517 40507 a
tx@Dict begin  { 0.0 0.0 pop 187.78989 122.34476 exch pop } PutCoor
PutBegin  end
 6517 40507 a 6517 40507 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 6517 40507 a 3675
40839 a Fx(P)181 b FB(\()p Fx(X)473 b FB(=)369 b Fx(k)45
b FB(\))6517 40507 y
tx@Dict begin  PutEnd  end
 6517 40507 a 6517 40507 a
tx@Dict begin  PutEnd  end
 6517 40507
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 68.28723
0.0 68.28723 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 76.82314
0.0 76.82314 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 85.35904
0.0 85.35904 0.57742 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 93.89494
0.0 93.89494 2.1013 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 102.43085
0.0 102.43085 6.30392 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 110.96675
0.0 110.96675 15.52103 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 119.50266
0.0 119.50266 31.04205 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 128.03856
0.0 128.03856 49.66728 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 136.57446
0.0 136.57446 62.0841 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 145.11037
0.0 145.11037 58.43286 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 153.64627
0.0 153.64627 38.95235 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 162.18217
0.0 162.18217 16.40236 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 3.2822 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 27305 42082 a
currentpoint initclip moveto

27305 42082 a 4005 42082 a
 currentpoint currentpoint translate 1 0.73485 div 1 0.73485 div scale
neg exch neg exch translate
 4005 42082 a 21791 43027 45
13000 v 23164 43027 V 3296 43071 19912 45 v 3296 56070
45 13000 v 4005 55125 a
 currentpoint currentpoint translate 0.73485 0.73485 scale neg exch
neg exch translate
 4005 55125 a 4438 55125 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.56885 a add def
/d 0.0 a add neg def /h 136.57199 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 4438
55125 a 6517 53550 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 187.78989  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 187.78989  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 122.34476  def /dT 1118818 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 8.5359  mul cntTick add
def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 8.5359  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 122.34476  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 122.34476  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 187.78989  def /dT 1864793 abs 65536 div viceversa
{ neg } if def /DT 0.1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 284.52756  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 284.52756  mul cntTick add def x abs MinValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
exch moveto cntTick tickend exch lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 5272 53836 a FG(0)4540 50686
y(0)p Fr(:)p FG(1)4540 47536 y(0)p Fr(:)p FG(2)4540 44386
y(0)p Fr(:)p FG(3)4540 41236 y(0)p Fr(:)p FG(4)6282 54896
y(0)1420 b(2)f(4)h(6)g(8)1185 b(10)949 b(12)h(14)g(16)g(18)g(20)6517
53550 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 6517 53550 a 6517 53550 a
tx@Dict begin  { 187.78989 122.34476 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 6517 53550 a 6517 53550
a
tx@Dict begin  { 5.0 6.51384 8.33331 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 6517 53550 a 6156 54011 a Fx(k)6517 53550 y
tx@Dict begin  PutEnd  end
 6517 53550
a 6517 53550 a
tx@Dict begin  PutEnd  end
 6517 53550 a 6517 53550 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 6517 53550 a
6517 53550 a
tx@Dict begin  { 0.0 0.0 pop 187.78989 122.34476 exch pop } PutCoor
PutBegin  end
 6517 53550 a 6517 53550 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 6517 53550 a 3675
53882 a Fx(P)181 b FB(\()p Fx(X)473 b FB(=)369 b Fx(k)45
b FB(\))6517 53550 y
tx@Dict begin  PutEnd  end
 6517 53550 a 6517 53550 a
tx@Dict begin  PutEnd  end
 6517 53550
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 0.0 0.0
0.0 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha  fill
 grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 8.5359 0.0
8.5359 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 17.07181
0.0 17.07181 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 25.60771
0.0 25.60771 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 34.14362
0.0 34.14362 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 42.67952
0.0 42.67952 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 51.21542
0.0 51.21542 1.3806 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 59.75133
0.0 59.75133 4.14183 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 68.28723
0.0 68.28723 10.09843 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 76.82314
0.0 76.82314 20.2012 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 85.35904
0.0 85.35904 33.33005 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 93.89494
0.0 93.89494 45.45163 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 102.43085
0.0 102.43085 51.13039 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 110.96675
0.0 110.96675 47.19695 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 119.50266
0.0 119.50266 35.39662 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 128.03856
0.0 128.03856 21.23883 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 136.57446
0.0 136.57446 9.95515 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 145.11037
0.0 145.11037 3.5123 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 153.64627
0.0 153.64627 0.87698 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 162.18217
0.0 162.18217 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
27305 55125 a
currentpoint initclip moveto
 27305 55125 a 4005 55125 a
 currentpoint currentpoint translate 1 0.73485 div 1 0.73485 div scale
neg exch neg exch translate
 4005 55125 a
21791 56070 45 13000 v 23164 56070 V 3296 56114 19912
45 v 24758 16984 20904 45 v 24758 29983 45 13000 v 25466
29038 a
 currentpoint currentpoint translate 0.73485 0.73485 scale neg exch
neg exch translate
 25466 29038 a 25900 29038 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.56885 a add def
/d 0.0 a add neg def /h 136.57199 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 25900 29038 a 27979
27463 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 187.78989  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 187.78989  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 122.34476  def /dT 1118818 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 8.5359  mul cntTick add
def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 8.5359  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 122.34476  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 122.34476  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 187.78989  def /dT 1864793 abs 65536 div viceversa
{ neg } if def /DT 0.1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 284.52756  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 284.52756  mul cntTick add def x abs MinValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
exch moveto cntTick tickend exch lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
26734 27749 a FG(0)26001 24599 y(0)p Fr(:)p FG(1)26001
21449 y(0)p Fr(:)p FG(2)26001 18299 y(0)p Fr(:)p FG(3)26001
15150 y(0)p Fr(:)p FG(4)27744 28809 y(0)1419 b(2)h(4)g(6)g(8)1184
b(10)950 b(12)g(14)f(16)h(18)g(20)27979 27463 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 27979
27463 a 27979 27463 a
tx@Dict begin  { 187.78989 122.34476 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 27979 27463 a 27979 27463 a
tx@Dict begin  { 5.0 6.51384 8.33331 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 27979
27463 a 27618 27925 a Fx(k)27979 27463 y
tx@Dict begin  PutEnd  end
 27979 27463
a 27979 27463 a
tx@Dict begin  PutEnd  end
 27979 27463 a 27979 27463 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 27979 27463
a 27979 27463 a
tx@Dict begin  { 0.0 0.0 pop 187.78989 122.34476 exch pop } PutCoor
PutBegin  end
 27979 27463 a 27979 27463 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 27979 27463
a 25136 27795 a Fx(P)181 b FB(\()p Fx(X)474 b FB(=)368
b Fx(k)45 b FB(\))27979 27463 y
tx@Dict begin  PutEnd  end
 27979 27463 a 27979 27463
a
tx@Dict begin  PutEnd  end
 27979 27463 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 0.0 0.0
0.0 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha  fill
 grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 8.5359 0.0
8.5359 1.945 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 17.07181
0.0 17.07181 7.92331 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 25.60771
0.0 25.60771 20.37486 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 34.14362
0.0 34.14362 37.1072 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 42.67952
0.0 42.67952 50.8916 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 51.21542
0.0 51.21542 54.52547 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 59.75133
0.0 59.75133 46.73674 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 68.28723
0.0 68.28723 32.54857 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 76.82314
0.0 76.82314 18.59918 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 85.35904
0.0 85.35904 8.76991 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 93.89494
0.0 93.89494 3.4168 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 102.43085
0.0 102.43085 1.0984 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
48766 29038 a
currentpoint initclip moveto
 48766 29038 a 25466 29038 a
 currentpoint currentpoint translate 1 0.73485 div 1 0.73485 div scale
neg exch neg exch translate
 25466 29038
a 43252 29983 45 13000 v 45618 29983 V 24758 30027 20904
45 v 24758 43027 45 13000 v 25466 42082 a
 currentpoint currentpoint translate 0.73485 0.73485 scale neg exch
neg exch translate
 25466 42082
a 25900 42082 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.56885 a add def
/d 0.0 a add neg def /h 136.57199 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 25900 42082 a 27979 40507 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 187.78989  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 187.78989  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 122.34476  def /dT 1118818 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 8.5359  mul cntTick add
def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 8.5359  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 122.34476  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 122.34476  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 187.78989  def /dT 1864793 abs 65536 div viceversa
{ neg } if def /DT 0.1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 284.52756  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 284.52756  mul cntTick add def x abs MinValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
exch moveto cntTick tickend exch lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 26734 40792 a
FG(0)26001 37642 y(0)p Fr(:)p FG(1)26001 34493 y(0)p
Fr(:)p FG(2)26001 31343 y(0)p Fr(:)p FG(3)26001 28193
y(0)p Fr(:)p FG(4)27744 41852 y(0)1419 b(2)h(4)g(6)g(8)1184
b(10)950 b(12)g(14)f(16)h(18)g(20)27979 40507 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 27979
40507 a 27979 40507 a
tx@Dict begin  { 187.78989 122.34476 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 27979 40507 a 27979 40507 a
tx@Dict begin  { 5.0 6.51384 8.33331 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 27979
40507 a 27618 40968 a Fx(k)27979 40507 y
tx@Dict begin  PutEnd  end
 27979 40507
a 27979 40507 a
tx@Dict begin  PutEnd  end
 27979 40507 a 27979 40507 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 27979 40507
a 27979 40507 a
tx@Dict begin  { 0.0 0.0 pop 187.78989 122.34476 exch pop } PutCoor
PutBegin  end
 27979 40507 a 27979 40507 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 27979 40507
a 25136 40839 a Fx(P)181 b FB(\()p Fx(X)474 b FB(=)368
b Fx(k)45 b FB(\))27979 40507 y
tx@Dict begin  PutEnd  end
 27979 40507 a 27979 40507
a
tx@Dict begin  PutEnd  end
 27979 40507 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 102.43085
0.0 102.43085 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 110.96675
0.0 110.96675 0.56006 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 119.50266
0.0 119.50266 2.52243 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 128.03856
0.0 128.03856 9.0825 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 136.57446
0.0 136.57446 25.54565 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 145.11037
0.0 145.11037 54.09566 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 153.64627
0.0 153.64627 81.1435 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 162.18217
0.0 162.18217 76.8714 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 34.59343 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 48766 42082 a
currentpoint initclip moveto
 48766 42082 a
25466 42082 a
 currentpoint currentpoint translate 1 0.73485 div 1 0.73485 div scale
neg exch neg exch translate
 25466 42082 a 43252 43027 45 13000 v 1 0 0
TeXcolorrgb 43961 36859 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45618 43027 V 24758 43071
20904 45 v 24758 56070 45 13000 v 25466 55125 a
 currentpoint currentpoint translate 0.73485 0.73485 scale neg exch
neg exch translate
 25466
55125 a 25900 55125 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 206.56885 a add def
/d 0.0 a add neg def /h 136.57199 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 25900 55125 a 27979 53550 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 187.78989  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 187.78989  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 122.34476  def /dT 1118818 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 8.5359  mul cntTick add
def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 8.5359  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 122.34476  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 122.34476  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 187.78989  def /dT 1864793 abs 65536 div viceversa
{ neg } if def /DT 0.1 abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 284.52756  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 284.52756  mul cntTick add def x abs MinValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto }{ exit }
ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW
subTColor subLSstroke grestore } if showOrigin { gsave cntTick tickstart
exch moveto cntTick tickend exch lineto Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 122.34476
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 187.78989
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 26734 53836 a
FG(0)26001 50686 y(0)p Fr(:)p FG(1)26001 47536 y(0)p
Fr(:)p FG(2)26001 44386 y(0)p Fr(:)p FG(3)26001 41236
y(0)p Fr(:)p FG(4)27744 54896 y(0)1419 b(2)h(4)g(6)g(8)1184
b(10)950 b(12)g(14)f(16)h(18)g(20)27979 53550 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 27979
53550 a 27979 53550 a
tx@Dict begin  { 187.78989 122.34476 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 27979 53550 a 27979 53550 a
tx@Dict begin  { 5.0 6.51384 8.33331 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 27979
53550 a 27618 54011 a Fx(k)27979 53550 y
tx@Dict begin  PutEnd  end
 27979 53550
a 27979 53550 a
tx@Dict begin  PutEnd  end
 27979 53550 a 27979 53550 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 27979 53550
a 27979 53550 a
tx@Dict begin  { 0.0 0.0 pop 187.78989 122.34476 exch pop } PutCoor
PutBegin  end
 27979 53550 a 27979 53550 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 27979 53550
a 25136 53882 a Fx(P)181 b FB(\()p Fx(X)474 b FB(=)368
b Fx(k)45 b FB(\))27979 53550 y
tx@Dict begin  PutEnd  end
 27979 53550 a 27979 53550
a
tx@Dict begin  PutEnd  end
 27979 53550 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 0.0 0.0
0.0 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha  fill
 grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 8.5359 0.0
8.5359 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 17.07181
0.0 17.07181 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 25.60771
0.0 25.60771 0.30824 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 34.14362
0.0 34.14362 1.31548 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 42.67952
0.0 42.67952 4.20695 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 51.21542
0.0 51.21542 10.51956 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 59.75133
0.0 59.75133 21.03479 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 68.28723
0.0 68.28723 34.18098 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 76.82314
0.0 76.82314 45.57755 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 85.35904
0.0 85.35904 50.13182 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 93.89494
0.0 93.89494 45.57755 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 102.43085
0.0 102.43085 34.18098 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 110.96675
0.0 110.96675 21.03479 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 119.50266
0.0 119.50266 10.51956 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 128.03856
0.0 128.03856 4.20695 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 136.57446
0.0 136.57446 1.31548 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 145.11037
0.0 145.11037 0.30824 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 153.64627
0.0 153.64627 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 162.18217
0.0 162.18217 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0 0 1  setrgbcolor   0. true 170.71808
0.0 170.71808 0.0 0 Frame  gsave 0 0 1  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 2.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 48766 55125 a
currentpoint initclip moveto
 48766 55125 a
25466 55125 a
 currentpoint currentpoint translate 1 0.73485 div 1 0.73485 div scale
neg exch neg exch translate
 25466 55125 a 43252 56070 45 13000 v 45618
56070 V 24758 56114 20904 45 v 47992 4800 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a FD(WS)369 b(3.2)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 60142
54804 45 v 0 TeXcolorgray 24421 81281 a FH(70)p 0 TeXcolorgray
eop end
%%Page: 71 71
TeXDict begin 71 70 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)759 b(3.2)h(-)g(3)f(Kennzahlen)f(der)
h(Binomialv)-60 b(erteilung)757 b(-)j(O)-60 b(A)760 b(-)g(BI-)-2331
4515 y(FIE)p 0 TeXcolorgray -1391 7823 a FH(84.)p 0 TeXcolorgray
651 w(A)-36 b(uf)472 b(einer)g(Sortieranlage)i(w)-36
b(erden)471 b(Flasc)-36 b(hen)472 b(v)-36 b(on)473 b(einem)f(Scanner)g
(un)-36 b(tersuc)g(h)g(t)470 b(und)h(es)874 9815 y(wird)311
b(die)g(Art)f(des)g(Kunststo\033es)h(ermittelt.)g(95)217
b(\045)311 b(der)g(Flasc)-36 b(hen)310 b(w)-36 b(erden)310
b(ric)-36 b(h)g(tig)311 b(erkann)-36 b(t)921 11806 y(und)482
b(in)g(die)h(b)36 b(ereitgestellten)483 b(Beh\344lter)g(einsortiert.)g
(Die)g(W)-108 b(erte)483 b(der)f(Zufallsv)-72 b(ariablen)921
13798 y Fx(X)578 b FH(b)36 b(esc)-36 b(hreib)36 b(en)473
b(die)h(Anzahl)f(der)g(falsc)-36 b(hen)474 b(En)-36 b(tsc)g(heidungen)
472 b(b)36 b(ei)474 b(einem)g(Stic)-36 b(hprob)36 b(en-)921
15790 y(umfang)434 b(v)-36 b(on)434 b(500)g(St\374c)-36
b(k.)434 b(V)-108 b(erw)-36 b(enden)432 b(Sie)h(die)h(Binomialv)-36
b(erteilung)435 b(als)f(Mo)36 b(dell.)921 20328 y(Berec)-36
b(hne)390 b(den)f(Erw)-36 b(artungsw)g(ert)390 b(und)f(die)i
(Standardab)-36 b(w)g(eic)g(h)g(ung)388 b(f\374r)j(die)f(Zufallsv)-72
b(aria-)921 22320 y(ble)433 b Fx(X)104 b FH(.)p 1 0 0
TeXcolorrgb 921 26857 a Fx(\026)368 b FB(=)h Fx(n)296
b Fw(\001)f Fx(p)369 b FB(=)f(500)296 b Fw(\001)g FB(0)p
Fx(;)p FB(05)370 b(=)f(25)921 31394 y Fx(\033)417 b FB(=)3458
30060 y Fj(q)p 4564 30060 7287 45 v 4564 31394 a Fx(n)296
b Fw(\001)f Fx(p)g Fw(\001)g FB(\(1)h Fw(\000)f Fx(p)p
FB(\))369 b(=)13600 30440 y Fw(p)p 14707 30440 8495 54
v 954 x FB(500)296 b Fw(\001)g FB(0)p Fx(;)p FB(05)g
Fw(\001)f FB(0)p Fx(;)p FB(95)371 b(=)d(4)p Fx(;)p FB(8734)921
35931 y FH(L\366sungssc)-36 b(hl\374ssel:)353 b(Die)h(A)-36
b(ufgab)36 b(e)353 b(gilt)h(n)-36 b(ur)352 b(dann)g(als)h(ric)-36
b(h)g(tig)353 b(gel\366st,)h(w)-36 b(enn)353 b(b)36 b(eide)353
b(W)-108 b(erte)921 37923 y(ric)-36 b(h)g(tig)433 b(b)36
b(erec)-36 b(hnet)433 b(sind)g(und)f Fx(\033)482 b FH(im)434
b(L\366sungsin)-36 b(terv)-72 b(all)433 b FB([)8 b(4)p
Fx(;)p FB(8)435 b(;)221 b(4)p Fx(;)p FB(9])436 b FH(liegt.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
7823 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 9815 a FD(WS)369
b(3.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 41731 54804 45 v 0 TeXcolorgray 24421 81281 a FH(71)p
0 TeXcolorgray eop end
%%Page: 72 72
TeXDict begin 72 71 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(3.2)g(-)g(4)h(Flasc)-60
b(hensortieranlage)714 b(-)k(O)-60 b(A)718 b(-)f(BIFIE)p
0 TeXcolorgray -1391 4800 a FH(85.)p 0 TeXcolorgray 651
w(A)-36 b(uf)390 b(einer)g(Sortieranlage)h(w)-36 b(erden)389
b(500)i(Flasc)-36 b(hen)390 b(v)-36 b(on)390 b(einem)g(Scanner)f(un)-36
b(tersuc)g(h)g(t)388 b(\025)i(es)874 6792 y(wird)369
b(die)h(Art)f(des)g(Kunststo\033es)f(ermittelt.)i Fx(p)221
b FB(\045)369 b FH(der)g(Flasc)-36 b(hen)369 b(w)-36
b(erden)369 b(ric)-36 b(h)g(tig)369 b(erkann)-36 b(t)921
8784 y(und)338 b(in)h(die)g(b)36 b(ereitgestellten)339
b(Beh\344lter)g(einsortiert.)h(Die)f(W)-108 b(erte)339
b(der)f(binomialv)-36 b(erteilten)921 10776 y(Zufallsv)-72
b(ariablen)426 b Fx(X)530 b FH(b)36 b(esc)-36 b(hreib)36
b(en)424 b(die)g(Anzahl)h Fx(k)470 b FH(der)424 b(falsc)-36
b(hen)425 b(En)-36 b(tsc)g(heidungen)423 b(b)36 b(eim)887
12768 y(v)-36 b(orgegeb)36 b(enen)434 b(Stic)-36 b(hprob)36
b(en)-36 b(umfang.)921 17305 y(Berec)g(hne)319 b(mithilfe)h(der)g
(gegeb)36 b(enen)319 b(T)-108 b(ab)36 b(elle)321 b(die)e(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit)320 b Fx(P)181 b FB(\(22)369
b Fx(<)g(X)474 b Fw(\024)369 b FB(27\))921 19297 y FH(und)432
b(markiere)j(diese)e(in)h(der)f(Gra\034k.)921 58875 y
 currentpoint currentpoint translate 0.95947 0.95947 scale neg exch
neg exch translate

921 58875 a 1788 58875 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 278.24278 a add def
/d 0.0 a add neg def /h 347.62756 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 1788 58875 a 4274 56419 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 255.78207  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 255.78207  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 325.44228  def /dT 745860 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 5.69046  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 5.69046  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 325.44228
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 255.78207
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 325.44228  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 325.44228  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 255.78207  def /dT 1863655 abs 65536 div viceversa
{ neg } if def /DT 0.01 abs viceversa { neg } if def /subTNo 2 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 2845.27559  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 2845.27559  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 325.44228
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 255.78207
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3029 56704 a FG(0)1827
53557 y(0)p Fr(:)p FG(01)1827 50409 y(0)p Fr(:)p FG(02)1827
47261 y(0)p Fr(:)p FG(03)1827 44113 y(0)p Fr(:)p FG(04)1827
40965 y(0)p Fr(:)p FG(05)1827 37817 y(0)p Fr(:)p FG(06)1827
34669 y(0)p Fr(:)p FG(07)1827 31521 y(0)p Fr(:)p FG(08)1827
28374 y(0)p Fr(:)p FG(09)1827 25226 y(0)p Fr(:)p FG(10)1827
22078 y(0)p Fr(:)p FG(11)4039 57765 y(0)790 b(2)g(4)g(6)f(8)555
b(10)320 b(12)g(14)f(16)h(18)g(20)g(22)g(24)g(26)f(28)h(30)g(32)g(34)g
(36)g(38)f(40)h(42)4274 56419 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 4274 56419 a 4274 56419
a
tx@Dict begin  { 255.78207 325.44228 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 4274 56419 a 4274 56419 a
tx@Dict begin  { 5.0 6.51384 8.33331 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 4274 56419 a 3913 56880 a
Fx(k)4274 56419 y
tx@Dict begin  PutEnd  end
 4274 56419 a 4274 56419 a
tx@Dict begin  PutEnd  end
 4274 56419
a 4274 56419 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 4274 56419 a 4274 56419 a
tx@Dict begin  { 0.0 0.0 pop 255.78207 325.44228 exch pop } PutCoor
PutBegin  end
 4274 56419 a
4274 56419 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 4274 56419 a 1432 56751 a Fx(P)181 b FB(\()p
Fx(X)473 b FB(=)369 b Fx(k)45 b FB(\))4274 56419 y
tx@Dict begin  PutEnd  end
 4274
56419 a 4274 56419 a
tx@Dict begin  PutEnd  end
 4274 56419 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true -2.84523 0.0 2.84523 0.0 0 Frame  gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2.84523 0.0 8.53569 0.0 0 Frame  gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 8.53569 0.0 14.22615 0.0 0 Frame  gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 14.22615 0.0 19.91661 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 19.91661 0.0 25.60707 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 25.60707 0.0 31.29753 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 31.29753 0.0 36.98799 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 36.98799 0.0 42.67845 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 42.67845 0.0 48.36891 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 48.36891 0.0 54.05937 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 54.05937 0.0 59.74983 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 59.74983 0.0 65.44029 0.73805 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 65.44029 0.0 71.13075 4.16788 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 71.13075 0.0 76.82121 8.24893 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 76.82121 0.0 82.51167 15.10857 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 82.51167 0.0 88.20213 25.74536 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 88.20213 0.0 93.8926 41.07101 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 93.8926 0.0 99.58305 61.5197 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 99.58305 0.0 105.27351 86.91774 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 105.27351 0.0 110.96397 116.0061 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 110.96397 0.0 116.65443 146.8745 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 116.65443 0.0 122.3449 176.6575 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 122.3449 0.0 128.03535 202.44629 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 128.03535 0.0 133.72581 221.46225 0 Frame  gsave 1.2 SLW
0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 128.03535 0.0 133.72581 221.46225 0 Frame  gsave 1 0 0  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 133.72581 0.0 139.41628 231.66489 0 Frame  gsave 1.2 SLW
0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 133.72581 0.0 139.41628 231.66489 0 Frame  gsave 1 0 0  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 139.41628 0.0 145.10674 232.14246 0 Frame  gsave 1.2 SLW
0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 139.41628 0.0 145.10674 232.14246 0 Frame  gsave 1 0 0  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 145.10674 0.0 150.7972 223.19887 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 145.10674 0.0 150.7972 223.19887 0 Frame  gsave 1 0 0  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 150.7972 0.0 156.48766 206.22343 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 150.7972 0.0 156.48766 206.22343 0 Frame  gsave 1 0 0  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 156.48766 0.0 162.17812 183.3869 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 162.17812 0.0 167.86858 157.07713 0 Frame  gsave 1.2 SLW
0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 167.86858 0.0 173.55904 129.81223 0 Frame  gsave 1.2 SLW
0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 173.55904 0.0 179.2495 103.58928 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 179.2495 0.0 184.93996 79.88445 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 184.93996 0.0 190.63042 59.65283 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 190.63042 0.0 196.32088 43.11154 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 196.32088 0.0 202.01134 30.21715 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 202.01134 0.0 207.7018 20.5355 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 207.7018 0.0 213.39226 13.54561 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 213.39226 0.0 219.08272 8.68309 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 219.08272 0.0 224.77318 5.42693 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 224.77318 0.0 230.46364 3.29956 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 230.46364 0.0 236.1541 1.51953 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 236.1541 0.0 241.84456 0.73805 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 241.84456 0.0 247.53502 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 247.53502 0.0 253.22548 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 253.22548 0.0 258.91594 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 258.91594 0.0 264.6064 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 264.6064 0.0 270.29686 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 270.29686 0.0 275.98732 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 275.98732 0.0 281.67778 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 281.67778 0.0 287.36824 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 287.36824 0.0 293.0587 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 293.0587 0.0 298.74916 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 298.74916 0.0 304.43962 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 304.43962 0.0 310.13008 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 310.13008 0.0 315.82054 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 315.82054 0.0 321.511 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 321.511 0.0 327.20146 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 327.20146 0.0 332.89192 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 332.89192 0.0 338.58238 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 338.58238 0.0 344.27284 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 344.27284 0.0 349.9633 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 349.9633 0.0 355.65376 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 355.65376 0.0 361.34422 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 361.34422 0.0 367.03468 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 367.03468 0.0 372.72514 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 372.72514 0.0 378.4156 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 378.4156 0.0 384.10606 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 384.10606 0.0 389.79652 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 389.79652 0.0 395.48698 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 395.48698 0.0 401.17744 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 401.17744 0.0 406.8679 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 406.8679 0.0 412.55836 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 412.55836 0.0 418.24883 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 418.24883 0.0 423.93929 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 423.93929 0.0 429.62975 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 429.62975 0.0 435.3202 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 435.3202 0.0 441.01067 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 441.01067 0.0 446.70113 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 446.70113 0.0 452.39159 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 452.39159 0.0 458.08205 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 458.08205 0.0 463.7725 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 463.7725 0.0 469.46297 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 469.46297 0.0 475.15343 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 475.15343 0.0 480.84389 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 480.84389 0.0 486.53435 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 486.53435 0.0 492.22481 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 492.22481 0.0 497.91527 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 497.91527 0.0 503.60573 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 503.60573 0.0 509.29619 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 509.29619 0.0 514.98665 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 514.98665 0.0 520.67711 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 520.67711 0.0 526.36757 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 526.36757 0.0 532.05803 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 532.05803 0.0 537.74849 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 537.74849 0.0 543.43895 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 543.43895 0.0 549.12941 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 549.12941 0.0 554.81987 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 554.81987 0.0 560.51033 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 560.51033 0.0 566.20079 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 566.20079 0.0 571.89125 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 571.89125 0.0 577.58171 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 577.58171 0.0 583.27217 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 583.27217 0.0 588.96263 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 588.96263 0.0 594.65309 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 594.65309 0.0 600.34355 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 600.34355 0.0 606.03401 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 606.03401 0.0 611.72447 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 611.72447 0.0 617.41493 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 617.41493 0.0 623.1054 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 623.1054 0.0 628.79585 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 628.79585 0.0 634.48631 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 634.48631 0.0 640.17677 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 640.17677 0.0 645.86723 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 645.86723 0.0 651.5577 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 651.5577 0.0 657.24815 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 657.24815 0.0 662.93861 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 662.93861 0.0 668.62907 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 668.62907 0.0 674.31953 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 674.31953 0.0 680.01 0.0 0 Frame  gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 680.01 0.0 685.70045 0.0 0 Frame  gsave 1.2 SLW 0.12549 0.12549
0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 685.70045 0.0 691.39091 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 691.39091 0.0 697.08138 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 697.08138 0.0 702.77184 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 702.77184 0.0 708.4623 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 708.4623 0.0 714.15276 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 714.15276 0.0 719.84322 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 719.84322 0.0 725.53368 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 725.53368 0.0 731.22414 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 731.22414 0.0 736.9146 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 736.9146 0.0 742.60506 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 742.60506 0.0 748.29552 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 748.29552 0.0 753.98598 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 753.98598 0.0 759.67644 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 759.67644 0.0 765.3669 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 765.3669 0.0 771.05736 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 771.05736 0.0 776.74782 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 776.74782 0.0 782.43828 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 782.43828 0.0 788.12874 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 788.12874 0.0 793.8192 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 793.8192 0.0 799.50966 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 799.50966 0.0 805.20012 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 805.20012 0.0 810.89058 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 810.89058 0.0 816.58104 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 816.58104 0.0 822.2715 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 822.2715 0.0 827.96196 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 827.96196 0.0 833.65242 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 833.65242 0.0 839.34288 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 839.34288 0.0 845.03334 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 845.03334 0.0 850.7238 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 850.7238 0.0 856.41426 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 856.41426 0.0 862.10472 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 862.10472 0.0 867.79518 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 867.79518 0.0 873.48564 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 873.48564 0.0 879.1761 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 879.1761 0.0 884.86656 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 884.86656 0.0 890.55702 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 890.55702 0.0 896.24748 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 896.24748 0.0 901.93794 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 901.93794 0.0 907.6284 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 907.6284 0.0 913.31886 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 913.31886 0.0 919.00932 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 919.00932 0.0 924.69978 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 924.69978 0.0 930.39024 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 930.39024 0.0 936.0807 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 936.0807 0.0 941.77116 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 941.77116 0.0 947.46162 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 947.46162 0.0 953.15208 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 953.15208 0.0 958.84254 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 958.84254 0.0 964.533 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 964.533 0.0 970.22346 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 970.22346 0.0 975.91393 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 975.91393 0.0 981.60439 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 981.60439 0.0 987.29485 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 987.29485 0.0 992.9853 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 992.9853 0.0 998.67577 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 998.67577 0.0 1004.36623 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1004.36623 0.0 1010.05669 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1010.05669 0.0 1015.74715 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1015.74715 0.0 1021.4376 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1021.4376 0.0 1027.12807 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1027.12807 0.0 1032.81853 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1032.81853 0.0 1038.50899 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1038.50899 0.0 1044.19945 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1044.19945 0.0 1049.88991 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1049.88991 0.0 1055.58037 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1055.58037 0.0 1061.27083 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1061.27083 0.0 1066.96129 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1066.96129 0.0 1072.65175 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1072.65175 0.0 1078.34221 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1078.34221 0.0 1084.03267 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1084.03267 0.0 1089.72313 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1089.72313 0.0 1095.41359 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1095.41359 0.0 1101.10405 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1101.10405 0.0 1106.79451 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1106.79451 0.0 1112.48497 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1112.48497 0.0 1118.17543 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1118.17543 0.0 1123.86589 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1123.86589 0.0 1129.55635 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1129.55635 0.0 1135.24681 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1135.24681 0.0 1140.93727 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1140.93727 0.0 1146.62773 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1146.62773 0.0 1152.31819 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1152.31819 0.0 1158.00865 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1158.00865 0.0 1163.69911 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1163.69911 0.0 1169.38957 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1169.38957 0.0 1175.08003 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1175.08003 0.0 1180.7705 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1180.7705 0.0 1186.46095 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1186.46095 0.0 1192.15141 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1192.15141 0.0 1197.84187 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1197.84187 0.0 1203.53233 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1203.53233 0.0 1209.2228 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1209.2228 0.0 1214.91325 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1214.91325 0.0 1220.60371 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1220.60371 0.0 1226.29417 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1226.29417 0.0 1231.98463 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1231.98463 0.0 1237.6751 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1237.6751 0.0 1243.36555 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1243.36555 0.0 1249.05602 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1249.05602 0.0 1254.74648 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1254.74648 0.0 1260.43694 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1260.43694 0.0 1266.1274 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1266.1274 0.0 1271.81786 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1271.81786 0.0 1277.50832 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1277.50832 0.0 1283.19878 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1283.19878 0.0 1288.88924 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1288.88924 0.0 1294.5797 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1294.5797 0.0 1300.27016 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1300.27016 0.0 1305.96062 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1305.96062 0.0 1311.65108 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1311.65108 0.0 1317.34154 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1317.34154 0.0 1323.032 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1323.032 0.0 1328.72246 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1328.72246 0.0 1334.41292 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1334.41292 0.0 1340.10338 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1340.10338 0.0 1345.79384 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1345.79384 0.0 1351.4843 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1351.4843 0.0 1357.17476 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1357.17476 0.0 1362.86522 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1362.86522 0.0 1368.55568 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1368.55568 0.0 1374.24614 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1374.24614 0.0 1379.9366 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1379.9366 0.0 1385.62706 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1385.62706 0.0 1391.31752 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1391.31752 0.0 1397.00798 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1397.00798 0.0 1402.69844 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1402.69844 0.0 1408.3889 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1408.3889 0.0 1414.07936 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1414.07936 0.0 1419.76982 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1419.76982 0.0 1425.46028 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1425.46028 0.0 1431.15074 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1431.15074 0.0 1436.8412 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1436.8412 0.0 1442.53166 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1442.53166 0.0 1448.22212 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1448.22212 0.0 1453.91258 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1453.91258 0.0 1459.60304 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1459.60304 0.0 1465.2935 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1465.2935 0.0 1470.98396 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1470.98396 0.0 1476.67442 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1476.67442 0.0 1482.36488 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1482.36488 0.0 1488.05534 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1488.05534 0.0 1493.7458 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1493.7458 0.0 1499.43626 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1499.43626 0.0 1505.12672 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1505.12672 0.0 1510.81718 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1510.81718 0.0 1516.50764 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1516.50764 0.0 1522.1981 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1522.1981 0.0 1527.88857 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1527.88857 0.0 1533.57903 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1533.57903 0.0 1539.26949 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1539.26949 0.0 1544.95995 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1544.95995 0.0 1550.6504 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1550.6504 0.0 1556.34087 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1556.34087 0.0 1562.03133 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1562.03133 0.0 1567.72179 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1567.72179 0.0 1573.41225 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1573.41225 0.0 1579.1027 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1579.1027 0.0 1584.79317 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1584.79317 0.0 1590.48363 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1590.48363 0.0 1596.17409 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1596.17409 0.0 1601.86455 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1601.86455 0.0 1607.55501 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1607.55501 0.0 1613.24547 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1613.24547 0.0 1618.93593 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1618.93593 0.0 1624.62639 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1624.62639 0.0 1630.31685 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1630.31685 0.0 1636.00731 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1636.00731 0.0 1641.69777 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1641.69777 0.0 1647.38823 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1647.38823 0.0 1653.07869 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1653.07869 0.0 1658.76915 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1658.76915 0.0 1664.45961 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1664.45961 0.0 1670.15007 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1670.15007 0.0 1675.84053 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1675.84053 0.0 1681.53099 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1681.53099 0.0 1687.22145 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1687.22145 0.0 1692.91191 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1692.91191 0.0 1698.60237 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1698.60237 0.0 1704.29283 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1704.29283 0.0 1709.98329 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1709.98329 0.0 1715.67375 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1715.67375 0.0 1721.36421 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1721.36421 0.0 1727.05467 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1727.05467 0.0 1732.74513 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1732.74513 0.0 1738.4356 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1738.4356 0.0 1744.12605 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1744.12605 0.0 1749.81651 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1749.81651 0.0 1755.50697 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1755.50697 0.0 1761.19743 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1761.19743 0.0 1766.8879 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1766.8879 0.0 1772.57835 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1772.57835 0.0 1778.26881 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1778.26881 0.0 1783.95927 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1783.95927 0.0 1789.64973 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1789.64973 0.0 1795.3402 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1795.3402 0.0 1801.03065 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1801.03065 0.0 1806.72112 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1806.72112 0.0 1812.41158 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1812.41158 0.0 1818.10204 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1818.10204 0.0 1823.7925 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1823.7925 0.0 1829.48296 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1829.48296 0.0 1835.17342 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1835.17342 0.0 1840.86388 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1840.86388 0.0 1846.55434 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1846.55434 0.0 1852.2448 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1852.2448 0.0 1857.93526 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1857.93526 0.0 1863.62572 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1863.62572 0.0 1869.31618 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1869.31618 0.0 1875.00664 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1875.00664 0.0 1880.6971 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1880.6971 0.0 1886.38756 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1886.38756 0.0 1892.07802 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1892.07802 0.0 1897.76848 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1897.76848 0.0 1903.45894 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1903.45894 0.0 1909.1494 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1909.1494 0.0 1914.83986 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1914.83986 0.0 1920.53032 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1920.53032 0.0 1926.22078 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1926.22078 0.0 1931.91124 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1931.91124 0.0 1937.6017 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1937.6017 0.0 1943.29216 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1943.29216 0.0 1948.98262 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1948.98262 0.0 1954.67308 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1954.67308 0.0 1960.36354 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1960.36354 0.0 1966.054 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1966.054 0.0 1971.74446 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1971.74446 0.0 1977.43492 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1977.43492 0.0 1983.12538 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1983.12538 0.0 1988.81584 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1988.81584 0.0 1994.5063 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 1994.5063 0.0 2000.19676 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2000.19676 0.0 2005.88722 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2005.88722 0.0 2011.57768 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2011.57768 0.0 2017.26814 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2017.26814 0.0 2022.9586 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2022.9586 0.0 2028.64906 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2028.64906 0.0 2034.33952 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2034.33952 0.0 2040.02998 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2040.02998 0.0 2045.72044 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2045.72044 0.0 2051.4109 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2051.4109 0.0 2057.10136 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2057.10136 0.0 2062.79182 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2062.79182 0.0 2068.48228 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2068.48228 0.0 2074.17274 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2074.17274 0.0 2079.8632 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2079.8632 0.0 2085.55367 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2085.55367 0.0 2091.24413 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2091.24413 0.0 2096.93459 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2096.93459 0.0 2102.62505 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2102.62505 0.0 2108.3155 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2108.3155 0.0 2114.00597 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2114.00597 0.0 2119.69643 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2119.69643 0.0 2125.38689 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2125.38689 0.0 2131.07735 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2131.07735 0.0 2136.7678 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2136.7678 0.0 2142.45827 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2142.45827 0.0 2148.14873 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2148.14873 0.0 2153.83919 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2153.83919 0.0 2159.52965 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2159.52965 0.0 2165.22011 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2165.22011 0.0 2170.91057 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2170.91057 0.0 2176.60103 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2176.60103 0.0 2182.29149 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2182.29149 0.0 2187.98195 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2187.98195 0.0 2193.67241 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2193.67241 0.0 2199.36287 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2199.36287 0.0 2205.05333 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2205.05333 0.0 2210.74379 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2210.74379 0.0 2216.43425 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2216.43425 0.0 2222.12471 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2222.12471 0.0 2227.81517 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2227.81517 0.0 2233.50563 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2233.50563 0.0 2239.19609 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2239.19609 0.0 2244.88655 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2244.88655 0.0 2250.57701 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2250.57701 0.0 2256.26747 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2256.26747 0.0 2261.95793 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2261.95793 0.0 2267.64839 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2267.64839 0.0 2273.33885 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2273.33885 0.0 2279.02931 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2279.02931 0.0 2284.71977 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2284.71977 0.0 2290.41023 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2290.41023 0.0 2296.1007 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2296.1007 0.0 2301.79115 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2301.79115 0.0 2307.48161 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2307.48161 0.0 2313.17207 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2313.17207 0.0 2318.86253 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2318.86253 0.0 2324.553 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2324.553 0.0 2330.24345 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2330.24345 0.0 2335.93391 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2335.93391 0.0 2341.62437 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2341.62437 0.0 2347.31483 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2347.31483 0.0 2353.0053 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2353.0053 0.0 2358.69576 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2358.69576 0.0 2364.38622 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2364.38622 0.0 2370.07668 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2370.07668 0.0 2375.76714 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2375.76714 0.0 2381.4576 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2381.4576 0.0 2387.14806 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2387.14806 0.0 2392.83852 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2392.83852 0.0 2398.52898 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2398.52898 0.0 2404.21944 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2404.21944 0.0 2409.9099 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2409.9099 0.0 2415.60036 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2415.60036 0.0 2421.29082 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2421.29082 0.0 2426.98128 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2426.98128 0.0 2432.67174 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2432.67174 0.0 2438.3622 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2438.3622 0.0 2444.05266 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2444.05266 0.0 2449.74312 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2449.74312 0.0 2455.43358 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2455.43358 0.0 2461.12404 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2461.12404 0.0 2466.8145 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2466.8145 0.0 2472.50496 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2472.50496 0.0 2478.19542 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2478.19542 0.0 2483.88588 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2483.88588 0.0 2489.57634 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2489.57634 0.0 2495.2668 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2495.2668 0.0 2500.95726 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2500.95726 0.0 2506.64772 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2506.64772 0.0 2512.33818 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2512.33818 0.0 2518.02864 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2518.02864 0.0 2523.7191 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2523.7191 0.0 2529.40956 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2529.40956 0.0 2535.10002 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2535.10002 0.0 2540.79048 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2540.79048 0.0 2546.48094 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2546.48094 0.0 2552.1714 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2552.1714 0.0 2557.86186 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2557.86186 0.0 2563.55232 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2563.55232 0.0 2569.24278 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2569.24278 0.0 2574.93324 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2574.93324 0.0 2580.6237 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2580.6237 0.0 2586.31416 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2586.31416 0.0 2592.00462 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2592.00462 0.0 2597.69508 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2597.69508 0.0 2603.38554 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2603.38554 0.0 2609.076 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2609.076 0.0 2614.76646 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2614.76646 0.0 2620.45692 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2620.45692 0.0 2626.14738 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2626.14738 0.0 2631.83784 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2631.83784 0.0 2637.5283 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2637.5283 0.0 2643.21877 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2643.21877 0.0 2648.90923 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2648.90923 0.0 2654.59969 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2654.59969 0.0 2660.29015 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2660.29015 0.0 2665.9806 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2665.9806 0.0 2671.67107 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2671.67107 0.0 2677.36153 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2677.36153 0.0 2683.05199 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2683.05199 0.0 2688.74245 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2688.74245 0.0 2694.4329 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2694.4329 0.0 2700.12337 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2700.12337 0.0 2705.81383 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2705.81383 0.0 2711.50429 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2711.50429 0.0 2717.19475 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2717.19475 0.0 2722.88521 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2722.88521 0.0 2728.57567 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2728.57567 0.0 2734.26613 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2734.26613 0.0 2739.95659 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2739.95659 0.0 2745.64705 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2745.64705 0.0 2751.33751 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2751.33751 0.0 2757.02797 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2757.02797 0.0 2762.71843 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2762.71843 0.0 2768.40889 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2768.40889 0.0 2774.09935 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2774.09935 0.0 2779.78981 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2779.78981 0.0 2785.48027 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2785.48027 0.0 2791.17073 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2791.17073 0.0 2796.86119 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2796.86119 0.0 2802.55165 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2802.55165 0.0 2808.24211 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2808.24211 0.0 2813.93257 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2813.93257 0.0 2819.62303 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2819.62303 0.0 2825.31349 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2825.31349 0.0 2831.00395 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2831.00395 0.0 2836.69441 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2836.69441 0.0 2842.38487 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0. true 2842.38487 0.0 2848.07533 0.0 0 Frame  gsave 1.2 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 32588 58875 a
currentpoint initclip moveto
 32588 58875 a 921 58875
a
 currentpoint currentpoint translate 1 0.95947 div 1 0.95947 div scale
neg exch neg exch translate
 921 58875 a 0 TeXcolorgray 0 TeXcolorgray 36046 22699
8713 45 v 36046 24347 45 1649 v 37002 23853 a Fe(k)p
38525 24347 V 1656 w(P)154 b Fd(\()p Fe(X)394 b Fd(=)307
b Fe(k)35 b Fd(\))p 44714 24347 V 36046 24391 8713 45
v 36046 26040 45 1649 v 36754 25545 a FD(10)p 38525 26040
V 2244 w(0,0003)p 44714 26040 V 36046 26084 8713 45 v
36046 27733 45 1649 v 36754 27238 a(11)p 38525 27733
V 2244 w(0,0007)p 44714 27733 V 36046 27777 8713 45 v
36046 29425 45 1649 v 36754 28931 a(12)p 38525 29425
V 2244 w(0,0015)p 44714 29425 V 36046 29470 8713 45 v
36046 31118 45 1649 v 36754 30624 a(13)p 38525 31118
V 2244 w(0,0029)p 44714 31118 V 36046 31162 8713 45 v
36046 32811 45 1649 v 36754 32316 a(14)p 38525 32811
V 2244 w(0,0053)p 44714 32811 V 36046 32855 8713 45 v
36046 34504 45 1649 v 36754 34009 a(15)p 38525 34504
V 2521 w(0,009)p 44714 34504 V 36046 34548 8713 45 v
36046 36196 45 1649 v 36754 35702 a(16)p 38525 36196
V 2244 w(0,0144)p 44714 36196 V 36046 36241 8713 45 v
36046 37889 45 1649 v 36754 37395 a(17)p 38525 37889
V 2244 w(0,0216)p 44714 37889 V 36046 37933 8713 45 v
36046 39582 45 1649 v 36754 39087 a(18)p 38525 39582
V 2244 w(0,0305)p 44714 39582 V 36046 39626 8713 45 v
36046 41275 45 1649 v 36754 40780 a(19)p 38525 41275
V 2244 w(0,0408)p 44714 41275 V 36046 41319 8713 45 v
36046 42967 45 1649 v 36754 42473 a(20)p 38525 42967
V 2244 w(0,0516)p 44714 42967 V 36046 43012 8713 45 v
36046 44660 45 1649 v 36754 44166 a(21)p 38525 44660
V 2244 w(0,0621)p 44714 44660 V 36046 44705 8713 45 v
36046 46353 45 1649 v 36754 45858 a(22)p 38525 46353
V 2244 w(0,0712)p 44714 46353 V 36046 46397 8713 45 v
36046 48046 45 1649 v 36754 47551 a(23)p 38525 48046
V 2244 w(0,0778)p 44714 48046 V 36046 48090 8713 45 v
36046 49739 45 1649 v 36754 49244 a(24)p 38525 49739
V 2244 w(0,0814)p 44714 49739 V 36046 49783 8713 45 v
36046 51431 45 1649 v 36754 50937 a(25)p 38525 51431
V 2244 w(0,0816)p 44714 51431 V 36046 51476 8713 45 v
36046 53124 45 1649 v 36754 52629 a(26)p 38525 53124
V 2244 w(0,0785)p 44714 53124 V 36046 53168 8713 45 v
36046 54817 45 1649 v 36754 54322 a(27)p 38525 54817
V 2244 w(0,0725)p 44714 54817 V 36046 54861 8713 45 v
36046 56510 45 1649 v 36754 56015 a(28)p 38525 56510
V 2244 w(0,0644)p 44714 56510 V 36046 56554 8713 45 v
36046 58202 45 1649 v 36754 57708 a(29)p 38525 58202
V 2244 w(0,0552)p 44714 58202 V 36046 58247 8713 45 v
36046 59895 45 1649 v 36754 59401 a(30)p 38525 59895
V 2244 w(0,0456)p 44714 59895 V 36046 59939 8713 45 v
1 0 0 TeXcolorrgb 921 63592 a Fx(P)181 b FB(\(22)369
b Fx(<)g(X)474 b Fw(\024)369 b FB(27\))h(=)e(0)p Fx(;)p
FB(0778)135 b(+)g(0)p Fx(;)p FB(0814)g(+)g(0)p Fx(;)p
FB(0816)g(+)g(0)p Fx(;)p FB(0785)g(+)g(0)p Fx(;)p FB(0725)379
b(=)368 b(0)p Fx(;)p FB(3918)j Fw(\031)e FB(39)p Fx(;)p
FB(2)221 b(\045)921 70121 y FH(L\366sungssc)-36 b(hl\374ssel:)390
b(Ein)g(Punkt)g(ist)g(genau)g(dann)f(zu)h(geb)36 b(en,)390
b(w)-36 b(enn)390 b(die)g(W)-108 b(ahrsc)-36 b(heinlic)g(h-)921
72113 y(k)g(eit)434 b(ric)-36 b(h)g(tig)434 b(b)36 b(erec)-36
b(hnet)432 b(und)g(in)i(der)f(Gra\034k)g(gek)-36 b(ennzeic)g(hnet)433
b(ist.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4800 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 6792
a FD(WS)369 b(3.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 75846 54804 45 v 0 TeXcolorgray
24421 81281 a FH(72)p 0 TeXcolorgray eop end
%%Page: 73 73
TeXDict begin 73 72 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(3.2)g(-)g(5)h(Binomialv)-60
b(erteilte)715 b(Zufallsv)-120 b(ariable)715 b(-)i(O)-60
b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray -1391 4800 a FH(86.)p
0 TeXcolorgray 651 w(Die)434 b(Zufallsv)-72 b(ariable)436
b Fx(X)538 b FH(sei)434 b(binomialv)-36 b(erteilt)435
b(mit)f Fx(n)369 b FB(=)g(8)433 b FH(und)g Fx(p)369 b
FB(=)f(0)p Fx(;)p FB(25)p FH(.)p 921 7759 50153 45 v
921 9751 45 1992 v 1629 9153 a Fx(X)p 5508 9751 V 4990
w FH(0)p 10494 9751 V 4336 w(1)p 15479 9751 V 4335 w(2)p
20465 9751 V 4336 w(3)p 25451 9751 V 4335 w(4)p 30436
9751 V 4336 w(5)p 35422 9751 V 4336 w(6)p 40407 9751
V 4335 w(7)p 45393 9751 V 4661 w(8)p 51029 9751 V 921
9795 50153 45 v 921 11787 45 1992 v 1629 11190 a Fx(P)181
b FB(\()p Fx(X)104 b FB(\))p 5508 11787 V 1374 w FH(0,1001)p
10494 11787 V 1374 w(0,2670)p 15479 11787 V 1375 w(0,3115)p
20465 11787 V 1374 w(0,2076)p 25451 11787 V 1375 w(0,0865)p
30436 11787 V 1375 w(0,0231)p 35422 11787 V 1374 w(0,0038)p
40407 11787 V 1375 w(0,0004)p 45393 11787 V 1375 w(0,00002)p
51029 11787 V 921 11831 50153 45 v 921 16634 a Fx(\026)433
b FH(ist)h(der)f(Erw)-36 b(artungsw)g(ert,)433 b Fx(\033)482
b FH(die)433 b(Standardab)-36 b(w)g(eic)g(h)g(ung)432
b(der)h(V)-108 b(erteilung.)921 21172 y(Berec)-36 b(hne)433
b(die)g(folgende)i(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit.)921
25709 y Fx(P)181 b FB(\()p Fx(\026)295 b Fw(\000)g Fx(\033)417
b(<)368 b(X)474 b(<)369 b(\026)295 b FB(+)f Fx(\033)48
b FB(\))369 b(=)p 1 0 0 TeXcolorrgb 921 30246 a Fx(\026)f
FB(=)h Fx(n)296 b Fw(\001)f Fx(p)369 b FB(=)f(8)296 b
Fw(\001)f FB(0)p Fx(;)p FB(25)370 b(=)f(2)921 32238 y
Fx(\033)417 b FB(=)3458 30904 y Fj(q)p 4564 30904 5681
45 v 4564 32238 a Fx(\026)295 b Fw(\001)g FB(\(1)h Fw(\000)f
Fx(p)p FB(\))369 b Fw(\031)g FB(1)p Fx(;)p FB(22)921
36776 y Fx(P)181 b FB(\()p Fx(\026)165 b Fw(\000)g Fx(\033)416
b(<)368 b(X)474 b(<)369 b(\026)165 b FB(+)g Fx(\033)48
b FB(\))367 b(=)i Fx(P)181 b FB(\(1)369 b Fx(<)f(X)474
b(<)369 b FB(3\))g(=)g Fx(P)181 b FB(\()p Fx(X)473 b
FB(=)369 b(1\))165 b(+)g Fx(P)181 b FB(\()p Fx(X)473
b FB(=)368 b(2\))165 b(+)g Fx(P)181 b FB(\()p Fx(X)473
b FB(=)369 b(3\))g(=)921 38768 y(=)g(0)p Fx(;)p FB(2670)297
b(+)e(0)p Fx(;)p FB(3115)i(+)e(0)p Fx(;)p FB(2076)371
b(=)d(0)p Fx(;)p FB(7861)j(=)e(78)p Fx(;)p FB(61)221
b(\045)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4800 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 6792
a FD(WS)369 b(3.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 42501 54804 45 v 0 TeXcolorgray
24421 81281 a FH(73)p 0 TeXcolorgray eop end
%%Page: 74 74
TeXDict begin 74 73 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)906 b(3.2)h(-)g(6)g(W)-179
b(ahrsc)-60 b(heinlic)g(hk)g(eitsv)g(erteilung)901 b(-)908
b(O)-60 b(A)907 b(-)g(Matura)-2385 4515 y(2015/16)718
b(-)f(Haupttermin)p 0 TeXcolorgray -1391 7823 a FH(87.)p
0 TeXcolorgray 651 w(Der)616 b(W)-108 b(erteb)36 b(ereic)-36
b(h)616 b(einer)g(Zufallsv)-72 b(ariablen)617 b(X)f(b)36
b(esteh)-36 b(t)615 b(aus)h(den)g(W)-108 b(erten)615
b Fx(x)41566 8022 y FG(1)42092 7823 y Fx(;)221 b(x)43413
8022 y FG(2)43940 7823 y Fx(;)g(x)45261 8022 y FG(3)45787
7823 y FH(.)921 9815 y(Man)434 b(k)-36 b(enn)g(t)434
b(die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)434 b
Fx(P)181 b FB(\()p Fx(X)476 b FB(=)370 b Fx(x)25859 10014
y FG(1)26385 9815 y FB(\))h(=)f(0)p Fx(;)p FB(4)p FH(.)436
b(A)-36 b(u\377erdem)434 b(w)-36 b(ei\377)435 b(man,)g(dass)921
11806 y Fx(x)1660 12005 y FG(3)2619 11806 y FH(dopp)36
b(elt)433 b(so)h(w)-36 b(ahrsc)g(heinlic)g(h)434 b(wie)g
Fx(x)20643 12005 y FG(2)21602 11806 y FH(ist.)921 16344
y(Berec)-36 b(hne)433 b Fx(P)181 b FB(\()p Fx(X)473 b
FB(=)369 b Fx(x)11700 16543 y FG(2)12226 16344 y FB(\))433
b FH(und)g Fx(P)181 b FB(\()p Fx(X)473 b FB(=)369 b Fx(x)20964
16543 y FG(3)21490 16344 y FB(\))p FH(.)921 20881 y Fx(P)181
b FB(\()p Fx(X)474 b FB(=)368 b Fx(x)6118 21080 y FG(2)6644
20881 y FB(\))h(=)p 8964 20881 15749 34 v 921 25418 a
Fx(P)181 b FB(\()p Fx(X)474 b FB(=)368 b Fx(x)6118 25617
y FG(3)6644 25418 y FB(\))h(=)p 8964 25418 V 1 0 0 TeXcolorrgb
921 29956 a Fx(P)181 b FB(\()p Fx(X)474 b FB(=)368 b
Fx(x)6118 30155 y FG(2)6644 29956 y FB(\))h(=)g(0)p Fx(;)p
FB(2)921 32501 y Fx(P)181 b FB(\()p Fx(X)474 b FB(=)368
b Fx(x)6118 32700 y FG(3)6644 32501 y FB(\))h(=)g(0)p
Fx(;)p FB(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7823 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 9815
a FD(WS)g(3.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 36308 54804 45 v 0 TeXcolorgray 24421
81281 a FH(74)p 0 TeXcolorgray eop end
%%Page: 75 75
TeXDict begin 75 74 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)903 b(3.2)g(-)h(7)f(Erw)-60
b(artungsw)g(ert)903 b(des)g(Gewinns)f(-)i(O)-60 b(A)904
b(-)g(Matura)-2385 4515 y(2014/15)718 b(-)f(Haupttermin)p
0 TeXcolorgray -1391 7823 a FH(88.)p 0 TeXcolorgray 651
w(Bei)581 b(einem)h(Gewinnspiel)e(gibt)i(es)f(100)h(Lose.)g(Der)g
(Lospreis)e(b)36 b(etr\344gt)581 b FC(e)798 b FH(5.)583
b(F)-27 b(\374r)580 b(den)921 9815 y(Haupttre\033er)613
b(w)-36 b(erden)615 b FC(e)831 b FH(100)616 b(ausgezahlt,)g(f\374r)e
(zw)-36 b(ei)616 b(w)-36 b(eitere)615 b(T)-108 b(re\033er)614
b(w)-36 b(erden)614 b(je)h FC(e)921 11806 y FH(50)476
b(ausgezahlt)f(und)f(f\374r)h(f\374nf)g(w)-36 b(eitere)476
b(T)-108 b(re\033er)474 b(w)-36 b(erden)475 b(je)g FC(e)692
b FH(20)476 b(ausgezahlt.)g(F)-27 b(\374r)474 b(alle)874
13798 y(w)-36 b(eiteren)512 b(Lose)g(wird)f(nic)-36 b(h)g(ts)511
b(ausgezahlt.)i(Un)-36 b(ter)511 b Fi(Gewinn)578 b FH(v)-36
b(ersteh)g(t)511 b(man)h Fi(A)-66 b(uszahlung)836 15790
y(minus)464 b(L)-66 b(ospr)g(eis)p FH(.)921 20328 y(Berec)-36
b(hne)482 b(den)h(Erw)-36 b(artungsw)g(ert)482 b(des)h(Gewinns)g(aus)g
(der)g(Sic)-36 b(h)g(t)482 b(einer)h(P)-36 b(erson,)483
b(die)g(ein)921 22320 y(Los)434 b(kauft.)p 1 0 0 TeXcolorrgb
921 24865 a Fx(E)447 b FB(=)4315 24342 y FG(1)p 3844
24555 1412 45 v 3844 25323 a(100)5683 24865 y Fw(\001)296
b FB(100)g(+)10504 24342 y FG(2)p 10034 24555 V 10034
25323 a(100)11873 24865 y Fw(\001)f FB(50)h(+)16043 24342
y FG(5)p 15573 24555 V 15573 25323 a(100)17412 24865
y Fw(\001)f FB(20)h Fw(\000)f FB(5)370 b(=)e Fw(\000)p
FB(2)921 29402 y Fx(E)447 b FB(=)4079 28879 y FG(92)p
3844 29092 V 3844 29860 a(100)5683 29402 y Fw(\001)296
b FB(\()p Fw(\000)p FB(5\))f(+)11248 28879 y FG(5)p 10778
29092 V 10778 29860 a(100)12617 29402 y Fw(\001)g FB(15)h(+)16787
28879 y FG(2)p 16317 29092 V 16317 29860 a(100)18156
29402 y Fw(\001)f FB(45)h(+)22326 28879 y FG(1)p 21856
29092 V 21856 29860 a(100)23695 29402 y Fw(\001)f FB(95)370
b(=)f Fw(\000)p FB(2)921 33940 y FH(Der)434 b(Erw)-36
b(artungsw)g(ert)433 b(des)g(Gewinns)g(b)36 b(etr\344gt)434
b FC(e)650 b FH(-2)921 38477 y(L\366sungssc)-36 b(hl\374ssel:)921
40469 y(Ein)289 b(Punkt)g(f\374r)h(die)f(ric)-36 b(h)g(tige)290
b(L\366sung,)f(w)-36 b(ob)36 b(ei)290 b(die)g(Einheit)f(Euro)g(nic)-36
b(h)g(t)289 b(angef\374hrt)g(w)-36 b(erden)921 42461
y(m)g(uss.)393 b(Der)f(W)-108 b(ert)392 b Fx(E)447 b
FB(=)369 b(2)393 b FH(ist)f(n)-36 b(ur)392 b(dann)f(als)i(ric)-36
b(h)g(tig)393 b(zu)f(w)-36 b(erten,)393 b(w)-36 b(enn)392
b(aus)g(der)g(An)-36 b(t)g(w)g(ort)921 44453 y(klar)609
b(herv)-36 b(orgeh)g(t,)608 b(dass)g(es)g(sic)-36 b(h)608
b(dab)36 b(ei)608 b(um)f(einen)h(V)-108 b(erlust)607
b(v)-36 b(on)609 b FC(e)824 b FH(2)608 b(aus)g(Sic)-36
b(h)g(t)608 b(der)921 46445 y(P)-36 b(erson,)313 b(die)g(ein)g(Los)h
(kauft,)g(handelt.)f(Die)h(A)-36 b(ufgab)36 b(e)314 b(ist)f(auc)-36
b(h)312 b(dann)h(als)h(ric)-36 b(h)g(tig)313 b(gel\366st)h(zu)874
48436 y(w)-36 b(erten,)458 b(w)-36 b(enn)458 b(b)36 b(ei)458
b(k)-36 b(orrektem)459 b(Ansatz)f(das)h(Ergebnis)f(aufgrund)f(eines)i
(Rec)-36 b(henfehlers)921 50428 y(nic)g(h)g(t)433 b(ric)-36
b(h)g(tig)433 b(ist.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 7823 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 9815 a FD(WS)369 b(3.2)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 54162 54804 45 v 0 TeXcolorgray
24421 81281 a FH(75)p 0 TeXcolorgray eop end
%%Page: 76 76
TeXDict begin 76 75 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)687 b(3.2)g(-)h(8)f(T)-179
b(ennisspiel)684 b(-)k(O)-60 b(A)688 b(-)f(Matura)g(2014/15)h(-)f
(Hauptter-)-2331 4622 y(min)p 0 TeXcolorgray -1391 7929
a FH(89.)p 0 TeXcolorgray 651 w(Stefan)335 b(und)e(Helm)-36
b(ut)335 b(spielen)g(im)g(T)-108 b(raining)335 b(5)g(S\344tze)g(T)-108
b(ennis.)335 b(Stefan)g(hat)g(eine)f(k)-36 b(onstan)g(te)921
9921 y(Gewinn)g(w)g(ahrsc)g(heinlic)g(hk)g(eit)433 b(v)-36
b(on)434 b(60)217 b(\045)434 b(f\374r)f(jeden)h(gespielten)f(Satz.)921
14458 y(Es)h(wird)f(folgender)h(W)-108 b(ert)433 b(b)36
b(erec)-36 b(hnet:)921 17159 y Fj(0)921 19151 y(@)1890
18509 y FB(5)1890 20501 y(3)2540 17159 y Fj(1)2540 19151
y(A)3804 19439 y Fw(\001)295 b FB(0)p Fx(;)p FB(4)6129
18957 y FG(3)6951 19439 y Fw(\001)g FB(0)p Fx(;)p FB(6)9276
18957 y FG(2)10172 19439 y FB(=)368 b(0)p Fx(;)p FB(2304)921
24670 y FH(Gib)433 b(an,)h(w)-36 b(as)434 b(dieser)f(W)-108
b(ert)434 b(im)f(Zusammenhang)g(mit)h(der)f(Angab)36
b(e)433 b(aussagt.)p 1 0 0 TeXcolorrgb 921 27216 a(Dieser)454
b(W)-108 b(ert)452 b(gibt)h(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit)453 b(an,)g(mit)g(der)f(Helm)-36
b(ut)453 b(3)g(v)-36 b(on)453 b(5)h(S\344tzen)e(im)874
29208 y(T)-108 b(raining)434 b(gewinn)-36 b(t.)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7929
a FE(___/1)p 1 0 0 TeXcolorrgb 47905 9921 a FD(WS)369
b(3.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 32941 54804 45 v 0 TeXcolorgray 24421 81281 a FH(76)p
0 TeXcolorgray eop end
%%Page: 77 77
TeXDict begin 77 76 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)579 b(3.2)g(-)g(9)h(Gewinn)e(b)60
b(eim)579 b(Gl\374c)-60 b(ksrad)579 b(-)g(O)-60 b(A)580
b(-)f(Matura)g(2014/15)-2617 4622 y(-)718 b(Neb)60 b(en)-60
b(termin)716 b(1)p 0 TeXcolorgray -1391 7929 a FH(90.)p
0 TeXcolorgray 651 w(Das)370 b(un)-36 b(ten)368 b(abgebildete)i
(Gl\374c)-36 b(ksrad)369 b(ist)g(in)h(ac)-36 b(h)g(t)369
b(gleic)-36 b(h)370 b(gro\377e)g(Sektoren)f(un)-36 b(terteilt,)369
b(die)921 9921 y(mit)585 b(gleic)-36 b(her)585 b(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit)585 b(auftreten.)h(F)-27
b(\374r)584 b(einmaliges)j(Drehen)d(des)h(Gl\374c)-36
b(ks-)921 11913 y(rades)561 b(m)-36 b(uss)560 b(ein)h(Einsatz)g(v)-36
b(on)562 b(5)217 b FC(e)561 b FH(gezahlt)g(w)-36 b(erden.)562
b(Die)g(Gewinne,)f(die)g(ausb)36 b(ezahlt)874 13905 y(w)-36
b(erden,)502 b(w)-36 b(enn)501 b(das)h(Gl\374c)-36 b(ksrad)501
b(im)h(en)-36 b(tsprec)g(henden)499 b(Sektor)j(stehen)f(bleibt,)h(sind)
f(auf)921 15897 y(dem)433 b(Gl\374c)-36 b(ksrad)433 b(abgebildet.)p
0 TeXcolorgray 0 TeXcolorgray 13433 40579 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 180.2418 a add def
/d 0.0 a add neg def /h 183.64253 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 13433 40579
a 10969 42916 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   113.81097 113.81097 2 copy
moveto 85.35823 0 CLW mul sub dup 0 rmoveto 0 360 arc closepath  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 53.45352 174.16841 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 199.1692 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 174.16841 174.16841 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 113.81097 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 174.16841 53.45352 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 28.45274 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 53.45352 53.45352 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 113.81097 113.81097 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 10969 42916 a
tx@Dict begin  { 128.81708 170.71646 } PutCoor PutBegin  end
 10969 42916 a
925 x FB(5)217 b FC(e)10969 42916 y
tx@Dict begin  PutEnd  end
 10969 42916 a 10969
42916 a
tx@Dict begin  { 158.29095 142.26372 } PutCoor PutBegin  end
 10969 42916 a 925 x FB(0)g FC(e)10969 42916 y
tx@Dict begin  PutEnd  end

10969 42916 a 10969 42916 a
tx@Dict begin  { 156.59038 99.5846 } PutCoor PutBegin  end
 10969 42916 a 925 x FB(10)g
FC(e)10969 42916 y
tx@Dict begin  PutEnd  end
 10969 42916 a 10969 42916 a
tx@Dict begin  { 126.54993 73.82404 } PutCoor PutBegin  end
 10969
42916 a 925 x FB(0)g FC(e)10969 42916 y
tx@Dict begin  PutEnd  end
 10969 42916 a
10969 42916 a
tx@Dict begin  { 85.35823 74.39105 } PutCoor PutBegin  end
 10969 42916 a 925 x FB(5)g FC(e)10969 42916
y
tx@Dict begin  PutEnd  end
 10969 42916 a 10969 42916 a
tx@Dict begin  { 51.7842 99.5846 } PutCoor PutBegin  end
 10969 42916 a 925 x FB(0)g
FC(e)10969 42916 y
tx@Dict begin  PutEnd  end
 10969 42916 a 10969 42916 a
tx@Dict begin  { 51.7842 139.41826 } PutCoor PutBegin  end
 10969
42916 a 925 x FB(15)g FC(e)10969 42916 y
tx@Dict begin  PutEnd  end
 10969 42916
a 10969 42916 a
tx@Dict begin  { 84.04013 170.71646 } PutCoor PutBegin  end
 10969 42916 a 925 x FB(0)g FC(e)10969
42916 y
tx@Dict begin  PutEnd  end
 10969 42916 a 33385 40579 a
currentpoint initclip moveto
 33385 40579 a 921
46555 a FH(Das)449 b(Gl\374c)-36 b(ksrad)448 b(wird)h(einmal)g(gedreh)
-36 b(t.)448 b(Berec)-36 b(hne)448 b(den)g(en)-36 b(tsprec)g(henden)445
b(Erw)-36 b(artungs-)874 48547 y(w)g(ert)405 b(des)f(Reingewinns)h
Fx(G)g FH(\(in)f(Euro\))g(aus)h(der)f(Sic)-36 b(h)g(t)404
b(des)g(Betreib)36 b(ers)404 b(des)h(Gl\374c)-36 b(ksrades.)921
50539 y(Der)434 b(Reingewinn)g(ist)f(die)h(Di\033erenz)g(aus)f(Einsatz)
h(und)e(A)-36 b(uszahlungsb)36 b(etrag.)p 1 0 0 TeXcolorrgb
921 53084 a Fx(G)369 b FB(=)g(5)295 b Fw(\000)5970 51800
y Fj(\020)6764 52561 y FG(1)p 6764 52774 471 45 v 6764
53542 a(4)7663 53084 y Fw(\001)g FB(5)h(+)10712 52561
y FG(1)p 10712 52774 V 10712 53542 a(8)11611 53084 y
Fw(\001)f FB(10)h(+)15310 52561 y FG(1)p 15310 52774
V 15310 53542 a(8)16209 53084 y Fw(\001)f FB(15)18173
51800 y Fj(\021)19204 53084 y FB(=)20717 52561 y FG(5)p
20717 52774 V 20717 53542 a(8)21690 53084 y Fw(\))369
b Fx(G)g Fw(\031)434 b FC(e)1083 b FH(0,63)921 57621
y(L\366sungssc)-36 b(hl\374ssel:)921 59613 y(Ein)409
b(Punkt)h(f\374r)f(die)h(ric)-36 b(h)g(tige)409 b(L\366sung,)h(w)-36
b(ob)36 b(ei)410 b(die)g(Einheit)f(nic)-36 b(h)g(t)409
b(angef\374hrt)g(sein)h(m)-36 b(uss.)874 61605 y(T)-108
b(oleranzin)-36 b(terv)-72 b(all:)435 b FB([)8 b(0)p
Fx(;)p FB(62;)221 b(0)p Fx(;)p FB(63])p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7929 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 9921 a FD(WS)369 b(3.2)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 65413
54804 45 v 0 TeXcolorgray 24421 81281 a FH(77)p 0 TeXcolorgray
eop end
%%Page: 78 78
TeXDict begin 78 77 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)1018 b(3.2)g(-)h(10)g(P)-60
b(arameter)1019 b(einer)e(Binomialv)-60 b(erteilung)1016
b(-)j(O)-60 b(A)1019 b(-)-2331 4515 y(Matura)717 b(2015/16)g(-)h(Neb)60
b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray -1391 7823
a FH(91.)p 0 TeXcolorgray 651 w(Ein)547 b(Zufallsexp)36
b(erimen)-36 b(t)548 b(wird)f(durc)-36 b(h)546 b(eine)h(binomialv)-36
b(erteilte)549 b(Zufallsv)-72 b(ariable)549 b Fx(X)652
b FH(b)36 b(e-)921 9815 y(sc)-36 b(hrieb)36 b(en.)395
b(Diese)h(hat)f(die)h(Erfolgsw)-36 b(ahrsc)g(heinlic)g(hk)g(eit)397
b Fx(p)368 b FB(=)h(0)p Fx(;)p FB(36)397 b FH(und)d(die)h(Standardab-)
874 11806 y(w)-36 b(eic)g(h)g(ung)433 b Fx(\033)417 b
FB(=)369 b(7)p Fx(;)p FB(2)p FH(.)921 16344 y(Berec)-36
b(hneden)432 b(zugeh\366rigen)i(P)-36 b(arameter)433
b Fx(n)h FH(\(Anzahl)g(der)f(V)-108 b(ersuc)-36 b(he\).)921
20881 y(n=)p 2656 20881 25197 34 v 1 0 0 TeXcolorrgb
921 23427 a Fx(n)296 b Fw(\001)f FB(0)p Fx(;)p FB(36)h
Fw(\001)f FB(\(1)h Fw(\000)f FB(0)p Fx(;)p FB(36\))370
b(=)f(7)p Fx(;)p FB(2)14937 22944 y FG(2)921 25972 y
Fx(n)g FB(=)g(225)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 7823 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 9815 a FD(WS)g(3.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 29447 54804 45 v -2331 34875 a FI(WS)661
b(3.2)f(-)i(11)f(Zufallsexp)60 b(erimen)-60 b(t)658 b(-)j(MC)h(-)f
(Matura)g(NT)g(2)g(15/16)p 0 TeXcolorgray -1391 38183
a FH(92.)p 0 TeXcolorgray 651 w(Bei)436 b(einem)f(Zufallsexp)36
b(erimen)-36 b(t,)437 b(das)e(25-mal)i(wiederholt)e(wird,)h(gibt)g(es)g
(die)f(A)-36 b(usg\344nge)675 40175 y(\022)108 b(g\374nstig\020)472
b(und)f(\022ung\374nstig\020)-181 b(.)471 b(Die)i(Zufallsv)-72
b(ariable)473 b Fx(X)576 b FH(b)36 b(esc)-36 b(hreibt,)471
b(wie)h(oft)g(dab)36 b(ei)471 b(das)921 42167 y(Ergebnis)434
b(\022)108 b(g\374nstig\020)435 b(eingetreten)e(ist.)i
Fx(X)539 b FH(ist)434 b(binomialv)-36 b(erteilt)436 b(mit)e(dem)f(Erw)
-36 b(artungs-)874 44159 y(w)g(ert)434 b(10.)921 48696
y(Zw)-36 b(ei)391 b(der)f(nac)-36 b(hstehenden)388 b(A)-36
b(ussagen)390 b(lassen)h(sic)-36 b(h)390 b(aus)g(diesen)g
(Informationen)h(ableiten.)921 51241 y(Kreuze)433 b(die)h(b)36
b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434 b(an.)p
1062 54200 44260 45 v 1062 57418 45 3219 v 1770 56141
a Fx(P)181 b FB(\()p Fx(X)474 b FB(=)369 b(25\))g(=)g(10)p
42912 57418 V 45277 57418 V 1062 57462 44260 45 v 1062
62517 45 5056 v 1770 59322 a FH(W)-108 b(enn)334 b(man)f(das)h
(Zufallsexp)36 b(erimen)-36 b(t)335 b(25-mal)g(durc)-36
b(hf\374hrt,)332 b(w)-36 b(erden)333 b(mit)h(Sic)-36
b(her-)1770 61314 y(heit)434 b(genau)f(10)i(Ergebnisse)e(\022)108
b(g\374nstig\020)434 b(sein.)p 42912 62517 V 45277 62517
V 1062 62562 44260 45 v 1062 67617 45 5056 v 1770 64422
a(Die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)434
b(dass)f(ein)h(einzelnes)f(Zufallsexp)36 b(erimen)-36
b(t)435 b(\022)108 b(g\374nstig\020)1770 66413 y(ausgeh)-36
b(t,)434 b(ist)g(40)217 b(\045.)p 42912 67617 V 1 0 0
TeXcolorrgb 43621 65421 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45277 67617 V 1062 67661 44260
45 v 1062 72716 45 5056 v 1770 69521 a FH(W)-108 b(enn)433
b(man)h(das)f(Zufallsexp)36 b(erimen)-36 b(t)434 b(50-mal)h(durc)-36
b(hf\374hrt,)432 b(dann)g(ist)i(der)f(Er-)1770 71513
y(w)-36 b(artungsw)g(ert)434 b(f\374r)f(die)h(Anzahl)f(der)g(\022)108
b(g\374nstigen\020)434 b(Ergebnisse)g(20.)p 42912 72716
V 1 0 0 TeXcolorrgb 43621 70521 a FF(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 72716 V 1062 72760
44260 45 v 1062 75978 45 3219 v 1770 74701 a Fx(P)181
b FB(\()p Fx(X)474 b(>)369 b FB(10\))g Fx(>)g(P)181 b
FB(\()p Fx(X)474 b(>)368 b FB(8\))p 42912 75978 V 45277
75978 V 1062 76023 44260 45 v 47901 38183 a FE(___/0)p
1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 24421 81281 a FH(78)p 0
TeXcolorgray eop end
%%Page: 79 79
TeXDict begin 79 78 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 54804 45 v -2331 6921 a FI(WS)522
b(3.2)h(-)g(12)f(Diskrete)g(Zufallsv)-120 b(ariable)521
b(-)i(MC-)g(Matura)g(2013/14)-2331 9944 y(Haupttermin)p
0 TeXcolorgray -1391 13251 a FH(93.)p 0 TeXcolorgray
651 w(Die)410 b(un)-36 b(ten)407 b(stehende)h(Abbildung)g(zeigt)i(die)f
(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eitsv)g(erteilung)409
b(einer)g(dis-)921 15243 y(kreten)433 b(Zufallsv)-72
b(ariablen)435 b Fx(X)104 b FH(.)921 42882 y
 currentpoint currentpoint translate 1.08183 1.08183 scale neg exch
neg exch translate
 921 42882
a 921 42882 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 375.57611 a add def
/d 0.0 a add neg def /h 208.61995 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 42882 a 3782 40936 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 349.73047  0 -25.84564  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -25.84564
 349.73047  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-17.58325  def /maxTickline 191.0367  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 191.0367
0.0 -17.58325   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 349.73047
0.0 -25.84564 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 191.0367  0 -17.58325  ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -17.58325
 191.0367  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-25.84564  def /maxTickline 349.73047  def /dT 1864793 abs 65536 div
viceversa { neg } if def /DT 0.05 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 569.05511  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 569.05511  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 191.0367
0.0 -17.58325   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 349.73047
0.0 -25.84564 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 6696 42281 a FG(1)2680
b(2)g(3)f(4)h(5)f(6)h(7)g(8)f(9)2445 b(10)2209 b(11)h(12)3782
40936 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 3782 40936 a 3782 40936 a
tx@Dict begin  { 349.73047 191.0367 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 3782 40936 a 3782 40936
a
tx@Dict begin  { 5.0 6.51384 8.33331 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 3782 40936 a 3421 41397 a Fx(k)3782 40936 y
tx@Dict begin  PutEnd  end
 3782 40936
a 3782 40936 a
tx@Dict begin  PutEnd  end
 3782 40936 a 3782 40936 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 3782 40936 a
3782 40936 a
tx@Dict begin  { 0.0 0.0 pop 349.73047 191.0367 exch pop } PutCoor
PutBegin  end
 3782 40936 a 3782 40936 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 3782 40936 a 939
41268 a Fx(P)181 b FB(\()p Fx(X)474 b FB(=)369 b Fx(k)45
b FB(\))3782 40936 y
tx@Dict begin  PutEnd  end
 3782 40936 a 3782 40936 a
tx@Dict begin  PutEnd  end
 3782 40936
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true -14.22636 0.0 14.22636
3.43849 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 14.22636 0.0 42.67911
22.94072 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 42.67911 0.0 71.13185
68.81349 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 71.13185 0.0 99.5846
122.34476 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 99.5846 0.0 128.03734
142.73265 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 128.03734 0.0 156.49008
114.18265 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 156.49008 0.0 184.94283
63.43866 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 184.94283 0.0 213.39557
24.16504 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 213.39557 0.0 241.84831
6.04343 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 241.84831 0.0 270.30106
0.89435 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 270.30106 0.0 298.7538
0.27785 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 71.13185 0.0 99.5846
122.34476 0 Frame  gsave 0  setgray  0.5 .setopacityalpha  fill  grestore
gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 99.5846 0.0 128.03734
142.73265 0 Frame  gsave 0  setgray  0.5 .setopacityalpha  fill  grestore
gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 128.03734 0.0 156.49008
114.18265 0 Frame  gsave 0  setgray  0.5 .setopacityalpha  fill  grestore
gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 156.49008 0.0 184.94283
63.43866 0 Frame  gsave 0  setgray  0.5 .setopacityalpha  fill  grestore
gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
42496 42882 a
currentpoint initclip moveto
 42496 42882 a 921 42882 a
 currentpoint currentpoint translate 1 1.08183 div 1 1.08183 div scale
neg exch neg exch translate
 921 42882 a 855
47419 a FH(W)-108 b(elc)-36 b(her)618 b(der)h(folgenden)h(A)-36
b(usdr\374c)g(k)g(e)618 b(b)36 b(esc)-36 b(hreibt)618
b(die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)620
b(die)f(dem)921 49411 y(Inhalt)433 b(der)g(sc)-36 b(hra\036erten)433
b(Fl\344c)-36 b(he)434 b(en)-36 b(tspric)g(h)g(t?)921
51403 y(Kreuze)433 b(den)g(zutre\033enden)f(A)-36 b(usdruc)g(k)432
b(an!)p 14853 54104 16678 45 v 14853 57322 45 3219 v
15562 56045 a FB(1)295 b Fw(\000)g Fx(P)181 b FB(\()p
Fx(X)474 b Fw(\024)369 b FB(2\))p 29121 57322 V 31486
57322 V 14853 57366 16678 45 v 14853 60584 45 3219 v
15562 59307 a Fx(P)181 b FB(\()p Fx(X)473 b Fw(\024)369
b FB(6\))296 b Fw(\000)f Fx(P)181 b FB(\()p Fx(X)474
b Fw(\024)369 b FB(3\))p 29121 60584 V 31486 60584 V
14853 60628 16678 45 v 14853 63847 45 3219 v 15562 62570
a Fx(P)181 b FB(\()p Fx(X)473 b Fw(\025)369 b FB(3\))296
b(+)f Fx(P)181 b FB(\()p Fx(X)473 b Fw(\024)369 b FB(6\))p
29121 63847 V 31486 63847 V 14853 63891 16678 45 v 14853
67109 45 3219 v 15562 65832 a(\(3)g Fw(\024)g Fx(X)474
b Fw(\024)369 b FB(6\))p 29121 67109 V 1 0 0 TeXcolorrgb
7230 w FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
31486 67109 V 14853 67153 16678 45 v 14853 70371 45 3219
v 15562 69094 a Fx(P)181 b FB(\()p Fx(X)473 b Fw(\024)369
b FB(6\))296 b Fw(\000)f Fx(P)181 b FB(\()p Fx(X)474
b(<)368 b FB(2\))p 29121 70371 V 31486 70371 V 14853
70416 16678 45 v 14853 73634 45 3219 v 15562 72357 a
Fx(P)181 b FB(\(3)369 b Fx(<)f(X)474 b(<)369 b FB(6\))p
29121 73634 V 31486 73634 V 14853 73678 16678 45 v 47992
13251 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 15243 a FD(WS)g(3.2)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
77706 54804 45 v 0 TeXcolorgray 24421 81281 a FH(79)p
0 TeXcolorgray eop end
%%Page: 80 80
TeXDict begin 80 79 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)477 b(3.2)h(-)h(13)f
(Multiple-Choice-An)-60 b(t)g(w)g(ort)477 b(-)h(O)-60
b(A)479 b(-)f(Matura)g(2013/14)-2331 4622 y(Haupttermin)p
0 TeXcolorgray -1391 7929 a FH(94.)p 0 TeXcolorgray 651
w(Bei)595 b(einer)f(sc)-36 b(hriftlic)g(hen)595 b(Pr\374fung)f(w)-36
b(erden)594 b(der)g(Kandidatin/dem)g(Kandidaten)g(f\374nf)921
9921 y(F)-108 b(ragen)486 b(mit)g(je)h(vier)f(An)-36
b(t)g(w)g(ortm\366glic)g(hk)g(eiten)487 b(v)-36 b(orgelegt.)488
b(Genau)d(eine)i(der)e(An)-36 b(t)g(w)g(orten)921 11913
y(ist)434 b(jew)-36 b(eils)435 b(ric)-36 b(h)g(tig.)921
14458 y(Berec)g(hne)441 b(die)g(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g
(eit,)442 b(dass)g(die)f(Kandidatin/der)g(Kandidat)h(b)36
b(ei)442 b(zuf\344lli-)921 16450 y(gem)434 b(Ankreuzen)f(mindestens)f
(viermal)j(die)f(ric)-36 b(h)g(tige)433 b(An)-36 b(t)g(w)g(ort)433
b(k)-36 b(ennzeic)g(hnet!)p 1 0 0 TeXcolorrgb 921 18995
a Fx(X)538 b FH(...)435 b(Anzahl)e(der)g(ric)-36 b(h)g(tigen)434
b(An)-36 b(t)g(w)g(orten)921 21541 y Fx(W)181 b FB(\()p
Fx(X)473 b Fw(\025)369 b FB(4\))h(=)e(5)296 b Fw(\001)10306
20257 y Fj(\020)11100 21018 y FG(1)p 11100 21231 471
45 v 11100 21999 a(4)11703 20257 y Fj(\021)12364 20563
y FG(4)13185 21541 y Fw(\001)13849 20257 y Fj(\020)14643
21018 y FG(3)p 14643 21231 V 14643 21999 a(4)15247 20257
y Fj(\021)16203 21541 y FB(+)17510 20257 y Fj(\020)18304
21018 y FG(1)p 18304 21231 V 18304 21999 a(4)18907 20257
y Fj(\021)19568 20563 y FG(5)20463 21541 y FB(=)22211
21018 y FG(1)p 21976 21231 941 45 v 21976 21999 a(64)23419
21541 y Fw(\031)369 b FB(0)p Fx(;)p FB(02)h(=)f(2)221
b(\045)874 24086 y FH(T)-108 b(oleranzin)-36 b(terv)-72
b(all:)435 b FB([)8 b(0)p Fx(;)p FB(015;)221 b(0)p Fx(;)p
FB(02])438 b FH(bzw.)c FB([)8 b(1)p Fx(;)p FB(5)221 b(\045;)g(2)g
(\045])p FH(.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 47992 7929 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 9921 a FD(WS)369 b(3.2)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 27894 54804 45 v -2331
33322 a FI(WS)746 b(3.2)g(-)h(14)g(Binomialv)-60 b(erteilung)743
b(-)k(O)-60 b(A)747 b(-)g(Matura)f(2013/14)g(1.)-2331
36344 y(Neb)60 b(en)-60 b(termin)p 0 TeXcolorgray -1391
39651 a FH(95.)p 0 TeXcolorgray 651 w(In)411 b(der)g(un)-36
b(tenstehenden)408 b(Abbildung)j(ist)g(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eitsv)g(erteilung)412 b(einer)f(bi-)921
41643 y(nomialv)-36 b(erteilten)583 b(Zufallsv)-72 b(ariablen)584
b Fx(X)686 b FH(mit)583 b(den)e(P)-36 b(arametern)581
b Fx(n)623 b FB(=)e(6)582 b FH(und)f Fx(p)622 b FB(=)f(0)p
Fx(;)p FB(5)921 43635 y FH(durc)-36 b(h)434 b(ein)h(S\344ulendiagramm)h
(\(S\344ulen)-36 b(breite)434 b(=)h(1\))g(dargestellt.)h
Fx(\026)f FH(b)36 b(ezeic)-36 b(hnet)435 b(den)f(Er-)874
45627 y(w)-36 b(artungsw)g(ert)433 b(v)-36 b(on)434 b
Fx(X)104 b FH(.)921 48173 y(Sc)-36 b(hra\036eren)432
b(Sie)i(diejenigen)g(Rec)-36 b(h)g(tec)g(ks\035\344c)g(hen,)433
b(die)g Fx(P)181 b FB(\()p Fx(X)474 b(>)369 b(\026)p
FB(\))433 b FH(v)-36 b(eransc)g(haulic)g(hen!)p 0 TeXcolorgray
0 TeXcolorgray 5417 73165 a
 currentpoint currentpoint translate 1.15968 1.15968 scale neg exch
neg exch translate
 5417 73165 a 5417 73165 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 280.29918 a add def
/d 0.0 a add neg def /h 178.30206 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end

5417 73165 a 10390 72157 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 235.37376  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 235.37376  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 169.19525  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 169.19525
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 235.37376
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 169.19525  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 169.19525  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 235.37376  def /dT 1491834 abs 65536 div viceversa
{ neg } if def /DT 0.05 abs viceversa { neg } if def /subTNo 1 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 455.24408  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 455.24408  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 169.19525
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 235.37376
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 10390 72157 a
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 10390 72157 a
10390 72157 a
tx@Dict begin  { 235.37376 169.19525 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { 5.0 6.2015 8.26648 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 10390 72157
a 10047 72614 a FH(k)10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390
72157 a
tx@Dict begin  PutEnd  end
 10390 72157 a 10390 72157 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 10390 72157 a 10390
72157 a
tx@Dict begin  { 0.0 0.0 pop 235.37376 169.19525 exch pop } PutCoor
PutBegin  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { 5.0 41.2817 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 10390 72157 a 8106
72489 a FH(P\(X=k\))10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390
72157 a
tx@Dict begin  PutEnd  end
 10390 72157 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 0.0 0.0 28.45274
7.11317 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 28.45274 0.0 56.90549
42.67912 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 56.90549 0.0 85.35823
106.69783 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 85.35823 0.0 113.81097
142.26376 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 113.81097 0.0 142.26372
106.69783 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 142.26372 0.0 170.71646
42.67912 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray   0. true 170.71646 0.0 199.1692
7.11317 0 Frame  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1 0 0 TeXcolorrgb @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 113.81097
0.0 142.26372 106.69783 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 142.26372
0.0 170.71646 42.67912 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 170.71646
0.0 199.1692 7.11317 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb 10390 72157
a
tx@Dict begin  { 12.80363 -2.27844 } PutCoor PutBegin  end
 10390 72157 a 570 x FA(0)10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157
a 10390 72157 a
tx@Dict begin  { 41.25638 -2.27844 } PutCoor PutBegin  end
 10390 72157 a 570 x FA(1)10390 72157
y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { 69.70912 -2.27844 } PutCoor PutBegin  end
 10390 72157 a 570 x FA(2)10390
72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { 98.16187 -2.27844 } PutCoor PutBegin  end
 10390 72157 a 570
x FA(3)10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { 126.61461 -2.27844 } PutCoor PutBegin  end
 10390
72157 a 570 x FA(4)10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390
72157 a
tx@Dict begin  { 155.06735 -2.27844 } PutCoor PutBegin  end
 10390 72157 a 570 x FA(5)10390 72157 y
tx@Dict begin  PutEnd  end
 10390
72157 a 10390 72157 a
tx@Dict begin  { 183.5201 -2.27844 } PutCoor PutBegin  end
 10390 72157 a 570 x FA(6)10390
72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { -19.91682 25.03508 } PutCoor PutBegin  end
 10390 72157 a 570
x FA(0,05)10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { -15.6491 47.79868 } PutCoor PutBegin  end
 10390
72157 a 570 x FA(0,1)10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390
72157 a
tx@Dict begin  { -19.91682 70.56227 } PutCoor PutBegin  end
 10390 72157 a 570 x FA(0,15)10390 72157 y
tx@Dict begin  PutEnd  end
 10390
72157 a 10390 72157 a
tx@Dict begin  { -15.6491 93.32587 } PutCoor PutBegin  end
 10390 72157 a 570 x FA(0,2)10390
72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { -19.91682 116.08946 } PutCoor PutBegin  end
 10390 72157 a 570
x FA(0,25)10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390 72157 a
tx@Dict begin  { -15.6491 138.8461 } PutCoor PutBegin  end
 10390
72157 a 570 x FA(0,3)10390 72157 y
tx@Dict begin  PutEnd  end
 10390 72157 a 10390
72157 a
tx@Dict begin  { -19.91682 161.6097 } PutCoor PutBegin  end
 10390 72157 a 570 x FA(0,35)10390 72157 y
tx@Dict begin  PutEnd  end
 10390
72157 a 1 0 0 TeXcolorrgb 0 TeXcolorgray 36445 73165
a
currentpoint initclip moveto
 36445 73165 a 5417 73165 a
 currentpoint currentpoint translate 1 1.15968 div 1 1.15968 div scale
neg exch neg exch translate
 5417 73165 a 47992 39651
a FE(___/1)p 1 0 0 TeXcolorrgb 47905 41643 a FD(WS)369
b(3.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 75201 54804 45 v 0 TeXcolorgray 24421 81281 a FH(80)p
0 TeXcolorgray eop end
%%Page: 81 81
TeXDict begin 81 80 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)1073 b(3.2)g(-)h(15)f(A)-60
b(ussagen)1073 b(zu)g(einer)g(Zufallsv)-120 b(ariablen)1071
b(-)j(MC)g(-)-2331 4515 y(Matura)717 b(2016/17)g(-)h(Haupttermin)p
0 TeXcolorgray -1391 7823 a FH(96.)p 0 TeXcolorgray 651
w(Die)501 b(Zufallsv)-72 b(ariable)501 b Fx(X)605 b FH(kann)500
b(n)-36 b(ur)499 b(die)h(W)-108 b(erte)499 b(10,)i(20)g(und)e(30)h
(annehmen.)g(Die)g(nac)-36 b(h-)921 9815 y(stehende)423
b(T)-108 b(ab)36 b(elle)425 b(gibt)g(die)f(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eitsv)g(erteilung)425 b(v)-36 b(on)425
b Fx(X)529 b FH(an,)425 b(w)-36 b(ob)36 b(ei)425 b(a)f(und)921
11806 y(b)433 b(p)36 b(ositiv)-36 b(e)435 b(reelle)f(Zahlen)f(sind.)p
0 TeXcolorgray 0 TeXcolorgray 15631 16204 15556 45 v
15631 18196 45 1992 v 0.8 TeXcolorgray 15675 18196 7448
1992 v 0 TeXcolorgray 16773 17599 a Fx(k)p 23122 18196
45 1992 v 6382 w FH(10)p 25796 18196 V 1373 w(20)p 28469
18196 V 1373 w(30)p 31142 18196 V 15631 18240 15556 45
v 15631 20232 45 1992 v 0.8 TeXcolorgray 15675 20232
7448 1992 v 0 TeXcolorgray 16773 19635 a Fx(P)181 b FB(\()p
Fx(X)474 b FB(=)368 b Fx(k)45 b FB(\))p 23122 20232 45
1992 v 1682 w Fx(a)p 25796 20232 V 2055 w(b)p 28469 20232
V 2055 w(a)p 31142 20232 V 15631 20277 15556 45 v 921
23295 a FH(Kreuze)433 b(die)h(b)36 b(eiden)433 b(zutre\033enden)e(A)-36
b(ussagen)434 b(an.)p 10273 26254 25839 45 v 10273 29317
45 3064 v 10981 28113 a(Der)g(Erw)-36 b(artungsw)g(ert)433
b(v)-36 b(on)434 b Fx(X)538 b FH(ist)434 b(20.)p 33701
29317 V 1 0 0 TeXcolorrgb 34410 28117 a FF(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 36067 29317
V 10273 29361 25839 45 v 10273 32424 45 3064 v 10981
31221 a FH(Die)h(Standardab)-36 b(w)g(eic)g(h)g(ung)431
b(v)-36 b(on)434 b Fx(X)539 b FH(ist)433 b(20.)p 33701
32424 V 36067 32424 V 10273 32468 25839 45 v 10273 35383
45 2915 v 10981 34336 a Fx(a)295 b FB(+)g Fx(b)369 b
FB(=)g(1)p 33701 35383 V 36067 35383 V 10273 35427 25839
45 v 10273 38645 45 3219 v 10981 37368 a Fx(P)181 b FB(\(10)370
b Fw(\024)f Fx(X)474 b Fw(\024)369 b FB(30\))g(=)g(1)p
33701 38645 V 1 0 0 TeXcolorrgb 11671 w FF(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 36067 38645
V 10273 38689 25839 45 v 10273 41908 45 3219 v 10981
40631 a Fx(P)181 b FB(\()p Fx(X)474 b Fw(\024)369 b FB(10\))h(=)e
Fx(P)181 b FB(\()p Fx(X)474 b Fw(\025)369 b FB(10\))p
33701 41908 V 36067 41908 V 10273 41952 25839 45 v 47992
7823 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 9815 a FD(WS)g(3.2)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
45980 54804 45 v 0 TeXcolorgray 24421 81281 a FH(81)p
0 TeXcolorgray eop end
%%Page: 82 82
TeXDict begin 82 81 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)684 b(3.2)g(-)h(16)f(W)-179
b(ahrsc)-60 b(heinlic)g(hk)g(eit)682 b(b)60 b(estimmen)683
b(-)i(O)-60 b(A)685 b(-)g(Matura)-2331 4515 y(NT)718
b(1)f(16/17)p 0 TeXcolorgray -1391 7823 a FH(97.)p 0
TeXcolorgray 651 w(Die)562 b(nac)-36 b(hstehende)560
b(Abbildung)g(zeigt)i(die)g(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eitsv)g
(erteilung)561 b(einer)h(Zu-)921 9815 y(fallsv)-72 b(ariablen)436
b(X.)p 0 TeXcolorgray 0 TeXcolorgray 5418 39331 a
 currentpoint currentpoint translate 0.91745 0.91745 scale neg exch
neg exch translate
 5418
39331 a 5851 39331 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 350.37822 a add def
/d 0.0 a add neg def /h 269.93126 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 5851 39331 a 8416 26733 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 6 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 327.20654 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.45448
T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 0.0 T 12 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 156.12198 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 327.20654  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 327.20654  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 156.12198  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1 abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 156.12198
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 327.20654
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 156.12198  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 156.12198  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 327.20654  def /dT 1864793 abs 65536 div viceversa
{ neg } if def /DT 0.05 abs viceversa { neg } if def /subTNo 2 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 569.05511  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 569.05511  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 156.12198
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.6
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 327.20654
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
7171 27019 a FG(0)5969 23869 y(0)p Fr(:)p FG(05)5969
20719 y(0)p Fr(:)p FG(10)5969 17569 y(0)p Fr(:)p FG(15)5969
14419 y(0)p Fr(:)p FG(20)5969 11270 y(0)p Fr(:)p FG(25)11331
28079 y(0)2679 b(1)h(2)g(3)f(4)h(5)f(6)h(7)g(8)f(9)2445
b(10)2209 b(11)8416 26733 y
tx@Dict begin  gsave STV CP T /ps@refangle 120.  def grestore  end
 8416 26733 a 8416 26733 a
tx@Dict begin  { 327.20654 156.12198 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end

8416 26733 a 8416 26733 a
tx@Dict begin  { 5.0 6.2015 8.26648 0.0 120.  Uput UUput } PutCoor
PutBegin  end
 8416 26733 a 8073 27191 a FH(k)8416
26733 y
tx@Dict begin  PutEnd  end
 8416 26733 a 8416 26733 a
tx@Dict begin  PutEnd  end
 8416 26733 a 8416 26733
a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 8416 26733 a 8416 26733 a
tx@Dict begin  { 0.0 0.0 pop 327.20654 156.12198 exch pop } PutCoor
PutBegin  end
 8416 26733 a 8416 26733 a
tx@Dict begin  { 5.0 51.35863 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end

8416 26733 a 5574 27065 a Fx(P)181 b FB(\()p Fx(X)474
b FB(=)368 b Fx(k)45 b FB(\))8416 26733 y
tx@Dict begin  PutEnd  end
 8416 26733
a 8416 26733 a
tx@Dict begin  PutEnd  end
 8416 26733 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 25.60728 0.0 31.29819 3.43849 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 54.06003 0.0 59.75093 22.94072 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 82.51277 0.0 88.20367 68.81349 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 110.96552 0.0 116.65642 122.34476 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 139.41826 0.0 145.10916 142.73265 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 167.871 0.0 173.5619 114.18265 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 196.32375 0.0 202.01465 63.43866 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 224.77649 0.0 230.46739 24.16504 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 253.22923 0.0 258.92014 6.04343 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 281.68198 0.0 287.37288 0.89435 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0.1098 0.22352 0.73333  setrgbcolor 
 0. true 310.13472 0.0 315.82562 0.06078 0 Frame  gsave 1.2 SLW 0.1098
0.22352 0.73333  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 25.60728
0.0 31.29819 3.43849 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 54.06003
0.0 59.75093 22.94072 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 82.51277
0.0 88.20367 68.81349 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 110.96552
0.0 116.65642 122.34476 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 139.41826
0.0 145.10916 142.73265 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 167.871
0.0 173.5619 114.18265 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 196.32375
0.0 202.01465 63.43866 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 224.77649
0.0 230.46739 24.16504 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 253.22923
0.0 258.92014 6.04343 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 281.68198
0.0 287.37288 0.89435 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0 0 1  setrgbcolor   0. true 310.13472
0.0 315.82562 0.06078 0 Frame  gsave 0 0 1  setrgbcolor  0.5 .setopacityalpha
 fill  grestore gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
44637 39331 a
currentpoint initclip moveto
 44637 39331 a 5418 39331 a
 currentpoint currentpoint translate 1 0.91745 div 1 0.91745 div scale
neg exch neg exch translate
 5418 39331 a
921 43316 a FH(Gib)1383 b(mithilfe)h(dieser)g(Abbildung)f
(n\344herungsw)-36 b(eise)1383 b(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit)921 45308 y Fx(P)181 b FB(\(4)369
b Fw(\024)g Fx(X)474 b Fw(\024)369 b FB(7\))434 b FH(an!)921
47853 y Fx(P)181 b FB(\(4)369 b Fw(\024)g Fx(X)474 b(<)369
b FB(7\))g Fw(\031)p 1 0 0 TeXcolorrgb 434 w FH(0,55)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 921 50399 a FB([)8
b(0)p Fx(;)p FB(54;)221 b(0)p Fx(;)p FB(56])437 b FH(bzw.)d
FB([)8 b(54)221 b(\045;)g(56)g(\045])p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 7823 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 9815 a FD(WS)369 b(3.2)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 54206 54804 45 v 0 TeXcolorgray
24421 81281 a FH(82)p 0 TeXcolorgray eop end
%%Page: 83 83
TeXDict begin 83 82 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(3.3)g(-)g(1)h(A)-60
b(ufnahmetest)715 b(-)j(MC)f(-)h(BIFIE)p 0 TeXcolorgray
-1391 4800 a FH(98.)p 0 TeXcolorgray 651 w(Eine)423 b(Univ)-36
b(ersit\344t)424 b(f\374hrt)f(einen)g(A)-36 b(ufnahmetest)423
b(durc)-36 b(h.)422 b(Dab)36 b(ei)424 b(w)-36 b(erden)423
b(zehn)g(Multiple-)921 6792 y(Choice-F)-108 b(ragen)597
b(gestellt,)i(w)-36 b(ob)36 b(ei)598 b(jede)g(F)-108
b(rage)598 b(vier)g(An)-36 b(t)g(w)g(ortm\366glic)g(hk)g(eiten)598
b(hat.)h(Nur)921 8784 y(eine)622 b(da)-36 b(v)g(on)622
b(ist)h(ric)-36 b(h)g(tig.)623 b(In)f(den)g(letzten)g(Jahren)g(wurden)f
(durc)-36 b(hsc)g(hnittlic)g(h)620 b(40)j(Be-)874 10776
y(w)-36 b(erb)36 b(er/innen)499 b(aufgenommen.)i(Dab)36
b(ei)500 b(traten)f(et)-36 b(w)g(a)500 b(95)217 b(\045)500
b(der)f(angemeldeten)h(Kandi-)921 12768 y(datinnen)486
b(und)g(Kandidaten)h(tats\344c)-36 b(hlic)g(h)487 b(zum)g(A)-36
b(ufnahmetest)486 b(an.)i(Heuer)f(treten)f(122)921 14760
y(Bew)-36 b(erb)36 b(er/innen)433 b(zu)g(diesem)h(A)-36
b(ufnahmetest)432 b(an.)921 19297 y(Nimm)i(an,)g(dass)f(Kandidat)h
Fx(K)528 b FH(alle)435 b(An)-36 b(t)g(w)g(orten)432 b(v)-36
b(\366llig)436 b(zuf\344llig)f(ankreuzt.)921 23835 y(Kreuze)e(die)h
(zutre\033ende\(n\))d(A)-36 b(ussage\(n\))433 b(an.)p
1062 24875 44260 45 v 1062 31922 45 7047 v 1770 26735
a(Die)452 b(Anzahl)f(der)g(angemeldeten)g(Kandidatinnen)f(und)g
(Kandidaten,)h(die)g(tat-)1770 28727 y(s\344c)-36 b(hlic)g(h)401
b(zum)g(A)-36 b(ufnahmetest)399 b(ersc)-36 b(heinen,)401
b(ist)f(binomialv)-36 b(erteilt)402 b(mit)f Fx(n)369
b FB(=)g(122)1770 30719 y FH(und)433 b Fx(p)369 b FB(=)f(0)p
Fx(;)p FB(40)p FH(.)p 42912 31922 V 45277 31922 V 1062
31966 44260 45 v 1062 37021 45 5056 v 1770 33826 a(Die)435
b(Anzahl)e(der)g(ric)-36 b(h)g(tig)434 b(b)36 b(ean)-36
b(t)g(w)g(orteten)432 b(F)-108 b(ragen)434 b(des)f(A)-36
b(ufnahmetests)433 b(des)1770 35818 y(Kandidaten)h Fx(K)528
b FH(ist)434 b(binomialv)-36 b(erteilt)435 b(mit)e Fx(n)370
b FB(=)e(10)434 b FH(und)f Fx(p)369 b FB(=)f(0)p Fx(;)p
FB(25)p FH(.)p 42912 37021 V 1 0 0 TeXcolorrgb 43621
34826 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45277 37021 V 1062 37066 44260 45 v 1062
44113 45 7047 v 1770 38926 a FH(Die)579 b(durc)-36 b(hsc)g(hnittlic)g
(he)576 b(Anzahl)j(der)e(ric)-36 b(h)g(tig)578 b(b)36
b(ean)-36 b(t)g(w)g(orteten)577 b(F)-108 b(ragen)578
b(aller)1770 40918 y(angetretenen)433 b(Kandidatinnen)g(und)f
(Kandidaten)h(ist)h(binomialv)-36 b(erteilt)435 b(mit)1770
42909 y Fx(n)370 b FB(=)e(122)435 b FH(und)d Fx(p)369
b FB(=)g(0)p Fx(;)p FB(40)p FH(.)p 42912 44113 V 45277
44113 V 1062 44157 44260 45 v 1062 49212 45 5056 v 1770
46017 a(Die)465 b(Anzahl)f(der)f(zuf\344llig)j(ankreuzenden)d
(Kandidatinnen)f(und)h(Kandidaten,)1770 48009 y(die)406
b(aufgenommen)f(w)-36 b(erden,)405 b(ist)g(binomialv)-36
b(erteilt)407 b(mit)e Fx(n)369 b FB(=)g(40)406 b FH(und)e
Fx(p)369 b FB(=)f(0)p Fx(;)p FB(25)p FH(.)p 42912 49212
V 45277 49212 V 1062 49256 44260 45 v 1062 54311 45 5056
v 1770 51116 a(Die)304 b(Anzahl)e(der)h(falsc)-36 b(h)303
b(b)36 b(ean)-36 b(t)g(w)g(orteten)302 b(F)-108 b(ragen)302
b(des)g(A)-36 b(ufnahmetests)302 b(des)g(Kan-)1770 53108
y(didaten)433 b Fx(K)529 b FH(ist)434 b(binomialv)-36
b(erteilt)434 b(mit)g Fx(n)369 b FB(=)g(10)434 b FH(und)f
Fx(p)369 b FB(=)f(0)p Fx(;)p FB(75)p FH(.)p 42912 54311
V 1 0 0 TeXcolorrgb 43621 52116 a FF(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 54311 V 1062 54356
44260 45 v 47992 4800 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 6792 a FD(WS)h(3.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 58384 54804 45 v 0 TeXcolorgray
24421 81281 a FH(83)p 0 TeXcolorgray eop end
%%Page: 84 84
TeXDict begin 84 83 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(3.3)g(-)g(2)h(Binomialv)-60
b(erteilung)714 b(-)k(MC)f(-)h(BIFIE)p 0 TeXcolorgray
-1391 4800 a FH(99.)p 0 TeXcolorgray 651 w(Einige)456
b(der)f(un)-36 b(ten)454 b(angef\374hrten)g(Situationen)h(k)-36
b(\366nnen)455 b(mit)h(einer)f(Binomialv)-36 b(erteilung)921
6792 y(mo)36 b(delliert)434 b(w)-36 b(erden.)921 11330
y(Kreuze)425 b(diejenige\(n\))g(Situation\(en\))f(an,)h(b)36
b(ei)425 b(der/denen)f(die)h(Zufallsv)-72 b(ariable)427
b Fx(X)530 b FH(bino-)921 13322 y(mialv)-36 b(erteilt)435
b(ist.)p 1062 14030 44260 45 v 1062 21151 45 7121 v 1770
15890 a(A)-36 b(us)552 b(einer)h(Urne)e(mit)i(vier)g(blauen,)f(zw)-36
b(ei)553 b(gr\374nen)f(und)f(drei)h(w)-36 b(ei\377en)553
b(Kugeln)1770 17882 y(w)-36 b(erden)425 b(drei)f(Kugeln)h(mit)g
(Zur\374c)-36 b(klegen)425 b(gezogen.)h(\()p Fx(X)529
b FH(=)425 b(Anzahl)g(der)f(gr\374nen)1770 19874 y(Kugeln\))p
42912 21151 V 1 0 0 TeXcolorrgb 43621 17923 a FF(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
21151 V 1062 21195 44260 45 v 1062 26324 45 5129 v 1770
23055 a FH(In)434 b(einer)f(Grupp)36 b(e)432 b(mit)i(25)g(Kindern)f
(sind)g(sieb)36 b(en)433 b(Linksh\344nder.)g(Es)h(w)-36
b(erden)1770 25047 y(drei)434 b(Kinder)f(zuf\344llig)i(ausgew)-36
b(\344hlt.)435 b(\()p Fx(X)538 b FH(=)433 b(Anzahl)h(der)f
(Linksh\344nder\))p 42912 26324 V 45277 26324 V 1062
26368 44260 45 v 1062 33489 45 7121 v 1770 28228 a(In)444
b(einem)g(U-Bahn-W)-108 b(aggon)443 b(sitzen)g(35)i(P)-36
b(ersonen.)443 b(Vier)h(hab)36 b(en)443 b(k)-36 b(einen)443
b(F)-108 b(ahr-)1770 30220 y(sc)-36 b(hein.)418 b(Drei)h(w)-36
b(erden)417 b(k)-36 b(on)g(trolliert.)420 b(\()p Fx(X)522
b FH(=)418 b(Anzahl)g(der)f(P)-36 b(ersonen)418 b(ohne)f(F)-108
b(ahr-)1770 32212 y(sc)-36 b(hein\))p 42912 33489 V 45277
33489 V 1062 33533 44260 45 v 1062 42646 45 9113 v 1770
35393 a(Bei)479 b(einem)f(Multiple-Choice-T)-108 b(est)478
b(sind)f(pro)h(A)-36 b(ufgab)36 b(e)479 b(drei)e(v)-36
b(on)479 b(f\374nf)f(W)-108 b(ahl-)1770 37385 y(m\366glic)-36
b(hk)g(eiten)524 b(ric)-36 b(h)g(tig.)523 b(Die)h(An)-36
b(t)g(w)g(orten)521 b(w)-36 b(erden)522 b(nac)-36 b(h)522
b(dem)g(Zufallsprinzip)1770 39377 y(angekreuzt.)435 b(Sieb)36
b(en)432 b(A)-36 b(ufgab)36 b(en)434 b(w)-36 b(erden)433
b(gestellt.)i(\()p Fx(X)538 b FH(=)433 b(Anzahl)h(der)f(ric)-36
b(h)g(tig)1770 41369 y(gel\366sten)435 b(A)-36 b(ufgab)36
b(en\).)p 42912 42646 V 1 0 0 TeXcolorrgb 43621 38422
a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45277 42646 V 1062 42690 44260 45 v 1062 47900 45 5211
v 1770 44631 a FH(Die)435 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)433
b(f\374r)h(die)f(Geburt)f(eines)i(M\344dc)-36 b(hens)432
b(liegt)j(b)36 b(ei)434 b(52)217 b(\045.)1770 46623 y(Eine)434
b(F)-108 b(amilie)434 b(hat)g(drei)f(Kinder.)g(\()p Fx(X)539
b FH(=)433 b(Anzahl)g(der)g(M\344dc)-36 b(hen\))p 42912
47900 V 1 0 0 TeXcolorrgb 43621 45627 a FF(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 47900
V 1062 47944 44260 45 v 47992 4800 a FE(___/1)p 1 0 0
TeXcolorrgb 47905 6792 a FD(WS)369 b(3.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 51973 54804 45
v 0 TeXcolorgray 24421 81281 a FH(84)p 0 TeXcolorgray
eop end
%%Page: 85 85
TeXDict begin 85 84 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)957 b(3.3)g(-)g(3)h(Mo)60
b(dellierung)955 b(mit)i(Binomialv)-60 b(erteilung)954
b(-)k(MC)g(-)-2331 4515 y(BIFIE)p 0 TeXcolorgray -2042
7823 a FH(100.)p 0 TeXcolorgray 652 w(Gegeb)36 b(en)413
b(sind)h(f\374nf)g(Situationen,)g(b)36 b(ei)415 b(denen)e(nac)-36
b(h)413 b(einer)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)414
b(gefragt)874 9815 y(wird.)921 14352 y(Kreuze)354 b(diejenige\(n\))f
(Situation\(en\))g(an,)h(die)g(mithilfe)h(der)e(Binomialv)-36
b(erteilung)356 b(mo)36 b(del-)921 16344 y(liert)434
b(w)-36 b(erden)433 b(kann/k)-36 b(\366nnen.)p 1062 17384
44260 45 v 1062 28415 45 11031 v 1770 19244 a(In)482
b(der)g(Kan)-36 b(tine)481 b(eines)h(Betrieb)36 b(es)482
b(essen)g(80)h(P)-36 b(ersonen.)482 b(Am)g(Mon)-36 b(tag)482
b(w)-36 b(erden)1770 21236 y(ein)293 b(v)-36 b(egetarisc)g(hes)293
b(Geric)-36 b(h)g(t)292 b(und)f(drei)i(w)-36 b(eitere)293
b(Men)-36 b(\374s)291 b(angeb)36 b(oten.)294 b(Erfahrungs-)1770
23228 y(gem\344\377)443 b(w)-36 b(\344hlt)443 b(jede)f(vierte)g(P)-36
b(erson)442 b(das)f(v)-36 b(egetarisc)g(he)443 b(Geric)-36
b(h)g(t.)441 b(Es)h(w)-36 b(erden)441 b(20)1770 25220
y(v)-36 b(egetarisc)g(he)435 b(Geric)-36 b(h)g(te)432
b(v)-36 b(orb)36 b(ereitet.)1770 27212 y(Wie)435 b(gro\377)f(ist)g(die)
f(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)434 b(dass)g(diese)f(nic)-36
b(h)g(t)433 b(ausreic)-36 b(hen?)p 42912 28415 V 1 0 0
TeXcolorrgb 43621 23232 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45277 28415 V 1062 28459 44260
45 v 1062 35248 45 6789 v 1770 30319 a FH(Bei)591 b(einer)f(Lieferung)g
(v)-36 b(on)591 b(20)f(Smartphones)f(sind)h(f\374nf)g(defekt.)i(Es)e(w)
-36 b(erden)1770 32311 y(nac)g(heinander)433 b(drei)g(Ger\344te)g(en)
-36 b(tnommen,)433 b(getestet)h(und)e(nic)-36 b(h)g(t)433
b(zur\374c)-36 b(kgelegt.)1770 34303 y(Mit)434 b(w)-36
b(elc)g(her)434 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)433
b(sind)g(mindestens)g(zw)-36 b(ei)434 b(da)-36 b(v)g(on)434
b(defekt?)p 42912 35248 V 45277 35248 V 1062 35292 44260
45 v 1062 48253 45 12961 v 1770 37348 a(In)463 b(einer)g(Klasse)g(m)-36
b(\374ssen)462 b(die)h(Sc)-36 b(h)g(\374ler/innen)461
b(b)36 b(ei)463 b(der)f(\334b)36 b(erpr\374fung)462 b(der)g(Bil-)1770
39340 y(dungsstandards)404 b(auf)i(einem)g(anon)-36 b(ymen)405
b(F)-108 b(rageb)36 b(ogen)406 b(ihr)f(Gesc)-36 b(hlec)g(h)g(t)404
b(\(m,)i(w\))1770 41332 y(ankreuzen.)357 b(In)f(der)g(Klasse)i(sind)e
(16)h(Sc)-36 b(h)g(\374lerinnen)354 b(und)h(12)i(Sc)-36
b(h)g(\374ler.)356 b(F)-27 b(\374nf)356 b(P)-36 b(er-)1770
43324 y(sonen)434 b(hab)36 b(en)433 b(auf)h(dem)f(F)-108
b(rageb)36 b(ogen)433 b(das)h(Gesc)-36 b(hlec)g(h)g(t)432
b(nic)-36 b(h)g(t)433 b(angekreuzt.)1770 45316 y(Mit)346
b(w)-36 b(elc)g(her)345 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)345
b(b)36 b(e\034nden)343 b(sic)-36 b(h)345 b(drei)g(Sc)-36
b(h)g(\374ler)344 b(un)-36 b(ter)344 b(den)g(f\374nf)1770
47308 y(P)-36 b(ersonen?)p 42912 48253 V 45277 48253
V 1062 48297 44260 45 v 1062 57336 45 9039 v 1770 50157
a(Ein)434 b(Gro\377h\344ndler)f(erh\344lt)g(eine)h(Lieferung)f(v)-36
b(on)434 b(2)g(000)h(Smartphones,)d(v)-36 b(on)434 b(de-)1770
52149 y(nen)f(erfahrungsgem\344\377)i(5)217 b(\045)433
b(defekt)h(sind.)1770 54141 y(Mit)501 b(w)-36 b(elc)g(her)500
b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit)500 b(b)36
b(e\034nden)499 b(sic)-36 b(h)500 b(80)h(bis)f(90)h(defekte)g
(Ger\344te)1770 56133 y(in)434 b(der)f(Lieferung?)p 42912
57336 V 1 0 0 TeXcolorrgb 43621 53149 a FF(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 57336
V 1062 57380 44260 45 v 1062 68411 45 11031 v 1770 59240
a FH(In)295 b(einer)f(Klinik)i(w)-36 b(erden)293 b(500)j(krank)-36
b(e)295 b(P)-36 b(ersonen)293 b(mit)i(einem)f(b)36 b(estimm)-36
b(ten)294 b(Medi-)1770 61232 y(kamen)-36 b(t)459 b(b)36
b(ehandelt.)457 b(Die)i(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)458
b(dass)g(sc)-36 b(h)g(w)g(ere)458 b(Neb)36 b(en)-36 b(wirkun-)1770
63224 y(gen)434 b(auftreten,)f(b)36 b(etr\344gt)434 b(0,001.)1770
65216 y(Wie)567 b(gro\377)g(ist)f(die)g(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit,)567 b(dass)f(b)36 b(ei)566 b(mehr)f(als)i(zw)-36
b(ei)567 b(P)-36 b(ersonen)1770 67208 y(sc)g(h)g(w)g(ere)434
b(Neb)36 b(en)-36 b(wirkungen)433 b(auftreten?)p 42912
68411 V 1 0 0 TeXcolorrgb 43621 63228 a FF(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 68411
V 1062 68455 44260 45 v 47992 7823 a FE(___/1)p 1 0 0
TeXcolorrgb 47905 9815 a FD(WS)369 b(3.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 72483 54804 45
v 0 TeXcolorgray 24421 81281 a FH(85)p 0 TeXcolorgray
eop end
%%Page: 86 86
TeXDict begin 86 85 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1794 a FI(WS)872 b(3.3)h(-)g(4)g(Sammelw)-60
b(ahrsc)g(heinlic)g(hk)g(eit)872 b(b)60 b(ei)872 b(\334b)60
b(errasc)-60 b(h)g(ungs-)-2331 4817 y(eiern)717 b(-)g(O)-60
b(A)718 b(-)g(Matura)f(2014/15)g(-)g(Neb)60 b(en)-60
b(termin)716 b(1)p 0 TeXcolorgray -2042 8124 a FH(101.)p
0 TeXcolorgray 652 w(Ein)660 b(italienisc)-36 b(her)660
b(S\374\377w)-36 b(arenhersteller)660 b(stellt)g(\334b)36
b(errasc)-36 b(h)g(ungseier)659 b(her.)i(Das)g(Ei)f(b)36
b(e-)921 10116 y(steh)-36 b(t)469 b(aus)h(Sc)-36 b(hok)g(olade.)472
b(Im)e(Inneren)f(des)h(Eies)h(b)36 b(e\034ndet)468 b(sic)-36
b(h)470 b(in)g(einer)g(gelb)36 b(en)471 b(Kapsel)921
12108 y(ein)607 b(Spielzeug)f(o)36 b(der)607 b(eine)g(Sammel\034gur.)h
(Der)f(Hersteller)g(wirbt)f(f\374r)h(die)g(Star-W)-108
b(ars-)921 14100 y(Sammel\034guren)433 b(mit)g(dem)h(Slogan)g(\022)-108
b(Wir)433 b(sind)h(jetzt)f(mit)h(dab)36 b(ei,)434 b(in)f(jedem)h(7.)g
(Ei!\020)-181 b(.)921 18637 y(P)-36 b(eter)439 b(kauft)h(in)f(einem)h
(Gesc)-36 b(h\344ft)439 b(zehn)g(\334b)36 b(errasc)-36
b(h)g(ungseier)438 b(aus)i(dieser)f(Serie.)g(Berec)-36
b(h-)921 20629 y(ne)551 b(die)g(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g
(eit,)552 b(dass)g(P)-36 b(eter)551 b(mindestens)f(eine)i(Star-W)-108
b(ars-Sammel\034gur)921 22621 y(erh\344lt.)p 1 0 0 TeXcolorrgb
856 25166 a FB(1)295 b Fw(\000)3130 23882 y Fj(\020)3924
24643 y FG(6)p 3924 24856 471 45 v 3924 25624 a(7)4527
23882 y Fj(\021)5188 24188 y FG(10)921 29704 y FH(L\366sungssc)-36
b(hl\374ssel:)921 31696 y(Ein)533 b(Punkt)f(f\374r)g(die)h(ric)-36
b(h)g(tige)533 b(L\366sung.)g(Andere)f(Sc)-36 b(hreib)g(w)g(eisen)532
b(des)g(Ergebnisses)h(\(als)921 33687 y(Dezimalzahl,)436
b(in)d(Prozen)-36 b(t\))433 b(sind)g(eb)36 b(enfalls)434
b(als)h(ric)-36 b(h)g(tig)433 b(zu)g(w)-36 b(erten.)874
35679 y(T)-108 b(oleranzin)-36 b(terv)-72 b(alle:)435
b FB([)8 b(0)p Fx(;)p FB(78;)221 b(0)p Fx(;)p FB(79])437
b FH(bzw.)d FB([)8 b(78)221 b(\045;)g(79)g(\045])p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 8124
a FE(___/1)p 1 0 0 TeXcolorrgb 47905 10116 a FD(WS)369
b(3.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 39487 54804 45 v 0 TeXcolorgray 24421 81281 a FH(86)p
0 TeXcolorgray eop end
%%Page: 87 87
TeXDict begin 87 86 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)549 b(3.3)g(-)h(5)f(Binomialv)-60
b(erteilte)547 b(Zufallsv)-120 b(ariable)547 b(-)j(MC)g(-)g(Matura)
-2385 4515 y(2013/14)718 b(1.)f(Neb)60 b(en)-60 b(termin)p
0 TeXcolorgray -2042 7823 a FH(102.)p 0 TeXcolorgray
652 w(In)493 b(einer)g(Urne)g(b)36 b(e\034nden)491 b(sic)-36
b(h)493 b(sieb)36 b(en)493 b(w)-36 b(ei\377e)495 b(und)d(drei)h(rote)g
(Kugeln,)h(die)f(gleic)-36 b(h)494 b(gro\377)921 9815
y(und)487 b(durc)-36 b(h)486 b(T)-108 b(asten)488 b(nic)-36
b(h)g(t)487 b(un)-36 b(tersc)g(heidbar)486 b(sind.)i(Jemand)f(nimm)-36
b(t,)488 b(ohne)f(hinzusehen,)921 11806 y(Kugeln)434
b(aus)f(der)g(Urne.)921 14352 y(In)339 b(w)-36 b(elc)g(hen)339
b(der)g(folgenden)h(F)-27 b(\344lle)340 b(ist)f(die)h(Zufallsv)-72
b(ariable)341 b Fx(X)444 b FH(binomialv)-36 b(erteilt?)342
b(Kreuze)921 16344 y(die)433 b(b)36 b(eiden)433 b(zutre\033enden)f(A)
-36 b(ussagen)434 b(an!)p 1062 19302 44260 45 v 1062
24357 45 5056 v 1770 21162 a Fx(X)439 b FH(b)36 b(esc)-36
b(hreibt)333 b(die)h(Anzahl)f(der)h(roten)f(Kugeln)h(b)36
b(ei)334 b(dreimaligem)h(Ziehen,)f(w)-36 b(enn)1770 23154
y(jede)434 b(en)-36 b(tnommene)433 b(Kugel)h(wieder)f(zur\374c)-36
b(kgelegt)434 b(wird.)p 42912 24357 V 1 0 0 TeXcolorrgb
43621 22162 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 24357 V 1062 24402 44260 45 v 1062
29457 45 5056 v 1770 26262 a Fx(X)539 b FH(b)36 b(esc)-36
b(hreibt)432 b(die)i(Anzahl)g(der)f(w)-36 b(ei\377en)434
b(Kugeln)f(b)36 b(ei)434 b(viermaligem)i(Ziehen,)1770
28254 y(w)-36 b(enn)434 b(die)f(en)-36 b(tnommenen)432
b(Kugeln)i(nic)-36 b(h)g(t)433 b(zur\374c)-36 b(kgelegt)434
b(w)-36 b(erden.)p 42912 29457 V 45277 29457 V 1062 29501
44260 45 v 1062 34556 45 5056 v 1770 31361 a Fx(X)539
b FH(b)36 b(esc)-36 b(hreibt)432 b(die)i(Anzahl)g(der)f(w)-36
b(ei\377en)434 b(Kugeln)f(b)36 b(ei)434 b(f\374nfmaligem)h(Ziehen,)1770
33353 y(w)-36 b(enn)434 b(jede)f(en)-36 b(tnommene)433
b(Kugel)h(wieder)g(zur\374c)-36 b(kgelegt)434 b(wird.)p
42912 34556 V 1 0 0 TeXcolorrgb 43621 32361 a FF(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
34556 V 1062 34600 44260 45 v 1062 39655 45 5056 v 1770
36460 a Fx(X)449 b FH(b)36 b(esc)-36 b(hreibt)342 b(die)h(Anzahl)g(der)
g(Z\374ge,)g(bis)h(die)f(erste)g(rote)g(Kugel)h(gezogen)g(wird,)1770
38452 y(w)-36 b(enn)434 b(jede)f(en)-36 b(tnommene)433
b(Kugel)h(wieder)g(zur\374c)-36 b(kgelegt)434 b(wird.)p
42912 39655 V 45277 39655 V 1062 39700 44260 45 v 1062
44755 45 5056 v 1770 41560 a Fx(X)517 b FH(b)36 b(esc)-36
b(hreibt)410 b(die)h(Anzahl)g(der)g(Z\374ge,)g(bis)g(alle)i(w)-36
b(ei\377en)411 b(Kugeln)h(gezogen)g(wur-)1770 43552 y(den,)434
b(w)-36 b(enn)433 b(die)g(en)-36 b(tnommenen)432 b(Kugeln)i(nic)-36
b(h)g(t)433 b(zur\374c)-36 b(kgelegt)434 b(w)-36 b(erden.)p
42912 44755 V 45277 44755 V 1062 44799 44260 45 v 47992
7823 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 9815 a FD(WS)369
b(3.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 48827 54804 45 v -2331 54255 a FI(WS)717 b(3.3)g(-)g(6)h(Reifen)e
(-)h(O)-60 b(A)718 b(-)g(Matura)f(NT)g(1)h(16/17)p 0
TeXcolorgray -2042 57563 a FH(103.)p 0 TeXcolorgray 652
w(Die)316 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)316
b(dass)f(ein)h(neuer)e(A)-36 b(utoreifen)316 b(einer)f(b)36
b(estimm)-36 b(ten)315 b(Mark)-36 b(e)316 b(inner-)921
59555 y(halb)477 b(der)g(ersten)g(10)217 b(000)479 b(Kilometer)f(F)-108
b(ahrt)477 b(durc)-36 b(h)476 b(einen)h(Materialfehler)i(defekt)f
(wird,)921 61547 y(liegt)434 b(b)36 b(ei)434 b Fx(p)221
b FB(\045)p FH(.)921 64092 y(Eine)433 b(Zufallsstic)-36
b(hprob)36 b(e)434 b(v)-36 b(on)434 b(80)g(neuen)f(Reifen)h(dieser)f
(Mark)-36 b(e)434 b(wird)g(getestet.)921 66637 y(Gib)467
b(einen)g(A)-36 b(usdruc)g(k)467 b(an,)g(mit)h(dem)f(man)g(die)h(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)468 b(dass)f(mindestens)921
68629 y(einer)641 b(dieser)g(Reifen)h(innerhalb)e(der)h(ersten)f(10)217
b(000)643 b(Kilometer)f(F)-108 b(ahrt)640 b(durc)-36
b(h)640 b(einen)921 70621 y(Materialfehler)435 b(defekt)f(wird,)g(b)36
b(erec)-36 b(hnen)432 b(kann!)p 1 0 0 TeXcolorrgb 856
73167 a FB(1)295 b Fw(\000)h FB(\(1)f Fw(\000)6511 72596
y Fr(p)p 6042 72857 1412 45 v 6042 73625 a FG(100)7587
73167 y FB(\))8093 72685 y FG(80)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 57563 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 59555 a FD(WS)369 b(3.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 77100
54804 45 v 0 TeXcolorgray 24421 81281 a FH(87)p 0 TeXcolorgray
eop end
%%Page: 88 88
TeXDict begin 88 87 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(3.4)g(-)g(1)h(Sc)-60
b(h)g(\374lerarb)60 b(eit)715 b(-)j(L)-179 b(T)716 b(-)i(BIFIE)p
0 TeXcolorgray -2042 4800 a FH(104.)p 0 TeXcolorgray
652 w(Die)409 b(Spinde)f(einer)g(Sc)-36 b(h)g(ule)407
b(w)-36 b(erden)408 b(mit)h(V)-108 b(orh\344ngesc)-36
b(hl\366ssern)408 b(gesic)-36 b(hert,)409 b(die)f(im)h(Eigen-)921
6792 y(tum)309 b(der)g(Sc)-36 b(h)g(\374ler/innen)308
b(stehen.)i(Erfahrungsgem\344\377)h(m)-36 b(\374ssen)309
b(5)217 b(\045)310 b(aller)g(Spindsc)-36 b(hl\366sser)921
8784 y(innerhalb)403 b(eines)g(Jahres)h(aufgebro)36 b(c)-36
b(hen)403 b(w)-36 b(erden,)403 b(w)-36 b(eil)405 b(die)e(Sc)-36
b(hl\374ssel)403 b(v)-36 b(erloren)404 b(wurden.)921
10776 y(Ein)509 b(Sc)-36 b(h)g(\374ler)508 b(b)36 b(erec)-36
b(hnet)508 b(die)h(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)510
b(dass)f(innerhalb)g(eines)g(Jahres)g(v)-36 b(on)888
12768 y(200)461 b(Sc)-36 b(hl\366ssern)460 b(mindestens)f(zw)-36
b(\366lf)461 b(aufgebro)36 b(c)-36 b(hen)460 b(w)-36
b(erden)459 b(m)-36 b(\374ssen.)460 b(Die)g(nac)-36 b(hstehen-)921
14760 y(den)433 b(A)-36 b(ufzeic)g(hn)g(ungen)432 b(zeigen)i(seine)g(V)
-108 b(orgehensw)-36 b(eise.)p 0.3 0.3 0.3 TeXcolorrgb
0 TeXcolorgray 0.3 0.3 0.3 TeXcolorrgb 3782 17848 a Fe(P)154
b Fd(\()p Fe(X)395 b Fc(\025)307 b Fd(12\))371 b FD(.)185
b(.)g(.)g(Berec)-31 b(hn)g(ung)369 b(bzw.)h(Berec)-31
b(hn)g(ung)369 b(der)g(Gegen-WSK)g(zu)g(umst\344ndlic)-31
b(h!)3782 19773 y Fe(\026)308 b Fd(=)f(200)248 b Fc(\001)e
Fd(0)p Fe(;)p Fd(05)310 b(=)d(10)3782 21421 y Fe(\033)347
b Fd(=)5931 20621 y Fc(p)p 6853 20621 7749 45 v 800 x
Fd(200)248 b Fc(\000)d Fd(0)p Fe(;)p Fd(05)j Fc(\001)f
Fd(0)p Fe(;)p Fd(95)309 b Fc(\031)f Fd(3)p Fe(;)p Fd(08)h
Fe(>)f Fd(3)369 b Fb(X)3782 25166 y Fe(z)356 b Fd(=)5955
24417 y Fe(x)245 b Fc(\001)i Fe(\026)p 5955 24911 2100
45 v 6668 25925 a(\033)8494 25166 y Fd(=)9795 24417 y(11)p
Fe(;)p Fd(5)h Fc(\001)f Fd(10)p 9795 24911 3875 45 v
11396 25925 a Fe(\033)14110 25166 y Fc(\031)308 b Fd(0)p
Fe(;)p Fd(49)3743 28740 y(\010\(0)p Fe(;)p Fd(49\))i(=)e(0)p
Fe(;)p Fd(6879)3782 30665 y Fc(\))g Fe(P)154 b Fd(\()p
Fe(X)394 b Fc(\025)308 b Fd(12\))10817 30354 y Fc(\030)10817
30720 y Fd(=)11985 30665 y(1)247 b Fc(\000)e Fd(0)p Fe(;)p
Fd(6879)17274 30354 y Fc(\030)17274 30720 y Fd(=)18442
30665 y(0)p Fe(;)p Fd(3121)3782 32590 y Fc(\))308 b Fe(z)5712
32756 y Fa(n)6622 32590 y Fc(\031)f Fd(31)184 b(\045)p
5197 32933 4808 45 v 5197 33155 V 0 TeXcolorgray 0 0 0
TeXcolorrgb 921 33816 a FH(Erg\344nze)358 b(die)h(T)-108
b(extl\374c)-36 b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36
b(h)357 b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36
b(h)g(tigen)921 35808 y(Satzteile)434 b(so,)g(dass)g(eine)f
(mathematisc)-36 b(h)434 b(k)-36 b(orrekte)434 b(A)-36
b(ussage)434 b(en)-36 b(tsteh)g(t!)921 39298 y(Bei)448
b(der)e(Anzahl)h(der)g(Sc)-36 b(hl\366sser,)447 b(die)g(aufgebro)36
b(c)-36 b(hen)447 b(w)-36 b(erden)447 b(m)-36 b(\374ssen,)447
b(handelt)f(es)h(sic)-36 b(h)921 41290 y(um)433 b(eine)p
6051 41290 3150 45 v 9673 41242 a(1)9201 41290 y Fp(\015)p
10795 41290 V 3583 w FH(,)h(und)p 17991 41290 V 21613
41242 a(2)21141 41290 y Fp(\015)p 22735 41290 V 3583
w FH(.)p 0 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1366 42663
20693 45 v 1366 45747 45 3085 v 11388 44444 a(1)10916
44492 y Fp(\015)p 22015 45747 V 1366 45791 20693 45 v
1366 49050 45 3260 v 2075 47847 a FH(gleic)-36 b(h)g(v)g(erteilte)432
b(Zufallsv)-72 b(ariable)p 19650 49050 V 20358 47753
a FF(2)p 22015 49050 V 1366 49095 20693 45 v 1366 54150
45 5056 v 2075 50955 a FH(binomialv)-36 b(erteilte)357
b(Zufallsv)-72 b(aria-)2075 52947 y(ble)p 19650 54150
V 1 0 0 TeXcolorrgb 20358 51954 a FF(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 22015 54150 V 1366
54194 20693 45 v 1366 59249 45 5056 v 2075 56054 a FH(normalv)-36
b(erteilte)434 b(Zufallsv)-72 b(aria-)2075 58046 y(ble)p
19650 59249 V 20358 57054 a FF(2)p 22015 59249 V 1366
59293 20693 45 v 0 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
26557 42773 19254 45 v 26557 45858 45 3085 v 35859 44555
a FH(2)35387 44603 y Fp(\015)p 45766 45858 V 26557 45902
19254 45 v 26557 52949 45 7047 v 27266 47762 a FH(der)890
b(Sc)-36 b(h)g(\374ler)890 b(rec)-36 b(hnet)890 b(mit)27266
49754 y(der)433 b(Normalv)-36 b(erteilung,)435 b(ob-)27266
51746 y(w)-36 b(ohl)434 b(es)f(nic)-36 b(h)g(t)433 b(zul\344ssig)i(ist)
p 43401 52949 V 44110 49757 a FF(2)p 45766 52949 V 26557
52993 19254 45 v 26557 64024 45 11031 v 27266 54853 a
FH(der)361 b(Sc)-36 b(h)g(\374ler)360 b(v)-36 b(erw)g(ec)g(hselt)362
b(den)27266 56845 y(Mittelw)-36 b(ert)418 b(mit)g(dem)g(Erw)-36
b(ar-)27266 58837 y(tungsw)g(ert,)448 b(also)h(ist)f(die)h(A)-36
b(uf-)27266 60829 y(gab)36 b(e)711 b(deshalb)f(nic)-36
b(h)g(t)710 b(ric)-36 b(h)g(tig)27266 62821 y(gel\366st)p
43401 64024 V 44110 58841 a FF(2)p 45766 64024 V 26557
64068 19254 45 v 26557 71115 45 7047 v 27266 65928 a
FH(der)433 b(Sc)-36 b(h)g(\374ler)432 b(rec)-36 b(hnet)433
b(zu-)27266 67920 y(l\344ssigerw)-36 b(eise)1147 b(mit)e(der)27266
69912 y(Normalv)-36 b(erteilung)p 43401 71115 V 1 0 0
TeXcolorrgb 44110 67924 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 0 0 TeXcolorrgb 45766 71115 V 26557 71159
19254 45 v 0 TeXcolorgray 47992 4800 a FE(___/1)p 1 0 0
TeXcolorrgb 47905 6792 a FD(WS)369 b(3.4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 76627 54804 45
v 0 TeXcolorgray 24421 81281 a FH(88)p 0 TeXcolorgray
eop end
%%Page: 89 89
TeXDict begin 89 88 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(3.4)g(-)g(2)h(Ben)-60
b(utzung)715 b(des)i(A)-60 b(utos)716 b(-)i(O)-60 b(A)718
b(-)f(BIFIE)p 0 TeXcolorgray -2042 4800 a FH(105.)p 0
TeXcolorgray 652 w(Einer)370 b(V)-108 b(er\366\033en)-36
b(tlic)g(h)g(ung)369 b(der)h(Statistik)h(A)-36 b(ustria)371
b(kann)f(man)h(en)-36 b(tnehmen,)369 b(dass)h(v)-36 b(on)371
b(den)921 6792 y(\374b)36 b(er)639 b(15-J\344hrigen)i(\326sterreic)-36
b(herinnen)638 b(und)g(\326sterreic)-36 b(hern)639 b(ca.)j(38,6)217
b(\045)641 b(t\344glic)-36 b(h)640 b(das)873 8784 y(A)-36
b(uto)433 b(b)36 b(en)-36 b(utzen)432 b(\(als)i(Lenk)-36
b(er/in)433 b(o)36 b(der)434 b(als)g(Mitfahrer/in\).)p
0 TeXcolorgray 0 TeXcolorgray 2874 11718 a Fz(Quelle:)276
b(Statistik)g(A)-22 b(ustria)276 b(\(Hrsg.\))g(\(2013\).)g(Um)-22
b(w)g(eltb)22 b(edingungen,)275 b(Um)-22 b(w)g(eltv)g(erhalten)277
b(2011.)f(Ergebnisse)g(des)g(Mikrozensus.)h(Wien:)37609
12493 y(Statistik)f(A)-22 b(ustria.)277 b(S.)f(95.)921
18469 y FH(Es)434 b(w)-36 b(erden)432 b(500)j(\374b)36
b(er)433 b(15-j\344hrige)h(\326sterreic)-36 b(her/innen)433
b(zuf\344llig)i(ausgew)-36 b(\344hlt.)921 23006 y(Gib)591
b(f\374r)g(die)g(Anzahl)g(derjenigen)g(P)-36 b(ersonen,)591
b(die)h(t\344glic)-36 b(h)592 b(das)f(A)-36 b(uto)591
b(\(als)h(Lenk)-36 b(er/in)921 24998 y(o)36 b(der)571
b(als)h(Mitfahrer/in\))g(b)36 b(en)-36 b(utzen,)570 b(n\344herungsw)-36
b(eise)571 b(ein)g(um)g(den)g(Erw)-36 b(artungsw)g(ert)921
26990 y(symmetrisc)g(hes)434 b(In)-36 b(terv)-72 b(all)434
b(mit)f(95)217 b(\045iger)435 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g
(eit)433 b(an.)p 1 0 0 TeXcolorrgb 921 31527 a(Die)365
b(binomialv)-36 b(erteilte)366 b(Zufallsv)-72 b(ariable)366
b Fx(X)470 b FH(gibt)364 b(die)h(Anzahl)f(der)g(\374b)36
b(er)364 b(15-J\344hrigen)h(an,)921 33519 y(die)433 b(t\344glic)-36
b(h)435 b(das)e(A)-36 b(uto)433 b(b)36 b(en)-36 b(utzen.)921
38057 y Fx(n)369 b FB(=)g(500)921 40049 y Fx(p)g FB(=)f(0)p
Fx(;)p FB(386)j Fw(\))e FB(1)296 b Fw(\000)f Fx(p)369
b FB(=)g(0)p Fx(;)p FB(614)873 44586 y FH(Appro)-36 b(ximation)434
b(der)f(Binomialv)-36 b(erteilung)435 b(durc)-36 b(h)432
b(die)i(Normalv)-36 b(erteilung:)921 46578 y Fx(\026)368
b FB(=)h(193)921 48570 y Fx(\033)417 b FB(=)3458 47615
y Fw(p)p 4564 47615 9796 54 v 4564 48570 a FB(500)297
b Fw(\001)e FB(0)p Fx(;)p FB(386)i Fw(\001)e FB(0)p Fx(;)p
FB(614)370 b Fw(\031)g FB(10)p Fx(;)p FB(886)888 50562
y(2)296 b Fw(\001)f FB(\010\()p Fx(z)59 b FB(\))296 b
Fw(\000)f FB(1)369 b(=)g Fx(D)36 b FB(\()p Fx(z)59 b
FB(\))369 b(=)g(0)p Fx(;)p FB(95)h Fw(\))f Fx(z)429 b
Fw(\031)369 b FB(1)p Fx(;)p FB(96)921 52554 y Fx(x)1660
52753 y FG(1)p Fr(;)p FG(2)3287 52554 y FB(=)f Fx(\026)295
b Fw(\006)g Fx(z)355 b Fw(\001)295 b Fx(\033)417 b Fw(\))369
b Fx(x)12288 52753 y FG(1)13183 52554 y Fw(\031)g FB(171;)657
b Fx(x)18292 52753 y FG(2)19187 52554 y Fw(\031)369 b
FB(215)h Fw(\))f FB([)8 b(171;)656 b(215])921 57091 y
FH(L\366sungssc)-36 b(hl\374ssel:)437 b(Ein)h(Punkt)f(f\374r)g(die)h
(Angab)36 b(e)437 b(eines)h(symmetrisc)-36 b(hen)437
b(L\366sungsin)-36 b(ter-)887 59083 y(v)-72 b(alls)435
b(laut)f(L\366sungserw)-36 b(artung.)874 61075 y(T)-108
b(oleranzin)-36 b(terv)-72 b(all)435 b(f\374r)e(die)h(un)-36
b(tere)432 b(Grenze:)h FB([)8 b(170;)656 b(173])874 63067
y FH(T)-108 b(oleranzin)-36 b(terv)-72 b(all)435 b(f\374r)e(die)h(ob)36
b(ere)433 b(Grenze:)g FB([)8 b(213;)657 b(216])p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800
a FE(___/1)p 1 0 0 TeXcolorrgb 47905 6792 a FD(WS)369
b(3.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 68534 54804 45 v 0 TeXcolorgray 24421 81281 a FH(89)p
0 TeXcolorgray eop end
%%Page: 90 90
TeXDict begin 90 89 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)947 b(3.4)h(-)g(3)g(Gra\034sc)-60
b(he)947 b(Deutung)g(-)h(O)-60 b(A)948 b(-)g(Matura)g(2016/17)g(-)-2331
4622 y(Haupttermin)p 0 TeXcolorgray -2042 7929 a FH(106.)p
0 TeXcolorgray 652 w(In)358 b(nac)-36 b(hstehender)357
b(Abbildung)h(ist)g(die)h(Dic)-36 b(h)g(tefunktion)358
b Fx(f)501 b FH(der)358 b(appro)-36 b(ximierenden)358
b(Nor-)921 9921 y(malv)-36 b(erteilung)434 b(einer)g(binomialv)-36
b(erteilten)434 b(Zufallsv)-72 b(ariablen)435 b Fx(X)539
b FH(dargestellt.)921 30325 y
 currentpoint currentpoint translate 0.99164 0.99164 scale neg exch
neg exch translate
 921 30325 a 921 30325 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 409.72339 a add def
/d 0.0 a add neg def /h 159.33472 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end

921 30325 a -21284 27805 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  204.8617 0.0 221.9335 0.0 0.5 17.07181
2.84544 2.84544 tx@CoilDict begin ZigZag end /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial 24567 w @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 388.38362  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 388.38362  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 79.67604  def /dT 1118818 abs 65536 div viceversa
{ neg } if def /DT 2. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 8.5359  mul cntTick add
def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 8.5359  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 388.38362
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2813 29151 a FG(50)950
b(52)f(54)h(56)g(58)g(60)f(62)h(64)g(66)g(68)g(70)f(72)h(74)g(76)g(78)f
(80)h(82)g(84)g(86)g(88)f(90)h(92)g(94)-21284 27805 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end

-21284 27805 a -21284 27805 a
tx@Dict begin  { 610.31712 79.67604 pop 221.9335 0.0 exch pop } PutCoor
PutBegin  end
 -21284 27805 a -21284 27805
a
tx@Dict begin  { 5.0 6.67703 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 -21284 27805 a -21654 28091 a Fx(x)-21284 27805 y
tx@Dict begin  PutEnd  end
 -21284
27805 a -21284 27805 a
tx@Dict begin  PutEnd  end
 -21284 27805 a -21284 27805 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end

-21284 27805 a -21284 27805 a
tx@Dict begin  { 221.9335 0.0 pop 610.31712 79.67604 exch pop } PutCoor
PutBegin  end
 -21284 27805 a -21284 27805
a
tx@Dict begin  { 5.0 0.0 0.0 0.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -21284 27805 a -21284 27805 a
tx@Dict begin  PutEnd  end
 -21284 27805 a -21284
27805 a
tx@Dict begin  PutEnd  end
 -21284 27805 a 22677 w @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 136.56766  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 136.56766  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 512.15424  def /dT 1492062 abs 65536 div viceversa
{ neg } if def /DT 0.02 abs viceversa { neg } if def /subTNo 2 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse 0.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 1138.11023  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 1138.11023  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 136.56766
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -21284
27805 a
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -21284 27805 a -21284 27805 a
tx@Dict begin  { 717.01593 136.56766 pop 204.8617 0.0 exch pop } PutCoor
PutBegin  end
 -21284 27805 a
-21284 27805 a
tx@Dict begin  { 5.0 0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 -21284 27805 a -21284 27805 a
tx@Dict begin  PutEnd  end
 -21284 27805
a -21284 27805 a
tx@Dict begin  PutEnd  end
 -21284 27805 a -21284 27805 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -21284
27805 a -21284 27805 a
tx@Dict begin  { 204.8617 0.0 pop 717.01593 136.56766 exch pop } PutCoor
PutBegin  end
 -21284 27805 a -21284 27805 a
tx@Dict begin  { 5.0 22.88857 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end

-21284 27805 a -22551 28137 a Fx(f)142 b FB(\()p Fx(x)p
FB(\))-21284 27805 y
tx@Dict begin  PutEnd  end
 -21284 27805 a -21284 27805 a
tx@Dict begin  PutEnd  end
 -21284
27805 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x 26 def /x1 85 def /dx x1 x sub 199
div def /F@pstplot (EXP((-(x-46.0)^(2.0))/(5^(2.0)*2.0))/(abs(5)*sqrt(3.141592653589793*2.0)))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 8.5359 mul F@pstplot
1138.11023 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x
x dx add def xy  dup 1.e30 1138.11023 mul gt { moveto } { dup -1.e30
1138.11023 mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit
} if repeat ps@Exit not { /x x1 def xy  dup 1.e30 1138.11023 mul gt
{ moveto } { dup -1.e30 1138.11023 mul lt { moveto } { L } ifelse }
ifelse  } if  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   0.8 SLW 0  setgray
 /ArrowA { /lineto load stopped { moveto } if } def /ArrowB { } def
/ArrowInside { } def    /x 40. def /x1 72. def /dx x1 x sub 49 div
def /F@pstplot (EXP((-(x-46.0)^(2.0))/(5.0^(2.0)*2.0))/(abs(5.0)*sqrt(3.141592653589793*2.0)))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 8.5359 mul F@pstplot
1138.11023 mul } def  /ps@Exit false def xy /lineto load stopped {
moveto } if  49 1 sub { /x x dx add def xy  dup 1.e30 1138.11023 mul
gt { moveto } { dup -1.e30 1138.11023 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 1138.11023 mul gt { moveto } { dup -1.e30 1138.11023 mul
lt { moveto } { L } ifelse } ifelse  } if  614.58508 0.0 lineto 341.43616
0.0 lineto closepath gsave 0  setgray  0.5 .setopacityalpha  fill 
grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -21284 27805 a
tx@Dict begin  { 443.867 51.21288 } PutCoor PutBegin  end
 -21284 27805
a -172 x Fr(f)-21284 27805 y
tx@Dict begin  PutEnd  end
 -21284 27805 a 46276 30325
a
currentpoint initclip moveto
 46276 30325 a 921 30325 a
 currentpoint currentpoint translate 1 0.99164 div 1 0.99164 div scale
neg exch neg exch translate
 921 30325 a 2546 x FH(Deute)361
b(den)f(Fl\344c)-36 b(heninhalt)360 b(der)h(grau)g(markierten)g
(Fl\344c)-36 b(he)361 b(im)g(Hin)-36 b(blic)g(k)361 b(auf)h(die)e
(Berec)-36 b(h-)921 34863 y(n)g(ung)433 b(einer)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit!)p 1 0 0 TeXcolorrgb
921 37408 a Fx(P)181 b FB(\()p Fx(X)474 b Fw(\025)369
b FB(64\))921 39954 y FH(o)36 b(der:)921 42499 y(Der)593
b(Fl\344c)-36 b(heninhalt)592 b(der)f(dargestellten)i(Fl\344c)-36
b(he)592 b(b)36 b(esc)-36 b(hreibt)592 b(die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)921 44491 y(dass)434
b(die)f(Zufallsv)-72 b(ariable)436 b(X)d(mindestens)g(den)g(W)-108
b(ert)433 b(64)h(annimm)-36 b(t.)921 49028 y(L\366sungssc)g
(hl\374ssel:)921 51574 y(Ein)501 b(Punkt)f(f\374r)h(eine)g
(\(sinngem\344\377\))g(k)-36 b(orrekte)502 b(Deutung,)e(w)-36
b(ob)36 b(ei)502 b(auc)-36 b(h)500 b(die)h(Deutungen)921
53565 y Fx(P)181 b FB(\()p Fx(X)657 b(>)552 b FB(64\))542
b FH(bzw.)g Fx(P)181 b FB(\()p Fx(X)657 b Fw(\025)552
b FB(65\))542 b FH(o)36 b(der)541 b Fx(P)181 b FB(\(64)553
b Fw(\024)g Fx(X)657 b Fw(\024)552 b Fx(b)p FB(\))541
b FH(mit)h Fx(b)552 b Fw(\025)h FB(85)541 b FH(als)h(ric)-36
b(h)g(tig)542 b(zu)874 55557 y(w)-36 b(erten)433 b(sind.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
7929 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 9921 a FD(WS)369
b(3.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 59033 54804 45 v 0 TeXcolorgray 24421 81281 a FH(90)p
0 TeXcolorgray eop end
%%Page: 91 91
TeXDict begin 91 90 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(4.1)g(-)g(1)h(W)-179
b(ahl)716 b(-)h(O)-60 b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray
-2042 4800 a FH(107.)p 0 TeXcolorgray 652 w(Bei)402 b(einer)g
(Befragung)g(v)-36 b(on)402 b(2,000)h(zuf\344llig)h(ausgew)-36
b(\344hlten)402 b(w)-36 b(ahlb)36 b(erec)-36 b(h)g(tigten)401
b(P)-36 b(ersonen)921 6792 y(geb)36 b(en)307 b(14)217
b(\045)309 b(an,)f(dass)g(sie)g(b)36 b(ei)307 b(der)h(n\344c)-36
b(hsten)306 b(W)-108 b(ahl)308 b(f\374r)g(die)g(P)-36
b(artei)307 b(\022Alternativ)-36 b(es)309 b(Leb)36 b(en\020)921
8784 y(stimmen)378 b(w)-36 b(erden.)379 b(A)-36 b(ufgrund)377
b(dieses)i(Ergebnisses)g(gibt)f(ein)h(Mein)-36 b(ungsforsc)g(h)g
(ungsinsti-)921 10776 y(tut)433 b(an,)h(dass)f(die)h(P)-36
b(artei)433 b(mit)h(12)217 b(\045)434 b(bis)g(16)217
b(\045)433 b(der)h(Stimmen)e(rec)-36 b(hnen)433 b(kann.)921
15314 y(Mit)g(w)-36 b(elc)g(her)434 b(Sic)-36 b(herheit)433
b(kann)g(man)h(diese)f(Behauptung)g(aufstellen?)p 1 0 0
TeXcolorrgb 921 19851 a(K)-36 b(on\034denzin)g(terv)-72
b(all:)433 b FB([)8 b(0)p Fx(;)p FB(12;)221 b(0)p Fx(;)p
FB(16])921 22396 y Fx(\026)368 b FB(=)h Fx(n)296 b Fw(\001)f
Fx(p)369 b FB(=)f(2)221 b(000)297 b Fw(\001)e FB(0)p
Fx(;)p FB(14)371 b(=)d(280)921 24942 y Fx(\033)417 b
FB(=)3458 23608 y Fj(q)p 4564 23608 7287 45 v 4564 24942
a Fx(n)296 b Fw(\001)f Fx(p)g Fw(\001)g FB(\(1)h Fw(\000)f
Fx(p)p FB(\))369 b(=)f(15)p Fx(;)p FB(5)921 27487 y(0)p
Fx(;)p FB(16)296 b Fw(\001)g FB(2)221 b(000)370 b(=)f(320)888
30032 y(320)h(=)f(280)296 b(+)f Fx(z)355 b Fw(\001)295
b FB(15)p Fx(;)p FB(5)370 b Fw(!)f Fx(z)429 b FB(=)368
b(2)p Fx(;)p FB(58)j Fw(!)e FB(\002\()p Fx(z)59 b FB(\))369
b(=)f(0)p Fx(;)p FB(995)888 32578 y(2)296 b Fw(\001)f
FB(\002\()p Fx(z)59 b FB(\))295 b Fw(\000)g FB(1)370
b(=)e(0)p Fx(;)p FB(99)921 35123 y FH(Die)434 b(Behauptung)f(kann)g
(mit)h(99)217 b(\045iger)434 b(Sic)-36 b(herheit)433
b(aufgestellt)i(w)-36 b(erden.)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 4800 a FE(___/1)p 1 0 0
TeXcolorrgb 47905 6792 a FD(WS)369 b(4.1)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 38857 54804 45
v -2331 44158 a FI(WS)717 b(4.1)g(-)g(2)h(W)-60 b(\344hleran)g(teil)715
b(-)j(O)-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray -2042
47466 a FH(108.)p 0 TeXcolorgray 652 w(Bei)441 b(einer)g(Stic)-36
b(hprob)36 b(e)439 b(v)-36 b(on)441 b Fx(n)381 b FB(=)g(500)442
b FH(P)-36 b(ersonen)440 b(gab)36 b(en)441 b(120)g(P)-36
b(ersonen)440 b(an,)h(sie)g(w\374rden)921 49457 y(die)433
b(P)-36 b(artei)434 b Fx(A)g FH(w)-36 b(\344hlen.)921
53995 y(Gib)433 b(das)g(95-\045-K)-36 b(on\034denzin)g(terv)-72
b(all)433 b Fx(K)95 b(I)538 b FH(f\374r)433 b(den)g(W)-36
b(\344hleran)g(teil)434 b(der)g(P)-36 b(artei)433 b Fx(A)h
FH(an.)921 58532 y Fx(K)95 b(I)473 b FB(=)p 4551 58532
15749 34 v 1 0 0 TeXcolorrgb 921 61077 a Fx(K)95 b(I)473
b FB(=)369 b([)8 b(0)p Fx(;)p FB(203;)221 b(0277])437
b FH(bzw.)d Fx(K)95 b(I)473 b FB(=)369 b(0)p Fx(;)p FB(24)296
b Fw(\007)g FB(0)p Fx(;)p FB(037)921 65615 y FH(L\366sungsin)-36
b(terv)-72 b(all)434 b(f\374r)f(die)h(un)-36 b(tere)432
b(Grenze:)h FB([)8 b(0)p Fx(;)p FB(20;)221 b(0)p Fx(;)p
FB(21])921 67607 y FH(L\366sungsin)-36 b(terv)-72 b(all)434
b(f\374r)f(die)h(ob)36 b(ere)433 b(Grenze:)g FB([)8 b(0)p
Fx(;)p FB(27;)221 b(0)p Fx(;)p FB(28])p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 47466 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 49457 a FD(WS)369 b(4.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 71414
54804 45 v 0 TeXcolorgray 24421 81281 a FH(91)p 0 TeXcolorgray
eop end
%%Page: 92 92
TeXDict begin 92 91 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(4.1)g(-)g(3)h(K)-60
b(on\034denzin)g(terv)-120 b(all)714 b(-)k(ZO)f(-)h(BIFIE)p
0 TeXcolorgray -2042 4800 a FH(109.)p 0 TeXcolorgray
652 w(V)-108 b(on)632 b(einer)g(Stic)-36 b(hprob)36 b(e)630
b(sind)i(jew)-36 b(eils)634 b(der)d(Stic)-36 b(hprob)36
b(en)-36 b(umfang)631 b Fx(n)h FH(und)f(die)h(relativ)-36
b(e)921 6792 y(H\344u\034gk)g(eit)434 b Fx(h)f FH(eines)h(b)36
b(eobac)-36 b(h)g(teten)432 b(Merkmals)j(gegeb)36 b(en.)921
11330 y(Ordne)358 b(jeder)h(Stic)-36 b(hprob)36 b(e)358
b(das)h(ric)-36 b(h)g(tige)359 b(K)-36 b(on\034denzin)g(terv)-72
b(all)359 b(f\374r)g(das)g(v)-36 b(orgegeb)36 b(ene)360
b(K)-36 b(on-)921 13322 y(\034denzniv)g(eau)433 b Fx(\015)505
b FH(\(Sic)-36 b(herheitsniv)g(eau\))433 b(zu.)p 0 TeXcolorgray
0 TeXcolorgray 2683 15103 6545 45 v 9227 15103 4523 45
v 2683 22071 45 6969 v 3391 16884 a Fx(n)370 b FB(=)e(1000)3391
18876 y Fx(h)h FB(=)g(0)p Fx(;)p FB(3)3391 20868 y Fx(\015)441
b FB(=)369 b(0)p Fx(;)p FB(60)p 9183 22071 V 0.9 TeXcolorgray
9227 22071 4478 6969 v 0 TeXcolorgray 1 0 0 TeXcolorrgb
10955 19044 a FH(A)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 13705 22071 45 6969 v 2683 22115 6545
45 v 9227 22115 4523 45 v 2683 29084 45 6969 v 3391 23897
a Fx(n)h FB(=)e(1000)3391 25889 y Fx(h)h FB(=)g(0)p Fx(;)p
FB(3)3391 27881 y Fx(\015)441 b FB(=)369 b(0)p Fx(;)p
FB(95)p 9183 29084 V 0.9 TeXcolorgray 9227 29084 4478
6969 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 11024 26057 a
FH(E)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
13705 29084 45 6969 v 2683 29128 6545 45 v 9227 29128
4523 45 v 2683 36096 45 6969 v 3391 30909 a Fx(n)h FB(=)e(500)3391
32901 y Fx(h)h FB(=)g(0)p Fx(;)p FB(3)3391 34893 y Fx(\015)441
b FB(=)369 b(0)p Fx(;)p FB(99)p 9183 36096 V 0.9 TeXcolorgray
9227 36096 4478 6969 v 0 TeXcolorgray 1 0 0 TeXcolorrgb
10969 33070 a FH(D)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 13705 36096 45 6969 v 2683 36141 6545
45 v 9227 36141 4523 45 v 2683 43109 45 6969 v 3391 37922
a Fx(n)h FB(=)e(1000)3391 39914 y Fx(h)h FB(=)g(0)p Fx(;)p
FB(4)3391 41906 y Fx(\015)441 b FB(=)369 b(0)p Fx(;)p
FB(50)p 9183 43109 V 0.9 TeXcolorgray 9227 43109 4478
6969 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 11042 40082 a
FH(F)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
13705 43109 45 6969 v 2683 43153 6545 45 v 9227 43153
4523 45 v 0 TeXcolorgray 0 TeXcolorgray 14557 15103 4567
45 v 19123 15103 23537 45 v 14557 26066 45 10964 v 0.92
TeXcolorgray 14601 26066 4478 10964 v 0 TeXcolorgray
16328 21041 a(A)p 19079 26066 45 10964 v 19787 25121
a
 currentpoint currentpoint translate 0.5444 0.5444 scale neg exch neg
exch translate
 19787 25121 a 20221 25121 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 363.86497 a add def
/d 0.0 a add neg def /h 150.5648 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 20221 25121 a -119830 15221
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 1629.05225
 0 1265.18727  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 1265.18727  1629.05225  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -89.43584  def /maxTickline
61.12897  def /dT 6341265 abs 65536 div viceversa { neg } if def /DT
0.02 abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 4836.96849  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 4836.96849  mul cntTick add def x abs MinValue abs le { false {
x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for } for
/dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 1629.05225 0.0 1265.18727 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -120065 16567 a FG(0)9639 b(0)p
Fr(:)p FG(02)9040 b(0)p Fr(:)p FG(04)g(0)p Fr(:)p FG(06)g(0)p
Fr(:)p FG(08)g(0)p Fr(:)p FG(10)g(0)p Fr(:)p FG(12)g(0)p
Fr(:)p FG(14)g(0)p Fr(:)p FG(16)g(0)p Fr(:)p FG(18)g(0)p
Fr(:)p FG(20)g(0)p Fr(:)p FG(22)g(0)p Fr(:)p FG(24)g(0)p
Fr(:)p FG(26)g(0)p Fr(:)p FG(28)f(0)p Fr(:)p FG(30)h(0)p
Fr(:)p FG(32)-172444 b(0)9639 b(0)p Fr(:)p FG(02)9040
b(0)p Fr(:)p FG(04)g(0)p Fr(:)p FG(06)g(0)p Fr(:)p FG(08)g(0)p
Fr(:)p FG(10)g(0)p Fr(:)p FG(12)g(0)p Fr(:)p FG(14)g(0)p
Fr(:)p FG(16)g(0)p Fr(:)p FG(18)g(0)p Fr(:)p FG(20)g(0)p
Fr(:)p FG(22)g(0)p Fr(:)p FG(24)g(0)p Fr(:)p FG(26)-119830
15221 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -119830 15221 a -119830 15221 a
tx@Dict begin  { 1629.05225 61.12897 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 -119830 15221
a -119830 15221 a
tx@Dict begin  { 5.0 0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 -119830 15221 a -119830 15221 a
tx@Dict begin  PutEnd  end
 -119830
15221 a -119830 15221 a
tx@Dict begin  PutEnd  end
 -119830 15221 a -119830 15221
a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -119830 15221 a -119830 15221 a
tx@Dict begin  { 0.0 0.0 pop 1629.05225 61.12897 exch pop } PutCoor
PutBegin  end
 -119830 15221 a -119830
15221 a
tx@Dict begin  { 5.0 18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -119830 15221 a -120878 15553 a FH(f\(x\))-119830
15221 y
tx@Dict begin  PutEnd  end
 -119830 15221 a -119830 15221 a
tx@Dict begin  PutEnd  end
 -119830 15221
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1499.44841 -39.85538
1402.68839 -39.85538   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1450.73627 -46.71503
1451.1053 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial -119830 15221 a
tx@Dict begin  { 1426.08498 -48.01749 } PutCoor PutBegin  end
 -119830 15221
a 0 0 1 TeXcolorrgb 922 x Fx(h)368 b FB(=)h(0)p Fx(;)p
FB(3)p 0 TeXcolorgray -119830 15221 a
tx@Dict begin  PutEnd  end
 -119830 15221 a
-119830 15221 a
tx@Dict begin  { 1502.91731 -37.51096 } PutCoor PutBegin  end
 -119830 15221 a 0 0 1 TeXcolorrgb 836
x Fx(p)-119177 16256 y FG(2)-118283 16057 y FB(=)g(0)p
Fx(;)p FB(31)p 0 TeXcolorgray -119830 15221 a
tx@Dict begin  PutEnd  end
 -119830
15221 a -119830 15221 a
tx@Dict begin  { 1350.0645 -37.51096 } PutCoor PutBegin  end
 -119830 15221 a 0 0 1 TeXcolorrgb
836 x Fx(p)-119177 16256 y FG(1)-118283 16057 y FB(=)g(0)p
Fx(;)p FB(29)p 0 TeXcolorgray -119830 15221 a
tx@Dict begin  PutEnd  end
 -119830
15221 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.49019 0.49019 1  setrgbcolor
 [ 1451.1053 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 60499
25121 a
currentpoint initclip moveto
 60499 25121 a 19787 25121 a
 currentpoint currentpoint translate 1 0.5444 div 1 0.5444 div scale
neg exch neg exch translate
 19787 25121 a 42615
26066 45 10964 v 14557 26110 4567 45 v 19123 26110 23537
45 v 14557 34575 45 8466 v 0.92 TeXcolorgray 14601 34575
4478 8466 v 0 TeXcolorgray 16379 30800 a FH(B)p 19079
34575 45 8466 v 19787 33631 a
 currentpoint currentpoint translate 0.47244 0.47244 scale neg exch
neg exch translate
 19787 33631 a 20221 33631
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 419.88394 a add def
/d 0.0 a add neg def /h 125.73116 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 20221 33631 a -146367 25105 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 1924.79402
 0 1456.56697  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 1456.56697  1924.79402  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -77.01901  def /maxTickline
48.71214  def /dT 6341265 abs 65536 div viceversa { neg } if def /DT
0.02 abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 4836.96849  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 4836.96849  mul cntTick add def x abs MinValue abs le { false {
x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for } for
/dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 1924.79402 0.0 1456.56697 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -146602
26450 a FG(0)9640 b(0)p Fr(:)p FG(02)9040 b(0)p Fr(:)p
FG(04)g(0)p Fr(:)p FG(06)g(0)p Fr(:)p FG(08)g(0)p Fr(:)p
FG(10)g(0)p Fr(:)p FG(12)g(0)p Fr(:)p FG(14)f(0)p Fr(:)p
FG(16)h(0)p Fr(:)p FG(18)g(0)p Fr(:)p FG(20)g(0)p Fr(:)p
FG(22)g(0)p Fr(:)p FG(24)g(0)p Fr(:)p FG(26)g(0)p Fr(:)p
FG(28)g(0)p Fr(:)p FG(30)g(0)p Fr(:)p FG(32)g(0)p Fr(:)p
FG(34)g(0)p Fr(:)p FG(36)g(0)p Fr(:)p FG(38)-204578 b(0)9640
b(0)p Fr(:)p FG(02)9040 b(0)p Fr(:)p FG(04)g(0)p Fr(:)p
FG(06)g(0)p Fr(:)p FG(08)g(0)p Fr(:)p FG(10)g(0)p Fr(:)p
FG(12)g(0)p Fr(:)p FG(14)f(0)p Fr(:)p FG(16)h(0)p Fr(:)p
FG(18)g(0)p Fr(:)p FG(20)g(0)p Fr(:)p FG(22)g(0)p Fr(:)p
FG(24)g(0)p Fr(:)p FG(26)g(0)p Fr(:)p FG(28)g(0)p Fr(:)p
FG(30)-146367 25105 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -146367 25105 a -146367 25105 a
tx@Dict begin  { 1924.79402 48.71214 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end

-146367 25105 a -146367 25105 a
tx@Dict begin  { 5.0 0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 -146367 25105 a -146367
25105 a
tx@Dict begin  PutEnd  end
 -146367 25105 a -146367 25105 a
tx@Dict begin  PutEnd  end
 -146367 25105
a -146367 25105 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -146367 25105 a -146367 25105 a
tx@Dict begin  { 0.0 0.0 pop 1924.79402 48.71214 exch pop } PutCoor
PutBegin  end
 -146367
25105 a -146367 25105 a
tx@Dict begin  { 5.0 18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -146367 25105 a -147415 25437
a FH(f\(x\))-146367 25105 y
tx@Dict begin  PutEnd  end
 -146367 25105 a -146367 25105
a
tx@Dict begin  PutEnd  end
 -146367 25105 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1838.07164 -39.85538
1547.86534 -39.85538   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1692.96849 -46.71503
1692.96849 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial -146367 25105
a
tx@Dict begin  { 1670.38376 -50.53558 } PutCoor PutBegin  end
 -146367 25105 a 0 0 1 TeXcolorrgb 922 x Fx(h)369 b
FB(=)g(0)p Fx(;)p FB(35)p 0 TeXcolorgray -146367 25105
a
tx@Dict begin  PutEnd  end
 -146367 25105 a -146367 25105 a
tx@Dict begin  { 1813.1251 -50.10144 } PutCoor PutBegin  end
 -146367 25105 a 0 0 1
TeXcolorrgb 836 x Fx(p)-145714 26140 y FG(2)-144819 25941
y FB(=)f(0)p Fx(;)p FB(38)p 0 TeXcolorgray -146367 25105
a
tx@Dict begin  PutEnd  end
 -146367 25105 a -146367 25105 a
tx@Dict begin  { 1528.15906 -50.79608 } PutCoor PutBegin  end
 -146367 25105 a 0 0 1
TeXcolorrgb 836 x Fx(p)-145714 26140 y FG(1)-144819 25941
y FB(=)g(0)p Fx(;)p FB(29)p 0 TeXcolorgray -146367 25105
a
tx@Dict begin  PutEnd  end
 -146367 25105 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.49019 0.49019 1  setrgbcolor
 [ 1692.96849 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial
66700 33631 a
currentpoint initclip moveto
 66700 33631 a 19787 33631 a
 currentpoint currentpoint translate 1 0.47244 div 1 0.47244 div scale
neg exch neg exch translate
 19787 33631
a 42615 34575 45 8466 v 14557 34620 4567 45 v 19123 34620
23537 45 v 14557 41896 45 7276 v 0.92 TeXcolorgray 14601
41896 4478 7276 v 0 TeXcolorgray 16370 38715 a FH(C)p
19079 41896 45 7276 v 19787 40951 a
 currentpoint currentpoint translate 0.38672 0.38672 scale neg exch
neg exch translate
 19787 40951 a 20221
40951 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 513.83934 a add def
/d 0.0 a add neg def /h 125.818 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 20221 40951 a -166612 32281 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 2201.64139
 0 1687.80205  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 1687.80205  2201.64139  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -78.32149  def /maxTickline
47.4965  def /dT 6341265 abs 65536 div viceversa { neg } if def /DT
0.02 abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 4836.96849  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 4836.96849  mul cntTick add def x abs MinValue abs le { false {
x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for } for
/dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 2201.64139 0.0 1687.80205 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -166847
33626 a FG(0)9639 b(0)p Fr(:)p FG(02)9040 b(0)p Fr(:)p
FG(04)g(0)p Fr(:)p FG(06)g(0)p Fr(:)p FG(08)g(0)p Fr(:)p
FG(10)g(0)p Fr(:)p FG(12)g(0)p Fr(:)p FG(14)g(0)p Fr(:)p
FG(16)g(0)p Fr(:)p FG(18)g(0)p Fr(:)p FG(20)g(0)p Fr(:)p
FG(22)g(0)p Fr(:)p FG(24)g(0)p Fr(:)p FG(26)g(0)p Fr(:)p
FG(28)g(0)p Fr(:)p FG(30)g(0)p Fr(:)p FG(32)g(0)p Fr(:)p
FG(34)g(0)p Fr(:)p FG(36)f(0)p Fr(:)p FG(38)h(0)p Fr(:)p
FG(40)g(0)p Fr(:)p FG(42)g(0)p Fr(:)p FG(44)-236710 b(0)9639
b(0)p Fr(:)p FG(02)9040 b(0)p Fr(:)p FG(04)g(0)p Fr(:)p
FG(06)g(0)p Fr(:)p FG(08)g(0)p Fr(:)p FG(10)g(0)p Fr(:)p
FG(12)g(0)p Fr(:)p FG(14)g(0)p Fr(:)p FG(16)g(0)p Fr(:)p
FG(18)g(0)p Fr(:)p FG(20)g(0)p Fr(:)p FG(22)g(0)p Fr(:)p
FG(24)g(0)p Fr(:)p FG(26)g(0)p Fr(:)p FG(28)g(0)p Fr(:)p
FG(30)g(0)p Fr(:)p FG(32)g(0)p Fr(:)p FG(34)-166612 32281
y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -166612 32281 a -166612 32281 a
tx@Dict begin  { 2201.64139 47.4965 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 -166612 32281 a -166612
32281 a
tx@Dict begin  { 5.0 0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 -166612 32281 a -166612 32281 a
tx@Dict begin  PutEnd  end
 -166612 32281
a -166612 32281 a
tx@Dict begin  PutEnd  end
 -166612 32281 a -166612 32281 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -166612
32281 a -166612 32281 a
tx@Dict begin  { 0.0 0.0 pop 2201.64139 47.4965 exch pop } PutCoor
PutBegin  end
 -166612 32281 a -166612 32281
a
tx@Dict begin  { 5.0 18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -166612 32281 a -167660 32613 a FH(f\(x\))-166612 32281
y
tx@Dict begin  PutEnd  end
 -166612 32281 a -166612 32281 a
tx@Dict begin  PutEnd  end
 -166612 32281 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 2128.27794 -39.85538
1741.3116 -39.85538   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1934.75787 -46.71503
1934.75787 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
-166612 32281 a
tx@Dict begin  { 1905.97342 -48.71214 } PutCoor PutBegin  end
 -166612 32281 a 0 0 1 TeXcolorrgb 922
x Fx(h)369 b FB(=)f(0)p Fx(;)p FB(40)p 0 TeXcolorgray
-166612 32281 a
tx@Dict begin  PutEnd  end
 -166612 32281 a -166612 32281 a
tx@Dict begin  { 2098.75542 -48.8858 } PutCoor PutBegin  end
 -166612
32281 a 0 0 1 TeXcolorrgb 836 x Fx(p)-165959 33316 y
FG(2)-165065 33117 y FB(=)h(0)p Fx(;)p FB(44)p 0 TeXcolorgray
-166612 32281 a
tx@Dict begin  PutEnd  end
 -166612 32281 a -166612 32281 a
tx@Dict begin  { 1721.82674 -48.71214 } PutCoor PutBegin  end
 -166612
32281 a 0 0 1 TeXcolorrgb 836 x Fx(p)-165959 33316 y
FG(1)-165065 33117 y FB(=)g(0)p Fx(;)p FB(36)p 0 TeXcolorgray
-166612 32281 a
tx@Dict begin  PutEnd  end
 -166612 32281 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.49019 0.49019 1  setrgbcolor
 [ 1934.75787 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end


@endspecial 77101 40951 a
currentpoint initclip moveto
 77101 40951 a 19787 40951
a
 currentpoint currentpoint translate 1 0.38672 div 1 0.38672 div scale
neg exch neg exch translate
 19787 40951 a 42615 41896 45 7276 v 14557 41940 4567
45 v 19123 41940 23537 45 v 14557 48813 45 6874 v 0.92
TeXcolorgray 14601 48813 4478 6874 v 0 TeXcolorgray 16343
45834 a FH(D)p 19079 48813 45 6874 v 19787 47868 a
 currentpoint currentpoint translate 0.35808 0.35808 scale neg exch
neg exch translate
 19787
47868 a 20221 47868 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 555.24466 a add def
/d 0.0 a add neg def /h 125.73116 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 20221 47868 a -109561 37834 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 1727.65744
 0 1172.41278  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 1172.41278  1727.65744  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -90.65147  def /maxTickline
35.07968  def /dT 6341265 abs 65536 div viceversa { neg } if def /DT
0.02 abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 4836.96849  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 4836.96849  mul cntTick add def x abs MinValue abs le { false {
x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for } for
/dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 1727.65744 0.0 1172.41278 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
-109796 39179 a FG(0)9640 b(0)p Fr(:)p FG(02)9040 b(0)p
Fr(:)p FG(04)g(0)p Fr(:)p FG(06)g(0)p Fr(:)p FG(08)g(0)p
Fr(:)p FG(10)g(0)p Fr(:)p FG(12)g(0)p Fr(:)p FG(14)g(0)p
Fr(:)p FG(16)g(0)p Fr(:)p FG(18)f(0)p Fr(:)p FG(20)h(0)p
Fr(:)p FG(22)g(0)p Fr(:)p FG(24)g(0)p Fr(:)p FG(26)g(0)p
Fr(:)p FG(28)g(0)p Fr(:)p FG(30)g(0)p Fr(:)p FG(32)g(0)p
Fr(:)p FG(34)-183156 b(0)9640 b(0)p Fr(:)p FG(02)9040
b(0)p Fr(:)p FG(04)g(0)p Fr(:)p FG(06)g(0)p Fr(:)p FG(08)g(0)p
Fr(:)p FG(10)g(0)p Fr(:)p FG(12)g(0)p Fr(:)p FG(14)g(0)p
Fr(:)p FG(16)g(0)p Fr(:)p FG(18)f(0)p Fr(:)p FG(20)h(0)p
Fr(:)p FG(22)g(0)p Fr(:)p FG(24)-109561 37834 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -109561
37834 a -109561 37834 a
tx@Dict begin  { 1727.65744 35.07968 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 -109561 37834 a -109561 37834
a
tx@Dict begin  { 5.0 0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 -109561 37834 a -109561 37834 a
tx@Dict begin  PutEnd  end
 -109561 37834 a -109561
37834 a
tx@Dict begin  PutEnd  end
 -109561 37834 a -109561 37834 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -109561 37834
a -109561 37834 a
tx@Dict begin  { 0.0 0.0 pop 1727.65744 35.07968 exch pop } PutCoor
PutBegin  end
 -109561 37834 a -109561 37834 a
tx@Dict begin  { 5.0 18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -109561
37834 a -110608 38166 a FH(f\(x\))-109561 37834 y
tx@Dict begin  PutEnd  end
 -109561
37834 a -109561 37834 a
tx@Dict begin  PutEnd  end
 -109561 37834 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1692.96849 -39.85538
1209.24211 -39.85538   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1451.1053 -46.71503 1451.1053
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
-109561 37834 a
tx@Dict begin  { 1421.80421 -48.36482 } PutCoor PutBegin  end
 -109561 37834 a 0 0 1 TeXcolorrgb 922
x Fx(h)369 b FB(=)g(0)p Fx(;)p FB(30)p 0 TeXcolorgray
-109561 37834 a
tx@Dict begin  PutEnd  end
 -109561 37834 a -109561 37834 a
tx@Dict begin  { 1658.79617 -48.36482 } PutCoor PutBegin  end
 -109561
37834 a 0 0 1 TeXcolorrgb 836 x Fx(p)-108908 38869 y
FG(2)-108013 38670 y FB(=)g(0)p Fx(;)p FB(35)p 0 TeXcolorgray
-109561 37834 a
tx@Dict begin  PutEnd  end
 -109561 37834 a -109561 37834 a
tx@Dict begin  { 1179.7196 -48.36482 } PutCoor PutBegin  end
 -109561
37834 a 0 0 1 TeXcolorrgb 836 x Fx(p)-108908 38869 y
FG(1)-108013 38670 y FB(=)g(0)p Fx(;)p FB(25)p 0 TeXcolorgray
-109561 37834 a
tx@Dict begin  PutEnd  end
 -109561 37834 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.49019 0.49019 1  setrgbcolor
 [ 1451.1053 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 81684 47868 a
currentpoint initclip moveto
 81684 47868 a 19787 47868
a
 currentpoint currentpoint translate 1 0.35808 div 1 0.35808 div scale
neg exch neg exch translate
 19787 47868 a 42615 48813 45 6874 v 14557 48858 4567
45 v 19123 48858 23537 45 v 14557 56538 45 7681 v 0.92
TeXcolorgray 14601 56538 4478 7681 v 0 TeXcolorgray 16397
53155 a FH(E)p 19079 56538 45 7681 v 19787 55593 a
 currentpoint currentpoint translate 0.41576 0.41576 scale neg exch
neg exch translate
 19787
55593 a 20221 55593 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 477.67426 a add def
/d 0.0 a add neg def /h 125.818 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 20221 55593 a -113972 45895 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 1689.94243
 0 1212.26817  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 1212.26817  1689.94243  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -87.6124  def /maxTickline
38.2056  def /dT 6341265 abs 65536 div viceversa { neg } if def /DT
0.02 abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 4836.96849  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 4836.96849  mul cntTick add def x abs MinValue abs le { false {
x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for } for
/dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 1689.94243 0.0 1212.26817 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
-114207 47240 a FG(0)9639 b(0)p Fr(:)p FG(02)9040 b(0)p
Fr(:)p FG(04)g(0)p Fr(:)p FG(06)g(0)p Fr(:)p FG(08)g(0)p
Fr(:)p FG(10)g(0)p Fr(:)p FG(12)g(0)p Fr(:)p FG(14)g(0)p
Fr(:)p FG(16)g(0)p Fr(:)p FG(18)g(0)p Fr(:)p FG(20)g(0)p
Fr(:)p FG(22)g(0)p Fr(:)p FG(24)f(0)p Fr(:)p FG(26)h(0)p
Fr(:)p FG(28)g(0)p Fr(:)p FG(30)g(0)p Fr(:)p FG(32)g(0)p
Fr(:)p FG(34)-183155 b(0)9639 b(0)p Fr(:)p FG(02)9040
b(0)p Fr(:)p FG(04)g(0)p Fr(:)p FG(06)g(0)p Fr(:)p FG(08)g(0)p
Fr(:)p FG(10)g(0)p Fr(:)p FG(12)g(0)p Fr(:)p FG(14)g(0)p
Fr(:)p FG(16)g(0)p Fr(:)p FG(18)g(0)p Fr(:)p FG(20)g(0)p
Fr(:)p FG(22)g(0)p Fr(:)p FG(24)-113972 45895 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -113972
45895 a -113972 45895 a
tx@Dict begin  { 1689.94243 38.2056 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 -113972 45895 a -113972 45895
a
tx@Dict begin  { 5.0 0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 -113972 45895 a -113972 45895 a
tx@Dict begin  PutEnd  end
 -113972 45895 a -113972
45895 a
tx@Dict begin  PutEnd  end
 -113972 45895 a -113972 45895 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -113972 45895
a -113972 45895 a
tx@Dict begin  { 0.0 0.0 pop 1689.94243 38.2056 exch pop } PutCoor
PutBegin  end
 -113972 45895 a -113972 45895 a
tx@Dict begin  { 5.0 18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -113972
45895 a -115020 46227 a FH(f\(x\))-113972 45895 y
tx@Dict begin  PutEnd  end
 -113972
45895 a -113972 45895 a
tx@Dict begin  PutEnd  end
 -113972 45895 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1596.20845 -39.85538
1306.00215 -39.85538   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1451.1053 -46.71503 1451.1053
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
-113972 45895 a
tx@Dict begin  { 1421.80421 -48.36482 } PutCoor PutBegin  end
 -113972 45895 a 0 0 1 TeXcolorrgb 922
x Fx(h)368 b FB(=)h(0)p Fx(;)p FB(30)p 0 TeXcolorgray
-113972 45895 a
tx@Dict begin  PutEnd  end
 -113972 45895 a -113972 45895 a
tx@Dict begin  { 1569.63818 -48.36482 } PutCoor PutBegin  end
 -113972
45895 a 0 0 1 TeXcolorrgb 836 x Fx(p)-113319 46930 y
FG(2)-112425 46731 y FB(=)g(0)p Fx(;)p FB(33)p 0 TeXcolorgray
-113972 45895 a
tx@Dict begin  PutEnd  end
 -113972 45895 a -113972 45895 a
tx@Dict begin  { 1274.63448 -48.36482 } PutCoor PutBegin  end
 -113972
45895 a 0 0 1 TeXcolorrgb 836 x Fx(p)-113319 46930 y
FG(1)-112425 46731 y FB(=)g(0)p Fx(;)p FB(27)p 0 TeXcolorgray
-113972 45895 a
tx@Dict begin  PutEnd  end
 -113972 45895 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.49019 0.49019 1  setrgbcolor
 [ 1451.1053 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 73097 55593 a
currentpoint initclip moveto
 73097 55593 a 19787 55593
a
 currentpoint currentpoint translate 1 0.41576 div 1 0.41576 div scale
neg exch neg exch translate
 19787 55593 a 42615 56538 45 7681 v 14557 56582 4567
45 v 19123 56582 23537 45 v 14557 64258 45 7677 v 0.92
TeXcolorgray 14601 64258 4478 7677 v 0 TeXcolorgray 16415
60877 a FH(F)p 19079 64258 45 7677 v 19787 63313 a
 currentpoint currentpoint translate 0.41576 0.41576 scale neg exch
neg exch translate
 19787
63313 a 20221 63313 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 477.67426 a add def
/d 0.0 a add neg def /h 125.73116 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 20221 63313 a -167331 52798 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 2171.97125
 0 1694.297  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 1694.297  2171.97125  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -94.99301  def /maxTickline
30.73814  def /dT 6341265 abs 65536 div viceversa { neg } if def /DT
0.02 abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 4836.96849  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 4836.96849  mul cntTick add def x abs MinValue abs le { false {
x minTickline  moveto x maxTickline  lineto } { x tickstart STsize
mul  moveto x tickend STsize mul  lineto } ifelse } if } for } for
/dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 2171.97125 0.0 1694.297 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
-167566 54144 a FG(0)9639 b(0)p Fr(:)p FG(02)9040 b(0)p
Fr(:)p FG(04)g(0)p Fr(:)p FG(06)g(0)p Fr(:)p FG(08)g(0)p
Fr(:)p FG(10)g(0)p Fr(:)p FG(12)g(0)p Fr(:)p FG(14)g(0)p
Fr(:)p FG(16)g(0)p Fr(:)p FG(18)g(0)p Fr(:)p FG(20)g(0)p
Fr(:)p FG(22)g(0)p Fr(:)p FG(24)g(0)p Fr(:)p FG(26)g(0)p
Fr(:)p FG(28)g(0)p Fr(:)p FG(30)g(0)p Fr(:)p FG(32)g(0)p
Fr(:)p FG(34)g(0)p Fr(:)p FG(36)g(0)p Fr(:)p FG(38)f(0)p
Fr(:)p FG(40)h(0)p Fr(:)p FG(42)g(0)p Fr(:)p FG(44)-236710
b(0)9639 b(0)p Fr(:)p FG(02)9040 b(0)p Fr(:)p FG(04)g(0)p
Fr(:)p FG(06)g(0)p Fr(:)p FG(08)g(0)p Fr(:)p FG(10)g(0)p
Fr(:)p FG(12)g(0)p Fr(:)p FG(14)g(0)p Fr(:)p FG(16)g(0)p
Fr(:)p FG(18)g(0)p Fr(:)p FG(20)g(0)p Fr(:)p FG(22)g(0)p
Fr(:)p FG(24)g(0)p Fr(:)p FG(26)g(0)p Fr(:)p FG(28)g(0)p
Fr(:)p FG(30)g(0)p Fr(:)p FG(32)g(0)p Fr(:)p FG(34)-167331
52798 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -167331 52798 a -167331 52798 a
tx@Dict begin  { 2171.97125 30.73814 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 -167331 52798
a -167331 52798 a
tx@Dict begin  { 5.0 0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 -167331 52798 a -167331 52798 a
tx@Dict begin  PutEnd  end
 -167331
52798 a -167331 52798 a
tx@Dict begin  PutEnd  end
 -167331 52798 a -167331 52798
a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -167331 52798 a -167331 52798 a
tx@Dict begin  { 0.0 0.0 pop 2171.97125 30.73814 exch pop } PutCoor
PutBegin  end
 -167331 52798 a -167331
52798 a
tx@Dict begin  { 5.0 18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -167331 52798 a -168379 53130 a FH(f\(x\))-167331
52798 y
tx@Dict begin  PutEnd  end
 -167331 52798 a -167331 52798 a
tx@Dict begin  PutEnd  end
 -167331 52798
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1983.17479 -39.85538
1886.41475 -39.85538   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 1934.75787 -46.71503
1934.75787 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinecap
[  1.0  1.0 ] 0 0 add  DashLine  grestore end
 
@endspecial -167331 52798 a
tx@Dict begin  { 1904.49728 -56.00594 } PutCoor PutBegin  end
 -167331 52798
a 0 0 1 TeXcolorrgb 923 x Fx(h)369 b FB(=)f(0)p Fx(;)p
FB(30)p 0 TeXcolorgray -167331 52798 a
tx@Dict begin  PutEnd  end
 -167331 52798
a -167331 52798 a
tx@Dict begin  { 1961.77097 -48.36482 } PutCoor PutBegin  end
 -167331 52798 a 0 0 1 TeXcolorrgb 837
x Fx(p)-166678 53834 y FG(2)-165784 53635 y FB(=)h(0)p
Fx(;)p FB(33)p 0 TeXcolorgray -167331 52798 a
tx@Dict begin  PutEnd  end
 -167331
52798 a -167331 52798 a
tx@Dict begin  { 1846.48555 -48.36482 } PutCoor PutBegin  end
 -167331 52798 a 0 0 1 TeXcolorrgb
837 x Fx(p)-166678 53834 y FG(1)-165784 53635 y FB(=)g(0)p
Fx(;)p FB(27)p 0 TeXcolorgray -167331 52798 a
tx@Dict begin  PutEnd  end
 -167331
52798 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.49019 0.49019 1  setrgbcolor
 [ 1934.75787 0.0   false NArray  /DS 5.0 0. CLW mul add 2 div def
/PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto
gsave 1.  1.  scale (b) show grestore } bind def   1. .setopacityalpha
 newpath n { transform floor .5 add exch floor .5 add exch itransform
Dot } repeat  end
 
@endspecial 73097
63313 a
currentpoint initclip moveto
 73097 63313 a 19787 63313 a
 currentpoint currentpoint translate 1 0.41576 div 1 0.41576 div scale
neg exch neg exch translate
 19787 63313 a 42615
64258 45 7677 v 14557 64303 4567 45 v 19123 64303 23537
45 v 47992 4800 a FE(___/1)p 1 0 0 TeXcolorrgb 47905
6792 a FD(WS)g(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 70670 54804 45 v 0 TeXcolorgray
24421 81281 a FH(92)p 0 TeXcolorgray eop end
%%Page: 93 93
TeXDict begin 93 92 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(4.1)g(-)g(4)h(Linksh\344nder)c
(-)k(MC)g(-)f(BIFIE)p 0 TeXcolorgray -2042 4800 a FH(110.)p
0 TeXcolorgray 652 w(Bei)489 b(einer)f(Umfrage)i(in)e(einem)h(Bezirk)g
(w)-36 b(erden)488 b(500)i(P)-36 b(ersonen)488 b(b)36
b(efragt,)489 b(ob)g(sie)g(Links-)921 6792 y(h\344nder)753
b(sind.)j(Als)f(Ergebnis)f(der)g(Befragung)g(wird)h(das)f(95-\045-K)-36
b(on\034denzin)g(terv)-72 b(all)921 8784 y FB([)8 b(0)p
Fx(;)p FB(09;)221 b(0)p Fx(;)p FB(15])526 b FH(f\374r)c(den)g(An)-36
b(teil)522 b(der)g(Linksh\344nder)g(in)g(der)g(Bezirkszeitung)h(b)36
b(ekann)-36 b(tgege-)921 10776 y(b)36 b(en.)855 13322
y(W)-108 b(elc)-36 b(he)459 b(der)g(nac)-36 b(hstehenden)457
b(A)-36 b(ussagen)459 b(kannst)g(du)g(aufgrund)f(dieses)i(Ergebnisses)f
(t\344-)921 15314 y(tigen?)434 b(Kreuze)f(die)h(zutre\033ende\(n\))d(A)
-36 b(ussage\(n\))433 b(an.)p 1062 16354 44260 45 v 1062
19417 45 3064 v 1770 18214 a(Ungef\344hr)h(60)g(P)-36
b(ersonen)433 b(hab)36 b(en)433 b(angegeb)36 b(en,)434
b(Linksh\344nder)f(zu)g(sein.)p 42912 19417 V 1 0 0 TeXcolorrgb
43621 18218 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 19417 V 1062 19461 44260 45 v 1062
24598 45 5137 v 1770 21403 a FH(H\344tte)h(man)f(10.000)j(P)-36
b(ersonen)433 b(b)36 b(efragt,)434 b(w)-36 b(\344re)434
b(das)g(95-\045-K)-36 b(on\034denzin)g(terv)-72 b(all)1770
23394 y(sc)-36 b(hm\344ler)434 b(gew)-36 b(orden.)p 42912
24598 V 1 0 0 TeXcolorrgb 43621 22362 a FF(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 24598
V 1062 24642 44260 45 v 1062 29697 45 5056 v 1770 26502
a FH(Das)435 b(K)-36 b(on\034denzin)g(terv)-72 b(all)433
b(w)-36 b(\344re)434 b(breiter,)f(w)-36 b(enn)433 b(der)g(An)-36
b(teil)434 b(der)f(Linksh\344nder)1770 28494 y(in)h(der)f(Umfrage)h
(kleiner)h(gew)-36 b(esen)434 b(w)-36 b(\344re.)p 42912
29697 V 45277 29697 V 1062 29741 44260 45 v 1062 34612
45 4872 v 1770 31601 a(Der)346 b(An)-36 b(teil)346 b(der)f
(Linksh\344nder)f(im)i(gesam)-36 b(ten)346 b(Bezirk)g(liegt)g
(jedenfalls)h(zwisc)-36 b(hen)1770 33593 y(9\045)434
b(und)f(15\045.)p 42912 34612 V 45277 34612 V 1062 34657
44260 45 v 1062 39535 45 4878 v 1770 36598 a(Das)i(en)-36
b(tsprec)g(hende)431 b(99-\045-K)-36 b(on\034denzin)g(terv)-72
b(all)433 b(ist)h(breiter)f(als)h(das)g(95-\045-)1770
38590 y(K)-36 b(on\034denzin)g(terv)-72 b(all.)p 42912
39535 V 1 0 0 TeXcolorrgb 43621 37428 a FF(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 39535
V 1062 39579 44260 45 v 47992 4800 a FE(___/1)p 1 0 0
TeXcolorrgb 47905 6792 a FD(WS)369 b(4.1)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 43607 54804 45
v 0 TeXcolorgray 24421 81281 a FH(93)p 0 TeXcolorgray
eop end
%%Page: 94 94
TeXDict begin 94 93 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)717 b(4.1)g(-)g(5)h(Essgew)-60
b(ohnheiten)715 b(-)i(O)-60 b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray
-2042 4800 a FH(111.)p 0 TeXcolorgray 652 w(Um)376 b(die)h(Essgew)-36
b(ohnheiten)376 b(v)-36 b(on)377 b(Jugendlic)-36 b(hen)375
b(zu)h(un)-36 b(tersuc)g(hen,)375 b(wurden)g(400)j(Jugend-)921
6792 y(lic)-36 b(he)434 b(eines)f(Bezirks)i(zuf\344llig)g(ausgew)-36
b(\344hlt)434 b(und)f(b)36 b(efragt.)921 9338 y(Dab)g(ei)434
b(gab)36 b(en)434 b(240)h(der)e(b)36 b(efragten)433 b(Jugendlic)-36
b(hen)433 b(an,)h(t\344glic)-36 b(h)434 b(zu)f(fr\374hst\374c)-36
b(k)g(en.)921 11883 y(Berec)g(hne)584 b(aufgrund)h(des)f(in)h(der)g
(Umfrage)h(erhob)36 b(enen)584 b(Stic)-36 b(hprob)36
b(energebnisses)583 b(ein)921 13875 y(99-\045-K)-36 b(on\034denzin)g
(terv)-72 b(all)648 b(f\374r)g(den)f(tats\344c)-36 b(hlic)g(hen)648
b(\(relativ)-36 b(en\))648 b(An)-36 b(teil)648 b Fx(p)g
FH(derjenigen)887 15867 y(Jugendlic)-36 b(hen)433 b(dieses)h(Bezirks,)g
(die)g(t\344glic)-36 b(h)434 b(fr\374hst\374c)-36 b(k)g(en.)p
1 0 0 TeXcolorrgb 921 20404 a(Die)397 b(Zufallsv)-72
b(ariable)398 b Fx(X)501 b FH(gibt)397 b(die)f(Anzahl)g(der)g
(Jugendlic)-36 b(hen,)396 b(die)g(t\344glic)-36 b(h)397
b(fr\374hst\374c)-36 b(k)g(en,)921 22396 y(an.)921 24388
y Fx(h)369 b FB(=)3552 23865 y FG(240)p 3552 24078 1412
45 v 3552 24846 a(400)5465 24388 y FB(=)g(0)p Fx(;)p
FB(6)888 26380 y(2)296 b Fw(\001)f FB(\002\()p Fx(z)59
b FB(\))295 b Fw(\000)g FB(1)370 b(=)e Fx(D)36 b FB(\()p
Fx(z)59 b FB(\))369 b(=)g(0)p Fx(;)p FB(99)h Fw(\))g
Fx(z)428 b Fw(\031)369 b FB(2)p Fx(;)p FB(58)921 28989
y Fx(p)1574 29188 y FG(1)p Fr(;)p FG(2)3200 28989 y FB(=)g(0)p
Fx(;)p FB(6)296 b Fw(\006)f FB(2)p Fx(;)p FB(58)i Fw(\001)11138
26911 y Fj(s)p 12245 26911 4549 45 v 12378 28091 a FB(0)p
Fx(;)p FB(6)f Fw(\001)f FB(0)p Fx(;)p FB(4)p 12378 28679
4284 45 v 13544 29901 a(400)17163 28989 y Fw(\))369 b
Fx(p)19513 29188 y FG(1)20408 28989 y Fw(\031)g FB(0)p
Fx(;)p FB(536;)221 b Fx(p)26006 29188 y FG(2)26903 28989
y Fw(\031)369 b FB(0)p Fx(;)p FB(664)921 31295 y FH(99-\045-K)-36
b(on\034denzin)g(terv)-72 b(all:)433 b FB([)8 b(0)p Fx(;)p
FB(536;)221 b(0)p Fx(;)p FB(664])438 b FH(bzw.)c FB(0)p
Fx(;)p FB(6)296 b Fw(\006)f FB(0)p Fx(;)p FB(064)921
35832 y FH(Ein)399 b(Punkt)f(ist)h(genau)g(dann)f(zu)h(geb)36
b(en,)399 b(w)-36 b(enn)398 b(das)h(K)-36 b(on\034denzin)g(terv)-72
b(all)399 b(ric)-36 b(h)g(tig)399 b(b)36 b(erec)-36 b(h-)921
37824 y(net)433 b(wurde.)874 39816 y(T)-108 b(oleranzin)-36
b(terv)-72 b(all)435 b(f\374r)e(die)h(un)-36 b(tere)432
b(Grenze:)h FB([)8 b(0)p Fx(;)p FB(53;)221 b(0)p Fx(;)p
FB(54])874 41808 y FH(T)-108 b(oleranzin)-36 b(terv)-72
b(all)435 b(f\374r)e(die)h(ob)36 b(ere)433 b(Grenze:)g
FB([)8 b(0)p Fx(;)p FB(66;)221 b(0)p Fx(;)p FB(67])p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
4800 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 6792 a FD(WS)369
b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 45615 54804 45 v 0 TeXcolorgray 24421 81281 a FH(94)p
0 TeXcolorgray eop end
%%Page: 95 95
TeXDict begin 95 94 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)671 b(4.1)g(-)h(6)g(V)-179
b(ergleic)-60 b(h)671 b(zw)-60 b(eier)672 b(K)-60 b(on\034denzin)g
(terv)-120 b(alle)668 b(-)k(L)-179 b(T)671 b(-)h(Ma-)-2331
4515 y(tura)717 b(2015/16)g(-)h(Haupttermin)p 0 TeXcolorgray
-2042 7823 a FH(112.)p 0 TeXcolorgray 652 w(A)-36 b(uf)516
b(der)f(Grundlage)g(einer)g(Zufallsstic)-36 b(hprob)36
b(e)516 b(der)f(Gr\366\377e)h Fx(n)32725 8022 y FG(1)33767
7823 y FH(gibt)f(ein)h(Mein)-36 b(ungsfor-)921 9815 y(sc)g(h)g
(ungsinstitut)655 b(f\374r)h(den)f(aktuellen)i(Stimmenan)-36
b(teil)656 b(einer)g(p)36 b(olitisc)-36 b(hen)657 b(P)-36
b(artei)656 b(das)921 11806 y(K)-36 b(on\034denzin)g(terv)-72
b(all)429 b([0,23;)j(0,29])f(an.)g(Das)f(zugeh\366rige)g(K)-36
b(on\034denzniv)g(eau)429 b(\(die)h(zugeh\366-)921 13798
y(rige)425 b(Sic)-36 b(herheit\))423 b(b)36 b(etr\344gt)425
b Fx(\015)15226 13997 y FG(1)15751 13798 y FH(.)g(Ein)f(anderes)g
(Institut)g(b)36 b(efragt)425 b Fx(n)33603 13997 y FG(2)34553
13798 y FH(zuf\344llig)i(ausgew)-36 b(\344hlte)855 15790
y(W)-108 b(ahlb)36 b(erec)-36 b(h)g(tigte)438 b(und)f(gibt)i(als)g(en)
-36 b(tsprec)g(hendes)436 b(K)-36 b(on\034denzin)g(terv)-72
b(all)439 b(mit)f(dem)g(K)-36 b(on\034-)921 17782 y(denzniv)g(eau)471
b(\(der)g(zugeh\366rigen)h(Sic)-36 b(herheit\))471 b
Fx(\015)24908 17981 y FG(2)25905 17782 y FH(das)h(In)-36
b(terv)-72 b(all)472 b FB([)8 b(0)p Fx(;)p FB(24;)695
b(0)p Fx(;)p FB(28])473 b FH(an.)f(Dab)36 b(ei)887 19774
y(v)-36 b(erw)g(enden)433 b(b)36 b(eide)433 b(Institute)g(dieselb)36
b(e)434 b(Berec)-36 b(hn)g(ungsmetho)36 b(de.)921 24311
y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36 b(k)g(en)358
b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357 b(Ankreuzen)g(der)h(jew)-36
b(eils)360 b(ric)-36 b(h)g(tigen)921 26303 y(Satzteile)434
b(so,)g(dass)g(eine)f(mathematisc)-36 b(h)434 b(k)-36
b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36 b(tsteh)g(t!)921
29794 y(Un)g(ter)540 b(der)g(Annahme)f(v)-36 b(on)541
b Fx(n)16395 29993 y FG(1)17472 29794 y FB(=)551 b Fx(n)19811
29993 y FG(2)20878 29794 y FH(kann)540 b(man)h(aus)f(den)g(Angab)36
b(en)p 38003 29794 3150 45 v 41625 29746 a(1)41153 29794
y Fp(\015)p 42747 29794 V 921 31786 a FH(folgern;)921
33777 y(un)-36 b(ter)573 b(der)h(Annahme)g(v)-36 b(on)575
b Fx(\015)16178 33976 y FG(1)17312 33777 y FB(=)609 b
Fx(\015)19608 33976 y FG(2)20708 33777 y FH(kann)574
b(man)h(aus)f(den)g(Angab)36 b(en)p 38003 33777 V 41625
33729 a(2)41153 33777 y Fp(\015)p 42747 33777 V 921 35769
a FH(folgern.)p 0 TeXcolorgray 0 TeXcolorgray 12794 37142
8367 45 v 12794 40226 45 3085 v 16651 38923 a(1)16180
38971 y Fp(\015)p 21115 40226 V 12794 40270 8367 45 v
12794 43529 45 3260 v 13502 42326 a Fx(\015)14177 42525
y FG(1)15071 42326 y Fx(<)369 b(\015)17127 42525 y FG(2)p
18750 43529 V 19459 42232 a FF(2)p 21115 43529 V 12794
43574 8367 45 v 12794 46833 45 3260 v 13502 45630 a Fx(\015)14177
45829 y FG(1)15071 45630 y FB(=)g Fx(\015)17127 45829
y FG(2)p 18750 46833 V 19459 45535 a FF(2)p 21115 46833
V 12794 46877 8367 45 v 12794 50136 45 3260 v 13502 48933
a Fx(\015)14177 49132 y FG(1)15071 48933 y Fx(>)g(\015)17127
49132 y FG(2)p 18750 50136 V 1 0 0 TeXcolorrgb 19459
48839 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 21115 50136 V 12794 50181 8367 45 v 0 TeXcolorgray
0 TeXcolorgray 30427 37142 8137 45 v 30427 40226 45 3085
v 34170 38923 a FH(2)33698 38971 y Fp(\015)p 38518 40226
V 30427 40270 8137 45 v 30427 43529 45 3260 v 31135 42326
a Fx(n)31911 42525 y FG(1)32806 42326 y Fx(<)g(n)34963
42525 y FG(2)p 36153 43529 V 1 0 0 TeXcolorrgb 36862
42232 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 38518 43529 V 30427 43574 8137 45 v 30427
46833 45 3260 v 31135 45630 a Fx(n)31911 45829 y FG(1)32806
45630 y FB(=)g Fx(n)34963 45829 y FG(2)p 36153 46833
V 36862 45535 a FF(2)p 38518 46833 V 30427 46877 8137
45 v 30427 50136 45 3260 v 31135 48933 a Fx(n)31911 49132
y FG(1)32806 48933 y Fx(>)g(n)34963 49132 y FG(2)p 36153
50136 V 36862 48839 a FF(2)p 38518 50136 V 30427 50181
8137 45 v 47992 7823 a FE(___/1)p 1 0 0 TeXcolorrgb 47905
9815 a FD(WS)g(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 54209 54804 45 v 0 TeXcolorgray
24421 81281 a FH(95)p 0 TeXcolorgray eop end
%%Page: 96 96
TeXDict begin 96 95 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a FI(WS)570 b(4.1)f(-)i(7)f(Mein)-60
b(ungsb)60 b(efragung)566 b(-)571 b(MC)g(-)f(BIFIE)h(-)f(K)-60
b(omp)60 b(etenz-)-2331 4515 y(c)-60 b(hec)g(k)718 b(2016)p
0 TeXcolorgray -2042 7823 a FH(113.)p 0 TeXcolorgray
652 w(Bei)493 b(einer)g(Mein)-36 b(ungsb)36 b(efragung)492
b(wurden)g(500)h(zuf\344llig)i(ausgew)-36 b(\344hlte)493
b(Bew)-36 b(ohnerInnen)921 9815 y(einer)389 b(Stadt)g(zu)h(ihrer)f
(Mein)-36 b(ung)389 b(b)36 b(ez\374glic)-36 b(h)389 b(der)h(Einric)-36
b(h)g(tung)388 b(einer)h(F)-108 b(u\377g\344ngerzone)390
b(im)921 11806 y(Stadtzen)-36 b(trum)441 b(b)36 b(efragt.)445
b(Es)e(sprac)-36 b(hen)443 b(sic)-36 b(h)443 b(60)217
b(\045)444 b(der)f(Befragten)h(f\374r)f(die)h(Einric)-36
b(h)g(tung)921 13798 y(einer)433 b(solc)-36 b(hen)434
b(F)-108 b(u\377g\344ngerzone)433 b(aus,)h(40)217 b(\045)434
b(sprac)-36 b(hen)433 b(sic)-36 b(h)433 b(dagegen)h(aus.)873
16344 y(Als)391 b(95-\045-K)-36 b(on\034denzin)g(terv)-72
b(all)390 b(f\374r)g(den)g(An)-36 b(teil)391 b(der)f(Bew)-36
b(ohnerInnen)390 b(dieser)g(Stadt,)g(die)921 18336 y(die)415
b(Einric)-36 b(h)g(tung)413 b(einer)i(F)-108 b(u\377g\344ngerzone)414
b(im)h(Stadtzen)-36 b(trum)413 b(b)36 b(ef\374rw)-36
b(orten,)415 b(erh\344lt)f(man)921 20328 y(mit)434 b(Normalappro)-36
b(ximation)435 b(das)e(In)-36 b(terv)-72 b(all)434 b
FB([)8 b(55)p Fx(;)p FB(7)221 b(\045;)g(64)p Fx(;)p FB(3)g(\045])5
b FH(.)921 24865 y(Kreuze)433 b(die)h(b)36 b(eiden)433
b(zutre\033enden)e(A)-36 b(ussagen)434 b(an.)p 1062 25832
44260 45 v 1062 32879 45 7047 v 1770 27692 a(Das)365
b(K)-36 b(on\034denzin)g(terv)-72 b(all)364 b(w)-36 b(\344re)365
b(breiter,)f(w)-36 b(enn)364 b(man)g(einen)g(gr\366\377eren)g(Stic)-36
b(hpro-)1770 29684 y(b)36 b(en)-36 b(umfang)433 b(gew)-36
b(\344hlt)434 b(h\344tte)e(und)g(der)g(relativ)-36 b(e)434
b(An)-36 b(teil)433 b(der)g(Bef\374rw)-36 b(orterInnen)1770
31675 y(gleic)g(h)435 b(gro\377)f(geblieb)36 b(en)434
b(w)-36 b(\344re.)p 42912 32879 V 45277 32879 V 1062
32923 44260 45 v 1062 38052 45 5129 v 1770 34783 a(Das)435
b(K)-36 b(on\034denzin)g(terv)-72 b(all)433 b(w)-36 b(\344re)434
b(breiter,)f(w)-36 b(enn)433 b(man)h(ein)f(h\366heres)g(K)-36
b(on\034denz-)1770 36775 y(niv)g(eau)434 b(\(eine)g(h\366here)f(Sic)-36
b(herheit\))432 b(gew)-36 b(\344hlt)435 b(h\344tte.)p
42912 38052 V 1 0 0 TeXcolorrgb 43621 35819 a FF(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
38052 V 1062 38096 44260 45 v 1062 43151 45 5056 v 1770
39956 a FH(Das)g(K)-36 b(on\034denzin)g(terv)-72 b(all)433
b(w)-36 b(\344re)434 b(breiter,)f(w)-36 b(enn)433 b(man)h(die)f
(Befragung)i(in)e(einer)1770 41948 y(gr\366\377eren)h(Stadt)f(durc)-36
b(hgef\374hrt)432 b(h\344tte.)p 42912 43151 V 45277 43151
V 1062 43195 44260 45 v 1062 48250 45 5056 v 1770 45055
a(Das)359 b(K)-36 b(on\034denzin)g(terv)-72 b(all)357
b(w)-36 b(\344re)358 b(breiter,)g(w)-36 b(enn)357 b(der)g(An)-36
b(teil)357 b(der)h(Bef\374rw)-36 b(orterIn-)1770 47047
y(nen)433 b(in)h(der)f(Stic)-36 b(hprob)36 b(e)432 b(gr\366\377er)i
(gew)-36 b(esen)434 b(w)-36 b(\344re.)p 42912 48250 V
45277 48250 V 1062 48295 44260 45 v 1062 55342 45 7047
v 1770 50155 a(Das)435 b(K)-36 b(on\034denzin)g(terv)-72
b(all)433 b(w)-36 b(\344re)434 b(breiter,)f(w)-36 b(enn)433
b(der)g(An)-36 b(teil)434 b(der)f(Bef\374rw)-36 b(orte-)1770
52146 y(rInnen)451 b(und)f(der)h(An)-36 b(teil)452 b(der)e(GegnerInnen)
g(in)i(der)f(Stic)-36 b(hprob)36 b(e)450 b(gleic)-36
b(h)452 b(gro\377)1770 54138 y(gew)-36 b(esen)434 b(w)-36
b(\344ren.)p 42912 55342 V 1 0 0 TeXcolorrgb 43621 52150
a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45277 55342 V 1062 55386 44260 45 v 47992 7823 a FE(___/1)p
1 0 0 TeXcolorrgb 47905 9815 a FD(WS)369 b(4.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 59414
54804 45 v 0 TeXcolorgray 24421 81281 a FH(96)p 0 TeXcolorgray
eop end
%%Page: 97 97
TeXDict begin 97 96 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1794 a FI(WS)740 b(4.1)g(-)h(8)f(500-Euro-Sc)-60
b(heine)740 b(in)f(\326sterreic)-60 b(h)740 b(-)h(O)-60
b(A)741 b(-)g(Matura)-2385 4817 y(2015/16)718 b(-)f(Neb)60
b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray -2042 8124
a FH(114.)p 0 TeXcolorgray 652 w(Bei)528 b(einer)g(repr\344sen)-36
b(tativ)g(en)527 b(Umfrage)h(in)g(\326sterreic)-36 b(h)527
b(geh)-36 b(t)527 b(es)h(um)f(die)h(in)f(Diskussion)921
10116 y(stehende)437 b(Absc)-36 b(ha\033ung)438 b(der)g(500-Euro-Sc)-36
b(heine.)438 b(Es)g(sprec)-36 b(hen)437 b(sic)-36 b(h)439
b(234)g(v)-36 b(on)439 b(1000)h(Be-)921 12108 y(fragten)434
b(f\374r)f(eine)h(Absc)-36 b(ha\033ung)432 b(aus.)921
16645 y(Geb)36 b(en)527 b(Sie)i(ein)f(symmetrisc)-36
b(hes)529 b(95-\045-K)-36 b(on\034denzin)g(terv)-72 b(all)527
b(f\374r)i(den)e(relativ)-36 b(en)529 b(An)-36 b(teil)921
18637 y(der)707 b(\326sterreic)-36 b(herinnen)706 b(und)h(\326sterreic)
-36 b(her,)708 b(die)g(eine)g(Absc)-36 b(ha\033ung)706
b(der)i(500-Euro-)921 20629 y(Sc)-36 b(heine)433 b(in)g(\326sterreic)
-36 b(h)433 b(b)36 b(ef\374rw)-36 b(orten,)433 b(an.)p
1 0 0 TeXcolorrgb 921 23174 a Fx(n)369 b FB(=)g(1000)p
FH(,)435 b Fx(h)369 b FB(=)g(0)p Fx(;)p FB(234)921 26343
y(0)p Fx(;)p FB(234)297 b Fw(\006)e FB(1)p Fx(;)p FB(96)i
Fw(\001)8779 24185 y Fj(s)p 9886 24185 10436 45 v 10019
25445 a FB(0)p Fx(;)p FB(234)f Fw(\001)g FB(\(1)f Fw(\000)g
FB(0)p Fx(;)p FB(234\))p 10019 26033 10171 45 v 13803
27254 a(1000)20691 26343 y Fw(\031)369 b FB(0)p Fx(;)p
FB(234)297 b Fw(\006)e FB(0)p Fx(;)p FB(026)370 b Fw(\))g
FB([)8 b(0)p Fx(;)p FB(208;)657 b(0)p Fx(;)p FB(206])921
31033 y FH(L\366sungssc)-36 b(hl\374ssel:)921 33579 y(Ein)368
b(Punkt)g(f\374r)g(ein)h(k)-36 b(orrektes)369 b(In)-36
b(terv)-72 b(all.)369 b(Andere)f(Sc)-36 b(hreib)g(w)g(eisen)367
b(des)i(Ergebnisses)f(\(als)921 35571 y(Bruc)-36 b(h)433
b(o)36 b(der)433 b(in)h(Prozen)-36 b(t\))432 b(sind)i(eb)36
b(enfalls)434 b(als)g(ric)-36 b(h)g(tig)434 b(zu)f(w)-36
b(erten.)874 38116 y(T)-108 b(oleranzin)-36 b(terv)-72
b(all)435 b(f\374r)e(den)g(un)-36 b(teren)432 b(W)-108
b(ert:)434 b FB([)8 b(0)p Fx(;)p FB(20;)656 b(0)p Fx(;)p
FB(21])874 40661 y FH(T)-108 b(oleranzin)-36 b(terv)-72
b(all)435 b(f\374r)e(den)g(ob)36 b(eren)433 b(W)-108
b(ert:)434 b FB([)8 b(0)p Fx(;)p FB(26;)656 b(0)p Fx(;)p
FB(27])921 43207 y FH(Die)608 b(A)-36 b(ufgab)36 b(e)608
b(ist)f(auc)-36 b(h)607 b(dann)g(als)h(ric)-36 b(h)g(tig)607
b(gel\366st)i(zu)e(w)-36 b(erten,)607 b(w)-36 b(enn)607
b(b)36 b(ei)608 b(k)-36 b(orrektem)873 45199 y(Ansatz)433
b(das)h(Ergebnis)f(aufgrund)g(eines)h(Rec)-36 b(henfehlers)433
b(nic)-36 b(h)g(t)433 b(ric)-36 b(h)g(tig)433 b(ist.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
8124 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 10116 a FD(WS)369
b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 48932 54804 45 v 0 TeXcolorgray 24421 81281 a FH(97)p
0 TeXcolorgray eop end
%%Page: 98 98
TeXDict begin 98 97 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)717 b(4.1)g(-)g(9)h(Blutgrupp)60
b(e)714 b(-)k(O)-60 b(A)717 b(-)h(Matura)f(NT)g(2)h(15/16)p
0 TeXcolorgray -2042 4907 a FH(115.)p 0 TeXcolorgray
652 w(In)345 b(Europa)f(b)36 b(etr\344gt)345 b(die)g(W)-108
b(ahrsc)-36 b(heinlic)g(hk)g(eit,)345 b(mit)g(Blutgrupp)36
b(e)344 b Fx(B)412 b FH(geb)36 b(oren)345 b(zu)f(w)-36
b(erden,)921 6899 y(ca.)383 b(0,14.)g(F)-27 b(\374r)381
b(eine)h(Un)-36 b(tersuc)g(h)g(ung)379 b(wurden)i Fx(n)h
FH(in)g(Europa)f(geb)36 b(orene)382 b(P)-36 b(ersonen)381
b(zuf\344llig)921 8891 y(ausgew)-36 b(\344hlt.)394 b(Die)g(Zufallsv)-72
b(ariable)395 b Fx(X)498 b FH(b)36 b(esc)-36 b(hreibt)392
b(die)h(Anzahl)g(der)g(P)-36 b(ersonen)392 b(mit)h(Blut-)921
10882 y(grupp)36 b(e)326 b Fx(B)67 b FH(.)327 b(Die)g(V)-108
b(erteilung)326 b(v)-36 b(on)327 b Fx(X)431 b FH(kann)326
b(durc)-36 b(h)325 b(eine)i(Normalv)-36 b(erteilung)327
b(appro)-36 b(ximiert)874 12874 y(w)g(erden,)433 b(deren)g(Dic)-36
b(h)g(tefunktion)434 b(in)f(der)g(nac)-36 b(hstehenden)432
b(Abbildung)h(dargestellt)h(ist.)921 35947 y
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 369.87991 a add def
/d 0.0 a add neg def /h 182.10179 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 35947
a -11047 33428 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 22.7497 T 14 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.4  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 574.12971 0.0 136.57104 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.4  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 22.7497 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 40 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.4  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 136.57104 304.84598 136.57104 0.0   /Lineto /lineto load
def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def
} if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.4  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 22.76184 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  136.57104 0.0 159.33289 0.0 0.5 14.22636
6.25963 6.25963 tx@CoilDict begin ZigZag end /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 17637 w @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 318.66577  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 318.66577  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 159.3521  def /dT 1491720 abs 65536 div viceversa
{ neg } if def /DT 4. abs viceversa { neg } if def /subTNo 1 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 5.69046  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 5.69046  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 318.66577
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 6120
34774 a FG(28)1579 b(32)h(36)g(40)f(44)h(48)g(52)f(56)h(60)f(64)h(68)g
(72)f(76)h(80)-11047 33428 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -11047 33428 a -11047 33428
a
tx@Dict begin  { 477.99866 159.3521 pop 159.33289 0.0 exch pop } PutCoor
PutBegin  end
 -11047 33428 a -11047 33428 a
tx@Dict begin  { 5.0 6.67703 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 -11047 33428 a -11417
33714 a Fx(x)-11047 33428 y
tx@Dict begin  PutEnd  end
 -11047 33428 a -11047 33428
a
tx@Dict begin  PutEnd  end
 -11047 33428 a -11047 33428 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -11047 33428 a -11047
33428 a
tx@Dict begin  { 159.33289 0.0 pop 477.99866 159.3521 exch pop } PutCoor
PutBegin  end
 -11047 33428 a -11047 33428 a
tx@Dict begin  { 5.0 0.0 0.0 0.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -11047 33428 a
-11047 33428 a
tx@Dict begin  PutEnd  end
 -11047 33428 a -11047 33428 a
tx@Dict begin  PutEnd  end
 -11047 33428
a 15118 w @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 159.3521  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 159.3521  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 341.42761  def /dT 2984125 abs 65536 div viceversa
{ neg } if def /DT 0.02 abs viceversa { neg } if def /subTNo 2 def
subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0
0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 2276.22046  mul cntTick add def x abs MaxValue abs le { false {
x minTickline exch moveto x maxTickline exch lineto } { x tickstart
STsize mul exch moveto x tickend STsize mul exch lineto } ifelse }
if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul exch moveto cntsubTick maxTickline STsize mul
exch lineto } { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick
cntsubTick dsubT add def } repeat subTwidth SLW subTColor subLSstroke
grestore } if showOrigin { gsave false { cntTick minTickline exch moveto
cntTick maxTickline exch lineto } { cntTick tickstart exch moveto cntTick
tickend exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{
/showOrigin true def } ifelse } for /showOrigin true def /dT dT neg
def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub
} ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet
exch def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add {
/dx exch def /x dx log OffSet add 2276.22046  mul cntTick add def x
abs MinValue abs le { false { x minTickline exch moveto x maxTickline
exch lineto } { x tickstart STsize mul exch moveto x tickend STsize
mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth SLW
subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 159.3521
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 2826 33714 a FG(0)1623 28587
y(0)p Fr(;)q FG(02)1623 23547 y(0)p Fr(;)q FG(04)1623
18506 y(0)p Fr(;)q FG(06)-11047 33428 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 -11047 33428
a -11047 33428 a
tx@Dict begin  { 477.99866 159.3521 pop 136.57104 0.0 exch pop } PutCoor
PutBegin  end
 -11047 33428 a -11047 33428 a
tx@Dict begin  { 5.0 0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 -11047
33428 a -11047 33428 a
tx@Dict begin  PutEnd  end
 -11047 33428 a -11047 33428 a
tx@Dict begin  PutEnd  end

-11047 33428 a -11047 33428 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 -11047 33428 a -11047 33428
a
tx@Dict begin  { 136.57104 0.0 pop 477.99866 159.3521 exch pop } PutCoor
PutBegin  end
 -11047 33428 a -11047 33428 a
tx@Dict begin  { 5.0 23.51282 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 -11047 33428 a -12349
33760 a Fx(')p FB(\()p Fx(x)p FB(\))-11047 33428 y
tx@Dict begin  PutEnd  end
 -11047
33428 a -11047 33428 a
tx@Dict begin  PutEnd  end
 -11047 33428 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x 28 def /x1 85 def /dx x1 x sub 199
div def /F@pstplot (EXP((-(x-56.0)^(2.0))/(7.0^(2.0)*2.0))/(abs(7.0)*sqrt(3.141592653589793*2.0)))
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 5.69046 mul F@pstplot
2276.22046 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x
x dx add def xy  dup 1.e30 2276.22046 mul gt { moveto } { dup -1.e30
2276.22046 mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit
} if repeat ps@Exit not { /x x1 def xy  dup 1.e30 2276.22046 mul gt
{ moveto } { dup -1.e30 2276.22046 mul lt { moveto } { L } ifelse }
ifelse  } if  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial -11047 33428 a
tx@Dict begin  { 352.80853 102.42575 } PutCoor PutBegin  end
 -11047 33428 a -172 x Fr(')-11047
33428 y
tx@Dict begin  PutEnd  end
 -11047 33428 a 41865 35947 a
currentpoint initclip moveto
 41865 35947 a 921
38492 a FH(Sc)-36 b(h\344tze)502 b(anhand)f(der)h(obigen)h(Abbildung)f
(den)f(Stic)-36 b(hprob)36 b(en)-36 b(umfang)502 b Fx(n)g
FH(dieser)h(Un)-36 b(ter-)921 40484 y(suc)g(h)g(ung.)921
45021 y Fx(n)369 b Fw(\031)p 1 0 0 TeXcolorrgb 369 w
FB(400)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
1 0 0 TeXcolorrgb 874 49559 a FH(T)-108 b(oleranzin)-36
b(terv)-72 b(all:)435 b FB([)8 b(385;)221 b(415])p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4907
a FE(___/1)p 1 0 0 TeXcolorrgb 47905 6899 a FD(WS)369
b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 53366 54804 45 v 0 TeXcolorgray 24421 81281 a FH(98)p
0 TeXcolorgray eop end
%%Page: 99 99
TeXDict begin 99 98 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)537 b(4.1)h(-)g(10)g(W)-179
b(ahlprognose)535 b(-)j(MC)g(-)h(Matura)e(2016/17)h(-)g(Haupt-)-2331
4622 y(termin)p 0 TeXcolorgray -2042 7929 a FH(116.)p
0 TeXcolorgray 652 w(Um)487 b(den)f(Stimmenan)-36 b(teil)486
b(einer)g(b)36 b(estimm)-36 b(ten)486 b(P)-36 b(artei)487
b Fx(A)g FH(in)f(der)h(Grundgesam)-36 b(theit)485 b(zu)921
9921 y(sc)-36 b(h\344tzen,)535 b(wird)h(eine)f(zuf\344llig)i(aus)f
(allen)g(W)-108 b(ahlb)36 b(erec)-36 b(h)g(tigten)534
b(ausgew)-36 b(\344hlte)537 b(P)-36 b(ersonen-)921 11913
y(grupp)36 b(e)433 b(b)36 b(efragt.)921 16450 y(Die)725
b(Umfrage)g(ergibt)f(f\374r)g(den)g(Stimmenan)-36 b(teil)723
b(ein)h(95-\045-K)-36 b(on\034denzin)g(terv)-72 b(all)724
b(v)-36 b(on)921 18442 y FB([)8 b(9)p Fx(;)p FB(8)221
b(\045;)g(12)p Fx(;)p FB(2)g(\045])p FH(.)855 22979 y(W)-108
b(elc)-36 b(he)553 b(der)g(folgenden)h(A)-36 b(ussagen)553
b(sind)g(in)h(diesem)f(Zusammenhang)g(auf)h(jeden)f(F)-108
b(all)921 24971 y(k)-36 b(orrekt?)434 b(Kreuze)g(die)f(b)36
b(eiden)433 b(zutre\033enden)f(A)-36 b(ussagen)433 b(an!)p
1062 27930 44260 45 v 1062 32985 45 5056 v 1770 29790
a(Die)i(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)434
b(dass)f(eine)h(zuf\344llig)h(ausgew)-36 b(\344hlte)434
b(w)-36 b(ahlb)36 b(erec)-36 b(h)g(tigte)1770 31782 y(P)g(erson)434
b(die)f(P)-36 b(artei)434 b Fx(A)g FH(w)-36 b(\344hlt,)434
b(liegt)g(sic)-36 b(her)433 b(zwisc)-36 b(hen)434 b(9,8)217
b(\045)434 b(und)f(12,2)217 b(\045.)p 42912 32985 V 45277
32985 V 1062 33029 44260 45 v 1062 38165 45 5137 v 1770
34970 a(Ein)434 b(anhand)f(der)g(erhob)36 b(enen)432
b(Daten)i(ermitteltes)f(90-\045-K)-36 b(on\034denzin)g(terv)-72
b(all)1770 36962 y(h\344tte)434 b(eine)f(geringere)h(In)-36
b(terv)-72 b(allbreite.)p 42912 38165 V 1 0 0 TeXcolorrgb
43621 35929 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 38165 V 1062 38210 44260 45 v 1062
45338 45 7129 v 1770 40151 a FH(Un)-36 b(ter)393 b(der)g(V)-108
b(oraussetzung,)393 b(dass)g(der)g(An)-36 b(teil)394
b(der)f(P)-36 b(artei-)p Fx(A)p FH(-W)g(\344hler/innen)392
b(in)1770 42143 y(der)367 b(Stic)-36 b(hprob)36 b(e)365
b(gleic)-36 b(h)367 b(bleibt,)g(w\374rde)f(eine)h(V)-108
b(ergr\366\377erung)367 b(der)f(Stic)-36 b(hprob)36 b(e)365
b(zu)1770 44135 y(einer)434 b(V)-108 b(erkleinerung)433
b(des)g(95-\045-K)-36 b(on\034denzin)g(terv)-72 b(alls)433
b(f\374hren.)p 42912 45338 V 1 0 0 TeXcolorrgb 43621
42106 a FF(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45277 45338 V 1062 45382 44260 45 v 1062
50253 45 4872 v 1770 47242 a FH(95)333 b(v)-36 b(on)332
b(100)g(P)-36 b(ersonen)331 b(geb)36 b(en)332 b(an,)g(die)f(P)-36
b(artei)332 b Fx(A)g FH(mit)g(einer)f(W)-108 b(ahrsc)-36
b(heinlic)g(hk)g(eit)1770 49234 y(v)g(on)434 b(11)217
b(\045)434 b(zu)g(w)-36 b(\344hlen.)p 42912 50253 V 45277
50253 V 1062 50298 44260 45 v 1062 55353 45 5056 v 1770
52157 a(Die)333 b(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)333
b(dass)f(die)h(P)-36 b(artei)332 b Fx(A)g FH(einen)g(Stimmenan)-36
b(teil)332 b(v)-36 b(on)333 b(mehr)1770 54149 y(als)435
b(12,2)217 b(\045)434 b(erh\344lt,)g(b)36 b(etr\344gt)434
b(5)217 b(\045.)p 42912 55353 V 45277 55353 V 1062 55397
44260 45 v 47992 7929 a FE(___/1)p 1 0 0 TeXcolorrgb
47905 9921 a FD(WS)369 b(4.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 59425 54804 45 v 0 TeXcolorgray
24421 81281 a FH(99)p 0 TeXcolorgray eop end
%%Page: 100 100
TeXDict begin 100 99 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a FI(WS)678 b(4.1)h(-)g(11)g(K)-60
b(on\034denzin)g(terv)-120 b(all)676 b(-)j(O)-60 b(A)680
b(-)f(Matura)f(NT)h(1)g(16/17)p 0 TeXcolorgray -2042
4907 a FH(117.)p 0 TeXcolorgray 652 w(F)-27 b(\374r)475
b(eine)g(W)-108 b(ahlprognose)476 b(wird)g(aus)g(allen)g(W)-108
b(ahlb)36 b(erec)-36 b(h)g(tigten)475 b(eine)g(Zufallsstic)-36
b(hprob)36 b(e)921 6899 y(ausgew)-36 b(\344hlt.)435 b(V)-108
b(on)433 b(400)h(b)36 b(efragten)434 b(P)-36 b(ersonen)433
b(geb)36 b(en)433 b(80)h(an,)g(die)g(P)-36 b(artei)434
b Fx(Y)722 b FH(zu)433 b(w)-36 b(\344hlen.)921 9444 y(Gib)555
b(ein)g(symmetrisc)-36 b(hes)555 b FB(95)378 b Fw(\000)h
FB(\045)p Fw(\000)p FH(K)-36 b(on\034denzin)g(terv)-72
b(all)554 b(f\374r)h(den)g(Stimmenan)-36 b(teil)555 b(der)921
11436 y(P)-36 b(artei)434 b Fx(Y)722 b FH(in)433 b(der)g(Grundgesam)-36
b(theit)432 b(an!)p 1 0 0 TeXcolorrgb 921 13981 a Fx(n)369
b FB(=)g(400)p FH(,)435 b Fx(h)369 b FB(=)f(0)p Fx(;)p
FB(2)921 16527 y(0)p Fx(;)p FB(2)296 b Fw(\006)f FB(1)p
Fx(;)p FB(96)i Fw(\001)7478 15112 y Fj(q)p 8585 15112
4866 45 v 8718 15907 a FG(0)p Fr(;)p FG(2)p Fy(\001)p
FG(\(1)p Fy(\000)p FG(0)p Fr(;)p FG(2\))p 8718 16217
4601 45 v 10312 16985 a(400)13820 16527 y FB(=)368 b(0)p
Fx(;)p FB(2)297 b Fw(\006)e FB(0)p Fx(;)p FB(0392)371
b Fw(\))e FB([)8 b(0)p Fx(;)p FB(1608;)221 b(0)p Fx(;)p
FB(2392])874 19072 y FH(T)-108 b(oleranzin)-36 b(terv)-72
b(all)435 b(f\374r)e(den)g(un)-36 b(teren)432 b(W)-108
b(ert:)434 b FB([)8 b(0)p Fx(;)p FB(160;)221 b(0)p Fx(;)p
FB(165])874 21618 y FH(T)-108 b(oleranzin)-36 b(terv)-72
b(all)435 b(f\374r)e(den)g(un)-36 b(teren)432 b(W)-108
b(ert:)434 b FB([)8 b(0)p Fx(;)p FB(239;)221 b(0)p Fx(;)p
FB(243])p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4907 a FE(___/1)p 1 0 0 TeXcolorrgb 47905 6899
a FD(WS)369 b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 25425 54804 45 v 0 TeXcolorgray
24095 81281 a FH(100)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
