%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 2.4/WS 2.4 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:52:50 2017
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular
%%+ LMMathExtension10-Regular LMMathItalic12-Regular
%%+ LMMathSymbols10-Regular MSBM10 LMRoman8-Regular LMRoman10-Regular
%%+ wasy10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 2.4/WS 2.4 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0852
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE3B67D0FF6359D1B6C1C6DA4220428777EA791A503CDE266
386B24E0D7FC0C19F54D39D2B9223D466810564615CF6EBF5A75BEC8F6DDDF38
26F6A75F7C9A433ABB0C95B150D21DBB43878E3EF527976A3A2433047A05623D
54F22D062F633C08A3EBDF22FEFA476B92D1B05B8667CF563F5CFD60228D5707
0FA2674ECBFB8D84E1693A55A5F1266927F5FDE691BCDEA8298E5FE1C77D175A
EDAB8978A6AF90E1B7B966A35A2B4C50E902A0BF6DE9CC6DB64D4958C71898B1
2343057B29CC080DDE49573135553DEF4254B037FE026BBCF73B66DAAE9292DF
DB95837F9B4CE3E9F4AFB4829B8BC01E61D0792388CEB45458D53BEE407B6D4F
8B01E2E4084C3C07BC0C2EF2ED8574202F0104BE98F1B426848977264FC06218
195FAF8DF5358742997ADC8C24B1E8B95A26E0F2009E7EA951D0B7CCAC92C4D8
FECF6AE839A524C8B374AACE6A3FE340832B87C79F0153AEE4F9E7DC3C838757
0A79F772E258BBDD7B93E0C7B734E8AECF7202CEB55022BD8CCABD6525C69866
DFA283FACDB94E0DCB9DD055571C43F6B5371A29092848C79CF64B46767C4648
23DBD444D1C27C132C5815F9C903368C2CBD810614C6937C7B571DDE52176831
E762C00840031FB88473B7852A95B5269E37BCFA26A91B2DC97B71346FF1EC54
0C0A7D17BD1F6FC7796FDB2ED9636F0655E6D1F4DC37641026AEB2AA3B782FF7
864EEF36E958E901F538C1361943905B3741431A973032B33256FB4E0E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /Box put
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890B0BBF10075D53739F7E84CEE95B40C3DB68D5
6E9847E37B7920412068C3DE2065A77281345980956AFAD312499818890B454F
5DD8C92695818BA4DAFEBCDD4D268763515CE077A64C5F3AB384A6DFD7DD9641
FCDA0A3344B3A14F82D478B4BE7BFC2822A4D67AD3FD07B11589B93842066528
1E51D954D7E6019F6921DB9B00ED303B4B8F557EAC7A0B0340A268B0DDB25B3E
BE0982129B0D3416CA5D07ADC689CAA181270B8141F9D0F60C60F156CB305E5B
E71D9A5D5FB3216BFB66284FCABF6D74564D1288EA99D3FCF6F29C3AA690A596
02C0AD2BB29A2D457C66031E5571A1454758212EB4D053F4C28FF629FA94DBF2
9677AC4B92C4DF5C7FFDE31A8F2D6F9477896C11CBA890DD464C9231B1C350E8
E8CEE17F2E0F5D10416F7D7FBC6085E9BE09E692951EA7B93A9F49CD458476E0
A380E1D122F275093ECFD398FCA6D714187CC12A2B16318F9E1D2B0E9EC134A2
C4D2674AA68D2E7EDBCCA383
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE27995D78FD99C5784B2B7C7C509E9B93BCC29
35CD2714C50B246A7DC70C99B7DBFADA1E01B81749EE49A70853CD45FC323019
A45BCA3DE39C3E7618C6322D264556FD657D9270933D8B167D2575CF146336BB
1C76735F3B09470E40B0624E52F21809704749F6D81E3B829D163D9F61E070EE
D8CA803E56CF227F71EB8061B83E035C7138A7CFB6D6CBAFB766754C0E8934F9
AB738930EB75A2713CCBE333CC60A6A8F2BFDB043ADC0B94FA3370BBFBC61D7D
25524B08C70599D58E7521F58D26AFECE212309BD7BCF62735379ACF3309DDC5
C3F30DD7D3A37804BB23274D7B30DD69E1B2C3CA70F2F79FA29543F526BB808F
04609B43776382C4389362AEA7FE4E03637B4599D176F103143DC04D5B5E53D8
568E7911839EB05C8F4A9E9C911D746C4C8EBC0A4E6AC3CF08AC86548A8FD6D4
7450B1FD87B119E547047F43E9CCDE1C1F8645DA03EEB02B27E36BB6C87F39D0
505579B2D0FF4DA9D4AA971DB4C82693DEB59FAEB3A14C1547C6C46C24FF3513
EBC97357AA2F25BCDC92F98CFF9F3D5881095B96FBB30E8330499FB4803EAF74
920BAFB89889071729076D755021515BD8DE5177013854B10911605F872456B8
F504547AE968C323B85DCAD9AAD5FC33F29A921D427EEE0E098E8591EA7F2D7B
A5CD8A91C01AE80B672831C286C900AD20776B50D4D2004F7295D860A2974B73
A9E8B594BC8BCA8356DB43399E6A6918A887A64B2EEE98060E47C0F371681713
13F92A306D1A7DD5FCA29CE223138B98E6C6BE9F3B305E2E4ECE098AEC270F11
2CADA74CFF4BD78C5DEF4354211E3953CD7AD90239C1FFCA061A21652104F54D
4CE1C6B388B901F937A299F65C3217180D4BBDA87A96F4C31014265EFD9206DD
DDD45DD3F56823BF8236F0E6B94537D9CEF904EDEC7EBFB0E60995CF6457CF0B
1D76EFC8D22A8E991888FC44FF9ED2954B7A9DF5CF6F256C8A86C3D98CADF1E9
24E6C6725EDE1262199758B2B070504BD81147F35D8989D2CA44BEDE6B8BA09F
511388851B9D9865887D4EF8AA7AE6AB234B252A506EA2EB59B1AD40A04BA972
EC6DC7C9E4ADEB7E40045F10F38E0C8D50CD28D96A028BE7C67D1CD148404CE3
0DE9213AC26B82EB823194818E6DE249207343C37BE9B926EEDF21E1D52251D4
37D555CB1FEF227CD15A08CA2A245C3C6508DD3592E809E0C72380B92F4B946A
7BAF34835CAC375077A843F61978AB4876871FBF42DF8EB5F877033452F08D41
970883CD836D1668B85BD642F7F50AE117B3ACD1A1372D5D4D2555A2E8E23E29
D8C8C5F39807B5A01188DBAA07A27A116C80E837DC740E86068952F0A57E9027
C39A603A4886213EC782000DEABF71EAE1B8944E2EEF19E1F7FBF442840845EE
D13FA9B4C5CB1FDE6F0DE20AAD69160BFBDA23C2D29311C4F82514DCF27C6B94
A8E727522E182DAB2869CD2C2B0F39016EB778060F35A6FE085A1BDB04A65CBB
6605D4D72E11338D87D5B0283A4B81EC83D03F502E7DBF202BA558B4EB271C57
922F0CF3980A02A40CEB2FEE42B631C999B71EC234FED7B269E5D91564F0AC54
D70F8EFC63B94F73ACBB4CD279716F68783C493794BF12502E04FC52064E63D0
05F2034A1E7E4192D1193BD94E99C0CCF702D9EC100066E1490894F5ABC92A92
C3F42F4101AC88024884C018C7D0DF65F7CEBDD46FADABA26B5433D34C2AEB07
6031841EA02F1C9622E0B64CD190A4AF3020654123563C5D6ED62F112077A1E5
88A8C8499A8917CAB23F00BC124FD93096D2603BC6C1734124CA3176AB14F488
26ED2E56C67571DB18177A07E082CB873440C4648D3FFF06A1499A5C7EDBE172
1759C1BEA3DE43B426C5E175B059005BF2911E685D076FF12D01742E9AAFACF2
CFCAF0517858C28A24FFEB5A26E46BB5B788713FB8009CCFE62C17E001C96636
A8DC58B71D4BC720F615D2873CD11E06DDB3A7788888A8E713D0E82FC861C0D9
ED98E873821095C6BE6CA909BCEB6C9BB1B0730BCBCB20E22D06AD1AAE225D51
25AAA901A78E86386D29A7CCEFBAA8F35B4813CC9D289E5244483DFEC10FF237
E38BC8E19B81502A19E0BD113AFF02F4E365A4708189A7BDEAB2D32A6E464AAE
B3505AF669EC3FE5A7C9320D907438DB23A82D8CB9777BECA40890C137564EAC
CE768714D7430BE1825C90D88DF40E753607A06AFC0046335F97A2FF20EA44F7
94C1DFD6B105FDFC6EBC6D5745C10D2C3BD560C939B80707B471D13D7A910F23
91FA6B63F2E6A01890368EA8F0D42E7A93B343C664BBCEBDBC0C99138A50E5C0
F57977D929DC9CC159568FBF5523D79229E9BA352E4193A44EE745F76035DBC9
34588B2B8FF44C8368C9C69AD17E91BD78559AD4BE219C8B110472F95FD5CEE1
A7EC2A78941AFD0B102C6CEF9D5BCD4C4FB87316BC327ABA5D5F5FF14BFAABDF
9FC06879D91DADEAA25F850083BE6CC26AE7437664ABB66CCEEA19D0BDE898CF
328861C3CB4423FD2C0C1AFA95A6195FEF30511D5C87876C863364CE4B089A97
6F9C29A14A61785C42D2C746A98194782D9A504B2A0A92D4E4B5062855A33404
2E14145F4684AD22D461E740FA8DD232D18E559DAB50A977CF474EE1410D7097
785D120CA5C6E051D096CC40E931BEB074AA9E32BBFA361593C78D0D2EDCB1CD
D560A14E93017099D24663633B06BBE3C20A2718C044731B6DB8007749D1B605
F397413DF968722DC03BD138B0559D3E5887B7EA9C9C54F8335F55CC3F1B9135
C70CD0214CF04A4EC5AD120D492F25CD6E1E80CE87C5709112938ACF9BB2E011
87FC035CEA0FD5C1147D41630F1CC9B82B395BDCE1885A1D5F3441B03AC321C1
5CDE681DBB192993B553048C58C55F0E420DCEA46CD16B75173C5D37047E511D
C980EBD803E01C35504C4092D93AE476AB15324149043E713261671835DDF160
4B8DA000941FC5F85C754D5132402A0A94EA3D0E37D6B9890461CF1C65AB7C2E
E42288BD17DB983600580BB1513D30983C4FCDD1836FEDC80308316401D8B181
EE2A3B114F68DED3488EB9ABDBCE6E73EC5A0AD42D7735045D594C43A33EA29C
BE2AB98CD0305DD935D8F0F5EE3205A7576650887883B3C9AC23E217F48154FD
6CE1454F09486B47A5A18DE65034D0CC9F9F66DE2BE45C2D6F1AF8B10F578B9F
F66D78D738FA85FC454C23236FF4B665EA0E6210060F6439E9CCA612DC7ACE7A
D12F478F25D40CDF7D23E3E543B75A97A7BC960A7F742A2C89212832C36801A4
C384B89A91D53E0CD886C7BE0692CEB0CF29D9B4BD53E08D9FC1A863599BCF9A
717F4DC319B4B59AF009C11A91ACB087542F94750DC53232E62ACC3C660965F4
5849011BD76FF8489964A7848FC6F3CFA44B7F502649EAD20FD32FA1999CB88E
A646C764BD2088A3EF00A4F1862F2CAE2F8B6A8DB26A1287AB3DD941A92AC57C
EC6D4CFCE0ADFD99BDC3BE161F4C1FBA9B854899BDB7E9D09A1E25A95E9789BA
DC6967F96E550903DF9B81969E38FA3DE2A058EE2076C77C33A93F2FBAECA0A0
EA98FA4C3D1F8700B04CEAEA603A0833E91FB4A44AC83C4E86308B6E89C99A84
8AAAF1BD143560B559176CAF28B1D8B2C8370CBAD5873329B24AD4A743F2CFD1
8B26B1128AA48F72767FF2268BED8317FAFDB532191FA35C2984AE7C50481FF3
126BAE5309893814BA28263EB863D5E6F01C423E6C5D3289B152CE19FDB55A11
282FEEFFF3E262F26041CB1AF30804A3CC34C06C6FBA8AED582215711B0A17F4
1B505FA0B5F906C537EFCDEE4C69AFFEF89B74C5B83E2DEE7642AA85B1615F9C
BA1C3C3197223C98A1ACAA495A6B8B8F1919AC158DC63FF4600FDF993CE8D2E6
3DAB7E352BE200322BBAF6DDD2628694612A7790EA8E1836533738405E9B7AB6
9DC77FE9A283B3A8C6A3651DE8AF71499D39CE0567AEA286091BEA9D6A443A5C
D35747785C433D4E18A02ABA38F55742DC36E4FF07A656AFDC3D0A32CFC097B0
5F9D90CC4B614AE7F58F3BFAF22EE6821291164B14DA11FB16C0E671A6104082
94D05830E44ED3E9908B59DB3B3506C60D3F766ECE69AE23369AAC3B5951B557
D62C7728D6E3F13BE05939C2A6FAA336EFA57001DE299223DDBB333D71003681
B4A816B378AFE37543607554F1F1B427784EFB366CBFF1CD7CD5FE3CB61842EF
56F134AB25DCAD2BD08AE61E233FE6FA79017D1883C61EF0334681CCACC5D024
F39309DDAE717CDDEBF80C88974D717C4539732DAD1226FE504620FDEEEC6266
41060E55159270B4794F9C0945FEAC295D17B4E252D015910B847534A519CFC3
2D52169510940A9E9AD636AE141331BE35D1D5308C927BA3940B773F20E5B3C7
813663D33205454A1A4B2D9173D593615C4459845E1AEEEE1ABCE3E5328D3F81
11610DB32C86FF6F9DBA1B8D6BBA3C4AF64523F37F176F3256E298D22DC5F1CC
F1A67A355219E2EE13D5D6369F656836EE0A77206E8236649E81A1F0E02D8D3A
3C8FAAECF7839D20329CBC5ACB43482D3A3A1E9C3A426BC7FE406E89FF25FEB2
34CCD7F3FB3C608FF37988C7DE6A41FB1020DBBCC762F2BF24BF424BBB2D3207
9DD408226AEAA0C4DCB8DF16CC6767B0BC73EBA052FAA5311407ADDD4BDB1061
3A860B10D2C219E96E61050B98FB04425912F484F5B79B9C0735F92C1B4353B0
76358780D1547206329F302AF6853E5DCFBFE199A76734AEC487BBB103A8547A
0090F0342D48DFF9EA9821454CB759B3D82921AB4B9278E652C2F30A8A121781
8CFD111E32142FFB160DB6422A5884151A4671D631260FB1758BAC67E14234D2
5747F1E68E0C36FEFBD535FA5C64B046AA8835817140B76DC22B5453AE8F3F76
C69B9F10988BE7D061F539CC8711030D2483F752706E27D43E3102CEC57B8A58
6D3FF862999D20CD6BBDB23762249BA7031D4D97DE2280C10756DAC422F0B747
E427E5DB0B265FDD57193B8E7F00C2162FB111DC4972B51E59320793EC60AA3A
F4A3F68AA5E11F657F898F59F67E0D285167231B9F444D42F17CB182EE584117
FC81DDB5BEF8EB957F817C5699C7293E47DAA4EAD6D47F00FC6443EFCDCCACE4
627CFE80E82179579BFE305B9AA1770E8E8970E70524F9F7AE081E64AD1F71D6
CC6FF054661866B68CCC383E5403F0A734ECAD86937D32FACAB6B04F3F9ADD79
94C11CE94999A3F38C88115D6082DECDC2125A4643102DFD0AFCD8682BE5CA11
AABA54285DEB171209CC4CF8879A65088C7381B9029B67CE9029093EEBBAEDD4
403C382D29751340F63D14C45D0C8ACE829FC3034643F4B76AB7BF41CDB0A2CF
B2CFF7A3E022256D29AE0E789DBA81CB4DDE7D4A970A3162D903EDE2880C20DD
FCB205309DA145A55A2C6763E0D8BC8A0BF42461DCA1CB7E613647A93FAEC756
3535886E28292A422264BAEA373D5F1AD84FC79DE23E2BA52D8EE1B1D3F80318
8614D6ACD81856288366086F50154919E5C99CF62A7700E896F5B69456110B9A
8BBCDA8551C3C14F979F3CBB597AAE41210AA7A444428DD055DD35D91A1DD465
3800988005F542BD304D2D1798BABD827BC8A689C3C35078CC3502DEF40DE082
B544B4AF7127EA6D5B8FF5A0735257BE29E36A29B707A51A697A4D8A360D4017
19C5FDD791A1C640D47AF86948448DD00039DB41E9C5BE1A7E6BB48920932280
BC552ECD04E2C33B76A0F6172098AA76CD4660980EFA1C84D5348740B8A4885A
BE1FC79E81913524DB238155870C6B9819E5842664A4049499CAFA7351D3D3BF
FEB9A51236038D4452E44A34F25718B7158C40F12ACA152F1EE78072533F8900
CC3A1869BE48305DA62447B28A45D6F516078C72A4B155A2715B713EC359F680
FCF2663644C985191135F0156722F0BF1DFACDE42BEFD5278ACEC4A55F1A082D
537B3C1EE890A6FD2ECE0EF3999DB161EF7DB88DA4B0C592385D35F705BC2A9C
CD7351AE879DBB7FB52F25A5A5DFA45DB0FDF9B94F0AA69918932E563C8827CC
340AC4350DD2FF1A3EA9F8F3711A16CCE9A37170F0C02A9C7143D722CFC08677
6227901157114767FEC20D2DBA71C87061EE8BF523D591180D29A8F8E14A7959
731A74DC4B215D7EC095EBE86A3CB7C28C2EA7E6A19A68B64EAF236A3468C0F9
453189A1DFA55A9459D1C5B8CDC769D992269E6EC4631B1B75F7E6A511DBD978
F3032D2FC6BD54FD7664FAF472BBF13AC7F619FDC4AD5B38CE04E4C555757F69
C669C5EC403770F681C400FAEA98F62F02633E0F85A780A61DF255239F9BC3EA
AD652E6D5E754B9ADE46841E52DF90C3F0D7CE5DD684566DCF0B43A0B0F975DE
AE2F7601EB63C39D6EE8C54611D9D515EEBB7192C63D22D02BB2A5A27270225E
C95173C09068553725ABA9423F4B268C58072241D2DC5C080E7881848222220A
63605F00205C205B35DA93F4D000126B2CE72AC322B4D962537889CF225B3381
6EB449BF2C28599EB66F071FFCE3410C547A9B74D216032B72854A0B8A6ADE15
EBBFD5CD2BA9FAB7E75099FF1B68329B68A2CE587608555325EF062CFF465B6F
184FB4C37A50F08B2F1CF6E09E92D6215A5C9BE511CF326505FC5EF2B72DC40E
3350D5D5358B49CD7A1713DE7AD5B63F462A77B6268B7AFB245DE6EE02BF2A97
B0542A5CFD6CAF309B7E10ECA06B51C2717DB5BDE8E80D6F29B33E9FE12AC804
AA0C6670967F6C3C2A7310CCC64AB48219EF140A1D9A942543FDE90924C9DB3A
5D667E0AF18066F4318101305AED22847F855960CC952649426FBD46FBB5728A
CA73B436527795BAA59086831567FDD5B3BA6931468115577ABD8222985FAED7
B6A1CC891D07185666E6E74DE886BB13021AADC9950E2EF1FB69E5350B281CA8
F05E2830521A7BE2EF1D993F75619EAC1B3A7A437612AB0E8513DF8F0F44E933
75553EA81965C83F6CA655BBD1410B7E8F600CA820DF8B4BAFE515BCC974BCC2
8E06AC06B07BB7E08BFA5CA8C5EEF8386971DE077781A9E67359AD8E75DFF208
727DC428911CB820B9211D2A3C6BE6A3ED0A5A2C1C623A6D6615F24FED298A68
097564A8429CB235119311B9888D0BE96AC4BFD340BCABB8EE589A69F74DFC96
35A0F5DC489018CEAEB1857D6757F789BC058E42F9E7DEF39AADDD21245E0B80
921B883DF60990A47DA204E69A8A2ACE452DD79826FA99B797CE5714585F3FA6
6C8F36F2FA4550F81E41D6E57F80881B3CFE5D6BFD1F3E8D1F7B13351D44FB15
13CBB22AC8F22AF9ED28E469E2FF07E68F50C828BC2FBAE79527F0C704941983
A39CCB7E05896DE7069693EFC870CB86162612B04350A792BFB5004B54A8631F
85FF8DEF675A72FA6F1703B5114C5E507E856A931CCB05A58C30CF4B9105E42C
B4E3B370A6190039BD94F21DCD05FF887330D1BBD50855261706FE5DA56E84A1
947299D5B636ACE7B2E2E54D514C426F7D16A648D59D3B346732D4328E297D25
70C8EC671F9C4B189830EE8D14F60C0B87DDD481DA478EB8439CD426AF9CD9C3
5372E0A6B90A6A848CEE1E28367DA333B6BD3485EB7A78582FB9373716136C63
EADBAF7C9602F31151CE723849A7CCB72D68F7AEDC298DC4F36D78CBD08EA5AC
1920F4E395EB7A69DCE16AF779DB5B0B1A9AA02D13551FC49C934408289362F2
470B36B6DA4F131753819D477857A53E17D0FFAB7C8A91B883DF299E5EEB9361
85CED1820BC8C84AFE01CB0D62649724476612F057A79C695180E97F6337D3CF
24FEDE2EC799CF7497AC544402C80DC7D665E1DB96647C9654D20BC7BB6B607F
52F09F53B087A3E5284B1C41859808C27C7DF8F1BA9F18E5AA02000F39551C3D
CEFE8BA4312F68701496DA53695CE804B7463204E96F011EE6CA8DB225952CFE
1F34F9E75EC3CCADDFC18C036517987D3138F766C423C3ED87397E685A342075
0F7BAB0FE2A25DED422E0F8F23EC7B74F1E8A369DAAB3305C440A686E566386C
4E57F54BB7B3572D01FFFF3BAFA6428355378CA104CC824F2E571C437ACDBC56
D765E2C7F61226CFC5613463DE449E66980ABE0ACCEFBA3D2977040D8E3EB331
1872472E4CEDB3DD9AE5B2B077C4245513CE965D1C9B09EB63A187C0A357F2BE
BBB9042419A511CFB272AFD4ACCE358A2FB2FA8508290E2C6D80A6AE0478021E
111AC732FE5D804A6C25089ACB08A44D981673596D8A34E260B497E5A36B4E5B
040BF8FF666F7C1167CD675098B616D5A86C56F95714D15C261A3AEB187BA1DC
2BA013A2DD21570432822DF741724E8D187C522D898821B44C90F1159046EBFF
F998B96AB3E3E182E29B819FD861E52B04E008C86E9CE90611539EE7C418A9DA
70C894C59DB05CDC0BC78AA9F2EE39EDB8512BDE50D2DB535CA402BF91895CC8
2A8E3112888B1EEFA597E1623529F8734C0E096F1CF8A2F1CD0A5709AC8CFC3E
BA9A0C45B48925B43CD44B53F928F93C86FA9BF1093DE1422A1AF70F0235D303
D7F2692DE791D9F3B2BAC8FBED7AE0AA0A7DED469C64A0CF686E69E994902A4C
425BA976EABF2B11775929B12E50FAF9B77F9884F052D1DB422D245201FBD646
3F31D19B14350C351418EB5A898BA95D5857F0E6D8CA3BFA45DBFC6C63F79CB0
B5A99199A3AE536491032675C7663A45FF0767FCFB1BACE58B9B77225A134F85
2F6EC3B1A1748E75BB691459DCCCC211E44D10C0CE6B2EEAA9BD199DC0DDA646
CA1EEDC05579757B7F84CF308B047CD4389EFAFB3E574ED7CE8FBAAAEF5E9D12
3E16DB04DDC2F2EF4E5CF483942A38B7120E8EBE9417C4AF1E4E777C33BEDC84
71D498B5988E64D3F957588B2E07F07D84F8FB1D18363226E2140737C6C1745A
028752303923E6D954761EA45B0F04C1A064624C89D2B6ACFC55655633F02A21
C2DDA28F18BCCEAF2AD29C826602033327589A7E01A1E3EB414F26C049CC42A1
07DB8F52DC35DEB4063866DF059F2EB3B549BB128053BC57B5D0FCFEA1117400
874267758887D672CBCA219D2B5841538FE1B0FE8490E4C82DA8E5846FA9259C
25AAF35857B18A048DE4026A9ACDAA85DED842C2A0642F862E14B66919AFD491
F98D85C214DB28335BBB3DEFDB921C86FBEEB0F238F7A3840FD380641178AFDA
ADDBCB87A95E0EB45F47522BD93ADBEA35F1FD33C37C611AFCBF59B67AD80F8F
4D376E1B46A8A76FD2258F0314DA293F61D30028BB0FB43F50BFF95D7AB82BD7
577825454E01412CA3930B382663283EEED30AC5A04E5C5434D732318AE791ED
C71A47F2AB39A3F400EBD0D7AAE0F147D8D2FCB7DB9C8D91A19A2C08922FEC4B
BF2B0C0CCADB597E641054899B9DF267A46260B2E31A75FD38ADF1D15D6A0CC0
2BD9E2665DA9C303BE330D235AF50043582A0BB588897DA22D5C20F8A2C7CDA7
54D7F8AD8F8A00E390D5F6F47CE1FB3E1E056247EFDA02CB1FB6B146679A7100
39E6666835C2D79EC99FD9A2B562BE062ED1027C7D902A23E18DC9412FC4A752
0116DE3E3A0B788C4A729282F1DC31318DDF05BF42F1EF89FACD712EC46352ED
1B976706A6AE560AD6A82C3B0FF970F8A5DD27925ABE620A2430CC675ADF11C1
73EBE194E18562EB1F9C2ED760715F3F49B5B89CE4D14F9AD84983212728C19C
09232F7AE51D6624C8B15D84C4B7B0DA58C3149999D9417CC312E8D87F14AF3D
C280BA7B1C3FE7A3BDFC3AA8DF0F3D5886CB8AEED26D9949014AABF2312C9745
8AD7A361512E05D95A3737194E9447DF03D073DFD709C036188AF869E8D791FE
3DCFC3E1A07E4C32971A18CFBBB502CF3C1C33D64C241B9F161DCA2420CD2AC0
3E542912B987A9BFB8FFCFCAF350197789934182DA1309B66F009808B3E847A8
73C89176E748078A88E0CC7C62913054F9FABFDD9A08823E4FE32710DB207ECE
EE6BA1E22403433D97EF143C518E3BE33F0B75634B03DD8EC622C9E512A9B202
4A9C0EC0CF7753FE13B5B25ED180B9FDD07CC588F6956EA539F8D3D032A234F3
8D362220FD53A6555556089ADAB4DAF9B826BC53D97B466E552B920DC304A252
193F1D935ED5268A6AC194D216CD992E83A0D7A93F3AA16385F40896D4A047C1
4C559C9546D9845455F4F39629920D97C36F4AF1E5E72A5E744A9CE157FD3F31
92252514A465CA900C0A13EE814AF1520B31ED8235C81796D53D084C89410508
77519219B5AB9BD534F0FCDBC0CFA816443196F92EBAED840C491B354C07BFCE
A039DFB0F7E2C38F138EE0922FBDD3D7B9DF6E0C9984D8B63A12D9DC4BE10B98
D5CD9EF55CB212E5DBCA901F57E05BA8B4D829DF4684CB74785537AE1091DDE2
08B70A82F3812CB70902CCC8A0CED4EF40A73FFC266AD7AE02AA5AA6382253CB
2BA6EBCCFBC26B35BA3DF77FD3C2604EF52210F343C793DEDEFB0A2B19553DC3
E70E39A3CFAEDCDDC84FAFD1AB548A688C4F785961326589DF0A09242519D5D2
FA30D939C1B685275504110F23D15D0FFA4E22B5A0CB4FC82C4BB848D07EDE0C
17EAEAB4733D35471A43C4AC733BB92B64091D3187C8F98177AC08A9BC2BB778
3E87F35E9752D76D9E7A10EC504C5FBD990108D3846FE48A7B088541F51D307A
A464BEEB0720E6F45BD57DB169FD3568C8E044865DE7308E8CB5B74DC3402AA1
DE45FC978490BB69153DA6D6161F7FE53CE2C180BA49BBA59E918E4FA36BA2D0
47B3E52E699EE5082C0CA07D5E9A31F28B335C772B3FB6E71E7B82FD6BD50908
B89BA75466127A0DB5F4A5A1D91B228142F7C95C7F64567C9D80D1829D7FE5F4
5647ED6B99C6DF0773B204E643D52B1C06099A4518FD0BC54C4AF901912F9376
A84492BF9B8D010255944700567530AACDF077EB4AD5C54658E35E1A0E9807D3
60DC5F76FE4F4EEF7A02B807A0FA8E38ACEB99E18BD1B2662AB55A70BE52BC87
CB78ADBBD5E0735B99A6E94EC375C735028B31B845858465DF291829A64F790E
760888FE23E05C921096AD39D5F46A74AC94A09D60E190C548172D2E1D8F2129
5DB3EDCCB493A9E4A67EA6C5EC3072D8E15B0306CCC6EC4461A41721C04A609C
E77F624BF3C8CAF224558BD0C004D59938F495AC07199FA85267A621E6CEC165
897D8B6FB0C1C003F982B905BD7D67725C83EF7119C2C4ABAA69A5025AAD3ED6
BA7F318D51CE670573B51F64669225605730E7907062FB3BA362B2AF6C697F81
8EA103F173EC183996AEC4092C1B220F544989112CBD3BC34061698C3BD2B390
0A8A6A0B93FD79ED65110B0037C9B5E51337A2B33B073D9EDA2B181D5A6F8207
1BD5D814AA6BA13A9C73CBF0FD4C582927E6F48151E720E33CA846C5D3328E24
246EA73EF03626CC1C0ADEB130863434670C7484ED206FCFAEF68CA01BECA565
17AF0ACDFD9C0B72F9F9A16B4FDC1DA224656F15133D61C144DF45E747C961FA
32F09B4884979D611382D96BE1124E7ED7538635EF1262851AD5896ACA01B298
9993D432EE93A75860E50BAD4EB082040B22F37E8FEBD4E64C12F69C708B0954
CFBC174255165BF75291EF6E74899AB3A9D824CE570B07CDB6D968A3362AD6A1
6743BFA5239A8637B2FD4D5C379DD8B8347EDBE385E6E8DD109CB455A118F1A6
19D0F5DB14BE3E295284B1FF01C814878F0C177F552BDC9BB309C64C99315430
57FCA963E43D248FEA4C74D488566D48E19DF56331E837562DDFD2B9A20C6445
8327A48F32AD428B1FFD3230CB86CC47C8229176701890900230196C0249234E
B51EB6E52C6840365835E3C5F9582E3BD8DD9E79DB7D4148C1D90B37EF8E7962
E77FCB36CF08F6FEE633DAE0E07696962EED3A3A13C4041ADC5F5200588BF919
12DDF6CFDCB995609788A176928BEB2B6E6000CD045EBB8C18BE053CEE561076
BF062F476691EDAA1FF641FF982B41BDDD559D900C5BA1D89304BB7F34C338DE
DB79981672F5D7278419D03E92B51E62CE40C25D7801C69C3CA98C4433407C56
AD63401DD9A62024FE72ED631BFB1C157CA626EC056A68B66C652833CDCF0880
39A20DF669BD531EBD40F60C2966E53B67F590AD3EA1E41F68DC7EBCD9E9B6AA
F63DB3AFB9D9B87CC743CD6631965AE319D61413D43312587BD2D16F265FD71A
55FCA1A8CB1E6BD2C89800409EB1790485F53C020767B5AABB9C1AE108B826DE
9F26DF59B2995B000E5AE2CE32B6D8FE367BDDFC8B9FC564104A12E66ED0144D
9BC80EFF68437C4F5744027B50DF95864E0159B477B94FACFD9D615260783E80
6D7FEDDC4387DDB2E10EF3FA3985EDC86CD990E46DDB637486F5A5AE16B8B27E
8909626114A5A20F1516783E6083A9639E040D0976F90B757C56EA776FC6F0AE
AFC0B15FEA65ADA0703D3F8956FDC4CE39D27612EC65640810BD7C466F5F433E
C555E83C466B698F5BE76D6F4D553769823BE18EB58FAD298314B8B004B03DCF
D92444913BE1977A0496EECE4FF615602C603E1E1266199E356555DA1A22700A
87C2999DDE579B60444EAA9D6190CC61CEF424A54E62107D2ADA1C19405B9CB4
C44F3EF6A8AA79106C39A9F3738C63B39DD1BC2B47072BFE92B1D14DE9BB73AF
0AE80410C4FBC3A45FBE3BA447A0139F8856BB81184F4256994B5005D654E490
867BBF9FE2F2E7D41FAA5D19294AD7623E060977AB9233338E1B79D44D2220BD
4EF12017FACD410123C239F97E12B2AC52034CC11B637B8BA9BAA8D07CFB5C9A
4A7184FB2EA9C7E66069D56F6579693CB65053BF56062972DE5B51E3BD84E30A
1D0391179FD995E5020FB2B56B488D0D602B6F7B9E513973DF94CC2D37694850
ECE54C80D2CE7D0C3BEA2C2777329340EC29A5F40576CC6C8C42D4FEC6238728
F8BB1AE6F5715FDCC38757056512214E376792D93EBFF478890B8DE836F9B0B5
A6E798354E80D1F3E8CA6184230B776E9BA0BF1ED2545A0446FABDF17C6DE996
6520B2AC0BC79B34B48930980213FA0E2C36D1BC7AF03B4AFBE261F8D4529D93
F2CA8DBCF55453A1FA4D72DBFC97B554FBCB62F90A0A80260CCF63AAE519616F
25D6E5427FCFBDEEAAC67F14F71B450BC562A195E9F1CC98A44A60F7D0CE0CAD
7375E13E761D8D7E9DEBE27755E9076DA5585F9EF8D12FFF1130B63D78F0A56D
5902AB6A25FFE9F98963FC566AE808AE20CAAE74590B3DD20A1CE00D9443060D
79DC3EE65E742ABA451A2E501EAEE3E3812E24DAA8DBD8E81D9D7B6FBE67A34A
71235FF03BA7479A9EB4D699114A950D536C1C44746579957E6556B36EE89D1B
A848F9FDECC6604E7D488ECF152B6949383EE7C7C95D376D2C48FFEA0D825AA3
CE8FF2CDEAA927EEC19F99F67B642948FE960344AAAC1F7663DD34540F0CA316
20868D9032C34BE24CD59ADCD6CCF4D19716E82ED1601C7627DC1A93A9046F00
61D3564D2044E9B8D39239A2044B1C0EE6096E008AD67226A9ABBB491C413AA4
6FA5DED522DA2A5EDF409A3EEB5735617E77A7A77CD82CCEF049A97F439393AC
4BA9F2B4B8E959E8877C908EC152DF4A9BCEB4DE7DF3FB85FBA15A1D1070FEA8
7E135E5ABA5B3216B772316E03AFA5A27E6F5EE3F77F4CAF41FB7121155B13ED
556A5A5134B85CF61DE04C9E9FF566F2CD09BBEB1FA1FF7EF8999DBA1B10FD88
E772B3E0E13DAAFD896177F1F70EADCF7E077FF92CEEE279D01E357EBC88C3F3
6121DE0957AD1610C7FFED2F5728DEFF0F93D479FFD5CAF4D703926F1BA042CB
A121403FA01EDAB3E0E96C71479FE3A4A5CCD867E5357A9C218E26F2DDB61CEC
F668D3B57D6EF154E44DD2822D40E023A3EC59C5C9EB75F27704912DAE6443EA
E098DC77C52DC288A2E5F1A7A225BF26E2AEA0F352B9C950B47ADF650AC761D6
9E7127AC4128988F493604E1BC8DCE99225BC6C62F8545E290F3722C395B2F0B
03B4E05F14021486C02CFDC6D112762B8527CBE3381953B0908617A28D2D6A54
85119D2B31A94BF39948D4B3688E588AEAE48E2D6A27F302498AEB3445D8CF8C
EA7FDF03568AF44E2EE4D8479BD62B3CC9ECAD676580F43F0DDB4CF11B602B9F
49BD4D48F3B93043F3ED792CFCF5AC617DBF2FB8C7A3E2C704F08BA994239C97
16711F492F317C6BE4E3D2EB502EEA5A85EEFD4DB4B9B2E9C804FE27C8B6EB69
128E5B705F8B48DD49577EF2E015E8D9C0F64025C76E0550BAFB45D4EEBFFFE8
10F076D00710C302B4E5E8AD40D6C3D3F556A20710BE57D1D1F58DF8A97E7C41
1AB7B0BD173C6E4825822602693C071225D0A59742608FFD38593AAB31CFB25E
01E9F870CA8523DCDF93D57CE57C1759F393A5A71B51C2CA3E8D601A4121FAB4
199883C9873396EA151D9E4CB3E69641D3795AB67934B16BD1AB63701EDDFD72
72117BD060711010019A97B116AB929E54C97C3E7390AA7DAC6B285A4CB00576
89E72DE1D7D5770F0DAB5D15A88FAB1C999BD8C391F4F045EE1155E8E99331D4
573A194D84C7B6487A232F85E82EB2C9D5C2056F4B7422995A9C662760414C01
404043E413839CF8C96D5618AE9EFF1F396331208B8544B26995F07752052A37
B5A18AB3F44D40849F4021CA494EF6BCC76BE0D8A68799EAB8C3ED2FDB628486
8F20DE7559A629FC0F98AFCB0990E42A47A7EE273B8DEC1FD2273F6B91576B1E
2762E875B9AE76695B44F086392946A6E7EBC4B4A5F133E7F347118CE7C1039E
EE6A9CFA343F0C8B645BF1A448C06125B353A060BC0FF3F186334437078CA478
D918C39CE66D72D901000CB57B459A1FC7CC2DFB847418BFCB9DF51625B59ADA
1619B9898070C85B75E55D23FA19AA91EF2F930F5C88B9C1F8171EE9CD00EE63
3CBD0747DFEB54B2D13683A18DEE141F7811DB6B92BF533DCD9B045AF4FDF947
700A630BFD6A5784A1D98D00CEBF2730D812FDDDD016B803C38B8923866E5B3B
72048904BBD47D276D475E2FB51F74A8BE2E5D0322FE45A04F184800733B1344
0F514AF796BCDD8590E088ED9656B074B08F2CD31FC681245C724A8E754BD9B6
34D0978C073A1C110CCB0106DBF37D3D6257B109E9C5AB2FF276010D7AF73812
3415E277C62F8D923A4F242A838C6B52EF296F939F20BD4C4DE790CDDCB68CC6
70E9A440628F8FC7B19054CF4917BC54655EBA7CAAA856DCC1A076DB74BE5191
EEEF657F57B67B7A30F19998965BCC86E003A60E71436E0A85FDEB9A467F4426
2EEDB54A04F8D32D5A7179D025981DB0F1AA37EB7E091123B1B0F2158A098CD4
C026A95D677617CAEE4CA4B282C8E5F07EFAF7EDF2347DFCB070CF8E3093B06D
0B80CED64C48B1C4A67EEEBDA6F360770054987AD65FA54A1BD686CCBBCDE0AB
54DA1A6F332BBBD2160632D7AC1BC024802CAF0F8F45B3B08141DD5CDEB790D7
6C36E9CBCA5A92CEDAA0ADDFF4C3ECD7CC083D70252227836371FF8383892218
464A65A723A9E71F504DA554ABC123CEA986257A3D250398884295A844665510
73EC328641DDE087C18DFCB9BC14AD7DE920E43B7F5C6138F92721683CED2F9F
6F02197C1FB4DE5FE37F455C7F9ADD42AD605C93E5EF297F06F294DC8FEAFCBE
4205051B5C05D1F4369579D347F2DC0992D78F7634C7FCA468FC63797A999F44
05E08A4737EF3B38F974D988A08BA1B327A822C7E4B034607AFF88F73C5C8DDE
321B1D1F2DEA4150C2CB1AC6472BE9767DEC54B5A04FD11C8191B6A043FB12A0
038E1479E82A4A8EEDED2E000BF865E47A0E0206E56D3FF6111A501180C56DF1
515BE3D4EADF34E1EF31347807DFAEB7D1FE2901AD5E7B28EA4390801BC8BB5B
FC6C2916C53610E6709B59AC41BD4E256100B0684EEAB78BC994D6BFFD0B156F
C492F6BD7B6E738D3B7625B5924F5370E9C13F0A66881FC91A4FF6F1AA2B10D7
316BAA58EA64499CEC98B4259A02B03655E8DFD91122C9A40E3253F2D48149DC
D7FDF13F5351E6C89F11CBBE7CD30CB62763F54165434312AA5498019581C318
CCFBF267D24F99D24AC9D5C68EF6AFA266D0935A3FEFC240F3BE68537E823DA6
7C5F9FDB1FB810916A7AE03229D09F038D0ED98EF867646E3844ED0AFCAF6216
75E6F07A3AC7E84A84BCB670611520F82B54B156921AA867EBBE76207E935CF4
233C2614BB02993C18F5228D9F52535EAFA504BFCC28470D638D007C0A84FB8D
0F4A7CDD3911F4AC44FA5358837F7CC6ED863F0FCCE5F7906198582E7C9F70C6
B28C80BE87F92E37C939AFF3EA59BECF2677B16B4C3933695839961674CE2B5A
EF26AFE67C947DFA46A65C5D87E83220EAB248FB3A28CB446A04F1EFEF90FB0B
EF17F7C10D58787200C749BA0DFA1F594247319F33E30EA714B955D213A1E7DF
E51ABED171CB2F182854E3EB26B3543338D1FD9221E56DF4B1C76506341F4636
5AC1B832D55382E1223B42A1C367FAAFB12FEFEB1A3BEE72F0D67A10232543AA
FA3E7AC77E51E1E4CAD49F636EF8C890D69230D0C80EF12569804A23475AE6F9
1190D208744A52E593570C6EC8E49BD41ED979314FC30B5AB14FBD8FCC694096
7105F65B3CB547A9EE3A5CC46313A1990925AB1BC12788A8F241FB27CDB2CBDD
8BCD2224040A5B8DA1C84ADE4FAC70CC7BA522481468B6D33598D53B510AAE69
1496E3E0597EEC7CD97A591315DD0DA2AEA435F0E0E0C8543CA1C1A0200DB08C
11A8BA8935013D166FAA43DFC98DEC9CF5422C7025D3118378B52368C1E7E18A
49F14C75907B6375CBE0F615465D9C01D265CE34E1F3D37687AA3B2A80FEE259
DC0D479FB403E6922EF30EEDB86012DBFFF13C7DAC43B5424C1DC050523972C4
6E136C83CD119EF1E740B263D9A7AC6E6CE394898642FFE0B0330D747E4E1975
8FF05160E3A43AE71C6F4765EDD46D064983ADC82A000C60ABA7757F32997F72
CA5DEBD9079DED243B54455EC23FEEBB6A8F07BE69BFA6F3BC3C57C6443B7F42
22F398452F3F0BCCFE370D46155FFB618EC8F65DD42FCCE518887F2E5AE2DB97
257E05B20D494FCA2862F6FDBABB8BF813CB9DB27CB44AA47AA0D4E648240A62
41334921069ED4EB4830E5E1BE4EE7195B46506868D72570ED2F6229EBB4FD0C
DA78C655E71003C12938AB26313CD68D78DB2A5DFBF469C3D02FFFD3B21DFE7C
BECBF0B26251A1FA52F08BAE1D64B9FC32A684AE896F3E8D01761415D2F53A86
6C95D4A6848E2BB7970D17667743AC1F3C41698192EDAEA808C1FCEEB0A101C5
2F7A0826A4CC5F97FCD349F8418B6A01E5791944B2968689F1876486AE482F58
808AA83A8A330F84DEF708A7F73C5C99F26EE805741910083A065233C00C079D
7FF5928CF431C741D0082658D35A251EA07539866A1DB7839361A530FABD15F1
9CBCE5F93259A6C4A8CAD50B9186BF14662C6723B07315772361AA6CB3E7841A
85F608A6760201CA1C02A87587DC7D4030E320C514539B504A31AF3D7FB5F26E
EBFE36A6E658BD6D9B72486CD5D51EDEB31493F7955CE75D020391179FD995E5
020FB2B56B488D0D63B55DEAB0437892D99644B225C09AC26F5C020F93C46E41
57BFA2C868D92130356B9FA409C1A69380DFEB22D9AFE34AA740AA75FB1104EA
9C873E04C6BECB53601D5BAAB4E845D42915884423B069A992340990A9CBAA8C
3BBDC521446F03991C4CB455A118F1A619D0F7B9C39239871F61F40EBB75EE30
24F37818C68FC464E55C2674D2950015F2EACCA793E7888C26EE723E78F3CA73
B23197426A1A86E9150D3A1EC4F892A2F092A3E45EAEA284B4B9AB0A69C94BB3
5D55EEFC72CB446B6A381990FA0C4929992114915DDF1AEB1154E4C21FCB1072
F0E5428088E006FF95E07F1CC14DC82CB3D7C5BAC359A69C9D73CCA15E5A7A95
BCA7166DFBB61BC0923B6B653891F3A532F194C524458044D3C80CB40D65BF91
9B7FAC21A70539035081D3C4E787A2615DDC9B82074D8BD9BEE38DF4CA0741BB
E9B037B6EA815C3D70DAC34AC084B1A3647497EC9C0DA348063390B5A9071362
9B06EE0911E09B45B643CF704F17BDC1FA8D6B8D4FA4A4E2AB542AEF2932D99E
C6250B2EE635842201231CA58B99CBD64C2EEB14CFF0AD50200A157151F7625E
63296E325E2C31ED7B58C32B7EC61E25A04D9693D78163BD216D3ECEB55CAD55
28AB3C9A630B8EA584A415A12FD2CDE2A2B3FBED0796B60AD8836B98F8CF2EF1
9ED497CD01C3AEEB148568141698336E57C3793940F17E797B2189AB6FA2EF63
682E95C0C01CBAA10C0032E8E7384836BDE8A66BD215DF1E3194BDA9CF6C6CAD
374FBD8DB58EF1E81CA38945FD1F5E6AFFAC00BD24FEFC0C19947A45ECC6B9F4
9C84990C47EEA6C17E4FDDF8AAE29EBAADEB9AF7DE859213C94D416B911DE781
563E26C08538E038DD8EF92435A3E80769453DD157B162EC914D673AA42D3DC0
0BB1E50D13210AAAE8AE94F744C02BF2E34544BBB19D1B5F80EA43A1D0B1F0BB
DE4C21E3DC108365BEE27362B2B95343B80AB2CE131DCE3F5B17D645EDBC0B37
3BF97CDA7DF89118CFA0BD6F3615B632568E0EA67288F7AF12B054547D4FF4DA
B7A5A32ADF28C1A2B31DC98AA67CA359A538888406776F93F69C855F726C1924
6C2049BF5338EA51E9DC175A2ADBF33C3567BCFB11F1D6D317D469F444DB2DCF
EB993284216044467B2DBFFC41964E125793B1C5F9D913E47C201A652E0439E4
E2B2DB67946562D76CE09122E726F3DCBB29F24D88E90FABA5076969F99A818E
E800C72037F7B8FD8B789AEFE644F929E005007E31A93DA3DA1E51A3282038BB
A7F7FC70987A57EC73E5A3138C164996CD000671173E48D4A90A7DB5437D587E
DB3A034F3C5214C42F7D6D45D590A5087DB46F37163C35A988AC5CAFA7A2B028
395D9345A98973E2BCC93E5C27D28320CC29F4A3B54C712E006E1D6BD9936689
99C3AF3DC4D0A03AC28F0AB4D8CB29CD233EDE83A6C320A330DE06E029042A6C
6A5258CA8ED3E730F889E0E6A6BF8667F161B999C85AAF3A2346EA93FE7B0441
4B71D626BBD160C7E1301C609871641736D8B9C714FA8870776EA0BBF5739A9E
747AD286D01FD254E83FBDE2731167C1115BEFEB419C638761CD0AA12DD90314
12AC87B96A71772520EFDBF7E27A57CE61292AAD6582B3A661F4D48AF91556DA
8BCBFCE2CF04E2DBA86343BADA5C89355A821835D6BF38ECCF14EE2FF0443BF7
7799E457D5902471367E4E937EA2BC85BFB6A704A0C274D99B8FCE9BF97A65D1
FA3B5FEAD9FB2A1398CD00188333431902E82B66A014B80DE390729F6D0835CF
B91437FDF5FA3F59048FD529968C625939A0A69BE82F083BE7E00E79197F001E
EAF4371D7732019B86C11D799B79F33BB09CB6771F6379095C6CB180390D43CF
505B0C6D1212CCC7F398B49BA62C1423F71101D2FBB9CAFCD196E7A653070E68
0B42E23156DA479E3876BC9388C67A6B10685E9921C790177DB2171141AFF247
D80A42CEB4EC7A6BDE7A10B32CE40AA1DBDB870B5708503CD57BC0A9DFC2DF57
9A8C1E5AB995B83ED8C757A5A7E53B3220627B59CCBB3FCA5940BF2B22FC0C76
82845F3E4266B7D327312EFB770916FBAE7833C9717D85D4C4E2E941026C2584
7C739B6EEAD71BD6B89E45EA683DF15336D07AC3B4F744E0A34913ED4BF6563E
BF6182F157474D9CEE1F0AE5F1308A23BAEB201DCA496EAB8EF09A09CC7FBBC0
008CF2A70C000FC01FA42E7B75B26324CFE84BB798632C9BCF9295F87BFEF31C
23EB0525A5EF81FAFD6999AFDE5158AEBF878BFD79F44815C3734157442A161B
D5A9818A95AFBD19A4965654D83CB926D41CCF5BB964801E50422D5352C9CF80
1001BF15341E42E6366E02817082BE6FE0B04249A4840C01D1B885F3D4D1A0DF
6DD22A6A57ED89C7614DF9530D928851F061DCC9970506D4A778672A022D1935
DC9687187B0D29D27C8018BECD829ACB6C3D9129E976A2427D63930ECE80B647
9023DA0394E3CCA13502D03B122C216F2DA5B543B9F395508FF98E3410ADA67D
0353AF45A35647323AEDE5F026FAAB6721853E0A4117D1B4B6FE6C2AB65F5ADF
A4D0C3C442D34EF5E344A819CFACC305F376D6B195236CB74BCF236F2124EB6D
5FBAD96B899AB4BA6AF1B84C8EB9A567928C0D8F063F0FD91867BD212DD2463B
C0C120073E96DD4AE86F022260FCFE119FD4654DC1F15E4EEC4E1C006ADFE2CC
3F56F94CA76DE5E1680D91F52AC0A18AE4968C03D738FCE77957D80C30A70125
E0050B2DAE7313C6BDAA9AEEACF6668F8E690261A5E37FDACB4234D903C5B597
37BBD6C22E537A1985F09FDEEC4392394C54CF1D179AC05D5E50D244BC4735C9
ED3F75A15EFC73D4FFDFE5332262C12D8255314897422139DD5CB6E3CB9E7718
DA62DA15BC418A65BDF2F0731F8018AA2980D7C6AEF534C4587595D6A94E70F6
DEA969386F22CA922919BB6357E64ABF5421FD338F17B562E955B4EB2D10BD1C
68CE8D7F8AEF58EC303E62B84EA810FCEBB293DAB8AEBB27F26A5A3389398CFA
E168DE655CCB85FB2D4F135EB7CC5F12ECA7099BAFC5493B94C8F4D2EECAB86E
0967CE7B6B5CCD4A00A4866D2F89FB374260E9C0D4934FE002852A4462771ECB
673D09949F54FEF7FD67F583D01DD94D3A6457369A57F0B9ECE37C79DEF7342F
85A989FECEAACFA19187A0ACAE8CFD363CE13CA8990DCBB1B3939DC3B2F7E23D
F36325C38CCA699BCEED8D80A113ED5BFFF4FBBB8CD834845AE5ACC498820189
7A62249039E8071E3C83667441D2CC9DA8A7E239B7882556FBB5ABD9500D776D
BF675838C2E27A9A1C75D9786FB52CD3698E8A7357B9C86BB64C2A8D1A532A1E
BD4C83EEFA49CDF12D16BCB3BE5B4EB51671AE9357176D5AC14503FF608B1612
C379841BC04CA5D5C9E7B9326E24A0D479280A646C81767F331D3D3EF5AD7939
E4E7541BBEB0187DF3D86BA9F1280CA84AA8CF15CC932934227CDBAD1FB87F98
21DF82B89E2DD0885CA956529EA49D7B91337BBB0B79F78802EDFFAEA1B27E2B
385B6431EDB69A6011710BD037ACD19E72E02132283C34E1C1C2771321F8DA5C
81A835A408F3A2ABE61D1117202663935BC91CA74CAFE491099EF8CEB0036F32
181F4A5475392B4B1F92B19316EE1E2FA54E38977031156C876E12918275E17D
9624ECAB878D4B45CC25E7E9A031B5E8EDD55D22DF7FEA283AFFEB7E81904730
359D72FB1F64E3B041A69B2445F9B3DDFD557E154C7D4931BAFE9A9136C3AAE0
71B0085B25A5FA67289DAAF80C0F5EA7D9E67929CF4142CD5617D0272067C545
347BF5F362D403F91BA1E5BF9897E1ACCD1763A04776F70BDD9C6C2B5597E7A5
D919BD56C0DBB1DDF2DC4B8D59F781ED48E700F5B35BA0CEC0EE55DEBEB72A57
757B2CBFC6F5D915C260859C43D16849F6DD9F8AFC0E3313DA7375B4F00FB401
D2AA2D4BB0E6A43C14CEE7DADF069B160E9D17FEB980F5F2FADE062DBD7F6019
CA67DE7AE30BE86371DC189E1F2891DC18525E44E5C82F572AE49002D43E0BFC
4D3E0EB2729F2C58C8222BF2DE2CCEE6BADA0AB587AD0479EBD6B094B14FBCDF
13EEEB978E51957475B5717AC1BB4AEDD87AD40DD79734D2133568D54E0077F0
F1379F08BA39BBC939845EB7AC8E052072B433E5041DF32C69E0D4F050660F51
6059AE086BBB9BDEA30FE67FB424B3373F37DC4B4FBB25AF2DDA6C1A4583A323
BB7EBBC181F5EBB825558AF48C16665C882CDB6A03A7921BB9F85B93AC64F9C8
2C45586C7DE1C4F6C1838BFDFEBA9DDBFCD9023C35EC78BC16D800B905D58856
A99BEAE260A8CF01A6F2D73F6A5AFD0E78EF9EBF1D30FEF287D7C7C71CDA0C3E
D6EB5A3351661B91CA52CB6583FA4C6F64BD28EC6F839F95D74E2C1997ECFA42
CAEE34B742B0526C1D6B872A1AD8F4364E16DB2444913BE1977A0496EECE4FF6
15602C603E1E11A7C615FE185C146C3B2548A3018AAC559F33FC9278A6761838
EBF0AB1F2B5C97A5E4D6127212AB225F2857D2F8FD11CB3AFF92A63E47A10A3A
6433BFC0E77047453DD5096D0BF513155727DD54F457E9C2D20417DA2D04D3BD
D4E4F48855D22FA2B5478D80212ED465CC51DD268B83E7F20C0C041A9C4723CC
C639801C5DED14E3DC9384F37BA8EA525D112695899A3FF40432A3A5C0373CD9
C1AA2A57A4B3B9531FE97A2F623C81E17B3CCEE92C80310F76CB845EB46BB628
BB6B37625FC01908C10242731B79A1A82CFCE9E04559BEF081A0222207E864C7
F39773638E3BD2FDDA146AB5C700F342975BDBA5D48902331A045A4349F7CC8A
10DD48A615AFAE3F3C1C0B6787C4A8EE624C540143A75BCAA3A1EEFB478579F9
F9259E4DDC2098FD5D96D21653C4CA3586D515B3B84D452B1B71CC988759AFEF
42B028227C6A09E9D28B9FC63F2975CD9BB71FA698571B157312A84868825206
11165AAF3711B005AD3DFBE56FD051119E976E2488EBD830CCB0A350C695E3AB
C1069A9B4E2FB52BDA0AA3ED16B4315244E3BB451A99B211EEAD88C40F1A5B6C
282CD2B7284B83AFD2E33DEA0218424D8E4FEB3706A4BC08DD6698AB78D7681F
ECCBB4BABA1916C378DF42CD3B502C8190F3B63A3AB09D8ABD41979569624B34
6BABC17BAFDC897254CB4960DC6D666CD1F23C21C72CE09AA133598A0A66EC02
085C18FFF27707F64446C86112A2D9E80690D779E5A9A4B01B3C370E48F209A0
981BEFA1A50D5EAB46B681FD383F35D1033E400B7EB60EC3855E96425AA5F10C
A1EF4608FE644DA9ECB9E12F71C6B0B117AA039E23F4CFC91B0A48553A7A28D2
3AD52CD8AEFDD97BD87B20D735CE102C0F60A9D44BFE67C449686F7A74D985BE
C536E96633BEA4CBC1B060F4B8E2D4C90730CFB259E348145C5C9A51773D0C75
B3EAE45B76EA2AE88735DBF65744CC3CEAC5D2D7334976E7085A6E52567706CB
28468A9A6AD9F9B873F1845718F8AD7E8FB65C4DEDEEA346D5B5D070CC2B452B
837DC5B352811DEF1B58D658AEF260EC161B2D9589EE8C8334F9EC7043074DD6
3DCACC9C7EF294F94136D1DED5727714112B6AD3AA17B1FD8F15F9063C39C854
0DB2BD058A86FF3C9223A872333FA09E9272AC6E10BD85898AE491E8435D522D
E65BA324640B70E9B902E9FB32F894C4CF49523A68313353CCEF779B6200A104
7B20647CBC2F422243E033DB616CEAC8A30C01B3F334563409EF49D7C191D3F0
2ACA152F1EE78072533F8900CC3A1869BE483057F7F9B7BECB0339036F3C3B3A
2FB108872E8860AB6F68448987EF2A58C54D8AB7580EE3ED58AEB83B72CB9021
1137508B398A3F149B2EBDCB7F957E10B5E4720060C4D8CE3E29699B9028C7BB
ED09471EBC899CB3139284A0DBA730D4EB72A67C5DB42A014CDBEDAD13C5F886
C6711E8E5E5753843A42942A17ADD7ED20E5A361F1507C302E1C9DD1EFDE5652
E31772561D5A448F9B520EA55BF10C4B16F59D45AFAF09AEAEC875307B48DA9E
58A0ADE3DE0F486F2DD64D12C7D9BB51DE06150C7C7A825D08B7CD7778378A13
AB1A56F8A2352A7754493B909CD10832A439A9BB2A12B3458D45683EA3D49DC8
80FAAAF8C235FAA2F31A755A0BE1E13961ACDE29489B5834F149E3543E427FFA
B5064F862222925BD2874AFC1E8D4A6C25A75B2A689A400C8422C933BF33A8DF
702D160C3450D2E74C7468F63AF0978DDF59311FBD5C2A43529A894801E6F0EA
4E1ECDE1EA43EEDB955513F42EDDCF39AE522A1DD0048A655C5D91AC7F8E69FF
E57EC149A6A210BFDE729204F5D076592306D8BC30833BD11CF1198C51BE09BF
5875CEEC99E2C27DE59DBA46E6CD46404FC143CB2F13ACBFEDD7382241D8087A
946368F8147A7C3F74FBCA0E29323B42A81058C34BC3F8E4098C22E5A0503975
13CD5719B9E35E4E061ED9980FD99D0EC0BCDB65EACFBAE82E026E6DA17D2763
E1E130164942DA5F704DE35D9836B6B8A57F831F6379060E3650CDB2C87FA552
F5999A10B53F9615ACDAAF2CF94A6DFE0713DB9B8CBDC0D146CC3FA95FF20132
9AC69D41775618AAD8209A2A32E8F4A157524436F43A7A7DCB3BCDE6CEE24D81
72145EF7B10880D6B0BD195F64242395E6C807B7D00E12CC9CA711931CBBB636
C43D2B50F1EFE12D2352A8DFDBEB066F94CD0E4BBBB54DC81750CACB6E1B551D
61357F8DDAFA288672A25FFE7179D2096AE48F387E2523C39EDAF5CD7F02584E
9085AF0FB4A3861C67A4552C610497D442E859EE95B04205C9F5DD453B1D3838
591BD4A0179BDDE652445E5BD3260A5EEC79FE5C0BF386C4D67F02904D0CA4BB
5B4DDBD1AA1493A3CB561652DBCBCF97785515A78B706239C7897B9EC592F01F
97697A17967D344A4BC9A5627D64621F2D21847A702489B28CF62768651196F7
57CF3235D9B1FA665FB17311658CE3D5CC057465AF931B3D84B0AC9272B3DEAC
A29ADB69140C90980A2147208D92096B79E2B078DDAA6B27C43396834E367513
00AB9F9A320B0046CF004AF4D76C8434E66ADB72B6710A1830B9447828C656F8
349C249464D3D477C052773C2829755341A053A0D20BE60F75AF092FD651C175
A7E8184B1F0ED5823DDC80D805CFE4868E62C90C06533AE6C9A73E8F16BED1BA
877673C46D2ED30023EB3C9C310FEDE003E0B51BD3C00F8CC890179E563FD9E7
9C9FBB0F67B045A8D85707060FC8DCCD236CB286C0A3E10D5CE9B0DB5077C096
AD4E14D9CBAADF8EF93A933795C0CBFB7204DC6B7BE979CC7BEAD7424BFB22B6
8105ABCCB722E7FD98777249FD4548676A284B2DCFC105C2F77A9391F465DF81
3CB29FC37F94E704C38F5A1309668F9A86ACFE5ABCF0E316D033B9F7DB254362
0119B4BDFF83AE9ABC39BCE28692AF321A2AF2256EA0E76FB4F2A4999B9DBAD3
AB499BC0E5FC85DD7583FE4BC0A3A3AA768064CEB1C4BFBA6CA65017ACA8237E
C3B3C1A498B33CA161CE7F81C9FA02AF376D9B6AD271E3588BB879A28BD180ED
39C25DECEB2C6403E4F6B9E66A1119B00E8898683F65D5F3EE378865E48B6E28
AA30051D36D4FCF0C83F65B0E6BF7A6233D953F9B685206A620FB974259B2461
E21F79FB16A3D17949243DA13567389FF89C66A36FE4E3F246220E9B077C1558
979B06B295E5AD9A9EEA2A94C6312F66BE4638040BC11296999DD8930D68FFB7
B80991E11E7020047992EBEB92E8FF93C7ED85F11A9B715FE290AD70BB21A3D1
4F6CDE398DC3BBD7FE5B14FE97049BC49669CAB69951F9826798D0F2743416D2
4DBFE29E99BCF4F385C8B2FFFA760808CC17FC74E322FAE131E124FA166725AF
E827FD00D4C03F8591A02C59FC1DD6BCC69AA16399D9D8E6F57DEADF5769ECBD
A2092B44AEDB7AB437B9A767A09E9CA9193C157D241F89043D48302A8470A69D
180F6C0B0E81FDC5A909D51923FD71243EC91387DDD9F829D242B1F73AB8DB82
9208F85278046FD36D9EFF1A8F1424670133A6614A5ECCEAE2025B292FBC7418
EF52B2F5D5C32609E70EBB14CBC6019D28087E8FCFE47C45FEFF156493973B39
29572FE82286CF70EC9952AFB8D042DD2299D9B16B85C8723B0192FFDE563F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFBB609F1F3488FCD40BC240C42122202A26AE30
EDCB46ED7952582054843C0C6E31BA266D82C8DADDFD318AA828428B17B91244
B5FFC30C105797DA893B5393E9EE1C319498E2B92C9CF390791BF3F6DCDA5231
16D64255F26B3D26D7F70072016879C1CA4E377D77797A32DB18676BA8294533
29D58214B161282982CE616442096DED79278023E56BEEA38DB7DF7AC21D9B88
457317ED0F6CF9FF5A2907997EB6A04DA6593C846B1FB75433B24AF1F6CE1270
429EA58791874E4246C0A7321AE831930F08F586A85120A40EF09A72B1959517
A0630A94699E2A1BD96AA1B5466D742363F38ADF7937A89EE47EAF9B93FAE85E
2F884193E1D5FDC28A8A7F6FA6EC89007816A208960055A88EB090534CD23A88
1E6D86F82C0A23BD0A770F19A5292DCD4C30E8928CDB1375A67FFC936BAD975A
9DCFB0A4BE6947FC780F2D4ABE4714DC4CA2CD2AF407F6AAD2DE8B745EA3CF04
14890044719DE09F3F8A3EFCF2FE109A30D87414ABA2676B03B3060A587D0E46
716D81039491DB446916FA5F10B5FF1AE7A311C6FA52E9323191F7B83CB246CD
2E4BD540172263C8D807EBDEFBB74E9894BF0EC793699F0E68263B1878CADE0E
E48913BB0C4CB09F2124ED1AD4B59F7915FA254CE192150A06A437F194A50EEB
0A766C689FFC8EDB02B3CDA24BE5B94F4D4C0FAB79CD0D3E7F890894C99AD3E6
B3AB0CEC0E6C4295F8FF87E07BAC02D3469A37176FFBCBE1C6CB58A383EAAEA0
F49A020318D51FD579661F3E2FAA54D811386573C91A067187E223CB9AD2C26C
FB2671B72D15270CD8CB1D59CA262E0355E991C525AE6E8CCDE226F4902BF46D
68C5D0FD284D7A14817DA0640D7DB680E79F9029FF9F79655353B69F7F9713F5
21697F75F4A0116546A9D962C22A4647AC1D5FB8AEBC6481A94C6ED5EAD25505
00011CC1B5A95933E7854EAD8F2C531DC518453ADF92C19BBBA6B2A5A6D96F9F
2221E85020131163F32645F282EB3A44D8C1AFEAB666552ACE170271D4F4AFF8
43079198D8F05901C897288256E71AD9A18A5544EC317B4247FC0D40A2C3CD57
E796482600AA5E73A63B568D1B97E405C045C305C9970551CE63E45D74F8B75C
95A3F96517CFF904BA2676748644105038841988E8C8182BA89C9BEFCD87DB55
AA5E0AD1D2C398A278059ECF219F339C39CF69081E1EB8FE48F3E078103BD876
70D225C2850EA487E561E61A161ED1D578B1F169DD8A03EFF3CE10683BEA98EB
2B7C1F4E93E0147DBA1946FF5CD5A93E1EF62EEA51B201D3B14BF477572A461E
B99B4C0C0FE29E6DD239D2F234D71DABD43C445ED57C494DD907E1E6DCAE729D
19A6F9ED2ED65CE7FFB7B8DC087429A3D69116B933F366F7930FEC7365662AB6
CFFF3022D1FFC91F6F2C6B28808CEB9BD6ED03B43FFE970ED2529C5E0870471B
65CEA8DB2308752A39C9AE5937EC7F21EFAFB2A43CE2B3928163793F568FD208
2183D51A95456A761655D006138CEA62A0ADA87D3D4B8954D01DDC88746908ED
B625B9FC645A71DEFD070173D7AF2FFFDF728B7EB14228DDDDCFF7E9BF9AF688
1F745EC71298D454AD31AB998F5821BBB633126AC26EA984A4660F22D3905959
11A900FED030F69500C16AEFE3A6FB08B00FEAF1D31D9470ACE414E44A1BB675
8AB06E34EF8E87528FE146C23041CE57C982B9EB2736D453D66E3EAD617C93F4
31708ECB7574708B95C16BC0ACB213112B9E6B2763E75FACD64EE28807FA1928
BBB2E6C2F219AAD63568B6B2F3D43724ECE4443993EE94A4B4016F462FEA63BD
490E187D5560A2C81AE79DF8CA515C323A63498CF6A5082FA79D34319957690C
F7CD568224E9F66B93EF3B53FBE4E1F32E3F90B51313D7430BE1825C90D88DF4
0E72A43941A65F73AED95051BD333C988C2585BBD10198214BA25C78CB3BED5E
7AD9383F8701213707958227A3F6E419742C9B7B387994DD94EBC3599E7195F5
FA120FDB681FF0181501606A23750D6CCF87F65670B25A5940553419BD119D07
F29C6889396A4489D046C320F4F438E85B8E1227FBD0ACFFB73441EE4F938CF7
199F8A8EC00C8BD6EB20AB66BC1FABC48E4ABE10D4257269E620CD953D5133D1
C98E13B084100B7D9AEBF3C073C8C79B30EA5D28A68CC2FA966F0EE721CBD633
D6D668F34764F90B5E8A643C8CA2B2F12BBDECD47B6150B5655CCF81257BB251
6467D0BC24C0033AEC86FB987B713930C957C632FC8F5816F21F6926B6C0914B
FCE14913B22B6848FEFA6107790BE7B3C7F55B3BE38988F36222BBAE11B6FBA2
9AE0A974673C2867BCC64F0A8FE98AD94A97AEDADF621368DD7980ED84CCACE0
3B34DF5EBB3885DD636E8617400D051B27DBC4514A567CDF9FF87DFBC5B77ED1
58C0EF082D34E9BAE83A478F2D9DB1F9B65E818E39285BCDB6D08747FBC52D61
F311C2EE3444CC6154FCFFAACE818BFCDDB16D6DA12F60EA605290CC0000476C
0235F3CD2DCA6DE4D9D40638251FE20A5C8EFD39DA710A4716E1706C9A97BED4
C33668C231EF31A4D5750105FEB6F0C8588A257B163EB95BFD4A92564CDFDF06
B73EED893D4804AEB03FEF3B12D9AE0D47CF5332716FA25C28A2B94219A75D70
CC55783504075A5F0BFED5601BB3973AE413955F0DD137D42B65BD9AD563ADC7
E1A2C37A3113C6F89B4DBC3027B3CAF2C6EF0A5000F53914F0800E33B06E3DF0
CA28D9626A7DEEE92DF84CF59672E3A0080CF4DFCACEE5513EAF3E903BAB3879
0E8721E8C3C52DE79214EEEDB424D767D0C64F1EBEC99C7740FED61F219538D8
185042F86BB762F723CDA26989C4C67DAF6DD7825A6CBD56048BE3943949B1CC
8EADA4325C44AC6F52BDDE513987D5ED51662BDADADD45882CBC0F420209A2ED
5CD01ACC7E1D0401A7FCD4DD0A6F4621F4C29048731516E16076F3482F71DC66
93DA281940D45D3F9B39005FE49A79CE949CEDB65B196F50EDE5D2768687CC47
1A1EC7186D318D849C05BB8BCD0EC8659948F84008F4624A4F41B8DDA112B42F
04B0675063A2B3BD3FA2B3E0E04ED9832582F5515AF7EFECB22525A6012729A4
006203BC8A46C7A6A60DA0F66A1A066E0025917D1BDB7E9E37AD935833B94133
FD59DA8617DC87B4B835C7DE472E783CF2984139C440B18BAAD8E361ECEA4E7D
DD253666AA024FFA986DDF098E47454A062B5BB10DAE3331C3E3C1B56AB32843
5C9964D369F0A58D8467322EB65A2F8BC6050605CB87F380D794E6A311C6FA52
E9323191F7B83CB246CD2E4BD54017226B643EBB1C0E4AA0EA12349BEC2C0217
289E81B36EEF2749586297064AA5C2EADC5E6EF258AB1B3B5FDEC3BF37DCEBFE
48DCB5DC6BAA38B43805207BE1887DC76027C69300A7BCA663C4328967C977B4
30B63CE6CDFE50A654778BF2A360A33A473E6D63D300577B2C99A5F45D0B5591
2308234FC559DD1F7D85A7CD3BB80421FA781D930DA82F41FA8B6DF5F95734D8
735E4A1934500BD01EDCE981A8CBB0DCE6D06FCC2E3AD7BB240DE7DFBD1F17FF
DDEC2782BEC3FA70A36E6F2E812C23119D75A47EBCE147EA06772992CC438932
91BDCEA2DBB162B85E7721E93CFCA0D4B69BDA5F6825733B48FADB06F9C8BEB8
E158529741F24A479F827532A008C4373425A53658E3D5CA68AAE9B5ED66F92F
3918E329298D9F6293E8614966D0ADE9CB5DA1D8CFD55EB82E0C85A089269EDD
6833F4E48E3B9BCF78C8BF7556BF51AAB5AD4B903096F164D60CA0CE7BDEB2E8
0D58B526E647AB7936C6997E133DC99D407B0D2E407E03DD4B3C95AC14504665
A6A8D05345803B3A0055EBA91893597A866F289B75B6C623DDC0E21F8746CBAD
EE0BAA08C4A5A3C3F3998CD3328F0DC964B2466AB73BF735DE357816B8A49779
7F6672F4FB24AEFF9D9806E15D1DFB6E3E5386A1D75068986D021414BCA5F1E5
BABDC5FCEE3EB40454892CE429C3ECA8635B7A0132C1054A7EE25762D02DFA00
29231EE1E3133136F8BEEB1C994238F3B603EA8489EF99E770EED78A968F1DC4
B1BDB357EBAB1A189F424831F6578541FB21A36E4C6CB52FD09F038D0ED98EF8
67646E3844ED0AFCAF62167196EEAAAFC3D114E7F327220DC330236F7133F753
DEF24A153EE4742916BEAE0D21F24A3E4D146DEBD198727C6E5A340FEE679C25
24FA0A0192DBC4C4BF0DFE03973FF4765BAD2311EB21056C4F23EE42FCF25B6F
007D2D8BF0871F390A0F59258E4C768AC0134A614BFB94C297F9E1876E1B2073
481EAB5035A77F9B6CC859CEA88CCE5E830DD429C6AEFCBFE9447A13D00FA3D6
E666B4AE09D366C03E8B807AB38A8553E4B5345123312D43AD2E83693825C679
F654F27464C3E04E4B15FA6FE9D0EF916A19C85B1E1B78FB92A8A32F408CD920
8A66A14DD2BDC5FB5E00308AE28AFCCCDE87BF0D9DED320981295BECA7E855C9
D5FE5DF0E2B12476968B3C810EF05B694C7382F8731D9AA669A78FDC06810D5E
546CD334D3DA9FE95DA028C1DC1FD13D5DE9B840FDD96372799EBF4C9FC600AC
EAEFC2E3B80761EF5695001EC347713986999A6BF44052A99A861E14FB8153C7
49EF0DE6EC83878CE9C3969A9F8AA643AA958B11ED879178611E0E2FAAFDF0A1
3E39C647B1160919C81067D75442072E34982759C289C8FAD39D896A60017B4E
5A7B06FF4D1360CDDCEDD19C2E11233BB52698068476B55C10426C6B620BF189
0A7406C5CF22F440BB8106043B89324AFE19A881799DEA617DF96B4DF17127D5
844580135B616405F42758BDD2C8CC2A8C9771234506BEF22737891913D14DB3
66F3BECEB3445CB1603011ECA7833E0E3E9578846685909845C2A0B991A76635
3911FD032BE7E564473F851F794504BF7C70E330B61842EF56F134AB25DCAD2B
D08AE61E233FE6F94A87F4647D674AEEC41A3E496FDEC2C0A1F90C1F4FF44D15
BF4FE23DFDA51D40DD9BF5DDD3CB175F3E1E61294DD9601006F8ECC930DEECC7
2781066085C13AF52E30A9669B2414EED3E50445B7E8B881265EF41110CB02E0
2E83E737091B05A3BAA49FCAE6E32DC9D1AED22C2EAE8DD4267FE9EB63076703
B29D8D4DBEBE215533641C03B7BE8C7B7156D2E5D82C74EFC80E31B39CE0EAE6
322687A068BF76B742AFC3A23E150839A9654E8B6B79FB427D7FDE4323899C63
7CC86D15F14C4B08FC9AAF420CCBDF9A9636BA68231730C7F28137AC3A0D90E7
81E785AA189CE07DFCAE1DA5FBE871D8035F777CF210384EFC6165DE94D6FC7B
8B746C4B214A485F9CE57642F42A0329F3AE9A259683BA62A5132CF549382EFA
09C29290665D41004EAAD1B895B159E2C905459D2697B2819F3B1BE771D8DE36
946FBFC4D184CB3471F958F98B5D41193311255A11B8FDD312B5CBFC4A916A6C
DB708E37926B072877F5BD15A44362A10F1795E0780C412A606D33C0739B890D
9B3EE1860D5F11A241C4889FC8C0F634CABABB7B430C4AD6E491C01211B9BBC1
212013A533B501A088CBF25D6CB180390D43CF505B0C6D1212CCC7F398B49BA1
34AC18C9B29574AA4FC9027AB682AF79E8EAC789CC0B080CBE539F7AEAFF7D7F
64A454ABED6233E9787D1CB2FE03262725A0904BCB5EA7C17A39552A1F26283F
54A8A2F029D04511C79165B5315320DC3DA94674E8E633B1951B51BAEEFEE731
49E7BD8C20B7796749FD662131D12A881DBC60E48CCFD9E1AC3BDDF3FB69A81F
2D36111B4186BED6A5EF82D27AC66A2F6F91819A23E4A229EC84ADEEB4A2FF37
B92CE6C953A91853B38E12AADEF8F3E4852D894A15F60EA95A74CA355A6197A5
A51C16D88F95054DC7B965D9AE82D16F0DDFA0306B260C5CD4D9A58341D9D58A
4E7668ED6054923188627F7C9D623037D39D267934B346BF63C8CFC8E9F73320
4FA4F2D087E6F867ACAB282F0E245291E60AA9A4EE1AE4B05DE49C03FB720C95
8EBF55EC09503BF1AFD89227A574BD8D6F6283BF75EE351715605A9EE21CF836
572E2BFFDD9A56E20DB4D6367956ACA1339E777504775773E5546629028DCA31
55ACE0D8E354195A2563759DFE0183C8D67B449516EEB4EB90FB0BEF17F7C10D
58787200C749BA0DFA1F5945DB13A9A6181DE0670915C269B4E77CB4ED988F59
3D535D4100055D90094EB79BF159A65B012A2EACFC2FD63A2047C40D188F4E30
4C4610FA7CCCF0512FDD24CB36B402293FB92453683899ECE7EC3DDFF5B0B8CC
BF3D9CFF45C6FE8E3C283C02A4655C579BF21B53D1FD37996C6B4F46DA2E708A
CC998C1BB5EDE3A45AB78996EB94C76AC6F4A0044C3BCE04556B6A6F524CDA3E
22965E2FA5AB9D9F9964844483F0E0C6017580365599DD3021C36FDEB1A39972
2233B220056CFAACA8C087B4C0BCC2AAE1F10C0147775505F87BDCC02101AFF3
8BA1917A296C2BA33BCB5CDFE91A4647903661FDCE35099B7A551426924C0227
80794EA774CAD2ECA4581BD58ADB6AB154DAE79625D062852F9EF2C32B53258B
6BF4A4A856647C3240A3B33DA15021AF9FB97DE82874FE58772E82FEE206948B
858C72DEC59D297CC24DB89EC76930D071A679EDCE79065760658DF839B7D55F
3F5B546FBE66063A676691C47B0155CF1C7B04436F5076398F44159AA77D2794
F0C75D9AE60CDF648F9677A2701944FEE0E51FD5BEB501509898B8C4530A1BE5
182B4F95B4988A9F5E686E35792989DFCBF68761F29435C7425B34649283416D
371874998B99CD18F7391102102F0AFA75DD8A68E88EE24ED429A81C686EA73C
A41B1667D83AD9378CA55306C8D08B09476F199FD07FA0EAA53F7F06622E1758
A5B6C86E44D4529018CCE8DAEC14FC13ECF3F5FF91497ED226325921CA194AB6
40AE74B8D924E48E8EEA7BAB1F7EF9D23EC42A02DFBD253E4F8EBA8FA68830E6
BD9979FD51C8355F6261BE5A9574D5351815A959020591659CF35B170D16656B
8D61E25B73FD1A9E54BADE8F858094DF755F2C35F72055766F3C65AFCA94D0E8
4C7FC39E73EAE0E4C162E24D15C0BBFED0EAFDFAE2C502881246F7254CB4F3A0
D2812548510A255027D81C4C17B989618FAD618572989299B985A5FCC35A8891
C300CCF87A6C602AE0AA7A28AE4E577EE64AA9725A015C1E0CA2644D426C007E
5682808AEE3BB7AB14D465CB0E4F622144E415EA54E08AF6BB995CB64D19B2D5
0C3CDB4E43E6D9185F37A0B20E81810874ADBE880B8E044E4662EF0AF221544D
E5DDC61DFF9129D43D1A3EB7D6F68685D43D11A7B6645971E03E3887A7D1E170
C47AE4059FE85CABBB066949A02C4E306E30A43C5D42182A2087CC39A4D9B855
AA0BC6B2582F1D082049D5A06F34DE2335626096EA26D57B94A928E6FD16F11F
AFD503506D77732DAED9B41D4795B74CF2912DCA278A3549585E94245D9E7E63
EB45F0D1798271EFFC92608B289F60FFF8C732825DA065D7C95992607C9FEDFF
E81393DA14560C1643CDFA74C575BAA216CEE3C693C36E0BF4740CFD75F6A53A
A50D881746BE617201E30280B1A73996DAEF61BAB889712EB1595CA37FF93289
176FD0505F551F95DDE3615B9F1E6134534A315CF6317CF3B593A0787ACF5331
99348D11730EFF7C25DD5ACE31A3B08B3C2A698E4F95DAE539B5E403A0771421
FBBCAB41D5765620314119629F3C11947884D1E3DD1A89769F0E8DC56C55084E
E590D2BD58FD9784BCDCC3D498B5E8AF0776A74A77D10C6C1DFC91DE62C1AE05
CF60692C84EBEA3D477C0433ADAD9AA04C4B6A9E56344507DFC3F6671D8C2968
A3E83FC00043F27F1E73B67016A5054B244923BE99C97D290292DA35B180B5A4
F17FEAB6088FDE32A79937141E27811C6B33694B3F988AB0C9ED06E7DA31CBFF
72C7EB5AEBA5C7A3D9BDDCD1ABD7F3AE4C917959CBDD30F5BAB2D6F3B11B98A4
3210DDE46536EAEAFBB904C0608395A9C2BA9A03945E029527E917F17E502D5C
DBBFAC0581982D7EF27B675C6B14C5440F3DD5A1846D9AC309B9E8CB4472C20F
42917BA4B020DB0FBFDF87F6013B8ABE63165ABA15545146ED2FCB21B0345A1F
37CBF48F1EA6472B994806D02F28988112405F80F2B8B218A6C042AC6847F2B3
291D30D4EEB934A0173199B032DE4998B1B1164EB30AE3737AC094373F1D2168
8137CE3BFD9E69AC60D04886D1063742D723EB1C06B948EE803031FC6D236BA4
7C5C52A83C1AAAD52E4279CEDF3E4E13CB4A80E94B9F75FA7DF1AAD0F96B2F12
90E8451EBBAF666407756E9A8493C6DC65A7C3623AF7619795608C99E157FD3F
3192252514A465CA900C0A13EE814AF701BED939E2F054666E71E5317A6E3CF5
32C4004E60ACD7801648A2ACA6D4B8ABDA4D671F194C4A1DC79F2A5097712F35
79E050C9FEA8E1EF4F3252FD330D163CF0F40F2C296FBCB5FEEBABCD6C455A13
9D565F8CE5847F75CEF39020F0544340C3B4C147A3CA6B939B4B19E81AB17115
0A54FC62A55E990D90A5323BDAD832FB96BA7D3E5216C97F987165F27BBE55B9
94DB8757D1D7CDFD1D6BEFB5B196144E026FD76EF7A00B67874F049F2F3421FF
99BCAC2D5403D67B0DD5ADFC6174D55950D5DD9CFF210FBAE9671FF1389BAC04
F9EFA749674B60EB78BCD800EEF2627BAFE016A3D11FC76133074FFC8DF83B63
7F19FFB7511DE223A0A261324189EDB38D8FC61548A348C48D19182D79249080
AD244A961CCBDA9D8C7BF9C10EDE96B37089A1D702D5541B68C59A146581038A
665FFFB23654B08776938DFC3DCEEFBBAC6F7D2D1827B51CE018B956D4E09453
1061EA1994E911990A806C18BB6301ABB5AC71737C1B1B488C4B435841F632DA
A003E32448E22A58D3AA008B2D94985A319C61569DE6CDA778C4875E249580B7
71CDADB22DBBC1715016AE0F5BEB91297C8AC75E14B1FF34449F491D791F5D84
82FE72E535607DB32A001779973DEAB1CFF05FE0BED47D9A03D1FF6E8BE11546
D448B07D0D6408A3845FF656EE2A342FC78678B5FB7A9D371CAAB9A8A382A36E
AB6BA6F31F90A040F61BAF86BE97F8DAA8326EB1A2B45114257346F3FD327A31
6832E83149C3860AB557A620C0DC3DD834670E7C5D5B06BEDA9990729C75B5BA
3DFD65E2AE82374623503EC814F522E81BDAF02C8A76BD7CAD08F5F0B25E6143
D9E5045ED8B257409615C0E2C1B198297907DC83E8BC5E61484084013A70742F
D2F0515A62DB27B763D5B800687ADDBEBECDCE5D5144613798CBF687F79CB05B
86F15244E8940C2F9BE4BDDA2E4322C05285122D454183B3956BDBDE2B4241C6
13FD0F345B3C97E4414D9ED7BE2DB024F9A283E12327A26FFA9F875020231A7B
74CB029A6DB10FCE7B59925A3F5FB7DB35B3D7944F84B09A6202ACFBA635A73E
C67F26C4A36894C4120C6A9DBE62DEF89CE32FC2649522985C27941C58E4F50B
9734C2853A204FC7DE2392905875FC28D07872F48FED6FF66D66D0F431698357
8CC350251B4474B677CEB6C24FF7198731A458EFDACBAA48397E97284B8A8C84
9D61C1D0092566D3586E219C55EC4EA46E42986A204F0B48F50677E93990B2B4
866841DF01AAB608D7C0D6BB31A72A30882FF937AE52A6F8BC86AA385DBBAA35
E3BCAEF7664A99140BED98C953283F17A3CBD6BA59A1AC2BACF1501F7412A19A
316267E1B0C1452F196D8B206ED266C2A2BA33A065390AAFDBA137D3B30AE2D4
28B279337804138CE14024E035D4468AE5C73036F3704B16222179BC1304F841
4A3BF0C1B89EBBF3860AF123D485799661E8A2E0A220C76AD0424D6077D5C415
AEFEE988A756A598AB105235937A0B37B5F1BC381AE35499EA5A9CBA58CCAA9E
571711DB3D81E0400F776034AA7370C867BDF8F8CA36B0BD511B8CAE488343C9
23BBD13695840A4B5614203CB99FD42494D5D2B9C1ED812F3CCEEC1BC079E837
DDBEDA433C7BD17409AE30516954BD07A1E1C05AB80F32F3D4A9CA4FE72E6873
7227BA7835F092FA58B287778CA6D73327B115570BCDABD9B32626E7112CADA7
4CFF4BD78E3E3CF4F615C6AB21674E82E6B41AAB4840DB642D4017DD4E4309B1
58CCD2D78FC19E934E59812F6CD9F83F21CFE1217CF272748BB9CD77D69F325A
11DF1406AF1D0AE60BC2939C038A308187A739611413A13E707E88CBC5B2CBBB
2642E6E29259311C523DB8502A8FB3642FC273354710741654704A4035AA2198
48E34D0C2E929AEF3C8034A681E5C185DB2E60922C44730E278828CBF869D7E5
E8AC6296D5821F1DFC9C1CC98C5EE93D23665172A82B6CDBA3264DA68BC3F919
542B41DDAB32242279D33570B8524ABBE98AAAEDFABA00F7321DE47E229F38C9
420958399CB35137F6825D35714AC256401430119AC825F0D5049DFA74A19F38
BB8CD083BBBAC38A2A054B57FED270E9686C074CDB097FE397A371890B36BD31
0D1A184C084913958D22575E85F8EC15AA361965E1876B223B74553E18AE14EF
37FC9FBF8425970F7C91F092B209AE35C91CA49AE879DDEB6990FAD539087BF7
8F14B0E819D643B659F742EAF18494A0F737B0BB982F75ACF33109F8AE7ADE49
54D0B1E18027FE24599819EDBDA44E136B801A216AAE5168BF1DDF768EEC0785
29DE942340A40AB1CBBCCDACF00460272316752F293EF880D1B9147A7CAA0B6C
48D3ABD53A405015BA2D21D6D4F5B3A38174526C402B3F08CEE5A7E239459325
E63F810E6A3000E8960E71B73E9003276E22FA42858F04609B43776382C43893
62AEA7FE4E03637B459B49F9C49BE014D25D83EB3302EF6DC77C07A991FEF25B
E8A71268AFC408D019ADF2A20C75052F46FDB53266BDBEC6463F5E79ED0B4849
C417D86F25FE60AE5F5F4F38E77AC639481AD72268CE454554DBB8E693716D9F
FD90CFA449D0A85D7764EBB31166A29307F6343DCA5AE986B6E4DADE4FBF97E6
8F1E8880FE3F7F28E2F992F038335C6743BD062FBA5D740144BB67E26C165FC6
11ED44F307EF7EE665F4E74227B5A328BE08D81F6EB1A4EF48491EAAEFF7022D
08BA44B97EBA36863832373E5D5C3D5348A453A2099524F362A188688DEF40BB
855F6102028B01C14A4039EC9E30ED3D823570774FE82475745461CCA41B3D6A
9BEC2D99F63085D96828F42155F6C8C1C8571FF40A71EA8AF73445F2B3D1AFC4
7AB85E70E7A91F276B748A986B66DDC9D43486DF7BBC05B79A1E96F4F6F603EE
1C4352941A09AB5A195A605234B9D3F08D50F8EF37B9E6EC288621C12EFFE5CE
74ABA28C8C578549FF73FA996CAA1CE453A7A68EF1A3EB2178BBF9B9BEA9DEC4
989E4B43A4D5ADA81C5EC47F92F95E3333FA6D0552275B2528A52F9B53B3FA27
F000DD189ECC42864A1D5AA30AE408FEAEA896271A3B6DB3E7D2AE858A1B9980
3750AEFCA7D82422BEAA8E76475F7F5E1A736660D9AB5E2BE2DA7322B6D8D15E
BFFC5673FBD1F0E09303F8F6B6663836084E34C492105344559784EDCABE5630
5EF1BEE3279DCF278E0A59282E4D69A45273B491FD52EFC98B70B110568DB64A
9868E32D1914694E5FE0559BB3918BC75A7DC296EE579D2F20575F4CA3B9DA9E
2DC2EFF49CBF8E8B6BEBFF9F373158A4BCCFB82623C273B594B2F88BFA41CC81
B3445B02E27AC2A2FE3A14C5CA57DB545BA10EE8C541568232CEF707373F07E7
53AE55712F2E5C5FE3B0785835070A9D8B87FD17440C828B6DDBFD43EE0A6AEE
02E325643F78D02419611D50402BDEB3A16A92F171A6EDBB5401458A9F79AC19
1B8E09FC386D4FCE4089A85A5F80B2FEA256EF66888CC3CA21D9B855B9419307
F952946B3FFAEBF3970D6180CE16EBE8021E7A49B60DEFA775B3F2E95B8DF740
08A1AD51BB1FDFBA5A3E652E67ACCBCB92E92D2819A41102348CF94F09458693
64D5401AE5728DAF271377FA7A0B3BE567F630F989B8F247CC59D44836995489
92C6522649274648B6D218EE5A93668CFB6FA8D8AF2C8CD5272AAF5C45A92419
9B057DA840220CA7DA81F744079461180436BC926F08D69F8EC39705BA781E75
C506DFE0FA630FE721725D8F5B0A803809CC3A858CE09E4587B808417B54E603
A6E083BDDB9F24F2EC03A564E57F914969A1F2D001A5D7C9A8DD908E9C085A4B
7704DF0394656DF75B0DAFAB5A00545DAA9E52F69A142958C6A919FEA02F5D20
D2605E4AE05405BC6BB9ADF3DFEB71B17AB6126C06A3713F75408E2913883224
112FB1E3B5437964E2431F7B614CD62017182ABDF7DEB006DE3E4BD74C1CA889
1A8E08C09A601506D570A667A9C33829A718741D4BF672675FAE08341A74EBE7
14A5FF5053D505D1698DB2175A63130FCDF172B8113156A83F20BDB5286981B1
7F8932DC580D22FC84A868705C751EFF3967B5A741B252F764BFBC18C29E0A11
945212D51B828D9A9D731D50FAE5F322EADE40E7595551D0A24165B455438EC7
40DD5C8BFE5E63D6AD78F695DC2D5E2AB22B69289D1D80F71A7138C28292B968
4AF30E7624CBA9E1CBEA85B21AB5007580E98588C24B5910F262EEC668CE7A4C
9CDC63226D68B6DF0E4167A1A8C656DAA4393F046ABD2F6E793C31EBF5C89965
E329D5452E0E6123B6EE0EE9D75EA112DA1C60FD628B806D89E7739681A0E523
C17A201E21DB85365DD8B855E4BDA6A34B1DB6EFCE330265D8E7EB5B27A24256
A5F3210287BE39079193FFF566E7A6ADF80D431A13D1F870E79B3C0A8802333F
3068FA9D4ADB75BEA4DF343AD30344E6B4C7F8380D8E865940A127F49BD2B5AC
CF7ED80CEF4FE96FEA47C922762CACDEE383614D564D3EB1A4DD9D4C46B9DBCF
6ECBD52B4A8B1AA257C2DEB9689E200925D85FA2343F63D9634CB79569567874
31C5F75462EEDBC507DD0FF7D1CA7017D28C94EABA89EDA72DB06294512B2045
D6C7DB3BED3CB67F34B3BC115C632BE86B5E99F792A4C0952859615DD74CF3E5
DAA82DA417E864D58667CF9C38FB78FED6E3D0DC8157A389BBB3C8C2D91E42A8
F3E97D7BE4D37CC8572030668FC456B3334F76E5910578DCD4AED56270D12176
1ABABD7B6678871BABF0D67EB829004D8023CEF049A97F439393AC4BA9F2B4B8
E959E8877C91BA35765A6E35825C99CB7AFE5A873340B50AEE34371DF09D2A7F
5A8E1ECA63FC9A5ED285837271FAF6CC611AB5673B0BE5018CEEA86FBE5B2B3E
46711774FEC1F776116891269F30FED66BD929918A29501B77161586A6D16E33
F37B225D1A63E440A719CD8CC6D148F1442F1383B23B9179E939E8E50F7BE411
8ECC2CC40F691AE974883F438C74F8C0EE459510B9C7E3AB3E45300D17BDE9A4
E1CA55D9FF7B893CC31F7949ADAFA7FD22C8F9537DE1EA4C3587132E7BF19590
5404945D7ED18ADD64A0A7AF4D73FEB6FBCFE8F5D07B521EB0F086704D2F7493
80E86305422CCAEB6E1AA789B6A3AD509757677D93ADE140C6E68E7DF09B1882
9BE2523F89F383D270C1312811B02BB3C1C003F982B905BD7D67725C83EF7119
C2C4ABAA6F562C2612D122158C723C69AC7843C0DBEA2D226A914CE668706DBA
BDC86EE288A39DB1879EE205A354FFDCD734B2464C87E51DC00983F964BE9851
244F76C015801F45C409A009674D3973F49E02479CFCBCC6F3F44483ECFCCFFD
383A1FF88A692FD037572E4BD892DA454AD6442EB184846B76AB69AC3CF11F51
3BEF0C35FD178086DAB6BFD96112F27F9B4CDC7DC12D52AE6A36620F4FE7124C
3285DE1416B017D4551590395D66CB4F4334D8B2A2206F8B9161510B36B230EF
3E93590FA686661BC23C95FB6D456DAFB6C4040E640837330E3AAD079A9D626F
93210387B025179C6C7BCBBB8D9714249A9A7C328D7AB5C3BBC9451EDA76E0F0
6E75724F3301194447ED73AA7BBD165DB9A392D09E79AF518630C4F063E876A3
5D6479C0768143FC961DF131B7BA764E5CC20F3FF194C0C83404B3C4E44D55AA
B8FA8635C06B486739CE5265CE43C2C61514A006458A52B68E702ED7D3CFD31F
6D7E24EDA6859E11A2D878FB2541B561AEC1AFB3BD19017BF75D41D048A6A207
5F675536A3F0AAD19C2EBD390AF25F8B3BECCDDBFCD51A4E1260CFFE758ECD59
EAE9ED878D01D1CBEEFD359AEE06232DA7EBC45D51B25D1A18AFED9160A2CF3D
EDEE81F75D8B5CEB205425442B328703A8A6DEAD17EA73EE0AAD14A6148B1407
49BCF7BAE63A8A6FF00553405970223332F61BF1660842463FD6E80288BDBAE3
3FE6AA6B6E33A3AA245AC6A5AD3EFB0E11E043CDCC3860EF18E5C7FE2EFE91C4
2900EBFFFFBB7464003BCDD077468E9ACF9133FCA7A218E5AE91FA70075A9229
FD1B63D184C4139B0111BF88E55C4E52F038F5EB123E94966EE6CA0251C4D90C
0B022CCF3A2E4C3054A2471527861A00B9B346B62199A1AAA40D8B35AC2F519F
A7ABF1395CC1A4FC913C9166EE6B800104F28BEE3DF01BA22B9D14DCD688554E
FA8D7F2FC0737E4E6A6C452DDD51CF75FAF3E894652422B11A329BF92DF3AFB2
D3F8F642B2E2F6BA80448EB6D0B6A8684436C85634AEBDBA68ADB8CE566DC51D
99516B2F8353F69FFFB5D736F85D789D3C48001949483D3BE38D9FB4F96C2C54
591C85D37B42914C2492EC2C5AF7D2458ED57817947BB237807480A5BD5AE1C3
F70C7D6D2D4D97AF75553E5C2D06D80F724A120A3D25AAFBDD441F7139AEBC59
5F5E82AA5C04912EDF6318A4CDD72A7E46709074225CDA47DD79881E0A4B1DEE
C2E4B63C78F552D411F7CA7D7E9B6D734A5F5933C214683876EE0F8E07FB898E
46B33A5B0338A896F9B3C2CC0C0D800126FC145DF78DF99D9FDD85AEFAAE39BA
89B22460250F2E2080660A26B4A346117DE5CEE30B3557853496FEA6D64E1FC5
82E77F6E21A71D0C319A466F6C71FBD661C1D2677F77D4430A609D337439B474
B241C9DE1821F9C86582DEA06C1F4F215FB3C3923AEA99C29E5E11EB0574543D
4AA0D04B945257A16BA754214E90FE245C3478C47BF8F0EDFC4ABF84F6030D88
7AC6A64C838C20C3B24A9AED4951270EAD8B3FB7FFFAD84AB0CA48925D0B1353
7A1FF73F6FE73832342917B787EAB33904183FAF353AEF3EB31FDB3426D23D1D
73D277C764E69B1C66B68CCC383E5403F0A734ECAD86937D32FACAB097829E11
EF154A08C869BA1CD17D9F4DD939425066EDC67B9181F685FFAC786ABEAB8094
27D3C924672E418645C7533F09A4B36CA6CB9A4F911431C1BDD2C8142EADF703
C80E19A4165AC73F32D0ED08C8FD0D0407325DFA75D6048EA67AB4E1DD05CDD4
2DA117D5956FFE7111F4075CD630EBD5471DE274B7485EBFD009F8EB5CC90E32
FA749544BB71AD967C4B8437470E4D020FC6E8677254359714D9E0E6E79F86DF
BA81F68F8C745EE041F16B14D600DE58740986A9667EFE80A71D28F3A9017780
009DC73FB5F744202CA584A293F65B0EB3258C71CBFE3F8D19F7F16FFC043540
E044AF9386759E047307A965F5EAAF12F4288E56438EE91BC7297A8469F56793
8D3225301EA9A644AA997A5E2ADCD2FE2B1F57B25137A40933480A1B8C12595E
35671969AD36B4080B89569800C1EE55A7B9E55282BB6318921169C7F112991F
DA63181543D1917E27B39B70964B3A8AB43F21B10BA574F4485259686453F597
84794A0288065E86D7F5A832B11D5CDF6CAEC3BAF6413BA4DEB76CE1B7C8CFD8
66C961BF468F25AC65C0EF0221B8690A03412DBCBC3FEEAE3DC364060DB5918F
36B337C6925E0CB5BD963CB791E28CB54B37655A70D12CDA32888E0742B96044
2432CE407A290008A597A001FE1D485308E0C75646145FA22FB2C8F17F0895E6
8A028901B9B0A0DF61A899BABDCFBC4030DEB1309E92522DBF2F7D2702DB352D
0874442B2074859EB49313B8EB54E70867A9C17AB3E3DCACFF68183009E93835
4A0812E6542E5BB4D820B1DB4E2202A85718270018A852D28A7B540E9DDD953D
FD01CAEBA561F028611754F949BEE9A25912493829A9EF5B253DDAEBC5CE6923
ADB7239606EB72C5F9B449BC0EFA035D1CD4E87E431A65E478F28DEC58E3E873
08560F434CC099010C42300837F93F3C9A107BA8414DB43400EB1B5D13A28202
FDDC54827C9D5C234C5747F1FC0A88D9E1C5058E00713382AA80998F0605F449
B477BE528C3667F06EC5479B0824B87C47EA546927BB12FF9B399DB1AF4BA9A5
705502F55E4CCF70BADC27F051EDFC109B2B38EF8C02F86120E587F7F3E30D65
F015C18644942E93B1C51E20F7B23D8A22E7E6053974F1D47DE4897284B2FFF9
5A8A508A19C3281F49B01629308D575A409EFBAAE5D96D65773EBE8D69A606A1
6E0B8E3FB836825ED1A3B5B8A045F07CC4CA3AF0C95B7DFEACF79771B4E47D07
EA87335F94152A9A489FB0D008240BED8A8CF2D09B98B2CBDFA71196E5E374EE
8BBC8C09486C27C0F914E665E9D8D06B135D3D678385BAA5BDC567050FC94531
DBF480716F1FE7FDB6FDFEF44122728B9BD72C6EE765F2E8A29E13342CA7B139
5A06C40DB78FAEDB4BB096DE59622A2EF791B46312F7CB19B8E0F4DFDAA2DE6C
0097EC1BC552EBE9B4BEDDDDF27B0F00DFDAF487598CE1C576AC85423EC679AF
DA95EF3F0F95A6EC0CB68510666968335DE2BEC50F225ABA2C96965B0CC26950
62D5743D00BE2F719D843E4DBBE5B3C8D190DD202AFF773E96A5067A963B28EF
CF9069994A576F5246C24FA9CD62FC8EF32FB37D937B48C2515A46A3FCFB0DA3
1620868D9032C34BE24CD59ADCD6CCF4D19716E82F86406EFEDE2A2CD2042C90
ADED9A98ABAA446EC08FAFEA1DB8A81E4164F827F359A4630C2955964D0D8088
414E65B5891F67307481359D639B354E21F5E6446883B8F3EFE7D6D6BB6660DC
C1DC1737FCDAE025AA1456404475F2CB892719668573A26C331252E12CB6423D
F7143ABEBA44C2565214A84FB5C4307B6786088867E9C17913E69AFBAA6E8E69
A5E44A9ADFC78DAF0D4357078355DB9456A6FFE6E3269C262DDCB65D3619B06C
872C065F41DBD94E21069ED4EB4830E5E1BE4EE7195B4650686B65CB3E2E24D6
1819BC85159520ADC69ACA26ED5D96E3B7C97C61DBD34AC593EF6F48BA96AE35
A6BA0B59619B07E48C52BB7B201D053025A68118D8FAC8B22B497F56BC60559A
53BFC7CC1CBDAE2D8231BB7CD198E97C7594F204E1AD4B3E9909F220E99C367B
96C474DF3C2D253EEF416D9EE7F639C8B27C1CDF04115FA459787E0FE496FCB0
585074A85023AAA9730364B5B8B54C1627D63C5AA51F789C1C478C407682B48D
BE953B8C0761D113BDC81A854D6F9C78BFAA8D12A21531E713B80CD03A5FF4FF
7C34928081B64742B85EE5EB533662CA3DE27550A672750D66D4F9D8446E8BD3
500489A6132C0F36D15D428830394D2A356D2DFF4254DDE3C571B9C6B07B0961
8AA81CFE78BF91230BFE3F36B8A0F98A0CC800A501580CAE08054A0442E910EE
2D7511DB1D70576C69420C33679CD4C261A9FAD8F5344525EA820AF443E9FF5A
66AED0091EE417783D44B6CC9BC9A52DE43A2AA173260B8DB9176E0B6B30AF73
CA72C9EB2C7F36E27D00D4347DFBB8BF28D2539B635B544499D40AA6D343664B
19774783F391819C0E9D2DC9BB700F2835120A72B7B067D0189C6EBBAC4693AB
AEB5548FD229220F8B49CC808E590F7457152949D998323CF765E04BE85E72F2
F6361D83E687DDA6509D39F862F6E38B26B827F6E45D260A96273B951CE7F284
20CD1D15987A7716BBFC20EB3DB805CAC99BDB84136AA119AB986521CF721B28
8E1FEB35E5016F4B5951E31B6F5E771BE54B09E2D6EBFD77645845B7C08389FF
D159B336C6A17C42787F97BF93CD6E0DDE7BF692895A23062BAF9CC5380390D3
6BF31ECF83D795D880A41CF005C048751D33F7C872EA5EA529F6DE126C11432D
8C0C7273199029B3C52A85E3A069D5265B78DF1E8A68FD33FF8CD7A1DC0430AC
5DA38AEEBAA87DC3DC4E5149815BDFB13A00B6103D5F03C92D885953DF6CD1C0
3F7CAFFAC3ACDAB47D1432492342364879CBBD2CE2FE7DD3445B4EA32C1045FD
7E0F586CBF2D967E468B2E8E763415D2C95367997DFA2EEA9B7EE86F7FF6398C
06F8F578B49F543CD82C3A35416BE740A5410D67AFE52FC469CC030F1DFA6E1E
161AC665CF5592327442639DE75C93E4D6239C31BE9F30BE03B0B8FE5F8EA006
251B9E33FFEBB1BC8FC01E817B839CC44AADE6DFC1BC7CD3BC95E755B0C672C6
5CA96A594D27DA3C1237C61DE1A5F5B26FC8966E6CE8CCB799BFA8F44F319EC5
BEBA1824982D97D74DCA6EAB4A878BC760F2F70D4299A4F76115EE6135F0ADF3
C76A96D2F6B56E6DF1561215B3FB914BF35145019FE194EF4CC1FC6577880BEF
BFF5820772B44C171B4AF5A4F349EEAA337C69B5681BE101627FCB6E622B8AC6
0B80F58F2E27937D3712B626E7C8B5F8709BC9CC5164A7333CEA2A697F4A8BD9
635311108D162F9B7210012EA356D67F6248FFF91FD52CDEA7FAF96105243EDF
44B4052B454208C2E2C56EA5C8F822C591411144CE72E06B4019EF6C836D6598
FD8B539BDCA02A0A1C3058ABF110679A58369EA8150E250037C2B71E075DFC0B
DA01637CEEE0BEE352DDC6BEA07E93C31D65640378033A2EFAC8C4633E2A63B2
D6EBCC95F10564A890B457F6D5861AF47BF51BC1D85B8B79F8673150E70C9BB7
F30A18D69C46649994F5F0752D2E9E84FA4DD17E0EB69D76392B84CF41177562
ABE8B32B8660D2759970340F342E48FC8DA1BA1FBB58D27ED0EE3EE4E3041C72
22EB6AA1B50E2607945D99ECA5F4712D1AE15D95EE92368F47EE16B78669BA72
261724DAA12AA2C2EA54482A16137BC8214362C147018DB3A85550F13F766F0C
5E766A5D40E3161F8ED2B2732838CDAABFF3E3754FB53B9C7A3A556978DF9AC2
2A1923F6083C736EF642E2C5B5C9D965172E25C151B1E039BDE8A3DB8F4807D0
27C96D69FE6B705283CE013C9E099C3AD560BBC9A72A50B39F367FBB5A60353D
AD6839B597386E852EECBE1E315834B8173CA57A34D0A23A3CAE652858FC87D0
56998142D7125E5BC10A327F01B283971E8189C319B82232F548517D157CC896
43C95DE6366E02817082BE6FE0B04249A4840D3052E5311B3C8D1E40676125C5
C463F511124CA3AB63C7E6320786C536C7CBB691860B26161029D105F1282759
7EC74C039D6C2D64ABED52F0A005B15A39141AAF77BADD9D4D62B260CB91C49E
D918419931FDA3ECF14ACF720B86A751E25B22ED67B8950124818EB258558D55
DB274C724BD33EF52F6EB0456379A5018902545D6704FFF5427AACEB544E5370
1C7819926D034CEB66639B4FDB5674029D909257BE14CBF3042623E280EDC775
56593A86B252155099730258CA9A813FDBB0170172C4B89A44D711487B130E25
4DF39B4DE5BAFA5B9682D05205EEC5D867F32747A6FECBE5A1590A6EA84CAF7C
546CF567C24461FC380C5B221D12DD42882F244F2A18654E74037D05968F7865
654F1E4F6A89EA2C1DA13A92EE36CBEDE86DD8EDE206FD6ED51422668D9CE154
5A7B59F1EAADAECA332D89EEA1411250C8CD104207C115F424406B2A4BC322E7
194E3616CBBE98428D5D84A9EE7D3E702F25F5E6D7BD27D6E494FEE2CE7BBCBB
7F517867C259A83EA0D92DF798FE51658E2648D8CEFB6C2F19167C0322F52C3B
92C29F8FD050130FF7C7D8E43341D1149E9FC384314FF4D2A33F635C6088941D
E5CAD481A881E8CB4A17B989F2DDC463DD6F84DAB963F521364CC8B2F25B4DB3
DD55D05668578E76736FB859EA249DED0ED1FEED1FCD70B4A6855E2109A878CE
4621251A2FC3FEED786DC4D0E02F1AEFAA8A7B2B96971E35DE1AEC2C0796B253
6E30A5E1758B293E6B721A13DCA21512CA839372D69BC62743F758B67B1B1C6F
DF84C9B2E9E9B7850B983F64CAE1E93C61D34AA87253D3A1247C8C227E5646B2
D9C437BD3011216F3F8AF6256511CF4FE9B3F72B0E5F600E617A6F6193A1F911
504260D90D36273651A8157568D605D073E021874C8DA3233E7DF0A2C22BF447
AB25F2D713FD0563BE0EB2B36DD94D1FAB63AB6E02C7C0B4ABF7BA88676DDA7A
420EDC36732A2D6D8EC2BEFD229F55887CE8299F546BDA7F7AED71F6B5CD27B1
29C9972B522C947BCA7B586F198C426A71DFA8CEDBE3DE48B5CC3944DEB241F1
FD9A5FBEE5B1F2620B814FA2A66625112E7D266EF13D18FE4670DBC1A8E3BB23
1F9B2F244DA264B73136F9AF34390319F6A543D5D4D7FDDDF501815FB547FA8D
8E2EC2BE15336C1B2C006DA31157A4C08FE43A964D2311F07753D0CE4ED2AD61
98A473F1FED6AB4C0CAB271CC2ECB9BD45FAA0017AC1381B4007125B3E64A3B8
BA56C65FAA99BB540B469C141FF7FA8743C721F5D5AF3CCA4A47F78B4368FC5B
9567CA5876B77D9AF042D872AE90EA4AE7BA3359AC2FDFF19FDF6DCFB88A7A56
292B8DB08399673F0DC75F1BDBE806E51B2946855960C9D279613FFAA3D65FFD
AAB3B89F357F7F55A33A606B88DB03CE499BED38F0342867411C63FCBD0D7553
A1B7FFFACED5AFB51E844407E0410E9CCAE5F3D4B2CCAB5185010A0816EEBCF0
4F8BDCEFE1F6613C06CC55C5043F70CA48DAB3AEB92F8E68EDDE18506E73B4E3
95CE2A35BBFC367448EB7FE9D1349E90AB58CBFAA79D58B7A31700BB348538AA
9E7EA1A4EED27039C40D9E1182F965BBFBF36CA5654039F3BFDA83A6CD672E3F
E980F491689E55882E29B65E5BED61359E90187A6854C768BB64774AB93C3547
A7BB5829775140FE094734F24C422F6039495490F7D4F3C059CECBFBF7F20EC5
431691AB84C0F4963344C2A01874EBC120B8A728EC0011B6E29D334D651FDEF9
6570BEA964AA4D708A58C78748BA48E0FAE5F875BF5F34D99DB727A758A9A438
1767DB79BB27FA93860D2BB9C27E460967AAACD6BD36AFC43A224DD64B7FEF66
AB3C907464E09E24F745AE8A580F15C1B79A4D2AB2BAEC3BFCE3E7729BCDC182
42DE1144E6C68A1FA6D04A5FFF03959033FCD255AE1A59643044E28E29947F3F
68313353CCEF779B6200A1047B20647CBC2F422CB26CFC66AFB8F4EE72F16F4A
83FD3B6F7C02C8ED058F8FAE7CD6479A34E1B75657B41FFDB8AF1C9E3D3CE95D
859C34C3CB72DCE26360F8C5B6FD5D29468E12CA2457CDD4E03D9BA945156C82
BF0A3AB246BA724F69FEB1E8EBF27EF9C0A1788B0A8CEEFF080E5D1129031466
E745687F85B0C1A6D5250933CAFBC2CBC707BB968B61EEE7C02C6C5B50B31650
CB2FE423749D1BA94D82FDE86027409DD3E4D1A8B6C56DFDE887E01FCF6FDE7E
553889B8942E2F791AEBB6595ACFA45DFF2F0D83601A0CC9D64A2098B689B48C
EFB85094854BA3BAFE46C8339FB858FA8145F3FF9E5283A557A996D0EAA55352
99908484ECA810FA0BE5BDCB723D2FBAE12AE477415AB8E2FBD6D2FC365C4668
2E1C493974325942B08C2AE3D7EF7CF255485874155C09E6B0ECFDF1C550344D
F203A2814A200FFD1347B508317D4C933F30D085D52C6C4F5CA2C9BBE16D84B0
117DE665A118251C02B0170BF01CBBF0613EDEB93A5AAF0B9A7B70258F993C87
F2C75BD72B5278CF84E2AF62B3A405BDBC8C8E2F26349004AF3D296585FC6AC7
2E38E8729569F2DEF33F9469903A4319D244F00164BCFA2B27C20B2622E85536
9903061AA93740C8CC072B11B45D729CB482A3C065CE71C64A50CEB925808E57
CB966FB0CEDCEDB7655264E5A5CBFF0E4E7E7536E7F6C62127837C5BC0248351
29BC973464E42088642FACFD91D0DB7802368056BD3BA58D0F6CD3D13C09284A
FAB3CEC30106F0B7EAE3FBE028D514C87A680A7A532F0E53AD0E8F5E630C9803
C3D031ED3D5783185B69DF809544F5291CDB6ADD5646D48CFD2E30464DDBD18F
FDCE2100BBBEDF0972679D4266E65DE1A3A418E02A8BE169C5D0B120654D09BC
1A68E87568A844EEA08E4B273A00CB5D81CF1A1E8AD95B7DBF3D2758D029FE6D
1EC1336A154B5490DFB3EB33C53F89D5DD6407BB98B211697941A927BC72A207
33236A94304A0FF6B67A7C777A1E24E9A65FF1BFDA29836A2091A48EC0E46292
E803045FC7D7ED27129CEE92DED461FD91C88AD7CE0DFB5E45C649F44580845F
0A454B1987BA74CE27B2C4557D4B04E7F771105122A7F7549FB96EBCB4DAA4FB
E78E6612D7BB746979F4DD1D180292AC3AD7FB22BA4BDD28DF0811FD0F8198F2
075553363ABAD23DA4DC7FC3B4C147A3CA6B939B4B19E81AB5B9A9C22D64A78A
0997962F15B4FF0502157BE9B017A2BC0B882EA96A4BC7AAAF9EABD6BB272B4D
DAC2A26AFA6F675477F1D1B294824781CD883EABB77A8D8A93CE831F69FD8A92
1F94B67E7E100D6EC81280D8B96348FC9607C62A255E88DD550A9A39D1263675
09157E4D9109A41B07B51384E7425D02E35C8F3A3ABE25D10788A7AADDB9F244
46797CD20753F196A12A09781F4BC06848F7FE1BC19D1328CCB4CE026622460A
1EFD5A50F83C296A64F059477A93B93BA8E0E0B086C29AA069A41EEED25AA903
0BA06F35A986459EFDD766A93F05EFA90864CA602313A166667F39990AEE1A43
CF7123A65EDD143AB5D89C8263E562EEBFB3BF7648E199367C0FCF6C832EBA5B
2966DA8586C67E8A16C560DBC0D4941CB6DF6A0D1E7490C767BA8729D9692720
373831BD3C4E8F387C78E203E185F24083B4B071D47E59ECFE2F8ED23A1034B0
9F44B1A04E110D6F907F841D095F090BFDEFAB9CE811355329994BBBB65155F6
786FFBB998B5175764E68AF9FE2FFD5BFC54256D88CC4BD4DC84B5EEFE217BE0
B436583B1B38FB80B60089D4C18F187D265E8494A80BDB1FCB3EC91540DEBCA5
AED237FF2B19138C46AECED0CFB8AA39A765C19B95474217BDB214742B280AEF
95FB492D5FEF92E4928028BF4BE0A72AAFE74199DA8D088056F1F1323AD4A50D
077FE7AE2463F40DA89824D1C5D17DC70E13594CF86656A0ED50B329ED72DFFF
1413E660A1ABCBB98187C61248A4D19B97CB47F87BB44B486BE4835A8BB91408
E04D5440C74F31670E47560AC3B6A80C385903B44F4E1A565FAB6A85994BA52B
3E141B2AF76AEAF89AA070956065F9F845E184CC0594188DC4771B8904EEEBCC
2218327F6647157A8869A662B423B095EB63F7F052B3A2778A6E48AA27E36CFE
86F2470322D955776E1B6C45358A5643D27ED225F361BC0F8629F97EA3E4A864
AC9AFC11E7FC1E992A4F794D9232AA20C29B6CF38FC8562EE9E652A058592675
FF83CAF282CE1420D724648387F15CA1EE9315FCCA90D78E299DDD66A941CE30
5961546D05F69B1AEBA592BABA2DB6F3D663808C2BB6B3BE5B62FEC9186DD4A7
A7C2596DCA5DF89F901B1FF3201D2A494ED634B1629F9EE5B00CDC1A77F816D9
4488534EED218B805337E845C7FF01A6AD7B9D4FFC87B6446696282ED9C66334
D6205BE2434118077B908451C4ED8341D28935E7D83B5B32E6F3D5BEEB8A2D7B
F5E58BBB72495C099CF76146E98FE1B7C6884418C2E63614C86A5657A6F514C4
5A777A780D6AE247B4F6AFB89C6C1A186EEA1CA1BF49D8015D613B637F19614B
32D3113FEDDB8BD432AFA7B53F74037920F8422F3E911F2A28969E9BBFED7EFD
6DA9014C5FFE6777D6E374B40FC2ADE40888C5DC808B672C7027BD93FB0D3D09
F8B11EFBE0F0CF846CE587DFFD3A2B29680C0EF7184211C879D1CFA2AD398856
49818C2581B40457D3C1C200483C0CDAFE837D984A761286C1B51BE2917C8DFF
1A287DA34EBD4AC57F55BD24CFA4D91637BDBB431AA70981E77AA5E5E76F43E7
30D9D3D0488767E6FD488F2C81DDBB1ED0D13FD4BAF26C1556CA219E82403C37
3E5CDD5962599AE3BA0D086EE6BE1683315A00FD898FAF5022413AC49AA92BEE
A25BB7C0D502F026F9B31505C0313797A2C62016519BEF23B160A29C618C20DC
076EF963EA3015DFDB2A56BAB31A5EA4CEAF8E598BBAE1D9711F4E4088D6466B
65753C25713CF4D68CBDA8F95A0508D0717C6BF111E66FF4DC17BB10A7889089
95938479CE28119F23A737F14760FC23ACF398BA043B826C7C0C0289A1BAA29D
4467B2EDB0A3034370710DD8D8037FA2BC4A92730FAF68949DD17C1D4D030D7C
1A74C9F976502D50077BE9AA1668BE627189993779AFE65BC18AA113256A370E
02BCEB767B255C72846F1570C5409917EBF4E753A713F08859480588CA6F6C58
0A81100677A440F3987FBFC0689BE4C0407E9819FE68FC2C4FC341BD6FED82A8
EF986F4F2479D1A838F1F3750B8A5BCC1667C7920FE0D18A619F3B355B53B61E
C3285134165174F8BB006B180067B2F9E68C5528E0DD9A56E20DB264D6012FA4
468296A7132A3D28EE56182422DB0E16F6EE9DB68833B7ADDA86A3104E83AE7D
12FE930AC07EF60D30A18369FB3E983597014EDA4FE2BB6704E49C953637AE61
4F701BB7EA01E8978F788BCA69D42290F62CFD5D38CA84397F0CABC125351097
FD8497D3BB8E9F04521A6D6A91C41966D6890030A695F24FB13CB7D83968F605
C4AA97AD291A3032F4198B12D0D7A61B06D63389A5B19202FC7A5CF34A17BA8B
B89EC9287B3729137F16767FAD8A150F12EEBF5F137AEAF15A3EEB91741098C5
E7849830DEE742311FE4BE262660F33321AECF7862664BCCF8D0D7ED0575082F
7BBA62D978020F67B8AF0C4079DEAF73AACADC529A2B37845CADC5D1C00E2592
7E8522F597DF335D0DA4FFDB85EB2013C9C2682963466334F25C02DA54116267
2A62617B5C7D69D73B3D107D4E9FF310DDB8CBCB49FD9FFD260F56CD6070B916
527529102D74069B3D9EC972D59920550497162B435DEB3C8C4FCC578C6E05FD
0EAEB026BEB5B1B2ED69589587A48B0754E77805C060D65C25FEA1A5980EC3B8
FDD9F568AF9873D141F93EE60C9B24D78DA80B72BC08668E391ADE6CABED0CE4
03F7991165DCCAB03D5ACE06172EDD2479BDBEC79775B16D071E432931CD32FB
8C360C24FBFD400EB705F4C91D33E6F388E1C1C7839B309F0421354ED4AF867A
CEE4F85E3CC5AEF1EAA75C658E90F0246C18C21CF56BA7E4C8B419499D3F6B35
6E3548C00DAB9B0BAFFAC2FB633FC2E8D8E14D1017DC8428791C900E377B7845
9D8D1AEA4554C959537D1AC094541331B0FF94968EF45B36385BEC1DDDBC2AD2
B526C6CD55B427B524171AAFC3147D598B33B68992E7A2F38FC0102D37B14D77
43D970EB9BB710C91AFC97674F2843FB709E08E283462DDB1969BE4A90398240
DF656D5E8EA1872BC169F92A89067E2ED054226B03E4DEFB70112BE7F4212FB8
E2A9BA7386BC0CB3AA7759222A9F55EA7712BB03B500BC04C5AC8E823FD540BE
77E249546AEADFCFDE52F22BEF34F7BB1B16A77E88743D7EE30E15C1651991A6
A9CD12066878A8C490A01CE2FA78B291B952FC8CE980E75A230B890A33C1B4C4
74C4781B457EDB416CEFF6B6CB9AD4F9A371E1CCBBBFAD96F77A39A1311917C8
506BC967FEE4D90AD76F526FE2C409B2719E566CDFF758A66B3C230271F97971
ACC0D51AB943797023065C805B19DBEBE4C9A81AC80CA5A8CCB0C007F4C50242
E48324E9A31040AE138A8956B0F92DC495B23EAB87B339CD87B09F18BB729138
1B378DEA615BF622CBFC2D1CEF22898F1639376A8639AF013C7237DBE82330DF
B8C9C15CB32399943E3FD64FBC0302A8E282E743B8A3543FA63030BE997F6EB5
B0BEB38AF7CB8EE7E0A553ED1C167611B98529389D46C775E47CAC1AE7328655
9F73B1DFBC1D26B5445FF5374BFD830FEC49676700958F17D09D8B8D37746E5A
B460523504E6F53ADA4ED0FE8C4EB03A3CA3D46F77128C5474953229893F2F17
5BF705D4F7089B2EBFFE432B337B76C08945DC5FB886582579C4C79A9FA5263A
D720200C8B457523D2DC2832BF258013E878EE3C5CC43D6AB4C81C193F074996
AA2BE4425CE64BB950F41DD1564C4C19ED32FE855E62B0E0C454C8C57735031B
7A58D1CC858BC7B4DAF787A31CE022CBA49FABD2B6BF09FCB4CA2D81A942CFCD
2988533E687A6A893A3EF3E520891FC807DDC7F0ADA3E4757442444B13B230A9
51284C09101C02EF689C877633928D252C6E5DD599F32E60A1D5251D270D0D2D
01BB451EB99B4C0C0FE29E6DD239D2F234D71DABD43C48958ACE66BC6BC08C8D
DDB541B5711C940798D95D2F90E9B31D2E9B06FAC2DE33D3B1965E05B2B36311
1F45F1D44B9F057BA99AE776E482E332FC6F4EBD5E2952106393927DCC0DF6D9
8F56CB1C9658C5F82408AE2CFDC479DE13EC9360E9A8E4608181A825001EE607
36EAF6D1AD7A6B9731FF601DB345CBB8B54F583D7329CB086189B9AC74946387
E6DF677C977AB426EB6CF686087DE12B3426B9F31D29543DE2AD436B75778C04
89533F3FD574219D5C586F3A72BC1E72A5F984E7235607EC39E49ECCE41C6370
D31963A81F3099074342B9F9954221EF653D32DAC552DEC96F4E13E2A020BDFB
10EAF186D8E92293D23E88857A01BAA2C5C2C79D8578DF1E5081EFB6EBBD84DE
A8667ADD5A9DE04B77BC897F50A7A62C8A3F555682623364AFE71B5A359C4A09
29163E8EF660794518DA493EA6FAEAC01E83B18DE3C0BA528765BC693AA01D8B
13F901C96396686444F42CCF062A9508DB8C7B18CCCAAC4DC3A9B76A56A32705
3E0F6D96D1C2B699867EB10071DE19F33043900232407BD79E4847F7E33662A7
18F59C73F62159F34F65E8FC94DCBC1CA521E7D5EE19CE50907EB8437E9B37D2
1481BB42DF9F34C5E80B618FA651F5792E43F9AF30ECEF0D86125D70BCB7A92B
2BE3AF10D76FD267B2D46666CCFAE58CE02E0B25ABDC9F82B6BE02EC035D16F2
C9056A5AE147101230E8B709068CE0669C262153384BC8111436058FC9A75D9A
506B08D31C104C5A30B16DCBDD75C616ACA08F8F6B3AA1DE3502DDFE980C7A99
18E9E614F8FE024A7C59EC9ED04BD079834D2F2D98D6F4EEEE809BCD936FF4B7
6DDB821EFFF0BF94159A354F9672B1A13A4823E645378959E3A4959132D9C8B7
59E4AD49B5EE0AFE3B6468AA01ABC8EFFD9B0B6F15BBD455D19501FEBAC3C447
68AEAFA6146BED5C7A82FC8454BA3BF562260792EC1857BCC050B841774BC20A
A449E6B70F8524CB12BC34CD34C3251813CE12B7620D94AE2290B89747B6BFA7
EA057D586AF5A8410A54FC2ACCACCF830DEC524749A6C5C0F20571C577ED03D6
3028CB4BF9EBF34DE46C25EC04EB599FADF1FB85E56461FA3DB84CB7F0D3D408
68AFE8EE32B307654346AFFB61238438BD0D1A5666C1D73A8143C8A2F8F7E8BF
6610C16A935166FA985E64C372D45D13F468351B53D30F523C89F1629FE7D6C5
C477646F83CF505E810D2EE4A5F0B6A235256358C751C6CB80E68C33E7A1801B
D70D4F43413F6EBD78F333555586FACABEBAB39D0592E3EDD486DBBE8083FF1B
9E3A293C2519EA9C0B11F681BE3E03DEFA2D977A2E3C09F7C0BE66442D609ADB
A57886B093FE07CF55BF4656B353EA0D2FCB03FD3A28E7E0497A404686A83CB9
1B3A6473BA9B8E287DBD9FCE486D8A7C45D1599C5AAF17B17F5FA640B8A6A801
E3EEB355AA40FE933C1716D032F7A656E26D5B7BA5343FB34A06995B4A2B85A8
861139410BADC1523DDB5EAD3473D49D17CE20764EE81D0475DEA7164F793E55
DF191B089427B77246B493124F682EAFF87DC9CA53DB8600D576A454399C4EB5
0BED537ED4D5FF730FFE90E7E799B16D2CDF9DF24F06D0FC8280D7963B6E8C93
B1849583788C9E805C5A0CDE1DAD203B90
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 78 /N put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F48833E9E
B7BFE6134591C923F2C91D77A132347F5F471F1139B9938E880CC5B3409B3385
9FE870D53EC343C11C946BB9B5FF1454AC7D547539FCBD3D77D83180BB4741A6
90189230B9B61C6C54309B61623636F98871724F9A85088E44779264257FFA0A
FA05C2842C534A411593D10A76CB09C8FB45E6E44703FC7A51D81D3C1E8F27F0
3AAA9F00AA3A998A0C661B72E46589CC08EA87EECFDF36B819B07306C38AD155
60CE44A39581BD6B555165091C5D4107149E976E2488EBD830CCB0A350C695E3
ABC1069A94F16744A6F2D97BFD4E208EB2BFECD6B74C35310CC3567F94414FB8
334C42FEAB58B02F67E9CBC1855FE7DD7C1B142979D80DAF96A3F3517933574B
07E1CAD5FEEB9AD584935A58676976DDD2B6E118FD1D46453894775B2DF1F871
924CE2C0479EA8C8C337504C1F456B77CD97DDCF704455215B860BD0241DDAC2
F375DD996474504545DD2C1B775E4CAEAC1DA45C79223AECA9329513ECA625CC
1C5FC3AFB291A6B75A593BA8B9CA4954AD9069797717CC0B929BABA88F67E4E3
691AF74A94E95E6AF67C7B550FE44C63FAA5B404457CADEA896C69E5262430E9
787D1CB2FE11612EB29CC828ADD9B2585FB30DA75565D2D87C4AFBAEBA55678A
4E32C9C491BC85622463D65C0E9723DA72D45C6893928AC6364278958FC16CD1
F7C31DF8E2DC3521CFDC4A1218F6F83BB3974123A362B879F4A7F4F84113A514
3469766791AE6D34BA5058A534B06FD147A2003BC9217289A93C5FD02EA25058
5D1D0C5CBBBD31AF86DE7198706BC7B22AF5E15A27DA30541A8DD534DA895517
EFD347C1B0BEB3D33CED9047C473A7ABD9E68F03E176745F59449B537F8A8BC1
3F149C3D94CC01BBC61D9DDFC8CB1C2D3F0A65354054433B2A57E23265677D37
989168AF0874D0D8EAF987BC4A15F80B3A1B1FE1855C92998C5E466522F23F9E
FD77D816658CBAB9131893E6F3C64A7ED38F4DCBF7291B6D7A360BFC79086819
4D35709FD0425F4D6E66251ACFD3FC990F6B69E2E1EF111C312D6EF7E4FFA2B3
15D200DF39BF923747351FE56D3D574A24B7AEC29044CF792D4CA7F2B6D9AC0C
62679B92C0F90D0B3D453EA1013FC138E71EFC4EF8F9AAE35F11A49414815E8A
07CAE9E8B59EFBC26F389D8399
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4ABCC72B6CF075717DF5200D680CFF152D215865DE535A6
1CA8E063640C195BD08DBB8AC7B4A3EAE77A96BC881F674B33575A0CE6AC3EBC
22862808E84C47AF37E871AB5A85B043190EE840144F9F85E8C54196C594349F
1E95F04AC99AB789ACD0FE5A2F6587BA6A0786B3E4FE1AB8D3A3BFDDEE2C5A08
EBFA713F917FAB61A4908CFDCDD24D6632BDCD20C8987AA65BB71AC2C4FBD1A2
275B89EA38BA595C388368F9DBA8FB60FDC1ABF2444D248598920E27B6062D11
1C980547FA5474AE86F465D320E647D7EE43EECE2D641C7160781010323BF9A7
9A6DE8A50C3BDE366AA258B1A291F7C1172C97915A0C894D1826173C1C66D456
E4C5DD727A08A379DA4B371D3D94B12236D43B849A742FD3AD207A4543C7AA4B
B8EC4768306AF35856A49308EBB53CE26A25D47412116DB0D05271CD5B5305B9
782672A337CE2A4C998F4C0325D56D2B21C5512CA5C124B1C44D07CE80158FED
9F86D03360FE37D60567B5AEFBECB424D50BEF36615C62F3F69D37A0BC42318E
C1238974C8FB44992F199A1C91F04BC1BDA94DDC9391708AC837A20D035122DC
7284BA6BA0FF69FE6D961959BDCE1451B53983F13D8768F6EEB1BCA1721C0AA5
9AA5C740864430958F22017FFC2D943B46E92D5985ED8CA651638448AF31A359
07DDE099C081048D5E518B8AC442F5D1976485601F5ADA2502DFB319438BC398
377A842374FF3C2E68FCB56FC3572EB5BC3BBEF4C6466DF7A119D7B1ED8216F6
61726657BE65A18BC540B874A5FF1208D3EBF61056E171AA7A50DBF812D246
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492801936F5E8A1E4D3E7274DF2F942B199
6D1183CD9CE1840868C9F63FFD1470AEB47FFF33703961AA34F3DDAB60E003B8
2AC1CF96295105A1686F43AB0766CFB77AA11B6C2A35FAC32CE4B5F87EB125EC
C6514500A94323FE593E382C53036412B09BC866F7FDE874F7CC79FE5120FF31
49483DFA3A94C37DC02088BCC1F9216D904E39F0F309DD6CB08C7537A7232DB5
812FF744EB62B67DCA2A8F59A0CF417AE778624FB2EDB7C4BFFC78BF8F01FD26
CC7062272CDBEF76089EC94D81E8CE1799CE9683265DE8EC9081A4880B2A4A85
C0DFB2B43B0DE7F4966E008C066BF6EB94409974A30FD61E80F89DE77282D378
56765A2E39849D81D1712BA7193FB92D21BB87ED788C589CB8815BB33235118E
56661189F7EB8082AB27FB0134859D338FF8AFAD4A873434BA54F345A4579916
27A6010A110BB3620218BCDE98C1DD2EB7D4F9620BC4B7218AC15426E4FA49EB
96D19FEB158D305348CD49837AB3BD89872D7424F58FAC1115AFF9379C091AA1
66BCBD86EB1F0BC203EFC221EE7B9B1A706A9BCD08654565D2D020355736906B
6B49A9E2D4F5528A7AA7F82814BD4A0F872A3A9A3DB9E454670D51D7F880B571
05C366245B65AE81495FC155B67C8626FF33812B1372175E6FD7D43D9134ABD9
70E524EFAD438A22F57C0595450394AD4A2DAACA192E92CF195742D5AEE9022D
B0B214D3A0C5FB48201578146A0398875225D8B82A812671A9A853C1E216348A
B87B18A4184C84556C0476BCF80A677C10ED094F00C582E77F6E21A71D0C319A
466A6202027833484674C9ED2EE44D10C0CE6B2EEAA9BD1B768A46C803F4AAD1
A3DFA06621001C51AF2CA7A39AE14A233698EC7F74892831CCB18FB0F415637D
9DA636BFF95A389410C035039A8AA12C716CEFB63CAB2D660A2809569B1CE561
CBA1F7CD528FFCEE309C660D5004585BA16031D469331DA20C3D092BE8CE38C3
5CD2C51E4E4DA76ECF291E75620A44CF49E61F3E1B499563E06CA6CF44BD3931
9CE74AD419B077F15EAB31E5C4B86186A1146BAED05F01A4B2363194A109026D
51F307DBFADD52A043395CDC48DBB13D76EB7119E0A92B74166F08F7168F45BF
B5024F2D9F96301EA58B21B16CDDFEBD4CE912FB57CA67ED55E354EFA8D23F1F
F599194A044C530AFD829D3AAC9798AA8208F7E43C2853A219D603E1F13740BF
D314CF05D2B777C13DEFAB9B432418962704D4B752F8ED233FCDF1CB5EE18D06
D9774D944B8F078716378FD968142C01BAE136BD3099FE129C396E9451657AC0
723C0DED7025A4E8E09ADEFD471CD755F7BF623C0B41CE79E0C8820141AFEC8B
F607227130388C671631D20EF5FC381131B7C4C90E04DB61386B508D91B4B29D
F4589570B10C9878819B80F7BC667B94ADA2152E1B66D135E09A46B054E37922
BFB709F40562D39AB10F68B19CC8756AD1987C4A8477C26075C8A819E4BD602B
782939220D351CE8179EE650B0D9C5050670A800E58F30906003D98F0F6A1CEE
4A6444BFF43C8B73F38C79D03EEF6C753F57E34AECAB0CFEC7B07A150D715296
701D9F11ADF00AF308AD5D17E2040720DA0AE2393C3189A7023D699602C35016
3AC9894C524D7AB88D8DED9656B074B08F2CD31FC681245C724A8E754BDD8917
7C8C2DA74A41FA6A57C96511A0362FEF840B2008B04C23B85DB5F2BD66726A54
4C10942C271713B28F9ACFD22A826FCE49A38C299F94BAD0126091EF1E08F8AE
C94C3703BDCFB578FDC44CA7487E3D39479CA476045E4BB7317B507875E601E6
C0BC1BEE8EC0B014E2B65B5C3093A26EFE383B3319A212AC11C1B4B527E2C5CE
E8813C4DB5BA5657FE29CB1AB73C6932C1D2774B66A14DF4431DB3E8171FD0AB
92FF425F78F81B0B618F1F0458409D442D2E1FC2D1571D44ED014CB9CC49C5FD
F45FEA58F190043814E3A4CFB85AFD46ED46CCAD840106074F69AE7C306ABB76
1FA0C386F50D2C9FC7F252AD669BB39A19492923FD2ED1219D78BE4FEC3574D5
AE3388DDE9AE21AFE51F5210F9C7FAFE05CF14F606B403710A09383043E8652D
58B7C68F9B79E823669E4FB3D3C5AA908E542445660041EAF9EEB803F299EC1C
19CFD831CF7C554C0136175BA218DC02351A89F44B6CD666B66DDAE74F5491C0
11C8D44C8637E18847234F5123B210DAD86B6517A40DEE910C74C3593BC4C0F1
FEB1F16E9B05B3980E64E135A4F5320F60DF7A27D153F5B5FAECE0ECB558341F
4CF24489372B653AAF9CC951A3385396491BE6C582C7FA09872A6575BDC2CF7A
4927D841354301EDE00ABDCE8BDA33BDA6DA5D6C7F4B7CE7389C563D11219A88
7F01853AEF9D5EFDAF51FF07C966B61B01180333ECCD5B3FE94019A96B2C19BB
6357E64ABF5421FD338F17B562E955B4EB2BB06A779566ADCB995B47A4712422
DFEF01EA631F6E5657805483BFA8684A253F442DE07FE2C0A459FA2AEDE1B3C3
173126E3FDCF7D711DAC380E4F048050E3FB3B7D2A66138292F2F3BD650E492E
CA67D539F5618E2557047727B1877C6951F86EBEAFE1C5725C894669FF44C8B9
F47FC101780A1DD8CE08BC9CFD4C466847FEAEE0AEBBB377419F816A5CCE657A
26E927CAB2BFFBF4CC1A24ABE2F4A3070335F65B05427E6D300B417DF52C331B
842E3875E8C4A4ACA5ABA29958F36904BA4D3157ADCC999D22162298E015F6E5
DD084E68FAE757E5EEE778111715039B1BC2EE98C878DD54F9923F72D6AC5BA8
47A7B941EB716CF9A6D08728DA3D95ADF1C5C812B03E2569E0F9B67770D225C2
850EA487E561E61A161ED1D578B1F16C6FFE3C105348362C617D60BA3678C821
5B9F542D8110235CB8B0A4B09E56B24538CEB6AA2DDDC988D12BD4E20BF39632
C267A05895B76C162F6A87E39DBF326C93ED85EAE5B5EFEB67FEDD00215C3E17
0D67E4537DA0FA7D52EE2420B6D9F5E6FA1855513B7131C7A04B00038E4A5491
19273494A85018A22C3FFE633082B4FC549FAAC2236FDA214B1AD5EB1B5B430A
F25A20A0B636FFEE11DDCCA10EAB988A1C23C7B8940F5D2568FCC3524F6F89EF
BC5FDBB970F1EA2861AE50704AD81C1F42AFA8C2997C195CBB4DAD4B0FF3779D
39D39D12059B64E8C6097B502D3C5991D623FD166DE7C3A3DB02BE86FD262DF8
2DD5E8B28A52C9349C362FD595A48C117213B7502DAE7A29BB90CCF1CB0F26A8
2703271ECB04CC388498F04F23FF1303F9953D8EA3833BE27127E1C489198821
227C1ACEB8CA656C724A35D2B660BABC3A7894B0BC073FD16A8A89F66F7D7FED
1BB6B48B01ECC02E7933E19CDA965A8A28E60F1CDC69E178C52B5FB46AB460EF
E17923AC043A9D478C77F515EDB95FF9CEC0A5DB50A6F692DFE6BA706AC435AC
D5C96624B440908C7332AC97BE9EECE5D83678D5070A0CCE97065387AA5D940C
35AAADE17F23A5763651EEF6D328096E90CC61CEF424A54E62107D2ADA1C1940
5B9CB4C132ECD0BA8720C1A7936015028480F2CE7EE814B92E5D5301D72483DD
8EE227926096F165FAB755DAB5D72512557EBCBC43190EE840144F9F053FC850
41782B25B9A9F7A9E3B82F4A439AF0F1B4D45E4DB17DA98F338822A9A77DB147
CEB89735647EE159434E3AF6588F47FF9722B8ABEB807C68E89469C90A45164A
894F551A6EB2B7D1D182C7C67B10432575088796B7EC70FFD665EB792C140D2A
5D433D8D42025BAF9011131101A748BF02525A10C58FE79946DD2FC6DA9C9ED2
954B7A9DF5CF6F2F47FC9CA1C386BB2E6987F808E2367DE0FCFF08B9BD6771A1
2B7B344BD20B1596F0E85BF4FD69A927D3CAB63029974315DA2D086D8C9C3332
63A1CB934C35E1576099082701FCE199811DD294CC46C967A70BCB4C0B890E4E
8A779653C1E96E17AD82C65D78615D023C7CE0560525A8DA4CCCEA32F995DB32
130C39B589801F5FAF474A0F212719A259549EF7BD5AEFFA09B762D7F26D92B5
2C881153E8228D33EFB93F057E59632B9C1281DC5ED17653DFF7A81FC83C826A
94C6EAF95DEDD7E1161B20F3AB5E3A7507F25CBDE0504C023A845ACB93254749
D04EBC0F1106F62A30D3F714A33E4F65F32504181FA5FF370EEFBCD54039A07C
B8A81A3677F4EA0C7CD823DAC6570CF2807253D3A1247C8C227A1A8B322F38AF
D236FDD824E7C7679CAF5EC58727292379DC9E243AF4CCE63D0DF7B2B1A3C18E
B948028979069609E63848643B9C3417305B29F56639312D415B1E7A6CACA81F
279AFF9578F1E3A37D5FB6DD000AE628768F7369727585430AD13990FFCDB4B3
51DFD640AED1CFB4DD19EE285B8AF50064A73BA117E56E0ABF41F9D9F03F1466
76BAD9C908DCC13E41A9A0633280A6F2B466F2C552D54C7EC5656F78580E7C0E
668F00DF9D78D125449EF704750D1D074347A9CD1C4F12145EAF482EEFF168D3
385ED456A79727CFB0ECD631970284C29B441B2ED2FE4D0EEF25A94159D6E004
CA0EE326B90C882E7CA0051D10AE4BD1D474E07CA2BB35988541C96FF775BCB4
FB7C6FB85D144B87597F21C39DB6A2CA7C80E5410BFF7EA073A18AB8DB16D5DF
926C4455FE7FCBE124CB47C28D01A91B6A3BAA221351B0C59C9F6CC71B257345
C6CF339D33335C01BE6CD0F0F5D5CEB1B55022BA9D729630C537E79CAA63E057
25DEE581FAFD1F33A85B6169D4794B1D73940FA0CE7BDEB2E80D58B526E647AB
7936C6997E133DC99E733D0E2E7FFE9382A570237B4D891245EB3074E0D4D371
5723B661222CF49872856674212EBEFC4A56D4A62C5ED7895A415FC06B0EC169
287349C52D39779DAAF3AE24C8D6D02CBFF67018A565B949A243A214842D1606
24E08188C9A984CC9A15294FE77287A25FF17CD929283CE90F6421DB4A3B7D3B
B63FB1C3717A3F6D817EE3E6701FB389257B8BC397058D8B733962414281BCB5
3CA4171D36A9753F39C027DE74CE87B3170A1ACF1405ED43CF572883143623D4
6EA143206F25481C94C0C9EA96A6336C58388D785C3B64ABA12578DE3A8A834C
A31512780A0BDB4F148BDAFA2B81DFADD8E946FA4ACA6F2440D8589DC526EED1
027787E23EA108C7FBC17D2C074997AF181DEC919B75ED0EBBCCB03EF5F13BB2
C4F0EF5A35D860207ED4C1346E54223361FA1DBA789C741EFC39C26105C01437
D6B136DFE42B145626CDD287909F4E902B1002698CDA5AC4D983DD924FF55316
2EAA260B060FBB085F0367BC3185A2B9793C0F5FF3E0B7165966BA0DA27F8DF4
AF872FB9087A949AC0B319C4E438820420877D1A660D5056FFD5C15326E2556F
74364A8EAC427BD2A1E846CB05EE8F14F6693C8A0A2A3F09FEE2D299B3AAE7FD
EED53AD92ADF54472F10F9349B099A385062A0C4BF5F01CEDEF3F63DAC512FAD
28B396CD96973F8D37C19E16E3AF0E7416AFAD23482C4B5B7EF989963A266CE0
B3208E7F3A89E5336EABD9FF7AF6E0E6E181ABF8F70FE748A4D674F4D2DA7EF9
DF36E738062301846EB0A80C9B59A56B57B4F5CB4436B0898FA6FEFA3A13AC9F
CE3CC664E02DB73A03BB379BDFD1FDC40E678BC42FB3835475F099D7CB244B0A
88652F5A1EC5546FD4DEAA2A82A209E2423BF606BF81D08D68F7920A19389326
38DE190F0106460D303EFC8AD0320518BA88600502C545F92404F6B14C48398E
C8AB3867E917C98CE630833A36F018B6309FF1095C643EB591366950DCA06596
B169C966551150795AD77671966D5E1909ACBFEB342BF961147137F29D045456
07CE4FF7677CEE2603269D5F288AB410ACA8C41E777335F068007B7E87BD9D40
5F2E29BF660674457A70F9DCEA00670E67B8FE790851B16E71241433FEA5650A
385F5B558D69FB699E5EF78ECB6C3E02F2391C4FFAAD40AD96481FE070C5563D
8B869B07D3DC15B26A068ABABF6474DFD7561D55C9E03EBB587B340A358A65AD
DBE9E9001FE8DD894F48AE762283F1DFEA6F94F63BA7AD480764B8E0D3242796
12DA5AE02BAD64FECF383AB03CD1178026D5B5C1160B5D69090DD7D72C1AF696
3F1248D082EB823E670F03DE2BA917E3284D54F612C02DD4C626DA9A39081C6D
B089943F99EE41F4B708D6A5C8140FA8C2181121A40DD44E6C1F7AC9E31FECA5
3748EB84088D6EC2AFB9CD15ADF00AF308AD5D17E27ECA92DA53ACB1AEFC8A9A
BEB40F9B370415E9F681E8C315A1C697A6ABC3DD2C8EAC5CAFA7A2B028395D93
45A98973E2BCC93E5C239DBF57C39F0E777BE87C953965460BC44694D27E18F5
127D111222F954D38FBDE3BCD2A31DA0096BD2B59BBD64B98EB4657F1F3BFE97
412F176E0E7716C77AECA32C589DB264D2A274CD739F6A9A8920C2DF579A8C1E
5ABDD0BE5E663EB3C841021D30A1B105B84A93E0E8625B0B2E13B3A1099A46AD
FC9FD09C33F30F499CF5DBE572B58A6577C72DE1210BFE3CE7DEE4C16D48C915
2A95B64BB92122AA0366719B4BA72DA32AFA04692BDF509BEBFE82CBF5EDC527
5EC13567DC75F71C7B290BFCF9BAAB9A23C0B86FF022AEC92E52EF848CC7C269
868F4967109DF47B79FDC83F65B0E6BF7A62FB6C2F72A7EBB5E65B3D3EA9230A
1B797ACE38376DB0321D7D2B33C37AE910E6057A2B9793E3E2CDCD508876E200
F3B1C6FC0878C362F8A5046453291395C141525C234192DBBDDE985B647F5BB1
F8C390D4A57FFDC9846FD9BAC73E15EDC5005E81BF78DA7F6B2547BD6E2A60F8
88B1514F7CE6A231ABCAF2C2B91B86AE64BDE83BE8C804239B215B4833492106
9ED4EB4830E5E1BE4EE7195B4650686C18B0034E440AF248939790081C2D4760
DFBE929FECAA942F83D89EC65012257DA5064E0F3EA0B1CB2A23400A7BDD00CF
57932BA4C9DB0F15FAFF7CBD701050A1DB9BC2FAE2062EDB9B4584D8AE5F1313
72118C624DA5307C070394321D1AE77338F7A45BFFBA4A0DADE997899D208648
6183A2A51FD22C125EECC5B6161A8757651F2B690A9445963F346D0667986C99
4880FE8C8C5847C73B4C28293307F22EB28C915A6423433A180419BE1BA4CA60
F33E10607D12F488FB74A3B67B5F96B51277F4E7D247EAA5BF1BEC53DD019DFC
BC3099ABCB554A753D5C30D20FD1358CBB61AA05EF45403C3B8019EF864AF5CA
06A5256DB1C454FCDF55D0F95F11AE5AEEE8F0A16F037C4184CA5445D5B4F437
26D9BC891653DA6796E575D191CA3722D2E3950782EB4F63CD5071D346C1D9B5
F7D6B1F15E6143963E60399FD2942CBA82B08B0C2DB492A7F0B0E0E7B8BE3106
7CC1BAE1C8E075529DB5B5ACE3BC7BEA8756FAA7AC4AF2C5E3064D20A0E4DB70
9ABD02ECED38F4E07428732B3F6E177C09467EFAF29C0E4EC8F430713AF1F581
2EB351B6558151A7B450A258E9EFC4E9DA426F9E7F8D2811727965C75A5531C3
9721EA5C3464B0245E02013E1666DCE85044D7003430555065F649FE81E6B3B1
E8D0ECC21206BB80B638C70CBE3C3A1D7324B1ECD5C04ED54B8456404A37F9ED
6587810AC9401E1D5ADE97B6CE7BE0CC90B8843B2F5FACF7D96E1339E870A526
61736E23FCEEB2667DCB44F626372D7328C11427488F58BCB260909404D7B6FA
AC6CCDC43BCE9B25CD64E26B57F1DE47D6F9DAD18BE663D5BFBBEBD4A514626C
26F052A95D65D942ED54E36A6DDD64BE5FCE6EDADB8A3512329E3473F6983DF6
D128262D1AC81BC1636D6B4D6D280B4B84778FFA7DC977146E264C4A7FCA9801
84A9366A77EB2FA0E1CC2465A94804FC05197D7542BC10E7F9CF2FDDFE83B006
FE1A6D13CD8799FC287C5803B56F4058A19FEAC02F63B3708C71B91D41D7FFDD
6055C3ED9E8BBF8FCCFE8CC04E0FDC5439600508B99170619FAC5C1BDFB50BA8
77511453A952D5E933EBE12912B39338A6BD32CEDD4E8A51C229D3091744DC90
1E78AA828FB9ABAC42443EFEBDA80787A0F0AE54C3EB1984E30EC73AE00E97EE
B44B3FCB53808E0E439DC3BCF1F660E8262CD10AA45C67562303483314B5B66D
FBC07247CE5236EB13B7F1E8A15AB9B0819C35691F91A24CB9EEAEEBB91C50FD
3E2EE0E437297DB82A1C7EC3BD0B67F9079A1B18B0768FA4C03A720CDB13A9FF
E34F35AF150744DB916CA7E3533C73FA145B8325EC1DE08B5870DB907B2A1915
0135B79C455291553EFA10D2AA6CD310A8DF0461EFE9B291836685071A7C7643
F95465EA953EC236A4D9E44AE3E5B44B2AE9041C1553FBBD52E6A63BC9AC8678
874FC3486B5EC7D278A0D5DABB7B1BC1455223EED0991381BBF102A5FFE96F8C
6321EBF1C4A91F6DD123FAB23AA37B36092D3F6CE83BE0B858CEE31416B469C4
63637218A766F14B803332E19DBF11EB74CB38511EBE5F047EE68288BF3DE122
5D981C287FA9BE1B60C96C56CFAAED3C30CECE4F2568BE0E6A18E04E3CB10AE1
07F81BAF8D677E076CEECFC645AFC9B8EABF2D703BE3824CA55A60B004485EFF
17B0F342D1E85397223612757FE2EA69D2C9016445144AC261E705AC31AE62DA
3B30D7F5632023EB775FE7B11166F7B7B6B183B2D5CBFECFC07460A9AEBAF74F
F120E81AF13B3BAB884BB606362D436789DB526CFBD3C7467A1598A876ED18B6
5ED8CF21175C8660B3F7CEC1B38E56DA1AB8B1DFD3445233A03A03EF89F61C4E
6087B3CCE265D1B9CA8F039E9969CC0EE3D63B58792D4F9ACD92ED5A79AE617B
77D886B36E185498352741C980265570A42113C83ED727B5BFC009FC46BCA340
F4B45490CE22EF906079DDD08FF521506BCE74601F75AC6C8238797C13451EF9
C9E21B9C60F64B21356BEDE4AC203A629F16DFDC16B6687D0DE3C875DDDC675D
CC304C5A1C35ED8D6BB55D3F5FCA77ECB3172F55EEFA2CD672CF62243F83C84E
9A875E03774474BD86F76D7EF99C34FA15687F78572C5BEBFDDD80971DE3920A
63FC7025B92E55DD5D5897F13EDBB3356F9E2B9DE1FC95864FB86B2C028864FE
51362683301207BC5711AF740819C979A8B2C95DF751A861565EF6F1EF22E1DE
92C01C0EFA2C35C2588C904D214B34BF4AAF793DB9E52A92241D6795BEDABC7C
47532B4B80F77BF6EE43CFD08C97E92F21D687B8FD41367123CFEE10E02CC61C
6E632B01E6D78F54EB151A227A6A71F3D480BA152D4448D4AD49A46C3D41A3E8
AADCDB4D18753287AF757E77D486D152AFB54E83D08A531CF2148002F9A6DF19
7F87C989B83A0C5C4485E59DF38F5D6FF092E1498F8AAA6846B39BED7282030B
E02964F1901A7B506626DC023320A0166FE6B616991CA14C790915DCE5032813
7AE01EFD748994A3CFCCF84FA09BD0F0F01A5C693C8659E5ECE5F23D71615E11
F7F5B818ABBAF1BF0EB39F4DDDDB970B76BE54F3BBFBD4AA59D7B64AD40E0E8B
0D19951515A6EF4DF74A1DF847F5EDF39DCE1847EF2371151F7AC33A81947FAC
D332F81075FB9C13F2418FA6F805C3413C81B051C44778129AD1F0A7DBDB89D0
EE3B243B5D6552D7189D4AFB6FA0CBCB92E92D2819A41102348CF94F09458693
64D54E42583255CB5BD83002BD6CE5C271B082DF83FDE3D05410E324C12AF90C
DCD2C0A7D438C61F0239328466F68321F1E6543DB5D8D094EBD746F00D4870ED
44C4245699AEB2C1AE0F7A914ABC04B6F4E9B305A2A3A485C7804CCC47E5CE09
E60F0839874318C8389E298F554671C8060282EEF9893042350E8125A6FC1CC6
271EB7B2024C7CE4A3EE02D5836DD04F03C7AFCE7E1BDC7457501B4028472B60
468F2EF9010C645A00CCC95B68C83FCADF3DA591B96AC5AF66FF278D296FB809
4DF33E7E3631228134787B3503F6B4CA4588D5430DD9943FA6EE299A4FDD6637
8F2C21B7CBDECEDA8B484FD4DA121C010A40A2D48501C0253B84F8A2A807C55D
D3FA8E6BD89DB799536EE5E45502AE9BB54CED17DE5CE89D628716BF1E306AAA
E45C54C561A20205E725588F3CBF187360F7F1D3AC6CEF8B23CD1B5D2DED3C31
AE91BE8E283EC2047174DCE70690A3F832853CB465BB8B66C50948800458912B
40D5462EE2C8B6D05AA6861E3ABED84D6761ACEDE777F2D2F851752DE044C490
4C375AACD66DDFDA88D53E98FE2347DDB002671EDDD247A356EF1F09DEEB5B77
98D02A7F5935F20697F3C699FD557D7E3CDBB0C43BB4DEF74A9A9441CDFEEF80
ACA698BB223B6648346DAB2D48777BA48590E6BEDCFB274DF368878AFC67753A
F2865FF57A901BB48C7EF4D09DCA5CCDA000EA7EACBDB836A8F7E7C351277EBB
D5193878AF0D3EE755BD5958FD3632E670311F2EC6CF9935D1EAFD4894A60007
2ACC70C91B876A4C58C5970690C002203AD8FEB9231F5A2D0D2AB4D800728E3B
9EAFD25B0D6175D567B8BE86A1AC1F7D05D239E23EA559ED52660E9E16109F9C
43DF40ADE2165B72FB4B6445D5736019D131ED8B94E2FC564DE99C447C35DFD2
EA637E78EEDC4B8B17CEC6B82F4CB8D2D71A37921E6BB07A1368AE2954C28514
D91A9D54BEB95915E160B6E89D25D9A45F49A8C83174A9AE3F8171760BB6F161
77BBE759135DBB27457FB4CAE16197347611DFE63DA3C7CE26655DE3587BEBD9
AD03DDF11A158B4370BD2D1AC26209265B039EFC02996FD9F97B621F174AB176
D508B9793D3FAB27FB81EB16C19B13D47E0AC60C83641CCC1A03AFDEB7762551
32DE99F3F4B7530A72C49503FC4D5C824FA98E19BE0B99F0EACAA52EC073331B
ABC2B016D44B2CE383E58B1EFDF083A5E8E4B299607534E588FF88B9141F28A9
EF2072B2957D98A12B7D4072EDD342E3811BF6CF96F2C10D4575E5CB29FB0A23
F9C53B79046EBAC7F517F2DCF43283BCA59F109E9740BCDE6BC5813EA8EBD893
E8F5CF49F3E712EC33B1DCEBC465D8997EB80E9B170BCAF450F44198BA633D86
39980EA7B22089247B9A5D77D399C546AD2D172C31869BE10461A0747B9A8648
82783234A963F7F6C74C3424F132DB46B106ABEB7739B01DDA870C73647C187B
FD9BAFDDF89A2AB03992BDE3F834F9C541B744E1392FDD6F261EE615054441DE
AF69FE29ED257261E4834077E659B66354B26FEB3F9CC628D6C530E646FBA33D
F8ACC3DA507921C17A3DADA085369937EC131E405546F42C884AD96147C210AA
27A3700E11D47169D9703C24A911062D78D45142DE876540CB8A5EA2C99F29B4
A22D9E9AD1363B1C596EC63ADCFC01DC4E23EE35DF9BDC8DA4DA9277EB890B33
FF636E46D8D00FB39ECC497F82E037AE6F7973D66895BD3EA938DE26B6844B3C
83CC4049B8C28C8422AF1A4A96CFBDEFF4DE11AB022E33B2765DF15FC2AD5C3A
A9EA39DF033F8FA90DBA3D311263300AB0844D2262ECD8505BAC70FF538C735C
2E787D64F993B882B6106208A06EB43DE3BE2530FB83F8FDB2C2A73ED0D6C2F1
BEAD7D654540154501884BC744D368CF55C05722A9CC70357028F74294FB7770
78BAD84FE0B9E27E5EB32D95482CFA51D772077788797A24886E2B4C9795FF0B
0F8002A9678AA23BD725DB1FAA0FBC7511E663F2C7D77B4011252CCF4CFBA534
77316D1F4EA0CBA36C3B9A4D6E62346C39830C833D2145FE98DB93191B725AAD
72FA5E3061AF865047F3FE900978937F5C97252EECA5CA374B631AF0D258D6E0
B6EB6A57B74E63A3518EC7667E07BA5CD85505CF54722827FBC24AEF08F6DD0B
C6A79A2DB1FA6B3E732BAE5C829A64F189DB3FB249EB775AEF178D35B79EF490
1504778CC6CAD142D172F4DAEC7BE571C03651F7279AD4CA99AA88692E6E2D8B
04789D6D2C384883BCB1D2CB7FA127F49BD2B5ACCF7ED80CEF4FE96FEA47CAD0
1E61D6FBF0894C659A61F005C6FCE1A0E9700363F1EA7112980DDA8F55E68313
BEF4CBE85820A8AD3483FD97E9EB273A452255A0E67CEA1E27592C2CDEC33229
0C4463C89CE51D484F7E49765600A125D6DD423540BA1214D3C314505BE94706
322FD8812BB27937AFD9641C8DFE89227A85D6480DA41A9D0603EB0FEB09921F
1BBD3BFC940714204D06B4D6749FC4B0B5C900A42D124B6B6700818B0A158B78
95BB24BFCF21A45C95F7E64231E828397ED00AF98514E4E9108CF2724F58E6BE
85B4996DA82234F16F145D933BD426559E2E0419506D9E406F211BB7D7B3EAF1
47BDDB1DC60788AD8CB160817C380291A356C61CF779F455305C3AAD3206151C
0F5FF73B3F4E335518F14A80C4D80AD24605AF6B27692FB97A0DD77737F84F94
4EE4F182641F051980E8C6B6E6244E5CC893BEAB521275D0108121C2D778E08A
34B2419148A456405A6BDEBB44025A835D94E3FE7F8641EC88F3B6577184B17C
8320CA028F402E9602317D0B11D6AD0C4B6C064A73E47F4D7AF8A0DCF9F836D1
42BF83D6FE5D06149532684067C78D1E6AE1F11BD1DF329AC310725C300BA2FB
19A603ECB41DC86E8ACD2DA44BAB481A4E4E55F03CDB489351C9A869BCB90A84
060926A87FE4D6171BD9AA3BEA81915B81C56CD5055CD7F525898656AE775F61
4724D9CC2C2BC26930FA961EE73F52FC21042F143B3959C09ADE231B76140270
F0A05D53FCE216366031C22F0A9189488F94228B0127757402E8366F9388AFC8
089C4BC9E39F564B0C6FB7EABC7BAE61A2FA5E477B14256AEADF217F5E4092D1
D03ACD2FADCF15D3EDFB2146ECB52DA43DAB8B9ED874697339B1BE26C539CEC9
D08E167B32B266A48D168A7B15993737BE0E6A4ADE410D411CDA75C4C5C7864F
A957AAFEEA79FEC8C9FF6879E0791D1D6BAC0AEB0A22D63057F34DC891DE912F
F802FB88A89D4370F728D86F5DDA983EE440207E65C9B8667DDFC36995ABA438
032624891D3480D1DDD173B8FEC0C4FB4F8BD6C351707A524187ED4C6A8323B0
6771F6BDE58F5A87FEBA30C9F69F91F3313696F1B71E657E4B57AE76A3FD7CF9
024F39CF0CB960C2C0874B3570C6783A42A90C674BE17D468F96194BAB0E7440
A2520C0DD16531D7BBEEFFFB52CFF48DC6B9AC77C154832B03B6695F2C1271DD
D42B180DB90F342F06EEFD03F2FD1992B2B08BB5F028BAFFDB664E5B9CA0A3C5
57110C1DF2079D1D1C4910561C558C048716534D9D3841B5AF16508804B4BBE9
1801DD9090D17C0A70E3D47623E5304DEDEA4E5DA365EC28FC1169E5959FCC1B
022AAAC5BBE549B09A7D1C476708F23E1FB037177D36DCA2052D0F2EFF20CE9F
2F330AD8CC02B076BE18C5460A543875F22A50E11CEBA78A622DEF10737343AC
E032D575B68DEEC18D37F725A61174D35E1220F9C763BB08532299B896F31AEB
C6A011CE9FCB1A8CD947311FEC3D8B0D392F3917D6D94769F604CF59153150F6
DA98DC0FEC5BB3C47C7E2E516C43F488C59BE24C5D25D721B9B78C2FD49AEAA9
7F3CCF5E23FCE8CF2C1A670F0D0CE767CA668880F1191A68C62866C2B01B6937
C41E64D298BBA03BC581F089079006F8B45C46E94E95A5EE920518B353499331
899AAC4E256FB256D36777F29921C924A568BB61FDE4FDA4769C5AC7A2B5E886
CC5D0DB57895A4D0FD4BA821D57D46A9FC8B76C162DAEBE8F191B8B6A207E6CC
D1677D206DC84D50DB61E9320A1726A76F668874399C617438C692108055EAC9
1D15132761E607FB6A9F22321A5E17B272D10716F7A7DAA2942564B99A38883B
43631BA56A2C2ECE50836F018373E54C3866E4354B071965D14302F8FA1554FF
595668D9D000CB3842481F2D24B11A308C783BC34D198CA745C2F0A6C55BF286
2C522C1A0B28DA2E827E12971FA15789DA325CB2A93A7236A9053E460236AB18
92D1469BC1FB0B348AC3F84617677419EE3C5A7DA6F5AF2F853B779B99AEFC75
396357220917A9B1D827CB9D277FBD340DF6C9EC88F228866BD4F460643A8C95
9E59C2AC0566E254579DBC6D3BB69DADB3810C47B7DD6F3FAE90FA38FE968629
C778BF39227E2F36C725E7C91750E46A3F4B958DFAD286471E5B806407A9607E
C0E2BF9328E37E2E6B98F643209209CA7E6FBC2291DBBA87382133484C4586B1
C732BAA3EBC61786B1173C9161D38DB1EE859980247BEB3EFC82DE570144F97B
86BFFC5B7AA08A8B454B42A04FA838B93861F4929F0D7EF735D703D0B2E939C6
F29ACC0267A8C7EB33112E96776EDED7194C7624C82B408139B5C409737DC924
27EFAD01C3AF05A2367BDD4A4B66EC0FD9F67B5E2B8547B549373A0951218823
3026A24B1887A52666F858F9C4B19B9AD0AD2FFE90F10F9FCD090D1108CDBCE3
878E032C863869E97CA1FF834DFA815E1F3765392D2DB2F4AB03FD01A267D2DB
7CCBC9089C740446C3D311F79C075C29BDB9E22928BEE112E64A097733326CFE
1B7AB193C5AFE1521672B0949A8BF89A2A5C024B409C9874C206529FFBBC602D
9C38A6F3A582A15B409120B2F2C89B465DEE31C57B95620A8086A832A298FF23
861D0CEBBAE6704FD74448D86F46A651014EE83702B170A8988AC4539790F063
28C4F43E71974DB05F7625853A708D4C043017B3ED949CB5A4D06A1D68E87568
A844EEA0F37BA6B6BB5DE196AD15DECBD94D774CE7F978258C62A83155E2ECF9
983D605856B7095DDEF74EB2957B4C6E946C839A9316A619E04E0812CF1C03E3
30DC71822D2D94593BD262989279A82B165EE09CCA99EEC8C08CE89EA9BB612A
50C44D7FA1753609236810BD4DE79C70D99D041644154677F388A974E690671C
2A468CC80625CE98706B0F99F1063D6BEED67CA5D124610DD30BE6F01AA969B5
FBB5F588B1C6B666D8E550D05D4A09D5D79DEACDA150CD8289C4CE9A032EC0FB
86181FE9DF97E08167E987AD73E4BA428886121783394E987600DD4D04CC5246
DA7AA16DAD7A3EAE2BA0568CD8D187F24F66C3477F7D2E7B3E57392CC9346D60
C3069CB43BC9041D85CFBBE048F778AFBDC5179EB6F05B68D83F8895F9B3C51D
B2669A4BC0D523EA8593808367006315DACEEB416B17CE07CD19AF2B72DBF349
7AAC15B2014BA7500062773933387A634799AA39BB6308632CFE3E283AC8EAEA
B21EB9FA4D1F2E477E3610034F1E8313010F136B4BB3C0E437D485AE4AF9D507
BDD4173281F70688C4513BC237A85EC709617D5629B882CE7C5DFC268941D31F
C576FB646D235334174E2D4D399C82934079C4FD587BB68F6A6309C9BC012481
229551645EF4A3399C2832F197C27808D7DC3A930899F0CC465018A007581CCF
8281A98108E9E9DD073FABE327CE899825C0A3B9419B0A4372BB66DA8909BEFB
6B174BFD299512C3B7FE6748C1926774CF9243B42E3970E722AFBF0994EBC62F
B765433EE37768DB5828CD0B5C0B0016C1B6DE600EB5320E3F85D282675D5743
24EF8A03AB37520E65B9BE6F2AB2EE4F14EF56C82B0A4AEC2FCA9AFB158160F4
526FBEEE7FBD26C612FED17D8ACB25BA9BF6290324C5E2B0C021C5DFEB280354
2F959A9FA0E7B2881B1BB0874B6B97A93712F657836D5CA6AD5472B6805B7155
FF5C7B001548733F281FA5A864AD732391171445AA756D3EA4951F210AF015C1
A1CCB0EBBBC228C5C664A9AEB5C38C079FCA4D7E86CCE4D7FDAB1E6E5C2A426E
6E1D9FD7D8175ABF947C20D400FE66D9AE43535E644F9E8EFA78276B24984EC1
50B62DC8612B108D94407C1E5AEF9D07BAB72EBAF53045F201B87FF39E7D3F4A
4F821958A2702BA7542C40771F1475B919C0E0944D0E2948EC19EBBB56D89B45
57C7192CCD21A5252638E44CE1ACA4A57CB6961FC49DBA6673C707C4F13E833E
87535CC8D91C9558A8C4151CB0BAAA224DE582594D9086BFA19D195B6031D514
A8292504F21D932CDA827F740788BE148D1CE485DAB5A052F10C2D13D52D244C
95897C2A1E4A71ADAEEB2866D57B2CC7511A3A8D721F0BE797FB87288A3E0409
BED84932243543F95E8BC051D3FAFA942F4689ED3C9E2C2250B7E05A992E9D86
97FE6F3C62E5AE7AA17042EBA21665A336FCCF3DE49B119AB7E81EE1E6127C86
2D0427D31ACD74C7E2287DFBA5B9820E708AE8174E097FB7CA6D253F60205090
2978C2F93D9CEEA8E4B391FE883E591FDE4CCEA270ED2BC4F1E12B16DA0FC8B3
D25B226A69D78FFE14B01D5E5E71E3A963CFEC0BE531395311A04963DBA5EFD8
50FF4FFE0966952A9288D6036883948DAD8107B35E6814477A37F7E714CEE395
8A1D7D0C0F41DCA5256C0114B8E1CD2FC41B64CA1D75DDFFE50D952ECBFFE371
B3857931A2DFC474ED1489C90ABA16C908F3F2C40A0C1C0F16071FE62499B4F8
03A0FD7DCC0F4E58304AAC2D9AD27F8A67E78A461E5D1D27E5A37C44B0D67604
9055F26D0668740549078FD687DD1D6E73B1D3587E029313E63F4CFBF2658E77
C9317BD6BA3F22D0A529F5CFDADC5E3725F957D20362E235A2C747B28780F25E
507D65480BE1246F9D4B19EB2C4DE3B470FAF311A628A1FC38464A23933B5A9A
103B6E4F6AA1C3EA58B2DFE219ED053858A3BF6510B17F78AC39FAEE851F7C95
5BEAD244DC4E7C8A9BBC47252EFF3CF8856D767C6FFBBF1B808AA853CA520C86
F835F44C6B412ABEC735CCB131947CB303C5E516F18F719D1676B676EA69F5BA
6D5356E736A73C909A298FB39CD64B48E648B70867273E139B180C1C0B4D1C7F
4AAFE8BC18834A5BA7C7F72B11F0D55D814E4BCCF0AAFA83C3A6228FA379626F
6A5CD26100313402FB424D2C14DBCB4980482E52900B451970875A8A948CBEAC
4DC507582C28E5C9A9FE6AEEB7B2E6C715C0A3239331A8D480B26A541CF978F1
C6A486BA72E068B5CB7BFB3678A6FA47A599EFBD79120D52E1A8D0C140D9870C
55B799710662B4FE3DB4213ADE39DE7620855A6BEFC921B4098F723C5A756FE9
DA1A5E8BD08E2073116C79603FA33EFEE23731CA26376C45FD4BE0C2CF11D8BA
50B0442D3F5FFC650919BEDE7929B5E2AC518322282DC5A5D53D27F0B7C5AE1A
4F3A91BFCEC0A89152831603EB42E4A17C752C2B9F6CFFC20C86C923C027D640
662905F242D93E02C5B5E30319464756BD98269E9D34CBFF72C7EB5AEBA5C7A3
D9BDDCD1ABD7F3AE4C9664B3230B0A4A6DF848316629CA477F1D896E7E9FCBBB
6F12EC362CABDBC41E7AB6424D99EE86D5E90F3490FE72F3D24B4C2A91D33F40
640B72F7F962475E35DBC371B42CDE277040939666B219DBDD69D50BE89E675C
A484D5401AF7E88BF4C43148098C2957C7D4BB95B8F45053BEB6A3096D63762A
9B14F26118E97A2F623C81E17B3CCEE92C80310F76CB845EB469D42C54EC6250
8D026B7772AC32D66D201E49B504C1AF6999972C8E5416030D4076D4C09B1676
03068010326DF413486531C69E8D6D3BBA2860F25AAD9DC341467C26CA241B22
ADA57600D753A9E426992ED6BC8BEFEEAD4B80FC2D950DB053BB719CE9B2D2F7
5106CCA90E75B241810A1BFCD55AB88AE676FDC3CD98B14DBD2A12B231223B5A
0B48FD84179778F22EA3CC56EA48A30679CFFE9AF2EF951107975B9F6A0449BF
5C2B5E307185A4BC4E98F17D539FB85CA2F9AC4E7049007B08C184E8B373087A
A07B30999765FF58F228D444356981FEFB1A9D8FD2766428C892CE9AC85B17F4
E174131F2F2BE5FCB1F4F7D0E0F11B9EA52E13C7EEFB507FABD3D44DE5C2197C
A8DC682D6A02573B231DAD3423D0B3F75C17357CF7BF34F9857AF01C466E180F
B27A193BE670D824E18CC2D432C5D762350DDA75BA1A30739D4955DB0E760D67
EA021F664B97A732A9F0A2A3C9FBFB99A8B9D470A85B7EEC9E8EED9EE75E9392
64C5FB71AFAE51D0A8CDD7778DA0E82D9A154F15F520450DD45CD823767317F8
52D1F1434335563B488549F6380D5EA6644C29F7E3B2C5BB34C898FA69FD5E21
F94012DF7A8E8FB47A9100CEFAF29F5389BE2115F62089E8A5820A63D2A652E1
B9914F30845590E965F2912C6DA15A2F41D93EE471C51C44099051974F06FAA3
ADDE9D99CD7F81A6CE64F30F38025EC70D2E94085FFF9FAEE32602132B7737F6
88CBF0F9EAC570CDB156BC729EABCCB7880A988CA064E0AC4EE68A7CA3A7201C
A4B7538AA3774B504B6F0F32140D83CAE2BA5026C6EC06778F4C4CE6C3D4DBBB
A775AD0CA98417025DAABE7FA1ED4ED40A191CEE37AFDA3BA89CE8F4BD8DC88A
8AF1E431AA03D1E3D6FBD3308C58F1FC1F8E15BAA79C549CE3B80DDCCB0B9578
8FB2412D985C2A14B7E7381CE8F9C212ACD9F5C3BD25B22578D909C0A0788620
17B2A350E32CA9AA3FE456F6ECE4D25E93202DBEE517D75AF87EB4188CDA8E8C
71F0661E83FECB0B8694E205F2FD37E293F8727DF1A28A37F667651672465871
174498A699AD6C8A15E93EEAEEA53403E91DEDD34972A512705863031D86B6FB
D1126EF55AC0722BEC75EC3DD97B56855511493E68C762C83A6DA63D6CEA621C
8FEF3830B1352BE683ED5DAC77C9B5A9DBCD02BA318D62411CA5F29ACFF51608
F604E53E8224611AC6C96C78AEC10AF6FDCE29E01DE3825319F98CA975B3CE90
F0C4F976C3AD0D99A7BB39546BABAE9DB7FC8D55E4609EF7EE5FD59A8FE96641
3CD5F9EA63B5AA4C4CDDFF8FA01B271AD3FB624642E2949403B6179D3A010C42
895A9DD6279097919A225431CFBDD2135C404B697306D3BD48ADCD3F6D3A47CC
BA0E8ADD37DC4A46F304FA39E6D6C863B5D673D16843E079C3D9535519F6AA8F
09052A5893A5D3B6D6C1D37B04CC29C491F9D0469E47F215E068C296FA64FBEB
6FBF09CDD47E0A6896F9640A0E4E7521F0544340C3B4C147232B48E4DD5294A3
CD428B7B5C300106E02088668BAAB565BEF1E4B82FC2928AF17D3B2522166CD0
616D5EAD32966A2FB00E4B8A25136A7170CE89B2556C76AFE200034E5DDDA351
E953163B7F1EBF9734593EC661D59C48A557692C2BF98A5E2EE874BD5693AF04
F8447E9EA270ADE3A70AB491FC90BCD65775FDCCAF911EFAB901273EE28A1AD2
69BD4183F18D16BEA5DE2BA1F785DA497489048CBD60E4512240D64E725B7747
18D8325FC31ABFC89046C10DF547D3529C109CCE1864549E58198535E9A91316
A90F3B8A854B7EF90FA0DFA208E4C47AEE28237EC47C91385864B2CB30DF6E62
04BD60A9319FD7DE18150D05AFC0F4331A5F859DD8F7736F63948D2D81DA2216
AABC64699EE46ED3158055081FF1E5302880D41544933FD3B153C4EB4261A0A2
698CDDA0C538840CD4A95041D9A4DF67441B61369BDAF603292B4792DC563AD2
B33F99BDF99BA0ECFBDAE376C63F1722EF8BB98C7E91555A8A575E542E5EEDC3
1508314E1F7958ADA63FDFA391F81C1D4564FF1CA123335148F18D8782972757
A85F1C26CABCAD489DBFBF3B6E91F4A1BA34A297DD488AD78C5B638EDEA98A63
5367D08E36B16E3DD002B5B09D4933E883D86248B838346BE659F9A6233B2973
A1A4A6487B58746CDC1EC49ED6114400F4724ECFF05FE0BED47A057EAA83895C
8936833C52C5C99A0D5E92D960B9D611BC3F8DA447506ABCC3C649EE21863E4C
426DE4581147F8FF98D92444D8C024312CA55295351E5A97891FD65507FA7272
FEB820863B153273506AF4AFA1127CD05162B995853B48F88A50477B365979DF
29FEE3431178A5273A118D8D6FE3534FD7433FDEDD2B029F70142BBCACD8F850
5DB820EC4C7998C4E98160BD4BA67ADEC116FBAC486C6C8B78497A5AF7F0F8E5
B487EDC7DA9F8F2F10AD1C5A025B577077B7A93792DF4CE17DC1B4640472C56C
851603BED90008260F9A359BF8B724922B0226524F5C252F4033D840052300E1
14602FA994934B3FC1E65AE0560DCA9DECEB35BD7BB84F79E075502505E7CD13
2A157953AA37F8029AF037585E31AB6DB7538DDFCE900E5AFC31F3C90F89A85B
C37B8C10752179A0D6F1DC95A5AA72DA4818E2D65AC9E001D979120251B61A56
F42F4214C46A372A3E51BAE3FC67B5B9104D80A49C9D8B4684778834E7512FEF
D649DE693BE3254D4862FA664BD52DCABE737BC1A5A26DBEB6017EB4FA6AF0C1
6C8236EC0D199A4822752255AEF2280373C809E66A8DD12C7DA6E4D8C5B79E97
D0F2752100481BBD994D8880B4A972C46B4565EAEF261C6E4CABBDE97C6B102D
1EB690F1A57FC16D953445222D5AA04D953AB467E743D4A7B62CB9123B4F8715
B58CA0EECDD4CE907110A8A93B288CDF3EF84D35018CC568163B937B2CC53CF6
466103CA3B5CDD02069CAB2DAEBCBE2350536D39C9BD1151D1978A1D3ECDBFA1
57EFA291F7837CF697A1847B06DC03B613D3BCB3784407905226AC4AA63AFB21
54D340C044039DC0E092573197CF40B805C98D42EA42CE316362CC6A0DFA904F
C46EC07CCBBA006F82DF3D6DE35527BBFED7AD00C7802A1C777E8C1A0A1A534D
23F40033F27B806B616AABFF0BB0E211CDD8E7EA0ACCA62D246F88428F6AA3BE
2843036E872B2A04C1BC782A2A2621514057156F6626912E1EB334EF140A7F1A
DA6DB3F2E95B8DF74008A15D10B93403A641B4D98053700125D27D8896D10A87
4EB07C38B010C44EBB481E7341CF50B22FC945B02A551D92040BD17B484CA539
85B3A527B14F32AEEF5B622B73DEF5B98FBD1E10CE46FFCFA3EF62D0FC0D9343
070BC392C5C86B72FC995A2BBF8251E535C79F8A2DF891E2EC776F5061F96F60
5D7A072513C78F71FD93A5BD12DE3D68DAC11012CD80380B3003D2460A00AD81
40E87E33BCF8DC6AA4E721F5B89AF97C04AC2EA18F3FD376A8CDA050D287A8AD
92C3DE92188D6B64BEC4D74954FB7D8001F7EBBE1AF484BCB70B00195DF9C651
AA360DB876A2510DC749CDA64277E23F7266DDB047F5283B96A6FAE9FD184FDA
EE2BB532708738312865C1F737A68F2BD90383660ABBC6E67CC3D1AD9C4859EB
09AC12973FFCFBA57F96D813EB3C12C4994990DE1A6125DD63DE93A35222AE1A
B9CEC451395D9A397CD87A061A10155C866191CA8B0BB1D63983489D3CAA1113
C6103382457C2FFD3B8CC64F9DDCA380CC4084CF47BACE5AB86BF3551A91BB94
2FF755C021CBDBB6F9000AE0F5611D45887CE2AA5B8E5D83BCF78B96FC137496
9BFF70780EF0780130B4EF3675C59B9EEE537D008DA64AA6DA5289ED9B957022
5D83FCC51677C8838D0C166BE74F61141020ED43191D3DFEBEB43427D4B8A7F3
7FE177C8B7C24B02BE2C38010560A3FA40B336DE42B6478A3B101DB2851C2545
9645A7DE7CB1086F9A2446DD0A8DC623E531EA276574CAB6FA3D14EC60A24132
73CCEE3B22F746C851A41C3FCC3E4B30D3C7EB03EC82C2D9342BBC0F0F89FE47
7C2413903A61E139B0D0A1F46D6304ACA6C99A0C9920CE6B42AAFBC28BF1A25B
B7E768466CA2709777EBBC4CBAADAF49CE81205A04E5329B8DA9B549E957DC07
C15836E22B25EB19BD309C7B7B275B9CAE8C58DB87D94F5D639EAC9CA7E40F96
3994A96A6B042E6C0D357B1C3382A19DDB19C84B8D4B94FCA8042756FF109F5F
1586890E9F2A1A8AFE1C8F371F76E9608205239D569E264DEB4F1C98DFDDF906
B98BE6B4EB8D7C213EE87C761A4F50672BCB52D8C443DBA3EFA912273A922C37
268FE7861833F1C54BAC837E0D83D589F3CFD097B2F85F9926557339FEFF5716
F817647C9F9146DE60BFCFDDB369BD0AB2CE131DCE3F5B17D645EDBC0B373BF9
7CDA7EA88EE90030BC2301C2B38FD930DE39A302F18036017057DB9E01B9EBC6
085E98E2BBA0D51B8F5011A52A59AF2A7326A9DF6506CA4D0AB3F1A421931DE8
BC1DEC229DDC39C73550477C112E4E3121B9ABBB6B17B135BECE99DD0C481C80
196E5F903AEB022E81C441D6375466FA0272B67393DCBD86FE4CD039BB44D403
7E72AE23DFFDCD5D253FA3D3F64C6830522219355AEEB586F97845672EE0A627
22624FFD3B421C52AD97BC9C13B5A57B9A81A3249FCD05CAECDEC26918401792
84420EEE6BC49C7A06E8C56187732608D0599E5C7045D906C203011BCAA93916
D626F70A6370A6F0E20A6BA38B20C935E0EA158B8AA696E0D1CF451FFDEF67FA
97D58086B1BB39BB1AF6C0BFB01512BA34F3B17063DC90998921E687F2CB6EA2
98AFC03BFE2144681E7CD633056BC77D95A916F54291575E3FD4F0CD0B7217D8
3F2FAAA790B57BBD7321283D1CC5B4CBC20E1DE01FD075EA5F795AF1EBC820FB
A22DA80EFFF85A35FAF9EFA97C5FA81702C04838B81829312A1CA37315D2DE01
97C5D6AD69FA6B299BF0C52073450E1AFF578C704EABA8A055F8A2E33E28344A
7A9EC8F2CD1CA6AA00036ABE402586C4362F28085255591314013EADE9693629
2AB75F9246B3CFBF701414C5323B1DB0512889A81E853777CED93D97573374BE
6F4A60F49A92FADC5E4EAE662CE9A2437FA995FE960D0AEDA4C58175AEA0B833
FCE235D431FCDB959DA275A8CD80D3AB87AE91698A1EC82886D2B9E2D4722E0F
4CC2BA6084FEB79D7AC7B200FC8E5F452E01FC260CE9AA2782A9937F061B9FA2
0CF2EFB32200703EF58C425B9A7D23F45E4D77035D241AD41FAE4BB693A50E24
F925F3A8D8814853EBB08AE39BC8B715A541515BA68D3264DF633DA5C332BD31
F29F0681E5783F91AF0CC0EA7062B322BCB5CE381E09AB94F1A9224922B4A5C2
3593F8765E8125576C867D0207BD48FE8067168C4412FC80CDBA62F8B5EB310C
D3F2792ACA6EE48DB376528012DF50DB540EE0CF4F6F1A5E8C10A3A63EFDBE4A
15FD0D0C1948BA5672A0410F3410CDE75BDF3E9C274F3DEB621E5F7B22B4B997
24F0EB2894AD7FEE67A4CFACD5B7746F7C8813E024F8FFDF0AACB7A40AC9B95F
F30449A34912813FC9C3D3F52A2DF25AFECDEDDC7CB8FA49492F0D501B291C9F
A2085053C42ECF7716A18FADAEDDBEBDA6B8EF328EA7E5E6F658D88D55F4B2AE
37D9AB55B916A3E13042CA78F2DDD02D8632B42602CA05DA4C7A901957507D4B
848AFF203EC104AB6EF99A31E4B657CC16B87F75A33EFEF432A1E2A8E5FC47B8
C076261FD4F7A808F1DD37AAA08EF4F57EA64B4B227379852030ED3E3B74F586
AEDFDE61DCB3DDA0653E4D3E85B769A93DEA55C2086D8E71C346944F4ECAEF6F
177AB7EFE6948E6D40BF379B2251E178D16A0A574B4BE8FA1FF0E47465B717EC
59C4FBC9DB09CFF59E8DA77F5325D604664878046AFAC7606ADCCEFE9BFC6BFF
C24302E53DD9BFD2DAC21A7493F68C61869C1FF47571C512051C204DDFC05D85
D0864371B04C479345CECA679CFA855990A3FA75408A9BAA1BBEF89291938FA6
0F664AD01B5C57AACA10BF76ABA344AB66411C98531B2CCBE9FE78BC1AE4D425
46D0532DD56FAD7828E5E203F328AD955AB433987B2291F3BA530D6D6142E4B2
44E66A85B34920F4380566BABC68CC9F231C645D7C48306191CF1DA42072D77C
AB6E4FE663B434E2942DD136DB01A70D1FCE73C77BFD275F6B28CD39A702E78B
943B79CBA4AE54163A64347D47A77E6659889DFFD18895A0360CD41375E86140
E624DBF4731A3FCD38AF3F95666E547B34C53C1B48799F6EB6B3CF2F1C5D88E2
8671D18D03697809C66D774B6716C278816837D391DD6037D795510E5BFA47AE
FC387C3100BBAF14B54EBFE8A379CBA402F2FF9C6751BADA9879FE4C7F10ABA2
FFD29648C9213E4E7B86800F5DAAFA770872C502A1C8B0CDD1D910961CF04064
93C97CDCDDA1FFB9497706044BD054BC11E4052A9D64B50B488945EE7D39347E
AA6B23D446B4382D5B2B8F726DCF297BECFBC3211F1EE8467E1C74599CC66EAA
DD9BDE2357893745423C57323C6C412DBFF9C679419D50FA3FAC0E5D18F18D5E
E3D96E052BB3F55A64CA142545200294DE98A480C5EE6FD28B3A9C698230E883
4B9A083C4CC2401ED331A25863D89A01934A2E25297FCAD9D6B9E25671F9AC59
9A40C37B2439C06FDB883AF73C7770D868CC596E737AA250F8690FE7F69A633B
E69C0793C5D705A4FF541539D98CDD59E731856BD6A9013D54BE97952114663A
B963247EF61954A4B632C355DA8AF33E9B551C0F8677C2F7E4E231A76E88F303
4C88DF0082E6A8CFCB17DCBF1EB1C95BBFFA540EE5710E884911F452C33C0BB1
D87551CE86D4E2DB7607F065FACA01BF64480CC0B8630A4FB421D079F3741B29
6A58F0D5B4E47DECF5846A297269594865E9453E9B6EF227867D9CF9549B3B59
207DD27658A448FC502A8DBF8D959B786221774A27ED1A057EACE9D30FD01A92
0F287B0681169A88E0C8C0AC0CE55489FF45E41F46751953C4725CDC99096AC0
CE936BB72B6E39E53B59DF689B910BDA0A0D31894C3C4DBAAC28495511637ABD
5A6967E6004D88512A8506E972013A8143C8058FBA8085FFA623E6D3B4CFF4CD
3FCB4805FC061CD314D057CABA61FA9B114627BCDD63CC026A4FD64150F15AD5
5B7B4CE4C265D19E1F27E9D8AE56F4070F93B39AC52B7CE4987F6F3AB43ADC93
10D72D2E95BAF0465FBF33897F01997D2145F308F540EA78CD1DA2FC5C50B24F
253C617D02E470476B682BA5A46F73CCE5E95F788D145505472A0387AFA83FFB
A9F56FBF0120CE27D09F1F44950B661201817024F8402EB0F70D88A858381ADE
A7AD2CE7823E097E141B3F1F2F52F472B6956D0C2F54961F0A5F3B7C3CAFA5F9
9ABE792B377B97E059D705A0D83C77B050DC34F75835683515AF6C2C2F98B977
615A23E070C454B0AC4388F247E2C8F89C9B08C7FF34D0F6AB79F92877BEB707
E5C30B28EE7A8B47D678592522EA5B2712F03039C416DFC8670AEB148E00C233
1B5389728758241D75D2E3989C3BD46A0E19F9B46BBD340187850F9073E30FAC
A80736C0BF828DC7E5A8F8F45257AD5968103AF57ED0F5B6AE38AF7A33B1B4D1
F7F8BF648C8995F82563C82F57CA96D1BF8602F7306674E6180827CCD471B3DB
D2036880E75700BEC675BB4B5754D6AECB8E804FF11AB50F30D846DE83332F3A
EAFEBC42621DE801B51A63283F68F305D9CE1010AFA72ACB46996738D129ED11
8D158FC03566D58F8EA0CBA27A96351DC61E31AF2FD47D5131EA3E0AE6D94408
A4F4723F6678160D02AAA8D166CAEE025BDBAEDC9E8624BCB9BB4B17DF59A6C3
D57C268A79691ABAAAD1A60E2C2AFB5C44CE30DC61A2916E6B560C6CD41A80EC
051E8759A64FB8D5EA76ACC5E3282A3F2FC77EDC58A4D40CC542D56DF5556EA4
DB75063CC1841F45108EEA0F42537F84D33B49F983916A252164581F25A025BD
7D133D6DC20173F649273B2C0E5055E32578B01877424769AD11C53BED092CD4
C17A17A440688F122CC8041D54CCECD79A73BFB38AE77E4271245E983B7225AC
EBD39B1742918B32AE927A7E06762B314079FB3D053E94FE50E0274FB3CADDD5
7010FA8F782DE5A4641533D59F78013D2045B476C458788E6C283C6F69EF6048
D10DC9460D14489F243790A99DCF26716CBB803A3E42887AE18557C848DC5E5C
A3F605352D66C5F8A15C08EEFF5E28134ED8EF5F26D18A4F0B11393239779709
90E60DC14F1F22085EA743F9C98587768C2816E4F17F5F6947C748125F1CCF35
0E3930ADAE5249B3D5CAE21E4F45110203360F1941FAC5C151BCB073FF6966BD
9325DD15F119623EB3C841021D30A14DF0D20051140DA007BC25086FE6966A7E
738C440CFD3D14A78F5E77CF492A6CF911B4548FBCF8ADC49D4793E239E391DA
87E6AD902DC406EF48D10C411FF88FEDAD541EB1711A5F0493F2B71BC868D445
76D44A44F108ACDA4E402DBB7F245AA757A20C03DA2FBE443764E6A62177C66A
CAAA20500A09579E649218066CBCBA4B3FCF3BC8D6A3496230AAF1232518D7DB
F3E034E2160F15F3A79225FB98E5732484C6FC1C6B6A39C45F8D4D054AA38BC5
095FB8C9F748D85F3BE34B4FCEA3A463D373753B20EF39BD210F7679461EA8E9
080AD795A6346394F2584E8052E062F377AEDDCE745560250354EC092F3E1234
B3D8EF2B59C48E97CAFEE98E026BC5B3C563C6AF78A51EA35EABA4F6974B2081
E860F7353B42C78250256CA0577C96F9F7CAD55EEFD55FB307A8A8EACE8BEB32
9DE3714B9FEC0ED37D1BD8857EC3B6125A8065E477C72E6CDA1458BC8DB8E1DA
62D42F448933949BD4C6DFB8FFBAAE1AB34DAAFD32AA716301301AF688FE61DB
04B6C319DEDE2EC73DE49F4013A0DC7E2E9371B10EDF06EA99B3174459E7BF82
AD59FD366E775F2BDDC89D5E3385487121FB3EBFE72A4B9268E1F3D065E8B941
7F5D4C912E5AA2C99D424B8A3E51D70C6EF7B74DBCF86638C0DA40DA83EDC5BE
277E405D3F6CECA92DC862E329306DA2B42C7AD1CFF4418B89207F93A2E52F9E
B54378A3122B33F45E02D310053ADA87D3C95DE1A7D757482891F51949C21843
AB5502B2D6ABBEF6B43FD86BACFDEB829745D6D04E8203FC9EB93201E711369B
FDEEAA9F37B9FE7222380F5C01AB4F9677F888E53B9D0234CFE3D41825336318
DA007E49C32BA4822F3C0358968D8A1CE952B51C319F277F0F274299DA79B8B8
431A5FCBB6694C62235AE7D926F8A4E1306ECC778E7EACA37F8D827238B3F246
06651E5887FE8F643F078AECD4A3FE4EA0EEF3F387D58915979287566CCA988A
4ECC0DE847ABED596854D54DC3CF3DE605BCD94CBCC0EC2F626498A0F0C355F9
4E92659245514FB4813271B82A56592F27FC27F1D49D5FF4BBC0E16231807B90
50C57FE64B4D449EFC540F7CAD8DDA990A4E2CAD565335710D370914F18543F5
8B427C2B54BE8DBBAA234B3E3A270973FA38DA2C48FB1A5B88A5D8E171D0BBD3
A154650A80A9753212812DCC668603103789AA32BFC1FB1353D8E6C53325AC30
AEE5BDF71E90DA343D0839876FFA076C1A3F781A411BFAF04CAA4BA66C223F2E
1D558A102BFF6B0FE2B1CCF6F3960091DB6C89700E889B5EDFA8FF2892B51567
A60A2F4C372A8527186EAAC064AA1A5B3C73629C8262B1EBE3EBA0C7901A36D9
738F5A56A6AE9CA72C052F20211E182E7EC3B32FA2E6367B186BBE42E8044D7D
F079A3C657FAFACDC9F059CFDD76FC7D55A650A1F10056070756BEAD932F99A4
72956E5823F1167BDCA3BC0C2C9E449CA66008079D3D904F60BBA14D35A8FA57
F147296D3F9D09B229FE44006DD7C512BA10495A8074B63C5C2F00CAA693F686
DA962958C07E573EF02AAB076B078597B2DE46F5A223BB833E98F45B76D98F7F
115A67578C90CE30A316B3B55A57A47A53B42F29771497E9F5AF68E2540408A7
10EAF3C0722FBC29FEDEE39359C32C624E99626B08E41816D7C97F2722710395
910B9FC6DACC8F85502D238269D13AE4FCEDEE10B4C73C9624EBF8ED5BA75646
FC683A35060219D48D74707A3FE0220354426488C60CE72A326B72A26F7C5BFB
146E5B38643081A91DA1D968D21435A18369FB3E983597014EDA4FE2BB6704E4
9C9537F99607DB6D77D6124D75B84C9804AC607A6777F03F6AB30701055D27B9
479396116CB75D3735842F6E706AE8F4240FD16C0FC15C0DCB4C59BBAE3A0C3B
766E84C519A5C107862C8FB208DFAF36E0098EBEF6C27AC845341B9E12431DAB
4869A982293003C83BC5371513272676E09E5FEBC222CB1270F3A107F5418942
6BE04FEC25758DF07153154FFDDD3322A2B0FA0C1AB82116D999DBF4C5AF291E
536F87ADBF1AD9AA04D7DE2096413AB8B3C9EF1F67304078961DE665ABEDA47B
214C73AF9982B447F2D32A5266E081EC6D193B6D602E72BD1D95281E7B0974AC
9EB0FDC75183A6B338DD38AB8C80A16255CB757C6D40E700EBBC1D5C66861933
50F4A43EE2B384A0F8248A2B8B7929EE913FFFE5D7E305A01C620385786763FB
6FE9ED851FBC93DD94BC03CF89CA2C3704DD22B180BFA90C5B560C52B771DEAC
9A8B5866AF79CAFF240B1D5F1E1C12B0E61751FE10EF24A0AD0FF9FEDAFD8DF9
1CA4EF832E7D6DF3E9E03BCCEAD202AABA714C77DFF82B44B4D6E4ECBEF48C6E
2F39CBB2B53B18DF7E5D8E06BE4D1495247B1EC6571E5D15825D479AF0E6EF4B
ED6595CC97E266BEA49D45404044876DA6C1BC54F67E22A2044B1C0EE6096E00
8AD67226A9ABBB491C4139F0357BAD6CC06279077389A26E7EF7030CB43C1822
213846CBA274592C953BD5A9CBC996C9AE765B71717C67A41830248B5410C7C6
8DC45383A6470A21648D9F06AA9A64BA36B4A8C4D61A96C406DF4CF3A843159D
3BAA53213E6BC097630F9C4A607450E86CA6F67E7A9AABB0D61E6D0FFD05F8F9
458368C658B80F1F646F2F76C188EAD4EEE325FD0291522360DB77BBFD9AF092
BFD96C9E359039CD693DBE128ECB081CF766695B7642FB0FA5034AB0C1723CDA
B592A57DDD60ADC12D2B0A1053F81B84A0E660153B9FFB0187E96B2A651F4431
9F9145C779322F922F1633C9333D9E6DA69D47C57E705CCA2F4E147D22A39128
73A56C086FD9F9CEC5996EEC517E7592DB1B5DEA54A94E44011A5124346FED17
7F0175475BFF247EF49F5F3B0F0BC04C9F47B5B770C2CDA8D7C0385B2F5642FC
8CF949B39998D357032FF77585F4A1A66C04F9648E491E0A306ABA070CD90DCF
7072C59C6D53A7E79452A82F465D5FD730DFC23E1FDB66ACC2300F9BEDEC257B
47EFB3D84D1CD5BE08DB03704598414313C3DA64B8B5CDA5D619E559067BC2EB
F7EE6FF8AF8CFA76772D207D8683066FD5D51EDEB31493FD4B4F14D0F503064F
1C78C7A6DE3181A839528F7AF8C50D56F0D06661ECB6C626F298AD41CCBC9D7F
3B1FA73F696901564423F1F8A3AB5AEC5A549EA5707353F50CCC7D95F028A0A8
6C028FAB0F208AF0ADB5AFADBC69CBD7BF59F8126CFFB06C76DCC1DCFE7E4EB3
A51D261E14FBEDA4E642BA3F9CC31CC7B33F9237244C917A134DA396C918F125
BC281516BD1A6C351D2F98E9B683D19E04E7C06166A413D93B4EC3D4647C94CD
0485345804FE321E136B091AB3830B682067181024DAD186D4075911DF2C7F74
C39F42832013CC524964F421E6C968C58E8F2A47BFE5FC6A0EA6851E6A19DF2F
6C55C067882371BACDE2458214A4AA87D2D24B171E4182858D26919261F86AEE
E44046626567FDE1B4E568C283D4DBE99B97E15A5331A093C1C1CF3FBFF392E9
5096D6428DB9EB523CFDB347EA550E36DBDF21694A1E8AA0C4C65925252C767E
08D0EE2C20F3D912B980DB4519ED3CF567435DB54F4B426125945525081AA905
C09F7166E8F7F80194E1DB4A8ABE35D31B56450C6D788BBB1CC8F630B89EFED0
A0AA9B58CE598FFD767C103F9D50F2086F0B643A4E0917AD920195F43F13B188
33EE2A40CEA48989F202B496438B26EADB953ED292A2CC170CD864C03D668BB3
81B842EA1C6D37C37865B91C82031081DE16433B664AD0FBCD335C4F7DAF9A7A
C45D5D1DF2A3EDDE56E0099D0E096BDD3DA83B95C9D36BE27CD097E315354879
4D9232AA20C29B6CF38FC8562EE9E4F7780D21BB0FE151482CEDB0C21D3167BF
901A46027B9238830C4C8235DA5F8C16BF26533B564B2A5DD9AFF6523F626314
2B2DCC67B7938F65CF6B1DB6AE3FBB5A2DAA548777361E9F6D6198FAA089A737
9BD912296E6B54E6ADBE1EB035C42C067B09C7EF4FB3B136FE6D1814FA901B7F
ABD036FD6AFDEB8DF271A8DB698ACCACD7AEA5271AC96380F50E484A18749B4B
10F526DE12D88C33E1A246A2EC71BEE13C8EDF435911D0DD383670A99D28BC8B
A4C5BC4ACF593CA80F3E58961CB4947776D74FB4436FA4E20371A587A3935D91
E2710E442B6325CC559180BDF53354D97309A254CFAD38A3E95395536828DA89
CD94BE21F03045ABC9A5E9FE04F0D6F9EFAD10B421AB29D9CAF5F0C4A0A7CED6
79B25D1AC2161B2251B235512E181A20E8A44E42451F694443F3C4E2FC9541C8
344D35733DC9C15DC431221376C52ADCEBB8018DF8945EAF70A03B65AC6787AF
2344F3897DB3A9DE636520E78F35695E4014E19FF5DA64798AC6CB628C26CB17
51E6F6F923C9B8586CB87E1F0CB4457C9AE157FD3F3192252514A465CA900C0A
13EE814AF21D23919D12354AFED37CD28F168AA61BB6A1D0581D6E7045F57B7C
8C8C23E5A620F4FDB89CA345702844EB0B348C78567BDB757FF4F5EBCF7D23E1
EBDA895F898AD300981C4EBEFACE75A5DBCA388B710A85FE551F5A3D9D687547
82186EAC014B5DD27867E437A4A6050A096D91E9B5E2B9D1A06B0EEC0140E76E
ADBEF5132943F36D7CEAC92998DCCF272110DB15D6C9B18141AA9663BA238228
C268E3045ECD7E0EF7F894AEC52D74BB6747FB6062FABFA7DA3A69A83244ABEF
C34537DDE8FAB10EDB437E97A0EBB4121AF361D44C6766BBF044D93283569A72
3956E8BE31694285539F049E92A7DF9313DC12E050920A13610136D6E151E4B8
14D4AE01AD98606C248E4426B97716894958EF2CE0FD17D5075C1AFD1262A208
A243C65464ACE55C6673523DB325960D3EB037D6DE0462CA73D02FBE832FF1D4
5F6BCEB84691B70C661AF17841FDBD5D61718DE52EB4F11723D1D644DCF8FF47
9612753E3B373D0E5E288AC7CC5D3A7510954F6C8D62581D54A0EADF9DEFFB3D
B34A9F052BCE33D31C7BAD30DB394D570DC876A06C08E3CF3E7821D6EE3435F3
DAA2D1A5ECEC62E1E0B107D97CF55CCE31DD517EC95DDC913E8110F2F2F4B10C
A7E11FD2E83F4FA98854D55FC9901B32C2D0205570AC830F81D359DCFAD03130
03AF5B1F05F5FC11A7338F380927E5F20F65E61032E53BD00CF174A339432B54
3C870CD2885E71EF296FC66D1201EC89DBF88BA8080801F9BC7611DCF9D6AA4A
8651177CB8551F23B7C261CCEA2B02606837B57B4F38BF32513D5EA20E1166E3
98C58FF8074C8E860FE132AC46A5AA4DD337DBB6C864966FBEE8989D3AD64DAA
7BDFED532F10127A3FF5AF80CD6A74273F5204CCD208C109EE75EF233DF22C8A
A89EA4C7FB495CF36760D1CA5A56CB7EB397CB26D68C330DB825457E99D0B5FE
9818710792B362255D1FD635115844FDA9A2D92ECBCC9770D0132628D7CAE188
3A3740E664D88B56E6F9CEAE61FBB850C398377A8B3D7EC9493F5CA6351ECB3F
8570D5DE3EC220C719B63A9693ED1D0AD9A06DB0B3D5F5707EBE31FE7F66E30B
AD2031312F7368911F6BABF3E4989AC38D1EA3503922CBD68101B2B36057E00E
EBBCF206EF6A7B729380BEF8AAE30ED58F567012568991AFC0C3D74B014F39C5
E151F333B43F179BA7B402E60BEA64C8DFF7212D71A06BD70915C5FF47F7245D
182B5C65AC04D5E62FAFECFE7C1FD1BB741A21EAB25C87FAFE044CE17F726259
60EF2FA838F3A98BD4A2227B717D3E2A53E09A4EFE530A666EE9AE00CE28B3DC
3A070FB0498DFCF4351939AEDECA3E47EE005365B5EE26755293482982404613
4D13744FF62764CC4D13EB8CA0026BB07150532B19CD8B829203B2FE9462811F
B9A880A72169539A032838E66B747B90452261116E52D8C65C3BB63030C91CAB
3B9C17B5563495C24FAE03298A3328693D41D097DA44BD9FA34500CA2A3A9907
EB47AC5BCB03ED6466DA618C455D5FE835E0758285399BC5C251127B6FF1DA7B
BDD41F93F498F4E720FC3AE1887C2045CC81340095A6A95DC57DAEA559621C9A
2A7F3DE13338F52F2A3F22EAF095CFBECB0DFF2F1F05663D429209BB556DD3D8
401D5A66BD297F621C92AA4FF0DBA776F5D2EDEE612456F718A0AD08E1E3019B
FD5218EBE79578A0724620645BC623B7F42EECD3D54BB7682DDF4D6DB9326A5B
0461B91D2E9B06FAC2DE33D3B1965E05B2B363111F45FE55DFB17BB6C4BE1C39
B7DAE297CD9ED4A59FE7A1E8127DD5ACFE8D730216129FDA997193E779293A1C
911AAA7F23C9C59C5F01E1821DEB511632C355DA8AF33E9B5469884C0974C5EF
103E8B871C72619E1925054A3840BABB1489E8B80209D1347529714C5C6182FC
4CD1BAB40CE1885F493C5E083E235B12C627CF6E0C6109CE4ACCC417D3FA9138
E7C6E4B118CC665F4B861D3766A24140012DC61609B586AD809AFC85E0D3DA4C
2410995360EA20451FCA2367C4A1234AA8AF985A3B1B3AF560AAD8F7A256978F
926244A4F7393C18B2E5E28243E7B9911449553ABAA560320EAED986BF5701F9
D4D8E41704D5E4573B012EA2371452E23091C65D76AAB3B0B47747AEBA920C26
7B163EB95BFD4A9228B4A4BBA0ECC170D079CD244DFC810D76BB6D637E04EAE7
858E1B40F32FE6820B96D34BFCA81D8E55A7DC316E2FC15F5D8DD757B34EFE08
72F6764AE7BB83DEFDDE193B2C38AC57DE7F82B30DDFC569BF8E982773580C9C
7870F4FA854244F50AA7C58C1EE00D4E25DCA4C0CA62F8BCC18F2DABFE74B599
ED6813A70E3475D2B1AA3C4066EB2A8AC96F7091245F03ED51CF514FCB31A19B
289F85BAE8C23BA2B8E12AA3EDD13A38DE4B622E9160C79FBBDCD31BFD771148
7C8550E557683614521110633EFE57353A535CB40544A7E9BA85E94F1982A0A4
8268B0FE976909A1CE6CB1B3DEEF3EA718BEAD0D1986D23C4C58D4E2FB3675A4
7B77D95385CDF6EFA9FEDFB099587D84783D2B46534FCA9631E6A779E35E266B
19B2C39910BDE11668A528F50C8DC61C91758D3FD2A4161D0550993F5773930B
2D7774E190BF0D6EA27CC4B90A2EE3471600BB0B44E6BA768E469E51C11F540C
EA6A16E993261BCE16CC46D71C3DBB3CDBED94AFF618A7AE1E7836F0379E0FB3
623F1F75C42A86C70CC80D42A1F37BBD83E5BC8B787BAF4145D116322F1E0769
F4F6F6213A492EA0368259CB9BEE21EFBFB2A3825821E040EDAE1CBB98028E7A
731091BE11C66A43D32A3CF4078E2B44634F8644111A2B3AFEC396BD86B7FEBD
35DCB02B5C6D6C65AA1E463FB726E09B566062F5C6A4A16796EF9B4259A1683B
5F305D35AFB01AA3755DBB202BCBDE81FAC3EBBCD2DC471BFA1AFA3566FBF323
462A44D2AC976ADC791572E35EB3FCE54B2EC4E0F6D44E6317368D80557637F3
9CFEDF543F0AEECE6843A123D7EA072974B4F0C8B073C833A314356E3A0622F7
A98D62FBA5FB21DC549B730374F5251CBBB930033CB26CB5384D0D67DFE92DD7
EA56B64D20176B1720430E0DE1278CF75EBF6F1BC0038E1F4AC22DF1CE8F88CC
32272916D5188596481480911AD322608F8C21AD1D13D182B6BF206483A7695E
9C7291AC5BA5A624654CC4220B10E86C51254B97C990B549268ED9BCD7E47CDC
488F4CF14D81DCEC91583A2C59F5B0FDA425AD3EBA1ED9B6E704A7D1CC00E2EA
6FFC707F5379A6803E577B1DB830C9FA6320FA940A4770C5C3EB6D160BFBDA23
C2D293DB87CF261AB529F6F4D655AA2ABB9EC479F5BC195541853B0D64EF4705
5430CF274241330EF498859C33E1E8E87624C8FB6A4FB2BC583D15080EDA6C99
5EB2CE2FB6140474322FC93AB23F1CA6FDD4A113939A268A71E51E3983AA2524
6468BEB9B6F7A32956130EBBFB79CF1B985525B6C5D8A5F02384243DAEE23471
9CEFB59854CC94891BCCBADE97436E9CA759EA2E5FDBF3A43B137D875DBD6E42
A1C42178F72EA7972129464550A620C91E8DD18AB3FE98350155B171FC0E2556
2F5989E335E43EE189643A3B6B85DD12A8889CFAB6BB9ACAB22C839586A351C6
11A546A7ADA3B43FB8D295245FA4443F808D706E12A77F5CF8FB09476A7D66B6
83C75C002316004E7D3E3898277D82FF60D40C8C76670C5ECE9C0C0BDC71AD08
20BB68EDCC21EDDFD4A176CF0B55A09632E7F132A79FE798E13EAE29354AC690
0DE93830457F9B8FDD123EA6F922A57850A3A4BE5B8B258074C6CE1E8DF5AE99
B876C0514AC1522BBD7BACCE47B577CE6558D15604EEDDE3CB1E937CC905069F
E9E7EA89688A0F0CD598AB018F5D9D6D1FDD3A82DCB40DCD687EBCF43E8E7670
31D98565FACCD075C0C35C246360CD4EB194FAFEBD222B40726B5639B8A48B02
63FE23B02E450C202FE171C314F08A93A12A4FDEA6BB7730D64F10504B85C033
52EBEE2BE880FB6CDA50CC44E4033E7C5E17E6832009287F7DB7E79338BCAD6F
E0F38C8C8805687426EBC07731D027C35262E6673AE35074A7E185171C1A683A
5EFCBB94F0865034BFC086CB16413DFFB42B359C2033AD8E3E29FFFDFC0F6875
3C6488E77AE9A2621C08FC982F26CB2FDE0F24C5CDF35A3E0EABBB19265B16B6
3514450051573DB1FC4DB843CBEE33A85133CF487673B7E2C17E7E8E9423F710
884A3E4D7421A6D16DA08C3ECC88B2284B0F45A122A586E4E3BA3CACB8AA1329
BC3427B512792319C557437FAEFD8A69F83E42C24E5A9C4EB6ADB9B2B7C3D40B
041A7880B4533CFD1DBB4EC869D55862724F363EE6BE7FDF1E44D41405EBC9FA
EB6F5A567BF58497ECE9A33C790CE754E8EA498105633CFB1A4BBBE4D23EA4DE
67C22A92907B9738313BA0E7AD4D67B4E729AEACAE63C05F24ED19531C9ADC15
66C1DDC11E23572F8A82CC58FEEEF18C56B20772C6916345DD9EFF91B8C2772B
ABEF09EE43E7D86B33DD8D4093BBFE7F8218F121BC40E276EF13A6DA0F792AD8
76BA2829A4D55D9ACA69B5FD810943580C87C730889BF669F82547588BF8C47A
2756F0ED02FEDDE4BD2D65F6B7535742FA7F6744B738E207B9F9088013C7CE3A
738FA7467A5F9CC823DC9D521060F8138850FEC77E994AA16FF2286421711E0D
CD89E90B1F024552C6E2E32DF67AB0A19B82DC9F06711E40510CC44CDDE9C577
433F1C34C1F9401ECD5BAC03993E0168D3ED2FF16CE62894358C2E3329BE55EB
F89483088E0697E444657EEB0109455501EA7A9BD7A16770FCBF1B70AE799839
E05E9C82777BDE4135385250F44177AB3D9F4446CB38B8E12C4B83BBAAC0EF77
9413EDC2D0ACD6AB49764AC38266DBFD680CD7EEA44EB36FFFAA0A6AE5778B2A
A4257DDA6E8340AED8633D844130228AAC23AA8ABAB7EF7511324A8C312CBD35
E13D48CF5468C167C7600056263722106452A9892CB14FEAA3C7EECD96E1302F
EBB6C5A7E2EF094F16609357F6D295FE2A68DB858FD253113A4B30FD84C1F360
06E4DD6007BDC92C035FB4927B941628A37F300C809D08C5EA99911651C2CA3E
8D601A419D6B1DD8B65719FC0091077D29B23FA7A69638D74BE029DB96A25ED4
03ABCA9F3F3B579F06719B8D97C0912B7DF31D4CF20D876EDE83DC2B8039ADEC
CAB261F3A78B7748E31DB60DC14EF981DCEE93DDCDF5BDEF1556E132CA84C2FB
160157184538872014B65AE7C2E50DFC83036C724CD682DC94D418387BB207E4
7175B60643021353CEE087600C07C87A32DCD6EA24A6E5CD43A6A90EDD6D886E
BCB7CB7CAD9509CA7C0F22A448200287F0F4D80B15A0764CB9513C5FA73AD36B
1C060FC267C8AA6C2DDC0905AEC2A4BCE42B7762F9E45EDD9672E0C97DB251B4
A57D94F6652CEBC29DB51208473A5B4BFEC01D96FBD7D07699D0B134461CCB42
ED8D7A40793C3425AFDE551F873B3CC6D631FC5DBD7C2D56DE4C2A73C5D9FB2D
61EDCBE0D79F7680B1ADA0A1683164B62F4E3D2AB42EE508DF2F9C4E0967DD62
5278CE04557D5EFFE2D9D63A0BA0535BAD14D0A91EF12154E2865913434C5E67
78DDD45B61BC6731F6E1F585AF05649B361D00DE4C2FDCF18F8CE20B905E94A0
147C9341D1EF3B219ACA107B2F22CC0063D5CCF3F2F83110D49FA8F862CEFB3D
C83D348CE51C7434CE1BE3F6044B81B16D742A6150ACCB63A610B192E390DA55
8616ABC8E45A46AFFE5CE9C299BF8BC780CF9289DF78EE12F317B203B9E248B1
28449C9643B43CA462A8438AA7B59E6C6A5A25DDE22814C9647814758CAEBEB1
39D4AFCD1C3BD57308F9EECFBDC89BB3932682CF2F7F16F6EC0519EBC9D33542
B4707E5E3C0F2FD73C2901770292153ED77DBD62701D56B099726B537A07CCD2
D73572850FFD2F7E6C3A751A039CA85AC545CC25F858E34B6DCE1847A7AE9675
ADF8ACF093C9D8B0866711B13596B56262A1BF993D47AE007B7CFA01407126D3
973FE2E6AF98C4B2B49426EEE42F80766CE88FDB25011618F2196BCCB3179F8D
F281696464CCDEEB7E6F204CB97D5B1F91D5D964EB2350CBD8BD4A5B225CA97C
780A02EEE9B46B1F9AA323540DF3E8AA0EAB800E090F17F68463FE174B625947
E15473055D42A0D6FAFABA40C63323BA8B32C69C2C9289420077CB527BFF7FC2
BE091606632F1F71C8DA4C8457285A16C0C45D32B715E534D91C72A882AAAE99
A1575D57D92145298A58BBBFC41EEF179A9E95193139AA9CF5AF0C5139F9CDE2
F84A4BF1AF9F9D58E0AC100A0F628B7654FB596E28085D72E78C01C108DB1AFF
502E1DD44B65F245F3C8B98707B74185A0E3D696315194C932EEE71BBECAEF23
D1EE586E7A5B70A5EC67652A1346601B689041B46719FC1616B16091EDAC9F23
357225080C7D3A302AF4B7445985698F7C1E91033937FC5C1B4117BC6097F172
227CA54EEB27532F6B1449204C6A344A99A2582E0E3CB66355C40937313B5627
70CF830130442C5BC4AF54F6D357A561012130EF0A4CB02CF6806CD43E40B9DD
0486DF5BF706F91CF939F7B889A3C52E837F0AF886A8A94917C3CBF8AC071638
0DB0DE496A243C85C4FF0F08483D53A98F067ADA9EF67F9880F0F845A21EE678
CDBFAA87DF91D899249EA6A36020301DB4655483A031FCB2407ADBDBD37F57F6
53D11C0EC2A08BB32F2295FEFCF2DF7F00DCE654BB2AD9D3A3E57C84CA571745
29102BA439628B67D1358BC04EF7757550B7FBD7440873169DC18E85ADF68A69
75BE0C7471D6907B395FEB826A6D082FAED99DAAD2062F8BF419EB45B15A72F3
38881DA4B19D8A1133CE04AC9DA0E14E4F129416F3E25E2E941750366C742E52
91E249136DCBBE7B834EAA02483107B4EC996B5C02BFA15300C5CBD97109E9E4
E4C707CA1F357796F7AB13DA6D1D78848DA511CA9D3373741B886A186DB61E3F
0EE880DE97F6174E8FCABA99D64D0710CC12BE5BABADA544AAC657D01D52582C
10AD15F37E59DF62EE00CE2C90F2A316D278DDF5E3879446BF1E1DAF15BF689C
7DD37C4ECE9EFED2FDC1FC009C46A4F6AF531985F94B2DAA28DE65A2727353A4
6F1621900EE4852338A4CB7340F68695F737D0FFA900E034F0CD2B51BD78DFD8
23ACB9912E6D9CD2F9F1155F34FDD9BB4E92E213BBD673451EEFF2220E23EBB6
E26E2A54C99CF2B3718EF07F4E85198FCBFD85127F0290DAF934BE199AF588E3
3ED5427FEA3126E27A20BA17142CADA9701D16B795990D9EB383D151DEDA8536
0096C9A90923531F98578FBE482D4CDA6A725A0C179EA3C0F87B9D5E3B2C90E6
DADCCB98CA594ACF9F3E3C0402E801981DBAD0912D39FD9A380EF25CB7BF0110
FD99A6B1FC6A1CAEC8BDA44185F48D42547655A38AB37EC50438CE17B6EEE0DD
AC6C3688CA30794DF755DEDCA1D64CF59C178E9389361A7D21421F56E2AC87D1
0A48FA5185D3BA7EBB8414445944EC13F56F686B98544EB18B5240920E05B54E
3B08A280210429753A5FBDDBA4B061AEA071FE28DA93AD16C9E6BF1FFF9A688C
C0C3FE26D98B4C1609AEA7B9D247BBF6A4AA6049075B3B1278F019DA4165B254
81D6871C34C3E1CBBDE2066E07CA66900A6F995E7F50B4A5474E03AE3901EA03
D8C6E974C0A51107DC30B8340A28D952154B8BD69B4ADF316B992FC37508AD77
31EFC6A7EDC660998A19B6E90BEEAE93DB98DE23FB90FBF17C00AD0C05BD7FF5
96D284739EE026A63E57B49AA1A15D808C23C2CCD8B16CC9A3B5269C7556BDD6
F93E5C18A29CC5FBB72B3DC46DCB6590BFECE4FAFA0605C619B3B951EC9376C3
9D1AA971853ED11B3A73B05A6162A2F193AC64B6D98F218799DEC7C3B6F4C6F2
859F290F7AE8343AD5A4D2AEC3DD05A05A57F18AE70FA5F893B0F672574E6AC4
5A4E943663B6945B284579943CFB864F8FED231AD023561684697F82DDCB3EAC
BEDAFC2A2111B8968A40B1D30EC530AB7CABF612D3E164FA99E28429A0E386F4
52D486DA9DA96930B17A3024160AA89E16290E3BB71A3C23AE77729481C439C5
2895A6EDDF095B08C405A0EF4EF5C509CAA830479D9CC0420EDA50DF032EB204
507F123FACA86FE2B253911186D58B00E1410AA59FCB6FAA9D2BA143AC1F62B9
77246D299022F74C4DDE6148069D9092B252D7C7806F1AA520B01032EDFAEA0D
B42D2D062EA4A22DA49AE35A5700191DF989D48DC30502874F49862D9DB08B9F
06673019A48E5A7FA233347FF9C60ABF4520DC86206A3695F47604ADE5CA8709
61A47710DEA75DF21D3C25ED6C0CAD29E65FDD20FEE06822AA00D8F06CD31576
8B69BE040CC254ED8443F8A896D4E8B62ADF121927B93EBA30D715A457AD2DA4
7E6BC123E556E5EE81928CB4529B6258A03F149D89BE9574D4AE0ABA76248840
BE0023654E0A4B96CBFCB4121F6F8F354CBE34BBF7BAC7C19A1A7FE9531D2487
0365A38A0E715EB59403AFAC15496A76767397F7E5B56774C8166E9793457C2B
97ACD263D2F367FF7B10EA35C879B8E2E0D149FA0AEA85EBB29950C6FB7CE095
6628A1E981E67A4B499454951ACBB2AAA6362E3F2A0BE64FDF6DCC82583E9A65
DE9972F9DE47B05160C68C0034D4656889C57D47EC5E7835848FBD6FD2D9A921
6456B2EF49D66AF4039258C2C836BC86B253C039F23DCD318FAD2A3CA9C37F87
E65BCB0C52982F7D4083F8DD04F795714847A8B5FBA7C1D7DB21EE598080C926
F47432C6E8671705928FE3C014A69D2F1600CDB1579DAE81DBAE76F37D1623B4
075C61D9C5152F2A4FB5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A229961ADB1D5023BD93644E4C23176BF787664F
CF245203C8C3E557669BDD382731E334C06F4B6EA145D5DF351211A0511605B2
8C540290A08A304CB1279FEB8FC14062F495A5EF2072B2957D98A1AB2E4B2A21
6F53829103F9CA4A8B6EB5766A44A7EAE4D5967EC3646F54568E9FAB28736D70
AE87CA7F3E445B1F49315332AC4AB47D56CF9C3679E931CECA4E78661DCFAC45
DC22E1C894730C5203F23FEA39EF3D2AFE9349B12EAF34C37ADB398679714251
957D3FB846B5262B1CEAD404BD6AE2FE2C9B92279B6A5C958404A81940B3E40F
42F544462924E2EF37E82826C12D4261A0BE1FF6A205E931FBB48295ACFD7254
A77FDB8D6CA00748996B31455A14B06AA5C5BC57B320CFD7DA52BDBE328298CC
9C3B50F9E9249C7A2F31B254D4AA600F04034E67FC20ACFFDA46ED68443B5813
80801AEFF874AE0AD891ECB6120545E9522B959D55B7CA32901DB097376C1AAE
786DE769A92C209406D242DC37D1F0F4B36B05B2129F5EAE67DC0895842A7CBC
4BBEA952287812F76A878B7C3270D379BE1CFB823B79D0575EACB3AB3F1713A2
30C0ED3FBFB92C2053133029C4996806DAE8D0306EC38B5D4FD9E9BAD0E61CC8
266C80E0EAD4A4653CD4CC8DA1A9D8E2CB7B47671207E1E0129CBA7259E1F102
4E5C4BD6DC0F6FE6993D1427DC0FD473F6783BBA5E4B100A207CE00CD4DC8694
F1D286F1A2137448FEF2E683BD482BF6FBD029FD684C7A34A6448848CAD68890
79E886CF41E5F2FC17A612E450339C0F9A75269FA9442D04E03B4F1A125332C4
CB9FC7F04244F472787D701080861C926D678BCB93E28B8CC3BAB6135F6EE01C
06E44D0D889A1EF5CDCE1EFE9FCE1DC4B544304F550CA14F653563924B341D68
25F4C34A6988050E1E84E3EE585B67FFF44C656E57479D836F461CA0FF34E053
A88FA14F98C71AB90B93AF321A2AF2256EA0C741B2730D6160701B15761F3A79
FD068F1ADA97063181FD5BEF31426E8663D6C63F2B59A37BFD8DF2663ADB1BE3
4F3EFCFE5C3C7F55A7585F75D0806FF5C5487CCF5733845B4E121FA0A8BA175B
D6AA86380C6D35A986B805DE7A5E8C5D2ED77BE4167061BB5FEB904147CFF7EA
ED6906F27334A75F7E098D3A1B59DD3107E2BFDFA2EB3B8FB21FBD0B13990289
40EDD401E786D07884DA44B1EE79A4D063265A1976C59E6D22637CDD993BBCFF
F6E845776E120F05FB4F20ABF6DF2EC451116F4D45CCE938D21DC67264C69E72
B86D29498C5E113495CF0B495E23027D069EE20C1B58788F81E6E70844ABBD44
02274994482F893ACF81A9A3CCB87FC2D40BB694446615226D34EE0575F212E1
AC24461BDC68091AD5C3A13200C105247A0F22067435B8C38D81F185755C0A62
CD9F5B266995A58119842B8441013F9FBAE389305FDE54D3A5E80DA361B950B8
E7FED0A5FDF9808E3C772C60ED8829AE7B450F48ED9A71CCD57B5B4CA199AD32
D934840A92C14B2D9D0897E4D8AEFAC87A6D3E1FB29CF9285C3604481D022C4D
397099DC7FDBDDFE4BD94BFB8930BB5DFB85BF3A92BBD86FCBCAAF1083FE30E9
9CA17EB2E2DC6BF49BFDCE2C7ECED5FC1543DB21B9CF5A2346212D0B55ABA77C
FA643266F71E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80381FF096BC19431A8B3B1
880A35C206720A4963693791456740F913B52648FD5D4B05AB450057E27BFA25
D698B2777C497318CDB711161E2DFC121AC9484517D7C558C8ECAC25FB9EE32F
0F94CC9DE7136AAF0B41FE083B062CCDDB620596CC91711D12A4155E5D1DCFDE
9F4ECD69FD31FE27E7B4CB920DE053CA8BF7D166CE3E0B04FCDA3B150A099993
B56AC7B3B56D0478ECBFB339E94C930D379A98504567A22ADB01AF1DCB0E8959
857A595C26DE3A10290AE7E3E01879B5DC8375014D057DC4E23576F354A66710
A4674F99EDFA00C51088440AE9D3C2238E0D3B595913A41E866DA6742CA27060
7CEFFEE6D54641B7E558F1E9C5DC4C9888AD0E77C0287AD45948B2225F0183BD
481A526F5680F6A5B1A5A9D78DAC108CA1FF9400A3DE2CCD2A72104CF80B0F7C
072B05B4A5CD9F0DE3EE7FE13BB25E2856FBAD156E5CE91FBD5F44F0E247D957
956045B1613117331061BA53184111DA5E9394DCEA8EA947CC9AC1257ACE00A1
9A3389B06DB5DF396F0783135AB26A74D382966B3EDE9EDF028C0019ECC8CAA5
E07458583101DF37369DD094770C1A1B8477244E8695B6DAF079BACED60DB2D6
9ABA96673E399338B988234E9E9616EF372577738F553F81135829F9118F4BFE
20CD51190E7D02670CAC5ADDE78A45B552D7C6C98468ACA69BD8EE5503E25738
CFEFBCF081E46C55D9E7AA3C194B3F514DA06353DDFA9C87125E5C9B69FE0A59
23903203E230A868D4872655A2BD4F485C7FBBFC1A88E17F1450615960AC334A
5E3CCB2F8DCA630494BBFED0BA2BEFA77D3E67E54011D9DCF8C70A6E4AF6B269
BAE0CDB19D93C41B6028FC2870E4E57BA1B4773094EA195459AD8FF6D402754F
0A59F7B466741F359B651D4858046E62753E97CE1C0B152D66E148E1C5883A9E
A152F67BEA64E08722DCE6A5762E55A5F91337B511777C4690F6B64AFF820F57
6404D526D66EF00BB3F49D3246261DE1DE2CADAEE76E15B3B7CF6D59301FFC30
0DE2E19A784B1D204DBA858C9AA085B3B5A87A04282C152610C6DF152CD384D0
4A294115CB01446379D93A84DA7DDE692830CEEA2E14524F98584ACA7958632C
ECDFE1ABA0F78067D00DF338FB71E7ABE6EFEB2A6172CBB0FB50132566DBD214
6CD88C3A2FAC47231E7B1033B4F51FBF490CC6277C9995C6F0BFEB3F5BC0FE45
B681C73C50BA9A434AAF78C09E13E90690A80DF614F24E9D390EF786681B0441
11D831971C4BA33E9FD206A7B97E69443C961E0B060D472889E553C988126096
DD343532E74B59C0AB38E1D71D781BD8282FD2969975CDB303737E0E286C5E86
F0126AB25A5CA2875B48C61CB8112A4CF9B8A7B534C0238CF65B3DD3986298DE
5016DE66B3DE6237E6FC9CE04E7AEA2C7E4A824F8054FE402799ED4DB5A5B214
C02A57BB9900E406B2FC13BE715ECE4B585AA5F99198A39BE62AF7CFBAB277B8
A66C8413AEA916F69FC8885EAD2CAB2644F1E25DF5F6EF5B5ED47CD8B47E300E
3F5F6B8B75060C761A63AC861E5E78D3780C7A70B5E6928526F8EA94A2EA40EB
14DDDBCEC549909020E717531A147C9ACDB6F5079C10E2B967CAE8E2646B86F3
F1CE756E4036C1A1BD27291A7AAD14E946491C639CE22CFB40A99FE068BEC315
186B6E7A6F5F190D9EAF4AC53F0C4598A5BB79E23DDA5F25039ADA8A80553F05
2F97988D4B276110BCA39FC05FB995912980707299900AE4F349771B17DBE1B7
FA91F2F7F3C15296DDB13A3D8F34A84DD42541141BEBB07219595A46DA8FDDB2
0819F2337432A326ECCE79B1CD12C56C7856D4B0ECD4E415CC9290C79FE24F1E
DAC12771C6D0E14A141A52D9465223B3ED9E26A5D9B0C31FBC84A663DBE4E3FE
D3696B649CFCC810261051FF67E1BDD3F5A6455087145759F387B2E8551B45CB
6F6CDFBEA8F56A2BCA48DBD42C11E120CBD1E6B9479E52D42C8B3806FA06180F
1EFF5CEA5ACE58B45624D6DA288C9EE68A76F7D836D0AE73FA5299A6343F5838
C23AE0E328D4FDC5C2E8652C59215D05298EF6304FC37E8EE4EF7F2450F67A96
D44A2CC71B3B327B16527BB2894802F6E0E5B3B0B42C4E29643EC14B422E5BD3
BB0208A83E16FD4236560DA1C968928FCD6484A476D9F0942E0AEBE6BD0EFD1F
37687B723EB4242BA8FAD974BFFABD8E22DB7EF8B5E3A28F83EF3C454918DD08
7768EC44A893A7EECB6D95C35BB87DA2B60A0AF369640C43F5923329E4C03C24
A07FFFB684DE7ED68996FA2403795AB210E4155A1F61F98EE74BC9078A559E15
331A0AD3B0182FF6033CFE1620E967062F19345B9C2F4A5F2891AB13FCB507AB
790F40C12BE5B2CA616D526C530E15DFAAC1A7F55790E477C71A2FF28C91C1A8
BF2C73424AB98FF24C1197A24B0FDD2FD1A3676A2E5FA086AAD262C1B358E0D5
2FFB821C17B58701F3DC3453281288884D5B37EDC8DEF2EACD9C3985BA9ACAC6
9EE37C201D3D31032AC8A1BB77DD481E807EF825F48411558E58AC00AA0CCD15
B2E395482539E49E919F3B177DC742585727C12F16E867F7B692C959CDB7A45A
996C806CE627529201F1A70ED484FE92F0C684F4A0437873EBAD6AFB646F54CE
C76AC98678B54E6E3A1034494CB67F2E1799CC7AD881CD1277452731409EE7F9
F5E396EA1B598CDC2B459A81B19A090AA25E8D003DC50C08476F761BDD8D791C
F23DE48A9C4071388376DA3372563DAB6D3481A92A83B4687F352DBA807E1632
E2C67A22346CF155930698C2E76B71C22AD65A76B04AC2C007C9D8FC83BCB2EA
05A9C4D09B9A6A983A0E2C816A464CB9910A2F9AFBC83648300C8C4E43B82EAB
441956C911829EDA98948B372809F295F67DCDFF37359A60E233CBD430618695
7AD9A2ED31221E1CB19EF42F8B7C7BB88C50C6B50764FAFF860CA83C46485F21
D4EBCD3EB0F2AB9D84E98621B64F4CCBE09A6338DBD1E11BCB2E5323B4D8E08C
2E56EC2B520F06515DB1DE6054E882EE083ACF0B95B9F10B0111760DB3DFA8CD
622F9B0C79E4635A10CFB39EE250AD0FEC90BAFB33F5D1B00F3C41E62742F33E
63946D3BE1C5E6D72C71F22E69ABD544A91A25E3AD355BBD85D66D6168515162
62A472830FDBEF494B97F8FDE3D7DBFC5EB25AF039386386C91650FCC4B0F0FE
41FA6D102A0D360D54FB3283AD67D9E796A2EA291F4CDFCD49FF485EB0770F48
DB9DF7C7F03BBD687E7E9A41383D1E637624202EDF2C3F52D34947E0964D0E8E
89F6043C0D240FB3D84202CA456F51F990B89C6C1A186EEA1CA1B109F5AD5700
A7F5DDAD6266E74BBAD5754ADF5D3020428FCCFCB941386C9D6E9D1A5E8FBCF3
2D200E0FAF7D7D4CE58A8A847A0A30A41818600D7A52B63B131A1F7879F1313A
EE8115D704B5EFDD568BD9121F52279AE3670DE1CDC41893478EEDACD50FA61F
D2BB18812A6464753BE84D389C4174811E9E24F85A8B77DD6AE21621F967A4EC
D8861E1CBE1F8EAF96A1FB67CC1FB6E3D15E8B2A5BCCD284480EA4E6F0ACFB48
8F2C81DDBB1ED022363B7C8D2A1DCA720D3098D7FE2935E62D3DCA6B7AA30B02
C5AA368E0EA42EAAC26445132CEF40F334CDC912921595C29863482F37E19ABD
1C61302C7A1CA8B004C73183CC1F9C23962F76D5C95ED44B6F26CCF0F5BCEC20
319DE62226F9D898128843EB0771512E7D7086430A9AF2E77F82227AE81EA98B
34D8DAECA8869D8943C8F43A227EFC9EED791A29BB163E6F086857C36EE1DD99
7DB4E2B6667C2D12BC8A17FE3C89841584D5BF8D58CE5E34B90C5F330D67F8BE
C315412BA9A18E9744CAC5F1C047BDAD0883E6DE4164A97731F59B6017188D44
9C867D7B28D510053728391BA228211C06AA1096232D7603A06ADE52EF5A01DE
02B1C3A9A93CF961399ECE1A897788B2B238DC20F9ACD205A00D5C6228AA1D43
F1C6F0E9EA338B2722926089F0C35EC708D48FD3B3B6D764189B89472594B1D8
16D717AE899B9AF5487B7FEADFE2B7D651B09FADDEB94C4A599DDBB64D567D7F
1814E550BB18DF86BE7A0C94D2802E32C10DCBCCA358C9A301777283C08EE11B
9FF8D25D0F0805B0EA04ED10F3D442573A56648C90B4F4125CCB13156B025DF2
E5182DE426255FD062D11B7DE4066FF12D01742E9AAFACF2CFCAF0517858C28A
24FFEF9780146F398B9FE829119A4ACEED02EBA65E3D0C30659C1C5329464DE4
CD3E76C9336421E005647B81B7B62F6B6B4DFBF3D68A0A80E54D3DF2C388F118
806FAE7BD2B6F269BEF1183E86204E70DCF8CA42377F57254FD5F19D3F6A6528
CEBA5BB0E57C04BA6D0659DCCB93AFEBDCF5000105421B2193F0BE000A06A7A8
94E65C5BD1305B6224EA5D456CEA76890CFC41D36A56770F7E771A5F92DB7F54
576CCFE322A0F0624AE6119641B784FEAE7B2397BA520E686CAE8E134F2CED48
548444CB650357714167A1A8C656DFAE2CFBF420E0E400838F7187946D8600FB
74D01A7D06D5972C0301BF170412CBF14A1982227A327B3CEB959112DB04D53B
8020E971CA8A919D5C0BC62D485734C81CBF1AF913FD8B5D08CBD99553271004
76C03B9DBF684D36A271AFB9EE37E648FD2401FD0399A3A2F07CA4127375CF02
D031E0E85FDD4BF3001FD38886EBFD84A70D93D29B2FFCE77D5D9564C9487D1B
D7B671459DF5CFBD8864475F05A7C76703D9959B4263530B0E1F94F3955700C9
2CB435D3CC0690B1AAE543C7DE6C0A12746D6794B5EAEB7988162D46A117FBEC
8A5E7FB6E0D06B1227BE09D28A15D53D2EF768BD776EEE1EA11AE93D48189AAF
AD5289F9B5E659E88FFA971BF1A83F113B194CE8A149EF9121880DA9C89FECEC
969068C0467238A64DA6519EE828AEFE91DCBB846531D5935D9AAB1F21082507
B7559E22271A8EB903B7480CD24AC1EA6E5F4C1360B02B1915CF48CD487607D1
822E244D50E15658FA4BC2A9D675A71BC6095F604E7C258A836EB31831435AF4
5AAE72474B92991DDB56F9758591EACAEE4121C2A7C10394B4FA2872BB77817D
1E2258EB8E4A120AC7986506ECC1BE90299649817AB7DE0588C855D2ED2B990E
92C1FB18CC4B968D70DFD13C6223FAC9AD31268621CB11C35BA9D7B664BEA744
8A6B067FE9BCAA3B24EDD532EE84BB9CCDFD13ED7461AEA5FCB5653373DF47DB
89A31CE022CBA49FABD2B6BF09FCB4CA2D81A942C68F9516475ADF2D88CB239F
E3373A015B5CA29A7E732AED7FCBD6BCE95597FC3CE99538FB17A8238471AD59
C3BCEBEB478B7AE71A3F43E960F8B52A4B88828D97DCFE9B5A87F51AB5DDF204
1BCC6827E45A0370F0F2D6FDB8A0C8C84D13BB58F03A57E07433411E274B6551
D12D409F95BD05B748D152049363128DA0BCAD965E8A5A3ECEEB722A3E1FF758
FAE0CE786342874AD6B95B850ACBFDC7E518F3F5453804BAB7F4634FBB623F79
B3C763CEF76E983C296AB7EDE2DE6A51B697DCEAC117EA056D12D37860264210
4D9BB6DABACC4AA136286FC74158421FB8824F681764F342047FABD1B30CD997
DD370BE73E380F7BB42AA1761639E638CE9D89C4CF0AAE1B38A2837E1D2630BE
9F30BE03B0B8FE5F8EA006251B9E33FFEBB1B84B815ACB5CFA2FA236F9EB4948
3317FA11B56B7248ADBBBA4156814D040FAA513AD074D6266C5CBDE0504C023A
84591A62A337797530AF7AD3525630E33E26ABAB46B625F8EECCABEB4192439B
574E648CBBBA60E356ED8AE3BE873992E2E6BE7B89AAB1E0E69C93A7B9370850
53C42ECF7716A5C71BAE29E7706B4EFFB51B647A1A37AB387BDD3C1961F3C049
6C2624F6F7E45CD885C5E032FFEA7C337BE416586587838F532359D6FBC18512
610FC852B07E15D4B19ED7A6034994F5A338B85C4ADD0A28C7A8FB765C4A04D2
2F65249ADEFE783DC387F6033865E77FCB36CF08F369EFE03FD28732CB57F2E9
5555F4EBC6F97D187D7F7E08844039C0FF5C49D1AD996A67AB0914D83D859C06
AF72530EA460E36E1FCC24D0148C458B745876A5FE591BA4185C9F7A05F120B9
638E9DC9E65F758F0FC4FD7904BE1B9DD6E73DC9E3DEF647194686F256694639
CB5F370D750CA24EBCE3DEADB65C77E966173D5DE44B18FA72C6D73966499C3F
42C01CD7004BA14A105B12D5834EF7D0E214C53F9C312498ACF8D83CC6946748
55FA15F3DF491937181FF24CD77631F970F6128954373F9718877DA7599DE0AF
F6ABB520C27E21F2194D4BE46D007753445B322C7D3AF68FCF93A541E50FC025
3B84F8A2A807C55DD3FA8E6BD89DB799536C0D4C0250B12E20239252CADD4C97
377315695C92C8F3C8F3BE0945EB11CB82077372CAF43778FC88C15FD48ECDDB
4D5FFEBA3F61D35AE7A03042D2F0C84EB946AB47F9836CAED323FEBFBA6B4A65
9F14CE9531D9857C3B14C2CDFBFE56143AC03A0FD1809202444C7DA9C643C354
65D3C3AEF69D55E28F1C35B0F07E78405DBB56FE1FCAF9B372190C1ED6C4E152
F6AA936B59112A2A095370B737A7880A35A7F8190B6D9FD1922C8DE2C7C501CF
19FD8C83082421D6EE28D15083E41EDC53EE7F396692FE50C985A1653959BD6F
18A593F7F2F727BAE27D7A6620293672D75EC25A96919B0623C4B487F73D78D9
C5A40093BD20CD99C982B6A384D3544080599C565CAEA48390E97FD5E4465C96
FBE9F655600B8893EE2C65BB593B8739401F94954B9E6E669547342191612757
ABEDE0E7A1DB06CD656C724A35D2B660BABC3A7894B0BC073FD16A8A88C62051
7C21CCBAD3E56801DB21DF90B45A73F62F5840AA3AB927F3D32B1842C362C65C
FAF72D25E958FD50CB9129D5BE130095D47619537388DFAED18DBB716F848234
DE32DC8120E63045002D044B71370D2195B0745F33463E777B06DF048FAC43FC
281ADE45FABED5C979A5BD870E603A76223216CAC3FB7714AA86929A1D4FDEFB
1585F942EEA3A07BF210C878F5954B74B51E801985BA165637199C9877FAAA0D
6E5613A6C69F92676D92FBF3C9D002B6D812D8E1177725E4F0DDEE18080D2385
9E70764114E9BF0DD2185ECC3E598C88C8D611168403F659136CCA41EC634C8B
D5A7A63F993799AFBA1C4BA1E12CA377063E7FBD1D3EB23EB7B195E13EEBAD4F
21562EF6DBFD9564DF6D1B4F7AEBAFD4A52CCEA0AE909C8C4C18D828D78AD197
04B6CE8E3EF8E64FC5F6ACAB079419240001579068F1BEB92277F625E0B4CB92
0DE053CA8B70AB72E6BE676B128D37661114F0F2278479E7168F2F4E058C0177
456811B2D5EA3899F6B78D81ABE86B754F6E599939B1432225CA44485DA66AAB
8B2568DA5051F0BDA8CE6C8BDDB68BEA3E5B06144564E5A47434533AE9CA24C2
6F757696C3F1320321623B7F1CA8D7E45983976ADBA0F5A42385E23E7F36789E
302CF6A3C38A3E255C3C92048596DE90718558C9E787BAAED947CD5F7DD88264
4EF2DE599944404B7DFE421B0C5A9DDA5BAC7801BF0949E4A2BAD35ED28FC786
4AD71D9D673AA58E7371A623BD64742F444AACED9A4E57B3995574614FBC4584
86B32FE029263DC79B6F998F2980DA64C30D35B103D73176C8E1606A061E6606
7CA4236C895B9329DF559EE4F73496FDD2B58F8B140D46AB634C2A35DE692605
3D8C843998C3C0A0E56DCC5378973A6944EEA7E4F8A562D88900AE157CF0DAEA
24C80DDE1524D3D9D9799646156E14911612EBAE4E99F2A6E6EFA2885CE151A6
367A04E41814F6E13EE500835D79D5FE278516EA983936A6C8C32658D0C4E5F9
C7B68C529D474D4703C51FCC2F27BC33D506C4D7F6CB65990B7D718F6A16F933
DDDC891E9D2DDCA6B3C25DE35B795BD2C5F093CCBAA801761FD57A4D466C0BF6
0F1CAC57965589DA26267FA03B2CCF128C48EDD0A526643E1D0F81D86CB8595D
09B1A874789AEDA6A6EAD9838923342D8B23AE0864DE92FC7EA1F45B8709E530
7B9E51498265119F9D2F3F9ADFCF3F625B8736BFE6840EEE67CF5E402D7C685C
9208DED34537CE2D964D65A5D9A7F3347CC0D290E551C3AE29362C779ADB8397
ED018EA7C3F081F5A258A6C41B6250DD77B44844920B4B195500753885849EDB
6CB9DA42537933A13115050CD1FCEBA0619E834957CB1CE964E44FC4E3061A46
F0BAD0F38ABC842486010E970C2848C9192C65235B021CB46AB683E3A36EB6DB
CA51BF533F4F66EF2F8B48E684BDD651A058F994B3221085A2C4867AB5F60382
164923D82797A31C3E4B34CC68F40F0C4D87AA92A97B2D1DE8C9A6F35977B137
48FC54F228DFA26730883D6889DC043B66DB60F40F602AB7752FFACDD5D83C5C
EB1C226D966A6798BF0B806FDBCCA4518DD1E541D723E1F3DDB4EDCCD3F6A21C
5A0CF5C3918B511CACFF3C06417FF15C79ED6536C93F939FFC5263B750508F0B
F5744D0149327F0FFB2B1ADD2438AFA1D5EDE3BA39D85A113A541F9A8628BE37
330E28504BD6F48D79CBBAF2625C2E2E1CABD5189B83CC1C1C86B8FD8EF3FC18
6A8EA4C9BE51D592FCDED2B3949E4FE678E3A1554629111B2047829A0BD0C1FF
5E124AABD3D68FDAF7F8756B84668463680AA78A41E4BEAD93936ABF6580C629
A7592A909A4F89FBE2E3EEFC8D2B6C03FC87B005448A17FF1AA5117AE241375D
BC823B86658B1612C379841BC04CA5D5C9E7B9326E24A0D47CB3115689B16DD6
19A90441E2BC41E415CBEC45468CB54AB3EB8434F17B15274840BEB842587F3B
9AED05B97C26AAC3B426882927FADEFEBD6F10986596BA56AC348A89C948D9A1
FC92A5039BED5F5C9B9770ABF579FC9110892FE8B89FDEF364C224B3C87F241C
ABC4F995455BDFCA18EC6795729C8D6F0483F604EE345E522AFD19F8C4C91E73
1121C2541984B98D3CBDE7CB0B654E730B78F233FABBA92158C3CD36EE89D88A
6AE6A070411208FBC0092180DBE5D8E384CA3C4F4E14B3C9C75D027348A06CE9
D8D8277B11607975CC29FBB8D7229DA29624B70E827AAAA5903F42AFB4E19A95
C7D9B71C7D637420B70C194CE8BF55D21E90C0B112A1DFE4C1984FB097B3F395
039A16B60357631E8FCBF5BC6EAB714EBD60E1D3B1927FDA7C298E5E300A394A
9E1DD257A096A966C527C855E3CD6917475923D43279785B68529E668CFCB171
0F359D8A29E2C9375CDE80642BCE84D2C73C8376BA18203DF55D3973445ADC0F
6EA36C6DA9CBD276DC4FAACAD5A174A4DA41BD07B4671FF09BFAD35E4E556FBF
C174D395D5A7C6124B1D4E67DF3C21F1D051AEDD11F65FE0F14DA80F38596193
BA5C06EFAEA6313E62E70EC9BEF8C4560E3E32D21C1F8EAE49BE6FD22C33BF48
AC15CCE2A38F34B3128B543BB870A6B0A27C3FE0952C8436D8F3FB9FE9BE59D5
7C494DD907E1E6DCAE729D19A6F9ED2ED65CE1C3A2221BFD79F004AF81C8F356
C9C0F6B311232FE4A6ADF16A3242808853245B79FB2A1CF6C4748393BD589C93
5C3D9DEC1F9D7CBBAB6B137B7D99AA4C3B6D86590198C59570AF195C6BE83D1B
A708653BEC6FF479B76E2FB8D1EADFDECDD8038461896FF0EBC22B75F9CECA0E
3DCCBC573BFB381C8E0BFEB2B97BAB801C7F7F930BD44922450CBDCA75920C48
D0084C774434498BE9B1C333F104AE66CE447123DF5C4349561CBC7B15E89117
EBF4E753A713F08859480588CA6F6C580A811500474189A626C9DD6682D1563B
6D5E8E7BC1E2A438F46B73682114E8629D27C2D02EA91900F6E7B049B1C431CA
87EB380DE2F1E100FE7121DC203A89648C906439AE094F62EB5F60AD32CE002F
E7F15CBA8F8D641E848C5BFBE1B01FF5642C36D1F3B5AA4B353F54F6AFB0691A
9872ECE75DED7E5034670F9B401A4E995B235DCB849F990482B4D503F271A9E2
5CDBDE8F162EFFD0DC69628217D54186351C8B082E81EE08E8D3D565E42987DD
AD25034D0C4E798B9138A49391D6F9521BB7DA59291A239C1D534473D95745C6
1429907F1246475B1ABE516106FEA6C5F903A00AB1C5284E3DE7DE93179ECD6E
F92B0A9200A99F6EE08ECE7455EDEA610D0FB69A58D32F41B39AF04B0CCD24D7
090BF490E9977036461B66EAC5BB976C69449B826725FF3BED2602A78D170CDE
E913E76ECE88AD23865ACE4B125EF346F608ECCD4DCDCD47DD7717EBC46B32FB
47BD5F3C7795791EC9AF58AAA4DEBBFF142343D810BDB59FC4EFF8586DA3ECF8
F0327884D3C7467A1598A876ED18B65ED8CF206FFFCC4208FA18CCB93DDF3784
D054AAF95DC58EE4F927270FA6E4A9E942F3C6B70266EDA218C6D2606A4B773C
74EA108C7F3EAF8CFEF5EC4192EE600E7A0CE5642FE23729644C4DD89EDD0376
4A886747BD1DDF0C56D2BE76BE9E446913C4321E200B177332F44DC0F2A1DD70
6BD2D79ED2F15D083CEB170CBA8F1D210044B6EE67818ABD597822B3B824A70D
A042C65F687D8908F985795BEA6310EDF44BD0F89D7775B3BA265A431525D5F0
574AB549A19CD373E578CE394EFFA1CE5FE99F96DA5B697862A8A0ADFAD5E55C
E850355395BE8CACE75623A92D17472438E11D8F99B54AD573C0386EF93C796E
4644E66660B9A169C20B732AAB2589536FA3B43E92840BD2987026B52B3D3294
BFAB55819D89E6E3F5C318A35C0969011B070047A7974053DAB9937E5FDB670E
295524876CCE403959C71809F8E21EF907890BBB82CDFABCC6A17BDACDC9305C
702FE35DA2CDD1FB80987AA1625BE96300BC0C3711CA50F1B85F57673C6CE09E
FC4E229D463548AB46699AA7DDD0BA909EC99E655A0385F2CBDEE99868A3C9F3
7DE268E380CE610E6D9D1972AFB86595273E193C874D2FE278CFCD460AA15777
BFBE815955AEB9C37A0690245986C2BDB0D1D481F6C7958033322676DD613C27
07D380C4C3AB5B333511F10A6E751064074A52C138FBD212B22E3630FC1D9B1F
FB3BFFAA6D0A20C0381ADF48E6B9AF37A8D78C8996A34FE405AD6C94D34A2D6E
71457AAAB4782B1E4783A390315569E15641C329491CA0DDD210F99EE8832D60
E91796C916FAFE58F51818B80BBA556C10FEF8185F2A12E74835F50CAAA1A6DF
0D346F843595DEE20EA61D28475F515B0D494B3B9353361CF3B05786223D6264
33EABDD890E1D885B46B1D6801E39931F185A7BFC40196082485DFE88C095D46
C253252AF7805BF9066133C916B976049158408EFBBC55FA1B1F3F3E031C2718
129151F4039E69F162D67BB5DB67595670D828FBA1482BC6A803CD7CBE7297ED
B0D63A166BDA4DC1E9C27075573080E67AB9F074981BA85FE7B19453C2013AF3
8C6A47F399E09D4ED56A73AEA5A2B1D5C4C6A2BAEF74670DFEAAD917E7F290E6
17903792223A2AA23AE706959B252A64F071A7ABB75A726F1EC0AA65DDC25283
DAEB9728206629B227617A2BA68D430F1E8FE6F40F1E04584F395AC0D3110CBF
8F774728E4278EEC55AEB085CD00CC6951E3D2772F46B84E908CAECA64B09A6B
156DACB8FBD258D6E0B6EB6A57B74E63A3518EC7667E07BA5B299F260F525B34
0DC1C81FED5A23A13FBD66C149032610464F1019BEEEF9DACF5F60C8D9DB5DFC
8201ABE06A186B5C89ADD1C81D68908B09459A5B921077AA21223EF0E060FAFF
76ED5DFCAD3B0F3C59A4D52A0E0346357B30A6E7A942DBE072F2BD0DCF8346DE
27FA98D21C0F6B19407DDDFB220D402F3CAFC7DD736BB0C4879624730441EEB1
C2B245CD622A4B9456FC899830D6050CC32379C1F64BFA604C5A93CA60A8C5C4
A5AACDB6EF5562BF5E3244BCA85F944CA2938FD474019BA359F7F38A6D94C4A2
8AE4873E0065A9F726733B0736BC25D02CE66AB3D439573314EBDF74EC146BDE
FC01AF39249F47283B9820A3B98EE7AEFA3FF5A0B87062F186CF0DFC9FD8DDBE
02E11B994C31A54DDC94C9A8E8625557BFA0C123C0DBC077CB78DDFE423A00CE
D68405A82F15039F0A99E6FC21FEB770C37A73C47B1F9E2579D68D0C189B62E2
878E626EB718C0B926A3A57EA54276F94A6FF108B95255E299D85A69A467ED12
23C8CF29FD813EDD931A53CB338FE15CC0B1CEE17957997FFB4B64B2B3B6619F
DC754155794422EFAF6C118DAE59E0C79F8CCA62680A74F03B3BD36E8EE3730F
A073A68EA7B6BEB3D8CF73C66752FAA10CC9452521EA9578696F57047C7CE41C
119A58C91E9E8926B54ACD2C158FE38F1DB46C97537A4DFF3B518AF20479E6C9
0126917995D83A5F184C6ECC9A1B2A55278FEE289B420111821EAC567FC09B45
17D9443FD0145DD7532145F9392B643309D447F1644A716DB481B54E0DBE1302
A1997D0EDBD2BA7C8586E942973B8ADC21BA304ABDC652EF86B63BDB575DAE9F
7E1E55AD308CD97CA63ACF55AE35835B40EC27B7ED3E03770C23A83FC926E4E4
9EED8EBC6FEEB9C1DE2149724C015A2D62C7ACB0196673DCD784C04787B612DD
3A2FA850EC3326710040E77E8A16C40FEA8683E7E4461F10B8C0035BB079C538
EE56D63EB8D7B340A9C9F279E5D41653288CC946C4F575601FC2EA1074DCC257
ACCE56149A49CB4B62561534BD3373EC2963E2A67F50406D05055D1D083BF65B
6D8554C69AE30BD6AA571F570169FBE88604B96CB32927A36FF5B934A93F56EE
CB028F93FC3751A9EBD1D97C1B4A3D172ADCBCE6B0B60411388FD7F8F95FC7A4
542DD071B9BBAB2B275572B872969A0EF5C919AFF8A4F85BDEBB9FE4122FA402
2E9414A86AC30CD79198DE3038D43DEE9C4106E3FAF77B9282769B4DEF9D348B
8C0AC447681812E3B2387112A31EDCCA00299CF0857234BFC5A88A53C4784DB4
2E726F959C04D04EC6CCC6D5C4515070E4EB6AD127ACD3F3A2B9511EBD13E6A5
D5E64C41B6BD1F16D657C8DBCC4D416B911DE781563E26C08538E038DD8EF924
30B56B27BB12FF9B399DB1AF4BA9A5705502F55E4CCF765A15350B360D86A633
5F4E0C6659CB155111FF2286A92A9488D25AE8CAA031125B61B6BE8E2F73A223
1655396860960C845C5A2B81ECB5A523CB2915A925B1655FC1A2BD906C01C6C7
0A9A765A383B95A26FA84E633F7949E85F0F9CF8E2B4685C29D7ABC599CBE218
43BBCC7A508C09A75E44FD7F6BA76157167A214F11C228BB1F13217BDBF2E90F
712DF8533B2B6D42AEA28A08F8A12C4E631B4B32554E529BFFDCE98C901A79E3
E0354517C3D95E42B0C4A04F78A0399AD1358F5C8A814CB377C8FA4480C88055
E1B39E04D2869D59778999DAD55652CF8B3D7C0EBDE55EF1B41BDA01D7778687
C22CB79310A9000BA9A26BEAD51158A2BA24C9E0FF6D1D3DE3DEF2F52928C82E
FAC13BD01C6450DBD0DE1D9CD163520429734028ABD0521D242C1D066E165BF3
30F4D3A0A807DA8C72ECC15D948870502F535B2564F43A94EEB6F15B3D625DFE
4E50B4448230C4611B33767D290398B07A09A94DBAE60BAAF279C3272383D752
6CEE1C178B1C6988F963BB0D70C935989DC06DEC3B15060C553536AFA1AB5507
40F7286FF71E951EBF31F8B1402F7362B2EA5FDF15CCC34FD53B8F6CCC0007BD
95BBF88379F413BE60C6CA25AE8C26456A11077C30DC0E40C2D8A6EF4D85355E
596E26B670F995D7EF3EE7745D6460F94622AC516E9D777D6C653916BF27915A
02D3D85B0C237669DC17FE1A48D20EA8C5D7A4319E78839E3C2111A05DF18DDE
C2EA771A385287C37FCEE0AAB8449EFD258C8DAA3A6A5732A7CB0A03B5BE5232
63395579F2B2D33E0A136C429A9D806C2CF8ADF3EA766BDB7F06B86095774B74
948C839BEED6D6C31A2401ED2A188680E41CEE552DF55A235EA7E738E9BFC109
958B026DDEA892BE5622E14F961290BA90B74ABACEE2DE9DF2AF345352B2F661
6FF952D6E2618765170879A10A9E9DAEC1E9643545D179D97E7159C9710FD0AE
ACBF96F47228F30D503E1E0A943EEF9BB23471D1CE0E37A4570FCFF3F25B87B7
5D65CDB23CB54D3C2666ABBD1C4B6326408B75445A0099EA06E67ACA22B1E387
F336F311941EA2489E6F8F6BF4D8B5DF13B690D788D9F51234C095D5607BFC60
08F2EDFC9D74BD2ED07CB68B2B95F9C2A6ABAD8BDF3E922245BAA2CF9289D68D
EF6706FF9B6C0CDEFF8CEB2BF67DAC531B53256C34A5211FAE93596544B443C7
DE891D22C01EB907D1413F647D905576F13ACB25AC7585A77E9427925F63070F
C1F62B45083BC0743AAFB530DB9A6A39DB65E568DD3A8ADD05090D2AD27C1CDF
EFECDF6B1C287FA48581CF4FB723E2238AB55D38E00B5F523A8B2E7812E325EA
858A25C26ABBC4C25B92DC883022A7F459CF47F6F6ACF7812C886C93F399D9A4
9AD04A70AB71DE0DF3C612B186A0B1D7C64DC5ED77D38F4BE43DBFFB0C6D14EE
78FC84B1BD61C526475C33C0DC2CAF2834CBF79C38818226FE2A652AC7CAE0A8
7EE0270A8866EA71B296616734020B514C8B677ACF46CD9A1DE3F51F5EF7039D
D184011B7B7F6505A11E4649F24EB88746E4A57BDB39F02F686DE4B50AC46A08
4588F8180F05AC2BE886D9D90227506923ADC66BF831DB6A5374EE5E2F884193
E1D5FDC28A8A7F6FA6EC89007816A77204B905D58856A99BEAE260A8CF01A6F2
D73F6A5AFE34B3ABDB4D358E8B8DDC32EA172A2DE4E8A25320223AEB3E6580F5
3F51C9B08071227756C4EF1AE31F8C52AF13DDBC521F183EB59FD003AE5E0B17
5EA87DD3836D1563F39D23C61FD5E78CBFE7A6F095480314679B3B196578E5BE
A1A77EEF42F50F46D67A4DD781A368E75CCC7DECA18BEB6F1FEB404E47901751
F077A3443B9336946E3DDD438E60940A1A7B10FF68354C043DFE6F770C564AEC
94BD5E4DC2D5C51DCFE8289BC38A60B266753A0AF837453B714EAB7E6875A7F9
320ABC586A2763AAD673C9D29340CAD83B848E819175C4E9E5718AC249802208
760DCF6BAF554B06608C9394954B53D0A84FF84BF5939F814CB1114F0DC10D39
E071788CD2ED005612D010DD57009F2FF8B6226920324F65176B760B692E3896
BCA6B6F97736395A3CC04D886FE80B0E447A91BFAE343170BEB7A5D0E19D22D6
6A4FB64617BF254FA1522DA2EAADF9B90E40D4C0196027C17B8EE71D654F0E33
C5E5A8054380D14EE33CD2B296D91FAD4848A098ACCA36F24BD9C0EB5C75F360
2396A1B7C3D1906E2827AB2FD80B579D026FCA35BCFC3ADB587959D05FAC426F
A4A439A7AEA491DAC3704166CD3DD128179D7720635059049FC2FE5186ED09CA
F70989799D9D24281EC83E6536996D29B4A7099D8F7BE563EC799879ED9336B3
049684BC628996B0B1925F4C11295A73FE3649A98308BC5906C1DA356869F88C
E9D2F1BA2D3363EDFA1FFD7BC6553AFE3E7BC6F4651D5431DE59CE2BF06B0C40
C1294FA9FC04B12E0026B458F5C52E655CE94E0768F4E9EE5D22F3588852F180
8D7302C1198E32511F945E117287AD86E517267E421D31344C0BCC4BDCAB2432
52E9C4763668573D30B09DFF1CD05F9B5F86F136B2515ACF4D5385BA128D45BC
7C96143D24B6EF8FE6D2DC18EB4C02C6BFCEC3E71E20E6D98059C938F9573334
D07FEEE0594095712FAAFDF0A13E3C6840D02916CD5AAC997080A8224755C024
04518AA49F95950DEA864CB4353C49A547118A742017422B71F1FE4BE0AB6364
E2FA747EE9A89161F93F178D7A24AB2C7520DEE332608CA2A6999F8E27C6B83C
EDDBC6FBDE23AEBA7ADCC4B4F2F6197FD4B0D0C2637153899CAA8CCD678F4A63
CD871097AB4579D189B5644DF97E53AB4918E8B6C0926E84918A39238AD5F2A8
4C51853099A987EA3B033E25A641920E62DD5F8A91B4277A1F49C67E25F2CC6C
145FA968D454AC3CD06F4C079ACE1DDCA6F51DC6F74E34C0982AA51F2D946ECE
C0CEE91162DA66C9C1C9B45F765945415FC06B0EC169287349C52D39779DAAF3
A807CEC2BDDF196C16595542D8F32E962D41213E6B67A77671DC714A6C568A8C
F7E44896D8A92F20F315D8DEAC610B91684979154D98437D6BBE4C8EEC74B6D9
BB7D6BCED1858614188B2A4F22356187C8EC6BC71173E3B08B52EFC9D3D2A994
4F2F414D6447F99813AE50F3116FC42F7DF4B57FECE1E99DA37ABEF22077B1DC
81EE04FEDCBCEEE2C13F5A60EFBACF0F2C0D8F007FE4CB9245385440DBD126CE
05A117F2C88315EDE76CC27C59E152E4973828AD368D061FE3D6CB1638C14293
106E24DFF819993B302EF95CC0F3F3F623C6C35CE6BA950748DAC5E9E9F7FA73
8407A4D3F3DE13AA36DF67356C5F07D098A00F84331634ABEA77DC790079B694
F74BF12D0EF7A29E585D5D0D279178A34FB11BC74281190FC629EF7A5EA1F11B
8FE226AE94AEDA6C5911D9A0E6336E31649153C7E6F16C8B1F5607B42DA4B685
827479170AE5F5580A4E7C93C85AC54FC15D87D68976D990F9C8C11CE85FD950
8272ACB0D0C7930401F7B2ACD8F856AF9D29B75ED1654FAA319C8F58CF95EFEC
E4AE876BB6D94D50D803E20818979DFAC1F192ED60F09827C95D1ED1C944A956
83C606CDF880BF6AD5E1F6B8CBE46D9B3950741D6BBB1EA60D4E4056CC41DF5A
FA8E68B3A5CD0DDBBE3F386FCF5BE9FAD1D099A9C8B86D0418196F51FE3BFEBF
D041FFFB50ADCAAE9086B2FF0BBA147BFF00785663883D258292F85A1D3BF458
8BE159C757A92D105F0EB054D0DCB612D053AC14A112D879FB2A7779AA0A177C
397D418A1FC73332B668E1391DF46199670B53A42F378A59369DF7C3DE9CECDD
220AFC8FAE2073F50CE93E2F65C5950A91F8BBAD331CF338B57E2F1B06C12E4B
AF64EF242600F120298F1905045DC31D562994193DD19855E8DA95B483863A86
F1CF88BDCEE2E67C3E0370AF123C5AFC8882F9588DD1715C49BFF44F92ABB66F
844D4ED7E445A347A0659E23B78DF75462EB2A78E15F4FBEA19D5492ECFC82F1
B323D3DADF42D431500D218053EDA228D203151E5E4A406C909E05BBA0E20FF0
B8417984B7F288967718082B868876294A0D855BF235A87BCFBCA6DA266CDFA8
04B0573A065F65147BF3181C90963E43FCBD2ECE6228410CC10F77C0B076D7E9
C777A123F467B6640F2EB0AAA21495DC6D20F33EE47B384B9E3B7BE9A07E2B8F
49C806B3FB5616D8857A8BBD0AD0E4104981898D2E5BB2D1DC5603FE0149904E
37002DD367EA69C8965005F418AFC7F15A4505D5776BAC675B89DE0A373A608A
E1B578B8F54EEAFF14B3A3EDAB10D95EE8E446C3691A53B7E245718712C92037
44C86A1FE55FCF3C620DB0743E26BA1C5D1A357B49E12BA13E1FE4D4900480C1
28298750DB64A8AB3D407E814B194685398509F0ACFEA2E9340FB59DC55185D3
4A6DB26C716FC0BD460FA9EDDCF1F58E6CDAC0029580D7190DD05F2542038AD9
BC0C794C0B153DBB98E4CB28E1B2F72551E6048493DEF2A87BA1574833F65D9A
2E02187BC587CC51BB5C60184B6C01997C38A0D500228153DD793A02D4E72B8D
F375FE0C77F2A6DE127D0A50519CEC6E1EC233FC2DD5B5C1160B5D69090DD7D7
2C1AF6963F1248D084435CBFA7E3B2B839838BB87C04841CDBEE459B73A91B33
25EB033ACCA961F57134842D4B5CE3E0B8F72D0D8C4A6DC7ED41C08C379A77F8
D4F8238FC609AE61DC9DBFB990EE5CEAE82D62439DE8C95F0AA8E06F39D2C515
4D43751D82F93C202E11BA18E90DC46ECFC8F69543E1C04FB5D8FBE69ED73EF5
11F248662FAC12197A33033D38F5E7A8F6AC85688CC36257C2825886CF7705BD
31E6A31A8369BC650F3FB2291031AB318DB32261F11F1FA8F3623F945A07235F
75F042382A3A3CFF479B8679BF700456D36A7CD64CAC44B293678CAA8D66A151
89BE22D731CE56BDEADFF82B54B156921AA9156DEBAF6E9A2C69F153AE233488
B2D41B812A11DD57DE3D74087B3CAB37C02E120339A13AE7E8C7559075CB2E69
678402CE5E1E4295AD39E64AF1842AE4B57FEF2A87884E5DECA617EF86702BC1
30513238468D4D8CC002C2ED3A348E4F53E822E1CDC2A835E2304F8BDF882CDE
8BB66C8A65647922A2EE5F55F798CDD04DBA566C794F2A8246CBFC9F7B8C8559
135D783C15131A95EE304CA6E4134EED618E16D9E187F9E15825F57ED33CA489
8B5DCFFBFDD570C4C8897F9123228A0C6BD47194127507384CDF7C28EDFE2CFD
50BFDA18DCB1D4F0BE65D2CDF152509514AB6687BF0FB2938BC3B575518B24A7
CDA6DD1794455A646E9E209888E213B76733AD5F418D141724CE22FE4174B0E8
A41ABF27C8CAF2342D86DA1F55138F3ED54EF77BED77028304FFDC4B8AB0D7BB
E0C127F106A9C6D38CB5190548E3F91F0BAB7A23CB8C28AB4966FFD71DD28BF1
664BE2611277AAE68BC42F8F6B29C7E7A0AE1BD8CDA5E62DFB940A1A24F3D5BE
6CD45CCCEDC4B175E65CB9A2FFB4CF40BABF9AFBA92A0C51AE000C80FDEC1883
C36E7B448B7C4E0655C8FA2515B03811844777DD1A77D2E1DA6F20B5957F6F74
095706A3B7A0F3456C4FCED67B09598C34901ECA51E3C2C6EAC98DACF5F63E9F
22C87A78AF27D8171E5C3EB04A9296F1A9DC116742504A401CF2D9586ADA7461
3F1FEE74F3772E175421A79141486B4377682CA1703F71D30055C55374758408
BA004956D1AFE8958A023E56AA09E7A7D66F0BDA611B948CBECFAF4E086283F8
942837CA994B05174A7EB10E238482581E169C2B7EDCD5136921BB9116855F20
B0DE9F99A91DC05BDD8A491E0A306ABA070C2A4483530CDF6B37AE4407AE950D
9EB36AE63215E74A377B87FBF114B75EFE6AD15CCD5F36BEAC4AFA8272AD2934
F873F3D561CF0F3C61F35755BD9E496206A4A93EE172950B7D1F1F696D85E5AD
57AE0017CCA000D553C906C603FAF4171C90B04D8873B4F628828543D4FF1A99
19495FC3E32B3B849842695DCBC27132790570C66E3E65F218A33EA91D6965C4
6231A44BA7A9F4163ABBD6470B3BD9C4814F9A58D4759698126FFE950F5C5F3D
144D238621F67B05C2B595D72EC3575F8374B2AF83966391566F85A386DC278C
8F7253779EB9D278001C91B756F7E2981B87B73D560A8E6EE0BEE3408D38C8E6
AD2BFAD28C1D8B0F466E3BE65CF18EE527FC661B1ED5A0F8D99C6A6CD59834A8
53BBD985B34755F069B732646299B56C0B63A2055EE874052715272622D5610E
24D8BD23CCA6F5585D78E78F6173B165564D665B05C11CBD3861C4F5690187FC
03ABB9362A53D456FEE9F588674EC833277D9822182FDB03E4AE8AC04A049D71
D4322B3489CFC0691C4968A433FA7AA45C1AC9A273C087939D6CDF065A3F0A49
1D66248801FA6BF834DC93FD7C17D135A9B8DFA02B8B05136C106FE7784C9073
7EC06BC9FE94C5B89747B85F1D107E7FBEE52ADBA5E2206B17216756AC75CB0A
6B8FD43C58490E5807F6525B594189F167F40EED0DF7150DB40D2B141DCC1B66
8202E63A95E4064CD4DC5903FA1BF5CC34C891A8CB5DB094E2E36A931EB94026
A13E2C524E081489DD5E43F8AC30C3DFB69EF2BF837946727FDE21C868512A7D
F843B718D211EDB2C65036281216B797AF643AA24260D58F96873E532F14849D
436D35176F8DBD6D5ACF84B9F1A245C98EF325B4D5BE80C5AD785C521A9F9B23
ADE85CB637DBF16028F46FBF3E37945E38406D678A75F90BA924FBF912AA7986
D0C5548B66E19A9DC661BB6ABCEC99418F69BE6AE7E24AA47AA0D4E6482409B5
F41C26F513128DE2205D27D2EDF240A2FBCCF4C6927F22649A1AC4F4DE9787FC
BFE23CF690DA2A979E3A0CC57D28D7CC57A6CD7BAE321F4EF090B4A582EB4DEB
A420390C26A3F05F547ADFB74B7F425E6C425587F23081F7988E07C5E290F46F
D4C97795F84CF4F292110EDB7F48E9AF28DCC7C6E1D5C8A302692AA9F2E47736
873D42587359EC221BBEB4424011323E059BCD0C4A3C69F7E7D1FE1332BBD38D
1BE70FC1EA3C45C0CC72DE0159DCC17D90D3E1489973BED751C1233E6D4DF600
BE8D3B99F7383E534EF6C936DF6ED77EFB07C3DA6F036E10CAF48922899CB1E7
D70F650E6471E5408C44554E7690B35FF475692317C3E530C6D0D45E4C2FDB68
4FC5A1DD6512C4823D47156B6B2D1ADFE1C36DF0A81A5D74DB9CDB02D4057656
8262B2289BD805DF76CDB22E1F984C23CC90E2E35499B648A29114BEB68A2E34
98375129895C12BC8A7F9BA21EEC1E468CF16F0A00FFA19D75A785BCBC05E8C6
93C020CE6653B3D2BA78E7D6B217A8A8D166195B28CBCC74F966C0F16501DC9A
5DDD2355F0574DFCA1A71A265806E46913874178E0768A50D9BDC0B6E4F92333
A6B6C4F92A182C980EBAD6F11CD857104BA7B556606C01EDAB44159AA77D2794
F0C0F53101FB89443353F1F032FF5D7F7C97A02506798075CEC268C01894F0F7
73B7D545F7A25BEFF1EEA0DB0AAA9938242AD362A4B9AAAE1EE7A7F046A13AFC
DC89288E94250DF28083DC1B101EA865817DF48BAC3923F06C8C127669F52C1B
11A6D66EBE9FE32680A14268213331A3209084E4B8F79E73AB52D659B454CA9C
E51D484F7E4976D6D0B20AAAF76AC7104E23EF4C51AB55CB6F86EDCE1CFD168F
5DFAB52A75523AC50BD35F5E786275CE92EE87DE2A867F04FD5DC585101D43CB
EC798748476662842E0CDD26A27ED7847F73C0FEA645B2A43B3E26D8CA0C8F12
C9C918E8B869A2E66242878E71BB82D5815EF4F08ED56490BB8EDE16BEE85BA2
BB40F538F55C11D50F882B739138448E05332952F33D505FE3ED16817DA64F58
69AFA6F61421AA03EE3B4D2DF763CAEC6BDA28F4D8B5B8690BF6464D3889DC98
67D6D58150C490929C95B9F015A4C208C080F9ED75FE33411D8E013587C18F9A
ED3C5E8F2D01DD70137D49D6A255B67EE0AFD63E8B9203DB93B7524614BE7C95
306DE203738F0272E1BD78909C7DB5C2C68D020E6774F3ED4107997C5E94BF00
E51647E468FE2EC22E8D578720C97AE379DE1BA0B9B6D67473762083229A2635
E32C41A24EAFEA3205D5779859BA4035795FA027CE3716812207A6503EB00433
D78B0F2F24BDD780DDE75A8607FC63EAC3376B1266D522559C750B8A1EF7B7AE
9D484C74BBBDE463D584973275A19BCFDD8004915E03513024DD87A712F95000
874BB0B7CC126D0F2220557B1451AAD17090AF7C699A0ED7D0F323DCFA52191F
909E7E487F3986C23F6951833696357AD5E8DDC2C95D39E05E64839ED025B2E1
2897B25691DEE761FA2FE0F2AD7CE0FEE3CAD755AC23964FB3A0FE97C123A9A7
591DB59BDAECC087BD360B3B50F5CAEA8BD4F3E91C65CD2984CFD6B56AB56737
158C84E507BA8F7314E899B65B4E06A92B8C5701E953B9AE29D373D5B98FD8B0
63097C4F63878D002D594EC72297A39759FE5FF2D9BA974F8104E7E25BC2A76F
3D655CB7DB4756BE4DD7574BB4209FB5DA37DF42EA06C134B68E40BC591769F6
F4CED8AEFA963A93BC3306C2E9C440C3A82D00094DED96B5665FA0B4858DC52C
5A8A90E0B16447F7DAF2599EF2718C3BBE737BD085229CD7C19E00B763412A68
778686E7CA0CB1CAEA09A5F2A0420730C5BEDEAA36901B0EFCEB5A6BD6450FC8
20CAC1D7B25454BBA43C1325679DBA2C807B883F85938D3AD209F69D2A5DEF2E
28A969DB867694B51247C87E776E28D0351225470E2DA75DD773B1E8E44E4CC0
80AED96339EF47F62A811C251F0D8BD58651E9758B63AD985D7F6AD8CA297F43
51CE6E4772E00AA48652485F2D2DA5B51644A84ADF53130DA38E57F716403C87
69AD17AF7263E283B887475CBC2B2D93B9B5205F41F14B7D582C21DB89ADBF97
7B9420E76AE56080B10EAAF1DEF2C5DC35ADE3CA0900AE81B4787C0606400C6E
3AFBA0D67C90D873DCC8B012180A7DAFD920CA5BDF2CC4DEF46FD4A183EB0766
0D60FE41FDDD32EFF893D6315C69652F112E6D2AC9F733F2E0D1F8D56B0A82D4
7326D14E817FF8C3EFF9588CAAD1E91B1ED225EFCD90DEBB0897B97D21ADA010
0EF3AC867A1AD6A199A2EEA75F43703AC80839B3AAE8EB0D78E328D2004A2333
400A255C839F4385E9D1A8519A6B308FDFC3CEACC74A5278A5FDB0B0E5B64C22
530E018479054D61CA1D27D1B9199DFD0F5E7692CFE1043E10E31085DB845266
9D71F66750D3FAD238103879E3463774DEDFC3928949F19EEE06C1A0E5BE179E
3930E320682EF6F8D703C6508CB22C33340FE19787E04D039E36823710032193
7A01F3042834345B28C5D433DA01D39CCA25AF59567E9CBE09F93B9EB3ADCB95
74847188838618E6780C454D59201D0840D6775092160C1A015EFC812D65DFB7
F15E17E6CC892ABAA08F3A3AB76A18478467288B0F6FF570C6FD27642D58E526
CCA2A0525A55226C171984129E805929FA24F790D2D8C9CE879684EE9D35FD20
D344C2C5AF73037BEBD740F9B31CDCB2FAFD0106DC3A8BF80246F4CC8BA41FCE
2ACD5A3A04F82AC8714962D152DD762D066733A341C28AEEA154B66363BAB6B2
6E2CA31D494FA138B54EE02BF312AA4B3B311D62FF87126EE265D92AC0465A0C
53C4B8A13DEC86DCDD18E985E98B72B4E1B57A8FE0306578BF68E60D3318FB54
C59767BD07C7A6B24C5682C37D54967C94AABEE2982FACC80AA184CA8A5E111C
CEC864D5B854BC13013E94942CDC780A8C718009827AC786B6A5741B9ADB99F7
FA9BC0D140336B28D55D27338F2AA58690EF837D7A86692F069EF0370EBBA162
1BE169C92B00D958705A48EB3D82CBF5C9E5BB07EEE8B937236131A3913531DD
69B4A14D97F13F449C5FBDF5684F732D5C553ED81C444771E61DD0285C9F7F04
C41C827444D54B70283389743222D3C77C38212E3118CFBFB744DB773D06B1B7
33A89D9BC8F2470DF36D531892BB3AAB55C0351FD9B59A9BF59B4AAD5CD477F6
E80DEAE0F252781DBE3FAAABB6C688F7147DBCF8C113DA386BA760F91D6F8030
0D4EC8417ADAF656C3D0D6F5155D233BEFA61878F50FD4B9273026A6FBA161FA
A2695D5FF8BE1F21B94A9E181C59671177E7B567821FDE41AF4F7976BB94396A
2B50F244447FA0C0D8A43675CB8CB171565D669B919B6154A41BDFA0C5FB4820
1578141E3925FE38010761C4CCDE1CD20BAB75647C8F8D78BCE768E98A615129
822F1C4F44563DF8C768F8D98F50F1A8CCC0901414ADDDA77E6B758C9C1300E6
37E843A1DEBB6D1C7AFE6E5DF8E7C1E09D21B72D129404887B5739FB79E71EE6
AFF52F3CAB5F2CB5518C1723D57080100B5EF88CAE2348387ACA9492AEB601D1
3C01F568CA8236BDEECC26493663B7102FEF09C25D849D7DAE91025A4C6D38DB
16CC48D2C191A16ED86E07D8E45FB322FD0B3D25692D2D9361B6C02A43B80A12
7E623F3ECC64BCBB149C68A54AB7AF25439266F3EF69C2CE9BE14383542B9F65
00CD28808F9CCC100A03309EBD39951A39F0591A011D69AA3468303D7231C69F
C3DD068751A05EB01A09372B8F0641E014CB9D1652071F2F4ABC04F90E2CFB50
E085403CFB912BF2350211EA7C21B9515C37C00A616E40B058715501587DA805
1A5226A33C4A199E9C0D70F63C477763C941A00802741E770A5FC2A64F7BBE94
19D16612B3EACAFEC752DA7E8583B539F7A42DA26F31C7A96CADC26CBEAA126B
83A8718C8EEFEFE036ED52E994DEB2C25CDCADC5AF8865F076467E2DD87F023A
E5D1FEF5B9F267B542EB504AE4ECC7E244A4988CC2DBAD5214B943EF32BE43FC
7E8CE14C9FF06181E85FB51BD0068835D69B46516C3CD21EA4D8B0D23FCC0E6F
B91B247EF06B61E5574E3BB9847C1139585A41E9BD4FBD85FE475C0D6261717B
A96BC03F811EAA9F45F36B18C29B080D0F0D4BEE091678460336027BE5F60DA1
131EAE13E67AE0D132A21528B1BA9E02190D6053C07836F44B4F3452249DA274
2F1975FDE54BE1956BF9A81D91D6703F3AB779487C05208856814F1ACC4A7F7B
5754BE7FCF01EF9FF989CFC894BD5FCF05778BAA1F71B2052CB92AA45721DF8F
67860EB2B6E400BEF294AD0BE52E0885AC6834AAB075BC7ED2AC4F4847986A68
34DC9E5533C5E91796B8851763B6EAC6D70148E8DD6A47962A2FCC9DCD6848CF
3FC5DA9A33A2E1D0C22CAA7BC9EF0A2052A9FADD2B089FDCFF9B2E9B672D764D
2F51B2393ADC71A36AC0FF19688AAD55EF03974FD5D517924361791525C06CD4
9C701565126C0605DCBA60B400B92DF30A2BC7B06C5679A64DB5E633B5F8CB85
EB85B1FE1D7C558D596C7D0097FA31399A79841945D479677B8D2445E811ECA4
1B67B543BFCC11D50924DFBEF21AE3C1183FCABB2F4E65F5271B585DF2147A8F
045E8F36708C383AB60E0E8CAF02F10163A0C200F098D8361B713301CE67079C
BE840AB7599E30032432566D7E438C0A638968AC06481BBB1161022A4A5AB40F
570878E112CB53F9792361238817BA3548735C48CBE2603F7FF162F64ED65962
C52C7A22BF7AF3BC490D2489B711A29E4F5378B00283F43C55605847ECC0FD77
84A182478C4B70F8BAC1FB7FC9191E173820EAB8A5D47ED6CC41D533C8D68D06
96621D7C1479469DCBDEA1F0A937D2B9FE2B980DA6BB8A6C096E177FD17519C0
5FD39118DD74B7AA7709AF2B990D03584AFE558F0C647A6C3AB30F40074EBF90
4E6C116D035CF8FDBA0A9D56E5EDB905265D2D6D2C3B5E16FDACB9A7BBD06D09
DB34F8AB5372B04F2E64AF7DC854F308EFCC44BACDAB632971DDB94DAE9400D6
0B14053B0C54A74ABF22AFAC3083C88D9A4423F574980B7AD6D9099826F363FA
838643EC2B9949EDF0284D9893D32EC0B93813D97A5A5A3BDD179D9AEE28C7CF
7AD74AB715DD9CFAA477132F8346974364C09B4071FAC531D1CBC64BD28DE951
7C0A68D82EB52968160AE0D42A628E9C45A536EB95B0DAF6201CA2B6D39AF702
AEA27EF6AC560AC6F3BF9C5A34F26D98DC66D05A7F0B6AE8DA4F47DDFB3DC342
AB9728DE7CD79855666B026B7C9B8A79A520D5FB380CEA19A24674F7A8D5A628
DC589158B913998C676F5633D4A8FC3C0B8A32C7A8D41F77C38EB255C342C2AB
2BE4920BF098EE26F5C3A79F8A8E8E87B202D8EE780F61C8066980DA8E59D0CE
0AAEC52AD93ADD4952B14EC4BA6D11343AD3B5D2A864498651C5705B19B61E82
4F9FD2C73F1D915C9CB74B1DB734A10BA4315F52877D6DFD21EAD729CDB7B378
CEDD34262B37A194EA427A04BC18F1E2B1F7F9C1847B25F0EC755F19861073C4
0BF44FF08B39D7383D2713E2B2859B4DE22ED7C5519B58881B07218CA48BC688
FB299CEB1030A8A9959F374B74DC74CDEFD3E5D7C8FE54C9A6EC3722200E4229
53C4A8E0DB5B83CAAAC0C03C3F55166FC377E829EB5FF163FE1C22AC891A13A8
1C3D479855407B719AC4CFD539C9CA9D161E9729DDD097218C48E4FD8F118336
0FA32F3A98000BE2E075BA5DC715D0339BC3114723F4B3A4A821F62CB0DF1FDE
2D2E1EA7349E324829A88CD39230CE83B8224E8FC35C43DE0D5A4F0514FF307F
5ED154EE1D71A320C6E9A7B5EDA26186578223C50EB478AC4131EBE5D2306D33
971C89F96C58CDAFBD1DA827F84025A2ACFABA9CB84143FBB248AA643CDF2948
49D3C2F1DFE0CEAF0125C2E0322AD914573DD12540F02C2D847365CB13FCEBA2
452D8EC8922E914FB68A6F31C8CC8FD8222D1257FCC0C4FB4F8BD6C351707A52
4187ED4C6A8323B0659836F8E3CBE52FAFE31266C2CB600E2D63BCE010820AD2
4CF8AAE0CFE2B5B3A5052055154B1B7F8626D35CE31AE749910116F5279CC754
F3D1CACE1B20F09E5CBD251E2C9D6E2506031E85064E5831096030BF9C37ABD6
8DA15C161DCB7D9D71D12A3DF30AF50B62E4E3A2FE54256D88CC4BD4DC84B5EE
FE217BE0B436583B1A0BDC60ED9488E270BAB33AEC2A3A055F6BA3C3700A85DF
60C1D51ACF5AADB51C830D3375A6841B9EEC3438A4B2B346DE1E57E1B738ADF6
FD49E6A53BF48C6C2A7305F38C3437607DED09C3415310195CDFBAF4A69193C8
4271A43AA5496813687BB411678EF3357786F66BE7285F118C3E9BF987B207CA
0C68F3E600920D62E12A6433218A3FC6578B2C64E02D69A7AB6BBC36B7FF1D5D
819E07E5BDC81CCAE6E6AA80B4AC41CC092D15E2CAD2837DCAF38A2E92C0A180
0E4FEE8EBAC1F81DD9364E9FC016C3DF3952E2D330FC28991EA3729BEDA31606
4D1E298F359F7DD91E6B88A5DFC7BC2E11AA696B3129FCD0DA0A08009D2CEBBD
8EF185DA7E380509C4CCA3E37C9D4066415356244E99BD486D17A7F7FD092689
6E56EE9DB46D72E4F0382CB7877BFA824634322C07413772BC48905925D5FD7F
E1A91BA4987AD65FA54A1BD6851E96C7DE43E87335570FA82647AAAF3DDC1CB2
A8C5439CF53D76FA47E1D2A4777FE0F2A4F6CD518EB67C27FE909457CB01D87B
91B4892171B36FEB6824DD4FC47C43DAC792BAFA535476AE54EF3C43CA8B8823
07B1F07F8DE881DA7B3E1C2D64416BB099F6DC4FE8E16F5602EAE09340B59671
BD93C150433D9EA8022A2DB1C9F9FF6A9D5710A95B1F0FBEA0E2678708D7B540
FD1B47CF31220000B1D9C5282F39DED7D7664DA5536A5CC11CC1A6C0100EE0DB
0DE463C04796327EE29107319D27F5ED7BFAFC0BB8206D97E4C59DD6E6982A06
7BF87A39C35822C1CF1C896228F0BB20E245E1727C652B41FE7E20A64CA1B4A1
5D263786721D42A95DB8A159DB34A7C449A549EA5111F21052651C251B9EB5A2
6DEF9EFA45B44CC4377562BCFBB62ABB6AB6F629D9424C1E354BC3C2D960005D
56FCA222D798C68EF3919FE465EB9062FD65FB576024A490172616BB3E2B65D7
8732C40F1F4B6614F932F98837F99C524BC98E55B199A800BBA9D771A13BE986
64EFCBFA5632E1946B4282FC8FF4DC5FDA6789CAC5C9F9A8A7021E0F938FB756
B08F3A9EEE2B5844A3891B01066BA36B19BFBB47A27984EA986747BCDCE0F6B8
F9FAC89720BE0C02B77CBC6F72FBFFC2139848C2DD58C700B3429A88C0BA4F77
F6522F898162FE29671F0E84A7916E021ECF183912D211A3EED9136B5FBDC691
77AD0A23CFB7F631E00CC979AD410F813119C4AE22C39F59B10ED7095DE02D20
99FF665BEF70E76D9816F34330B8E71F816068081D325833AEDA96C0DA8C3514
E583E40A01AC8CAEB19EAB84022ACF111E1D1826E4ACC65A20305AA1A087B1CC
97528D5088D1E07DE9A232AB917BF14A36F7C6CD3036C8A458B0206B8ECADB54
3DEC16FFDD939E001AAF11F61EE5D6A4303ED46CEB347A8C51AF71C9AD585854
C18C87EA13D0DBF19AFFA96595E0EDC6A406785CB1A1B94516D4BBF6F6B68F3B
1F7AAFB0DE2E17F44D2828175BF383AD06F224BB9C8438B780DCB68059913E02
6E132E8966C4D5790BAC88EA178A57B3F296861B95ECFE48911B4F849457DFB9
73DA8D11636FF1FE719F5021A45F0C42CCFB456A8CF051D6DE35809F0B6AAFFD
9C0F3F81EDC71ACA3493A7590E27B3BC80584EABB2A4D6BB3AF1911FD2BDFD96
9D1545F4370348532EC160E0A7ADE51EEB2CE7CE111FF1EBC251B92FF416C2DB
5ED2526C14D1830EA650E969D0EB0CF01A21B78BD258DE525170137D66D6974E
05306E116CBAB609289522E47596A6A0CD8E7D24484C73C05C61C3CB834347CB
FB95D27536CFD0723A39C93D6B5D08E759E14D7B9F5A4BE90AFB9F680FE49547
01718F0AE43962F8C68BF465FE7C2844BF832E4D54880BAF264A44318841084B
16F59D45AFAF09AEAEC875307B48DA9E58A0ADEDCA170A5DCED9628B01EC6F47
232DE5CB73A83C1B82D1C8CDE11FB3803EAF74920BAFB8F5D8303BEA577C54F3
AA557BFD9BEEEC4C517428985BC20176DE92C8EA81282F9A80C8662955DCDCF4
1556C3BFE5E5723E8B6DD2B9A8F686D6AA020E49172C02DA888DE039DF710C36
35D75B805B4F3426C6C6E12E081339CDBD47CBBEA7B596C4A5EC21778AC2EDEF
42B25390854186929B3AA5B7A51652079E8B20C36D19832B0C7DDEA2817F2530
E1565B024853439A756B244E8C137F46B5F5665D8C26075627539B3B16D7D737
DD02B73254934C0A9A5A1E7E7C66311A9B555D317FB87ECF6AE2C04A8B66C886
5886E40D12E75395578DC185941EF6B8CCCB4C1E7696D16531A5EED36C30AA15
C66D5009E990FA8A632DA2E3BC27F9476CB699295F324F6906CA8174F19CAB46
BEE6168EAED2B0EC9606F6300D6B15C59B4A389ECA8B00B59BF0D7FD22BB800A
96B2722965E3FD3139EA35AB802943B5628BC95CEC4FBB62C53839985CFE0005
BBBA6A3CBB9136B2830227D9B5207C1B5E212821D44F13761959249E10508177
B1FF8B21E21EA6DDEA475DF368BB22272D3602678604FF07C30D279EFE8F28DA
C214EBC0DD03AF72071D363AD6CC628177DC91BA263056B5AEEDFDEA9F44E491
2E5431C06D2C1CEE39D5413C110EB25E120BB65529410B1866D7A52B5AF7B22E
DF4D13C1A0F8165A873EB827EBC7AF6488D173C2BDF9D0CB931E4DE9F301CD91
6B1F21E64287DB1E7F6D60C56AC06E31BD964CC1896D06E0998238D8AFB6C601
0B031446DB6AC8045322CC1A97A9B09A31092942717C414D63CD871097AB4579
D189B5644DF97E53AB4918EA294CB6CC19D867ECB72ABC47C0CF0819A3E16636
E7B2D21E46F48345B17B829686C23D64B1C018D60EE53FFB61E10BF1F8C439F0
88C9190C20D7EC6259C90CC4B223D6C2B3F870058252D9216CAE48D77AFF7345
B8FC52548179C62D839B35D99789EDE3CF25BB0C4EE70CAB7C5DA7C9BCDCFB67
F1B66E81713D2CA0F53F0390D36BF31ECF83D795D880A41CF3AAF4B280BE8D37
4A8D48A10B2713DFD32DEABA293EEB09D61AAC43F4EC19D387D38B78DBDAA064
5B2FB1C9ED1EAF65D0026672F7DB32819E0900E7F90AE93A0D8A5D7212815350
61B2CC994D41EF6AC07B567DA70D25CD20B47C231CC7937F8538038B8CC01182
88CDA498AAEF1BB3097914C795B0C7A30B9E18D86E1E99ECBD5080F51DC8A629
E1E5D10FD0ACFEF6EFF088F653F113EB1E99D586BBEC43D3EC315817DD65934A
6057B1351BF5739DB40461C04C5536562FFF26C1CB5FD8E91869E0A83A5564BF
F652BDA1DCBD0659FE7ABBC27848B139567BD0521E8E5F553F12BD1301F12489
52EE929C131149C9E03BE74D5EDA6094FAE0D3F79BDDB68EEB65AFB1EBC1A75B
CB2697C70192C3080C8BAC87E141CB501DB7E0DA2FA085EEA42B12AADADBD52E
FB4BE67A1833D36D09829FA03EE7D559D5AA9871BB28465B0A2DBDEA1DD7A748
FBDF3886107AF158F4F81F3D6472F480A08459D6E042863D685255A23A4BA8B3
AD1F9B9B7DF58324AE6E3B639DDE323A6EEAFEA964B11E474CE73F6AD9DD8DD4
705FF171BD65ABBA9B40A99BDA09CECA6556C02326452D23BEEF1080B8E63CC1
001D9C0DBA4431261733A76CB16082B4DA5855DFAD242338F6EA344E8EBFE13B
AA70CB43CE4A979D8225ED7843E4670876A6AED1DBFDB74A53A95C411178CD0D
EBA56371959D3EE03908AF2CFD2E4908981F51AC4E66A3F8256DB6AEBE1D94D9
45CB8D94E4C4EF01A237EB374D341F22820D09C8BB076A5AAE81B5E315CA901E
262B77314D921BD6746A6F786A20316B992FD412FA1D17DD29B1DF06CBCD5CDF
9C565404C7D2B26A5FF7A4CACED68C7E9ECF4FE4010A4946BA02EFE26B967C16
CC36DC88D33F56B50160CC20FFCE680552827DA0314702BD0D2112BB8C77B745
BC0DD4B1C7EA0C98434FAE393859A98FC0B3EA3A0CAE05010D6FF769550AD34A
047DDF4DCAD48C79C13C76BDBCCCF43765698AC821BE0D84FF77122EE2A7A74D
1B676D8A89C3DC0FD24606E68F9F622CEC90F4E09F25D875B7DE422E960574BE
F5C8743351DC15BF4169314611FD67186F68B19B207480D551F41DCA7DE4DABD
BB839176413BCCD2C4E4103FEB184076F816ABF37783C71E3283D2933520D145
BE35C8758391594AFF7153A7B5D4448C64E63ACE68F8192664DADA740DC6D6B0
4101F8F792B92FB79147BCC7C7A4BF4DF6D6E095968AA511C86A3176A6724C33
C008CB6DEF9052B3FC59BE28C15840782D0CEAAE542CEF3BF5B4891F92369E93
79CE45F6CBE7E3178917EF851C61C96FC51C30FFEDCECDFA28A951DD5211ACD6
84EC0A6166DDA4031A8E608B103688D2E860B9BDBCD50DE83B5995137A61DB97
7EC7BDC3F755DB6693581C5B4EC6CA9DC520FFDE29D0AF2B26F944B4DFA2FF98
D118E255713FC4593B1A8DABB9DFD465CC454484CDA735B701578570700D732C
B7F8D9B878F93495048439B2A9E2E520F183A0B292DC132DC4ACB1DDC4050721
9F411B53860C030587CBB418B5B2786E77B69ECA81864B4F28882C7019B2A400
F21F396331208B85444182DCED74D78C13D524EE7DE9DABAD975A505D1FC285C
8357E57812A261F5B8FC2DB8C0EC672AE7E8BFC266D7F5F979F004AF81C8F356
470C31B4F54AA5E59A5420B15D0CC6E61277E23AE3D35A9206DB8F5959CDBAE6
2BD2D82129F2B85E7C1C3E750AAEECA464FC03F854C0133568170C79DA3ADD5A
C376677DA22D5C20F8A2C7C956858C85FF3F30B6EC51C08D9B4F547298E65EE3
D7053389DDE1474DDB7E7634A2C093C92BAC49BFBA00A10F3355C7EA0F627131
B95E5DEEB85E693F088903D9AE900BE924E3329C55BE856E4C28547DE217668F
6FFA9766EA1F12D4AA1A9D022FF49744F3F1D90BAD43C2122F18ABCC0D24CC8C
08E7076D8D7079F3CCBCC01F2DE095AB10A9E7D2374710BCE4D2CDD9F1A7FC30
F28EFBD1ADE6543975DF99F8C9F64B084747510AB0F74A99ADDE3C2A5507CD24
64142AD1CAF3E8D3A801A9C65593E97FD6773C4F5521B5226A3CE66EF829DBD8
9EB24BB2F33508AFE9E4733B4D4C76A47A1335CA1AD3C2B451361DC744F04D3F
F4231C62C5F3370C9D152978760F1E4491254E63C10DC11FCA46DC38197B4C4E
C375FAA5F614C0F5FF6F62AE4FEEEA5A8D3E4AA152E5C338ABBB26B25B523D83
720143B30E165D9572F9FCE01DB7D89D00AB1F14DCCF1AA6218EF1FCDAE565AA
6B7DFF792E33459D996A28775A1E9BCA3F65DA6B3517623764136A5FA5E4D9C6
929762FEF540C8F5DEA18BC3044E2A895A1C304D5FD0585F95DC65C8BC727ED9
A42949C0DBD88C0A198D6A580461FEEAFB27A4518FAD5F9DB4939E33D7040A8A
1C2ED11A538528B08C60F191B34F09E5AC07A93715F48270096248080DBE183C
70CC0055BA8777786C48E71D0A4EC6220EE0DF7F6BBCD1396F58C6EC0922F248
B945E1C6E29156E0455756196F8E20C51E2684199EE5EFD7A2A94A2BDF2E5397
43D5719BE51EA4DED86D7A4B06AE62A2771727EDE59CFC37C87BB9F989AC66AD
86B833F24A232CDC0C2163E397576EC783186F66BC0AC8953B06F99B4CF1A5FA
7FF91AF2DD286236367D3FD6206DF1B2B7701C20E811C7F5902DD8ADC647BA2A
D619700D1675405E1C9A35D8B276C94ED7D68DAD6C1C9A9D92397F760A3704F5
3CA8D757D0858614188B2A4F22356187C8EC6BC71173E3B088CBAEE4923105DF
03263EC2C59DACBCBF4F8B6821501E3168C29F536CD79B48F75CBDF106D04C93
18EFE6800E303051462CE7E914E27714AFF2183EF10781EBF73BC1B4BA532859
5DAB40FA14BDA762DD19774B377C2C58C1E0C9CFA5B134B4345F76FF8A24445F
6F7FAEF2B8883F578DA3F85AB2A0F05447C3B9B81E57DAB0087C89B078143B7B
AF9067C4C1443234B24293A52059653EF2B64DA9ABF40DD1F36D628EA1086C86
6D378DB18B9B53B5583B61F9D3339E7377929FE763BBBA8B1648F46E7A49CD53
BC8912B8DBBB1DD9484629559CA31AB7A2A906A891187692144C02E84D49BA47
846B1C65FC607364D550859170B4CA391D713F3A00A368715FEE6F78532CEE2D
8976F7857130CA0932B2ACB83E6CE066430E43D16E0D780DA825AC347EE138DC
959E22DBC99CB5ABA942FE0F7E1CC26DF0F139B04229B1035582B56F8E44CEB8
654AC79AACFCCBFAF40EDA07278DA5408C556542BD5BC0BB3EBCE2E7C56E180C
73756CCDAEA9084BC861A044502AD9A7D8C6D9C5C1BE025E51E44425EC5B7856
FA2C8C10F6B6CF80898FAB4BADFEE9ED030168ED7339161683C3F4D34A875125
6D9D4B1A16D4D3E6B83EFE20C3FF53ACCB292A8690B9BE1FD2FC5D972E148054
20BA23B66124203536CB04FCAA433B9C6D4683C3B1F57334623409DBC3224E61
5E1A621D5784661CDD396E01226D4929EE7C9DC63EA8F9780763E889B13FB2BA
AB70B0CC1D1484D908C8A61059B21A2B3771D04D150E5F07234513431B7D81D8
9117506F0E89A63DFEBB88CA1CE6C82BC6C968742603F4FDB00FB9BCB2B483E1
071E5CFA5CDF9237A6C4EBE688A7C7C925DFAD72FA86B7C7A5DB3B5B32E6F3D5
BEEB8A2D7BF5E58BBB72495C099CF32A83DF55CFA517C30BB1E58CB51AC2927A
710F982BA312B526195C4BDB3568F12D7EDFC0DDDDF3EFAB051F5A964B2CB6DA
D323811A946008743118F5F9852614125192F53A317A31B5CF413C5A6BC7DFE8
BA9D7BE47AC85788ED73AE2039F97ACEFB9E01447A91BFAE343170BD8C6000F9
059E85CA54122ECBFFB23D7A75DE5B6C8B53BA61FE1B14931699CCAD9EFCC686
0FE8E232465908E9E384AC5E334D9D374A9C1B6C0368B6486A3D06624645D7F5
9D264A7F4B1C259E4B1010AC355CD9D1DD0C6F1B20D6433BE8B35068104B041A
D7722616B477CCFE4F4CAA4EC3F996348D63D35B66CF799F616CB0CF628339AF
F34FF5CB87A377ADBF202718B9E47B1DB784435B7EDCCBF11490864E7668ED60
549231E1192668D9EAA17105FEFAB3B50057847318B7798F16DD21DDACCA2B64
B5415C57BB71EBF8EA9091A16E9A01B6053D89FA287A8C9946FD16E6935535C1
4B5F3A5F84A8338C52BD75F4AF10FD6BAA7D4274677B103477A0EB323CBC96D0
622DA31ED625536CDC4A40728CA68012D0279CA27A6BA937D3C8999B361EB417
A261904FBF8BEE6DB3D13F123EFDD3FD140B5D3C78CD70BD40EDD7C88DB68913
87EA2F412313DCE6EABE30E90ECFCE19FAAFFA00C0B0B311BC285C65CCC948E0
6B72248FE3C610A3273E46D03CF4D270C2C6037CC365F8B761A85276F19BB1E9
4DBFDF8A78969FF3C08562DE4012BAEF33DC753051777801BB46D6F315033E0F
A4E0A4EF691E21A7F5245DB14845B5B34155F816539990B1C4446FCED900F082
85411F2D93F5377996B9B22008E4F6C7C3A00FF21D29A7FED97FD50E7B634994
90D977C52CF9600CFE969A343BC65D23B24F079F4A19999C8498E8419F8391DE
31E8C07076DBB0C43C916AC120B8EB4CD729698CCA8E164CB2DD5058E24BD865
53E40B42A2AE6E7522C44367190617A6149D5C8565581C2E348AB6D0FB1AA99D
D607A204AEAA689853CB4DC6F4F876FB7A2E0959887C1A67A03BD63D81127270
094F79EF9C6981DB35C7424378B835EF0DBE0799771B95DB671D4B8F5EAB70B6
1790DCCD793CE0B920C95DF503FABEA94ABFDB34C3670060F85AFAACEF7A8D19
CC5877E9E80FFEFA7E6FA5C1606E5E2ADAD62A594BD6A315C789D607EAD0BCF9
7ED3FAF122C220D61122FB5658F5B8308055EB21E519F3B6B113CD46AA67B6B6
19D648DF16E3EA67D9AE5503A185E227D49CF07CEC8C607D83B4CD80DA32FEEE
002A9D64B50B488945546C246B9828AD2B245493B4FB23D7A2D79CC6B9218FC5
C403C92CC7497D5E6099FB83138E7BD40AF3779F7E8B25F099751805EADC5F02
9FBACB08059C1E97B3ABB529E9AB67F8AEBD98A4A1080D2E917EC3E48AE4A3B5
8796AB4C59FB48079EABD6E7D9481DE63EB06280308DF3941F3A02BB45FABA2E
726C4026D971E99196EBF4FDA4F132C9D6435CC92BFDE5ADFBB6965757F65944
78E47A3285043681E0834F2530CB98FB956CE9ECA5B11D0C00FF984A96B95699
356EBDB39513610566C25520000BE3B7D889EBB5DBC8F92249FB26F0FF8E1C38
07B54C139317F55CA58FACB4EEA129EB8FD63DCB76E4687C607D7E8FB0CF9929
2D8844F3E84CA1856F591A0C69E8B55A649880547E3FE62406D6D7DC32D66628
148F3B60F7FAE982C1675D29F6F0D214F45B6CA69ED6B2B93DF2A4B631C8088B
FA7FBAC826F89E77EABAF185ABFCD82BF43832D65178B796E4C6FCEAF4F7E6D6
03C7E0275B35ED018ECA88BE26957D35B9E452A507B3D6FFD69EA5CA602E5905
0A83A389301B9F6EF5D08B2C88390587439FD21CAB3FA6370F703FF0C698C2A8
FB0AB1A590284559A208C4F100780E929E8AADFD76FCFBBD188EDE48D243A802
AE8A4679ECDA8D6B285304B2D4D560C95524560C64F316527E825DAFABDB4AC9
07AAED40E0E2DBE7329D1A2C0334233FB28295638EC1C40190B6C9733437E8F9
1BC5DE13990A9E7A56B363F4A045A50A66A7F0E606D1EDD49FEBEA5F272CD1A0
FA7AE33621649591F84C24DD196E4EE263178814AE521F178F80671B62A7B8FF
F327B6CA3632C5A4F4CCAF1F2E76CF65B20DE9194584DDF3D8FF786166E968CF
808377AA6E3427333C372F100C064789D71508E950952117792FE82CED447273
969913AD25DDE1D12B7CC63AAA69B27CE437B93FA1D955B468637797F21B7CE7
3BD214817AD5F1DD2B32861E6D0CB972F101FD307323D57267414598BBDE739A
738180BD857B345B010FFB687F71B14DC43CB1A368D0435F4B5E7D22D7A2271E
EE599C423F7842ADA8D62E4C4AE4356CE8098360C494FDD18E7209F033B94E31
BC4EFC97FFCEA4A8CC486C57E52DD412FBD8E754709AA4F1164C8F7670A8BC31
06E2C14E2BE4D3D465775B688745F39A7AA01C8B30749A73AEBB09D3BCDD950C
B2435DD8B80906F6ACE30051D6E7D6ABE23DD6F912BC82E69F7F0AEEEE7B4750
4EAC934945ADEA6D15E2476BB79F1812210114B296FBBF7FF56BD9DCB19A5853
2791925A8D7F2D36DE7BA2ADEC170FC718B519DA3066126D006B5445CA43DEB6
C7450C57D04CA7A59D0775D15516A5368FA2831D71B45AAA7DCB7302C1AD60A7
C7578198EFE7E9C20EB6429C68E494D771CDAF27CD8F75B95F8E69522ADFD9D4
2E2637E82B337B4F49663E740C1F406E5E0D92B50A42E375B55F1BBBE91BC55A
81CC89418A9BFB8961CCA67F2E7DCC191B590488663A13B848EF0EF99D2FF30A
C6807B714B9792B31D8006F314CCC7386AC29CCFFB5D3FAE78BBF1803D64C514
F2EB303D5C5069CB24641E28550E623B57431A09F988283FC39EB3B3C5422094
691DC6C29A8CB042B457375A0CB5A0339043DC9CFB742206834D1E898BC2058F
03735EC54ACF2209E5499A3CC15685AF6804A15DF856B337E11CD404FF4AF2D5
71B31AB0E0721BF6B1F2CCEE4BC3955DBC007BD70E28868E3798C5C37DDBEF0E
425693F9743EE9FDFABF10FFEA6E489042A803825DEBC5AFB642381FB2596582
A7F5536A9287A1B0ED2BA5E4D5BA207AA86393C8CD596425FB559D122AF169B1
05738213F903C70BB29D852EFC198719CB94DE7EDD49BA32262AA204BCBC5065
95458491A14805FE32B3576EF5BF716EA283A7DD1CC4A422B7038C029649978F
F47EC94D911D1A7F089D884A617EBE0FA13FDB8A3AB54B66C75CF6627D06EF03
B7206D762634E330FB2028BFE83493E44F16B14538F9A957196D95674836F18A
3A1CB8A807F2AE5EEEE5E6B3433A3F216ADB45EA0B75973F4C4A9C65F46912CB
1E1A42B027A3E75A8DED52D4AFFECB0C6DC8D31E9116EB28BDA17CF3051F552E
BBC4CA9E5D14F33F6E869EBA2484F56B64ED2E391FCAFF2B887A6565A6153EDB
2FB8A3E8140C81ECEBFD26A75857276B16E6DD30993C35B1FAD4E83D56144DDA
B119196601ED9D98E182E472DBD90378CFED8992CD536A4FA2BF46ED8F56D5B3
6F5E79D920AFA03FE41BC9A94C7C4A57CB405FCC30573EEF64D5B158DFB2EA12
F360CC299B96ADC2567B8E5B133A26524A2D7C07BE5360103CB4A0DC1FA5D53E
EF7735A1F16FD5BDC51F4228C3FB0387AC31B1F8E8CEB6CAC7DF0E50DB3C2195
8C3001C306ACA573F2AB6AD2BF1373896A3C99BCC08FF107C347961808648299
721A4BAA34E65D7D799D6FB26B8B048908A9B29864179ACA43A343793897BC06
614A152DAF5D9DE832D003E154F56FF97709C11F9E3F980B275A050539764724
DC0872F3B4F85E3A1F63F2EC481145A5A18DE65034D0CC2EF6247250FA17A135
D8513E8A79945910FC8007D98586B29CF8EF5DE6A30A4940836AC9EDA9800EBF
772D7484E9491AEFA3C02DBE74A357FB759252026E57696E955B442AC9347616
03D1E0E18571D3643A75FA58806BE231598764056642D8B4B8C2D2D8050D215A
E9545848BE52B670A6220B253F8C801F869A35A58844DCDBF776F24142019631
BC435A3E74778E4173A1870D7E7678988274CE2AE0A379B50DFDEF9E5FF1999A
6AB4AF24743DB51A225FA38BB516F3DCF1A7223CDF84FC36C9771278811FEEF0
B6D071E17758FA600C8EE798C50E8A7312A5FA4A68F5C81A1B36D4A7418ADB09
04B4324AAF3F50C55B03317352D409DD295C822D28D2050ED634B17C3BBD8A88
CE0174C0C3FE4003BEDFBF5DC66E99279F177BD46539B116C0DBF1C19B8E8CCE
4BBD9F61849DE3264EDD11BB028ACEBAAB4018E3AF32ED52E762F96D3ED4EF4B
70414624805B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrschein)
@start /Fa 242[1594 13[{ enclmmathsy ReEncodeFont }1
1594.02 /LMMathSymbols10-Regular rf /Fb 203[993 1[993
50[{}2 1328.35 /wasy10 rf /Fc 168[1138 3[615 30[553 1[553
3[307 46[{ enclmec ReEncodeFont }5 1106.96 /LMRoman10-Regular
rf /Fd 160[909 45[606 1[606 47[{ enclmec ReEncodeFont }3
1212.12 /LMRoman10-Regular rf /Fe 201[470 3[470 470 49[{
 enclmrm ReEncodeFont }3 885.568 /LMRoman8-Regular rf
/Ff 177[959 78[{}1 1328.35 /MSBM10 rf /Fg 205[886 50[{
 enclmmathsy ReEncodeFont }1 1328.35 /LMMathSymbols10-Regular
rf /Fh 135[739 61[361 58[{ enclmmathit ReEncodeFont }2
1328.35 /LMMathItalic12-Regular rf /Fi 194[1012 3[650
2[650 650 650 650 650 650 650 48[{ enclmrm ReEncodeFont }9
1328.35 /LMRoman12-Regular rf /Fj 190[969 969 14[969
969 30[661 661 16[{ enclmmathex ReEncodeFont }6 1106.96
/LMMathExtension10-Regular rf /Fk 650 2[723 5[650 17[650
31[975 73[578 1[686 939 686 723 506 513 506 1[723 650
723 1084 361 686 397 361 723 650 397 578 723 578 723
650 6[795 2[1336 975 1[939 723 957 1[885 2[1192 813 1011
668 469 1[1021 849 885 993 1[921 975 1[614 3[361 361
650 650 650 650 650 650 650 650 650 650 650 361 434 361
2[506 506 6[361 2[1084 2[759 5[650 21[{ enclmec ReEncodeFont }70
1328.35 /LMRoman12-Regular rf /Fl 1098 132[956 4[1196
837 849 879 1[1196 1076 1196 1793 598 1136 1[598 1196
1076 658 982 1196 956 1196 1046 9[2223 2[1497 1196 3[1616
1682 2041 1293 1[1111 801 1682 1[1353 1412 1[1554 1530
1625 9[1076 1076 1076 1076 1076 1076 1076 1076 1076 598
717 14[1793 30[{ enclmec ReEncodeFont }48 1912.83 /LMRoman12-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fl(WS)717
b(2.4)g(-)g(1)h(Binomialk)-60 b(o)60 b(e\036zien)-60
b(t)715 b(-)j(O)-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray
-741 5244 a Fk(1.)p 0 TeXcolorgray 651 w(Betrac)-36 b(h)g(tet)433
b(wird)g(der)g(Binomialk)-36 b(o)36 b(e\036zien)-36 b(t)23791
2964 y Fj(0)23791 4956 y(@)24759 4314 y Fi(20)25040 6306
y Fh(x)26060 2964 y Fj(1)26060 4956 y(A)27462 5244 y
Fk(mit)434 b Fh(x)369 b Fg(2)f Ff(N)p Fh(:)921 10476
y Fk(Gib)569 b(alle)h(W)-108 b(erte)569 b(f\374r)g Fh(x)601
b Fg(2)e Ff(N)570 b Fk(an,)g(f\374r)f(die)g(der)g(gegeb)36
b(ene)570 b(Binominialk)-36 b(o)36 b(e\036zien)-36 b(t)571
b(den)855 12467 y(W)-108 b(ert)433 b(1)h(annimm)-36 b(t.)p
1 0 0 TeXcolorrgb 921 15013 a Fh(x)1660 15212 y Fe(1)2555
15013 y Fi(=)368 b(0)921 17558 y Fh(x)1660 17757 y Fe(2)2555
17558 y Fi(=)g(20)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 5244 a Fd(___/1)p 1 0 0 TeXcolorrgb
47905 7236 a Fc(WS)h(2.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 21233 54804 45 v -2331 26534 a Fl(WS)717
b(2.4)g(-)g(2)h(Sc)-60 b(hisc)g(h)g(ule)716 b(-)h(O)-60
b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray -741 29842 a Fk(2.)p
0 TeXcolorgray 651 w(Einer)570 b(Sc)-36 b(hisc)g(h)g(ule)568
b(stehen)h(in)h(einer)g(W)-108 b(o)36 b(c)-36 b(he)569
b(neun)g(Sc)-36 b(hilehrer/innen)569 b(zur)g(V)-108 b(erf\374gung.)921
31833 y(F)-27 b(\374r)621 b(die)h(in)f(dieser)h(W)-108
b(o)36 b(c)-36 b(he)622 b(geplan)-36 b(ten)621 b(Sc)-36
b(hikurse)621 b(w)-36 b(erden)622 b(ab)36 b(er)621 b(n)-36
b(ur)621 b(sec)-36 b(hs)622 b(Sc)-36 b(hileh-)921 33825
y(rer/innen)433 b(b)36 b(en\366tigt.)921 39138 y(Gib)433
b(die)g(Bedeutung)g(des)g(A)-36 b(usdruc)g(ks)20660 36858
y Fj(0)20660 38850 y(@)21628 38209 y Fi(9)21628 40200
y(6)22279 36858 y Fj(1)22279 38850 y(A)23681 39138 y
Fk(in)433 b(diesem)h(Zusammenhang)f(an.)p 1 0 0 TeXcolorrgb
921 42459 a(Dieser)505 b(A)-36 b(usdruc)g(k)503 b(gibt)h(die)g(Anzahl)g
(der)g(M\366glic)-36 b(hk)g(eiten)504 b(an,)h(sec)-36
b(hs)504 b(Sc)-36 b(hilehrer/innen)921 44451 y(f\374r)640
b(die)f(Sc)-36 b(hikurse)639 b(\025)i(unabh\344ngig)e(v)-36
b(on)640 b(der)f(Zuordn)-36 b(ung)638 b(zur)i(jew)-36
b(eiligen)641 b(Grupp)36 b(e)638 b(\025)921 46443 y(auszu)-36
b(w)g(\344hlen.)921 50980 y(L\366sungssc)g(hl\374ssel:)470
b(Ein)g(Punkt)g(ist)g(genau)h(dann)e(zu)h(geb)36 b(en,)470
b(w)-36 b(enn)470 b(die)g(In)-36 b(terpretation)769 52972
y(\(sinngem\344\377\))434 b(der)f(L\366sungserw)-36 b(artung)432
b(en)-36 b(tspric)g(h)g(t.)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 29842 a Fd(___/1)p 1 0 0
TeXcolorrgb 47905 31833 a Fc(WS)369 b(2.4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 56779 V 0 TeXcolorgray
24746 81281 a Fk(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fl(WS)717 b(2.4)g(-)g(3)h(F)-179
b(erienlager)715 b(-)j(O)-60 b(A)717 b(-)h(BIFIE)p 0
TeXcolorgray -741 4800 a Fk(3.)p 0 TeXcolorgray 651 w(A)-36
b(us)484 b(einer)g(Grupp)36 b(e)483 b(v)-36 b(on)485
b(Jugendlic)-36 b(hen)484 b(\(14)h(M\344dc)-36 b(hen)484
b(und)f(10)i(Bursc)-36 b(hen\))484 b(sollen)h(Be-)921
6792 y(treuer/innen)432 b(f\374r)i(F)-108 b(erienlager)433
b(ausgew)-36 b(\344hlt)435 b(w)-36 b(erden.)921 12105
y(In)g(terpretiere)432 b(den)h(W)-108 b(ert)433 b(des)h(A)-36
b(usdruc)g(ks)22691 9825 y Fj(0)22691 11817 y(@)23660
11176 y Fi(24)23985 13167 y(2)24961 9825 y Fj(1)24961
11817 y(A)26363 12105 y Fk(im)433 b(gegeb)36 b(enen)434
b(K)-36 b(on)g(text.)p 1 0 0 TeXcolorrgb 921 14474 a
Fj(0)921 16467 y(@)1890 15825 y Fi(24)2215 17817 y(2)3190
14474 y Fj(1)3190 16467 y(A)4738 16754 y Fk(gibt)579
b(die)g(Anzahl)g(der)g(M\366glic)-36 b(hk)g(eiten)580
b(an,)f(zw)-36 b(ei)580 b(Jugendlic)-36 b(he)579 b(dieser)g(Grupp)36
b(e)921 19441 y(auszu)-36 b(w)g(\344hlen,)359 b(unabh\344ngig)g(v)-36
b(on)360 b(der)e(Reihenfolge)j(der)e(A)-36 b(usw)g(ahl)359
b(und)f(v)-36 b(om)360 b(Gesc)-36 b(hlec)g(h)g(t.)921
23978 y(L\366sungssc)g(hl\374ssel:)470 b(Ein)g(Punkt)g(ist)g(genau)h
(dann)e(zu)h(geb)36 b(en,)470 b(w)-36 b(enn)470 b(die)g(In)-36
b(terpretation)921 25970 y(des)433 b(Binomialk)-36 b(o)36
b(e\036zien)-36 b(ten)435 b(sinngem\344\377)f(dem)g(der)f
(L\366sungserw)-36 b(artung)432 b(en)-36 b(tspric)g(h)g(t.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
4800 a Fd(___/1)p 1 0 0 TeXcolorrgb 47905 6792 a Fc(WS)369
b(2.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 29703 54804 45 v -2331 35132 a Fl(WS)1135 b(2.4)g(-)h(4)f
(Elfmetersc)-60 b(hie\377en)1135 b(-)h(O)-60 b(A)1135
b(-)h(Matura)f(2014/15)h(-)-2331 38154 y(Haupttermin)p
0 TeXcolorgray -741 41461 a Fk(4.)p 0 TeXcolorgray 651
w(In)574 b(einer)g(F)-108 b(u\377ballmannsc)-36 b(haft)574
b(stehen)g(elf)h(Spieler)f(als)h(Elfmetersc)-36 b(h)g(\374tzen)574
b(zur)f(V)-108 b(erf\374-)921 43453 y(gung.)921 48692
y(Deute)433 b(den)g(A)-36 b(usdruc)g(k)12977 46412 y
Fj(0)12977 48404 y(@)13945 47763 y Fi(11)14271 49754
y(5)15246 46412 y Fj(1)15246 48404 y(A)16648 48692 y
Fk(im)434 b(gegeb)36 b(enen)433 b(K)-36 b(on)g(text.)p
1 0 0 TeXcolorrgb 921 51061 a Fj(0)921 53054 y(@)1890
52412 y Fi(11)2215 54404 y(5)3190 51061 y Fj(1)3190 53054
y(A)4590 53341 y Fk(gibt)431 b(die)h(Anzahl)f(der)f(M\366glic)-36
b(hk)g(eiten)433 b(an,)e(v)-36 b(on)432 b(den)e(elf)i(Spielern)f
(f\374nf)g(Sc)-36 b(h)g(\374tzen)921 56028 y(f\374r)558
b(das)g(Elfmetersc)-36 b(hie\377en)558 b(\025)h(unabh\344ngig)e(v)-36
b(on)559 b(der)e(Reihenfolge)j(ihres)d(An)-36 b(tretens)557
b(\025)921 58020 y(auszu)-36 b(w)g(\344hlen.)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 41461
a Fd(___/1)p 1 0 0 TeXcolorrgb 47905 43453 a Fc(WS)369
b(2.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 61495 V 0 TeXcolorgray 24746 81281 a Fk(2)p 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fl(WS)804 b(2.4)h(-)g(5)g(Binomialk)-60
b(o)60 b(e\036zien)-60 b(t)804 b(-)h(MC)g(-)h(Matura)e(2013/14)h(1.)
-2331 4622 y(Neb)60 b(en)-60 b(termin)p 0 TeXcolorgray
-741 7929 a Fk(5.)p 0 TeXcolorgray 651 w(Betrac)-36 b(h)g(tet)433
b(wird)g(der)g(Binomialk)-36 b(o)36 b(e\036zien)-36 b(t)23791
6645 y Fj(\020)24452 7340 y Fe(6)24452 8387 y(2)24922
6645 y Fj(\021)25583 7929 y Fk(.)921 10586 y(Kreuze)368
b(die)g(b)36 b(eiden)367 b(A)-36 b(ufgab)36 b(enstellungen)368
b(an,)h(die)f(mit)g(der)g(Rec)-36 b(hn)g(ung)37462 9302
y Fj(\020)38123 9996 y Fe(6)38123 11044 y(2)38593 9302
y Fj(\021)39623 10586 y Fi(=)369 b(15)g Fk(gel\366st)874
12578 y(w)-36 b(erden)433 b(k)-36 b(\366nnen!)p 1062
15278 44260 45 v 1062 22325 45 7047 v 1770 17138 a(Gegeb)36
b(en)623 b(sind)g(sec)-36 b(hs)623 b(v)-36 b(ersc)g(hiedene)623
b(Punkte)g(einer)h(Eb)36 b(ene,)623 b(v)-36 b(on)624
b(denen)e(nie)1770 19130 y(mehr)393 b(als)h(zw)-36 b(ei)394
b(auf)f(einer)g(Geraden)g(liegen.)h(Wie)g(viele)g(M\366glic)-36
b(hk)g(eiten)394 b(gibt)g(es,)1770 21122 y(zw)-36 b(ei)435
b(Punkte)e(auszu)-36 b(w)g(\344hlen,)433 b(um)g(jew)-36
b(eils)435 b(eine)f(Gerade)f(durc)-36 b(hzulegen?)p 42912
22325 V 1 0 0 TeXcolorrgb 43621 19134 a Fb(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 22325
V 1062 22369 44260 45 v 1062 29158 45 6789 v 1770 24229
a Fk(An)434 b(einem)f(W)-108 b(ettrennen)432 b(nehmen)h(sec)-36
b(hs)433 b(P)-36 b(ersonen)433 b(teil.)h(Wie)g(viele)h(M\366glic)-36
b(h-)1770 26221 y(k)g(eiten)553 b(gibt)f(es)h(f\374r)f(den)f
(Zieleinlauf,)j(w)-36 b(enn)552 b(n)-36 b(ur)551 b(die)h(ersten)g(b)36
b(eiden)552 b(Pl\344tze)1770 28213 y(relev)-72 b(an)-36
b(t)434 b(sind?)p 42912 29158 V 45277 29158 V 1062 29202
44260 45 v 1062 35991 45 6789 v 1770 31062 a(V)-108 b(on)362
b(sec)-36 b(hs)362 b(Kugeln)h(sind)f(vier)h(rot)f(und)f(zw)-36
b(ei)363 b(blau.)g(Sie)g(un)-36 b(tersc)g(heiden)360
b(sic)-36 b(h)362 b(n)-36 b(ur)1770 33054 y(durc)g(h)504
b(ihre)g(F)-108 b(arb)36 b(e.)505 b(Wie)h(viele)f(M\366glic)-36
b(hk)g(eiten)506 b(gibt)f(es,)g(die)g(Kugeln)g(in)f(einer)1770
35046 y(Reihe)434 b(anzuordnen?)p 42912 35991 V 1 0 0
TeXcolorrgb 43621 32929 a Fb(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45277 35991 V 1062 36035 44260
45 v 1062 45074 45 9039 v 1770 37895 a Fk(Sec)-36 b(hs)433
b(M\344dc)-36 b(hen)433 b(einer)g(Sc)-36 b(h)g(ulklasse)434
b(kandidieren)f(f\374r)h(das)f(Am)-36 b(t)434 b(der)f(Klassen-)1770
39887 y(sprec)-36 b(herin.)641 b(Die)f(Siegerin)g(der)f(W)-108
b(ahl)640 b(soll)h(Klassensprec)-36 b(herin)639 b(w)-36
b(erden,)640 b(die)1770 41879 y(Zw)-36 b(eitplatzierte)558
b(deren)f(Stellv)-36 b(ertreterin.)558 b(Wie)g(viele)g(M\366glic)-36
b(hk)g(eiten)558 b(gibt)g(es)1770 43871 y(f\374r)434
b(die)f(V)-108 b(ergab)36 b(e)434 b(der)f(b)36 b(eiden)433
b(\304m)-36 b(ter?)p 42912 45074 V 45277 45074 V 1062
45118 44260 45 v 1062 49915 45 4797 v 1770 46978 a(Wie)435
b(viele)f(sec)-36 b(hsstellige)435 b(Zahlen)e(k)-36 b(\366nnen)433
b(aus)h(den)f(Zi\033ern)g(6)h(und)e(2)i(gebildet)1770
48970 y(w)-36 b(erden?)p 42912 49915 V 45277 49915 V
1062 49959 44260 45 v 47992 7929 a Fd(___/1)p 1 0 0 TeXcolorrgb
47905 9921 a Fc(WS)369 b(2.4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 53987 54804 45 v 0 TeXcolorgray
24746 81281 a Fk(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fl(WS)713 b(2.4)g(-)h(6)g(Jugendgrupp)60
b(e)711 b(-)j(L)-179 b(T)712 b(-)i(Matura)g(2016/17)f(-)h(Haupt-)-2331
4622 y(termin)p 0 TeXcolorgray -741 7929 a Fk(6.)p 0
TeXcolorgray 651 w(Eine)610 b(Jugendgrupp)36 b(e)608
b(b)36 b(esteh)-36 b(t)609 b(aus)g(21)i(Jugendlic)-36
b(hen.)610 b(F)-27 b(\374r)609 b(ein)h(Spiel)g(sollen)g(T)-108
b(eams)921 9921 y(gebildet)434 b(w)-36 b(erden.)921 12466
y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36 b(k)g(en)358
b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357 b(Ankreuzen)g(der)h(jew)-36
b(eils)360 b(ric)-36 b(h)g(tigen)921 14458 y(Satzteile)434
b(so,)g(dass)g(eine)f(mathematisc)-36 b(h)434 b(k)-36
b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36 b(tsteh)g(t!)921
18650 y(Der)735 b(Bionmialk)-36 b(o)36 b(e\036zien)-36
b(t)15289 16370 y Fj(0)15289 18362 y(@)16590 17720 y
Fi(21)17240 19712 y(3)18223 16370 y Fj(1)18223 18362
y(A)19926 18650 y Fk(gibt)736 b(an,)p 25588 18650 3150
45 v 29210 18602 a(1)28738 18650 y Fa(\015)p 30332 18650
V 3885 w Fk(;)g(sein)f(W)-108 b(ert)735 b(b)36 b(etr\344gt)p
921 21749 V 4542 21701 a(2)4071 21749 y Fa(\015)p 5665
21749 V 3583 w Fk(.)p 0 TeXcolorgray 0 TeXcolorgray 3885
23122 30768 45 v 3885 26206 45 3085 v 18944 24903 a(1)18472
24951 y Fa(\015)p 34608 26206 V 3885 26250 30768 45 v
3885 31305 45 5056 v 4593 28110 a Fk(wie)630 b(viele)h(der)e(21)g
(Jugendlic)-36 b(hen)629 b(in)g(einem)g(T)-108 b(eam)4593
30102 y(sind,)434 b(w)-36 b(enn)433 b(man)g(drei)h(gleic)-36
b(h)434 b(gro\377e)g(T)-108 b(eams)434 b(bildet)p 32243
31305 V 32951 29110 a Fb(2)p 34608 31305 V 3885 31350
30768 45 v 3885 38396 45 7047 v 4593 33209 a Fk(wie)340
b(viele)h(v)-36 b(ersc)g(hiedene)338 b(M\366glic)-36
b(hk)g(eiten)340 b(es)f(gibt,)h(aus)4593 35201 y(den)489
b(21)h(Jugendlic)-36 b(hen)488 b(ein)i(Dreierteam)g(auszu)-36
b(w)g(\344h-)4593 37193 y(len)p 32243 38396 V 1 0 0 TeXcolorrgb
32951 35205 a Fb(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 34608 38396 V 3885 38441 30768 45 v 3885
45488 45 7047 v 4593 40301 a Fk(auf)421 b(wie)f(viele)h(Arten)f(drei)f
(un)-36 b(tersc)g(hiedlic)g(he)419 b(A)-36 b(ufga-)4593
42293 y(b)36 b(en)322 b(auf)g(drei)f(Mitglieder)h(der)f(Jugendgrupp)36
b(e)320 b(aufge-)4593 44285 y(teilt)434 b(w)-36 b(erden)433
b(k)-36 b(\366nnen)p 32243 45488 V 32951 42296 a Fb(2)p
34608 45488 V 3885 45532 30768 45 v 0 TeXcolorgray 0
TeXcolorgray 39150 23232 6601 45 v 39150 26317 45 3085
v 42125 25014 a Fk(2)41653 25062 y Fa(\015)p 45706 26317
V 39150 26361 6601 45 v 39150 29620 45 3260 v 39859 28417
a Fk(7)p 43341 29620 V 44050 28323 a Fb(2)p 45706 29620
V 39150 29664 6601 45 v 39150 32924 45 3260 v 39859 31720
a Fk(1)217 b(330)p 43341 32924 V 1 0 0 TeXcolorrgb 44050
31626 a Fb(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45706 32924 V 39150 32968 6601 45 v 39150
36227 45 3260 v 39859 35024 a Fk(7)g(980)p 43341 36227
V 44050 34930 a Fb(2)p 45706 36227 V 39150 36271 6601
45 v 47992 7929 a Fd(___/1)p 1 0 0 TeXcolorrgb 47905
9921 a Fc(WS)369 b(2.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 49560 54804 45 v 0 TeXcolorgray
24746 81281 a Fk(4)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
