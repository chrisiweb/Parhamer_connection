%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 1.3/WS 1.3 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:48:11 2017
%%Pages: 12
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMRoman8-Regular LMRoman10-Regular TeX-feymr10
%%+ LMMathSymbols8-Regular LMRoman6-Regular wasy10
%%+ LMMathSymbols10-Regular LMMathItalic8-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrscheinlichkeit und Statistik/WS 1.3/WS 1.3 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0847
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3CB3A677904DB96A4FC7509374E544FDFD4473683CE7
52445AD38E6F3AADA886EAD97F34E1B4DE04B482145F39350CB3BD73F6BE22FD
F714EED60CF92C851335C54AC440689A9CFB00470F98FE893DC9FE736A73D749
8A032F336C94C4C3C0F4ECFA9007FD8BF48AC4747D6A07A1EE6BECB17039FF93
8277AE848F2424871BB26E5F9963F3C6022BCB476ACDDDC00930BE769752504D
9980BC8D8085015695A4B206D94F9FBEE46F6B6338DD6CF2924E49D59702A6B3
E394C790FB4FB698F2DE0CCFAD5EFC9D6CA122FB2077E554C9C84A1760A7316F
84CB56870EA2BE9D0B1D1F3D34CEBAA0367AD81238EA8DC5905A6024BD320877
6426BDF60108BD68D8A7AAF86BF58F569F4BF96B536CBFC6C74CD595FB817AF0
E2549769A76C00B68008740B2C901D1ECBC7E64133C07C6A7C61C9490B5B638A
B4F1BC4953D431C1A7FB385631BAE78B3581282C7269594865E9453E9B6EF227
867D9CF9549B3B5E2A7C6EC024BBCBDDA2519088F3823665B10806DB07E3610C
564183F2641C90D3BC9C9C20473D6FAEBE724D45403C0CE7DB59931D705C7CDF
634276519375C0FA36A7D076155155214A256768C846557A983C753F937F0497
F0F6CAF8690596A92D6B28370196094CE0D4D8564975D17D8E0A1227998D4B94
FCA8042756FBD35FBA0A67BA43D6851AD4CD3BC739AE2E22CCC1851B6C2D4029
B943D7E93FD4820BB64383828603A74543673D6230D5F2776ABE58CB9B13DB85
7C0A6824B7C60063FA8FF90D3CED5FFC01F92624AA8174FB395D6608B36CB1FE
F39B666A94D15F6FB5B4DF71D8D54DF2F0DEE08EF7D1EF19915BD08DB232A3AD
EC3800693DF0F764F0479F34FB28FA68B37848084EFDC604A0EF37FF19FD7DA0
301E914EB4B7456DF946FEEFB2BE2E77CA92FFF3DF4BEC2F49DBD44B995D5DF9
902E8025EFB02F0447BB833B0D91A874F95B68C0CAAAC8FAEBA26266C85C7FD7
4B5E4EF480988AA30EAC8CD07D10E5195B7D46B57F996D0B21E89872FD564ACB
36CBF058A6C7628B1612C379841BC04CA5D5C9E7B9326E24A0D47CB1A6556458
0344FDEDCDF9C6378A0ED2145E941E8A3ED8C81B493817ECAFB9BAC34E90F8E5
E5AC0C06039473A16EC77BFB02C99380455AC8AA4BF620DCAA84B1A5DFFAA74A
EC52A18316BC4D22AED308DD3AAE8D4FA033DA46689D94FC68CEAA5C1AEDBCD1
B1310C75AC850F3477512FC6AC0705899C59D1FBF4E55AFFBD0A14469DBEB329
DB880FE14F0BF59EE6305C1E7985090A9DE129AFBCE81F1214B6CA2F021AD88A
130C35D4012D243131FD02FC6B5495CBB87E821B5FAFBF983191C05BC7404139
5C7F18D54E60B554F7007CC245F4FC3B94126DA6BAB86A436D8625726DEBF79A
1FC84F317E849418EF67E03A19976F76B1146B636BC24EB0A55A52D06E9390D2
496F159549B829C8E6E435043FE03050ACD0C5A1EF1B1439021E6DE41414BFEB
0BB7E0F72AECDD21043262247354FCE56572A5AEF0C58FF01B2D58585FB733E6
85BFF9DD856A367B35D1E0E411BB4A7478158F90EE4E9B4A7BE52BB2BEB3DD82
19CC78E1831BD62783C06DAAAAA6F9C757A2857147554347DD5B0084D90D525C
FA183BBFC9BCB2360A20C57A645874F5E63480CF4FA09BD296BACB5EC7D53DF6
B36B188211A1B84EDADDE16731A3BE21034CB417D0616801E9282769D95D6DDC
0190DB1269E8AD4E951B35CF73FE5D3C5B86ED07D2BAFDD1E556F33B9BBF4072
6AE8BC7D7B6834E3BC399BEE8F4C870BE1A99B9EF49E4C4E2A1600C342788AB8
36ED070DEE3A3646EAEE008BA24EFD768F382B1A8511DFC8440475554CD015BB
60D7FA4C5B702C315E7B32019DE301D0AC73EF25F49A6087E740D8095E63F7C7
5C20F52137AE2A450D79D65DC3E6F73351D8339D9B70CE2EFEB47D620E0071C8
7CBAC57FE43EF546DA35FB183943E549114D5A403F36491DC76903322295BCF1
E32EDC6FF23DE55E8E2EC62560829734890FCA877D2A51B6375ACB1B93FA806E
C1413E4CC9EC6DDB0F2E8CD7CC5058645FDDB14A3110B739AD58BFF7138EC495
5F784A5F5868FC1F7177ADD9E10756C9B62D7525D54512B9D8DD8BEDAEBA5370
BC48209F59AD8991B6596500AA70F3997C5B333A93AA6212D90325592947CBF6
1880DEA639000E76579080584C00B8BC25D1913833DD6C7085DDF02FDF3CC9A7
9954A53B92DF583E0C3B59762164B93AABE7616F80CF684EBC853E4747CEC388
C39A687CD39A051BD0096885BFF85169D491EB32C011982427F2ED5B955FD2D9
0811243DF077111C2B551D8B6D469A429466FF25A2C9C042E83EB517320AE977
886C628D936154CE08586FA2BDCE74E3A40433B8C33192B1231D910141DE59D7
10BEA60BB7A3860C0ABABA3D4E447ECB32E1D3317D608F1EAC58CDBA785F860E
6348334883327DBD5CC891C4F13A06FBBB5DAB0CC5640DAF70AFB47F59F2E66F
DC6E78FBD25BA988618F53A147823B0E5481BCA728FA37FE17C10B9E8A8E5F37
4C6FE21A79E01BD80587100873C5425101FFC2C3605F21A326A0DBBCC5FF0C02
5B54972E83EE9F8BA7FDD9F73ED18B98BC4FE6C046D2F416BD41343806150BAF
B736136798BD5BAAD7419974A4EDF8557E45CE83DB74BEA212EF812F0814964A
45EFC47FD2AAE2B2EE2E54B4E6DD0FE0A69D04648F96508C5D56F99BDFABD217
5E542BAE81D97DAACCC4AF069D5A416CAC5511F494277B50A549E66A0F9375E7
EEDAC1B71076B1C6428FB4169AE4A99EAD6718A7AC4FF1803B03D1BF6D102A69
A54E5CE981B4EDAD16FFABA1F025B54D19EB805D0AAFF94CC07E2938FC930F56
10CC4A3D62
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE637A46D470BB1239E64BDFB0C5E059913DDF7E2AFA021A6
B56EC9F33783F715048AA4EC1B1F89B3CCB0149CE74CCC7518C027E399132550
20FAA5D8352D4237219BC63DD74387A3D4C45B156302ADF2FF40BD407790793B
2B4A9E06AE094338F09076A091CA69B1ACA5AA995EDCA2CD0AC32539CC0EAD16
213FCF9E1B9514BCE0D709937B6C195D979E9E98C9A7924CE582EC2347A9D9D5
33A43F1525A4BBB12EA7ECA1A5A5AE9679354CDA6A3F9C1062927E36A2E4A6F3
4E754C8DD8EA2571C7C48BC29C175FBD01BF238B753D3E79BC34EE383C5A8AB1
6E3C947A011221956AE269FF01BC597924775DFE721577703E5588268DAA8654
78898C645295B338359944962E09541FBB7A00956D1ACA7D8C2355A7CEAB6B77
A4F4A47CB6269D49966E24FE51C7D95B148AC1B7A39CBBE3E75DA003115C7416
C29A27BE5F176495CDB33FB4366285011AFAEB151B1CF06B726D350362C6AC75
0D662C96893585E5910E342D8D4F4775E75159382FC657B06DED974A697CCFC0
9C7625C9B0711FA238F4631ABA1F02182C4DF8677DD7968A3D348169A0F0D186
6CA9CA94D87E1CACB6B0527EB39BC776BBE77AC6B5786107B9147FE1B052084E
6B3C489C8B63D931E340E4EAFBCD5432DAAC1F28BC96B2CAC41CFF9F74CE2A99
711ADFCEEF00D5F13EB7ABCB7698DCA187063FF5665A9EB50B6303EB3998BF75
F83C7FEDCFA9BB909D70E55CD51F8F472107584EB70C0ED175E6F2078C5E2E7F
10CD08E24EBE60B97851E7BD26AB7A9EE244777D10AD98060F8E5E3B1E271B55
01FF7435833FE17E962420E154FE9D0736416DF88EA7EF8EED2DC2F848BF07AC
F311C8E697690047FD0CD0AEA514456BC370897B397D1273CAA4937307B6DCA5
3A0EEE4D964674B7BE517EFC26DC022AE9F0D67B2ACF804BE9BD76A6F8B11132
2B1273AEC261A340406A3E139FA1BA90C435783346361289AE9797133BDD208B
CF283DD0757C1566EF14DCF80841D32A3FD711A9AF5CA9C7B9340561E4E9F90F
656EBCE84619690328A2454894192D0BD52A6DC1D9129BCDDCA40A81BAF0DEED
9DBCE3FC019CB64AA2166B715BCCC8D139431C8954846AA33084280A6C363F19
EBD437DCE529AA77AC0912D13A123E118830CED60AA2F2A03D6AD24EFD6E70A9
9017DB8BCC8971A8DD1B297B3E76A8FCC48CA7465B5D3602FFB901578BF003A9
0EA02927E6E4DA1CA613FC7CCFEE1E8C1A694E2A0DF8E4915005257A6389955A
AA29890F95D0D571A17576C4EAC38E027D9945E9D14E56A81181BE772BA78891
6BD8E2D7C442814A52E2F042D257D61F3F976504180756AEEB9F1E5B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A11065111310A46FCBB19212E33F0B75634F4B5550
DCA5BA87E18E4F07B5CFD4BAB729CB705A53CE0E0336424602EA4A3032DED7AA
13FDD13235C6514EEA804EE4C5F3035A6AEE4391BF9839800B20C7E958E4B42A
1EB67E90C22A997075D4F197AF8485F01346CB8E17CD12A285205B2D5D6FBC1E
930909D9A6A38BB39CA02AB2598B2EBB03A60FDB795A3BFDCC677895D8C041C1
092F4FF2D03D6091E3F950ED7BF3F41289F48AF0A0D302D14F972D7E215AE40C
27F118AC052C2E917C8ED53F194AC6DDD541E4160DDE659F85AC3B58BE49788B
4428D9918CA66CD99164031767650ED4A3681A84D170419B1D9D825F30DF959C
EB471230A8942C6B0834FB86AD04CBD02303654E4D1E40609B14C8D1F9635666
1F43F7ECB1CF1480CDFA71035F9EF833A4B1B51E56065ABFEF1036EEAB8E04F0
95EC4B3D758F2C2368FAFCBC926D5660E96B9741B75A6395CD7C83F9931A7999
0298B08DA5149E3FD6CBEF3D79B7E604C912EA7DAC8E354F1CEA9C76D10F5718
23F71101D2FBB9CAFCD196E7A653070E680B42E542CB7DAB82C4B4329E5CFF8A
B0F213E9D5CF55D422C79C38F2C2F487CA8BC0696574F4D97784BCD075E22809
C78DD4A7B6D83F99EAD74396128B0C14658CE0A473AB3EAB6060F37CA8DF3344
6E877BCE976680AC346250670C41BEB73DDEB6099C156F65478D26C2CCE2BBC2
D1323B239944FC0727155B6A248DE14B83C362595A23B2F32A46B578F76FE702
7B3CFB43CFEB594BFF9BE4E7F8ECC5B006D8B46997F3DB8CCDDE45B16F33F170
30AAA7B0A2CEB87A0360124FD1504C60DE1339C3BADD2EE20443E015CFC5A976
34E4948BA2142FB8383DFB5DA7A5A97407F3DEF442B8DCCDEC2DDD4A96ABAD2C
F549FFE58BFDFF5FD8954C0B4A8233C657E19241996C2FE81439067979C57205
08AAB6B59476C63E035056CDBBB9F4DB89659D42B100853BCBD6B4196EF1712E
B3029E680F9156D505934B2008BDFD071E49305C993D4CE9A3FA7F588F2073CB
A7DE351875F46D0DF3AF3420D94859E53AEFC9D1DD75BF4A02A4E4BD2B3B7349
934E69E48EB70222D8B9D52981FA04764322F1D67522E273B443AE9820ADB530
3CD0D839FE2DA6AFC55AC786BB5451BFB6C5ECDAD7BAA8CECDD581C5F70C2E00
5213489EA21075A3BAB4C488358207F7D538B0B8EB1F74EF96BF93802DB51EC3
DF27141665AEFAD538B644942B6B97E778000DE2F2AC2B228AC44299443BCBA9
770319B732CC695D238F69A4CE6BF98BC4EDE0996427EDA0CAE0F19C2B1D5B91
7C508B83F0A2BBD5B56D32B90E027D459D467C66E0B2E159858689CF391A95DC
4C962D8ECEA8E753C2DEA7E42C8C52188E0DB5CA45552F8867037B2180897707
BFB944811C58BD3A3C1B47EA135377F86ECC12B42AB036AEAEDC4A456134C235
D3B273A659AFC6F867A0A6B4726433C75F1DC0671FE716B7B6D84B9B963D21F3
225933FAEB94966600A8B720DC21DE0755EEE6F50ABCAEE853F4D847CE7B282D
DE7EF7DC6F24FD7D8118F5301E3EB92D3CF24F6243BC42E7B1F1F575D4877A14
A10F8C8CFEAA802AA756D295E404B2B331CD0C7DA22F5FAADE6BE18603642142
C01F7924228A89E064588D4BE70311218D1226787AA0A3FD23E2890634946E91
D1AF215890547EB22A1FB22654555F8CA81A98FF701E4E3F32A4B1E22FEFF347
BD3FDAC64590A3E6AA52D0F676F11979C7744E54E5B0088835B64AB5BD2A130A
2D8C8272237FE1ED4B44EB22E96CC5D185F48BB1713E4DA77B4F636BC2CCC399
49980502A7FE534FE6B7220E6B0CADBEF44EDFF90FBCAE8C427561EAC1CF4EC5
4D29A0B9DBBAF10B53AAAE637B812F7D7AC9C54D0DDCD12178ABF50BCFF51317
170E54E8AACA4ACE065E9060B8ED8671BA724909C1A03BD07AA6F56EC07545AB
05B3175433ECDF6F8FDC1316FEFE5493FBEA5FB1D26743416B6D20BA817AB49E
C887C67462CE46FB1F601245917A88EF37239AE1E77F83CBB8EB531837396EB5
AA7BE08E08FEB6872FD1FEF469BE383F47BB8E249300A4E2A66056BB18F8C1EB
47FE68CAE79898785FA360DBA40DCC1F7945FCC61BD4F4EF77F2783FBEE4A033
3AD0D3897B1A83AE9D8559EB1F91BF9908E7115E5ED381D39E07E0422F9329C5
017557EA0AFB8EB0933FBE74940E3418BD07664A1A2BA6C4DBF7F71098086A5C
34185A184FF8283A09DCD6D67E6DBBABABC6D3F0780DBCB0F20CB1BF9173D501
4387B064500C857F06F90D95C79E5BA65FB2F9D70B7EA564D92A65C4DED89665
17660EFB9F77E49E170967A99702382701CD61054566CC731777E1E0F0E51D7F
04D2AB894E7DCC7BD80F2E8E13073B30FF5EEF54EFE72CD0D2BDB735D18B4103
C1DBDCD8EACEAED953121BAA5F9D9225C407C60A015F642EA2054C4D51990C37
288CA08255BCDF2A79A80DE4A2A12F8A3F65C0FB12D24CD0195230F15431F902
C010DCD23848B3CAD40CC576AE134008E87AF140BC0E71E7D74C36412F614BC3
7849AD3004BA89D166E3AC4418BAAB58219EF81EE2D18888127B9B7485518992
954C67F3EE4D176E0A4B84C9F47E5E871C6762BCE7ABC7BDB8E2830239F397B1
662BD176230EE13B7D90ACAF0143570E5FB223ED7EAF5BDC32AFD8FB3B61F326
535CFBC2DDCF5DA974B2068488AE47A9F0727518BFDBDC3423CF739AC5B38303
C3D4DF196C4626D6578C34519695EAD030B18D2B1B928D2CB8CAF6BEBF57C32C
1A64E1CFAD9C246B690DC0D5BC7A2D67C624AA66E94AAFAEEEC73F2A5106CFD4
EDE8ABC0A23591D7BB60AD3772159ACAF896F85B345E71E24FA9099A405B6DA9
8E8A1B13FE0350371A52F99FF290E8438626FB5F6088590EF3CB9A84122739CF
2CC73F89825E2087C5BB61C6C9FD2525354D5A8449DAB2B2402C3AC9CB650502
3D8B93CFE99CA4735506E6A03C7A805C5AA651DFD7BFC5FC1ED851D27D19F27B
189ACCFA1C6C760DBEFBF5A18E58B48B3FFEC15DB13D437C2923BF8C7EC3D3B4
9DCC343B4C5883BD24D106382A82EF4900A17829C8A8DDDD40FA220423579BA3
6AC6ECDC5F364AB9394A941D34C5100F301F9F784F034BB5F3B504B1B93D8859
73935C91C6BECC8B621B0D8D5A8EC2EF922D917CDB0ADD125F3019F970A05A27
FFB38DD7CB03F9DD099E6596290A19768BEF1CF8DB5AA29D60B224C9B8872CD9
E55B2E3AE02CDB4C778A0B7FF55338A74DD05CE9C96DC418DD1263F252B16F94
9A3C140BD64AB6CDC615EF85C7747CFD61EFD84E2B234250EA31440CA22DBF82
5096CF1ABD3A4EECD3B718EFCAA54493E979852EAEC1D621B9D8F1FF83BA298E
FF392CF0CCB138FA72DAE9F4C6061AFCC4AFC7AF777E4EF3A7EA5711A1499769
6293AB87FDC33C0B57B8121A28E00F7181819E9C2DB5AA76B75B8F7732A294C6
1B1EAA6E5AA66AC7125730106E7EC487A1D5FAF05C9DCA343FC34A3FC36E189D
F853C1E805812ECCDC2D078501304D0437CFC4AA04AA53FA4BE711B6DF0B7912
C1FE9229D78A0C17BEC5F881CFE4FB1687A50867043566AC7938C812D690765D
23C8B63C2D6F5E4A4B898478E82A3DD10055B80BAD84AA015D9ACA3FD626CC47
D247CC610668FF164EFBF2FAB314FA8310685F8DEE7A7A5D209265986F92AAF1
1143D961CF9EDADC2F0A01F9BFDC190E29BA33396FC8598E50D1E9D19252843B
5D9A3073EFCA93AB9C60B4696B15B5E0D8A3D368F2DE00F49673BD3CAF2983DA
BA4741F36EEDD85CDB32DFDD7E7BA91C053387AC57104B86FDE52BE7E8D886D9
3F3F45630436BCC3F8ADD162DEA2677D46D1D300C82868714AF2B47D07416D2A
51B83AEB1553E5FFF31AA603DB7C65046CFDE4172E5134BBF95DE7945F4B4E79
EBA92EF2EE4E7B73DD295274E1D416F7AD733B0A4FE0D6897B9EC592F01F9769
FAEF0D7A67041BDD45DA75828E2C2CA02CAE79CDB3719E6B78BDFA938518614A
B1E7CE732F8661E2F5FEA523A21B250F0E798F9335520C89676139B95B617021
EDE1120CEC4AD910480D3B03D00F44A95183E9A00F23B8C98DA89F2570D905A9
0F247B9FA8A6C654B8440ABF0FE7CC2C72E8CDDA3C6402606AD16969621B7B86
948DED3679FCCC747EDFE0FDF4574204765AD7B0A7976E37F2FD16900CD5D522
C5E9DBC5C59AF4C51B407D44468B5D7B226F3B9D7CF2256FC14BA225044236D6
3991615A2F1FB6FDB5F81E5D42A27D3BC70BB815896C3C727D60EBCD78F8A7A2
5AEB6318033565C0190A4757B6311BD322C23148A91F0A15A19146E5D489B729
D02E13778D50276585BC9C78819CB60CE0D32F928130137C720A17D44F3B81DF
9C79B6C8F2F209C4EF07BC71978DA1096A4317D306F6464056EDBFF016610C7F
398DA9025771CD8D77F3EB972479D537F6C994E949F0AD86D30B26E481093C90
9067B9D5D672AF9FAD2B57A35AA33B5B841370EF83F89F7CC8D7FF65AFE68F41
7204F047097E042D011BDBFB63ED1CDB2147BF601E53E2CC9E0F7829AD53D1F7
C0A7261B95FE357BF672716E95D641E48B8BDB8F217B6932E3DCC93BB22DD8E1
3A29F907A96266032B5D3A3F480437323E1DFE2E69212EAA61EA27F9E6DE9370
F84E207DC9BEC731AD6040FD9B804FA1443D3431437DC8BC95BCDC6E602C3A04
F637137F04DA2DFA1B84874886CC9C2DCE86D7F37CFEF89833AD1FC0B028AA89
32184BC20D38FCA2E5B2985CFB02B48EE3C53D97803137AF71C8ED83A3155EAE
C79A80F7422FC91F21672CD7316BAA58EA64499CEC98B4259A02B03655E8DB93
711FD7C3CF1E5DC7C05F1C8877B6246750E57C8B38C1607B9BCDD963E79046E4
538E1175311D5C8EC1832FA4AE094CAFCFD1AA6E87F704695C32C3FA6607A0D7
DF4146EC8BAC4B0F000C5AA995ADE92B15AFD742E730D127A733D56B118DFCC4
F09721BD57C38734D3DB8B538692237F99930FE769403B46E25CFC2041759BBC
27CBA12874F8A5DD27925ABE620A2430CC675ADF11C173EBE43A2052C6B23574
478290F37C42140BD42106DF4CE93ED8B9866D6317C9BD700703DADB9EEC88B8
9E5D79A8443F141A331B3E883E490A8B71BAD600D899D91052FD830F981250CC
5A3B60478C7CD7C2D18483F808522BEC56BF6ED389010A20EE8FB2BAA86A3B7E
437177998093FC888A01FE51543C5E421C449E958DC0AC818C4D8691E084B841
E6A856A4DCCE2297945CD386F8E6A28A5AA2A6206FBC132F4ABF5BB7758DA3D3
C9B178B121D38CE79E3AD729E30028E43296A0548F65EDFA7D105F375EEB7585
683D08F1DCC78BD17C233D9E16487A929DEFCF0103834714C42B1C0B53164C8F
E739702D4973C92CC976AF06D7CBB5667BC5737A6818175D41DFC636173D5D9E
F4C45B087BC34E8F14FCED37AC07BCDEEBE8D06A555B642D686CB0F0DD3CA419
BC2D3096653DF3A1A9D4B70DC521B212129CBBD99BFAEFDDE1D324B6EE0EE9D7
5EA112DA1C60FD628B806D89E773937039E05CBDFED62624FB8C497B4F9E0CA9
2F06C6868A1589935FD90668FF86A9BE37F550F08745106417070088791A3B45
F5314F648AAFD00DE61BF6916152F9389F8A551041B0EE4D1E1AFB6B6FA6EFF9
D626D24C4FCC92C4377955F6408A0F6951FDECE16DC97E99984009138FD35A6F
B03D879D900E212698367D13499797B79D0F01DAECA9495B072911CC814C19D5
3B95DE0071E3A439D3C08FADB6E7A170134489283FF3BAD56002C296953F4C52
95D0B51251CD17976C798B58D0CE0AAEC52AD93AD901D81DDDF75353BF0CB3E7
444A286C3272C05FB96EEB6C5D1405F6538F88EDDBC340047733AB3AB0D27866
E1C8EDC2E140433640B24F4ABE14345D6A3A253C967BD3557C47DE1DBB43878E
3EF52717811B1078CDB36CFA524F522D192FA4ABF53BD1A28704B84939C7E339
BA3F4402F2C9EF55D46057C73CB15B8EFEDD59314CB5B5554AC9F23C12D7E0B6
5E32A8EEA690C33C850A8BC6988EC47574A443ACADEE13915C5CA44FF41CCC2B
B9ABB47FD96BC6569D54081804F5FD98DAB720996E76C827664C5315DC8EC033
F6D1A5B6E1D8A2A3EA61B8AF242E4F815B5D467827EB635BFB6D5C8C66C3D184
704C86343AC38AE7885A62966B7A6BA5E64FABE65A37E50D691811872362FA6B
020BDCC75B131B92A963902D10C5468AD2BBD7B3EDB86016F847845EFF4DEBCC
1A2CFA0BCC95E3FEA8500601B8A20B93FD8A6C6511665267B075C5D91DDA5FAF
6B138C8A750A892DDAEF50284D2CEADFC997B78F99C0A850C3314D6CF5FABC87
2BB7CBADDD96379AAF8584088625FB825A5CFD16D9AC883CD07A159ECC675E6A
0F67580AB44F83A07764C5B7017A8DF4AE3478C68B4F7911E36E02FCF0530E68
3A96AEDBA01D6FCBBC224F848C932C71774ADEB638DB46DCCB0C6BD2192A98CC
4896B34825A453989EB7CE1FEC9D31E66BB00C09B952A829C1BF694F5FAFA68F
DD22AD422869E28828137C706B0CC05506F1B0626F3B6FCDE016EC757883083D
7F28ED966590A884B63EA0CB7C9786C3BE9F3808FC75BBF201A2933B7F69BE02
92D4FBEB504050FD0E50AF70AAB831F5C0733CB3BECD84ED47AD6861D3873CF0
4374F19B0E82736DC113AECC47BBE8279638A023CE465FFD649C3C85B1F8C6D1
5417762825775A80924429A4EAA36622D2316895F219FDC4AD5B38CE04E4C555
757F69C669C5EC403641734914624FAA4BF2B5FCA3448D360B18D5B8F984E726
912ACECD068ABA3B0FEE759D82A5542CFC4A772D8C242E9DEC88F4804462ED7E
E43FA81647628E18DD1256451D90035EDF5DEE6F02CDD1781911E07C871BC80E
6693D9987627D5844580135B616405F42758BDD2C8CC29DADCE4455805FD5CCE
647F990EC29436C60A8C9DCE52AD4F667E95206B16E8AF5B416BB5D64953720C
98D0DA93455B6DC1B2450D42BD399CD6885317C80CB800A293693F29CE581B6E
F1661A4DA77B82B3FC65136BBC69B330EF18F979E4C7B4BEA87D0B194ABF2153
25AE318067DF78B8FBB72C32C21F25F11CB966BA96FBC4BE366E7248EAAC516E
9D777D6C653FCCDD4A2A9A47E91581D4CE0FB24E83DBD5D9AC0506329662ABC4
D831D951465089E95DE76970C6DF9DB4946FCF8F1270E1A3B865510896B0133C
E062ADB26CC91E00087407805A91E77747FC02E53E6410EB7A2DD27B17502672
B17951401ED21A3416487C242639D8BF382444B5FB7846CCE32031FCFAE2738B
FACB5D5F0DD481585814574CBE10AB376B400538A6C37869537D67C3B3C4C206
0A0CB02BE2468476EB3E88CF2D274E6189BFCF389FE54D87C8AE7446DCB0888B
E7E44127A224991A995C17E8B7C7D21C74ED227BBC372737B044991BCF5FB934
55A74C7E013AC550C78230F9DE2484C273540922501841A4F7EF18CA86AD20AD
76325914F7180CAA8F06DCC288F0FE1CA765C93BBB6B7085F338CDCEEF3B2101
7973B3B0C45734AF5241C5ADA1387512E8D8A3F62A119754DAEB4C88C6F6D2CA
046B557000AEE6912ACD6212F2D560738B460CC66BFAC6456C51466E9A6ABD35
3CB4498C0EDAA9F293E7A6231A87C2BBAEAD9B95486DD333B78E91E4D70325A1
EFF016E169A334736D24CF91EEE56136C2A4CBDEF9486D2573C25BAF94486568
DBC60293AB8E4E26C86360DF3B3C7434ABCF0A3EEFDC2BD878CC373B019574BD
1C3CC6D8482BAA2A6ACFCD8452D0F3C5AF89D647D4B2B4F300F72868BC97560D
B326A88D7A75563648BB0C8C0766D330813BE00F18A1F9B903ED203E3DF507CF
C06664A629E0FECFBF56C4E8F5DF8D3C2EAD0BD5AD97E55CAC100AE563564FC1
EA16ECB6FFFBEA22D61456E974626482B4C2BE49CDD56C6A3F4E0E2E64636F77
F4A0CEDA6815412C9200C5AA06D9ED1DA53DD38776B3E05B8A1455911AACF57C
B21C58149C58F253A769F6124346CDF97050E356F2216D58A3B9D186F9DAC374
E9A17AB678698D2B6F11332AAE28B1053FA511E4624C7214E2BEDFE7B9965171
FF22F317EADADF34519528E20DCE7AD6C93B12F24FB8073894F45664A285DED8
42C2A0642F862E14B66919AFD491F98D84184FE86AD607D2F962729B45433994
24634FB484508489AA2376003C4BD53477FC1821C7E3630875D508C65C2BD176
6F45ECB609FDD66F3014B11E63D70CA13D96BE0808559D552475FE671E64A008
C89FF32E4F2275FE245E798E23AAF799C7BA511AFC4F99B3AAE7FDEED53AD92A
D9BDB4CA8582DAF2809A41072FD817E7072D80C54C75A3920CD30285E1AB7983
940A58AF4444718A3573E93CCB5E14B984A78CD1C3D6EF460281C530F4A61CB0
69D308E4EC76FE3383700A594ADE0E9D59FF37C4F4E6E4986EFC61B4CE131DCE
3F5B17D638F22BB3B0787B392B78C5203E9FC9FF7868FEE1B0D9EDEC9711F4E8
F021FA3732565720F61FF5AC828FED7A9B5AC80E5A32B49033DB7B5CBD84F200
47CD2764C8C52A46D84014B8887F576E9D5C9F615EC830A743D5A83B5BDAD517
25CE38479A8CA61A5985F7D9A1C4B2EBC9E66F1F25312B41B12546BC7B5BAC99
8FF19838C5C2868F265F3C82101DF5557EF42876F7EE48C931D95ED943A3D4A7
46872458B63F686FD09A0662461333E150C9B1E5C0BBCC2BC1DB81E97AB020DD
38D71B7ADDB4BD814D92B0A965BEA31B1E4D3411ABA6DE1485E502CF2D1B3064
66BCCBA2DB16C380C5220FFBDC366176B3F1CD0F88340E81D27CD4CD21584E3B
ADB222AC39381267A2B06A906FE1F4332276B8583276639581B0E7D9E6052861
1520249698A92CF23C5E8F45272A0158CC2A8AE6C6850B71E88A2B049A7DF399
12C781544637512EAF9A4052B1A382AA2E1E1DA244F00DDD16CEBECDC5124B1D
4E67DF3C21F1D051AEDD11F65FE0F14DA80E0FEF650F0038275688B9FA5A894C
303738994C1508E9B6ADF0D9950A195F64FD3209C6D47B46B7708F855E5F7226
2BE5CE7D28E72B129E947AD593B48B3DD05D0D28FC65CC057FE1DB587C8B2D7A
74FCA897EE756EEF79052C28A4FBA8DF907229C1CCF681450F0BF41741C5D877
C71CEF1B0A1725BC94B044C255E6029AF347B9DC25BC17EC625D8BFCCBA22989
B5EF327086076DA15AF38377C2DB6BA74C7DC0D0D0A183BD254DBFAA7388CF2C
BAC07A5EACA0D28D6A0F247C07FC508D83491CE04DFA2BA37C43EE4CF762927C
FCCCD8769905F0F6CFF798BDB48DBF4D734BF44CECB039B86F475DB68A6AFA09
48DB499CBED65C8B29524188CC192F2D4483E6E23CAB9F3FEE78A741F77604AD
E5CA870961C65D9EE861F61D009033AEC3F9D1A7A659C822B7A93C27F3D482CE
CFB6EF2B84AA49BBE0E43461FC854398FFC974A29F0CC8AD97D853211DD2E913
C378A9B0A3B12ADD0E6C97457D5BFDA26B78CFDD74BFD2C45FD1A30675D11E8F
2817E361F92C48D2AD70CBF14ADC348B1150E34E14099F26B4DAF2B0573A4034
DCD369BC6549D8D02596DE943C067A52E1E24ABE56A7F8E26656DD8A36663CDD
F2D7A130D2E088EA3C8D77F8A45C29401B7EBDF03039F113B2CF4626600B1B45
59DDF45C88DEB19A25ADF96AA92AED7E26BBB3BBAE31C2F6769F21B3552E00BF
22AE6D0C759D6FE457350B7EBE1C6A538AB48C7CF874F7614562322EDB6B87A3
767F3BF78DDEBC35987EC5FCFCE147EFA7D3886A151EA211FDFD11B254DA5A7E
2949EA0B42E100B8B78ECC15D319D9E0F5A6C819E8A7A0F7D0416437B575D01A
A80CBF2A6DF7ED267C74A424C98F8E905C9C526539898812C1AD7F25EC0DDF6B
8AF6C167620E059B99CD0635E33CB76ED7B03E477B15AE6885E83600D55508E0
0BBB8F408FE3160E3A68C5B2F1EA996FE71CF6D1E942B9ECFAD3B10BF7FE4019
611CC67279792C59C002037F132D485F25D896AC099E3A80CF0CDB10896E3EF9
2C743233CA1548A348C48D19182D79249080AD244A961CCBDA9CD8297237758B
75F5ECCDF503383715F45158FEBE49000DC5ADF247BCFFC4BFA4DFE3FD4AE99F
5A8595EA873B6EBD66F51E58627D5E2622D22B75FE01501A8E79812D89C9FBBC
3165C34863C9ED6C46D85A5EAD76FEA954B3C7D0712B114BB44747C291F571D6
E0ED8901F90F6E57EB435515BF52FD453207213F3E13FC83A36F2D86CAC8B40D
1D5EB1BE26422297188DB7566B42A4B0CB64B168B4CB94D6923FFD65A2DA9A08
CF62656A756436E98F1DFB81AB15094F74295A600EE8A429778B0570F27481FA
B91FC89E6EC8F51ACB4086198D629A477E3EC8E732E3515DB414D597D45C6E71
A3C0EE7BA99B94B170F459E8380502E692582B811FEC555145C96752D5436998
31738D7117D1908D958AD0EFBD5C6CBE684E8993B9C482B056E4728D195114A9
B35634AC999453690C2945D128FD9F1F51377E69B684C70E9F76F39FC77A46FB
A5A7787A1ADFEF5F67871FAD992447F76CF16F85D0A04140B0EC2D6BCB026EE9
EEA1CBCD4AA143C9D5F48BC15D9DD6155D7CE75AE288A81702B5D53D7FA71F20
E220317B9195A7E00A3D3E50EE934563FF9416FD0CE19966020235B0FA6AF873
FDD624ED688CC9A6DC06F4B0187CC87BFD325F5495DE6B1C067C7F67FD1FF0E9
B41FA08A40882FC32177B0EAC04469D32C787EEC5494B7CE670CFE23D7F00388
FC0F98EBA85E3873810F3123A000E06E0195EBA3713CCBE333CC60A6A8F2BFDB
043ADC0B94FA3370B91F6C5F38361FB563378D8C5CB7F8729D436B65B80B3C17
8A6BEBFF9F373158A4BCCFB82623C273B594B2F88BFF4A12673E74D5CD2DF30B
F1DB798AF2BF6384340CDD7ADBFAD15C24E79ECBF3359E669FBA2A11A006AA06
2664AF4D91AEDB312FAD2205ECA6189925F23F0DBDCBF69D5AAD409B239F1D95
1B5AB00584F68B6894B08FDBB5212B3BF054EC7AE5552FD193DD4ADA95093D06
4B0E699C59892B661E5A0CF707B0188457064B684F1C65D278FBCD01A64C1B5B
DD5799E691A5CA7EDBB00B60E26CAD17086C48CEA3FF695D58D349984DB26FD7
837618BCE16AA4C235EDB1DCC2D861C089A53B5D5FCE9161F188077CC0963A83
396A250BA0C39945B28C1C475F8895C6DD4E1BED3AC206FC306E671B771C7732
F29E2B36E8CFC932AF2DDA28D631C559BDA98F3B68A5BAFCB4F1BBB90BC96AA1
876AC4F908AE06DBB9B119C6057DBFC2B0085C818FDDA774EBDBE7A952FA4DBF
B87CDA9E22839448247D40B23A37DFAB7F41D9DF06AA6A1B7C9AF629B6230BFD
81E2AC57A8E54B8677F9C6009D905FDDA547F04F0C596B99077020341D0C8BA0
4CAF9525279536814044F4AE7DAABC43A230FDAC3B3C879D5356746074519505
DBC4F8AC480362656BF7227B3BA84172836F7EFB4DEE53DA4922C8661BE65734
E3B82E726F959C04D04EC6CCC6D5C4515070E4EB6AD127A00669E74E2EB93599
1C9D7A835EB88BC04EB2B195DF5B7FA1E454EF28C6D432330FEE56133F3C323F
865B4C8B3BF51A2646DB93A34C60583DA3CCDBFF4F315D1FBFA5B5E1375A9014
1467A712075A718616EB0105CA91B11156B6969602161C8FA3B0A8335A4D3AE1
C38CDB5F114FD16B0A82D47326D14E817FF8C3EFF9588CAAD1E91DF3E38D490F
E15EBC6A6956477E8B7DAAF1AE28A6B251C1F3714F8B84792EF7D0C4E23442D4
058D1F27766AE93B71FC7B4221C1A677B413EC24C29DA1F2D33041FFA0ED4B66
AED77FD6FFA5346A760EBBE54E36B118D24819DC783F7AB9BB690B3F1F8D5D92
B0125D3D3408D17A99FA9D252A64F071A7ABB75A726F1EC0AA65DDC25283DAED
0AAB11E021B27915CB45438F2DC4BF2D389770ACB7042983D89EC65012257DA5
064E0F3EA0B1CB2A23400B246A0989E89F2E5E5E637D1599298AB3F54B995885
FCAEFC4CA25B5CFE5D573FB3C2BF3D2905CFFAE9EAF0BCBB3EFE20C3FF53ACCB
292A8690B9BE1FD2FC5D972E1049938D592EA8EFBF5E2EE16884FF136F2A2B90
961AA97302400397CD075EF9CD41082CCBF63E849C48835E12CA67685E89A494
F32D78674B1187A93B44EF2102AF9150360081834EB15A74B25E1E5E8D234DB9
1B8EBCAF26C4DACE569DA1CC532B9FC6714B59908E6BD2321871382A8AF3D6B3
7501E9AD147D24DA5A393A6D91B00C28514613D146AFBC2F6F95E7917BCE1DFA
BD5837A3B800C484F4DF8E3F4824B954594A1F97194B19FA8DADD2164723B715
96B484700D72CE5B23F5EE9BB3508EB12237E03089FAA0E3C33421B8006C3CD9
3617E6B0B1E0DFED74C19304CED4E2B235CBA28CA560DBD3CD5E98B2DFFD054B
6394310E4C81D9D739DF88C655165C148CA55C7A1C4E197BAFF08E59FF2A6D83
FE3845C1983D8258B563202B09D337AA1E47A08C5A40B108AC669CDE8F23699C
429A1AA6C042AC6847F2B3291D30D4EEB934A0173199B1E43AE574C03CE7768F
9CA2AFCB81F154CFB30DDED98E3D9157C85DE0838FB8478B1B94A3F1AF5D53AC
484C56484ABD332E7A80AA80E1EE8040D687BDA0971EE623A1F7FBBEDD676740
3F244060F6227466EF360755DFBF7F72A26B1D157C6B3945F5898AFA302E1AC7
E7711B193B7DE7D49FF4F461B6F6654C38E2AB2136F48FCC5A39959FE666F538
3FC4539D3C5601350E11027DBFE4659DEFC3CBF76E2AB18FCFD76548FD63B8AB
41F3EC49852386784380240DFF74A2F754FED1D9ADED600804B7786C2374011F
BF89A8CFE1BD96B21D6EAD9E432F761AE694110400DE2BEA26EE8E974027A802
7D3F4EC6373B30B202112E90099F97D70AF54E554A8F28FDAC53748FF1ADF625
D1073F312A8B3CC3ECC121A4872C7A2E643F42D81FB6E98D184BCF6A5C4AFD15
904D68C140C6CE231015DE2D820F5B4ABCFC637803167EA6E1027FF8BB76E9A5
974FB07091C0DDC1AC4A2265D10F6A7CEC42FC81D1F4CA3360C4B32685892955
71F959A0A72138889852ACE4268B5CE318551EBD9B8F4AA038DF79588063FA5C
12788BCD9299C70E43EBD1E81973D800E720E96FDBFF1B2D1FDF4CAD21BDB5FD
900A5C7E66942BE868212F8ECDF6B06EF6088AEB39EE217541A4C17DF1A012D2
896DFBD325A9C7EB4F03D3849619EB4D84FEF013C5B4BF8CCA17D6A5D6BF682F
E837974BA4A855C6A8CDF351FD697E94A8D7B82C42FFFD53ABAF7ED904BC8AE2
0B2B15F19F8A06D43CEBB2EAC247BD9D5A2469FB68EB42502E847F9B9B7858A6
81558677A7ADFFCA03CCF78564288A3818DFA17433928D252C6E5DD599F32E60
A1D5251D270D0D2D0D068FB5CC1AF7279DE37F1A0A5A6FDFD913164AD228F347
4FB33CF9BDE4FC610FCA4FC9ADB098BC3F1B4162F1CCB3D27A17455260973FDF
394D385E81DCFC02B7C16BFD522250FA2FA236F9EB4948B3E81EA3AF8F31B1B1
DAAB235EE3575F9FD4EA6464FDCD319496C15859CDC7C7BEA4DD461A4C66C31A
6EE4CFA2D0594BB2CF6CEE94289B7C1800BA18A9437C91EF10F19C2DCDEE1EDD
B0B6F2EE4C875E3A7F03DC50F41C4657934151303A0733B90A2ED612FAA296FF
A024D08E5035473CFDA53A98C95121D5FCF3759E08318611701B27F723F3786A
03BA85152A39C21C4E4DCC86D3C62FE9E069A1725AEBCC5CB1F7A93B63BCB298
D3B571CEC6E771B02211A1768768D62E30E2A4C89F08E56C9637125725BF8CAC
5473F8755B70B593922F156ECC4E82D4CF8E6F87B2A2DAFC69673E1FBBBD8E83
FF180E1A793372A5512AD1E2943EE7A050036EE473CFC7CF7E387414E4A017F9
FAE43F47C36E5544A0CDC611501A2632E9DDD7EDEAC56C518175212C74E1EC3A
B59FB9C1F083274F2033FCFCE759E760131E507598088700ADFC43DF9A0143E2
ECED58D83420F4B02BD74768F67B1EB40C8A664FE68BFEDB98E14E3073ABF39E
F0387B607CA2BD6EDA120F1EABAF82C0383256CB36700E8E18B21251B3DB82E6
E6DBAB14516A2C4CC67DEE79BBA1EDC3D80A0B26AB9BB8BF1CDE1E8C0AC9B9CF
49F1E25CF0D539E4754CD2C62F1790F8A442D94ED07F5F9838B597AED19CFDF4
30F8365C10C7E6F5710FBA343D16C9D2BEEF526EEBBACC2730FBD6B1308488C3
2FAC3397C8AFA284B4B9AB0A69C94BB35D55EEFC72CB446B6A381B72FEE768E0
601144B6E3AF224B6029ED2F2A0D5809CF40213979C77A24D5FC81E9B9C3FA26
9C8553905A0D81A95E84293E7380AF786BF3954F5B5C6CBEBDBD569AA320D0B0
BC98D291292FB3BBDD137B911276CE357DDFE1552E4B76D00EB27062F8C5DFC7
AE8A3CBF623F5E2980F8087C3AC603C44D8AEA1F9821E0124F9AE3E5A1EA6817
03B5114C5E507E856A931CCB05A58C30CF4B9105E36375C69A1E1A3AB1C1298D
F12BB54B3EAC9C3325FDF6837AB8FA81CC9559856404124F851CDAC202F133D2
A7E55B2ECF3E3E820C3CBF690D5A6D4299765578EB49D241E424236EA0E4FA2A
6A4DBD7A3F1530F5C1B8AEF5E4DF4CBE10B839DF0E5EAB1B036C24E04B900120
FCEB6F4F955CE161651614384D7F83214B975BD1F082D7E516AABCB631091594
C80B02ECADEDC487C429496930A27699C952A9BE85B84CB832782FC5B0B22B70
CEFA573661EB157922B29CC828ADD9B2582CF6C3178700E56D15B6307B400E45
E873E7398025B179511840510271C3A7D77E7324D0963C04EDD832CE3696753B
E91995CD7EB3BE940CC729A9B845FA4DB9CDCACCD1804B9444C284E42A09EE3F
E4730D3AC8B2C9AF7CAC8DE97F6E7AE9B17330C4CCFE8E3C283C02A4655C579B
F21B53D1FD37996C6D280EE6F5D1016D2034CB499EC864B2332429C9661A9FBF
472FF4F71DC5AA368E0EA45AE3A0C9A76C320DDC3404A21C3EC88A2E0976C2C2
C711F0E82BBC208850A7849F5BE5810F201E3B2C79E92012950167935869EC0E
79B9259F55887CE8299F546BDA7F7AED71F6B5CD27B12BA2509E3B1C647F00D1
47F33C0A680456C5008EB66FCCB11DD3C3C7E0D339631C932BBBCC1D5EACB148
4FBC1ACE6558635993A198B5A109CA9DE62F46C3F67D6E944FC79762E429A85D
7D08993036C7FA255F38897CAC385BEBD60D212645715D797FEC9C8A4F0EE8E1
8AC5F6D8FE4194FEB6C80B02CB53E12CE148077DAE3465E562A162AE5CFF0CDD
A4763AAFF2692126B4FAD9AEAB72B67756D65C6A9F553C365E20F0BA59F8537C
8DEAC7384E996D072E87FBEF1A4EF1FE73D48B3ED3EE3103C44F797DD77D914D
1CA90A891506E015F46C94312786FF5D6144F4E38ADD0EDC240662FB553E583C
4694CB098823C22FB5722C120367FF9292C71C6D5901EE08383045C56D91469E
A758F72040FB71779C25E2709855D7C7C1C75174A96B29A309C8C682A5D13D60
C88DAC9267CD00E6F5D1016D2034CB499EC864B2332429C9661A9FBC34CDC959
FBC88191DD4FA5D21049C9BF020275B4CCDBD4BC521F183EB59FD003AE5E0B17
5EA87DD3836D1560672A065760CD6959497D1C453008AF26856BDD3C29D23C4F
60F3417D147D88DC59395A19DCF6C41EF3B02317ABADFB56116FFB38C388F961
43BA870537CC8B3E5F2237072516133015E992A70B2357F3F43EA858CDC7921B
BA3868A8696DD77372304300B93CECBFA91BDD117CEE482F881EA0D64F3BF02C
625B92D884416C53CB94E179213804BCD6CF66E574064E2B0AEEF95960D11499
034F603A171196E3422408601C926B58765B8698FFBBB868A58650940CC040EB
ACD5BC7C774D53CC63B57F7C9A295CAD3852A4542B244BC71E85F656A517CBF4
9006743B183381665948141CA2FF95EC304694FEAA8215C8AE00C03756011358
C467EE03A929F373697CD318EE0DD047B53EDA4CAFB3DAE3C39B1E9D5222A83F
9E39E4E85D22E655E337FB59EF89B24C28163F9270AA4C95CA0F5AA4D2A2FBEB
95AA878584A8ABDF1E8CF78EBE55ABDB3C925681E58CE7F78DDB940917756A2D
719AE12C53BB38B98951F65DF4EB0148F58684E8DDD4641B79CE028D54B82B27
1684561F9742380EE8DF0026663246BAFCD579B8FAE51D8D14CFF9D60B39A6E2
E1AC5F4EEEF91E7F4637BC7D76B43450F22F40CD7C3F94CFEA86A00D25806DAD
29AE24F3FBBBD9947BC5A800F9DA6B7BAF861C6738336C374BA34BDAB4CA6460
6F06142CAC4E1A66E8E5F2C973540922501841A4F7EF18CA86AD20AD76325914
F16AF3F7ABD4D966424FADB66F4669192BE430DE2E62ED39B10318B966EB7891
2997CA884D714876239501D7FF736AEF82B1DDF9154F405413C9611215F218B1
A2D479B9E8A215EBDC5652B555D498479D289A015F8545F6844A6AB81FA3F384
4CFB23383CA50C135971F27E862D85772CE1B4BE829E3D5C3D4D773182176A93
892B3360AF2E93FB37A1EB49A99E4A07515606610BF2B74AB4A22C90B395045A
7372EB87999E94BB52F8168D7B194D57EAF0C0BE7A532F8C1112CF4A84AC845A
CDC41C6CAC48DC8838BFF5AC459EA5D3F07D909C9A1FE25B022D9E5BE4F6B44A
C341B307C9106E1820F9F1844DD2EC4C5C58AAAE958EEF25619EAB1340719657
BD58BC53D145E742B95F56C3F6D99AE73789CA43DDD61AFD0A6C1ABC42F11D3A
3E82F32AE0088A4A1D2AD1C11F7606C5484FB0E9D381870B33FF636E46D8D00F
B39ECC497F82E037AE6F7843AF85AE4898298C84706D59C727C55EB86C825359
6ED676809C75D22373802023DD465F60E5E5492F17615F4DCEBECCB9206CBBAB
DE8C4E5E6E6B61FCFD3C2BA11BF36BD9CC2D30C7486438C4EB99365D68F27B9F
CC33D3FB5B5BC98F38CD281C040714C328B831F1FF08C8F7C55078C5C7637451
A1D5694EBFFFBDC56E6E1EF7FBE3D0CD31B525B051919054DC900685CEF33DBC
E75D9339F9FDD03F4DFC21CAADF6074897E43988B2288B022BC989D3A07BF912
371B149A71CE4A0FC242057AFB8A3EFD9DB854BA2563575B9923CB89A182E4C6
E8FB2FB6FB47F8D4B62EA924A5646241E9CDD77EAFA47648C656C02156EB7BB4
5AA8EF1533C9473F84ADC9EADD887330713B2FDDA7F46D1A22D9D509C689FFBA
D29472748A310E174816494237A9AD7665990B3C9A32A0B530C74E24925F77AB
14169547EEDFEFB6F03C7D5365CEF1DB9FFAD6F28BB16C329BD7A7DB1F945884
527CAF001B39DB3978C9C52EF943989488F76FAB78F8F4E892708D0A4023F99C
B43A918E4E9342AD69C5ECE22626091A5C678370D5AB037787250B3A492267A4
82977BBAF45779E8B1F9082DCB8FE49FFD34AD20412D264C97D107E8FE3A2C04
6E6EDA60B839A6FD0A22F5418839D9198CC7554F8979C9AEC6E8E3987EDB9D8E
E2359EEAEDDA467EB5C180FCF24D5A9674ED5C41F5FA78B2EE9FC639FBA9C12C
B39087EB7F0C52404B112046B7F61AB474614D9A42148F82C36230E3F8C21B7D
4557C76954B03CA3662D6ECD10BCB37E35033A02DECF6F8686724D9F5417DFEB
F450BF902C2F1E80C02082F398FAB1812D8EFA3A087473B8078709F5F2AE47DB
74F713B2DBCE2DA79B01628C3E822DAE2E37FD247261321CAB3128CDEF6078D0
B2A0A96E0AEABC50681F313E45569F2F651F35A5F1740AEE77652531C5E6ED4F
E37DFF405891ACD512964AB1928709CEDD63C7CB266242BA1D99566B5B141B9F
7594ABE49D68610DFC43D91937A1AA50D8F3949EE5FADD5CFD707B5EE5364BA7
71EBD2F2127EEF9F670DC21C48D6452C36202D4F36A01DFAC57E35F30F533077
FDFA6DB83CBE3A60D8514BEA0CAC13AEF7A3E64ED7C86D4E36C535596D72B60D
47151850788C606B9F6A6511D9617A7102F05E3B99A4B0116B5EA86E3B87B286
752175A9E7FA9E3BF07F580003B6199642545B69FEB84B38A5B47050715F336A
672B49AE495DF09D62778E88FE154B4FA051C8CEE7866A2FCC873FC9A4B4A7A9
C51FB47EEDC371D1D71A74407CA90F5452BC12514C131734EFD2CE95F48E3ED9
6F772F9C4B5A22B66BA8BB883624D470C102EA1AF6137830246FA00554A09E07
F73CEEC06E192D254516AA72BCEDCD4031287138580D20077D605AEF1A19D5F5
74FF1C2671177D4B10EFC83F640B6D09BE359831087184E41CE590F9C8EDED37
99041918327E86BE3330CD1A5EEED203F62B05856D5DFD6BB0A31700BB348538
AA9E7EA1A4EED27039C40D9E1181CFED9315FCCA90D78E299DDD66A941CE3059
61546D0750306C26CD0F254CD8A11ED77D05FCB64F261AD82C4A64800F40ED94
F59281F5D884990D18B4300B67D83C0021AB7C2F1568AF5A955C7FB1132C20C8
3F8AD2E99D9DD80D58AAEE9A9C85BD3BB8E5F5A99E1AB32F7CCE765EA0ED10B3
07D63678EE0DE1C9AFBD5C868716F974637C47A6A188E3DCDF19E9F6E2033CF8
5FB7BA53DFF28E9AA65D19C00E0988D39B5C23C63CC556E78BFEC6B230499DED
B189CA4FF400B7C56083776A990070CBC541FD1265CA906236A3ED6754E4842A
AB165B434E301CBB320054BEF50F817DEBFF9F420FB44C0B13602E392D96DD62
48F7D075BD8D36F3DE102AF8DC9875C222FBF9C92909C4C909C81CCCCB0FD98D
93951647BD7A2E543D21CC4045BFD2DD528F178B2D88BB21D9D3FBCFA8E4B6A8
14D790A03782E1678CA9A20F5D99524F937A61C9475C08C2A438EA1585F4275B
F638C8774CEDB601BF7F8FE432687FDF30F7703669AFD1E81987D1ECDA0B8995
47B422495A2E30F2DC487DACFE6A42683DEBB848BC301813C18813CFA9C9683B
45B2CCC8861B80E83A730A4642CE48283CFF07B5274188AB0109E96DCAADDEB2
432FC8030909CFDC4D8FC12744123F29465AC5267B36561BBE6291058EE785C5
43D173B22CA22EC32CFC8E0A2B949B410385FF330AC3426AD987867C257217C8
59D48C1603730E34641CACA4EB30AE2C787714B977A2CD2E4DFA2F03618A6BDF
9052417CA98FC3EAB00D7712C8708F18A309E10C46D824C2663FB40D85CC593C
557F5A19C70CE7DECD4ABDD38FEAA57CBB3F1C8F1C3FF5FC6534B92A33C42E26
6EFDEB1172CB59D87AC034682C600BEFC61696F65FCC54E98619F8A3717E9F0D
DDDC785604DDF40973D8CF73C66752FAA10A509DA596ADFD7DCC0F4E58304A2C
55D5F7709C62AC4E3A5C623227D71917AEF76725B8FCE634C608D06C9BD81E58
CBF0E9F39062642580FC506A135D7FB95EA370C465D225F4C10F60B53C3DE708
EAF49CFA953C339F9F64DD8881926770920427204172F1330787862A6D575682
E6A86792FF488D5407B7567E147112994F68FDA0005EFD657062B91820274231
3A0F3177B83C5CC1D9C87E1F988701ADD7AC99BC2DA3ACE7B900150A7374920D
6F63770EEE3797CCDC6269B2D2AF3AE6389BD72E06CFC7587962AAD6802A17F1
5A36FE45E57BD5CE0C7A57713AF055C0A0F972E965CF96F8AC30F2618EBCA323
CC1BF32CA89D9361643D6F46844A78F3C2414F2635A0151D7DF21D5ED78E6099
67137F764361AD516066E0C6A3A03FCFA18E0C940132FAE1B53920879A9F788A
F4930E297F45DE1CDF5524716D3659E992E2E0D699A15CA64E3A4B9F634D749B
D180DEB1F8591C0F3C1F32AE69B2FBEA6FF39A0CDA2B87FAA8EAEFD18F1A6F04
1CCA1B5C649CF209DAFE4E643ED58922C2D185B80B478DA643F3EBED3ABC74FE
DA69032C5C1D499A9EB93CA71FC9C0D3222E949E21E5FB1C8737E0EC21F7CD59
6D42A88458B89786C2F6D96CB32FCFBED031FB272A233E9EFAD55F9499C2D97D
FB0D2B2E79941CBFB1D1C5C5C726FA20DD9779C5BEF1DF20020D86BACCD6C2E6
B48382ECC64FA8E1F0E21066F41B5AF5DB3F2A69C0C7C9B221766ADF910207A1
37A86F113AA0E6E2EC9A34DB656DA7F55D9376A5005B654A0AF582DEA6EC8018
E26E57DA065B85BFF9801690F1668FAE2C41EB1934EB20E7EAA201549DB0DDB8
0887AD84C2E2099F73A2E468110AAB2BC8367163B32BBDA1A81A0D8E75880EF3
D7798AFB3431A9C936BD3BFEBEDEDDBA75880CD30B27909CC8C16F3FD2AD2678
388EB5C8159E5848B3062ADB1E73F90DBDCCB31A8E2E0C4F9CD72CBDF4EAE3D5
BAEDECD6A194E6142FA206A227BF331033E4F074D29DF85080F069561019E04A
197110142C9D85A779E543BF8C6CD4A27893E17F31A23B5252000BEAD540967E
39CFD1466F6E84C2E08AF87D350763E2090D828A45ED4B9BC742CB47DFC2D5B3
0A8AD8589024664CB426AEB9D9256757A12A7C1F9BD0A11514B42E11622A01D1
435C20A34F783A42FE84B4405B07703878A174F7ADB5F2D1919B858AAA9B2C39
16E7A0B13846E21F26776F7614732C89AFE92EBDE92273AB183F8AD79F4F724F
11BFA57FFB9B216D3C27DA066858BDCEE6A1ABA2699240F568BF1669B306D733
75388B84F07E18A0BB8F1DB53B75ACBAA50F748187F6C9EC9D4D27C88B25C65C
468626EE4A639E0F2D02889411AA7A065F507D69BF5E6049C636F2DF76172484
3C2B9817687F9DB1892FF91EE6930F3D59E0B18645603870B5E23E0A433120C0
5D144EB134CEAF82DE05E06060EC18D514F4E94397DE9216A7BC87DF092CABDE
BCF9A22F9F4F4DEF30791A3E891A8271EECC4DB35810B23AEF6DB4349B41A63F
145C16F1812AB2F8969F9BD74705319E03C88CA5EC2AA57F8C49E984886D61B6
2C4D0D488CBF10A13F73447E9A1B860E1085D81B878A24E96D6E16583FAF23D5
ECD982ED8D24ADD7FF8D9918C339A8E8B4138360A36A5D10C2BF46D44EC8836B
9FC33A70C50FBFAEF60C918DE3C1BF3A744667964722B69DD498E95E04A726AB
6201011FEB6ABAE3AF4FFD6E2D1BFCFDF8BAF5BE63312C0F6A2D67950933BC1F
45C090DB02A812C42286090424C7AAB9905DC4B258F9F1BF90CEA8AFB68E46DF
DB98E13461D45B4F1F08340D3AC944E5359DEDDEE1B3A9C2C915727EEE1951EB
9F5528203B3C11ECA4DD83372EA420E96187E0865739757B567268AA2AD61BFC
F2D268A87EEF84A36EBB74CE5F80B2E0ADDAEA36924D015ADC13CEDBA912B4D5
15937F9FB5829C929842BE76A7BA84B6BC51E3AA58E74BA4D283E25A84E0C849
1EDF3B9CBF608618E5891C6BBA68A9432F4EC326D31A1305159B9B6C83CD39E1
97697E9380AFB8921FE5260B2C18774E4880C531CF4859A76B8894C304ADACCA
BE3D5AC2F814D8413A9C3C1072C81E2186E9BB716389BFD576826B14E2551B5E
496551BCABCDED92E73CD7FBA5336951B7DFA2722AB6CC2B94FE83ACDF0D8CBC
E93FB9EFD52405F30152DF68AF4B73A2035871AB338849D0F2A4475F5CE1A65D
0759006217BD7E0897D588CBF554A3052BF2A88931F281FB5823746DFC8CDF10
9C9EF14BFD8DC355ACC283401D8962E82CA9139ADB5D49C9517E0AA2F96F3D9A
3487076453C8499E5E03218E29844B569E2EBD6271DBA6A5B619FDD270419F8D
D37B9D56B3AA8B000575E96FDC6C8458F932FA7DB33AFE3F3D8F2330174FAE23
98A978934D168B59595764CC761ADED5310B669A430BAD2736CD57F552321E23
23475F460C26D87A58FA67F21F4BC617F53A74E2D3C6B73DD78476004745975B
2DD760BC2057E9581CC2B17A20F69956D42B39313439E6113685F071CAB3FE27
88384DEDF50CAFB0570EE252BEA652C7A2D67446301252DCAF70CA6229EA5767
D9D976423646DD0D043954064CDF97F7BD4F8DC0E99D2199E3CD69D080CE2BAA
E59AFC25B3F72B2A92A3E1226F212C685D34A5253ECFC20DED9CA1BB2AB6BF04
A4483BC8446F5E8FB89BEF02A7565A6E5113897092F8196A5E2894D348BE1434
D0B5883C8DE2699114B5C173B31C7346694B93752B7E00AAB3A470C1B8B33FE3
667B90DD76152DBAC554D7678500CAF44014E304DDDE7DDFBFD980910C422AB5
0DCD928B6259BC1063DB3004BFD2BA2BA02A7E3AC4CB93DF69F9C7312952A1E7
CFB5918F24ED7B9161DC45B1036BA512621B0B806389D4D72262DA6CB400210E
729F978908D3CF882EA24C096D6CE32DEF39BE90AB621DF8CBE8F07F0D628491
9119C40621C1A35118450FA6B3816C1C1CDF6A033B4AA86B88CA88FE3D91D831
8DCE955C28A53654C8279B7C45C8E090EA0BCD24D7090BF490E9977036461B66
EAC5BB976C6EB2515F320357DB771BD7A674D75FB486A911840172E1E8A052FF
07008ABC73E686EEBC2C10645F2CC8E86EFC8C43DEE23CD2ECF4E48D9C7B6CC6
69411D14C90EB2D854161063DDD85CA66FEEB46399AE8BDAE4FF44BA0548EAA3
6C179C54744B8D384431833C1BCEDE11F0F7F6F70464FEE3DA3EC6CC1F0B72E2
5A05918B0883CDB3BEDF41E7BD386F4B1A6811A063E4C330E277F51E24FFBCE2
C99D36166F2D4E2880EB4A142A611F1062BD000C1F8359A11DB860D2CDA8FFCE
3D416DED9D32F4F4AEEF704A5E8F6E9AD1631F9E304203D290D561DA52913DE8
E26E48E8AF62FD65FB576024A49014925AFE00F867731F2800A33133B8B9AEF0
3A70F4AC6ECA1B51A6108AC1864C968DC394CA300DF3C5A3E0FF83552FC806E1
6A8AB4FBBFDA427F0F1101517B2DA362669767DD335E29F1931A004EB68BF109
30ADD30B073628223F94A8F6D2C97A4145731D81485B19921EE504EF3BDB6FBC
DD68CC1860B3EAEAA564961A7F9523E1DDB68FBB071BFA0F2BE6C6C1B18A3183
ABAE5355A146D8BD2C9E0EDE29B299AF582319835E23408E414CE2299CD461E5
515775B82303478C61515665DF193233FB4633FEB11933DE624DBFDD5DED0693
2D5CF64E3D30D6C0160E68A312D5EC49975C39416CC4DE038ABAA6D7B1C6A842
652FB259DB66278CD1086D67168C5C83042970F67D1F4B5D60FE8BBBA2178FDB
12BE791901A4D58AEFD2D8A9FF2F0A8BC164C022D4A61619BBC0C2707BEB48FF
42C41DAE4F8FC35C43DE0D5A4F85E992738FAFA21BB0503D6FA600A2A39646AE
7370CDBA175163FBE5C625C68A07613BB83E75ECDA43C83A0D73075C9879A510
81A5E2C5169F158566D01FF8CE154A88EA33113A83CD07422802F629DE53A1BD
1AFD24743429A45FF68920F678B5C4584A1EAB39443FB4126192FE5412A68F7E
A5DCB240685CF1CD35D814B09AA8D57F86056B24E9CEA0F386D14195BEEFB3B9
A269A587593874C06B30AB508D50D30E8EE99A4A68AACF07094AF4CA2CBE5F25
F8B5FCE988C624FF44D2ECD2CE5C88EE8FDB5E339C91D281AF0BC516AE5D6CC4
E176544A47869A64E63E54FD9F7E0D39884C8625CB19AC00356E030FFD1FEABD
CF2A42874FD81ACB500ED7F8880BC5DAD2E5E47867D9DC565E4BBD9F038BE67F
1DB382CB29D9D67B4C4A3265FFF9B1CCA4C18A813D244246388ADAE2799D1303
61BACC8EBEBBE87023439690C6E05D265EF875DA2A54F059F67D71CDE5265F46
C16326DCA914BE0FDA1739CCD2331774A46336B100F5649AC067D630F8DAE7E9
13B670E14D8737D0FAD3B909E180091D817B4DB795BFBCC80F4EFBE3D7E37769
48F8D38F5A943A7BC0C6309835F84EFD13BBB1D2AE83991545490FF66BF48E89
25C655C7B21A81B9FB4493377D6B9282545DB3163C5E135D18B4693417BC7BCB
A9B9B3CAC3DE9D802B8522CD9775285CCCC1D8661C4F061141B6A7F98C07C256
081F5B8F3636CCE0A293F905974A0B3700023386B14136429634E4766722F56E
044B37BC6D86BA9762DEE5F1EB91E8328FF2FAEA463F9B2AB7D175D54EFFCAD1
571D44ED014CB9CC49C5FDF45FEA58F190043FF49A4BF36A724D7F414849B63D
419F4B45BB031487261A735F3377789FDAFC843F9B3B635BC7871DBCF2B8B955
2ADE5CB1E538A41E490633E39EC060D8A64948BDADD7174F0065C64540BE53C0
93B8D3A284F804D9B1CD55373FD14DA22FA74F92DB82886F63EA8A844509872B
B7A5F0074DF255A98CDA31250E46A02FA09B38DE7ED8F65D072D1780FBDE2ADE
2D851229D0720F3470BD9195DD704764914593BB144BBB0F0AE0879CE4863061
823DD3561EBCBF76153BDFB19DA55B3F6335426B6E60CE27586E3550F1334652
408290E2076FFA59AF348020CB373865E3627DC24E3B67E616D26EB4017C11A6
375E271AC8E214D210C6F3EA58B33FD265D42EBDD432F77112B3767417A353BC
475B59116D38BDEF3AD8BEDDD43DCBC1F4E3A05F05F21E123CEFC8CAF8386FCB
9239BAE4C07A470EB9ED9E667094025A81C470D33021157B3FB7977F05187DB8
0FC952418014E909E2AE00EC6422671BD0C76C0EB176E73C609F8D0E1B5ED58F
EA3576D096C4C3E971913C3D6A3D02864609E63384ECFAB61947E8BEEC1A8A5F
FDD4596C4DB025FB4E4EA6984A2DB14943FE0C9BE523F969E8E9488609F92CE6
CED02BB220D8D9D7F36EFD601220D514BCBB19653B9CE7A86A6666E25BAB5DB4
6CD7200BA017BA96CD1C3FB87655EC865C3B8BFAF2032AE116B8ADE6750D64A3
C32397663047298CA1C1301453F9F677086985DA45EAC881690E459DDC8465F9
3B4927CF9B941B9B363CB681B598F26B29A32047BEF946795C131C157285282C
CA4F4E8429A662ED419085AF0FB4A3861C67A4552C610497D442E859E06E9D18
9CA5ADB8F0EE8F6AE215F8555DC1C0D75FC746C93A1DC7260579C7DDA09A0A30
BEA55773FE4972A46E6F7B81F2F662252C0709FC2C8B228CBA5632C5C642A6AC
C4D15417762825775A80924429A4EAA36622D2316CED1789EF28815477997EEA
26D31D194DA347C0CBC91A191E3D5539E15480FFA57A171D13C33D1BB81D4C8B
5EA629305D142D1C611E412EA01A6B0C77C49A031843A0D774B73D777A9AFAE6
A7CD65C78EF74B4C57434FCEEC34D09402DB2E7732E7FE06C896F1D8880CC291
5A0EE729A0383F955444E4D85F3A4B29D5F9688F1304E33251D85FA32589D033
60B92ABD1BF4762108CC1B72CF4BE7BABE2CFC70432170E2686EFC8E6DB6980D
032F02ABD0BFB2614400D0E077AA6328584117A9BD68908F0B8E1E467EB8F83C
812CD5897F861FD3B2691B20EC38E6DEBA2875AE44172D12B6548A0EF59C6710
A1C0E5BB406AC6CEA4BA59945F0D1E677AF88B804A02E9BA9C8771227364BA5E
372FC69FE9FD47150A0CC019FB7BF22A3B979C99F9892DA6C81FC7C1E5331EDE
1D174B2E3379BF1CFE8504EAF98EBD7A1288AB7284B078FEFBECB1DC8F5EFA50
FB0B39F2C388F118806FAEF0361E5A30DA786E599A08CBAE6B8A9C1F6BF01E8C
0529FB62E4129AF089BA3BECCCA3E2A956BE12F876E3447F4104A423DB900770
3215D545D09D09BBBF391E3A43343EE4F4FFBFD327C91A222337B46361861E4E
AFC12788E020E9A0C5FB78EE0EFC3CB81B19AEBB6A5817AA99274DF957210A40
1145ADFAC041E0FE33F3E58AF26122C2D5EC028E7AC02DE9F85776EB2801B135
0CE48FF6255DBE11E0D5A14AB86205EF7DFAF82C31851201B4D75B2290644C19
95332015C6C0D49BA6630E7483A93B97B9C6282E98DAD2C3ADE7D975F1B658A5
81597DC399DB7197A9152E517EF0F65FC96F998CBF98917D801FBCB9929FF928
49EFE0780FF694FF65DA90DD373AAA5875F41BA011C0B7A3763ABB1A726D0EDF
15363FC1EBB207AB8A2FAE3C43DB19DA0B5CAB6F8D1D03E2532F635936C22483
BAB18CEA58D596BDED31A69CE0AE0177D2B99808090A5B4E0F7E975F0A6A6B09
14482B2CA100D46D3D46D372A8560BBF2D38E8B49287083F3F7A699F3DBB1907
D5A101ED2AF416D8A4E7E30891902E7F5A22044DEF6B728710B0192BFFF13E61
DB49B94081C4838F3CCBDCFE65F54CD029584F958D452D4484852438B31844F3
7A98753102578FF1E512CD667BE3B831297BDE97FE2F7E5AB4CF003266DD31F0
ADDEBE3CE6B40F7E3096F8E0D011CB69C11003ACA352E355DE386E2A72FC3356
6C1AA0E3D26C56EBDADA436649A0E14AB04AB9A74CCAC4F70DC503EB508567C7
F34ACED55A535E0B2C283ECA9474F3E847DF66512D014D5C7ED296C3441C951E
1617350E6C724CD682DC94D4A705033B67E3AEF4086446F8F13CA67F8506F5E2
12668FFAD172B2B9005A8CC15EDEFE208616FA56D92347D81FA9772C27E56981
D9612BC188626E5330A6ADBD5C6A80D3E9117CA55DE76735D3C2DABF76475479
7AB7402A7E4EDAF950964E903405EEEAF0EA7ACCF3954FDAA2E22CEEF3B0647E
26F47A1BE4D3CA0952D006DBD1416A1BE2785C542D0A4BE868060121FEB92C2D
CEE435B2C1B342B6DEEEC80E53D8AC4DCA07C961E0BCD5B5158158F0353124D2
903D533061616F0975B16E8C6A937D5F50730F87461D8166D473BF570B3DB7EE
8EEF2FC679F654F27464C3E04E4B15FA6FE9D0EF916A1E3241DD59F622DEE235
6B941F292425C63C09D85A4E09BF3F229799F6656F7BB8E67379FC4652ADF651
79AACCECCE2E4D97EC9F234AE3452CEBCFDFD0D09782928DAB3901FD031F358B
86B6243EE2C613DB18C8804FCA6E7A4476C66313E15C31F7AD6421FE060E59E6
FE4F788AAFEB2E05BB7966CA5034B8EFD58FC08C1C1FF3C41E8470A425B229E5
E3853B020255ABD26B854C96F00F481E3ECCBC25684CA46FA548AFD094FAD0BD
8F0A57AABC6FBD599673B5F6A73A47FFFB9D60DE7C9E336B133B8800E5D9734B
D4604E492370477C41EDF1D79F3ECDBEF0FCC1D9D5C6E87E0A5318BCB9912416
D357F63FA237451814F7A1FA42886B5EB3DFBB5B9BD0784EFA1A9BD09ABC0495
6B86F9B706370F482C1CD58E15E23EB6FFC0B492E09549CEA21B8FE272F0F0BE
0CBB445E9DC99DE3BF32B95CA40F19FE0EEEA97258C98D329FC716ADC610133E
D70C3119180B78C202125FD44A6DF4145BE31DCDEBF74C4F5F423B9F065B6FF4
EBF07DA426CB14F48BAC985DF4B9EB28129D8B112497D93B47541F511340C52E
88644A4EF851F14F3251ADE1F5212BE86E7C5C16FB6CA58FC8BA0FFD71495D64
7A2F506A78564C9BB7F666CFAE1CFE2EBC7880134F6DDA711F28AEAA7F817529
5BE364F4FF90ADDC9DB515FBD0A78420CDAACDA7BF1E9DD09B987DDE9A64E9BB
AB13E9EC7787691ED180DD93E65C3E4A2F30930C2AB7113EBCEDD2D3088895C3
A2BAA31C54AC236B499AEFCAF7E22F4F3D4C60F518EE6B939CBCCA90FD837EA4
7FA3CBBF9C9CDF8B900CDD5250200A15715177CB5302E269AC9E60DEC8095311
58551A92A6DA2BF2DFE5F70744D88F7C4E5D3C1D521B90F87779E99961273EB9
E4CEA8D939A432F2B385D51E598AE0216A34D55E97DD9B83EAD5F24CDC950217
781F9C6ED40C6247A0E077BB143C32F483641633EA61D047A202E5D0D13E64A5
822CE377699247B089B8C9C706DE4913341530195AE2B431CA7080B99AF22A14
34E7D661083C7F8D02F91CCD580EA19FC0824D6422A75109FA64EEB0E9543BFA
D518A2F041B9D2D3DB64A7700075588C874F557C39572C91C79CAAF2B72E94D3
E1EBE8710E44EA188EAF4FFC69CB01744A66E3C47063D0A6D096E0DA8D73A05B
6143ED6F6957D832CBD9C338B456DA0001A1ED0F5E834E583389847B65D114CA
FF0FCF67585A6BCBE22DA6E36AEAB46B72FFD337D62DEA0EECDAC0ACC8C1B258
E7D6FABB7F8E45CB2FD9AA2EA98E381A01BA4C4E31747075674258F97031138C
2DDCD1A8D7C33237DB80F2C0C456094A56193901E981D6F460317797A968DBCB
D112CE5228C9B5D99117CFD7FB357A6A2CFDE5AE40715A9CF96C4F2851BA048E
65ACEB8131C3661E84351914EACF7842A4BE1404DC599682264B932F447DB9FF
C5604B82B36D6DFE1C12FF4026BE59AAE0581FEDED9A2A1841400CBA00202C18
03739A8B96168F98A433D6F3C4B442E014E3E5A5E82E52DB5332AB2816EA478C
1605A709DB9A94BC08D61C1A6E98311D99A91197716DBA03B23D85CC8B701EAA
654C5EE74F40D781394EE97CCC237877477FD29AE816D48E175C71E27378C1D7
67EAD0681E616D4350FA55A7F6C79275EFE823C6934D7A42202DCE9AB3649C01
936660D3CB62D4FB64C264B671D759BC5086CFE6D15CE32F0284759F7B0F74B1
8325867E1D91E5FF856D1DBAF852206836DD2418ABB84A9D0175417452C39233
21C9D354EDF5B7EA910F8DF392FB73AC3324F36921AAB291F94D0DF64936E7FE
4B7CB450A9C45FCC1397C6B0A86284D5B1029D097CF54F6C86A39390575D5ED4
A59BF74D1818954F00B04515E5C9A0B78610D2D795E0959C0188CADA78E51C3D
50F55A041447594422EEFFACCE6AF7CC9768F724E59CDF8709D217496E3C3AB9
B3DCBE200EEF4E11B7891F80938E289D66EDD30965D997D6FFF4DCE02D82496C
DFACE9B1E80979B7487BA2CB786018E20A5E0355AA372D307F909B8B374E4975
E93D9FD32DFA0AE84699D18119CE04F5426F7148BB8FA709AF13442711735293
72AA6281475FC25BAA32CBA1B871CB766FC6160B5FCCA003E08D046016A73152
85D2565D74C7EB40E652561D2842E3A78B6D55FBAC702D9A999BFD5EA2085DF9
BCC31DE7316A89D420452DB4D0CBE1BD69A7BAD0FE4EB73DC065108EA7DFFABC
322A2A3F6243E14C981131F7CCC59AA97694E1FF5C5A4AE026D633AC3B468FA0
9B0E59D0BB5D9D03EBCE22EC13D6CD3D48CCC22CDE0452346F282DCEB0D5BF21
9807F397A19BFFBA47322680DA64C30D35B103D73176C8E1606A061E66067919
198F4F3D785A31C1CF5B24D127CFD021D684AF84AEFD86A25FC81B91DDCE0CA3
E5B551096DD5762189E8BFD06E133C9671B4329C478509F4DF6F8293785364A5
F91F1B37145BB0A4495F535D726FD17083673CC00C8D3B74545DB64C62D7D9A7
76FA5FB33BDD959EAAA11CB039BFB286986DEA740D744963AE53A1B8DCD067A4
C160501C17041306FB82B973E484683DFB445134A9805F40B227F226C361BE13
5F4E101511B9440376547482A1BB71D209EF65C161371032BE4902BBD57AA5DC
285EA30F1EABDB5D3FA827EC09C4A5745707438921B72245BB14971D54FAFEE3
CCC1C812E9FAC331FD70975E3A0C72D374E95839868F02138047E9722F77F39C
29EA6F8251D454FC09CFD2C2636C0FFE8BCDBE3CAE02701424A6D49E4DE8DC48
A4DEDDCEF664ECFD1D04331C07AE954D0E9CA654F6775A6D19B68D965BD8D791
24D5AFA9BD1B7B08EE20D4B885A69861DDB635B02814BAAD9672A14E50D6ACA7
20112FFF6E06D4095CAC5179C10AF28F2335EF156D5433CD32D3AEE261D53F2C
26FAA081FD527E093B88DBB009C2D8FEA6F145CD4354B3D73C6E0D02ADAE4B0C
D3C1CE95146E65293B2C06D7577E63341BE08A9EBD674FA750A3ACF4ADE4F8C2
4106E0D76B8DEDC464BC4C4261AD70659F7E211E3B6E052E1597B542399476EB
CADDBF3B8038B0C7D0902E5F8BA2960305836E8B4BFB953AED79A7F45B387FF6
5A63CF2A927E5F2D7313EA2C5610209DAEE2CD886994306CDAD972101182F51A
AA3F9F0E780A39E5C7E6EFD49CF17101CF71155E03C1D4555141D7939AD4C8BE
35B06BF8B30FF95CCB78AFF37D6D6BBB94B39D8CCC2DAD557200C80A7C275CA0
5E483993169243AC5901013CC106B56125EDE4136C982B8E51F67A14B5B2C6F8
4E9503B6429B70C9A23CE3B70D4ECE80982E630FE1320B437F8ECAF12C867039
BE46D9DE0DAE65E46E4AEA1568A918D63DDACE5E17B900B2F8C93C6C5D71E9B1
ACB2AB538E4980525A0F415E4EFB89B9FA1CBA7297A7D18D6995357817A000ED
626122951A5264E892100A60298CE50716B8441B0B878FE2DA6E03FB1D75C02A
BAB7AA375883C30B805D45CEDF664BA6DB13755321233449C37F2DA97E67DF15
D2FB5A046D818FBA90295153CC3FF0A4FCB3B2F24FDC58E3B776BB4B3F82782A
767201EB3012C24B426C448565D8D5634B7599362FDC9BF590AEE75706CEFE4F
19FAAC37DFD68B6B74FC1097050C100981E983F653DD9005B52790D8A7479D92
6E7CF5389915DF462574F4AEE84FD2DE906AEA76451DF62E97990EDF8444CC83
F1AF7D859013E7449FD300F6111A501180C56DF1515BE3D4E87DFD1F59AFA01D
067B1B42FC299C191427028465C03AE39BEAC519ED40653C899AD3D227DE4E17
D0E2B28A6983D122E3D030A4C6C77B344E264C80B17D45CDBFA257462A46438B
23485DB3EECE7D12E2C82487B781D64B6075D35E332E280608DADE62291B0EC1
9B1A586CA16EBA54A5068BF3E5319CF931524EEE78B87930A6D5C0E60F2B033B
B07BED25AE3BB9AE7D89470386BDB6CD26559812CCCEF40136DE44D1DD0956C1
362CA7676F0E037CF9FE013A88CA14BE086F8D4E32234B96BF37BA75E6159A5A
185DF384C3FE28C017EAEB5CA8EC4897901FBAF7CA0AC35F0BC5C7A59B86DDE7
88CF4544D70446CFD36D3B1305B79F4198FB57134BD4E40FBF297E85C3F343EF
956E5503F310B5A8068E167B6E11828C9721A9E9DD6412F648261F70D0F14165
FDEF1C160A16A35865B057F758E0CB79863C9E50D108A802E91C5459F5CEFCBA
7605BD659A04CF082DBE1386640593491D634AACE4C4952FB9743036AB8F171E
28BDFA57F4575B2B2CB9C7874C114996FF25EF5CC6B22EDC09857D3E5F676DD0
5F584CCE1E14F104300B995E8562B37C85E89093EC89B975E77079B6748365EE
6D09B687A7BAA7F4034FF97C512C2C654D8967C400F5C62E9FC8B9E84BF46406
5CC9706434B124533A05BD4B9621A6A1E57DFCE7C5DFEAEDFD98057DDF4FC730
6671526361ED2C379A528BA81DFF14211B6E5E86568CDD83794B1D8E0D6BEFC5
DCDD5D4EEFDD6ABE8525B83F8C714DD0B43D864F549344B3D2D311C782B0D333
718D7EF335D806C61FCB681942BDA68F6859DBAF68A3561047EC22A936598B5E
50FC8DDC8DEB238A2554A279EE152CF6A50F4B45AFECD3F835C80419B6AB6962
8B5500ADCA2CA74B5DAFA70C389BA8798B3CB383E4249860F34E141E414CB9DE
CD58EB2544350BCE56376867A3978D9EB480EB559729BAFB508171FD33CD22FA
7701FAB4B15160A44D125456BA17D8B91011010407B5F2CAE191DE7CCF14E0EA
440A74DBD51ABBEE7629C98D586F50B2191756F77E37143B2E58225D84934141
A0CA896922768581D0B4103EBB92A3F801177BDE9BDD61E288E9C5D47B02668B
23E421A9436CCB8D7C80BAB081E9C62A6077A7EF43BE2403C1F1B08901EBC1BC
93D4AC294561D9674B7F591FB8C273310DF708FB5AEEA58BBA6D33BF7CD8B1B2
F0FD19AA6BD920710445BD39E038A136F8256B7DCCA0D7503A0750027042AE21
5C7760AD65654709589BAD7E23898C781A33C18EE27DC3F778B91996881C95C0
5D86542DCC9198A7606D457F94F378C5309CCA4FD63BBFD2D3809C0B7C8EE627
8D74ECB3172F5E2CFCE81393DA14560C1643CDFA74C575BAA216CEE3CC4D2DAE
F3D4704B9867C833ED3E382CCA1FCE36BA3CC24E95A8671E7A8B9F3BA235D8D9
7596B5855B28202F64642D7C3842551319EC75577D484B3AF7B1F129E5AC8D5B
3EDACB7BB8E5682658AC6F300ABDB95B176FE8548AF25451AA82FA97890367A5
0F6EC66B43972080D9DD453AFA16E37D5951E76363CE7E024B0EB082DF83FDE3
DB7066BBFCF2740D669A3DDBFC05DE11A30BA6976F13C5987841CFC4905B7C19
5F49CD4B2F3040B545FD26365F0251A5AD8F1B52BE124FAFF443C0A979D48F76
8640FE4CC194D6FC7B8B746C4B214A485F9CE57642F42A0320B3A1A23AA253B4
AA7E3F0FA110ACEFA33A9212531D2253D48B9C58D03455481723DD4A83BD44FC
F0C480796F1FD4CC18F8D5244699A2C7A111F74F8EC24F96CB69614008A39B71
263B7C3CAEC8AC487A4BE1DA4D789E3671BFE2BEA1A77EEF42F50F46D67A4DD7
81A368E75CCC711A36C12CD657EBEA3230AD2897EB6617BBF015C226EFBA90DD
420E6F01BD1D74C0585BAD0EC4977851FF7A77DB4B1AF9EB73EE0AAD14A6148B
7FB755AE4B2A5D3D2CFFD91CC81F77FCACC9821110966242774A0E9781935D12
7FFE601E8ED0AD98E9E8AAE92BBF0645F4CE7BE13877188702B3E070D395A2C7
6370CA9BA8EAC0349BD42A50292FC9B939559654B5B6A617D2F569070C62E618
76270DCD43B21860B734DC01663B0D93C5C6A15E54C6D6B7A331AF7237DCDC24
83E367DD892F6347E5FC2B1B14D2B84F2EEA849803EC5C4E36C41EE1C42B5BE2
9E40956D3B9EC53E7FDFA26F060FC883892586428602B77FB03EC46935535196
CA29FA216E7980665A358233CC771B991F19BB4E4E2C321FD8598C19CC147888
1F66D7571257E3E96F17DE324F9355152CD28C7BC3BB93B0B08CC8339208EBDD
9F27C3248B6BA76044B9B6CFABFB2B1B4DAEB1783E9549B6E792B1FBA53AFFEF
94FD342BCD32037EACE9D30FD01A920F287B0681169A88E0C8C0A218463D1E06
0B20BC8498014FC6AF9154768BA86963E005FEA47E033D6EF4DDACE3569FAE66
2D19514D98A469AEB8E3D0DC4C2312EC701C2A55C23A71E12403A4435C6FC372
9B4789A057DB04B8502472D0E777A129C3209098DE884656EBE1AD4AC19611B8
00EB313E054934D4F2B7AB5C10C35A95B63056A0ED3DDED1C8764477F6328485
601BB3CAFFD7558991E2863ED041CA2DE3FFAA8AD756AB15EC0CD5045CBAEDDE
41FBF8349AA3D1058A665FFFB23654B08776938DFC3DCEEFBBAC6F770CD79703
5A82372EE5B315A29C309EBBDEC6FE4167A4B277223A0565DE2352C00C1694F3
526F0BBE8E4F5D25F9F1DF3CD45EAC63D7202E2F23518545A75568CC03D46A3E
3FA7BD5DCFEC68DCAC374CC58F53516ECD13D63DA702AE2899DC0D4302F94009
752E435FDB16D8DBF3FDD9918C0CE7C0956856D9F69B74AF32E844868A118F4B
FE0ABF98E2C5A19EF06763B0D9A592E83D645A04218F530464521FB0FB9F0BB4
433C23EA481FE64772B91987B8C9371E7871C47BFD44237CAB3726CD9EC2A128
5B9BFB3A618C623446D1EEE43707530FF446F5412D45A36AA08FC5A035A9DD15
71B9CBBFF433C29A885454A017C6ABC65E4B0D59A125C7C77AA49BD9B1BBA349
5F83BE691AD5873FCEE5C670C6801D0350D7F22457EBDA3D07A7006E2AAF3229
69E1B57066C8118D02FA7C1BB1814DC6759A7DA7D21D3C9942F6FFAA97BFE7C2
2933F9A307656223A0A42BCAE44555C0D828191BAF1A3A581440ADDBCA9C989E
C80349B770696FE203E13A20D5D379D799E0F7EE49063DB2B414FD5EA530E7AD
4162D82B0F492CF442E70702004C6C7783A20E8A5E9C789144F916BACFD76BFC
3C409DDB04BBA071956C8CCCEA80CC49FC8309A3CB30FFBE5FE636DF57B558E1
6CC25862532DC005A20954EF9864F500715788AE98B33E45E0BB2CA61A50140E
C0EEA1526E7DDA565CAC0D152A89A3A5098E4862655E72BE413C71765E586ADF
C1F3A1D504BB186F7AE538B00616E4B4C8E03E97399C7B86E36BFEFCE45ECDB7
329F90BBB6DAFAD6FD32FE82448B078BC5C5124F162C4D887489B2480B395CF7
C56DB4A483D8E5108DE8DBB8969177E35569021D01E2FB9D562A5AEE357333AB
B2015CEFC2458B86B6A05134D14DB95B454A315D7C2A56B048665701A706326D
B07EE4B0CBB37D2B233E6CE5816218839BE37E4FDF0487627EDD86358D559355
C02623AC7BCDE48FCCF75BA29396E3661DE5F5999A63372DDBEE44AA952C63FE
CFCC9E24B85B4153C153B5E83BB764F2E6529C40704294478B4C661D4A8F10F1
32F67AB2F1CD3BA283A2BE50C103A259FA7292917CA5EE3BCA610F2D3F8D708D
5F846733BE8582896FB8EF4646F058316E16C3790BA720F9A365839EEE99D1F4
30C23D975E09A86C1C72D31C33B3285CB5F6566613FC90F466BF864E410B3B99
8E1E6676006A49B8F0DB878BC001D3FCCD33097503FEE59D78820932F63AE166
C8C3AFE23164A3E276B5FF364A2892E5612B1DDFB68059EFDE3E73484A52BD15
6A37178D3E87A69A63A297549D0102F15339F1D65EEEDC144E3E5FBBB66E6668
18746F2C3E788C78BDBF343D8980C7C6DCED448DD5136BBA99AFCF09844C69AD
39AB34C7796A19293DD6AC12591E513082311CA9B0E3D6E4BFED4C41487D472E
5D495D7DB5CD833C765FC37EE08722DCE6A5762E1A3E7A7CD9E613AEC07A55F2
55A7AD24463CD63336808ED6744C34C65B60F0EB1ECE21540B3CC265A5B7F41D
9155E8D7EAC132017AC9EFB457D390CCAFF5EB0C0E08AE28D6ED2894CA2A1742
F355F95D036444FD4729AF6F730554E12EFCDA8D2534F29C05284F400EB665E7
9D921C6A19B5977ECE7F3073E4B39B0D6BED0E6D05FEF7327996CD79A2EFB090
DAF16E947F26DA74C1085D86A4AFDAD17A5FFB88982AC0ABC6BDBF3F83F3080C
908C59939D52CB120AE4D14633E4CF33657687D3EE4AB64AA6BE8FBA38AA03F3
6984AF5DB692E94EBA7F274CB8ECE8C320932386614F8B8C92DBDEB31AEFDDD1
8D80789D008D1CF35CEE77DFC9B92FCF9FE9F6885E46FA5A483794C93FA30B29
85199CDAACFF06FA45DFACA7C446969D6205792970613940FAF257AE39B0442E
F5BBDBAC1FC39D45BE93AD46D002BBEC3F1C79F7EB3BB619D668B14AEA5F6F44
91F14EC36ED32F244901EEE9F98963FC566AE8087F05E3B715D7456F21ACFA3E
92B4C0DD51BCA01B74842C0848201B58FE1FFEA1C2E4FA0318E9D2A9F0716C35
383D9920E20C9105A0CA7C9A47AEFB6A943378AA5634BF370095340813C63D54
72D7CE9BDA1B1399222B908DC8A8196CB2EC137E605FD70BA4D23E8E8A60FC0D
AF7AAA5DED44A80B2D792B67534658BC700558E29BBB5CD0CFD4B0C9BDE0C966
D1E96B5084CDD2735AABFE3A85206D96AFD50D86035F0A26274A0187F5512752
2C70B67AB4D77BC9D98A9F2A11486A99DC18DBFFFB5CC5DB120CA51182312252
D8C669F1D20ADF43EF9451D6FC85DE18EEFC2C82A5A8D5FE0B78AC5E145E4991
E3DB8818892A97F30149B823D88C3037525304BAC442174801A68CDF6D1C3AB4
CBC8F042E6EC98BD9C4A57A1D6A6C61D384F0CA9F2FE4EB1E6D1FDDDD8664BC1
CA28DC30CB21B82EAD6FBBA971193D65CCFF0D8C63AA244D5222C73DB3170AFE
82429531DBBBFD7886F29DB444F61FDA74D255AFDB337976C40EEA90F810D1A3
DE2660AE7C03AF8D8E2AE4FD8230CAC595D48967CED6982B65DE1C68DFB4BD72
9A2F49DCCD10F90C2E5B51165FEDB6C0BFB8E392C47768BF5E45EED8538ECF8A
C92C7C85E332418B3DFD89848024DA559FE7739A7A4AD1A360552DF18B7E7374
6B4845C1AD17DC459F4BB926F6AC23A5DD4EECD64A2448C94772D71BFE2C256A
7D9B8FE4C3A457012CC70305B27303AB8B01BAA97DD9F15AE9D3C8114C3213E2
2CC986E331E6BF7546AE632762C6E7846AC930D9055F17EFBDC17B31E2DC40C5
F6FB17C184D13B54095AFE65755150ABFC0F6D936DBAB4429DB83256EA19B346
AB43808A445C493342A60AB465C2D9B52D7FB664AFB5CF4466E5410DD289DFB0
D531E84BEF8C0744CFA5991E375D71D3BA61F9CBC1F6355E401215AE938D0F97
A27C3B099FDE85D6632A75C246D59B0076C815771890F66813891E0847480232
53523608E99C7559CF05A292A26715B426D1AD4163ACB7CC08CF84D5F932B514
0ACCB2EB1FE0530B1347A3685F30F36DE7B2BD1AB594E30DA152EE4865B4284D
9BC4EF7A49689BB7F47DD10FA7103519B1998273EA5EF8292B1F8E990D471CD9
638967592435DABCB37004AAFE9CF4F1C1B762DD12E1FD4B12AB5B9DEFA889A7
BFFD9DDCCD3511D6AC021C76270D2E3A3D0CE42DF4292F678AFFFD3AD4E1BD24
C55AB30CF63C61776015142B71A9A7DD807E222A744A61731778608EC541BD10
A3E045E9CC187251C6688734BDB364C472429EEED79EF5417D07F910B58AEE6A
2BA482A5A1356A55B1395C27635BFDC455C0C656A944845F215322F61981F51A
9A0A102B28448390578150422F5BBB21D09C529774E1FF40ACE770661323C93A
C454BF7B1B8CA454DDCAC1925C818ADF2FD9522BE438FAFC01717AB2804F4F84
D7C368DD9C72AB9DBDB206D0367118EF757E36F25403585825195411C5B75756
95E6504E5786A28EA2EEE987396991962B6578A2416C998A06856B737F2F38F6
8BDCB63B0BA0B9C411EEBD07899B759D4D1E7D4F5739B7B009ADA9FF2B1C71B7
16725BA483E82E32AD27983561BE965A56DC8D685219B593D2B0A3D1510C1E17
5A94D25F87AFDFF4E4AEAB68CAB8AF17F88A4B57DC39AF18EE8E3783F4CD8B0C
6F8A1986033108D2F60E22923DD3000EA697A3B7B5C0E46E1AD74D4AF268AA3E
346434C7F5C70B122266B95DC35453A01DF1239E50245C4DC2928B4740422303
7FCFA29DC6F390337BE7EF1007C3F826F6AD2D3A9B02DD05CBF9C4ED67D3930F
83A5C0C31E8A5ADEB19D7C80ACAD3D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DF7740107CE11D9F1E95F04ACAA904AECA8C
66082082F59CB8E5E7A96FFD63BF90F69931F3D5B5F81C3E234904D5FE5CCAD9
17381670D1548D72FE715FFA30FEBAC715513E0525049188B9D91BF7EBFF4444
ABA5490DC6A5CD8C1BF3EF1341A126980C7890794A85EF6CE32D227A9532B61E
E1FDB83CCE8849508A3EA0FDABE92387B526ED0C9A92315083DF5BEC01ECCC91
62D605160067EB251A8B40D3229C18FF655220D3DC72B74618CE98CDB7E370A0
BA04A0FFC4D3C3AFAD0869003BE33A0CC74D81D8BB0D87E5C0AE932B4309387E
9DBF69C52ABE85006D83B9020CC042DA9597CE1A2C03653896E07940025DD68C
11C8EF41CED336BB116AB3BE6175D6DD1CAF80144DD5D921D9F734EB854BE550
341FD8148EBCF4482E9D97738693472583DD53F4D15F219219825BEA068392E9
EC101A958BA3D4C45B156302AD722B13F05F71D8C40C2ED1766F45ECB609FDD6
6F3014B11E63D70CA13D96BD5AE19DAD78AD44C7C99DD91D71CC2A3E0EF74012
0DE42BF30706C80B42BB37178508EB5EB02F088194A4AEF86083F9A849BDD896
A9B2F6F431345964D7EC4F60EA071D0061F16D88796C4BA0C670D0E715ED9330
13619BC67D712BF7CEC27CE0B7ED8D31A29D7F2D8884AEABFBF6919D7FFD1E7D
0B2FA582811CDA7DEB06661A2D27741CECA6F2956BF0F2DCDF5326BD8683B5E3
828D8A7AE0C2040DE5F9ABF2B4CB8517A00888053AE978BDF45C9B464B9DA129
0584B298711CB71771E933AB92CA36C6D06E8D4E51000F60EB69CFE870326E00
4D436C27CC46EEF80FA1A05AB90D788643BDAC66F405924BF40E49AE3D7453C6
30FC3431FA13B333D69F672BCD4D19F6D70059D309B72D0A48EC241A28AE69C4
8B50DDF960297D39DF2B708BEF605075EE15741BE0742A7D74895BC47DCAA02E
982F9ED1C700AE14F72B455074678DFDBED70D546BC7E2C50ED4DC57B3D87551
CE86D4E2DB7607F065FACA01BF64480CC5A1E8891B692ACAE9C6921FF496F522
F4F6B7362A3E60B1A2E645D49F8DCB88685B9321172315171071A3F8A9D704FD
FC4178A14780955A89C2CF9BA8E32B49BD096999887AD4D12DDFD616EEB4FC37
08B3E83D87F323E24EDF17B8187F0EB71EA7D10F02928D6E29D2F9F2FC89FC1C
20F741AD7BCFFE1FFF0D4758515A86D82794F04E7E9865773AF83D1611360216
3D500E1FC9C23244B8402D1A983F3DECBD76E17E95FB425AAC96FCE977839530
DFDD8B9C9935E7B787F601DADCC81385E9036778E69BB90B0D130A32445972FA
44213D14B42FA2BB0D4C4560D8DF4183D3598FB9584A4433C91319E3A1614154
78975E25D1E928C5867A495F88565BA516314A268E9A30EB41F7C771758410E7
D1179567B10FEED34039982ED5E5664949215B7B7C699903F93FA67DAAB60FAF
8B43F9409392E4D9197B434AFA1C9FBB838F0E570E8CF04E85BA16BBB3123ECF
3733A72C364FC2FD02F3F6970F6306B22213A308C0C5BC56711B73E44218A69F
41A55F3C8296D12EADD820721F4C7AF96CF1DE87958E94147897470374D33501
DA608DE239D45886741463E26AD685C330FF9B4020A256C0820CFFB71A8598FC
3ED02114F4C179D7B00C40CA23F99A91A601E5E290A8B8D528BEC85ED2AECB1F
2868B1AD53080831000B7B82E2B24477097AA2DB2E8385C7B35F69B7D06F576D
7570D2B23AC52BCBE12DA950703A90C352983D6F88861882EF3B6D43899175D1
89B06D743A93B49963136BB32D1B6B235AE5810F201E3B2C79E9201295016793
5869EC0E7889E8F98F0A8B4645AC96636979A8D75386EF83D072F76E195C0E3F
2B12B433D7DA1F634865DA6E5ED7555195196DB28B1A5318E868D3EFBB90D58E
EFD17FB418D20EB82747C47F18DC85145900305F3881436FF37CA806711890C1
AC5997F21A14E7523CEDB295474F3A38ECEF7C54EA07F6FDB19C96DBA02AE3B0
DF0C14108078325AED22847F85596046565D25415CD84097C5A85D7320115AD7
D63B505AC36D622B219121677E28A3BE4E2A61F7557FEF701AA6FBAB1DC1F64F
8FEE8212CD7726245B07CEEC1724DBCF6E42D0E179805F8CD089D4554E9330F6
7F002EDD4ACF4A677479549172047991F13B71F527D425312BFD58FCD53D79FF
E6584D0670E527BC95332D13B3980549FA02073BC3CAFDCB75A5375320E9EFB4
A67A70A0A096770310592CC1102395BF4918D09A32C2F2ED1D80E2B3180AE72B
3CA9085F57948854365B07403AAC955CA584ECA3E9F546F639121EC4CED70598
105B6DC540B6BB474505E96851F00D0245484732D41593C3181479A7C6A57192
4602E53DD9BFD2DAC29A0339A42F6A342FAFA1F7C6022BCB476ACDDDC00930BE
769752504D9980BD4EA32F85209065B61A9E7C56EEFE751F19938EF203AAEAA8
FF3304518C35E55502546E62683AA35636611957B1224E2237CE0413A464973E
2730E8D19B8557BF8C7939094180813BD2E28A6186CED87E55E5EFF3B4CABC0C
EF169B7166EADD48DBBD871AF4056C369E5A5941D6326BFD00F8E2C46B4C975A
CACB7A8A5A23D9F1265517D9ACA0526AAA65C66CFCC6ED8239419F80581602A2
06FD79BAEAB05CCF5B81D99CD34D14258430ADA1BB60B87B9F39D486C776B1FC
B57C5F9910B7D8C545F3F85475C51BE22597651714C1A4FD2F201B033290635C
60280122404A772D9B7C8EBFC881ADB30221EFBEC908EF7DE25BC5A014E43E10
7F0611B1812DC29BBFD9378D8E898275EEB2B9BB17486D50F4071CDC8414D5EC
6418DB8179EFF78049A3C48F0C0FD98619D13D8F541EB2C9DD4ECE1D5C657039
EC1F609EF885D233DE4656E4CCC1AC1A5762BE48F5FA88A94B5559F82B9B5DAB
6124517880F0E4D2A61883FE8CFD5D508546C36223A3B17077648177478BDBBB
DC518B53198CFA2EBDE1905F0896EC4B4A1BE90C3436EC6C1A358168848EA690
1AD21EB7CA0F64FE5AC95D31653561CFDA2DC53AFA62B3FB5DB8908A52215521
88CD5439E4DBC0CD9E0294D27652FB2888AB7FE99913BF4CE47841CC9958BB44
D6205C20C2557425963BA6C7D42D803261C56860EFE5C0DEDABEBD4D7006A269
6651C6FDE612C8F2A7DA397EDF93092B6F2626F4F71F082278CD89425AC6A921
1713CA2F6EA0E4FA2A6A4DBD07C241210BC3BAD783C3D8B935EF152D0535716D
2678A15E05ED2E43CA2E9C00B041913A7EA9B77294933C7527E3BA0ED1CC6D6B
3935B883730AEDAC1E76732CC2F9B08F3950A7B84F00E466895F2F360DDFB20C
9964E1494AFE21A1960C16A9DA14E2A8D7197B0F7D204DE6A601E8C160B04369
AF92AF3512783242342904893D044DA384E4836D27E4FCF54E15521D25E3923F
0EED07FDB1FBF66D0C4D01EAF77D61546CD79B48F75CBDF1391C2267587B2AA2
F542AD17D146FD2B6C69375E9E0B1B272B51BB1829FEDEA0C52128A57CD458DF
6ED9F8FAF6B0A70F46877976C12BBF262AFCBF54EDE62CBD809856489B4197F6
0D3490DC64AC978A20070745A4FA25CD68418C5E78FD0770E03C8B26A3A8718E
3BB1B1EDE4A4530150F1DD8FF418813FAA669C28B477CE8019F060A14CB5F25A
32DA0A44303665CA891B13D5E7D8AE90EA972CB8CA3E598F3004EC9A164C369C
237DD28FC4BE2843036E872B2A0089C3631005135EF22BFCDD25E2C8CEFD0151
FF96E6C9A3CF5660A12C174AF75DF1CDE0A18C94817F54639ABBD74F31C19698
C0C0C9683827A13C1735D2C649C0D4A6B81F2FC3CE928A3B7A62E15F03746257
39FCE99B64D110B5B05335F5E9BDD8C3A4A82C2E598302E5493842F591B9FDB7
30DA86C9CA2049211DFC67FEF43680759C54C9150D8F94874DD922AAC1936BEC
68BEE119F6775633440286A02109B864FE34566E17B4A1A09F9BA10DED060DF6
7A887790AD66094709274169E75C3923B20AA27F1678A9A853C1E216348AB87B
18A4184C84556C0476BCFB97E9EB273A452255A0E67CEA1E27592C2CDEC3322C
96BA7CB888482D22A585867F2BF907A6B5F8D24759AB7B74ACB665959298984C
7ED8F180E601318ECE80777A5FA5D574ACEC365830FD9165D3E6DCBA5BBF1E7D
B4C0E78BFC240BAEC20AD4AAD8378F4376FCC0454617F9E01B6950D5D43C0893
2DAF40BC1620DFF03D5CF3813B255E1239FA44736247CBAAD5B856D7BD6E5E18
6ACD175792E9E7357B597236A903ED35AED9257EE677F1F767D930633B6D5CBD
885DC93B1C8C8E7926F6D8AD95948A0444A82E58757D6E68D2270B55C1732391
2234DA3B44095B085C51E64CF72B4AD92A58658A653522C8054280CFE72EADA6
8F6A0DDC1BF80268E5088BDBE5E056B844955E6C31138546BB8DA583B835BD8F
8D290BD895D568A297264EBB5C05F467B01EF827521F304CB4345C83F80FBC03
38ECF2355935040FACC7D0B54953EDEA220CBC03D0C043019D641A2BC9EFCA58
B52F92C06B05706661604092FA144B0C23D73D144DE465DD11AAD641A5AA25D5
B6E174C33BBDC688AC7E6947F5004C3CF94A981A4F8D6172FDC0C468F2F700F5
E0C957E596E7E98061EC97371423341DF1B3457BD811E612820D7D1EB275BC1A
B6F8847D80E4BD474269F936D2A331A6E9E633BD1AACE6F06A397B5D75289ED3
07C730A7F0348C10D57DD5E2D5FE4553ADA5745AE8EE1F8ACD9347DB0B23937F
6C11622F344353D98F5E79D14DB113E9294AC1A3099AF1EAB3652298E6F6E879
78C4908A372195496F1A11735968BD0E06478F2B489B0E9B262C6907D3FE4EFB
52DAA01D2BDF29421E083D0B1C4496607F31D3386CF4B205301FE5A2F5462431
5981DB9E59213A1780B7675612197DD34000D9B35BC93FF2EFF7DB3731D6B0CA
7F909B8B374E4975E93D9FD32DFA0AE84699D1873507DD6212A4935ED92E290D
813EBC9AA0C94A84970F843A4E97844FCB79DA7777CF977CF2BD675B47AAC8EF
82134EC41DD233AE8C3DB6684096A4CBFE226E7AE728A1B19B883135C5C6C229
A606FAD9B8CD1DF6F9D3B75C76F5F25E67153D7BD243EF56A477B3DFBCC8AF7B
6FB67E620200B0BC6CD1B5C4C56944521E76439B5DCA7732A29F37A088B241F0
4FF20C785A6F46E7AB1852DA3A667B138DB0BE8B2F69FDADB27871E711B7F00F
668A0240AC9A7D179D09F2BBA96FC7F5529206548AC78713D07238DCF799AC8A
CD3E5D267502A7F715F108E9EAF4ADF749A816A29ECEFA4F96BCE0064860F39B
D140637E97F8985B6823BC95500AA1711E0010118D340D0D12D26D2489C6239B
A362E5A3B9F67D361BF47CEAB11544A36FB4C3A6761D48BE17ECA852F8AF6C24
4137ECFA19FF49A5888335A21204FB9C29B6272613C152B360E6F12127278B4B
3CD2255154821C89B2E992A8BC3EBA472DBFB9F42CB40A63BBEC54EC63CCB18E
93BC17C32B2F28C26770B1A215D2D34931698E92FB1A06BC80F5AB8661ADAD17
127166A0509510A0DBD662C2CCCB1E505036974DCC85E7CAB997CFB9D5282EB3
4E2A788127D03A5B6C7BF276023178043584B70F11ED36DBD3B89455CA9BFE2F
E8ED26203A2B353C3C9F8C15F7F5B818ABBAF1BF0EB39F4DDDDB970B76BE54F1
C7765927A1468C4192AE8D8799A91A9EB19EA03D4885C11D85F8E759760BCF5D
5152D45E91FAD6A3E7B3FE9BB98A218A398562E2E6E382E387E14D829E48084A
5F696EC304F7C7F0879E6FAA3630D313E6B7BE70C02F2AD0D518D3CF374279EC
BE4F14E8E62E61026F8AC2417B7620AB5AC13AB22710938B33114DD5FCDAC77F
ED355C2E9B63930DCB7FDC50F0E3789B23C32A3AA377525F3B1A8DABB9DFD465
4CB2973AF5730F2F3F59490FD046999CA3C8BC4BC7611C6EE919C342CE10F696
430627C39C2D01215C6D5F659CE681F7E11B70ADE0029CE8DF3503FA3495C24F
AE03298A358C012BDCB3847169C1C373E21D68EF9AC2B667E14A642707D445AA
4B08E97B5BD3466C6897065446F7653446F16DD9CC7A4DB07DD2708DFC10CC62
66C3D87FAD079A1F74BCEBD4F8D399E8581EEAFABF5F90EF2EB65FBDDF37779B
32B221D2B19CA0C3B7F332DD484BF31F27E8CBFF2B3D6A36E30FBAE70CCFB326
E3B6502DD4D19222B0A3DE17FFC0B13C5E36374EB2AADDB2337DBAC4C705E41B
5B27FE97E1D59567A9824706403215A33E829F9D2847C409C87ED892F1A55E03
7EB54D8F2C7E25931F36B5250CA8DC7910808480E694FDFA122E7D757C046F8A
CDBD504E5711DBA26D56A15D0B9207DA39BA7C96926AA7769E7702305CEF74EC
07C34D2FB60F86C0DE562561BEF83496284C96B1ABB917C56DE38F837C6B8E6B
2AEC3E55402533D2B8E7897EDDAD92A092DE76EBBDA80AC0E8C4B87B1B877525
64280280A795B5C75BD053588563850206DAEFE33E4C6725EEDEA888DEDA95AD
49D2958D1F43A3CCE7B7B9DB269FBAD05CBB99D8E75DA9854FC3F7AE20B22E72
A4157D31654251913DBFD4613BD0DB2A70E57CB73CEEE6A51B72B52785047D49
47F8501B061371500AC7FA2630BECCA0318B4DF35548CFE3266DB0E088F48DBD
44C379EFCF03E92C05618A63DBD2B69BE0D1124BDF8EFE3FF6FF5A943CEC7747
4AA91EBD84A394F47883D04366386D92945935DA04F5980A50D39360DC793D9C
260F9A68379C031C3F350E45D6564B0C2F3B595C9F8B8A3106AC80DB85CE6635
A2E98580D8518F86D5368897BB038CF07FC21678FCBEEF495ADF3882413B67E1
B8CB2DF7E7DF68B41BDCE88EADD352743A4AF692E07EC8648BBAF792ADBC2583
F79CAEADA7EA3B97FDDBB02799805532216BB40CBA85C8FC883232D3EB9DF747
7A180FF3D6F876D5E3064BB81E636FB4DF787DD65949AE1B082E3F5B20BF645B
D2A7E6AFB741984239EFBC4A36C40D9A406871E2FDE9D7A8A0DF9EEA427027D5
378898D339CB057D3E539E59FD7FBD0A82A66E2FB6DA0EA3472267A89135EB52
8CFD0877E8D7AE3F1D949E2E806F56EE5F2956C660D58021CDA3929437B91012
70D15AA6590DA4E9FFFDE23B9AFBDC82C3CB05DFE726E9FEB0B277D73B3383AB
DD138A2812AC5E2A88244F84CF92C4CC1FEA9BCC5FD7C550F0399CCEB87EF968
19354FABA813FDA935FA86C092E2DF9B35F469ABC18ACF58D8BBDA154BFC9348
A604AD1CD1644512270D95432DEF09B69CD09D14DCD518446435CF22A8AC8BC5
3431883C113C2E7A8DF0AB9C9B35E71B0BE1A3A7054A99DE64A7700075588C87
4F557C39572C91C79CAAF2B3EC5AF566B490133D656784318768CC9EC7C334FD
FB7BD1E4B8905961E7C6928B4A4802EE340B1BE67048A14BB2B410FE1BFDCEAD
62BC0C4D9CFFECDE469085BCC3A19500231450985FE13F6F382BED2C0333FCCD
E9366DDAF613A3663B1216B4D314CA32FA0AFEC8DCBEECFE4CE9205A8CDD8379
4B1D8E0D6BEFC5DCDD5D4EEFDD6ABE802717728EB8C9955BDC3C107F352CABDE
BCF9A22F9F48E1C74BA55DB6D86E691B2CA7B82F4ED2802349FAAB098C15D147
311B7C07C17737878305488298DEF3FCFB78F0948FC7A22B23D2574425D4D373
9ACE775C6F5897718189BAE45C678123B4BDFF5BC6A4897682B3C9EC9D83DB65
1698EF9F5C3F9C1E9D28B71A246B043CE44E65F0C538AE8295803D40FDEB5242
D5BE268689D6AAA7117C3F12704493F50CF3D97EC8E450A74DC4D8DE05CB5C6C
E7C221DFF697F9C368071A4CD90174A895B6D26BEEDF3943D11F3A18924692B5
BE9C72249ADB1921158E2C64257F6D27848BB21B202E50F5796713FED2EC4C21
010E447688FA287F7069D48756A0383BD1925126349DE06E1065FA0C292CEE79
8CA24364755ADB682182213FD463BC757AF84AFEA914D883F38EF4131EAD2237
17E66736B72EB976AD6EEEAEEC81170F40C2ADF359D8B6002BA1B01A8F04A8F4
0AC19E1099E777C86E198C354D1A5140E0073F82C352BB4F31114F6BB6EB3FD6
4AA40D1E89750D1C3DFFAB18E654020F34D2E4564D557FF2F59C5E6A27F6FA00
72249C24C60220CFB93E1367D1B8263172C133FF30D78AC02C7DD495DAEDFC65
1D4A939CCBFF875032E159E95D75A6C8F9C33E90BD705474E6FDFA990C996F1A
54AD380A35AD11A2AFFDE3C954FF3FF9CA1CB2D8C5A51C456F3A401639AA48FB
347E8A5B1E0D054BCD4F9170AA7FBC305C72B31AB0E0721BF6B14C2F3295817E
73A24020E09583F428992270E1039CAEE78B2D136545062399EE1BE2E45CBB75
B7341F06D8E37285BEAA9AB71AABE3C854A44D91B8C0B4B022FA0CD8B0AD48BF
97B97292A187DDAAA0486DF5FD63771F4A7654C8FDC3A533E44F41C99C1B5405
629408224D070207499DF2F43E7D52E442E9501E2C6CB4EC40857946FD8AF62F
BE99C8E9E6F3D329AE7EB3CFD4E356064154DC618D0031D66724E959D8FEFCAE
20C3298EF4843C39EDD64DD9889A49EB18EC1E2E031317BF883601C01389D6C6
5BA6C1A28C6993CB048910F3D7021199959EAC3C0860A28D3D50BA4D8640D51C
E7E43AA7FF6CC707893A4CD34B4A1D8A15B5B63BFA6C61800BCB0EB3F63364E6
189AC765FC2C0D76098550FEBD6FD869276EAC3B0E5079A047920ED4CA548645
2E928A70E0F07705286911B646600FBFCD96E60F8838E7DF23BF4F24B7AF9FB1
7AE13A2908129D592215A315128845E0D957FC2B4F6DAFDCA3EA36017EAA8F1F
4B2D42754711D99A68E296DD3E74E0DF56E079235A8B3CCB516513FC15FDF323
A7899A1BA694A320774FC7703620AE37082F566E73C4C3C500CD798E325C588B
5B71AE0BA4022F158043BEB6A6820566EAD71325D69BF3460E98FBD70B7EA564
D92A65C4DED8966517660EFB9F77E177C45F0E4927B5D413A21080DCFDFED080
F13E5F04E020E1F54777A5362A2A8AA3CA9FE09145B37CE1EB1D1369AEC708DD
FD5842A0349D711EEAFA2042E6B070A6A3026A5885F0B53FB07AB5935CB1B851
B96CD7BF88F9A67BCFF842EF5F146D57D0287D62D1A34793E173D032F66FD3B8
CBCB49FD9FFD260F56CD6070B91652752910280C68F71BA6A38E10F51F646E6A
282516B7800BA8ECBD695298FF6390D4F9D3AB952D812DC7EF545B8A2B4822B2
C605E9D6622174BDE3AB3916E34B9EAF5DEFC753A803EAA525871922575245D7
8CB42F10621429142CD2A940F58AE2E3CF740BE6D85F8F6F069D019647747B1F
7F6B8811DB49888E5D912DC57EE83C9F86CE048F4C870A446EB3E06BFDEF95D1
7AECADB73B44BE64E7DF3B43FCB4C9DFE4EEC9051909E1FF60038430B07A8B7B
CBDD7DF302B8DD0126C90D603B6D218F9741A9D0BC2BBB60C369C4183F6670A6
5F2F87A57D5BFA308354D2D9D706A9F8DAB063514D5EF23680C0DA9FF7E6BF42
98E548FE405D01D18D8D8826A12051DAA179BB6B4BE6A66885E271B68EE25C48
8189322A81E6A8368780A2E815A7EC49B29EA2F4594FA6CB241583B84C15688C
6165A8BEF156F6AF0D737D2C31FD823176EDF6D0CA24D36DA5FA0B9273242FEA
29BB618F6EA9A5531D52AF11BD27F600274597A16BABF1829CDE5FBE980426D6
16B447B0D88B5337A068592A0908B8D586177DB01458F2BB389B995340BA5E3A
D5B5D3F2349AC7FE93539C2A9ED2533BB06DD775397C8446F2EBE2054C2B89A8
2FB580A72A3799B76B1A05B4DC730087FF69AE4219314525F5345D9019C24DEF
E91AB3705F8B0DC79FDD5E50DAF2A4886FDADA6E09DA69E6E946665B247C1AE4
F791E2FD4F5161AF75D4C6415B9B58B35164FC9BC77637331B271A0117D451B3
C2391D6BE48EDC950CB8C672E04347BCD98377DE82C1F3CDAD35599CC4A80CE9
AAE79F063A637B7424F2507ED5A4602010E1C8DD91E5EEC0D2F7686D76571A73
8E62B64B422451AB4BD74C74696BE84E6601B831C44A25388FEDA8896EDEBA1D
E046EC3D22FD0D29B686CEC5D71A81C043CC0B56FEF87FD009C263E3011779EA
F2101F7D6096E31DD0405554C340643408B2CDC39081E36984C6535A4650B529
114571520763D6FD209A23F24B713F90024CC452D45071384F622B1D07496159
EDB225E9A3362FBC02F1967CF2A704C7DEE0E44D408757AA03FD00D0167C7627
89D8BC9F28408B8B5C5D7C8AC1E980689CA5BE15C3FA96C92668A356CFF8DFBB
285BE2E378FC46E580326593693819EE39EB3C7C9EAEB3D47348C47D928BC883
B8E7606DE2F9EF1088EC186353B9C4B21D7A86F61DC5FBDF3F5DC3AACF3DEDEE
81F75D8B5CEB205425442B328703A8A1D38CE903A6CD768A42943CFA8377EB3E
3F4C64EDBD88E90E31B2C698D1CBEE55968EEEBDAB9195ACC646A3CCCC0CFC65
ACCB6CDFCBAD9EA901794AB36126A199A07BE3B1FAB77F2EE55BABE1C5C9E6E4
31431B0CE3EA0133F9B3BAF6C01409650E70010C2E00EF49B371BB12C5C880AB
FEC27C0A4D3FF3B1245EB036F3659E29AEB79357598949798F63224FDA1E2B53
192E3BCE538F58048FA6B5BA1ED58C422A119E8C6BB471DF05580FB2BC843D92
5AAFD87ECC5243915C0BA12EC2F8AD6305A2F219F870D75BEAE86EB7E2DC73C3
47153B9B9135A79D2898CBF7F28BD7D667D4808E9FC8F28213E5C3BDE4B43501
4829F9C5A85E362016840676DE91F62737BB54C4AFB08629042F563849315630
1A8EB7277801B6E41841E2DE908F14BABAF734E2BE64FF1822562B0143D35A5C
72261EE79BD7DF4422910465649F842BB64AA48C82DAA0AE14C99DF855EEE61E
84888F23C3803C635D1CE704C2DE46ACA23F64ACE274AA38DDC172B3EF41D65B
6506B2F15DBBA1CC05EB5A096396CA62ADD6CF71B58F3F96A0EF46C6E1D233CC
358BA38573B99A02ABE9291315752D5A8AC1CD5BF5996CB0E37BB222FB8F4EAC
08E094C3C4D20934DCAB3006734A256568F0481DC27463E1D9D374179BC14F31
F6526F6EC99235ED2175BDA6B5B05487C88DB06E31E23E57589ADAD01BC664D3
5CE9257674A46164D64D22EA3E1303DB209B0E863AED14FEE913EA8230F0AF49
C0A222FFE340112C6C063B2F9EC663D804B89BD943B49ABF548E5D92C1D6151D
1ED96241CCCB2A1C8F43DCC32331D34FE30953745E24926C980C21F5EB925641
0A727E47F14F7B9E530ED94405E88177F76F7D7FED1BB6B48B01ECC02E7933E1
9CDA965A8841F0FAAA527B45679B55EF87316782B17F7642785A8D50B08B07A7
EF81F6212DA66ABADE88654BF8FB8E7C60A03EFCA5DA7318457F729D1D03304F
CD7FCC2E2C63705AE87D89A99594E1DAA5D7C29EB2D84E38E27654D2EF3A935A
ABF0DF9B431F70B6C431AF283A075F482E564A3AB0EC2D19DDBEAE493FEDD3FB
EE6667EDA6AF0524CBAE25EC7F2BA3E5D66350AC0FBDF769E54B11A5DFF770A9
C67C9D4DAC9CD8A7A770CAA8581C266CE0F84E6826E4F66E1E161AC665CF5592
327442639DE75C93E4D625726ED2ABDCE78D2BDC07CED874A17323647398EE73
7C76B3FC8D47358AD45FCE20E4F2A12B7B344BD20B15941E7EFEB72F3EFC3DF5
F9C35B0D6BD335FECFA175268206A5D6F672B517A89E498488371938C573B40D
709C8562E823C82215284C372A8527186EAAC064AA1A5B3C76F6FF512A32BEBC
5C892A004DFE16DD9CA9ADB963D51193607D01A19BD70782CA4698C639FE6EC0
28F530815A7D335AF6FD13BBFCF23842A49DB132CDE66F20BAEC015133CA6A8C
B8F15F9144E36E456648D754560459B7CC61E3343CDF76E88A6D39E72F39A812
30BB89139C80BBC3850B317A996878BA057984BCF056A9D38B3AEFB10A95EB9B
D374804808C980CFC1AD9B5CF9DA1F1E6EBE9CF50CA098C7CA76DCF7AAE610F4
D7E477E158973A5281B5288FF4933A7F5E2B732F3079B890C59CDE4235335EB6
219C24C60220CFB93E1367D1B8263172C133FF30D6DFD780B9FDD07CC588F695
6EA539F8D3D032A234F38AA9340B48F645B799A92B58734D8F1EBBF10A7E363A
FBA412293B14A3A7CC5114AB201F95AC4858414D5077D9FE49C560A78F87D379
0CAEA37B2C1B97F807E5AB84C0E6378D4022A99E04D6532D59FDF99A709699A5
99568E012C094D44A6D953333692486CBEF2EAFCA2AA8278E793C1A3ECD47AB2
6795572E176AA0AF078126540BD2D435D0AD6CA9233144A053ABF184A5CEBDEE
F87161DE496B634DFA9A68FFF20AB9FDC06F3DD0CD46FDECE92D3164A4778B3F
91C02B6F19A2EB3150A34363BC35D052DA1C3DB6E76F6AD8C924514440D7FE5C
6BC5A0678FB65430FAD099A573D384496851371B58302CCC65CB916CBB6C5996
C95C98B340BCB63C243978467D18E18B8A33CCE59F410FBB89C699E9A53D0B24
0230221CC58CBAACA6B20499A21AF248A124585F7096EA5A5FC8E3F4093B2925
D99FAD2654A976F06E75F3B920E721E0DB58AE8034D8C75D758E668485BD02B1
2B955569B4CF96EAD1B32729DBE4756DEF299974B712D830CC44607478B88A6E
8E0467C0F7C8BC7CAE6405ADF7B92592316FB23745EE6EE084196CDBAE8F1694
6D8B1578C968FB3FF4848C380C8B9839873F934C88858E71A7F1CF8F38923B75
07D06C197FA0962EF63BDD5B561E6A90CD556C341C478926673315F3BBC2ECAB
70AE3ABBA4EE6FFE884CFA489035E2D061E086D27B4111C98B1F943830A01CE6
A4F8BA8424B999CCC8C9F3FB3FA4109EFE46627EADDC9F2827BAC12E0E45B310
AD8C11FEBA0680E9B2EBFEE1F502A178E35704B7D0AE379FBADD014141B20A9D
6DB74B82604E0C15EF74736E17066AB07B195F1BEE28D7319ABCDFA4A21B5DE5
36B34845B32A320957AD58F6EE355E59BB68DD231AA12C325917C9CCFE80A01F
985CD3709694E5DAD604F15731A523D7CE1009C68E826A640F93FA574D3425DD
12DEE557D4BF8A303202745892DA7996380563BF7A3B679EA85FEF772477C10F
D7F0C0E7EE52EC5A8A0AB9A574039A5B0B9E2065FC401470E08C365BCAA589B9
FB46E97AB020DD38D71B7B8E5C1E18BF26D15411CD48CC6C3D7E0E41EAF61191
F2F00B916F06395BB9C8ECAE542B030A5E40CE0811225BD686466532AF71DBDA
671CCABE69652A7A0E48CD62CFFFFD5F1F5BDD22B310B27E091728626DDDAB2F
325408DF11958BA3D4C45B156302AD722B13F05F71D8C40C2C7CA73E7FF21E59
8B73BD532DF4D9AFBC409178AE62814997279C07CEED888552651930635E620D
5283C7C7C49CA5844AA5CFACE59EDA94D3BB251F9B1728E12C22588E58BEF7A5
F80A3B750DB063E991BA21053E5B562BF3413E6A65EEE09E12C4482920929DEF
29A005231D03B51D3B5ED98C6D02341ECB3E820789F2FCB2E5B3FEA9F83EB826
5B381D7DBACBF1F0E7E44596C71136B1C1AF8703A1A0E517BE42CD6306FC6F1B
E195C2D8EE9DD57456CA8D38C41F453CF1F228BB29EF69449D3B57B509FE3AE5
5865902C743B3754A3A2F10D77CBD6BCE95597FC3CE99538FB17A8238471AD59
C6C42C717444C8E2C33EA2B27F17185FF2C992D480DE34008E45EBC6DF72B8D5
60BEF748B624FE17F016DE823036AA4A36A3BD6DFED9BC3104B7D31460E3FA77
DE5FE7F916F05719FAF20F60E5D15B630ADA5342D0CE252B642ECF345AC37310
804965CBA5ACCD58E4C1858E9DCDC3E38F1F251F863683A1ACFD7164EAD511A3
BC74169096132FC753F817F94AA6939DAE286FEA07B203E7227495A53A9D1ADE
3C1E4BA1EB8855BBFECA191D4B80212DECE69C66C84CF5342B479A465137BD82
0832EE94D79A881C8D8D2DA3A86257C5F46CA0679FA92419B17F95F124C1043F
70CA48DAB3AEB92F8E68EDDE18506E73B4E397A94BF98C1530A3598F35E26F2E
8ED5D8A0B0A4EF9503F9C82FD3EC6A3ECE8816AA5C60500DA5759D88CA155541
2D11F3AC415A28E039602BD7D6B973F354B99536DEEA3336AA0E1ED55B70BC00
79CC996AC611A934830E254E0A916C002B02D9B025971A01FAB3FFB24E6AE36B
4E1F782B9746A6233CA4939C2CF3D6DEA8E2A780F2D96804BF424B6E90786C30
3D590747608AF3CDD6A51B5617C0342BB1146A0FF73318128A2B2DB3EFD07706
D953C4F15F01C4677DE18C43FAC3093100B9835B0D1EB4B6F06B9B276D4689E8
631AFEA190368F182E8437E6B65EF516B89110845142660F556F69906E2416B7
550D5216AF5955BA383D0E1CAD73425414B54116E310D38F7CE7F2DCCBB3075E
DD207C35BC17DA8E255C9216E000486D0A35E1411EB0F0BB6B5702C11E348E72
3AFD17D0DF0853A06A163C94B93A4C903A65E8C8A0E10F842B11A789F7387D0A
FEAC9181A6C434512F6A544CCFF36F8AE899704FB4EF5FDF14155487DC65939F
04DF25603E4E2155346E303FD1D154F98FEC49B3AE45F96B3863A922E378FC28
22879C2455A1A1A35DCFFBC0466A81247D0D69510CDD75B4507ABF3F1E973E8B
4F3DAD7FA872B15FAAAB37347B62F885FAC00BB53DC0400730FCDEFEA475AEC4
3C93A1198DFA11BA9F47B3A2A57AEC5937A993CD7AF7833E9F56BA5DB7FCB608
1B9F3129D1B5EB155884C30E635ED8901C01D1FB2F383414084419552DBF048D
62CEF35D034006CD33AEAD858BB6A4448C1243A03DF92D4F5FEF03B2E626F238
3C1CAB8F5D9079CC78A958BD373876EDF800906E74846306E52E324E00D300A7
8B984ADD85C0125BBA0DDA3F3F7061C15460E3C1BC8E20988FBC40BC25AD93F3
8819388A2F582208E02A2DC5BA46C067427BED0CB7069D9E3D8AFF77E26D1C44
212DE67A96CA9D096FC0121B70EF238C02844AC7349427034E40FC3538982D1A
6D55FC6872A733E861E2EB939323B64066465BF12357FE8377112784FC50B3E2
940B0D30B506FB4732B45A43A727025E5B23E9EDFD422C969BFBB8C47A097760
E2C18FBB6E93044CBB83EF48BFB08463FF8967E35D5E27F8B50922247D81A698
37ED9404D7C2039816785CB4B8AD178EE10572D29BF719BC6C31CA404A9C2F39
8012B48A21751D1FF032610410865DC43C4E9819F846D881D8B1C75D54053884
EF88586CCB05FFC5891EEA9F026CC7AE69156F655E24CFBA3CCACD2EC564AF37
894ED53E428A398C7747EE66624D0A4E0C9EA14D8FA65D54D70AB66B2BC184BA
D23950B28C80497E259F4634C7DF6978FC05FF30BDE997DB689CE85F6312A6A9
4F0B83CA60576AAA8ABFF5C4C36C97C23029D2599CCD06FC306E60B63C5E19AD
1D5E5C5F47775A67C69A80416EDE8726605CE64EFED6873046F14E850D30BCFD
2B6A49A29126C9FA44ABD01D6955B0F8DDAC8BE19EBB36D94E529FA602AEA466
7ADD5A9DE04B77BC897F50A7A62C8A3F55568ECA267BD88388082E54DEA06544
38F36357E82DD0F836344BD71FD442CC584FD6EA914F5FCFA9A23037BD3210F0
F552E92CDC3ADAD81E2D2AABE09DD98F5AE00F69DF31E7188F7FDBE2A9AD81F7
002A27F2EDE3459E49C271CA8E9B1A6C27A87CE961E0DDABA61649AA1E4BA123
7B57204EDD16DD0E11384C2B9911C0B7333AC1AB759282BA80CF88A7DD5419F1
2E32DE866604580CDC0B07E9F9CA7218B2B8DE41915E54DF679F12079DF942D8
7F704E1D4BD4E3D1F8DD43E4D83E0EA1EEA217BBF34029D1B6ACF230974301B0
3EADCF209219746A94A779EE401A8702FF186A550FAC789DC46BAEA1D028891B
CE072BC4064146BA83717397F562A2DC529D7AA099CE9ABF60849E0A1A824F9F
D2C73F1D915C9CB74B1DB734A10BA4315EABE8267B32AFC60CD11C891FD36524
C9DD9001F4782BEE29653AAF9CC951A3385396491BE6C582C7FA09872F6EB92F
295CDBD8F12E703C629124CDA98D59F3737D6A96A136C97C4310523B30CCA640
B3DB9F9EF069567189255200705E0FB1CC476EA5D270C90B33DC0D2A73720893
EA82A29A62DAF28A240D66F004AD731FB19DD0D9F5CE5A9175A4134D9DAFFA3E
BF6C9D6B4E9B7DF27DC66C4E39CA74BE76D293489BB97B6DF215204753DE7C4A
3FE2B2C3573A7E0FC74E1ACD6579A7DA0CD12FFEB765E13449164132787D2C5D
4E00A09F155BFDF971B5A4D0AC102C2CE1C0861E8C7BFA5F6CB780E69545567B
2D7D0891B23905760B0D80F2197A5002738F99176AEF34CA6EA3F43D597B3CCB
E333CC60A6A8F2BFDB043ADC0B94FA3370BE0DE8F0CF90D4A57FFDC9846F2B53
EF7BF3B90C59647BF5ADE9B724F03F06318611075D77F4D74F7A9052961FEEA6
3AD5D9D20562309C8864FC6ED851CB0F552D82098849E86AD607D2F962729B45
43399424634FB4845082187D3871502CBDEB3982F8572D8519BD24B691FB11A7
7C414A780D4E8C2E7C08210E5CA3853F09523028105C25183B194CE8A149EF91
21880DA9C89FECEC969068C543EA1C1057846B76616532B79C929723445D51E5
5F2C98A3CE9488C855936EF155DC90A020CEA122A36D71C76793773F02B5D41F
BDED8FEB58A06037A79C3424E5684DA917D591BA5E7D65FB18BC5BB764259393
2C9E0DCDD2F687067554D464306A44A49AF8095E431F91B8EA9B3F55D8087857
E9E1724F3FF689C0CEAFE3E98D5590DCEBB2B056B9A6339D5B4AFAE1B7D87F43
426B64371271FCB4A74B2157ADDE421D5F51D813B577B8741B68891BF8FF9BBB
484DDA6371DFFA6222F88F0886C7F8848E958C6F74CBEFC62A27FAAB38B52465
EEE09E12C4482926B22743E5D1A94A301D3ABD6010E43C4EC19A0D63112FEF67
D69CEC2F78116EC8583ABEEB71D9592AFE1D648C347BD72FF30455B7E6447D19
E2611C39EC0DE9AA9AF962997679755C4CBD2D05F9A170FC269B792E8CF7A046
2248EE95527AA116CF31B971CAF5DBF65ECCD01FF04E6148A80BB2611AD6460F
73243DB763DEDBF476F3516136578D66103E6455B244B9BF9C400BC802A02141
1BFB80B334C4BD614EA7496D58CE8BF62247CB10F893048F37A2FD1E4BCD68D6
56301406C1FD474D98B7555DABFC469D633FE91FC8103AC6DFEA6F007AF4A42C
0A08C4DFD62E596AC1DDC11E23572F8A2F5CAB5CA87E7A6693182B9561E329A3
E67F23EFA6DE495C7C9D966924F124603446F01CF73CEC5B7877077E42139229
3506C391705D62EEE3CF25BB0C4EE70CAB7C5DA7C9BCDCFB67F1B66DD991E2E4
C0A29284FD2C9A8740851EDC442490FAE83FAE3DCCD4447BE0C2D6DE59B1BD62
9F479924757548799EA068E21535FA1B41FCC74614129FECD357C3BE8A07B61B
A51F5781CAA9A414AEEA78ABC17DDD10E2B4D776449896677E02D47DB24D4967
158F415484BF9D6A2AF010F8F3BACF583EFBE1FF3856DF768AFD7C810A269760
DFA831CF3CB5D0A73CCC6B41CE8296FF0C92CA794AFBF04F8BB3B65AFFBD62E1
EBC63C182EFEB487A03399B4969F863BA0A83115E8AED878484FAD3448F4BBFC
D65D1EBFCB6494575BE7C27F44B99EBB6713BB8306E5B5A0947A00F952DBBB63
C0DA21C717E348E0BE63120324CF402F90BED39B54D866320877A767FE000D8A
3386EB1E20F1194FD049F28B82F4C2D73E41CC73C1C9F668931E64C8D467ECE8
4CF7A8C288F9B22E0AE6685047D8BE005ED260ED9488E270BAB33AEC2A3A055F
6BA3C3700A868E92B4E26D499FBE545C804154DD343D0FCCA88D299600B0C26A
DE2DD3774D903024A13EDE0D58B50937201CDA9C1EA23BF95C4A3A8932F7D471
00FF8A7D4BDE1BC37CE16625CDFF321ADFD514B2BA1B66E7CFDB8FC93B6A8EE9
52D196EEFFF2D9E6B8CE8CF9F32866ADCA85FACAE68E9C7954B512463A86B162
3BD5433F6551DE2AA71475089B3D2BD411FB9BA4C621F23724D73B1079F7FA07
AAFC9BBEBE2E4AC9E2B9D116034191A1A804EA935EF390C90783F6DA40C59AE0
9ED22AE971884911F452C33F94F3A9165CAEAD2464D8D80FF6C61F4410BE7699
FF1E5E942546C8A4CE88818DBDE72D030D8E884D315F56536F6A8756826B7786
F35D21E3098DC9CF8BBE54D707A866B52B55E06213C9491954D1A8509555EDD6
F3AFA7710F49EB3706A4BC08DD6698AB78D7681FECCBB4BABA1BFF3FCB495F99
07BCDF24BA4B41EE53F21DF33C26EA4941248743847F66D9F4409E33F19FE1C4
6CF054EFCC52105D4AE9AB94620CDBF77A9C742526DE225225A42D917336E9A4
C9BFF42EE85C7B9ADF83533DB3B50C0E01908F5E22ABEC35E3B227ADB613A651
0851C8799B7CC6B4814DF6BB0EEEDA8F1ED7E6C1F58F066420CB023E66A2F15C
796DAC2B8C27A592D433D9A8F4D69BAC99CB4B6E87F30E3462A2FF0B81EB9E2E
6222A2FCB5460F954CF4496CF08689817BAA54219DF29AF593CBCB7B0B261E28
10532F6AB4CF487FC29101739FC070DCCA88D2BC7A404ED748734F15A145A7BC
EFF07834AA2A54EA3542D98406498F2A06866CC4637DCB51198CF5E313BC8D75
885F81698C51DC42939DA157F66521899CD4ACF3D0AF485F4239295C4E2027D4
A5A2B9C5EFA66322C6AAAD79AF58F911BF30B3CACF37ABA32340F8020BA14D28
F5F222EB45C0792F7FFD9CCBE3ADC6AA7D39C9C48DFCD794DA36404C8BE95CD4
40B1C28D66ED188E37CDC15AFB638B55D6E99C2D2AD3F9EE91952E6C9FDDCB15
C4789D9C3FF5D78DA7FA7283EE696C2FF0D8FC4782D9F7D8B80062620C583907
E79E016BE605D97A0678B6FEE9E810FCE25D9A92E0BC2CBB6BAEF49EB8A9F9B9
CAA296682CD22C3A2349E342A916A851AE7B61E2BE4106C47ECBD63D629EE6AB
680EB6EB54114680EFDD1F852927158607208606FD7EB83EBE178E94D17045A2
079FDFFC562FF9B8DA09BC0CF478F538D400D1DC3543E5D976A1B16672026D65
EB36F0A37D3ADE47F58663BEDF00562202014E549A687B2B4EA3A558DEC784EE
5B4B3C1BCFB9D57251AB08CE6757DA625276B2B3A8AA8731566C0352C427BD15
D834C53562765E67AB134D9DAFFA3EBF6C9D6B4E9B7DF27DC66C4E39CB255453
B7617187C50EE0D0D7941F0841112068656196C7E7E78D2F285EFE30BC461BFB
2F0B4E61D62BF54A9CA35B27DDA0AA26C0FA6F8742178B683556459B7A5D584D
E5536E5C3ECB2ECC8476D35F462223731C80BE98F7784A777BBB5F9F259DD664
2533950AE6DE8E22FCF43ACE7C0B24E3400270784642A4D76BF1516E7A861669
30D0E20B38B39966E28A98FDCF7109B10CFDDA86BBC63D03C56158672278DC53
1B9973C77E5D601A5BC3AA7B3BCE0A6EC79F2DF0F873F19DC2484B81CF77EF17
87417D0287CD41373119689F5ADA221606D1F811325A459364245487D75DACE5
FEF04000F96E6608EE77757B105A8B47514B046B20C62F77304015926F106927
49225E29B9E1FC07FAD85429755094145E37BB174F995C2F973D78F712B16F6F
4E7E2531853F7E5D67783A1F7B4DC678441E3DD5CBFF933D00917DC88061DEA8
13D459FBB3085D208661AFE41BA3ACEB6EC8BE68A9A4FC8776E82AAC8624224D
2D01AA4B953AA3F1E9DD2F7AA6AC2899E9AEC52DF10BFF44FB6D98C2B95B094C
A062C157F799EA36C4D28EE68F3B21E55D107CB5A0BA4F46AD712315D2273EF4
66866A6D71723B1832B325C0E009A52482765EAEDB7ECF5A19DDAE46DE21A46D
26C8478A6F0A964A14C77BA4D04393E7A43B53DD09C3557B0B365961300BCF82
121D266C5212F5E943C0333E23764E9A5DBE640CA98585DA2A4AF9DE5A5042CA
37154997E95DC1364BAB09FF0740310E86A38C60078D1A399072B08EA7FD3254
96990FE31E58128CEB7E5C49F2A94124AB59C582B6B602676E3667F6BF1261BF
5BDD0E3C91F1F66DE67304C8151ECB8BAA2419D4B6FAD848225BD7E21E799412
91722A40DC43BEA8C9C1F1C3DD1B35F1C3C97AC42057585D26D32E81ED905ECD
6F7EE236CB0967D87A97E4D04636ACDBFC620F6CED1EFD121D97862B0DC12212
2864F70ABD5E0CC499CBD83539365405E438B0648597E6471FFA824454B1821A
2C0F9D6A7555D8991352461F41C330E98A952CE92354F7A5DF40722FBE318328
B3ACF6EF772E72D2726C5FF4EAF9128F1F0388BD5EAC524C3A188FB945E0D9E2
988C3FBE19A37BFABE6DCAEA5999200D945BCCD36E1D02727DEC18EA9CFC6E0E
14AEB374E80298F0AB2D166D4EC0A484DAD8F20A89703DE9CA97EF19DA6FE918
E70F81A007A6E98111D319AFF427C2FCD1B346DD76961F4459B556E92A5B16F4
212BA513BBB9C5DE48973B6DEA4146B41D2E9B06FAC2DE33D3B1965E05B2B363
111F45FCF31494CDC724734E0DA2BD1A95FE8656381F6040FCA1D4D9CCE5A13C
F67F344BE26CE04B482FC0588EF60C6265EAE284C2CF2AAEB900F3EB6B8C92A6
0803C0EA7F32D67BFE6A49E92EA609442572FF3957EA9F3858E8314A3EE4B5EC
F01B124AEA830C320191E9A88DD63266F1BA8B9E065A084BAD16F31C49C5E84D
13998B3D02827FC1683D296A942CC61609B586AD809AFC85E0D3DA4C24109953
60EA2239963B8186EE2454E318F5CC571A951409B0E69BB7A426ED018B719D7F
6F63DB11FCF3751A5D80A8849721E0A09E35F4A55A241F8CC5DBE1FF101A0A49
2961BCB7B898EE26CB9945AA4F8F616FCC76E4B0D7BA8C76364CF47FF7A22D01
7A5A32FCFB655CC893A8ABF5E1A2260C9BECD406DFE442F2328C58DC3A2E27C9
73BC30D7EFEDB89C3180004F87FD51F3365AD7F2DD212FECAA7000E52662A8F4
E6BE2821823AAD3DA764F024496FA20A1AE5F92C5B4E22E64DD5687999CE8730
C7907FBF01AF4B388322D0ED3ABA2C9351ADD8585E0789F19FF0EADB602EC777
AEAD71B002459ED5AA9E1232A450BA648FA3691EC1DE508C3E3595088CEABFB1
37634D2AE8694C53BEEBDD15C39B3B3415981AF9A4CC1FEFD13FD4BAF26C1556
CA2370EE116CFE3380C143C3413F1F3A0E343275E081D73A74BB62F4D0BE294C
DFFC46521464F728438D1BD4F7B984534EF6740AAEABD130EBE90E52ADD433E1
D078B543795CDFE51C24064E1DB1A7F58F565222CE752F39ECC5AFD707E66B48
870BF36F84AC3D8F4172B62D122F68B2C93AD5F16FC07265AEB9E8F67770AE01
8037255C049071C1D304A91792823CCD264452E44A0E7D8545DE485AB07E93D3
4E70B8A3FD6017B703F3F57C153783880CFA8F10AF0867C9ABABA4D8710BD0FD
35F425F0F8F019445F7F2E1687BE495438AA01DBABFA5DA62B5EDB7D39933CC0
09B021127C6404F935F0E566A7E4BA9609992339F8B9CA028D45A579675AEECA
BB3CEDFFA9003FEF9C0E123A27A4DEF65B34425B6D114C8035E4091BC232347B
4A3852F42A04DDD7CC7C04DCA33030F187E88F3A42403FD460619384AACBCB4C
846C1FF57890925A19A74ED817F620F779DF1BB19080BA2D75F973036C7992E4
E1EAA170F90F26ACE292E3E3AB8C12E1B0B15B6C70DE2DC214A02D1BAE1C8BB9
ADCC7A2A4AF7F90B7636EB1A3800E87D1F9959066BE6C7C9EF500CDA652599B5
1C4F2A1F86DBCE23D3C443144B14DC79591C3D2E376B57897D70D844489A0E72
A8C67EC09AD384FC427D93F84AC204AEC6EFFC0BC7BC65E121FE8EEDCAE05EF1
171EE153816674325F4F95614BB367F65BFCCB1CE18DF7D3C539D3B56E5C45D7
FF505969DA7E14AC3379A68C9203547FFC722CCAE53E3E22AC6D07DA332CB238
27C20CDA34E6D9EA6DD7B52A8B8D3EAB45E308C3848F09F29A39A3EF01A237EB
374D341D4D1BB5FD773C8B9DD0042C5E51323CB81A8EDE313FDA53668CBE626B
87CF0AF0211035F415C5B593CA786F5615D33F16AF03D73F4DFBF10052B74F2D
3A997E97372C6C323388A4A0C56AB6B72623887C1C49E561B6C0A86CF8084BCA
DC8A4886ABA0EA12A1E3608A920272642D8DD86536DFFC382148E3EBDE658A25
B0208017CC6CD5620F8B3975DBE5EFC9203EC9511A3AD6C89CCD37247A7A9883
90FA6255DA477B8B3D24FBFD85DACCA4F0D737557A1B3BFFF929DA57993BF9D3
E0878EABE78F221E3FCA04C2E431EE3F6186F857B2FB2F403BECF525B5286103
B7E529108C25F0B0A3F808E890D1582FC10BA9770950858BE19002D253E44AE1
17F6277FFD93A30CF2C5920C97B1584B7E0051107EE778B10EC2C525F368CE1A
2ED96EFAD0CCE878AF9550D6F769068B96F35B2664C25B2CE086713E396437D3
7A135783DB2AA4FBF00705DF7335876F57D22AE2797EFE0990B7BB874D21DEC1
80DDD97C3713D2D2751EBCDB6B4D935084759EDF0D87CADD3191DFD0C105CB6F
C5F610237BB3C6E242E809AF022539E3585CFBDF46AC097A9DFA66B9D0A10BBC
3479FC1DAE582F7B2442844C5A3BB916229B7F894E1F4CEAADE4432FB90C99E7
E91CADBBC68790F28803FDAA2AF60D7DBF243EAD667FACB2BD1818B633BE58B5
672FF28C6A3776D39A13B340956062782C68F9AE872E75C24EF3711CBE34A62F
951C898CF665AB0017A7C719D5CF349269A1DED05C9CD24C38011FC0746DB71C
A43C4BCF0517A763E3C898FA1E9F5011A492BEECB02909CF4977F9987B58C37F
21FC70F440EE90AE768C877DD703BA68387E22A3D4AE49F7C701C17B23523DD5
66DDEF40BB855F6102028DE856D1BD1A5F523A8B2E7812E32560AD7CA7F4D393
7557E258917930E0E9D58281627CCD7E6376F6436FB8C8B7741334973D0F5921
6DABCA4A7F2C433FC573B49B66A8C5F8340050D0E2DE0ED5DA8B6B96EC4D2423
E3CEC55558C7D650DE0BF410BD6A51AD06F83E4995F7D683D709FE4B7DD12596
EDA1E2281092B1ADF15B498882338B830299F3ADEA375AA5175ABAE6754E91CB
540D475231DC720890A7B0988D4CDB7F92E03015EC0A6A7F05A1FFDE5A6BA3B5
CC0B50B0259CBB97BAB55CC1ABE5C02D6E0D76BADF13BBA0FD2CF2119ED26CD3
735F013AFC1488A2CCDF162E85FD35EABCE927C575C6A9299C3B78085F09EEB9
4D14FC2CEEA9FB7A60B73D8AEAF5E4EF1989FD377E923B7DE4AB831ADEA52E64
DE6413AC8B48A2227D12E5084F0BDC5528440EA0DAA3D0DC0147E59728E22297
23046C3152345461F4E1FE2CF770C7C2F394662613C1814F5201DF3011C4492A
41938C973B11E73576B5D0D40A5CB1F20C84585E112E6E8CBD8C816C3654B529
297E4E8AEB9E349683FC5E1C323236F71094AFA560FD903432A3A9A54A710D94
2F8A6C4128F653D39DAEA7484F17687D2F3900B9524B578BCF2CA6C2E1781E1A
35C1BEE538A41E490633E3315AFCFCD68F16293532AEADB9220F52704C8DCBD2
D8DB9F997044B21B9C1821398C7E8FF3BA26F6B51F7AEA0D5F643D30AA18BD6D
72B6DDA3459C5B0E1E2AEB5438AF6A29E34D57CAB68044F938778AF033055DD4
1EC6E4C915D63A101AF983A307D76D9FDCFB0A380E552A3795C52B340609754C
BBBC246B3B423902AFEBD718248AA3FA53B8AD69FD0B60D4F1FB38194A9C87AF
B070A423706D490DD9FEE385EDA892C0C5678A1E6A366DC8ED4E516E3ACA3ECB
2A0DC5BAAD091C3C5B11BADBB487B25F2A2ABE685DA927E323E4ECDEBC82CCF9
ECB7E4B7C2221103C664299BEA87FBCB7641550C829B842802A4139BCD07D076
306973E29BD2F314B4595C18B7A2C0EF1F5A33B8BE57F38548B757935C81CF7C
C61260CF2B227DED699ADDE69F0F8D6C217AC161371032BE4902BBD57AA5DC28
5EA30F1F56CC7C618E9694E35EFBF5EACD4FF4C0014BE2D7810CD6D580BEB86E
63DED098A028B1DAF4450F5762B8ACF382500AE15B9882BDC14A6567C19ABE55
F8186365B30E0EB7EC222D351E9D566EA091134A841CD914249FC829418606D8
F68EC2B94DD3F90D598E2DCF8390AB9B82A95EA3283804BCF8371B3A9118E8AF
3AD9A68360C4868F370D783B90D59A41FF6EA913F64594058DFA9168F5F5D65E
9BB38467BE30FECD016AA4723F3C0CCF1619A88BD05F4FF2777735ADBC7FF15A
2B0D2E0877DC7D364D5CE4021B8DD85F1E8A29F10E88312889AD79A29098BE63
4FD17B2A2F437B42359A5D7E6B4413A966C4FA33E4D0AC3CCE4EF0C19D72F33E
16EBE83E604CFAD4D7C9CA2B55BEBF8B70CB9C5EC00EA30CE213F1098F0EBE5A
AF8ADB9A55FAD293D64B31535C545C11CB83CF25D7ECD78F7BCCDE0F79E810B2
82235163848EC474DB4192D4E0EFCE364DD00221350341CB0C6AD90F780EFC2F
EA24988396DF3B2EF0169E0F0CCDBE18D9A9003DF1EA7A2F228667319B6262F7
63B2F0E6E195CBDAC59C6559274CED2B0F61820249B444991BCF5FB93455A74C
7E013AC550C78230F9DE248084EBFFE53A1FE54984DB1360E320862F2CA6E025
850610A4DF92EE50089F30F3C4ADE4D307305271D998208ED8D43848C2AF25E5
EBA344D34FF1D3451C6AB29ABB125773C56493C67DA4F47C45AFC2EDD2E2880E
40F086026AF251BE5907137986AE333813ECC270AF399016BF01818DD3F42B45
A0AFCB81BFDD354A3A7CA4978E14BF433B561AF3437355915A64F5682F528BBE
A00AD065B8AC071C65D63D01F8C84E6609CBF4A5DC0127B1546D73D3E75505B4
72B27D6787D0A0C1C1AE38D2C5016BA12C4A3BCA7AA6C3AD775369A9C376F181
913CDA14A2CA72DD9CA07B85FFDD581537610B95B2BEE80DA821EEC30457B3DA
E010CAE9BB7A8372FF751D25AAB4EFDEFB50A99A531B7F830ED73422F76CE501
66F62C1B232ED1F6A1B37ED3F17DE0D82EF0E15DFECF3D30D78E9125741E24E1
4E3E74A2796BDF8606B932D06B72431937D3114220AD0792429566BFF55537F4
1DC591CA9B6979D861394B757231173420B130353EAC9DCA9399068096353108
C24171429FA99A086B51ACE37A02D1178F81A7E225278BDC2BF0038E66D2C9EC
ACBB3BA33F05E9CB2DD144D59AA23A265D273C60C32D8DEC992FBD7B4BB41608
B023E205DA4BBACB699D403C81679A7631C294608B289F60FFF8C732825DA065
D7C95992607C9BACCCA1856427B77AA521C155CE93A372AE65F8F33AD156FBAE
7F8BE230AF276757B8E358105A07FFB79558B80A14B3E9691DA5A75526052686
9937783A61F3F211E87FA1CC4B9C3F195E5D6B749104CBFFD24D68D46B312796
EC4DD7953114B92995156DF7F5B30C344E9B963D846A3BEB6C1CBA7BBAD21342
AAC9D5FC6F7B9AE9FE5420A827D08C982987D07A6C450B2A8D0BE094A7AB67C7
6E7C73A104AFA7CF333977C1B173D176F38ED105D240F389319992E867C5EA93
FBD50CCEF883A2D2E01BA3DD651EFA4AAEB14C078B3FB1A60A59597DBAD011C4
49044841C3F8FC60222DD0D159923519E3E7D441978E38D6C9393A6E739524DA
99E494D9E1FE8EB703797B611CDDF7DCEDD5278ACEC4A55F1A082D537B3C1EE8
90A6FD2ECAC911759DC494C124E3C034539421BBF84E077F6ADFFED113891FC5
70BBFD2745C729D2DE044E6E38783B6291893B59FD7F06F017A821734C1283CD
690CE1CADAF22A89EEFBF1B3FF6E3F683EA7F3E2DB20C2D8530828053A88CA14
BE086F8D4E32234B96BF37BA75E6159B0F7FABB769BA0DAB927E1D420A61A18D
59779EAC75749BB6675063A2B3BD3FA2B3E0E04ED9832582F5515AF00E01952F
95336FC074602E6957DA97DDFA62CF9AC0CE60340D852582BDB1EB6971F2EBCC
0C538B9F4747E6F68B42B7F0D3D40868AFE8EE32B307654346AFFB61238AD6BA
5B846CC8D970ED51C10F44C8415FAFC12C5777A4C4F47334623409DBC3224E61
5E1A621D5784661CDD38BFD4E4F49D36681AA6A43DC01BE8CEF99710AF2F9E27
65A8ED0957B2A13CCC8B93FF7BC5FC7C7A37AE0523EA697FFAF7EDF2347DFCB0
70CF8E3093B06D0B80CED64FDF2D1E536F87ADBF1AD9AA04D7DE2096413AB8B3
C9EF1D8E6EB615BB59940BAC40E626251521615BB22AE1574CD46BB696AD53BC
CE5317E94171CDD688585637C303458246F69A54F2A80E2E8E2FC11C5D29EAAE
D869AB673C17E2C713BC7E31E870020D1D10257C6920604B1984ECB320196D34
884EE74B72302909C1A00EB6175FB3D30454A2FCAE22A3925A01F6EF0F102E7A
FD6F7EA1A3F8B1399CCD2FAFC34565779A1832ED187F3D6BCE17BFDD77032774
ED6DB52B99707525B6894E316872689DE8706526BEF3903DE341C335A9EB3915
98EF607BE11D60BF0503E8963D65B3A31F822E5B83FCC0598D72679BB26DE708
3132CC72FCE1598462907D5842083998C344A6456ECF4D054D777B2C7D38DDC3
32691C4360BB26DFECC02D3B718F41E71BA79C0FF3C171DD1560E71E1FC36E1E
9D9822FFF9D349F5A6EEA5EE1570159BF9A36B47DC8BA5512791345202592520
66F5300DAFB3EE17B6E5C45D28126C8ED2A1AC0143845E83DC5B22E6671796EB
6010735CDB7DFD57D62B52E063FA446E378D6300D9788ACEC208CF1CEE59A30E
3B8CA0F86CF2FAD39A7166188DDB17F8D8BB6754CE78EB0B8F893FC874E4C934
D42A9189737343ACE032D575B42801425E913F25E79B7CE6E98897122200398D
64538923A225FD03C5DE5384AEF8B6C7C5DAB64A0F3DBA0169AB4A8274594181
BB8AD7FDB6C541B3D526D321A3B255FF49EF8FB9EB0896586854605D9906CC56
1BC4AFAAB95E1F40C4E9A0DE646D31D4B3BBF4FADE3118666DAFE7F8FA2B4063
7856CD4446AAF00CD4C41A40097EF75118689E351CEFA716E85BEBAB99C419C2
45638D9A414004A4E10AD34C5221A56A06FDBD8C5D3C740995C3253DA922EF10
C3843B82BD93D2FB31D9EBBA444DFCD45B29CD1EAF3ABD2F564B6F655AB14DFC
8C671FB33550D3CCCF4EA0FE2301C72CDB2334AE6D267A009BD0A11514B7B1A6
0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7395B70225A75A1B90B73079E2
6AA33FD37B81F7D60DE88B79071CD9B1F2F0DD388E0CEDB6B1CCEFF77C0FECD4
E3D29D8C479FF541CFFFD47F7180DF4DE22239C39CEECB8FE0F6B1781488F823
3BF15DFAE6DEBE50F85C02F51EE9BE65CF2527ABD892F5D8F1DBAD763C746E18
14DAF7DE2443FAB39DE2D2A4C48E0D8C4E450024909E5601B341DAB4DAB92AE7
22C326065E48F4EC7FBF2E1158F056E7E8DC4507C65011720B33765811DC92BB
3A5DD3AE8905EB9A391EA579DBBCB698FD3F773AF5EAFFD25A2EB6339D9CC604
5AE78F442B600CDB6CB674625739FCE99B64D61EF926C5E19FFF0DF9E2E43264
A353C3C6AAE69F7352C7E7318F8D9572760FFA000582EC243DA0A9B677C36713
A74D64ACCB9F58366810A54388BEFA8EBCEE63C4217F0594CE082C9B9A6C7AF7
88223EFB01D867563247DB54F05456A33A8D0B8B644D5701963EB110D08DDA61
E034FB3289D16D12E5C1F0D082228B16E19B3F65149451266C64F64F9DB9B9D3
48DAE3C78DC77384122E6DA850F1F810A078FF10FDE6ED9138A53B0AB67C515C
00F3B56BCD852EB4E97C3A99CB8C42582F9538D808603CE0FEA121C806F3C787
2F2BBE4CE54DE954FEED3C0C45D0B3A5A116E29FDAA839641B0CB2CFBEF10418
7498B83A1EB5FB5E3535B23A023A3E5225E0377ED38749AE1F7714AE5E1D63D9
093CAA0AC2628860391ACC35650B8E39519B2B7A77454005635379B9BB4962F2
613D0DD81CCEB228F0B38F009EA866EAD30EF58F42E5D1E417F4D4AC65FE25D9
CA9D22E27A065EBC126C816B00FF5AF1029041682E2C50EBC3202729FD3E48D7
EC7516E263C79D6A97268DA46A605B68FC2C666FA0A35C4C8596AD22AE7F7C5F
36F105D07A9B861D786504653919C9D747DD8DEA48E055AE8A5145F6294A5C23
05C7DA7391F70EED9ECFD846659530D5117D67B53DC37CD5D84B8D1BD75CF4BF
1739BE8284C23786A83E0FC5BEBD102D9B2DBB5EA1F2C73A736097911FF9F693
D459C15D45B4A02609393B950AAAF38A1028D8FDA30485C8416E8156E83E814C
7DF4DFE157A93F0DCABC26DC1B8FA3FE14E2B233569BFF15D659051E9B0C162A
20E2A03AFFF9D6B0AF70E1D643784CCA58AF6DF01673F5BECDC098C7D01128F6
6645870CB623830425002C639DEB7D077A0B5388020255C01C78111FF61B2E2C
1952B7C49D58AC38F57FF3895A1C304D5FD0585EEAEAB836B6631AD7623A9AEA
D25386AB426208A50CE35D9F4A9932700C0D7D36755706C2751B3FA5FD95D94B
08917E211E3B6E052E1597B542399476EBCADDBF3B803CF2A943A90C34D2B745
37CA1B5456842983851FC9239D130A5DCED9628B01EC6F47232DE5CB73A83C1B
82D01E7F35AA0F3A213360EB7C2C60EF8FA8F3AAD3ABA2479AC6CCBFC37A265A
F506B75CB8F498914E17C88A93113C74DC714A6C568A8CF7E44896D8A92F20F3
15D8DEAFF4A450A0D4C3C5629CE9608BB7E77F5201C8A046181C72CB0754657B
A98D993A858C73631B9EB0BA5D2020E13072A36E6529B303BA1340739846C649
BBE1B4C581A15E9FE91E40D571A0BDCF87581D59EF8B0F11669B5112E40E7E7C
A794F2C7E845FC08034E600A9A20EDAEE67CC040F1A2375E2D35E33B794FD8BE
977D4F61E77F3CBFFD7E16AF77719F71E073E6DA4A038B997DA794EC8E139CAA
740171693F5ADBD3867EAF4AF38BEE8E5AA5EF8B841CF4CA16EB943AF05A6D7B
488CEC77941EE8A8C0799DEB25F12578515EC78E18B0F934D22DAA613E3826A4
4A7279F02D84EA05D1F65967F1215CCD35DAD77E38071AF7ADC753F5E4972EB1
979B37F8BD76F69890D14A1FF76CDD2A8822E9AF223B7EA064DFCCE952BD014A
5E96679ABF09ED741C41A0BDB45D751F6641FDAD6065A36614A68525087E7077
C518B22888EEFC64BC1C8D7F71116938075D5BAC67DCCC00076D10EBBB44DF43
9E590EF307E3EEC5D50E5C4B5F74D3455BE977C234673E53BEC868510F977086
DB5424750CEA579D039411C1E91001090A4A7B7A132D46A63686869493FF0CDB
E3DDC036AD08B8C1CEF1884F8E7685439F04EFFDA7FA94BD909759EC725491D0
615E22A9E7D01EB80024F340CE9038AFF3C64D29B8D53ED6DEBAD55D76B26B23
632625458320BD5D62D6AD9B48182384E574E4F7C7FFB0F8346E0BE88633BEE2
91BB32D3887FD1F7C94E132484C3F2C2638E90CB36C145CC25F858E34B6D27E1
3A4E773B8D621B20C283D95B8A5DAC624EFFE6B1E94F1DB5B3628E247CFDB31C
0B1E5DA72E4176D1B9FE2A33F2DEA575E4776350FB42C2FA1C83C78E63DD12DF
D40787A11B461CE07165090ECBE5B6409D4903CF328BFD78BCD95862F2884FFF
A17C26969FA7AC28A6FF28C62F02777853B47DD59CC846154643BDCD7C48863E
5941CB1859B3FC75BDB098EA05FA1A1CEBE9B8214992F1FACAC158BB77EC34B9
8BD1099644E30CE5DDE591CB22186CE9503BC8C9410138B76CD997DBF24629B4
86D437DDEB13077BABA4E019BE121E24F0B4BA11F6D5EE1BACCFB93A0773D0F7
BDD47F29D25A92DBA2AF88984C142908120D8F94874DD922AAC1936BEC68BEE1
19F67756352103F11CA9C72A278C045B1D2572EC08DE1424D2420FCED4FB8A29
D147EB81F802FDFBDDB4B6BD4ACC94E514A65D4DE3CD536540ECDFC8589CD28D
A9ECA4F7B484728B70538E5187528FE146C23041CCF52F7D1243257B02B8CAFF
2AC2FB7868A7FC61E6AD2A0305F961F6E6BED4A1655EDC31C235D20B206326C7
E218037BCCDB94D5E8EB01E9169E63094D3F956A8042EA86CBABB384F8C65F1E
170D2E848D216CA88782A4A3FC0187DC56F292CE98C4EBF7EBA8421BBC79372B
E821B75499FEEACE5FB811DC8CB1CB94F4EE9A978F9D8C023B72BA6811E38EC9
9F57AD5A1601A6C2E44D2B6799B72E8D6C0EC356325B4456170E9ADEF02464A5
7D0CC0A750860A17958A21EC955C2532B1A884523A0634F67D863033C5211C01
EC500AD6EB490419EB1278AC3AB78AFC74696BC4A49B700AEFE3F8CD4087B076
6575358EC8570A20D7FFACF79771B4E47D07EA87335F94152A9A489FB0D2E3D7
321AE320CF1A36D62C69046D80DEA738C2C03D001AE983B53BF3E745C7C96F9B
7010371E9BD19A71244BA48A4722CE96786CC228DD6BDA9B4F88DC224D329F43
9B7451AE7AFC6164414F82622BE90E015D2F2940ED5A19B82C2E8A1B23B3EF2F
B80E29405A632A951499236F31315728AA57F99008E157FCDC9D79CC6D608816
93C26A6797614EF00EAB92CBAC25AAB048F0EA0B18F47C1E9E50C1B834BD1950
96C9A61145921EBA98A70B52C5B86A0A649E3ABAAE3472D6E8D9BDCC1CA231B5
538BCC0FE5BCAEB850682BEE7ED59D4B2F9EA04BCF45C698A401E6940F934D4A
084AE8638C364D8A97B0E208CCDE203687B8AE02701424A6D49E4DE98E3DD0E2
E87308560F434CC07C344B5EDAE7060A681748C4138A865E235FF4BF862E11A7
630DA7AF4FB1E417BF6E00591F7822CDA05A7435A10F4DCAC96C9561A92FC09D
BD65783666539EC882B95552C5215183E5FB51605BAA7948D6E5147A7EE8648A
7B4D05F3AB9FE13C00144E753FAE839239D8150E5DD84C91CB6C2639EAAE5AE5
E97699D790C9F5F4F5B56ABC7D073CA9FCF104536D1590F4C85CCF00AF19AD25
23A82F2774E3AF8C5A151E46454D860CDFBB20A0B2EF5DBA31A5FCBF372EE357
4BB3EEC48A1E1DE7B68875B4D1888E46FC65C2FB75840E61D8415FB2FDB77D17
D0D9A6112BF0D1484EA741D84587FD671E307987705ADB7596D0E268828757AF
C19E45C3C949B0FBD942A5A2269B7FFB1CF855D4A634FB6F24BF864192268F47
D393DD4DB22595437E8DF94EEDDE8B754982EECEE39A0FB66F009808B3E84706
A3929642F138D429A152822EE1743C6B4D0FE235BAFB348477CECE5D11530D65
47759FE423707BF705812BC67B634C48DF354F1DE4624C7214E2BEDF409D33E5
1FE05BC9AE1143BE6807E41C1040BD429777113C14675B171F8128ACF248CDAC
88DF2A48A4F5B423E15C8DD548499885E96111430FBFD812D125CAD5ED62ED81
E4A5E48AAB3C60C966DA3E611E99FBCAF5D526CBFEA960FF97CF1B59C7003CEA
2AA95E0FD976534DB8F4AA0999D7052483C3BDD1D4A10457538F1EC36EBF5A75
BEC8F6DD5F6E6843964C45B67D875058CC6D7F485E4E870BC7C4BF3CB01AA002
B983934E86084DB57AA6F81A27199E7B6A8E30F001B39401D749D402AB4C9198
C3A063CB70AF955FFB9078E60049489F827753E4EB97B480285E38C62EFEF896
6F781036AE456596C7AFB34D15A945E047E5D4C44D0CF1A9C2BA211FC94598CB
A664E92FDC3C84C99AFF215883865CE3532C2BFC6158859D3C1B381FA9B54CC4
195C597D6799CD5B7F09C4B83C081DEE898D9D027742300E8669F40E28F9C32E
556F402C5A151BA8685EA40A7E410F3EF308B8792776E2CF40171B8AF167A772
5902F93ACDDBFFE2385270883C2FA91EA55A1CFAF1E6F7EBF70A5EF69401022C
174CBCF909677C89B50FA51E7869A6BDAB61F2F77205D5E2C78FEA68865298BF
3F62049435BBF6C03F5D27113B3B90BA90FA7240719CF20247AFE827C8A2D26E
D71F2662826D9A1865668783704E8026D233E83ADB45C74A25AAFF389346BEC4
AD125FB66DCA12A964150D293DB3A5A8612ECF952341641E46101486349CBCDA
562E0D8DFB677DDE1E4CC39C40D11837AC91AD6BD4A989E90BAFD771DB778E60
32E32434858D033496F86FBA0E1A3C36D1A866C5ED696006C45E1C2409E01026
9716906EF1099DA1BF5D653BB6D4B089AF21641BE38F379570A36BEC3324EA98
EC7E2218411D22FD178993C5D8D6AB34A189FA44CFEE3C4582C3BFA39629DD1D
C75B726E9D4F8694D3A4EAB1BDEB563C3316C7EDDA3AD5A84ACE6F8C51299E86
0EBF0CBAD5BC521F183EB59FD003AE5E0B175EA87DD3836D161DD205B6D78535
18F8522B9D5C229C89D59664FF2168200E5F600E617A6F6193A1F911504260D9
0D36273650F4E32B4D798F49CF236D86B92B8F499033A7C8B20517CFC494A7EE
F8762859353E43AF38D0D4E667A80166DA0C1DB5452BD5D31B088F7C1E442DFF
48D2699B9A19E2FC0D43B19865E001EF5614D1FDCC288B9CB288231E14FE6805
7BE93BEA6B23FA0D592C03BA3BA078F55FC5DB7E8B23C69CC99C0B233ADAE39D
A0C8EDF8729F87BBB81C79D07D783184AC52CB3A0576F4FB4724A1BA3FEEAE3D
C364060DB7079DBD22DCB24CA9CFECAB9938F99A2394F2B5338FB39210AFE270
E9035F12399AE9E99E066688884DBEA2F201EC9654E76C73BFC3C79DD8311101
317A71126DA5191A7AE3FE4DE1CC269861657DAE11CA5F1565C3CEA892BA4093
94178F13030AE0D5E7B3CB7D36842E751568FFED663046B42AE20F058CD38EDB
16D55F238EC69B6EB79E5524AEF93D86C1A0DA6BA58119FCA2570964C9054B97
608A63DBD2B69BE0D1124BDF8EFE3FF6FF5A943CE599929D6ED345A0B3BCD647
8ED6B44659B2017F778D33962C028AB4492FFD42A3AD0B7A4C84DA44BFC664DA
44FB5E57D12C6068F59745747E0160C2F9A0E4FF565671CFAEACC4173E0163A0
B6D795DD2BEC3ACC3053926BF4350D36D28E2E8B90CF14F06391353E60E85B25
0CD253802AF02306DC582AEBFCD0C91C2045443F5FC6E21518DF676CF6E46A12
92A838C381DD20FBE8FCC548E655D710716EC5F734EB4D4E85FCD8D4CA9D3AAC
7F81979ECA8231422739C0C58B4ADD86BF5F88038A665FFFB23654B08776938D
FC3DCEEFBBAC6F770EBEE3D15DF85ACAA6ED5A6BB2612A06E9DA3C7E35DC1285
55E7EF2DC1C36937123329824946320837A6F8FB6709B8470ECE2820714B43DD
9E08C2F3CE2BCF6DB76013F8AC2942A82EE76AC39E3C179610A9963C051C4343
AA4ABD6E36BA4EB2F17EA48FC54E25F71065BCB57954C4CB5A9A42C6CF6EA0D8
0B60AF621577453A37D1995144AC22383BAD0D43058F54E9E20DE59769CC1FB8
3B0DEC0F494A42D1103D2DE1F3BA2D9B672AA3210EDADE29D28FD24198880526
4573968F820EAC1C448EC9AFB93A7EDC0460FCB34D3EFEBDA80787A0F0A51277
B147CEB89735647EE159434E3AF6588F47FF972BF133ACB6E85DE4B2B15B93B7
BACB79AC25F37A4E4D17F902EF97D620DFFCD216CFF0DB2E60B9053B0C71F732
4D22AD7D3A2BD3882B5E360E01C606CA377DA1F5B66EFD67219100BA1C18590A
9C8CA1D7C985986A0A598FAABE565287DDA936C4FA87991236991A97123506FD
4770918757FB066F6B8ECA1A2FE45A37211C066B06EAC454C2EC2E339B6369B2
851293F533161005D90CA384045DC239D4FFF871AE164E5DDC0D361A5F467473
264FE3D6BE3E43DEDB3D3CB907D96A15697BFEBC9DFC71632319B253DBB32392
29280B4BAA648B722688FF72D47CA87D03ADBB9E14C31DAC0DE34D55F775F2EC
2F97FEA85F4B53BAE6049BC73429CA1598EF607BE11D603F92B2607D41C30290
38605D00E4721133F3D8831697F7A4F802E76BE91554C89F8F2F1C653843A05D
CE23E9D6C1339D085BF92634DB3BE07D3841B9FD401A469962DF6BE268D3CEC7
8F0CD2B5ACB66F625BA35B4E84ABA3742083E49B775D484D2CBAD02B90A26F45
89825E0FAB65BE3015A727DD70ED64A9CEF393B36F8BE03AFC1BA888F9B8D466
5660CDDEA601FEC923619222AA18C46730F59772D164394E761909DC1FB5D527
4499BC130EB1C97D420538B639750FF981F5F055A26BE28CAEA89B23120DC4BB
9A1470E27E25376C1E08F4F9E2EB03F07F09F17BF9098DA807A31E623824C8DF
C271B9B304F156053EAEF64A7485B5B163252BEBF1BD3FAF534F98851D230648
0CCE7213FC11A4F0392E138924663535706D700104D553FFC1556A37FE574DB9
7B64503E0E89C031ED687DECE6D95A2B7A44B5B2CB89FFC702276681AF7D03B3
1878FBB1F73E41AE22BCC18DB505C9F508DE64083AA73DCB7A51930597098CF9
079869FAD88BCA91E712481F69C517374702C323DF597F1AC5683BBEC2AF894D
8B5EE5374CE2E23F5678BCBE5EE2EFD3A29EAA2AB7E9886B6C4560568808C312
FD9483439996D196BF515DCF9A0EB8AB9030F47EA30DC19202E5A434C039154F
F7B08E7785C74177252227836371FF838EA449AFA983416C0A07D23B82AA4EED
7C1E74E5D54E51CCB8A3F6A927E3BA6903B35183A80EB555699747DE235AA48C
7DF0449F81590719B9A9284E841009D3C81A01DEA6061EF3E318B983E576680E
D552A5C76833DEC9F6D51A372ABEFDEF19D1BFB8391B8AC5B93984C5F9BE4636
B65B542A8D06A25135505C220DD1A84EE4A8E900DDDE2164C0D7063F30CAEE91
7F0AF9AA32B6AB21FF4CE22B53443775A76C52EC37CB7FE36EEF28B997BE4194
776A4FF707C73C149C6E4410F8B4B295E93801F07FCCA9E923ED82B2F9D5CB5D
32B93F2CA8FA546DB1A5A2BF38CDB9975162877A0A7E18DFDEDF0B7D717569EC
ED521296DD63F480405F96413EFABC51F06F653D1C71380871E814CCAF099A32
C4AF70C3A9CAD4EFEA168F36C9961F0FD862092C5D24CE3B8037AC8FDD3EA687
83468327DAF903C17E5B0BC25F89AE84006216080ECAF450D2C58CF910750E53
E61A74BE0C034CE4F3B5C56D031B02829678B18746027A7574E504F93932B966
091ACEA9E589113C8E958BB78AB8FEDA8E533FF2D2F53659138E55861598B47E
90268D173BFC9A92A73C28643C2501AB8A805F5985E5300BC0B572AF7D7A721F
F3DBB13E55DB9BC0F6BFD25011C461422D8B26CD47ACCBAE584E51CC1432C5F4
4E74E3693663C3C16C54C29016F8F159D52FD8455FE66BC4A4A33E9DD24FCCF5
B1DC0452AE7F17728D791E6329605BE4538DD33D33018781F5D5246651E87D67
11EE071C0ECD04A4C225CC9D51BB9C5E65CBC9A9A3B8E48183997E5FA52CA25A
449C39575442EE12425E2305BC90F8BA3EA92CF48FF75E203F53A6FB3F24DEE4
ED90AF97200AB6A84454BD18BD37B6B1E1ADBA25A12681F8123929CBB4FD57A8
6EF67ADA136A8B775B1C21191480CCA1C81934B583AB282CA5B0B7A092B9E2E1
030CD096837ADAF063E3C55FF94FEB32D337E5E51754EE17551D5F34BBF74B5F
58010F8ACF75936A0063A004579D828B5EC8965DA179672F3FFD725080F99388
7725CA40E8AD0442FE26765475D2DBD4AC22A5F6524827282BE3051A4BCF2D42
9A3F91352AE82FBEDE041EC35629CA2E7F54F7AAE51A00FF754426343F07D172
64437905E20FF339823753CADEDEC0852035B5DDCD0191E1201CBEF532A8FA98
99936E0DCBCE4900DAE1DE4589BE1B9F127F4AC133E12CFB9CAA3791CE6A5D66
A866BF088254A71D558CF9F14DEB920B9EFA84F78F1A59EA3FAF0970EEB3511D
F73CEC5B7877077EE70E3D34874AC52A76C969ED62AE01447E55136877689C83
2B02A1EFBFF8C024F12FC9DE8B9DA1ED1F5BA24C0BC50866CDEDE2D696E60DFE
E54D8290D98026C0362EB96C38251E615633FA380A663B2EDA1F402EE011EF8C
7D6B363B820D857B334F84C1EF640EC8FF9F774C4DE678F3EC5C47C86482EF01
FFBE03A0453D79C383ABB00199B6652B7906C10CABCB15FCC77A3912646CDE3B
80C0DFA70F665894F9E52B48909294ABDE0A02D1BF3D23D2EEB6A9925E9080C1
378FB9E81214D727B5826ABC232251F2DF5BB77DD35458B6468B03B2B2362A46
B7A2AE09AB886DD80D37EAFA0C1C4DAD9F9FC448F593DFED40A538F42CA2CC44
F2AC463759333B27DFC1F69BF0759727E7E0AC938EE2C6F614C4E10763235F70
1FADB02753E9153F3720C9F2F3A99199F5A567E74278263C4C2DAE8E5FD36E1C
9D23140F0D2E0AB876BCADDE17C529FB97A8183F3FA897C24862EF358A9505F0
95368AA1A13B16B4979B2918D8B88AF409B7934D159FA07FDBB9FF274D4A2071
14E6A27254DA602AA114C3AAC6F89947D1EACD714962A4602C178E889B635A3A
174C2B22CA6CB79B79892728A5E814B11D79DD96594DFC47EF877486D7B788C4
879CB0486E7CA4278579DAB901D5E28BBDF53BE7838242379C5F3D64EAF23C4A
087C364EB8747A414FE98F5B46CC9100BBBC6011462758788F3B2FCFA5B642CE
9E6CCDD4233EC7D51D32816F6188DD9B41DB46855D62888492947D1558631A21
029BFDF9F01C0DE4F85E72873C44872B18EAECD9744728A7B7B3F3C919CAD969
085C02AC49483D2CFD4505511BDFB873D1B8AA203336EFE27D8F47CAABA4858D
3495CA3EC2FB5C20C4E195865C58F3455FA10169083AA0B65A52F40C86F41CCC
4F6E5DC544BCC943C8B4C7BCE7CDA70F7EFA586A76E8729F31E9E77D823F64DB
9A7F1C72D788A6E1954FDAA2E22CEEF3B0D85A339CD713DDF8AD6FA7A2A37E3A
8A76677053BEFA43232E40292C6B77C5A6CA1FBED15BD3C3DBF9EEA13B7A66BE
7A72D1BEB563AA7C057A8ED001354C65CAB48C2D5EC0F884127980D45CC554CD
8CECB338B46D8FA834792B68A86DEF75A9E1987596CC934408D0E30DA6ED4BD6
582E09993B88E16AC164208DF8DE8E6658E0FCEE7E4412F18D4888B6402D6BFB
512179D531FD630A7EAD8E168E086E894E2E76E5FCB0B209B090005A7A945E7C
69BEE337CE808E58336289FF3BAC2BED48DA2C6EE765F2E8A29EB17CF79F031E
40D2D6854A81087EDAD1AC7C8CCCF197533BD788E2687090C0C95A9EF6D00590
AA1713C1E1C9FB8B246B1A25784FCA339D92EBF934797F237BC6601800B017B0
44777FEBAE725484D2BBE6EC9D1FBC1B43DDDA1C607840D3E9028714E8DCBE74
0CEAEF459606AA09C67102F8E00C8720903C886BF49C9A7E47ED055DAF953346
BAF3DC26D867817CCF2394806ACB6870158BB1097A412AB395919B329A40AC45
90C272A1ED0AEF75416C1D4CA7AFACD22E7CF7817E9E871B3AED68009B8D0EC8
062CB1663A34189C3B0FE3C39A9D86431DEA7A194B65F66528F948E31B89CEA0
19D39F57CCCB012CA35259483B921A5E0878CC2F7D68E710637EBBCA9494C3DF
A7B10F252F205D9939D5C3FC5B9D89BCC90CA33806FC1E14C6EC761128E87A21
04739B44255999086C55FC206E7AAAFA00832040BC467951414DB7FFF15BEF3D
C25621E1AC6DCE8EA798F301875302CDF6414BB3705A8DF2530FDF911AF41E03
975B9DCE08806A5D45C9F79D8805FA08D2F3799651CB4BC6AC81BEF314277F45
4BDFA9263F1378B74E0EFCC2A9F6057C0769CAA90D57D025D39EF8C1D960EDEC
EC7F31826866D746ED7EC6C39331D71A1F13D04D64C555DDF36379673B7F292B
A6A26A70C9913D6A0C7BEA167080D2A07AE5BC7D9D2B8301259D875EA4F2F627
D628178018BAD2667715323C2B06B1C8441561FE5B721D4F7B49321FE867D937
1874024891398133058BFCEA577440E232EF6D0969CAAF54CDFA94682878F301
13BEC1787F119AC81F5609EB6DF4114F46AFE49500C16AEFE3A6FB087D7D24EE
1A8FF8D2E3C30161B614B71313515AE97635E70F5E19BA1239A273C1E7227A2B
57BC181091BA2FABE20286722A937C2F3BB1B0373F3427809C70CDA0840BBC13
082C22022F51EF63B2D3CE4D6207085532DBF90D037BF9E21B62089539AEB300
835E4ED19EC90E96C63102AEE0A18EAB26DBEF9F1FC3ACE11E8E1074DAECEAD3
EBEDA1EAD85A9422BA3AF5D721EBE79A621F67108185FE1E613D20F1CCC4A0C5
C60FB77BED5993B666CFB7041D9AA8EAB5609F799522A43E4602320F8B400C37
F95D12A4D64E4BFCEB65DB03A2C80F9D33D5CAD1836B6302B1D58E2DAB0FAA8B
39DF59F6053E21CB0468CB1ED4AAD4B8AC095ED5A47553E9719798E1425E3352
BF6A364E82ABF7AF4E959563A355AF41E59F6E512BA3AAFA6DED118FB9868CBA
972109F260F15CDC5FCF3EFE0E1F7E0E6256DC966883400929C0C0FC2CC499D2
7ECE4755825C0A0B992C09C04EFBCFED06E838DC6FF720D6A124A3087AF61B23
3F49D1D46A5D05E05C761F1B5D5761D54C601F11D9427283EDB3B87793E177E7
632AC6D2E920AAC51902355BAAF28C45A39351DDE06C82A87D430513B1C7C922
4F4EFE49DFA9F8271C4D55DE7B01071A2A31D26E59371FE5E2729546D24AF458
E80AA314731B1E5C25E76C255966E3C644524B007B97EB2865D6988277954F4F
3ECF67073699143C76EEE84684EF157BB4F7D18F7B6E4243815D2045C630826E
14D266286700E4614E928BDC010948B3D2B37E1180120AE8CCEA5AD82F720ADB
3592EBEA7757CB488AB83E0D0165A16DD633BB3ABDF846CB292CE0EAC397D0FF
6C5D507D208EF2E2E5F76EF6DA07E4E775101ABD8274A5A935F30C93A6FD2DAD
C766577FC0EE6EC0E73373B7A3163530FB6AB8F7E9E7F19090192F172D05BA92
6B015DBCA9B6549412BCFABB4D5F8C579607F684001A03E3BA3D8592C922B828
4CD3BD56DA98E9E6719F3ADAE9D69225977D7C98B323C9B279DBB3EC55E1F756
FD9896E6D70351C1413E31A11479A2AEA30C9849DDCEE60FDA7740FBDFE2838C
E6AE9A1A09AD29E3FBD4BF66173212F03E3A499CB1AE20BDDFF8DA3CFA66CEBB
1EC67FB176F2ED90C6233B383BD7930FD539E076B7D77D52121158167B3FA415
6F8DC383E3C921F8D5F29D1D110B09EF379DB5C127C82DD3061DEE71B2379BFA
AE46BA8D506E4E1483886FEBE996C532E92E7F7F8FD47908A1BE627D781AAD97
F8CA2F66F64F5ED0F0CD1B446DA82241BDB9F204A50A6A6DF266216AEA024571
1FD349560BD8E42CABE1CE7CEB18AC589BE3F8ED88516DE97801691AF230FA73
E3C7106DE30A0B412E0EB4328E7C34E4A7BAB2D3F627556DA352F59594A10E37
0D31075C4342639B6D1A60C07B043918D5F0EE0D00265DF1F0590D2CB7ADB3B5
8D2B625388C747DAAAE79A3137F39C5813E055608F40707245FF92395896EC4B
0DDA3E162BFB026B742184F9C4E6D71019597880FA75BC8E4E42BBE2F339
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E086141A4B481B1D085ED61872E8BE023618298C154CA1CBC5A23C2
ABDC7EB93B1287558374ECEBB8152B9043D36537E8FF707C55BB3148059BFE8C
2A2F8B3E9B2B8B1C12E534AE818467322EB65A2F8B46533DFEC5C073C6294F2D
41197996BACA6164963C3AA18EF7AE2BD8E00C40760E980317E83B7F3D7B7C54
0FF26E1F0C47E3EC2566D5E417FFB95075CEA940D3C1E27CD199ED274C06E9C2
A19346E96F8CD9FF5592D53F8D637AD55DB4E8A614936BCF424B55E202772150
BF7DCE758DAF2EB188B6F5A8EF8D69FE1517CF21C56B5062E61D91CBEA14E111
554153F31BFD3592867211976E96DDF2435ECB3542DD572BBE8F1B0F9E00E1B1
B69F98A0F06DD553D38F727C2B7E2262FA79952A46AE05590AB582D3B235BB4C
36398574B97A0448D87852D7D657E2EB05D6276C08994125573B851C0DF183AA
798D06F9A18E28F8D76ADA78435E9942DA663FEF6B45D6C283AD9C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: TeX-feymr10
%!PS-AdobeFont-1.0: TeX-feymr10 001.001
%%Title: TeX-feymr10
%%CreationDate: Sat Jan 5 18:49:54 2002
%%Creator: Thomas Schröder
%%DocumentSuppliedResources: font TeX-feymr10
% converted after April 2001
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /TeX-feymr10 def
/FontBBox [-178 -195 823 877 ]readonly def
/PaintType 0 def
/FontInfo 12 dict dup begin
/version (001.001) readonly def
/Notice (converted after April 2001) readonly def
/FullName (TeX feymr10 Regular) readonly def
/FamilyName (TeX feymr10) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3166449D69AB0542CB99558019EE
97CFE9FA87FAC14B55E860B5663A3D528CD3784FC9647A2EB72CF1AF4E31964A
3073722CB69FA5370CC5D9CDBF105662CA6188C1B3BFA7658F71EA5765A0D152
E60FD5E1DE3B99CE70C03D8CB4F775B5B17CE9573F5046E61444C0DAFD894CFE
E17604820BBE5A8FA11A10565933C0A8320DC5D116C780706E315C54E72426DD
AF1E6786D883AD182ED327CBB03C39C1A2602471C39296B7681215EC4F0E0E0B
264FBAD453DD3B112065828DC04E265255F9FB51F5EEC233C6A752ECA0246E0A
A2BA69049BBF94E6C8F510D29A7735AE4D122DCCA7B22929270D51C3F1E68174
E38AC54D6418690C765264C7897AD12A84B2C5269A6BFBABF05C20A37C94D927
81FD24D7817897529ACEDD9B062949D02FB9B0E1B2D0BF765675BA16EBFC1C7C
DC437BEE4D9FAC437C6B9E5B0C00111499A90E1BD29C52263829FFEF1946619B
1C81623A436D2FBD670D126855C400F38CE0C88122C60EA0D331AA9636B27218
0CC9B0EDE940FFB5EBCF83EDB330F8E83C7166452669E04F2E95A7718ADBDA8F
F99C2DC815F7ED17655111692621430D077DE661F297A8B6A33FECC10B3892A2
4F8E139F3E446CC7D7F5D64E4DBEFDAD72AECAE4D64289A3E2BE0212CF4A91BF
04F60B14E7522795440054CCBC40C49886656B6918198778A498EDBE40AF4536
7F96E77E40A9D65B1D5447D2596B382447AB5549A11BD5B765F9133E1C5C3071
32075009D2AC8147BC53B4C07B14D548E0F914E600CBF320E1639435733D7563
0053CC74AE3E7F5B9741E8CCB3DAFC411B5F846FC583B7771A7088B1C9B9613B
86FBCA1EE9E8263406C1894EE246BE87CDCAD2BA7ACB7030E45B0866062055D9
EBF7F562FAB6190196A7B8AA1B61F407B2BE0F537129E27376C8DDC7C6416358
384B2A676AB3228144586258F2B82A5BD9AE9E5442462DA626088BAB0C29E8A8
0EC75BF6E5E897761B5D095E2A8EDBF2CA742F3BF155B4DF28110FB8B7FB9A6E
9229F9D0B47376BE7AE5CE6A6AD32F50B62023CB32E8E0CBCDE2110AD8251854
5F8934CDC91E522248E019A6DCA06A0C2D005D541C6ADFF72812F474050C709A
5ED08B5F83DA1FD76037AFF77515188E13073B30F9A49A970613659071E0A130
5A4DD21C42ADFC1DF8CEE802CFAB2A75B7460E9F46DAA8CE31D5F287D3163B98
5966C073653074E89114B1B8A097A43E58DC5E49AC1F70F04A922FF9955F9FA7
20A6FCB10A2670BB3F44D959FC897BA487147A0FFDDFD368EB1A41F4CCCB619B
A362730B373EAC754EF5CE2692576DE100E10402670F41FD38F11A1BB43B7F42
B4BD7BB5F4322C4A9D04BBE445358F4B59B1A5C85FAE03B06C950485E5B304E8
BDA4BB926C21E17B3EC2D4DBC9353CFB90DBC6976B566C310DC801A28907CED3
2126B72E26578DF77022D969D09E111BC1C489E88E7B0315E926B0376B085BB5
3CEAF925AEF208D454C49A6B239924FA18001BD1A7D3EA4E7904830A6A948A79
F50CA56EA772D92627A8380A37F3C30845647AB612D5F6B5CB916996A0EE6697
BC62B6266F4314BAAD796EF51EB965F7C30C001F16442E0CB7A6984B78AEFC46
7D6938EFB347E3287600228311BA24326714E77F1932B80334F933C2926274FA
21BAAD0605BBC9A01BDAD6D5ABB885A4E651B8DFAB60487319C1C386CE6A17CF
CE6F1E639526FE52759F1C88A2B52EED4B93C0AEFE101EEEE8C108F389F9D1E3
205904304DCD3F06198594F313F1BFF10CE7F410ABFE3BD5F47CC3D7DB91E197
AE2EFFB9015482D6C79EE33D31EBC91E7797ADADAB7F682F72DFB7B0B0B6AE27
CDA9C0538E1246167FDF86008881E9F917291B498DFD93885C05A1AC6F3A7C11
57128C3D6CA767C80C7AD866074879C24CC063341E85B910ABD13E4BBC7A48B1
53E24D05C43CAC6F3337ED734614EA91EBA620346F23693C7FAA9F488FEEF7DB
E525E547787CCBE1B9824B1CF0B92007A8884194388AE40560BE9D79CD4DE9CB
96359F98E85F2A49F75B7B66C6444DB0ADF62964CF1A47855F8C4688F95EE5A4
50C96A072FB8069A59B20CD2FC703F2F90D3AD1BAA56A93E3D2E2F33C6E2A7AD
258451B1411DD8DBF07CA0246640732F5ABE58B44AC29D9EACBB671334A141D5
FF7CB44C5D629EF4C3E479B76B6A11B47AE63003DE140FB162E88854291E52CD
218D3E70E007E24FEDE321E5814C501169EE40269A4130721A95CB23F48C32AE
DD7B0B4F6320A76DA8A605679B0863982D6B3D4903CD8184B2B829CE9FCBF77D
6CC854455B66AA88CA78910178F748BAD7A4F32521BA7CACB879CFC719BFE2BC
13CF49FDAEE217C53CE31DAB6FDCF81ECAA2E72A2CF15BD84D275BE55251F82D
C8A19F36545C0BDA65AE10E063F5E05A8DB056F7A41D4DB694C98E4246E3B38E
230D155F7ED10F13F00679BCDF5604F46E28FD15B81B55471B8262F8A2F72AF4
E5387E41E401274B350EEFA6C4F03A1E6E4A6B16E528088EA3C7E0299E38DF46
D345559937225879790AF29198B2FDEFE6FC99C66C69959F3FF98F67C07CE90D
F2993F8732E88A77355D4A186BBC8C299C85DB3CFE829BF9F22AA8D3BD63F0D9
CAC57A7CBE25193B289D8A9A614DA9202F69ABA8FFB96F4281592634A7FC4A21
456B69BF77848502657B7B934003418D2BC937720E67D4890E00A199636842D3
DB74B2F004A6E3F3EA6972D62C62E5D4F096AEB2F194E77B656822D9CFF41D2A
7C14F16D7F07E90306AC87B528175244B92D6C10024132A3A1FC2FE78F688904
3568D0BD312C635BF2C024B53B5624F8B17BEEEB424E619CBE804E24E6EE1BE7
3F159A72AB7ACE1C0347278BC542E4525E503DAB0127B4DB6D8538634CC60BB6
7851F14F0753BA3838ABD61E83ECC39C427E62AD4293F672F8E7C2A49B534F60
E877F23EF5EE0E849AEC5F5E12463F6F05D059854D701CE420D546867EE7E6C8
7CD2553F33682A0BF985671C6433700CA8FFB638E7C7BAE78BDFEFAD10DC5846
AFF08F08956041F2912B4D70FD34495C96D3F9B091293B9C738CF5C9563277EC
3C6863C4A69B09E4DDD525D77FD06C322DAE13FCD48A4EA7B1B6C8F0256FC16A
3B47A4BF0DA1C49EF53974B4BF01C9BF194CE7EEC2C3AFA9E4CECD8C4029CC6F
377E4269806EB0FB78AA812F1513C2CEFB8F50CD18615EBAC10976BD12CBC1CE
8CCAD0333D455C3ED1518FD7F80539AE63A5045D34B982ABB471ED8EB18B50D3
1A150C82182B6C31CC9B161A87361A6D96B63CF0D97A286090DA8CB72991B175
EF3D690C64D9CB5EDDFF5B00B7C179825A1794CA054B6F7A8CAF03DFD7E62F10
CE5BB34BB02E50AA4DD4FD704F147DE3DCEBD3B1DEBAF3483E01CA3076EB19A5
FA2A8815CD360568A9A05176CF4111CB27C54BC8B4B991853982BB7307283D8B
93E5A2D6DF853B6E17BEF7C06A182456EB73D4A1B77FD58A853B07B04ACE12EE
D04046A4E977A39963B144EAB63C7D27F2EE65F677B9892C999BC81B3BBDA70B
E7FFF8E673275F9B84D39E641BA990B9AD160BB73CC391B6C36A7C1D68438243
1606D2298D58EA3879D2CAE2D285011E229372F7FA98F55556F0C4007621168A
A3C1F9A9DE81DA70AB287ABC70C4BAE94321D94FAD2DC3754CA39F689C8221E1
6E7E57EA41F552EF612080D82122D5733CC48978F6BC62E40728DCB3134F4536
C33E222D0E79486EBF9A506F92CCE773BBDF3A764B3793E96393DB8EF1FF0FA1
F3801274B7B982FC53258A752D43261486A2A94B321D90C9393EECE5B3CBFAAB
D0BBA6E49ED462B20AFB384AC2D3E290BC8FE7805D5C0B0D37F04586BDC8C812
686C653A47B40A803819C86FB0C8EF10AA1344350972910363FC0E3DB49A5D75
BDBED15C823E1E870E2F0EFB93A856F3A63E28CB7ECBF17E444B271FD92157C5
8727745CE16AA9376735A8B02F2CB426BB91CCC365CEE49AE5C9938B08DB12B1
EEE55B954D3694FA0AEC0836883D86F6EA4E10ACAFB7CE5D16F858F6DFF1246F
B2135837B67DFE58003AF012885480947A19B0F90980366EC245AE6D8D33FD30
E080775680F701952B697FC8FC07A014B78DEC48017E46AD78EF6EE80BF81760
B2ADCBB63D91D25DCFC77F2B8867BC0092BD9DF8EDD0F7DEDF2458F1F938D05D
DD4C3A7D4B3008EE86F787EACD7C687B6BB09D362E814AFBC75209C457A19F37
C9780469DCD173C5E5BB7C88F4A8FF1E664AD95E1F5D005B4F15416A320366E4
41E5CE5C8A53B64D290AC210490EF404D08C7C93531FF8CFB841AFF5A0E5A8DE
1E25EB0D03018A76C701E737D941569CE252FF92E3C0A05798F47B75B501B03C
D92B56739CF0D76A13E06283CB4F55177E3D6B28C265954DE0EC80A4CDFD91AC
A2FEE87917A4C63BCBDB24928F99D4836A62D3793411FFAA4CC7B12C934350E8
0C241E5C83E1BF8BCE56FFB67F9C7970CD00D64E7CF92F0A9CB5E672852960AE
8959AE74D4DE18D69B095F9F83C2D98F5D6D14B13E76E4686B85A3B606479B6D
F3B52D950EBCFE01639F6B0D9C205C947D60F2F0540D0E8B1B78AF3C5376F94E
D5769B92FC21082A872ADC4BE261FE71F0EA2422B17EF9C0338F63F4D4BA4AC9
D6C76169A46B500885E2CFB8671C053163F186C242F539453A72E3CD4F416A30
6C7A154B28FD021A13A11C78D113E65FAE2A6602D55510502603AD648CA7C698
E61A5B8F3689308EF934594FC5EFFDB86BED8324C690350CB92005EA3EBBB9CF
83EF65EA37BB27D684B89F18AB93968DBB6D0BD835EDDBF6F9425AE707A9E732
7418E39DC60A6EB89299E14D62AEA38D7E1ED70829196DB28D4906BF73574AB4
5DCF1FD068BE2B5B597021EC43C0396D5F172A723556BD8937D6800A6CAA33F6
A061415D49DA0ECE5C1959D9AA8513D8E616BEF8C9411F93E9FBCB6D2637AEDB
B0E719D54E5840E6F71109A5BFB26839255C305080216C0FD2477BA7613C8198
8EB16ECFFBB6D745422204786A17705DABE8FC123005E476FECEBE1C3E240E66
9EC0C64922C42D88A87D2D9766DB3E6273110B2F9281D80F004D184E9484EF54
222058917A0DFF5AEDC9213979C8716488573FC308948F839BFADCA37353F9F9
C7FC6FF049F4DD9DBD476228E880E779C7122C3823385F85F86DA752C3E01A8F
8A103A854A8545E4109BE8AD304A60B54F124EF2A6AD3E5E7EBA6AE533E22954
261017699960A1E27D714C2E2D370FB1449ED84B4169EC1057AC8AE70B3962A8
2A16D2F5EC8818734A52C2211FFFB785AC27000B218464AAD820DCAAB31DBD3C
2F0ABE99FB90E8A188E9E95E3320B650E814FA72E425FC6D0B5E245330843CC3
DB6AB767C90E8EDD41E12FA1973E681A7180A3917CACA630FB0BB7A62FAAF292
EE1F836E10730B4797B72E335F6C291A3BFD7F71EE335C3A6233735DB2A379D7
4D1CC655A657023C0B72C819D778F70D9654BDF7C3DD44B733468029F6DBC37E
1D00A80D8D9E7DB37593FE4C2AF5E00949062085BDB51E9448A41DB88FC7401F
725593E1E2281E1F880F829778EEE4197E71F8E59420EAE7964C98BDA67D7224
51A7781696EE91A0E6138EEA37EEA66A29A778841BAED8A196FA2C9DC4DE9BD6
4915CDF114F441422F0FE6F6DFC899C05D171FC0E370C9D27025B9407AFBA04C
19CBF35CBA1E6328BEB3DC8BF3F27EADDDB063543BBE32195A9AB39C791A053B
9D6B918B1E101C98DA8A4EB26FB47BCACE2863C768381DF68C4C8033BB3BBEF5
E93514207A5AA561F78B3F9C70C691B40F4ED7449650276BAF866B77FC16D797
B91398B1797FC8A8CB148D5C234F59A7E4E6F661431598B68DBA780DC8B34A19
AF4EA912CB694B86D5C7672E57EC16F21F87944F7585ACC0847A31E2777D0068
69A9C658B4729A5A2DB08E093EDFF069067F02F93C4495F9F171AB52A1A5BF64
C71D97FA60A71E3E705E51531028D02B1AD3E8E032AC8E599DE4DA19227401AC
F79915BC3230D5D90FA77C29DB133FB7B4ED7B0D7BDD3B018BAB38126626BE19
57BA72362A12E23AB2C4F2C20CE67ADBB39FCC59111A7A0A61ABB82CE1711D0C
193F0D086B49494669F901CA6013B32E0160B72239DB3C2E229535BEF14DD08C
A8E603EF0B6A5D6FD9CE8EB6DEA304E959E394802B82E7C4BC31E75E1CF077A0
6F520EC408B4237E2C5D41DB0B4395D891BCFD008BDE2F5936C9B7D3D7F7F9D9
06FD7B552B784F7814AE16D8351899FC23B6772BB69B5BFB57D118FFFF07511E
8C6E994823E198A79376EF3E24C11B6FA1F6DEA71942741038EB332490625EED
2F92A7EAA26C64B36C180E45C35457FEEF8039855872511C30AE0BD536024FEF
2E0F40D53EB1845EF5EA9E10FD5C63E01D074E58590F0C8112BC26F1969F9C24
6A4027E715AA573228315FBE916274AE6D17F25A21DD9629263D6D83E1C5E6F0
D0A42464C558BDB4FDBF9201F57C808EDE384E12A8235EC30E90CCA8AA3C36CC
C09C6A6D74F9A30B50CF7D4ADDBFC902F6A006AACD90582B29ABAC673E1C6D67
3A70B27EEDD61AD0C422B387CE691F8ED807C137C5841779A540211331282F9C
2997E5A81A6BE710AEC12B347D9238B584F24C63DD4A34D620644424F315D15C
C710ED000B0D28DDB19A4D99AC1E0E5589B7A6F7B2C86F2F7FA4CB217F201436
991656F10224C5AA8341E6658ACFBCD76E73AFAB6E5B0FC14CB8AA60A1E845E7
5AAE0C73DD9F872EE3D28075C27156BB8D803A64E4126866360A54D16EFA11DB
13E7E52C0693982399545875D6ACAEA88BA0A3474783CCEF9A4B65EE64958091
8951AC0C438C2B0413761A253A43579B0B640FDD1497DE8C21A0856E475510E5
142E3842906AA80914CDE9402E4B37D2A6E53BD127D2D3AD5149AEB5ECD8CE0F
A7609D35FB71A5E542B436D5C7D71A4CB29EE71D11E0C2769C4FE6E728D24E56
A0169D3676D3B731B35E37C70B8015A53A9C15AF4F78D0FBDCE03FDD2C3D52C7
5D852346EA02BAE2FD29487245DE75FBAB597E741336005E4A549429A51271D6
5CBCFF634640DB0D056DD5EC6D5A7DB00E37F666CA703105ECCDBC670A47CDB7
48FE6D422825339A8CA5AAB0B1235F8D8BD2F5D6A3515FEFD32540521E20DA01
A0141AA1F8B223BC02156AE4E096FED912A6C33DF4E150052091700123102EAC
E6AE38599BA0A0CB94E1099475C28A540D3EBC4EEB382E906F6B4A1CE6940F16
77D474945B0DFDB54731F85B138577CCA34AD3BF8B7677378DCCF3999EEC8E5B
5BE10FE19D636B006E7D7290A3DDAE1DCFD312C2726B08676AC7B03A9E5BF580
BBD88C779EF23B655F9BBBC31F4D54BCD94E4D1FB85ED55AC4475DE0DF309494
49CF2BC0A9C60D7DE24DA0C0AB8F50953F4DCE4B2FF8E60DFF1EA75F4BAD4B11
3C735758AE622B81CEB5A8F845B2547C6A43812D4ECF9C9E042425176A20004C
2C4A815A38E237DA4ACD903D32B7F9844B2E42AA7F5A5008C4CFBB51F2A20C24
C4EA6D69F6CC5E79CC490EBDB8A9D4AF6103A6CE3906449DCD35B922EFBDE023
3D5ADD67F4F5BCF49D61F67FB313A8E2F92D29A0B15C6792D299B9510A5DFA30
56DF9000191FA35C2999FDD7132B3EB5E95020B032C8EE2BB4543DAAEA0DEC97
3133A99719D7ADBB2678384749B7E1ED994548266CF51E5DA1E7D78283F24197
0EB74E258585FACA9CC47BAFA7AE9E116FC4A042404FDEFC6D20C8510CDE6796
BF13356BC9A3EDF5DF353F6CB8D21EDF5EB9B50AD6BE2804F23B1727C373DC13
E4B7B7F5F1A0333C4BA7842F4E9F3D067DA11B64EC3D1EA2AFD82DAF0087AD2E
0876AFC12C5777A2743F938C01847747CC7525DE041402CBAA4C45F273A75DE8
528FD3BC80427F9E3AA1EAB57E9E2F625484D388DBA06AA511B556E660B7C58C
232E6191D34214218E9C35838F7532579EF7430063A099A176DA59B024B2CE56
FAD58E3E9AB280F49EFE8B13EB67D91B6BF3BBA8BD16CB5EE0B3FB9BEF37503A
F4114D06702D250FD78E921D8ABD0BA3647C711CB3FF3CB1EAB2DD7137A9CA46
4E545382727CD0F1D75102D7BEB5737B3D3009136C2DD9950F1DEC8859F21328
330224F695949BFE58241CABC4D378ED409FBA824D76C2EB94A55575E0B44B99
5F05EC9CCDC503CEA55FA4032192CEB9D7160B024084A468FCE4AB2F876A1B22
2FCE1702E00029F29A50C636A6C59226685F2B7F885CE26FF2D2836BD9C03367
13420C1A8BCFCB324EA9D26744B77B4BD9099611FC2209A53321B737E518950C
751B2F929CFD04EC824A2439E9BE1C56A3A02420C2B86C24BB936C7752DFE88B
A682B788BF0113BC92352E873AFFFC279F2F3ED949F3ECEED537F134E3C8A2C0
13BE80DE36288A86E93DB390E241AC83B926EAE86FFDF45E037CC3794DDFF403
DC64962FAF85B9714D399C221E36A633C0BB26EE127EDE93B54A6C34C1B1F322
7503847E9CA4622FF6CEB1E9828DABB65D66D658349E0404BD3E7871E3952C91
81DA87EC0F40B008BBE4253D7E8E7EF16C916674FCC41131B68BA2A9FDB59917
8206CB366282C90FC91B59C8A0FBBB26408CD0110EA1587A07E4FB09130E5B0B
852C429A88461C2C51F924B919B8C4F98BA8BF058EACE6ED42C208AAC866A1CC
DB9FBF4227F1CCD9FFAF49713AE4B85EC34FFD123CC49EA507D36DD69F0072CF
B01CCFDD0BDEB72A427A0485F0FEC84B315C854A341951CD338D8B4E7A77E3B7
41ADBA8C621DE2AEB91E65A0D3E1BDEBD508A0CB08F4C4E57D8481592C817520
4B6BCB5196CBA074
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE27995D78FD99C5784B2B7C7C509E9B93BCC29
35CD2714C50B246A7DC70C99B7DBFADA1E01B81749EE49A70853CD45FC323019
A45BCA3DE39C3E7618C6322D264556FD657D9270933D8B167D2575CF146336BB
1C76735F3B09470E40B0624E52F21809704749F6D81E3B829D163D9F61E070EE
D8CA803E56CF227F71EB8061B83E035C7138A7CFB6D6CBAFB766754C0E8934F9
AB738930EB75A2713CCBE333CC60A6A8F2BFDB043ADC0B94FA3370BBFBC61D7D
25524B08C70599D58E7521F58D26AFECE212309BD7BCF62735379ACF3309DDC5
C3F30DD7D3A37804BB23274D7B30DD69E1B2C3CA70F2F79FA29543F526BB808F
04609B43776382C4389362AEA7FE4E03637B4599D176F103143DC04D5B5E53D8
568E7911839EB05C8F4A9E9C911D746C4C8EBC0A4E6AC3CF08AC86548A8FD6D4
7450B1FD87B119E547047F43E9CCDE1C1F8645DA03EEB02B27E36BB6C87F39D0
505579B2D0FF4DA9D4AA971DB4C82693DEB59FAEB3A14C1547C6C46C24FF3513
EBC97357AA2F25BCDC92F98CFF9F3D5881095B96FBB30E8330499FB4803EAF74
920BAFB89889071729076D755021515BD8DE5177013854B10911605F872456B8
F504547AE968C323B85DCAD9AAD5FC33F29A921D427EEE0E098E8591EA7F2D7B
A5CD8A91C01AE80B672831C286C900AD20776B50D4D2004F7295D860A2974B73
A9E8B594BC8BCA8356DB43399E6A6918A887A64B2EEE98060E47C0F371681713
13F92A306D1A7DD5FCA29CE223138B98E6C6BE9F3B305E2E4ECE098AEC270F11
2CADA74CFF4BD78C5DEF4354211E3953CD7AD90239C1FFCA061A21652104F54D
4CE1C6B388B901F937A299F65C3217180D4BBDA87A96F4C31014265EFD9206DD
DDD45DD3F56823BF8236F0E6B94537D9CEF904EDEC7EBFB0E60995CF6457CF0B
1D76EFC8D22A8E991888FC44FF9ED2954B7A9DF5CF6F256C8A86C3D98CADF1E9
24E6C6725EDE1262199758B2B070504BD81147F35D8989D2CA44BEDE6B8BA09F
511388851B9D9865887D4EF8AA7AE6AB234B252A506EA2EB59B1AD40A04BA972
EC6DC7C9E4ADEB7E40045F10F38E0C8D50CD28D96A028BE7C67D1CD148404CE3
0DE9213AC26B82EB823194818E6DE249207343C37BE9B926EEDF21E1D52251D4
37D555CB1FEF227CD15A08CA2A245C3C6508DD3592E809E0C72380B92F4B946A
7BAF34835CAC375077A843F61978AB4876871FBF42DF8EB5F877033452F08D41
970883CD836D1668B85BD642F7F50AE117B3ACD1A1372D5D4D2555A2E8E23E29
D8C8C5F39807B5A01188DBAA07A27A116C80E837DC740E86068952F0A57E9027
C39A603A4886213EC782000DEABF71EAE1B8944E2EEF19E1F7FBF442840845EE
D13FA9B4C5CB1FDE6F0DE20AAD69160BFBDA23C2D29311C4F82514DCF27C6B94
A8E727522E182DAB2869CD2C2B0F39016EB778060F35A6FE085A1BDB04A65CBB
6605D4D72E11338D87D5B0283A4B81EC83D03F502E7DBF202BA558B4EB271C57
922F0CF3980A02A40CEB2FEE42B631C999B71EC234FED7B269E5D91564F0AC54
D70F8EFC63B94F73ACBB4CD279716F68783C493794BF12502E04FC52064E63D0
05F2034A1E7E4192D1193BD94E99C0CCF702D9EC100066E1490894F5ABC92A92
C3F42F4101AC88024884C018C7D0DF65F7CEBDD46FADABA26B5433D34C2AEB07
6031841EA02F1C9622E0B64CD190A4AF3020654123563C5D6ED62F112077A1E5
88A8C8499A8917CAB23F00BC124FD93096D2603BC6C1734124CA3176AB14F488
26ED2E56C67571DB18177A07E082CB873440C4648D3FFF06A1499A5C7EDBE172
1759C1BEA3DE43B426C5E175B059005BF2911E685D076FF12D01742E9AAFACF2
CFCAF0517858C28A24FFEB5A26E46BB5B788713FB8009CCFE62C17E001C96636
A8DC58B71D4BC720F615D2873CD11E06DDB3A7788888A8E713D0E82FC861C0D9
ED98E873821095C6BE6CA909BCEB6C9BB1B0730BCBCB20E22D06AD1AAE225D51
25AAA901A78E86386D29A7CCEFBAA8F35B4813CC9D289E5244483DFEC10FF237
E38BC8E19B81502A19E0BD113AFF02F4E365A4708189A7BDEAB2D32A6E464AAE
B3505AF669EC3FE5A7C9320D907438DB23A82D8CB9777BECA40890C137564EAC
CE768714D7430BE1825C90D88DF40E753607A06AFC0046335F97A2FF20EA44F7
94C1DFD6B105FDFC6EBC6D5745C10D2C3BD560C939B80707B471D13D7A910F23
91FA6B63F2E6A01890368EA8F0D42E7A93B343C664BBCEBDBC0C99138A50E5C0
F57977D929DC9CC159568FBF5523D79229E9BA352E4193A44EE745F76035DBC9
34588B2B8FF44C8368C9C69AD17E91BD78559AD4BE219C8B110472F95FD5CEE1
A7EC2A78941AFD0B102C6CEF9D5BCD4C4FB87316BC327ABA5D5F5FF14BFAABDF
9FC06879D91DADEAA25F850083BE6CC26AE7437664ABB66CCEEA19D0BDE898CF
328861C3CB4423FD2C0C1AFA95A6195FEF30511D5C87876C863364CE4B089A97
6F9C29A14A61785C42D2C746A98194782D9A504B2A0A92D4E4B5062855A33404
2E14145F4684AD22D461E740FA8DD232D18E559DAB50A977CF474EE1410D7097
785D120CA5C6E051D096CC40E931BEB074AA9E32BBFA361593C78D0D2EDCB1CD
D560A14E93017099D24663633B06BBE3C20A2718C044731B6DB8007749D1B605
F397413DF968722DC03BD138B0559D3E5887B7EA9C9C54F8335F55CC3F1B9135
C70CD0214CF04A4EC5AD120D492F25CD6E1E80CE87C5709112938ACF9BB2E011
87FC035CEA0FD5C1147D41630F1CC9B82B395BDCE1885A1D5F3441B03AC321C1
5CDE681DBB192993B553048C58C55F0E420DCEA46CD16B75173C5D37047E511D
C980EBD803E01C35504C4092D93AE476AB15324149043E713261671835DDF160
4B8DA000941FC5F85C754D5132402A0A94EA3D0E37D6B9890461CF1C65AB7C2E
E42288BD17DB983600580BB1513D30983C4FCDD1836FEDC80308316401D8B181
EE2A3B114F68DED3488EB9ABDBCE6E73EC5A0AD42D7735045D594C43A33EA29C
BE2AB98CD0305DD935D8F0F5EE3205A7576650887883B3C9AC23E217F48154FD
6CE1454F09486B47A5A18DE65034D0CC9F9F66DE2BE45C2D6F1AF8B10F578B9F
F66D78D738FA85FC454C23236FF4B665EA0E6210060F6439E9CCA612DC7ACE7A
D12F478F25D40CDF7D23E3E543B75A97A7BC960A7F742A2C89212832C36801A4
C384B89A91D53E0CD886C7BE0692CEB0CF29D9B4BD53E08D9FC1A863599BCF9A
717F4DC319B4B59AF009C11A91ACB087542F94750DC53232E62ACC3C660965F4
5849011BD76FF8489964A7848FC6F3CFA44B7F502649EAD20FD32FA1999CB88E
A646C764BD2088A3EF00A4F1862F2CAE2F8B6A8DB26A1287AB3DD941A92AC57C
EC6D4CFCE0ADFD99BDC3BE161F4C1FBA9B854899BDB7E9D09A1E25A95E9789BA
DC6967F96E550903DF9B81969E38FA3DE2A058EE2076C77C33A93F2FBAECA0A0
EA98FA4C3D1F8700B04CEAEA603A0833E91FB4A44AC83C4E86308B6E89C99A84
8AAAF1BD143560B559176CAF28B1D8B2C8370CBAD5873329B24AD4A743F2CFD1
8B26B1128AA48F72767FF2268BED8317FAFDB532191FA35C2984AE7C50481FF3
126BAE5309893814BA28263EB863D5E6F01C423E6C5D3289B152CE19FDB55A11
282FEEFFF3E262F26041CB1AF30804A3CC34C06C6FBA8AED582215711B0A17F4
1B505FA0B5F906C537EFCDEE4C69AFFEF89B74C5B83E2DEE7642AA85B1615F9C
BA1C3C3197223C98A1ACAA495A6B8B8F1919AC158DC63FF4600FDF993CE8D2E6
3DAB7E352BE200322BBAF6DDD2628694612A7790EA8E1836533738405E9B7AB6
9DC77FE9A283B3A8C6A3651DE8AF71499D39CE0567AEA286091BEA9D6A443A5C
D35747785C433D4E18A02ABA38F55742DC36E4FF07A656AFDC3D0A32CFC097B0
5F9D90CC4B614AE7F58F3BFAF22EE6821291164B14DA11FB16C0E671A6104082
94D05830E44ED3E9908B59DB3B3506C60D3F766ECE69AE23369AAC3B5951B557
D62C7728D6E3F13BE05939C2A6FAA336EFA57001DE299223DDBB333D71003681
B4A816B378AFE37543607554F1F1B427784EFB366CBFF1CD7CD5FE3CB61842EF
56F134AB25DCAD2BD08AE61E233FE6FA79017D1883C61EF0334681CCACC5D024
F39309DDAE717CDDEBF80C88974D717C4539732DAD1226FE504620FDEEEC6266
41060E55159270B4794F9C0945FEAC295D17B4E252D015910B847534A519CFC3
2D52169510940A9E9AD636AE141331BE35D1D5308C927BA3940B773F20E5B3C7
813663D33205454A1A4B2D9173D593615C4459845E1AEEEE1ABCE3E5328D3F81
11610DB32C86FF6F9DBA1B8D6BBA3C4AF64523F37F176F3256E298D22DC5F1CC
F1A67A355219E2EE13D5D6369F656836EE0A77206E8236649E81A1F0E02D8D3A
3C8FAAECF7839D20329CBC5ACB43482D3A3A1E9C3A426BC7FE406E89FF25FEB2
34CCD7F3FB3C608FF37988C7DE6A41FB1020DBBCC762F2BF24BF424BBB2D3207
9DD408226AEAA0C4DCB8DF16CC6767B0BC73EBA052FAA5311407ADDD4BDB1061
3A860B10D2C219E96E61050B98FB04425912F484F5B79B9C0735F92C1B4353B0
76358780D1547206329F302AF6853E5DCFBFE199A76734AEC487BBB103A8547A
0090F0342D48DFF9EA9821454CB759B3D82921AB4B9278E652C2F30A8A121781
8CFD111E32142FFB160DB6422A5884151A4671D631260FB1758BAC67E14234D2
5747F1E68E0C36FEFBD535FA5C64B046AA8835817140B76DC22B5453AE8F3F76
C69B9F10988BE7D061F539CC8711030D2483F752706E27D43E3102CEC57B8A58
6D3FF862999D20CD6BBDB23762249BA7031D4D97DE2280C10756DAC422F0B747
E427E5DB0B265FDD57193B8E7F00C2162FB111DC4972B51E59320793EC60AA3A
F4A3F68AA5E11F657F898F59F67E0D285167231B9F444D42F17CB182EE584117
FC81DDB5BEF8EB957F817C5699C7293E47DAA4EAD6D47F00FC6443EFCDCCACE4
627CFE80E82179579BFE305B9AA1770E8E8970E70524F9F7AE081E64AD1F71D6
CC6FF054661866B68CCC383E5403F0A734ECAD86937D32FACAB6B04F3F9ADD79
94C11CE94999A3F38C88115D6082DECDC2125A4643102DFD0AFCD8682BE5CA11
AABA54285DEB171209CC4CF8879A65088C7381B9029B67CE9029093EEBBAEDD4
403C382D29751340F63D14C45D0C8ACE829FC3034643F4B76AB7BF41CDB0A2CF
B2CFF7A3E022256D29AE0E789DBA81CB4DDE7D4A970A3162D903EDE2880C20DD
FCB205309DA145A55A2C6763E0D8BC8A0BF42461DCA1CB7E613647A93FAEC756
3535886E28292A422264BAEA373D5F1AD84FC79DE23E2BA52D8EE1B1D3F80318
8614D6ACD81856288366086F50154919E5C99CF62A7700E896F5B69456110B9A
8BBCDA8551C3C14F979F3CBB597AAE41210AA7A444428DD055DD35D91A1DD465
3800988005F542BD304D2D1798BABD827BC8A689C3C35078CC3502DEF40DE082
B544B4AF7127EA6D5B8FF5A0735257BE29E36A29B707A51A697A4D8A360D4017
19C5FDD791A1C640D47AF86948448DD00039DB41E9C5BE1A7E6BB48920932280
BC552ECD04E2C33B76A0F6172098AA76CD4660980EFA1C84D5348740B8A4885A
BE1FC79E81913524DB238155870C6B9819E5842664A4049499CAFA7351D3D3BF
FEB9A51236038D4452E44A34F25718B7158C40F12ACA152F1EE78072533F8900
CC3A1869BE48305DA62447B28A45D6F516078C72A4B155A2715B713EC359F680
FCF2663644C985191135F0156722F0BF1DFACDE42BEFD5278ACEC4A55F1A082D
537B3C1EE890A6FD2ECE0EF3999DB161EF7DB88DA4B0C592385D35F705BC2A9C
CD7351AE879DBB7FB52F25A5A5DFA45DB0FDF9B94F0AA69918932E563C8827CC
340AC4350DD2FF1A3EA9F8F3711A16CCE9A37170F0C02A9C7143D722CFC08677
6227901157114767FEC20D2DBA71C87061EE8BF523D591180D29A8F8E14A7959
731A74DC4B215D7EC095EBE86A3CB7C28C2EA7E6A19A68B64EAF236A3468C0F9
453189A1DFA55A9459D1C5B8CDC769D992269E6EC4631B1B75F7E6A511DBD978
F3032D2FC6BD54FD7664FAF472BBF13AC7F619FDC4AD5B38CE04E4C555757F69
C669C5EC403770F681C400FAEA98F62F02633E0F85A780A61DF255239F9BC3EA
AD652E6D5E754B9ADE46841E52DF90C3F0D7CE5DD684566DCF0B43A0B0F975DE
AE2F7601EB63C39D6EE8C54611D9D515EEBB7192C63D22D02BB2A5A27270225E
C95173C09068553725ABA9423F4B268C58072241D2DC5C080E7881848222220A
63605F00205C205B35DA93F4D000126B2CE72AC322B4D962537889CF225B3381
6EB449BF2C28599EB66F071FFCE3410C547A9B74D216032B72854A0B8A6ADE15
EBBFD5CD2BA9FAB7E75099FF1B68329FABA01826377C35067A7C6785ECE0C669
C0392E1C02A9F69CB191E2F8FCFF6FE23A3ABC8D6EE13773BA099E9F33DE6B1D
442AF96EE9B4EA9012AD3D9EF3C67E4341383124196569481872D2637F7C4006
1417CF942117F2DD286236367D3FD6206DF1B2B7701C20E811C3B65FB8B29B70
C0831ADB61A92C2DB592CF08B3DE2FFE5C4AB1E7A8E709E36725A1250C5907B8
A7B5D6B23DA27838D078225DEF89BFE7329F2B420491CAF1794C18EA07230E40
7DC950C01E31D915C6626F6E421543DC7754F1AA11748EEA4132F47399C1241A
A3613DD291F5D1D046FD9EE8832D60E91796C916FAFE58F51818B80BBA556C14
38BBAD22C404896C6490EAFC75CBF6CADA6A6B7C7B6E01A7BCF422C9A4A46BCB
3A9089D8B41B2CB3007B8260783AC9A3A8A50D9E4040DC6ADF8979C2C77291AE
9C13D9DC197DBFA7ED11B3B415C97314D28889AEC6BEA809470BFCCFEF0C622C
FEAE7F4AE740D9D7E24185FAD3D7048EA67AB4E1DD05CDD42DA117D5956FFE71
11F3426ABA50B07E0C853EBD237F5F284CDBEE82439B418703036305A7184A00
FDD7F36FBE5932DF128FCF4C4E5CE4CFE0904353C10378E611ECE652B37E911A
E0E16EA81274C5AB5F77B2C4564899F5DF9BA49D9D26DC2FFC59181147EB065D
30A883FD14933F4B11CC112DE73301FD9118CFA0BD6F3615B632568E0EA67288
F7AF12B051C4E298AEE276B5FF364A289222E6D4251DF41E0518AB7B1BC7F70A
162DAFE55AD7817AA62773CE160F630FD00345C1DD91C796157A282D8BC6524B
578BCF2CA6C2E48058A8D65B74900DE1EA95B981FBBCE8D846DAE64D975C3746
50DA926F24CFC1AC7172514CF1F4CC942F4B9DD6FF29A0F681BB7C42AB16F3DC
305839233A6D79FF1C7CA9DEBA71EED8BD7ECF7829B310429383B5497FF39974
7A568AB4C2B2317D3C80B1A70B71AA537516A6AE9516D7DAA2DE6C0097EC1BC5
52EBE9B4BEDDDDF27B0F06F006AF07A0FDB7C9FBC784A1C9E0506142709DA997
1E950373E5B501F24B33988323DF970D0D828005E45C4A8C4BD625056509BC9B
DE9DEE1E8951142A28319378A3B3EFCE8C60473C239DBA7010D3C9B6F79B12C6
005B99E6F7F3A6713E67E7C08467C617E31DFA524A30DB6978E8EFEA63DE4D8A
AC6484D208FA185432C09B97FD98032422B18100BEE64228990E597E21FC63BB
E8685F31189067F87F494CC6B431BAF0804D83527ECE7ACACA59B8688F63822D
A479E4279465A6CBD43EB5B5DB8B72E96257500EA7D9EA5958819F5CE03BEF6B
59B669723240EDE1525C5C1331150CEE1B942E6A555049252B35E961494C96DE
DCC822B75C8DBB2F8F03639A13E6F3845521A3F14AF26B04B69FB1E640A4C091
91F2A840375C3B89738B614AADD69471CE6B07099AF0E0F7240A1B663AA364CA
7EB90D4C37C4E6C970F7D4EA4D8333C5B27CAEB1C046B8B5D24ED5D673E26A25
811D4BCA9D693EF8ABE786B61C7B7E2D7A8185EB91514A80F81FE7226F672089
0FD2941250CC5A3B60478C7CD7C2D18483F808522BEC54D877EF9C47598585ED
0C78B4D7E5B9422B3CE88E98C87926F208D2B653B93AF76866E38F6F5B4953BB
6790BF383CF2A56E4E746EE98B9667072874B21A5F98225AE4D547C925E8C00B
B3E642A64685456B6BAF629AB8085CEED1CDAC6B7AC4296BCDC0A475363BAE29
98C2FD754A65945A958D9250B329ED72DFFF1413E660A1ABCBB985D94ABEE7C5
95B123A580A6D198644049DED12F4BC6817CAFFCF66BD9DCB19A5853273485E7
2F65B9817B90D23D92B264D2A274CD739F6A9A8920C2DF579A8C1E5ABC2E74FF
ACCEC903E9ABCB6ADFA4EB07AC36443DC19A5BE5EC10A5E013BD7D621A9025FA
A444DBC3E4C66B4530CAAF0E79D1775A4271DB221ECCFA25639CFDADABB26CB2
5314E5FF7110BFC9D5E0419ADD2F5CC1C09AD68EB9A83F51EF690F901A50B844
41C4DB391255574BC6C5F36FA9DC30E799BEDE4F80E5CF50E44B9D8319141D0F
640C2FAB459AAFFBA750A16A4999D5A59AEB5FAE6FA51EA6EB68C744D6880714
44C6EBA6D73FAF4BEB8741396750BE8416A3F738EC0C9FC2350C3EF29619FFF3
F800B8ACF3E15E01BCDB6D4CD8D1F8188BBAA1A71A96F1A32525FB3485903C00
361D3E72B126ED17CC167AF71471686937FFEB7E81904730359D72FB1F64E3B0
41A69B2441AB076D0A741AC388F04B00DE2653B18C99512BDA1612DB547D75B1
47C85088703C68C018951631F2EA80DF2F50241D796DC4A59A6A3159A5DBF34A
90316A3FAC59C053364AE5CC71BA9B8CEA1FEBE62D888E525888557F6B064CBA
5D4C249535659573BC504F7BD9AD7ECACCDEC2CDCC7D47FFAD34A12895B6587C
EADCC469FF3B2A422DBF3A339BF3DA423C82A9EF28E83FDE0C3C995E7B4F9755
F6C52B2F1E9E66AD9E7C3C3C96F6FD1D2A69856DE1ADA86B4EE8FCB5924E01F7
3A956FCA977A5793953E2790EE733B4D4C76A47A1335CA1AD3C2B451361DC744
F4815256430F566A6DCF28A6675A0EB20A8A3263C17D6B79FFB92592316FB237
45EE6EE084196CDBAE8F16946D857CE704F4293D1D7D5BD0405A163AC9894C52
4D7ABA6326C39829DC8A2ABDFC584BBBC8AB8932CBFDFB9FBE0FF0161C8AF487
9CEAA37352D164013DA9C1D285F1589F4B98172F185FC890116846F6EC00754B
2523E1F4D80ACF16020091018865E23D6C0C9BA0696A6B6CCFE54B6B1DEB0F94
AEB1E311381ACC86D0856C90A91D904C918800DA6A271351A831E47B7741A1EE
4FF0706BCC02E25EC3124E538CB207A3D156167BA2B5BFF816F894ADD3727655
612374EC339DDFEF0101A9CAD4EFEA168F36C55A6E9F4F58E4908EFA20B7551C
67CB65DFB3A6A4F462BFFD7FA6F55790E477C71A2F7CAA6DF3E02D22CDDC8EB6
6EFD45A16A26F5B8E1ABE5009BD17D8A90C410881A96F9B40CCF15567797367A
96A03D3AC106E06F828E9615640596CC91711D12A4155E5D1DCFDE9F4ECD69FD
31EE19C5D98A6566CB91770EC7F8004DA518F5ADAFBC89A00C0681726C4D377C
A89ABD1BEE3C9BD84A05DD11CF10D6B777A6AFF563AA3CF9B4F1B0A3A5B0F48C
D2BF96F92CA5FB5B497F4632B1E1826CFE046796B89912BCD6B7BEE52FE335CA
9BC02E9932C4295E25982DE1DC5A7E47644E6175E9B3AF676603DD8C5F5B0370
22B38CB7D8F49636053E2BD0287A3C313E1F43F07D3DDDDE40C2AC635ED04731
C461CD14359427CE75FB0E2B46B3E57B2E14CFE2728FD062DED1FC4552C0B714
EEE9BF2B469ECF927A50E97BD02496F62FB0778169721B3F1714B1B627B79606
E15D1DFB6E3E5386A1D75068986D021414BCA08AFD84BAB090E3434034B8BF9C
336D7991B97D2C102D99F17118D9CAC94359426F03AE236B9B02B7EE66A54BAC
3867BE0389CA1678E09D9D2EBD374BD0E2F84C30594EFBC77AF9059895E49154
05709607F4B3FEDC85A3A7380BC80D15DBD5160922AAF2C11B32778159AE6E49
89B3E184DAD4004F875E8048DD691A98B1DE92D88DD77B8715D6A220A3B1458E
A90D68B2B13A5D4A79B827C93FC2322684F24F3418F9B6CC9AB5C8DFE79E4026
7EE1B15AC390E3A7C5FE2404D7748075F07DFD48CEF6189F13619637A90BFC57
B1A5CA1A11C56146853BEE469B08171BB5ABBB29858F65E937CDE31D67C84771
9779DE0B331E51AD8846A82AF91F44923F25BAC6773C8AD0A81075F9B4A3F72A
50F8C443BB34DE842F3EBDE357648BB47871A70137CB99E97048161FDD3D79BB
1648BD39E15558B38FDB6563CAE2C57548E0182F692E585713B5FD22FD41E4C8
22E7774D2E36B7DC679E91F344E2181C9631F0E3F0E9D10C6306693FE71BAD27
746BB08B22018E76272937A91A1CB9421DE1DD7BC5D109B52B7093D785F4380C
E7E2D15E9763A4AF799EB15520B2AAE41F05B4B317C454A0F5F54B21DD7097DC
BDB747D975077B37CF09EA6F16A1452EA51C9AB784C23CFDAF6F044A5C2AAA6C
CA36A436B73CE97C83E306D223CE7774FA5AF973D985C02A46E776365CDF9B6A
32D8427EDBDEF885B59E018386AFA462D3FC884E32841E6BE12817A12E65BA65
C7CE675E399D4AAD46370C76C3162444F3AA3672C66C81B3B00D9D4F0432AB3E
A1F5D8579CAAE0CBFD02AA25E4E522F1AF1AB4EAC6FB4A789EB88F31D5F2337E
AB4F70211EE6DD75D887C411A4C185B878B8003E1782E9A3484F8CF8B3DD20C7
3B220E9E8A694F5AB21C2E9BA2D96F527B19FE75037804AC7C59F192653317BA
26FFB09FD38C60C117C441E4160DDE659F85ACB1F058AB549FBEAEF52AA3B808
61CCA95504DD63423BF603B14459B7C691BF68F5854FBB70F3F5EFDA7CA047CE
71B49325EFE87D508AAD5DAA2F732B12BA10B7B6B0263B8B5CE6EE63CED9FF7C
620329667BDB2B79A6C97B54B8BFE82A1E6D7F3FEB2DA1454935E38C1FAA3A22
54B70BAA79EA27CDA4EE2247F7B8CFD1429C72E269A2B8FBA0D207B75B05774B
DF89381798A1A62A0A6F8E820ECB5FE4ACA6A493180E0B5E7FBCB90CE9D7EB19
13D307114496116FF0087A487D8130DA7AC5BD0F503D3ABE63C3D4530E353E52
70D5FCCCCB54E7F0C9CBC54BC4CD46657AE3FFFBB204C6D59B5DFCD3E19A4F5D
703731C17E595D0E697FEC6C9A25BA86E49E0C7247962F244E4B3EA74280B710
1D384B1B4FD9F3CC4C007DB73015E52332A3685589F3ADE54C2F30B0AE131698
FDF6B55E5B1B11C5AE8BD7FBDB7BA6E909226523E23AA93628A6B5887CA2263B
F3F5A696EE8686AEEDB31E73863967A4FF7FCCCD04CFD61476B4495F926D1F42
39B2702AAA0A8F27EC86192E30A5239A449B68FE52808798B648EF2E5A7F38F0
1298636F8E1A427D4AE6F0DEA8CE198ACD51B48CB8EEFD48E705F80B009AC980
3066E498C82811CDE551ECB3C8DCC93024F925D8D44389868B07F5431C973C89
C949FAD868DAD4334BAD9F343C0361D03B248E7E7501BC64297D3C8BAF3BC9C0
D33067D50AFE8646CCF705322EFC4802EBEDFDEA9EB53E3804510BA9F24361EA
4C88733185E2FC5BD3720DAF7999C66F6DA0468D5C98B4E9C99FE1B4DE04B482
145F3CB7EBA49C7009564214078E4A64A95F3973DFEFFFA71B3B2BE1D5167D0E
2E82D385830EAF3992E4D8C863BA7C9E05717986CC8A452AE463C1E004348320
6B2C87D3A3296D84F61FEF1A5C7C895EA1EDA6A750662B898F6533036D413777
7EDE774B4792EFAC0D84C06D3D1AC023AD13814FE8FAA4A4E29ED940E9AB5A98
1D904C44E2AAB473137ED9F52818FAC02AC17A1D5484A8ACAE902CE9F29800BC
B01465B2BC0429162BE040639F2EE9C0FA967C96E8E54A1BC5E7269F5317D031
A400EE8C4AD035FFAA196A95E598C9C34E74DDF7A657AF1327EA3EC00A555758
DD88848D48A7E98A78F95DEC58D847DC65E9CB0E30B28A72DEC59D297CC24DB8
9EC76930D071A679EDCE7F36826C7C0C0289A1BAA29D4467B2EDB0A303437071
0E83C814854602CFA5EAE2D3112D43FF22C4723429BCDC4268B1F9CF94C24746
C3FDA17F2C848A4711583826284AE6A9495B072911CC814C19D53B95DE0071E3
A439D65A75E6227FFC6637647F60685A0DAE8F715731AB8EAC7DC648C5C31523
B52641B2281242D1E8539722361272D9A50C5C4C7A725889284D623CD8E5DF6B
C4ADF8132D9F85C7C229F5140D0B98341339A5470B4C89E24C9D753811731297
11D3BA7C52C08E87AF023C833F2E36C2977602AEFC5579B8123C43E8AC022D2F
38D2C47100AFC4401601E1EE4498B7F8AEBF68A600694C245667C46D5213F053
C32E9EF3DE510D05F01B979454C6280A58F8BE30FB98DE2420B3E3A28D735CDC
6DAA8E1A598B5A1519F8F01D006ABF646D25C4A9B937FAD5CC305A0836C5C198
E51243E50DBE5DA38D700443A638FB7F35261F2A09032C9F3A272B7A987888C1
E9D50C054CE99B9F7530982C062593DF513D3154E07738A2E39D6AC9429F1A35
9113F89A45395CDC48DBB13D7618F4FD6A066A4DF35F8BF28C680E7C90DC710C
4909D50036BB8CEC5766421818C10E6B336804C9D88F0EEB0C993216CD336AEC
EC76C438F1859B7494E26582C63DA46ACFF5D5CA41BAF982AB046F43B2DA7552
C98FEA1ADBBB93C025B00E220389962060DD83522D571226623E88BBEA686CCA
DB88397DB2CEC4EB12C2BEA2C26F768EE4BDC1C612B31C7A4A924DA62AD153A5
15079CC4F3EC104592D3D38E10A40C93CA40F8C88F69F5F803FC20B59D8A94F5
9777FF203C063AE8D9EA873AC7B461E0FB63D7C1CE62B8FF34647199204C3406
C65BD371F2E48C48712ED6CF7509792BD183F6711A994C31A54DDC94C9A8E862
5557BFA0C123C0DBC628D7EB2B2787C65B147FB7AA49FD7B056D8E1B1611D4B0
2E05A0FC41A267943125A76D7886A4E6E5F674F6AAF028CFB851E1C22E111F6D
B9A7F8D9F240B8532A91268E9AD2571CA84F117D8558ACD6BA0098C6EBB1AD2C
0A04BA1E0069833A45342B060EF38B19B97882E8F13AB1EC270722A28D29245A
4AFD3AE32BAE8DFD59DD21624E295E5D05CFB53BF7212E2933DD050FB0820AFA
1B2AB99EFEC6D112762B8527CBE3381953B0908617A28D2D6A522B49382C0377
8F67FDECC3DB4BBF0897CA4B909C878C935A958D9250B329ED72DFFF1413E660
A1ABCBB983608D0F5AC9308B32343F2A9CC22EA7D87E512F1249123C12BB8964
D3312AFB91898526FC628BD2AA4BE6827C91AE15997127DFFA9ABFF8C858A51C
83CCCC572024A7D128D2D567877FDDED97FD7C9E73DE4D6D4ED370EFA66156E9
15C6FEE8103DA73B5D782BFFAD7F7C029E12E5D24D547E35CDF1465C249CAB87
0818FA5CC7B9DE515CE6BBCDE3633FD159C855C4CC46FA71B56A2DA46A21D10A
567852020BF0C27F175DE9AFC917F2D783A0838DB0BDC5DFFF8BCFDF1D312FC0
FC0162F47FB4D8D9034DC5D3CA48DB26F515B6576AE85A29BA65112121E1DEDF
8597ED4F734B0AF63F7CAE541F9D511E2DCE82C4C641402C6A9A97BED4C33668
C231EF31A4D5750105FEB6F0C532000809CBDB3C5DCCE929A32C7F0DCBA32F57
AE6C9BA2FD61BE07C5DCCE8CDBE1C6E174AD0D12926D48FA5F6E1D7AB4A025BC
216C928B09F06332844EA9D12718D41C771BE6B07E1C5BB164A3361765B4356C
4E2C8E6EDC84FC313F99904E29111C174A42B49151D18C1047F69B50F6742929
09EE79FE294598B8493F9991DE93CAFEC8A86650ECB240F696BCDDD1A9F0465C
B43B8244578528A86BDA20C9BFB9FF931ECEEE556BCC9C4374EA6B2CCEDF09E9
3A469326883DFB3EB9B157C4EEFE7B4C2CAE4E07F76321A5D3A5906E2108DF5E
38FCD9C55FF4147243FDDBFB594E0FCC622BB066A369CC2474D56EA9D08FC3FF
7CCEB0DA2442304FF353060D4326034A5CD9EC8F73E33DFD982D182E86B3CB63
C968430895741B98CC31540F0B62F18FF86AF9B2A5B3E2A8E7AD8930C9777AD0
ABC8D24F75CA3925E9D2221524462A1F98761B4E749C534262169923CEB18025
FF4554899EF60A69BA10A8E42255598A24FAEA2264AD9C7AB786BB30C4007538
6C8F15EBF8BDF8396177D83B6AE2475B45961043BD8C7908EE9AA670671F12FC
2A455157B1BF595EA3E14929085DBA19DD5D6F37D2BDE9E18C4A49EE7BBC8F82
D8EBA66BA2F0C51C4E4DCC86D3C62FE9E069A1725AEBCC5CB1F7A80951942419
C67A9EB8EB3D1F5B0524B381B6236164733DA8E7A8C1AF60D163801D296860FF
ED817B1F5B4DE32894AD125502A33F3E65A94AC101903963A84EBD442BDF3B49
515AB10DFBF0BC3B537C3B1E57934EC351A8FECB9C6A2D42E04AD651074A7FB8
EEAD846888F724105E9709365231D609DDDB0964A51388C81CDDFF4DA1926B65
7225002331798829B9D72775996ECD8788D9E72EBE4912456D1A78B7076ADE3F
E148F1E7466E6F151D914B01F3BE6B9E21D8B933BFB3BA4F733A59F736544D5C
9BCA08C7C512DE231F44EC16EEB206287FF5F52F63541E76948E91D70112F8AB
A949F5BEAC192A4F0AEA4103BD933B08D5E68858DFB59BB3ACCC436E7CA1DB4F
D788C12F342516093022E01D500E1249B3CBB49C339F430D83A82090B22556B9
04FAB0230F5FC603B307B32E6B502A124CAF3E921871EF6A3E598C971EA81D99
AEBF76F5A9F0B2784E050A11FE8B1B130B758010DF14536C1550920C90992636
2E4CCF5B8AA7EBB59A09821BD121F361A0BB39E02217B34E09C287152425C6E6
07C1EE5D38720004E4858B624AD50EF95F68AD5FF201329AC69D41775618AAD8
209A2A32E8F4AC7502B677A74AC48E341259FCDD1E8D932840FCA372775F1691
CA52CB6583FA4C6F64BD28EC6F839F95D74E2EFA7D25364396F37130C0E488CE
C4339C9309BBA8B4AD3C40F938AAF88CB18CFF74FC89AE9A0B32ECDFD0BF97D2
D2940D54DDFCF2DB627140ED8AD5DBF7D86C88CFEF46D9C126F05A3C85F4400A
796D49A47AF2111C9A3A61A7F07D84B51D8C3E4B86EFCFF1C0E19F4369AD260B
A77F520D10EE8C58E25A36BE601E06A1739387577D67DC35BBA3417520FB95FE
B69D59AA5BBFE3F1CBBEB778ED8BAAF227D57119A0D31F9156AF4D76E60EC293
11F260C358AFC4E6F63A24B5A2CDB4EF4032DCA5CC6D1E11BBA2AD0259A9ADBD
D053FFE120C493DFF9FD4972DAE07D1E9900A649B80FE0359DDB6BDCD292EE03
20B1B6AF535B0EB7624E0116CD08A59EF79E5D7A9AF1DD9809395B595954DB44
D5A187F806B5D7B12FE096BD13F4515A4C6E25DFB42C4810D2FE7BF278B215DB
9A61885A88D88E1BA6936151A76B2D60E7A7AD55991FE366E1D0CBAEAA9F136A
A5E7CF174EB3D74860697B255C72846F1570C72A22574C85B1EF68F2EAA7AF1A
87A4C89E096B415A14A4F9A3D5E9CE733060E9A912DDFC06BEAB5782F56BE5D0
EC84DC549418D190B1C581260C7A5203CB5C00D65653E95361250C0812522FC5
B9B91480D75B36CEF1F239378A1C3AC2B15DB2DC33012FCDDFC8ACF206EF6A61
665BA860242A4A4EEEC6955407F7993C2377B237D57817D51DB3743D39359867
8351E78A1EC2AD1A9046778ECC7BD32D6CB3F0B9E70D33C9A5AF8605160D2593
31FD5C9ABC5B55AB8B57D38DC282390E735CDB7DFD57D62B5131AF784357B8E3
E7B676414CF22CD112C8DD5A99D30EAE2D0B10EE7934C215451BC9D441EF8278
B9D00EA80BABB86CD3A85C53DC3E9A25C9DAB9C9167F560F297B6B9242F5343A
0CE0D06EB59CD75260255563C88D594B9568ED078529DE942340A40AB1CBBCCD
ACF0046027231052719821DF82B89E2DD0885CA956529EA49D7B91337A89772A
EDD4A948F8C10EDBEEAD8F91EB13E7BB5FDB2DB0BD409CC94D3224E75B5764B9
DFAA97EA454B7FA5E442606FFF53F447D44E968A8B29A84AA5CE3B1599710699
5F141A58CC2A46228F2F642101F5B23CE1ED3A79FDFF8C1B97E405C045C305C9
970551CE63E45D74F8B7590837D46BF9E112781D53309A054F063DFF43BD4DC9
671084061B6F44475375C49819775F2522B9208A27D9CC9710FFD2192CA82959
36A18B42F96BE5854A7003C280319223A8BE84A42B32247BB1741C133467E8C6
B76F7329FF1136E5C76F823D29D35078412923DBB3A32176EFC49EA6FFA0C2AE
BFAC9216FB646FACC2ACCF7936399A28F962921A8D17FA331966743BB807BC62
ECCE310D899D22813E9A8F6B24CC94A37ED7FE37D7D03026506C2F7A28616642
225A5AD8C4FBEB07FE262D75AA093A73EEEA99FC29FD565D68BF89BD37A2E4A0
B6BE71A47B686442F01F8EAC3A9319C5612F3D365D1C76077A53626EC2C38433
02600BC6A6F743E66DDE8A3A4B59E35C128E574F8EA188169C7511C7B6038D33
F5C864C45FDE300D4538A4A19676DCB963CC0CDD1F1D89DCAFFEE79149D8A24F
C46597956CCCE3EC6F585D9D69A4738D11C6AB5C7324154983AE067420B20806
8E4FE13857F9C838D08CE835765AB686D2EC1DCE1B89A21179F9BD147086881C
D9C9335856F5F195FCAFBC381356C3B94ACFB1FE71C614310AFB51163ECE573E
AB9DC733E8E751F91924855405F02213933F1C51AF2CA7A39AE6B118A725867D
8C47D291939025EE8A893CBCA72533236F1C0A26CA59DDA6D011F79FEF550DF5
2C435281D07E3B0CF4EDC6C3611ED38BD648301224DD7BF58E565C9B64FC3CE2
F571E3F3C9C616260C0CC2F30246CB9BDA7E5ABDF56FAC14CC191D57882855C3
939CB6FA9ADA4A6B8B08178CECA5DA7318457F729D1DB59642C4BD425E3CFA54
0BE401DF40F19DCB5B4539E43B2A8C896EB74142C62BD15AE3DC5D6A5D3A9783
8766FE358D17B2CF7B04A1707A89E39F1CCA7A7132BA0E80162BB1A9E2E99992
6D3B31247BC0D7A142B992F5C8790B3CDDDD49AEE50FD825E0E3569B6514C107
D7B3A614A650D5AF919E01757021B319D0FE32E4E03247DA02407E59921FAB9E
D7F964ED314D50CDC06341481153D90F48C7DB88C6D93DB82004DB8D9E8A2F16
1A38FEB95062E603DD36950A8F3D2E430290A40947B84A0D64CB893C4EC65332
5868F716DFD2933D5F0B14A0BB45AB5F7647D0A93B92F543A985027FD2715F41
82BAB1640F3919963CDE4268F5B7DE41DE1B4C2586B126B14238710305670839
93332E3013D3E482523B21A48EDC745CDEB78BCDA3C7B09D495A7E6CC4D66BC9
992C652E595D0E1650C555CE1292C4C58A506BACE306D07EF4328E10849820BE
6948B237FA5BC71B77173DE79A0DADBA7500ACFB3DD815224F7E256A4EA0AD52
5F30EC6D1B1ACC33E45D087963C8B579466D5A3237732F80C4ECF89E1C49A957
0C6CB87E4289332A867E6D4535F7635E337E367BE1A292DE76EBBDA80AC0E8C4
B87B1B8775256428028777102C6CB4EC40857946FD8AF62FBE99C8E9E6F3D32D
E03D64DC71629D041E4669A05B6754EE7CE90EE8C3B2AA9EE3ACC9258CA206AB
5A10743AADCF4829603BBDC23C9F41F24A479F827532A008C4373425A53658E3
D5CDF2825B23E8DC250FEA26AAA18C12EBEB518B524263D61E2FEAF705721361
1FA533723F7576FE07C10202637B079B049E4438354CC6B692896971F2851359
2B2818D64BF6F9E601EDE032D124162880AFD39EDEF8B54FE04C38FAC85F27BE
DECACFC93D5466237119A44710846BAA3C0E28CDCB4D31C8E5E6DB585C2DD28B
5C0305C968BA01168372D8D1ECA5A32CDF25E34A95065640E188384CB618A3C1
122D1D8A14A05A7CBCF9E5DBAF7FAEC6E45444E6A61B9F3B463DEE44CBA80C23
4D6D7E0D6A70DA9697A655299F5D047CAFDD08829CE775C1F5D2A21749E1289E
706CDE820EBDE531A007D8D7FBBC3C55D1075B6E852A43F87CA64CC2F7B1F429
8B24B4FC62AA06FDCC5D800DE0FE9CF57C6AFB258F73816CC190CAF25D9965C8
8F94C5833C98E7E802CC91B546F554A4B9785B4E057F011F3661B2D8DC640B8F
2494EC316A5C574393F754922011C0809474D611522E42438EACB09809CF4419
424CAE3F771C7F5ABFF5C667E681DE349EB88B977D15639432B31DF296E51991
008C03514B0F8F4C05D9FA435C61AFB687422C3CF3ADC3A1BF06F1E787DEF42A
610E75281447D1B20F0D8EDE5E0BEC400A624470B80644208DCE7391C7DE43E8
7335570FA82647AAAF3DDC1CB2A8C54398BA00BFD398B6F41DAA0D6861C66AA7
F5E3299C87A15CB357C2ABE940D44DB17131A820C6179A8F984CA14059B62F59
10268E28689F546805A26884C73258346B536931BE93C0DC2EE33F6F8D4F3AF4
B2C7D95E63DA3C2949D6149F60EBE5178026FDA78096A06C0BB879D45CE22606
7E71F8C21BA46E833E6C0DCF6556C1CC6A1C88EF8AB97D72AFDF3784DC26B85B
DDEE6500EE00260B500829D7DDDFCF2C960CC7D5E2182D31F96F99C09696A838
27FA6B0CF5C0E809C17938DFB01CBC782B05978D992E98804FD7D591A617EC74
03730DC7FDC3F6298C4728CE310104B6D8A1012797CBA8969611C3EC64543291
A495B9416E208F20774549A2D4DAF2AB5AC55D031A2A37B652ABE5F7552F82A6
C3CF2AE1EEF0F6378AD6C04DB0CAE2B540C9D6B45614ABFCF417F6FD17A704C4
668F6F80F90AB1507C765B5E26179F4EB2D5AFBEC53F03AB51FC8A49BFA49E73
E527E9A6488AB074BA7E1908A83110272C851191FC3D85580E60350C3A635A2B
883261095DED9C73630F0D42D0185E7FAF033AB7AEFFB9D6B061E38C41D5BF38
ECCF14EE2FF0443BF77799E457D5902471367E4FA2CBC269D90D21B62674F16A
C59608F55AF52A70D84B7ACC5DE6C22DF58627399F63ECFF4FE661FD5B546F1D
0D83A41379B0ECFF59CE398BBCF79F56450208CE849B2FFB6FF72A3429C7FA18
DF2FB726AECC1832A03C2287B65F6148263D3133C7200962174762F97B1EA411
C1B8981A6EA85C135F60246D47ECC90571044E7021EB41DD8C8A820D032D68A2
AAD8941FB7D8C5585C31DA3AB77AB0CD9E6DB66F4979A1C73E9CE4E8B2ED99EB
20D844D0320480F771183B302FF55667390AF2E314BC8E0AB736989DC06DEC3B
15060C553536AFA1AB550740F72AC56360C25E80658F0CD842A0503F8EF5442C
290FABA63B910F501A93455644ECF8414F66199ABA373DB1AEADA9FCF9B77F98
84F052D1DB422D245201FBD6463F31D421A29693C973462254BC1B1501FE2295
3A7743F8782BC8B2DBA7164BC3B644E9A352C72B094E60F2C49ECF4DBE55F1D9
72AFABF04478516C42AF46BBEBC7271938CE2D21625A631D4636B2687B403955
31AE88840CAA741E88F8BF6CE7C365D68A64D44FDF8C65B8FF34647199222AE0
EFB4DBC694919D4F41D01894C91D8E03F68DB551451583AE4A530FEAC44A63E2
B90731652CCDDBEEC5807B261A985F7377BEAA49275B5E62BC871BCFAE9AB641
783BD2E3D3B333444BEAF07554BCE0AD72E176552EE863E10B8CDCEE93DDCDF5
BDEFB5F08872C77BA070C12944DB44B28CCE75B08EC85DF704ED1096FAA03E32
EB7446EEB0E9E4470A70F8491873BE43639CDB2FF3B1DC5D4516A9D2E305965A
A02B8A67AEB04D915DADC1B84A55FBD86ED12309BFBBB820595FD3F8C6B22C87
D39591A07849F7BD81D1A1897D0D79E3058C84E75904A2D372069861B0601BD0
EE2AE975849408D3A7D043213910A9621B1CA0CA8E192532476CD8EA1F5AF507
CB853A32E8C79340838490E80AFCBB1340C523C7E247273704AF5EFE5BFA05FB
79F31A554D8BF98B8303CFD661ABF9A72CA619501FAC20B24CA1AA56B084704E
D9C833CD633680C4651B72D81CD058330680AAE27267A119885770C59DE7FA29
68D4647A526E7133745F72BFDF24F67EC83D687FCB4D1D87CC406BF76BDEAACA
47D04546EFFD1AC386043D6E178EC606C8B9D7D6BA0BDFB13866FDEF0C1BE93B
62AC49659B3B6867FE7E2AC972EBC0BF7AF09DB47C9634D586570D092AFBBF50
7E6262226CE73BEB52C2B8F5123551AE8EBBB2A9818EFA495DD7323AD188214E
C435BDEF282150CEB7A8F0DF69981E9492DEA2B5C5C11F9AE7F2F8CAB8A9524F
8E24ABDC6DF356C1DD844D9C65C3A5B0D92FD836D6D75C10FB83D7B0EB9DCE18
9314BFC6A128924AC8762D4CF64802A82227ED89B7E927DE87A8D4ABF3AC1E79
AD315CAA69F4DB314DC26ED5B60252DD152E0A13099560387BC6B7C2CCCAED34
7A6C741B8976945E19AFB35AE83098F89FF38B30D840A9079480F30EB64479F6
BEAD65DDA53F44B6905704CF35D7BF8C3CB2AFBE30974900CD24D7090BF490E9
977036461B66EAC5BB976C6CDA48C562A5BE309D5D926AE5C673625845E1981A
3317AF9E32156D67F7A6D7B5F711E2B3A8146BB249CF5A60FF387D2E516520C7
21520580C863AEB9F26D0EB2999F1D23C2A1D208C0429066EE18CB0870B0DC25
F2E3490F98D5B64DFD240A527264178991EBBB9338766F05519CEDD80DCFF585
F81454AC7D54F59C5D94588BB274601A084A49D5E120C8C3C96A3D38A88E5D4A
9559465191633CE38B7C706A15EA93F5FA7800171D760667E1336DDEA8CB227D
B52D3E7748E7BC0B19A3C64DB376D4861E861D493D49DBB6803FD753A9E42699
2ED6BC8BEFEEAD49201F5939C9A1AD845676304587BCD57E944930DC45B3A6DE
A766EBCF15CA68D755C30E02C012629BB5113F915EB1034808F6E4E32CEF72DF
AD9C60730CDB6C87A6D3985FA02BCFDFA7B2AEEB52D242448B756464160CC70D
2A8B16FE17A0A07AD7169CF5C854AEAA3FC89F4F032696728CD790989027AB90
43E20F807BC9C2A57259E7486479878FFEAF3702A7C45E4B09188CFB4AC98BD8
AEA47E49D5C54658E35E1A0E9807D360DC5F76FE4F4EEF7953730290DF568B81
8F514EA832662C580500C0575C9B3D97A8342333B1C402C5557E376495A1AF89
7DC7D31D93C6FA6BA49EA0881583D592358BD2E97DC820D7C917B3F33C12D7E0
B65E32A8EEA690C33C850A8BC6988EC285C91B3A101C9E6496AB07A84B35F034
8428B104B112BFDD85257EB6A2C747CF7113878FC1B0947296137880FD3FA76D
1FBCE0045C8F147537B7C2221103C664299A3E517523358DE4A06B547EB33806
C4F943CC8F1342FC9B8D75BB691459DCCCC211E44D10C0CE6B2EEAA9BD1DD661
97614EF00EAB92CBAC25AAB048F0EA0B18F47C1E9E569829577BF4A90C0A7A37
16E46F464A198EBEE6C791480ED863242A2203F226507612115330743692D0DB
C70707FB786ABB0F9A79907A37B4A5F808BDAA36990570A1FD4BE5ED75D83C81
74AB99A32FB1ADEB641E165133338B689AF6978D929610EB3B5B3F86179CB516
D7287C54E86320D7836FE742785B93336E939EB40A8E211CB5E4B0E9313749E4
36516518542AB92BC063CB94BEC63AD625D400528D5160C7E9F656D93EB214E1
FA04F01DC568F4E88D7C1F3AC239ABDCD32171C7377F7EBD25E19922011EF603
6096398D8D10ADD46B3FCFC12980C2E944AE9E2EC05BAB0E04758C7E6989E631
EEDAE0D53E90DFE6959011C9F6AA26EDA302B3191CECF5AE2FE329B0AAFDF00A
0A3C2A83A328B249EBF2C31AEA9D19FABD566C70AA8FF8597B279B8FD1B911FD
BB4D30735E62DDADF546DFC4B11F89A33FAA0EBEC92FEB04C3A6A0FE09FB8BC3
793DDF6D268B4C57CC51D4D02D3708076C63A492573963E36348F98BD220C176
86C03DCF62CE6FDFB4DA6EE4A4F8124CD521F9CCF02C0C514755632292854186
F14A6519488064018E5A6DC2AE4C627276365855F11CBBA6D747BFCF40BEAE35
5DC4DC23DCE672B0B37D0C8F4E9E27D5F96361BA1847D767D4558876E85ABB0B
8396FEE0C3327CFFE87733BC45355460BE4E0C5D87B5B3B91F8CD458C787BF1A
6298477272F3571958BB8A5A5588FED7F69020B67F532BDE5DADEC1223353192
A043D952F5CB93C8A1FDDC2DE18252CED93785F720E4DE92960A101294ECE75F
FDD0EFB23B07EE7D9EBB4B4121CE793F3E7941CCEBD1DBCA6DB086FC994070DF
CB8299304A5AB02D643D8B74E9D7A6776A594A9275834F2E56C9A5C9BD35B8B2
88FACA03564F2C662A9898569E109DAB60B870AD2E7DAC2D9EF897C7DE43E873
35570FA82647AAAF3DDC1CB2A8C542E79771FD1BE21B1AD5042B5AC5A138AC97
5E2059FE4BE5FAF5F1B4DE109C3E06915E3461C79E71BD7FE5E522400BBD7E58
F62CB64109E9856CFC5D2A62DA183B416ECEDE831960C3DD7B0774DDACAD3CE6
8D323BA915C109523A9DB78795CC31B01C879BB44632D8F9D8196B6AD25728E0
23C49ADD3BB95D63F623F56F201FF299364225E29BB235119311B9888D0BE96A
C4BFD340BCABB8EE5CDB039F52D3308C57734B39E016FDEDA848A63B7CAD7C0A
2F5871C03E1CC8E03D38E2DF046BD128D38054B6D0BAF61C28ED46A45A1DEB1C
93FB1AEE54042F3750D1F480040BEAD540967E39CFD1466F6E84C2E08AF87D35
0580C816D2DD6A791071EBC06CC24C5BAAFCBDF5B3F16C87E2E8174A8495A573
F01807A82D6A0C634658F1BCAEEA043D893C2BD21FB9293BD39BDB9385881913
1F3647E51B8F29EA26BC23A46914E13ABBD241984CF6E0EB61792EBB3A7349CE
7BAC7CD903D0AAFEEB0DD8B306E7AE7E80DF9BE7062DCA91768C2C9CB6EE2741
F28F26C0FE936EB5E26CAD7951FBF3D7B27121FF01DEA6F49C7A4DDCA41E75AD
0820BB68EDCC2143F284391BBA9910455537E53820815555A1051370EFCD4B05
86BD44046D11FFB7E04CC3409440737FCCF58A9899769EBE684B749A17A443B9
AE2ACFFB374247724A3901FD546D465B4A494E8105B9D13B930E62909CED0EB1
8DB2D17A7C0FEFD23E818C9577AB8678D40C3B58D8A7F65D9BA49E0247C27FD1
1908078F25132450F9540DF8438A07647427475D1BEBCA266753287FAA1AE38E
B626E9A41CDC6BE62BC7BC9D62D7F3EEEB60A6554A2CEE9C22560739C926926B
7A16A4418A1C3FA3F71244C924A486B70892B289F75F5777972A7F5A8E1ECA63
FC9A5ED285837271FAF6CC61167CC3D6024677A39CBEF701D77D05FCB64F261A
D82C47DA394592CEAAEE1849027B06123A1A004D39C1DD6D8086F7ECB0658FF0
99EE65B791C63EC6AF40656D93D61481FB63F546AA676CDA522409846E8C5235
8CF3EFBD549B2B38B435327779649370B565AF4AF38BEE8E5AA5E09325C6C95D
E1A7D7574828918BABA81A5F36CC8C1A9C5A9DC7ADF08C5EDE73C5486C3A0006
086B85593950165238FD9FEAA5AA98B091AECE8681999D7C8CE7081C6AAD644B
34DD12080D7BBABCC56B4CC24011214CB26E1441A1ABDC4C1D212BE976064F17
6A9CA3768590168A5A72E13F140863D5E14C5C8B11895AC0E79C0B211C49ECF5
311A6715C3AAB9D7A991233488B2D41B812A11DD5B13F2E8F21AB1CB20535674
6638CDD9FD68E308DDAD1FC23B917C6C2E033240C86703508D2380278FB9B8E1
24FCF0BA1AB7FCA5E3B9A0C63FADBAFA0F37397279F2AA0C35D2B3900A8A6A0B
93FD79ED65110B0037C9B5E51F9C778BF56A9F9CA83ED2AA40A257D5D2594D1B
D29C5695CA9B97CC29F189CECB3C8BE1C98DFC8855270D7C37776F70B8E51E12
F0AD378B8583FF1901B66615CC18E10CAFB985B78B6479035DA7CCEA54AE68B3
54F7978C76EA1140A78AFAEA913AE1C7576E2B10FB4EDC1C8E833686E124BE0A
5584281A2A331FDCB5970A75A2102905B8CCB2F61255AF45BDE940DC778D6F8B
2EF579A535CE2816498D130303EAC1F42151470F6C5673D7CEE75B91B36DB308
1871CDB3987169479C4D6825FFE9F98963FC566AE808AE20CAAE74590B3DD207
F1F254F78FF9D34A41EA24E7A2ACB665959298984C7776BDCC393738E3CEE817
0E3E5917902340AE06FF50AEBF8AEF424F2082FAFDED49499FC805AFD18DF56F
31BB926929225D3F1730662979FD709E8ED21757A638B2E76FB46FBEF11DC1F2
19E5F31DA8411BD601E70786FFEE4C4FD87018D4F17E60D3CEE00CC979AD410F
813119CA479E0C466DA9C531E1F1D1F093F794EA44C40A9D572FF1AE3E7D6EE6
3090EEC569D8FBEAF4E5CA52AF81F8F2FFDFB1AA787428233F8377E4E03E6CE9
471674E5EB30DFACC70B239D36D31E5808B877D069EDB2E2ADF1F8C6A9841A02
F0EE31E786B24EFF373C9DAC05DD3217C873861C7195B72AE08A0D398286B2FB
9050CA34766751BE83C8493F5CA6351ECB3F8570D5DE3EC220C719B63A99241D
6795BEDABC7C47532B4B80F77BF6EE43CFD08C9CD1F57FD3C2604EF52210F343
C793DEDEFB0A2B19553177632E74DA5ED29F290C37D03C0EFFE15D0917BB65C1
725BE19241996C2FE81439067979C5720508AAB6B59E6A742ED78CC0B5926498
262F41201EF43B925FA620025E4159FC4A6C89B54220134BD601C53369C5C54C
6379105192186BABC97E4C5C07911B3D5879328A68C16459A941EFDBFF08C8F7
92271EE9C90B85A9BD24D2510F29416FFCF7B4C92A8EA9C060291D0A00F104C8
75F42666FBF55506187EA7029300C9E7B5CCFAD4EDE9D07514C0DFE8924B639C
7E9D119A9E182646DB93A34C6058D7BFDF2C536FA78E50591F23802AF633800A
A35114F351AE56CAAC815DB850B08C1CF29C5F0DA0ADCD89F76167282477D4D9
1D9A68EB9C62616182A171EC01A441484B74E77A542ECC85D2B3BFA99F5E6438
A97F2F8FB45586935040E889C11DEB3E84C59C74559B378847C0DEEAAC9BCAB2
87FD70FCA5341948B40779FD7BF2C9579D2ADFA38E07BB733626913BEE60D66D
11F17D655B3524B3BE4CCA2120F5B010131BBD9138C551008B5D8CF5EEAD804B
9D084FAAD4A398EA1EF91BAB99F653A491ABA52B3E358AA1F7D066CCFCEE2464
5E5B7DADA2CA4E9EF1352A5C24C2862B9CE347649AF59281F5D884990D12A619
A30E746CB68E0FFFDF91A571119CC1E488627F48327E6424E3711707A61E177A
84043B79ECA4CB58D1A0084045083745CA0600B47434B13BBA570F0A4B9B2B9B
F0230B5D6AF941AF0D1C9D020A9026A98A890AA721B6EF5AB732D7BC7CD32499
DF1A8173B339F30E985154CA1DDB4E00B46D907460F0B1573DDA91557EE5BE4E
CB3CBC93A5D50D1FA412D9283C47DAC054EE6002D0453B026032F2AA0217FA1A
FBA7506FA70D8C18004EA974AAF3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC88F86B07C1097F9C5C5673B88582CEA8CD622F9B0C79
E463DF7F2F4C6640FF3852BEB520F7B23D8A22E7E601EF9CC6D0A2E6E82E6840
65B82C6A3A6692811E2B4F57723AA3A6E27076A2F63D6CE1FBA7ACD844E732FA
02797B386F2EDCE9FF9F84EEAD17B366D678E61C6176FEC09C94B74DFC090CCC
40AE9DA65E5DA02E7A7E8A840B45B752AF11A279BA06F821525DD0F477831176
84C80B29D318260FBC314986223F9EC4DB5B0EF2EF5D424C6DA581B49C709E1E
98149FEAAB15DFE7F94977CD2041DEBCB1FC8F4F3B288515CE43713570027C3E
2D68BB99DCDE2D950740A8EC16C42EFEC22B34901DA9B302C7B6492ADCF1EE4C
8C8D102B0C81DBC566450B0EE201286021C5A953D8DCCC8637FA5C02E813A318
F739DDC20785E785D3E86FA49B6804313BA4A5FED7BECB1EF153B7E79F9F449C
246733E425AA6317DAA66604633B159186F8846CAC78A7DC80655064CE701177
534AB9CE3BAE1E963098AB8D252B6668089F50930339C0DB023D08E56830888D
155502F957B20E26619874CEBE43D125F6E863833E8FF08EDC1D254AA9E35504
8C87857CF229376A770DE32EB015E59A1DB2C85C444FC05B1AFAC1155DB20674
DEC4349F961F2B1D6EC9F7550BAA81946B5746D249C81453385E15C2FF341B4A
13C0698565B34B714B6335A1B02A1C7D0739EB61C72A116773C7DE0CE7B1033A
E30571EE6A082AEC530275F2B71641A1B6189DB6C313B5CB54A9A9456CEA99D2
367E45AA87B3E75C48FB9C70F33932772E45A6D1EFE98E0B9CBE3AB88104BB6B
50A734BA667EC56978B3DD455B40964DBE6B8CB92AFF9801161669B687EB8F76
B8EECCCDAE093B74A454F11A7EEBA894D9B2DDA7BD3B8039F87169C465BC2FD2
DDDDDAC4DC88E38608500737AD16863D1F03FA1DC9A1212088496F26419F51AD
245098A9CFAE5B475ECC608E913EE027C4A7E177C396385BFF862ACED0E5BF6A
B303FEBB2C20AB717557BAB2FFC553ECFAB8D40BFC83C68B9043740852B45766
D01BF50E949CE7F48AA24A103C06E686325987E673613D324873B7B5F6523542
2070D5B5CFA072135E19514ACC803C1C4257740D8BF4343B283D1E9906259C74
BE3535877F54B6215EE9312B3E923ACE057116BF3814A94B61B1D77544FE784A
00450EA4F00EEEB86F81EDD182E8B535B79A9A05A2C8DA8157D632AF0F1DCFFB
68A51F9AA3988F74C13F38BA260070C4B4A7735320FFB69D72EE6A23412F47E5
D996B6B856BA8BAE4A5182495916FD69B176E7F8730A2E41C74ED56599CA1B20
3671F2DFC03B251D8BBDBC74D11C8390960420D8FCBD38CCDE4055362F60BC00
5610B0347D496C93E2020DE19C3147AF1B000FA42214A0CB1089D002BECFF73B
BC2B88918F1967AA6877ED67D971958F3D80A9E4C6EB4E8174C2AA327DB96012
68D2C877ED5AFAC1C38617A3CECF4206E3629520D3AE254B77057D96CFB3DA27
22ECAEBA773E594003499F0F90FD53C30FDFACF1CDA3F5E40246DE10DF2BF4DB
56F9758591EACAECE978D00E351A980FD7926DB858B91872F91CEBFCF19A016F
BDD95A9F649546B511C9DE4C6C879BD208653554337B7BE8111104CA93430519
A958237F71519EA6E01C590C727BE5E3853BD2C3CC1333C152E1AD2F0F3FB095
DA2E79DE1285C2C9181CE8AA4D6BDC09C1D10EC9DF14A125B028340CB4584261
57AE838CF5762820127B41CF130C9DF7F3CBC85F157EBA657E7B291E803D1494
0D33B627BABE9BB084BA8FDF6AB461DD4C75492DECE2B2065F75805CEECC5DD1
10B464425C29B01CDACC78319795476956F8B281EE0EC5FED9ED486963B39321
0EC4986177A8810F7ECA0ACFFA7C309C31B28A2742B2D17C4775980DF5113EED
69024FE2AEED6668A03E9E2FD83A89B49CEA2635B0438B6272B286BF7BB7B00C
9278BB0428971C2021049E77A4ECF373B04139DDA0DCA4E7A5E00C91D49E564F
B29D91F2A2CAD038E2D5F9DA609F4769529BFAB0AC747C5B8F4607FCBEE97541
FE06864484B6A75D42BC549C00AE99284717DF03C2235506558E46CAD3F1B10F
2DA1173ECAE0D49FCE1A061F5C3F8885834F8A82BE9704A7AFA3A0DD61977ACF
31C194D4161C9E9A8F050C223622D4D999DCE23DE53FCEF95CA9BAFF3BC09753
CFBC92B1D95ED3FBB8E563C27B8879359BACA05B4B3E496F10F003803965C1F0
595E6650E02619733CBB94064183F60ABCDFE5202E184AAC65EF0DEAA553F02C
608D3A090AC466C81A2EF7C7A9CF7ED917A3144B1F4F352DFFFBF5BAAB10A4B2
A6A297A5172F39EC437FF51CA53E07A1B9AF5B5156FB09245CD1A71463D6B3AA
81455C0AE520FB3C8D8E3B303C0EE470AF6D17F96866B582A04F8FD37C838307
1796D1802E55FFB37E406149FD8FA5308EE4987C0C9648AEC889A6B7095198D1
423C7A2BEB6A7D7635E6AAB53716FB1E8C20558916B3624592BEBF74CDD683F0
638C05A8F07E7627146D205294817A2C2A5E9DBFA1E5CBC68FCC508D7ED0B64A
BE2421CC292B182C0B6AD25B7AC9F22A859BB112E5BCCD1A0BD0F42188ABF6F2
29DF9229918FB0F239263DFEF0E04EF4E735125E54C154CC23890DD3EB80B970
0F1EA774F323234C96D624E27643410FC7B7ACB2D66DAB4B7F1963C758B4E8B5
F253AA4AECE7F18D0D36D09D976EBB59DF98D1E8C8DC17ADAE661743F752A974
13F98F3E4FDC5C5D93C7A3F3C5174EA4B8CE1B42A845E831BFE8E48B23E6CE3D
A59EF6E5A36FA7B29F4E0F57400F11885C829FE578D58F12113F07CB4944CB52
C82486C63DB94FAD202B31060DF855845AF78B5C2649C29308AFCE0FB7822B94
3F225AF4B92D4271948511D72A119C20A365BAD98EB6AB61235CE16E131CF902
C4CFCEDD7AC76F7440F09D9966B6D64ADB2BE4C288248495A40D198826F1FB02
E44BE8683B4205B75BDB011A9B4A5BED11D9FE90127C6C6AE50F14C5E6BEDC85
0E8AB9FBA156A00CC84264FD93F63B1501BDD2BD3D1A7CC84F1C218D23DCD69D
6258B93BCD6A3FAAB64DB80CAB5A2DE42DDB57B526036EBD078D8A179ABB2C9E
6DF27B3D28B972E6E4F1F41721A01E39A156D1C3536A3CF6262AC3D93E8CD79A
0CEB40E7EBBD1A7B9F9269374253B85FE655525A94925E68EA975478055C3325
9406A6CC5310ECA24348DD3EDB147E5E2206FD45AC4E5750F37E9A7730079B39
F05F210A671D36458DDB84C57578E242125ADEB4E1A356FB67B4F4F3F708575D
2E133BC3C35955615E7A15DB15D0A40D7F651B48B9A209C62EA05646A7211873
02E0DC7126C0B57BEED7B92AE722C326065EF0BBC710182EA641AD0CF7BC29E4
61FCC8E7A52462E73FF60AC0C3D8C87A87FE2F4217B585F21C1D880E9F115772
028C95ED26EE3EDC49F494A19F6B971D56099C82FF2D126ACAC3B2AE33BBF278
5E1503FC9F4CD14968CDA95B3572C068F48FAD6D655664473047C24C1B0FE303
4AA391FB20073994876978B88C7EBD77AF9BF9934FCB90712344708E43335CDE
1F5CC89F6C793284C1AD417B37DCDA10CB90C6A6A89AFD4F55BBDB57E4F44404
E37FA651DCEB1383E4E3A999E3DD54C3412407513B6F778E7A4CA21379EAE42C
840EBE1CA4B2562C058B8C4E0BE085470AEE91CE9E1A571F82902670F3B6231E
8573541801E1B884A635A73EC6B6F308DD36146E413A2316016D0D26DF8EF94F
A44A4B551D7AE30B7D63735065EAD1E9B129A192B449AAF69A56A92E7F2D8119
61854DF1AEB81083145FE146893361838669301C62A6549D3E2688603E57ADC7
E1583CA25D3B888001663F70EBC82966B197E39E649E6D1A8CC22743AE61EA1D
3E2DA8EFFD2BBEEFBE663520CE539371439D2C12E57AD3D97FC3A47D8823BB04
EE84EC47C12536826C0B6FE62B496018C719F5DF66EFCE83D99262D417C89FF5
20256A1C41F8068D21DBE626F1CFF7B376B0E0EBF2DC8B186534A324A5C4127A
1DD06FEC501726BCA3A0DD7C7A439800EC2B740115228369FE89D391CA583B37
954E08128FBA198CED07B67185143CFA97B07FEDD5C7D4E5BFB6D3301DF0F314
7C8D8EBC4BFABE94441F40BCC89D468CDCF8DCF38BC39770BB0DAEFD0EE13946
58CD42266081345215B7FF9A7A418D6B4D10222E2CB8D177228B6870C124B665
996BFF737AAF435CCF254E7F0CCC27F51F6EAB2E3D6AF6A506C26BB18E3DEE52
9EE588244FD7873D67609EE442AE05E38E0792EDABAE348A5A2893AB3C838136
4E5D980CA0FB4A5AFC465B0F63B7C125F9F3A76ABF8CA488DC5C45D35B2DAF68
380FE911D40023D78EFE59AA3A980562CA065AADD1121A6FC190FAA12715D794
9E2400FB3AC862BC273B6DE8A14CC860A89BE0943E83464E9F570601446C72DE
680C65BDA359255A8B5A3F4B1F72BD17EC4CCA8121C624B266860C188AA8E01C
739F1800057F71CA37C994A146B02CC378F8CF496E2951869A59AE0E0B79DDA1
B643A469D1DC4CB9F859494F1A5A0419720517285839021564BE7268C476C15F
E51125BBC53E1AE2B814605C249384B630E2814931C72F46659A97084629C334
5DF34AAA57C2F6E236E1B746DC71CBD6FB4ABEE20C9961450622979C99A1F229
1104E486F641A4CC59E382FD06C512F70D43301D968C198A4FFC74C95DDCBBF3
9ACFC32CB3C1A83A3F4B6F4E773A6684B610E5DA34E4E6E3B3BA70BF5F02AAB3
CFDE47D8BC737A9D3250A249D994D4B5DDE033ED94ADE674B2EEBCF0BA0832BE
6F601E7980BF8ABE6DD3A62D4B6F864C57677C6AE63994A02D54A44F58507E03
E8C5D698CEDF8FB7C75909570BFE875A6D265BE53C18DA60E64B58D2525E56D7
44A854C9DE38661D300EFF193FD57706A34DB3923952763BAAC66BDC9CAEEB7C
2C1625669B7BCA9B26FA39441AB666BBF9F10D4E01C0950FB40AB95724B1F68C
08E1ADCE593BD9CD495BF05C181FA8071BB7A477E5751C4001E6B989D4DB5044
A2383F9FB5B664E807690D220066FCE2E8B7FC021E9A1B7118E879DCCCBA4864
82705FC5C44636B69EB94899BE32DE196C4152DEA437AED4973F05E6AFDD2CC6
814495B01015BCC8C70EE502E2E0CE1784764D0D9083E33C67B438F43815B354
F583C8DA2052C11F6CCD9AF083FC12B2F21B296981AC944AA3325BB9C8524D89
C39B10EE367F831730EA022E57643B45F8937BC324E34C54AF63F4691C5BDCEF
00DD70F08D7003C86BED73D7F0E3BC7CA195B21C22AC8AC4AAE50B889BA1C809
0D7575125F4FB7E534611288C25DE9F3B58765970F2973A448FF953DF197C3E0
FA7333EB51992C6D4321A5863501740FF7FCA4D13F966DED65DB617BB3D534E0
94B5E8711C411AA3FDA4BFDC2529C3863785410020C445307E2B1690A7DCEA73
8E7488B00A23576CBAD2475AB5F65E598527E6D309D0281946E9EA08310B4C5E
D023F9A13618CA905EC6EB20110EA9C4389C1225278F1E5BEFCB5B328568CD94
C57BB204385F7D09EDEB77EBB26BCF52C9870141E19906E0F97EA3795CE5D964
68F3504E877B56400BB1B5E4C1AC0FA9FC71DBCED5D3FF46DA8AB948CCC52627
1DA8B907AA6AB1728D55B3388E7672CC31321562B6F1F0F51A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA4119883BE0E2CCD156
1113CDC4983460A31A70C6614DA60CBEA3A564539DA028D46BD8A6C8E870451A
F92C3A3D555E94EA81503E0D53C0AE8AF190625DF8F48C433C5CA5E61B61960C
10E340864F2D181B835CC0F9C87C9CC0E95FB3F1824BF5ABE0DA3110FBD87806
4770B0F94B263E2C7A3D9DF14D9BE01BEF9882A1EC2C8DDA5931F895D02E4FF1
CAD0158061CC26D5256590E51541844B9AE3A861D6412B59941B7186BC31AAD8
9CC7F07EF9A36CF5C32F54ABEE8B83306227DF64A1F4E9B350DB04B85024FF0E
6FF4C8FDEECC5DF7106C24975E54928A3679928D4D84C98B3D33843CFCBD8AED
A1A74438EFDB0BD68AB2061EF46D65CA446C190A6BF6E0D8DEFA1E8EDDFB5541
473187ABC3D34172433CC652E9B2516AD0EEC9F452135D6AC8D97A90DD4C972B
69C05585BD438731D0DA714733FABC30765D6775BB68C69704D0BA5D6DE6BC5E
10342040FAE3CA1C359295C7D2967195AFD2D94BADCE1E95F17F0F95B5A683ED
8DA83806CBF2B803C94B5A135004A20823158454E29255E8846AB1AB9E444B82
AC000DE047EE32B5C7659AA3999D8CA1D3941D1FF042DCB7834420A2CB78723F
B40B625D7418A892CFEBFF58AE1CD0F128156868B917147969EF8319C216ED3D
620588A8D3D13C4737BB89F1FE17EA91AD0A119E1754916E4957C40F7642AD75
0E847F04D456B101A89F4E76E6BD785EB1F605D78CC0AB1425CEB017B47C1D40
BE68CE2BB94BFFF5120F91CB493BAD5966F870FFA6AE560AD6A82C3B0AF0C810
C12CA6C41677519886FD5CD163D6FB351E2918F4E5B5D5A27FB8E57A24EDF9D7
42EEFF2C7558A4479E25DBF75353BF0CB3E744B9009BFCB1D37E21EC06E4D7E0
2762A656C0E348FB75DA17FAFCFA53893D1ACEFD8C3EB97C9E7E5C3C5A303193
004DF6B0E2446527C65DDDF917C6C8B730247D89C817FB276D85EB671AD64DB3
4BB09368AB12D82CC4A183ED86D2841E499B785084AA21B81AF837A206A50773
FDDBF92515FD7870D5A35EA64BA957FB2F6990DCDDDF2859681D7B7D5566779F
26081CE1DCF8FCBF985B41005EA0771D928990C0BA6CB7E33875B819AEB1EFE3
7A3656C9B2060A89B3D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86947215D
585BABD246585FD44C7FFBD5B878504A44F08C38AB4A35ED5CC53EE38F810C49
4CDE233ED8AC7E692EDA8CE219D733D37296CEE1118362904F622FC22656FA58
65B5E26CAD7951FBF3D7B27121FF01DEA6F49C7A4498656B8A12ECA7752E0477
CC7F945AA8CA30ECC8B017D3365E4F2C4D6F555DAC9A6D17C263F63D55D6424C
58ACA31C6B17A617B342EC92A2FB13D4FDD77DC3A85B2508B70FEF36DD289991
A16B4097497EEB38F0274AAA1341AD3BB645B0D7F97ACB233FFA576119456D0E
E8D5F85BD47E3C79CDB4AD769ABB374D1B705D61C428B44B213057725969D808
B280BE2A969D2207BDDCAAB6AB26EFDBF7E27A57CE61292AAD6582B3A661F4D4
8AFE06644856C8C9DCCC07407A115D6D45B7DF6929B1C79277F3957EA1805B97
8529CE833B1EECAF947E67DBA704AF3F29618A894235D7DBFC1153A5F74EED26
102EEDB139492E743E82CB61CEFAC99D77B61F60FD9B0C1645E399B20090DBB6
8DFAAF4C6C1919FEFB6E3E8EBF926C2A91C5281153D5B28BEE5E71772C8921D6
9D11ACDDE095D43077D6D8E8EEF114F60F85935BDBDDA3362A11E0BF7854BF4B
BC52EAEB261E696CD413485DF93CADCED318B5FA421EF0BC594EFBA262EB2C41
4E43D8ACC9CB195D12F3B2ADBAA0D95A443F525372BDE229F13C485324C60FD1
D7DFE515B666ED51FB61F69E18AF955D6620C95021DF41F66204845581723BB6
B76B4C3C2E2E5B8584AD015374BE36AC1E08E1C53C079B8BEAA3E0F907086AA2
3BCD6FA9812375C8E8D4ADF7A319E9EAC6238093C798878E5D558B30ADAFC1AC
17B04381C6754327FA7C65AEAC1A2839A9FF799456B6E5B9BF421E82415746B3
63938E88CA325AE4BC6B36475154CACD25A07C74FEAA2928802611B4AAC8DA96
F7CA93B7288B2491380B2F4F87646F6BA42247F5B593A0787ACF533199348D11
730EFF7C25DD5ACD0221075ED47DD6FE8909C387D8F02A88FD24540AD71A0FED
2665CFCF412B99167152D35BC0E671E657EDD876C39BA0ED4E790A79D8AD6723
4A2C9360790E4981671E3F898A1157850F48A5E0F299DD9078866AC4AC771A7E
ECE3275C26835080FD2AC78DE88BF65298A8EB4181F1646B5867D0EA3446F4FA
176517141B75FA51F69D54478E279EC2855938CB532FC260FEF5CF3FE05F4F6B
1A6AC463C1D1A24E7B41EBAD57574D43E06E13690F831AC63F570D466C8DE97C
2E08CC01056475E95FB467E2F3B08917792C1DAFD35FDA10C0E14D125C730ADC
BACC2CBB9BCBB0BB982F75ACF33109F8AE7ADE4954D0B1E1802506DBDA73CFA3
DEC72E83650F240B54E88E51C065039ED16C5B958CF632FAC74FB900E04B0B13
B26BFA8A80D5663FAC4A5C3CC6895C0717E2271C6A3F722B2F6C2CCB04097EAF
EF211683EB8F6FF2306B741C9455B48094D2958B832B76458887F0FD9D971D2C
75AAA237EFCFBE0F14F797E71B0E19D074858D2BB30FEDEF6C34FAC40779F603
770BA127BD4B9E4F5EC52314B25837FD118062685FAF4391CC91AC0ABAE56089
30E599D101B7ECAFC159AC2335D6DFEDAAD93A074010C5626DD9470582E82C12
2DAC32220AEE7C75A5BAC24E9E43AD56BA6B5B915CA1A908C4180B7DDB99E3AF
5C45072D5FDE12DD81276D7304AFF3059366F293191CE257782F236FC2299F6C
60070DD031F172CB2FAA0C0BFDAD40BD3AE7D647B0FFC9298FF9481A19CA03EB
E2F1EEE59A3D6E3FC23B65AED24295DFD94966CBFB46E98286E8AB5BBCC5A8C4
31D8D7BB6D38C459ED7811962AD08A130D7781F378AEA20293910A7716341DA6
4093C33CE11E30603EAD00851CC85FB116890A7C58F795071033711947B65B0C
07BB7FE129E446F1A58F097CC13CA9BC695F782ADBE50737CE43B15AEE7EBCB9
0CE9D7EB1913D307114496116FF0087A48789461E310DE9062984F6951B5AA2E
BC98536501922114CBB2D9698493EEFA925E555E776D6916E68159716FC183FB
83834CA958EF2A4210A873E6F7DF8F113E86D87F7B364763BBA1AA81F9D7B871
D7EAAFDE0578B3E819F2D472E963C4FB539A61127D80FD783E271DBEDD8994F8
A2E9F96F4F81D178EDFD36B63A9E05D8F4BD13318C16396253CDCB9E1EE7A887
8F02E0B498DE9C1A5F110347B7B612146B59530538023BDA6569691729EA004A
3D96F0FBB300F40752DDCE2039C3501C39A9BA928B1D8659DC61EA8FFAE3EF62
6E8DFDABF455CDF54137FD5767DDE33F596FB9092ECA87A3C469F9DC2A963BAE
1D62AAC7FCCED1E324FDDF9D8F218A4582B7A960AE3348951B354102F98ED6F5
CECE5E7AB94E4C153F2640352EBA54B29D78CFF190A9A579019521AA7072575E
04ADB576B153695BA7A1E5CE46859C2DD7FDE2A8A29D9B363576450FFA66C49E
1490EC01CE4136D822D1417AB863C2615FD14A8660B38ABCA4443ABFF10E768E
8F7111B56497589A27735FF35E7B24046953FF85DE78194EB09326163E0BE25F
EE7097C1E3E30A0E951D01191A5AA3F9C85EEFEC49D94E6CE014A1ADFAD5E55C
E850355395BE8CACE75623A92D174676B5E58B6E729BC52112E16D2D247BFA66
3BA69C8A18F607F86BE6A1662353BD71C98ACA71B28D8D4EC078B97C4F0B2AA7
E5C17900842424E029E4FB6984F61FEF1A5C7C895EA1EDA6A750662B898F6535
E1A25ECA90D105D3EE27FC276277140155EAAE420BED23800AAE1F0B28330E00
E9D210D7B972D494AFA5BEA7C9B47E579DA191A63FAB427A45CE4DB5FB80350D
BBB23230E36963118A600F83AF3F1902CB9FEDC0DCD19B1B812CBAC472813A6B
AA4F7CF2CCD726919D46FEDFAB67F546D20BCF6341D12694AB9C0F48855D7130
9D3C2C7659CA9D81B3C53C5B458ED1B685AE1B3BBE52A2860499616EE5597AF2
FEC93BC0EBC8415FAFC12C5777A08712792D1B44EE1C72727E7C3558821003D6
3EB45C70E7FCA7037D19B5F92FD6CEDCBECA38F7FA6832074BDE7BD4F485A93D
8FE2BCAFD3BCC4A79CA837E900EE8C130A72A092F8113FDFF381C8D237D6035A
F6A1FA178282D91A32ECB4733D35471A43C4AC733BB92B64091D3187C8FFB809
52629B43A269AB241A647B9B3C214F7042C9AA001D9B560A2465A0565E91E89D
1335338DDC277E4101026E3480A6619960C0A619B8A60AEE8382D921A46D8187
AE70302C030D29FEF6FD6AEFC263C2A95E45CFD448458C7E679092147F5BF9CC
0D4CB358EA58704A8EC8929230EA9FC04D479C6F4123EA812EBBBAC6B6F48D53
0BB1ACC78E7938A0A43221BD62CB3E9919166E4C5685DB225BD5B0B3AE8CEBC1
461957D7BAA20EB9168C6AA9E4248272F38FD2923A2BA43BA9064D59C171AE87
BB22E470702E25AAF41A24D9B74A0FE9BAF8DF5F77D27542FE4429423ED09D98
769F099C8FF9B12A99BB88B018D3A3FE7CE15CD0C1369B201B4DA7CE2B719462
4D33B42527A69C4F3E70CB6437C18A6FE63341D099B30191D50286634EF21C29
21B15AD68CAD72846FB5068313E89BA11B99573E4347FB11B98441AC98E80F6F
1927389F1E876DE04B72EAED243A14E0C5DBBFAE10F980A73FC2ADB01C926F1F
6CD0A92517311A1DE6A3DC8F7A01CCEB9D08C73F222FBE9366B3243C408FBEBE
D5B2EF67FB6AFC6817C5A43BBF3753353BFA8E9BC4034FDB3743E12BA469BE32
DEB307102D2286A4C1A7782B418578622E6A4E50B5E14E1A8FB5F60EF4722AD8
8C8B10C5EF052E53560BB2B7B7F0B1E400E9F96CC34E7E2C3CCF88A517FE6F9C
5E8CB76033CA32952BD67B6EF0BDA8CE6C8BDDB68BEA3E59ACFAB83995414E9D
3900926FA8087A61383E01E64C0E31953FB4FA6EB237F8ED94AF22F25DAD959C
8114343EF40515793A51CC50822E4C68A807C1A3FBC4EB639D2F6440DA61EAD2
A590DB978A39AFEAB4EC346F2673D1AD5E23F812083709EDC26146F2516D8425
D9A404B8B45B2DAF63E6B9CD5B9FCB899FBA51CB76C47C4BA4DDC4681B41A253
663EB31939D5CAA8B36A21B11AE0531B80676F03834F4B8111DBDC1D3582D9B0
4EEEB76CB486438D247D010060676164740309835B518BCF268610CC7479583D
F82C39779C65B01FEC15C424266554331231DC26D13208F9F25F7E8042488453
F891152A228CBA5632C5C642A25119184EC5A7034BD05D83CFC239B10415514B
89FAD2C001ED336615E9F77B8FCF90207EFCF7AB4D8D80796139D353197C9A77
0A1C99117EE72EE057ECFDEFCB961921F82DA0FE709B9447BB18C65636A8AF51
1CBC3BF180E28B1AB973D053D8D3A68592A56AC054E9AA49191C6A774F362772
67A2D8C37934DCAB3006734A2564BF7A5F846A44428053C6C606216322B5CB00
EB11973373D388351AF3E38D7D0FCCB303A6AD3DDFF2F57C704FD55E7521FE23
F4830EFED86917C5CEFF9ADFD18C0FEB62E93E8050A97238F88827E75E2F5133
9FAD5776CBFBFE582F512686F02CCC66343D83CA952DF1C68576FB470E8E0919
365662F6447C26EBEF90C3C5C5827A77DB585B1B6DD69E6774772F699B92F7A7
184A00FDD7F36FBF0FCDB58374934CF2F01C5EEFBE63A5C3B6BB37221F7214EB
EA334FFA3386113D55CCC4A16670BD5D8649B0CC6FD97A470EB9ED9E66709402
5A81C470D33021157B3B7E70B815F56FF5DD3AD6FC34DEFA4135B582C1F0286D
FAADC00633327021FB71628931D9362326398FE89D81017C8201CB8E9394CB45
F6F5C097D36281FFC726E6F6777C96B8930BAC7BF095200979771AEE3F8BB74D
1B1E1D851B93E01E80D140B1D3E84DC0A52286CE9CF8612D5A6B166FDCCACEA3
D4D346F919FF829316E7B9879BDF5D54EBC4650E67B8FE790851B1EE6A653D8E
A70106FC0F959F2F129E660074C2137FE6EBE918D5E46449525A4A5A2FC8B5A4
61462F841C697C15231814EA2F97D671F427C88CFD8E6C388E38A36437B7C085
B17C9070C59EE7E6BFFDB6FCEBC5799B4807519B038B56F26A59DA06011ECC75
CCA0A2F73DF858B6CDA2D02BFAB88307660277766F068F252FBF712D4F6AA9CA
51714523FC48BFBA19CFB00834C0501DA25AA2B872B756536736F4A79DAAC1A4
5A1A445244F338D090137284F4DD0C3FAA11C154881DAD9EF8A294FDDA952D6D
1DCB0481C4DBE8A6CC29051C715C8724E649F9FC87745C2CF446055EF14BA832
B6DC6A6138883A9959E2377C1B663EB6E64083D7EA5E9E4563F7B50ADE7D40F4
29F96D0DCE41EEC1EA29EA44F3FA29A1F5F4AF835B305DFD8099AE6295CE6452
FC984CD78021246F0C2147B13D704C0067DE90B53D9163DE8726E2AFF795B939
7057D3AD58244783E4BB0036D7FC5E425F7605AB2800530F414B89D4EEC51F0C
B7E9D9A86091402AD148C10C8ABA3F92560CC5A52C73D9C1AA2A57A4B3B956AB
BD26B40B67A9C17AB3E3DCAC7F57B9137AF0C7D739906422AF9E42B663611349
15143E2EE1E2B00C53DF9788B45591972391929A1D45F81E715F67BEECF4995D
C35D4691A78401D7453549879CEB262EB112537AAC2F5BB0BC9DC33B6CDC033C
E8F3027018DE88C3656A7D9095905AE89E0904AC946EFC2DA6641C7C5DDF1A87
6B9C097934A8DE6D8125514B17A8D517C377FD635ADBE9C5032A6D6E3B61DF0E
483D3F8EE5E825E3A35AD6D3ACBCBF4F8B6821501BA03919D714FB6647262111
3AD7BB240DE7DFBD1F17FCB93C9002FBC667A5B810B6655162AC7A10FCDC6DAC
1BC338332AF14A0CC7ABF8C79272E398A48E5761D90A31AAF9FCF6B7DDB6C6C0
81E1A1DFC931389878410E8829B436026109F2381E24C381E89EFF35CE1BDEAF
A26E11D89EFD21B11649C5F3C80FF3CBC35336244D8AE9FFF3F592BB136F41F1
1AFA8CC986D793BCEC4BB288C0DD7AEC8D6A3452F221D0151ADB4DC2C4625296
D0BF5E6784149C85FDA1FC19AAA54C49F6F0B6467CCFC54A94F447A97175E183
73A7A108C2925DEC6115C4D3DD9EB64CA74A51274134606E73A0D0A9ADE7860C
4632869475BFACC5E95ABCF4E50F3F746C405422CB00561CCAF1DAB63CD24527
A0A6AB453E463479846D2F8BFE9A6DDE8802BF1F9BD32E10F6F1C7F336F597D2
D23293BBEB9789B02A224D6E9A5A869916EE9CA907A17C647A6DFCBE5BF89E5C
56D299A58F1BFA1FE708F33BB3D8D3959AF1F3B2DB5A361C07E06C4962417E7A
08A12DDDA2501C6655411A4DF2DF658F42D355F5A3094C233FDC93CB79DD4760
26C29FA3779933221D8887BD279511CC1700DA348283522B5AEC490A066D1098
088B87B133755A403A3569748DE4B94264902235363FAE5B1687C92D7BF00C6F
8129E347C6489FD4FC798ADCBD4F3AE203A1EC23FC240D9E8CCB0619A3539824
DF0EEC80BEEB85E4A31E174DA9330491EE2EAD0AE6BC9EEDC8F5F46E2C3ABA05
CC5EA4891FBEBE1B6371CC3040EC63EC2A6E3A800AC4C443525D0FA14085EA1A
862537B0F53843467A18708A41B051F31A13C3EA3D583D1AA7F96A42522035B2
875A44EF7DAFEEC6B06D7DB4B3BE25BB29A426D048C4DFAF41B77E0C77F98BF0
2C1CFA6831E6F9E4D9E60528611520249698A92CF23C5E8F45272A00916DB48B
EDF193D575ED95BB4914D4A5FF9FDB15EEA40886467B15C17D2D0C33C824A507
CB2FB6E384BA8BAECE974D652D776150D7BF0974F5981679567566BA4057925B
6B2091FB0F74E34F73B119BE0CBCB087ADD6D287284EC93A493350028443C6EA
BAF73BC1B4BA53285959558A94120725C03B4132B7BA25E3B70D654CBA4A65F6
84055D47B5B0A3725EC5101252F708A3F3B5CFACD77F3AE5205535F92D8DA297
82A1875C6C8E74B0C86C0D388789DEC76BCF3CF60BDC1DB09467179704B9F04B
677AA145F255211FDDD21A92C01BD539EAC70582BC3F61529DE7FA7C8FD26CD7
74574D565B2B29AC4BBAC5FA2791EDB9B715F5D846F2220FBF861CC7166BBF91
AE735D522C31C5BDDEB04079726CA43FCABE49351B4A5FED8656B9E51CF05F78
7B2B565746C211F30813630C7EE7DC34A9BA7D7078E026DF89D3535C22C001CA
E1DC020E5778C24BB8B41BC7E2C78D6DE2F6067219784B5B33CDCF2EBFEC5F06
D14E4FB96F0F69193E868789380DC127C1A7FAB6255870CD61C8CF7AA8DE567D
174EC90945404C593B68D8A14CDBB4862DB295672C4DD02F60D1B016D12E9B77
E78DAD4F6EA76B85DE833BF0A940F07B363A39EC579094DD434C2DD9ED792652
C020CEF049A97F439393AC4BA9F2B4B8E959E8877C96A02F20FD53A655555608
9ADAB4DAF9B826BC53D97B41646EDCAF7F81C1D6AAD4A849E20FDEE79F2475C8
8FCC6DE30784A852A32989A63805EEEA8B14A64CFECA4BE78DEE307898437127
CEDFC2C10F778106BB2470BC1B9DE7117BAFF08E59FF2A6D83FE3845C1983D82
58B5632028FFA0B885BDD576555B4CD763803AE6795B23AF56AD8842B4F0D4BD
E28886E9CC715784C7BF7F0AF6DB24367F25818C0A197A853688E3AA3162E613
8192E19652A2390D256118B0867DA2ACFA39F9F6EF1D81C607DDC2409E18002D
2098D94298EEBD3E93E848FDEB52363762FC4E3150243B70B07A7F9E0672714E
2AE73E4139D9E156708E74475F36FA1D9905A3E169A1A02B17E1E5A321FA61FF
A83C5BD9BC2C57BCEA7F9A6886C9F13EC903E88782B3E3D0DC4C2312EC701C2A
55C23A71E12403A4435760E2351715605A9EE21CF836572E2BFFDD9A56E20DB6
B9E551F898B857200B7912C1FE9229D78A0C17BEC5FA7B6477C7E031912478F1
6B0E889127D5F0571E73928B5D4324CF9F0BD77C9459D61FC212A9A03F9BC4CE
F9E5B245064447AC6D1A15CF1D1A3797CFE85FB55B56AC0406E3D91564F0AC54
D70F8EFC63B94F73ACBB4CD27973C24BA04C729C5B9AF95E715EA4D3F84EE24C
324335A497DF0E519C84DC7C2404ABCAED0FAC8C87F13F130AE767215B039EFC
02996FD9F97B621F174AB176D508B97E20883AA2943C05C912B7B60343A7DC7A
3F6F1AEA9D81AF7ED8B6C20CD382EB8EEC2982333428081F09F426B9548262A8
78270D2FBEE37AA230330D81EFC166DFD53205CA36C6000BF23A56FBFBFE8478
F1CD00150EE39F08C945CD48489794E223CE3A1F5A84930FAA87A50C937FA836
0CD27160927CFF10954D7ABDFD2A4E3D180A2E97C81F1D635CECB8442177468B
4A69E269481F40D0047CD30C23158454E29255E8846AB1AB9E444B82AC000DE2
25912CB5CBA1AC1BA45DCF4EEA6EBDCD1206243547D9DEE8CDAEA25114CE2484
465A56A684012053B3D07815B31D2C6FBAE2C6354FF6A9769C00988AA1D2152F
B362622774A78B8CF1F442FF1D29BD05B63562D004710A8150CAAAAB0BFE5251
972EBF4F499020E0D842308DFA9F8474289795BA53B7B5F0A588E1E086955C3A
5E5D17261816759FD67200DFF251DB7C95C09E89EA1F66EADC36AA0A6C14A9B5
24F6026F3551AB2242E0BA2FA4BC0C1BD5C41F2B16CC460BDD35D4B5D1F13577
D32B095322C9DEE0ADBE1EB035C42C067B09C7EF4FB3B136FE6D1810A6497E56
A90079CA7DA18D25F3681DD0131C46E14DC607325351F930853B1D8F89835127
E6D5BE96DA47CE49840D1FB266A553D35D8400664F1F2E0C2F488BA00D7256D0
7D2262EC7AF31ACAC176D11DEB3601A993B6641E4A0820F81AC3AEBEB0996DEE
E69DC68C138FB4F7E2F8DD14CD82B634562E96B8EF8C66BFBF49C4C5B41E4E6E
EDB7B747BC6C90A3CD9FB434F4D12484E03E14C9CDDAC9A3482BC6A803CD7CBE
7297EDB0D63A166BDA4DC1E9C9D3429450A21C9EA0419C3A9D9E4014CC17E17E
0CA0D74E75154A8A07D01FED1C412FA9813664082503DA2F814211BF6D56A1F0
B72D203A7C5FF3017508DF9821E7D6FB91BA1BA0D16FF764CAD09F99A6F73C71
DC1C0D12D09BA536A97D54E9EB5D2927F8DD71C97EB8FD9C28D33AD0191A0720
E853FF0603877722871CDEA1DB2820B795EFF6DE291BCFAAC2BB1DEC703A7CFA
E5AA32CE2A37455D17E5B07CE7C933BD984EB713405D2B3F48124430C7B31F64
5AD8CBABFBB903B090ABC8D0222F3F3AB095198B155787439EF62CE27FB2A049
346C8F1199E124CD6ED955A7419322834327A3FF23A23FD48660178B7B0AD85D
F4BD83E8B60B622B7FF1AB525FFEA25F6999C734A9A1330604D0E557EE03662B
D31AF90587A45AE742EAA1F12E58DD926DED61EB7DAD6A6E543C730889C891B7
AF8A576C90A5A37C5AD57E9AEB2A8717F653103DCAFB468B1C3A1053C9A03276
7CA766CC888BB33D409B06D87805DE283183FB057FAC50C227D23DCA95729794
727B4760DF0B2C30952A4DD9221DE09A77B967058F386432FB88CCF943E43807
2C9B0E5A5B285AEDA6373F36A72267AD98ED0DF3B9E77AA94B712F5743176D24
9871734579130742C63D2919166684309A799D3BFF11CD94CFFBD59A1F51377E
69B684C70E9F76F39FC77A46FBA5A77FC0E0A9FAD85863CEC1B6C58479A1DDB4
0393AD8FB19DF89052E33AAE83E984389A3B3720FF0128C29E7F9F510E71D277
D9A29A3B03EA96BC30446FA34F89ED1837E9D64C82735A79BD25FADDAAB320AB
4B9278E652C2F30C6DC9E384947A14739733F9011788FF8C76EF12390D5857D9
6EA4D637174260A2DF58AF4C523FC0CE23DD0881AC3C816CE50B05FEC276B53F
DC21DE0755EEE6F50ABCA8C1757DEAE3F9E6D6626CC108A50CCC687F90B2CA3A
507EA8C1247118996064991B87024D2AD9ED5352981FD5D4C9A1E27B64C52E2E
013CAB33E2EDA7BEA5B305B1BCA2F3903CA3AB5D13CB0500106B9ED5D16E0B45
FDCB6775CB2A25E02C7BA32DE8458AAB95FFD539C34BA46D5A1E474437E80273
2D4B23AD08E64CD0EA508DB893617833CA769D0DEA864CB4353C49A547118A74
2017422B71F1FE4D576813FA42C53DC7E39ED5DF5D5B049F09A5729640A448F5
CA06A5256DB1C454FCDF55D0F95F11AE5AEEEEAD1B655F0C550D62DE43569906
53FB467B0187BE466195CC43F3BD83B2EB3BCB16D6423550A709D944B39CCEBB
8AA4C7012428ECD18DDA85175E3CE67FD4A6528AC35BBB8278191DE7BFB1FEF1
5ECF06F91A48B2F0FC092F034BABA5139548EA09718566B9DE86D04C3628DA17
09D36B12A911BCBE921B6481C78754B67CD39A57B6212B277531024DD39C3C6F
3862E1DA157FD3BC5AD0D0829C8800879AA4149F93605BA3D670E7ECD6DEE6E3
D1420CED84D3EC4901E6A1582683A09AFA8562972C5181D185A606108699ACAB
EF284C19F63C0674C9CF6C2522C968E959CC33043D9F434FAE393859A98FC0B3
EA3A0CAE063311CE1437906A0FFAC7846E4F1AC6540FBCB40BCF86CC6FA991BE
D6CD2F0AEBB87F65D5E67BA200E39A0DCF5CF0D4C547743FDD7A68BA6EADA895
5D5540308E63E5BB3DDCB07751782660484DF278A2B281C0AFC088A138F4740C
60492F5FD832FD290A6EC98B1862CA0BBA0FFDE0D897035A82372EE5B315A29C
309EBBDEC6FE4167A888E2C79ED55666FB6BE037AA2EB10BA574F4485259686E
420890DB1A817C856910A5FE389B1AF013EBCBFF2CF04E086304643B80ABAE1C
B6A67ABFAD25F281D32B528ADAE7F6D38731EF1E8CB0917657EB749149E1D61A
198920D9A45F49A8C83174A9AE3F8171760BB6F16177BC987B144E9FD272CE6A
23BADEFC0FC80B646A2FC08C867C8579A9B632488C35752639E1A74D9676E4E9
9291D2EDEF39EBEF8C5F3A75B96D98C17AC253906BA2ACDC44821688F4257826
58BDAF63E8792D79340D223C92CC04D92735D2F1F9D6BDE77DD5870A2C6F7E43
15C7D632524E9DA9AF125FA40C3BB93408AC884FB20F4F9874CB4B618C65A223
4457EC224689AD1B990732CD028955844CF37C6CF520A853DDC582060673605C
5438B65D4106CFABC41D1E7789BBDAB5EE420B6D136FDC941CE819C6D2BD022A
0E948E100C3CF0C05C0E30F0B3C40E640856403246955C91DB864820B86A6693
CC2CB6FD995D95B1FED23A9547DAD0E3923220E53C6287592E2E491B64A2755E
669A0FC07DA5BAF99675D4AE976E2399DC0992D78F7634C7FD5EB7B330D7FD29
852913C5BF793ACB714F9B797B266BB419E02AFA30376221ACC298E23BCF88F6
0EB7177E9C654A062ADA05D662F7C17BCB9130CF7D71980C9059C5BE67EF31C7
5CCC596B82EDF5BAED377DC4C941943909E975D03C6BF5FF5AB60CB740C9C49E
D9DEE46462D60AA6DB15475BFB798D8EC283BA08CCC3028052B810418619E054
887E4C92240A17C421F46E0A3F76D92989550979B01597E841C9FBECE72BCCDC
EFB7EC37E53EA6A5271ABE24358EAC006A594AFCB839778FD0925E2DAABE71A4
D0BEC44FCE8730E450F3EFF5C5CAA72856C1E874886D002232DB38E4735EC693
888CB7590966A0B7ABA94A048D3437ADBE66A53BE748C4E76934D67AA367955F
D47C9C591AC1624923AE6DB8994DD4DB0D452EE6690A8F3544BE146FEBB9F0EE
5CA712DF33FBA37D0E99953A6C9236E742E2EC53C778F677810DAD0C8F97E6FC
8724E4C8EA57887CB544E01D0385CCAA4076092B169861541E786BEB7A664DD2
F69B4CB22412ED814BD8CCF068E4A9031A608F7B812107F25CB0F1E088D2B976
B6ED89126259F62334091772BE60E5813772AF5C6C3B579FF8140898C203FEDA
97A3D6F2A8873C1AB977770C28A749378281E457DB2AE8E33FD8DFF7BC5CA9DB
F410B2012A04768967265BFF6E19CC58DAC1833118C74800B6A75952046FD276
7D61657DA01FE83C0CCEE4BCAA030C161F9670E2DA6C4A92A4866680D8CF8129
4F9DD1C68334BC7FABD5DEFEFFACADD5B64FF444A6F224303534894DF0C0EF54
F5A7DB9D25F0BA34EA859BF991D0354BCAB97DA3A81DD7539BD64CFC759E5823
64830BB77F218FB837E7B0CC4E46A17037708255E193225BC6803FC0AFD2C1B4
FF43DA42C96E5F24DEF721614EA3184A907E8B3083327ACED76130B3D20F224F
89FAB2AFD403C40871E062B994EC98B96F44FA053C6BFC36060AA715372855AB
F6ADEB270E710CD29E61733C3C9615D633954EA82B6BA7BCF4BAA29799C9361C
80955A9DFD53141DED4237971C437EA9923E50A4B786C2234C7A1375979B6AD1
E4B3FC98821263F1680C619B373A7088A70430FD59D711B74E05B1C74B2CE7A0
67432BF2EC6B5C057130D3F2F5DEFCC9BD8E80C4653E80F243C7469D4550235F
D56FBBD0E3DA0F7193EF72D6A2468AA85CE3353FE413F5936C3048F37EA24498
D710FE9BF4EFFE7CE5E7BEC7F978C2EC02F5B1A679AC464EFD6793D33424031C
F1081BB924D5BB7238DE5BAA742135A8B8F446263D959E820D785197C4E706A3
97A46BA936C77D9F03438EDCF7E3E932160D75020BB88672D0B85076F488D997
6EE2CC71F831B39E897AA17175646AA91845593849719DA17C2C908A0A4C1E74
AACF2CF881ED8286C7E7542D75056EE935C90E391DF40AB96032401C2E7F9755
D6B7476A8B541542C0EF9449E3526A1F8342517997FF7ED694FEF3E459A1E437
00E77410A768936D3BBC0E2AD81ACF8923A8561C489E756910ADAF8B5FAA2DBB
EE6F3380D9D968AF73E556A4ECCC86366FE6585FCA7416CC0E9CAD03F1FDED05
D36EB7AFBC162C8674487DE8E57195F9CAB7FBDEB03E95742E4F20CE4EF9D86F
56782807B3CCC409306CE32E4AFC03D7F2EB0EE9BCE224D632FA2ED253F0779A
B85163F7C8CABC63EEA5CD06F06ADA17E9F1B8C13CF8656B396D7145FF1F9AEF
655881C7990826E595752329A95B0CF20BD7A36D6814575336C0ECBB380EDA0F
25420C8E75244CDE8A6D90AC1C6399546861D62D06E124D369826569D2E42BA1
351FA18548AA282A217BA12221EC01667D32AD288EE2672FC1562AC91236EFB8
752AEE2BE1A1685BDD3146B97ED6DD52C89F1285B6676DA398B3A2172A2F520C
2BD673B870A54820A91DFCE1C7271B2D514058F90DA7B3F1DC33CACC40B73BCF
958472707786446963BE5910762A9ED48A905D67B4B687A3ECE9548712F07CCC
8B740DC8E5B805033B59EE276AD6B7422C188C43019016A02BB6FCFBAAB6D344
C8D8EE0B20DFDA244ED2EF6F5C3D50E1354362262885801219BFAB420F776698
1DEE1C6AA17116E3A4D19BE51F26F57091967AD886D051CE75BE050DED2B999C
B46D339DDD22319BC0732326C35A3B1EE256BA3BF562260792EC1857BCC050B8
41774BC20AA88ED3F6DB30E08D9DEA3C0DBCF7C3B28F015A573331E649D87D91
2BB83829CD6AE94776925C50742D37554B9CCE000ADC499D04964E8FB17FA3D1
3700FC7A0D7FFC6AB15DE53660BAC080CC34D8F7448BA5FE139321A67298755F
763FB8CE91ABF9BE061CAAC45ED4496AD04F34579199DD35B70C276F2E116566
9BC185474A353D2E31E5E845C79A343A95D45329FFCD11C81AB178587B79A7E2
6267288A99A90B43CB8C1547EEB838E4B84F96C9E01C0DAA0E7824D8BE6C72F3
61ABA81BF1B4C998B4511AFD07B3C578D754B811A5FD9438AC44E725CFC68ECC
F5AA6408946443B1B103459E67B71D36C898FA53F4F5F9D43F8496143D36CC38
CC3989DA834CFCD0834164DDCDE093E68DDFED06472FBEF94AD6ADC556F7E953
E9F70BD9D023AC0F1A12E955EF1A4CFC6692A87D4D7EB746DD96245159C582DF
92E4A6050B0C0BF4AAFB02FC0D3C4FE7A07A63C6B4F382DC4A036797F07BF03A
E2F8C833C0F184D32441E25F0400473E70DDCEF2E45C67D82B81176CFD75D05D
0E3F9E07539C80A599C7AA78251241B46E6A63F323824B308A8A510FF245BE5A
998857CDEE48C060914F8F6416356A6BB7CF51E1387CC848777D339277185A97
48572DDBF47A3804ADBB575E9B32F01B72509D254E963227FFD4E1DD5FFC36F8
A546AEE5230899A454E930C8FC6036009F765D69CE100F380B6651443E5A91BE
39B648D986BEA651E512840EE5BED878E7036D2875FD5D19B4EB6C673E090E3F
35AF1497C0ADBC03FA728F63E230E5E15A863ABCFA933684188A92D48A8589C2
F8771A4F3EC551EB972DE804EA5C03CD8C7D4E733EE78E55ABA0BA3698C59AE7
87FD25487D6E7097C26A048C8AEAE9C9724A170FAC6BCF6A85AA31C1BE8EE3C9
02B53FDF74EEB735CD1C98A0EDEA7F2BDFF171A46C5CFCCB37152F41214F849C
A3A36E8E46BD2DBDF152E8195C10468DF086FC6C9364368EAFF883FE0D2F5822
90A008F0D1CF77B7465D34D3E5CDAC8E28AA9A19939CE6A19FF265521B607E7B
494F5DCEFEB2972BA4092342F24EC3B8EDEEE402E65A0F0DB2B47EFB50972FB9
9E5886C47B426CB97BBBFE571A3C0D5F49BCC92B0B4F267FAAE6B6C25173835A
E2D9E5074A9EB19AC7FFD8724F95B5E42B28F02016D0F8DB9E6C5D429893B5B8
E8B721BF0476F66FA313E7DDAB73EB19B2551AA694BBB6D7C8FCF924212E3CCE
2E968B268938E5737A7AF66566CFC58195BC7BC6D7B194999EB62977EC47BA17
56F201CCC777AC8A445ED062765EE571A3631B7D34BBDFC717244C19A27F35E1
E03FFEC21DAE196E874FB017AB88B119CAE6D97443575D0A8C264AD16C141A97
D1AA99949CA91F154528DB8D0E63F394C4C8430BBD1F3153BB1E66022BCB537E
F1E66C98F92E3A81C8BE23BEE4B7EFC230F62253BC1C1724C50764AE6E78BC4E
9790236910A06B75B6011FC247A27395FFB63CEB7FD7ADB4D726F1F2ED0D5B89
8B828DCFD49D21D9A74E4A84B5678F8D1D3EE9032DF3350E6750FF67E5144E03
EEF680451ED0D452D559523087828A514792E7F8017FADA64C1C4251352746B6
923A8282BE75159B8DCCCC73BEB07A56D892567B3B29CE6614CFE1DC9F07D414
89E3B5404B19F649D67185FE1B2F75B1001D46DEAF538B4BCBAD8E907A553E5F
B04DC9BB431099006673495B2D4670D757587C4D5C3CC6895C0717E25AF5AA7A
1C4195ECDEA5AFE822F61B951C6370E81A29AFA15CA964C1CBF800740D8B9367
E200BF22AFF10816E00364887470B7A39EF6529CE9ABB8685EC99AADA2BA2921
9E3EB5936D8F35E3FBDD30932F5F3BC78D856629B5D5DDF77E3CBD3D57EF1CC5
346330C5E5B7FC74034D05D9DFD5C2018CD6F9A128E256A68192C634D28EACEA
C94D82C09796F06109A062C2008AE8F7220E5938BDA7ACFAE4FF43785CBCA1DC
27157466DA4EE2547A47189AFD58B3DB610FB90AAF1FDDC4515E9B1F4AE2FB2E
C17D4ED1560BE46A40C709A9FF994A8584C8F3334C613B3239A5087B243F7668
D82E6771AF78B437F890EF49B697E59249A903EA39971F5C3B7BEA0C6BA9C74D
723F952564CEF7CE60F47440DBE09DBA208FC9ADF530BF408AE3B2B0727412C7
415F7AF11B425EB5A6F0EDCBC64BA8F67F4EBF06259C56C31EF2B8E056CDAE49
35075FCB35CCF79468BDECF2CB5C7C49D40D8F7CF28DC0960B055900D3246150
CBDDA7EBE56334B137F76A3E209CF0B3757CC915678E6E253ABB2259A650E70F
DD5F7912CDBA45B01A4927A48B5714B779063229405B025BEF55A976CD0C8CE9
24C3A194AB33DC77D91DA2743040541729599D4CDFB05E04FDAB634CC269AF4F
A023B890A63B1571FB805BEF3589BD26E080498FA2BA8E7B00E6B7B60A8BF549
777D8BD4A92E1DA3BEAB326251DACF22026EEBFF4E421346F6422F76D7C8307E
7F8B2CDBA530E9795CBE691C141A143280C65FB53B7FB735509DBA9BDFBFE3B7
1B6596F3B732575E0E438DE988328D581DE8C19D2BFBA0EAB8E734AE7D6C057D
50865743ADD9D69CB9C5E3FEFE227A3EF0C7698773C01189EB4BF0D6E276FF52
353BAABBD75CE592B79B8DACD30B5541B74CD96B933F6EA5568415F0382059D7
BA23FDC5C711225BAE315048B97B07EDB740B5C45172FDBE73D1DE8AE20177F6
4858E35E6A9E4FAB4BBD20ADF923F763A8F3E79EACD5C3AE21E8E0E5DD110DF1
EB583E44B6FB00A5F0328A6C57CAACCBE40C5995ABDE165721C8850F64B6C8F1
57B6F4F89238078A60F4463EB5706B3E2AD334FB57BC958B10ACDB26C39732C6
184D129B740B2D540ED052B63CE77280EDDEB66DE47D605479AC20B4E350F68E
DBD48B229397FB1F4299693D917DC28252E197F02A74E7BB5F42D5937C9F9D8D
F5373AC68A0B8A8FBEE5F467A5E8D10B12C4928ACB38C0921D7FB4F31FA739B8
20050A30E043275842ADA239DD87CC108A8709158DA4CE61EC682EF3554D4A02
C13BB71644F0158381590D07304D94BA443F5F78EC95C5F9DB05EBAE0C457E3B
677843EB425E023DF4AB596A177ECCAA98472E5D3358E849FDA65FCD2469DF35
9CC5017758941029544B1B678E1821A57879D8E1AA7A5DCF9CB5AFF316F44C47
01C1737E7CF594A70738EC988D441D771417F73B38349B191BFA47C44A27181C
437B83CFC1AEDFD8AEBF6B852B7103FF496EF876E5FE969C776A8B03A3127BAD
D1AADC81CB8A9D647C8469A2C51279B542A80CC24D7FD9DB6D00C8F7EBEECB3E
CDCE8552CDE6D5BF6329EBE4A424C61E71E53AD46F631635266FC2CA5EB97365
76A2D18DA69F93A6119949AD45C84F6C4592EDE71F7E434238E2CB11906BBA57
90E45A8947618AAE1C7859CEB157765BAF324A35918FC37BA89A425CAA465C3D
D4776FB0D593BB3FFE2BD382D56E470F07086E213E9D122FDD1965B8575893E4
4C9979965AE61E587A7FB51DEB232EA136C04C48D27F190502D909221802F3E4
1B3E5EF312FA1BDC288E7196714561830A2465B40888F2520E197E4A7C530BF2
782C20E6735B5AAC07FE852E019701E86B3F9CD0391C51E277B3AD9B980F2BA4
F1F1EDA932BF124C2C8F4A17C9648A63DBD2B69BE0D1124BDF8EFE3FF6FF5A94
3CE825D494D379F8F369B94AC15D805A752AC61DF1ECDE0E7261559F1F6478E9
B177DF9D171146963198DB821E70FBA13809F3C4988F033C27A6B33BE1520750
C266709B03FD653FEA880AE89D1F28D8BF0627137D479D8C13DD4AFED8D7F13A
9C627E9345FBE40DECADC3C9197FB28C9D8E42C612BA2B28E23B55AF66383069
9460362A78DC9A0E3EAD635B4B0E8B9374DEA3CF1B6DD798FF5AB5123F70FB08
ACC8E42F1A690C53CBB97A140C81DB51E471CF5B15D9D6EF14D38AF92A8DD2D9
51CB66572798A75A7E32BE31D4546A7B79340D143AD64B12FC87AADAFD46ABDB
3B8A603D739FA5170A9A68F91AB63110F96A0C63A645ABDBFE12F5C7A8B8EDB2
2DD8F4C9B73158A3EE2A669221F9C0C1FDABB202021CE25A2EE7EA03B1BBE832
B2505138A81C4BA2028E990C4391B6DD17DBC87DA2EBC00C42E3ABF670DC8BF4
E28C5AFD752A59D7B22EEC328EE694292EC97C6745A5027FEE4DCC6F5BE2197A
B8A29631294C95BC9B7C6B92D57D3F62EDD7470785A74B0B7F48FB956A171A64
2FBF48778015B4158F34FCC89F99154A16B650C214800E7FF6469067E542440C
E7A71BF7A705D7810D1CD45EF7D78312C804AECC26C85BB4FE37D8692A080EAE
DEFC4660F955C6F90995E1895A56ACA672B233D05F426A9DAAB72907264069FC
E544AAD56F758C8BEE83EB56E3AB70562FFF9655DCA0DD1E243F4DE5F080C259
DDB99104E699F10C4305D1D3B19FB2B164A44E5440B8C4DFAC31DD690BFB20F2
B3B92A9486C02479301B5FF1751ABA25C33AB90D5131906273B7551528952385
87817CC248AD960D538B7A2AFB114183DA45B045B9361E91DF533FB7D592E28A
C4D0EB49629A3D63CBD619FFC6BA3490C47619582E1D481E3640A8E7CBD35250
B3CD963F0A3D2C0B1E2DE2D88443D54584BC6232DDFFB4B8C1A6AA2FE724D60F
FFBBFDCDC5FBA90E884695EC1AD5D66AB46D18CB736E3F9351F911D017A4DF63
46E98FE1B7C6884418C2E63614C86A5657A6F516A5AEF940255F957A0BE48188
912529E5D4B43597E4F1EA030D26C569277F1450EA147864DEE12D57AF2429BA
90B38435FBE8A6A548BB82EDCE2EC7BB559BB8DF92E7EC06DD788048AAAE9828
FA72988F8D4C97853950AD0A874E494146286C95C3247EA74BAC662358124A41
31F5EA56789CA9F3E0902D3752080549B23DED2119DDBEAE493FEDD37B0FD10F
967DD58B91ACD7875E2DF8A82D43E9CEC038E89A31B39FE1ABA7F85D11324976
A9C4C442C514BE6D7FD998AB5CE7186B2D305791A79C1DE3A277E40932A2A27E
FCAAFB5CF2FC92E5EDAA75A61EF06A9FA289D4204A5A5E0722F59CB696C90758
338335AADBC9301F3D6031875A1D98196AA3F2A0C6F7ABD57E721692CFD3969C
C58C748BC0AE1473A43B85E0F0B011504411F4637D97EFB4DD10F2ED33C84317
61BA6677799AF683C078AE581C4D92C599DCF4E3B2CDE3412AE0720C0953B362
35A65E59A17FB8834F4EDDD6DB2CBF1BD7276242312B7D3C3597C357ABD25D6B
8DCB78E81FB5B8D5C702141522931ABF77E16D1B0387843CD39A2AF0EC9B5167
7437E4EDCCD9DAFD1F0008AC7E75F54402B816557B3142EEF6B87D58F4F72476
75B2391F4610A58C8A18DB8D5EFAE48B7DF160EB87CBEFE56A4BA1BF3141E88B
83E336C54E96954AE3C94BD04AC854BFBB3D873D26672DD8BBE4DBA52E0210B9
848E6FB91C81497FC1AA96D6B481759F16DB4BCF29A606FAD9B8CD1D76E4ACF5
D81812C442C13A88180A9E40E4E727E6E9A68486B13CCCAD2550D7DE04CE20E6
995A1C2C1ED17F7230E53DA33A6479102A5BC76E8348BDE804B8B30E2EE9462C
667868EFD88AA2AE8F3D0ACCEB14F3B4E63E55C5EAD35B1C885F3CDC0B109095
DB0ADB7900AEFC083CF9EDE0778C2D79BE9FD9DE57CC35175E7DF7EFB793A917
B3B604271FB764FAB871F7AA5A5FC8195E4FF2993C4F7F46C54E38615BDDE1CD
0DFD9F8F402DF768317A1032DEF9B14AA52D8BCEDF3C200FFA4C20D4C48D1106
1316609765F85F3876F39D338945CC543AB45BCFD9D7C3A073531206BADBCCE6
D65DEF26FBF4F189C621F442011FA97438CBB389612CFB0C64AAEB34DF5451AC
CC3EFE991429E523772988665A9A8F689FC991057630FD1739B4EE3A41350FFC
A907926D07403B2FE2E626864F04D2305F69CA1B6ECCB8C80E878D34E60599C6
CBA435C5BF043C088DD794AD1D4A11678AC989128587F0DFB5A7646742D87FDF
487B5F6B8D619ECE1E90BCAC146DAC90BB3BF0C993A4616C2913765E771BE54B
09E2D6EB7DB9DCE20380D558844CBDE81BA956B6F0501318C6545E7BD5D1F293
0BA0A38A606BF7F06BC23D9BF7021584DCE62600A5FC2061D0EB7AD5AF8EA198
1537217CD42A529BBE9608B90E719C6BD9B0BE02806320539DF647ABA4E5B573
00FD433C3B4D9FF03AABA32E94BB872519D89ECB766F21F1112F9D33DAB3DADB
D378E2DF6D2E1D689FB15E00C32308D61A6BDFB3C7693FBF0B33428D3EAF4FC0
8EC6092EDBD1DB9F743981C85367980E580956AD57302AE5D4F0BE92C081F82E
B3B7F36CBF47CE2A873A018C5BF196119DA8909577E8BEC1755589C0C88DCA65
44235A629F479924757548799CC90392A32E43FA49F5870695901E686D807DCC
3888D81EE8A2E6BC436B346E014DB4896C87725E7187E6FC6A1A5CAEEDC44A5A
0429C13B5B828C4A537EA8E8F7DE242445D6B899CCD649CC3E0A3F00B07BC9AE
FF34F907264965449CA8CA02BFE5EE0E2B5E3FE2B567777AC4750AACE97ABF43
FB52495F20DFB97E8DC58A40EB1CDFFDB901F93C044C87B3CD95AF69383B03D4
5B8DFD10030C5BFD9FEB992196F63AC3417C56B9B163606F44F0AF34047C9A78
FF5EE4ABA01D99E1FAD7766D3A689770142A6C9743381F56BC96100FB3134006
7900E934F727A6880A5A7881227D3D3664FA6E831665A7E8E82DB56F39649263
2EFA1AE39F2A1F14FEF6F8AD3912FE712F0AD3FF9C10590C0709DFCFA139B68C
1936059511BE83E22175FD33DE7F728791238F198630CBBBBEE85F2CE393047F
3A6FFD1CF1CD5F21FCC35E897BAF68B1C6A32A9D3B73C3533D24F829C6BFA2C9
D5FFC3605F0016CBCE5AACAF8CC280CFD96404599ADE2A2966C4A39746B7F6BB
15AAFF4E7EF780B20D9AD88537630C89E1685C610486654A43D5701AECD409DB
EBF0C9E95509BDD99A537F5C969B93999CBAB090E3434034B8BF6CA237FA8895
4794B7F2BC8C2AAC17EE815B89A2FBF86D22BEABB2309C05E3AC70C2FE124AE2
D05BE2287AD9AB56D62E1528C047127A26B2694771686B8DE7B81A9FF9E50D2F
90E2CF19FA40C849C6163A97D881A16DC7532F7C45AED4B981D3DE3CD424E81D
A209444867A5E1A79AFBBE6EFBDE99EF91E5928E83C25CB21F1E27774CC20D09
DC3EA84D7BD6AE577A3784FC9483E922D45614A105E32445218BB41640075065
A2593E007F54F79488162C2403E1F14A1997D568ABF60A5B0ABE208F0B3B7D5B
D84E1EF73355A9FC105C21F3001D8C94317C5992D34C299CEF0026DAE4C5C9A2
2B6A0DD805B9332C6A55E757285F3E6AB79D37E3F45279ABC2CD316F330FC957
DA7A0BAFBA36470C28941316A2AE0B4ABFABD02DCCA2D154034D19EC14E85696
D16E7060E7A9FC19F1F0C3DC9F483882E265DCF2086F4C2A8916AB906BFFFC24
CAC21EA4B04276910EBFCCF49C7D65C9D8127C3595FB04365CD4B4A5FF216BD8
534C4ED6F449E96B2A3D31DE5E0367B7006F757508FCB5D653DAD14A854707BB
F08324D5FD6E41AC5825C8887B6A01EDE4FF86C571AD325FC4E08FE4C042560C
3A4FAC284BD50D9DCF6320AD7D3A2BD3882B5E360E01C606CA377DA1F5B663C5
B8CE75E467680764A4DF585AA8EA461D7B9AF3392E323179878768DD12D1C106
4A7E204F31AD5248BE21191E642093632FAA4D81E55BE3E9E8E1A63A9AE22FF4
E68F4DBF336F6BF66BC575C79168BB3808A86F9A1F7AAFEF7A3C35B96FCF9C51
E7845865684FD916C5CBF812D3F526467619951B89D8AB26B7ECBFF40E272365
773208F9B7CC1EF0DE0D963E2B306E4C212772C382EB59E32FEFF4774CD40EA4
9DB7B3D9A11CBE7F12F1B33D3F8B46A78EA42A9DCB4CE8957657570B2AA8BD09
4D09DDB65428854C98A5AF0C22114AF8CE12BA8CBC2DC53766999328462C37A7
D0CB265CF381F02FBF83D19176AC10FC913253613529A413FE5ADCA6D3F2057F
D13B23894DE381C8B50F4899B71351484FB172A797F3AAEACB8E70C37F509621
F4475128D0F16CC75941A8184A40DEB7A9EF86E55DAA114DC033C9A6C00399B2
CEEF0493B74101A37178D8485F2B123280137947B8D1D0BDC606F774E93E3DF9
529F70D2124CBBC787C29429FD1AD35400C6E3586DD6043C9CF23B9B6C57271D
0FE96325359E107E6B2FC063C846F537A39F1C224CAEEC38E2D8C888E08E24EC
E15A7D63A8140CABF708FDA9FBBF1E52E9CECD986940A3DC759C13BE41FDAB29
09BF51D7EAFAB7C722B6F21E30CF1C712BA255DC22DC7EA8666A75B1C69B069B
B03003CFC42B01FB3B663F3C478A583A1A7D9BE69D0AEF78A6E2A3D9E13FD38F
AE1F52C4BA7A87C5435096BB652C22DF844910E57C5D0889FBE886FA073684FE
BAC4F28B7BB69A084C085803F3A76BDC5484994451750B5549C444D2BFC6FFFC
519ED81826B4073189B2B6D3EBAD9006DCAB7508430353A0A7DEB8EDC0BB8324
9CF414967A020E5B8B0F4C985F9F87209F1234B69484C237E2D1E2E64C0D4832
9329A9F8533D2835DF0D37360A9B5DE91E2557AB5F1B0A2DBD54812E541C1A3A
FF4C57B0BA196BDF885DB63DEB07C7CAC0569268606D6A522632D872DCE71264
6297F9DBBBE25EB385F7A70A6C3D6D39AB0BDE4E8A048DE4026A9CA48FBEEB85
E4A31E174DA9330491EE2EAD0AE6BC9EEB6AF588C930E00C41B9413108F3DDD1
C99DB7683A108A1BA6DBDDDECD3879CE965818B926EE4158BEDAB07DF24CD9C6
D3BCD9003A917024ABD8C1983FCB937BC187F6239329C47C6B331B464AD4308C
0D053C685328AF760C3085318083907489D63024A9ACF3D4213521EBFDE60346
E5CA6A881BBE038EDF56AE393AF02DB73163B74B8877E9CEECCD547F99326A41
155CFC7659E87978F2AF8C777EB8E4BC2555CBC5DEBA45DD56BBC9DD009C0F46
4678859A03070758C38629FC34410FAED94A14EFAE04EC52C52383F18AC63FA2
FBEA7BB5AC21A9200A8BDEA29E0041821CAAC5999C228E7E7F3F8DCDF3D39402
DB2E7732E7FE06C896F1D8880CC2915A0EE4987F991A6EFE8EE62F1EA7875765
0E2AC26FD439BDC3469313E7449FD300F6111A501180C56DF1515BE3D4EAD0D2
3CB926D41CCF5BB964801E50422D5352C9CF8012F9823435C85CB9FB0D893F79
F3DF37E59785A7E4994832EDC1EBD68790357845F9015D692AA20EB2F16F7F07
760C46A27EF5A8E72C900BED8C5BC60794F1E5B0517ACF10FD670894AE694FC2
B2CDC667F9FE7D7498FFC39053F94317D02D74E2C19873679CC1F5AFE3453AC2
1512E0FB7C64CA58C9FECB6C5937E8382128ED3AE89F06F2EA57E3A7A6688008
E60F486CB8C374E0C45BE51CAFEA0A456252D1446648C113D0A0ADDFF4C3ECD7
CC083D70252227836371FF83838926529034AA18227B4F8A4C88659CA617CA10
B64B4B70779D08BAAA7523628FE96F7F0362A7A748A63C6E87CAA8FEC1BC7848
5A966B136E08542754BAA6333D9287B59B567B136560A28332209785F022B006
F12565D7FA2F5C8366249043DF423180771EC0483FDBFE1C5BBB4750699678CA
4C9C7A87CA8D24F9548BEF1E178AA6951DF21502BD1320F4A1F58B5484F05A96
0D5596CE14A5F60690F225F02B4F711EABC8C09A9F08F5D29936FC715A56E263
699740411C0C3F0002F4EE0989BDF5EE0FD9971FAC65FCD295373CB0F8C088F3
5F2CB696C5167910021202680C597DA47285A073A8183732577DE94ADB70CEB5
E677DCE02E2D78B26324CFE84BB7989327DE76CC34D235B853CB8F6243B352F8
3C61A1CAAA27CBCAEDA9070E7A970CD71932F662D7B8A4E87C95D5B68A4A83F1
390445F0DBC32B1BDA6025CFCA26CA607096BDDE425CCA6083730B71DEED3CEC
004A0FE842C553FA25E49FB5D0B5974DADE9B82844C48698E8FB5DFDC2B891F3
313696F1B71E6443799CB482A3C065CE71C64A50CEB925808E57CB966C24785B
71A28D36959C47B0218362C0D8519EABC7F06A74198B61548CAA8D8EB74987B3
2435A203531124DA6D0CC166A0CC4E714F9B0B71F0696207458DB5EFA94CC862
DD34E1A74107E4EC29A27DED0A252F40A609F513EE630DB0A4D83FE5ECD441D8
C334E33B34F8B12BBD63170FE164729BB4FDFE6F62C5F28219D8B0BC111D96DE
435B3CA5B09487CB3FD4C20AEFD9F2939546D8D359BFBD49E7A3B53092E9072C
42AE727086CA56D9655043523D059F19DCC7BF3078252E7BC9EC3B1C6F59E5F8
A8308EA440CD6714B5FE33760E8BAB3C99BCA59162FD934D3BC1ABC8DA0DB6EE
9015E832D2B8D624249414B0D77E12AF67C4EFE6808D7E94DB904784EC9F453C
9056D1C21853D4924C6688226F984E06C5E6067C18078688FBA6AE4A551372B5
8E10A8538F7BDF2D56D685C26944439B59CDD0C3DAC9E50C071DE7DFC3780227
7C5C9B53D419902322874133558F199B85BAB22B884E73BB7054E2E963CCD18E
F02E278BECCFA342B44D3D3A0124F419B6BA2912BE0F0FAB91E7C13E732A0D86
00186A7C0EFAADD7A91C89E7E3BB7ADEBA9C88844885ED52115DDBA3CBB1CCF8
9C5FFCDA5E7CAE881E20C7C2AF77ED865AD10E580D2F8AF544B3ABCECEE78DDB
C589D435EDE5B82A65A2AEF2DF0B7541B06294512B2045D6C57D3AF3C9512D50
FAA648A9822FEE5B4BB37010E988DBE800AF01B1EA08868E70382CC9667A5A39
F284563D5201CF003292E7EB5D8B7370D2FFAAB5BA1013209625E868CF1602F3
5D0F54F815D0B0AD37CA58CE08B25D3632E1D7E9AE3C91030D7E1AC115C39AA1
0546522A5801B5484B9E22446A184E4055105E5F5412574F9C51ABD883187296
BACA6164963C3AA18EF7AE2BD8E0268E6095838ED763430063A0E77220CED0EF
8DA2C258BB069706D801035175BC7F5A2F5C6763A92AF6C079633B98C875ED71
4F00EBF2E75FE714FFF3D54DA39DB1D806C314B5E2D2FB9EFBDAF0AA78701E41
EF045BDEEC8AB58840CC6FA3EC6F2139438AB793DD4DEC839238C91AC4553EEA
F98CA568B231A3EAD2EF7379BD7DF1D5B1A01C9D57853580E6F180343DA29EB6
D494C0D592849474341D829D2AB708D574F36472757C17B3665DC76A7AEAA6F6
70DAC14FEA9182E57A15AD6AD73FF95ED250CA26391EC00CD5FA0B50F4F78AE4
E22838CE08EFFE31CCA07CDE9AB12D3014B697AC82147E45F1C153F22C13C33B
90F5535F0F37B995C0ECF521C5B019BCB557203768FB13E627E7F2A0F9F2881B
BDC258B6600BF593AF252E82EFB86B378D5A02BD6E05B19273BB4B3AE05A12F0
D234115E66C752498A071D4F1397B457875EE90563E4B1E3206A491359BF5920
87984C2C408E9424184B8865874AADBC4E5921A506885931CE9750D2F0450729
0CDD3C39122A0EB2F20CBD22592587A05FF0A3211783A92C6EF1F4931DE0B7C7
E22A39CE53FABB454EA88BC078DC7D453F813638EFA565CADF3958184CF236FE
7D3344B95EDA3F3F384215CE8E8EBA1064FAC94D54BF344F4F231870C79B3A8D
BE922B577C0C52D2D5457A952CAFA4EFB1A7F3A89CFE1BDC146C463B584572BF
E5E7A4BC96B43DB7FA5A50CCEF0A26AEFDAB21745568ED31711234FB69F34073
76E90C6D5AB5E673563A6872AF0FC9FE8FAE08A46C2C86450705A2E8437436CD
BF60C6047783E148665BC95213E463358D70DE7BC610C8A1A309BC4C935F1A5C
49060F1B859D8B55C8DA4DE81B4BA8B134D2CE4627B673B1930617ACE813ED9C
BBE7E9A4A796BC5A9296B9C1827EA3FDFBB5D0A20D24A429AE1C6A0A9A0DB25D
B41477263A8AB77F3A767E7C71C537732B11F4B580914FF276A226D8DED5A316
8FCC2968F74C1D6D2D8FFBA83F707151BA5D13CA5BF258BAEB103EB0EBEAD0EA
DD41FF95EA77167F6C7A104D3408735BB8ABADFD4F58075F2E4A735C70EB77B4
E6CB8006740B0AB54A7784D3EDD40001A8C2B1E7C5948515BD2B3AACC6D43C10
FC709102B88D366A4E4B0F161FCF00E41687324118E1E6AAA7D490EF6F5625A9
9DD162ADCC5703A52B8B9D95AE23A9C12447E473D14E8A04BC3D5940B0A51C58
10FC034AF992C470FCA73665D80C14659A29965672AF36C79FAF166F311A4052
81CD4EC2FAB3C75493C3B9ECA4AE5A0759523FDD6762EE08D56AD4741F99ED5F
A1982196402619D480175F998AFDC9E5B4450986908EC3723CC17FC65D7819EF
519EFA9350B5E8978850465068718889618C6F86BCB54E98814CF3768D31772F
72CBB0FB50132566DE61DDDAAC886880B7CF42BFB077634BA5C96EA3107B6F27
8B4D9E4C165C1548740C594B47DEA0436DA388B438BB4C93BE7DD90AB88B3E91
8C156F9F994084F380943BE91C395F5018EBDE81094BEFDD8789224A78EBD78B
3998FDC247C659CE4BDF4907ADA234C6DE77DC4957B683947D5130CA24F8CBEF
DC81CEFE1E7EF4100132819EB6177E6CC616B765020265AA13BFC463A0102614
30AD895A17520BF13C1D035A7A1A1FD3A1866E337D4814214267A09E915A38C1
43355AED03337DEDA21A5BB90DAB18D604C836A93ECC3F12D5919888568DE4E0
856CDEF5E8ACF6AD31F47ABF058C668C8BEA5768C2B8CADCAE972B3AF9E657BD
D2BDB5078430A6790E6A47A41F33D8877E593B10CD6435D5959B8B1F730CEA3C
F2FFBEE47A1C0F6F37AFB159DC1218C7FE8AB01A0538634501F9A0C31E51B2A4
487AE2ECBA26FFBB1CC965FC74825D058CF243BA424729B09445F938CE4CBB57
ECD50FB099C2C90F20F0B5E22C11FDC3C786726D6158E2843ADED51609D06417
6ADC20CA67598D679137AE1DFA9E9F19C49B461DA073DC1BE4AED9C024FA1231
D322161500E15A29D406E696100C83B41BC3E8C30FE828BD925527127408FB8C
5D2E0D248AD35FEDB85C3F4273A68D000F8D752CD4E22D1C0802FACD28FB6731
F6DBA549ACBF1B3D209FD686A800CD5E1F43E98651D32FBA8C1B5C69DC9941DE
B2E1BD49C716522730114A22AE529E254D39333C47A036992D673A920DA500A9
2DC7F56CCE8D657D98387EBDDF1A75CAFF601A9FDBBA239CE872BF905FC08DB8
0853960DC393324246BE1DC20479C8FF5B2585A53C7CB0DDE61D0662C42793B5
2B6C655084CA03CCF955881CCC5ECD63C57AA83662577F550E4909C866C78ABD
FE643CCCC3A2E51E63540BB5BBE52EE08E3FF22744722ADD51605BAA7948D6E5
1529A7195E6E3BC1FA23789B498F2980228C0188F9951BB02EF69DD5DD6BE2E1
A4D52E205DEB2E056B5C88A0F08EB05A2E1C894765372B0DAE7D04E3E3F10BC6
ADB7FD4A6D725CB43EE6E52F6410BD76E441C2C61514A006458A52B68E702ED7
D3CFD31F6D7E24EF1BE5EA6E8D041BE661E7A4548A54023571DFECA66E016E15
1A80092C9ABE53C544DE02DABFDC209098477C24246480332CA317C7C7F1E954
69943D8FA54558F298E4B4C9566C43D5774F18A1AD10A9187C32D91D47628C17
22E283E65391936AC3A537EE238DEB8FA5E5348BC602B12D6F982EE5E668AA6C
4DBA82DB29905D54120CE64401C426C5BDF2E1BF0861E96E567E54DEF79355F7
4CD2351AF9685360D1E7724F46F8D097D53AB0A6E2EB72EEC49D10E622E987E2
FEA72BFF9EF7370DFEF337B5A0FD6FF9C5421A63591661790C1601E2806B9A19
1542089E218EF35DFD40579BEE2F1E3CE6C907B94D63283D7AFCA6D3D74B41D3
8BBA355EDAC9632EB2FBCBC2619E2A65A7052063FDEE91954E14481DA48F8325
316934AE81AB0FA8D44C3B49DC183D1183A3C769172BA993BDA4944782C7325E
E9F9CCD6A1C47D5672565EBC80E44DAC3ECF2605B50534C875CE71A515225EFB
4F49B44914D4C0B3320FA60192463B4F005DC4F1B4C8E54EBBBDB48AC2498354
E95CF3030EE1A0A113053E0C232A65591D0EF3D501D9F1A88D8BB0EDE87EF9DD
DE2C80D89FAF2BD300218B879BE060706CA4081CEDEB5F62FD44DF10D14402EB
EDFF0B144B1C9BD22D7379558861C875559529861FAEFDC91EFF4E5F68BDFCB1
589AB4A61E60365DCB8621F2A9CAE7238EE95C2A4E2A4C1898CD32EDB96AEA65
DB3634A0A7542247E5C1F4976E246886440060824D13F79652416D6715BECEAA
566CE2CBA5032D9817980955E666E8D4803ED0F04F6F583092060C82018C9E9A
2200C8EE611FF61CDE5AF8A03756C12F189494DBC735E3C86A6D4BC3220F9607
1268D3CD91C683BC8CA32202DFEB04EBAA1B1414ACBDA9EADBAD6D7267995C72
ACC0658E69A52A6D7D0B03279D7E2F2A9CF549FC86FE0E0B595F2DFCE912CA3E
D822021793F292636B3F8C7B2A0D353F370B3587D00ABACCAE5B595E32FF28C3
30646B6333CE810C6C01DAB616CC3E6D050D7E686083E5639903C0A01B1875C3
08B20E6A89E4EE8A2F161A38FEB95062E3F068DDA3BA4388A938211DE2D15D82
E557B5534C3B1EAF1F9C139DC715445893B54729A788C762262751C5F2859668
46D8C0539B41792ED8CF731016C85A4E0418D28776CC5F6B3AA309D9C79B9252
299DA13DFE68404D320CA9D8964E0ADE352E5C7E82DBAB63CA3B171E6A9D7F5D
2F541CA963B239C132D1D6FD41345C5F23910DAD59AF5764AC1CE577EE970A2B
5E85B896546B8B189CC4559B1A8F8ACE40A88C83F2048717E0A1648BA0FD1F6A
27C29D4D1FC181D667E77DC9CB0006F44DECD16E320913DE0F6F5038EC5FBFE0
A25EC67059911C399ABB3C4B89E108BA2572D80E6A42885C6207D74CFB01C80F
9ABDAD878915286731DE01010A7C89305D2B9318CBE5E5D74E6D3B251A6567FB
EA785D838A9506C6701CA2BC7BEE0C2D6870958365CF2688AD5470018A3BDB6A
C1A70FEF47DE1D954392B61E683BB1437FDCD53501EC275DA79835FB54EE41B2
A2CD8A8DFB529EE1252F0808105656270A536E5DC0236DA24612993121152E7A
32C836C6000BF23A56FBFBFE8478F1CD00150EE39F0D3F001CDDF84F5A94E60C
AAFBE1D27F470EAD9A7C3C773741FAEC418E16536B30D75D3462EB461C609C8D
47E6852E8DDE862922A8F80A0DD8B36675E83371DDD08046D9C11E856CAAEC1C
8ED1C42A4C249BA44EEAFFA2FB911DC5995CC1E872AAEB7FC24EE90456E56666
5CC1D3D783617BEBB1921774BE5EF63B1C4E79B49F2E82C1375D3328E0CBE8D4
C5FE42198028A9496278C66E7AF2AB65B7BDC9F704E15D8F7E4DE009307129C0
41C5F5EDAAF4557F29EEE84D0D1490221E51ED8CECFCC6A0749BC7673ED80467
D8A2B7B4FD9A009EE1CDA092A3086CE6016C0126ABCF64BA27965D2B38AD2F1A
1E471B6AC298E164F6C182DA3F644BF5674CB8875D518A20E1A08B15059EA03E
5EA7BA6714EEFF8CD73451DB3DBAA6FBAF59852712509975F3D7FE3CEF5F8234
DEB75EA20327AF6A89FB26A1AB03592F93725C95FB7B03F0EE11B0AED1183AB9
DB464531B76025A375EC39A17C537260A1C8F10798214676ABF616AE15C8F2FD
71E930C88DB6EA541956B904DB911D009F0B209BFDC57C02C1198E32511F945E
117287AD86E517267E421D33A6AF1BA88B6EC44292E10449051823F23F527DA1
D5806046586297064AA5C2EADC5E6EF258AB1B3B5FDEC3B8587847A25EFDB18D
279D752527A0A701EBA7326300266E7F7C59AC761639E638CE9D89BCB7933336
DD1C28F912E934AAB0B33B29BA0C9584DE35CE90D32BAE63DD45BBA3D633B7D8
EDDA4F88F718C33F8956FDC4CE39D274B78F7447236FECDFD361063AF9877FAA
66176A5D82E2DDEE82905B590A7B5F5C76D5052CFCF66CAECB5415A7A99DE5B7
B2B027B791FC0398404CEACDADDBD7A4A26181DFED9CA175B42B53165D40CBCC
5F211C31EC56746C4FE9A7FB2265B3B3FA96B079D9AF78A4C998A680FEC3A5C6
1130737273FFB6421D21F128DF6AB37B4DBB46F032C0E1C28D943EF8864F3700
F4600DAA276D47C6BB4D876DF2F9D4AD0E3F3F3A4291237ED7017673C78E33FB
53B8BA4808AFB5CCE6849036F689C3CE8AFBBF943D8BE0186DA5E97DDC2FC665
F63FC749F75BA912618C906D90C72F9DD9529CD003AD4EF8D11EBFD167C7FBFF
3A27C9045E02E41B2D90B13AA3A9584638AE4A5F555DF9C55AD867DA9E57903B
675E17738826E365EA2ED8D0E030602745DE00C47675DA698AA397EEBD5B1E8D
C5AF4FDBD8A4F43B8C4BBB88A2B2C1AE0F7A914ABC04B6F4E9B305A2A3A485C7
84856A96DD709A239A40BEBAF05CA22C94624084DA481196173B4B133C58D716
D29E8FD7A27BB14FF676F11A4D35CFA9B17C8909097119232B3876EA03A4AB82
14ED188CDBD8518F68846E3E5386A1D75068986D021414BCA317EEC51114475E
9EE4972E9524DC3EB093A2793D5535227D5256B4388BE0BFDE518C3F79BA7B78
FB84A35037293DC78F6A911EC2EB55984542B7CEC8CF6D19962FBAF40016C372
A531176DB59F10537A4717637CB9592932F0C5853A204FC7DE2392905875FC28
D07872F48FED6BBDCCADC435799D547BD2B0D0179A96E8C1BBEBFBE83EB232BE
9DF8E2797BB52CA05603870FE7C734D80223E896654525D13AB2DB1F0E6897E6
F78FF6635F17CB030DEB68D803F1059CFB08D27D292418DC23B4956F3FE7FAE0
3497A7CC3D41EE7FC4C5C495FA27748B9A761AA791766D27C67987BD979A9971
65997EC12D816E8BDCD23FACAD775BAD89BA80630FFE3EBAD70FD8F2302B44FA
2589DBB8BA7376C79B2116A9028A5D92FEA928C585DE92E03F6596B63EC3CF7B
6CA10E80597C9E638E8D886287A963E629A387E9FC2CB1EA34097543D1E8144C
88C832D91E360B2F5A5877FD00B0C04A126038CD221BCC55C37620632553EEFE
7F587C81CB15B16AC95599776889FDC6E22BDC1E924E1C6F28D8F7381159C5FA
B5960A2E3E913CC7EF0A07843E37CFC766039EC87A4290030E99140D39C16E09
6E4C24757000EBED3AAD479D36F0F2450A7612064A5811219304047D7BBC670E
590DEBF98632D63BC149D8D57AD110F3DBAD326DE98A17CA07BE575C530C85EF
13D15961CEF371D4A8147BE046865C9850A369A4BD7E37AC5D87E762B6243051
1F48686A02711107F643040264442F31881E3DB985834F028AB83FC6FAAE7E5C
4F9A5ACF9D140BB4D74794F46872DB8355E1AB28BCB895138F974AB6D8F135EB
528CFD0877E8D2A5F4B31609AC2AF79ABC77A6717A1AECF7A819068039D407E5
90AC0C65C7D792B49F53AEDC755475660D1AFDF8A0126E54F4D847CE7B282DDE
0B0AECEE1C144464351EA32E0547A3E715A839654CE6FAE5F597161C22291F58
11A89F3F1E0E0CC325EC1CFDEF3AE91E163A19846B3BCE5D31682461CE9952D7
4D97F7BA2CBF800B76FB0D0F29D243A5B2F458B4FC04E017597D1E99ED342D03
E0C4B5D0A21DD6FA673DF3A1A9D4B70DC521B212129CBBD99BFAEFDDE78FEC64
0D89B4B8E897B8A153A3B153A0FF2F4F59F75938EC83E13C5BD8CB1E8273A552
F19FF72356949AAE59A32E7961B571C7E086A2669CFECFC0E3AAF7555EED3BB2
A04E496E0953F3D80F49365D5006829FED63CB9571B219B387470F2ED33B200A
E21D0404DCF32BCB28A7373F8820240CF8584B86FD1D4E42D1749C64E0D05FD3
23718C7291181122CFE04283F4BCA5D04EF4625F1F84251854E2CF5F9C91E225
D0AED56107BD6F4565A426421AB1F43F6D3DDD438E60940A1A7B10FF68354C04
3DFE6F770C56493E8DE829F2BECF44A362DB8F1280C76F8B0EEDE11F9AF8EC71
E07E7573B5341AE692D8E5D7C3FFBD41365DFB00061FBF89A8CFE1BD96B21D6E
AD9E432F761AE6941542A4B4EE5DFD07ACFFB18E8DFDE785893B5EFD6019A331
FC3FF3123E5BB8ACC107D8B722419A9C1F8EBE33087369C682C841008292750A
376D0398DA95DF8AA168A2182413AB4829EF58D62DF6C4CD5658D8DEE558D56E
11D92434432EF4A7BA2612F343751A68EA6CC4FD5FC023353A2A289DD8BEB1EA
056C203B431634B78DBC70A3097095192077D7CE0A28D81DCD1E8D94F55FA1F2
1AD44A5064FE185C0962BAB12D247676FDCE51B2C79A29F57FE50112D9EF5438
5D3A7782B50E5BD888B42D0828DBD00335577A83B6CFBBB3A46395804D1D95B3
AF4D929B7A75FB0E2B46B3E57B2D6271E535D316ED13DF03C99757CAA452FAE4
6DCDAF8E8C4705803F4C580F80546B2D997B174FD53FA4041B0E22E57F0B0E78
3C7A56426E4FA821BFD8644501E923A7CAE5CF1767FD966BDC27555760C11A1E
C8624F15DE221D8CF799800CF85B08E39D331C058B89346805EC51AA2954E3BF
42FFE2EDD5DBB9F247236A87480B2A40C5B8EBF8FDC16E312FC2031D1E1CF627
EF61274D9E268031E151718268DE4DCF1A9FACF498C48F62F69E8B5992FD235F
6F35134D0CE5F8EE5CCB4A2E54750356E1C9F36DEF4366C1C08E0B34B9962D5A
39B2A19219B2798B2BBEB9F858008032449778C60ED936A4BEF78AD52D0178F0
F40E6EF52F14202317FCE2FBF631D768FFB7C5C59859F9E1042874065980E2D3
447202C94B089B61769065EC8FB1123A12157DE158671515E8FA0324852EFA02
F86AFB2CB696DEEC00127361AE763C3B0988F3E22CC2D48C3B0FB495C0E06BA6
F5D1373ECAABDF8B746D4B6A9256A24802548AA33E45BC27FD70D6C628F5F0E8
37285727404A7D84CF40A99B520CB7B4AF6A649DD0F7E5D015078AD222678121
B6317FB8E40EED8ADCFF3615C2C9CFC88E99C6D60CFCF8FC24136D83288A9A79
4F810F4EFBAAF7E6E3C022813CA3CC5D0893049E666977E1AC513F8E680C0879
0286D098A649DEDD316A45258965ECEE478DAA5ADFF954B838D13B6858B3C43A
8F430A82D1828CE5858A463D1D1546B22776EA1344C6E44869135113CD900AC1
F0F5F458F50024CBD9E23F72E3F5010A9141AAFCE6733B371BF36030FB8E55E5
6BBA0C4F03A44E9CA270DC3A67EC1E0A7DAFDFD2146CD88C3A2FAC47231E7B10
33B4F51FBF490CC2EF0E89D3DBE624E72E3AD8F47C1D8468D4237442FE1EE678
C5DA8DD50867B4A0CACD2F2DE3B6429FB7EB712DCFD9EA3117ADA2CF91C6557E
E2ED5B4CDFAB2976D7994A7369EE83CDDA4958F9C9892C7A452A58BDA0ACEA35
467E8BA62D97038A29EB435C0C0C42BB0FFF1AE65084CEF6A6126230B7B98A6E
587413376DDA3ADFF8208AAE367D3C3A6403B9A76723C29194E18E0D5D577F56
1982FEB80357E4472F8E1197B433297954FB4D3292EF0CADFDBD9DBFE192CFF4
E876A3D6F7E0A5BBBC20F06D4D3A1BD05465BA550A5F20FE5431E870025914DA
16F1869259CC9F89B86A12D4E58BA573A3EEA5967FD8B84FD6837CE3EA6D716D
B217ED4479E6F02D75E2FCABEA7B5B0D176EC976254BFD629353396B7D66B683
C75C002311A49A2C1BF3C42ED3073F204C2282901D4800F4B3C618943708DE37
953C02859BBA88A434B1E6AE9E1C101E19BB4E4E2C321FD8E44D2F18B1110D8D
730B393FF08ED8E7D023CCCD23379CACDD1136F138781C017EA769856DA03898
5D1A606DF6973844C070204B8504FB88BAB904A0D8724C2AE02E17750D624CF7
C431D6046CF7D8E698E6D66C30E905C09E80183B6E2ECC2EDC8BCBDE4E9421C6
E336AD600291850DC99C3C137A6D89034860A12022B021C81CB3B63FE8BBF6B1
DD0A639DBC446660DB64C16441DF430C216E6190BEED920655B93EBBAE2B4189
73337D09F2C364F909B321647DF099D2D92DE267E9646F98A52308EE3AAC05E6
79A4581ACB81791EFCD6C750A0F1FECA0288284E50261CB501491E76A05031DD
C5407F724B8F453D86E03C21E323788E22892D238E3D9CCC51E2C5C4A78B3055
7D721B6E10CC8FDF5D364D4C76A47A1335CABFCE6E7AA939A07DDAB7D672EAC6
C504A1E1FFDF32E56A61B5F2F9354B5BF2FAED4B001A26FF0B88B10173A2D456
29BC383F847BC1A533C362553C0289416465C0121B87447198304C054BBF7F35
F0B6CED459959FCE4F0AFC07C8BA9E826A984470AF984837C6EC06044CEDAB87
B057D79FFE799F215E84514814D453048CDCDD85F4FBC05FBFD780E19524F7AF
408BCE2E708128178019A8D6CE485A5F61409E44BD19AE0BF5AB90E7F50875DD
F46E568629251A49D00BEC54733183A05C7656F1FCF7811BF3AE191ADFF9F5DB
0F526D2799A6C46ED2E15E0F69A425A5132E7C6908F65D9E11F81F5F6188A2B0
CFFB2499A9C98AD63CF43C5E8A3A5C4DAB27653D235A0CFF213560243B08263F
305EA45CD18AC4424FF9A385AA2B9AA469080CF5F36B3DA0FF938650D66D31FF
463FD79EED62F8C256548805AF647C9C09C3E93BAC7516BD6D8D797AB1D63393
DB4A3A1201B294921AAD545A6C59BAB7B90E66085A06610EEE15C4126D2E753F
DD84A8EE8860EE2CF851467D63A9B9111DF989D48DC30502EAE64B960D92A65A
BF77BEE5F7418717516E58CFE011E473C35A73FBFFB91EFECB345EF392C56ABC
31E288E6BC3546398CB44C3938E1970D8EA3CDAA66B96B0FDE901A7E023D82E5
89AF7E40894AF57182D6739E52B457A783964823B4997A9395342D34790DA706
478213BBEF98D41AFB85F978108187CDD4C7CAB66E24A3588895594DE85FEC0E
99D9540FEC10247D4EA31FBF77E16D1B03878483DD2BA74C08BC3FB2D7C2B3B1
20AD27571EF6AFC0865734D499ED3EB825EDCEF3D24AA46BE612B4B645F4D274
18FBD26CBC02A5E71E8E0F7C9541BF8BDEE170E0ED754C3B6FD8B7D73BB80253
6792AE012EC80A79CCEE167754947FB9EACA6F0B831BEEBFC9736EE7E73319C2
70BCD6422E165D55F5CC15E921915EC11B8792A4B5F518445A66CE3207242C92
119A24451BFA513612D6DF90AE97C499E65A2EB9A27A9937CD819FE745DA020F
7FC528777CBA4260103C9BF4AC75F8F5CD3680FED7643AB83D3B1453B42658C1
9571EF028C42C90CAD913DAC78C31D2F075C01C37EAC75DEC309B1DF12E5794B
826FB539F525067CCEE5B7119EC71BC4458C9B591C89175D0BE19F27C01551A7
DA90ED71E639F80D80F289361E10A0E8F8204108CBC3D6D164DF9EEF5B65290B
70EF919737B1FBC33CAC7189C36BDB46E5704EA447E4228F55C70886D2822AA5
1E50267F20D2BBAB00D1146C1410317D48103D7C1D975DC5E7B32DF667501134
8DB24FC049F0353B0FD72203B9D0A2F187983EDEDAF9420C789C1AA87F439AA9
F92FBBB3068D0E166CD254813A5FA5C611A52AE12A46EF0B5E6A1ECCE316F239
C3CACB7C88E9E298636BB2BE84F12AE1F1BC812BB990966E5A5F0D609B99F484
7E84914C4321A65EFBBDD42915ADE674019F1DBA4577119A8F20320792B73985
C22D141BF9D3996E0DBF8C1F90FF30BDC971A9A0A2FCC2F6A22E8A16AE84E1BC
A520EE061B9CFABC987BB9912692DC39D6B4FD13CE1E5FDC6D9A1CAB64CC1404
D19FE6C482B6585903FF896AF2F77B9A0F21B776CEA4E1CF0233FFBEFB1C5112
25CBE2658F1E0142C349942E61BD41D68656D87EEE4E45713680CB2889C3FB5D
8D137127B16EC4DF24A4A53019967B603CADA6D7D49495FCB64E975993E68DA3
E1EC428A0D2CD85C12F5632806104075ECC6BBE85FA2C1454D215D5BFC90BD27
ED78D5D9D811416D9F25819B3C278E56A5E44E2B141507B36B72FFD337D62DEA
A2F520C9578408DF8980612BB44D6ED6629985763DE358C582E3CDBD5DD84ACE
10C0C1985F5F3CEAC2D7F7D443DA19B97AAB27C8F387AD9051887A0FF01D7E56
4B0CCF14C46A0171B76BF9D02FD7D2086235CBA024399C2CA98AB7FE23E1065D
84BE5164138BD1EF1EA17F75E93D73A7B6A7569DC597B61F93876FEB43D3B182
3D867AE84BCDEB1592F46B2A5FC8B80968AD1178A8DD1F873064173D611578C6
E0BF3F783C35CA4D3854FFAD2A82722659F31D5A2469DC27876F40A8917052EC
CD48E3AEA497D1EE281B0E8A484FE09E47E8951AED115AE9D4C67E0F8EC939A6
7440926D64A3377050BF435FC8EEE0AB5B4AA381B8581DF3F890BF1AF669AC74
71A3951A397399C217CCBF3A74466796472209D2A9B77D7AAB352EB846C9BB3C
9DB5E84C9CEB21319E8ED5BAFCF31C1137DBBB9034F5063EBB42888CFC5449BE
2C93485082E7C2FE39993E8B67B15765818FB42A05FB78BCF3938A5F6693F1FE
043217B4A8507A286AFEDA1835C8E9A497534338C05D7535964ADD9029475017
767E1F018F334E76C755B57A2E7AE51D621C2E0B050F6226FC56AD667FA9A656
0662C797BB19CA6AA94D83DE9C833CA3F6F7DDAC38881C50E6DC23F9D606875D
B6DEB59A05F15F5ED6D62F79BB54F390E7E62D50ADFBA2A103038F3525EAB182
282E8283B7BE5DC9E877AB7CE75599E750CC16E2A4A348B708F825B7F0E9CD9B
977E0F7769DDE65B363071F64D3B2547078DE418E1D267CB3BA5D191D574D394
8549355B2CD992AA413BEB97F702AC37C0873BDE7741323E49B522F49F15F7C1
16DB632EFDF5F64C60B104F597BC74E09F61BE4EF3CB2BDA8ED7DC31971EC182
E6F85D9C02F3B5894A3766414668E3C144E3E422901F8304327A752D5E85BC52
8D1A33F85DAAEFC2CC2D34B2EBC430288E4FAC4272793604B3943B680ABAEAAD
15FCC0602EDAF4136CE4BE3A7F081E4C41F22ECA07C1ECED0CA69CB534581ABD
DF5079558E55F8A9A7757BD3466F2FA1D138ECD7CEFF7DF41D54F1A8BB5BF9DA
94AB0C8F68297EAD0EEE6233932ABCE02C022952E45823B2AF3CDFA36222E2B2
0F984E0081BC3C2BA590B7489449ACCE92D873DDA9F843FFC0434A8886D58318
1C18B2C39CD98D06428E9B6E664840D9F8FEC9D0155C8B4AAE4EBBDBA1E811A0
95EE3A3C3E5A3309176912BE0FF690BFD7ADCB4952867548419C2A7EA48A3F3D
40B126082226A39D2194679AC19711315131F57623CDCF7A2C22601C4ABDC5FE
B3D0532CD24BC53F78AA7845BBC7169F03687EABF1301F18DD9BDC786F929BFA
F65B9FC00323FD7A0C9711AC75D262873CB5648DA6EC2819A5A6EF221FE14714
A0FBDEB82E56376F3603FA2098D505B7396A59EE248F90A8F3F1E067151F9C5A
7CB89DFCA64BE777C989FFFCA3C1D67086945F0460BD12DAD371457CD59B0CA5
779A6C0583C570D19C62C7133C000B6FD1D2DEAA5AEA9A34282A010E8C791870
D71E5ADF199ABDD7EF2417010223D7AEB80E9DF4E7F946CA299F27189379DD94
EF47EF2A2B72854153DF9A4A8E1E209FABB77EB91F668EA8C464F45EDE1B357A
B40E281E3B497CDE2EA9C08C4C2AD66CD72C4E5CDCE34673B8E371459CF866CA
BCC6587446FA87DEA0B652C6CB8D03AA0898AA3D3155EEB3926BCE702E4DC24C
C68D678CE0288671D1AE063EAD4D4F3D79AD49FE19392B27D390F28666C18191
9BDFE45DB3BBE6115D53FCE7F6F7382E7AEC41026B4F2F7469226131FB006C26
94DBBAF882F89128DADE6C4671D7F0A16E4F35AC0FA8A572B1622C622287CB5F
4BA83AC759AC64F3CB8EBF41938662A9BF651B06118862EA21B5C02DE687D24B
3ACD9A07E090CC9F2FC8CBB06F6F8E86021F4EB47F1A9F6F8980107EECE22DC1
EFFE60409B9543D41012663154C10CAD40F61BAF86BE97F810E7E1D4D142ECB1
1AA2FDCD75157511386045A6510637E724907887DFA859E1232DD51FAAF77A3C
07C9E5B90058B301EAAF19FD76FAEFC2F21DDC5748F7A55B13D433B11EE2B839
06D1991C2A13CB8E257B60DFC8BF41CDEA22F6178278EEF903E8EBE4A79FDBCE
6CF9B6ADCF76DBAA024C0D17370E92CAF194433712B3732491E24B5BBE039101
E42E592364A95C9872F9691791F88CF994E5727C822E4E09943798371B44A12C
530C5E1039D6FAFAD05EFE6DBAA6AFD172B543C2983238C16AE3CCDBCA7A4C4A
AC08495C2D1948F4EB1F4FBBA216B918FCBCC5109AAEC0D5C3C68A433152EEB7
A60B5A74EE25D7177F6B124D545280831BC35A950A3BCA26E856CEC998926318
F6090DBF584426D416CC63AEB5B1F8E1BB1C8196E98E2C3F758BCE49F8C9F995
05793FF66F49E794E7BFF7D64C06E090366F403F2AC2FA09964FD009E8FAD7DD
213A02731CB916BBF8CA26E0FF70BD59A1747E3B1603F19B631C14D149957175
1CFB05C5F8CD74B62E16D122EB4437276F8361F5B07C64FBE076E9E6701C5608
87690DF6F2D11D7F08293CDEB592D44C07F5AA877C7FCEC48F41C616CC8FB131
D30ECD7AE200751A5AB4391BD81C58BC7BCE896D00CFFE9F8BB83141CAB919E9
7A02E63F8B304747064F9887E7908F00707839D251DC8C14ECE521741AF450EB
54566B7CB8EB96C97DF193396EBC1EB3BDE678D0712508C21EB758906949EDD0
96297345CAD91C53F62DAD95BB56A33C5F3701FD733CD108B52D5CF1BADF094E
96A9EC6F32B761F72870BD8F0332825ACB6EDB44AE4BF87DC2AEC145C0562395
9394432B7182B991CD97E4EB57783335EA9BE38CA6A2824AD3042C494E828EFA
A8B8E45C8516F36E2E44C6120BCBB35453B06612664658DBFDA6E3B9E164B40F
E43ED7339C2A1FB1B615FF6EF45B4D67550B2F4DAA60AD7159BCB53CCF1E4B80
34817167E4AEC3A4F839C211FA64F62EFD565D68BF89BD371D6A012A11ED0F8B
CD2B9C0A4CFBC7DE9627CAA33A71A90D873BDCB721FCF3079A0B59D679608033
ACE656B82198DA6B062744ECB6DE0DB83BC429E405C21A4EFFF1A30B3242C228
11CF879F99F7D9C9AB6014F994642ED45918FAC44789C873DEACCB5281CEE490
4E274F8C5C7BD191042EE0615650839D613AD25BC80F10DE5EC55A10C45444CA
25D36126D4ED8B57099E2C38C53687AE42CA10D2DFD10FAB2CD9118C4A03D1F0
1B10972D713BD00726A3A10C1478757C30AD8637C818B1CF698B9395F1D36CA8
2C8E3055AD7996A07109CA025B15BA3885F65373B5F1978CF6364AAB09E3E6A6
15083979D89C3650F687EA106F365321CE6809A10A5F31E203AB59770B13958C
85A7B71F78E07C4858849CFCF965D401C97E199C722E220FA9066CC786C3A2BF
D6F51F08750D48A2504D3261B1DB09C9549CDEEB644F11EDAF52502C07A5D62D
2AC8D1D6CEE647700DAD2DA7C13F39EDB9FB9FF7FC27B2EB518898FD05E34611
E987FF987C6B5E3502DA2D55D65A53AC7D0183B5799FC35B9CF23AE8D011332E
F98472BB9687E17C209AD1E307449412C8B607C8BB3FE679273563A6243CA2D7
AC14A5957C6C30121D0D08C75A1C952A1144E394B591CA431066C242A5EF635D
66ACB4206B7DF0FC0084AC486781D5248DBE2B21CD38CE4E6591B969F03A34C0
8E5578ED0DF5458CC2E28351E9529A551EABCD0DEF9F30905555C30B7E238B43
5CCB5116638CFD2C240C87B1093685C90B48CAECE103BE8E5B26AEE9BD9A5693
15B16253CEBBEDFB87B8A8C6894A4C02F29E2C2EBEE2C4B077D539CD5BE9320C
5C4D05AD2D651CF166E26801A1BFDBA38FD57498C4F9C3627EFC50BE3185BE15
9DC3DA74A790D6ADFE9456DE35122C76F86AFA8929E6418CE5C672CC4BFF4964
622D880E4C6E3E1F3606872FF8A3E9470B741E468B6133FD8E22BB72AA457942
DB3D20F104AB0360195A1247C96F95E92BA453A490BEAFFB6F1465CA5369CE8B
1D996F0BBC5A84723A0D6B9998828DC5EC6BE80CB0E2D69B038D3103174C833B
0CE768240F0E8C7FB9574382CA38ED566747DBD975DC1F2F7AEE5AE327B01FE7
2C2ADECBAC1F0D934C200E926C0B861DCD176E5B2D70A703D91871B65225C875
4EAAA6DFDC4CB760AE4E56B34B6F6E960D3B2809BAD3FFEB33B166F5DD98511F
392227DAA1176F62FCFE40196ACC23F18DF635B15661BE8AEA31BD8F0BD56E9D
7ACF6468355496D416DBEBA78040756B98D897E5E25E7C7E4DF21F1584A5F9CB
89DB3B02436402A2FED2D33BC0D6DC34E099C6B93B3D17439F641B9A5E7C0F30
F8A71AB381C7CDB80E616B2641C0F56BDAC7AA33A95880FB77F9C6F05AA2DAAB
823DB4D469376A6912C10185718F429B9C2FFE23AF68C244609FF1F82141BA3D
77912570AFCD5690C6DA786DC6B13C18A5315EAFE422F4FD69C95FA14014AE65
BC98B3D491E811271847B8B36AEA2B5727218DF24475B3E0D956108EB892437F
9DDC8E3DFFF751D09559C89E4BC362D3D73B1FE1CDF8EC691A29B2887D6DBA52
04206BADBC62743FD96E63C8AA6E11172E1CEFA20CBB7736F05CFCFEBE5CD698
C5E4E518E9952880319F1626DFF4D64111BAE714DAA149DAF9384C7E4DF8EADF
447F4A817B63F15D633DEF32045D9B41CE44FD048F8EFEE2F9F3F7B70E112C70
49776696ABB4B1C54D1779CADECE0C75A7697FF37B6D608DAC817509E18D2FF6
7882B2498098CDD7415A54C0A213ADC1ED0D74C4A1A48E70EB3BA4B23D447ABE
254BFB16771ACF650A69EC5FA41EC8E3CF514BC9AD081D20ADA8C6A415F31421
BBE088A6DF3EE508F77F0018FCE4C19E328244DA236119EFF3DC36695E48A099
7090FECDF03CDD95AE3BE8032CB2ACD3914A4FDB87B86AE47F9118FFA0B70C52
96B9B5E0E3A1632BCCA90716C0FF764050D46C6E415B923236EF352B7258E29A
7533EF9C75703DB21FBAA27CBEF4667A40CD60ECE15970A91CE94D5D3EAAD53C
17F41960E66E12314FA65D06DD61513BC6563A9408C35E34AC008D216D4C7E48
5526F12AD8A23B0287D9CADC2B16124F6D3AC184BD071ECD0F5D09DF3A874A4A
C3821D5EEDC4706957ABC17EBC69489E1741181C13750B32E2AEDA32E9DC6719
36736191FF69BFECB4B946CE5CD6550886CB4B521843913B646355944F6F42F0
070173D7AF2FFFDFAD826FB1183BA9838168C6CD38822C147D9786EA0F193B27
8ED92D23D83C1EE4C007F6E27BB35E5916010366074683284A52EAAFFF06B780
6D08CA1E19896A5E5FF837F30B2643796CD4FA9FFD6C2193D5E2093455840D59
37589A97348EE4BCBAB316E40CC68D9BBC2EBF87ED43CA2D2EE8EE8D75F534C2
0ECE1D52B01DA1580A4A25850F9E64CE7BB6D87A110A897A2839AE95509A37D2
B8FDCAE8D1367BAA03912C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
9DC141B7F6830D6771F1A3CAE655CA173FA57D400530CA6FABDCCB4325478D0C
93AC7EAA9DF7605213DEAF94C7281D9AC68D884E15ACA3BA68034F897A2FFC1E
F76FA2A69CEE7F1E9543904F1773969F65553C3469FD85B2F2F89F0E547BFBFD
F62A3E47DAA4EAD6D47F0305CCDB297C320A48A3655FAFC810CEC6F6D68ADA4F
AB5DD7F61DB94072B0AB8F1ABF62A78E43E1578DEBD2D05109DEBBCEC64AC700
4C28C4F0A5E3A003423B9958C73D306B2B4A7C67A95F8B4E737992642BD3701D
39FFAD94524A7752560FE97B8E99A12AFCCC5044D989BCAEC863BD15CAB7CE63
0194962E4183C3838D9401260A743447DF953444B29D7CB004560D0685F73E87
72FDDAB87125F419F90D165EF1C2A06A9B7500C6AD185B4115777C6BF9C24D88
653589B431FB84E4DDB650C2F783594DE6123D3142FC5C99973AF211F2A2A05F
5A756073B85FEADA4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3580C547C2
54FBBBDC95998DEF2EA825E3BB2AEEACC0F30841835121B7A7D7A973F2EF67F2
795E6DD8CF55B9823AB2B15ADC328CC3AC493DE8C2F022EBFA14A2976D8E3559
B5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E9A716737B6BA413F846A887B
D1B3B89EEF73565F3D0D2D1E40E4C2811D37C9029692DF8E94F6FE39474EE13A
EEE65EC0E099C29064CBC0503FA4C89D845F91A107C8414C1648F6EBF6C8B1AA
7B2F72302AC2C6E6E9E4FD1EDCFCB8C648B2BDC18FE07B44B7E886DAB96F8B4A
BC3C584457B1565FE02E26EFAADB605C5CFE109AC7A355E2283555E10CA9070F
BB98E2337281FDEE7EC20EA060A062235F8848946BD058A0C86C794697BB0674
C1DA26CAC3FCFFE73689E2CCCAD5DE725AF6C7DE282CAA214D69B6793520439F
2991BEE6E427D4E82FADAC6C3829AFE1196FFD8D1D0F6BFAFF4F9062FDD08665
FFBDE33DB3EBD99D8110257DD0B832CB4209074A589041E903F6D89E22D34EBD
2B3C90EF5D9AF0A0DBD5145F0FAD88EB09D1BD84D00D951D4CF9252A4443EECC
AF1E56E5FF02B9070C1A92470E3AD7F1CD944E91ADBD1EFF555FF3EC5664191F
1C11943BB76D70D356FE5D145C73670D1A8F71E5C4FEE96C8D4DF87FF05432B5
165C8DDEF25DC98CBEA51FA99398860E1C252C17EE576B7ED658ABFD497DD5D4
E49663A5CA73CA347E27BC49C7DBD28DDB3AC7A78020551168A47ED789C2AD9A
B8C8FB7EA2F8C7D4D9FAB4B8DD91CB69558534CCE31AE7E157D0B060877AAEE5
14CFF0AD50200A157151F7625E63296E325E2C36D5DC45C5129C2D342CA7541A
75675EB2F1A5BF25461BB38C84D0651F4644CF51DAA8608BC3B698A22BAE29AE
3FE5C543DB648AB544E8212B3B2F97B5844022274F5EA46CF4E9D49CADFF1DC7
AD838B09A2CB6136CAE6AEA52ABA90745D527188599641549149217DF6B36367
A67BA60DB09562E82863F6C001ABEACCA36DAC81C30C11F98A77F4D100499847
E1102CC075FA1210881D95D6ECDD37B0B820176667500E58782156ED77373459
6699116573EB74FC1C83B091EA1700BD5B069BB7DEEE2BB45E7757F7BC00D85F
75BF5F32B350E2CF46BA0E8D0120BDB3E742C15DE5A8340318F907D7DB5591A7
08C83C63D6D457915A2F41B21629926169F4AEFD81BA2A880F4799EAE1C0C57C
FBC28FFFC956640872B49219FA101B88EBFA3E47EA4515043C418049903E3F36
885AD45509FC3CF7A376A608FC51751104BB96EAF8314E2322C457EC6683D385
525F118C799C34B50840604E7C248CA5BAE81E8C76C29FA3779933221D8A612A
2DFF00179C41CDD34E7015DD7198AD6EBD2BC01221F7E35F8662AEF8B6203C54
59E883141A505B275EE1333E6958254B6D96C9E54D47A12F4D299F67168AF7E6
1F19056BD1DEB7FE32A4F4E62D202CE86DDB34598B8CAED5B6DA81A6C816C747
568DD57D21AC8F8B1CD8B2BE97272017FC8176FB0988076E76EC6E8B4CA921C1
AAFC0EC3E24C38BF6D64E9C259ACF279C3272383D7526CEE1C178B1C6988F963
BB0D7534D41E675EF1BA59AA153AEFA7AA88C44F92801FAC61A4EFA2911B55BD
7DF444571A774CFABE590CD7C75BBE8B58EDC3A2C53FE35CC6B22EDC09857DBE
3019A7C60107821040CB0824EE588C4973D9A0D51FAE6E5FC9F82277403C5DCE
FC2C316D499F60E7C6C04DE9C117345C4E51748D3A5C5167780590DD9E188017
79FBC3307C0BB8A5784518676D62FF024E380036EC605313952366F3C351EFC4
33256002C59C39260DF18DDAB0BA5A40946D550B7831A2EE2670B2FC5DF8A50E
6F0C48860C52FEEFAA70B5953345568F1DA030BEF5C410DCA1D11F770EBC2E64
1196A40F44A2BD2529610091D8A9F09161A41BAC6A15727CE914A1009B2517FA
41ACD230B1E0CE76E289C42EAB07B0F60452B537A69B9EB54A68FDED4456122D
483AE830BE0C173A0D256118B0867DA2ACFA39F9F6EF1D81C607DDC242707D6B
53ED198367C7D54AC750A007498FA31E27B0F86C6D3AA81060727EDD60506506
EDE0AF44190FD947C4B9D41C4A6A03DF807F98C68F883721E6E7E6383207B054
006A409855639AB72C071CA7DBDEC1EB29885A11D100A9D443EC282E485CBCC4
8CA8861B0BAC0B3574ECAB561760E687C3BF7B72600494F60D3490DC63F40B39
F2C388F118806FAEF0361E5A30DA786E599D9055059C0C2180824BAFBDE47BB4
6F54EDD7D7FBE6B569AD9CA1AC51B9CAA30D805089E1E96AA5F1C7D8579C4D83
3DDC80D805CFE4868E62C90C06533AE6C9A73E86D96C6E3919B677C2599BAA26
96DDF00B27D9E1AA2D9A1986D83626E0D8D0C105CB6FC5F610237BB3C6E242EC
52D4D247307FDF5269B44DAAA80E7B4DAD286C0B4469A6264647AC1D5FB8AEBC
6481A94C6ED5EAD255050003F03E16A6529971CBCB06166030EEF983EF332497
5116CEE2F516B4E2977709EDBD3DB7AE516C55E742F598B2D718232DDAFB2043
F674EA73C9F043EB73E6A0511F1E28762342120515EF4AB7CD1C0D977AD77AA3
B19AADA40A0586A02109B864FE34566E17B4A1A09F9BA10DED06056B51C42FB9
B6A9C4362429C2FBCD39A24463D3E0AB8FCC9F3FD3A30F4F015CDE9893D5D66C
804F030B04D85B48DC345FC8249F699D5364BBA3E4FC59D1F7378FB3FA254230
B9826E6322C4D6231EFE10719E907FECF478FEF51DB2687D13CA64138054D591
B1C7894E2A0D724F4369326D31DC3FED9625DDBBEEADB867DDB7FF0678F202EF
8252CED93785F720E4DE92960A101294ECE75FFB72E6043F33FD3778024A3CBA
9DC490FD77F0F3AA902CB872E59AA81C0B0A6BC9DD687A18BA25D37CED0CD4E4
F0736A7C0EDA3E239C23A9BC94D2BB2581629D0C9CEDA46E01A5443002CFE126
DF21A740D9791D4FD8CFD7A635837144E85014CE922B9801C1C1939D2FCDDA6D
CCDC6E7B4B622D86519A9A42FB03DD17290E01444DE0216C35C52F0C3950222F
A43EFF75AEA3FA058494B0BCEE5A20AF99C473D1241DDDA5FDA97A2888AF5FCF
BB88F51495E5B2EECC7F07816F1CDFD16F7B82AE7FA98BF363EDEB32B1544C9B
7F8041AAC5EF16801613FCB3273DC62300B0AB0281C7CD4FBCE2B5356A2ECEE5
118D86CD0DC85A9A53BE7E1C06835390A532F3F6B1F8FF071E03D1BB27C6A591
AAF6BEBA1976526BFC9D408297302124C1A7A32D8F5976F7CA9EB64367E3161A
5B20A7DEA7A985D1C34836249AEF8ADE9F56E298AC1D7181D637A568C615AC37
91D8E50942287BC59CCADFB67B23FD0CC520310B3EF0414CB723B3506AFA56D0
24D45A9A51D740B3A96E7AB386AB4E1154350EA81C5DF203CAB41F0E6C48E170
4F311F51451DD607ACE85F8B4F4C828D7FF50D459FB6C913BB52FEF3A6D478FB
BCE3D06A8573ED0BBCF641FDA888EB1B9654C0CD0E070A900A54D9B875E95CA8
166B84CCDE9FB92FEF1C849E210276F72734DB97A902EAF9C9DBE267C618E342
EE8B5C4DA157F0B3F4ADE8D0DC6B9E205C7C32C2724172E4E8FC4B58E6CD01B5
9C73A14DBFB287B7017F6AE0F5CB1F557E34D6F3B792A1257B9FF5EB18BB80A6
425EBDA44D6753DCA4A6667BB22C841A91A8AC118812C9BB0FB860D2DFF11716
82E86970679952012FB4D39CADBCA6419979CFB0A877B1055CBFC4E8EEAB50A6
84882F5AFA6776BEB4765C6ED70B6BF84F03FB878D974AD04A770977FBB2C31C
4F8FF8BB1E7F5262B2649200FC5C77003D22C3A1E82B87DC2C2C554495B74DAF
CC33DADDC64D2A8C99DF087027EC2EC8DE518F1F6A50D7011BCAD9B86BFB6772
CA98CA95FFD014D72924ED65F147D6F231B461AF422355101AC49658B6396F4B
551044BB5A01FD8F30E96A773B1E19920DF95835D87D2262EC7AF31ACAC176D1
1DEB3601A993B6641F73D01D09636D8DFE49F75A1FEA7FB038BD30EB76410ECD
5062BD50BAEA04E96DC81F6F9F742A10CFFDABEB16062CA90F69D361C3182674
3EB62C444271924C89E11F2F498E401646F45EA63BA74EBBC62EB7903268006A
98C1CAD6065BC69698A27F3A9CA142E39598151578C3C118D40E9E8419C1A968
F1DF66B627B992C83529FB4BE67A1833D36D09829FA03EE7D559D5AA9875885B
96A2B47E4C81BA6C9E6FDA99321F57F6794E4F864073CAFF73E3C7106DE30A0B
E3EFD47261CBE2F070C5A57E223A0565DE2352C00C1694F3526F0BBE8E4F5D2F
E9D3A7C041B06172198B32F99D58E21B0A78302026FBE7A6BE1CE72DCE5CDDEE
C7E3113C9510F18204616B9019BDA26A143C18825686F9ED9506C080D968E979
B03376184591951FB17F3F4D690B31E8F6E329F88598FC36B36F9968B5CF9FAF
82BD496839A32EBCF1D18C6905B4FFB0432DF191F6023D154D4E5B3692276D84
35C2A3E01214CC90D74A9E2EDAA794F62C8E955CDB8AC8BC34C602D0F73A09CE
AA55A74E243D08DDBCB12F26FBBB8F9C43DD7BF7665D5F14CA4BD5E05B7DA8C4
35A28EF529B15DCFE08B3574C576E3AAD2E26E78E543F2B250A4B6BCCBE8D90E
DACEC433E0E45CBB75B7341F06D8E37285BEAA9AB71AABE3C85554A5A06B2AC8
B13D844A44C61135C81F9D586E0FBDB5221FE1F3BFE28ADE72E1F7E45D55CA20
34552666D5F1DD367C3FCF5311083B89C86D81AF27BDCBDABC57530B1AA9A74C
DEE023FEA051AEFEE5DCB52CF065EE27C9D3F453CCA5959665E40FE323256A36
6A45877CF940CA779E14D9530E8A6887BD14D5580C88C5871E9038CC62498A89
898025EA873936EB69BC17539AFB4E5E6E11F46E976EE6BC32FE658EDF088337
1DAAD3E660F09D520D471E487B130E254DF39B4DE5BAFA5B9682D05205EEC186
F876671BD65F869D2D389DB0D75797A8D577CAC542265A9064D7950B82F1DE12
E1EBB53F8D738E0ECEECB503FCA3D467865B963C6CB6C2BAC0238F0A2AB3DA27
6B209B473961A55E2618F1D8B444719E07C6768FF004AB0BAB8FC26A6302FE92
867358E2F5C27C016B20B867FEE8ACCF82672026B3122E379A0012322A325BEF
16B1FA0D85B65C1BDFB873D1B8AA2084BE9D840DA0D79520355177AD6F525F9A
017A34A18AABBDEC20E7700686FE88CEC8A3A326B77B817ADBF1E5A669A87C38
86435AD5198F5ED2CC8C4AA2D7E81DC82DC43051457907950717495F62AD860B
E59DD9C26FA72639FB421C3457FDC09D3B8D5255384A2C0EF7347C378B111AD7
92A90E38E1552D1936410B0E8ECB71ACDB08D469FA914C1ED1B237EB729260D9
7F3F1DDF55DBD314B20F9215B085F4E2BAC9E70578002E221E3878624A015FE7
5322A710B0E857532B41154D4588FA10A67EC13828136E1E719A52A0F2135609
B0BA01181B1E0CB73B74804696B14F0C6E77EB72E933CC0AF6A8C1095C726856
4ABCC720B69D111D278B122D39F103536F07E4B5325EDB72234C4966A716489A
F56E781AC3C53098D0B721C751699D83E8826D4AD3607A91673A3DF62988DE97
DA96C5C43CC63FBB7EBB8A678026968855B88283552DD3CD9831BE0D702AEFD5
278ACEC4A55F1A082D537B3C1EE890A6FD2ECE0FA115CB387A35DF5272A9AC76
5A0BBD8CEA4AD8DA18756756F9C9D4DB5C342277749E85C7BE53D7191ED68390
5AD80C2F016A43350F0034B1CFEC671B7F820C3863C1C59177AD0A23CFB7F631
E00CC979AD410F813119C05BF6F3A624E2167F7BDD45A9C222FBC9ABD8D3F08C
926AF66356A2A5C3B4C1F7A671760EED5D95F602687628A7F687B76F89E628D7
5CB834F24C4ABF95BF80FBAC642A003D8B8116D143E653C64F79B9B48DF5E401
CBEB5F0E7939858CAD24FFB5D675000565199BC15C451E1A1358E0CAAA3A6EBB
0C27F6B3D45356DFBEB0F12864B22FD1458FA08F195038907F9EB5901BC33833
2AF14A0CC7AAC1D3D2B2EE4CF591CF933BD8B554D763E0F9026E2A9EB717ED27
EBA786DEA3D1CD36DBE5110E1D36C2F94AE5FBAC469D1C54EEC2D12FBF6F0FF4
7380478B53FA20C71F824E1ED5C40D3C40923DA150C493699F0E6826388F4BE6
1D8C79F8DA266F89F3A0DC02BC6DA849100D44DD565646DCE741CAD677367993
02DF004EAB91E8162DF176E0B17A5F655AB0918BC84717480769434E9BF13F87
D023A7F5234E7FA3207F6B3725F23D575DB8C760F3FDC3D020E853171B0D1612
A3DFA5264D6B64371276FD6F8E5A302ECFB9B5F1F972F16BE95E6133522021C1
431219D8CE328AD81BFB6816DC78B58A549D32519C5F70D7EA807D07F16E9155
03CBEBD83B173D6AEF2574ACB66693AF6603E7BE95D2B9E8B9F50EFE02A94198
A79746CE4DF06341FC891C28C943B570A7A38C595E077078BB5D30FB6EDBDD8D
01EE519ED115AEDDE1691251E0F1DF371F4CB91E1B3AC0BDD21C129B0CA2EA52
E4F9C7D7382E32087F332C0BFCF3D479E5F6E9C23CD986609ABE0AC978D8850D
009A8B3868F4A84AA68FD6EC424403568413FD558D5735B892A1F69C8C1A81CE
C44E02384CF3EE5076007236EF014B547DB1C647753E6CED53E3678D62606B3B
2D3EFDA6667CFD49D2238D55D45C48100D4582A99D875019E23C31650A25CBEE
C6B93C575C363FAC49626E57429E6BD74FFC6257A2E0CE1910FF41A7B70BE015
0D3DA891517FEDF573F23AD2236AAE8F304FB73A0BDC864820B86A6693CC2CB6
FD995D95B1FED23A95407B269944B9CC67F7AF33B63A06B6CF52D85F449B56CF
E7EE20692066C49523AB41242F1D916ED69D1B7FB6EFA60AC71449E90BD6EA65
B8E7DDBC69A7F7EE5667075A2EA7030063C3D390A2674066DBAD1A9C3C1FFEF0
85A22FD91546675AE16824DD84B6CA375598B6C439A2E90C55090356EC46A4E7
754D3BB9B25BB9A92928362103585FF4377B3F1F1427F5826F5D00BD603C8E0F
C735A9A8B9D3F9BE76C4CAED815AF7DEF664098CF1A167444F34565446BC76CA
BBBF03C6D46D5553A1BD1AFD2474342F4102AE23F42736A00B539A1B3D810EBD
DDDED6C81C8DC6C1C4246A6BFAFA2F12135BFF313497CE64AF9477472533BFF1
F4A94CB02B67C9EFE3A2930C444B7792A4668681832C75AC8BD1ECDD9992E9F8
CF3DB923D549EA497F14E1BC35087D6FD299F593C8B9AAF8A89DC4606E70276B
7B69537505EEF3F9C30855C6332DDD58A2809F9D99D09F64736B5A4D69E43D6D
E841A6618D702007937C5420A205BF77E16D1B0387843CD39A2AF0EC9B516772
5AEA67EC0E5B42D56879A4D4FA6C5D16F01DE2034215026FBA9A067DABC0B752
9C9FF7C578B5B9A4E1A8F60EF5E17A5968277FFB26A6046D8DEC20E6CFA49B90
D49A4D656FFC9A23B8BB4A46413D6F2AEF5FD2BA95D15B88161028ACEC03A60E
71436E0A850E0857CD45AE5CC694E52B7DE4EE0969429B0A2626B6321A9568CA
4C0234D36FF51BACC428CC989ADD61913D31D018A8E9E633BD1AACE6F06A397B
5D75289ED307C730A512E416B1B605357F60A18B6D6EE4E5D1A32026B5D614D5
C0732337440073CC4C3320653402A526E679936C6E59A10AD03B93B95EDED494
2299DD2D597DA586B08EA2FE23075B9DCC920A5FC0D6206DF1B2B7701C20E811
C3B3CA30845EE4C7FF49F8DD75F69BE6EB53C053EB516EE6CD09DC6BA2B619CC
53C1F03C57FD98E1AF689A22DDB09B23AEFAD8BBD5D9B2BF18926E27341D5140
47E4BB9F6543B901F6B601D390E2DC1104F91B54A06D57CA5183E72E40874F4A
E55118EA3F62891AD4DEE7C73D21C7D0F90F2802135F1BD4EDF9C332B35169B5
E03A6D5C330836771F373D3A63E8D2340E009242CBE02ACEF37737A7D2CE5226
8155E00A81DD292E4CBBF03DE6C212FBDB2D729C161E40A8A8AD8074AABD6A06
EA11E40F1F4F4BBA4F6EF6E89AD62D53F8A4BAC182999D231A2F0B3E77760A88
4C96BC9405DA846B0272CF151FA2AF75FAEF2BAED0B8CBCB49FD9FFD260F56CD
6070B91652752910293C989C97BD38382FAE8F93AF77D94989AA693B55069938
4F8729EFCBD7E8A707C4DC64731E964C0A5126645119EC7801F2A7157FAA847D
A5E22F00136F21273615D529B0FDB6FCEBC5799B4807519B038B56F26A59DA06
006F8268A46889B0D2DAC7CE9E40D84F17B6ACCD87432BFB9FD01F66D7743E3C
1CB6D013DE4A201A150213ABB9DC357C350305B27303AB8B016B22376C8C335B
8BBA0C3E57C10AA563F2964C3B13B7E54BBBF08F23F8F2FBADB927F8B5FCE988
C624FF44D2ECD2CE5C88EE8FDB5E357730C3679F9D4C0F28A95A2F084A8B71B8
70C2E63B98D7216A00D43CEADAC9612A2D0B045892C685D8D66273DB3F4BDECD
14B341F14A9EA4D83B33DC6B94C76B462C32460256ED62F1BB2FFFE276DB12DF
81F103DAC3E37A8A751A8C787CD363A398058AD4ED21814D5132E07D9161815C
049C95D62D8089E4AE7B8D46F33B1E073A873AA2439202DCB7D6E5072511EA5E
E12897B25691DEE76797D63E54B888E4F1B7FB089DA26F38BC76823F5B4A0537
68B73A83DD53F4D15F219219825BEA068392E9EC12F222E5DA8ABA2868658526
B74727FCB164F21405F98E30C129C31F9E8C66735C59EA38E3BCACCC6F85A6E4
55F6DFC5E5E913E24F944DF0E71A1F3A16609E7BE31EBC6C64EDE0A7CA54B96C
B0F2A4D5C9B8F91D3597D2B5C014976295CE18217C34587290413C870368709A
54C7F725C5858E7E7251F22E5BB06A154054968F9E6176AFE0471CD848E67AEE
69EFC73CD12533D3F6BFA0FB13B42E21903DEE23FCEBEFDB600F329705E66D0B
BF112BA75D4488F79776BF8F6EC91CF0BFDD7CF669AA5422721E3C46FD4A243F
8C74C0035ADA5BBCB0E724AFA0F51B8E29DB8398D5F66A9DF2917F9F373AA229
7896E42772AE3423296B3467D9AC4A08FD88BBF11EF3B6A9B45DD69A8E6877F0
5D59976EB80A650E2F6951FF4CBEB193B07081F4AA5B882DF746F9505BB13D08
E34AE233023A69E0263A93F002209C1C76C4C646956668CB64B378A98BA5F5D6
1B2A1047B5E8CEB7F54E8E4D20E485B5D572F1CAE458592F512686F02CCC6634
3D83CA952DF1C68576FB4654A591E52759DA17CF323880E5EE7E183DA41EF7DE
D0266743BF7DA121B8C73AFB3730AE0710CDBBD49719030F618E276293EBFBEF
1509FEB31E38C10077F1BAFD0E1E6F8116A5787FE211379BBC3E33DF49A03128
2BFAE275A7DD461A4C66C31A6EE4CFA2D0594BB2CF6CEE942F6905E4BE6B9E62
3761D24C0B7CB02DD90DC8A2CBBEBDC6E6191311268DCD5414100311461396FA
7530D5778AF8743C9BA08A087D28C9FFD6BC993137C87A7B37139D1F60CE1A2E
D96EFAD0CCE878AF9550D6F769068B96F2A467587A2D7443368FD6795C2ABC2E
D198C21C8B2AF4EA3827FF79F6F5EE718D4A499D90EDC8267492DFC1620A03A3
372CA1DAC1ECB83AEF8ACB06C7977F5BFC46DDE5A6CAD73E31BD3229C5F89319
81B7F9C278F0853C03D7311DC46D7041C10BB06215A25BD1913C7954B5C60C58
A55F294B113B6B31536B2CBD02EB30C17927926C6AB0C06DE73E5A06C67184BB
CF69B32C4F358A707613C0AC190C7F0FF1BD5EC09D14D8B95EA50199D5D3A5AF
2408AA31CAC3F1A53833DEEA43BE551A26129AFA9DF18A8AE6D00EC6E0A19B83
B0FD74090B3D09D499C3B01F383E3B3C777CEF27E631A9252EEA25BC4B0F86A0
34F5C4D3A253D31ACB26D732FD54BD83E3C485032A061769D6427572445BF85B
73660BC2B57C89B3CFF6C85E86E42837436813AD014D02F85CBAB8AC63097A60
25CCD2128C6CAADC809B6620C88AC1B10B7BFACC1EFAFD38D3EDDD9707F72EBB
0DDC10C55C02FB02663AA47E2BDC5A51A7802A6AD0F142653DA546D27C470377
E95C9B1336AE10C108B2075FF97C68768B4435372423C4BAF6A443C8089E0497
7BDCBCAF0CCF5D22E677FF4BD649053FD29385EB45760E98EAF5063E373A084C
D6829DC18D063618B2CFFCFB821CEDEFB4941ACB6488C1A608FA21A2EDC0D5BA
A41622FD0636EA28FCDFFC002E337F0805ABEC524C69EC766957C4B309FA76BC
36084200592A259BC950CD67CD3E29699B9028C7BBED09471EBC899CB3139284
ACA57C8A9F9AE8BF9E2E340162023B85CFE6D9AFB6B921A4320CD03A0ADA22C6
863683473B13FECAED39B92395FC66DE16D7E6F42D58A138028FE8FFC29FBE0F
933909185C75F01AB676E600823FEC28C30D2208A868EC0D06A26CBB28D0F8DE
5FD8C8FEA78E46DFB045457F8D3D3531922150081CA418774AB4938EE4BB45C8
C12B5802AB9B0B333B2039FDA78228FF7FFF7767895FB02F823B2A32A6C61092
3F255A23E86A87086C49CFA284AB05224735A48BE9EB710C0C4158958CD6707E
3DE6C99E7B22C56D4B14EE2CDC8F0BD084CAB30272E8F065218BA8853364BD35
6F66B6CBDFE9D437F55F17C33AB41E835231B506BF6A841BA76536B62D20E752
B76BADF8AA33822F0CF869062F131FEDC09C58253C43026E4E0F84259EED3509
DCADA08CAAC84AB583421E5C08469D8D97C290149FBD656900D5D8FD1EE5A172
D0792811CF61B3714077B8C78F05F7C6D5F9A8BB59A813C66373E8E10B6C92AD
02CF2D3BB5B470642E3F575F4CA3B9DA9E2DC2EFF49CB820FE245EACF240CD5E
1806A89D6122B7F23C4C6B1B42C5E85DC859A4FA50B834CFB828D7A0F80BCE62
841437A59FBA43C39DF8A664335F67B9DDE36DBA793EC77E5B235E6B22C8D611
0A670636BDAFD89171B3A6B2809013C3A4A0E70E5CE0FB43E820AACF407DB268
F2760F36FF366E18A604A0CF33C594D5A5B386A2B36900589DDDD2C56F8B148D
CA86642048F2BB4DCFF0E1BF468D27DEE6B37F4DE97DEBE396116230FE735694
C8333BFBE1B3204A8E576319AE8FD72E288AB89F4ABD066FFA0C1E746ED3D599
3A2B670C19B19D222051E7E89D6F7CBAAFCFE61E3CAAC2C3A7EF82432621B73B
FC3A74815A314A53465D3AFA6D2412BFB5783DB3C0F6D60E34BE594B65D76CDB
98EC4E818B2F64AA3D78C308C290FEECB6BFDFFBCB96B239292EF30AC6807B71
4B97DEB8DCF23357E4C25F53BE48830DB26DEC0B7F59A41F129D6DC1F0650E64
9AA4B5498ED7FF197AFC2F97E36F3B4BB5838F7AED76D89B3C3DF7FD48646D6A
812D934D815F0CEE018EA7C3F081F5A258A6C41B6250DD77B4484494E04CDA29
B54CD2EC33F618B8CA36FCDA32FDC097B19400528336611868129C1186130E2D
FFFE8F95F43B4B61926E0FCEBF315BCBC1B4C0737EBB623F79B3C763CEF26558
C4BB5E507C9FD85B65CC1B53B2921BC4B683732027265C958C053897ABA5BB79
50FDC9E0867CF4C02FF87F4211B97E5F975D12379864A4CC14D3103C4994E6CD
2FB02F5ECBC9D32FD482C74A5387629E03895C5B9467CC29B52BDA0AA3ED16B4
315244E3BB451A99B211EEAE48D9E0874E94EA4F222F7D3D1B877624D02C9500
FC54E9D0CA9DD07C82504696F1A8CE0D5C76AA40C583DAC1CFF0DC2D6B02C096
5CDC0D91DF1A487ABBBBE2E2896E6B674F5FAFA68FDD22AD422869E28828137C
706B0CC5438FBE0BC90226FD7DCC2267359A6CC965F3BF81EA6BF4B7AA17DDFA
BE69046EB0B0C8C4818AF7E1AC71DAAB74507E9E0224FC37B4B2187C238BB705
F2B3FD9F888457DA4EB3FA60EED514882C79251115EB490BFB9C965E1FE212F2
2AACF2D33AB5D9FE7BC6838B6D167DFD3C522F30A07B1CBD85BF493182D44236
C93F939FFC5263B1BA0803279D7E2F2A9CF549FC86FE0E0B595F2DFCE91068FA
DB9965DDE13C7F0CF7EE179BBD3BA15C58FC473153CEB1C926563979CAD433B9
1341797AC8D4E9842A26D0945F14B9DB208D130BF5160D289564770D0A5EEBDE
2802BE3D25C16354255FBDA13571652593CE33FC4F48CBCBFD7B8E466D657A80
4EEF1619902225A0732B430D952758A387726A74FD74B84CEABDA95CAA798540
DFBD6A85A7A15EACA1F473DAA137F5034CDB16A0D8D0709AF894672A1AE1E6CF
E66CE1B4C401360C95ED6DF98AEE6459168B39366CDAFA9AD6B5674EBCA4A5C5
95BF080B0E4E8CD10902CE2E066C091AA6ACBC066F4A753A32DC9B2A409F0582
56F20B99E6B3F2A56A6FBE18AB4B5DB40C04139C15BBB9EDE43E7C80CBAF9FB2
1C618E8236FFEEED2959416CF9729E665F9AA1F89FCDA24A4BD908CCCE0B7DF6
0147F36D03857F23834C8A9387FF62FF340CF4F2EAAC7E9DAA07D8311F7B0CF6
1B9AA1CB7BFA2458A4A63FCB59F2904FD1256D4F620A7CBE618C77ACDE45F288
02EDFFAEA1B27EABC95BF4C45D4E40D793B206F240590F12095E25FF30C5ED20
D5FC8F86C6AF571CA120108423A5FAA070428C1E0D02F43196EB0DB1F8303FA3
E1A7C086604068BEE0CECEB3E97AC6B24B5484B0FCC9B428D285198C86D5C82F
F7EA57472075C4A13F943EB8EBABAA41288F0FCB7AB2A0A26120A2F751BFFCB2
F9B314DA727C4E11BAD9D6195C3E94071C6768280AC836D8129830E51A0CAD25
680BAD764BC8C9B93CAD290A06C51D429FD0A49893F8EE5A1F72F81346990423
5C1C8B306357EF02FC4EB7630475564218509AF3C414984EC3C4EFD822254D94
53810D660CA4776882996245F885495CD860CC46360D1B8AA9967653882E2A72
B4761174351D16A074B9325EC2384D266AD013D608BAFF684B79D4CE4254F574
3A38BC6A9DFE970B3DF244B7D71FC0A95ABD250FC9D96A7AD355221B734D6757
910F5EA568DF9349D439A80186D82F5C9BBEDCFCBB55BF2C128E82EEBECF51C6
5723F9F6998B19C23736074FDB1EB85B8FBE4B435A2949159C479967B1F79E69
73F8967634373D2F90912029B538050C0FC3FB6EE8C2F6D92A877B01DC6040B6
F062A653182F3561DDFEE0B6C32FC485C8C4B64FDB944CF34D01232DACF92C7A
2138B07E4490B4300A0910D5869F807545795B367AF085C0291EC328B5639155
3B5E5714A775380C6F6852F4E942F8A9372388FBEFF0A220785D4464B849C4F3
5EE0CE5E46324D67AF2D27CF8E65C6460E9A5325589831D98D667848209E8676
670FF563EE1C2DE42F65F49426F8DE55E482528E69351853990FD815365BEE42
622443BD0DFF6748096B9F12C58AE31979A0EB367B529099DBFA7D739BBAF4AE
CF94E570B4A9F62661AEB9834780373CE40FFB3344882E663CC298A3A988E231
0B691D48414E69DD770356E6271655CD78D4766C6185576AB453F532ED384D91
52C96D83EE26F14F9457530FEF49CD7D53359FC3902095177D1B9177BE6DC95E
5DB3C57A02473ECAE2AB8928A325943856E576ACC3A0311669B82F6F2F1FE115
851F72FE5172FF2CB08E341A3866174AB49B29126379A165479BE754827F7D3F
9D3DD80DACDA7A80AB2848F1697FD40F19111F9704E94C5BA8ECDBA0C69C3C2C
6F45DF904E0FD24C42D61F4027B83428DC0B1CB78456752E9D8320ACF7FAD0C1
38D72C20DEC5B244EC68AC0D65D26F6CAE345CF750B37AD94B2B49ED8D77DD64
7AF35F9DFDC8B9A82D11D73B15D74BC5B92CF6F8B50C041A6D7FC62FD4591BD2
24E8443A2A8A5E14294CFF7ABEBC9EB47A20F0BB6F43A2F4216AC01D8756A4F2
83B02EBDC39ACC8F606530653740B6D47C566CB2716B958FF603F3E33545CF0C
F393C32D1FA8E1101310206461595E0A1916C9EB562F65C3DBE6F9DBC94531CE
2D9069A0625A84BD21872E9D77E5C0EF287F3E4C54FC9B3D45D175DAD04898EF
4DC2B9ACAB38725A1C034536E586E89FF8AF1DAC2B8A71251648E94A8C38F61B
A9D94B71405849158B484ACC2BD5781EBEA23410EDE7115BBC4F3E5A03B629B7
844D3E22F67CB2EDA499FD1774668861BEA789189AB1E4AF64048A6962893FBA
C99139B10CC0FC15EC06624D98012FCD0BECB6D125B5EF006F7595853BA9AF3E
FBDC504BF7FCCDC9FA987C6CF164C2564BD1502C3042FC860D2A57D0DC6C6CB2
835B77B564586905D558A3CFAB0F1F3426588D5C85B8EFE222B5C87DE1D975B0
02AE42BA9306FA3032854356C1000DD66448EF1F7F58E8866423D2630738F7FF
D396A58237AE12ED80AA42868594B44BACA9907E6B81E4B2A7C7C23D4DC98DE2
93951FB23CD84832523F3853F437FD5620887CA4552EA4075DE2FD44702EF897
A1F88E1D152AD827B1417FF5914A7957F4E4A97F93EB14098AF1ABF45A552E19
330F4163F90568A28B429C64B88097A094D7E337A8A524A916106B65FBCA6C9D
D27B74D672849957CB06A86445C41BD2FF7B412D8758FE77A48F29D1C9748D66
FF8EF5DBA62361624F6F7CAD4242AE6C63D047AAC8EF82134EC418E7D9C37964
CF969BE68DAEB153CB086FEF687A97EE2C132E66FA37394304819539C3F37653
7A797036F21690C2831E493E506D5C30E7DA67A8A17A8CF160E6A6D7B7B9B1EE
D7406F50E20C8AA9BFB8EFF51583A407B44FCF8E56E8AC11FA4DD6F77B0960CB
072D938BD82A959D379752B85B8724839B34DCB65CB6DB50ADADB3549D8C2A6E
0ADD8DBCC8560F078073E90FBC96876598EE816AE86A9E6313BAEB3A19C9CF54
81AA7919DA959F6E02D4B58ED036836DD93C05BFEA28F75B96A312B5FCFE8611
28FE1052E382447F20D9D5C5CE9F2A08AF0D6D5B003C0F4B4C7E6EB61E8EA19F
4FBFEE28D392E9AC00618C42587324A335FF8011E6D9F8F9232D158F55217EAC
8C571BDBB6DBE06EF3513D3ECDBBCC9835FED5339DD36A5F2D64A48AD1BDDA0D
206B848DD3AB689244CE539D0D18526ACE79E7AA6D35E67B782D81D57BF7FD82
27DE2B5DF97691AFE304CA7B586F198C426A71DFA8CEDBE3DD9C95AC6B9BECF2
190F31C568C908C2A31E6042DBCDB9C4CCC03548EFE0FBE21F14EE87542035CC
5556EF51F704331B0403289CE534C734287D04235358E35F5F8E22FF7D8B99E8
70906BFE137C0A6914439F569B092FA345B6033FE162CDE95D25586CC1D40955
C5732D2D5B289650A54C094A0D1BD6B23C4E80A1CE58CEBD8598957170AB1C1C
2F1AE57C95CFF8AEAB40607EA392B79A62E0FEB82BD2A436D9F38D8D73F822C8
0F9479271BD886E88EF3B2DF95D6E38CC1F7D36D1F0430346BC7D5F0773DAF25
9E6D1B25AE236C8F40EFE0D7CEF877AD7CC02962A8454DA7B1EACCDA2C32E5B3
0B4C7A14CADCCBA7E4C7A084429EF24A10055B34D06CB132B27495ADBD423548
22E181ABE3F03CC743B5D948F4A3A17C86D074FA3C45639A712CF02AEA1640F3
EF5F40837D2D69173798BE030CDD545769353085EB8668D8257FDAEA0942D42D
8C4B94348E7ED962708CF7AFCE68CF821605ABD18E79E0E24179E719D6674DBB
B512BA97E4085C23730D344513F5727C9276D25B1F67A774A2F78E34D9C56E33
31914D98C794CF7FCA88F1F853BB363FA8288C451400AEF4366B5C88AB41A95F
59D465CCD485FA25D112091BE92275215F5B9CC8428CFB0A9DD8CFFEACA2A2C6
778E7FF491DE47B8D15F60DBE78E01D0BC6FB1511B25D2DE273606BD1CA92A19
3959AB65AA649F107218CA4B3F831256F505F49B0C7AA118FB07AE82459DD6FC
840E3AC7988F24B945D05FDF164A8A07D01FED1C415BE626188E866BBD57625C
92325A101CAADE9C8A9639E1A5BC876CCCBF9BB32CD6AD814BD3C9AF39396B30
866B2C3795BED2E7C3F15E2F6D65A54BD1DDE54B14799ADE015CFEA41F4B07B2
F9BB7D759018AB1280D84207A8EF4B7DEDE4863508F23C5F4EEAAC4E4F9DECBE
0A26FA5EFDEDAF1F5CE679108B5F808F4349DB244721C292D38D03849ECD1607
CC4D529460EE34ADE3E76F16600742AA6376D41599D813B0CB1EE425FA28690D
9569065D1E7CCB38BA40FA80982D7D4CD0E107D7CF264A0DA1FD6C0479C8F89A
C68DE87D86F3CEFC68FD08877039847A4F93868840178440B8F1CDEC05289F6C
AEF4CFB8DED75739A29DDAD519705EC0C3A425F84078E978ACC198605BDF9C0C
761E7D5C53292B0DA62CAEBBA821CB37A1A68981E7976DB11C7A4AE534F7CB82
528202B7034D169D567038B22C7F37AFFDFFEFD4BBC51F01E9DF9BAA46DD43F7
04C6C144117F66926DCFDF1933F05794E9CC21EA7D0C2B0EA94E74C443846292
F061A23A8A2B5C207517170D67E4537DA0FA791D854FEE7F85761AC21F5ED179
ACF71711C6CF8A570A41CA67956F4E4CD1681E0451C95D754292F7BFF4A7E399
1EC37BB009728A2856E7DA3E33E13E5C97776EF11C57229DCDD7F07CDEE24388
8F792962CAA04210E18E8DC78CA5B6EF4002B9458A285C769780653661813A53
7F261CB50A2D154329EEEB9E6EF3396DA997F177154BE0F7E8C854D247400727
9C19502900466307A7F51232FC7CAD181A26A0049604CCC83A5B0164CD19B7AE
B07D0372ADB519A3D29A9EB709E8CD328821E9E06057C62047DF399F0EB34657
D5CBE6C387600CEF35702E5B85EAC601DDCFD23434E55BDACDFB69E694B998C3
BD4B1D8AD1C2F07B233D5C50256F8BEE853F264DA42A26AE8553DBCDC0D888AB
97727601247DA4B7F446ED90AF3E047E5DDC31CB8BEE4F1056A0F5F54B21DD70
97DCBDB747D975077B37CF09EB1A04D5EC474E7CE6AF8E5C9A33F4E490CCF863
6921077A15D3CC7E89BA81EE6E462B186BDFDB94FA42FBD895E4995B290C2308
D532F4F5933A22F2D0BF6A7C04B214E7D4BC030A4C04197434298C08016EF802
688DD5B6E6D9D8FA37870BDB6DA8CBA3587D3295E9009E4B8BB66F229D6F979D
A2B950FA2299F543F85582740E173387EA71F9163AE5F565EF9E9E1E1F535942
7463790613428B5F744A7E5F4C554D55DE1D79F4DE20CD1B4A98893378A35418
E4F5C57B1FD8A7338FD6FB959D7881CF05026ED1F9E5F029E100822EB157C4BE
8DE7BF937427639C30B8CDC1E183BBCF3B11B6A8EB685FFD19DEF289A4ABBF36
E532BF244B3794C8F97433307BD0F55B1B288F76758532B19C9A5D8671310C95
A81F527207342D701677A42A35B20B9954E25AB0775B331B9476903B559B1B9B
C41C888ED4F2D7BD2C80616BA6E8723BA5D03DEE1D104D7298A55C50F21B13C4
3DC55DC8AABA31384BFF10A8ED872690385F7C313B4F646C624617185CE1398D
D99A002C512A367FDBD2855D60AA38E67ED99DC4BF2047A54FC6C22EBEF51459
824F643D0A64B1FA995DE6A95DF03927B7C581E5EA86F20004608FCECC884712
DC3A1A85FCA4A4BC03C41EACB3D0AA0312A786F20064267651C53F29B4319841
4B5016676E71357B95E63470F4115101A681935ED26A92D97A6F7AD18B915189
3768A228FD04BA221BA7912C86CB6CD5BBDF8316EDEB17493F0396CEF43BFA82
03807C238B1116F2305650E70F093B469000FBF31BAE9C689CD1912450C7EB0E
3272C958F1892E0B17E8196055F8B8EEE46DBE3E365F699AE6580F5E5589778D
D2124D46F3DAAE30261AAE94D1EE86AA19794EBBF430F02C0EAD44A2753E7D47
437FC593D013D08376EC468D7D4D1C107CC1543C180B63E02500FC2B064C734B
170675CB21F5C9F87636586E35780492AC4ACCEA843EE25A1DDC3AAC9F746186
336BF5DFBEBF01FD780E0983100AB715FA483D8EC0D2196294FE173EA579ACDC
D5CEB4EC0A94C48D271621A40DD44E6C1F7AC9E31FECA53748EB84088D69DE1A
08BEDC01A44BD9587ABEA3DB6A861EBEA89AA31EB966B8B703686927C1E4CFA2
D25F71F6405A534390CF2946EC0937FF3A5E59A47B265987AF1FCD09F84BE100
84B697393D180F3F4A22176993212C0C3ED11C21D6D2813A75D7F6618749D4A1
9FA61619BF5D84A7E9767F461B3D1633306FCABC35D29C199BD4F11FEB00458A
7F94D6F3647C0F70713BEC6CFBE152CF08CABA9BE5948D3AE141749B470B52A1
6BEE3D3FD7ABC6A911CB059C9AACFA4530B025B525FEB521E06B4A2EDCA36CC8
C9A60101CCC339F93EB855817FAF2DFAE134CB0FF9D9D9DFD5CECF0A5D3BA29A
39F3A276195285FB9C94A35355CAB852832C9FA1F9A2A1E56BB27279AF71AA36
6C1395238B7D4BB963706D65ACD7C5474FA361B05B78E9B1559957AE0B415D00
225EAF9E7322D017618530BACF47165362C1E0F6B93CCEBD0545DD344DF8B315
05C0313797A2C62016519BEF23B160A29C636690F9288B318E8D3296CFD6AE32
E51AEFB4E69ECA91F3DFED3430300D5004DB1BD23894F3294440DBE10F6903CC
DB9602D4EA1EAD42C5E0A4C52DAADDBA680BB6D0BFEE11ED0B96DCD170595B5B
6E3D5CEF43F3F9B9FD3CF18C154C9B018EFD0078FA527F21B057FE76D3F43AE4
8C115274A883E56E77422544B8C1F28D2011FC1FFEE9E695E41B73CED3EC2B92
5BB31F657CEEE9ADE4E9D96AAB4541C91A6937F1290A9BA8FF68E8C08F0F741B
6AD6F9F11E78E1382710BAD0491213C5C610345EE860AF1FD155930F2DF0CA10
21AC822E258497B1FFAFEAED313DE28022BDCE3EB0952AA553D48FAF224C5D05
ADEB10AEC18ED36A050755346351BC3250087B5A8B43DF3613AAAD505CCA785E
E521B5D53E4CC22332486C0EB7B476A69F111F777FA5037C52FBBD35D87E0227
1963F34DBB60EFEC36EB5962E22C0FBCB91E75EE7560555D4BC160D9C77A6188
69EDCF618BADFB52CB1E1A949F84FCC8AD92F6E50E78F18D4A9F9944CAC1CBBE
F5D71609B8051A714739EDE2CD6CC9FA5941A9666BEAB250F0B5BB39BC4619E5
041C903E5152533BD9043F279A093CEA32F30DFFA1735BEFEAD8CBB09B0286E3
EF954A639CFEE78CB0E070789AE2964EC0D197780672E1F530C05842A9727538
FAAE37049FB8C65892D5BE922861B409D22632762640FAEE2C642000EC5DBA3A
224E2F3E6E2534F9658EE3455F1C18BE8500B151C64880FF08A3D50C69C7BFFF
E12E056506A4C8EDC11F66F578D9AC9A67822050E8AC02582854830860E09994
BE8DB3CCA399DDE7FB9DA73311544776D900EE843BD07DA2C03167F903070520
3CAAF35786A17F123FB134AB5E6614B15FB7A9B79E2BFB5B4600E6F63F1EDF42
48F5F9DF2F7C8D5C7EA697B9157056DF2D8AC18DC05637D5916A0B3C549713D6
0FDC45DCABD1064DD97CEEA952EFEF0173D7578BCE88BCFBB287A1640C0F8B43
A4F9D0218CC46E933151B0351E4C63A6A28C55A78076DD69AB3105270489E216
0EF5A4095A0CA22AA4FA595CB6495F51B3E031A328A569FDD64228AEB647680B
14E3A0337E9F0FDF79EEAB4866F292173273F9BB47C7C6E951E4B065916CD70A
20BF23D724D5C3C68CF776B2B5DD722E315F6ABF42CEA8BA6CF7C24249DA6BBC
6BA9903DD9C28A08103957BBFD269B2CE9C17B631B61DAE20EA61D28475F515B
0D494B3B9353361CF3B051EA2A563685A2ECEEE74705FEE0EAF52EA831F54134
0EFC8575A45D4EA3DEC55AABC54AAA5F4B7CF97B1F9522C8E67E53E10E434431
6BA6932901B49C9624DBA0AD359F42338A5287B35E9BA5BE5484232EDBE69B3A
B51C09DDF77A5284DED6046C40D7B407C8FE29500285533C171001E27FBD3A60
5343DF722DCB7FC9ED43890F98CAA4E5CD75CA12AED4229E4E8DA93C47B66094
D218ABE7D3A205EABFE40AD1CC7D721E0228CC9ECABFE5FBF2659A407D84D2AC
88DC6A6F23AD71F24FDC6368F1913764A4DB2B68FB3FD52C7C776CC8A88263BC
677BFADFFAF7FC84B20A0C9A69AC52A688A6D1F66BE9F11717A630BB04224212
90360984C499D5C2F34240E4C10F5C540614DD8821275D647396242084CF9893
1E29C6CDC9903F7B70C31399D025D9B15DA66FAF14AB25C3DA4E6F2015150978
44435E5ABC423B54DF7B708B227814578CCA76042B1250DDBBA2C8CDC53F190A
25ACF8AB144418194637EA8BC67E7E0CACFCD114B0C716C9ADE0C54B1A8E04FD
5823BEAF98A0AE598113DB51E0447B67627CE7E89AD63DE98603C1171F41C4C6
B2894E19AF222C776275C3855E7D276B20A7AC46328110BD8600138CCFD28569
63D5BC3B8D16797B605BF15540DD278DF04F7CA22DA9640469563ADA4CBD33A3
9E3CA936874EAA36E2B5A8E06A2E4E3695A6D5FF260B10C83D113C94BDD1E2FC
6B8158FBA63B03DEE6070843E528263BD2839289B393889C265968F2D7D746B3
6A7B0067AC6EBD3EE4153D573E84470A34D73A66F709FC23A640997300714BF0
1BBE7BC8CB78B21AD31A51A728B7F0E9CD9B977E0FD77C2B28FD79C68B02B980
DEF671DC1896E73AFC4DA03ADC299B5C0FF7982CEB00753A601A6333BEC87749
32FBB53CE13AAE5B1E2651A8415BE4D0171E7C475CF320F883F919795B20D1CC
0B2E0CA0EC3749DDF214F14EE436319496C15859CDC7C6F563A330BB06435612
668940B9251CAAB8CBC7DFF25E4E4D6062D88DDEAEF972E7B7FD99889CB9DCCD
3FC712DC78262E2283DF88F44B9F9CC1F4914C01B34FE67E5949724C705F385E
8B6E1B74A5F0FFD6CE4337D97E6DD6FF7BD89A6098C8F7F6DFECF67C2FFF273A
4FE54746B1967C85642EBCB099B5A5AE187F556DF07330779615B055A364CFAC
4FAB67EC7EF8F34D00DF77E6939D5D32CFCF0C0AC3683DE73B22125A1E9A9135
406707C5DB1435A52F0611C59150A71346AC9C6093BE2D88689B29CEA5A206CE
960A2E8D57DD14D5712C5E2487EE6ED625D5B8DD28BD587EE244CEBC0598247D
808CDC2705BBDD21E7FEB4C3CF85CD27506B46D34E2B7D5A9E4FF5740E98EC19
83C732112C6ED490BE8FCCBC2CEB4D2B531DAC3E52CD273D67E589DE38FFAD26
376939CC85C4B8AA6120B3DC3A070FB0498DFCF4351939AEDECA3E47EE0237CC
188AF98414ADA57B34316D07DC570EDF6AB622BD80BCBFA2AA2F95E479422525
34868BC0BDD3AC613B1707570C38FFE9B764BFC86DFE3CE4DA93A4E99D9701B4
776CE16A260387D47D71DCEFB9B8224F4C3D0070684BED7C182E09969B534220
36D72ADE48CA91CAABF60914BABB8A383AAB039A60A19CC53E51F9671E3C63E1
22E92CBB9A9A407F124E630EEB95221A9702D4122CC474ACBAF05542AAAF75CF
31E028EA088AC4D0D2CC09E75AC6C5AFC70AAD0FEA6F7664923CF91449BAE6B9
02EF111D01003A427477861A866ED4164CB9E198C4B9C20141759406F079CCEB
E9CAC2825A0E15AA726F738EDAA6E408DFC7F867B368314444E5AF494F268C34
E444E15827C74133EF89CC4C0E39513E0DF5B5A6342E7FD23E1BFE9A88B62FE0
039BF05B50CDDA2EAC97A1A74FBA75C2095187001362D9955370AB20BB58F452
854088D7FA504E4C044D0D08AC19771187C335F45320C9B99445A081C24E169C
49F176A49571F3AA5B5911A7B08E413A69B58108DB119D83A66AD56EE7F85C31
BE5BB7224525C76C6090245BE7A3DC5CB4A60C72B62704A385C8736232BF193E
C913183B2BE2ADBC924DDE75551EA794895BA3564184656D3ECACBB7E5701BB1
EA4029C7C87BD07AB080FAA45A1675EE98A1F25F640ADF732D0F3522AEFAC3DE
D1303B2561A4D010A395A1BFC7A2423D1E19F32A02ACC53E044C5D225E0DA3E6
918A2E7B4B9489FEFBCEED02B0ABFA6979C0AEA235474A2581C01C4AAF34A4F1
2D422648506E87CD85E84C54E47C448AB0EECCCBC6EC89AB4B2BB7F38FA45B88
09B42D17EE04102304F2F59EAC491BD2DAC57265D7219157881B74A11C34B204
AF9532C52F0C3950222FA43EFF75AEA3FA058494B0BCEE5D4CD14339B1552C24
8BEC00A15EA0644E6EA0B2D2FC45B643609E4A0E2A68646E9583B6B9A75C9584
0BAB3FE5E394A7BDAC0A231CE71C48F0B53915E2BA2EC06F3F0F4D3D4BD9A017
0CC19568A0E08CE6352CB79629CB55B777AA78FDC8E849A8639D82520AC5332E
F9745D634924566D74CA6EC92FA9101102BAEEAE5C1875DBE42C23E12E2A3CDF
862EFF46EB7DE76BE0D3026F19A2F1C3406EE600D12894A5D3A331145DE6FB50
5CC19634E9A1548866F71F89F1FFF83FDB4A95D61ABACA8EE7F72E226767E7DA
44B28CCE75B08EC85DF704ED1096FAA03E32EB762B7D820678F4B87B292CF288
D338C41D889292851E84E6C051E5BA7802C3AEA4369E4D84762655252E4EA504
2348359A700512C58E83F41C1EB95705A5F87B523A2119EA55EEA56A32B0E9E5
1DCA9261B2DD7ED5DEC11533BB61F64831E2FA3C4DCD2ED0AC88448CBF5A66E6
7CB7C5F12DC8D789F2701A1BA05F704A98AAB4D1272AA1B110CB1933B6FCCBB9
4D712AFC36194FFC49C536C781000267B864708EBC5CFE0E7B1BE554568E750B
CE1F67BC159176BB6F1EB52D699348651F043D4E5167EA069C9432AF8F2B50A9
1B0C7C55571DCD924B0D34F0CB69BA5400A1B90902EFE6D08616931BC6894840
90F97957AA2935747FA818905ECC407E6EF7DC0A8AF9B3BBA5702094E65AF6D1
167A6D69C7CF3C1F7F71C2AEC11E183E80F9BDB652ACD08469CA33F48A75F1E0
5AA1A3BA678F4557AE639A505AB6DB819D2AE2BBBB45E45D328146CD2D3E59C1
3CCBF39F85EBDEDA01D004E07E7F0169C4A323261F875FBDFCD788BC06EE1FD9
53D23F4FAE21EF3258E5238D15F9441F375B427BE239DF0B84FDAE2A7D3B6F92
5A272B7A795BE551BF6619FADFF828D9486B7F8A14BC0986AB3C419AAAB27E0C
853EBD237F5FDBB582FBE603D54C4AA547436205126E4CDCC23EB4C431FC6C1D
BBF79938BA63D4825D72B3A9D95383171187CD0E33C8CD308C436B626F09E4EF
2FB3398468408AE8A9D786D4459F1AFCF281F198A586108E04BAB903A27ED406
444AF8B04DB5CFFD30D609BA46BA450959FF4EEF5B163AB7AC47CD6E9524B585
C3BC5D64B79E52DD2048D52A9F08ED1C54F6E91E1B55C0E1421AA0F101BA284D
079A7D06D8D7E20E0C24CFDFCD701FA8292504F21D932C0E061DA66A3AE0D5CF
B5B44F9F19AB07ED9CBC8965C8328A283A941567C12F105874B9137590A19CA0
7E1EF876D674945FB340FB100700C00E7F9C7935FD337410DD44E6AE702FDC9D
3AE326533B0353A7E13321F7E40BC45B765B5434116541FEEE25012C5160BFD7
AD66A2DE7D9CAFBA0562AB6D2E1E698D61E25B73FD1A9E54BADE8F858094DF75
5F2C31BB731FA4BBD9EA92E3DDCA58F94D3D94C9C818825445D66123E2F8AA6F
A28A2B5FB965CBCD2A71A79C21EC356D6835A996ABB04FF48A9E204340BB5046
3353AEC8A4C714923F6318B1350B31A0D131463DA2920A81AFFB9786E782B228
28CA3075CD8E5870230E9DA69ABC80788F2F72CEE5F5594B3BAA6EF230A314B3
E55EDA5E61D1A1451EDD31135B7BC3152013534861328A5E4673A4B180A8AE1B
EA971948B11D8D77FD3AAF7617125268046EA711B5E4CC2C47C2CA6FAC704A6F
74249E9F5EB7CA37809EEFC33FCDBF9E97F3276B079C9432AF8F2B50A9EB397A
8C8D49DCE11440628F29FE2A0B4E1BC615931D529A4623E4AA7702D87E361DFD
6D832ECB166386CC913D45547313DAAEBC97C6834B365C39F4F5C39DC16DF38E
D4E2751FFD3BDE8F7420FB22C933BF33A8DF702D160C3450D2E92A372FC54ED3
9CEF3F9292DD0BCCC266E6895648A666D502AEF3CE969639BF2C227E8B40C188
ADA0406808C1C35FE1CD42DC71941439060DE35C4101258E613F035BD913FD03
11ABEAA731D60C9B48B2411D564451000A0E04AC94CE203A5342F4A0C6AC4E4E
15345A4CDCD565D40CF215918EEEA4F41976945501F32BB383455467D217777A
118A45D64F0C307E4633954DE1FF50F26DCFA3BC5F2C09E2E80A2DF1732770E2
3885F7AE82424C3E6ED0957AFEDFD8D5DD4826883957A6B5BD673BE8DC07AC64
8F91004CCECA6AEC426023160243C2B8C427C19AB4FCDBF76A75C37414279DBC
8C888EBAF4151F7A5EDF4AF5A38356B54A3D5C5DF2288430995CF657CEB77F1E
1F44C8F5DEA18BC3044E7C0818DCAC1CC80F44617F37BAE7A5FBA7931B6DE99C
B3A10AF0F43D096C0FE6143ABD5547643DC13C9060C772C3A349267FC3B423BB
72D8199BCBEF66B8E5AA6ED04DE1DC64691C3E5A6DD7C0D8F3C059A9A7310349
BA52BBC020917E972B4F71C33EFAC85F27BEDECACFC93D5466237119A4471084
6BAA3AAB4C0D2D9D5B99DDB20E51F6E1CA132E6CB4FD94F482456141DD5FC2AF
9A36305E367CC965236246280BD148E4B7927D0D02A22CC10E8663E8C709D44C
92AA9DC245A90B34978E0F2F51918E4A3329EAF28F337FAB5449967FF861E0FF
DD170D0146EF58767530D9B2B3A4310D96A6EAA5C3E48BDE500B0C3651659F05
3408912BC07B5AD3346721B2A9283BCC476EA3A5B8F0D5EDC1B05A19F44804FB
ABBCCDFB109F708BB748E84968FA1560B468313DDD88F2C455E920E05E6AD03A
0D487B9E33319AE8172CC0EDD3FBEE6667EDA6AF0524CE3A6E4825822602693C
071225D0A59742608FFD385939E3BCAEBE1D94D945CB8D94E4C4EF01A237EB37
4D341E779676939D51EBF66192E45DF10F5A5D82192F24C32B19B2B57EAF8360
81F3F98F948BDCD91823D65B4401DE08FFF608A41F7B855EB541D709EED2FF28
FF48234265B4759B50D24BD711DAC5557197F8363569907BCDAF2953E01D7A29
91ECB278C4016627D33FF456AAD0C27A6AF8C0DBF66CCA17C557F0328373EAAD
96FA5F95EA8FA57E2912D6B2A265DE09B4399A2AC29D7605F00B0BFC2C39A98B
88135FEFC62A9275F033A419E891E8C5AD303FF87050363CCD7CBBEFE4B96BA3
306EC5B8DFD78A27E926494D5F4D94DFCE0A71856AF0450370E650B2F47F171A
0E27FE61579C2C592CB9932308234FC559DD1F7D85A7CD3BB80421FA781D943F
BAD8C537E382B549903534CC577FBE9D2FBC52DDC37242A0294A75A62AA83295
F8DC9FF20536F140D86E13DAF98E0E5BCE6581A2C28C351126B799284434C917
AFE40595599C65393BE11269C8DD7247C96D6325232568FDD26895CADF70334F
F6D7B446F67BF70AEBF35A2AE4A2C83CD1D23D5C8E17CF1B43A482C44FE52E57
AF48D10B6839386E94363B2114294E66ED2C79285D45CEA61233300CFF0B0F7E
7202997962FC23C848514061A053DA395A55DED9117CF47FFEB100C86B0A2368
9C1E26E606FD9FAA8DA38143132E64DCAA23560BBE7D81DD62A4CD4EDB38DA76
C7E3B23B1E98D9BC3BF01B9F8163379C8D29218157822D42F334B885730B60E9
75BEDE1DD45F68655BDF7D61807108BF535C952F15C9DB115735DD81A5060224
D205E869BFA739AEE1EC29BA8D4A7B9146F58D138C28E8014A70AE3D5ED7C5E2
04E06DCB2A6283DB2082D0D84D0E0B99B789736594D7F6C77E24976163B010FF
9CFAC92B4C43DA45DF2068ADFB8871F86818AC8C0E61BB4F263BF9EF4C056B20
BAE69307301C2ECC869EC64B04BAD22B19A6E4A9A45C22F467218A278C0BCC41
24C2F3DF5BB77DD35458B68FB8849A25120A3FB87F2E87F50D860C14FC3B2E6F
B26F73D4AAD45A66CDB8979F8FFFBF749187BD427B0CCC77178607B4246119AC
8D529BF3F2FFCE3341212E7F76255226285396716E56A1A20CB8F3D82BDA0E32
3AC159FDA3F4AA501BB96160A11B85CC056965F6ACE231122B16002B22EC8018
49CE6FE46386E9D7D18BA961EE5008309BAFEC5BD2974FA25983F0579F987F17
D148404CE30DE9213D6A1D7F3505B66E6CAD41B62A02D94C1E90B2E90826ADB8
C519A4BFA85DC29ED460FE51EE2244C51E9F3877E3C7C775C6B1084D6ED87930
6B73F2C19A61D653564D8C789BCBDFC935E0EA158B8AA5E42E190A6962680A04
A5CEB915B8E21F640745A0AB61C388BC623D906EC7632CB075B9D013C9266B22
3C04E13702E590AC0C65C7D792B49F53AEDC755475660D1AFCCB9BE9B960E68E
541F9694971041765C625BDE769F8E07A1D0E19D22D66A4FB64617BF254FA152
2DA2EAADFB1F7347DE1DBB43878E3EF52717811B1078CDB36CFA55D57FC0287A
D45948B2225F0183BD481A526F5680F6A2230F6C11263A0B11C7D838FB6135F9
BF8DCCC03323FA0CA51BDB850C6D7EFD955F853F8BA0C0106657B45CBD2108FB
B64FF3293E79CD0191AE71DA62EBAD98445F67552A327FCC97FDA4263977645B
0637ED262F750C65F1F16F7E55B427B524171AAFC2690E204B0D7C712C136708
6F0E83C9A242C22593968B02F300A243A7967826FD4095095317784AB2F2B4BC
8184C5687E9369CF0DC708EF4585381F74DD1E8BE9F6E60CA6025E1912DEA252
81CE4DDC7B4446682C841CC1A08FB4AE24028900C9C8737581E20186919E6100
C1EF971A8B40D3229C18FF6545A06055EEC8313272070103BD0C1A0CC2622351
38E853A6CA07D422DB05A9DDBAD2E69B4AE827864CD1D0B6374B61FDB2572E1D
D4EE78D24DACF418B6AC1E4520E6A9CEBCF37B79B1F65339265C3BDC27CD99AC
7D748CF275058DC4EB29885A11D100A928720A707BA004D9543A82B34FE5BC33
67497C95A462341C8707177AF767B838533F4316EA2278A65E36711CE80A4360
D829E3905EFE24F9ADEA375AA5175ABAE6754E91CB540D475231DC7200199F5F
77AFDB89149FDB6C77486ED76FCBEEC037C1741C21753E86F8A3C4326C4C0619
C9862D301F4A05AF4EF462CDD5480E97BB4606EE953350A75AD01DA8E2D63C16
9F8A8EC00C8BD6EB20AB66BC1FABC48E4ABE10D424BC4DAD86E4A3D0F951A935
7BEC5619407EEF70039276A2D87C47C937209B3DDB4F2FC6DDE67D9ECDCAEB8D
788BF2FF6A4C39417962E0DE97861AD72DEF9AED159EEE34BB32FCC219DFFAD9
A7F7A6CC1703EE06340147C884980242177CA5CAEA90D1B9CC6D71FF2EED18FB
9849FBA7322C021122E962CD756DE48DA93798FBDD034F430D03D083CCD3C464
AA14A393F696E13A165B5392C8EFFDF61F6B37CEE8A266A5B34F3F4239774EC5
D2A532A4511BEBA4F76A0AD5DFDBA6EC952A4F37948B63263B6F21E5DB0B265F
DD57193B8E7F00C2162FB111DC49768421692FC74AE7FF1F486B78D68E137D1E
6B740311BDC4A44849E67B8185BE80DBA33BA7714FD25DDFFB5462EB6A3C9C5F
76C2F9071A4BF4FFF2AFD7A0B06B3F26FD8DED8C27B1E7BED385BA0DCD0C6ACE
9FE03A28780D379ED40B2762E8ACBA7603ACDF0B36B199FE04E3FFEBA9DD8A5B
BB4109EC617AE63DB67A2E59EBD52BE4D1A042E188EB1DC6526906C3E0A204A8
F86CA2DA812DB4F23DD7676EC6C78E2CBC0F420209A2ED5CD01ACC7E1D0401A7
FCD4D31BC83973875938BE310D0033D4C73CD6C95A76CD17A0E0CD0B1575FE3C
1246D1C4905B82E9D446F1AB2C3BDAE41CF5DCA53EA0A57F3C9E271DABFEEAE1
0AC5CFD56BC04A95B60BF4D8B3AFD0A002B3A6E4FA114131410D54EB38956804
277C8B701D81BF09D1921B8F971F237137E2CDFC785D2F29BDC211B7BE7F48DF
DF2E1D79D46D96169AA4E4AE14D2E1F5A9C868442C5DEC207A5BD9D114DCA2FF
A247A7399B354B0EDEB8272D75E4EE205D1C9DEFA855C8CF4E76AE27517A9B3A
CEEE42F3101F449A4E2DFA513FBD6A5E52B07A1D5F145B44324FF1067AECDB4C
9595DF4E556427A9F9AEEC925999215C5D073D78706987CF54543DE5F6C2250F
BD151440F4C5CD454FC67C6D401C97D801F290968A3807DF83B40761D4CFD11C
B1A45972CA5A07EB59A046D1AEC79030AE60BDA3395B9FCF935EEC53FF61F2AA
B48F1B954211AF0A38D6CAB3BCD66979D1B7549CD557CF4DE95399C560D65DD1
CD2ECB3FC35CDD825E561FC8B7FEAB73C6F9FFA2CA867C2CB50BCF37C3298E93
A8F3342F0347B8EC0280AAF49289DE4F48608D7802609D1B371A0E9B0B9F260C
CF63AAE519616F27B6087AB9E1FE029A8B85F8063CEC788CAAD96571272BEEAC
E0ADB0470750E5FF72B40FE4FB7351F662B254444E19C97C945ED867DE35DCA4
A05BF479F222FF268112EEA024442B766DEE34F7C92B172B320B38C49770AE23
986F8CDC1C1DC9E4C2143262CC7B9181F685FFAC786ABEAB809427D3C924672E
41859C4AC4D40F018C74B3E2FD375269937B8852565AAD3CDBD72D3D3AD4EC59
E2A01CBC945D740CCA11DF380F93FA71FD2DB400DF06C70397503DF67C10B473
77A99EBF04DE65CB06AAF333F91C2D2910FE5E427D4554B341E5E8FED4DA8AAA
62D3616BC1FB3B16564AB484434BF5756D66DB6EEA9BB7C628CAC69AB7E91CD0
71D7FB40791FD7F65C55D4B91402A990D44D61AC1BB404815E4B59FBC3267918
8117A12E9700B7EFE75E9936B7B10568EB0BD821F8B99500A30D1F959A117F17
6AE8D764D67FCDC5BFFCC5CE9C78BFA2B830328F9A6D430243645C55EE47DE4A
A52ABD988594A7EC882C3255602E6E2EAB2276195F1C8AB164BE9E46AE5F5E9B
7B21BF920C6C17624E97F8035582667799D7B99A1DB2A7E90B50C852AFFAD95E
18348CBAE03FF8269ECC9C3CBC78B0826C9BF4310CB34A64391848CC391F73B1
DA470B4CE709EDCDAB6C133AC3DB55A9E502D237B04DF5EC040F31C0998C96E0
C85D0BC622011CFAADD34DCEA7FA92275240BB5ADDB38514AC894FFC691E00B2
E00D3A171F46D3C28D1EC7256EE3FB416D8D4D75C7DB51C8299B1400E00177C6
6CC7D4FC175BE286F1F0BAC8096B901D0B9B1B6A61CFBC3FAEA946FF762873E7
F83B3893CECFD951BF6DD219975A8E29EA9053C5F3EFB0EA307483F841C23B76
6D1923CC0FBFBCAA75969712B8F49B644367248FBEF392A68066B14549D63F4E
170943189C62C9D370C182723B4EE418F35697E1E5A8B467F6A0977BF8BF8273
81B960470BE19BDF168EAB3B30CD4F93304E9E0DB55DD4D84975E20E649FBBB3
F049FE4E20CBA5D8C08F62BA17383595419F57CE99343D1361997B367E27EB09
E48873CF999ECE452C289B000983EE6FC9812487758BEC50CE0C7C19F53FE1B0
B9A5D4BB9C7456FBF0BD757E71985920DE146F92E0AFD080DA0CD80D8DF7EBC8
9DBD03C02B591D9297A1187A8197CAFF1544C76C128632A537E9C871617DDF8A
865940A127F49BD2B5ACCF7ED80CEF4FE96FEA44BB35A0AD2E0AEBD3348B4369
F177017BB56B69EF8FF95B5C88E3259F03D0B33539715E615529B910AEAB59AC
26558DC3FDD1587E3A45C77E8CDAF6DD7B3F015E6E757106623E1CF19ADF61EB
8C951B7CC06FAE0DAA5C0FEAFE4828FD1C5684886771364CC604446ADA5AD367
D29E5486DE35D2F2D2EF3D89F90EC743DE67DF9AE88CD6509F2756BEC93C6434
B5BC644332D848BF0FCAB713ED4C90282489B3F1E99A576A1576D96EEC251817
3CCA5FE5D3FE0BCC30962B19E76A7776F73A3E97B8926F0E4B4693B8DB4AA1ED
D6D94926CCC30F1651B3CB1C886ACB3D1022F770E256CD75521A8C0209E18C3E
CBE178EEB5B0C659BA219BA4F370699C8678DD4E40D33AE8B2BDCC9705D1EC88
48293ECD9599CAADB3C0CF692702C7DA4FC76A3C64840ED949509C5BA8971A83
D991A1C10223AF53A16B1DCD7C5DF152E571C9E737B82D397E82B1E979FBFCE7
31CDDAE1D91474488C312C3CCF4ED59E641B30C4AEB214FDB8FB2B5595BA0B6B
45DE829297D1C902409E2D391E2FD8F764C2C694137AD808721E4CC7DB3E2260
45C8A3E76D78E5E03162404313CFE3509B6512F0FA82155AE1D55E91A79F9E1A
FDCEC7632E61975310567A38E881907F483CFC9E1D0D4D02C01EE99EBDB9F5C0
0CD1E96EC3028ADD17368F5DDEC4C08CB689CEEAEC56A35B878719C1134B1DA6
B14C860144656550EDE5D2768687CC471A1EC7186D318D849C05B5ECB5D68F86
390113BF944E37480AD3FF9C10590C070BBF6A1C78D31DBF870413913F31B5B7
732486362F167707F510EA6E5F9EFF22EE7F8E7044BFFA3CA29E638C17FDF116
1C8AF4879CEAA37352D164013DA9C1D285F15CE8F30B23D243ED4B9C0145E452
1DABFD13AFFE391BBC9C50A4A86482B414FDC3E29F60912A719A5C01D1DB7DB6
F54F08F2F02F17C0B8C688C3CCBD2BC6A26E593FD1EFE403C55A3A395AFB4692
EEC35807668B6E1F5151D217B12ECA12783242342904893D044DA384E4836D27
E208E0FA790C5036965090789D4F09309A682485948E72844929F8C71C37CA3E
7472AABFA16C8AC88C292CD50B4F8B65D9ED512D024828F35A805DC0E555CAA4
9C4FA86CC453325868F716DFD2933D5F0B14A0BB45AB5F76462DA60289ECDB30
6F226579871CC67279A95F558EB0B9519BB7E0E7EB32C428F531FF5E355D691E
098D1FB67B930043E6D41E963C93AE5F9DE5F0FA3C53B8F7DC016D30171DCB65
EB18BA4DD295682F073DDBB14B30E4BDC25D557A041C1651427F35A056F4488F
424FC52D9CD5A4A95417AD6AD651CA2B01DB8998DD5432875FD8B9DF74AA62D7
8652D5A58A436D4E05DC8A2CA4B2EA9F2D3934C496AC0535BEBA631C1B785202
5EEAE9D7B2EE4CF591CF933B7F296D4999FB3F487218FE2B4053BE0D65356041
6F1C3F82EA07EA920A1DED65833D951B0F67CB64B2DBF17C292D7423776BF60C
FCC7177BF8C8B01C96CBBA247856FEE0E53048BA397A1050BED2C73A38AFB4A6
39B960AE3C2248EB17D68C3278F646568A93C1AA30282A4C27D2005A8E376633
99E376D7623396AB329CFA81A37DEA422FF2AD41D86966380536A4E8450DCBF6
20E7172AE0983E6A1226DB67AF83A224BAC99018F0FF791201E6B672905E7A42
22EDC7B0B7CAF2C25E0F0CDC481B446CAC7929B4776F0ED526FC8599DC40F28C
54171E3379E1A8D2EB0FEB515AEED4AFC8DB38B5EEA1F7FEB38C391EE6942B36
0686E2240942C1118CCADAE3E13AD16E3A9F2B96ABA08B86D80487BABCD3C632
61BEC34F44B1DEB1CB6377C562ED0FB04F8CDE663CCEF1E4976B8FF498F9F3E7
573651E6C426891225D55FDD887131A747AACC297A7A988390FA62551834957A
65748F12B7854C79D418156328B803BCB0BBB643CE5C2E92F4A9C7368F9F9576
8B30FE286982C8A0DAE0DA40F9E9896FE3FF392ABAA329173624544E657FE8AD
81CA2985015CAA908E932F0CBC0E82213C70F840CB400B622BC72BE83819BE7C
BE6917E2F331019C9526E30AB1443F8811F49E3510A8A20522F49ABB23BCDB74
BF15148C1D558F2E1A8D8DA3FA6CB980BBFCE8AEE3A42213B728AD0C8D324A8B
81D92F63481CCE5A69F5AB9B70F3714956B53C8B4A59BD93A3A2814C69A2AA45
CC94C7BE232F3A782939220D351CE8172F123A87B795990AA33E9A6D74B9FD8A
5567AEF09E6386062BE839C1436BC3FC001C10BFC224B9DC9DC6348F24D9B0C5
82D7B541A18142CD6FD25403D4B70E81649C4683ADB60EB40166DE9EE7C7953C
52987A88D79C2AC67E052147A1C4EEF635DC2D77B78DB2056ACF45A34F6EFD42
23F1311BCE4855C5200DBA3AEA3E5A06C67184BBCFD06415C2AC6FE017F11C92
9387E8949B98D7DCB7C199E213FC073A9118B3322A5C34898328ED7A619431B6
02A7764320806D2DFDA90A21716E8109863D0DB4AF732AF712EC6B259E89C77B
278D5A0890312370A4A1822C4419DEC88116027E7DBE26A0D6B4345E6E904154
C94323785011E6AE9A33722A993307718BF1C872B15893BD395915915D0DF608
4372CE5C0739019E61F6A967217740068CFC71C9E0D28870F8DC7AB5AE8E3828
04BA1F3E668B0082728BB40A238A0ECEE93710807628C58502533F8CF76E208B
1663ECD8627EE19023144D99A71EDB1832C76CAED42236A0B441C77D0F6C23B7
3DD11703F5A38DBD4B4742C4D58879912B6BCD096B1D55B6C9B5443957940C79
94EF0F91B12949ECA1E4BF699502C71B58C2F8798C93FA35EB4A47DEA237D9DC
B67DA1A3B9CC6AB96CD1A4C34501B13000360A382EF21A8D673578882564F446
CE1C868F3CEB7E7DA3A29EAB59DFD95C9FA0C3A3947194ECD03E78CBB98AD2B8
B83CAA23F6AA65A25A75C4CDE577562233C79BC5BEC51BC55416C81961846564
EBA18EF8024017E8C44FE31CEE80C062D51CCD067B0DF4E0E6DA8E94436298CA
30BBC7ABC8344EDCA9ECF658E4B8320DEAE5E0A41A0FB8A15799F0768060A084
0574F224CF991E221D845FB24A7398F5220028A05E0701B4DB1D6996FAF7DF56
F7E49624EEEB79ACDEF6353FBD22853FB8A0343FD50282E14609167620ED25C7
93A3185CA2BEE8160436E38390D473C37147A02155FF0B0D8DE0C97695854060
A434AA1843C9D5F5A075ACA65C77B5FFC9686664A2B07652F552C9010393B2CF
ADC728968A7BD2B24D8B5F2ADFAF9C4ED4EB642933D7456FD9FF0187F917107B
0552535AE145C68B72B70A7BA98705AE9DEA633EC7FD76DEF0925DE75F6ABD49
98ADC8F646B7DB9F1466583B99B7090CDAFD59EBCD8504F5458C46910E36B59C
86954A5B1D7A94B10C7396B8A88110D005A1B66901FCCB78F582B5D4670290F5
A700FCD860A18F319CC419035BF175B4C7736E70F3479DB5BB52823D2261AA9B
3FC2EA6FB75D319A68FD8433860525AC2640498D790CC1670E740281DC179485
36F446C9FAF0EE7EE5D93B7A9EBB301C293B0AC4AA0C81A9FB295EB19BB588A7
5DB103C3AE717023F1A770195DEF710A8A358D1BD980020AFE4806DBECAD510D
721956F7200E443D8DEDD42456F085BE6A28F86D2A6A96BA4FAC90E6D1C023C9
E338D00718F92839E8EF5D70F6D64B8B8AA0D55CB4069203D0C0AF612CB8A2CA
CEAE8293FCC0AF84A5F927A1B45E174E7AF7E01C95ED4956DDD91522AC4C8ED6
BFB1D32A93D8C552A358CF57E13A69555F6D64495344517728DDDF2574D74A59
D39FD99EFD40F123C0645E08E2CB52945C6241AB1AD38D69132BB3CD732E46E8
21EA97C8E9C8923604AC7FF6C0E8D54F334E5D884B837CC31C12C5B4B8699653
B19211BC1EE494E7EE3B620CC5CFB95A9F1C095C1E7DD3EBC0D2D540B9AF3FEB
0A7F789B8817CA0C871AAB3CF1A2A6CE6916B639CECBEC7DBDDB986F9AB4A070
5095755901A39D9452C9B1A35A617C8065F063DACF7F5D5646B3F1C97D31E899
349947B448513C7E83EC06BA9A424AA2B07D0ED48F9818F5874E6BE9F0D04030
7FDF5269B44DAA1988568291339629AF874F7EC7B116FFF229AFCBD8D7179491
8E1EE85ADE97A4149F93605BA3D6B2373D5EA13D19D552823726003C2726C5C7
9CC97892630B8F75A15F58BE37C2E399F625ED6C4F409F2686D64842B4DB8797
58EE5324AABEC2E24AC966001F8F60F988CB6E49D09133371FFAAF646D46E104
62A21B47A2C431ED3D505E813BD5E82094CE6AD69F5AF64BC33D9DFF83124F1B
6361D12879D78AC6924B2081E9F17A22F93329122B05D3A22AD0C63858AE1BE7
B64FF47BEBEF601B61ACD5AF2E7C68BBA580786BCEDA0DC1C9062B03BD9B852E
C369C9D8332EA2DD8B95209A2D5EE81A876EB0562DE3626FED3F2B5202ADE986
B4B00D3704B9735D48919C7836E106C35431F99FFF453920926C4455FE7FCB5B
AD4924D909C6C4E7FB3877A8867937F5B36B5D038887F711441471ED97209CD2
862274319B1AB56EE24E8CA9B9BACC16354C5CBFA6E2D1FB33851CBE6D6DA141
45B64A390D71559AA06C1458B3F69670B78262369EF8CF98DB0D0ECC7BB02CA3
56C1FCCE88682C1415685D99B9290A8F4516B6C06521A5F48FF9B1FF99C7C1EA
555DBDABC4ECDF28C3612E5D86F737B9B4D9B21DEC2FB4482C66CA8FB71801B8
6E652FA1ECB238E16D08A9A4E1969A8E3000E5A5F9F17D9D9F49592C6031A15F
A154BC273E46C61566EDD024917AF07AC9EE891FED99FFB9379503BDB435118F
5F1E9ACC97442424D1424C444B9D6F753C4A11B6BBDA6A61B62F7D0DA55E55DE
F73723DCA9D94812067CA525859B737068843C7054B29D9BB93D4F979B204D6B
B113EF88602C997254B2FE2A13EE619AAA30E547AB884564ACE5A10E7C977997
4E9CE9DF1F99E2720927EA02990A1BB994275100219534220D762D86D5AB2EC4
0091A23B8351646967FF0EE0428A72DF27F7EEFCAF3B4408986E74885AD1D9AE
7E6695207FAAF7DAA70CDEFD0AA33C02431D8BED78540D3ADB4F83715E793BDF
D8E909D817FB6842438DA4ED365E33574447EB9D8082376AB33F9389597344C4
D8394F8FD589D20BF7476A22D40D2D3D20538DCF660119946EA83083C396303B
2BD37B09BD7BE2CA3E83D452150348E2189326529C25E74C45803CFE94687B5B
387506AA953855D8E796043F01D95C429FFFDC4ED51E6E3B69183FE722021F11
3EE604D73C6AC9182D23B541F6CC6855095A991C7A88B73E81C0C0FE11787374
05E195F59F15F7C116DB632E6A0FCFFB675E53756D282B7664283746620C69E1
C7A269CD8C403B217A3DF0B4E90F159A803EA9F07A50AF1177739126415A5A26
12EFCF67D92F2439D401260244C8B96EC02FAB4129AD738E68CC0B5F71372691
3ACBBCC1DE87740A642F53790E2E266293EBFBEF1509FE0D4286F6D1D68D105D
D8BD4A778D3EF298E7C5B9E0BF34045F7AB2694E5163C990692AAD54D20F4D5D
DB75E88BC0277A5CDDE917F731CB1538453A6B82559908131F21183A3673AF80
0DDBF9C85DA565C985C1C3E499F26C159E173184D53F802EDB87CBA01B2C2F50
F9F2E8FCAA71AFA20395EE0973E26FD9BBDA887BE618C66FC8F05B15
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/WS - Wahrschein)
@start /Fa 134[465 530 4[435 4[571 6[448 1[436 101[{
 enclmmathit ReEncodeFont }6 885.568 /LMMathItalic8-Regular
rf /Fb 214[1328 15[1033 23[369 1[{ enclmmathsy ReEncodeFont }3
1328.35 /LMMathSymbols10-Regular rf /Fc 203[993 52[{}1
1328.35 /wasy10 rf /Fd 41[621 96[449 320 324 320 427
2[449 1[234 427 1[234 449 406 1[363 1[363 449 406 9[811
595 595 578 449 587 621 5[617 415 294 595 3[608 2[595
6[234 3[406 406 406 1[406 406 406 1[234 4[320 320 40[{
 enclmec ReEncodeFont }39 664.176 /LMRoman6-Regular rf
/Fe 9[470 17[470 13[732 91[418 4[523 366 371 367 2[470
523 784 261 497 1[261 523 470 288 418 523 418 523 470
9[966 705 1[680 523 1[732 1[732 705 862 1[731 5[640 2[666
8[470 470 470 470 470 470 470 470 470 470 1[261 314 45[{
 enclmec ReEncodeFont }45 885.568 /LMRoman8-Regular rf
/Ff 254[261 1[{ enclmmathsy ReEncodeFont }1 885.568
/LMMathSymbols8-Regular rf /Fg 154[966 101[{}1 1328.35
/TeX-feymr10 rf /Fh 168[1138 3[615 31[553 1[553 2[307
46[{ enclmec ReEncodeFont }5 1106.96 /LMRoman10-Regular
rf /Fi 160[909 45[606 1[606 47[{ enclmec ReEncodeFont }3
1212.12 /LMRoman10-Regular rf /Fj 198[470 470 470 470
470 470 470 470 470 470 4[732 43[{ enclmrm ReEncodeFont }11
885.568 /LMRoman8-Regular rf /Fk 134[634 739 1[629 2[613
4[776 1138 4[749 2[603 676 2[683 13[800 1[1030 3[1258
17[361 361 30[739 27[{ enclmmathit ReEncodeFont }16 1328.35
/LMMathItalic12-Regular rf /Fl 162[361 1[361 29[1012
1[361 361 650 650 650 650 650 650 650 650 650 650 4[1012
1[506 506 40[{ enclmrm ReEncodeFont }18 1328.35 /LMRoman12-Regular
rf /Fm 650 2[723 5[650 17[650 7[975 5[1012 91[578 686
686 939 686 723 506 513 506 1[723 650 723 1084 361 686
397 361 723 650 397 578 723 578 723 650 6[795 2[1336
975 975 939 723 957 1012 885 1012 975 1192 813 1011 668
469 975 1021 849 885 993 1[921 975 1[614 1[1012 2[361
650 650 650 650 650 650 650 650 650 650 650 361 434 361
2[506 506 2[1084 3[361 3[723 723 759 8[613 1[613 16[{
 enclmec ReEncodeFont }80 1328.35 /LMRoman12-Regular
rf /Fn 3[1196 23[1046 105[956 1136 1136 1554 1136 1196
837 849 879 1[1196 1076 1196 1793 598 1136 658 598 1196
1076 658 982 1196 956 1196 1046 9[2223 1[1654 1497 1196
2[1470 1616 1682 2041 1[1685 1[801 1682 1691 1353 1412
1649 1554 1530 1625 7[1076 1076 1076 1076 1076 1076 1076
1076 1076 1076 1076 598 717 45[{ enclmec ReEncodeFont }58
1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fn(WS)717
b(1.3)g(-)g(1)h(Bo)-60 b(xplot)716 b(zeic)-60 b(hnen)716
b(-)i(O)-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray -741
4800 a Fm(1.)p 0 TeXcolorgray 651 w(Eine)618 b(T)-108
b(ankstellenk)-36 b(ette)619 b(hat)e(in)h(den)g(Shops)f(v)-36
b(on)618 b(Filialen)h(die)f(Umsatzzahlen)g(eines)874
6792 y(Tiefk\374hlpro)36 b(dukts)514 b(jew)-36 b(eils)514
b(\374b)36 b(er)512 b(einen)g(Zeitraum)h(v)-36 b(on)513
b(15)g(W)-108 b(o)36 b(c)-36 b(hen)513 b(b)36 b(eobac)-36
b(h)g(tet)511 b(und)921 8784 y(der)433 b(Gr\366\377e)h(nac)-36
b(h)433 b(festgehalten.)p 921 11994 49436 45 v 921 13985
45 1992 v 1629 13388 a(Umsatzzahlen)p 10213 13985 V 1373
w(12)p 12886 13985 V 1374 w(12)p 15559 13985 V 1373 w(12)p
18233 13985 V 1373 w(12)p 20906 13985 V 1373 w(18)p 23579
13985 V 1374 w(18)p 26253 13985 V 1373 w(18)p 28926 13985
V 1373 w(18)p 31599 13985 V 1374 w(18)p 34273 13985 V
1373 w(23)p 36946 13985 V 1373 w(23)p 39619 13985 V 1374
w(23)p 42292 13985 V 1373 w(23)p 44966 13985 V 1373 w(23)p
47639 13985 V 1373 w(24)p 50312 13985 V 921 14030 49436
45 v 921 15867 a(Zeic)-36 b(hne)619 b(den)f(en)-36 b(tsprec)g(henden)
617 b(Bo)-36 b(xplot)620 b(und)f(trage)g(die)h(angegeb)36
b(enen)619 b(Kennzahlen)921 17859 y(un)-36 b(ter)432
b(der)h(Gra\034k)h(ein!)p 921 20559 51002 45 v 921 29546
45 8988 v 3934 28949 a
 currentpoint currentpoint translate 0.60104 0.60104 scale neg exch
neg exch translate
 3934 28949 a 4368 28949 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 672.06929 a add def
/d 0.0 a add neg def /h 126.09666 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 4368
28949 a -5639 23320 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 762.46544
 0 90.39615  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2
lt true and or { /viceversa 90.39615  762.46544  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline -50.85207  def /maxTickline
75.2446  def /dT 3729358 abs 65536 div viceversa { neg } if def /DT
2. abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ xStart } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 75.2446 0.0 -50.85207   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 762.46544 0.0 90.39615 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 75.2446
 0 -50.85207  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd
exch def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore
/yStart exch def /xStart exch def 0 dup 2 mod 0 eq true and exch 2
lt false and or { /viceversa -50.85207  75.2446  gt { true }{ false
} ifelse def /epsilon 0.01 def /minTickline 90.39615  def /maxTickline
762.46544  def /dT 3729358 abs 65536 div viceversa { neg } if def /DT
2. abs viceversa { neg } if def /subTNo 2 def subTNo 0 gt { /dsubT
dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend exch def
/tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75
def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def /MinValue
{ yStart } def /MaxValue { yEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {
 0  setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 75.2446 0.0 -50.85207   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 762.46544 0.0 90.39615 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -7064 17439 a Fl(2)335 24931
y(2)5650 b(4)f(6)g(8)5324 b(10)4999 b(12)g(14)h(16)f(18)g(20)g(22)g(24)
h(26)-76566 b(2)p 1 0 0 TeXcolorrgb -5639 23320 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor   0. true 341.43292
14.22636 654.4131 42.67911 0 Frame  gsave 0.6 0.2 0  setrgbcolor  0.1
.setopacityalpha  fill  grestore gsave 0.8 SLW 0.6 0.2 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 341.43292 42.67911 341.43292
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 0.2 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 682.86584 42.67911 682.86584
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 0.2 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 512.14938 42.67911 512.14938
14.22636   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 0.2 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 341.43292 28.45274 341.43292
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 0.2 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 682.86584 28.45274 654.4131
28.45274   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.6 0.2 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 78763 28949 a
currentpoint initclip moveto
 78763
28949 a 3934 28949 a
 currentpoint currentpoint translate 1 0.60104 div 1 0.60104 div scale
neg exch neg exch translate
 3934 28949 a 51879 29546 45 8988
v 921 29591 51002 45 v 921 31649 45 2059 v 3293 31051
a Fm(Minim)-36 b(um)p 11112 31649 V 3572 w(erstes)434
b(Quartil)p 21304 31649 V 4205 w(Median)p 31496 31649
V 3955 w(drittes)f(Quartil)p 41687 31649 V 3197 w(Maxim)-36
b(um)p 51879 31649 V 921 33707 V 3945 33110 a Fk(m)369
b Fl(=)p 1 0 0 TeXcolorrgb 368 w(12)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 11112 33707 V 13927
33109 a Fk(Q)14957 33308 y Fj(1)15852 33109 y Fl(=)p
1 0 0 TeXcolorrgb 369 w(12)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 21304 33707 V 5156 w Fk(med)f
Fl(=)p 1 0 0 TeXcolorrgb 369 w(18)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 31496 33707 V 5155 w
Fk(Q)35340 33308 y Fj(3)36235 33109 y Fl(=)p 1 0 0 TeXcolorrgb
369 w(23)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
41687 33707 V 5665 w Fk(M)508 b Fl(=)p 1 0 0 TeXcolorrgb
369 w(24)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
51879 33707 V 921 33751 51002 45 v 47992 4800 a Fi(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a Fh(WS)369 b(1.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 35788
54804 45 v -2331 41089 a Fn(WS)717 b(1.3)g(-)g(2)h(Geldausgab)60
b(en)715 b(-)i(O)-60 b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray
-741 44396 a Fm(2.)p 0 TeXcolorgray 651 w(Karin)563 b(hat)g(das)g
(arithmetisc)-36 b(he)563 b(Mittel)g(ihrer)g(monatlic)-36
b(hen)563 b(A)-36 b(usgab)36 b(en)562 b(im)i(Zeitraum)887
46388 y(J\344nner)499 b(bis)g(\(einsc)-36 b(hlie\377lic)g(h\))499
b(Oktob)36 b(er)499 b(mit)g Fg(e)716 b Fm(25)500 b(errec)-36
b(hnet.)498 b(Im)i(No)-36 b(v)g(em)g(b)36 b(er)499 b(gibt)g(sie)921
48380 y Fg(e)650 b Fm(35)434 b(und)f(im)h(Dezem)-36 b(b)36
b(er)433 b Fg(e)650 b Fm(51)435 b(aus.)921 50926 y(Berec)-36
b(hne)325 b(das)g(arithmetisc)-36 b(he)325 b(Mittel)g(f\374r)h(die)f
(monatlic)-36 b(hen)325 b(A)-36 b(usgab)36 b(en)325 b(in)h(diesem)f
(Jahr.)p 1 0 0 TeXcolorrgb 921 54758 740 45 v 921 55463
a Fk(x)369 b Fl(=)3543 54940 y Fj(25)p Ff(\001)p Fj(10+35+51)p
3543 55153 5489 45 v 5816 55921 a(12)p 921 59296 740
45 v 921 60000 a Fk(x)g Fl(=)g(28)921 64538 y Fm(Die)434
b(monatlic)-36 b(hen)434 b(A)-36 b(usgab)36 b(en)433
b(b)36 b(etragen)433 b(durc)-36 b(hsc)g(hnittlic)g(h)432
b Fg(e)650 b Fm(28.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 44396 a Fi(___/1)p 1 0 0 TeXcolorrgb
47905 46388 a Fh(WS)369 b(1.3)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 68271 54804 45 v 0 TeXcolorgray
24746 81281 a Fm(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fn(WS)701 b(1.3)h(-)g(3)g(Mittelw)-60
b(ert)701 b(einfac)-60 b(her)701 b(Datens\344tze)g(-)h(MC)g(-)h(BIFIE)p
0 TeXcolorgray -741 4800 a Fm(3.)p 0 TeXcolorgray 651
w(Die)544 b(un)-36 b(ten)542 b(stehende)h(T)-108 b(ab)36
b(elle)544 b(bietet)f(eine)g(\334b)36 b(ersic)-36 b(h)g(t)543
b(\374b)36 b(er)543 b(die)g(Zahl)h(der)f(Ein)-36 b(b\374rge-)921
6792 y(rungen)519 b(in)i(\326sterreic)-36 b(h)519 b(und)g(in)i(den)e
(jew)-36 b(eiligen)522 b(Bundesl\344ndern)d(im)i(Jahr)f(2010)i(nac)-36
b(h)921 8784 y(Quartalen.)676 b(Ein)e(Quartal)h(fasst)g(dab)36
b(ei)674 b(jew)-36 b(eils)676 b(den)e(Zeitraum)h(v)-36
b(on)674 b(drei)h(Monaten)921 10776 y(zusammen.)358 b(Das)h(1.)g
(Quartal)f(ist)g(der)g(Zeitraum)f(v)-36 b(on)358 b(J\344nner)g(bis)g
(M\344rz,)g(das)g(2.)h(Quartal)921 12768 y(der)433 b(Zeitraum)g(v)-36
b(on)434 b(April)g(bis)f(Juni)h(usw.)p -2331 16133 53254
45 v -2331 16133 V -2331 17477 45 1345 v -1485 17738
a Fe(Quartal)p 2507 17477 V 3215 17086 a(\326ster-)3215
18391 y(reic)-26 b(h)p 7344 17477 V 7388 17477 V 23587
17046 a(Bundesland)314 b(des)g(W)-78 b(ohnortes)p 50879
17477 V 7388 17522 43535 45 v -2331 20087 45 2611 v 2507
20087 V 7344 20087 V 8114 18391 a(Burgen-)8896 19696
y(land)p 12181 20087 V 12936 19044 a(K\344rn)-26 b(ten)p
17018 20087 V 17880 18391 a(Nieder-)17727 19696 y(\366sterreic)g(h)p
21855 20087 V 22926 18391 a(Ob)26 b(er-)22564 19696 y(\366sterreic)-26
b(h)p 26693 20087 V 27401 19044 a(Salzburg)p 31530 20087
V 32504 18391 a(Steier-)32912 19696 y(mark)p 36367 20087
V 37788 19044 a(Tirol)p 41204 20087 V 42109 18391 a(V)-78
b(orarl-)42743 19696 y(b)26 b(erg)p 46041 20087 V 47398
19044 a(Wien)p 50879 20087 V -2331 20132 53254 45 v -2331
20132 V -2331 23056 V -2331 23056 V -2331 25666 45 2611
v -1622 23969 a(1.Quartal)-843 25274 y(2010)p 2507 25666
V 4006 24622 a(1142)p 7344 25666 V 3663 w(1)p 12181 25666
V 3897 w(119)p 17018 25666 V 3662 w(87)p 21855 25666
V 3662 w(216)p 26693 25666 V 3428 w(112)p 31530 25666
V 3427 w(101)p 36367 25666 V 3427 w(131)p 41204 25666
V 3663 w(97)p 46041 25666 V 3662 w(278)p 50879 25666
V -2331 25710 53254 45 v -2331 25710 V -2331 28320 45
2611 v -1622 26624 a(2.Quartal)-843 27929 y(2010)p 2507
28320 V 4006 27277 a(1605)p 7344 28320 V 3428 w(80)p
12181 28320 V 3662 w(120)p 17018 28320 V 3427 w(277)p
21855 28320 V 3427 w(254)p 26693 28320 V 3428 w(148)p
31530 28320 V 3427 w(106)p 36367 28320 V 3427 w(138)p
41204 28320 V 3427 w(125)p 46041 28320 V 3428 w(357)p
50879 28320 V -2331 28365 53254 45 v -2331 28365 V -2331
30975 45 2611 v -1622 29278 a(3.Quartal)-843 30583 y(2010)p
2507 30975 V 4006 29931 a(1532)p 7344 30975 V 3663 w(4)p
12181 30975 V 3897 w(119)p 17018 30975 V 3427 w(187)p
21855 30975 V 3427 w(231)p 26693 30975 V 3663 w(98)p
31530 30975 V 3662 w(121)p 36367 30975 V 3427 w(122)p
41204 30975 V 3663 w(61)p 46041 30975 V 3662 w(589)p
50879 30975 V -2331 31019 53254 45 v -2331 31019 V -2331
33629 45 2611 v -1622 31932 a(4.Quartal)-843 33238 y(2010)p
2507 33629 V 4006 32585 a(1856)p 7344 33629 V 3428 w(53)p
12181 33629 V 3662 w(113)p 17018 33629 V 3427 w(248)p
21855 33629 V 3427 w(294)p 26693 33629 V 3428 w(158)p
31530 33629 V 3427 w(102)p 36367 33629 V 3427 w(183)p
41204 33629 V 3427 w(184)p 46041 33629 V 3663 w(52)p
50879 33629 V -2331 33673 53254 45 v -2331 33673 V 921
35972 a Fd(Quelle:)275 b(ST)-65 b(A)g(TISTIK)278 b(A)-22
b(USTRIA)921 38518 y Fm(Kreuze)487 b(die)g(b)36 b(eiden)486
b(k)-36 b(orrekten)488 b(Berec)-36 b(hn)g(ungsm\366glic)g(hk)g(eiten)
486 b(f\374r)h(den)f(Mittelw)-36 b(ert)488 b(der)921
40510 y(Ein)-36 b(b\374rgerungen)432 b(im)i(Bundesland)e(K\344rn)-36
b(ten)433 b(pro)g(Quartal)h(im)f(Jahr)h(2010)h(an.)p
10871 43210 24643 45 v 10871 46428 45 3219 v 11579 44446
1138 45 v 11579 45151 a Fk(m)369 b Fl(=)g(\(1142)296
b(+)f(1605)h(+)f(1532)i(+)d(1856\))371 b(:)e(9)p 33103
46428 45 3219 v 35469 46428 V 10871 46472 24643 45 v
10871 49914 45 3442 v 11579 47806 1138 45 v 11579 48511
a Fk(m)g Fl(=)14599 47988 y Fj(2)p Ff(\001)p Fj(119+113+120)p
14599 48201 6430 45 v 17579 48969 a(4)p 33103 49914 45
3442 v 1 0 0 TeXcolorrgb 33812 48525 a Fc(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 35469 49914 V 10871
49958 24643 45 v 10871 52787 45 2829 v 11579 51035 1138
45 v 11579 51740 a Fk(m)g Fl(=)g(119)296 b(+)f(120)h(+)f(119)h(+)f(113)
370 b(:)f(4)p 33103 52787 45 2829 v 35469 52787 V 10871
52831 24643 45 v 10871 56272 45 3442 v 11579 54165 1138
45 v 11579 54870 a Fk(m)g Fl(=)14835 54347 y Fj(1)p 14599
54560 941 45 v 14599 55328 a(12)15968 54870 y Fb(\001)296
b Fl(\(113)g(+)e(2)i Fb(\001)f Fl(119)h(+)f(120\))h Fb(\001)f
Fl(3)p 33103 56272 45 3442 v 1 0 0 TeXcolorrgb 33812
54884 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 35469 56272 V 10871 56317 24643 45 v 10871
59758 45 3442 v 11579 57651 1138 45 v 11579 58355 a Fk(m)369
b Fl(=)14599 57832 y Fj(113+119+119+120)p 14599 58045
7841 45 v 18049 58813 a(12)22868 58355 y Fb(\001)296
b Fl(4)p 33103 59758 45 3442 v 35469 59758 V 10871 59803
24643 45 v 47992 4800 a Fi(___/1)p 1 0 0 TeXcolorrgb
47905 6792 a Fh(WS)369 b(1.3)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 63831 54804 45 v 0 TeXcolorgray
24746 81281 a Fm(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fn(WS)717 b(1.3)g(-)g(4)h(Datenreihe)e(-)h
(MC)h(-)g(BIFIE)p 0 TeXcolorgray -741 4800 a Fm(4.)p
0 TeXcolorgray 651 w(Der)600 b(arithmetisc)-36 b(he)600
b(Mittelw)-36 b(ert)p 18426 4096 740 45 v 600 w Fk(x)600
b Fm(der)g(Datenreihe)g Fk(x)29707 4999 y Fj(1)30233
4800 y Fk(;)221 b(x)31554 4999 y Fj(2)32080 4800 y Fk(;)g(:::;)g(x)
35066 4999 y Fj(10)36665 4800 y Fm(ist)p 38645 4096 V
600 w Fk(x)653 b Fl(=)f(20)p Fm(.)602 b(Die)921 6792
y(Standardab)-36 b(w)g(eic)g(h)g(ung)432 b Fk(\033)481
b Fm(der)433 b(Datenreihe)h(ist)g Fk(\033)416 b Fl(=)369
b(5)p Fm(.)921 9338 y(Die)434 b(Datenreihe)g(wird)g(um)f(die)g(b)36
b(eiden)433 b(W)-108 b(erte)433 b Fk(x)25938 9537 y Fj(11)27304
9338 y Fl(=)368 b(19)435 b Fm(und)d Fk(x)33759 9537 y
Fj(12)35124 9338 y Fl(=)369 b(21)434 b Fm(erg\344nzt.)921
11883 y(Kreuze)f(die)h(b)36 b(eiden)433 b(zutre\033enden)e(A)-36
b(ussagen)434 b(an.)p 1067 12850 44250 45 v 1067 17905
45 5056 v 1775 14710 a(Das)h(Maxim)-36 b(um)434 b(der)f(neuen)f
(Datenreihe)i Fk(x)23910 14909 y Fj(1)24436 14710 y Fk(;)221
b(:::;)g(x)27422 14909 y Fj(12)28854 14710 y Fm(ist)434
b(gr\366\377er)g(als)g(das)g(Maxi-)1775 16702 y(m)-36
b(um)433 b(der)g(urspr\374nglic)-36 b(hen)432 b(Datenreihe)i
Fk(x)23459 16901 y Fj(1)23985 16702 y Fk(;)221 b(:::;)g(x)26971
16901 y Fj(10)27969 16702 y Fm(.)p 42907 17905 V 45273
17905 V 1067 17949 44250 45 v 1067 23004 45 5056 v 1775
19809 a(Die)435 b(Spann)-36 b(w)g(eite)432 b(der)h(neuen)g(Datenreihe)h
Fk(x)24373 20008 y Fj(1)24898 19809 y Fk(;)221 b(:::;)g(x)27884
20008 y Fj(12)29317 19809 y Fm(ist)433 b(um)g(2)h(gr\366\377er)h(als)f
(die)1775 21801 y(Spann)-36 b(w)g(eite)433 b(der)g(urspr\374nglic)-36
b(hen)432 b(Datenreihe)i Fk(x)27036 22000 y Fj(1)27562
21801 y Fk(;)221 b(:::;)g(x)30548 22000 y Fj(10)31546
21801 y Fm(.)p 42907 23004 V 45273 23004 V 1067 23049
44250 45 v 1067 28104 45 5056 v 1775 24908 a(Der)434
b(Median)g(der)f(neuen)f(Datenreihe)i Fk(x)22313 25107
y Fj(1)22839 24908 y Fk(;)221 b(:::;)g(x)25825 25107
y Fj(12)27257 24908 y Fm(stimm)-36 b(t)433 b(immer)h(mit)f(dem)1775
26900 y(Median)h(der)f(urspr\374nglic)-36 b(hen)432 b(Datenreihe)h
Fk(x)24831 27099 y Fj(1)25357 26900 y Fk(;)221 b(:::;)g(x)28343
27099 y Fj(10)29775 26900 y Fm(\374b)36 b(erein.)p 42907
28104 V 45273 28104 V 1067 28148 44250 45 v 1067 33203
45 5056 v 1775 30008 a(Die)435 b(Standardab)-36 b(w)g(eic)g(h)g(ung)431
b(der)i(neuen)g(Datenreihe)h Fk(x)29648 30207 y Fj(1)30174
30008 y Fk(;)221 b(:::;)g(x)33160 30207 y Fj(12)34592
30008 y Fm(ist)433 b(kleiner)i(als)1775 32000 y(die)f(Standardab)-36
b(w)g(eic)g(h)g(ung)432 b(der)h(urspr\374nglic)-36 b(hen)432
b(Datenreihe)h Fk(x)34406 32199 y Fj(1)34932 32000 y
Fk(;)221 b(:::;)g(x)37918 32199 y Fj(10)38917 32000 y
Fm(.)p 42907 33203 V 1 0 0 TeXcolorrgb 43616 31007 a
Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45273 33203 V 1067 33247 44250 45 v 1067 40294 45 7047
v 1775 35107 a Fm(Der)434 b(arithmetisc)-36 b(he)433
b(Mittelw)-36 b(ert)434 b(der)f(neuen)g(Datenreihe)g
Fk(x)32147 35306 y Fj(1)32673 35107 y Fk(;)221 b(:::;)g(x)35659
35306 y Fj(12)37091 35107 y Fm(stimm)-36 b(t)1775 37099
y(mit)716 b(dem)f(arithmetisc)-36 b(hen)714 b(Mittelw)-36
b(ert)716 b(der)e(urspr\374nglic)-36 b(hen)714 b(Datenreihe)1775
39091 y Fk(x)2514 39290 y Fj(1)3040 39091 y Fk(;)221
b(:::;)g(x)6026 39290 y Fj(10)7458 39091 y Fm(\374b)36
b(erein.)p 42907 40294 V 1 0 0 TeXcolorrgb 43616 37103
a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45273 40294 V 1067 40338 44250 45 v 47992 4800 a Fi(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a Fh(WS)369 b(1.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 44366
54804 45 v -2331 49635 a Fn(WS)759 b(1.3)g(-)h(5)g(Arithmetisc)-60
b(hes)758 b(Mittel)h(einer)f(Datenreihe)h(-)h(O)-60 b(A)760
b(-)-2331 52657 y(BIFIE)p 0 TeXcolorgray -741 55964 a
Fm(5.)p 0 TeXcolorgray 651 w(F)-27 b(\374r)433 b(das)g(arithmetisc)-36
b(he)433 b(Mittel)h(einer)f(Datenreihe)h Fk(x)28274 56163
y Fj(1)28800 55964 y Fk(;)221 b(x)30121 56163 y Fj(2)30648
55964 y Fk(;)g(:::;)g(x)33634 56163 y Fj(24)35066 55964
y Fm(gilt:)p 37739 55259 740 45 v 434 w Fk(x)370 b Fl(=)e(115)p
Fm(.)921 58509 y(Die)526 b(Standardab)-36 b(w)g(eic)g(h)g(ung)524
b(der)h(Datenreihe)g(ist)h Fk(s)27183 58708 y Fa(x)28293
58509 y Fl(=)f(12)p Fm(.)i(Die)g(W)-108 b(erte)525 b(einer)g(zw)-36
b(eiten)921 60501 y(Datenreihe)400 b Fk(y)8151 60700
y Fj(1)8677 60501 y Fk(;)221 b(y)9893 60700 y Fj(2)10420
60501 y Fk(;)g(:::;)g(y)13301 60700 y Fj(24)14700 60501
y Fm(en)-36 b(tstehen,)399 b(indem)g(man)h(zu)g(den)f(W)-108
b(erten)400 b(der)f(ersten)h(Daten-)921 62493 y(reihe)433
b(jew)-36 b(eils)435 b(8)f(addiert,)g(also)g Fk(y)17394
62692 y Fj(1)18289 62493 y Fl(=)369 b Fk(x)20409 62692
y Fj(1)21230 62493 y Fl(+)295 b(8)p Fk(;)221 b(y)24403
62692 y Fj(2)25299 62493 y Fl(=)368 b Fk(x)27418 62692
y Fj(2)28240 62493 y Fl(+)294 b(8)434 b Fm(usw.)921 65039
y(Gib)523 b(den)g(Mittelw)-36 b(ert)p 12617 64334 682
45 v 524 w Fk(y)572 b Fm(und)523 b(die)g(Standardab)-36
b(w)g(eic)g(h)g(ung)522 b Fk(s)31543 65238 y Fa(y)32619
65039 y Fm(der)h(zw)-36 b(eiten)524 b(Datenreihe)921
67031 y(an.)p 921 68871 V 921 69576 a Fk(y)417 b Fl(=)p
1 0 0 TeXcolorrgb Fm(123)p 0 0 0 TeXcolorrgb 921 72121
a Fk(s)1534 72320 y Fa(y)2455 72121 y Fl(=)p 1 0 0 TeXcolorrgb
Fm(12)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 55964 a Fi(___/1)p
1 0 0 TeXcolorrgb 47905 57956 a Fh(WS)369 b(1.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 75968
54804 45 v 0 TeXcolorgray 24746 81281 a Fm(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fn(WS)717 b(1.3)g(-)g(6)h(Geordnete)e
(Urliste)g(-)i(MC)g(-)f(BIFIE)p 0 TeXcolorgray -741 4800
a Fm(6.)p 0 TeXcolorgray 651 w(9)526 b(Kinder)g(wurden)g(dahingehend)f
(b)36 b(efragt,)527 b(wie)g(viele)g(Stunden)d(sie)j(am)f(W)-108
b(o)36 b(c)-36 b(henende)921 6792 y(fernsehen.)433 b(Die)h(nac)-36
b(hstehende)432 b(T)-108 b(ab)36 b(elle)435 b(gibt)e(ihre)h(An)-36
b(t)g(w)g(orten)432 b(wieder.)p 0 TeXcolorgray 0 TeXcolorgray
15097 9198 16624 45 v 15097 11190 45 1992 v 15806 10592
a(Kind)p 21455 11190 V 3540 w(F)-108 b(ernsehstunden)p
31676 11190 V 15097 11234 16624 45 v 15097 13226 45 1992
v 15806 12629 a(F)g(ritz)p 21455 13226 V 7765 w(2)p 31676
13226 V 15097 13271 16624 45 v 15097 15262 45 1992 v
15806 14665 a(Susi)p 21455 15262 V 8137 w(2)p 31676 15262
V 15097 15307 16624 45 v 15097 17299 45 1992 v 15806
16701 a(Mic)-36 b(hael)p 21455 17299 V 6050 w(3)p 31676
17299 V 15097 17343 16624 45 v 15097 19335 45 1992 v
15806 18737 a(Martin)p 21455 19335 V 6519 w(3)p 31676
19335 V 15097 19379 16624 45 v 15097 21371 45 1992 v
15806 20773 a(Angelika)p 21455 21371 V 5473 w(4)p 31676
21371 V 15097 21415 16624 45 v 15097 23407 45 1992 v
15806 22810 a(P)g(aula)p 21455 23407 V 7224 w(5)p 31676
23407 V 15097 23451 16624 45 v 15097 25443 45 1992 v
15806 24846 a(Max)p 21455 25443 V 7929 w(5)p 31676 25443
V 15097 25488 16624 45 v 15097 27480 45 1992 v 15806
26882 a(Hub)36 b(ert)p 21455 27480 V 6410 w(5)p 31676
27480 V 15097 27524 16624 45 v 15097 29516 45 1992 v
15806 28918 a(Lisa)p 21455 29516 V 8120 w(8)p 31676 29516
V 15097 29560 16624 45 v 921 32578 a(Kreuze)433 b(die)h(b)36
b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434 b(an.)p
1062 33545 44260 45 v 1062 38342 45 4797 v 1770 35405
a(Der)415 b(Median)f(w\374rde)g(sic)-36 b(h)414 b(erh\366hen,)g(w)-36
b(enn)414 b(F)-108 b(ritz)414 b(um)g(eine)g(Stunde)f(mehr)h(fern-)1770
37397 y(sehen)433 b(w\374rde.)p 42912 38342 V 45277 38342
V 1062 38386 44260 45 v 1062 41191 45 2805 v 1770 40246
a(Der)383 b(Median)f(ist)g(kleiner)h(als)f(das)g(arithmetisc)-36
b(he)382 b(Mittel)g(der)g(F)-108 b(ernsehstunden.)p 42912
41191 V 1 0 0 TeXcolorrgb 43621 40121 a Fc(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 41191
V 1062 41235 44260 45 v 1062 44298 45 3064 v 1770 43095
a Fm(Die)435 b(Spann)-36 b(w)g(eite)432 b(der)i(F)-108
b(ernsehstunden)430 b(b)36 b(etr\344gt)434 b(3.)p 42912
44298 V 45277 44298 V 1062 44343 44260 45 v 1062 49139
45 4797 v 1770 46203 a(Das)h(arithmetisc)-36 b(he)433
b(Mittel)h(w\374rde)f(sic)-36 b(h)433 b(erh\366hen,)g(w)-36
b(enn)433 b(Lisa)h(anstelle)g(v)-36 b(on)434 b(8)1770
48194 y(Stunden)e(10)i(Stunden)e(fernsehen)h(w\374rde.)p
42912 49139 V 1 0 0 TeXcolorrgb 43621 47073 a Fc(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
49139 V 1062 49184 44260 45 v 1062 51988 45 2805 v 1770
51044 a Fm(Der)h(Mo)36 b(dus)433 b(ist)h(8.)p 42912 51988
V 45277 51988 V 1062 52033 44260 45 v 47992 4800 a Fi(___/1)p
1 0 0 TeXcolorrgb 47905 6792 a Fh(WS)369 b(1.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 56061
54804 45 v 0 TeXcolorgray 24746 81281 a Fm(4)p 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fn(WS)717 b(1.3)g(-)g(7)h(Sp)60
b(ort)-60 b(w)g(ettb)60 b(ew)-60 b(erb)715 b(-)i(MC)h(-)g(BIFIE)p
0 TeXcolorgray -741 4800 a Fm(7.)p 0 TeXcolorgray 651
w(150)477 b(Grazer)f(und)f(170)i(Wiener)f(Sc)-36 b(h)g(\374ler/innen)
474 b(nahmen)i(an)g(einem)g(Sp)36 b(ort)-36 b(w)g(ettb)36
b(ew)-36 b(erb)921 6792 y(teil.)370 b(Der)f(V)-108 b(ergleic)-36
b(h)369 b(der)f(Listen)g(der)g(Ho)36 b(c)-36 b(hsprungergebnisse)368
b(ergibt)h(f\374r)g(b)36 b(eide)368 b(Sc)-36 b(h)g(\374ler-)921
8784 y(grupp)36 b(en)367 b(das)h(gleic)-36 b(he)368 b(arithmetisc)-36
b(he)368 b(Mittel)g(v)-36 b(on)369 b(1,05)g(m)f(so)-36
b(wie)369 b(eine)f(empirisc)-36 b(he)368 b(Stan-)921
10776 y(dardab)-36 b(w)g(eic)g(h)g(ung)432 b(f\374r)i(die)f(Grazer)g(v)
-36 b(on)434 b(0,22)h(m)f(und)e(f\374r)h(die)h(Wiener)g(v)-36
b(on)434 b(0,3)g(m.)921 13322 y(En)-36 b(tsc)g(heide,)419
b(w)-36 b(elc)g(he)419 b(A)-36 b(ussagen)419 b(aus)h(den)e(gegeb)36
b(enen)420 b(Daten)f(gesc)-36 b(hlossen)420 b(w)-36 b(erden)419
b(k)-36 b(\366n-)921 15314 y(nen,)433 b(und)g(kreuze)g(die)h(b)36
b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434 b(an.)p
1062 16280 44260 45 v 1062 21490 45 5211 v 1770 18221
a(Die)349 b(Sprungh\366hen)d(der)h(Grazer)g(Sc)-36 b(h)g(\374ler/innen)
347 b(w)-36 b(eic)g(hen)347 b(v)-36 b(om)349 b(arithmetisc)-36
b(hen)1770 20213 y(Mittel)434 b(nic)-36 b(h)g(t)433 b(so)h(stark)g(ab)f
(wie)i(die)e(H\366hen)g(der)g(Wiener)h(Sc)-36 b(h)g(\374ler/innen.)p
42912 21490 V 1 0 0 TeXcolorrgb 43621 19217 a Fc(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
21490 V 1062 21535 44260 45 v 1062 26663 45 5129 v 1770
23394 a Fm(Das)427 b(arithmetisc)-36 b(he)426 b(Mittel)g(repr\344sen)
-36 b(tiert)425 b(die)h(Leistungen)f(der)g(Grazer)h(Sc)-36
b(h)g(\374-)1770 25386 y(ler/innen)434 b(b)36 b(esser)433
b(als)h(die)g(der)f(Wiener.)p 42912 26663 V 1 0 0 TeXcolorrgb
43621 24431 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 26663 V 1062 26708 44260 45 v 1062
31504 45 4797 v 1770 28568 a Fm(Die)310 b(Standardab)-36
b(w)g(eic)g(h)g(ung)307 b(der)i(Grazer)f(ist)h(aufgrund)f(der)h
(geringeren)g(T)-108 b(eilneh-)1770 30560 y(merzahl)434
b(kleiner)g(als)h(die)e(der)g(Wiener.)p 42912 31504 V
45277 31504 V 1062 31549 44260 45 v 1062 36759 45 5211
v 1770 33490 a(V)-108 b(on)434 b(den)e(Sprungh\366hen)g(\(gemessen)h
(in)h(m\))f(der)g(Wiener)h(liegt)g(k)-36 b(ein)434 b(W)-108
b(ert)433 b(au-)1770 35482 y(\377erhalb)h(des)f(In)-36
b(terv)-72 b(alls)435 b Fl([)8 b(0)p Fk(;)p Fl(45;)221
b(1)p Fk(;)p Fl(65])s Fm(.)p 42912 36759 V 45277 36759
V 1062 36803 44260 45 v 1062 39866 45 3064 v 1770 38663
a(Beide)434 b(Listen)f(hab)36 b(en)433 b(den)g(gleic)-36
b(hen)434 b(Median.)p 42912 39866 V 45277 39866 V 1062
39910 44260 45 v 47992 4800 a Fi(___/1)p 1 0 0 TeXcolorrgb
47905 6792 a Fh(WS)369 b(1.3)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 43938 54804 45 v 0 TeXcolorgray
24746 81281 a Fm(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fn(WS)717 b(1.3)g(-)g(8)h(Mittlere)e
(Punktezahl)g(-)i(O)-60 b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray
-741 4800 a Fm(8.)p 0 TeXcolorgray 651 w(Ein)752 b(T)-108
b(est)752 b(en)-36 b(th\344lt)751 b(f\374nf)h(A)-36 b(ufgab)36
b(en,)753 b(die)f(jew)-36 b(eils)753 b(n)-36 b(ur)921
6792 y(mit)442 b(einem)g(Punkt)g(\(alles)h(ric)-36 b(h)g(tig\))442
b(o)36 b(der)443 b(k)-36 b(einem)442 b(Punkt)769 8784
y(\(nic)-36 b(h)g(t)432 b(alles)j(ric)-36 b(h)g(tig\))433
b(b)36 b(ew)-36 b(ertet)433 b(w)-36 b(erden.)921 12768
y(Die)396 b(neb)36 b(enstehende)394 b(Gra\034k)h(zeigt)h(das)f
(Ergebnis)g(dieses)874 14760 y(T)-108 b(ests)434 b(f\374r)f(eine)h(b)36
b(estimm)-36 b(te)433 b(Klasse.)p 0 TeXcolorgray 0 TeXcolorgray
31014 24382 a
 currentpoint currentpoint translate 0.53024 0.53024 scale neg exch
neg exch translate
 31014 24382 a 31881 24382 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 214.01466 a add def
/d 0.0 a add neg def /h 331.73 a add def a neg d moveto a neg h L w
h L w d L closepath clip newpath 0 0 moveto setmatrix end
 31881 24382
a 36988 20422 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 12 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 170.72557 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.45274
T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 295.95134 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 170.72557
 0 0.0  0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true
and or { /viceversa 0.0  170.72557  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 295.95134  def
/dT 1864679 abs 65536 div viceversa { neg } if def /DT 1 abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 295.95134 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.72557 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def   /showOrigin true def 0 295.95134
 0 0.0  ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch
def gsave L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart
exch def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false
and or { /viceversa 0.0  295.95134  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline 0.0  def /maxTickline 170.72557  def
/dT 1864679 abs 65536 div viceversa { neg } if def /DT 1. abs viceversa
{ neg } if def /subTNo 2 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -2.0 0.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd } def /logLines { false } def /LSstroke {  0
 setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 295.95134 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.72557 0.0 0.0 0.0   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 35743 20707 a
Fj(0)35743 17557 y(1)35743 14408 y(2)35743 11258 y(3)35743
8109 y(4)35743 4959 y(5)35743 1809 y(6)35743 -1340 y(7)35743
-4490 y(8)35743 -7639 y(9)35273 -10789 y(10)36988 20422
y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 56.90549 0.0 56.90549
85.35823 28.45274 85.35823 28.45274 0.0  /Lineto /lineto load def 0
 setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 85.35823 0.0 85.35823
113.81097 56.90549 113.81097 56.90549 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 113.81097 0.0 113.81097
85.35823 85.35823 85.35823 85.35823 0.0  /Lineto /lineto load def 0
 setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 142.26372 0.0 142.26372
170.71646 113.81097 170.71646 113.81097 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  [ 170.71646 0.0 170.71646
142.26372 142.26372 142.26372 142.26372 0.0  /Lineto /lineto load def
0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n {
pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED
/x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2
div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.25  setgray  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 85.35823 28.45274 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 85.35823 28.45274 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 0.0 56.90549 85.35823   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 0.0 56.90549 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 28.45274 85.35823 28.45274
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 56.90549 85.35823 28.45274
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 56.90549 0.0 56.90549 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 28.45274 0.0 56.90549 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 56.90549 113.81097 56.90549
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35823 113.81097 56.90549
113.81097   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35823 0.0 85.35823 113.81097
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 56.90549 0.0 85.35823 0.0 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35823 85.35823 85.35823
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.81097 85.35823 85.35823
85.35823   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.81097 0.0 113.81097 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 85.35823 0.0 113.81097 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.81097 170.71646 113.81097
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 170.71646 113.81097
170.71646   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 0.0 142.26372 170.71646
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 113.81097 0.0 142.26372 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 142.26372 142.26372
0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq
not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add
dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1
ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 170.71646 142.26372 142.26372
142.26372   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 167.871 0.0 167.871 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.25  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 142.26372 0.0 170.71646 0.0
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.25  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 36988 20422 a
tx@Dict begin  { 54.43819 -22.90945 } PutCoor PutBegin  end
 36988 20422 a
915 x Fm(erzielte)h(Punkte)36988 20422 y
tx@Dict begin  PutEnd  end
 36988 20422
a 36988 20422 a
tx@Dict begin  { -25.18182 219.47417 } PutCoor PutBegin  end
 36988 20422 a 37903 34439 a
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 37903 34439
a Fm(Anzahl)g(der)f(Sc)-36 b(h)g(\374lerInnen)51921 34439
y
 currentpoint grestore moveto
 51921 34439 a 36988 20422 a
tx@Dict begin  PutEnd  end
 36988 20422 a 36988 20422
a
tx@Dict begin  { 14.22636 -5.69046 } PutCoor PutBegin  end
 36988 20422 a 836 x Fm(0)36988 20422 y
tx@Dict begin  PutEnd  end
 36988 20422
a 36988 20422 a
tx@Dict begin  { 42.67911 -5.69046 } PutCoor PutBegin  end
 36988 20422 a 836 x Fm(1)36988 20422
y
tx@Dict begin  PutEnd  end
 36988 20422 a 36988 20422 a
tx@Dict begin  { 71.13185 -5.69046 } PutCoor PutBegin  end
 36988 20422 a 836 x Fm(2)36988
20422 y
tx@Dict begin  PutEnd  end
 36988 20422 a 36988 20422 a
tx@Dict begin  { 99.5846 -5.69046 } PutCoor PutBegin  end
 36988 20422 a 836
x Fm(3)36988 20422 y
tx@Dict begin  PutEnd  end
 36988 20422 a 36988 20422 a
tx@Dict begin  { 128.03734 -5.69046 } PutCoor PutBegin  end
 36988
20422 a 836 x Fm(4)36988 20422 y
tx@Dict begin  PutEnd  end
 36988 20422 a 36988
20422 a
tx@Dict begin  { 156.49008 -5.69046 } PutCoor PutBegin  end
 36988 20422 a 836 x Fm(5)36988 20422 y
tx@Dict begin  PutEnd  end
 36988
20422 a 55572 24382 a
currentpoint initclip moveto
 55572 24382 a 31014 24382 a
 currentpoint currentpoint translate 1 0.53024 div 1 0.53024 div scale
neg exch neg exch translate
 31014
24382 a 855 27038 a Fm(Wie)491 b(viele)h(Punkte)e(hat)h(die)f(H\344fte)
i(aller)f(Sc)-36 b(h)g(\374lerInnen)489 b(b)36 b(ei)491
b(diesem)g(T)-108 b(est)490 b(mindestens)921 29030 y(erreic)-36
b(h)g(t?)921 31576 y(Gib)416 b(an,)g(w)-36 b(elc)g(hen)416
b(Mittelw)-36 b(ert)416 b(du)g(zur)g(Bean)-36 b(t)g(w)g(ortung)415
b(dieser)h(F)-108 b(rage)417 b(heranziehst,)e(und)921
33568 y(b)36 b(erec)-36 b(hne)432 b(diesen.)p 1 0 0 TeXcolorrgb
921 38105 a(Der)i(Median)f(\(Zen)-36 b(tralw)g(ert\))433
b(ist)h(hier)f(anzugeb)36 b(en.)433 b(Er)h(b)36 b(etr\344gt)433
b(4.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4800 a Fi(___/1)p 1 0 0 TeXcolorrgb 47905 6792
a Fh(WS)369 b(1.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 41912 54804 45 v 0 TeXcolorgray
24746 81281 a Fm(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fn(WS)687 b(1.3)g(-)h(9)g(Eisho)60
b(c)-60 b(k)g(eytore)687 b(-)h(O)-60 b(A)688 b(-)f(Matura)h(2015/16)f
(-)h(Haupt-)-2331 4622 y(termin)p 0 TeXcolorgray -741
7929 a Fm(9.)p 0 TeXcolorgray 651 w(In)520 b(der)f(\366sterreic)-36
b(hisc)g(hen)519 b(Eisho)36 b(c)-36 b(k)g(eyliga)522
b(w)-36 b(erden)519 b(die)h(Ergebnisse)f(aller)i(Spiele)f(statis-)921
9921 y(tisc)-36 b(h)325 b(ausgew)-36 b(ertet.)326 b(In)f(der)g(Saison)h
(2012/13)h(wurde)e(\374b)36 b(er)324 b(einen)h(b)36 b(estimm)-36
b(ten)325 b(Zeitraum)921 11913 y(erfasst,)356 b(in)g(wie)g(vielen)g
(Spielen)f(jew)-36 b(eils)357 b(eine)e(b)36 b(estimm)-36
b(te)355 b(Anzahl)h(an)f(T)-108 b(oren)355 b(erzielt)h(wur-)921
13905 y(de.)558 b(Das)g(nac)-36 b(hstehende)556 b(S\344ulendiagramm)i
(stellt)f(das)h(Ergebnis)f(dieser)g(A)-36 b(usw)g(ertung)921
15897 y(dar.)p 0 TeXcolorgray 0 TeXcolorgray 10928 35087
a

 10928 35087 a 10928 35087 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 [1.0 0.0 0.0 1.0 0.0 0.0 ] concat

 pgfs


 10928 35087 a


 pgfr

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 [1.0 0.0 0.0 1.0 -34.54425 -36.02106 ] concat

 pgfs


 14766 31085
a

 14766 31085 a 14766 31085 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 save

 save

 0.19925 pgfw
 0.5 TeXcolorgray
 20.71999 -4.25174 moveto

 20.71999 0.0 lineto

 41.43997 -4.25174 moveto

 41.43997 0.0 lineto

 62.15997 -4.25174 moveto

 62.15997 0.0 lineto

 82.87996 -4.25174 moveto

 82.87996 0.0 lineto

 103.59996 -4.25174 moveto

 103.59996 0.0 lineto

 124.31995 -4.25174 moveto

 124.31995 0.0 lineto

 145.03993 -4.25174 moveto

 145.03993 0.0 lineto

 165.75993 -4.25174 moveto

 165.75993 0.0 lineto

 186.47992 -4.25174 moveto

 186.47992 0.0 lineto

 207.19992 -4.25174 moveto

 207.19992 0.0 lineto

 227.9199 -4.25174 moveto

 227.9199 0.0 lineto

 248.63991 -4.25174 moveto

 248.63991 0.0 lineto

 pgfstr
 0 TeXcolorgray
 restore

 restore

 save

 save

 0.19925 pgfw

0.5 TeXcolorgray
 -2.12627 18.06906 moveto

 2.12627 18.06906 lineto

 -2.12627 36.13814 moveto

 2.12627 36.13814 lineto

 -2.12627 54.20721 moveto

 2.12627 54.20721 lineto

 -2.12627 72.27628 moveto

 2.12627 72.27628 lineto

 -2.12627 90.34535 moveto

 2.12627 90.34535 lineto

 -2.12627 108.41443 moveto

 2.12627 108.41443 lineto

 -2.12627 126.48349 moveto

 2.12627 126.48349 lineto

 -2.12627 144.55257 moveto

 2.12627 144.55257 lineto

 pgfstr
 0 TeXcolorgray
 restore

 restore

 0.0 0.0 moveto

 257.00737 0.0 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 257.00737 0.0 ] concat

 save 1.99252 0.0 moveto -1.19551 1.59401 lineto 0.0 0.0 lineto -1.19551
-1.59401 lineto pgffill restore

 restore

 0.0 0.0 moveto

 0.0 151.59457 lineto

 pgfstr

 save

 [0.0 1.0 -1.0 0.0 0.0 151.59457 ] concat

 save 1.99252 0.0 moveto -1.19551 1.59401 lineto 0.0 0.0 lineto -1.19551
-1.59401 lineto pgffill restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 17.79344 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085 a Fl(1)14766
31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 38.51343 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085 a Fl(2)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 59.23343 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085
a Fl(3)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 79.95341 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085 a Fl(4)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 100.6734 -15.8812 ] concat

 pgfs



 0 setgray

14766 31085 a Fl(5)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 121.3934 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085 a Fl(6)14766
31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 142.11339 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085 a Fl(7)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 162.83339 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085
a Fl(8)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 183.55338 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085 a Fl(9)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 201.3468 -15.8812 ] concat

 pgfs



 0 setgray

14766 31085 a Fl(10)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 222.0668 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085 a Fl(11)14766
31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 242.78679 -15.8812 ] concat

 pgfs



 0 setgray
 14766 31085 a Fl(12)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -12.08022 14.30476 ] concat

 pgfs



 0 setgray
 14766 31085
a Fl(1)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -12.08022 32.37384 ] concat

 pgfs



 0 setgray
 14766 31085 a Fl(2)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -12.08022 50.4429 ] concat

 pgfs



 0 setgray

14766 31085 a Fl(3)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -12.08022 68.51198 ] concat

 pgfs



 0 setgray
 14766 31085 a Fl(4)14766
31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -12.08022 86.58105 ] concat

 pgfs



 0 setgray
 14766 31085 a Fl(5)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -12.08022 104.65012 ] concat

 pgfs



 0 setgray
 14766 31085
a Fl(6)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -12.08022 122.7192 ] concat

 pgfs



 0 setgray
 14766 31085 a Fl(7)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -12.08022 140.78827 ] concat

 pgfs



 0 setgray

14766 31085 a Fl(8)14766 31085 y


 pgfr

 restore

 restore

 0.0 0.0 moveto

 258.9999 0.0 lineto

 258.9999 153.5871 lineto

 0.0 153.5871 lineto

 closepath

 clip

 newpath

 save
 0 0 1 TeXcolorrgb
 /pgffc{0.7 0.7 1 setrgbcolor}def

 36.13814 9.96277 57.17859 0.0 pgfe

 36.13814 9.96277 77.89857 0.0 pgfe

 108.41443 9.96277 98.61858 0.0 pgfe

 54.20721 9.96277 119.33856 0.0 pgfe

 144.55257 9.96277 140.05855 0.0 pgfe

 36.13814 9.96277 181.49854 0.0 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath
 0
TeXcolorgray
 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.8802 -32.11945 ] concat

 pgfs



 0 setgray
 14766 31085 a Fm(Anzahl)434 b(der)f(T)-108
b(ore)14766 31085 y


 pgfr

 restore

 restore

 save

 save

 [0.0 1.0 -1.0 0.0 -22.40695 31.75916 ] concat

 pgfs



 0 setgray
 14766 31085 a Fm(Anzahl)434 b(der)f(Spiele)14766
31085 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 10928 35087 a


 pgfr

 restore

 save

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 921 43074 a Fm(Bestimme)e(den)g(Median)g(der)g
(Datenliste,)h(die)f(dem)g(S\344ulendiagramm)h(zugrunde)e(liegt.)p
1 0 0 TeXcolorrgb 921 45619 a(Der)k(Median)f(der)g(Datenliste)h(ist)g
(6.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7929 a Fi(___/1)p 1 0 0 TeXcolorrgb 47905 9921
a Fh(WS)369 b(1.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 49094 54804 45 v 0 TeXcolorgray
24746 81281 a Fm(7)p 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fn(WS)865 b(1.3)g(-)g(10)h(Median)e(und)g(Mo)
60 b(dus)864 b(-)i(O)-60 b(A)866 b(-)f(BIFIE)h(-)g(K)-60
b(omp)60 b(e-)-2331 4515 y(tenzc)-60 b(hec)g(k)718 b(2016)p
0 TeXcolorgray -1391 7823 a Fm(10.)p 0 TeXcolorgray 651
w(Zw)-36 b(ei)428 b(un)-36 b(tersc)g(heidbare,)426 b(faire)i
(Spielw\374rfel)g(mit)f(den)g(A)-36 b(ugenzahlen)427
b(1,2,3,4,5,6)k(w)-36 b(erden)921 9815 y(gew)g(orfen)444
b(und)f(die)g(A)-36 b(ugensumme)443 b(wird)g(ermittelt.)h(\(Ein)f(W)-36
b(\374rfel)444 b(ist)f(\022fair\020,)i(w)-36 b(enn)443
b(die)855 11806 y(W)-108 b(ahrsc)-36 b(heinlic)g(hk)g(eit,)421
b(nac)-36 b(h)420 b(einem)h(W)-108 b(urf)420 b(nac)-36
b(h)420 b(ob)36 b(en)421 b(zu)f(zeigen,)i(f\374r)e(alle)i(sec)-36
b(hs)421 b(Seiten-)921 13798 y(\035\344c)-36 b(hen)433
b(gleic)-36 b(h)434 b(gro\377)g(ist.\))887 16344 y(Jemand)d(b)36
b(ehauptet,)431 b(dass)h(die)f(Ereignisse)h(\022A)-36
b(ugensumme)431 b(5\020)h(und)f(\022A)-36 b(ugensumme)431
b(9\020)921 18336 y(gleic)-36 b(h)g(w)g(ahrsc)g(heinlic)g(h)538
b(sind.)h(Gib)f(an,)g(ob)g(es)h(sic)-36 b(h)538 b(hierb)36
b(ei)538 b(um)g(eine)g(w)-36 b(ahre)538 b(o)36 b(der)538
b(eine)921 20328 y(falsc)-36 b(he)434 b(A)-36 b(ussage)434
b(handelt,)f(und)g(b)36 b(egr\374nde)432 b(deine)h(En)-36
b(tsc)g(heidung.)p 1 0 0 TeXcolorrgb 921 24865 a(Die)434
b(A)-36 b(ussage)434 b(ist)g(w)-36 b(ahr.)434 b(M\366glic)-36
b(he)434 b(Begr\374ndung:)873 26857 y(A)-36 b(ugensumme)432
b(5:)j Fl(\(1;)221 b(4\))p Fk(;)g Fl(\(2;)g(3\))p Fk(;)g
Fl(\(3;)g(2\))p Fk(;)g Fl(\(4;)g(1\))375 b Fb(\))434
b Fm(4)f(M\366glic)-36 b(hk)g(eiten)873 28849 y(A)g(ugensumme)432
b(9:)j Fl(\(3;)221 b(6\))p Fk(;)g Fl(\(4;)g(5\))p Fk(;)g
Fl(\(5;)g(4\))p Fk(;)g Fl(\(6;)g(3\))375 b Fb(\))434
b Fm(4)f(M\366glic)-36 b(hk)g(eiten)921 30841 y(P\(\022A)g(ugensumme)
433 b(5\020\)=)14102 30318 y Fj(4)p 13867 30531 941 45
v 13867 31299 a(36)921 32833 y Fm(P\(\022A)-36 b(ugensumme)433
b(9\020\)=)14102 32310 y Fj(4)p 13867 32523 V 13867 33291
a(36)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7823 a Fi(___/1)p 1 0 0 TeXcolorrgb 47905 9815
a Fh(WS)369 b(1.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 36766 54804 45 v 0 TeXcolorgray
24746 81281 a Fm(8)p 0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fn(WS)539 b(1.3)g(-)g(11)h(Netto)60
b(jahreseink)-60 b(ommen)537 b(-)i(O)-60 b(A)540 b(-)f(Matura)g
(2014/15)-2617 4622 y(-)718 b(Haupttermin)p 0 TeXcolorgray
-1391 7929 a Fm(11.)p 0 TeXcolorgray 651 w(Im)308 b(Jahre)f(2012)i(gab)
f(es)f(in)h(\326sterreic)-36 b(h)307 b(un)-36 b(ter)306
b(den)h(et)-36 b(w)g(as)308 b(mehr)f(als)h(4)g(Millionen)g(unselbst-)
921 9921 y(st\344ndig)370 b(Erw)-36 b(erbst\344tigen)370
b(\(ohne)g(Lehrlinge\))g(40)217 b(\045)370 b(Arb)36 b(eiterinnen)369
b(und)g(Arb)36 b(eiter,)371 b(47)217 b(\045)873 11913
y(Angestellte,)561 b(8)217 b(\045)561 b(V)-108 b(ertragsb)36
b(edienstete)559 b(und)h(5)217 b(\045)560 b(Beam)-36
b(tinnen)560 b(und)f(Beam)-36 b(te)561 b(\(Proz-)921
13905 y(en)-36 b(tzahlen)433 b(gerundet\).)921 18442
y(Die)878 b(folgende)h(T)-108 b(ab)36 b(elle)878 b(zeigt)g(deren)f
(durc)-36 b(hsc)g(hnittlic)g(hes)876 b(Netto)36 b(jahreseink)-36
b(ommen)769 20434 y(\(arithmetisc)g(hes)433 b(Mittel\).)p
18621 23578 23420 45 v 18577 27517 45 3984 v 23160 24928
a(arithmetisc)-36 b(hes)434 b(Mittel)f(der)19403 26920
y(Netto)36 b(jahreseink)-36 b(ommen)435 b(2012)f(\(in)g(Euro\))p
41997 27517 V 1525 27561 40517 45 v 1525 27561 V 1525
29620 45 2059 v 2233 28956 a(Arb)36 b(eiterinnen)433
b(und)f(Arb)36 b(eiter)p 18577 29620 V 28683 29022 a(14062)p
41997 29620 V 1525 29664 40517 45 v 1525 29664 V 1525
31722 45 2059 v 6908 31058 a(Angestellte)p 18577 31722
V 28683 31124 a(24141)p 41997 31722 V 1525 31766 40517
45 v 1525 31766 V 1525 33825 45 2059 v 4484 33161 a(V)-108
b(ertragsb)36 b(edienstete)p 18577 33825 V 28683 33227
a(22853)p 41997 33825 V 1525 33869 40517 45 v 1525 33869
V 1525 35927 45 2059 v 3010 35263 a(Beam)-36 b(tinnen)433
b(und)f(Beam)-36 b(te)p 18577 35927 V 28683 35329 a(35708)p
41997 35927 V 1525 35971 40517 45 v 1525 35971 V 0 TeXcolorgray
0 TeXcolorgray 921 38773 a Fd(Datenquelle:)275 b(Statistik)h(A)-22
b(ustria)277 b(\(Hrsg.\))f(\(2014\).)f(Statistisc)-22
b(hes)276 b(Jahrbuc)-22 b(h)276 b(\326sterreic)-22 b(hs)276
b(2015.)g(Wien:)f(V)-65 b(erlag)277 b(\326sterreic)-22
b(h.)276 b(S.)g(246.)921 41319 y Fm(Ermittle)618 b(das)h(durc)-36
b(hsc)g(hnittlic)g(he)616 b(Netto)36 b(jahreseink)-36
b(ommen)619 b(\(arithmetisc)-36 b(hes)618 b(Mittel\))921
43310 y(aller)434 b(in)g(\326sterreic)-36 b(h)432 b(unselbstst\344ndig)
h(Erw)-36 b(erbst\344tigen)434 b(\(ohne)f(Lehrlinge\).)p
1 0 0 TeXcolorrgb 856 45856 a Fl(14)221 b(062)297 b Fb(\001)e
Fl(0)p Fk(;)p Fl(4)i(+)d(24)221 b(141)298 b Fb(\001)d
Fl(0)p Fk(;)p Fl(47)h(+)f(22)221 b(853)297 b Fb(\001)f
Fl(0)p Fk(;)p Fl(08)g(+)f(35)221 b(708)297 b Fb(\001)e
Fl(0)p Fk(;)p Fl(05)371 b(=)d(20)221 b(584)p Fk(;)p Fl(71)921
48401 y Fm(Das)434 b(durc)-36 b(hsc)g(hnittlic)g(he)432
b(Netto)36 b(jahreseink)-36 b(ommen)434 b(b)36 b(etr\344gt)433
b Fg(e)651 b Fm(20.584,71.)921 52939 y(L\366sungssc)-36
b(hl\374ssel:)921 54930 y(Ein)440 b(Punkt)f(f\374r)h(die)g(ric)-36
b(h)g(tige)441 b(L\366sung,)f(w)-36 b(ob)36 b(ei)440
b(die)g(Einheit)g(Euro)g(nic)-36 b(h)g(t)439 b(angef\374hrt)h(w)-36
b(er-)921 56922 y(den)350 b(m)-36 b(uss.)352 b(T)-108
b(oleranzin)-36 b(terv)-72 b(all:)353 b Fl([)8 b(20580;)221
b(20590])355 b Fm(Die)d(A)-36 b(ufgab)36 b(e)351 b(ist)h(auc)-36
b(h)350 b(dann)h(als)g(ric)-36 b(h)g(tig)921 58914 y(gel\366st)503
b(zu)f(w)-36 b(erten,)502 b(w)-36 b(enn)501 b(b)36 b(ei)503
b(k)-36 b(orrektem)502 b(Ansatz)g(das)g(Ergebnis)g(aufgrund)g(eines)g
(Re-)921 60906 y(c)-36 b(henfehlers)433 b(nic)-36 b(h)g(t)433
b(ric)-36 b(h)g(tig)433 b(ist.)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 7929 a Fi(___/1)p 1 0 0
TeXcolorrgb 47905 9921 a Fh(WS)369 b(1.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 64640 54804 45
v 0 TeXcolorgray 24746 81281 a Fm(9)p 0 TeXcolorgray
eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fn(WS)477 b(1.3)h(-)h(12)f(Statistisc)-60
b(he)477 b(Kennzahlen)f(-)i(MC)h(-)f(Matura)g(2014/15)-2617
4622 y(-)718 b(Neb)60 b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray
-1391 7929 a Fm(12.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(ist)h(eine)f(Liste)h(mit)f Fk(n)h Fm(nat\374rlic)-36
b(hen)433 b(Zahlen)g Fk(a)29302 8128 y Fj(1)29828 7929
y Fk(;)221 b(a)31093 8128 y Fj(2)31619 7929 y Fk(;)g(:)g(:)g(:)j(;)d(a)
35215 8128 y Fa(n)35841 7929 y Fm(.)855 12466 y(W)-108
b(elc)-36 b(he)556 b(statistisc)-36 b(he)557 b(Kennzahlen)f(der)h
(Liste)f(bleib)36 b(en)557 b(gleic)-36 b(h,)557 b(w)-36
b(enn)557 b(jeder)f(W)-108 b(ert)557 b(der)921 14458
y(Liste)433 b(um)h(1)f(erh\366h)-36 b(t)433 b(wird?)h(Kreuze)f(die)h(b)
36 b(eiden)433 b(zutre\033enden)e(An)-36 b(t)g(w)g(orten)433
b(an.)p 15260 15167 15864 45 v 15260 17971 45 2805 v
15969 17027 a(arithmetisc)-36 b(hes)433 b(Mittel)p 28714
17971 V 31079 17971 V 15260 18016 15864 45 v 15260 21079
45 3064 v 15969 19876 a(Standardab)-36 b(w)g(eic)g(h)g(ung)p
28714 21079 V 1 0 0 TeXcolorrgb 29423 19879 a Fc(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 31079
21079 V 15260 21123 15864 45 v 15260 24186 45 3064 v
15969 22983 a Fm(Spann)g(w)g(eite)p 28714 24186 V 1 0 0
TeXcolorrgb 29423 22987 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 31079 24186 V 15260 24231
15864 45 v 15260 27035 45 2805 v 15969 26090 a Fm(Median)p
28714 27035 V 31079 27035 V 15260 27080 15864 45 v 15260
29884 45 2805 v 15969 28940 a(Mo)36 b(dus)p 28714 29884
V 31079 29884 V 15260 29929 15864 45 v 47992 7929 a Fi(___/1)p
1 0 0 TeXcolorrgb 47905 9921 a Fh(WS)369 b(1.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 33957
54804 45 v -2331 39258 a Fn(WS)913 b(1.3)f(-)i(13)f(Mittelw)-60
b(ert)913 b(v)-60 b(on)913 b(Datenreihen)e(-)j(O)-60
b(A)913 b(-)h(Matura)-2385 42281 y(2014/15)718 b(-)f(K)-60
b(omp)60 b(ensationspr\374fung)p 0 TeXcolorgray -1391
45588 a Fm(13.)p 0 TeXcolorgray 651 w(Bei)682 b(einer)f(V)-108
b(erk)-36 b(ehrsk)g(on)g(trolle)681 b(in)g(einem)g(Ortsb)36
b(ereic)-36 b(h)680 b(\(Gesc)-36 b(h)g(windigk)g(eitsb)36
b(esc)-36 b(hr\344n-)921 47580 y(kung)644 b(50)h(km/h\))f(wurden)g(die)
g(Gesc)-36 b(h)g(windigk)g(eiten)644 b(v)-36 b(on)644
b(20)h(F)-108 b(ahrzeugen)643 b(gemessen.)921 49572 y(Die)434
b(Ergebnisse)g(sind)f(in)g(der)g(nac)-36 b(hstehenden)432
b(T)-108 b(ab)36 b(elle)434 b(aufgezeic)-36 b(hnet.)p
0 TeXcolorgray 0 TeXcolorgray 9122 51645 28575 45 v 9122
53637 45 1992 v 9830 53040 a Fk(v)481 b Fm(in)433 b(km/h)p
16265 53637 V 1373 w(45)p 18938 53637 V 1374 w(47)p 21612
53637 V 1373 w(48)p 24285 53637 V 1373 w(50)p 26958 53637
V 1374 w(51)p 29632 53637 V 1373 w(52)p 32305 53637 V
1373 w(54)p 34978 53637 V 1374 w(89)p 37651 53637 V 9122
53682 28575 45 v 9122 55674 45 1992 v 9830 55076 a(Anzahl)p
16265 55674 V 3459 w(2)p 18938 55674 V 2023 w(3)p 21612
55674 V 2023 w(5)p 24285 55674 V 2024 w(2)p 26958 55674
V 2023 w(2)p 29632 55674 V 2023 w(2)p 32305 55674 V 2023
w(3)p 34978 55674 V 2024 w(1)p 37651 55674 V 9122 55718
28575 45 v 921 58485 a(Gib)846 b(das)h(arithmetisc)-36
b(he)847 b(Mittel,)h(den)e(Median)h(\(Zen)-36 b(tralw)g(ert\))846
b(und)g(den)h(Mo)36 b(dus)769 60477 y(\(Mo)g(dalw)-36
b(ert\))433 b(der)g(gemessen)h(Gesc)-36 b(h)g(windigk)g(eiten)433
b(an.)p 1 0 0 TeXcolorrgb 921 65014 a(Mo)36 b(dus=48,)434
b(Median=49,)g(arithmetisc)-36 b(hes)433 b(Mittel=51,4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
45588 a Fi(___/1)p 1 0 0 TeXcolorrgb 47905 47580 a Fh(WS)369
b(1.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 68748 54804 45 v 0 TeXcolorgray 24421 81281 a Fm(10)p
0 TeXcolorgray eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fn(WS)581 b(1.3)g(-)g(14)g(Mittlere)g(F)
-179 b(ehlstundenanzahl)577 b(-)k(O)-60 b(A)582 b(-)g(Matura)f(NT)-2385
4515 y(2)718 b(15/16)p 0 TeXcolorgray -1391 7823 a Fm(14.)p
0 TeXcolorgray 651 w(In)467 b(einer)f(Sc)-36 b(h)g(ule)466
b(gibt)h(es)g(vier)h(Sp)36 b(ortklassen:)467 b Fk(S)77
b Fl(1)p Fk(;)221 b(S)77 b Fl(2)p Fk(;)221 b(S)77 b Fl(3)471
b Fm(und)465 b Fk(S)77 b Fl(4)p Fm(.)468 b(Die)g(nac)-36
b(hstehende)874 9815 y(T)-108 b(ab)36 b(elle)613 b(gibt)f(eine)h(\334b)
36 b(ersic)-36 b(h)g(t)611 b(\374b)36 b(er)611 b(die)i(Anzahl)f(der)f
(Sc)-36 b(h)g(\374lerInnen)610 b(pro)i(Klasse)i(so-)874
11806 y(wie)520 b(das)g(jew)-36 b(eilige)521 b(arithmetisc)-36
b(he)519 b(Mittel)g(der)g(w)-36 b(\344hrend)519 b(des)g(ersten)g
(Semesters)f(eines)921 13798 y(Sc)-36 b(h)g(uljahres)433
b(v)-36 b(ers\344um)g(ten)433 b(Un)-36 b(terric)g(h)g(tsstunden.)p
0 TeXcolorgray 0 TeXcolorgray 8686 16204 29445 45 v 8686
18196 45 1992 v 9395 17599 a(Klasse)p 13686 18196 V 1915
w(Anzahl)434 b(der)p 22393 18196 V 1914 w(arithmetisc)-36
b(hes)433 b(Mittel)h(der)p 38087 18196 V 8686 20188 V
13686 20188 V 14394 19590 a(Sc)-36 b(h)g(\374lerInnen)p
22393 20188 V 2729 w(v)g(ers\344um)g(ten)433 b(Stunden)p
38087 20188 V 8686 20232 29445 45 v 8686 22224 45 1992
v 10445 21627 a Fk(S)77 b Fl(1)p 13686 22224 V 5439 w(18)p
22393 22224 V 10395 w(45)p Fk(;)p Fl(5)p 38087 22224
V 8686 22268 29445 45 v 8686 24260 45 1992 v 10445 23663
a Fk(S)g Fl(2)p 13686 24260 V 5439 w(20)p 22393 24260
V 10395 w(63)p Fk(;)p Fl(2)p 38087 24260 V 8686 24305
29445 45 v 8686 26297 45 1992 v 10445 25699 a Fk(S)g
Fl(3)p 13686 26297 V 5439 w(16)p 22393 26297 V 10395
w(70)p Fk(;)p Fl(5)p 38087 26297 V 8686 26341 29445 45
v 8686 28333 45 1992 v 10445 27735 a Fk(S)g Fl(4)p 13686
28333 V 5439 w(15)p 22393 28333 V 10395 w(54)p Fk(;)p
Fl(6)p 38087 28333 V 8686 28377 29445 45 v 921 31395
a Fm(Berec)-36 b(hne)386 b(das)h(arithmetisc)-36 b(he)386
b(Mittel)p 20637 30691 740 45 v 387 w Fk(x)21376 31594
y Fa(g)32 b(es)23170 31395 y Fm(der)386 b(v)-36 b(ers\344um)g(ten)386
b(Un)-36 b(terric)g(h)g(tsstunden)384 b(aller)921 33387
y(Sc)-36 b(h)g(\374lerInnen)431 b(der)j(vier)g(Sp)36
b(ortklassen)433 b(f\374r)h(den)f(angegeb)36 b(enen)433
b(Zeitraum!)p 1 0 0 TeXcolorrgb 921 37332 V 921 38037
a Fk(x)1660 38236 y Fa(g)32 b(es)3436 38037 y Fl(=)4949
37138 y(18)296 b Fb(\001)f Fl(45)p Fk(;)p Fl(5)i(+)d(20)i
Fb(\001)f Fl(63)p Fk(;)p Fl(2)i(+)e(16)h Fb(\001)f Fl(70)p
Fk(;)p Fl(5)h(+)f(15)h Fb(\001)f Fl(54)p Fk(;)p Fl(6)p
4949 37727 23096 45 v 11817 38948 a(18)h(+)f(20)h(+)f(16)h(+)f(5)28546
38037 y(=)369 b(58)p Fk(;)p Fl(405)p Fk(:::)p 921 39877
740 45 v 921 40582 a(x)1660 40781 y Fa(g)32 b(es)3436
40582 y Fb(\031)369 b Fl(58)p Fk(;)p Fl(4)p Fk(h)921
43128 y Fm(Einheit)433 b(\022h\020)h(m)-36 b(uss)433
b(nic)-36 b(h)g(t)432 b(angegeb)36 b(en)434 b(sein!)g(T)-108
b(oleranzin)-36 b(terv)-72 b(all:)435 b Fl([)8 b(58)221
b Fk(h)p Fl(;)g(60)g Fk(h)p Fl(])p Fm(.)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7823 a Fi(___/1)p
1 0 0 TeXcolorrgb 47905 9815 a Fh(WS)369 b(1.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 46935
54804 45 v 0 TeXcolorgray 24421 81281 a Fm(11)p 0 TeXcolorgray
eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fn(WS)1141 b(1.3)g(-)h(15)g(Bo)-60
b(xplot)1140 b(Analyse)h(-)h(MC)g(-)g(Matura)f(2013/14)-2331
4622 y(Haupttermin)p 0 TeXcolorgray -1391 7929 a Fm(15.)p
0 TeXcolorgray 651 w(Alle)303 b(M\344dc)-36 b(hen)301
b(und)h(Bursc)-36 b(hen)301 b(einer)h(Sc)-36 b(h)g(ulklasse)303
b(wurden)e(\374b)36 b(er)302 b(die)g(L\344nge)h(ihres)f(Sc)-36
b(h)g(ul-)874 9921 y(w)g(eges)542 b(b)36 b(efragt.)543
b(Die)f(b)36 b(eiden)540 b(Kastensc)-36 b(haubilder)541
b(\(Bo)-36 b(xplots\))541 b(geb)36 b(en)541 b(A)-36 b(uskunft)541
b(\374b)36 b(er)921 11913 y(ihre)433 b(An)-36 b(t)g(w)g(orten.)921
36213 y
 currentpoint currentpoint translate 0.88916 0.88916 scale neg exch
neg exch translate
 921 36213 a 921 36213 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 456.95097 a add def
/d 0.0 a add neg def /h 240.1412 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 36213 a 3378 31489
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 434.75787  0 -22.1931  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -22.1931
 434.75787  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-42.67911  def /maxTickline 197.4621  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 434.75787
0.0 -22.1931 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 3143 32834 a Fj(0)2679 b(1)h(2)f(3)h(4)f(5)h
(6)g(7)f(8)h(9)2444 b(10)2210 b(11)f(12)h(13)g(14)f(15)3378
31489 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   0. true 113.81097 128.03734
227.62195 156.49008 0 Frame  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   0. true 113.81097 28.45274
170.71646 56.90549 0 Frame  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 156.49008 56.90549 128.03734
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 284.52744 156.49008 284.52744 128.03734
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 156.49008 170.71646 128.03734
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 142.26372 56.90549 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 284.52744 142.26372 227.62195 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 56.90549 28.45274 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 227.62195 56.90549 227.62195 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 56.90549 142.26372 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 42.67911 28.45274 42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 227.62195 42.67911 170.71646 42.67911
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
3378 31489 a
tx@Dict begin  { 109.8276 -22.76227 } PutCoor PutBegin  end
 3378 31489 a 610 x Fe(En)-26 b(tfern)g(ung)312
b(des)h(W)-78 b(ohnortes)314 b(gemessen)h(in)f(km)3378
31489 y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378 31489 a
tx@Dict begin  { 10.81218 91.61786 } PutCoor PutBegin  end
 3378 31489 a 610 x
Fe(Bursc)-26 b(hen)3378 31489 y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378 31489
a
tx@Dict begin  { 13.08844 184.94283 } PutCoor PutBegin  end
 3378 31489 a 610 x Fe(M\344dc)g(hen)3378 31489 y
tx@Dict begin  PutEnd  end
 3378
31489 a 3378 31489 a
tx@Dict begin  { 54.62921 170.71646 } PutCoor PutBegin  end
 3378 31489 a 570 x Fe(2)3378 31489
y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378 31489 a
tx@Dict begin  { 26.17647 71.13185 } PutCoor PutBegin  end
 3378 31489 a 570 x Fe(1)3378
31489 y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378 31489 a
tx@Dict begin  { 111.5347 170.71646 } PutCoor PutBegin  end
 3378 31489 a 570 x
Fe(4)3378 31489 y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378 31489 a
tx@Dict begin  { 111.5347 71.13185 } PutCoor PutBegin  end
 3378 31489
a 570 x Fe(4)3378 31489 y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378 31489 a
tx@Dict begin  { 168.44019 170.71646 } PutCoor PutBegin  end
 3378
31489 a 570 x Fe(6)3378 31489 y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378 31489
a
tx@Dict begin  { 139.98744 71.13185 } PutCoor PutBegin  end
 3378 31489 a 570 x Fe(5)3378 31489 y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378
31489 a
tx@Dict begin  { 225.34567 170.71646 } PutCoor PutBegin  end
 3378 31489 a 570 x Fe(8)3378 31489 y
tx@Dict begin  PutEnd  end
 3378 31489
a 3378 31489 a
tx@Dict begin  { 168.44019 71.13185 } PutCoor PutBegin  end
 3378 31489 a 570 x Fe(6)3378 31489 y
tx@Dict begin  PutEnd  end
 3378
31489 a 3378 31489 a
tx@Dict begin  { 282.25116 170.71646 } PutCoor PutBegin  end
 3378 31489 a 570 x Fe(10)3378 31489
y
tx@Dict begin  PutEnd  end
 3378 31489 a 3378 31489 a
tx@Dict begin  { 225.34567 71.13185 } PutCoor PutBegin  end
 3378 31489 a 570 x Fe(8)3378
31489 y
tx@Dict begin  PutEnd  end
 3378 31489 a 51504 36213 a
currentpoint initclip moveto
 51504 36213 a 921
36213 a
 currentpoint currentpoint translate 1 0.88916 div 1 0.88916 div scale
neg exch neg exch translate
 921 36213 a 2546 x Fm(Kreuze)433 b(die)h(b)36
b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434 b(an!)p
1062 41717 44260 45 v 1062 46595 45 4878 v 1770 43658
a(Mehr)f(als)i(60)217 b(\045)434 b(der)f(b)36 b(efragten)433
b(M\344dc)-36 b(hen)433 b(hab)36 b(en)433 b(einen)g(Sc)-36
b(h)g(ulw)g(eg)433 b(v)-36 b(on)434 b(min-)1770 45650
y(destens)f(4)217 b(km.)p 42912 46595 V 1 0 0 TeXcolorrgb
43621 44488 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 46595 V 1062 46639 44260 45 v 1062
49703 45 3064 v 1770 48499 a Fm(Der)393 b(Median)e(der)h(erhob)36
b(enen)391 b(Daten)h(ist)g(b)36 b(ei)392 b(Bursc)-36
b(hen)390 b(und)h(M\344dc)-36 b(hen)391 b(gleic)-36 b(h.)p
42912 49703 V 45277 49703 V 1062 49747 44260 45 v 1062
54883 45 5137 v 1770 51688 a(Mindestens)332 b(50)217
b(\045)333 b(der)f(M\344dc)-36 b(hen)332 b(und)f(mindestens)h(75)217
b(\045)333 b(der)f(Bursc)-36 b(hen)332 b(hab)36 b(en)1770
53680 y(einen)434 b(Sc)-36 b(h)g(ulw)g(eg,)433 b(der)g(kleiner)h(o)36
b(der)434 b(gleic)-36 b(h)434 b(6)g(km)g(ist.)p 42912
54883 V 1 0 0 TeXcolorrgb 43621 52647 a Fc(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 54883
V 1062 54927 44260 45 v 1062 59805 45 4878 v 1770 56869
a Fm(H\366)36 b(c)-36 b(hstens)402 b(40)217 b(\045)403
b(der)f(b)36 b(efragten)402 b(Bursc)-36 b(hen)401 b(hab)36
b(en)401 b(einen)h(Sc)-36 b(h)g(ulw)g(eg)402 b(zwisc)-36
b(hen)1770 58860 y(4)217 b(km)435 b(und)d(8)217 b(km.)p
42912 59805 V 45277 59805 V 1062 59850 44260 45 v 1062
64905 45 5056 v 1770 61710 a(Die)435 b(Spann)-36 b(w)g(eite)432
b(ist)i(b)36 b(ei)434 b(den)f(Umfragedaten)h(der)f(Bursc)-36
b(hen)432 b(genauso)i(gro\377)1770 63701 y(wie)h(b)36
b(ei)433 b(den)g(Umfragedaten)h(der)f(M\344dc)-36 b(hen.)p
42912 64905 V 45277 64905 V 1062 64949 44260 45 v 47992
7929 a Fi(___/1)p 1 0 0 TeXcolorrgb 47905 9921 a Fh(WS)369
b(1.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 68977 54804 45 v 0 TeXcolorgray 24421 81281 a Fm(12)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
