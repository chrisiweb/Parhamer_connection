%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/AN 2.1/AN 2.1 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:39:16 2017
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMRoman8-Regular LMMathSymbols10-Regular LMMathSymbols8-Regular
%%+ LMRoman10-Regular LMMathItalic10-Regular MSBM10 wasy10
%%+ LMMathItalic8-Regular LMRoman6-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/AN 2.1/AN 2.1 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0838
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245AC583FE784CD69B918457FC63ACB5FA24E41
CAE39AA9386736476F5C0BD3D01ACFCABB35BD346B884B97EB5F467C93A2FC7F
82A0B3682C1D7B0CAE0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7CC4EFE6
1F9F8E88832737186037F9E5AB161B8A2090F5569529861FAEFDC91E823E0A0E
A92E7F1118BCF413BD355CD844D0F88C47B267EAFA1585B4ABAAAB9BF885D233
DE4656E4CCC1AC1A5762BE48F5FA88A0020AF17A438014B5902A55EE220152C9
0348CF590A07761415D2F53A866C95D4A6848E2BB7970D176670F90765843635
9C2461BEA57F9CC512BDC51EF25496B2C2253AE85AB38889B26761BA509C7F63
8C6CBC4BBDEA74FD3B43A178C86F9A97423815F5FA2C09BA590B8371D5B7758A
43F98F4DC4792308CDFE2779CA6F20ACEF23FD8FC11F483C0CDAFE837D984A76
1286C4DC5088F5DC4B8D59F781ED48736CDB2D0B9B51340F6218CDD622544552
9BAB6B88481D111091C2CAE5E19903BE5F2C90E79E2469EFE314329B4653D49A
0C4443075770A918BF41736B320F9653C19886C022E40DB4E36B72E592BD406F
596D415478975E25D1E9A8DBCCD50E0F27E925AE25105C74A97A28AB3241B091
503FE2B0DB2B950C453DF3EFFA7A223A8615C973D1AD43A9C5769C335FA10DD2
2A9C8D64ADFE5C705F27440CF292DE3F9A8D6890F4E2E9F07C1584D565DE2743
BEF51412CB09BAC78D9A9047736F25BC8EB7463BCD91C90087E61EC4A1CB5668
D0E7232AE1A101DBD23409514D1DCD2B5E23742F6F46B3676F2F5009B28FD8CF
82DACF603EA5961EED99C9AA3BA1F8E6B2C165A661D051338E97676D08D01D53
2039D251AAB75FDA4D5C2D9A594B8985C4AA1CE7DA71D7DE560B20388264ED77
132352AD4A02D36FC01DA5CF1EEDD532A0E3211BD9D9008646CC90C9E6EB17E0
1E12E516E4D3B72B49778095CD6D07783E9B5780319235708F3988B266504227
2F8B354DE15DF509B1940998ED426EACF54D77443327488492D6AA15C5A192B2
C17749DB6AC2084C6A75491E6FB631473A00203B1EFFAC9B11F49BB7F7E18CFE
82580E3E552399E387C42B68C9A4D394F73778F519ABA551DF0110BEF3968F20
064A2E38A4A472D85532A6FB51DA97B7F939C9A410F8C936DF43C1513A87B496
28CCBCD41BE10E91F0CCBA6E742D1BF3886A44FBD5AC4F614140E7682671CEB0
9DD38EF4D531BCAB6597C005B61EF0A2824DA76EC98C437FDC3D5E72F65E2E0D
B13089940A2FAD82C386B0BB1643DB75B0B8AC3026D5E3AE5B9AA9D0B87CF452
18124E11ABFAF291DC395A27BBACDB51C7EFD95C402ECEA794ADEE3FAF1296B1
D5C508B2B0796D9F21343C1EEC91B7D8B34090191EA7422786506713E2E0814D
5C509D9ED990DC5F7E807B030456DC6B3A9CE5EF33212E10B30039F55B0DB703
1B4683866A77524FFC9ED820196E8242FA5BF474A303BA1AF6360E5A4DB78877
88EE2D256F185210ABFF4FAA685EC719DC8C84E6719B383BE2F52FCDFCBB4905
2F4BBE65E653BC7B184564EDE16FDE4B65C996D86E56EE94D0B1581C0FD8F051
3BCF2183FEB967C706A664A1D97CB8B7BA0B7BFCB1F0C568A4B78482
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651F4370133E3968EE80FF9C2E54953EDACCBA
2549852043B5A93B09ACDFD025365A4F8FBA3FCC4DB60700C22ECDF23E95E01A
4C7B87E4F5D46CD2AEF5D46CD2180E4304BB80E17A83397A677D32DEED9BC850
B4C056641799994DEBD48FC73D616143FFB85D78805A95B8CB191C775A2DDEB5
FC8B803AC7B461E0FB63D746090AC3E759366E115437A8EA8CD328F309EC0960
36351451AE7425A26CDC319A31BDE48F68B947574C1DB2834483C460A5B2429A
D49BD462D9C9F75FBA92ABD47A5EF18C3A43B9B7A3D1EF1AA43A6A68E4D42CDD
2484CF47C0FB3A68121F424FA4B29058841D9821D7F955D3824CB1754278E8D5
847116509B7D3B960EE375F1DCCB4CAA1CCCDFA0E61FE01518738F7E6B887898
261117EDC211226EB3A9E0B251FD4CF4FD2543B7E6F394D3D262DDCE224AD9CD
BDE8CDCEAF38C0BC9E406A35F44C6B412ABEC730D9DE3716C5B0A87BC7ED856A
77E3AEEB9912B64A5298C2F4552CECF63C84F805508C4A0CB98910441699B722
2BE7727547825EFBCA21408C5F84E3E7781B5BA336E0CF740BE6D85F8F6F8631
BDB1D0AC05ABE2EFAABC930F472F93E247E29CD9852001BD2E16E51AE3E1A77D
4B05540EDA577F3759A940D23E73451C967666B5EE5CC6EDDB55CFD4CD875072
FF79F4ABDD8F935A11E83F9D6F40978896B8F7A0B472D1F9FFC68F7C2F5EB1DD
447832B4E1DBA7870A949E48C9DA6B47BA581F7D24C5A0B90A66F0FFC044D1E8
0652D0836E0FF5980A50D39360DC793D9C260F9A68379C031C3F363054F84888
CA17948C9FB31CF86E555B4815AA6C826666025BB984A519FCED4498E4A4CD61
BDDA5F652B54A3270DFE501ABDEAB9327E296740F0DD9B42A45879E285C8E0D2
DD61A71643555DD007B6477A05334C6D7D079DB00F337979DA04BBD485BD5630
0DA794E86C9815AB3FEB37E78106CA0A3441735AAC9EB49CCA33DF4322929D86
32C4BD136C89169D45718A88BABCB2844362B0652A6345C6EC83DFEFE0994552
32455B3CC14F0D2FE83F60403C598F8E360AFD7C3A3F37E771BF49F20E7ADF22
AE9612796DEB9138059A4C12D4A8B8A37DCC221CE80014F807A53945E21FB479
4956F9E37B87EAE0447EDADEB00764A38DAB429277B779104D1360C711A40FE7
FE508CDB795A3BFDCC677893634CF91C45816B9AC1146B1BB7AAA74FF92F4273
B18D515086F457B5AEBA634AE5C75971733044D64738F071F82148EC95F4E53F
D20E5A2A4479D59A73A9D61F3E4E4894BB92AAF0AE56AF9ABB385D300EAA72C4
388B62E7C32A29313EAAB849169FE98FF9B3CFDF3FC9692113CC15C94DDD2940
49748B473FD5F4AE9C34F0554E0BAA2290B2082F996026ADC420C676AD59744E
3D1C8132F311B70AE10E12E863CF044F38542BB9CEFC017BAA8166A39AD8117B
F368B91934BC6F0BB1B2E7C4F285F9BD614A00DE6825572189A19315AD397814
2E2E61CCC0992B66DA71D8BE22836E6DE06A54674E34DC85646396AA84DF28CF
38994138E0F4E0A3F1604049D39F50717E4670442DBC451B029ED37E22709B8C
11F4DC6A1EE18BFA4AEB8E8FCF1565480CC3C141D6375466FA0272B67393DCBD
86FE4CD039BB44D2BEC68717E95B7597AD7CACDA2A6A4E8808BDF0ABA0997D0E
DBD2BA7C8586E942973B8ADC21BA304ABB619E86CEF1C8D3D84C9892F62613F3
FC722D561C0B4D707CFD45E588F7F0CEA7717976FBB04E6A3577A2141CB8A8CB
6EA47F3B1F8BB5B13D7B90A4F95E54057A005AAEDAD9D7CEBA399B3FDFF494D7
8EEF9EC6AEEC046812CE43B02B9A8F4A127E7C98CF0C088786119EB7E0E7EB32
C428F531FF5E355D691E098D1FB67AEC40458600B1A87AE31E65B7EFE7B1CB02
5613E53340E473C1D5495826470F3A1F450D1AC2C81C876EDB818BA0919DEF1D
3F443A32A724A003C23DE44D0A1774265B27B89FAD2A00A0F8325EF3029125BF
0C973EE91DB8A81E4164F827F359A4630C2955964D0D808BE8D16D2EBCD7AD30
50E68B2F5B879433A41FCA23CE3D342D8157822D42F334B8793F13FB6797C5E5
249834816FEB195E5FB218CCB914449B44FB92C6E63D1999EE615767510AADA4
364CC2035DB3CD08B107110C866C7FC5A1A8A411A597335E6BCB62888AC8539B
369E5FE68D9DEA3C0DBCF7C332C1413109E975BFFF13E7D0BA8720C1A7936015
028480F2CE7EE814B92E5BFEFF479612753E3B373D0E5E288AC7CC5D3A751095
4895B6583129FB837AFE9E5EA65226535F722426F039917C6C2E033240C86703
508D2380278FB9B8E12B455199E01A4C7B87E4F5D4EC84E9D21FC68D0D1359FC
7996DB1B6A97E165EADC6CE23BD6CB9700745AF7FB6DF76A2251C779DBF0649F
15D26FD05EB16A7702D79D42364FC91AC88F98EE11E8609E02E01CE344598BF6
B0D1B1310C75AC850FB4C642FA3710C2C9905F224C87890C9DA4E53930BBDB54
CA2AEF866BDC2071045C3D71BAB3CF386AE54D6D57ECEEF7A86A51787478FAF7
EDF2347DFCB070CF8E3093B06D0B80CED641940DD7A92B277C63B178F5E81127
0F2F4E4FB0360E4923BF1A75C78A77CE2BB4368A7C8F48639FC3A0BF18262068
E043BAFA2CCBCACE0875E368521C0D91FF9ABF781BD5C69282459F75ADA02D7E
D5D348F7CB99C78CFD41D054B08B9AD11A4F25CE3652A01C7033683D9A1ADF85
5A6BEFC921B4896D04E61B913B6C417E0AF5A4EB59A67192BCA9ED8B4D70ACD4
EFFD55C41DD3831AD6161DCDD67FFB74C773637429CB45EB3EC279B505D8299B
2AAA7A05FCEF74AADC754D33163A47C93361B58F38ACBE8868CC263D0793FD51
0BEFD0B8DED7C00CD9A60AEBBA3FADDCA48E2745359AE31AEDB60F54D334C1FB
8CE7C6CFA4536829527A871675F108B3A973CC43AFC2BE532ED012C3EB58266C
BEEBFEAE16F228285B627BE31FE6BEC3F374AE853CB3E511385FDD62F98D8CAA
ECD64C7D8468DA6DCF2767A73AF89279E81D9CE04C5C360D7677FEFC0BC3255F
01003FBC34C53EEDB7645170A6A6B6C1A85D0058926158D713B29EF1F9D60352
A41DBE68A7816F315788F094FF4AF02F686A3D22F12830D995534A8D82E4B822
F07B115CAEA24F19126C17DD16A3913F27F12C896BDE5C6BFFB9251338B976C4
056DFB27F053921193C59DB289A4188A942F2D2D868F92B8459BCB9EF09ED7B5
2B92B00BCC6ED4FE1BC82E285FD99B6CC9808D4BF6C5E91C51725CC94A1958AA
70AE9037BAF2779ED8034237F25540F71DF81701B07933495A954F676F7DFA49
F81BA6B221FAB4FF6EAB642A91F1947AAB4A780D034BC00B16D7C4D77CA1AAE7
242CE5BE6A645C2653FE55D062B786BC3C6651B6A1CD604A45763B67768AC526
1DF9C7E081A7F60049B5EE91E7C3F3F02E3B8751E078517F614A52C9CF58B49C
1D1550F2589FE68B29179A3E97A3F0B35A3FE8DF5B26B0E8BABDC5FCEE3EB404
54892CE429C3ECA8635B7A013061A8BB2B0EB98CD8674AB5A33FB9835B0D1EB4
B6F550DC77164C5F6B43342A87FF745965DC919A12B63D7058BD4F4BD90D4EC8
361D3DF55B5BF4BE1765CD19CAB0F92A94AD2E091DD7659A4DE4DE812FC92035
4999BE909721075D1D40A984E6E75ABA2F4AF1A7D59300C44EF44E7060A9FBF7
B5252C0274C581A2005CB515170BEC2C09C3EEF80AF06A0B3E3A704A3B79B914
B6737628E56BCA749F4720DE9195E8559ACAD8346F7BD9DED0B9584FED157922
B29CC828ADD9B2582CF6C3178700E56D15B3AB9AFAA3E9D10D4B47F75D05CE2D
81DB06B129721A9135C29F9C2C2C9C3FC2897183D705A37702223D1466A03D24
67AD61286FBBAA4725D698612300458A151C340BA68A9106225ACDC6D829F002
A20624B2659A7011A9657AC8B869C2FEB82AD03AF067FC6D600734F59939234A
15ED0A6402505729BEDFA52397A053B37ECC29D2E0AA06A2BF72DB85657F4A35
58D4585AD1918E86DAACB86054F56F7394088DC50A1C1FC14A0F8E5003D4703A
071AAA2FB6B31D984F0072AA303D33D5478995B533818649CC62032B5D3A3F48
0437323E1DFE2E69212EAA61EA27F9EA185D6B4A80C1BFA827E4F15E623A96FA
4C467943C618A5E35267223F46AB148E74D8D1B986B2EBAE55077A0E54BA5F4E
CA8379F7F7BFD9CD497E66CBE3728B6CC761E56E90A48FDBEA688E80FA438D78
057EA80AF988C8767E67C90E0CCB24824503570117323252722787576A552F56
5387D8D2176685B1A58609AEC90E71132EABB4AF737A7AB1D63393DB4A3AADCA
389CE1ACBF20AE2FB1EB4802C331780943D1C667EAC9A01B6176AD76F2D3E88E
98A5679207C76C999903969568B43673A80D0C5108E8116E5F5C2F25A54FE587
E55C037EDF4C9BC1D95FD0DE382839AE8C789A6339F7D36DAFE163824896DC2C
78FC9DF1F980D05D8533158A7D1941871D0016ED45EA05983F88B9E7E3262FB0
36E1F51B26BFCAC3915932A9CD8EA9FC589975823965AA4D2FC6AE27B27A17C5
10EB9072FFAE0685C7C24E70ACB8564454277C41C28075ABDC428D3809A6BD65
49A52A6AE38C80AFB8C867AF2D6B55B800BE51509F685173FC157CA62976128D
48E72C15E739FA6D2412BFB5783DB3C0F6D60E34BE594B65D769B6340202E77B
33EC7CF4718DD267EEFF4C0000F2F317ADB833E0D0DDA4D02A93E18795A8AA1D
4994D871C6C5B81488F425782658BDAF63E8792D79340D223C92CC01B7E355BD
A077E525640CF211E7A3B8DB7BF746E85C18EC1FCF0C423A86C57CBAE8F9F82E
65EDBCCB17469C47E7B6B66DC8BDB8552BA01AEE38E1205B077C2F2C646FEE57
99A02E0F53322EEE450F6DC39A4F03032CCA7A8320F6B01B4C39C37DE56BA266
2E21344E73C74148C1ECA7D4F858CE686804C3F119899F5BB3DC8DE39690B59F
D2708ACEE9F19DCDFC2F1E54AD17895F81828655204581AF0B98038CA5F5DFF5
D325975F280CDE4402EC81ED6EE1D304C8D933CDDB280F05DD157E37A6EB7BB4
51424B682DB6CE16E840BD0577CD58A2FC5B7D170AAA239E07DF91A1C10223AF
53A16B1DCD7C5DF152E571C9E7318117E3200AEF170495FC898F22ECC3CBC849
8CF1AED08F797E67C90E0CCB24824503570117323252722787576F4CF1A672DA
6A04C28C460DA2A483E9826D8813326765D2A528C6A92646975A56E261E3C169
37CEA1C949ACC063FEEAFE31C8A721C2D46AA00C10681BA9970D09F1EF4676BE
5E02D7DC4613C87ABA83D059ED0635D5874A3671EC6B08F2A0B3374650DBA970
A8893D25DCBEDF56ADA1D011C03BFC4D497466C7F09105A287FB8C8D3083CAEC
5B4F7B332E904266FCB27950759D9DF1DC35FC7A9C4C4799419A851AF73C1978
E6ADEA42A238CF1150B5BA091FD30CB05C0AAC0D6FD8486C034DF78B77054829
D7A079D7BD85B9A80845B563220566FEB8F341AACA7DF6DA060ACF1112FA31D1
0565B2B293E7A6C09E2E8FBD459825415B084F754454ACBF44DCF4961F68DBB0
644E77613C9E96ACB55A77DF4812D900F42AF9770E51EC98088D8FC81C7A93EC
9FC3BB5BDA3619E904570286AF49CEAEEAAEEE0AC1EDF4DC2F53275011EE991A
A96DDF4C96A9E0D8E354195A2563759DFE0183C8D67B449516EEB59F22B42BE3
2D7B1631DD1E36137B9C75F2C99248D4FB86CB367BB50ACF8FBB2C8A2EDB17FF
267D0F21C35BE86E068F98C3564F42D2F7F26014DE37C4DCCB6B30860F43089C
0A6E1E7B4D9287CE71718F81073EBCBB4386C5F4957F220CDFF1BA5AFF56910C
49B957170DFE24CEF8234658524B0071B5582DB34872C321F5D6A82C3B0AF842
D748E7160373CAD07AAE053155493BC317F89A8940552EAC2159B49C1DB34B25
67B50D0B0F2BAB32DD9D471FDFBE9B4D20B0BE8BBE3C1A5459A27799E63F136D
C58DA8682674E24838BF99B06FA68C91E1797DB85D924C037C275BD496F93E01
565EF63E388BFB5372277A752C858F67901B52715557491B4DED0A19A1E6464D
99B41FC0AC101E91B84180444A0A928894F8FCA116CFFFF88C6F1C7BF34A0E25
EFB2AD7503D23492E7E980B2C4324A4918DD087768EC44A893A7EECB6D95C35B
B87DA2B112A3E5F0257A53249617F3F4D9F5729FC7C25090211470F9D3B10BF7
FE4019611CC67279792C59C002037F13240A333B2039FDA78228FF7FFF776789
5FB02F823B2CAEFB944B42D689B020B11D38ADCBDC1AD716F75A2C6565B6D04F
A90E615D06A805EF2EA704243FB382621C005388966DBE3F4C2EC9888B56E962
41D345CBE471FFB3B78C4FA50EF1BEBA5095045ABA7952457E62E4081D5CA62F
44DC287DAE5C2DBBCA73CAF31025A3FD47B8B313E59528F2881E4C77381AE42D
708DF8E5C93474AFDFF39C78E4003E7B7FE30D31721B0ADF552294F3AEAF6C9F
4EEB4990475FC4232A38D8F3903D81C9A329939DB5396510900CD5D522C5E9DB
C5C59AF4C51B407D44468B5E2614DD937194ECD03E78CBB916BC57037DBE008C
F0CCF784147D8580979FE5FCB204DC95F10D6E5571D4EF121855C1086E047F04
3F4D780E9A34C3E671B402F789C9F3C869F0FD12D2A1FA3458D37F8CD2E85194
7683E050B6D2E4F51FECC9351B42923E388B70E7C41B77DAE3DB6C579E3A28C6
3E8E38D62A92755377D1274604BE610997CE121BDB9CED994238C39531CDDC19
7EAC2414615E79137C52F372CB9CFAF7DA3CAF003473DBA5C03B5BC597E5C182
CBE1F42E739B6485473B414FCCA4D5C10FF38CCCA54DA33831938E9392DEF759
4DE827864CD1D0B2F50FA679945BCA6A71E4329DB73E7F29098787D96D89D30A
3C961F55E64983F69651D5206CE47CF745E42FF494201D7BF2AEE8664D6AD229
D31B6E7713609222EC88AD13BD745CE175B921697F9D9FF0803559FEA2110988
23531BE96D98F0401D2545E9FACD008B4ADB50EB9F049AABB576738EB12DA190
F7B750529BEE0764347214528AE43CB7EBFD4F38C31CF4FBD46EB44215D6E646
EC32B1031A6A54A6805B7F680B56CED7F1984220443B845A9FBD9CB9C38B9396
02D8F7A3F70B39F1723B8E668827FBD165657C485FF7D48E2C2AA8284ED768B1
555C02AFC9FB543ACFB65DB1A10646D0762B400B49288C480351F7DC67048E5D
A26AC7D0ABD2820C2F4E7B76F2F0D593E7F8D1CB8EAD24B2F8DE2F54038936FB
2D9659D413E08C97C832D3A03EF24ECB073936A0C035ECDD9681A52882BB4E55
C113EB226EDBFA60AF43C7D37311FA695AF97F91EA727C3FD9D0C0217C057987
87881D07CEFE01902B0D0F7D8913B4E954FB295B5ED5498C4A68B73340A25409
4DB0024341A7BA745D8F3DF3DD0D5AB028F2EAA1AF13F4F8F96019FB2822AE4D
7FFB00D18FF44D2B0659D8818C847E21917F8043CBFAD9A3BADDFC68DCCF67E0
FEF88AB76E205570691C6063359CE9DBA2E3ECB7B59435E44A8B4AE46E1C2BDE
A679FF899B2E62D89D132868CCD003AB7AF9961F0943FF5F02016DD6F0563A26
851D5491A897AEC52D74BB6747FB9CD5A633DF53752834D3CE0EB2B7D7775E39
5BA4BAF7F82F0850D4EC408D5FDB7470CD59E8576E72A8186570F0EBCAA0CCCA
D7FE46DAFB0044DB29A8B801321969CD052FD61493FDA21156452D2865572235
B8CEACFD7733CEDCAA991212FC3C15A7E8CA6E083C0034671A4E268BBADA4583
A16C3C57DB5F720871CFA9672BDF5356746638CDD9FD68E308DDAD15D5676372
A863F05EA4BFEEBD5DEDA74B52C8EB0BA716FF6C6468BB98385F009C20BB8434
DAA8EC8FC416BB45F9DB9C98773585EA5E4D316AEAC8CB4182A887EF4B289F0D
3573D61FA865EBB3E287937147C9BE9926DAAAE4C59ACADCFDA1CF32A9E980DC
7946713AA2B67ADE09E2FD2209974B99C3A0363AA5CAE125EF0F3B74E35560D1
6C07063DFA0A742BFAAEBD91144D26AFEB983E71575D89DA575AB19DF8CEFDC0
FA2A5EF2622F879D80738E31D04524CDC4DFD91254F5F7DF55FE68CAE7989878
5FA31D557C86F93742930EB43CE5F45809AC88B5FE9E89C2EFFA64B2ECAD898D
39DB7D202BB69739202BD31EDAA120CE54ED0DE7EAAC5065B4F48C0B7DBD8AD9
FF3B7B5B4A1B7CA0542072597BA50F8F45B3B08141DD5CDEB790D76C36E9CBCA
5A955285C130E0EF728A401986C50D3DEF377CAEF216A5A795DD63F3C6659BBF
4D2971663D0AB84621F15C186C06199CF885D233DE4656E4CCC1AC1A5762BE48
F5FA88A3AA47DFC0FAAD37018CCA129A4897876302C02AD8911B3371DFA6452E
0BAA0519CB64DDE6282787A7F448D78DEE9271F19E6331D554E6829242F1E05A
A1A3BA678F42355A6F1123474D93C05C07B8689FC4885699E4BB766350BA721D
100516CB839EDAEB4DFE011D1947F0D4874EBFFA5673390D853D8277AB6758D6
8E11567ED38212B204347BD00B461544B85F64FA6D6130832DC718E26691AEFC
1DD6435FC6A7C2B91B672FA23D9F875C001E76ED42D71E62DA447AB71A060B51
99BF7899D41F602E326BF53E4F91B77B22E158BA172BE33861E18AAF3A48C72F
9BD37EB716ECD75C6A6CAF0F0FB5F6A73A47FFFB9D6414E7013B7D984B3A18E6
75655F4CAAC54F1F933DE269C0DF2BE55B48962C844CABB7BED489A190D1E853
9853C0DAA181E59ED9410F4D901B9CD2061595FB27C9B1720C97C551826A537F
BE9B5F897B957CDB27ABA4802F0BA02D8DDC0144E7C1BB169635270568E060AD
7BF221339567C68F6B8CD63633DD6BA618557B6798E9F793E6C866B334A71EC2
3B34833BD3B6BF56210B6FFF3953D0944D30855CB73E7A7A981C9CF9174322CC
22362D93433F8D716F159B035A561C376465F9331E5C7BDD1DA502EB95C716BF
DCF80180EE6DC71C01AC6AD353810CA7938D83B174577EF9C645314BAC0C5D26
C1076AA31C8E894713849EB6F8AF8007B3F27A59C82174638FACDEA968C7A123
2104B287170D086BCAD5C7C2BB9C184A5F3F9186E7F3B1D843EB1118F160769E
D9844B47A8A2CC08811B93D94B01FE7AF62D56594BD31845DD8EF67D1D889703
646420B074E222B6426D8AF577A5B7F2B019500E8FBD9E83B2C925BA9BF62903
24C59F30816B248D320852F6F0BC092B0CBD2223900A5A4D8EA5A11699365223
82A3D7D73CEBEDF433870C0523C3C8A7F3AF5DE044750BF9BA8D07C3D70161F0
724055E78899DDF3BCC34D14196B1E24BDDD67D0110B8331410F1DCF9E65E733
8B42FFA0B337AD7CB84CD7CC7795A8F1E7197309DAD0349A9659540C28723810
DAD7CE08EB085D29AC7925CE02513B4E614C0862D035E6AC70E1B1B5F02E969A
DF6CDE36D67EB79A6BB67B5CF26F8C6A61D41E773D3D0004057BF9DE91B80648
FAD40756621200E43834B0CCA28532BB1E7CDD3327289EA1C3C455D8E7D7F669
5055586AD4366A741031698AA060ACD6CBDA8D00D12D8F361B497A5239CBC501
43E098CA65841533DE0242731B79A1A82CFCE9E49B19F5D32E2386B247139DC7
37A0C0E3D0D1237B3FD2E75B2DEB5195839A638DE491FEE467F68D25CA5115B3
81E6D61A9C9A71CD02986992B15F4CAD81E8CD4B2A1E85BE0192A4B722775DB1
D43ED534CE92916843FD101A6FE4D552944258F3184E28421EFBF0F6600EFA1E
7D08A1D454FC01407126D3973FE22CD3AC4F6FBB0AD7B96D842474D1DF235DE8
9D464EF44F2C9297ECBF2840EC61A089DDE23DC9E3DEF6471946061D0DB6701D
0563A3792A1FD51E5460CFA0338DF1F5726862FAF91505153343C3BB0884A7B6
0DAD17058B8E88AA568ED8E38E0955579FE200979E292B3B57E1F7A9FBAE495A
2A25D5A813D1536D5471C3ED727BE7E559B6E54B0C7A64D4A2C86BEC799E6806
C49C1636A77020753AE9AA57C1CCA7866F6543CE1B25AFD261C434D1D4CF4FE9
C907B8468C530A546D701A3B92313C397F0A208ECDFCBEE936D0293C010457BC
056BCA70A7E3B757A8130BF3BC078B17590D62EE62126F8F3B0DFB89AA1D0FA3
717BF3CD52E7FC86C8FE3A9FE76321F3DF1B8D279AD66877E0B05E0220FB8FDF
41ECD551DD326E58FE258D0E268FFFDAE1393586EFD449958C91252156984401
2BABB5ADF93891FC191896A755CBAE3F0F649948253EC51D98A20B1C4150AECE
1B62EDF28AB0B03187728AF15BEF6EBCEDDC19B9F7DB2512B6AC7FE21F478248
CF21986DC483EC4FF27307585A474DAB678B23A7EBCAF98097861710D733B551
0790EB12F5FE80B60089D4C18F187D265E8494A80BDB1FCB3ECD6DE46267C21F
A581E86060A00DF7E387FE4360955D6F814A0B72EC09A99E846384818A44E541
E4E108DFE5E34573DCA40F5946D9266E07CBF681164FEAF332C19BB771979FD6
A842FF6BCEC22ED954560FF7A1971E39FD57F8460A1AEB659C973D52B28D6CA9
2DDED5BE33EEE8268324F6C902D9715E9D5EFF5814A8F3E1BF0B7E35DEF6A9FE
4F0D2A2E9848262290D7F8E5AD77A3AB32CE9C79E9F9F074AB70369ABE28B707
8F57A4D6313458E50D05A1E91DD6435FC6A7C2B91B672FA23D9F875C001E76EC
92FB6934B5368C099B59A7114410C608C749D1B7D49233688B150E779FDD9DB7
3AEEA11615E7DEF726AACE340AD9F2EECA199594CF093FB8D49DAB28DA0EDB94
63FAF413BC1FA14F1FE0237FA942F76F1157480F336F73452C9C15322A392131
FB96C14CCBE65E59BB4D23F82F28E6759E924266ABB0F5AF2002DD17FB094011
08241414A916807F8AFB0BBDB5417E6D852FF038407BC405811993C856601474
FD3DF4947137BDEA68BE33B1C86B31E1EC5E2E7ED6AE24C15111AEE8B0120DD8
E29CC460BCFD5BAC82C941C2774AF399F6E93075A7A0EC5AC289BB9A3C004C5F
FE6777D6E374B40FC2ADE40888C5DC808B63EBED348D07AAF2D7F7A790A0F099
8C80FAD9A265F84D5031EBE0F523F174D1B87F8E5A06CB2F03B396D8F523E783
87EEA92C452CE44D0E6A37CF3696FD8206E691FCCC9FF002209C1C76C4C64695
6668CB64B378A98BA5F5DB1F67DB7096EFB1F419D84A061BF099B8FA36670B16
90CB69F17E9E3BF1E15EDCC29B7701969EE4D07BC78F07D63D7D6E5062055043
0364C88A1DF224DD3EE5110C0D94DAEE6E66D20397C46FEA9B6EF288668FF3ED
3835171FF4288E56438EE91BC7297A8469F567938D322537FA0A8B5CB3E29020
7065992B084D567645EE4D2FC29814CB1D7082661851B3D94D71719C73B320DC
91F4F64B9B942A7CE1109EC7BBE8E5B7AA2CF43FA2AB8EE4213DA7C6C4277079
D25627DCD5E40E3E202D7176934072863EEA862AF354FC6CEB056DA1425749E4
65FAADFA4BF11DD6766C8D058CEB08DBC89FDCFE829432331073236C67785257
36974DCC85E7CAB9173DEBE09BB23B6885F25CDDF3C2DDC16FD131C7F302A2F9
FB65ECCCAD4616959B80FA764F314AC16BB1740C1B9A34534A154E2B04009136
E4115E6073611BE138AEBDDA44E8D1AA9ACBD47097BA31643A74F5D36BD72480
8357D4FD1813801BFDFFEAD8D918A30005C31F177816336B74AF8B9931BEC0C1
8AE73FE1F01FCCC7F5399762D1BC994E94B6179B1A7982129C594986C30DCAB5
11686A2C699385B3CD763CA12281B1A5C2E93E324FF5545D0CE8972C2431411F
730D16480AEE8D2E2DBB374BA8B0C30D5E782C9B7DB4551CB68D0918B52AE133
CC3977DD3448946BD058A0C86C7B26309AD5A80DC8A9A5AB7918FAB070E18406
BEC009B1658A7A314C04B7546244474F513F8F91E616AB868D055C8B11CD6EBF
9453B2F632E36A15B373FF3FAE535328CA8C0544484883A0F02FB4B3781CFF5E
1D1550A313D6A7835FE456A79A38623745FC7BC778B3765D421C915FDA50CF9F
04A95ADF3F80F3C4CE59FAF95451251659F4FAD3B928D141B5A50A3F5E9A303C
99A80E76CF38AA5B4C4F8D3809A6BD6549A52A6AE38C80AFB8C867AF2D69FB1B
0EB44C2CBF703208747659F0C260A6B4FD314B9A936D089493E3B7C7A3BE9AB3
1FFD0D9227EABE61529552E426955F25BD3D4181C84D03DEE36C9F7327962802
9C83A000941FC5F85C754D5132402A0A94EA3D0E37D4DBCD22AF7C60C6CD394D
7C4BC204610D3A92541054C0574496C4587DF29768E6F31E94A1C96D41BCA87F
4236846933F03C778A1A810DCD869D660DC33865B7E7C25A8F933A0E69D24DA2
92AB092D52FAA80F47282D973F48A92193487C2944D35418E9E9DAC3479D3309
DE69137DFBB7833E98F45B76D98F7F115A67578C90CE30A316B6D535855E3BC4
95EBD55052F31B47841D36838D978E70BDDB5116533BAE1B750318362BF85D9A
4FED0550257C16C0F488A11DF9E9251C0554FA532AE3CF6B4CC492912397B565
5117DB31B989EC2622635377629CAD8E550923A84F19126C17DD16A3913F27F1
2C896BDE5C6BFFBCB03C94DFA8ECE2B7374827AE168634FA007F8981ADA54F05
501654D663389C4B5A8891EC5F847FD143664560BC4C5FF77A0D68AABE3A561F
9B19E9E4F465753B660F494EE3BD6829B0EF25EDA2814492016AE68E31049842
FC608B1612C379841BC04CA5D5C9E7B9326E24A0D47AD9A7FC20C44470BA5BFE
CD08F2E9B0678F1C75B4349B10E0C822E7774D2E36B7DC679E91F344E2181C96
31F0E06FD50B7F3208C3AAE0F19541EC977DFB9A5ECCECE193800E322F11492F
E2D4693CDDA5926F4D6643907C7A8A5891F445DD18C42150008FFFDC9DA85E46
A319CEBE22106497041C6BF0D15CEBFD453284869BED4F94E7563A22D9EB3820
144C7EADD2B7564578EE778AB577C5BC1E44C3FA9956F75531F04161B2C21F34
CBE80DE64145C23FC97535A6E4F812454833BEF05947F6414AFB850951A3BE1D
DB72B79483DE686E68A33CE20C97AA3D34B75B9B69C9CC6AA7EE629D85ABD5B7
B3158D44150D249200D31492FDDAF610CC80CD098D1E968B18EE09AF09D593FE
3D0A62701D18826FEC47F867C4FC966D23A12CD634C1FA9AB34BBDD9983E5D44
1DF74B89E58514FE8D5100151D635CECB8442177468B4A69E269481F40D0047B
25617D002082B89E2DD0885CA956529EA49D7B9133782E80CFF57472F27BC0D1
11482C5E2407F0458D28393284DCBDB7835E97EB66928F45EA8146164441267E
54185239D9D66638FDA8BDD4DE1F10153D551CCD732503281837C4897D51AF17
B9562670633526DA154F2FC6BEEBC0DA2A57657BE4BADBA11C52E735C2C981DD
1A51008E09E7576B43654C207F12B1FE9D0800C9DA440F8F4DF5248637C3BC95
98A1164C54C878B02839FBDFB30634D2C908A201142248276B7E4F8924750C83
61FDB1FA328EEC43A235F6F3C221A21FA27814F2945BD12376C76382F3C9C3C1
7519E46F82998324BBD0131B32482D403D243A54E251CEDFA01A8BDE36275E76
D3407C62A81FAFC5A6918FC0E56BDE223615AC1316EA2FAC998F9E08DF976658
5D049BF9B0C16328F8992A1287FBE4016ECACDDC72CCFAC8BEAB0F3CEC7B118C
A007C99ACB3A8CAF71B0FD53F0FBB4B98CDD23C4D7A4185722A4CD1DF2EFBC64
62DCDCF81DB674AF26BD3389F8ACCDF1DCE3D915F0FA21593561B3F793D4ECDF
9B17AC4E1A9871B927051015616FA105CD31AC2704D9CB29783F12C090F7E38C
A5F15406029C0EAA200C1BB9070C7F6833CF29BC0C5CC42B68D8F370F21DC097
78880C3CE4E08BC8EB4F995A09CD0E77B6A97267F4C63D4093BEA8A34B315CEE
932B40ADA36F26410CE158403B4CFB64EB4D80157F57E05097732B4DA0F2F3C2
F479FA651F01F72A57705673E627FDF5A0598054506521227674339C79F366B6
CA9EA7CD06B8D0DA8E969FB1F684291242494E52311C02C8A34C0A5B3C13F380
2AF740BD9C765861A95092B7CED26EF1639CA2DD130E71A587A3935D91E2F1ED
F54D76932130618C8D76D20AC022026C6F2643128B9155F977871CC667463212
4F6F9B939EE1663FD02D1E1D74F22C4DA4143A4BFA7B3D22F58FAC1115AFF937
E1A8502296281BF8389A348484028006F3F3248B5454ED6DC729CC5070524D1D
B08A192A26EBA06EF157958C1BC00554409AD56FE7142D333CD1D23D5C8E17CF
1B43A482C44FE52E57AF48D3E9B3D32C3D557ED2F6F284CBCF8856B2A22E72C0
C525500347775505F87BDCC02101AFF38BA1917A296C2BA59D189CFCA85A1AB4
7D180AE3AB5EDC9A66EB2152A3926D74DA3E0E484D43621E697DAC8CC5B7F6A2
587F0A3ABCD8C3AA3F46E30A2EE663C2CC64E2DA3631AB809AE250FCB0B7661A
99E3BB1BD13565961B1B3760EE57E29C8BE8F4333B259C51DB04F83FB8A8CFF5
EA08B850563F1082F302DF65A337A60C1F7C2E743954A17D26C0DD1FC6719E6D
DFBF4CC6E06F7F4E221AA17F75D36F7194C41BC7659CC291CD5DF9CCDE6DA0FD
3C77D56D063AD44CB7970DD572CD605F5E64FCB19D176C24DBEDD2808DB3D785
BF794EA774CAD2ECA4581BD58ADB6AB154DAE7900B7D1A5831CBBB712BD4433E
492B5FDF3908E6BED58C9765976D71E22D7C32DD6A251141C84EDDAF6793DADC
A8DCD7CC7C04DCA33030F187E88F3A42403FD4606192DB1E65591E8CAC11A84D
FE3F09633B0FDA064321595BE68894E2244B800EA15AF8C16B9B8329E91644DB
1EACF1F12425A26341AA5AC2DCE2E64092DCD8A43E347008B7D5A184688CD0FA
CC7802A28ADB7907E056D20AEC2ADCB43DE6F84089E6E0A57A6AD525B4FB469D
4FDF87EF60080E1EA0527DFB9564EBAFB4292516657B11080A18CE326D18DB4F
C12F7A8E9820207DF26473C9C949A2D6059CF772992C5637092710177BA2E331
993DF752B5F9DA8A06B993088E210C91279AAD5922A3546551F93A06B3BB0227
2B60FFDF4B8A791B5B54E5E9D98BD5B3A86E909F1A18CFBBB502CF3C1C33D64C
241B9F161DCA2420C4E62A6FBB9EAA77C3E1CD4050AFE0CF39A32316087A9435
4D471A4D7A6449D75188F3F600D5FE70576EA42629818DF9894AACCF6FCC5C78
714AE6F776AD12743DC8846D4A70232F0EF82F448559F8CB85DD9909A74AD696
B4E706A3B47E119413DD9556FF4172F1B18271FC2435C354C3F09D46C1354E5F
C1A63D9D5B91BB6B95C298D03B35B604E4DE22C24947C31261DFE88A93AE4E6C
759BB40715E971D4F9F578518E37E431CD2798239CC4C949013F16A197425EE1
20A17F7791554750299F7A6109C5FB6761886F19B5B15D74CB098F56CF1CB341
A140660093A3A260FFABF332DD702AC4030A4AD4B5F9F13F05973139BC1471A2
E5D6D0C62F0ABC86BEFCB1F65AF4CE77AF74BDCD3B48EBBEF3576781FBB7D433
B58368D34E5E37B9E2FFCF9AB319C9F3BCA04911B77B657C0E6ED908335A1687
C92D7BF00C6F8129E347C6489FD4FC798ADB86B0C865CA2BC270E4E404F8A08B
6EA22077FDDCF0DD9D585ABA5B3216B772316E03AFA5A27E6F5EE3F77F4D523A
7A4D01199AFC3C88B0E2AB5FE014A8437745108009D13B449B4A055214DF69D0
218549440B1C5F19476595E964EFC9B18C7002F76150B70E79387F8C338AA7CB
A1F3E799A32B23859A4CDFB52C22ADB4DB30D313BD85B3214F6127B0F5A90B25
E1B529E86B0B4656620B937876139F8A8EC00C8BD6EB20AB66BC1FABC48E4ABE
10D7B7E8693AAD1B25349EC43DA3811A83F1E546C0CB1649868C14720C008F4F
FA8D3075910926C632218410359E389D874F4F719293D0B0EE58BE36458AB3CC
02002C46A704E345E7CBA12017897EACD1FB64C1F829392A430C1CB8E88CFB0C
AD53BA7F20DAE648EE34DC7CEC39CFC55A9505206C3C604F4F02C815605D0AD2
FE07CDA8A9F8F0DD0C048753FD98816588DE9C8A2C78E7C8BA614F66F38F9383
79CAB93ABE05747491570EDB80902B818F3E52B84BF6A1ACA730BA1FA90C0D7F
09B3DD6A5FE918CBF88B2CB98B7D817311B63766ADFB7099864428EA3580F26C
C4D4978813067D64E0DF70541891615BDCBF3B5FFB74AFEB695F8C92EB33721D
D3B41058551019C4E12555C4926B0116F86F88A7E9660AA8253D564A36E96024
8C4168E113B6C0C725E49331DC85507BDC697A1C20A553A349DF9D95D5D24C4B
6B2795D94BDEB015C731EDFD27F3823CA2D05633BAEFF23046DF458000AA7477
BE93D17A85E0519FB0B6C5BDEEBB9554D34547816955434DFCDD0733C148B5A0
52196AB08680F5ECC44BAEB2FC41FBAEBEBDB65521D0010402575DAFFF833C4D
59C1941D6160B8FE78D5C3354C17511541D364CA8C1F27232312DDB771243735
43A2C18439DB2227247B30A41C72B88361E10B8CDCEE93DDCDF5BDEFB5F08872
C77BA070C12B23B2C6FF837473C372E70836D4C5747C4EEB85DCCE9246271769
E060E6EB754F8E89B075418D032D7BD972EA6B859338F8D6BEC3B63C5E9999C0
6B34A79E0D131D233FD3CA93D8F5B1DFDCB271329400CAE5B90560D4FC5A1154
EECD0CDBA01C3098332FD8CE6C0A393AB1BDCB88B84A418C9D3B15FB9ED1330A
B93E9A8D466EDF09418F46892F4FAD459D4943657ADD842FF3D6D1143830B378
A3EEECB91EC67FB176F2ED906086FB7518C7167965813AC101434BE5D692FD50
2589F7B14BEE15894121E8CB7971ED4DBD5A2DF213D85A56B1CA85DEA53ED029
9C1E8516B0C02E9F97305FC7E43A31E0002A2F803A30B1202AB55D0FCB8A5F3E
321815C3C7AC714C3DC89D789252A42CB2F981BFA79544B1A2F756D81ACAE235
A58C64DB60FD25EEDB5A9E09F469071BB0F203F5D8ACB7A816012ECFD7947438
5118652EB37CB7021F80792262A4D2F2AAFBBC879A3A7321FADA299277D8D09E
8CEE8238655AC752A08A6091BF4B9D6AC543B626847B574F60E61F9C0710B5F8
3F74EAFFABC289CDE655EC5D586D483DA69DFBF9E2B6F50F1D8890FDB8C56DD0
6D24DA09F845947871FF414A3BF0C1B89EBBF3860AF123D485799661E8A45A88
8FC99EBDA38E539D9345F4B58F6B8E3E370C11DFCA06C381C6793D5574AF08AE
5A4FC89880D4A8DB59D7952F55C1F6110A42D0F70DAB4D6B7E2187A3BF218A62
F3B4198881C0D98302B116A463934A5A28E8EE8C15F8C89E5E3FA70B901CD5D2
C49144778CFFF1D5B63E099BE878F99C34FA15687F78572C5BEBFDDD80971DE3
920CC6E5D47ECED72963406AB79426A14A17B3118E50A9DDDA6C8BE52B95ECCF
029A6B18A512D30CEB0B6ADF80F97EB95E310182F66B217FD6CC9B23CD9DBB08
CE4B28C3754678266A6A1133D8151A000D95E13EEBAD4F2156298B976E43EB00
1FA13E44683DC6CCED04122D1FFF56BCCBB9A346307E3BD497D7F1E2F51B557F
EB6AA32E84F432B9B5D24ED5D673E26A25811D4BCA9D693EF8ABE780991240E0
27E9A5005DF162A28E497C231A0B0AACA773466D924AC2337BEB55ADB1106E0F
F4863C43F7B4CC4CE5008B883EE21D9BD24B48E4D1E03E7378C05B62DC04A3C3
61DAF3A67012298FFD77760AA9C0611FED9B670604C24AF36B6E54543B411485
5461C83881CDF494C2B43135E8062A9F9101ADD125A32195B8CB98C9B19235FA
FF7822685D87B84ECF255178D2D2C4B7F7857E7F5572D3BE2154C076B263342E
8A6977987E6EFB3DD2AF1E6F9CB166C25A47C770E62C69C131FF3870C42B68B1
0C4961AE98EE106D34CD0D4E15BC0A018DED92CC65DA0075E384D92FF2BFB06C
A814AD933409C99883AA5D858AD143961AB8AA828AE35FDF411CDB247C03750F
C0A519E36BDCAF2DEBB2EE0FD69336E7070E3EF345D6D1EDF0B88D08486EACAA
CC508B9D267C79A91646478075E259EFC03C3504BDBFA2B4520DD6104F783317
388D31B2DAD1BDD5B3ECD980DC8CB9A9D9491DF42A8678BEB35D372AA9F49EB5
0246E1D3C022B0C181F21093450D19267E3515B8A1080BD883DE8D9798D30A9E
DE6936EA527F5BB234A8CCF2825E654D39A6BAF9C116EACD0849C62658655B0E
080F0782EA3B1142C76B364D2D85AF83BDA04D57515EB1FD87B119E547047F43
E9CCDE1C1F8645DA03EA702EC5D6CE35E7D5460EF05B1A5136CF2C1DDEB46F73
8CD632EACDC90C78A145838224866EA5C1299D94203D107EA052190509727D83
85E5F898B7E28470245FF4482B8A2A6094E407A823BEB4FDBC9149EF33A77FFB
B7146C2E8C4A133F7EE497B6EACE17516DCADD90525F5041C4CDFA9AB34BBDD9
983E5D441DF74B89E58514FE8D505A1638BA2C25389A4A4289945B806CC14F19
8DBA7A8AE3C9738AFF44731B6DB8007749D1B605F397413DF96CBC1E7C80FE52
EE1275B05D19E6DC95D93914B713820CA0517B8C2E43E8716526220CE629452D
507C04521B474F40D8A1DC5BB14E21CA654D970958EECCF947B560471E2B661F
9D677552B91A9CF74F2A195EAEEEDA16C981DBA60EAB988A1C23C7B8940F5D25
68FCC3524F6F89EB6871C1BC5F3C7795791EC9AFABB609F395A7A9484BC96D0B
47751DFC2986440D716CFD5D2E9A57D84846762A320128723810DAD7CE08EB08
5D29AC7925CE02513B4842EB1E9D4875A753BEC3BF97265F7C2DB58B320496C4
4192E544643B9C3417305B2906D26756132ABB51B16AD09C775D6F86C4640222
DC394CB7CAB104F32FF3156173DE48D766399192B5E968035E7DE5E0350A005E
4C5E642AA0C21706A33CCB741E91304FA287688FF87FBAA13C3B3D9E96E3E096
12F99B100345D53EDC134D23DCAB6BD08ABE642223D82A657245105757BE84B5
99C63F2B0325B83BF619817A00CFE9FC5B0A0FDF982B147D2294ABCC25D34DEB
46C4AD0D21BFC3A9A11405B0873D4E91B0F787067554D464306A44A49AF8095E
431F91B8EA995AC6C549CEC434910D8AEAA207BEB7A8B227217A2572029B1D1B
86B55D62ACB72C877AA2E3437B035F7E7ED3A541B6CFD10F1A79C610ADE46912
115330743692D0DA147586A859D490BD6B1BFE492563525B99F0A8D519F3DD43
0BCC3E3E57052444394E46201B34B583A55D565EE540EB9657AC7312FAC9897F
56ED09E02AA857C6FF5F8E402EC24D46F92C99498946CAB6DED8F5DF0540063E
98DF31F529B5CCE7E07337D8C589AD71BD8F24699F277E4547CE7E8B4444F14C
80FCC7FA5791A50EDE1850046FB56C0E793DADEE301792A7EF4CE1047C153C87
C51A4B39BAD23DA4DC7FC3B4C147A3CA6B939B4B19E81AB5B11C7C817FDF26B9
5211DDA7C94F44637ED9DB8797D2DF5E6D7A8CDD807B3CE00CC05F6CA1D87A1C
83530D8C784A1FC3204748B39BBE76D32933BFB3185C3972FFB69493300C455A
EEB30CDD6E6108747FD778A0042C6E3B4244948F1B06A1B8A026B3CA477D4CC6
12D0DC8CFFB2DCBC8B1A8430F7C7563E306B853097B47852B119B42F57BA9A8D
93E92CCC167DB36D72585E112E6E8CBD8C816E92F88027568E1C088F279AFE03
1CE20930C273EA5AD065F5AFDBCE03E88F208A05B41A2507A6E6908560B2236D
329FABA01826377C35067A7C6785ECE0C669C03CB875F999FE0159797AF521C0
6B9CA7915AC36C9EE0852CFAAF230E92948EEF95C118FA39AE58F8CE7B0D7EEF
59EEF91AC758803D0E4B73F10FFD9EECC0C4A801EEFB0932FD5E0D205C19C8C8
E8A46BCDE4D72920AE03699B75B6ABFCA418241E9B027E28104D22A3702E2B9E
F6D164CB498F4A7ABD9CF59BBDB7B721D7440302D3F5788779FB6154D819C083
EC14CED56021B719D487D49C3D836D47D72E3B76081E2BB65A9799C14504DD4E
19C5D371BE546C3286EE772322BDA67D447EE7C7648F82B339C1351E66B47C85
4C59D6DF7BC4B1B15D32EE1442D960EF520B1C97FA7431055B6BB25DE7DECADD
E32B536BCD546709A5DCC6E9C1C32DC043D28239E5B6F2CCDFEB403080EAADE2
C215DFC548BAAC67797FCB1530DD6EDD1689FD3081EF38C1F9942BFC3262E057
CE26031D846064A6082D5C5ACFEE84BE1DAA388C29ED456ECDE57C81CF06575D
66FD8EEF218CEA7E07BA3FB71E41E67E4889F953706FC8A5069768FE8FB5A0FD
27E00201FFED0EB0C511389EA07B5CF1708760FD26B48D0190E9F3C691BB581A
978506DA0394EFEDB077CBBFC4AC6F6FE7A374
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D6E5DB6BB578C37E25E1B5D821BB18F3C1B381FA9B5
4CC419D954855BA899EBB815EB783204A9E3BA4FD9478C1B6B4EF1F7729CDB19
741A0F22ABA1155968A3B9C77F202F955915BF52FD45320721BFE9B05AD98322
58B161A800FDFA80E6907300DED6A5D94668AC4B5ED7D2565B25CF9E0B7240BC
C29C59A4D84770FD34E97E0E6CE2C8B6B7D5F265BEBDCA4C58DF75153E603AF1
E5D0E387B877E37700D66FDDFC026516FDA258B0E7B327813E9A8F6B24CC94A3
7ED7FE37D7D03026506C2121D098A19CBA9A2B675BEDDAB6513BFA1F239FF6EC
D48E151DBE7DB966043D6E6527DA0FBC55BD73CB60B5DA2BA595B36F064BC87C
5BCF0FDDEE7FD76D0E175AB73AC6DB83C3B9D700E8C7F303EF9E789001F75A33
6250DAA186DD0C099E06A6E0CA56AF06EBD192B0D20BCABC7A3898CB377407A7
6EC2F401A5DA32D2DB5762980EFCD8D08E4C2F22E388DB17722BFDD3677DE2C5
CBF03D29E422E4D5C50CCB2B476083D7E55E60CBD5B94F20FFB2A908AA1E450C
7E20E75C2CC659A3B936B5445A26A913FCDF20A0A31DA98BFBB545BCEDEB460A
7DE4689432A443D27472A6E6E46F329AAC882E38B8304C424757E029E43DF9CD
565B380CFC3A0A6E63F637D9628328B147761B7105197AA0700E5F9DB264D2A2
74CD739F6A9A8920C2DF579A8C1E5ABE8C6D53D8689DF05A591B10D88007CA36
9A83881AC6E32A697F4A8BD9635311108D162F9B7210012EA351D66A1126E44E
7E264E1D33846016AD0B0A7214FAF98928FA00F718CEF0E2EA461EF974D242BF
0ADACC43E95334D964597367A2AD10641BD2BE6FAA0021141BE961A239212F05
BA154584A312D0DC1C199035B90E88BF9DF7C77342796363A7B6B294CE26DBB9
179DC20AD974CFA67F94EC19C3EC32AA714E650AF284926EC68166F2AB48FA18
53639515BFF5EDE067598E1B8C1F21BA229A1410ABFA2171432A1AA586E65AAC
52D7E33840267D7D1A70288C3CBA2FFCDF1A4368603D692E88F61C3849543D3C
75088DD2EA623324F8A44CC44DA2CA4021C282B09B20BA9B4009B3DD6A5FE918
CD549097D2E55E6C7A52C3C7106FE2658CCCC0E009F885DF6DE278660742054A
8F06011355EFB83028F96D47911FFA45EFF67E93D61B764BFE0A80E83E32A15C
7160E8A73B46C38692973ECE861B6F42852BE749DAA233EC6483150450AFED37
3E1CD4481A752A05FA4427E0661BDA432B5313520C8B514C5C830124778E065A
4A5D86A086AA623C024046D8B658378EBC0B9A1993A9B3926B331A738D70E2AF
6037D73F582E76E0ABC5CC6B5B30D6DBF8AE057FFE513EC958142BDABB592A7E
2602A22220E89F4FF97FC541EB5AC3C9DF15FB99F755D62142A44E87C4A07590
0C8B65D934D5655A9117E852C6F533669D0F0C679371351A9C40E8F0970AE391
B0EC7856F4F776CBBBAEEB29CBFA5213441FE8EE05E95BF07F17EE61D9889BAC
E7B71A93E81BFEBF3521D19E00FE36BB213AD9A812D67112A89B1F152163FFE3
25F9DDC29AD71A9DE6DFCA06831C0984A5D14F12FD234BB0DA0973762E9BBD2F
A6D58DBAAE09A4231004467DC6719A620EBB2CCF52E88C6E81747AD6E248B692
9133AF2A039160B399887161E06F585C00A45E787751C5C39EAA0CE83FBBEE9E
6E5FEB8A1A1CB25F7A311FAD50765AFEBEA92D9F15B40FC7D9B48275C24B82A8
CEA8F036CDE44778999677997C786C6EB555A4407988E02C295C84E02DB5C6D4
0AFD48DCB5DC6BAA38B4981331FB4B33A2EA226366D83E2C063556251C709E17
A49D71661B96942113BCBC1BC5AE05C99ED38644F8C17A4A02D46C8CB108F79F
3BB3A344813AEC7087438CBC7784F8FC08438C372160C42196027449E44E5F9E
72E63CCD837F3E0C68C65911ECF4F9180B10D8EFD935A7AB6A788B2701B6CD4F
66874847EAE409C60495049CC9FF328A66F612EC75DFC59009F52BE3CF054B21
F7D0583999944738462682DFE078A9182C81C79CDC57325DFD55053C414B5901
1FA4D5656275312BA3F3DAC65250CC71B68BA49D32B75D3684DC6DD0D8D2D349
0CD3D27969F54D140C0DC889A9AD7749749EC9C9BD5DCE97747D6E9E20C9BF80
C387B00E006E84D211297F8C23F7C47149007F7AA682DD54BD790552C8E5D959
41D6348F34DEB8BE9B0CDFACA9FCF9128B9E6D27B62D6330E8C176FCD61F0666
853C96F53E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /Box put
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890B0BBF10075D53739F7E84CEE95B40C3DB68D5
6E9847E37B7920412068C3DE2065A77281345980956AFAD312499818890B454F
5DD8C92695818BA4DAFEBCDD4D268763515CE077A64C5F3AB384A6DFD7DD9641
FCDA0A3344B3A14F82D478B4BE7BFC2822A4D67AD3FD07B11589B93842066528
1E51D954D7E6019F6921DB9B00ED303B4B8F557EAC7A0B0340A268B0DDB25B3E
BE0982129B0D3416CA5D07ADC689CAA181270B8141F9D0F60C60F156CB305E5B
E71D9A5D5FB3216BFB66284FCABF6D74564D1288EA99D3FCF6F29C3AA690A596
02C0AD2BB29A2D457C66031E5571A1454758212EB4D053F4C28FF629FA94DBF2
9677AC4B92C4DF5C7FFDE31A8F2D6F9477896C11CBA890DD464C9231B1C350E8
E8CEE17F2E0F5D10416F7D7FBC6085E9BE09E692951EA7B93A9F49CD458476E0
A380E1D122F275093ECFD398FCA6D714187CC12A2B16318F9E1D2B0E9EC134A2
C4D2674AA68D2E7EDBCCA383
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA853
B843CABA76BDE9582090299F423519EE3AF8F83AE7F7828B314B6E36E9127419
F274E9FBF5622C5E48D7E95664D6C0C1006661038CF2C93BEF1DE34A163A2C86
693A13F4D0F052D2E183F36401F0C29862BC1B36A086524F76C7EE2C6D436A23
7009F146F1756DCADD3F70C51FDCE610E30C0F4AC538A2703423A07976ACA74C
25F4CFD6A92969E206375FB0C672E45948B0E832F2BE688EC22FEEB3E06BBC3A
272F73081A30830AE4214F2F029918FCA40BAEBED6299EDBECA01E08F27E5627
F53BC56F4AE7CE2D6273B27323AB829E2D51672A4990E3AEE84331583A99DA4E
63610AF8F10C50FE6196E3F4C1E4FC9BA6BE0ABDC81A0A7BF6A5792A97BD0A7E
7BBD31C3FDC01D734550843C8D84C6CC0B492CD1A6CCD57428F03A863E959C77
457D401028FD00FFA9BC422FD09D8B8A70446A61CB256A2FA0B59A2646D9C5FE
961894DB8B315C52008B4416AC35439E010BF90E43A05FCB2FBE8E62385E220E
588B7FE5509F1BB71150E159D01D24EE28008D4213227FE9BCAA34364B1039F6
BC142AAB19C8E9B15F0113781DF9C9B3BC145955552A901AEBA588D39D7E87F1
CAF27D315E168807021B0CD1B2CE13B611A7B5FC28DEB4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C07F1ADDACFDC3CF4D1F9037F027E63B522C41
BCC160FB1D794455CBED4C049ED67502630A8A1C2ED11A53852E7B9910D008B8
DF64C3DA1E469128BF3B45D99837E560B852F87024C48C184E2BC4358D34EBE8
48ACC9B93C575C363FAC585CA35C2C450B5929783DA0ACF374733D7447051366
BA3065066563083DE0E1494B6433BC4BD86CBFF1A9034F40380C333A5F16A4F9
9BA2C4BB3D31412356B9E978BADC3548EC4946749CDC981002C4414156DFE0D7
83460C816ED040C9568CC2EFE4A607C3EB4A6C06AD50B3CB1C886ACB3D1022F7
70E256CD75521A8C02071A25B0C96706BB7AE920C15804482D69A32FE000AF1E
D8CB928BA33D61D0F17C1E7D2A1403C4ACB7D923E66F10354BDAECB0ADC7DC3F
A7B24303B3C291B987C490B04B0CA0A969E41E3F04FA629E2B6649661FBF165F
F099E2D5173413B3995A7DB9B4C56C828F8C614AD3607A91673A3DF62988DE97
DA96C5C43CC63C14EF7C24C48C184E2BC4350D72B6956D0C2F549618A0061284
E6AF01D8B9FAEE674122BA926D2DB941B0C26F6274027559A8B3843FCFFBC8C6
E51250F22B812E47ED46E67410144A520F7F66B64A927F0A67BB50BF09591782
F8A664335F67B9DDE36DBA793EC77E5D84F6E298C4F428617BADEE752997B940
93316F759F1A0053B7E9268CF93B9763BA70C77A82B01C2B17479DFF58CA2C67
01C4D3E39979022FEFF095DA482A4E99A4A3259B2FBC52122E7974849DD398C0
44CB32F94F500BA9BFC908A2BAC4B3062E37B68DCA401224AD75DCA40F5946D9
266E07CBF681164FEAF332C19BB64203E7291357E4C4F9A6725247F3ACB29005
4C79132FBC49F5FDFCA8BE38549AE53F72B85A6F03B58AE0D30DCF02DECFD422
DAB156ABDF73CBA7DE351875F5131518D2DB628C3C99D0EBAC0F0017D917875B
D4F18169CFFB98AD6151A16BCAA3540A85AA395D5B94927C063B7A789EB1E6F3
A07B777B22BE5EA7B6D8F1664CE0DD8F43CC580213BEB59D15D30B7292FD83B6
E52EA4270D0D5D9C6112033C467CA867769AC53093BCE223CB286B1721B357D8
D51AC9DE1E9043D7770D32C6E8EF9FF13E29DC064F3C70730B6B567A9AA1CD0C
FB337558AA398E37BF984F934C66986C2EE9A510A314AD971D82FC1EE6868FE3
D060DD7B5AA766C4DF53407517CF6F42243C234413756CA68A0F125A0E7C1E17
E4E9F3C905DC814982B1A40503E899AAA09B2362DF13DE0E31E5E08B89B0E394
1460CCB0AA4CE5F70F9D19F59A963E9F90F4A84685377B43F208A3F331979D1F
51377E69B684C70E9F76F39FC77A46FBA5A77FC361C55F6D7C5ADF691D4C1638
83BB2994826A94CC906E41B4251518F5F104AE5CD4A2FDD0DDF0A49EB8F32036
94BD7EC9430C3C2F7970B696DA577C21452508DA6E9E32F903296B80F87B1797
19D633875594913678A3833636F8B33B0C66ED837176BEE6E6A8F6BF1EF66105
F277E5B6745FF4A5CB0EE90FA42E1529406562EFCA1E621ED2A65D66DFDB2098
887BC845E63B067BC2A4FFE2D0208EDA333AA5F4CAB0ABD7E1CB78637494E68E
34391E2542903355658BD278E67696111019DB87C73771A6CED0715EFF43475A
0FD680DDA2CFAB8D802B28E97E3B1E097CB13153378D85500BB10C661AF17841
FDBD5D61718DE52EB4F11723D1D646B9E9110E87700E6D1522A71B0D0018368E
79712A5AB20318C6045977231D86C8BEB851B96CD7BF88F9A172949DC2969A27
784051AB9E62CBD50ABE89F5DA433EA9D4D67FD60C7A551828813067EED8B44F
8F9316E6E062F1DF68BCC50EAB2B6C8E7EC2B798E2E8BBB1AD5D775F54B78C79
4B35A41FCAB99493DBECF6620AF09020F0544340C3B4C147A3CA6B939B4B19E8
1AB5B2D968F0729A5A1D1EB41ABB67B9BA1735E4E0555B0ACE192B694582DBC0
21CFE1217CF272748BB9CD72E80B52E247D95BAD5D9ACED37A7E9CDA86B3581F
EA2C336C627BABC4737FC72F8F4F6BB7D73551EE33D7036243002C75ABD706FF
6272EC8B127F512CD94B4F514F2DE812CF0A27F44E3AA88DE45F8F70D60AEE94
B39756DD3301F4C4EB5F7A46D1EF564F9D4A077B55856BE8070C46525A7DDD5F
F93B34767BA45CBA4B18ABA32A3E4DC1E0F3236A1106CD1CF46CF2748A3D67A4
57945BE9186686583FA8B733579DE8AAE808C8916EB45BAA486A85DBC2F45566
226D9EA08B48360A2C2119A60384F37D44F4096D8AE632FB2EBC0DDDFE6490E3
D854243B2D272CF5C16F0AAD1815A417E0437145718C421391BC4E0BDBECE4A7
FC58DCC2F00B5F262263EE95A66B7B588B417B20D3AE846ECF2693940F268C17
45E0FB4E607854D32C6D52E83F24A890B95D6C169E9E7AB8A1ACCA1756D2D72F
0D4A81042FCDF505FFC4FB38AECDEA912516F3828A9480D6179690438CD92FF2
BFB06CA814AD933409C99883AA5D858ADC659C1BA0E3A080CB1E4463CB90DC8A
841CD8A67977D90CEA876880C4118254A19147D1389963C41CFBAC11A51ED614
E0C7FBC7335681207464ABF8C4ED5B859592A3376F58135BCFA5DE0696385BB0
FFB6345B71555B7BADE49A8ACA8D973CC3DF7BED1F3B5D595DFEB596AF649E3C
C9D18701E91F5A47FF6E933E21F0FB9FFB3221EA47B964FDCF13CCAB1353A21A
0CE2631E8E588A4AFA85AB3502A3832F0FA6E4A9E942F3C6B70266EDA218C6D2
606A4B7C2D112FB1E3B5437964E2431F7B614CD62017182AB7C7BCF37B79B1F6
5339265C3BDC27CD99AC7D748CFD1DC2AE04CD5590CD3E0042091DA9CC585AF0
DB968876792926E857CED60024172E360E4B169DA93627BF5BE4A89B8816D5ED
80C3BB5B5A45B52A16879526DFA881D0B5EC317437135C50B27CEFD1F5022BE5
B15E1D75D8A3950397E5EF6999E30CE159C111A6468D2DAB04B3ACAC61986BC3
AF3401CE4FAA2ABE187EEF62A1F70DE1CA0418BA7012133257153F687ADDBEBE
CDCE5D5144613798CBF687FC96944DB5C206999107D67FF7C8989C512DA066D6
D6B8CBC71F9DA6B570B4451375B9EAEDEA1115846E0DE7A3B686AAD19F4E39A7
3DC2E00310DB85AF8D9080EC153CFC0AF60E785B8B723C16F77F4F3568097B60
E1B564F8EBFCC4E3F3D8112A7E8FF270331D2FB475491A51A87210248F9338A5
8F8A83C0D8481C4B7FB4BD0946A0F62F2FA95D10FAA84DFFE90A240EF474ACBB
9E6B044896D3DC2832BF258013E878EE3C5CC43D6AB4C81C1936C442CEDD2F6C
DB3575B617296CDD6A514F2DBED85F14FEF3F00A0A3C2A83A328B249EBF2C31A
EA9D19FABD50B54736FE13D6FFE686B1CFD0EE0B6B7F873F7E4A94CDC4F13B8E
F85867862B8FFA7167A39E37833AFDB4BBAAB388CB87F0B73A502C34012F783B
EE1DD3D04EB580E6D4BE162E2D45F7EF6BBEDD9A5A3A74BE4EB0759ADDD89E44
9CD6AAC616784D91B39AD85200341B4B33127E9AD95910F7642FF192B1241525
D1262B52C70DE1120705CA2197DCEE72A404199E546857DBBB84B62F0E5DDFBA
B3258AABC24AE22C90AA37B1DA67BC83A83F169F626859F00E85979BE5B24381
9BC3EAE9E2425C10CA412982FC6A2B7ED8669633E05B89ABD3332811E39DB955
6E7C9C2A8E6DD1D0D5A8590FA66FE389609A47A92464C8B4B45DFF97719A22BF
F5D31C9C6C0FF56F9B3DF1963735BB55978429DEC75D2A0E8B21B62BEF5EB66D
79C82CEBC2C519EFAAB524A94577EF320491A3FA8CB2D730293FE9ADFC8A933B
E0BC10053DFECF68261DC400897B7D28327E144D9CB0089C91D6A134411D948A
A2F90ED6A01B7306C993D991D70B5EAAC7A639213EC0F82A1D7750F3F799A585
5AA9D1DC181EE715CB577C4DFC25482A27A090A0715E76B238A94A5329C67932
4059B942FBA2C6D3066808AAA990E81BE87FEA27BCD1382A83DC20215D1BA29E
4200DD53397B02197B6FA86ABDCF97ACC1B898DC7DCA38485DDEBAF95388BB7F
6588A5E347A760B51AD502DFED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A
643454F84888CA17948C9FB31CF86E555B4815AA6C81B114399CA1169BDC7F10
4FEF092A2CC807FFFFC7383FDAC67933D28585B6D59163EDAE458E91E7EA641E
A38F9F9AC61A41F2B4CCCA221C3A72AB7584D24400671CD39F2175378C945F31
C26697A7ED159B5292769952925EC981049396532635B98C5018A15684F9BCC7
9AD6DB7694B1DBA4107593EDBBEFF3B140B7CF51BD51B0990458B6C31767179A
1B63E40EAE3829BF4CE47841CC9958B3379E0C407E5604911B96C587E65FD005
8E0576018C746EBA88A44B23A3F56EBCD82E0702C4A95FEE93D8A53178218FF7
4CCFA54911ACD0FF16FEF122729B6E985FA02F7CCBD6BCE95597FC3CE99538FB
17A8238471AD59C3BD9BC4CEA7AFF4075A15327318F6A5962CB9AE8BA6D3F045
E64B4E57F282A1DE2049B163A4288A69ED6EDE22A89902434ACE821D263606A3
74B64A01E25C9C7B71D745FE9F7C891290A2643009F7C21A10C45E2BD3C3439F
E1A8058C20F4C3ECD7CC083D70252227836371FF8387DFECCCE19FA7B3BA9FA1
400F1A17B257DE3F0661DD7CD280C58A33C57BF883777AD1B0FFD5C8C14C34C3
638979F4590D49978B1325CC654E70D7C81F03A2AD9E74B12C90F0BE89FEB4B8
4CC0A3F6BE1B968E6F1750A2379DB3758BF397810D1370567A791629B4F9CDCA
D4A6DC453244EC5932E79727ACF464295E75CFC635036CF27FFBA1DDC816801A
DBE116E0E90E6199B6C6B3594E3B700621EFF790C6D0A2E6E82E6840E51B38C4
579FB95337423C15A8486882520611165AAF3711B005AD3DFBE56FD60AB643DE
608AA42A1678786D34C701AA0836863119C3FBAEDC3D0A32CFC097B05F9D90CC
4B614AE7F58F3BF9C630BC15F2BB7C9625F4B09ADB0BCD6162C0BA1320D30AAD
45EE4BDB168DBA8E27EB9DA43541D7D09EC9520161FE013B8ABE63165ABA1554
5146ED2FCB21B0345A1CA0E4BC2591A87D0CE5AEDA30DA4F11EEEA1031376182
EF54B78FA2E8AA6A9433272C23534CF0E8DE3B2E3D413751D6316C41F695807F
3BC8A261F1C47C4E740A606A97D5EE4608A524C4F1A641735601161669B687EB
8F76B9ABADF9D24B2EB524C6AABD7EFB03CF1B8F6668C8B23694C916BF9A6BDA
A24DE24D6CD65831B8E50C195D028F2DD9BA757902C2B35C13487F0BED5FDC37
8F9CA52C1643CEAD5F98337B73527537B8FA58F86F01329F1C4F14040FAC9792
851F1CC40481634C777018C2E5F8ECF61328625A631D4636B2687B40395531AE
88840CAA74199E48E9FFCAA2C6A2BD03A17B76FAAE9CB0493E6294A9E3D78E70
3FF2732D0D1797B70A52A1BE26E3051FE2211ED58221883665C31B5361DD832C
513510C5F90752F44DBF4732ED588181E253CB5FA4D2D486752659C90B82B568
8390041EA0EF9C658D9B0296884BA9BB4FD86BB51FA79082FAC33DB46457E63C
B27220DC0FC981DCCB655DD37D202BB69739202BD31EDAA120CE54ED0DE7EAAF
E571F63C632FF2ED52027089972BEB0644E52D859C3B30687DD639D9CC828F52
311A94A494127574D949072F8CB3E0D1EC6BD197D2FBC30A1D6064E2957B0015
30E1C9BAD04D71E18BF921FC713F42BFE4E2CF74BD96A2FF3DD16FCBF266295B
E92A624BCE6EE9EEF09589FEAD41473F014BC32FD730F22927CBA09B8CD21673
52E6BA2E97A446AC570345D926A1CDB30225A7787E764D44F5A47515D1F43EFF
C35BA38B0EF54AEE2E8E33ACE1F665ED0B291CA4BD4256B7E56091E388284DBD
11F5425FEB06059F260A19A1BBE5F56FC10A1C2CA34EFF3A7D45FF720A189B65
F6E5571E7997ABF7A447BDF55731E6B46682B08FD56974529CD78CADC41D9815
A364DD46D9E3EFF4D230CA85BA749C7CB1687ADFFB0B83A7838452A6F1847C49
E4C62B2ECAE693F327D25D98C9AD193F94381CC275C922A75086F481ED8E8C84
C4A3F13C307E89F7DDEA2E94004FE6F307228D7AB1644DC45208EF1DC1009C1E
9D28B71A246B043CE44E65F35AA0B7F83DBD4E4A9038636256EABAF8BAFA31DA
0FF7F18D64B70F307C0F59500B5F331E1E3EB4135A0D6069D382DD1260C67D7A
9BFC8533FDC27952B08A5ADA04CA83CE28B9DB6DEAC8754AE29EAE5AC87616C0
C26855C5295989A216475D75EEB838186C788942057588B3DBCD74E296575F5B
893924EFA75FC55E740C78D4A1C58DF87039888CF7A26CE3D3B5274739044883
A4CC6C9D8520C05704D578C1E449853FA9B6D42C49637CDFE9D0D56A900E99B0
CC5EA988A2944C7FC65D53B5A106F63E9DA959F89DF7E89BEA4ED9866C07EA2D
27A88E8BFF0D46BC42D29A1CA05072343C48231F676FAFE00A584F6BCC0EB3A2
BDF5FB5ED657B3AA5C942ED0C061CC7E03513CABBF0D7B9262A007D77BFB4DE9
48835029FD78E23E35AC4FA97D94540D7022178AE1D4463F84630D51AF81054D
FA45DBD1AA1493A3CB561652DBCBCF97785515A78B7A5705955CD2AB87A277B2
5C469E9536586CD367FA092ECC7582B78039D2C3956923C9DD71A04C7A9CF032
A8B3200EC9674DDAA3FE01DD30678A37C6005C87CDC11866614DFF696A03E46B
C6EC917F5F9D13D9521CEA49EA484FEA007B390B4306B56DB0021606D2B39110
AE5BCA2144A5FC51887E252E8CA463340490CA6634BFA6F5B740C623765FA72E
4176D1B9FE2AC37C8C0EC10FB99F32BE9E346F81951039E754F9244B8534DB44
8ECCC2B849CB3BFCA22C80CE90879E1206F6D82500B4E4476AE7277F81B85DBD
0D8BB48B401A0860DA7D9A1A42782A51E5A8C928B184846B76AB69AC3CF11F51
3BEF0C35FD1780802187974DB30B750618080FAEAA3627F5D26A5C91ED65D52C
AE3B0A5D4BA4A68C8F9467EAD47506D2F6B5275265294D4E5EFA64C349484222
A9FCE7DCC8B58F6404F9E74E200C9DC2E2179D79AED00A2DFDA9B22773F34FFD
9BACC17907788ECFD84AC599CF9C38E918B17E14F8751668A0F77A40E2302CA4
D386A4149D5533482274E27352553F6D4F3C9CE40724AE4F4714B8933B54AC4C
09349D589828D6CEDCBECA38F7FAE8C1363A6CBD8AF8B8B9D031E338A0A9D593
462CF91C1DC3D228BCF7E99F93FAC2D897E3153548794D9232AA20C29B6CF38F
C8562EEC0C40157D77C71A385C3A77DE10828C2AAA8D65134C483E0F755080E6
A912C1995C4F548767BEE356803EA7F14D69609118F846A805E5115D72F39A27
500D6DC4DC8DE635C84C02E1F9C93AE270A5448B0F38289955FF8AF6BB9EA4A0
6CC6D3429CB2E286B738BE2719E23968D45AF14C2ADDE87C26088D33E097B393
724A08324ED1CE7BDF96B29523A3E2876BEF80C096036DD4C95B6B6EF4101742
3D1F7A62C216ABFEF928F1E2BCE051279788C2BE631E93B2E2990ECE96EF6D71
2B4FD78087539392EA31DEFF4FD29BC0E0DF1429FDA949FE1F364C2F744079F1
587889BBE10C6B0BF0A640F2DAAC77D9AE654BD6E4359E6D7DA480959E4F8348
015D1F8D9591F91F6A2A2288986B755E73DF40B4E922D522E2CAF63FA0A8D22A
F65198A15FFE7179D2096AE48F387E2523C39EDAF5CD7F0876732AEC53509E0D
B0167996518A834F071428116CB725C2A49BBEB1B913570A51B2F96D302EF891
3C6BB608353E62546B3B90B798AE5ADF419E9DDAE4CB1B85339618493EADFE1A
499E88284D2FB544B7BDB637868345AD845F59F2054FAD9A3878CFF50032C921
5ABB00DB89500506308BD62BA71A8CC282E6E4F865AC8FDF8DF56A863815F2AF
DD734A558594466D19327F4BB5A9B8E0C472981CD2BCF947E22EA79D2C8F5786
8E2AAB61A3C1D0E9D2BAFED9DBE2E0970EF2443DBC653EAA60868049AFD1148D
3ECAADBFCF366596F5E3DC4BEC30136B8BBA284ADAD5B6FC0229068FC2081EF9
3FFD0E0C654D9E97727C9EF147F772C8099CDDB5F3D586B9B5A9D9CD9D7AC970
920D44AA65B6998158F0137612BC277D7908756A336A6D151B2BA61BF7FF7AA0
BBC9A98DE40C3424FF349C1228FF0E85979BE5B243819BC3EAE9E2425C10CA41
2981C9933B602EA2729AE218F44B4D9BCCC7507B2C2269B887251E5CE6827A0E
CC31B8BDD49938EB436641D998047E17596EB9150A402C5C350AC7EEAB82D64F
9A5EB6A1BB5A1E18BF26D15411CD48CC6C3D7E0E41EAF61191F3A061264CFBA0
6065AB22476B5017C53D18DADCD8377B661D12BBB5C8F3CE43DCDA76D261E3F7
734DE2DB7D9A3712293DF5665A9EB50B630301A703DD66B7CE29E647D596C583
3C98E7E802CC91B546F554A4B9785B4E057BCC579D61A4C1AC42B75BFC767E67
A80274BB3A5023D9EEE1FAA7111E86BC855FB26CF97A4F88F588A061153A631D
123B037B74F7F7116D10592A3E7CD722504F0ADD190335B8794C3100FD08A3A0
E9BCA5FDFB821CEDEFB4941ACB6488C1A608FA21A2EDC0D3DCF9E9A7F8F5B597
26D99E2108E0FFB4CB01CF7EB213E1857D600CFD6AF6115FFBCADCEF0815E4F0
76F03E728F1101B3E3676963F37DFCC943CF236B074DBCCA06BC8F0E07E51539
8CF620966AE73D22C7312708911CCBA94B44583D810F0E024464F875A3FA9F16
84F095F8B4E2A1B72D025086C7C485152D775C77F7F595A5D1885334F061B84C
7B4627AA7EA898E6889AE14D14267FC316FDAA407DACEACF1625BDF902DBC406
2BE896D00A355A1EDDA556B0EE1FCD23F8607242B03324D9BF6FE01F558AE694
EE31C87818324ACC8BE54953A284C888D0AA472E52A98321871A09D6ECAED6F3
418A66D35D6940A3FB57221739C239C496145E7DD84FDA4F11EEEA1031376181
330128723810DAD7CE08EB085D29AC7925CE02513B4F180CE1D2A29F0A158385
2AA0CAE4C5F3035A6AEE4391A7710C67F95A61987000720CC9DCA77D93EBC04B
795D8FDDC9BE917105F07880B030AD1E9BFF5F40ECD773CF5756EF5523D6EE9B
C66EF49BA3F2E9C583DA5729C57C12058F1106F98799495DBB3A05C04BD64905
3FD293830433244E40CE23799373B747725F22F2E37F337A7BA7B74AD99BEB43
0557CC188BD44FE265A2DC2A176462F296602BAAF0DE807DA148D9F2B7BCC711
96ECBFE6077146EFAE612BCCE43458A6735454808004710523E45433100F5344
5D7F23FA6CC431D0EF8DA2C258BB069706DC5065304D28E009E5ECBF762601A2
664FC434D8545C9C4BD61D0B5A2CE1E2C033D0CBB3BF6270622EEEE0025DC16B
820BBAF867A29A8186E7CF623A14EF467C870B133C1F495FC0800761A6A97459
7A6591BB772B7C285474D06F43BC8471D2E993F5295713F3B9EB652878D2D7E8
F77FFE1A936796E59409AB7BC232EAB93115FE51069FFC256471F1662AB77923
0049079D9DDB03E622B866509A7892E69D23E9FD278CD5F26788A7E5D8476DE8
E215646A7F2C19136157C6D83B33313266F1BA8B9E065A0E6456B057ED2C599B
423AC51B24F2313F3398B4923810EBA16334C742685421CE3D57B9784DE4B5CA
81DCBE0163ADF47F997C4288AA1C8CDA5E3C6F89AD4B0309808CA49E68D17486
39DAD902F9BFE6EE602DCBF09A3BCBD6B4012231D7AF3FB95A99A9211EFF3438
2498160E4B56B09C3DBEE0C0104B1292A1F83517BC28709D3864CA394F236474
B060E48CCFD9E1AC3B5D746CFE6854A43ABF52BD4E753610A7C7B988B0CFA983
FCAD7B53FCC345BC4D21C7EADB5A2F0E03D0E12D5CB6914BE4F4D111C5CA3DD0
E7E33DD8C872A32D175EC93CF8721B7ACDE3255CA1287F65531EBDA3904CE70A
A9F7A74DABE0F4609576ED39F49DA98E8461FC7F9A68707004D825BBBF84FD99
94072AE13F17C181EFCD9C2EBA72B51F0DB554C056A1DDD2E42C93E8650097C6
F2596885420B2B38DCACB524BE8EA64B552034256EEFE521828F2729A2542C2F
3E67AB8CB96623B07315772361AA6CB3E7841A85F608A6760204559AC0A58BB2
B0827DBB3DD736D1B2CDCF61FFF6C6F9FE865FFA6B64A7EF9D4A06D0DAB15EAC
74E87BB7E48ECE41DEEFEDFB47D236F1DF488EA9100D499A87C0AD1626BA850A
360CE3634B20601321CA03AB14E973ECF6FD1E999CC7C00A69D770C6CA0EB548
FA1E4795007691A8DD34A798B6E803A0A99CABA87DA35B532BCA16C510BE864D
B5A5C06451FCFDED1ADD3E2F982EBE208BA9E14451BF3003CFC42B01FB3B663F
3C478A583A1A7D9BE69BAD2DE0218C4D4CD7BEBA74BED51AFB08EB16469390F9
3E52D3214F031777E35175370D71931B1B43BA4B41CDFB1C7950BDFDEFA7F809
8A0F0581B16C51AC3CCB3B6DE8A84B2A36FA46AA5CBD3DD8C1CD5E3E5B2E3195
AF58DEE4E45304C3A59D0BE4AA66C14DCED3C6423C5CF350D344EDBC5404E536
6F675032DB812A9694387BC6A7A7663CF5D7E61A400BDCD15EADBEDE3875523C
DFFF0F3F6AC3817A5078A751676B5DDCEEF6B61E61A0008201F0A2E1B98BE966
84BFB78BD03562DD6EE838D77DDBFB321F0DF576E078BD26167522FD3089298A
2618F22160C45B7678378A13AB1A56F8A2352A7754493B909CD108390973598A
B20A52DABAF7035C85986DE59AD301B93AACFADC85848F038485EE701DFE1508
6D6492464AAAB6FE7647D5C00E90C1BB3D58C1A115B39B76EF792F7CCB4B8C48
F8647BE25173D9C0204EE6BB408D004F25CA8ED03EEAA884D64921DCE789C2EC
332B85145112D36848960AFAE395E68FC891329882A2639575674B2A47C068A1
1E3231F975E9E936BBC50D28B532424A8E3895BF726426CC72060175B77FAC17
7952F4DB65684D6CD4AE246EA88B6567C07522C69B5EB384757CDC3F750A55BB
BAC8AAEE632092CF95DD59F00B3AF57D9EAE465FBEF66FE82623DBED8135D5D6
D7847692B21D5348E3F6FBFAF7313B1FA589C0DD6CAEBAAC78F29CA500BCCEFB
C89C7C7BF1CBD87891D43887F9664949E55CC2A2BB87E8E9DB44DB791D1C46AF
E2BD86EC116F2067AD2F9B62E5EDD6FFDABAF6A0834A8A33A892D6F4EEEE809B
CD936FF4B76DDB821EFFF0BF941EC515949193E2CEAC47428B1835A1E5461823
6476FE268CC640FDB69362996B1553EBD742F260009449B628493CE4DCF0E575
4C8509A44A407DD915AB7188FFBCE3ADB3DD06AAAA7942D7ECAF59DDCCB44754
D45D2DAB9983ABE928B61E667F4E8AB8DB64EF08CB2EAAFED53C1E1B09D3DDDD
4A4A3EA5B0A1FA84E55ECA7617A41124595F164EB698D2308DB214A96AFBA73D
3EC6EF8C6493DB301B7DE622317120AE39713EEC28B51D1A2970F7C8A6449020
8246E7CA384F311F23DC5A7F7DB374E0E3D066CCB82B5C7A2BF30C27280DB9C5
6C4F649456956B78527533785284BF19FC952FF8D47D723DCAE7E031BC6CAA60
C490801421B2FCB9A96154DD7D01B83978699B881FF83BADA315EA207D856678
25E5DDCBCE0E191A7607BE4142FFF9B4879A99BCAF708E326D070B8A72B4B3BE
25BB2EA932F03D13289DB062EFE9E62D5A3DEC03D1F5A40336E69F61EF0A9659
847F8BDCD4238F576E09B591DD0F699DC91700EBAF3DE4F3A232CBE21ADC4189
E1493FC65F4D6D92C536995B673E238559E26F468737E17BAD7870A92779ADE5
03EFBE1DA2772892E691EE8576E76EF9AA4EFC3E579C96D321F56326AFECF8E9
7444753F21C0C6E275D191CA3722D2E3950782EB4F63CD5071D346C026A4CDE6
59C1E6CDCFCB3FD9ABF5D7BEBEA6BEA39EE90B8B78E8F130575910EC324FD2DF
976CFC21F0292569229F1C57754A6722EA3A4ECBD084FC5DF1B26838D8B08863
99EEC281EEF14315CF0F9F714229942165A6E8E7188F5D7C1D09FC3085B4B346
8B6FCE2EFBA1C6F5C0EBC37FCD8FD94E2F8F2607FEE1B55382A62B35FA16C626
5F035D47C251858AC5E400BC65AA6245C569155369440F398E995CD0527C4C7C
F4312021367191542E945D99BBE733DB616CEAC8A30C01B3F334563409EF49D7
C19A1D416A69EC3497D2D84B19F68EBF7125FB02920466ACE5B506FA04FC210E
9E3DD63F00738AFFF0F2903EFF7835AEA7B8744351564FD4E82BFB94A1F6C35E
1C0A7E87DF97448823A4D524A0D895539C05B4FFB0432DF191F73C50E0EB7A4A
5B00AB550C451413A237842D91C888C209070F70D8D75D001C7B4D02B951D2AC
0835AD03EEC7EB44062ADA05D662F7C17BCB9130CF7D71980C9059C219B3FC8C
C688F21F4F14EBBEE9ED27DB30878A978AB4880063D4FB90366A4CD61AC6757F
67D7CFCA851396A4089DE2489871AB157F0467ADC64D600AD4CB66D8C64CB48A
A16770B47D01CEA50E0D6555854323FE00320EE9312134F16F145D933BD42655
9E2E0419506D9E406F260E2D29680C0EF7184211C879D1CFA2AD398856498188
EE69A44B23DBC56774425595BC5477D01B514C17ABB4C3DF763DCB95B59AC509
50FE544F7C3F2BAD81C23186A476CD2F5485DDE4B9D40F638A3A95DE5DDD14AD
BE70109F408466080E03ADD27601ECC2DFEB5A9335A6FACEBD140A2C0B8421B2
F57E7C59C915927A455F2EE0482A28C979314D208363013D8E09405D069A5E6B
CE653FBA5DEC4325D3CD448697ED68B3D96224B86821217A986DDA69E0B4BFBE
38C79866BCD14C2C92449525BD879F68482C86E8BAD5B6494BEDC9B9C7B6A0D6
E6D116146E8F86478119629A4FF3EBFE0443F0FA19ABC04AB7DB52E0F7978EEF
25619EAB1340719657BD58BC53D145E742B8912DE0F2AD7CE0FEE3CAD755AC23
964FB3A0FE97C122FB2D729B603B6CCEC05220CD184DF3A8F645825C9F5EE582
2F1E5CF85A18C47CC16DA17EB0E6F223CEA5C7C89F33A18DD4178062E8D1B5FF
84783F3F85772FDDF948445176007236EF014B547DB1C647753E6CED53E3678A
D6393A3F94CF0C7669ED9E365EDC2D5A99F18C212AB08277065465257FAC9F7E
E6EA74F7C07916C7B7569E6768F7D538637FEE65804AD9F47FD5D09FE551F142
955E184BFD10251E69BA5F423D89991BAE6CAE8EA99AB61DAA30D2E29FF7AF32
CC38F4F4E6966227C54BAF334917A420440D7F364C4030648BC39783FD7AE189
510DB574B3CF9239871F61F40EBB75EE3024F37818C68FC464E73D71B45669B6
CAB61314565222A1493030E61D657AECDF41CF66C86D11E1B064A2B59B90EA97
2CB8CA3E598ACA574DA6120EEB299C2761995007D2B275FBE9E9942B797A63DF
2BD3F3C6CBB52E5D75AB74E830939CEF9EFE423AF50648FFE450E1CD2F0FE4EF
D68797E34E14CAE61C91582D55A655089910B4B7C4FFBEE8D95937061EBE1B95
C6E76D4C38D855CC53AB9F5668272B4E4BCCF9E3B7A397F739879F1507A60011
13B11FCC641D676CD127CBA3B8DC37E7C7C0CA4DB5C3993FE8C1C4A903270659
E6D65E47B494565EC8255433C2F1C95528EB4E2FC012DC25DE20BA1509641276
A7D844B80249481CE38557F0914457D9FDA066A17F3ACB2DC5B156DC85AEA944
41A9ED73949C8EDA17379526106A305B51B48416197391A8B977302FFB9CE1AA
C9DFC79FD1C78CB30A2F939E9170E3AE45EE4BDB168DBA8E27EB9DA43541D7D0
9EC95204F0D9626EF9E750C7790D7A3ABBB15A147F504B188414818E28291F60
394C911E30A29AFA3052DFAC06AE4089E7B262BE062ED1027C7D902A23E18DC9
412FC4A75201152A7F9F8206F24A189E57A0B5C178B7326860AF2A3345754C5A
856537C06F75BAB024B682FADA1E3A01E31F01EEF9EB42A6F3428012077754BA
3854A60A3676CE5D4A4C1BD28D88BC029D03BCEC52B4CA60F44FD1B87D55E05D
D967E8195FC8239B75243B40F957BD55091B92BD080CB73FAF83DEC48FE616D0
820ED6185E535DB5B40A5B274F64AB620EE152ADFFF6FB35CB22667E746FCA5C
877226289F5DB72C872D87E0D06284B88FCBEB0923B97FD95CDAB0611B324883
6DD9E54650EE2D2F3EB92489557278863DBAACFDE460906281D5BA5ACCD188ED
B297B302DFB32DB77E1DA2E2F92EB1890FE6BB060A0F1F945B0DF68561D186CC
6A21B8587AB3F947818628AF05123E7A289614BD5085D49ECD0464B494CD1AB5
64A93ACECF2271A19E4D51F34A07B29F01909B7B03761FF2070CE114B21E74A2
16ECAAB6DAE2D8907671248569054F401B54E256891ABBAB7980B1B1B4711FB2
6D09C83B0872B4468B120CCE1C66F5489890731D895BC4215406A87742D82F09
C3403D4DFC0807C44A0E199232C2800D15C790D91DDD04E44AD3FD17A2C6A568
54206D95098E2356FDA3F4A99F6455C1680435B965ACFF8567327FCE6E1A0769
8BE52B95ECCF029A6B18A512D30CEB0B6ADF80F8485D5F320357DB771BD7A674
D75FB486A911840172E024D6A88E851D672F598789D1EE0B99F1913269816340
2CA08E4A12569BB09A57D05DE428708C446C51F462BFC29F751A0D375757D95A
E364394FC25E6E0D02C68402642882E6421B44C297B1935A3A5DE94E8681FC68
42864A9EE1570BA2AB068CCE168552299361D62A2BC2C0D8E9586FE4449C3D23
9D0822F16C4018E6B622443A1BE2BA5E332A80CA5C31C59381BBA33B75067578
6A99B89AECAC1F6F7C9417F1CD89DDDB2D5CA8BE744B66F2914228EFBC3A72AD
A80F21B7A8BBAB1D4675D2510F27032E5045086283F8942837CA994B05174A7E
B10E23848259CB05BC0586B4B91100B29BD22F26D11674C1813C234DCF62E1DA
D97B91661E126FDBABA78FC1DF2E6FF27F48AFAE603888E74770C07DF34EAFE3
6D3104DADE5D30F71EFBA7D897D7E9C788459B39B30321C6ECAE276B63BD8A36
10973983297A8BA83B0BAF12EF2385A7F49B1E3136FD53926BD79B95B45483E7
C3EA372CB4B05FAB87087477E04D6009F314570BD06FCD655827CC511B0EE9FC
A0661E1008B05E8F31B235ACA40C12BDD72980787CCBFEB8863C12856A1AA45C
4CD84FE0E96BC0FF6BE1358FCF85E900EE6B0388368937076465A87EBC1E3D56
B3A752C18F8CF3B41AFFB66DB183109EAA0BEA3074AD5A6F8B1278CB5FBB6121
8034C721F5EF704DABF60091C433FB8781A32BEE7006163F27C153000E975E75
13D0156D2B636A90905DD3ACA41690216DF0AE3DDCA1D950E0F72B138F2868FF
AD1BA378B23B9336F12F73A22316553E618237C6F2DB6691434BCA2B4E559C58
D01E8E6D964F5DFBE5E17BD5C1FEFF382FA7B9B0B46073D4F6665C658E21C8B1
5FECBDA4BB89EDFAE2D6A52C31C01B3AD72DD126C3C86B1BB2D743E29506A6B2
A612239DF389F768B853F6885F2E1394A596001FAC3C14C4AE3B287732A1A6F7
B7BECB0339036F3C3B3A2FB108872E8860AB6F6403EED0090BD9A658969B3BA9
95F1D6868BFE9F953BF53A0330F57792DAF2D43D99E9EB6392846DA0B01BEB92
4B4DC01C12DF0BB686439960169627640B4ABA46A9C63BF66BBF7432E4876FB3
C6856091CEF0000AC12460C12CAEBA28D197E739C1A1EC70760EBFCCF49C7D65
C9D9CD9B3B3415981AF9A4CC1FEFD13FD4BAF26C1556CA2240BF3A0773D0F7BD
D47F29D25A92DBA2AF88984C142A30C93A553C55AA3402337C6C9B077A033B01
F3B878BEDA8CE5F9DE1E3B8B9659D7809E6D1E9A08259CC88564C7A10D00CFC5
CF8008EFBE21C38F9927527A4AAC3ACD7415FFDD939E001AAF11F61EE5D6A430
3ED46CEB3479DA81330EBB47AFB14105E20E1132918CD7C11069372113A491FA
7CA6FFB24BD76E7DFA3CDAF65FA01E47A50081F522BD9618E23C7FD95CDB02DC
661ACA0D9FA5DA0B3FDE0E2210AE5ADE0322DDBA57C4B946D6F167A57E125324
5293EDC8320DDD37D9C6D844D85BB710E508ABD79D24F75057C2798537EC841A
AD80176CDACA3BC49CAB0B83666DF396C64D8953B4F3B0FA8AD33C0598C71A0F
B16703FDFBEB8BA8A8D7E0423553EB24AD6BF4739C52C6F6AC469D1C54EEC2D1
2FBF6F0FF47380478B53FA2792966806C49C1636A77020753AE9AA57C1CCA786
6F63E4A5EE9C4874830B1FAF45629C5DCDA834092F51366C70EB4449369E2113
75B1DCB60BD44DB13FC7623589A5DA54845BC5F4C4C487917187C1967BF3983F
CE91203F9D1CF666B3F4FD6493CA2A307B3D99A7E2A0E8BC3DC5FAA1C89ED4BA
C0C5A0DDEF52F121996E2483E9C4F22EDD92AEA0D93AE0BD0B4DC0DEDDD3B922
E0887C466779C8D08472D73AE198962F216A97E1BB46218720C44A3CF21D596E
B9150A402C5C350AC7EEAB82D64F9A5EB6A6A4DBB31DBC76CF03390D1DA67868
CE808FC27E21449D29B188D157388E7C54C8C90CEEE5A3E69465E58CF738B96C
1D53BDFCD4A1FEF82C14CB57CEB27382EDC9D929A484030B5371C2FA2214F61F
7C124EB9A5AAFB7FB949E4A74A66E5F8C165CD0D254DFB8F56C192F0F96AB796
844B8E10D3A5157E4115CE3B6A3BB452417F1D87BCF3699262C795AF54996144
F5F186121F7B3854FE184DA781E4F2E653010BF94890633FEC0D13586AD5E371
AF1142497B24E484023D78E9DB5A2446FF209D4729BC929ED5DBD49203B02F84
0FB06091C8BA03B62CF71D52FB4ECE3DD54CA098321FE35A05FF4CDF11A2EF3F
F5EC6E4C71C880D36EC0611DB7DFD41217DF50CFB85851360291B34CF4A623C6
3A895FE66E14641959655F235BD056D154C45F0E3BD78A7D4D948933F8852459
2F028366D8473FF0A617DF7E6022E9D50B282B1284DD9EA66137C29731D8C127
71C6D0E14A141A52D9465223B3ED9E26A5D9B428B797C9234AAAE7D3B6E39058
15731051460362D65388801DDA565BE73013DD56D944D97798564787AE690612
38BBAD22C404896C6490EAFC75CBF6CADA6A6B7A9F17181A551912A89D32739D
F1D3BF7CD7DF18EBF95A162951EC633967352C75105A1222751EDFBB3E8B7293
223E4A4BDCAD32202C7F74C30A4646D8726DD73FFCC29E840E63F394C4C8430B
BD1F3153BB1E66022BCB537FA3A6C25EF78B6F2C46B77A7D53B3279DA33F642F
5DE17539622660DBAB749090871FD2316356C3CF06A91C410E44056CCA77FAA2
7A113345C9C161A28C5A324D31BD263AA0CFC82F068E794CB441B2B9A507D9AA
37DA5DD9B810AB2EF183413A4CE70C72CF3197C6081BB1F324610D663A4660FE
64C1C440D1C80183C887483EA284E78817612C5C9614AF82D00B6895632E14BA
86B1F60CBD8DCEE1CB5DA1D8CFD55EB82E0C85A089269EDD6833F4E0B6D1FC1E
4CE9448CD7D00E32944D0FAA5292F033D14210D77EB45DDACBAC1620BCE64123
0920C23A8013455E9BA7748B405513A645769B48F4B3C4262F57BB6A235C3D76
4A0802A5200C4849996452E00664414FC96496FBEF5AF7E2981B87B73D560A8E
6EE0BEE3408D38C8E6AD2E1BD1156AC74542B942B0A4F70B64F7A89EB8D38654
59C0D529C5B2F5AA944765B7D49D7C68A5870CA8EF1A62A95F4DF4B1F9DB4136
0FBB27DAA529E2F8B9C28DF99C52F1D2FDA7B8516FF32957645D0C67E537C0BD
61BCDA039B3EE1860D5F11A241C4889FC8C0F634CABABB7F98186E798755FB13
C9221F730F4CE2BECA91F339C3896853A35518DFB99CA7E44B6E03DABF8ABB73
228AB478B97E3C9BA08A087D28C9FFD6BC993137C87A7B37139BBF1B73164EC0
CAF0220DBD01CBF5D8D8F19B865E66B69ADCF5483242CAD88E2A1CEC71BB6272
E685C5F8A29CA84232541A96105BE1A2257B4D7C74F6EBE32208A0FE35E1DECD
ABE9F3842581C3BB3F68A47752328AC1739C09CFB5587C76033F9B4060A18B6D
EE60E11D3BA1E93BE227D89FF6216A1EFF438C99F6E250732F66ECEA7FF3651B
22D701A6B519EF62DAAB98AE689B123B0AB9DB5F41B6D87DDD46BE13F00C6F86
95B522E627AF81F344C3F9F2EE828477079CC7130332A749CCBE017017496617
E1B2E8847C9132640393DBF2D0C1EC341461AE26F428D17844435F1345E4BBD6
3B242308421A7757BAD964F6AE9BD078C9427B174A2F92998B18CEFCAA047423
9049077DDDBB1713933221F95DE894A8F0FB390C4649872B940E5DDB2E08060E
2CC989BA3E13B958C0DF5AAF91F50D9A6FE49BC4CF9BCC9CF53232454B14C15C
5E30DF58127606B9C5DFFF8BCFDF1D312FC0FC0162F47FB4D8D9034DC5D7019E
C8C6A5E352C6081C7499C62B1B92480E596306020FF1E48DE492F636B1366083
9C127427043AD46CCEC31DE1F915D8B09E42056D7593BCE01EA2D5ADB97D5DA7
8FF66365BAAEF06D3651D7123E51FC178A75D6FBC4DA336B0BAF2478E2EC0831
604AA066E954A3BECE34509B27893201D6A1F0345A1D96F586E87B72099D91EA
83606B1200CD3363AFF2FD87ED4FEE8609D0CF6703CD80DDA7DE02F19CBADB92
6CBBB90821443AA81AD81F67944AE235F4F872E636F24BA68ECAFED1366825DC
1C0B04884EB55F2EA19B8C272B6A0DD805B9332C6A5697AF3491CC68D7712A43
140E2D2DE373E3F28B2E49653CBE9DF8E2797BB52CA05603870FE7C734D80223
EA7377660C06E7682033B4376512D85F65AD30E430DCA4174ED71D502A040CB4
DACDAE1FC4F892A2F092A3E45DF7E664BD01A6BA8965E3BC0874039470AB20D3
78662840058901B9B0A0DF61A899BABDCFBC4030DEB1309E925ABCE19E62A2BC
0C99138A50E5C0F57977D929DC9CC590172298E015F6E5DD084E68FAE757E5EE
E778111711C320C99559D69203E444AA835BDBD906FBCB6A6B1379D6CE91C45B
8261D9FA08099BDCC0FBB35FE44DC25B20FAC1A735A524C8B374AACE6AEAC8CB
4182A887EF4B2F770944C74A96F6CD2A907CD9398069A573964AB81D00725994
54E8F5D1A42D40CCFBC093AFD3E57973A0090D9B30A30BC2A7E86A768D46BA78
BCD7605C487A00CD288FE79D5BCD4C4FB87316BC327ABA5D5F5FF14BFAABDB54
3E658764701CEF19E33CEB900688B76623F07A35061B4037BD2EAD945FC6ABCF
3ECD8410335AE6CAAA4F7352C9CE8EE40DBFB9338561B425E7FB8A486E8BBD89
22637E2E71E4B4F1A2AD2F2CBBD1A04CAD375F74F86A864A6ADD86894235D7DB
FC11532518F8D8695AE74DFBB767E285636C88CDA67539FC8C6A255773F6E68F
8EFD79106B8FEAEC6E72A40B22AB733DF071D6B92B62F1651874BCEB9820A92F
8C86B98A36AB956ECE9F5C56207134A1443D4E484684C9394BA9313FE3EC851B
9D085A7DE62086A475D567791289908F9708D1FFA5F4099812BCA3F017843660
7CCA8FFA2136643652759D4095B00EADFE48D62804610E4F730DAF2F2D5AB767
C320C62543E262AB02854C9877E9E4121D68FB545124ABDD73C8F731969C08AD
9CDC3302D01D7138DA8832FCDD816A2AB41856DFE9497A91E603F12241E2EB52
B5EE286D3582FA02F6B0FC46627EADDC9F2827BAC12E0E45B310AD8C11FEBF09
1DD42609A279E8E3D4698F925E037E82E12B021B0C2567755204C3D749FA3CE8
1431E83632E50C9504B72ECBA1E605BAA00B02C5AA368E0EA4DA11B97975BCEC
BEDDF460425CAB965F55CD9B6FFC5CC15BBB56BCFEBD99CAAF6B33DADE3BD4F7
B8AE330A2245F55BAA14F9D6DDF0A4437AAC09D92611D20BBCCA00BA2EA6D293
65055081479004069CA2A3C819536AB8F4BB1481419C4B4959AD3697E6A1F1FB
0898AE06F0EF15886DFB61E63B502539DAA3817D5D7C4A3404EAC332598B5BE8
4FB53A6A9F0F717FBC5F3732F1343C995F430396B6FEE04214BDC1F1283DB196
A399E3728E1BB350182518F8FE2D06F12C28A025A86D83678B72F9AB15416860
19715AD6A4403B2626BC1FF909694D0549B545716584072513AC69B3ACB517A5
06AA899B67143CCD4A35302FACC3F83E98692779A35A25883EDF8A78232C6490
70A53415E80BED4351AEBE148F8B24C15E1676CB8129F452435D3E7B5C04CF87
0CD4DE5AAB08B5775B692F5E44E8934E2A1A825B8ED3746B4A55EC93A2FF9A8D
CFB821B073E55AEF020FCEE30180A25FCAB81A25F10DE18445625A6F07D9DA74
1DBFF55B1FCFACA2E14C7E27EFA2F26A639CF46F86933FB596832AA18D730A55
B80EA224ABA4D376DB203E18FC918C2004F0D54E717F3EBE75C50C5F7E311EA5
72BCEE0AADCD191C733C695B8DF0163FA0C03A3237C5A23AA811A7E26D043300
B96209B4490B4ACF9B3299CE08A978573D3AAD646EFF1D50758734C690A53BC1
7081B66D80CF8716483F7464E8488B9D6B6FE066D7DEB462C093F041F7E6E5D1
F75308FCDE3B7DF3F1F99451B3A8FFB7AD72D342F0D3361D0AB68FCC1767179A
1B63E40EAE3829BF4CE47841CC9958B4E3CA825F1082863FF2526FF4A8F3AB5F
EF918CF51993A7A1A7C62EB0BEF84E63728522CD2C2093B078743CA60D8D8E41
1C85D06E9FE63E1225BC591D5BD5A6641AF352DE67A0B0BDE9B7F670408A1652
61B071BDD87D9E2CB0C4BB90B1CBD26C16A39313717917DB47EAD87A03F42046
C35043DD7553091609DE91360731449159694228F4D66F833796AFADEC8E98D7
8E01B81DE3A78F6FF1BF957F5A0AAC7708CB4C4E9A8C6C0B36B033E9CB67097B
A5E28F1761CB5568F00CC22CC3338B8D2E8CBFB5E858FC73D8567ADB7CAA32BF
9D5C2979D409E4D68BB6DFCA01324EC8B220EB7D3F8A7C29ADFBEE0043D46642
53B09D523F805B2164A55DBDF4EECEF94DA40C621D4133C6B3F16C72AE44172D
12B6548A0EF59C6710A1C0E5BB406AC6C8F7C91D33E6F388E1C1C7839B309F04
21354ED4AF8722AAC58D3403A416F243F1B58CF54E94F3DBC9351634B8AEB2C0
2D360678126BC086FF6FFF378E0AAA0718A1AC6EEA071D0061F16D88796C4BA0
C670D0E715ED9337E302112A781CB563378D8C5CB7F8729D436B65B80B3989E9
D2F1BA2D3363EDFA1FFD7BC6553AFE3E7BC6F467FBAC476AF4893C6475A47456
1B6385530D40BAFA9E44D0A820946FC093BBE4CB287A03CF94937386246EC443
9C241C01EC500AD6EB490419EB1278AC3AB78AFC7468A280BFCE3D1DD83DCED5
B0D1AE43752132BB19F361464321ED503815316CCEC391025FFF8E6838E92AEE
F0BBEB19C99DD11820D375EB9335D7CB6267EF13E1CFCF2A366C37B1FF0A69D7
70C6CA0EB548FA1E4795007691ADC4E2D00B423765C2FF3AE200C83D5ED0A486
6444501592D8CC1979414B141B0B14ACEA0C0DDCAED669667EA53CBA5CF9B8FA
63EC47083720B5281EFD4DAAC81D82AEB77386758AAE0DB68A07DEF72DE86D40
41A1AF04BBE2F3541E1B859901766C1A7C54F22342E068E261FA07D3BC1B2BDE
EB2DCCD7C4B742DC3CF9CAC9D7E3D281E9C1B751A1EF84B8FEEA425E21913CBA
31E0267C2BD4636B330B3FC6A0A62B66FF1976403B8C17B6DB619D0DF87956A4
CAD1C2D3424E9CD58A179A2BB40AC54D2E45D201AE777776B87059684FE70A0D
67D92C6DEF173E0B55205580307DD211433C8276293FAEBC789B1F6DF42411B1
FBF82D643CF953FBDFF9AB4FF7DAB21AA6B305471459FF468C74F8C0EE459510
B9C7E3AB3E45300D17BDE9A65A6BC682C841008292750A376D0398DA95DF8AA1
68A3CE42482FBEAD4031D9AB6265FB6BB647FD9FD95E0A2529AAB10FD7EC61BF
69D36ECE3C13C6069C64B22F4464194CAD2DEC1B8ACF68A7E4A95223D31B5D2B
D10C7249C45D45FE6953D18AD1C2573314AF568A69608A9B382BB1B99E45EA68
3DF15336D07AC3B4F744E0A34913ED4BFAA2F0E95E988114B4AC5E6DCAAE568B
7595A72DABED34F0D77551B8EFD72B485F950B8B4C0F5E25DA3D226BADB04516
E95531B250C3F352B68B3A44C5A4EFFB389A2C7E0359A8B6BF01600E4A11FDBA
A2689E99E8FA8D8326B5BFDDD97C3713D2D2751EBCDB6B4D935084759EDCFF35
2CC4CF7E8DA48AE10F19464273ECAC6A6CB033D222D6932B91F6629398A701E6
BEB6D52F1957018202E91AFEAABEAD2039060F8B6BB4C28AB1B9A5AAFB7FB94A
93E8152108D41E533813A8D6CE3DF04268CC777DB130737A43E991B821CBFD12
998A51229EDEA18F865240ECB2C9508DBA86A2ACDAE6B930FB8DAF846931370F
F1C7DCE1B0E9E4470A70F8491873BE43639CDB2FF3B1DC5C90316F80A1F38683
D6190095CF2CFA79C49978A94A59EF8126D9404B73183A99D3D180D6413CC7E2
969191D16F7E7C2924D1424C444B9D6FDCD0195626B9FF52B0C34E5944C8512C
BC8FA98A881F22B81F1A7B42568636720863E7EAA7A5C7B9BA998A3AF778BC7E
1EA555A3A3E8044D9DC8C616BA9F1AA22C72790A97CE703AAA6CC2093335B604
E4DE22C24947C31261DFE88A93AE4E6C7599D8349C52D6E4EB10CE7B2A266F24
E369FE2D7618C625C9FE7B1EB40C8A664FE68BFEDB98E14E3073ABF39EF2904D
96C4587DF29768E6F31E94A1C96D41BCA87F42336AA284E7CB09C9417A6D014C
327BAAF8ACE6D478FE6B2FD97276C5D0E96F92F30109B23754E7A236473E8A62
078956ABD35E1FA545BE29C6970A16DDAD78ECB967485C1A984C36FDD03601F6
9C969AB76ACC37B409007F18B42C7F91914EBA348614E3850F73A8B2C5B0AADF
8AF3E1C974E4A3BB7CDAC928ACF5E79F880F462C4BD3D9B42158A7B5A7B7B9AA
763F56FFFFE98E8B960C5B9422384916A9D836A224FEF55B06A6036ADD54CDC8
7F9D258766408BE8D7AD4C2DDBA4D4E7848A250280036242B1B3B15DAAD3E51E
7E27545A87470B1E3D9E3BDFC049AB9512C97EBB986EC90F13A8D278FAA3CF18
C040619C47FF17748AA9B720742A415DAA0CE1B8745736395AEB9D265A2BD31B
C49F3F6D36A5F979FCF84EDC4C4D95FE1173F1D6B50DAD534D89F7063E702EE6
621E0AF852297BD83480566E36545DAB1BB0423C34755F88AD24878358311370
D560276298242DDCFB5B93FEED8AFAE28D55BAAF975A9DCFB0A4BE6947FC780F
2D4ABE4714DC4CA55DBBF56CF48D70FB98C3ED83F7C2ADB01C926F1F6CD4ECBF
E199F59281F5D884990D92861BA0BEA5DA5691672DBA2FFF275D1F3607DD9ED1
93ADF2C24BA54688894F18E3733B9A89343A3AD1D072E9FB6F4FD96BE01DD089
C9A51BC5B796C8285F78C66D15C27AA9E28E75FABA796D02DF12F1BEFD6148C1
0264552D17D01AECE686DF722C1AF676C3E3840341777002FE0613D8AB5B7D41
2F7DCF5ECC838773E58836023DEDB0CC9AE428714DDD6619AF0785E90C2E40BF
A0136C9BC16AA4812839EF1745C0D9E8A74DB6D9F0D31215967E4FD41CDD60D6
E413059A58FA556EF3314F80560A2465A0565E91E89D1335338DDC277E410107
574831C24CF968810067A43B3DCA0C54978C821D33E675E98C27EB001C3B895E
824DEDD7BB266F1982763361197C7668D9E7CA64967B87424EE663B59B162854
CC61389595A3B90BD86EF5BD3BA00CA211D4684B71E002B798D11587B9747BC0
EB49023DFC9947DE3D2587C125E38FC40779C826C9E160AA06F3C0B6861BC85C
E810D2D462C1C68CA7FD651AF167894B9743045EAF35E5F22E7B0ADDFF5AC821
53843C6F7837AF311F4FF876AF0AAADBAEFF30348287C9C3FA8B34A76654DD7A
D6927289A062A3BA4DEA11570A9C92F5703261B09BF257495D73BF0556EBAA06
F7663541F1F104231A20ED1C32F02DE3E5AC5A7BE7A8356C867794DC13E51E59
F5318F4011C80439675FFC9C10517B0D218C2C21DC0F3BB8B3BBDE55BE56BE15
1DE1901F274415E9DD03057AD3CB6C0CC7F5E6DECC2A93B482ADF9BFA9BA653C
A71C9BD82D057A9C26541F3D309AC650FEAF3BDDA56769149F2A1B8CA1FDEC97
18EA4F30EEE3A578921580C7A2F06577BFFDDBA824EC786EE39776EE06BFD3C0
4FF933CE48AE61ED5ED4F5AF83863CDCACA331175F46778C3202D3D4F36FEDC6
DDA6E2D0DFA7642329EF41F770351FA1556A83E6959D331A34CD036A454D3354
97856F91C8E30A8B4B5261AD64A4E70BE9D053F69949A8E464ED478A8E037FB1
33242C74A60AB7B789DAAEE741EB538E3AC7E38B333C794D1F90D104EBADB9DA
09321173442805CF8F8F6BA06F1C1DBA7AE208615F5D00DB8AEDBC8209595969
EB3223228B6351E76E7DB866A2DB1B877D064467A00156D51993A6614BB9A9DD
0AF18A2C283506A62524C3113CEF9C30FD7A8AAECFD1F72BFF12AB00F60F9980
CB3BC380FDAFB37124373543A2C18439DB2227247B30A41C72B88184E1EE2156
8A5DAC624EFFE6B11977392450BCE78C49D682C41C23F5695D81576968D80262
C5D5CB20931CB5A44ADDF8B3E12873A023AD84BC0237FCDBA9FE0446AE6AFE07
A1F5553AE4F0B95427D9154B9675D667F073D73DB7EB751E278EAD600478251D
D06939A98F9438064838B04146058A2C52D99BBF3F926DDD5646D48CFD2E3046
4DDBD18FFDCE2100BBBEDE518B804C28E32FB3BFF145BDDA844AFE41C6709E48
7465F3ADD4D4FADEA06F18A44A7E7BF02FCD2F52D4A3FC504A395F38A5F34137
558FBB4ED364B7D0139D37EEA50B145E0117434BA38AE08C30E8E9E32BBBC255
BC6292611AB54DFEC01D96FBD7D076357FD85F26EEF6C10AAA93FDEE8F6219D0
882DD96CFAB8653D43BE4C4CCC091B80DC6ED52734D447A5DF73FC46E9A97041
44D16D6002D049277D65733295C5061ABC597FCF12002F30135A066E00ED5863
02931052608603E1CAF788648D74B078EB96B7A8AA8BDBFA82BD9A0A1E60FC5F
7F3EFA1DBEB4DC35C1533F09A4B36CA6CB9A4F911431C1BDD2C8142EAEAA8C0B
812141083A67AE2001F137F7BBC1C5B6821793416DC5A94732BE0FCB9BFF90C4
C783DD983579A30AA8DE9900DA4BB0C1257FE26C5A5FE4499B09CD8F1266A550
3958DDB55C8651D264798761C4EEDE462668675986DF1DFD844E958D92EACFFC
826FC39DA0D686041177AA34F9161E0E82187082675F91CF7BB877BC1BD97582
F00CCE1457887F3881C8F1E9A6F048078B9A79E0B93DC601820FF52EEC38F483
A86D33B8FECB35E69BE23802952A10A9D364B1CD13DCA3D385B83499C715ECD7
598764D1CC4C6DA654AA4124D577D774A217D4897A2610171222B749BA01069A
1C345B4B82287AF5F0CC81333957BEAFD6F5F8F844CD634677ECF906232CBB0D
7F3EC78BA630CE28BE483D01113B2BD7AD8D322D32EEDA3DFF2E9A3D560BC555
C27BFC8CE84999F45D43A687F901B1D001AED22446C9406C0B22CC6705D46402
56C42C40E13EAB401097C161BF37E788FBECC240A98771686075392EA4120C86
768E3BEC5E192ACC1FBF937035DB4920F0B8E96FDD7FACE8349123EFE3513D14
1C31DD7109BCA7E9D83CD4CB27DDC8C34F9088C8FF0160CC3DB84FAF35CD8CED
206B6174010EE3696D11291F2E3F06359FB2DF0ADCD3F8B9245FA7CF327CD80A
A98451165EA950EB7286B24B80B4D6066CEC3C313244CA986CCB616C7E26129B
8BA1425CF6FB58654E826205926D24E166AA1BD70D4F16EC216EC733F5EBF4B3
39B9233DB80680CC93187A2D8B685A08A8714BCA85FE11E8B61E2D46440A3808
3B9CB609AD322C021122E962CD756DE48DA93798FBDD034F4252701667A56E8A
64CBC393D97C82A06010BBC1A15D6732187F3DB9D3A9023F4CF9FF1E6D395989
C35CB2D3E16273B45D9EEC232E5A1E70301EA5201EEFAAEE178CD13963DFB96D
5030E787961D72D02C195C669E792C0DF1C5DBF9D2AB32E9A21F3938325477FB
5F3A48DF5E0C7DA557EC20A9D8AED089AF77F0C5D896228A3AF8A96329A0FE05
FB869188C14C268C3BD17A7F6557EEE167D205321227B61F029D08D9A281520C
4A3B4127C06741F0F70D54AA2EF2BFE3E57F50DDE010BDC88BF5E6DE01C92419
9F2F156ECC4E82D4CF8E6F87B2A2DAFC69673E1FB8199EC88671715A436DD4EF
BFD0DD1818965337B8CE99BBB445131839F5EFABE1C78064591DDA545F77E04E
A2AFA9EDFD349822025F036EFDD504787A9065663454A8FAACC18076C60CB941
40E58C4627A127D4600DB448D32BF2E94F04CB7C967E2A8B7FDB687D7D2DCF44
DC055670BD52CFCD192591BA46E3624020029776A8E5D8FDF0131FA793AE34A2
A734AA10D12CC0C35B8399330235BF13206A3DA1E62973D995F4154FDB773A7D
9E29FE46E464E602CD20611B433C6B1D34142F4C465F9470151F8D7F06B64843
B3AC686B5E87EC197F07C4D1914A61CC4F481013B1B34577CBC6ADF1A8ABF2C8
E1C883EDCE8BA8A0360B28CF7C9A04879EA8034AF404EA960F5A6CBED5C40B66
9F0DCF0358615CE32FCBC1B02EA66BA63EC534C60B61F1B416793FBB81EC7A1C
EB5D36BF344354FAA9B291ACBCF9B741EB51FE87B31B6B7BB613ED01CA4D65F7
9C7CE47DA8C397D3E4D1A8B6C56DFDE887E01FCF6FDE7E553889B94844129D2B
44DD121BBDDC1877EEE37B5263811E5D07B5101EF64D57F39DA7E5CA0A68D62B
F6FC705468B2FA33D965998C53F28426E5E4E2EF70665FA751137683D55E305E
182C07AA0A48FA9399449616273B7D5CFC9722255A2AEAD221FD1572A0EC8FB8
536E6374281CF76D3193B8A1D5E9BBCF46FA3AE7DDF8E169FA4E0EA83347D44A
E01F52ED7F6B3A61A18BA0E86A774ECA6367220E0D5AF8A83DDCD78D676E71B6
C51A64A87FD82AC7FD78224AD64CAAD2542B807009054090770432D63B1C903E
5C70043C96AC0D7859734D3A377A6AF8C5EF8D5806C648A98C0E61BB4F263BF9
EF4C056B20BAE69307301C2EC2932B8432A9B27AF64C856DDAC1BF9CE816B349
CE7E2526F4F24D6DF96C7906DC4D3F814370CD3B1ACEE58FA0A64C6420233E49
52E6F77BDE60B62F6B6B4DFBF3D683A3E5F52AC5C3627A231EDAB2CE032DEC53
C70B6F333FE1A8751C8E333AB95902DEF39C6837F41DC5AE4E7E7C8676D038B3
D9F60F63119EC9FA765E6E318CA3DBEB2A824BC17DFFCE05DC54B842DD18327F
9E0C9E9896C76F809EA2258ACC3A750E94CFD5C2D2ABD635DA7FFE17BC45BDBD
27C7EA54BDFAFB92C64EC82EC805FC436052CBAAC32D56555F98CAED6F9AC20E
F569E656F19E724FCF69E5B2877B4D05F3AB9FE13C64C2287FF3E9D5D12E3038
2DFE151DAA84C3F9FB951E4C6A881D35642453CD3DD7900917ADF00AF308AD5D
176245643572C741F526EF774CE55576D0F5393DAF1D8A790FFF331CA9E4C9DE
CB2E1AC7F09BDD64FB6D29C60B05D141EC9EB0B23BA7FED0F6C249D0492D0BFC
40D8DF6B9D4B8299B2399045ABBEB6B66198ED9793D2F90CD7D79F27B15F50FD
125C51900015B8FBAE1E8134BC45C573FB02668AC5DE573D5B17B3760D2257AD
918525794DE9B9603F2F5CD081375B1B083C66DDEB73E854FAA7A181A9132B96
220FC2B93220250C706891ED2D8A5A42889A1E3072B94BA1AD3A9239685885F0
B53FB07AB5935CB1B851B96CD7BF88F9AC1117D782D5FD2AE1B8ED3F847E1F03
905ED468E6CDBAE47BE7B36E3DCF1C4DC905B343BB72416574240E31CC75137C
817FDF26B95211DDA7C94F44637ED9DB8797DCCC2F70E345CB8027706AD0A4C8
1D4BA9759243F24519AA8F963FB3DE11F7DFF7D47C96C4722899060FC8F91F3B
DDED343F64C6CAC65D8218E75ECDA7292A0F2FBB43811CCFDD2E70DC54A2A26B
1D78582A33F532481524A501670234C4EC88C5DB5628F41DCB5AE8826E6C7F3F
AA3B3EF8E7838601709849377A17A996F6CAE997608D0512A6134FD48A8C8480
D9137F359E6287C5369650A06D6F79CCCA10F4DD4657C898C9FE32ADA2656857
0067327857A4ECBD78008B0695E30D3477255EF61C590A827B8BD00098589449
C6B0FF73A672307B352E141233CD8436CCCFEDCC834FEEC5B1894E5384979966
F496FEA5C1874BC17DFFCE05DC54B842DD18327F9E0C9E9896C76F8587DABD28
5F4BA6FD649BE24C9024E5A1348DC7B8A64B96672D44B80ACD7848FE8E31D547
76F9FFF730731417ED696B710DC4EA851DE999856DE95C39F1FDA13CBC597093
0A53702E62937C18838A430C60992C0D5CC5036894E2E6389542AAEC2E389E9C
3790ED94CB2CA47D34EE6C4B8553CD9E2B63F945504D950C13B31CB7B479CDFE
0851BAA073A1A81F8BCEA1B152FCAD7FAF84983CE311ECD88CCDBBB6AB1C2D00
FC9C8741F3D55558ADFC15275A3562B7402574ED20EEDBD321C2DE4B757895A2
2454A8AEDF031E76C4DE35D408FACB8510AABB489BF46703853C49DC522636D5
B7FB6EF764097A17DA725C3AF85A2E462BC86360DF3B3C743459AB088BEA49C5
D06D63934253D785E1D0E5068ED5F42F2186618ECA4318D68D0F9F1C50554B0C
2F3B595C9F8B299B7BE0BEEA2322231E3C6AB65EECECEBF63359FC9B2469452A
88622F5920CDA5C8991992A2A1A278B2E9A7E7C3CE68481869E5D4DE24FFE9BA
48739931070DE374B8EBEF2F870D3B4E3A04C98DDF3CEC2BAC4868CE573EADAE
524999ED6C74AC8496B3ED7011B83208A9A9C854D200D6AED6DC521ACF8DB038
0A166AEEA4E841F0CBADC7BFEEA54AD9441EA5C2C1926CCC1D40F78A28EC49BC
0065E14DBE7F0E5342A91E47210AD2AA6E54311CFD34003D0BF48C52C7FBD59D
0A70C67FAD9A319D14ED56EDB0FB117D4CB248FF93623CDF74843093493540E3
AF681C16BBF6069958497A66CE724913BBFD37AED45C10A4DAF2389C9E075E41
3DA376700EABBF1CBEFD93B5F767CBC7DCADB344B61EB8250C13DEB39B26FD82
B2CB61CDF5722DC06152207D78DA82CF378365930EFE4DBD6E085F7E16A62920
C366854A01718EF1160926C59B0C3511F823E75AD49B00773AF9A354AFBC39AC
C10F9E790E4B12C87C5C61B1A2CE0AD65CC2FC01F5E71F9DE43CC2B641816473
3DAA06792684ADB37CECF01438BE6919609B83FD665C1D5A0C5161F69B55495A
5C9FD5C827013FEAC10F4CE041BC3ECF535EC546A8CD71506F197F99B7CF1881
DB9C49711FC37DDBB969A48529C9CCEF95F7C8D181F4C52FD99666E78EEB83BF
C209FE74105EF7682058819AAB1DC504989C72353111E13EA21F3B83808DD281
D9D8A836DA48E52C8C75C94260EC281926ADB355BEF101949EE3BB396BD64DA1
330FC5DAAF5A53D59C30A0F26B322D7A28B22346656A933D293979D4853FD59B
C86C350E7F7FA1E96F320C04D34EA2169EA36EACBA62700A4DA7E6EA76D91F0D
2410BADE369A1F7EB413488586ACA8AEA7DB1B0CC356F667B968433E1AF2A1E9
58BC7D9B9AD2B4FA595335F5F9AAF8CFB8CC4408EEE8A74820177A0EAF9BA171
46E26D0C2FCEFFD9FC607AB07B273F9BE3BFB95841681A6013EE383DFAC6B878
C0ED21C08642DCCDAE9CE8C3D9FE33860DD82CF58FB9FADEE5DFC565CF8858AD
8B09E826244F405ACBAFE6691C8FA883CA07C63D198EE01479524E17C9E50DE4
7E8F19437ACDBC56D765E20FA628D350C975F474D16FF0C32F444F53947B5BFC
A1526543FB170F69D38796130FE2339E826DB3B6529EA718E6FD5E3921CA2C7E
236F15F6885A8EA8BA47F44BF69CD0D273EB6C5E74C8B126585C6B8F3C1FA227
7F080E818ACD073D03C147EB0E582AD55E86FF1C5F6811395D15C8D09D13B0A9
8A7C31E63976295F0CADA5600F569BDB39BE22E7DD8041FD60354F161D260F93
29954956078B528F96A9D42131CCDB085AA6DF853F40125FA00C2EF783D163E2
E80DC8717DB1B434F9FA88327D35E077F7270CA05E5B55E0B9D04268F0F1CCED
8368588A8628EA6D16734FCB8B8717ED56F47AA748734EF650CC7B111DE36F55
C7568BFCFF2C1E9A4478CD15C95526B8E15C2CF6A23A3CE8A015130A8F06F2C4
51FB5AD6C9619F634BDCFD0F974CC36003FE6DCBA7EF9DFBABDAFA48D9DA309E
C266D087A7A30F2D88A3618D6571C56DE4119ADF4BF310B71A8C4B151711874C
F45F796BCB6119616B72D74A7F231AE677809C5C47393F8053C67A74063A2333
7C75E8A1C17861426BE9CF9C95EBA88916B9072BE9D9167F583925759AE1BE56
376B56239E595B1ED5277A0B6FAC46198CE91D0DA7A8C91000C4E6F62AFAC8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic10-Regular
%!PS-AdobeFont-1.0: LMMathItalic10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathItalic10-Regular known{/LMMathItalic10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic10-Regular)readonly def
/FamilyName(LMMathItalic10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathItalic10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B30E8028C685C8FFFC2
3C0E2BAF712D9A4BE80B6E38C9F5A449DD2DCD493C0A130001F01DB02EE2BE50
8CF3C1EE0898661980578B4396FB3179F301761100231D260FCA63E74EDCCEC8
08E4BD0AB6545195F32F881C99FE3877DF3BC94657DAE2BD20767AE9DA7D582A
DF256F4A52C57F9D228B3E1CC5DC93FDDE8E791DB1E6FA18E0B9B2423868792A
2BC90B78D9F9640524C758D0FEFB713A9A0D66350CD78C8FC945A63D8C07C8FF
5D66E1D7D963B7567F270FB876D2FF1E76F1FC1AD80246E413D337A718699FE7
EC080448FCCD4B5AD8453287D86BC727C140A6B2C1F62439396AEDC897D546C6
F8241122821F88FE9BA1342B044AE9A33CE496ABD5D7F76B1CBCD331A08C6DD4
37A78E15453AE3B1AB6664CFBD92B9982E6C0F5AAD267804425AEC523A184899
3A2D0259E64F914D353ED128EA5774EA6F87DEFDD1BCA35A413EA5D75E42E3B5
66539B7414AF09F23C1DAEFD913327B6CBEE7B5F6258CFB98B288A2A2019D344
E9335FA5D1887F0A3E6CD430AA65E3A59B396F035C7E84875F5A5E374875FE5F
2B49567A6E8C851A51D8BA4F6AF388BAFFF88D02B166F37F0CE1D4D4201AE26E
047084E2ED3E3662B60089E355AEFEB3964748C5F836C437C042B64BE3AF79DE
75AC4E7255CEC0F20E6D9400D29BC8D9BC2FF1E08D8E020F33BDEA08A38A5E90
CDD238866C66BFEF1B3B61F2564CCDD80BD048586674B94291DB7268CF59686E
D95927FBF8CD3224572B687E01791F40D51A230B9F12EFD86A7F90A0978CF220
FA314AB43197FE6E7C4F22C4BF4C4DF7ACC7EFE7C6B152984BE0FFDD1714ABB9
CE834B59B859F89231021E34E2BEF6C78D5697E25CB5D72D2A5F8093158818EC
60233DE494228ED13DC8AB6685A5332341BC02AB2064AA00FBE26BFD27263C04
461327FBAA2D88B6D1477815F4188980ECF40CD3AD1E29DFA34769ABC993DE8A
AF8A0E27487EA582D55886C3B2F6DED5322AA7F265EF97187DDAE8237E4A34D9
C496BB1C04588AE85FA5B209321554AF2252858B319283FC9468887C282A8537
29BD1E86B7A26AC1D3470F561C13613A73572D79A8CBE1180F4C4E8BEE8EC0B0
14E2B65B5E8054506521227674339C79F366B6CAB4CB030073A615CD431B3DE8
E976AA00381C839090AFFC5C4FD59672140465B77C5EBD8D4AA4CC5301982586
82BA540FC6F55ACFF8DFBB285BE2E3F8D48E10D096AE21862F38387EC0E564DB
A9F0458FE35C6B73EFCE2CCD06A30F9D0788327205B0D8AD49EB1DB9088C4951
BAA4BCE7064C5A52A8C7FCF6451A6A4640AD49C951F19C97A341836FA85BD751
C3774EC538D7CE95E2C23154552CCB5169873F8548096D080F0F822858D294FC
F3F4E7B879A22B808A6813DF803DA79A758CF20A9499BEF18A9044282FBDD0A9
257B53276330D899DA10F3C6A9F9C31E911E653E82701FE547F41B7905D8BBB0
4CB1881FB149E8DD309D2C7490E80E92B6F241F0DEC1B48DDB69FD81AD6B2B69
36723E4142FEBB2807F053E93648157D6C21A5434310F30CC0E33018B243A051
51156E2DD28707789B87C4A5BB49FA694F65F369C270EF678548B9ADCB241FD9
0F604ADF7117D4DC8958FC85519FD7F73121208E95BB9AD39F1B7428F70B68C8
7857F765FB4B1EC40683645E2DFA6F6346654F7411916C7B7D1BDA97E3D5CF5E
4754CD0482AD02E5E5E08B6734A89B965439AED4F6E20342859D62FEF03DCBE6
C5BFC959BF6C49C566A1870B6703EEA046999720E57C1D385C3D02B28C060B95
5B433FBBED2E0852A68822566D2B310B64050CF0545EA5CD4F4B5DC4CBBABC89
1C94A108F6343402DB5A4DDE92A322D7F1BCCD3976FDFDA3354B62F6655F0F9F
5CEA57CE202002AF3921E725F32B1068BB57DC349739406C83D07068B17047EB
15718DF7DA2265849EAE9EFC995746E920FE3F79E2272482B0212B199089FF7C
84F9693ABB21B392C7E023795E1665DA9006
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E086141A4B481B1D085ED61872E8BE023618298C154CA1CBC5A23C2
ABDC7EB93B1287558374ECEBB8152B9043D36537E8FF707C55BB3148059BFE8C
2A2F8B3E9B2B8B1C12E534AE818467322EB65A2F8B46533DFEC5C073C6294F2D
41197996BACA6164963C3AA18EF7AE2BD8E00C40760E980317E83B7F3D7B7C54
0FF26E1F0C47E3EC2566D4D5A4964EC940DE020C1FC0E17F57321E0EDA82B002
F1242AB78D5C62AA5706D772C8605CB0E6236C00BB8D99C674CBABED86D3E1AC
FB9BA589AF4A27153C1BA0F0E5220558AAEB457F4B00907E320E13FC71A17351
A615ED755C44BA2C4FE3451E435B9FFE8CE5E5DA025E51860CC2BFC8F6A39250
91E22056A73A0BFD5AC430BD6E93F7B7FFC135AF43A35FE99C7589E1488D85C7
A597F03CC91CAFC1FA7EC3AD0648CB1234CFA649DF0FD4AA96530F9201FEDEFE
FBFC5485DCBA940B3EA7017290F8D08C7521686B742757221B47D9B670258499
2D0E51483266C628C67969F8F3A31E945C00A5254D0BF588504EED56B101D953
DE2C558CD3B6629B6897CC21CF9D292D151141BBF59C32DFBADF8CCCA7D62EC9
049E6006A6D63BD3FCAFCD03950CC5CD32
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75FB8D5B00DB7BA78FBFC5B95E167C6
CFB9A2275128DDCE62E56BBF35D257EAE99D627535F8E5ACB4A4D3E1E6D9D24F
9CDD9F80028D37C9CB4067A28D41E879AF98739929DDADA413EE35894A6A5B14
CBB136548C4B00E47FA77732DBEA89E10E98CAED50DEC8AB2536A447F7D46D4C
63A99114EFD23133E2FB8243221A2E8AB1CB892DE716CA34CE544502ABC9526D
F48B0762B57F8AAF2E120D5DCD70D140B498BA43863C45D94E6642DD04CBDC31
0087B2FC75CAD18883113AAADF162B023352069DD1BDEF229E16DE8D008A4CCC
BC317B47BE42354627EC77B91564A034FF2F3B60508154B08981B62A2E9974E0
E9A46A3AAC7F87B1FD8620A5A695852F2FF71CD16FA34635B526265F1A635254
75398013F04B49F67164F03610FAAC41229306EA37B9DF6E8DEB1C6C2BDEC9E6
EADDEF6E99BC482289181D89CF74F9995B40E5C55FBC81DC7686AE740022F764
C49FE9B49A108931E3CB077A9C53C764DBB47C789C795E97A537F013BC2BC786
BDA32DCD5A856714ACD5D2BB98B011650B2A5D8B881D6854DA373B002BA279C6
0649618BE2D9B1E10DECA9090F66F089E4D7C6D8087016FCB998B95F194BC9B6
E95BA14850E251A4EFF1C66B148E036AFB7FF007F18AAB4CAA2CEDB34F65F327
D58731A241E11468BBA16BA3494A4E80FF16410385FF17A1444B2D1596343B25
64124D648B1E0955CDCCE027BC9F127F79622FEB3A6781181EAD3F02101364EC
FB540C0B2473F20BF05A8315BBC31178398C4DF5CA482F899FBE7654F08D93E0
29994A566CDDC866CD6A1CF5DA076F94B31AE4EDE8237218A12D5E9DEEB9EB26
7CE99EEF40ED1A5A247FA60A89A2EF6AB95CAE1FB119500650FAD0C18B03564E
B61A0D261812A3EDE5BF402542BD215541E3A478F0933EB129EAE44484E084BD
DE7D2CEEF5E54E2CBE14A20F56A27B70B9C7DCBE9300AA2826EF2D6E38C9EE32
60EAFD1C1B7E9CAE9EE810B4C7934D08C44E8A3EDCADDF8FCD6E289C19A7056D
A716700F391FBA6480099E8276173D443884AC0600329C607B7521B1C1C0F575
F4A979FF04F1B3C17864FBC8B92B77DFD068E53CC9111E290624DC39FB79FEFA
C07D2DA7DEC9642694ACAD9C980FC6F26BBC4B98AA0F9624D8678DDD10596E3F
55CAF2F4419B78FF39B929627428C3A6736D8777332C017A9411BF924DE0E40A
24B0E1B797094DDD8EA17A7A281D007F1F6EE3CB17E0FDB167D05506A96F7296
047E208835176F3154E8757A1C21857556EE412F4434E8062A9F9101ADD125A3
2195B8CB98C9B19235FE35E0DB6F1FBF31ABF448C9261B75BF1EB61260DEF86E
BD69F26D77A20B25BE10094D4C196E26034F2577471EF7CDEFD087BAFFC6C93A
F8FE338E70387B4F1BA2119F24E0AC14D6C89D60DBE2E17850FEEDA72C8A882C
F268AA853D036C7633EF1DA737CF40C5F170EDDCB3B5518E28C971EBFB43D842
99D336736B15B05591122AE51D1486E1F2FA31E9C9379F2B3440AEB83539438B
B83563DD61FA39B66B4DDCE39F3E590823590CD7C75BBE8B58EDC2F2ECB1E684
00C6706D29DF0BCA1B5C649CF209DAFA7619F27D165264869A4D5EC574FFF640
76FD6BE210178957E86D8B7303BF3EBF660879783E563E5FD42AFA2E2C523957
8183B066D5A65BAE4AB038087E40257C1FE6F484941D7387A2F92A69CAD3FFA9
AE559D3043D7128482D9ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A60FC
7025B92E55DD5D5897F13EDBB3356F9E2B9DE1FE09288B3217E226202117CFBE
3DE2C6DBFB0BB25BB13A128CECEF9D4D51001EF6E00C9CBA158724AC4352EBBD
4085CC2897C588A09FDB14647F570BBEE55DC7F2AED102A1134FD48A8C8480D9
137F359E6287C5369650A06422FB0B3B29ACF32F3DDCB4DF8B5AC385B0E99329
08C1050CB6DB39BB10C1F4D149305E6D442E7D8B58020A01C8A417B670A41F2E
B01A30F2AE8C73D83360E849EC83AABD17E084BFD0A3606D42EFBDAD44BB98A7
440207EC9597D409FBD1E6B2429DCC30846293BF3060E9CAE54A81D21AAF3BFA
BAFE773F095BA4D5A0F9607E25DC3137296CE1D8E2B8FB0DF6B5FB6D5C415495
635BDFF798B08041C566CF1D783EC7B15B4330A37FC9C1BF23CE45EF19471FC7
2472E528053EC041E396333C90480C82F2B80E740D5ACBCB0882F35AE8A3E3B1
FE3903A941EA20902C10B0C3E73DF25106052700653849C02805E1C56026FA71
302E87A45A22ED99B04853D66E5A22B56F79FEF73918B7CBCC65CA7DB3E410DB
1AB7AAF9B483A4DB3B333B158517971542915D70737B3F22C6A831A9821624AD
61DC8A0DE77A1F4BA087E7E54F4602592AEB49D4AEA40B81B7B653D90E146B6A
AA318E165C8353C9CC1F0927D73E21ECE52D9C3EA6DE3CE70352D2ABEC8E3DD4
CCF226A6829DF67E37A242C5E0FDF6AFCEBB0621A8ADE7553CCA3725FB707ED9
526ED054C471B82AA52B6C090D4C6C776B5610954A6E5471F8D8344C07DB8E45
BE34098668A5FB9DB4D49F3FC041809ACDA455C62A76B51D730D8B124BC6B76D
049B17736CD9E28DA73506142B6AA54FDFAC9050332212CD062A6B96FB18552E
DB51B991870A6E579DC68B52DF7F950CE1BDB15548CAD879752198F3A2141F1B
77DCD2B7DC83E662C19DDE6A5207ACEA1E0C78CBAA7A47C5F3D0C745262B88DD
F05E7E3C1682E8E90674B781EF298DBA6CB1758D22EE8A7680B01DAC100D3748
CA1BC047117E5E9AFBA7839CAE44964C974F08DB4C947F074F5B3644BB3F93D7
F96770C73499AC0AFC3E20F0BBDFA01502C9A1C30E9DF357529D99BD156464C5
D64ED5C7BE1C1DB9852E09F62BB22A3A51BEC8BB98DE63D6763E8225E9ACAEE7
9D813C62B96A7CD2247A269F53AC59E3E886BC531628CD9FDA87188135B3D6CE
0F2CC637A8F2EEEA4C05990EB23142620576551DC347BCB2302D5D5FCBBB04D7
7DC4955E84168F9AC6EA2E25C8C38B8A36B337C6925E0CB5BD963CB791E28CB5
4B37655D9DC3BCF1F660E8262CD10AA45C67562303483314B5B71B07C7F8C598
D226227FA8C178C10D90A2F26A639CF016B843ACE6B352A0B859AAEB15A52403
FBD562D284EFBCAF3553CC5A757FA50D53E6AF18AF09A1B9C4792EEAB445547F
698E0DC00CC722B65CBD277C5DF3B4B1275090B71A4D4B3B7961171D67F8F6B2
6EBA8AB37B5C35DB16D8B776255132DE99F3F4B7530A72C49503FC4D5C84291E
0740415B51E89FC1E4887D1912C7FFB218D23A08172BC11116C8028E77D0FE5A
DDEF0931C9EFBA2B76B78F6A90C0E44F8236F55938C3CE5A9EEAA8379EE7D879
D13C3E2D204512584029A7E941946AB7D45710ED4396C6C9816137832A56C48F
C89066B9FF63B80A84B36F75AD6D455B580A4BBE440839A54B385C9E4571C466
AF1C084F04AF31AB83EAEDA618C70F735DF746994341A37D17E8AE636315CE9D
47B1A020296D23FD0A59D6AD28E34849187D767EDE855B520ADFA07DACBEC45B
BF0C25F00DD94C798C8CF098F26C8AF48B458803BB26487C1391BD9A5B51F33D
505FE3ED168109F1F39AC5C3357E48CB38906275AAE8D8CBE9ACD7740ECA4A47
A985E2E16051FA4178F6557DFC8FEF287CB787EFF59E86B4A72A199F16F2C24D
D5A6AD833A4BA6F96FE67FE603F3DE0BC536C9A2A04B73CB2E4EBCF70184C5E1
D9C9E3DF6D0AB7F44E679E8518074632F6BB0639E2AA1DBBF34708FDB8092FE9
343274DA68CD751A72052D4FD983EB8C149E081333B2F0E0A54134F91D7B4ACA
E954658CFEB3FF04F3F9F42C57124BF3FC0BA485E050DF883E4B2767E236BE21
9FEC94EF94D9F2096E76F1C558F40812444C6F0F4DA995C8C03162375AEF5BBD
6BC3B250625E4B5C2B2BF9879F853460339AEFAF4FCC58EA396431BD4F95BD5F
6DA31DDC13D860842BAEC5EB5C217FC685C06C5AE447C991137584534EFDDE0F
7BBB3FAEB89D737F9FDD69B4EDADB476A1E588A8C8499A8917CAB23F00BC124F
D93096D1B365B754E3D03ABC8B3DA3F4F6C2DB54682F72DFB7E665EF36DBD3B8
9455CA9BFE2FE8ED26203A2B353C3C9C7AFCAA09793C8A74DA25396CBC1484DB
565607911498AE56FF61F2AAB48F1B954211AF0A38D6CAB3BCD6697C7E56C29D
62A325714D3FE8C3DC019CC01E8738CCA2596AB05857E4B8F9D6695EF332BD3B
AA9EE551A4B142DDC13600318F45CBE1BB1A6E0CCF1CD79182D3B235B457CA9F
B713822F634A96C5D1923710DB4B98B063FA07A5FFE26234C70FF6EF6CA2A853
FE0F76AB1ED5B97A1060D13911F4AC44FA5358837F7CC6ED863F0FCCE5F79065
D7AF0839F444CFE8AC2F2FF46DB2B95247BD8261F39BA12AD5E50433EF517BD0
FD04C73FBF1058A8907ED43B4C144BDAA3C4E6BE9637FC8BD3E94D6257BE1B7B
FB179A4479EBA92EF2EE4E7B73DD295274E1D416F7AD7338FB3116A3CFEB9E33
8EF0D7B0FA721D7D11990750232AB90B60DEF84924B838AE79C6689275697225
1698C73A825EAF77F8C38CA8468E616771E6C9093D7E3479B0DF3F3160EA2059
B5F7BFD55E90340B4244BADD57DA5902E2C08D00E814009234E2A36EFBD854F8
68BC9301D33D0203F8D1F59EBCE526B06B610DB1B028D29F838A52AEC3BAA982
56BFC6A306ACDD86AEFA6F4F2AFCE55BF27AFC96D93AE476AB15324149043E71
3261671835DDF163EA8D3DA7CB1F0514DEECC225301813E4ECE6D689B0A04229
04F6D18F0C917584B33328194369F279C2BC0AB0DE3399077B7B70CC98D0A48C
C3094DF0B0684B67355C6EB30D38D487488A571F1CF7A9B7059A5EE86616FE30
23CDF8F2E3205A114D00FC4CF71B761ADD91A6BCF7C05A89281F249262CD6AF1
53137676F314A99D9AFBE313E2AA15FE976027B15E24EC8B8568C9A8EF54596F
8369028CCB95F05432204FE04146BB1305B99EDED39F538634EEF10C25C9B7E3
3B9A352EE96996D562365F3A29A6EFCBBFA10436C2670E973829FA620B9F3959
6012BD51E12300D2723BBACFE26853F0DF9F735BBE092E906E7424CC62AA9E61
A47258A0C9B8A990E3816F4E659F4CBCAC34142F4E33BA61DA1E50699E9F9DC0
CE656DF4B213F43E7E565C737532B16B0C2B1D11EE91D3DB86C76F5AE4C45D60
27A5512B2575F297A3642756D6993E0A44C2CE5D847E287F626833F09C276B27
6DDB0942D1DC868D5D8E175FE24522C85756DD642C71981CAFD81C1F42AFA8C2
997FA29BE0799496032ABD4C90337D159DCC4D25137E5D930E39116966310179
79602FDD434E2B372C62ED1D3675B796C51D9B63E42FC960795D58B121D827A7
9616273B7D5CFC97271C1CEEEB978E51957475B5717AC1BB4AEDD87AD40DD2A0
7140EB171E7A77F97F4E08C8EA82E98341B6BA6B08D0C858E8A717B266D35EEA
7CE9A86DF45930BE230E064E0F041BBE58F704B8CCE162736E6ED003B2B28CB7
AC9D65C96C0CF9FBE043EF7C2EE7F2A4AA9EF432736C21DD746948AD4434F8B4
1FD8FB187D24F232C6D89B727961E07A5E23628762E804EDDD045FA702F68652
A4BAE83E7521A0080D2E917EC3E48A45B3380636F06F3DF2CFAFEAFC185D96FB
5BAFD9B0819AB0E0CE1270A2FC838A0752230464AF01944BA2D55B6E014C8A06
8F6391E116B004BFFA6FF61693FAF103AAC05C4BE35E62AE2E8112544E98172F
185FC890116846F6EC00754B2523E1F4D80365A42A4BA653D5C26C224A560EE9
58725486FC8998530774A9C670A2833CC6DCE45D2E4898BBD96830A115057B28
6684443EA619FD6C53B2CFEF57A40DA8E0AD1268514C4D5B05FC33F83790ECFD
7641DF3FB94289E2A53F99BE0709F542F3EE5DFB1C1A0AB40E808537744BDEE5
A514A1991A1E999AF47447E6CCA2AF60BB09D4DB7B7AE82FEB500C2C5AF14271
97EE6637F539123745CA8C9C790D8BDC394D0A708366442076E3AFF67832F893
9A22B3C92ED58214B16128298249B942C3780BD59AF9047B918FC3EB793647EE
AB531A76DEDF92FCA9AF51CF0D7C637494E68E34391E2542903355658BD278E6
769617C80447775505F87BDCC02101AFF38BA1917A296C2BA20D729D08C8BA63
18DFD495A3A35CF506520D6F9C1CB39C155A4C76D86C83882ED85FFB721A5FCB
A3AC1C1F74451501E3735C1238FB68520A56BBDED554E575018D9D617695F2C2
29917B9785404865783BE784755194506853E5F91BA5DA79D7AB6BB91A0A6D6F
B96ED1A9AC8C2008E542C0DB0FF95359E700BE2DC30F248D1BEFA38DFC797226
2BC7A660A0E705AB881B6769D029A128DAAB2CE7CE111FF1EBC254C5ABE3BF84
FBFC0F2486C3B71F1385A51C41D1CE3A5A016BE702C59FF664AD52FF3CFCE4A3
43427908A426265F1A635254753900106289415FF0132F33733F3EC5C349D20D
4CB20FE200C72037F7B8FD8B789AEFE644F929E005007E343886CE610E61CF5F
7C8B1546B7A57002CB5631ACEA34EABE2912BE0F0FAB91E7C13E732A0D860018
6A7C0EFF97191FB81A8A756D9FEAB2BE6324E5BECB7546B03B3D79D8B53FFDFB
E812757E453A5CE29E71571B42A5315A276D8A838D9BB19483ABA2F30A278ECC
E7431D2565FF9CBE0556EBAA06F7663541F1F104231A20ED1C32F029AA4CF988
10DA3CEB40E498C201D4B151D532F29BCDCA2032A6A51764CF5E131CE693731B
0C499FCB8CD67A6A3EB64FF89954F5D0CB096CEFC35760E9F293085CB54AF3B8
0A0D81EE204F09E4ADBE5BB5BDE8D8B0F73B4A0A0EA963852F2DB69C1C1CE080
F69090CE23089253F14C053F9AE8D3DD9B34A60A1DF76873BD1D5812330D6A34
8186B1A73996DAEF61BAB889712EB1595CA37FF9328866423172E5AD2D05BC5D
32B277D4AD6A149F67857320F710B77B654FA8C6FAE137AB0AEA1045EA8FC0DE
95A0466B5958EBF63E296F9109677915EDEBA3654EAC3D7848CB8DB367464FCC
848329BCBE84245A4B5E96BA220B94F1BF6CE7C365D68A64D44FDF8C65B8FF34
6471992660F4551B450FC9D4F3131E5B9BF09E2EB27D88CE83FB50FCC21CC470
A32CFCF7AC318CDE98739B360390E9AF0C7C1E13C0E786DC790316B120FAB737
E69A5BF653BA575807D4F59D56FE6359BC8EA4C1DEF06FD366791061349DDA1F
D2D967EB9B7F6B389EE22D1C0802FACD28FE8BEE8AEB703BC7366ABEDC182575
0DBF07753E280C9F4EAA9428D8731ABCF5D2C83FAAC1AA920326C75F62F5B799
C0EAAF3DEE91374116092E029686E4AC0E2699E9B9DE4EB2796B5E04D757ACA1
DE7EA3B5931130B648EC3449E00DF185FA99BA638F1E44ADCD03F326227FAD7A
C9AE412B1870E9E7453C99E80FBC5ABFF0661E8255BC2EB365EADD6E0378A1F7
D1A254FAD9F125B2599B59AF4526CD9C4CB0C0C97CBCBFCC599720FC9CA0A2B4
4365480CB8F10668A8CCCC9DB2CF6CEEE7B2D6E24ADD3F8E45FE88C8AF7468EB
28FD5E0CBDF9E23D1FF320EBF1997C676486E4E0A6FC3A0C6CD24600D6CFD67F
9DA4FF13950E17F59CA9090C11E7FB967904D7E857CB98BD6EB94942FF99AC5E
8ECAE12389B1A302E16B7DB5970B85A6ECCE79319A7D90FA59C918AC3A932969
D3CDE2F42CF9492CF7F1B3230E5A39C9141E775C84F5F08DF11783361F35B604
56344BDB08C929F9453553452C97E016C26AA2086FF463473278D3831B545DB0
5487C88DB06E31E23A1FC747926594AD9E1914F07F659282255057A4BD485DDF
9C6BEDD2A467C58639DC0E0728CAFFE3C5B6A3B3F16798F433C7064934FB530B
35AD9155EF03D074AB5534DE16BA311C9236501F2717DDAB52753B36705655AD
46D57740E0685E046AE1B99F5177F66C4A4B2D5FA129B459E01ADB4950273861
00D41B4B76E83104F4BBDBC90D4F4DDB9649BD8A846E6BD3D374BEB6B9DBD5C1
0FF2C7C44BA4DC0AA1B54D55FA959DBDB3A3D59D187984CF01C8B0A73A8DD94D
43340B7E408EAD4E43B24137C66E7A5ED3278B573694ABD67F6FF81F6450D2E6
3358399444142A17F6F69DBFBF14DE59470962F632C45DE55DA79E7C24D048B1
ABE83933670E389D2A9C9BB8FB1B2B94208B85351DA764DB623D1E0A59B9FE47
D7D4D67C241B49C2242A65EC78BC20D377D68BED977CDF4E50C834624D6C682F
C8663358A8B205832879EEEBA63035395B7552D9B835FFD07328565672AFE4D2
60B3C5CBCDD213E7C8B3AFC2B36119FBFBA42B3D2BA631082B177CCE6F7935AC
17D410BC0C3E25D648B2423B108D159517D1805C697414FF9A71AA3A1506BB97
D6D835DCBA8054761907C99A1281DC5ED17653DFF7A81FC83C826A94C6EAF95C
37B5737391555A8A575E542EDEC2D027465D5064A6D9A755ACC1B24B03D13839
6F3619557849327871EA80F1D4DBAF2D5EDA062C703A602B82325F6EE7D2BE04
AC7E805C1D242C1D066E165BF330F4D3A0A807DA8C72ECC15CE8E9DFC0F91FD5
2CDEA7FAF96105243EDF44B4052D219932F1712CB1BC050DE2A0E17C4310523B
30CCA64711BF3DE13EEBA9C102C40045692EE3B52643A0DE3E672E7285E30966
A059B1636E4B1AEC751061030E9698C160EE6284AE128906F7C735DB24AB4F96
77F888E53B9817D9572D551087BC152E862D2BC14548B0937A1115DEFEA86665
7BAC3A58A4EEDF997EB49F8D967E148F381BEF9A68D4AAC414F307488A9B054F
B5B4D0A2B019B3CE6376B6DE6FF9635DD8C6FD508F211931143BA01D7D08E4A4
E6062C563D31E7FD87B97C86E430CDF1CF6FEF79DF004EA84D0117290BCC7C63
376175ECA2FC62EADAB378C57262724BC9A9A578B3BC9DB5CB1B44B1BD592D47
8BA8715B00D1495B99CBA96ABA9147ECEF29D69BD30D1E24B825216A78E7C80C
A7211010D2C00C5BFF35F8A41EE6480CFBD7570E6AB5CC9A07D4E0EFCE364DD0
022391AD4C0089676139B95B6170A1856367EE3FBBBB3212CEE9D64BED64FFDD
C683B50F16A3AACED2042AFB7CBDF565F04383FCC871AF08E7CDDA69390985D8
3828FEE83C12BC10B9D4931D81DC972CA5A76E6E9C93291AC0E6B29F29EB5449
0428B5A48080A0E95A00D0F166D1AA1D0D462DEE880A6518C3E585EA200884B0
51300C269B2532BF26BC139E5A805CB3D9FCB29E4B4EF4B4EE15553F44AC7159
BB74CE9AA7E2465DF8BB191187D14A7C115826E8696AEF56F99123DB82304BC6
62D8D46B342E5312112F268C69FA557DD87D25E83CA0AF91A866DC636191B5AE
209422879682A8D0D249CDBAB31345F45FCE24252D16B7373759BE4A62F1370F
EDE056CEE265838696FD998793397942ED0508663E38B7FF05556CDD7FAF7FDB
971B557E34D6F3B792A1257B9FF5EB18BB80A6425EBBCB8B72DE13BF53666948
ED6D06A26DA57159B87DF03FD9BA409D4B280567E8D5B9EA8E8AF21A352BEEFD
6F0D90ECA605BC8062E675FFB48A0D1AB9DDFE6A5A10F02B35D01826B4073189
B2B6D3EBAD9006DCAB7508430352F5B4A2993AB5D0F5A7DC3BE3B885999BF8DA
873352821210CF0B915E39263AA9F03B21C1F45C87C2CCB12B5F3B94EB562924
278CF8D650060CC2923372C0A870FCD5E5FC8B78B9B81878ACADC8AB6FAC4CF7
343CD6E7FE7D1CE6B9F5FDC218C305A5CF3A81942435388ADD4BDCA0197F108A
0C2CCBC094031C7139367941CA39AA6DDE207E09F38923A5E9452652D21216EB
3326C34D2A0E4E8CFF4F1AF8D80A714FA9764D1F94A025EF53C533AF3B267311
568D68DF1CCA64E069D10DE577C4E43F0E4BBC0417490233128BDB6370FA6152
2B51536AD69F860DA401B3CF49336D7CAFB9D8C0238645C253E713E1AABDD1C9
45906276AD0A5D2E23697DC5DFF896EC8C1916D52E31DC3325D0950129130314
21A3D10E9CBD5D4E8869D9B9ADF5D613E6370677F6D29A348BD94F16AABF817C
3995EBB3D5A86178956BF7940F2912421C4F3BC76FD991EF304212626F2BE133
9F28FEABCA020520722A4B1FDF77C3D6441FE2F5A3B451290BCA5D541320D8DE
8661038595E1AC14D6C89D60DBE2E17850FEEDA72C8A882CF26D96AD5E9A4E9A
5B2B808890A43D9E7F59104AADCF79714582BF9F2F82E1A8B2ECEE35641512CA
9C0ED68138F89D08E0F9214980C0563AA6CD917C6C771D1DE945308B77B55AAC
EF937632E8E38364F3FCC08853CDCB028B1CE37CA1B6498F5EDF6E0C13AA6839
8A6E28FEB3B0BAFB142094ADE159725480EAB33FDF27CC3291F8C0960840272B
4F8503DDB58EB2B929CE53EB5D706ADE5FA46BD28FAD9D861C5D5F0BC58BC526
CBED223A031BB54AC9678F502C21579BA36AC6ECDC5F4BF936EC6E3053A312FD
E56A9CEEC138A22AA5523B695DC529196A79F159CF0D043C16A3CFEB9E338EF0
D7B0FA721D7D11990750232C1F7CD5D02D5B14BC98B1900173514DED0F14C5CD
9EB6BEA35ECB115DF97CF787A7573C23EADD24CBAE9832EB5B92ECB4DD4B8C7D
BE9B8A3BD00614A35B7BD9E4187A61639608CCA03A3BB26BB18234A5285B5517
039417CF29A7A7EA3B97FDDBB02799805532216BB40CBA85C8FA2E0F3749DFF3
D8C391A5FDDF2318F6D505E8FA521F1ABCA21343E5403003C28CF53047A07DC8
A48FD12C2F3C802F3BB66A51D65D864AA64B5B352D305553A14C59576B6F5928
1B91BAB816434577E380D4407D0BE8775E19EE66E9F11717A630BB0422421290
360984C499D5C2F29D05F7F2B693302EB8A34D972A13ABA38387B2D6B713D97B
A69F270BE9F4B41D0555E6B3D969E12C4E871B24F614A6711C1164328D3D72B0
3A8D6902B2DC12DAC3EA760A60DA0196DD4B0E8AEB23739AF92B579720B119FF
80C4B4A973030A9F3040C921F3B82D67AE5E767C544F9B636737708255E19322
5BC60051CC6163A409D01F6268A5F3B6102F19D4C26C51B773151E91659F532E
4CFE9C334C3DD6C02669F517D7458EAA898572455534CD8FA54D592A9F5FB13E
ACEB54AA027C1B87380F9EEF9D557260791293D5BEC043B961C52F408C0C4DDE
1AA36C3648F930765D9FDBB769014EB777D03A2D20FD7ED73DBE116B95F80279
725720B9AD79FA4B7452B2C7D408B80574A7F25624CCB6531AEC9E3572FC29CC
7319733165F55238078B6D4120137695A8BE5DEC8383E556D1067F2BB1470927
993D1E3D64D048CE34560BBF01C461E2A4B946E035135D445153AFD3F9CADFF5
76D65850FC5E56539F80D585D80669DA11F81BF32F6FEE0C9B3B76B029D38F86
2BF18325E8505EC0D97934FC9C7639F8910D08634622931BF330814434F81A3E
B16EFAC41D22D1BF4B1851610A1DA0511605B28C540210C6A2007CA581759DB5
4792EFFBC27B3A08467E29D17E5932C4535B3AC49BB6E13C568776A96ACE6FCB
DD69667868EF371BF4BF97B49DDA9ED79D9EB46E2F96864FED2642FEF3038B30
5DE41226A5B4C20D441996D671C582A6F5E57840EBD77068C1AEE823B29DE32E
A6B940596E02251EEDA8600201A91CCD1E57276D48633DCDEB7F9D21B332CE49
82A6E069ABEAE51B0C1865FB6CC5B08C82819748A06CE285569C9E5D6C0736E6
2CD1CEB660425F040200EDAE2413F873EC6897373B2BD37B09BD7BE26B975CFB
5F1762444C53C4A36D6B6E5E4BA62B93B21B999853F22A141C4B6210E0B9359B
F24D2951ED1BC2195F11D414400F81FE0DBC73C4FFE3C7FCED238E4B22808263
B7D46ABD25306309068E2FEE876EC79521622318BB6960F7588E6392FC1E2642
EF241F866189CA8DC2EFE4A607C3EB4A6C06AD5C79452B6682C3FF51D628BE1D
BBD89A7AAB946AF7132EF888FA7599D096FC928471D2FE294C8173E82B508A72
60909FA02AF30D02B23DC346091B2CF9EF259737F27A0DE4D83D5A2230B46736
92A3A3E95A52591D79473418C956F4EF4A3C6D9969CC408705ED11B2CE62D3E9
40670C396617B3C75F93CD8D9565305EF1001F84DE922D6C7F37F67E16AC8F89
76E9DD1178ED7A8ED2A9A049F8D1E5D65A8E69F4E4E2C393803A98EED710D6CE
C48A28BFDA2C60DDF6CA62288E4E780F8614C7749C9406325C86B33CBAAD27AD
91C44C28F1D579989D8C3B5D6AD11641BCD431F172CB2FAA0C0BFDAD40BD3AE7
D647B0FFC92DC27F9E307933FDFB4E9E1B6DEFF59372DCC9947F32A40ADA05B4
5223A6504CA4D48826FAE6756223F2FF5B55BB893DA7CB1F0514DEECC2253018
13E4ECE6D689B0A72ACE4042849B0C4B472AF45ECAC8C709E28262C17C09C962
E4086836F54284D6DB46BA9856A16B74D2B54D31F6AEBC9645857AFC4009E803
348BD23C5B2FD805839AE2E2CB8CAF5B6C5EF38D62BDD9CF7072F2714E97474D
FA59B06B4BFC89854C6244F22A33BE2AB996C5E600D2C50D6AAC9E9CA9193C15
7D2489EF10958D9DDEEDECE4BC9503D67C1EB45580B80C4B1937469032C36588
D4CA1B5C00E06E6A16131CA22ABAF75E6672E59F8A4DD695E7535EABA02F6038
9E94F86AAAF2B7E9E315B157F8BE66CB13725A79EF90AD4FB0073FF142CFAF42
90F2BEFA619F7F1AF9F3739F063D8D05B59B2A9DF0298F4DDA3A462FE5DB0B26
5FDD57193B8E7F00C2162FB111DC4975DFE5DB602A670CA6E94C8BCCF83DB0AC
7B39632F0D42A777845FBDF9797E552D9371C3C780EC2DFD2F44F72C565C8D85
FE0396EBD46C873AE8550882F546655238E825E60A6402505729BEDFA52397A0
53B37ECC29D2E0AE5D110059AB6528318A5DC7648A46AFE9EAA17E79A2B7D8E7
6AFE62F4E10693029CE085ABDC77E8EBBBFC636194A39A5710951883B78DA708
C33340589D3651EDD7EB552302A63AC37031CAEE62F37E54EB76D9D9A73EF32D
DA31F78C17CB202849141A1F5FC0C086DF025BD411AEDF8DADE03A1883B216F1
DA8BD7F20B32D5A200D311A900BFEAA43FE53F100DE329F2992ED2DD8BE4396C
900E49FBC9B2A2F85ECF808E3F4F73415A620F8F1D9563FC3C614244037384B3
6372980DE4F1819DC2B4F825D7F1A4BF742436AC513D1A305823F46D95CE210E
A1EAAF30C9A9F83339A0A4E5F1AA194B2FC8593DE970B2C883F979D3048276AA
8C7A1EB9D7D6B7236413BAAFD8EB6636FC38FD9D65C06F84A291CBEAB880B16D
7DE7352BF4EB80F8512A32BEBC5C892A004DFE16DD9CA9ADB963D5174D481638
DCD31FB2283B5F192975AADB6E27FA797876A48CDB96F62E89B545CC8CE8B786
D388BFB00807370DA6328FF0DC4B537BE320021EC1102A196BE260790E2E6BBB
E0A70B1DBD9977A5F4C77183F4CF9B18D3648CE7BB8F77F789EB35A12862F0FD
4DA2F0B4662D450CF7019FE95DC80C6BFD57170F1DA7139D8696B56CD4E70C2C
1DF3554A064C537794568090C18DEFB980018F369F473498543F08886658507D
715A5B9B67A9395FD76257FFE3E90CB68510666968335DE2BEC50F225ABA2C96
965B0B13B24DC07C2F9B79EF66300B3F94722F0A1B4D56F6181F3B194CE8A149
EF9121880DA9C89FECEC969068C49F48FC558D01FBDEFF342863F4C0116BBA79
ED097433C16EAD56BB2B348C551767F4AA82DF1FBF64BEFE5CFFE13A631AF42F
AE660915711E6C2700B38FD7F4E03AD5CC3423246F420E2AC6581D9492566D1A
1B4C2B70956FE3233FA4C55FEC2B062491590FF01EF0F36E918D98C95EA27F13
B6B4E693A1D158ED9866DC5BCACA861674993D5658981A89D3EA8E8A31F4257A
299412A33AF840CC1982245635FA140CEF7FB92E22D07071D76B34DBB96EA9A2
85A80C440A6FDC9D19E8E4F78CD805598AD989846ADA1DDDF75353BF0CB3E744
4A286C3272C05FB96EEFA0FBCB6BFFF49506F54C9EA5C41B37AA1D7D57BD7C77
FDE66C98F92E3A81C8BE23BEE4B7EFC230F62253BC1DCA35EF77B27DF932D9AC
E5DB35BEA759F586AD85B58CFD71F6696F248F026AE03629275E879208F7C1CA
EE3BD2568BF989377808FAA8E35418AC833780EA85DD29EEC1EF9957104759BE
A0F7D0201F342B0E531BF23E9A7D1B83F2F97B757C512C8213DC07182269DCD2
01B947F47AC742393B2DE999D149EB7516B76C1330056206412AF79C472D05A5
A62E9F5905122865241F8B2E63D7E752DAF3345815B979BEABD9DD17F83A8658
63FF64AE30D976FC891E273C83E5968FE42D70A55C1B509D96756EDED39DF6AE
9882805CC6B96A3177A327C34AFFC18A62FAF64BA95B4F388237C144D16D313F
269B56FB852777756D2522BC0F946DC0425D8F374CC51FCB15600FF7A49A4104
BC29A7A5F1665721196CC9E9DE49E5BC7F4070BA732D56CE2A0C3759360CBA00
608A4B24045FB082AB4FFE58DDE52B3C7695F6B9368142FCB34668AF303A6455
B248FB866D74CBD24CEFEC85AD6FEE1DC312F6D9F3B9309B62AF4B98B6E94253
7CD9A3C06DA77812BB4EE9929C9CEE82C317D0F487598CE1C576AC85423EC679
AFDA95EF3F0F95A2964A9A35927640256B31120CF711DE24CAB53C624A206E57
D1460D9C3B07AEDF0C9286EC4D7E02795AFFD1B4DB520A27D96B1E7FD7868911
1BFA6B2D1015854A402EE8DE90B816AC700557576242C3771C9529F24EB9BB84
785314CE71EB6B2296682F1C9796565869F375D094917B3B06F1881AA13B177E
2901A0BF326D23FDCBF55CCD15366337D000007EF744EE23FEFA98E0CB042272
28EF7E98F739D55E1AB926E5F1230538D96AB2484EA11D7BBC9D613D96D86A1B
B481B92ECA008DCE33EE4B71C21DBBEECBD9D75C25B1DE870FB547D657B91139
CE999F2E8D53797B53E64D40555EC96E760C8245A1AD9F508C5E627ECADAF295
574EBED60685F10EAE1ED416C43461AC78FCCDF6A6A155F451AA39165591ACB0
5A205779232BD08C8A743C5A5BF33ED1E1A3310E3CD433D6E8DAB72E30970A50
9DB6A4A0FFACE38A60E2DCCAB7F5B7AD1B557EC5C1747D467FB498E88120CCCA
F6A701DAC4FE7AE6124C3B55C72742DBAD656CF6320CE66934AB31C293721ADF
EF5F67871FAD992447F76CF16F85D0A04140B68A8AB98C5C8DFBA2792D675DB5
74EB20E6CF526580D9797E809EAD7AAFC99AE3D4148B8FAD4D27665BF4CF6A62
05F5A26B783AFA95962E9438FC3B10239FC8BE780D3840DC67E7B0B3618E10EC
F17EE37A6267ADCB0646D5FA03AA6E60F1173DD50937EEA219B78822A55E3E68
45A4062EBFB8D8D035A9EAD4C689D1C554BC73218607863527A784D7657DC828
448814EB159950185ABE396DADC917753C4BB8B8E6121EEB51C5F469E6A082DF
B54CADECEB0B5DCE6F433F227718802B4160E0120A64C8290C8787638FBB6E3C
668B0368241F3610FDB36B7D2F75A0EFD33A0994B3067A699A58B5A6A5357A05
A637E435B72BE672E9C6115B344EA2D5D933D32558E8AF6DB4B3E71E62CE603A
87D2BC9A15811023EB8B0096F319EE08B6F9601E7EBE3B8254FC8B20BEF66BA7
AE0FD8755324C32808C36F09348083188D680E41F62060BCD025878AC44DB91F
33D815AC9DC3F442979405468D556E59FD44D5A10061680636D6B5FFB5302ED3
FD0E11F95F8ADEFF72173E9A5F2AB2F62C427E5BDC0F4855E2504DC6092E53F9
2783E0AF62957C5F79B80DA5C77C6F2E34212A72336D6DAAB732B3EC3376BD94
6A130EE4632E97CA65D1D2BE3644E84A35070D8E8B67E27B6AC4AB8254E49213
F3A65E698F73A56C086FD9F9CEC591DC8C5BB3FF454B2C31CB7BA76413412F70
46CE9105D78AB0114FFE3B3A960D601FF23C0F633E2B85300047E7660D2D7C09
2B45D9330265B56B5C8E29F71C9EF54F05F2CDA3F5E40246DE10DF2BF4DB56F9
758591EACAE95CE2BC2591A87D0CE5AEDA30DA4F11EEEA1031376185743DB163
60A1E8B82FFEAEBA6EDEC5FED81176BA98DA543F118E0F3FCD26977D99755C78
6C272911BE79350207B8546389C30A5438CFA2F9D327777EB7BD6598DBAB7F44
A41BF84B0A2C318AB1D867609BDB7F71098DFB74D3B810AA98F71D777B073248
9BE2D35C7EFEE23AEB757205AFB143A101187190F883F6826A2D1500102699D3
67E66C73D4E7A8ED8974351D769EDFF4E1671AA94913BD7DECDC3963097A6025
CCD2128ECB5518DF8CEE4B9E59CE2420515A0042EF7592DEE52B8FB407A3B343
C618E5D060218601080A9395F9FCF7B887A3C165A9ABB7228B1DB6D1FFAB59AC
26558DC3FDD0AC5DCBDD30F5BAB2D6F3B11B98A43210DDE46536EAEE3A6ADA20
C9BFB9FF931ECEEE556BCC9C4374EA6B2CCD2F8B17D2DDB83815E3868E2F4F86
F53BE69F3BBA3D086A8E6717B22B54C2F289AAC0EEA7F800BC86CA8D7261B666
3A11636472F5845AF507C8EBA6518215D7503414250BE7E27DEE035EF7522B4A
A4BE522FE66353CCF0721657455852341A2636E5F91048125A7170E748B5BE0C
0706E4027680F9CE1156EB4BF5E50FECAEA7FE970E50BBBE2CFC70432170E268
6EFC8E6DB6980D032F02ABD0B8EDBC8AD94AB806E96E4BE81DD662C6717E289B
AA748E152A11BAA2FE592ED088AF61FBE6210FC290D98263326589DF0A092425
19D5D2FA30D939C1B68527550413EAEF214394EB590AA8FC25CD27BD69A7BAD0
FE4EB73C1745174A99A2367CDFA06D801B1588A55CD8FBC5B1A683BC4E56C48D
CB22D8F0CA6C633BE68E5977EB3D88147A1B96E3A389F5AEE311E7B3B067EB43
7C6101AF5B4040EA079E42B7F676EBD85E5F21FA095C1BDD305F557DCB3E4017
6D66D31F4B4F23B1370C6929AEC2009D38F8A338CA85BA749C7CB1687ADFFB0B
83A7838452A6F183422C09A870AFB47F59F2E66F7E82EE851993F1B4BD16669C
E1570BA2AB068CCE168552299361D62A2BC2C0DA48FCCB892CD8541D4066FFB8
8BA2EE4ED4246CA0155DFB3DA0CFC82F068E794CB441B2B9A507D9AA37DA5DDA
6E21FBE4C835B057D5953BA549C0742D661C8D6BA1F78A6A6A7ADBD6EA7163DD
1362A8CE7A17C1064CB861BAB31D066CBCBA4B3FCF3BC8D6A3496230AAF12325
18D7DCA22A948E88B3B323E0DD7E5B229A8753CEACC461027E362577738F553F
81135829F9118F4BFE20CD51190A27598726330F83CC3AB14FB241388EA7D4BF
DA5D2D469B7507497AA5676C08828D7CF593CECFD951BF6DD218E148B08CEE0E
CA2F070C601E09DA0B9690C4E3D619F2E4EDBE77149F7CDDEFDF6AD4BC9BF80F
3188A55927B63FB6F7D5AD640A25BF742A74FF8C3B2C04138D6BEE4885F8F822
4C30B0E7AD46A088E256407A554EDE8CB0A6849122E7730C26A70C09FB28FF51
657B8A929CD02CE750FF10D3A249AD283F5387224270F8133FA299289B2603D8
F8FEE58727EFA4AB79C5D156F6A37F088B4D8AC9C3ABE00A3D3E50EE934563FF
9416FD0CE199660202304C11C8E86A5A846823D2E414174BD2A34A2CE340E6E1
AEBD8EF85DA7D3444E6BAADCBD795575590EE9F4D9EF0B00B947DB36E0A63222
6FC056E6378ED2F946608D454434B95B7AC40FFE8802336E38B6572992B6C7F6
E3A9C4768143FC961DF131B7BA764E5CC20F3FF194C0CAAB6A329D74455FF83D
EA9E8662C77024836D8865ABF6796B105DBDFFEA47AA88871AAAC76AF9209DF0
314DD6BBB3549CD557CF4DE95399C560D65DD1CD2ECB3FC35D8DE63DAAFD8961
77F1F70EADCF7E077FF92CEEE279D3AED87F7E9DB8862B0D4909282D49EAFCA9
76E2D25DC713FFE395E68FC891329882A2639575674B2A47C068A4A323C8B06B
4FDF37FC4C6C7ED97BD15B1763422CB0853BA8579165C6AD132C70D61574E96A
A1069043F4BD534504685156270A536E5DC0236DA24612993121152E7A3DEA03
C466940ED136F05CD2E3A0EB810C9CC36147EA185454C561A20205E725588F3C
BF187360F7F1D3AC695C51FE0D4018BAAB58219EF81E52244D9F56AAE7305BE4
AF113EBA32128FA1A21D5CAB82BD8C135A33AE227BF44D744C52CFE5BB9FB440
8296C8378C859009C0B466723152A70ABF8BC6BBA1B1812ED2F2CCF1DDC6FF15
3BACCEB5DBA4107593EDBBEFF3B140B7CF51BD51B099045F1DE1E8174A8495A5
73F01807A82D6A0C634658F1BCAF95794DB9EDB2ECD79A062243ADB3EB7A84E9
A79FE1F8FA4C4905C482B190C7FEB04E13FC963C0478D72B621E6031763B4BCB
3721B6370725CCF2BA061DE84855EC90E287BAB7D34EF99AD642B738312FC6F3
00093EBC7666B280E3700953D590A62AD8AF0F977CD9FC6A5B91EA812BF380E2
D981F02DE8123781C31E557D56A54FD3546B5ED5B3EC66EF1D37916398FB8CE9
55E12D8A89ADEB14C5A9F58665A2B2A2399C57BE1BA0D45CDD151E01EA0F50FC
FF44DE8B99D6205FECE23D72A9F61619E09C92987DAED87C47C937209B3DDB4F
2FC6DDE67D9ECDCAEB8D79BCCF6978EE0EB2CD7601BD40620205B40BCD461330
1A72CB029A6DB10FCE7B59925A3F5FB7DB35B3D7944A945314B7F41070DCF646
C5E9D3871CD89B161E015DD73C182E1A32153D5C6216D9C9385A18202E78D9E7
ABAE4145C70F9B59C3CDC8D90DAF45F9998AA0FF1D6E807A04D43453CC07AEC2
3F393D0F3A6193A08272AD735FAEF62B15E735265413B1CB62F544C3791E2FE6
2B0384FAF3DCD6BFAFA574C89BC62032F460C2ACADF218975751327CFD260042
AFB4E19A95C7D9B71C7D637420B70C1D8D9AC162A7229546436378570253F931
4AF146E6642A45F77CA381B2031371BA1FA319D8FDF0131FA793AE3551EA5CA6
AE6961E7DE6E547211BB0160372E4C019A99361293BC4C7EE0C09F389FF828AA
7585F9B7FAFA718959D9C8F70AA55662D112772F72C3690F0D2E596A55C54C75
00FB8A600F088414D8992ECDA0ACC39AB210921D0B092F66BF8B28CC148252E9
0F6E7536E42E562D803140EDB585F5EC343516991E7834FDA0F1AF41BCCD590B
AC7B0625A4E70B6860AA9ABE07CE203B29AD861D424036263E46D03CF4D270C2
C6037CC365F8B761A85276F19275DA39E1D47F152AF583CAE41F7F7FE0AA3F1F
7DDBF0AFD0E78C357CFE3565DAF031EE25D893676DE5025B169A56BA5DB7FCB6
081B9F3129D1B5EB155884C30E60329549A6A25A26E3DF4FBF136DFD7EF4BB6D
14D462C32667752F655D8C91CF08EB5B1222A0043B001FE5C89C3AE626CB9945
AA4F8F616FCC76E4B0D7BA8C76364CF6D4B419699E32348310D7DDCB0F249FF9
6E2C1310B087F300BDD82E4D6E2C479BC9C761571C27883C79BE00C41E77BDCD
4958E166EC99FE60AA5334CB63B98D4A88FEFDDB9C98773585EA5E4D316AEAC8
CB4182A887EF4B2D839D5E3D6FE3C16131FF2A0FE6279AD6383238F60ABF8685
AAB0FA6181716DAEF1BF8B103EF2EC117B7B970AB88FAC5CFCE312865B20C7D9
B0ACA5FC06EEB85412A76D59C1DE472490624397A1A8DCF4530A89DF33968A0C
D0CC152A769B76E0C0329C0FAB54D836A5923D3E6DA2EDC2FFB0BE9CADD113A1
DC51B11AF5BAA7AB8DE0B44A701744A6A5FA8A32C70F2B0FD9F9B61C3966A802
42104407DA9BEAA7E70B4C0C5CB3807EFABFDCF9F836D1418EAB4CB279D57D90
5123FC23D46286CDBD70C1E35DA20959D7FAE5D4A8967A0317329CFC4FDDAB74
14D018CDD671DB109D6A9587CD6B0C5BF54A30D4E3072F05FEA3EC21440FB66C
37AE95ADDD878BC2F894EA40682F08A8DE7F5530D2772F2E58A2BB78B981277A
D8FB61E2F17D2C87D95A094415358CA9BAFB89AFBEF2079EE97EAD7D86359946
F115492C8F03055C82927FFAFA6E43AB2420028B548C36DA35508230C17E595D
0E697FEC6C9A25B9D7A3D342F765C725ADD7B0D3769CA55C5BBF59EA72018DC9
C51E46955F30A76C6B243487AE5A649D850B6E2630055C3205DB72BB08EC68B2
FD291F98C0B5DDF3DD20B1C4F394CD7FA1132EEB0C7442A63B99930B70AF8F86
CBE31C4099C3807A01337FA4063B87047466804D6AADEA62F93032B68AEE779A
E3F1257DF466F591816455734C84B7E695147C082A5353765C789BE6E984EEB1
74173B7547D8218353614511C94D025DFD9425EEF795DD0E9AA31AB7A2A906A8
91187692144C02E84D49BA47846B1A866351E76E7DB866A2DB1B877D064467A0
0156D5199500BB5C18BF8300E8B9ED08ACE959392226C2D9AF996B8FD8C88367
330901C5836918C005010956C520A7F55F936FA78E2DC624B2C253F76778698B
D1510D5092473D730FC3D22EC26F9B2761469B0EDEE8BA22F029985814972B53
ADED366BD57798F0A499C68E97E7D0CCD7A2511D1D6C857F8F2867BB8860B336
478C35E61015488A6431D542F552F40503BD7F3E05B0DE897990729C0F49DB6A
E178D0E993DEE8EFE8245F07D0B0F3A166C3C3BC5143D103175D288DA1003B76
C9A185EE6A8152A31199DA6A0329667BDB2B79A6C97B54B8BFE82A1E6D7F3FE8
983BDACB7BB8E5682658AC6F300ABDB95B176FE854858FBBB993111FEF38733C
3527515538016F8BA6AD48DFE3A66FDD11570C076AE43A1421C97C1CFB66CB45
E6F66F077AE8A23C751014185DE9AFC917F2D783A0838DB21EC2067FA0E5D929
236579DAD5A6BC105B8E6211C3F26F04271BB84AC9AAC072FF6D5AFDC5A833E6
1CE4EDBA6D0DC8022933B5BBEC2150F5E35BA8BF9060CAC33E342975E01E9401
FF961C4A20C8F09061B1430C204D4E7BCE601FDB838B2EFB86A7EB3D9C1A8F97
264607F6FED9A3EDD6B7457368EEC9C3C172E6FE5357807A77F869A01FB48413
DF7821859BB191D53398A26D610D53AE6A1EA9881EC068A99627ADD833BCC4FC
1E1CA352F141B90627FFCD74B1477B93807D36B8C8B29B24B3EDEBB7657FAA64
9AC10C5BCB8A96755A83EBA119629EAE20D05D62E2F3111E7091BC9B91797D54
096FE0A06C301E431931F9828719CC0F3E2094B31AA1E693DE59D60E62907275
43507A36A01100B17076AE6C6FF5F775FDE4EECA7E622D460701760E7495135D
6EE1215286E7584A7441CC0B724110B2616D47D0EDF1478DDB4AC917D1D7E45F
B314649E1B48EDCB3ECE7A948F758BAFA69AF85AA924858251438F05B3EA1F68
6B35F0072DCABF52B08FB40A03D6A06ED9890104DA2A575EA45E16DA2E1FDD8A
45B9AE2ACFFB374247724A3901FD546D465B4A4941011516783E6083A9639E04
0D0976F90B757C56EA776CA388C0ACCEC903E9ABCB6ADFA4EB07AC36443DC19A
5F3B19565F1D434F1B0B6E1EE0AD2510D6B21D5E445748BF488E1D77C0C11DDA
2EC873CC2BD4C28604E044677A552757FFF7AF3CDADCE2FE6D5B7E562DBDCF13
F0603F488A2D938D3CD79461408ED21846E10838205287C2ED1D651D3DC30222
06061E0250B09A05CF198DF82D4F2A4EF636A64F79091E373D27C0B88AB5F039
A24FD0F31C58A593373DAC87127E1D17F804EC0C1C46B244BB13B3BA36E08989
58555F5218EBA03EE4F33D65E7E72867360CDC5978F6EAF2AA24715FF2DDB265
C44F18FAB825EE58286B7A8C8FC175DC6FD9A0DD7BD39016B7D3FA7B5917F9C6
00A6F211107A589D047118BF18C3723024E23EED8BF3D734E62C1E3E2E2BB873
147AE0CC255E05EB65219A6EE6BC32FE658EDF0883371DAAD3E660F09D520852
34B9E716D79199A4028F1AF8776256C0E934F6A011C4183BEFA5424D243AA8BC
7E87176773002363255E7495F8817712C7BDF4AC84CC380D71C1ED8263707E8A
DBB25144CA89750BE5BD6543BEB9C341427D0A4107DD5BF9860217FF65747517
4496299457BECACD36404D977AD9734580AB02B561FF49E6D9BC9858A3ED3CAA
1D77CDD18D5CEE544EA7E773049D63C65BD60F8EA4F783BAA5131BC332D6C13A
8A7B92514B6CD803081AD247BD97F90508559D552475FE671E64A008C89FF32E
4F2275FE21C66C1743E2EC204EA0883B4272A2E6FFFE12A187496F1D6BBE294F
ADE1BBF4EDFAC6E27801964CDFFFCBA64257AD60249D7EFDECC8DD734D9BFC4A
3D813CCF13D5DD6ED91B33CD5242B5037208B1CBC9EBF18103447074EC1F556D
79D5B248F2812B349367EBF83D7E1F335DD11832D31B828D9A9D731D50FAE5F3
22EADE40E7595551DB4A12C7F09BDD64FB6D29C60B05D141EC9EB0B23BA7FED2
501CCF5E9DD8D6D3A5DB1E28A4B5BEDCF9AF7F44058B11178311FA4DC6B27A1A
5982211AAABBA904798240F0144AEB43F32B384B76574A5099E41C1CD8D82F2E
F290FD06B99749317D83B5F861455D446B43F3A041C6A1EB14A508150835751C
717DAFF65D7FBB44B4956AFF8512D795E77ACBDE9908C3FD76AD588387E28622
CCBB3CC1853E3791C09476E6A12533F0349345E2CE5BDDA7CB599B4DCBE5BAA8
0366BDF9D40B17315A4540A35CF347DAD4613F91AEE64B11F62A03F3CFF61839
0F67BF16F9B4CB43B26AB9B8ECF42FA5581263917DC85604DB4B0AC6A2D31157
299A01895DDC8D25EEB4F8C90170E014FE8F31A5FD35CB74EF0FA13C6DAE156A
93AD2F241B5CA8B55BF28DBD16720BB1C42C9A9CBF78D8B47E300E3F5F6B8B75
060C761A63AC861E5E748035154924F4739C650A8EF8D238C73BD6689A0657D2
AFBDB6320CB7B552FFB89F11EA22D02AE6333848C96C6C4B7156FED518164901
F83DF3BAA6A0ED3E1145BF196619E3F51F5EF7039DD184011B7B7F6505A11E46
49FE1B92394A21568AA5756B2072DB14584DFAEC37FF325290DCD493848923E6
0F7C67FA6AA8062594F122A48C5DEDE10E3AA6696E337699AEB3705F20CFCD66
7AB094E9BEC4B83E7A2B47C10C95FFFF6F55524C8964CE1CA8AED3E08B7EF5CC
9B9D0B17C5A2FFBC6CC49221176A15EAB3EE2B11BAF18374DEE98D644FAEBEF3
22648F56EA195EA6C61D437BE1DDDCE4B5F3B3B3B71C388245D8BF68BB48DAFC
D55BBDBEEC2355065FAFFEE86C8BA72ED4E9CBEDA132F5662F97BDC23F7979F8
02D54822CCEF7FBA933C3D9E96E3E09612F99B100345D53EDC134D23DCA5B684
12F59FCECF6F9848B491C64BE4F4D111C5CA3DDB8733C788FA12D3CAF0134F9E
19DF8F5ABD86CB0F8CD705E6E8149222A29A3A4117DDEEF5925608991F06827D
0E74FB1A220AD14E1EAE70CEF7F489BEC25D3BF609541CE613D1695B4815384E
FE20C74BB62F8FBBF658F5D2F16112C503A95B3A733E367E50FAA92A5996F8CD
290E2CC612F86A496E7C77173A0CDA0BCC46683C239700C40076114C1C030030
0B9EF15A312AFFAE9B89C59659982A3EDE3CD408714E8E7C016ED719D6A4D045
FA24AD8BD6F278ED2A59D9EE46F33362634F9758827B199FD071E8B6E9E3B08F
88C9961E81373B96460077464C7DBE6C76B88F0AE2AD2EAEC84A3320B7ADF8AF
A0646A4031E62ECD345B44FC96D08126FA6EF4AB5CC7D6094DD71174DC542C21
E5BDD170408D11B95BB8DDBD96A7A874B7A19C68F4EB93729D362EF1C610E85F
BBFC6151D81BE22B15AA9EFBA8EAE43C63EB7DE0F5AAE4F89C7720B5870A76AC
56032E6B45D0B3327DECC621D9569274125077092505027833484674C9ED2EE4
4D10C0CE6B2EEAA9BD12319EE6086844117D223CC2C4B14C8E3E833E87535CC4
92B39140148E7AF8F1D14B07E1C7287C5346F0D5E3D4D99D9997BFF01FB5C81D
7206C438D8A4D6F7743A098847CB2050FBB44FF8C272FC1493F1A99DDB2E1FFE
7A682A6C029B0F91E4E7E8FCB04C4A950D0FCA179322EC3F5D0B7ABE5C9E7302
EBE72B7927487B8A16E97D3649197FB181E187DCEFF026052802E70BCB2C63BC
975934F76A9732F4F4AEEF704A5E8F6E9AD1631F9E304203D29D5CA36C73968C
2409AAC3DD643E0EFE1857807BFA0B995E5E7D09D9A6DEB8F502FFB286BFA301
9BD75E81CCE1EED39DFF60701F4F7C66B61198F8066DD493031D1A571F17D3CF
44630A285F751DAFEDC3E3D3D51F61AF2B1B68DEE20FD975C9221E3F45BC7A3B
02C70EB2241616511FC57DC14B9C95A8AE81D926DBB4C8746A26D81360123676
D10B7C0888F4FED7A176AD844E5B0B6D8EBFB873BA2A81FD75714AA80F54932B
BEB1A47259A5768CDDDC1341677381F6CFFDD593823AFE8AB86284D78644D4ED
A33AFA53A886E0E9D7D7C1039CC7DEF8CB62D4FB31B6821B56EC77EEA2B58C0A
6816DA27C0E824554C74679BA577D3386B02C3241FC2AD10500FC3FA0F5FF58E
EABE4D126337C32AEB10843D6DA0632C00EB13BA12FD215FE19A78145712D82D
DFA79D31F0B440C730D57410C65ADD9AB4FC9D8ACA092C7B04842CE2C62DC6C5
043CF71A53C9B511157891ACFAB097907554CC1F007775DCAD204D8AA394F331
3F4A9ECE12051911D7F595BAA1BA5ADC0CD30BFA3CA4F4C62D4588F94556727E
6CF23B7159758B935E5C9BD846F1F5071680F5B103E0C88D207F7B36C509BEFC
498DBDB69976CBE7AC87CEB075D50125D881BED19EB566F647A9138A961F88E8
7B97AA26940B2E6DB9AC92D24E23F8DC9FE5046BD861786E1C5E267DE00C08B8
D586177DB01417ABA92E8407767090CE385593817026D0385C081C2AF5044930
1D5A91170DDB413969F57FD2F0F97EBCAF532C016371D7F2622BC20CA700D084
23FAC40C466C1EC07B93B15618261CD06669B14A8C27910AC00406EDED02FE00
A1B25F2BC121CF54FA1960D3DC32B871A0388CF8B31D98D8820F27171867A0AB
9C1195B88B50002E380FD221A151FC46B197D360F16E40C8262B71B7E3DFC213
D8BE36450AB6D270D02DD68CF553AC89685E587793117D111E4FAA1151905BB9
0BC60040E7638108E5D56625D0DD3A681C735E59A02231BD6278484C9EDCB14D
FE978F83A5D19EBF632EA285E885EA15CC86732E4ED2669018E13C0F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA411984C107C8FD9285
F08FC3C879AE6D42023BE0E114B374F049F75FC09E974E64A63E36F76D0DCE3B
3E57F4A1C80AE684E56726F52F4A49A022808893BADF86ECD0EFEACC9F5B7E84
1DBC5A753D3803C89C438B0FB99CAF607B7B16433C977215E7F78D80C54177E7
D853C4EB05C108B4859A21AFADEEDBAB163F8C1C822C4DA3FB1A29EC3ACE79A8
C5A00293FCA8CAD6BD2A94098E88D45175D4D9A88D0F77DFD5C14FD6081321C7
AEE0F7914B79B9ED057E292AC7A96CEE551D96F4D85369D2B4167C0A622AFC28
80C6D6FCF36412F8EEC622F2783C9F1A0403E9A5D876942803F08147525ECF7E
0304D3BD24256912A2ED3C59B32CB4091040E21EA8F9253E6CB7433656B87E1B
0A17BA09B89DA54E89C36AC72560140421800FFBFCF4372B123AB0EAA5A28063
EA72DB6C8E32FA349461C1A8946B78E05C110976E5B4B81BD89C82D81AEC14F6
8511ECD14AC322A438BDBC4262A26D679ED4D87F89B2D3FF1A88AEC671EC30FB
4DDA9E1BD3A55C4D59BBFB7F5EFB232FCBE3C721D8D181B02711EE2C105FBB16
BAAF98F469068B96F7ADA96E4C628D450E7E1B4025089EDF05D020C458C7F3C0
A9E5F676EB11E606954B3A3613D4E1DE3727C04BAD9177A42914B371F4FECE62
5C47EC539B20F4FCFB72DD0EF45CC71FFA185F653F299CF0858E25008D1538FD
4D2748FD791113395323560E169AC68D884E15ACA3BA6934ACB18CFB0869D655
CC9E8B7B2A883E868B7D9AB5F1966D7364A38F999D57EA93937C58C1343F917C
4B77C3751BE6F455B48BB452D8EAB1CE63B736201B598CC9484A18CBF2788133
19FAAF6C66177F200389C0A6667DD18C92268958F56A3CDB6D7D866B6DECEFD6
F0A675F2A8ACE261620AA95755D6941EB85166FB6E723C0E0B8B5F6B4565ECB9
73DA53376E96B94176576F807AC241A8A79A363F9834B3B51D6F2E1265B5B05C
531CBCF02590E866E9DFD5B99028D0E71DB7D816A29191433F7D9CAEA7484F17
687D2F3900B9524B578BCF2CA6C2E6624714195463EDFAF7DF63DEBEBF603B63
1AB2F750D81E537B3FF2B21C4398EF3C4DAAA73D2E9E02B7C7F7C1477ED8B108
56C476FBFA10D11E87A61DFE3103AF0DAC08C4A82DF0EAFE9AD88A24905F7DB7
DC8097C0D9B0FB9650B81D6C955061B4CF384887BA2A9A504B2A0A92D4EF6EA9
60ADE0663431603335A8DD49D99E769BD7385458EA8BC86B3E8F0B8C9F796139
AF50631A0D4832346AEEB1988BA51832A8F28166A3DF8A725E6339ACD102D12B
4C0FCCAFE83B30690ED44E2A51E74C0DBF0DAD86CB36885B74D5CAF5BFA609EA
2FAC998F9E08DF927EF4B23C07EDE4EA5BEC2AA85224F7C29A671F032197BBC5
EEF8FDBC70A40B5551A06499BB39794CB9F4EDD4D1AF9D34E4295AF83BA1604D
89E7D7C3A2511C0DDEB5233387AE473351ABD014CD380CEF7BFBB68CDB7C90D1
C34B6BF4F19CFBB246A971A0935816DF89DDCA89B23C9B25E0470A880E6B7E2E
D47E8E182F3BC9D9E7EF4900C327E20248F7D1F709489567B329290C22246FD3
51549B2FE9F545F713BDE7A2897E69408B6925AC50729A5390AD5506F3E47F77
E7D5423DBE0776FA1387D7DF0DCCFBDA67F6A8A740628F8FC7B19054CF4917BC
54655EBA7CAAA852861A25CC981E526F1D803C93B2A2A07D4200535F51BE3379
AD85E97DEA7A05593012814617BCA0F49043B90BE671C8E7997167E57DEB055B
D5830ECF6D6772E5E77D6D2AF4447273969913AD25DD44676FBD2AECD4004E6A
3546718DC369D9C0F1A3DC5248567195DA50C4BDB1A8ABECF4637E52C0CE5330
16DDEEA851DE7E5567C549912D4A5AB957A6864A7656C8B578CD64BB9C55B200
F32B0763BB2B8842FA5714AFF9E5F519ADF4936D2D0C1BD6D2D64EE1C52A29C6
D3CEBD747AFF17A6AFF908C79C7F06A14D933DD82E32144FAC0F0E34F1D0ECA4
23C805F09220A9BF2F4841144E5B06E3583F5C997211E5081EB8307EDCC5357E
6ADF9AD8C35E6A43B6823C4E3D2E01A09CCFDE6A24BF40246A18A8D921257BE9
AC6BF7CB0799464311BCB49DE285E7CCA8EA2BBD321844409FC9537DA077CD8B
62AE6FE12DD1DC46B921D8BAF03715FC56E9BD6BF2CC880FBCDAE2DFCF164BB9
44C5F227B5BB9656B4E4DB32DF74EEB735CD1C98201F895AB94234C55AC6F42A
2A420EC9F149FD6A55F1A51A895E285885972113C678A08DD533DC0E8D85F9DA
FC5FD842F417265427E0F5E3318CD532395FD31FDC369BA91DBC1F1553A8769C
89B69FEAFAFA01CFE20B5876AAE7AF8BB5042264B6E88BA8C86C0D95192C772C
129F71427E98CC2ECABE772CF6B6F6F3383B80D637D761A7A992CF58188FB0A0
4FD6C30AD69475D7C8CEE1255CCB36DDAC9B974D3E6419A084C637858D49BA7B
27E4904BF8D855940AF0DF3BEEA121BB82DA620B2E22056DCEDF1081E83957FE
436005068444516D156D282BB7BDFC55B4522C394B3A544159893A41D33AE8B2
BDCC9705D1EC8848293ECD9599CAADB5A4AF32F03D13289DB062EFE9E62D5A3D
EC03D1F5A40154E8DA0E65975F32FEC44D28C440AFED971B846D770231C30451
308337E1B50D361D971B735BF61EC499EBFF292FF20F423A30C79C5CFA483AF9
9DC1251FA8EDFCF139A86A88DC3E1A94A0EE0C23525B292A271029E3285A34D3
0201E5F48DDC07E52E850772EB210276CDB3B1DCAA06E10F28A51822A85F5258
2848C432424122267304EC5799A02E0F53322EEE450F6DC39A4F03032CCA7A83
2255D2C3154FD5480E88E9BEEB2499BF34A46C864A443EBAC31D44C06BCC58D7
37F7D239EBE3EEE1A4F981B35F821F57267142DCC4079C915A4D01807FDC883E
15A2016CE4D853093DA735DB67694569E8A3115B94FFCF3B201FB213854CB511
75B088CCFBF6EEB46D7BC3B3B23956CA9AB504CB4FE1C4F7A53B8EC2FDC7614E
23F7D328DB309EDF140514463E4AF6F8203B584572BFE5E7A4BBE15B794DEBF2
D3BC8D252111E851D890730F3D2C910C2EAE8EF9A3D38D5B4C91E6F774AD9EBF
63D76877DCB7A0E54D0C2E929AEF3C80C7973FE752E04F5D0031F9A135E9C9F2
1A4888036E6DA17D2763E1E130164942DA5F704DE35D983FFFEBEF4AC76A7070
F1256E6DDD52B18DA4304B1B63AF73CEAE3FC2B4FEECC7F8F63FBAE0648833A8
A814E534CACE45C80493B3ABABB911186600AC62FEFFF4F7754C4B2E369CF06A
6E34DF084EBBB3DAF7B5D21F6CFD57C2312EB4348EAF26373E93142523E57CB6
1535E56121B537A578FF00A40E236B7BCA3A83192D97B128519E4CCF28ED8256
11AFDBFC032CCBB03DEEFD2562E27CE0FD0ED1F6F159B9BF0AB644AFC52B5A86
07607CF71D17E45F49AFB2D3E9CAE281B008BE656E4B2DB8C99A27569F361F1B
DD0190AEB798B8DE4AF9F7314B37ECBF5CBA46161B2251B235512E1EC659C980
69FB699E5EF78ECBEC88E5EBAE0BA8DB3BCB2AC0468EF00B3B29ACF32F3DDCB4
DF8B5AC385B0E9932908C23B5453E033BC060B2A22AFCE86CEDA16D910EF056A
685311FA540D2771073186E2284A9BCDE26A5D0B2058668CA6B44F43BD37E570
D6EB12BBBAE986D79303CA403B7808A50680F1872B0C648C191F49B0445E4D91
72E115DE31182F1FD33DCC71554DA8371698B3536CF6FC0B6005686097540C5C
81A8CF53AD64448E9130C01AB94B021BF1AE7F706A40F0BCD6C3905D07EEFCAC
D74368BDAA7C4EC01F1349EEE110229CF719EA9142E8C586824F7BE0C14F59FA
976AC2B1F1E47F55543F8C919BA4A31278CB98DA8A80553F052F97E553923A5C
05C122A17775DC54D4946442B8AA6D6837C1613285A713A00574674134A0C299
343D1361997B368DD367703EDFE8DC181020981DDE19E883E116C42005B99D58
516F224405E69C7944375B5C6CBEBDBD569AA5817CEF9BD0AF4EAD2703F57CC0
04FFEB09F562F0536A1FA91DBF2640628BA4D6D6422C2763EF171CCD22DCB473
B8173E8F9133A6D45FBB587A1C3E18C9A4CDAC48A6AC5F13A0DA96A502BC592C
6A9B8E2DC1981D3904F85D8EEC429642C96F6D3C578E82435E2CF67DE36BD013
A05DB41B01540963159E3EFBBD3946915FDA3D82FC347F0D24314DFB378B7F00
1843D13C470F63F2F8A60EA6030C5280EFF0AB91AE4F207B83F91C2DF181129D
EDB9A655EE349F0956DB6D6268C6CCE1DDF484E1419B199244E016A893A4A500
57B21E4A9206C4A85E362016840676DE91F62737BB54C4AFB0862855E24BE97F
A35DCF80C1E509E8A7490CBAB75084B1CC3E4B2884F0B424AA60711B28D31C75
5C6C03BEDD767E6F08FD8E3DC4C7097E4A0295CC7331C64BDBA3E59694379CFB
642BF268D53A04DFC989CF1D5B59426B667C6E1F7C5567D2BDEC73EC3B8308B9
4DAE1C20EC756F18E6D2127310A056B151C15F895BCF076E4B6F85A94D62113E
1A0C7E8E4506AF80B17E082BC82917D167A542ED2D910DC4F55B4ED549298215
947A0C7E722630F56BDC0CADBA8314FD7BEC67CE8C5B4270F6A9C9A6CFEF0C64
640891C8849017E6E323E5DB6B8BD378FF72298CA4CF6AF78A556D94391AF95C
BB26C1CC949BA089AFAF5488D4B3F5B529A5F6F8DAD2B94262A26D679ED4D802
77580EFD070C796A7E27C69CDDFAC77F09B3DD6A5FE918CCAB0FFA2C42E085C3
F897F0D49D1161EACCC4DE5819AE06A2718EC6D982C26C96439392577194BE04
D971C7226D1B890C67186CCA0576C1BC1A6D881BB06CD0E30160BB1ACFDD2E70
DC54A2A26B1D78582A33F532481524AF719DBA42428460AC283786C0E4C0F45D
A2C8C78EE3536548F318787BADDD084CBD56E880179B0382E48974DC041A8F0A
82FF7D86251B59C66A760AF36EE55913D53D235A93B786AE67583B344897ED0A
EB2E80E77893FBD38744296B82E00D7177A7A4311FB05079878AD46DBE8E206A
C0F760B2BF88900DB7191FBA35224E90A8AC6287644374D8F4E66E05A69F685F
1F909AEB88B0D754325A489BD8BFA8AAE4D126F73AF85D4D911FC16B928D9645
E72A919C0EA9398CFF7BF2CB9697D9D569874F2F3891719856CC67F70E80C8CE
EE3E3153FCAB302D18DD48B1DA2AA84894EF602CAC30E4FE9E426A07770DB73B
CC0C763CDD36275FFDDC230EE026A1BB8D036F18CFF8D23E9AA051095C9B3870
4024072C5FE89BE9DCCE26E34542599D23FBE54A90B12646B3A5FE44632BED79
898DE54B5F27467DD9F6C4238A71C1F3511F227119F68C6EE1445306A8B8A078
28702857EDDDC1030D19928F2E260434DA3D545940553419BD119D07F29C6889
396A4489D046C765DB09EAD67C3008E7F5A58C7ECD68F3E37E5F34BA6B7CBA6E
159C3EB567F2E92567354CD98440880CF5031F0B2E1CE8EB7069C9E67E96EA82
5EBBA92EC6210B4F1064466DCFF82529C7CE1504213EBD9FDAE57CD482A24B00
347A49497D48C8C7F268638053911B05AB6F7A67D85639FEF1618EDF8B9BB566
54411A74A23840473DFBA2A5D609A4B18EF4517870CDDE29515039DCAC06E1FA
EC05273BE0BEC782AE5B29D62ABA4BE9948E84025FA69166E691B917D42DDA60
F38DC55DE418D9573497D3911E90938BD3D92EC5CAC7416E4ECCE80BE54C7734
2B0045968BD0EF50FC3859C0CCD704BF425C64379E8F07D1B5ACF7C3A3566525
9A4402AA484B193E1FF52FEC7C78C6EE8910BE3AB1624D36C6C0F3EE53F3F6B2
182D887C9670F28C6F095910B656D3ACD7A98015D7DFF9AEFEF7BF3BEEAF8F8B
B6445A99DE978B0D016C62BA1AE13A900E369D06322A3428AFF7CC0A5E1DD50E
6A42885C6207D748A491B96AC5AF66FF278D296FB8094DF33E7E363122800305
F5D076592306D8BC30833BD11CF1198C51BE09B56C6EDA20C9BFB9FF931ECEEE
556BCC9C4374EA6B2CC9D51EA0372E799AF99DEB62F1FB386855F555961A4763
F4B70AD280D9197054727BA157B2B027B791FC039845B3D56E7494F86F8C3939
211D916712A414BB10FACF693DB3A40449444EEE34A923562A80CEC3AAC0FBDC
EC1FF08F360D69D0102F4ACA897F0502C545F92404F6B14C4B5F01D8C6CEAB8E
B39DF414458FB31D46EC76A522D1DCFADD06EC512E1E3DCA950F0BF9AB2EC9F5
B7BB95794ED54A28C0E938F608AF10E3B31B98C36E5AAA15FF90689D3E906F10
1A72D8A82F7CD70D2B36956329630A3EEC3AAB21BF4D1ABE0CB264EEDD6BE065
8FA2747C5680869E6D3D1E591AB226407E6C99CFB6F3DFC7D308B5A243A4B41D
BC85B9F5C5D0AA1EF139BE26FD7B9F79EC923F98164D19E6587FBB3C5D95F818
E21380852A26CBFC6A61A486F303701E5C97FCD349F8418B6A81BA6A189FE9D0
E21C08D1BD24E166AA1BD70D4F1357102407698138FFBB16C5A1132F73A6E14E
09CCB4A3A95B9D94C41FD7DFBA480BACE78DD43DB1BC2E1EBC72ABEA89F7500B
393E531E77C5D38E2FA764893C5080783D6D9486AF082785CA8A5E6F4F1A755E
97F12D70263364C2A3A424ACFE020F88E6652100EEAD11886F604C81552B689F
B09F7D94FF33EA328145153E8B9AA00B80FB273D48D14FA9978D09AA0C3FF6EF
BEE7229552124E1051A715399BBD1A6D3704BCBBE1FFF89A128852B2E6D7B9AD
890D6BC646E8875A87086413B3EA7BAB1F7EF9D23EC4201894C54B14D8306E06
BA24BFE0CA9E70F166EF6DDFFC994FF72565C43F022989DB6C9B29EF5084ED8C
BB888F0C2050C14AB9775C1A93E42801970EFDA3A5CB0937095FE448725083F6
385C33720E457326883261DC49DABA822D6591C4A14D667F16ADA21CC16C2583
E2E648FD2401FD0399A01F6173B03A67E7C577911EC5D845FC0352DC31C19D89
95AB0D0507238E2ABF7760B6EB83C36829DECE216E9D434540C494B0AFA17288
7001E098FA34E89ABAA7573ECBD75FD6EFDF6925E9A446043103D6CDAF4CFA20
F1D21F5E7AACA992B580F02FF2494C0CA8E102C54BD4C17849AD3004BA89D16C
9005041FEB9D3F4875B19768103962C092391DF2C72B7681F484DC7088B6E0D9
F36748FC5864733816E1508D5C8D60B37A148CE5D5ADDD36A297936EBA8F80BF
5B2ABD3536A2450AB5778E1F37E97AF4D2CA569A5EFE85111E1B82519C0E6A1E
2B2AFCE977B6BE8BB8B73909AA1117B78A5506192B150D596847C08B520AD822
DC04982DCAD312CE4EBE815CD88ECF830280F33CF486D55618FE6BBBBA1457A7
B9AB9A5187DE701498E8C8A4A3E8E2EDEB61B783E128C91C8E46837117D1908D
958AD0EFBD5C6CBE684E8993B9C482B05841383124196569481872D2637F7C40
061417CF94206CE23C189818822E6CD053D8118AAA25FC998752D822CCC14796
A19EF175214EB32A5FC96F88FDB8F030E5A5FD54F50A1422E72A76924F4264CC
4ED3C7238F9925E29584E8BCED896D7FC83CD20EE8C4D5A59E02997BEC92A4AA
4B92B0A965BEA31B1EC7035C2A626853C90F5CB720A6DED407DCA42C29BAC20A
476A80199EEDB532191462842642E43962CD0B203CF0C34C4E0A6D5C41063BC1
B2104F63A8FD2929735CBA2D13AA87BEDDA6BFEBF53B511E1B859901766C1A7C
54F22342E068E261FA07D6C2E2F6B9CA67D6AD3083ACE6EA3047B0C39C8F087A
75CD1F9C2F439F0ECD7AC315EEEA51C7B0A8DD0C05C2873AE0E507AE4B0E97E8
579FDAB2E33635850266322C5310C5B7C5D53F8F553A5D1A5F97ECF136CF9D10
AFF24E0597697B5D7EBBF108ACDA4E402DBB7F245AA757A209F6386ABEF4BDB4
22FADBA84E0ACCC5040518BBF10BC7743C0B42C39D2AE574676AA0592F3F052E
71E8E353D5E54B36FE13D6FFE686B1CFD0EE0B6B7F873F7E4A94CFA35434BBFD
D27F19E63578110A8079C749D8407CA5E0E15C648E1C3D766B48121BD204F422
3646BA2912483F25D10BF3FE09037D981E9E7FFBBC3F896535D0DCF53E82AED8
79118BE4F2D2F5B4D6D5A90B188505175088F25A8B131A59E8063C5F6AB6131F
4DF4C12C78DFA328160D3EEEE1288588CD52CB0178E37213EB4B15F2817F7AAF
238F45C70B20EDB37953452F9484170D081988F7D371866BAC98F39379F918E6
2245632C7EBF193D43118ED30D3D90F31DF753B4C8F705E52288E8A99B973D83
3C01353695AFA32B801E4AF89319F6B0B5F32883144D56858DB7D5D04339B155
2C248BEC00A15EA0644E6EA0B2D2FC43D63815122074EEB735CD1C98201F895A
B94234C55AC416D5ACF9D3677B4963D4005838679F44F925F924FC9484FDD4AA
59D7B64AD40E0E8B0D19951515A6EF4DF74A18FA2066D6F8D2701298CC9FDA79
28F99CA135B6980F7082AF3D8AA252FCFC89796D3780CADE9EA58CC3FCF8ABD4
A22949ECB484E49E3CAEBB563D7486F097CF267B9D53BCA07575CE998B37E659
4CC0A406B20C54AE6DF9AAFB220D1D53AE3CC92C910CAC5922F6AFB148FCE2FB
2F3D6B91C37DC02088BCC1F9A10BDF85BD44CA1B3C813FD7015235F4D51C1C75
3EEFDD6ADCEB45DF4D007135D5D85978F6EAF2AA24715FF2DDB265C44F18FAB8
25EA120901B8A20B93FD8A6C6511665267B075C5D91DDA5DCD60D332BEF4530B
351B697B29C3DFEA3E474F6287CFD336B7CCCC686A7B59F013C89DAA23399562
865AAA83B9BCA57E4F424403B407AAF88101D7E9CC89CBAD30CF82C208E420FC
BAADFE1AF8356BCEEEBDF0605A719EDF29092BADA50A28342A2B7093A3F7314F
4F656E97438EEF537FF24B2CB8D87BFCCC85B1F91277DF1E391ED32263294EA2
5AA159168EBB2C3776B64C0436F1F67FCEFB4901F32551D90FBDB73C5F1A1555
AEA91394ED682BD24AC1152A769B76E0C0329C0FAB54D836A5923D3E6DA623B4
9143CCE20C908DAD730609D523675B596817F23789236C890E566ABB7A09A262
E516D108DDEDD6D7DF316B0EB6BB94936F23D3C8E3378EC476B2556B6F07D622
326EBA8729D9692720373831BD3C4E8F387C78E203E5D82A3E170F6D341B2BDE
D5E5EAE49A38ABCF7A3AA698998279AE7148F928DD9C97800246273DA18D1A42
8A931788439F728D188C2A7C21AC4202513FC31FC8D802F6793B81682ECCDA4A
A2CF829BB74C20C39E157567538D827BB8F83C812CD5897F861FD3B2691B20EC
38E6DEBF12B85F5E49D5A65A1BA3ACAF2773F285C68918DBDBC5494B261F70D0
F14165FDEF1C160A16A35865B057F75C265BECF44B9D06542B9F9833A1E36C15
301FFDBAAEC8DBA664FFE70979C4696B5B05C07D62E428A3895B80C589A65F4D
A7743A09AFECA6DC807448B48C85E46121049859F8C30E907C72052513A1B208
08585CACEF9C426273FA7A8AAECFD1F72BFF12AB00F60F9980CB3BC380F95488
EF1FB0A24A449B1D1D0B47D0C8F0B3F8CFBD1E7ED8D258E1B115E4BFB215F781
34A6CCD9B4555EBD9C95B5876EB67AF788FDFF37ACDEA67110CE092C31968B97
EA0DF7FCAE1A015F1402E25F52E7EA80E6AA3F52F69709CD0D604833511E78B3
DF0FF25780A142C31E0E387CB0334AE44B7870D343DF102BE43CD5058C3BD026
3C692826E5A944920C2BE36820C3CB1FC79FEEEE1DB28D47B95AF4BE860A2B46
225D1784698203C4F0EBA2C58BA0F17669195FAEA379B9222DDA32C67BE4C5F9
AAA6971D557651A2583CC1F6D4C1D2E5EA316A091C458AD39663B2BA3F3F4320
5F6C7A1F1D0CDEB9CBABD7CDE1BED4AFA1966F774C96204A513E6366951F097D
B74D745DF4F8C9BF0DE25CB10C52A339D233EF1B895D0C0C9F53EE1F1396C832
D3A03EF24ECB073936A0C035ECDD9681A52947A39B4B308A8A510FF245BEC7B3
004A57E094DB56BC22B0D68CCD643589E2F3A40A8B9AE0511D70A2FC838B3475
BD93C1F87AE8E2EFEC6049BEAD2690BDB45E16CA15F37EFDB78E1B6E1C682B93
0F48BF0A28301B463A5E087D570FCFC6600196DE9ED27F8DF650516F54C844F5
0063DCDE4ED63CEEB367F9F821BC41A7FEB9BF2AABEE539C4503471023C5E8F7
79061500E5A439E880B3DF3A336CDFDD49FDAE75FCDEFF3F08E2A73F0204CBD6
CA0F6AD889FB10C7BE1D5563DD47A48048AB09DE710899BCBC034AD7D836AD02
211578672376E2B3FCE63EA61889B05BB14316411F33D451D4E84B880CC85D01
9ED38B0B13844D9FDFE14D64893669743B6BC2F7C99701486E6A896A3B748585
EEEFDEC03F78EE6AA916EF44A4C7131F75802548510A255027D81C4C17B98961
8FAD6185729E47F5D86BA9F1280CA84AA8CF15CC932934227CDBAD1C2F315A25
DC6169B2C81A8E5D91FA35856A8A7D1991884FA40496CD8D787202F8B55AF292
2B6C713C2AE046AE51655F6B7EA884C1A171A7280E8FF4AC0D4C8A2199E9F242
583389847B65D114CAFF0FCF67585A6BCBE22DA40DBA9FBE6E3E609D282666D7
1108683107EA60C6A2885D08004751FF0936AACF2269A8BC7443FFD645E8EB8D
6AFB5FED4E2A045971D213CDC2DB3621FE6CDAFEE3D6DBC376572FE440D7EDC6
EBCD2AF0D56D5CB3D90AE89B37045A4A032CA6EE62D04B060453F94317D02D74
E2C0E087B8ABA8F56DE43C5E9A7D34AC8C20AE9DDA4237FB7BB2031BBF74C3D3
095B2DB5108BEC9C46CB95FEF4D9AD7DFF7EB6CBC34FDD4C97AFC7CE94414751
83C8221FDCFFCB3EF28D71D6E3C1C44B3C7B37E03ADFF44DEF350B0FEE0481C3
69AEFA43E7A19A74587C39FAC6FB72FB1422766CC97FA47FFDD7D892E210792D
9EA463C2FB76BC889370A04D8682D0AE03DBDB3D723463D01C1FFE63190DBC77
D92CC9F6A8837A44EAB8207602F4AB2DA5543DEFDC3618004C2526B70DA00DCA
52DAC431CC1EF45E7241D4FAF394D14F4872A43FE17B5EDFE87F760D7200C559
944587EAF9A8B5216B3A0C064DB7B2CE3368C46FA4EE69FED5C9ED874D51401C
8DD86268CA71BB04D0323445D7B0D148E1843D354DEAF4A72FF3F71E5E5E966D
FB605D18E4B1CA2F5969798ECBE1A2F6AAC3F6FD242C25F6952AC55C24ED123A
69E8E9BA706170B67822A5FF7C730360CF6EB23BC007F5344D51A36AAD43975A
BFF9D5FE2BD1B4CF419D4E5E8D763C18FBEC40920F7EB24EC8037A8BCC6C38EF
3B8F2CC13497EE615767510AADA4364CC2035DB3CD08B107110F1358A2702BA7
542C40771F1475B919C0E0944D0E2948E67073ED2DFE552E96EAE73E7AD80E33
41EF23D94DC9DE38E69B9CF025A82867C81B23EE5C520C6D50720D65DD7D9E30
2CF6A3C38A3E255C3C92048596DE9071855EFD6D3014ED96902B67BCDC6AFEA2
CDA4C53332359B820A34771C7F5ABFF5C667E681DE349EB88B977D1563969704
A6967B964DCCF25D2190505A0360352CC62DF4E94810C4111563ABB27AB6E746
CEBF9CE816B349CE7E29636D9487E3C56D4978D17EEB2C720C85A83E32331665
7D4D7E8131E6FCA51EA4FEC2A4EAAEEEB2E1C9A5B98AC8C624FE075677C61515
D91B86093F401F42165F0D5139CC13AC9569CE318E21C11AE858AB0BD573C2E4
B686093B0E2FC058956858642FECD50A88C7CF6DCC924A28A62F15B7F374D259
C8221EF16504D11B5F35E83F0D2F1A10C5BADC08A7A32948413F34D770D1202C
DC5E5A179693E2E645BA14B9F9940CD11420FBC9E43CAFD6838BF720AF48D65F
F1C7E8F8F8A34611ECF2FC72D04C3934DEE7DDD5D3DC32A37C5BD00DD016072E
EEA098A86BA24C39F06D785EFFBBFEBE58A004C72EB674E5C394D0DFA688DDE5
64659FD7F848C2A7E02E10C715CF9C1D9B4AE2A06F43BFC6874869A86E3A50A1
5DA8D802017C935ABD7EBF2015070CE8A198C8BC75D9643D788BF970E6879DB8
5A3061BF5F5ADFA4D0C3C442D34EF5E344A819CFACC305F0E9E394E864647199
34B4342C86ED7BAAA66B457B4C30CD0BFBB10240A344C911FF165960436A8BDE
59944B02A185ADB3B163252BEBF1BD3F2A2300B50392C923A508BB72A39F761F
19C2BCC97B7E3E1222DBE1385139E26A9807F276E1C1F837B105D9B6BB9AD245
4756638C8C223F83F0A0444016A191133F19542995636B1F993002C168E47BE3
E3AF28807251F21C1EC7472D56ED0C13A966498C8B740631E360AA6DBA1E5499
1EC7922725600CA64C67564D07D976715AB3D87BA81F0E2E8EA0BF223323C251
11EA84CB75B2C5ED13C702870ECCCD60554EE8C68AB8B2AD79C1A84009407BE4
EEA0E6E0851A59590D8280AE65D1837F89EC20754406F916ABA03F291FFC03EE
8438D0ABDD83226C25C32643FDA7E4F9F5DA3AFE7424FEAE97453C309B216409
0EDB62EF3DB681E7ECBAC9BCD67315D0E746759CD77594B3C187E1943876B8DC
19F4DAF04A510C5941F83318E76520BFE146C917E2B532439F68289F0C2133C5
43BCB734F552B860C295991CB995C97E92147BCD955869B80587746A2C55B638
66E552FD0B88EB3A44D8C1AFEAB666552ACE170271D4F4AFF844355A6F112347
4D93C05C07B8689FC4885699E4BB7665336D17411EDED514F2420EB640B4AF9C
B0844D53C5BA98EE9875B1E3876FDB36916216B324753C34E1894B6FF9515612
75C2325A4169B4566CEA2EF9405F5CF8EEBD7F97822ACE9FDEC19FA47477E47A
8A81D87F41AD54A0287B6CCB1DE0236F88B2D00896702665305FBBE778B31427
FB9934B3B216EF87C13DD0504E641C79691CFE1BCA234936B343860882E6F73E
9378D8375F5C710D16D2872B34E2C2E6AF831A61CB2A359631E0E3F6CB7EE7C5
3905A28A6165B2F491F41272893551D0378EC80DBE735604946C4A49A7159669
D5CE564BFF70378B1A9116D57BF636013901C9671F77F34A63F361C5579EC5E0
0C5F8878777089C2097D945A59E873F5171ADB17357090B77D3C527795B3BB7F
5B0B954E70785E7F46FD814CBC4D5AD6F648259C11C68371CCB29D5029909AD9
A2C8D6BBABE40B85A376AC7DE7F5601546F59D32084A993E5B3826852812FA50
30DEEBADDD66570099C29DAA37C25618B58CD3989F99155CE5DFBE0301A54B7A
FBCB23D7ECFEFE521BDFAD461FC593858AA3713DD30CFA8FE78158330AB90FD9
31ECD298EA2F139D757CD901FCD8DDF64A266A82632CDA6E942C739FD47C4E80
9937067B9CBDCC4072067DCE116A6A47CF33C7EBA836A58B084A38CB457E4C23
A2991E9515A7C59B4739743D0DF6AD41784513F330BDB9F7C291641E66259384
1A483ECA626C26BD889210EC5BADD725574F0AA77A0995A273700928DB9CDF7C
1ECCDD51A3EBB61438156AF9AAEB8A835EFD334E75B9CE134E848784FA2832BB
CC5378D9B1A416042761BF6945EA5EAFD78366D278C46F41A31655502F71E465
7D43C19EE6608D4135DA60996B1B302748BAC88C0BA0FB0200F6AAF420CA569A
9E103306BAFAC512023BD259F6FCB7BA3ED8771AE7AB88DFBFBD59D162283847
F46CCD403F2E35925E705239CE3D26A1814A720D4C1F142A5A42A0E5FC6A3552
FCDA484F02F5371776D14B305A1CF4B2482D465B58B50C85A24D762FFB636556
0DA6C3AC052FFFB915573A7C12B68DCA53216CBE73BFC50EF95ED6D24A3074D2
0ED0BECEB9247116A944C18B308F25D4176333854C4E10E7BB673BDA16DCAB1A
E2F46F954306637298804B489D9B173AF0E3EE5E4CD1B0181BF49C5D6ECB52AC
E8B6A5E081ED6DC3143EC06CD8F437D12FD958A84D20EBFFE11D2F70B794E251
3A25B03529BA7BAE874A5B9544499801C3B64A5402C72C5CEE4295357B41EB61
AAD4AD042C06B6896A6E8D26DBEBFCDD3E675F3D268F85ED28C2BF535ADAC39D
DD252A964B27BDF1704D5EB2E76E6F8EAD6FC8C1BA14B664EA1BE6377A971139
C39D78B1E0D05087FCEEAED1C94F3E4EE6D8142AE6B814CC89FE9F212D40C265
16758BF301BF16FB49D4391D0215D339A81C93A5439C6EA9CA20C2AA87A290D9
EE6009DB7DB0CDCBB1326BCD6806D450A740261725431DD3076165FE149C050C
B3D5894D8009B28D3C52D3ADCBD537F7B40C8CE1137DBB2B1C942B8BA31F7A32
2B6010D83A8815597B472F660E495759EB6625FEA5356FF2D907547B15461F7F
1BF75C59435F610393E0584FA2B0F9F3274D0CA3BD87F9B19AE2BA33D139C1D1
B0A1D662D1A890E641CEADEC709B67C6EADAD9672DA050118E236AF726EEE677
2D9F4081BCA683FFECEE5B7BB6173763C2E6DDC0865B23CA4AC11B637B8BA9BA
A850BE4B34375F196177BFDD5B5F10AE332573455E766FC7F740692BCC54BFFF
B07D14BAC04243E13D6694DAE219CED2856AC558F5B4457A24DFC0A9A8308B05
DDF1B8005F8BD6D1870F730555A816756A5BD2DA5557EA54AB88DBD13CB4E9E5
AFD8B9DEFE39A0EA57EF4E235F7BACFDD062FF50C398EBBEF96F70E7DDC8A680
4D0E877D1A660D5056FFD36D4824950797DC31D5F15BBEBFCD8D2B83BF54DBC7
AB2787D3045200765F660327881874B8E8C0164486D2F74713CC7712FB87DE33
E630FD15FF9270859336A9BB021C8A8A412C3248ED5C7A64102453988CA09DB2
94792DAE2920306AA818C5C82DD27C9C41EF4B4A4DFADD5B1CD4C23A595AA354
7D590468665B1C75DA98A2F74EC75DF1B3AEF98D8385199E82D060B3AEA15C2E
9AD53B93B05777173B9F1CECCEA341772F51704CD83594BD13C0C8DFC0DA5619
D683D456A9195E4AD46C5DAF20747C138C9E0C1EB257F155351AFCCA603ABDEA
D511A3BC741690961BBE2AC19A860AC497B2126955553D214FA3C5F0785B23D8
CA691FD7FB93D4FACFA45E683FA7AF1A3C23CDC58A79727747F78074B20F6273
F4F2D31AFE3D2779EF40D092A8429DA915DE2153ED1F7EF9D8E00A86337AE9D2
9B295CC3D688D449F837E54D66E2643EAECC8051B0A5AE8686196B2BE9BBA5DC
D6421CAA37A3C98A6BAE9522696D7F13F3253704EC470274E93EC3A0FD8D2B0C
AB5FBD343BC610674E4377CDE4C38B8D8DCE23ED4121457102EB0AC43F11C73D
1062C48637531CC457EFF3AFC0AAB83E55EFDDD7334947E66B5D01F8907212E5
90CE9EC56B1989FCC733CEA179B0D1563E7E3398F53CC37AFCF8CBD4F22FB2FB
F6B0D58150BACD724010A8B78C91B6552BF4A17E92DFB106D2FE0C87F77C4624
600C1006D2542959E910F4C46D69351885F7E70D1F0E09324028B2FBE3309132
071891A7BD7AC941380DB7E9EAF19C04E7638DA2E2F08929345081D24E8EF88E
F524C2B04EA863A65A373494A6C2442EC6455EB7DB5D9ED76B53F86F331C6C67
2A00F7E4AD3603AFD16AF42215A2ADF0B36B2B7C5F19D9565043816BD8957CC9
9F9CC855BE5D1F91FFBA4A5E39A9835E2B2386E8488BA0C003BC5FEC4428E973
F4410C13830D2B9944F99F947A3EC4909E291BC99BB3C32FC321A3BCD8655A64
80C1AD41F7D65E361014B9666578445968CAE9DE6A3A5E34FEF9F15E24897827
80293114F6B1DB3E9AA04EF58CC2BB3B46216F1BF608DAFEC88FBDF35457F3F4
30489A43AAB5003183222B4B558F8F56522E373DF73DFE103D85FF61F682664E
CDB0C836D70333F6B1C4B3AA1A63C75600D22E6C0CEDB12B5EEC2767CAE72563
F58C453F45C231219FC9727D584FF35757E5541F96F98EB26AC14AAE1E6873FA
855BB4D023404BBDE5111A09F2F70FA32542FF1E83E1FA20A0E2FE65C063768E
D394770CF07675657587CB8A56596E7253FD1133ABA692EB09DFB0B956C9BABE
E9841CE3C64D447D5064CCBD9B864B0B3EEE00763E4B662E6B37430455BFB4FF
C645D96A278464E94E9C3C610C857B501A9E88B1ACFA45CA98B43E079DEF98D9
16FBB0C202F3B84217A7F2ABF7BEF87EB3C73FDF7717EE949325A8E99C87E365
52E9D7AA5AEBA214D256194A35312377CD440E1CEC2FC578F49624BCAC50E2A0
DB44C3F60078DEC8360F76B44ECABE44F6BBDB6218EDF0982E34CF797F6672F4
FB24AEFA9E59E4A9D0875018CFA9A68FC5D6D2B29766EDC8115E3DF091C790C1
225584B21E5E5E2BF3B377A4325395C109F68FEDF91062EDB08A1414719571F9
CA5B31D0EA0C2CC05F73D0AD117535949F1F8DC4D22141F26CE7C97147DC061F
973349732A7B8D84DB5DE478BF9790D639AF7AD0A795B2B9090652908C2DA9C8
9960FBE00234A5BF23E24457C432214A3172F61231888E7CBAE692581563B7D4
2BA2E6E677B95C8A9000A88C90F1F1907585979F1578EBFE7790A7AA4CF7F35C
FF5D93C263B12274346D1DE15449D7031BC9A8B32CFF676E5579DCEF896A510C
6C8CB4C73F82D7B56E7FF1ECCFB87EBE04958DE7B3D31284613C24DB7B0FFE76
461380B80F4ADE422D579B34DC334F62586C58E9B7BE921A2471983401013A85
D27EE9107DAAC914B280B0C51BECAEF58C834774BD567990D22DF446CF773C58
0488C13862C1A949A1793AFF7FD5B9361B00A3051F02F92E6CC1D2BC815E17A6
A845EFBF339018ABFE4B14AE88CF0CD0246E250D2CB76CBD6593C14CF8552EC4
AD337797CF3B8BBA35576434C114DA8301F184CD292AF879F3EF17B963818EB1
63C42E6411A931FF0B5246D92387D6BBFA569D0C031572DCB2477750A241A691
31F32337F052D1D7E4035E4DB0B3E38D663D96DC6082DA88F9A1DADDB1CF3DC4
044B564A8F444EE5F68E8160D419F18E4D95DF8148626A7AE1B721687BC99B48
1C1B70125D110FA68C1B703D2CA0F53F0390D36BF31ECF83D795D880A41CF002
B6A8DA88314081C1D6AAD4A849626189E449E009515B973F2849FC4D5F323785
88BB476422E78203B8C626FB56BECDB4201E12E5D0AECE2C1CFB6AB841DAAE1A
087548CA7917614FD39C33278BDFF272585C28D61AB242AE10486E5A79572540
5624A96819B42F637C359422833E0846E121B318A952634E21E2E48D7FA5DA3F
E8A21B67E0498952A85AD7E722EEC58B1D5BC0A9F9A1E0F2F45F96BA59010BFB
B7A66CBBF633603B0C227C6A576EA44F51BC4A10386F448AA85B8494C78150BF
89A1AD5CBEE76F570FF64F5353A16D8453494B93E5754FC12B61966074CA7283
8FB926D4E00080FCCF25613F86116E2B2AB78FC367D0857DC8B70F4376220E52
6640DD251C6D9BCEE797F09361FDB15AEEEE4199F65D8CEF3763BFEA91032641
0DCD7B27AB2364AF6A307AA142B18DC9B06B83EBC65E8BCBAE4003DE6724D4EF
4C3BCCEFF2ABB5E89B705209F807192C835889A4654F7026B26A7A13B2E12A5A
D0F52AAA97530638171B5FED382849ADDA19BEC90A09C04D5B2EB5D10ABB9AC0
924A50DEC459C2D23955E6029AF347B9DC222F95838AD55D44525B61A9471C73
F6DC14A50AD3B02EB0B878F890210A54F7FEED45331ADA0E610827DAF89AA47B
6845BD08FBD908C8A61059B21A2B3771D04D150CFCAEC53CBF939792B6CD340B
A06E12F284DD1B24059506B9D57ECD3B26C607EFA14CF65A22F5837D99A0013B
6DDC1D0EDDAF6E7780F00DA62502C94A10EC87F2DBA6859C0C4761B82D646CFE
DAA09CC2D1873D6E12F67C53091F8F417889A0A8448F9F0FB9572B95BA7499A1
E22A90328C533F667F9B245AA83B42B36F0763B2B37B4DF063E491227F3EB861
DE96EB2BFB98D742A7B62504CDB23764C34A2EC6B9CEED37A5673B4F7473F5AF
602E6BD3CC7586BBE744698DE7FDCE66280B8008C8379DDBE677E6F550F93922
E927E1036763F020AC43AC01DB8B5C1ACF1FA6F771B0113D1F81D052B32F50AC
86A7CDB5769A24EDDD91FBF6C5B8C6994456786C670F70C8977E70993800603C
6A74BDA21E4213E02C3CF434FDB5F0A7DECAF84A6B4D480CDD45A30BBEB3BADC
1A74A1F1EA8E30D51C68FDCBE097C0DC1353F3485B361FF22160C2FA737B6502
09C2A4CAD064E43E509B3B941073E6CC072FC1EAD6ED4CFF6C3D9872D65EE8EE
AD9D0B61C56CB501FF704FA4634241F6F4664DFA5D4263E087530ADE1BB032E9
2F91C649D028CCE273662C91844C809CC2ED1BFE2D386227D9659285AF0570A0
13D3A84D48488884A7D514234DBB867AD2AAF158CBBDA080A5448FF51E8E473A
FCA6BB853E2EE3C197AC79F6C08FAAA470CE840437CE7BE0CC90B8843B29A997
3E92A64E782EF8345AAA0EA74EFE4492AC0F942C81406DCA2D5E7F90D278D715
1D59597FB7768ECEDA82478ED288423AC23CD9F29923B2931E05B9DF0654B536
952EA0DF14864C03F16DF011027F52B2BC85DC24548E7825C5271DBD28DCA6B1
A425106194273AEA4EFF2DC67143AD383A0409A4C1CACA0292E356D0007481E1
015EA3FF79930020D715ACEEFA264993D497B0B3838348C088F2C7641C90E7A2
1C82EEDCEA0D061AC3D4357204A88570D920452075DFD557FB92419B6BFF673A
135A270FB3E83D87F3A394FC38E69967833C0CF2B39679E5AE4670C0B0B61E49
E233994DE3021D1A17D9DC2FBBC0D754AD58FBF92629DC8866A0698E72EBE3BF
626376AC6E3F7414E4A017F9FAE43F47C36E5544A1F8077AB860E131ED9AE9AE
5186E222EF53C533AF3B273D08FF74C798D0EFD52011E7FE7D52963D8CADD372
D6892338B220B19120750E6F5E40B3F2C56AD8DEAB8F35E0FDEDAB11464304AB
5CEF836E649F308D3C41025070A54D6D1A377534F8E502D03E32B289AE739360
216EF63F26C38EEC46EF133B6D39F202CAD707FE4011B3E21DFF84930BB934A0
2E3AF4296D51DF9E231FBC80D9B852268421B2CE7BDDC47A564126F56BF96ECF
25E8AA57D15C050C99157160E0499D8206BA898494EE1588884D5B37EDC8DEF2
EACD9C3985BA9ACAC69EE19F31A07B1CBD85BF493182D44236C93F939FFC5263
B08D6E21AB7875CCA19E45CF3721111356D1F3E208CC5772E39C6A2B7502A7F7
15F108E9EA2E0DFC202173E093B96AE515B1BC24C6CA2CD67E18933AFC300929
92C43C9AD44C1B98D59BFE3E31301542A4DB5D53ED88C760FE054AE4A97A64E2
D7A8BD825D0F83065A654DC7A921F5A1AF0C8C7CF0E66D0F4B492361ED24F823
46B4852E7EEB380DF5047D78A73774870E99EED3D74C0EDC41BDA6D8EB06A20E
3B3A21B791DB1A56767B0A22F335A7A5AD395D681A059E51A16CA7DD21208344
0C3C61D2BF3B821B982896932E065B12C951419DAEE69D70D010C78F5F0D0BCA
3D8ED754944722F1FB65F7EA39BF1C840A6DDF2C4270B9064E291EA463C95B69
D1998A59183BDCF282B7AA5DEACE488491118E451C184C29AEEFD87A89DEC5A2
761C720A745A063443DB445C186B472A48E6ED72E83CDD092CF8D465E4D59FFB
F99A5DA5644BCEA126ED7739D5887973A0AF078126540BD2D4B5BF9051F564C5
95F437248C5E0DDD9976E92F704BDD2C9E315E680801E91E1FC4A515CA62048D
133EBD864325A526ADD66EB29BE3BDE96458DB6AC037FEBC8DC128DA925B4C06
04A09864F2292A0592B06E2B650BD46A7CF7AF63CC2CC40F691AE97489EFCE06
77BB581D42AB092C9C42165D0CC72AD3D93C4ED03F9D20836AB54E1D0D07757E
73EB3CD5E37F8B180CD633D91EFCDA40F1D8B049508E3AD6049D635AAD352657
4A49AB709C73DAF04BD083EDA326FAA663781172D3D604F42AEF85CAFF6A5C60
3F8F66833D319A68AC09C0952CE84AA76DB7C99AC6E0D0C91DDF2DE8630CFC5F
2BC31E8C12595E35671969AD36B4080B89569800C1EE54E361E478FE5E3CC5AE
F1EAA75CE57C7C536A6A457A55FAEB7DF2DF8D260F93DA29B704366BFAD0B24D
A9A2C9FB5A2797EA29AD9F9117DEEA7E4C511B6763606E99B49823BF50C912E4
B5475E0AE059782608177EDB721B26C8CF725D2EF3D7FC39994B3934049A26D8
FF7AF6E0E6E181AB858313D2F697474CBE520D4F72FB99578B809358856E4E99
B28E138E2DB585CEFFA223AA7A350233112B0A339396B3C06C52CE352F68B5B8
470F59292CAEA0E13D0F038C4C9E98D5C4E962ABF50B01B14AB59167CB387391
EDF3FA68F510937E93D0D92F3BD088EEFEBE544F57FA9C5DC09BFA6409E2A873
6D9312A888AD119EBE7E37AC81F9D33F075DE4570C8DB66373ECF7838754B135
5618B8706AF84F811280EE0DECF26057EB4C21EC12EB4606E98B68CEB0805BF2
6DDEFF7999D372681DE060CC8A5504CD26305A5B0AB220E1829388D219C7FF9A
D72F99094D9FB3CFC6E1787F6B68920C14DEC53E22AA4F79D8067BF112AAC11F
DBF83A8FE77BAD910B422624785A3F675BA045A8D89AC58B77200A09C675E453
795361C4AAD7B4919689DC056AF826C6BBB1360F47328778174D8970CFB1F3D7
EAA51B2DE7D714CFB01ABFB29E63416C93E97A6D97D6EE96719475F203EAA776
911EDCE9D899E2DC978F0FAE7C2BC2294874288833EDDCB2D9D0FFB9B7C7C326
6773E5929E1BB1D4C7D80AE71D7EBF3D9A4DEFC8E67F6FC526DDEA73EB9B18FC
8B9FDB5CBF741CFA9D1CA3196622B3800D5F7DD513F254A7254EEEF0FE8FEDE0
1A7A2DDDA4E541624FE8121054C44E7E8039DF0E36E820D286BF2460CF01E736
4404A183216D7DAB75494AA391AA3B6CFD0D3B7994E3ECB546F526F10A89DEBD
DE84BC7A6450EFE4905A5C0F4483D4524CA1F8BD9D4E96BD0CD5578D06CC5AEE
37607334DA37877C27AB761DFBB44CBE026E1E1D3FEA37D9632DAC24AF90CD17
CA193927249EE4A74D70ADCB46AFDAABEDB516175F2AFCB7E6B347FF0BB53F95
8A1278F7BADC967FB68B01566BAB3DA219189AFD52F34B95BD62CBE7CB4431F3
A1923FA3C5F340C7581AC12FD0983C3BF578078C86E9D2025950BAC74C0305DF
7335876F57D22AE2797EFE0990B7BB874D21D32F63EFC962FF21D09AA2AE309E
6310CBBC224F848844C5373BDEEA5E6B5F5897445B471395DF6F39D245ED52CB
D3A16CC7F7894D4A17700F4D5BA9D189BC8EEC74EE87D7D262FE5B24916FFEE9
3A68A5C016172C6715E6D46E23E3811D786504653919C92B072E54C21CB751E2
1C5DBDBC6A3B69AEE83207E3906785D41F618A77C4236340991D6E306F6DB03E
4C518687B3E7B107510F9CBC26F92DD3B78B8093E619B695E8E06F0E96D0E434
163479FAD2ED8946E9E00BD6616EA0A416FE2A95C142B773D49921BD3F7BB620
4F5C50692226014950FB3A4101FEE513AAF1EED597A7B20478F0952E2B5CB194
CAEAE95F5E736DC95C1A3E01C7C644B321D575ED925FBAC0C354CE0EC01FDEB5
F0B25ACA22605F360E3A1C8D92F3DA1BC112FD58AB1371956AE9DC82EAAA0195
CEAA1443A1A6684D8E8FB9D2ACF3FC20E2E68556AA79174BE3A04B1B7DF04416
5A6D05CA91547F8C249724A8812C3F70FAE9667FB839ACED6EC37D696B4039EA
69F89EAE1B12D48C11DD729060AB1A051848C96C842B35F9205DC996725B67EE
B2E2BB70FD5AB7B8B305D5BA7EBC28DA5AB5D0CAF8AFE2FC900790F7F6050818
D727B4FB3C75F4F379C448BD67BEBCE6E1283180736DC45EF72B5FFF4B6E654C
9FDF312EFC245B083CFC4F41685BCEB4A7D6F52961EFA608871CAA4286E8BDD5
A21592D42C9B6EC6681661312DEA751E8FE8984D508FEE1233D28E946499ADD4
17FEE13D28A88FD4385AC5DEFA2EF538083B9CB497D9996ABB29FF393770A167
0C9EC16CD77225DF91E233FCF6EA085C0B6CB35488BBB266646972D1C9130E9A
B6F4E22980C884543989DD6A5B2A1A096550A1E45A37C2BDB4AAD28015986023
06E13816B40B5344B880D19C1DABB7CE3A054BB979C788E20E386F32B5BC0788
181F511102AB15CDC60F6EF7CAD78DEEA590BF99760E2DC5ECDFCCE4922C000B
05301C00761415D2F53A866C95D4A6848E2BB7970D17667430491EB02F38BDE0
0115A21706BC3AE8F29C792E455B4E7DE26BE99692B0CD741F656584616670EA
E0379B838CF91AA54C887BD6424A4B3C207F0ED2FD18B021DBB6A278570D98EB
5E6B11E32332F4D29D1C8A9D894BE1D07C90B713822F634A96C5D1923710DB4B
98B063FA07A2692ECE4388D715C1F56885B36AB435E9C8813CB052EBA625F4F2
267B009F6952BC47860B1DCCBD15E38381B988F78C81F88DCEF8B37D6B9E4584
E1679A33A2DE2C67492C8DE91E45B5160349DA91D1FF85B986DD5804018B3A0A
641BA5565593A61F902DDE15B223782111B002EE59514FFCEFAD604EA71F2BA4
5A5463EC7E6E249FF8EB18BC4983C6F401AF00122F9A948F54FCCDDD778584CB
7568887A50A86ABDCF97ACC1B898D82168814531C504104FF01A8C4E242D55B1
636092FD73DEDEDCFE0B5F87FB1A9C5363DF6ADEEEA9082B1AB14C68A61BC5F0
0137C6AF5840026DA68D8DF87CD5567642CF61AD86FD668F97C05F88DA5099D1
2C2940A318A5A148BB7E39C19BF2C5D0A0310A77FAAE497904F8FA721D072267
A2E8357A7EE7E75B3B9BA6FD74F2A2086B7865817730F3F663394D8D17FD4312
9065C91645DBBB7C76A209120B0D59E49726B0FBBB1C2C156242ADE413FACF4A
0CD04DC6329E994099A08C6AE1AB23443125C4B25D85085BF6426202EF9C1EF5
35774FA1877ADB73EF70C0629A2BBC6F370F137CF3293F2F61974FAAD18AE144
77B8F06BD971FDDB944FF4EE506B23D781375EB5AA3EEA89CEA29065AA87E8BF
45BFC7A1817D8F283AAA730440EE415843A8F0900489F3D3B31C3B79CC12A129
89636404D1AE3271837120F5C42317681FCCEB541872EA71001C654D42DFFF1D
B2A72128EBE86D98234C679A1CA1503EEAC4658CE24F7DEE48D8DC48E4F63B4D
8BCEEAFEDC4E0DA7BDECA4F73DB32B5380827BE9EB63076703B29D0DAE004DA1
90BD57F76AC5CAD3CE8CA76D4AC49607CB860D37598269520BBC6D889AC125C1
255D634A074F7A3C4D1F3BF7F0F10D1B16F1EF05C241439926F02B1D5D70DCC9
BCF7A858182EFCF9911473F6467BCD3B87B4749490094D4FFD37EAC056D399E2
8EBD20B6E09B17989DB2E5B208565A1FD64014363030BA4CB7E3D9EA936D9F3A
69EA08329D093E1F99904C5BA05E9B8256EEC2D21A8441536789E87ABC36A6AB
333A767AA3821B284B1B7E82C3396CB89BA225013F5D4C6D51CD406E3A7155A8
3360304F24AB5C36890D82881460CA14FFC71ED20434882834D2C44CC65F02FB
9663BD1897961C4D4F861F5FEA4343BF3C6E201C1C41542320AE546513108141
6DB353A4EC3EE26B9C51CFD22C0E86674998016BD5B50CF68AC039E1A56A8E33
3AD52F9E6726B6BDCE5A57C135AF8262F872D7F57C11D3338681C092F3BB8743
60F8EBF20EEC39C37C6FC2087779FCA72E207BD465CB4043102DFD0AFCD868DB
6EDDC476070DEF14EFFB93CFD55E50D6B39A3FD10A2AD79438DDD540445EE6CD
778120FC518ED5448C02A43C2331B6A798BC014B32DCA80DDB70390429655F8F
25C89E65074A52CC6047885F4105D92E442B634B53B9CB0C6844A3B103F09015
8F1A41624D2070A97AB0BCCBC707FA756BD7A603BB34ACF8FAB6A43A6C6D632F
D57ADF3533E2059264EE68E93714EEB34FAE2E1C67B213540C2601A93D56B2B9
01465F0B883D6343EC95E310FE92F3BF53BD4BEA9B453620EB9D20660D9E0D91
69CA76119AE610630660AA617FE65BF412ED4B25B891F09824E5308F85563A98
2D6C998AE8FAEA50802B9CA1EEC072AC4FB15664A59FAEBBBDE341AE2D169794
3D2D52A5F4128B1ED1AA0FEE9F69409A22D369A06A88806F4661B0AE28539E89
CD005B187D8321A0A2ED7CC3799B84ACCEC47736C9B6888F6C40C9F4766D2E98
C9DF07C4DF0E04FFA06F93720526760D031DB724520DDC0A55B4C9A45DFD27AE
C3ABC7B1745C9A65761E9A49C5275E66B11394A9468B30AB81F670E000DA87EA
5DFFBCE16BE8F29EAB20AC42D90E12254FED68179DB72F29F29546A5CDAA1218
B1AEE652634295BED220AF0507CA741D46B7613B1C3EBE4E8798A6ACB7AEF5BD
D9DAB444804D8217F1F0DB37E3FEB5AF3B6C1DE4531980F54777E37337534BE8
EA33D994906519C9B1F9D62740A6C1E4ACA130DD76A67920DBB297993B81D32B
76D83C4E4EA79B2A917E0290F38D66445AB0047D6A14598F301B6A7E97363ECB
B7CDE475BB6206F2F3A7A5FBADAB4FCA85D1E0E9149E638845279D7ECAE4A7AC
0C4A498C6121EDD820F2CFEF6999F99AA0A2AE7B9B8D92F22E3DDFDA20460C55
C375A40A34BF6BDF5B2382E6421B44C297B1935A3A5DE94E8681FC684284EE86
F91C173784900699E6CA7B672D208B1FD63B002A27A0DEBA685A850C35B267F8
778CFF58580DFF23C8BC78FC7AADB8A38489DD22C01C78EE02860F6756BB6F1A
BB58EEE7FAA4A26933A7EA475988FFE003A2E120C7B817924347A45223591945
2C04FDCCE2E3AE152D3552B881E82055EF9B1B335ABE3B099C8235F2AEC960EE
3BCDED360D2B6DEC94BABA0FFD884019204902C5D04CF71951441FD174756E48
DBBB14F1CC6106BC953605DEB3F9A47E2A0DE3EB7025D66D5899366DAEE3CCEC
7FE247A0CB0AF5C80DF52673BB21073D7A313CDC5FBCB16FF1571FF48BB4A53C
F8E59480229DFEA4CF5511FF3E05D2FF49AC4525C5166857EECF23B016FCB9AC
CB128A861D1298F3E3DC69433CC20D6EBA22E762EA7835FA9034CAECFBB3E6B5
A3261EA5903F9AAC70E319262AF6A419416D4AA1E6632B22D5107325266CE303
564392765BECBBABB05975961FDDA498D72C313AEE1EFF147266263ADC2D9ABF
E3CE5EA8AC69ADBF68463DC465117362C2F9651739D55A3C783741578CA278C1
A8AA463549F9632753F9578845524EAD9B7943979A2D9D2FDD4A72EEEE8CA213
CCC8ED87296679AE5F800C4D6851456C17CB43655F55CEA49F06D28202137960
410133381622148D2189ED0C0B7B4BABB40773EB0005A7ABDF11F95766247545
BB7EBD0F3516AC01FAE8251B5C7BA4C53EDBFE33850D7A6206E59A88B5727F21
F8D8E40F0A3408AED9B6B23356168C0181662F53FF00D1BC5225FA82CEF29DDB
9BE10503DB39E80E2878ADEB7CC504A8B2EDA40FCD83CF8A865436567D6AA32D
F49E5F7AD9B48C79355E72F5AB096AD0030F67B7BF92FC0B35C5E15F5B20914B
AC7601CE92BCB69CC6117E00158C33B4701A307DE2D1952948733BCEBEF94523
148F0F1F0068E431EB425FA04DD315AE10FD3A72CBDDE0016C422FCFC22D86B4
2FF91FCE7E06435BB294023284F8DB55A51FF5642C36D1F3B5AAAACBE1AC4942
05C3EABB73A382CE46511C38DECA067736EAD32B43BC8291507D44777B644966
9D7B833BDE0EB1187C1B15AFE39AC61BD2A1E7162E501AEFFDC96345BC245CCB
BF9F3E2AC4A99163C4E86DCF6C185C0BB2AB849DCA910E103C6F357ECFD783CE
117BC151F10A480FDCE505FAC094D1308497745FA8B720F2447A53D159DD9EC1
74D9781C6E5E42DFA430340D570FE840E1141597C9EC31BFE1EDDB4061DE25A9
DEB1C6DE2C0BD819C083E7094B84588D68BD7C0DE6BBECB9EE0870FF5C2E483B
9171450E4BC0F6610E8EEE85AFA74550DACD3783BC35B996D439E695E2FC1A84
9794839B9EB98E20E6D699DF201E63A48A39841AA498A304E6CE121A7DB94871
7F2B65B63756FCFB1ED0D8BEADE6DD835F3AF6F8E8C39F00A9B4C5CB1FDE6F0A
59C6ECA1BA3C7EE4290F0D898BB3E404CCAA91FEA4EB63DF1792AEC6465F89F9
EBDD06968A80A8CF7BBB5FEF6AD53DC3B8599690329703066C2239A18F39540F
3B9465D82CDCB2E8D3E620718FB4505370A82855EC7332D34DF6AD043653C129
3AABF2A044DC229A0D015614C10984CF877649C07C2F9B79EF6630819B767325
182DB2AD7C72A2D1934908E9C55D824F63305BD29B895D3BC181C473169DDC50
7410EFC2662E77A4F4B48D25C20EA2A02B614E707CBDAA4BBB6CDD4D98EF96BD
598A42C108D34C4CED6F0043183A4C3A1CC834254CEF258B26BE69831C4B626B
2703DA87337810B016B0217AF1C9B36A0920F80374ED9B700618D823FFEABCE0
75FF9580F378E3BF2E5E85E97EE665F4E74227B5A328BE08D81F6EB1A4EF484C
A44CAC78C167A0E5CE18889CE0B44A0315084F5C57B2E2B057C33C0E4B636965
53E3B2771738C933B73CC933661DED50EB0B11C185B93F7E8C1A2EFB24B67E10
CDC26784EF58F25ECF56ED5E9F8ED3E15EBDCDFE2F960F9C8C581C2B653B317A
87B49D8713DF67297C00D508B81DDDF6F802A1FFA362AD33E97A907B13ED4B7D
58A450EB9F005B545C2F6C537505EEF3F9C308DA6E45B5ED0F2EA7E47C8CC448
C540C6228445ED2ACF1E9161AF9CF90778A3F48B01977F43E685B502F484639C
6D4B0394C5527A69D47EEB41C639AF02693C47AFD55E522C70CE84EC6B9433F8
4D6F6FF7D520103F9DC9FDB71C40B1E777BAA2FFEDFD822B0935F06B14B7C761
C3429C18165EC41795D288BE5A70E0F03B19477F12F484F5B79B9C0731A6F2C0
7190BFB61B710DDA6CC608A623FD4459C787E05B76812EBFE53504F2B08A8087
BCE32EB661D14A16823A54569520D5B6AA5687207886B4B3F27428ACC76C3B41
5AA16BC503F0F39BE0C94CAF9E01ECB01DFF39D1558AFA51A6FDABF03BB3E3B0
FE32175BFFF271481BB46B91EE932517DFE2B815D288DAF8F0B47329533ACF63
963449B77B31498F1C66256C554C63BAB2FB62CDD5480E97BB4606EE953350A7
5AD01DA8E2D631726B8652D02E450911B9742ACBF7875898BC2950BF5817596F
286F59FC689CBA736969E56416C1C2EE2CD6A77E2F27E834A3757D470C79585B
849592A958198D4E66C518241DE7AF19909FD5AC3B30061C52CB79AC25F37A4E
4D195DAC65D1C788E29BEA16B3FD220317548F62FBFEA74A68B3EF56CF7952FC
568B148036CCAE7E24E4CD2B62040FBB7FE19BB6A2B35205929BE365F40B9D57
6708B311F7A22C80CE90879E1206F6D82500B4E4476AE7277B427FB5041B5A74
905ABE953028CE96E2E4A12CCDAA7EAC6BDD6DD223A4D07617A95CC8EF66FD39
0706AA1D631B306D4DD625AB51DC370B95A56E0E16803F5E66A31AAAAFCAE6A0
3034E2281BEC8D06F7B369BE66C21E2EDFDFC2778F1D8EE76D7C87150B987FA2
E3BE6B18E4311693ADA5BED002E27DB142D50B8EF2CFF35C60ED37C997DEF179
27C9D06F5711A9E43541A8C0D10C0B97B503F0677601A35722C36EB5BEE78C24
AB9157BBA1DA686CF52E982FDA7C9EFCDC6DDAE3E423B40140F7AB6FBC84982A
912BCBF17E8709DCAEADF7DD64225E00D4DA958B0CD80CA6A905435210954A6F
7E2E8FFF482089A63C4856BD1DD16F86DCE1934B51FE745B3EB36A48505762E2
56CD75521A8C02083E836FD8D85DBA9094E105CA0C6CF6C122C2ECBB711D50E5
86161560958B89186135E2ADBABCAEB14B34D2A428A3EAC5256F54531F9515FA
7A9458A630D71D56B737FC0B6AAC9E9CA9193C157D2489EF10958D9DDEEDECE7
CECDFC017BAA8166A39AD8117BF368B91934BC6F0BB314A369C15420318F8523
77C83331457AA47AC07B6224609981DC574B05043CEDD7015FFF40A9272A5354
8760D60E9C43B860B5A9C51AF0BEF11CC8E85B067A4023452DC33BFE10B6C23F
1C7ACA39A6117CE4DB91E197AE372A9C936847A155567102C65DDEF02EDF43C5
EBA02A9DECD8DAA35F9880387B45785C2A6FED25180F4035419C0101A33474DE
AC4ADB7FF6B751D3816531ECDD6CF5BA8E88C0AC818C4D8691E084B841E6A856
A4DCCE229793ACF8A0BBCA748D1F24E11B781832929F59FF121A750CC96466D0
9701A14E3B126E4770720F10276A1BE19E5DD0ED2EC9BA7E651CC54C45BA2FEE
00D444D1965A9EEB8D28698323FC999AEF1676C30FA433D9C5648F184A66D911
FDA9633767CC89A787F82D8BDC1145B585768FD6A0ADF7F65CD62F2454044F6B
15A47966B48337973108785C1400E0D96EDBA20A78D585115ED892B5802DF919
324682903ECFE0A0E8E3E94B4607DEBEECFB7C76B5D05AF43231C262C7DDE3DA
316426D873CA2108AB40A16786F6245A907E7370EAF4260A698AF7381E9F3948
5C226284125367D10FDC376F2C32D769F360787D3F7834D125F12A97B95F6A35
4624C31C68A7AE93007B50E97BD02496F62FB0778169721B3F1714B1B625D157
AF7301691C0425A75BAF36903C96F1DF07C5ABABE5B485768FD6A0ADF7F65CD6
2F2454044F6B15A47966BB57F5C252B7EC46C10CC7F7911BA56CF0363B8DB250
53126C12C410541A9B3A05A518DF12DBB21DA4441F82EEF3358D669E201EA885
3C695C665F456A9944E9FCC4AC4032F55765C97633CB23DFF6429109D61BC3E9
96E6DFC40960E118A3C99F54BAD880A38BF738E1744ECD97D383FEE2CBE95660
4FD5DB626002B25FA13359ABC064E878E9C94F64FD3A69E30840EBF72F155225
45B91047C56F490D13586AD5E371AF120686B7B7C729A4047457D56024B115AA
786B770F7A5B487FE6F8EDB3FD5ABBDF994480157BACA1D61B1C7173DA005446
83F42AC8C76A06B42306B038F7F2C41C143A8ADC78D79858617D073BA2D0813A
B238367AE778E952122F173E590355B429AAB3B738C4A4B2DC7667B241C6A3E9
95148703BA1E7D18074348DD5A81B96A24B34976A807F216E2009FFE57F6CB0C
B72BC26EF0ECDD29FE9F2D7ED74ABA7D7F6D429C04CD1D5D807ECC4DAD9F5EA2
5E9A006F8EDBEB4D0BAF47300B80C3F944CF3C1F6212106F20D14D13E3848CA9
5BD36E5C55162E3FE26CF1DA2D367E68EF2C3F555A3B98ED30070CE54B0FF340
0F5631ADB9D6EF00FE931D4F325B2BF3A0A660B9CA11241A4724D5BB1F2D59BD
2F5C3AF8360EE3C17DA891FA120B837C924FBEAD654C6ACB291CA29784087396
1DDA05CD58D3F79518E318B8C06D63AF2A82C6949FB643080D3F721BBC79B2D3
1D9E06D569E571897F07976D10E526F1897940DB7C6024E88505184F23631A85
5144FC8798D2B6E2224B80B9B343D04D44986B49F7217914C2FBA075F0A6EBDB
D7754EE0B3F06E7E7F6D9B01FF49304EBAF0638AC6F539C21436A7D25573FF22
A0D0A5DEB5BD511B8CAE488343C923BBD13695840A4B561424774D12366DF169
D424EFB12A1E26DE1C90DACC464ADB2DB5FE1E812AA72D3C1D2571DB1B4059FC
EF9E37DB8867CCAC10F06061BFFBE2013E4C554737AD7D5994A3E5556B0AF05A
3FC391EBCF7DEDE652F93239A18369D668D2CA046B557000AEE308E1054CFFFF
5DA4728BF4CE1D892052701B48B81F5B1CA8BC64BEED88C4BFAA296AE5118931
9696D2B0B62458EB6A42BA3AC5B28DE4438375EDAE3E3567D66FE5ACB2A41E09
627186E9F40DF393CAF0F0AA8A81AB02413C8071F4B0D3480F00DFDC22CC8FC0
32E38B815EC475E9DEDB864E1C505E451409F058BBFC0301087271EE7DC9EEFC
9EE8832D60E91796C916FAFE58F51818B80BBA5114F490F08E13E483D3EB2263
E895FA3541582667A7816DE0508606B25AD830B5B8D898D2050E58B55A8298A9
90923009C2A49FCA5BB62E5E51E56CA70B16425B302525983AAC7F81979ECA82
31422739C0C58B4ADD86BF5091514E9B672ACB124FBED6580C39D6A130678100
141AA1BE75499A088196A877CFF424F99584BFB274C4D2272312A033BF27F742
02FAA42ABC3CAE601F4B28700E7C9D23B13DC039BFD0252FA34CD98FCBD9B855
AA0BC6B2582A175D9CE3129549C594D33B30DE0A59DC9A63C681536FE217C7F6
89EA1119ED5923656F6B65295F00A4A4F6BA34B0EF5E5E1F853052970408E1B9
6714C7B1D4F806FCC0A480F79FE2D27097B091DC0C66F3A58C1307D6029523A2
DDFB4F1201A25590F3877DCB553666FE38F1C139FCCC5044D989BCAECE1B2C68
6AF072D547A5AD7A1C457D4DE11410C601C40B2F4684F969E166E6A53CFAB75F
75CC28A53483CF31573EAEA7EF735E4FAB04830EF077A8D788B224C184339272
767A0E58AFA7A2B028395D93B6DAAFDCA41F8C89E5DD3657D6BE339C0C464F5B
4DF2E5C97E9F6212DE0F353991F34A2C7DB4BECF94937CE559EF6F456205FC18
5F2A12E74835F56A0AE5292978501C3BC93DB2EDB90494E4F8E2CECD04460C6E
175BAFC25C26D4BFD11C1BF9CE01C9196A7B32A4108F00DF7655BCA3537F7108
8F57D3965694C0DB35F5DC71AF0D1CD13D5DE9B840FDD99F451895FF5E7E81BD
8DB6E6393FB6F09C44320EDC25D2F0FF41306B59F119DE572E7F57DBEB3C0C57
24BAEB74A9F6C44159C4273223D5EFB91C0F6EE88AC486232CA6612E23D24F35
302D0D8287E880F0B73A502C34012F0DC204A85A2C9C8D80CCC366DBEC7A1569
E7218E5AEF8C3592133F6A858DC35240E30D31C36171B37EEC59A516F15F2294
9AC658037300F1E113F1DDF34E2BB54EDCE5D6E365450F5CD528BDCB140E3F68
E39199963EFAB9552ABC4F14ADD19C613A869CE5E24218F36326D2D0D44CCAC8
ED86576612A466C00A9A045FEFB39EF1ABABB5EA4F9031F861445EB8E445EFDE
8E009C9A8B0A99EC2F78116EC8583A596D714F902469A100A7CE055991148045
A1E971519892484EE997122200398D6453887474ACAE40009D0682CAF5DB88E4
08B799859A65C14155EC3E5238AB3271A5B75ECE9721E484AEA8DEFA2A74D0E7
F0795FAD09FCE908A5BAC001904C1FB4D0A37966E4242D522ADC89CF698C61B8
61F1B4CCA12CF4B24818A880439BC8E1F55749C832D6FE26E1653DD01511DD54
487CD112B59BA801D75428F331EB561A6F257C8BC671CE3A57F9C838D08CE835
765AB686D2EC1DCE1B89A2104D9A1C26B150D542CD076892BE8D05A41BD4C7DE
97FDC0491230A8942C6B0834FB86AD04CBD02303654E4D18ADBDDE04B45FD7B2
E7A5C8A7753542EDB8976C7550F4D5BB67565F5AF5CEB41549C09A04AE62FFD2
0D8832B07D5B1D25AD1A01EC4C31819D2DC7B35CF2D9F0F492A7003E9BC3089D
9CC68152679D99FD6E52BA3B72784951210B677F15B1A4491290BFA0567F93A5
550CD9DE2846796F811726E41351E349B6167CA5058EE84D1258EFC0565E43A1
380B4C95188629BD49122CAC98B4F567B91DD3E1315F4B5E508BA65A489B6854
4ACD7953AAC7FDD496B6C98FD6AAC616784D91B39AA9B2B0EDF44601A6A4289F
423213DC97F10BD50D76B96DF53FE3B924DFA2FB775CD82E40FD770692AC0631
E8490313BFC7599FDC7A3CF5B6AF26E79DF062A79216145FCF7D27CB7F13F38F
F4ABD16D2FC22656FC32D48527B5ED5B7E5005F73C09B2279ECF72E1EC79A609
DF0A69A579B6ADDBA24E6516346CEB796E09C34156B486747CAD5B82B4548BCF
EE3EA0810336DA1DAC8F01EFD3C679ADDFF08ABF8448F2566614B3EE571353F9
64CEE868A03CB185C7FE7D8738744D88F0DE192FC5EE4906BC6DC19203553A0C
90867815C927BFBDD238E291868D2ED9F1820C8137FBF361E35F61C3870D98C4
CB0D2E69BB0D43A1842C7C6424B50E7B04B98BA05A0DAB161C3FBB0663081048
90FC7C3E13FC83A36F2D86CE04D05C73CEE5BBCAB3731366C31533B90E86F1AF
F6445F80018F6EE70C3C181AFE9DEE766BC21BEB95A8CDDA4524ED5C68257D75
A455702A4E56A3BE26B08264533A31EEE422402E174C0FEF0F7CCB94004DA5B9
14E044552AB68F0AE2AD2EAEC84A3320B7ADF8AFA0646A4031E9B33226989D59
C19520CBE7228870D2168A99303C3808C0ADD878901EF29C8C1E3662B336F249
CA6F816E51034096C7DFB7C0B58C7B93A5357D715FFA30FEBAC71554BE701758
40A00CEE82BF1B18B278E08F612090F755F7F140292AD4367DDC8671EC48E447
C84A11C0CD332170FAC1435C0BBE449DC1472CECD48825737F1A518EADD9F84F
001B80A6617F48BAB0F19B660A922617123196D544A209F27DFD7BB38B6AAF0D
464E6A2F905C553DA08219021E2A234AEECEB93E41A44DBCE7822AE6146DF690
F9D6DC15D52DAE64F1831E2FCC5EC3D5A4F5C2CEA86A95E5116F2067AD2F9B62
E5EDD6FFDABAF6A0834A8A37E139A79F095323A575E10783F77420D0D768666C
EE5ACB2B9A322B90907965B84B3C2BA8A11EE7DF7FBF530330233066FCBA83EE
6C45350AA213AD5635DAE0433C534B70A853844934D84377DD60EF2410C1B971
851CDCB775064F1C322C6E38CD59BAB24A9CB1F8A57BE1B2719BC8C297AEFE71
428161882515E4AABD35D9055A0976696B1CA4EE091A04E8087AB08DC08CAA2D
34B420BCC8C2994CA23E307AE9802FFB82D1C752C7499CD40DB764FE20C0C9BD
96D06052AAAE6AFBD7842578CCDC7AC42396B29D188EDE9AF272800673DE7777
7AD2F477516BC02E7551BE3512632FD0D791C20A5B2F606E27FD69D4FA6B2B4E
797BADA50784D58B29AE02298E45AD1A72EF14A93D432EA7262F3D08F5FECBAD
EC6622576A70367FDEE4A3156215C7B8C350D275A3EE7815AF267F80202BD40D
E4486EEE19504D9E68913426E1F3D6DA978D71173DD44AD51BEA0C07FEEAE4E7
89F09742F23D2C7137755DF3D6317DD57DF6A03F33B3DD747A459A6DD4A25271
EEB98E4F4B8D5DF985DC9D361186C407A94F5642DF9A3F0E72396A21313E9303
F261BCF39F71522C05A847E9B42979EBE659B7071D8D337BE938D44472C1F018
7F1952DFF1E66DE34CD1EBE69CB931FF8A7CC284437B3F258D6A4CED53DFB2F5
74D4EF25AD760E0CE29AE92CA0E01F736838D574706B290B8C9EA92504A0B434
070C7BDA1A998826C71E50FB43BB32D420E42A0AF74C2F9B0AE3D39E8B9BEDBB
7E33076A47DA33227EF66C6DD512DB34598B8CAE1F95A23E556BEA098C03D911
432C91AEF2E43E8EFF19423ADBCE07F54C53C56C38AC88B247C03A41F3F6F886
530C678083FFF9987F830A31DE2CBF3EAF74920BAFB871447DDF2102E845B2F5
18959C5FB2674E427DEB466E5A8F2FD1B784AF5928100A1B358AAC8B6E77856A
3C6A7BDE4E448E92FCD0D6A91B3FA307A5C634F974D933E9909F7C4B97E16186
B80BA4A3DDBB6935080534EC9D52D856DDE2B67CF4E2BB0289A463837F5B1E7A
BEF59C69436D9F5E24132104E47B76E4C3DCD92053158042A158CF7CF78E3925
06AAF71B82392B098A1C120CB1DA95F8BEC537724AAF47723E9157AF1175AB47
229DAA2628CB763D5E4277F9161392E5FDF83E73B72BAE2AEE78279A5A683699
2DE6F19A270E04AA8A8821E375D7AF5456931EB31C0F33FBE2163E9A1F270E11
0F1468249B380AD6C1D36DFD224D480EFE07FECAA2C6A2BD03A17BD4A69CFA49
3BE0FD139075AF8FC314D0F410BFB85B58C11900AED37EA3A4856A105CFFBC2E
DBF29E390189D0618B3855E76E03839B914A5337A52268B548991C02156207A5
D56D34179E420221DA80A91EF11418A22E91F1947AAB4A780DC95598B19952B6
D848BD56AD3F13CB44E7FF9A3A64AD95BCE19C5B927F6DB5DDB3A6282C284F57
0402602E98B9511CD8A9215C5C4187AA81C5BA8878DEEA279D9505CA43836E7E
CAC73FFEBD1519A01F25D3A89904F2562BE7D1A69C95DC3C095B1C5E3EF09C4F
53846CAA02AC50E8A0D0A7134C4C75A500FBD8A59DD5B5DD072D68FDFF897EAD
44A30DC7AAFA69D2C4AFC5FE40300D9680CC4B043EF9AE4BC28945C70D6879B5
03089EB6F1C07EDF0D6990FE22E158A8DF1D45069A9D03618D0DE08370C0F444
3F2A31D5FD90C4BFD07EFF238067A93D3961E5B436EA0E03ED56111A4E57A590
2CA8BDA411DC62B48161BDD24B02DFDEE374885891FE38AF4673CCD0865522AA
D5FDCB08A416715CB0D26D37DF6ACB2D15D24BBD90555BE6A705C385CB1401A5
1C805A11C34AAD8619161726AD1EEBEA795CBEE972EA5A569B467B600F964408
05ACB9600243FF420FAC73B46A05320CF0B704F4073FC4299EA43BC71364C23C
571CDD6EDFC0FBE3BDF95ADFF0E332382B652D51A79C2A70729724A3A0E3B6C4
81950B18EF834CFF3026E8A1B4EB4682345DC941EAA825622B5912A142C0FA24
028AEFE3828D06C6C9C62AD2C18B8A6E0699FE48C252743E282FA04C649C3A66
0ECFF551298AAC473CC99300BF0432608EDFD858AD4C7786A4C3ACB739A60030
F36B920DDB7D5F6AEA22C14A92C75A3A0E2417D6FC044406E8BDCBF87B91DC6D
AF682AB59E489E1955937388000BFFCA35962757D0CD890EDA41C79BF06B97EE
2A6D53972F7748C74D16A806EBBB16A2789F0C4CE72DF955625EB097EF8A04EB
EB4F93EAA3F65A65AC130BA117B19BFAB8B2E84730AB23E0CE6137CF83CA0E49
9517B792DC52FBE264F2710EDBD2BA7C8586E9EF92DB448F5A78D308D1C6A6E8
E85AB2B341CD2C7F8497197D2C5DC43B5D1D9FA55CB168C41B82B93A4F44302B
D85578E1D63F8E7090FCAAA181F109716DD3EEE3C28953D07CA9998BE79DBBC7
41D5BD0EBC5FDFE53B81ADF1BB586A16E30DC7FEEB9442EDF0EE95024061960B
8408BF7CE628CF0DABB34ED06DEEF9FF509DFBBE2449CBE7B07013807589DAF8
148D380DC8C6644378A900EE4AD77107B28C5A4F285A00ED11A43BF8D1E152C8
508D33E42060F8218A52ACBF00D0F295F75201AC1559127CA37563F5B6D97D64
5F26862338562D9039C35042FBAD9756AE36563F296CFE76115E9D64C735690D
E2E008301D60083FB754FBC8857F14A291529A1EA403865F0C716FC7A60BF473
DD0CDADEFC54FDEDD86983173E9B3327984546E4ADC13DD9991690375A745550
DA1211767F82C132A9F181A81449D3D4448CEA32814C6C87CC693DEC5088B9F0
6AE03DC4BF01773F6B0E765084BE46ED55AF0A3B8394669BECF2190F31C56876
D4AC2828366CCA6C5E21B01F5AA7712801E6DC10E9188DCB9A85A656F0477BF8
59124E8A8B7A0D8AB1ED8837DF0E55878C962B1B2B1F80F02D5575FC16FA6085
2F70C12F83DC9F672E14EA0248907D9CFEC6EF5AA4E214AE8BD323700B08D334
5166CCEE52DEFC895AACFCEEFE8D1661EE2365B514149114134BFB10D173F71E
80C900BA1E725C21FBD61DBE1428CFDA63798940D72EC70202899C79459DC7B8
9BB03AA222906842D1563E4C5D700C347AFE67A97CDD01F624993AF62535013A
AE8E042D1D8733EEAFE5DD33AC49D88060AE3FF9DADFA2C85D439412D46830DC
5201C527BC148FD303E450EB583AFC648E8D495221A4CB065B2CE10A3DC0B526
02C3A2997482750E38F884F01FBE853F61242BEF5DCC5215613B2DFE4A6CDF53
5BF82FDB731337B2FCFE03F2BD64CF631FA45C6986A9A82DB4A374D418A1DC13
FF164E9850F0EF9DB38197DF1D56E3D2EE9FAD77A773506BA1035972EE2899F8
A01750F60024B98E6B5A9CD6381B3F75E8D40E28CCD9D5522CEE519304ECDB27
F8E9A31BE41400B80E74C1BDDC4FDD40AE785980CC6B77EF749D83E777F0CBF1
9F44505FE9BCDA7E8EC74A1CDF5E4335B60A0B3D4749FA3580B6DACD00621B44
5CF877ED13CA83FD09BDD4DDC13762504D5F162B64D20DE2AF7DDD8A5D7D4625
986D673DD505F3AC311018994B3DB2031BCD58FA05A9125A3B90CE131DD25874
11D1B329801A24CC280E0F9122A44248CA46DB1AAD7FFEBD24FA8F0B7C147EEC
E12C42CB27786B062EBD5E800FE47393A35A9771C8D2A5DE2F014E39AA57ADFD
3A88E1D52063310F5A86C55EA53E633CC0F86C78BE0E60A68C7EACEF9282BCBD
9EBFFB6AD0D750FC646E7267F672B43AC1FA919F23A238B59FF6E7A0F821F9B1
8E584C27A0409F96B82ADD225DDEA25E44F5C8E8EF50A1B4AD0A77190B04E75C
3851EF93F9253D88108C244778F76B76C067E3ECCA38170493E90BCE33B11C10
FA4F775FB86F9E463EEBE718975FE0C3F962E80333F58D81BB12196A15651E02
9E965CEFD854A7BC26C7844E6A0ED20F1325658C9AA68E3A2F5D85B0F817529F
E25EF268E61394993C8467310537494FCEA2E0A9EF95C70D6D10605D470455AF
E0A03B16FF19069AECD78C1A6D3579C2A858904ECDED4726ACE2A83D152E7834
F29605F51A781D5143A505382D5ABBF0A8C93F7FAAC4B75D6E64436B8BB16536
827C778B4BD1F81C8682200B00AAC3269D765D1A9C3C9901447D0C6FB187ACC5
DA3B01D521A95A254C74E77A542ECC85D2B18FCA27DF2B44AA1C5EC043DA99EF
B9827E73746B4845C1AD7E7C0B99FA94366B103C5706CE8095666B1742E80BDB
8FE1878B9B0FB2D0EBF3BCCCE3243333F0C22A0C6F4FE42BF5ADABAB67791BD5
DF0D4A4AA0634E820953B714C5264E06556A411FF7C25626AC26A93D159C9227
2F95E39485497861D1366267EEF86D438235ECC0B896D72EA96D0A19EF2A6EA3
104F011FC7BD29D6C969DDB7DABB4F130A00B361A3C5F939006A3612838E61DF
68905D2B9522FA2AD3869D4497CFD90953A3CCE7E4557DF6A09F2D89A8BC4A56
409916EC10C4F1E6E85D43F8FE1FE8FD5388745ACF8A3355BCB961C5FF6999AC
1AEB7663440E30E4ADA65D13CB0500106B9E70B100585D1FC31C398BFB677102
92F0B15C40231EE76D051F08F732339935B2328B3544D44A77143D171557F8B3
A15C2BDAF8D0314D02F60523357C10008D65CF093D8FA6BF158607C1B975209F
45854E958D92EACFFC82D0F480A61F76E0184D77C14602D38993FFFBDAB5A7F3
1D5EE74F399461E7BE80C43180F188691535A45098D43464033FC65AB0856F07
FA5A6239F9B714D0CEC132B4F88E3F2715323C2B0696551EE55003953A7E3555
C7471709EA1B1EC2ACB98F8B7D2D32202825DB3A296BF210868BD4D29908E0D9
F0A5E8A9C1D5460FE7E76022463E2F666D130553B2D52B42E30F7DCD38003882
A66A4C6E692950FC142FAC2B939B8977D94115AC7A0C4776C06861092CF149DC
E4B7EDE367E5745BADDA74737B4E75AA15D76A41C7E47D0E5F47E310998364B6
358366556425A6512FB19012EC0E35850733EEA06A82EDC3406A490297F6C221
2DC7B29858CAFE76E6DE8CF8E27D70DE4F8EE2A990701E2FE19BB871DBAB7302
65799C20AF8458979155EDDA5451151F01B4A6342E7FD23E1BFE828578BC5697
81E347539C148F7B294C2BE6B3AC66F65C9CA41CCAE559F644FA4CCE46931110
8A5A51D5AD8A6C5D47ED0B7FF24E721513E0BC3B68D41C61E12E69D7812CBA05
BC6870256A6CDCC3C64399D346FBC4837A748D44DCA75A805427B0D7C51B28E7
922F7745CFA74C3545BCCA9D6C6D477305A619F4C40C1B7DC094D06D2A450FF4
863CE029C497BC374E61C32B645EA0262E445D0025B6EA75F1B3B0E1204EB47A
A5F392BA92659428D3F256E927F5F5628659FC8969E6151BC502E22B0144A2E9
97DB689CE8C11AEF87836D2D4CBD9A49AC65BD26A898E30FD087CD35CAAD1744
90F5D0FD770227FF2A66E23C740E47ED891AE15E895F7F31C8E591A7DFA83721
A1E10CDA11A50C34E001B1B45D6D423A20CB454D8D2EAC013FF6D4A8C73044A5
2D71297738A0370DC9F0AF996FD77004195A581A79160B65AA185C81E522BB1F
08CD9D43C538B1A4C2AF7467A98ECE4CB9C3748E1C6739AD79E943C86044B20C
1B15EF7F0A14E3F9ADF7CD470F91C2CE0E6D84857B4E748D5B25D3DB60A1489A
653D231BDA635BB36BA5038CD3F1F2D12B2A8E1C2B672E7DA3A29EAB48D12AA6
758638FE806940157CDF358A81B7D0D70C43CBDA663042EB1ACA6A43742A80C4
38C7410733FAB8C0C7B4789336F917B0125E83B7D0936D8F34A39316596DF3F7
74D3814481353182403FC0EA30AC109BAD5A62F4F85E47CD5564CCCD76E13A8D
1AAFF5A9566A4E2E48203F6C8BBBFE3A02F949971D149E6574A445C389E44D5F
6B36133B9FFA4F911B57A59B0BBB4F62668514E949E07E77386A8B6E7AEEB0E1
C3F1A5DED86CDA1F2D2F2C4B4B4DEFA0AD44BFA5A568A743FF7B1B1187B10A34
8B11A32097CEC76F08EDABE22B162DCB970865AD7978BCCFB7327EE9DC2BB074
7303EED9F6E1885125230D733EF7B79983A67CF95B1D72CBAA45369FD1AB8030
0CC4092F29F07E72EE684380788C282B1A900AC0A0350C10031164A1F1E35743
8DEB07F64FBDDA83E6C00A70A8FC29B73E7FE523CE5C76DBC968EB5671D91B2D
B0AE30314CEEDBA0E9591868021E69F6DCF2143E5AB7C038CC804998D97BD155
9C90767892E293180BAF7794A683DD97CA39E75202F22F323CFB457812020F3D
3F6203F77DEC86C6D9A3ADE205EA049229CB70A7565FF6BAEA2EA7A16815796F
7C2480312E73DFCFC285F5046A0D006E88E4646E951436CACB080803F39DDD6D
E00774BDCC5EA988A2944C7F798EDCBC69631F21F5158F069AB15D0102E444B6
0BA4EF67032C2D3B1D01AE2D84FAC1670551CB5EADD76C00DF3BD6E7657FD448
88938DB06B0BCC7A6531A073945C63FD112A3D079BB8D32B64B95FE8E9BDCD4E
773764A3DD294E71D96233A5BEECD5DF72F40E1A3DD92DD7A21035C749453600
AAB91E2010FB4AB983E84D091FF421D414E857E56497F2C086BAD500B794BAE9

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AE61BBACA076E8D7A574CBE1D26CE1AA011CBADBBEC510
AC62B4B219DB7004CBA39059014930D43C04A454C2DC9259A5CB694336732534
E91C85C0BA6CB89BA225013F5D4BA685200505C07E64B2D4D04910AD36F7607A
1F49CA66CB1799FF62F4B6004A6F2F81BA6E4B03157AF42FDB192340DB65AD2F
2D3AACC0EF280C59CB7C3428A021D3A862C1D10BEF7FE76CCC335F6DDBADAA9B
42A95778F78610F6A47D8A5A322D01FD4258D7617C68ACC07E8FF81098FF084D
9E44B1D059C53F7E34F0239798DB5F75ED2150480DD677F5CCF1CEEE63581875
FE81E991C81636CF4146058A2C52D99BBF39FB4C7FBCDE46F1D9E6E73B1BD662
B3C599792AD669E0F7CDF9C65F94E887C1E8E92C01FE6E9CAFF32E32E5188F32
9E2CDA61D7589E2C45A6B2402D0FC042A5607135E49AA6C62D9E16913710AC8B
7BCC2BA91249B0132981E7111A7668EB5E73730A4F8DDEAE362890F72FEC17E5
CBA23CCBA7C46C9EF97EC4CB14815BCA0DADD12A385F9D7A4389763F947FFB77
CFEA753712423B28D47966EF4C5B9D54126FF5CB4CE96735E2A986AA0247C5EE
233C9873FBD7F0F6618C375D1EC39D8686AD760BB56A3307FE78774A8C3352BE
5A1EE8E2F7F61D7A1F039756185623D191A74180ADD57A83A291E0736FB6176A
DB72B6710A1830B019063F32C69E40D0F63977B44DC57D2D73A7B25D9609F966
A09A37D37011B46093CB9B16A8BD173F983D133D6247584462B792D56CF5E1C0
150B3A2AE73C2CA3DE79F0FF25D5A9D984DAD3C654230DC8F3398E496A5821A3
E13539C606094814C76B26A1188D262E636406162527697FDF3AB8598108A19E
B8629A815573749277B832B5B726783A42FA5DF59E7F3AF52F6034633D1106F6
CEDBF64C08EC35C683D276EBBDA80AC0E8C451370D0A5718309784E667A447E8
E0BE71041B04F50D98E2FAAE3A237D063193D12E74E1FD1F2EE35783536D602D
DCFD6493B57E15927CBDAA7B2A6047C778BD654F7B0E213F276255EA6DAB5A72
55B49699FFFB241DAEA999F2303C9238D527317F3063086D33A2304FABBA14DA
BC868EDC7713532C7F3F2D8D70BA150428E71CE751CAFB2E53808180A0DD6D99
13C692A5702EAB521DD86AF36B9A50187792657E11BB97B347E731CA9EFB0269
C1DF667D045021A6C08557B9D2CD7446292B1A5E3679461872C2F1A54555FFFE
67E57C5BD62D2F682DD5A53FEE2A14D873A177A076BA9D00F5027AA8D9FCE60E
7EDCCEED1512A113F1AD4F6C983624CE6E66C317545B08EDDA87962888A45651
658118BDF5502422DD161CA1C95B96D3B2FE5CA5D0FFEB592E1F01A58189F860
2EC9E92792AA3B1FA8FA5B0097397A87254D0D3EDB2877AE27E8F575E1579ED1
D6BDF6B5C1261E423CA5098A5465571D9B82C62A237EDCC03875CC7420A589AD
D2997E44C66AD61AF7726D6C3D70AB8121EE930EAA2B2A015D21CF191A2A9F42
56EC4C58162212BB226A680A9750C99FD7CEDAF333FD0D8AA89AB153428A8EAA
62FAA4334C67399E35AAE613E2A42CC352A88DA1793EB189A237296D956D7629
98900BFBFE4AC8D3F412C9B6546FC3B2280A98A9AF75E762069DE92855F7F178
928DF55B2E0D33BB0F0B67762FDC49580A511B32C58C919FFC0FC40172CAE291
F70CC4E167D8F9D6F22A5B415F9565E574B5717FF6E5E12064675378D87FD9BB
2C521726527FA63975AE74739D74C0A413A567814E4286CD4E8583F1E41B6A8B
6379B7122FAF026619336A56CA7B1119FE8BD874CBDD00004C13075909BF380A
B001242095FDD178E5B4DCC5133795172E5E7AB04B7C0ED5E021AD7257584118
E3C606E8DB178F28BB2166114D660A7FC8858B5CB4F5B98185E3FDDD521E270F
347BCB3C08C522B5C510FCD8D5C76DD63D5E4DB865F98A8BDA8702B49B3FB118
7C8E77911D6F32FE61643E0FCED8CA468A7A12F7EB827BCFF404C957433625AE
86F890CA9A8680CDE5579800A533F5AA4ABD178614338E0C7309266F371DCBF2
47D52B6AF183FACEF694ED9626A39D05F054A016D2CEFCEC84A70A79BFA5E692
DFA9BCBDE88CA515C9D56F06C3279457F11E9B9F42F3EA1A62E27733F7F805DA
CAD8047EACFA06F77369612078F40355CE8B439B0458A972AA6589B9E123B852
093564752E91F6378D4F9508966FB219CEAD11A8040963B74F107FFCF0FF2C6A
7E996C46D9BDC098E708FA630A0C3BD8D03A7B8ECD747D9E96E1C071069DCEC7
D41C195C458C6FDCE04E1E2F1DDA8B3DBC8FAE2674A04019BA0CBA997FE20B6C
20D39C343C696DE79A7A97E03ACF9DF91F567ACDAA6655228629F51C1F50F67E
404270687C71DA0B5F1E2EB2C62E8D3EC89868E4455F7AE881F907FC60819FBF
DFDB00E8E802DB1909161B6F46EA92D30D20A9CD33C7C6CAA6BA85AE97BB652F
66A7921739726D42BEDA13BCF09FF5A93D563AD9B3617334857EA9E596378DA2
53E3114980F672ED37532CE667181E3BB7D861CFE2EBA5507FBB5B069DE278FF
ED4598DE4C35F75A880AF344F63BFF6B9225B67447659E2E2D7365C20956848C
C23D80B93BC61F07099E35A49BF54B28951476D717C26465C172378420CA1767
901DBC69349FFC842448FA0BA36465B7643FA8D3458CED23A0D96375671218DD
BB64644A8FD4088DC6A63C810D985885154EC993E9E1C43F7B61409A64015B7A
DC26C180F67DF7A8F4B9572BA4B3730DEEDA46D185CF1E326E67488D12EA6528
309E8B522E9F0354C4C50B942859A8FA025DE0D61EA176C66D8CB6C1F44A9839
D5C8278F0385DA62AC6AFD2CB99F4082C1FF71FE27DB1CAF38DCC56778C5D869
563EA2E86D23E582C97C35BBE2C8C6FB2EFF2E67F80233E5BFDEEF9DF91995B3
D2F9FEF74D43AA473DD193829CE2FC00818098BBC8EB46B3EB4F1ED4CF7E48D7
CAFA09AE4D59871FC70AE7E09F4F2E57B6E827A913074E2FBA2DB7E70988656E
786E2A2F9800F5C1054CEF96A059DFBEDAFC2E81B3710D841616A7D06D7E58EB
C68A166D1A15D150CC5B94D14C72DFAC3C99D918434A48E98309B1609C49794B
5B9DFEE8E9251F4669F3562A9B0A8AD6E13EE05C5A85056ACDE3E24B45F96A00
660F67FF21EDADEDF30FBBFF1C9FDD078794AA34DB1B062774825A3DA16635F0
173C577EFC9AE12CCDEA73063C06E94B68AB7D63BB87E370DACE49EB83E15B04
F7B4C6C2B5C9BAFAA9573F6760D1ABD1C12F4F3A2403B6B437D79CDBFFD48468
11C14F336751357C7D271FE3CF14AF6DBA021B5D059034EF99A5614B5068382C
7664448E7223C1B9DF2E7B2741153D2C6443DA10AB134ECC82B32FC9888BB03C
AF71BAAD1A9647C6F251C09B7CCF7E50B455403C5CD1ECC039A8DF5F1CE7CE59
1DD1A250050F33124F3DC301991BBF941072E6E4C9554797FFFE992E4682AD0C
7834A1B01771ABE8B6C1D180527C671707CF28A5247B1AAB813FE764C2F74F43
841C6B5F0132C2DEC73497E6C554900C7135036978F532B08BF547352E64C412
A27435146F2D4877C6CE90DC793762F52857AB72C6084C530CC4B5FFFA31AAE3
61643E42BD1CEC8BA15B4FBC00A7C9282AABDE05C87B8584F3C6E876A24CABF2
974EFB3287851BF233C4587C09CFB052316DE09A92D9CFC9452EC0839ABB0F65
1E45D1B09AF36D07117108F56BC7C76E18C7750BBF2E70AD336C52C26F9E6B1C
9131B6D901E69C9053E80638AC37319A1EBD7E197840F69B948C0256715D4B2D
9A9761781B1FB0244B18C66656A14217A834BC48C22C062A0A2DB4BE3C355B53
889CD2C6A493BC48EE94839CF4546F7CA78AE366D6A10F3B6EE81A29A8D33A4F
10C91944ECE06E66E76316F65EB493361AD9FC9C3CEEA57F336D9284AE15D00F
BDB5100BC1490AB1862548AED9644CE51AD06B7A53759F5665D915DE498594B0
75CFC79419FF966AE6E604294025201817A07EC94A7A5F80F606448919FB352F
0E4D7189BCDC0D0767633EE726F66915CECA4B09CDC8C6C215B195D3E87FF58C
5D5A87D3CEC33EBD854AA339E4B50382F3265305C462F9F6A752C520CDD84FEC
F0BAD0ED72BA9C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
9DC141B7F6830D6771F1A3CAE655CA173FA57D400530CA6FABDCCB4325478D0C
93AC7EAA9DF7605213DEAF94C7281D9AC68D884E15ACA3BA68034F897A2FFC1E
F76FA2A69CEE7F1E9543904F1773969F65553C3469FD85B2F2F89F0E547BFBFD
F62A3E47DAA4EAD6D47F0305CCDB297C320A48A3655FAFC810CEC6F6D68ADA4F
AB5DD7F61DB94072B0AB8F1ABF62A78E43E1578DEBD2D05109DEBBCEC64AC700
4C28C4F0A5E3A003423B9958C73D306B2B4A7C67A95F8B4E737992642BD3701D
39FFAD94524A7752560FE97B8E99A12AFCCC5044D989BCAEC863BD15CAB7CE63
0194962E4183C3838D9401260A743447DF953444B29D7CB004560D0685F73E87
72FDDAB87125F419F90D165EF1C2A06A9B7500C6AD185B4115777C6BF9C24D88
653589B431FB84E4DDB650C2F783594DE6123D3142FC5C99973AF211F2A2A05F
5A756073B85FEADA4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3580C547C2
54FBBBDC95998DEF2EA825E3BB2AEEACC0F30841835121B7A7D7A973F2EF67F2
795E6DD8CF55B9823AB2B15ADC328CC3AC493DE8C2F022EBFA14A2976D8E3559
B5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E9A716737B6BA413F846A887B
D1B3B89EEF73565F3D0D2D1E40E4C2811D37C9029692DF8E94F6FE39474EE13A
EEE65EC0E099C29064CBC0503FA4C89D845F91A107C8414C1648F6EBF6C8B1AA
7B2F72302AC2C6E6E9E4FD1EDCFCB8C648B2BDC18FE07B44B7E886DAB96F8B4A
BC3C584457B1565FE02E26EFAADB605C5CFE109AC7A355E2283555E10CA9070F
BB98E2337281FDEE7EC20EA060A062235F8848946BD058A0C86C794697BB0674
C1DA26CAC3FCFFE73689E2CCCAD5DE725AF6C7DE282CAA214D69B6793520439F
2991BEE6E427D4E82FADAC6C3829AFE1196FFD8D1D0F6BFAFF4F9062FDD08665
FFBDE33DB3EBD99D8110257DD0B832CB4209074A589041E903F6D89E22D34EBD
2B3C90EF5D9AF0A0DBD5145F0FAD88EB09D1BD84D00D951D4CF9252A4443EECC
AF1E56E5FF02B9070C1A92470E3AD7F1CD944E91ADBD1EFF555FF3EC5664191F
1C11943BB76D70D356FE5D145C73670D1A8F71E5C4FEE96C8D4DF87FF05432B5
165C8DDEF25DC98CBEA51FA99398860E1C252C17EE576B7ED658ABFD497DD5D4
E49663A5CA73CA347E27BC49C7DBD28DDB3AC7A78020551168A47ED789C2AD9A
B8C8FB7EA2F8C7D4D9FAB4B8DD91CB69558534CCE31AE7E157D0B060877AAEE5
14CFF0AD50200A157151F7625E63296E325E2C36D5DC45C5129C2D342CA7541A
75675EB2F1A5BF25461BB38C84D0651F4644CF51DAA8608BC3B698A22BAE29AE
3FE5C543DB648AB544E8212B3B2F97B5844022274F5EA46CF4E9D49CADFF1DC7
AD838B09A2CB6136CAE6AEA52ABA90745D527188599641549149217DF6B36367
A67BA60DB09562E82863F6C001ABEACCA36DAC81C30C11F98A77F4D100499847
E1102CC075FA1210881D95D6ECDD37B0B820176667500E58782156ED77373459
6699116573EB74FC1C83B091EA1700BD5B069BB7DEEE2BB45E7757F7BC00D85F
75BF5F32B350E2CF46BA0E8D0120BDB3E742C15DE5A8340318F907D7DB5591A7
08C83C63D6D457915A2F41B21629926169F4AEFD81BA2A880F4799EAE1C0C57C
FBC28FFFC956640872B49219FA101B88EBFA3E47EA4515043C418049903E3F36
885AD45509FC3CF7A376A608FC51751104BB96EAF8314E2322C457EC6683D385
525F118C799C34B50840604E7C248CA5BAE81E8C76C29FA3779933221D8A612A
2DFF00179C41CDD34E7015DD7198AD6EBD2BC01221F7E35F8662AEF8B6203C54
59E883141A505B275EE1333E6958254B6D96C9E54D47A12F4D299F67168AF7E6
1F19056BD1DEB7FE32A4F4E62D202CE86DDB34598B8CAED5B6DA81A6C816C747
568DD57D21AC8F8B1CD8B2BE97272017FC8176FB0988076E76EC6E8B4CA921C1
AAFC0EC3E24C38BF6D64E9C259ACF279C3272383D7526CEE1C178B1C6988F963
BB0D7534D41E675EF1BA59AA153AEFA7AA88C44F92801FAC61A4EFA2911B55BD
7DF444571A774CFABE590CD7C75BBE8B58EDC3A2C53FE35CC6B22EDC09857DBE
3019A7C60107821040CB0824EE588C4973D9A0D51FAE6E5FC9F82277403C5DCE
FC2C316D499F60E7C6C04DE9C117345C4E51748D3A5C5167780590DD9E188017
79FBC3307C0BB8A5784518676D62FF024E380036EC605313952366F3C351EFC4
33256002C59C39260DF18DDAB0BA5A40946D550B7831A2EE2670B2FC5DF8A50E
6F0C48860C52FEEFAA70B5953345568F1DA030BEF5C410DCA1D11F770EBC2E64
1196A40F44A2BD2529610091D8A9F09161A41BAC6A15727CE914A1009B2517FA
41ACD230B1E0CE76E289C42EAB07B0F60452B537A69B9EB54A68FDED4456122D
483AE830BE0C173A0D256118B0867DA2ACFA39F9F6EF1D81C607DDC242707D6B
53ED198367C7D54AC750A007498FA31E27B0F86C6D3AA81060727EDD60506506
EDE0AF44190FD947C4B9D41C4A6A03DF807F98C68F883721E6E7E6383207B054
006A409855639AB72C071CA7DBDEC1EB29885A11D100A9D443EC282E485CBCC4
8CA8861B0BAC0B3574ECAB561760E687C3BF7B72600494F60D3490DC63F40B39
F2C388F118806FAEF0361E5A30DA786E599D9055059C0C2180824BAFBDE47BB4
6F54EDD7D7FBE6B569AD9CA1AC51B9CAA30D805089E1E96AA5F1C7D8579C4D83
3DDC80D805CFE4868E62C90C06533AE6C9A73E86D96C6E3919B677C2599BAA26
96DDF00B27D9E1AA2D9A1986D83626E0D8D0C105CB6FC5F610237BB3C6E242EC
52D4D247307FDF5269B44DAAA80E7B4DAD286C0B4469A6264647AC1D5FB8AEBC
6481A94C6ED5EAD255050003F03E16A6529971CBCB06166030EEF983EF332497
5116CEE2F516B4E2977709EDBD3DB7AE516C55E742F598B2D718232DDAFB2043
F674EA73C9F043EB73E6A0511F1E28762342120515EF4AB7CD1C0D977AD77AA3
B19AADA40A0586A02109B864FE34566E17B4A1A09F9BA10DED06056B51C42FB9
B6A9C4362429C2FBCD39A24463D3E0AB8FCC9F3FD3A30F4F015CDE9893D5D66C
804F030B04D85B48DC345FC8249F699D5364BBA3E4FC59D1F7378FB3FA254230
B9826E6322C4D6231EFE10719E907FECF478FEF51DB2687D13CA64138054D591
B1C7894E2A0D724F4369326D31DC3FED9625DDBBEEADB867DDB7FF0678F202EF
8252CED93785F720E4DE92960A101294ECE75FFB72E6043F33FD3778024A3CBA
9DC490FD77F0F3AA902CB872E59AA81C0B0A6BC9DD687A18BA25D37CED0CD4E4
F0736A7C0EDA3E239C23A9BC94D2BB2581629D0C9CEDA46E01A5443002CFE126
DF21A740D9791D4FD8CFD7A635837144E85014CE922B9801C1C1939D2FCDDA6D
CCDC6E7B4B622D86519A9A42FB03DD17290E01444DE0216C35C52F0C3950222F
A43EFF75AEA3FA058494B0BCEE5A20AF99C473D1241DDDA5FDA97A2888AF5FCF
BB88F51495E5B2EECC7F07816F1CDFD16F7B82AE7FA98BF363EDEB32B1544C9B
7F8041AAC5EF16801613FCB3273DC62300B0AB0281C7CD4FBCE2B5356A2ECEE5
118D86CD0DC85A9A53BE7E1C06835390A532F3F6B1F8FF071E03D1BB27C6A591
AAF6BEBA1976526BFC9D408297302124C1A7A32D8F5976F7CA9EB64367E3161A
5B20A7DEA7A985D1C34836249AEF8ADE9F56E298AC1D7181D637A568C615AC37
91D8E50942287BC59CCADFB67B23FD0CC520310B3EF0414CB723B3506AFA56D0
24D45A9A51D740B3A96E7AB386AB4E1154350EA81C5DF203CAB41F0E6C48E170
4F311F51451DD607ACE85F8B4F4C828D7FF50D459FB6C913BB52FEF3A6D478FB
BCE3D06A8573ED0BBCF641FDA888EB1B9654C0CD0E070A900A54D9B875E95CA8
166B84CCDE9FB92FEF1C849E210276F72734DB97A902EAF9C9DBE267C618E342
EE8B5C4DA157F0B3F4ADE8D0DC6B9E205C7C32C2724172E4E8FC4B58E6CD01B5
9C73A14DBFB287B7017F6AE0F5CB1F557E34D6F3B792A1257B9FF5EB18BB80A6
425EBDA44D6753DCA4A6667BB22C841A91A8AC118812C9BB0FB860D2DFF11716
82E86970679952012FB4D39CADBCA6419979CFB0A877B1055CBFC4E8EEAB50A6
84882F5AFA6776BEB4765C6ED70B6BF84F03FB878D974AD04A770977FBB2C31C
4F8FF8BB1E7F5262B2649200FC5C77003D22C3A1E82B87DC2C2C554495B74DAF
CC33DADDC64D2A8C99DF087027EC2EC8DE518F1F6A50D7011BCAD9B86BFB6772
CA98CA95FFD014D72924ED65F147D6F231B461AF422355101AC49658B6396F4B
551044BB5A01FD8F30E96A773B1E19920DF95835D87D2262EC7AF31ACAC176D1
1DEB3601A993B6641F73D01D09636D8DFE49F75A1FEA7FB038BD30EB76410ECD
5062BD50BAEA04E96DC81F6F9F742A10CFFDABEB16062CA90F69D361C3182674
3EB62C444271924C89E11F2F498E401646F45EA63BA74EBBC62EB7903268006A
98C1CAD6065BC69698A27F3A9CA142E39598151578C3C118D40E9E8419C1A968
F1DF66B627B992C83529FB4BE67A1833D36D09829FA03EE7D559D5AA9875885B
96A2B47E4C81BA6C9E6FDA99321F57F6794E4F864073CAFF73E3C7106DE30A0B
E3EFD47261CBE2F070C5A57E223A0565DE2352C00C1694F3526F0BBE8E4F5D2F
E9D3A7C041B06172198B32F99D58E21B0A78302026FBE7A6BE1CE72DCE5CDDEE
C7E3113C9510F18204616B9019BDA26A143C18825686F9ED9506C080D968E979
B03376184591951FB17F3F4D690B31E8F6E329F88598FC36B36F9968B5CF9FAF
82BD496839A32EBCF1D18C6905B4FFB0432DF191F6023D154D4E5B3692276D84
35C2A3E01214CC90D74A9E2EDAA794F62C8E955CDB8AC8BC34C602D0F73A09CE
AA55A74E243D08DDBCB12F26FBBB8F9C43DD7BF7665D5F14CA4BD5E05B7DA8C4
35A28EF529B15DCFE08B3574C576E3AAD2E26E78E543F2B250A4B6BCCBE8D90E
DACEC433E0E45CBB75B7341F06D8E37285BEAA9AB71AABE3C85554A5A06B2AC8
B13D844A44C61135C81F9D586E0FBDB5221FE1F3BFE28ADE72E1F7E45D55CA20
34552666D5F1DD367C3FCF5311083B89C86D81AF27BDCBDABC57530B1AA9A74C
DEE023FEA051AEFEE5DCB52CF065EE27C9D3F453CCA5959665E40FE323256A36
6A45877CF940CA779E14D9530E8A6887BD14D5580C88C5871E9038CC62498A89
898025EA873936EB69BC17539AFB4E5E6E11F46E976EE6BC32FE658EDF088337
1DAAD3E660F09D520D471E487B130E254DF39B4DE5BAFA5B9682D05205EEC186
F876671BD65F869D2D389DB0D75797A8D577CAC542265A9064D7950B82F1DE12
E1EBB53F8D738E0ECEECB503FCA3D467865B963C6CB6C2BAC0238F0A2AB3DA27
6B209B473961A55E2618F1D8B444719E07C6768FF004AB0BAB8FC26A6302FE92
867358E2F5C27C016B20B867FEE8ACCF82672026B3122E379A0012322A325BEF
16B1FA0D85B65C1BDFB873D1B8AA2084BE9D840DA0D79520355177AD6F525F9A
017A34A18AABBDEC20E7700686FE88CEC8A3A326B77B817ADBF1E5A669A87C38
86435AD5198F5ED2CC8C4AA2D7E81DC82DC43051457907950717495F62AD860B
E59DD9C26FA72639FB421C3457FDC09D3B8D5255384A2C0EF7347C378B111AD7
92A90E38E1552D1936410B0E8ECB71ACDB08D469FA914C1ED1B237EB729260D9
7F3F1DDF55DBD314B20F9215B085F4E2BAC9E70578002E221E3878624A015FE7
5322A710B0E857532B41154D4588FA10A67EC13828136E1E719A52A0F2135609
B0BA01181B1E0CB73B74804696B14F0C6E77EB72E933CC0AF6A8C1095C726856
4ABCC720B69D111D278B122D39F103536F07E4B5325EDB72234C4966A716489A
F56E781AC3C53098D0B721C751699D83E8826D4AD3607A91673A3DF62988DE97
DA96C5C43CC63FBB7EBB8A678026968855B88283552DD3CD9831BE0D702AEFD5
278ACEC4A55F1A082D537B3C1EE890A6FD2ECE0FA115CB387A35DF5272A9AC76
5A0BBD8CEA4AD8DA18756756F9C9D4DB5C342277749E85C7BE53D7191ED68390
5AD80C2F016A43350F0034B1CFEC671B7F820C3863C1C59177AD0A23CFB7F631
E00CC979AD410F813119C05BF6F3A624E2167F7BDD45A9C222FBC9ABD8D3F08C
926AF66356A2A5C3B4C1F7A671760EED5D95F602687628A7F687B76F89E628D7
5CB834F24C4ABF95BF80FBAC642A003D8B8116D143E653C64F79B9B48DF5E401
CBEB5F0E7939858CAD24FFB5D675000565199BC15C451E1A1358E0CAAA3A6EBB
0C27F6B3D45356DFBEB0F12864B22FD1458FA08F195038907F9EB5901BC33833
2AF14A0CC7AAC1D3D2B2EE4CF591CF933BD8B554D763E0F9026E2A9EB717E9F8
F68C52EF8D76F50188274F566C5B2A338425938C1BA49A25E227C139495A4F80
88E006FF95E07F1CC14DC82CB3D7C5BAC359A256E7F30905CAAAB4FFD115846B
F98CD6DD8CC10E1237149141FEB9433AF21E8D84C50F750434191ECF16684BFC
ACA28701B13895988AD2D1F42F8CB2A04C1F8D0F7A88154D1DF0103E0A79EF11
310CA22F253FE4E3D1E56E432F655A8C234A301660D9C83425FD0B0E5186F694
9A70C40B3E6AAB5B0440DDC5B71564ED71BD85AC96EFC164226B9C2EEA6B9666
28A1F8CC1D312FE2FFD0CF3E5B55F0A7492A8E73B103DACFB5D7E0CA1DC96A72
C881E694C4C5F6A2E9ACDE3B32A9DF4998B1B1164EB30AE3737AC094373F1D21
6881361A7D66BF775292DF056CFAACA8C087B4C0BCC2AAE1F05DD911831536E2
F66A2B9F9683381C56776D27F95AA5C5241E827D0608A6B90E08CBF44A30669A
F4E20CD5C1F791865580E510F180C63CD039D399B1D9C4208BDE9F2A8B4A3F5B
8AD99FF719D6C5FFC31F458936B9EAC17F808DA4775A7C08F3776B20C5900D6C
452937B11FA74A52666CEFB649B15B905E4134FB8A0ECA85100824A14C5F5DFA
4D67E59B58C6D9BAD063D247787282EC4820B3C0033BECEDFB1567439AF718D3
B7B02416DF5DECABA6E0750987ACE9F2A8EC2DB98F85783C01623FD3612C7CED
EB8D19CD37E3D1881861E2B8856ADBDBF5191C525448245BB2957D602180678D
9CEE6397F787B06C71940E20E464BE0532CA2D8205BD6EAAF03A971F6814D3F9
FC9BD17D5326862338562D9039641247C5F33B540E92D1B87C3998E988F4E0E7
C56C93EAFB9C7745EE9FA75E286134EA2C9A685A4C4D38AF1752A6547B2F7F77
A71910A3F648EBC576E16E367D09E7F61B5646999717D017ED4301789D4FD191
9A0D5E617269DE9037EFB267FEC472C8BB99A926B3C76160D8DA7321E6D222C9
572BDC4DCF1B2E6AD172CF9DD1B8DC9E23D1751721FA293BE262D477B67FFFEE
3BEF3E46AA957F5D1988A3D8F64CA95E29E05F90678F7F3C2B15E13CEAB77811
E50A8FCCAD408D69CCEA8A7917A0F359C4C172951461E884747D6E5D2863C0A8
5D7F90D278D7151D59D40D28184F00034AF1BB3AA8E7A8C1AF60D163801D2968
60FFED817B1F5B4DE58872A36235197721FC55311D39C41CA718F5FF28B9A59F
7A20EFECDF6B1C287FA48581CF4FB723E2238AB55AACA0F17E1A3FAC930A2C3C
2BEBA86CD8754FBF01CDFC8602B0AA79104E10420C3F67E491EA298A68097564
A8434BFC38A821AEBAF5D0C7E846542A358E0B8F82D79031D8B4C564C26AF256
96553753718AE0425FD9EB66638D78D111B10FAAF8DC17EFFB7A46733C277C65
06C04EA79F36181B4C66B50A643D86F407F2239F4070B73733590E562622002C
3DDF0D5BB0D1F5A4FBAE0C602130444A300458269D67C83EA6B9F5351815E661
85FEEF6C73AA4D791886B52275052894C39DAD40632EC98DABB7DBC89D39485C
226284125367D10FDC376F2C32D769F3657CBAC8CB205DE87280206EBD32BB04
2F46824DA25032697E79494A189878F20FF7D0A11571F69B4EC965F20D7C056B
3D608F4089340F038C4A68DEEF068032B92723D72A61658CDD33BE34ED09BB1B
EF9525DBECFE5A994BC1E14C7115B5D8DF47C67E367D2376B73CE5E992441A59
B2521787F7A76DD68F7E5D640C87FFA05C0EA432E062EA4F71C63297B03C9F7F
76B44EE925C8AC12751906444D637E97F8985B6823BC95500AA1711E0010118D
36E15B500332A74F141D8778EAF3910486B2EA25AAD16989E8F517E8BE682D61
7EE310A79C945126847769D6DFEEC37DF1491BE959F1418F547082D175022311
5919DA3CAFD232BF936527C3F6251DE11B8B5F815032AEDFF168F06EEBFE36A6
E658BD6D9B72486CD5D51EDEB314960567040DD351580824450D62A12078BC05
3A65AE1FF0A347BD6C35AE5C1107D773495C4743BCA601DA71B7A8008D319A80
9EAE7BCE9A7AB5B1E77B1B8CD7F561861D275E21CFE17E2DA671A7FA88213B59
6074FE4D777E041409717E410B6673373215DB1BEB6EF81BFD7640789BE629D8
4375718AA931E5FA13B644B884645DAF9F4EB18C3C9F861BF4B3A4BDD20B796C
C7DE1FBF2AD98445AD543A339A72DD46EF815CF944AF37CC5A43AFFAADDDB805
B21236E42B64F1DE8F7B8246C840F68A08DFEB68B4A63771DF955001433FE00D
93528FEC9ACD00389398C67FE15FB05B53E1B9BDC776BFBE74BBC7DD92D941DD
6215DA3B58792D4F9ACD92ED5A79AE617B77D886B36E185673540FD199188132
7327B90CD5534097225899D5410EBD7F1F3334AAA50B56D05D29B98C9D152D6C
0DC98D182BD0C8D6B4811AF48F65A36B0399A326E0A57B695D391D64AAAEB4B0
BE5CE51D102BC0EC8B0E3E69D117EEC5C8F84D69BD5B50DB0379832507E2D443
91785BDA31564D715104C19AD63F2DA95091108D36C8086072F20123F59E1B5E
8D34EB46F04E8ABC5F4D367639B4216AC03CD74FC736141F03DA35D68D91E93E
80203A62ADA5F283FA2DCA1314503CFFFCE5CCF041A02877B76050B077450F60
DB75CEFF3C692BCD8174BB9537EDB0F8769AD30E9556D7837D8F9A6060FBCBB8
298ECBDB5E6259038906F04E2BB54EDCE5D6E365450F5CD528BDCB140E3F6C3D
0B5F9F79BC1AAD0208ACB0CE04316685304F54925DE84F8C740515971B4CE437
5A1A9F1EC3D6148A1C850AC234953FB4FA6EB237F8ED94AF22F25DAD959C8114
35E406B8F085FC7A58576F23CD19CEF83ED66EABA8CF178FE068A131AFC76773
2BC332AF54087065083A6524E6537DA1E5D5E4B896D55B67837FE1B0D9EDEC97
11F4E9AB33DCE6F520A16FEC6BC543657B58D17313B32AAD52FFAD3ABBAC55FD
47082DBE00ECB6C5C0F3CB6F2433FA5AC144B40C5D496DCB96A463116389EAFF
5982413687F580635C555B6473652776F685FEDEF296CE3177297C136F3C6C1D
3B6F61BEA096CFB1380FD318AC45D3E7C548CDA606BF71A39EF59C9E976C5F56
2F31C628021C6520EEA7711B75C6AFECFF846191F4C6B573815A3AA979F327EA
F34D51025EF8B6CC482ADAC3FED84C85ABC9D17103FE42EB033DFBE2E387A0EA
EFD03A12376C5901B01A89119088C53490119121DA941D8F96C9CFB1946D4B1E
23701D12DC75C643BD36443DC1E1D1AD087B2E4304E9229EC2855938CB532FC2
60FEF5CF3FE05F4F6B1A686C1E90D208744A52E593570C6EC8E49BD41ED97931
4AD32902C65E737066229312A018E607AFD73EC28FFBF4DA48BBE35D527F40F2
E194844E76B625836C94F281B43CC02B1F6DB3AFA1BF4B117E4BF69789878019
0F1359019823D94203EDFEB2A8899B078698314F0898139734F82F63BD025D25
7624B3EE5A864F6E65094FD7C70131796BA27FD30F540A1E177B6FFD0E22DD7A
119778233BC38A804DAA2B51B443839D49DE5CE537DF8352F46116F8E7C21022
F91926361763B86FA081E98DFE93C6030A94C7F7540FA825DE6E0B910F0CAF88
E6309CB00AA35DCD1F7640E0DAE8EAE60218354FBFB4894943AA2C3AE6703322
C3B1AE04709B28E38E80485BAC718F97F2805F0AB1437E9B37D21481BB42DF9F
34C5E80B618FA651F9B7BD2AA1761639E638CE9D89C4CF0AAE1B38A2837E1839
7FB78472DF419022F6B4D7B1E210382DB0321D08CFF1F462C25CC8EB574B11C5
F168849F68876CE406261BD738DF16D6CA98017C7C118D8C67F71A4BC3C8794B
DE910C96040C1A6741E56D793ABDE9F34D71C58EF11F657917FFDC1281379FC2
AD3324AE6C9704D3078A7EDB51C8DA98AA2A1F02B7155E76D0C80E31B39CE0EA
E6322374409365090D58BB4E0B099DA528E5BB6426A755DD92B2A2CAD73E31BD
3229C5F8931981B7F9C278F0853C03D60E4AD7D836AD02211578672376E2B3FC
E63EA6188EA0B330001790770D058B9FB23098A309023373FF754C9199C9E7DE
AE85DC7A673BB1D8E2B410F5C5A738B3CF732E1A6D55FC6872A733E861E2EB93
9323B64066465BF7D4EFBE89ABED3B1422A124751EDA0CED4C3D2F1D52B36E0D
F0F6638EBDDED0DC98950D9D07C0308D173F61BFDC3E247502747D6F4CA1BA70
0D97CD1B89A25711472A6FD8A594210FB5200157C0F02340FDD61392BE9B08AE
D0C5E76D39946E99ABD6F2B63BDE0EB1187C1B15AD0671302C030D29FEF6FD6A
EFC263C2A95E45CFD44843128CA28B531B1E987FFAC89B9386ED6942A6888B1B
3AA4609A93C7CF4E83F0FBC6C4BFEFE178BCAF292623EC448988C56FFA843B1E
F3AACA3FCEE17C7835239CD82466086853DB8998F9CBE0472F641CF6660A76C9
29E56D744E3864E8AC0F394CE7BA861E4C1E9EB7DC11D6579A16F91AA1489D01
74E713B976F3A0B36C575DF597A3DDBEAD8960B17260850FB1E3077451FD4A24
570EA79346E6DFAB6B9C8810A52BC5F9674D286FD002DFA5BB313E0B784ADF9D
2843FC809A040B9287F0C71D93F7C2B322315F070559EB2456676E931E4EA1EE
3C44EE4DDC284786865A90540E5FD5922F512C0A83999C07CEB7A37F708F9CAC
6B9BECF2190F31C568C908C2A31E6042DBCDB8113CAE81027650945A5FD5CD86
CFE17B5C184328F419AADAE3606BED42095620764487BDF92633CE56BD2E5DB6
21849C266CB622F9F7DD740A0E8A1AAAEF6F9D84C265D2BAB01501D07654C470
FD226F1E98C07ACE01B11211D992556B38F254A74BFFF2BEAAFB4F0EA0D1DA71
F0DBF300737540B21745BD882FFECB8914A1E25B2A8B2BAAB8D7B6B60A83CFDA
C57BCE423DADCDB7C3931096D2BD7D24A3FF370EEFBCD54039208ED7DA3A6C18
1536F7EC84D7D6DAC8936854A0E9B5873E0C43A98002905B1CF228EC7B27B429
929742FA4FE73B31D9075B4D37B78394D8D0AEA1C81BC3D6DE2A45C15172FF2C
B08E341A386A50EAEB261E696CD413485DF93CADCED318B5FA421B6C7B9B81A2
598C9422463D8B1D450DC7E71CA5DE4E227ADF70F36340D8417D27A83D007491
C542505F3BD5D5A71B4A01FF16147A859B82A428839AE349A5475C5C9D458AC5
58B9F2EB0504A2F8002B1B13E2A496759FF424949C826137D6F1401CC1CF6E29
1DAD048F1AF5732A5ADC835FFAB99043D683C060DCE93729098B15814D6B8258
BFF40A08BBEBADC84A7E00A389D5DB40B69F81A0769BDCBF396D7BDE86A40ED5
DBDE8B5E537B68A693ADD3B91C73E6B9ED582B811FEC555145C96752D5436998
367A6FA96366B5B2F5C9C7999C479BAF2E1950694B57191AA70F8E11F72D917F
2828CE535DA2D0F052EDF14B210000223D0792C9E78F1F0B694F1EB9DB7A136C
ADA3BE73E326AB74EA9A7C5F30E320C514539B504A31AF3D7DDF59EABF0EA6EC
704BF556C274C0C815503DB16E32D80A7F1D3B433DD2B301F57E978BA7676808
6AF935F7136A0480964301E2E93B7D0429C738DB42F5EBF35A2AE605A32D0890
A369061A83A297255CDA995A30B8144AC06A1A759E557505A1366EEAC1142E6E
43E7C50DD0AF35486B093F2F1386A15CEBD69E49C8FC7AE15E6B5255957CBD72
EFB20DAF8A28FF1410DDFDFFCC9BAFDC235959AD72C2936BD485EFC8DE44D67D
06807AF84BFAC0997927B6A65215C9F425C048AEC1C929FDAB375F3B47EC34E5
8CCC2ED3193AB0786C75301F9941E06B32D9D19990D52DB184846B76AB69AC3C
F11F513BEF0C35FD178086DE8DD92E7074356E75788B2AC966CF6AF6E8408A0C
0E61D772AACBF8AE866C0504DCAE2EA0AF63D45D80F3C7B4712D42FEC131372A
2D75A4AB18ADF4ED2688529F8A57AAE16E2067D83692F9E18E318802243901F1
E0386FAAF4C2FF85F88B0CC9508AFA4B6C0252CFBD56AF94BC26A5C89ED4BAC0
C5A0DDEF52F121996E2483E9C4F22F82EC5A38478C0F43CE39C9A9EB8F8FA550
20FEB0FDA413F01DB030D440C6E39C68132A7CBFACCC3C03ACFAC266B64845E1
1A997B5F1221071122F2F61A7979FB3D175624BE37679E3C6ABF61D27137C980
E086DEFFA16988979F160D6931DFE4BA7862121411130F5C09E700220D6D1528
07B669EF9FBA57DBCFE6771A4641E12F84C17E483AE418BAD1206CC6EF706DB4
1DC2F751FBADEFB4D414D122AB608A73A5D1CEAB4FAF5FB7E860AE127DB727B1
63A445B597FBE617025138E946DB650E84E91CB498AE7A151F8FE78FFCA401F8
A41E05A5C3ADD9E2B858945AD160E0377BC73D121B24EA380C737C36E1D32CDC
F061B44221BEDA0C08CADD7E78DEB17C7300A6AEE815EA36A22A6A5A72D3E4B5
BFD0B3E08B3735CDD9A8468B8005EC131BDB83350F4A04DB198B1F67D16B52D9
F4C00FDA13CC84873626387BD7F5E9CEDB73AE97F824FD060759876A14C15301
C7DCEBD50CB3435AEF81530B1B8336BA7FA49800951ABD8AC47CC4D72C8ECC90
8268306905D33EC7D78BB4E41F51650847B24FFE6E3057CFBF4E1354E550DCC8
E7F8C68898EBE98751ABE9E2BDE711EE40E94893E1CDFD27954637E2718B446C
08CF8E15487FFEA1EBC887F047AB42531C72899C20815820A6A2C9C88CDE9F60
7BF69FE423C0561DB6E8215D23AFB27696BA668F0EBC37BEB692FBDD251F5504
63EA32BA543236DA1EE14712551AF708C37DCFE7A4FCFFF3323C54085C9682E4
139030F46A8655E13112840742F6FC2D77A4AD0D8530A515788364451FB1A8D3
1BA1CD1AF1A54A8F541D3AE9ED9AB9CA69D6E5B5C98D050E6BAB0E896EB5A2A1
09ED5C44919E286AFCC07C9AA58926FC08557EE7668528DB216195143E8CF31C
5D103CA1E666255C30289BDC326FB44EB81C6921F17DD8C0A5A49D6710163226
23EA8A2063A636731000F69FA7FB5A54AF840DB94E432DDE62E232E3D301281A
E588CE07403AD0366AB4B3CED3E4D61008549D2BB94CAD6BE6BB435B0CEEC83C
7EBF67E0295F15BF70D2BEC9ED79E925C66EED4706AEE2EC3B4214C288835208
C15D6EDB75C08D4A6D37155817AA784D45FF51C8021F70EB817CCD8797839BF6
F204939D100415CC5EAC38EC68A0350200C3E011DE52DC74D8A7AF09A5258D33
8A1A911D178DA609B0592CE2FEB5D5F23796A4F78DA3C7C2B9E67E8D21FF0CF6
61BC3649B1CA61F88D3696B223FDB632BAA70D1EC5B44B77B14DB5E4FA5CC9C3
5292615484BFAE3A077EBDA32CF721A5C017F37A37F92159FDC693F1C436BEDE
BD54EF20F90F14F80540876D2B9571E2226B2B2BB72B69ED9E5909284D4568F9
1C0D125146BB888EDA4D48E6059B02B34DA18812F7ECD4A50D4939161BD4C28D
3F15B8A4E0E38DFF4C0FC4E038288A790D0400628606F1BF2F7D30D01CECEB03
5724C9D3E88F4BEC3D9EE3D66E0D5840DA018A2D8738FFA1BEE83ACCBC73C481
D12CBDB11CA95205F98041C13A2A98A99A6652B64502F7FEA88703C635F343F0
5A8B0827EE3F20AF11E1965B9D0E07BACD0A5E7BC86E6283BE3D57B93FF1135C
6E9EABCF0C884148587A661CDEB9FD992AF880AF100DA8AC62141E599BDD7172
CD9B8CD2893D69C4B48086A0FC1F43B24BCBDA574DDCE1E3743671720E8BC75E
06D4571052CA5E05B88B4D20F7E21E76A75C7A046A97CE2E675EF4BE0B35DD9C
4B6634B6EB57015DA634EC1C92D1C5B62FD66706F47974FBE8689B62B1FD44E5
D08D7E6119989A58C066AF5354CD183144AE96DFE0811240CB327A5DD44AB694
4920047DB7EF79BB7FFA602E02796F9C6592605A2060C8FE2A7E39DD0762D379
A9EE1879EB1606634034BA7AD549C30382C67DAFABCB59C5EE03FE22A43F29B2
FC7744C3BA7D885D38A4E5CB535D5A5ABA8370988C8F173DB17960FFAAF35524
04D47AA6FDD61C674C50F84099D4A6A39A8E1AEE6795F73023C9978AD651CEAB
51401266A8606065B987901395EF717B7C5E2A8D5ABF723D7037D933EA3335A2
8E1F54753E1F394681B38C5D2640C581B4D329A5B725D3E2D0CAC2ED6750D358
B7CD89721E4497BF59702526C2DB672569C8A44D4682188CE782CFA482A19588
BA2944BF5068D2F6B9321AD914EA4E82B2239EF00843CB21D2AB878551E23063
AF42263B1638CB58FDC98CC495EF971220028EF0B07C869221672BF1D590A42E
101D7A13868FA0642D3006AC50AE02A4F0E24B7EB0C6D66B4ACB5AFB4FF17013
EED2D60C3696401B2EAF6552BB0F9141756266105445697AB8DDCB15136C270A
3D6546CA8DB918A294CC8250AA1417DF58EF150B455D38527D69904A0A2BE5F6
D17EDD30DE1497A04A7C914266E65DE1A3A4186052BF9BF905948696402C1B5A
51A50E0331A94A54C87420568D234C280A42524F8534566D02E14757D0F7C4DB
1B51CB65D188F5D93F2D98CF4EB545C26871ACD7695FA14B48E764E9F67D2970
47A3BD6D05E2B9FB612823B6BE9E3DDB76F34BDD8315A7E4950F287863CDBFAF
4C27E34480D157FE0E7B9CD1B30545E654F09C782FC0354DCCFA7E2C41DF4762
6F617B251837F69B8C5422B1DC82FF76904B24129BDEE930A56E557D0E93B2E5
BB2497BD9B65620840B8631DEFB98434AB4E88426DC433391AB62250D7C4C702
A0D45D4313A39D8EB7B47F9F23E8541AED00A2CB1927B321CD7E350EAB3E0AE3
940AB92E5B255337C282467D48B4CA4685EE09DE974DC05766862716DAB828E0
D63E5590F13C038A4A5B23AED94E790A99EFE88C24890561C4D7BCA0D7B10A88
76CDEA1DD73F60A443D4027D6B8BF7CCA3931860E667C63B7F405C90099F7267
99D791AA8B2E477085D625967F443D661680C042A490523DA4A21A0E9084D786
5B0266D7ADBA18820FFFF179FCC394A4A9E7BC3367497C95A462B4F444059838
2AB6DDB415B17ECCFDF6D23960B088402CC33C6019FD8B3837234E58ED8C9558
995DFBCC45B6F3E4F0DE1A4E5F8D89B089339C54D1B7ADAFDE0976887AFF45F0
65029741DB0F2539B5BBC45F96E5C8619B1B2814052A1C4F51CEB8B577A5545A
7587B4FDD58F96DA74E48AFC5F7F3EFA1DBEB4DEAE8B7D3382959C18A903DF75
F4A3D5762C29295E4310EB716E36EA3E0AE6D94408A45E5F6B12921B80696C5E
96BC2F2F09CCE1580820D6776E4DEA0C85DD18ECD59D7E3A27F9DE1C0DE79E35
32F81D773EA5DC1FDFBFA459688328D860487B9FA09297FEFD79991B78F7A40B
1D6B07BCFA69E629EA317B9F776AA8FEA2ACA2E357C3EECA6208215BD982E10C
EFC4C6BC1C1EFBE63A631D75E5A1B8E232C397CBE26F874646D902993B1444C2
F395FF84365E5D7DAE1684E879021E5DBC181FE6A3161D447B64255452F1B8CA
002C392D1AC1DB39ECEFA2F52671367EE9FC053E5C24A94755531A3F6649AD68
AFDCA04684CE303F5861CCDA6E28C5F0AF285D1905BB1471ED972022B4D84CF0
07C1D9B1D009A03CF315EDB95FF9CEC0A5517012F178A8EE1835909149DEEFED
FB47D236F1DF488EA9100D499A87C0AD100CC2DE87FC4B566455356E0523E89C
9E9FF35BC501328361D0883550ABDB4CE6BE4B5F975049758275FB85505FA5D3
23767A9E32C0FE651E593B8D804E9DE82E0CBE0B216CB361D103C164AF06B144
BC89FDFD1EF169F4E67DFFD992C4A8E56573D099FC07145EF2A6CFA911D67D73
D6139D73D3D4A20B09622E4A8A0B059FF1ABD3792AF11E63DC9E051F9042F32A
004D5265EB7CE2AF33602D146F2F539106479075A30C1226FDE0331958B1CF42
FE7010DF2DA7BEA2F4A63041C6EA70E6A9EA67A1AF2087253A24C037CE2C9962
16CDDB44CE0FE5FBBF84BBC47DB93945C81272170C4ED5D26218CA8841F3B896
04571371840029A03A868AAC63F8E29E18D94B3C1B31D85FBFCE2C33D9FCE7A7
C15CE0E6C728B8873BC0861EF52A28C82B4259D9F57AE16763045F4742D3D359
981EBF2BBDD152128A7A7C2F453D1DF31CD64AD216883225EEEF03B006E6D8F6
71AA84E180911C05C81710F03859CBA26D9BADB40AA22B4BE84C9171E12A97D9
074EFB2D7CAA7836827869102B2DB3B899EFA192CB292BC8DF36710BF8B236F9
AFC76AA927E748871BDDD08E864EC67A3A253BB6A8525CDFE5E7B00B5E08ECA6
B49A6E98ECDFA0A8F47C207A5E37031A4C4A86EAAD87BFB1ED2F719EF58CFDD7
E171D89B69CE420CBB74084CECC414A47801E3EA6BA65DC75524C7EB2FB79556
6C7E790F22CFA00715B28570C54F7822FB23E5DFCD5F83F220E0DF6D97419866
EEFBD3A426317F95D58A66BD81BCAA006F637E9009CB1262E88F616F9AF8035C
9A20E06F0F5A710EB8FE2888D1458AFC04BAFB5EB5B1D7D7131F9842DD53E8DA
B865DA5B7970B69FC63A4703166B52E51562E888138CAD604AC8A138A86B4307
E26B8C6DD8CCAEE777685C3ADBC3961CC7F7D9B78972E03ADD2F00A1376446B3
4F7DC7C61CC0219812A44DD6922E0385002B6DAA20DA945A1D4BD179AE568485
950D76D24E204EF0EA0F1679AE446F79C247CCF03085BB46410A40ED0F35FE8B
AC0EFEE1B1B3B2ABB02D2D986ED728288D7F20335AEE66B63BFE122F4D7E1FF0
F146F590131D6286B1A14762FFE848547B7243A993FBEA5F7EB73E3F44833F2A
751BC7731F0C2B6666EEE8EA5E57560C05B6AE30BBADDBBB37DA45E1BF4A3F5E
2E7957E228D69210FA8171F27CD494711BDB12C2B9CC31E3AF5A7C15B5E5DE8C
A15BF8B7F4319FBB426A17E311914934779AB7592E3FCCDAFAA1AE23C2603D41
212A2F0B7B473A5C8D665903F8A8DF73512289EE5862EA443C751F6FF7ABA37B
D0AC32AC6247DA4823BE6FB5E8A2C721D3991E1E547032D08FD31653284999B7
F8CEA99EA3A2BAFA44471D510F0A0ABAC4EA96FEBC22CF55BB10F04E9C256FA5
2B42D28318662259AB0CCC303901A207C83125D327B276967887560E9C740446
C3D311F71C48ADE52E53620833497D1BC333574DBEE3A176FE9CDB0A29E37C85
4308EADD696F6A64F8BFE75DE0BE2B368F46AE001303C0A8AC154597A17D4F41
5D8447ECF70B67DBD46643BBB2D9CA0ED88C635DD650F404BA14C3E9D3D59376
98573BFAC64F1811A6C793ECA662DE75C772FB11C164A1EEEE893D4A0591C57A
53DE0C6C4E937A7B4B773488A19061E91F001CCA77FEAC99C5397D7616508B41
97F742E5485C7B2340463D5304DF57ADEAEFD0CF96DD8503B23B15B3F409EA0F
BBF9F7AD7B8BA736E112CE1C74759B819B489C1ECDD8400C1078C2E484330C1A
535A59BE65FC8E092E41576F5F4EF73DC2CD47C0830E7D9C2658F390F346F585
A48F89006ADDE2E437DCADA997D6E9D1002A4982A66063942F6E01E70B9C6C42
162729D7407DF1AE718E71804A8D2F25B5803FD3B00862D28F92075E9AF493D2
98D222469A88AA2E7476DAED91095D1B0220993EB3121842C6FFD72A9DE194F7
8172655E3117BEF8004B7F57B5B8EB337E538D516206AAEEED8B313A062E2A13
AF0EAAE81366ED989AA7F51CEABF1D3C1B5D69C1D5C2AADF0E960552D2FE27E7
5213E3B4634DD71C1C6EF00A8A55B6CB2F2E58E760A0B62AAFD3C0D8BE95414C
C366E7F06A8C3056096A34BCF507E7A084435F51296BAD7AAD4B07B301FF55D3
02A2CCE06369CC829701EC3BEB202C02D4C5727F961FA5ED56016853154042A1
FC7187EA63ECAA41F8349398692FF0BCC961879AAF2CFCF1498B40492675A9CE
798A083D9962DB9876EE658C50AB2A29554919311F9AC4250BE085BCB35897E5
E51FBB33B3A14DDD3CC25678482B035EF98830F2F8A53D7E127FC4DA28C58C1C
5A9C2B915FB2A45ACF248B9E70239E1E65631FF671C9B720AC97DA0FB14B5375
F55B62F517C2B483D4421194006818508721B63638CBCB0D8294268935653DD1
95F6423165C5571A560F604AAC5705097668D76F7427F8DA0F99E698CB7816B2
327C6BBFCDF43ADB4E5D6BC03CC3E0A9FE012F7C0E80B973173F1C8C14F74447
D70ABD95DB3F69FF3508E7C035A0733DDAE5F9DEEF5114B427F32A33FDCB0FB1
F1906033C099339CBBCBE305E179669BF95B905B973EDFD181FD1ACAAF88C463
E09BF4CC2B67AA4A4861D33A8C30D43A8A523159AB0D6C5EE7AE9EFBCBD1C43F
2E3B0641B0CC652E3A1D12E6175F575F3AF9F9DAC250A102E7404CD5E3B800E3
937EF0E82F16D35E13A97B3704AA3EADA3709C41E9E9F127EE66B2F8AFBB50ED
3CEFF24F0F92695392C1662E86FA432E4991D4BE0C5C35B6914EAA41A082F59B
9218D91F17D7F8920D4BBE1135228CFE3B0B32F61C2F364503F9436FB0230A3A
645291888C34D403543FBBB458D1BAEF0D9E218DE1907C5B7D407532F3353678
94076F16EA2A629E87A1AF908C49FC0FCBC1300B16CF7D98437127CEDFC2C18F
115D112274F4AB46ED4EFA1EC6D0BB6A2FF5F845E0152E8A75943F4A2A2A951E
A8FCA66C11D56CDD3CDF2FB7971E45E9C21CC11249C3036AA554D4D064037AF9
B8851361031CEA797D57A8092A0A1E145F4E8C60B8F551F578189A3285E31D64
77C3E2044A8CB83BDA634521B9C897517543147EAF6D2117ED70730B8C6BF7BD
125846148490EE687385BA567DA88BF8C396AE2D7BB62B9912DCE6E495957508
0ABD55F9410D6642DBD812A725E7CC4CBE8D18D853B201F987F1EC43CA396826
A885B7EE02E438AB76EFF816F18CB696C7EDFA03633F20549DABF461D051291D
43F7270575C6C7761A728DC24D8C2C25B06AE091DB97DCDE55F701A63A7D0D2F
37B10826AA7F8D15F5A74F536B4F63EE567922A61228DA357F0E30D9AB91D1F7
3B6AE9F49AF2051EBE428CE73006CB375F2F26C049117D3E4B535DA7A7E9B4F0
131F3C944F07860350DB8118CA53BF36CFBA4F5B8F95C1CE21655E3A4D19F060
5F8D04FB19D574C16434AC75FB4A3CF57A725743914C18BFBA75BA219590CACD
2E1CE760109E436785F2C828779A103EB9EE84625633980F40B87334EB53A809
0EE56334AD463AEE72BD5CF46386D6975B70E30002CEB0144F2CA0D578A7F66C
FA54D4184BA475450167F531B1E3DBCD899522B86AEE9E9A618300C5684EE510
B4D47A5ADB47803F88257A6FE1FDE70C953FF3EBEDC40274A85C51250B2CD1C3
423C06E7516647DBC09F7B6094BDA363E22D1C0802FACD28F8DCBDB631F68EDD
3146F06908511930379105CD68AE8114DF2C19811802BD3F3577DFFBD8D78568
86D6F443B85ED30F3632D186F84841666DF675BCAC3ECD09120E9E9B9710AA45
C9DF37E5077CDE5574C85EC2C19C220DE636E9F3805E2BDDCB265CF381F02FBF
83D19176AC10FC913253613528FAD2550C7ADBB35E0F1641F6E85E42E00A888B
339ADDB263E68C2B8AA4D6CE56D58377F31335D381D2C40EE32204F64FC2F350
461460798A7BCCC6C19CC6CED3071F9154F0F0F0B283AE0548D0FC0431E773FC
618812E81161A24FA04E7BC44D2ED257F724E369FE2D7618C626F876679122FD
56230A94692248524B738AFDC8CE6FD3363B3A458C11D6FED515750AD7C70D01
F18766790CB13EDFB8C07E245DF42D133C7B35CB96B6B487D55C7ECC78F6D004
BDB840066053F4335918214A94887DC1FD5AFB1D04D9AC2807EB52000FA90CFA
C58DA7935EE001A937206DDF34A5A96AEA940824F7368BCB188F3DA143FC3726
A653F5720787D6A39358E2F7C364FCECA6610D7A01B0DD4DB2890074E1127572
659CA617CA10B64B4B7D8CA3E68A7D3D06321D6DB80CD676DACAB1311AAA28A3
D49DFCA7BFCB7F37873249128C214C434123A76CCA95B7CF57674ACA4FE2E0A3
A750CE276D18069BCE281FAF19541898B311D63F689D1E6D36F6E9E2977E1EDD
27C3511565EAF0622698EC7D79DD3D0677C7B1A6A07F85F0758C37A099E94470
0E7A2CA452836ADD027CDF5266E2B147637C32CF1EE36F887D0CF61A23643C96
DD62A9BA3A8742D7ED7E73A00A253D5BB4947F0A235D65642B373105B155B71A
DFD7A16B1AE31BCF26159DFEA24CB862C5D5D6E2C867D604C9C3A1DC6F4FD5BB
10DEA0A43C7F467B8EC49347F8BD3805A7EFFB6EAD14EAADC954E378653D87E1
9E15607F8EF56953701A5445C72AB9326BCD751AC2AD65E979A31E979859ACBC
25317F24F4E2E6A80F3AF65AE92A9089683DCE3EC5E6EC689DEF5415C99C4FD0
FDB0357BB5233F3D0F6212F013072DBFAC13038C6FC92E4D81CB7723A14C83E1
1A4E961F1FCDCE6DF9811AD86690279FC8F5B0F91515F3FCAB2B921BE55421CC
0CBDFDD27F19E6357811725AD96516FE0C4DA5D3DA5F01FBE29A497AEAB3BB19
1537D90A71B015BB350B82F010A5580100A18A540901A44B1A951CD3463FE01E
4874C61EBE2A0AD249484669A56D7506C800DC65B8D38EC9F81CA4145B7FCE1F
A9C53C5B89C2771D6CF949CEB24A70AE4ABB7E0DBB5FD260A49679FEF8377A00
79E616B30424DFAB252E4B92D10931A3C2F198D100308497D3EEEF73C457BCFC
80DE67498B7E3F5305C7E2F9B39D1DE92EA60DBE253D846082781917560FEEF6
933FA32F3D585D4F8C39F11430D87F601A0DC7C4C99EEDAD8574BE5154888A92
1EB549949D1E1A3AB1C1298DF1A5C935EC19CE79F855136A11E851A5435A96BF
401CC28BDB7C6DE3048C7280EBD09BB4EC29059E05BF11B1D0C0E348D8AEB1FB
2C150FF20915FAC1E783F56D3F0316AC2469CB0F5EC1FBDEC23C41795FF96737
BBAA281B0C0D9A0738753FFA13A09D50D0A9A469DE86BD059320F7569316ABCB
AF5B9672FF8D90BDBFBA0CAB5054693FF06E7C2AA3A3F99E9E9848994EEE652E
3CE38E4B50660E0387E2694CA97578BD38F3DADCBD623C583745090DB48FA55F
73FB9648B66848EAE89CF668D0E0A1DB38177AD545C10EC243BAE06197E7A600
CCB5DE4956F00B3986B238FD671281BA0E0359BEC6878587031174C8FEA195BB
4C89ECDA3A07157E9BEA93937C58C1343F95B0FAE48FB645C36AA39D5C319D7E
E734890C67B2C912D0373429BDC7838A9410E7B2D42EC2BBBD4E1BA25E5E80E7
F544BFC3F91502FD8CF7E8104EBBECEB0B630D6BAFD3CD7C9BE6B7C56C9816AD
1985FB7624F5E48CF6C419C484C683DB55791D218D0CA2A5A7518240DD39B82B
C04FCAE9A68F64D2CF9B4EE95672C13F4D709C289E569B37F5B38B66F88795A5
4D463A07EAA36050E7E054640DD5A2FCEAFCB4B635CC9D88D8EF06C084C8DEA3
28EDC22BC3C9EC10C2B121966B68A93EACD1BC5BB43C6156BB8A01318EAEBDD3
869ED813FEBC6FE2F8D20EDED861E3D5E03261159C7F50054928B9493CFB72DA
0F5B5B74F0255C64C813191764C9BA8B47371D202C7DBEE606129C3D3EF1DC48
BD8BA01A6D096129CD99FFFD3CD8871857F9A7DF54973E9F237FD4F509708D4C
043017B3ED954BE4EBF094D3B7F6541DF57D2C3DD302EF1A8522595BBC02947B
DE778DF7ED7C91AA4100A493DE953FA6A61B87383D6E537AD3B43C6F3A905597
570A8C6B0B4A5E099772ABB4EA3E37FC4FCE8F9492A55877CBA825F5CF8C56EA
A3B5F5396B2A6AA3DC6707E1BEA4300E998153630860466B84AF9996E3C04F80
88412C10E505C2D38DC3B9257B010BA82DEB1B0561DB4C9C60E2B01F860F21BA
6B908524F6649B5987967B344ED58A29F48A1B6166BA0F2FBD4C92D2D13D2CA2
9CBBAB052246013C15122074EEB735CD1C98201F895AB94234C55AC2B1984099
78B6C552479B1E51C7E66EFB7715DF862919E270DCB8EE15FD289E5DB17CBA31
B628195EB37554EF4CEFA8C6AE9A0DF2FC52AE2DD15BD5CB2F3F98B4EDC5170F
AF5E50B060B35B764E4D308B45538326749C02F998D1C6974DAA24CC0A0244A0
BC0B30A59B8F48EFCA6FD9AC1C92275758013D33E972FF00E5452726A5392C58
E63CA7809C2F87A55C0856B555CB0B740F99C3F42AEEF8B1E60889D97FAC2C75
F35E14047555BDBE590514A8AE02B0A9DB3AD7B7D53F39A30EAA178D11BE7F34
711A204432DA217576D98719C8E9493725C5A7D11765025B996B24C511AA2924
EBA9591AD15B8FB58275287714443015F3694580C4757230B2329533448F2FD4
6C3C3C7017FDEA8AE2DA33E79970F35EDE4F12067CA525859B73E6FD4FDC8F58
6559540547A946721C136745EEDD97DB9551B092C99FEB3435C4D9114255A333
5FD103803857B8046544BF2723FF4B470C5DDF7602F4AB2DA5543DEFDC361800
4C2526B70DA2E9BED040817806BAB81FD676826DE6BE1AFC4028F57F2E7911EE
1E1A5493374B3357EFB7AD1411A1C38AE751429ACE493D637CE3701C92F7267E
DEE726DF06CDA1AE259772859EDB3B5B45A21AC26DA8A41DC629B58BF2D8662E
506A3D6D8AA7230F2EA632761307B3E6EC87F822087F5424CD1FB71F629BE084
7718ECA5DE4ACCF88AB1013D8A001880D27C0F7D73029F171028FDDF8B550AE0
B34122606B568D2DAAAA8A072209EEDDC3986FFE2BF6A7DBAC88BF012B53F8D3
262E9BA4F370699C8678DC9A26B76606EF122451DD2380303854FC141326A5EA
6C44C88F8CF3B41AFFB66DB183109EAA0BEA3074AD5A6D264C9732C2BA6F48EF
90BEEC53E88FADDB38686EF45996B5A29F6E07842337CD1F9695C9FB12FB373E
A8F1DD3B77170DE7F5A47AB7516C8EE5E63D70284185CD78F90330218695E91C
0CB97CF29E1178F3CB796F18020A0C64197309DAD0349A965D96E4D6B47F9998
114BF92E9A4D8796FB9DBBA8CDF19ACF4A7FF87E2B457C41477583D580BB31F1
8D435619DD6DD4C3AAE637FEF91B42E09200294F2C919907A659298200F8F95E
C774BD74EEBEFF3FF35C1F00C27A6B8425F5CCB925BEA82A3175A7CAD61670A6
E0C0B2911671C4795A084EB7CEB7B465FD9380A16EBBC71649DA3B2296A5510B
31F2F70F2E3B2CC8F7CDCB7F42AB4F2DCE57F60B0D5EF70270B40D4EFDAA421F
4059C474F4BC73845D4664D911B0E64203574E588A6F1143DAF2599A6BAC704A
6F74249E9F5EB7CA37809EEFC33FCDBF9E946AE0067D2FF9093CBD6788A412D2
11A3EED9136B5FBC11041341C251373FA21A6B31215DBAB14EC26CA0BDA0F7FD
8C6B306FCE4C3E0FB678F58898414FB56556B61AA780FAE480228C7A2DF3F399
B9DE9AC0FC2C53FF957E007993FCC20F752A752B2274A6DE8A9754C8E263CD0B
CABA2FC8A50FAC238696CAB3EB815BF196006ACF7A300C978DE32E4BC9B6E95B
A14850E5E2647F8DE851997227CDFA49FF8F47D42E3DC8BA128ABCDA969858FE
0D605F83CE03A783CFB023A37299E954C98A2220E6C33FA749780AB4648CE268
95BE855A76B9E8943F4EF7FE555975B715A79AA5326C5EE8E3238959CFADD46D
F2315FF8625ADC0F6861B94D712AFC36194FFFEEEE411FE48CF96BCCFAF7A173
C1BFD4B934D3C3358808845B20E2CECCDCBBDDD028E973830BDDE3DE50E1E938
3CA43FB4731BE0B8824D2C9DE54A6B8130D4419A2EAA1CDADFE2CC7DE29B162E
DB268E6072EC523EC42A273B793F889B419EAF3E18DE1BD06F32F974E34F5DB9
EA3F5A97F86A457CA842E17E96EB9AD64CFC759E5823640D389B88C963C4E664
598A8897856E9D564E97FE49E0EDDC61C9690F0DDC5FCFBAEAAF19C55EB71813
72F4A8980FD4BA79BC203C8BF9E638EA9A69F8F3A58C50ABAFAA52EC5F286AE6
7CB50907176F2DF1E54BB4464ACF6BB7EB6DC648DD591585A08F81174FFC8D45
A1D3B7C6EBE87F52DF6604706FCAD31A30036E5272126134C82BC2BE6F136D04
39FF5B2585A53C7CB0DDE1126462BB9170619FAC5C1BDF499F233F1D5619F6AB
9C04358A4E7B2A2066AE3E20F89317D7D1AC175D519E89EC1C6E23BCF2BC4A69
B7A25CABB3B12CEA753FBCE23AEF16A12F81D6145E33559164BA3755DA93D002
7D617FEBDEA12BF6CF4553E7E480E541389E725C4D27DEF1188EF5C4AA511E4B
1F45A7704ADC7B8B4924496026D214D1C756361BF7F7745722E2FC4A6441F33A
5597D72C82E4BD9A85E2004635A3D8FF3D75047ECE96EB36F6CADE7470118E6D
7588C755721BF0516B499942E56EFB6139518D822DC063095DB8763A2F74D9A2
6F35F91D61E51829D31791F1D36CF69E5261F80EFDE9391FB1A1FAD79A57DFBD
94A4FCC106D6473108193772BEE2854B571F9A985507EF4ABC1A7FF4DF4C1D29
209A16487327DC3CAC470BC33A673DDC442DAAEAF60C87FC7861180133E00A92
138E367F796267AE24D0345014D35EAC9BECE4E62BCDBF60C6047783E14860A3
79D64952A6D39CFFDBA38C11C7238C738370C4881D7BFF790933ECF029B26AE0
4CDE0D28488DEAC6273241F161B8AE68D4872655A2BD4F23F81CDD4F3B9077AA
11CB6589BB38ED06D057325AD787E8996A2B53C0A1F353A17E1A3496D693A016
F49D26DC8B53B3DB4FF632C0FE7E3DEBA694967746648DA7FB56E4B997E1BDCC
F00C561E14683DE35B197219FF3FA6A71FC346A14CAA7F5AED876A20247B49CE
4109F4CE1C2F1441127DC433B3471DA5A35762CE07146341215E6CE7604B18C7
8AE214B7661E987289C82B757CF5C78B1A952BCB3C63AC686E42F87C10FF7BDD
24B7579343DA5E5547E88021B46C3C184C18C7E3704CDAD37E0FEA5EEA052A54
548AC085C4C67DAF6DD7825A6CBD56048BE3943949B1CC8EA28739D43F21DBC6
904AEE4B01DF4F1005122C3B92BB9604169AD375BCEAF3987102F0C9D83420D2
6447974D5A453590B4C4A752A37735B9C1F87BDF042A0E465BC3240B8D284AA9
52D9C79F2C109DD2FDAFCB9E24378B80F925B8F922073F3816E27DD6FAD0B318
573E7A86A859D490BD6B1BFE492563525B99F0A8D519F3D84AEC4506909C1B49
04CED6AFB3EA913918F7F9AB0AEF020F73722767D31E5008CC544AFA98B0640E
91C5E69960F716295AFB38F4855BE314B883C91908C0BD3BFEDD209FD7FA7FE1
55CFD1D65CD016D690571689F7233404DD9EFAA55E8354E3EEA58F730AF09BDC
0094399B69FC8DE83E0FCCF38B49419AD4B594F60967ECEE76F3A118A37B48D6
094358DCE3112AE94758BC7621C7DE55DC385B2E2E3B2B5CC33DE5CE03DD33EA
AC155774678B4FC74C5658727C392573F54297D949B1364E9B25F1235800DC8E
790D62F3EF215E559F8A4F190B1AEBBBCE6AA12178CA0641C19AB6FB7E261BB7
0236E277C79BF6BCBA6948FFE6410BC7E74F3FE437C6DDC3CD901ECEF7777382
B77264E93192E37A07A6CA789650BF07FB852E0A92ED6D704F15FF0F863528DB
72E8596BEAB46B72FFD337D62DEA0EECDAC0ACC8C1B258E62E815760A0315EF5
9D1B19CEFCF89BDFCE2464D643677CF45A664E07545CB249F1661358CF1A8893
2587B305196CEB7A8F17BAB427D2B3258E37A6E4D4EF8459160CE9CD36040409
F34409623DA7EF2137E634FD286ADDCD275BE46A59DF25AD24664C99728913E9
80B20CE24ED96E7EE72A3AD5AC654B29BE5BABB83165BB4DE936CC3A4BF19EA1
C5D6C0D79F9DB3B016D759945ACDCC8DA70D5339C919D9954FE91E079DC80398
F13788B32710451F72B84AD58B14CECCC09085F0DBAA5A85476136C145D66A69
47947B2A6834BA01A81BEA15B928B2F78DB6B4BD4118A24CDA71A04FA87F2900
DF87CA692EEB2A093DF7C02745C46E7B37695A8C66140F7F8421138892F4846C
3FCA99180509BF3AFB2171FE5A3E58B2FB78175777B42B47EE3C628F9A334F62
DF98CEC11E91273A1462E355E23905EFF7027AF9017AD7735E1F131F51421F24
7F460F004751FF0936AACF2269A8BC7443FFD645E8EB8FCF403A1CD0068835D6
9B4651E206B397E2D6F3E1134F9F467E314A83705E9D91A2FBE40D45B43CE009
41BF138DAE560028155EEE6FCF95F2CB0E3097CBC8CED728F24BB17219595A46
DA8FDDB20819F2337432A326ECCE7A6B208CE4F7F89B3BD508E371B2A78B8988
1D1E6F9ADFD22C7865966C98DB1738EB6A578C4E30819FAA8BA46BF99FFC594D
1052832E6D533C29708EE68115D599503DE3F2E9A7F8F5B59726D99E2108E0FF
B4CB01CF7EB21729F14BB7B3572D01FFFF3BAFA6428355378CA104CC87BB04CD
27DD1FDF56247DD3F1CE4AAF3A3C3E59B2D167F7B231C784A1C4DBF2811D2A54
40E30E79AEA3845BB79852F260D47645B8A718653D7665C79B220005CBEDC4F7
680044B226DB7673920A2C42EE8018F4BBFE07266E6929287DC53CFE54059EF9
61490D177E72F543F369BF1ED51E5460CFA0338DF1F5726862FAF91505153346
64F57660EBCEACE5CBEB2D332CFDA72643FD7A9F5D3E268C1929708A7FDC8428
4E659A64424C224F213FE6201ECEF512AEE9F13F7B178DAB23BAC475BA70CDB2
554B6353F7EF3B47566788D4D5312707E5F2A9026BF3585496ECA61F56E5B463
649E058E104A8537D3D81053D9DB62557C40B77E42E2314850D210C1AB3CDCE9
4FBEF2B1D41EEFA2A82BC2D28A419D63C24282A15E88FD8922A47AD1FA0EC4B7
6E456CB3A80A4AC3F89150597FBC55DFE6E64786EE5A258048D63837F887A41E
A0D1CF255793E8AB02E2D92E88263213846A61C260DEBECC1EF70DD55434CC97
F6F1189B19204232F30EC774AB6AEB948CBA6F1699DFAE8DC13710F72DDE3B6E
BB800DFB555B9E8EF4ED49A0D02E8E339620A52776770935A6A193FA21A3DC25
DEE4073F1782CCD4E31B19BA0AFF6469342732F3AC274184B066FAB94E345BC1
47E3BAB4B14060DB0FBDD745BF448404604E06B119CA0AA3E4C8A34CAB0C691B
6AC03D3AAE4FE2BA8B2BAD7C2F670BD9087F7531490409D02BE2630A4CAED3CA
557EB3AD75BE428A088081FF6E74A53F534ECCC26258048D5FE9D3C2CF245D8E
9B651AB300E6CD01F925BBB5CC4602144D6D8169DB13F5B6CCA6F90D80BBCB7E
2EDCE9FF9F84EEAD17B366D678E61C6176FEC09C97323D53547C266FCC876402
5ABD321F25418074615F75D116D2E892576552117FE414336D3F93A306F06252
928043BFBB41433632A244D2CE10DDA45FF84DB78BEB10A2B8C642597373C612
E87B273DB68A4A83F1390445F24E4CA38F0A186733A8523992CBBF6DFDED8BDE
4E6DDB543039C53B4DC365CBC412E9C56D7549ED6EFCBB887D89D224F053A56F
E4CD666050B4554CCED753DB52D6AEA7CDD0C7B1DA74BFADE0E3863F89576BF5
BF29BE523D6E5A01BAC0370932B57BA853EE17A4CE2F3809F9D7668D04CDEEC6
B93C575C363FA80DB79427E005788893041F84F235A77F9E86671E6B826EE52B
6F817375254987377CEA743E559E371DB94D58AEAB443CC41A250456C487E038
65292DD6BF1F40F6A5AF97C3FF71B1FB57CB36234A3D330690DD2DDCC634D3D6
34D7CC06195116DFE7AC833FFC6FC41F883DF60990A47DA279A947F7710A662C
494DAB6C672282C7452ECECD32E603B4E05F14021486C2875240707629151582
6E985DE89C5E0D7375B95EC149EA33118A0B30CC1FEFA6199B33F3C1173535E1
7C88812351A69BADB48948F5212C2422BF6E92E667B3EEC14265B82C622660E2
7F2B3BAC539C1C79BFB651E58CDD61752F602114539E156E5951847483D35692
515E2D8DB7DA53533E244DE3DB1C186C1DEE5D76509DCB3284ACDCE0FF6F7ECD
B6AB3069E88D09732D3986AFE7CC6A62999A6D5E428B4FA636A6A3152DEA4671
12C27D275B6BC6BC5BFF4FA22014B3741BA64842BA7B6F92F88027568E1C088F
279AFE031CE20930C273EA5B83E1BD4FE3D8B242EDF647251781ED6CE249DEDC
A4A3595E7E6DFC059ED1B7F70513D93F7759CDB6B3F043A9199F67FDAE1B24D8
9C50C3C54B4136149F76989E8C5A19AE77695628A87949CD0D4D9FB89970FAE1
0E9B626B3BC5B31ABB383A6777EEE66CCDB444B6B167B820AD82B820BF290174
1B956EF2D479363371A1CFAFCDD853C69F128B26305B0A8476187101E350556D
777258A7BC277A92355123D4E789818F8474ACC07A620C92217221DD286C76A5
9057AF5CD5877E8F28DF126C310FD71115A0B725EDEB9D8E026C7165561ABC5C
FA653F5B6075D28B25558788B3A68D8348723DAF4A7688F8FA1276B030E8711E
27E90C2926A27D510E69512B9C70C2434513CE55BA9EE8BFE6780071A93BC36D
FBE6029F878FC59A654615785E5E27F8B50922247D81A69837ED9404D7C20398
16785FDF3C16715507FAC1A256207D14A1E013338CA388A3A716E578D4122013
757C6D445496CD9E665C4CB2B3CDA28DA368BD3F58C8E45D64FF0AC96A7336E7
0C94832B19CC2C21D6D4F5B3A38174526C402B3F08CEE5A7E239415BB47B8AAD
D3CBB1CE596A0A4D093163E531B3D50F2121166F5FF943AFB3C5EE92636BFD30
E26E9161790F00BDF60073826142850A881648CFF2BD247BEED5D3B35A5A90E8
22C650E4622CB7BDB175872072D1871A0C721A0823FF49E264286405A54D8A0A
29A19EA83707745DA3E386BBD02542A39C8983A25B3241BD9CC3EB1E7F45A760
186EE0D9707428281D8C81BCC77C6BCA751548BE122F618B598182825369B7ED
30FCFA1023A75E3F1B434D007CD2BDAB3137603919F893CC56567310450F5FF8
14F68511ECD14AC3240792D7BF47E068890AB3F47CDFB92847BA7229465015C0
64E530D4B1510372C8E7FF1BB91BC87899D5937698573BFAC64DB8CED4357204
A88570D920452075DFD557FB92419B69048E8ED153FC699BBDC4F2D227B7A940
85C657D1C6E607AE022C5D39A654085018252E9C4B700945D0987106C1627C22
AF294B72EF9BB34E10042752C0B839FF9E58F91054B0F0D6DDDE2D630E602B38
866A6FFCD97DECAA4D40AC7BBA575CFE7F484C71714FCE652FA38CDFCDBD7310
A9AD8CA4892D103A1F8AC88267A1B6600190E9DEF28E427561EAC1CF4EC54D29
A0B9DBBAF10B53AAAE61906D0B7798343E6E02F6FEB5286762FB059656980DCA
34FCAB9273AFE5819BE1D31040559F763E95CFE230D485EBE45DEF36C266E8D4
367454CAA54EFD38F6228B456E3A429D3C7381D84E984110C5AFAE51D0A8CDD7
778F1903526E18C29421DB4FEFD57CD2B0B7721EAF2B21A98C221203840F037B
4146F2BAB25A95E1B0429A0F9DCE0D458A89807B2461AB5288777DB575D01AA8
0CBF2A68F13180A7E3C12A28151255A190C65C5AC1C17E225F9933FBD0D21C5F
18A3035F3B493AE528D0073ACD49752A67AEC41B0748D0A9A6A8F11D00C94FBB
EFC948AB93478C35B4C997B3FE3D863BD1FE2D56BD513E5BE907EDBFA5E6F2E6
3B65E3627DC24E3B6759FD4F731A29103B0BC748B175559C6F384F0125B9879C
D0419A4E7CD45E6E9A17E963DF69E65809B7A1A57F9CC512BDC51EF254909AD1
634CB7956956787431C5F75462EEDBC507DD0FF442E4705FF8A70910AD75C8B1
3FBCF80B8A318F9B499A433BC974B43AC1FA919F23A2F2CF7A16BA18DF3377AF
013C143E1A5295BB56A33C5F907828FABB6144AE8861952835BA7B396815CECC
A18146C96709CFF862E8552CE599D3F8B06202FF8DCD698B56544751347E9AA3
520F60CFF12F4EC5F788E46EFB2EBF78FF44364DAE6371A33536309B02262916
7664E7533AEEF54C6A6DEC9D5D60F293D40C7F31F7B91923F0511EA1FC0941BA
DF67DC1977BD48114B7BE13FA0D8C8B03C17B86DF999D7A38BE3E6E67ED9531C
EF01F5EAC9A8A57C7B0EC2660C23EAE6E05A97261FF71F130C31ED8EEADD47A6
8AB01A786024211AB367916338E426565D12DC97BCF74E8F7864CAE5C7644035
0DD2FF1A3EA9F8F68BCDD152D7472AD6652A1AD30C9E062690821CCBDF7C1CE6
855B933501B250255AE8E8089985E0F368B91934BC6F0BB26D8EECB504BCD088
5539794E5792BA9BF0BCF3A3EAEC33223EFB7BB81E748968696739FBB8C0AEC5
2E7DE069C379FE170F987E6DE08DF97C6080D88BFC11C65851C0D1708AEE1986
FBEE771C9BC0652C5605843B5EC8867949264F207EDC6BDF5E2A715A45BEB2DA
289E8C89E0A506ABC5E8D801E4F37D0429326DD5BE94B874189879B86C7B900F
77C8D40612B985AA1BB8A7547422CBDD63720AC1F36A7E7DB75D690619B1EC7F
09A720453EC62E4172D396FCDF472EA4E05EEDEBE24A1E06F113DA10AC4A14A0
20C7A4D6DC88FE77396BA83809446D73D250F3587CBB55A9B713DFB34FD5F521
5079DEA66B96A83F80C5A85468AAA9A58785487E3E4211226C62CD30D229CD60
008F71D7A8574149E371D76E5746C548EA6942A5659D56D16D9C39BC3602B701
7DC7778496139EC861D6C46509BE85F9C4D3983662DE5D4B2A363B4E8A390673
3A92966C952CB289E7035C2350F093F644FEC0D02AE095D4A9761F4DCFA43046
EFB9FD93F1820E499E6C52763B088A5B3EB3AB7A99043C1E36CB382CF1CD0BDA
BF099E8276173D44820A47D885E3904D494C8870C6894763E77180C09F408DF9
EE9FAC8CBE9F60B39EA93FB92613967677E285B6D33B4427F49CC82023B94AB9
BA05A425FEE8C1AC62A50673A371DABC9D6ED56E0810AE5994B9306A87C5DD62
FEA2C52536474CB17982C65D054460F8EBF20EEC39C3C6A0D32322FCBE7EF281
62816C16C9539D3A78EEA9DD2897AC87D0060039EC532EE6B111FFB562C8A21E
C768DC1A937D05F3C88286D845BEB8240D3F097F49FB451505A35E00AA5BB04D
CF8939B63DE6F4F551D014E386B8D1A9C0EC5F4378CDB943B92E158AF667633C
433D3B3A9CCF81251F3BB3F3AD2D110B8FAE6AA2D3EA63639888BEC2E6CF7485
3B937C04930037032522FCE329670B89AD6F2607B92299D73ECB17DFE218F34C
0556ED95E2CDB9454B1B58EA2E255609BEE92517282201506D0860A8E5F4C729
94AAD92E3987E469CE3946DBBB9C936EBC1CD5D935E75FBAED4151438F63DB84
B084881D68FD176F6682A255B49FD0D273EB6C5E74C8B120988BD366C84C957C
4249D5BA4E1364EC8D59F5EA1CFECA85E778208D842515F78F00269D124ABAD8
3A1D1E81004DFBE05522B185C787239DD1D3DC32A37C5BD00D71F2B5816E8B87
F919627606A2F016927323881B184EA51FF04F907F0D118052644746624C392D
013290C2C8E882352672611A505631C27D4BD2B610801B91545AE9059B659500
5CC1A33247EFDA5F7F8CE2E978EDCB822404E5E1DF8DFCC6161AB59E7BB99EBC
75216473D5BF74E0D9125EEE57F04519932811DB124FFB266341AE65AFE12AEC
A9ECDE88EE04FEFFE29E4C8D75F4ACF23887A18276FA296E316CD9FEE8F22111
6D8EFE49AFDB1367EADDB961D32F62B646D90D4EC8361D3DF5E1D2E3C230A60D
1AED72035A10935C31EF7F7E5B144B3542095B1E04CC60712F9D9F922C233E2D
F68083E028F5F466A5A66C38302A6A20AA880FDCC2F6F65F7B1C686E5D7CBE44
33937E2B25564D3B0EF6CBD03322292C67F3E838255C43E9D19644BDF1ECCF17
D6E17C472C00A247F016CD7E08D828C7D8DC83C68BC3FCA64AAB08A9D4C16CC7
1BB42D5ACCDF499C988138F7F9FE84B2897B0A9E349EA8CA18AD9AE72F998D6D
B9B2F7ED81C15AD27B05EE2528EB1CF9841621613E03017DCF569148743EABF2
03521A743BB8021699B0F2D4EB0846F91FE8371ECA305FD1D602269CCD5A92CC
81A388194C95FBC32086AA5A2E8ADDCD257825E4D49B80F4CC1E005D28E54C59
AD52BEFF924B885C5D95F002875E734F4B44C7AF0FE789801D4D75D76C85777B
A55E63883341D4688F01E3438E6220ACEE8E63C1605042A0612ED810C22F1915
BEF974CAA2FA6511C4CEA9CFCDB786091EE51A813ABC3F45C3E7FF00F0946A59
31E01010E3AAC8487C9A5C0296E66A179511009D85D664F05C047889ED4B2B37
7B21B6F4724240EA2939ADBE2BB894EA141BD4ADE5C29D80736A227666423875
D49686BBEEE19BE118F331A58BE4704E51917D3BFD8AED02D5507CF07D516817
934348F5B6856206E88D274DD8EEEDC90D64D140A12D638A0D15C57944DC8575
47D670321DB5621BE2BB0490AC915B972AB08FC98D530EA992316A48365486AC
12E8FAA50DC64C2AF35A9A2D1DC7B0CD865F5924E38E67CD5BB0B936676B9835
6C0F184FF302EFD37D2A5AA35C941D4198AC8ED646586B0DD4AD847F385539BB
4F4DF2BFDF916682623014144260C21B74B53C01C38F26F70970BF5E8E252F0C
80EBC0102FF53D4D9FEFE64FC0D59D95E5927C7AA7ABAB6D87BE235EAA0BBE7C
D36224EAE2BF339018ABFE4B140B0CCD08A45CCB1E68891EEEE16E0BCA9321B8
F452069B63C04353F76E9BFAAF1F47B090305EE318A553D268E4E6F27943B11B
D3FFA669381E93111895943C6CE54EF39F3FB6E43D8AA45CA826A04E99FBC29F
11192B256496006D7DD7602AA4C8665A3C51773F3C0EA1DEE38C9E303FE42484
A742BC283C371B168704F4C9DDA1EEF46EFE33C31427842EC823DD1B90F6D26D
F5556D082AFB97F103E98C79FB16636529B303BA1340735AA00EF91AEDF3D584
BE266D800DE519B3C8A44A4B9E95C058B510B4A401547F474AF573D617850484
E9DA86EC0F2BDB1CD476631BF1704DE997FEB63E1ED30327929749598FDD8E93
3CC8F99F77893C5BCD0E548CECD9D12CA6696E9A17776FC7FB3F5B64789CBF05
32DB5262C4312EA7453D2A3DACEC303A038CED5A3ADA80F68760A0C1BE5AF183
FC50428C8BC8A2A9F3A2F37DC6636EF79D363D13AE5C18DA60FA294FB135CFD5
3576065FC79B118E8D230F9223AB137560593EB45B444BEF16BE96BAFAFF1FC7
C4AC3C99CDD9306DEA21534D29A5BDDE05FC13EB76C24B78EA41B32539D08FA5
FFE787387CA91D86844008855607B4571B983C08C1598B87D18888FA98C5EEC2
340A4E9E1CB4E4727307A16794E1AC472DAD567C266FCC8764025A158ADA93F7
250E7ABE659263FC1045E8F790A028445913389A0A21C14EC7D70572BA551CEC
8956497BA5EDCB358E70479F96ED7A8EEBC0C2C0967800784381F528CD56439A
38BCF9C3557D9299E8DB208D5A861DD665BCA052A1DB23034FFDF651199818DB
6FD29E27ED7C9B26C1354087F903E44798209081601F6F8A63D0FCF313F1C9C3
943277D46A6F9904076DC69BEC5BB0C4704F415D8447ECF70BCD49544029804B
8BBE8D3F0645DB96C9084D8245677100D914119D59CE53ACB960F5BA1EC14F66
A21947ED109BA3D4B218F224FCCF8CD5FFF58CF3935E9829376AB867F43B8EB2
764A749BA0E5DCB20D9C8CDCDF129DAFF95AEADA1D290708A822F03A7B51DDCB
AB8E868E49F4B5F1D049025EA99C5612818E9EE4260DAE280B58DB1A488F157C
6EFC79BD2E8312FFC756FA1A4754CC329FC6FE2E7D414D84C7DF6042166BB7FD
FF27239ED4CA35009FA47C8340B8192EA36BE3FE45458121547B307D8220DE47
6F498146B1D82ECB908F7BF57283DF2DE879A8F1793EE1028A030B7074FD392A
252A2890626A45C9830365D04C8164
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/A)
@start /Fa 242[1594 13[{ enclmmathsy ReEncodeFont }1
1594.02 /LMMathSymbols10-Regular rf /Fb 204[406 51[{
 enclmrm ReEncodeFont }1 664.176 /LMRoman6-Regular rf
/Fc 135[530 3[340 8[490 107[{ enclmmathit ReEncodeFont }3
885.568 /LMMathItalic8-Regular rf /Fd 203[993 1[993 50[{}2
1328.35 /wasy10 rf /Fe 173[959 82[{}1 1328.35 /MSBM10
rf /Ff 254[337 943{ enclmmathsy ReEncodeFont }2 1212.12
/LMMathSymbols10-Regular rf /Fg 140[478 3[606 673 4[337
5[539 37[943 10[606 6[943 1[471 471 40[{ enclmrm ReEncodeFont }10
1212.12 /LMRoman10-Regular rf /Fh 135[693 17[593 102[{
 enclmmathit ReEncodeFont }2 1212.12 /LMMathItalic10-Regular
rf /Fi 177[830 12[830 14[553 553 2[307 46[{ enclmec ReEncodeFont }5
1106.96 /LMRoman10-Regular rf /Fj 160[909 45[606 1[606
47[{ enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular
rf /Fk 207[255 46[261 1[{ enclmmathsy ReEncodeFont }2
885.568 /LMMathSymbols8-Regular rf /Fl 143[1107 1[664
59[886 48[369 1033{ enclmmathsy ReEncodeFont }5 1328.35
/LMMathSymbols10-Regular rf /Fm 201[470 1[470 470 470
470 5[732 43[{ enclmrm ReEncodeFont }6 885.568 /LMRoman8-Regular
rf /Fn 140[513 3[650 723 4[361 5[578 5[361 1[361 29[1012
1[361 2[650 650 650 650 650 650 650 650 650 4[1012 1[506
506 40[{ enclmrm ReEncodeFont }21 1328.35 /LMRoman12-Regular
rf /Fo 134[634 739 3[470 613 7[676 3[623 641 603 1[560
553 683 37[361 59[{ enclmmathit ReEncodeFont }12 1328.35
/LMMathItalic12-Regular rf /Fp 3[723 5[650 17[650 7[975
23[975 73[578 686 686 939 686 723 506 513 506 1[723 650
723 1084 361 686 397 361 723 650 397 578 723 578 723
650 6[795 2[1336 975 1[939 723 957 1[885 1012 1[1192
1[1011 2[975 1021 849 885 993 939 921 975 1[614 4[361
650 650 650 650 650 650 650 650 650 650 1[361 434 361
2[506 506 6[361 5[759 27[{ enclmec ReEncodeFont }67 1328.35
/LMRoman12-Regular rf /Fq 133[956 1136 2[1136 1196 837
849 879 1[1196 1076 1196 1793 598 1136 1[598 1196 1076
658 982 1196 956 1196 1046 6[1315 2[2223 2[1497 1196
2[1470 1616 1682 2041 1293 1685 1[801 1682 1691 1353
1412 1[1554 1530 1625 7[1076 1076 1076 1076 1076 1076
1076 1076 1076 1076 1076 598 717 45[{ enclmec ReEncodeFont }53
1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fq(AN)633
b(2.1)g(-)g(1)f(Ableitung)f(einer)g(P)-60 b(olynomfunktion)630
b(-)j(O)-60 b(A)633 b(-)g(BIFIE)p 0 TeXcolorgray -741
4800 a Fp(1.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(ist)h(eine)f(P)-36 b(olynomfunktion)435 b Fo(f)575
b Fp(mit)434 b Fo(f)142 b Fn(\()p Fo(x)p Fn(\))369 b(=)f(7)p
Fo(x)30208 4318 y Fm(3)31030 4800 y Fl(\000)295 b Fn(5)p
Fo(x)33747 4318 y Fm(2)34568 4800 y Fn(+)g(2)p Fo(x)h
Fl(\000)f Fn(3)p Fp(.)921 7346 y(Bilde)434 b(die)f(1.)i(und)d(die)i(2.)
g(Ableitung)f(der)g(F)-108 b(unktion)433 b Fo(f)142 b
Fp(!)p 1 0 0 TeXcolorrgb 921 11883 a Fo(f)1704 11401
y Fk(0)2014 11883 y Fn(\()p Fo(x)p Fn(\))369 b(=)g(21)p
Fo(x)7554 11401 y Fm(2)8376 11883 y Fl(\000)295 b Fn(10)p
Fo(x)h Fn(+)f(2)921 14429 y Fo(f)1704 13947 y Fk(00)2270
14429 y Fn(\()p Fo(x)p Fn(\))368 b(=)h(42)p Fo(x)296
b Fl(\000)f Fn(10)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 4800 a Fj(___/1)p 1 0 0 TeXcolorrgb
47998 6792 a Fi(AN)369 b(2.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 18236 54804 45 v -2331
23537 a Fq(AN)921 b(2.1)g(-)g(2)g(Ableitung)e(v)-60 b(on)920
b(Sin)-60 b(us-)920 b(und)f(Cosin)-60 b(us-F)-179 b(unktion)918
b(-)-2331 26560 y(ZO)718 b(-)f(BIFIE)p 0 TeXcolorgray
-741 29867 a Fp(2.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(sind)g(vier)h(F)-108 b(unktionen)433 b(und)f(sec)-36
b(hs)433 b(Ableitungsfunktionen.)921 32412 y(Ordne)f(den)h(F)-108
b(unktionen)433 b(die)g(ric)-36 b(h)g(tige)434 b(Ableitungsfunktion)f
Fo(f)33017 31930 y Fk(0)33761 32412 y Fp(zu!)p 0 TeXcolorgray
0 TeXcolorgray 2683 34120 15666 45 v 18348 34120 4523
45 v 2683 37453 45 3334 v 3391 36176 a Fo(f)142 b Fn(\()p
Fo(x)p Fn(\))369 b(=)g(2)266 b Fl(\001)h Fn(cos\()p Fo(x)p
Fn(\))g Fl(\000)f Fn(sin)7 b(\()p Fo(x)p Fn(\))p 18304
37453 V 0.9 TeXcolorgray 18348 37453 4478 3334 v 0 TeXcolorgray
1 0 0 TeXcolorrgb 20090 36301 a Fp(D)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 22826 37453 45 3334
v 2683 37497 15666 45 v 18348 37497 4523 45 v 2683 40830
45 3334 v 3391 39553 a Fo(f)142 b Fn(\()p Fo(x)p Fn(\))369
b(=)g(cos\()p Fo(x)p Fn(\))272 b(+)f(2)i Fl(\001)e Fn(sin)7
b(\()p Fo(x)p Fn(\))p 18304 40830 V 0.9 TeXcolorgray
18348 40830 4478 3334 v 0 TeXcolorgray 1 0 0 TeXcolorrgb
20117 39678 a Fp(C)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 22826 40830 45 3334 v 2683 40874 15666
45 v 18348 40874 4523 45 v 2683 44207 45 3334 v 3391
42930 a Fo(f)142 b Fn(\()p Fo(x)p Fn(\))369 b(=)g Fl(\000)p
Fn(2)8 b Fl(\001)g Fn(cos)q(\()p Fo(x)p Fn(\))g Fl(\000)g
Fn(sin)f(\()p Fo(x)p Fn(\))p 18304 44207 V 0.9 TeXcolorgray
18348 44207 4478 3334 v 0 TeXcolorgray 1 0 0 TeXcolorrgb
20075 43056 a Fp(A)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 22826 44207 45 3334 v 2683 44252 15666
45 v 18348 44252 4523 45 v 2683 47526 45 3275 v 3391
46279 a Fh(f)130 b Fg(\()p Fh(x)p Fg(\))338 b(=)f Ff(\000)202
b Fg(cos\()p Fh(x)p Fg(\))213 b(+)g(2)g Ff(\001)f Fg(sin)9
b(\()p Fh(x)p Fg(\))p 18304 47526 V 0.9 TeXcolorgray
18348 47526 4478 3275 v 0 TeXcolorgray 1 0 0 TeXcolorrgb
20126 46433 a Fp(B)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 22826 47526 45 3275 v 2683 47571 15666
45 v 18348 47571 4523 45 v 0 TeXcolorgray 0 TeXcolorgray
24451 34120 4567 45 v 29018 34120 15621 45 v 24451 37406
45 3287 v 0.92 TeXcolorgray 24496 37406 4478 3287 v 0
TeXcolorgray 26223 36301 a(A)p 28973 37406 45 3287 v
29682 36158 a Fh(f)30405 35718 y Fk(0)30716 36158 y Fg(\()p
Fh(x)p Fg(\))338 b(=)e Ff(\000)202 b Fg(cos\()p Fh(x)p
Fg(\))135 b(+)g(2)g Ff(\001)g Fg(sin)10 b(\()p Fh(x)p
Fg(\))p 44594 37406 V 24451 37450 4567 45 v 29018 37450
15621 45 v 24451 40783 45 3334 v 0.92 TeXcolorgray 24496
40783 4478 3334 v 0 TeXcolorgray 26274 39631 a Fp(B)p
28973 40783 45 3334 v 29682 39506 a Fo(f)30465 39024
y Fk(0)30775 39506 y Fn(\()p Fo(x)p Fn(\))369 b(=)g(2)194
b Fl(\001)g Fn(cos)q(\()p Fo(x)p Fn(\))g(+)g(sin)6 b(\()p
Fo(x)p Fn(\))p 44594 40783 V 24451 40828 4567 45 v 29018
40828 15621 45 v 24451 44161 45 3334 v 0.92 TeXcolorgray
24496 44161 4478 3334 v 0 TeXcolorgray 26265 43009 a
Fp(C)p 28973 44161 45 3334 v 29682 42884 a Fo(f)30465
42402 y Fk(0)30775 42884 y Fn(\()p Fo(x)p Fn(\))369 b(=)g(2)189
b Fl(\001)g Fn(cos\()p Fo(x)p Fn(\))g Fl(\000)g Fn(sin)6
b(\()p Fo(x)p Fn(\))p 44594 44161 V 24451 44205 4567
45 v 29018 44205 15621 45 v 24451 47491 45 3287 v 0.92
TeXcolorgray 24496 47491 4478 3287 v 0 TeXcolorgray 26238
46386 a Fp(D)p 28973 47491 45 3287 v 29682 46243 a Fh(f)30405
45803 y Fk(0)30716 46243 y Fg(\()p Fh(x)p Fg(\))338 b(=)e
Ff(\000)202 b Fg(cos\()p Fh(x)p Fg(\))135 b Ff(\000)g
Fg(2)g Ff(\001)g Fg(sin)10 b(\()p Fh(x)p Fg(\))p 44594
47491 V 24451 47535 4567 45 v 29018 47535 15621 45 v
24451 50868 45 3334 v 0.92 TeXcolorgray 24496 50868 4478
3334 v 0 TeXcolorgray 26292 49716 a Fp(E)p 28973 50868
45 3334 v 29682 49591 a Fo(f)30465 49109 y Fk(0)30775
49591 y Fn(\()p Fo(x)p Fn(\))369 b(=)g(cos\()p Fo(x)p
Fn(\))189 b Fl(\000)g Fn(2)g Fl(\001)g Fn(sin)6 b(\()p
Fo(x)p Fn(\))p 44594 50868 V 24451 50913 4567 45 v 29018
50913 15621 45 v 24451 54246 45 3334 v 0.92 TeXcolorgray
24496 54246 4478 3334 v 0 TeXcolorgray 26310 53094 a
Fp(F)p 28973 54246 45 3334 v 29682 52969 a Fo(f)30465
52487 y Fk(0)30775 52969 y Fn(\()p Fo(x)p Fn(\))369 b(=)g(2)194
b Fl(\001)g Fn(sin)7 b(\()p Fo(x)p Fn(\))194 b(+)g(cos\()p
Fo(x)p Fn(\))p 44594 54246 V 24451 54290 4567 45 v 29018
54290 15621 45 v 47992 29867 a Fj(___/1)p 1 0 0 TeXcolorrgb
47998 31859 a Fi(AN)369 b(2.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 60657 54804 45 v 0 TeXcolorgray
24746 81281 a Fp(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fq(AN)718 b(2.1)f(-)h(3)f(Ableitungsregeln)d
(erk)-60 b(ennen)715 b(-)j(MC)g(-)f(BIFIE)p 0 TeXcolorgray
-741 4800 a Fp(3.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(sind)g(di\033erenzierbare)g(F)-108 b(unktionen)432
b Fo(f)576 b Fp(und)432 b Fo(g)481 b Fp(und)433 b Fo(a)368
b Fl(2)h Fe(R)35770 4318 y Fm(+)36557 4800 y Fp(.)855
7346 y(W)-108 b(elc)-36 b(he)632 b(der)g(nac)-36 b(hstehenden)631
b(Ableitungsregeln)h(sind)h(k)-36 b(orrekt?)634 b(Kreuze)e(die)h(b)36
b(eiden)921 9338 y(zutre\033enden)432 b(A)-36 b(ussagen)433
b(an!)p 13017 10305 20351 45 v 13017 13523 45 3219 v
13725 12246 a Fn([)8 b Fo(f)142 b Fn(\()p Fo(x)p Fn(\))295
b(+)g Fo(a)p Fn(])19274 11764 y Fk(0)19953 12246 y Fn(=)369
b Fo(f)22117 11764 y Fk(0)22427 12246 y Fn(\()p Fo(x)p
Fn(\))295 b(+)g Fo(a)p 30958 13523 V 33323 13523 V 13017
13567 20351 45 v 13017 16785 45 3219 v 13725 15508 a
Fn([)8 b Fo(a)295 b Fl(\001)g Fo(f)142 b Fn(\()p Fo(x)p
Fn(\)])18631 15026 y Fk(0)19311 15508 y Fn(=)368 b Fo(a)295
b Fl(\001)g Fo(f)23116 15026 y Fk(0)23427 15508 y Fn(\()p
Fo(x)p Fn(\))p 30958 16785 V 1 0 0 TeXcolorrgb 6488 w
Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
33323 16785 V 13017 16829 20351 45 v 13017 20047 45 3219
v 13725 18770 a Fn([)8 b Fo(f)142 b Fn(\()p Fo(x)p Fn(\))295
b Fl(\001)g Fo(g)48 b Fn(\()p Fo(x)p Fn(\)])20370 18288
y Fk(0)21049 18770 y Fn(=)369 b Fo(f)23213 18288 y Fk(0)23523
18770 y Fn(\()p Fo(x)p Fn(\))295 b Fl(\001)g Fo(g)26904
18288 y Fk(0)27214 18770 y Fn(\()p Fo(x)p Fn(\))p 30958
20047 V 33323 20047 V 13017 20092 20351 45 v 13017 23310
45 3219 v 13725 22033 a([)8 b Fo(f)142 b Fn(\()p Fo(a)295
b Fl(\001)g Fo(x)p Fn(\)])18631 21551 y Fk(0)19311 22033
y Fn(=)368 b Fo(a)295 b Fl(\001)g Fo(f)23116 21551 y
Fk(0)23427 22033 y Fn(\()p Fo(x)p Fn(\))p 30958 23310
V 33323 23310 V 13017 23354 20351 45 v 13017 26572 45
3219 v 13725 25295 a([)8 b Fo(f)142 b Fn(\()p Fo(x)p
Fn(\))295 b Fl(\000)g Fo(g)48 b Fn(\()p Fo(x)p Fn(\)])21034
24813 y Fk(0)21713 25295 y Fn(=)369 b Fo(f)23877 24813
y Fk(0)24187 25295 y Fn(\()p Fo(x)p Fn(\))295 b Fl(\000)h
Fo(g)28233 24813 y Fk(0)28543 25295 y Fn(\()p Fo(x)p
Fn(\))p 30958 26572 V 1 0 0 TeXcolorrgb 1372 w Fd(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 33323
26572 V 13017 26616 20351 45 v 47992 4800 a Fj(___/1)p
1 0 0 TeXcolorrgb 47998 6792 a Fi(AN)369 b(2.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 30645
54804 45 v -2331 35946 a Fq(AN)718 b(2.1)f(-)h(4)f(Erste)g(Ableitung)e
(einer)i(F)-179 b(unktion)714 b(-)k(MC)g(-)f(BIFIE)p
0 TeXcolorgray -741 39695 a Fp(4.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)433 b(ist)h(die)f(F)-108 b(unktion)433
b Fo(f)575 b Fp(mit)434 b Fo(f)142 b Fn(\()p Fo(a)p Fn(\))368
b(=)23657 38797 y Fo(a)24340 38315 y Fm(2)25161 38797
y Fl(\001)295 b Fo(b)26378 38315 y Fm(3)p 23657 39386
3247 45 v 25000 40607 a Fo(c)27470 39695 y Fp(mit)434
b Fo(b;)221 b(c)369 b Fl(2)g Fe(R)p Fl(n)p Fn(0)p Fp(.)921
42241 y(Kreuze)433 b(denjenigen)h(T)-108 b(erm)433 b(an,)h(der)f(die)g
(erste)h(Ableitung)f Fo(f)31662 41759 y Fk(0)32406 42241
y Fp(der)g(F)-108 b(unktion)433 b Fo(f)575 b Fp(angibt!)p
15773 43208 14837 45 v 15773 47960 45 4753 v 16615 45205
a Fn(2)295 b Fl(\001)g Fo(a)g Fl(\001)h Fo(b)20420 44723
y Fm(3)21241 45205 y Fl(\001)f Fo(c)g Fl(\000)g Fo(a)24771
44723 y Fm(2)25592 45205 y Fl(\001)g Fo(b)26809 44723
y Fm(3)p 16615 45794 10721 45 v 21432 47015 a Fo(c)21992
46631 y Fm(2)p 28201 47960 45 4753 v 30566 47960 V 15773
48004 14837 45 v 15773 52757 45 4753 v 16615 50002 a
Fn(2)g Fl(\001)g Fo(a)g Fl(\001)h Fo(b)20420 49520 y
Fm(3)21241 50002 y Fn(+)e(3)i Fl(\001)f Fo(a)24840 49520
y Fm(2)25661 50002 y Fl(\001)g Fo(b)26878 49520 y Fm(2)p
16615 50591 10790 45 v 21466 51812 a Fo(c)22026 51428
y Fm(2)p 28201 52757 45 4753 v 30566 52757 V 15773 52801
14837 45 v 15773 57553 45 4753 v 16615 54798 a Fn(2)g
Fl(\001)g Fo(a)g Fl(\001)h Fo(b)20420 54316 y Fm(3)p
16615 55387 4331 45 v 18500 56608 a Fo(c)p 28201 57553
45 4753 v 1 0 0 TeXcolorrgb 28909 55509 a Fd(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 30566 57553
V 15773 57597 14837 45 v 15773 60324 45 2727 v 16482
59379 a Fn(2)f Fl(\001)h Fo(a)p 28201 60324 V 30566 60324
V 15773 60368 14837 45 v 15773 65120 45 4753 v 16615
62366 a Fn(2)f Fl(\001)g Fo(a)g Fl(\001)h Fo(b)20420
61884 y Fm(3)p 16615 62954 4331 45 v 18237 64175 a Fo(c)18797
63792 y Fm(2)p 28201 65120 45 4753 v 30566 65120 V 15773
65165 14837 45 v 15773 68107 45 2943 v 16482 67162 a
Fn(2)f Fl(\001)h Fo(a)18775 66680 y Fm(3)p 28201 68107
V 30566 68107 V 15773 68151 14837 45 v 47992 39695 a
Fj(___/1)p 1 0 0 TeXcolorrgb 47998 41687 a Fi(AN)369
b(2.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 72179 54804 45 v 0 TeXcolorgray 24746 81281 a Fp(2)p
0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fq(AN)718 b(2.1)f(-)h(5)f(Ableitung)e(v)-60
b(on)717 b(F)-179 b(unktionen)714 b(-)j(ZO)h(-)f(BIFIE)p
0 TeXcolorgray -741 4800 a Fp(5.)p 0 TeXcolorgray 651
w(Die)392 b(Ableitungsfunktion)f(einer)g(F)-108 b(unktion)391
b(kann)g(mithilfe)h(einfac)-36 b(her)392 b(Regeln)g(des)f(Di\033e-)921
6792 y(renzierens)433 b(ermittelt)g(w)-36 b(erden.)921
9338 y(Ordne)426 b(den)g(gegeb)36 b(enen)427 b(F)-108
b(unktionen)426 b(jew)-36 b(eils)429 b(die)e(en)-36 b(tsprec)g(hende)
424 b(Ableitungsfunktion)921 11330 y(zu!)p 0 TeXcolorgray
0 TeXcolorgray 2683 12779 14298 45 v 16981 12779 4523
45 v 2683 17315 45 4537 v 3391 15459 a Fo(f)4032 15658
y Fm(1)4558 15459 y Fn(\()p Fo(x)p Fn(\))369 b(=)8236
14560 y(2)p 8191 15149 740 45 v 8191 16370 a Fo(x)p 16937
17315 45 4537 v 0.9 TeXcolorgray 16981 17315 4478 4537
v 0 TeXcolorgray 1 0 0 TeXcolorrgb 18795 15504 a Fp(F)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 21459
17315 45 4537 v 2683 17359 14298 45 v 16981 17359 4523
45 v 2683 20720 45 3362 v 3391 19443 a Fo(f)4032 19642
y Fm(2)4558 19443 y Fn(\()p Fo(x)p Fn(\))g(=)g Fl(\000)p
Fn(2)p Fo(x)10481 18961 y Fm(2)11302 19443 y Fn(+)295
b(2)p Fo(x)h Fl(\000)f Fn(2)p 16937 20720 V 0.9 TeXcolorgray
16981 20720 4478 3362 v 0 TeXcolorgray 1 0 0 TeXcolorrgb
18708 19541 a Fp(A)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 21459 20720 45 3362 v 2683 20765 14298
45 v 16981 20765 4523 45 v 2683 25301 45 4537 v 3391
23445 a Fo(f)4032 23644 y Fm(3)4558 23445 y Fn(\()p Fo(x)p
Fn(\))369 b(=)8499 22546 y(1)p 8191 23135 1265 45 v 8191
24356 a Fo(x)8930 23972 y Fm(2)p 16937 25301 45 4537
v 0.9 TeXcolorgray 16981 25301 4478 4537 v 0 TeXcolorgray
1 0 0 TeXcolorrgb 18777 23490 a Fp(E)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 21459 25301 45 4537
v 2683 25345 14298 45 v 16981 25345 4523 45 v 2683 28775
45 3430 v 3391 27498 a Fo(f)4032 27697 y Fm(4)4558 27498
y Fn(\()p Fo(x)p Fn(\))g(=)8059 26414 y Fl(p)p 9166 26414
1390 54 v 1084 x Fn(2)p Fo(x)p 16937 28775 45 3430 v
0.9 TeXcolorgray 16981 28775 4478 3430 v 0 TeXcolorgray
1 0 0 TeXcolorrgb 18759 27526 a Fp(B)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 21459 28775 45 3430
v 2683 28819 14298 45 v 16981 28819 4523 45 v 0 TeXcolorgray
0 TeXcolorgray 24451 12668 4567 45 v 29018 12668 10642
45 v 24451 16001 45 3334 v 0.92 TeXcolorgray 24496 16001
4478 3334 v 0 TeXcolorgray 26223 14849 a(A)p 28973 16001
45 3334 v 29682 14724 a Fo(f)30465 14242 y Fk(0)30775
14724 y Fn(\()p Fo(x)p Fn(\))g(=)g Fl(\000)p Fn(4)p Fo(x)296
b Fn(+)e(2)p 39615 16001 V 24451 16045 4567 45 v 29018
16045 10642 45 v 24451 20875 45 4830 v 0.92 TeXcolorgray
24495 20875 4478 4830 v 0 TeXcolorgray 26274 18917 a
Fp(B)p 28973 20875 45 4830 v 29682 18725 a Fo(f)30465
18243 y Fk(0)30775 18725 y Fn(\()p Fo(x)p Fn(\))369 b(=)35332
17827 y(1)p 34409 18415 2497 45 v 34409 18654 a Fl(p)p
35516 18654 1390 54 v 1084 x Fn(2)p Fo(x)p 39615 20875
45 4830 v 24451 20919 4567 45 v 29018 20919 10642 45
v 24451 25748 45 4830 v 0.92 TeXcolorgray 24495 25748
4478 4830 v 0 TeXcolorgray 26265 23791 a Fp(C)p 28973
25748 45 4830 v 29682 23599 a Fo(f)30465 23117 y Fk(0)30775
23599 y Fn(\()p Fo(x)p Fn(\))g(=)35332 22700 y(2)p 34409
23289 2497 45 v 34409 23528 a Fl(p)p 35516 23528 1390
54 v 1084 x Fn(2)p Fo(x)p 39615 25748 45 4830 v 24451
25792 4567 45 v 29018 25792 10642 45 v 24451 30329 45
4537 v 0.92 TeXcolorgray 24495 30329 4478 4537 v 0 TeXcolorgray
26238 28518 a Fp(D)p 28973 30329 45 4537 v 29682 28473
a Fo(f)30465 27990 y Fk(0)30775 28473 y Fn(\()p Fo(x)p
Fn(\))g(=)g Fl(\000)35749 27574 y Fn(2)p 35442 28162
1265 45 v 35442 29384 a Fo(x)36181 29000 y Fm(4)p 39615
30329 45 4537 v 24451 30373 4567 45 v 29018 30373 10642
45 v 24451 34909 45 4537 v 0.92 TeXcolorgray 24495 34909
4478 4537 v 0 TeXcolorgray 26292 33098 a Fp(E)p 28973
34909 45 4537 v 29682 33053 a Fo(f)30465 32571 y Fk(0)30775
33053 y Fn(\()p Fo(x)p Fn(\))g(=)g Fl(\000)35749 32154
y Fn(2)p 35442 32743 1265 45 v 35442 33964 a Fo(x)36181
33580 y Fm(3)p 39615 34909 45 4537 v 24451 34953 4567
45 v 29018 34953 10642 45 v 24451 39489 45 4537 v 0.92
TeXcolorgray 24495 39489 4478 4537 v 0 TeXcolorgray 26310
37678 a Fp(F)p 28973 39489 45 4537 v 29682 37633 a Fo(f)30465
37151 y Fk(0)30775 37633 y Fn(\()p Fo(x)p Fn(\))g(=)g
Fl(\000)35749 36735 y Fn(2)p 35442 37323 1265 45 v 35442
38544 a Fo(x)36181 38161 y Fm(2)p 39615 39489 45 4537
v 24451 39534 4567 45 v 29018 39534 10642 45 v 47992
4800 a Fj(___/1)p 1 0 0 TeXcolorrgb 47998 6792 a Fi(AN)g(2.1)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
45901 54804 45 v -2331 51202 a Fq(AN)718 b(2.1)f(-)h(6)f
(Ableitungsfunktion)712 b(b)60 b(estimmen)716 b(-)i(O)-60
b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray -741 54952 a Fp(6.)p
0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(ist)h(die)f(F)-108
b(unktion)433 b Fo(f)575 b Fp(mit)434 b Fo(f)142 b Fn(\()p
Fo(y)48 b Fn(\))368 b(=)23656 54053 y Fo(x)24395 53571
y Fm(2)24921 54053 y Fo(y)343 b Fl(\000)295 b Fo(xy)28647
53571 y Fm(2)p 23656 54642 5518 45 v 26089 55863 a Fn(2)29306
54952 y Fo(;)221 b(x)370 b Fl(2)e Fe(R)p Fp(.)921 57497
y(Bestimme)434 b(den)f(F)-108 b(unktionsterm)432 b(der)h
(Ableitungsfunktion)h Fo(f)32508 57015 y Fk(0)32818 57497
y Fp(!)921 62034 y Fo(f)1704 61552 y Fk(0)2014 62034
y Fn(\()p Fo(y)48 b Fn(\))369 b(=)p 5458 62034 15749
34 v 1 0 0 TeXcolorrgb 921 66974 a Fo(f)1704 66492 y
Fk(0)2014 66974 y Fn(\()p Fo(y)48 b Fn(\))369 b(=)5590
66075 y Fo(x)6329 65593 y Fm(2)7150 66075 y Fl(\000)296
b Fn(2)p Fo(xy)p 5590 66664 4960 45 v 7745 67885 a Fn(2)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
54952 a Fj(___/1)p 1 0 0 TeXcolorrgb 47998 56944 a Fi(AN)369
b(2.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 71360 54804 45 v 0 TeXcolorgray 24746 81281 a Fp(3)p
0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fq(AN)718 b(2.1)f(-)h(7)f(Ableitungsregel)d
(-)k(MC)g(-)f(BIFIE)p 0 TeXcolorgray -741 4800 a Fp(7.)p
0 TeXcolorgray 651 w(F)-27 b(\374r)433 b(w)-36 b(elc)g(he)433
b(der)g(folgenden)h(F)-108 b(unktionen)433 b(gilt)h(der)f(Zusammenhang)
921 7346 y Fo(f)1704 6864 y Fk(0)2014 7346 y Fn(\()p
Fo(x)p Fn(\))369 b(=)g Fo(k)340 b Fl(\001)295 b Fo(f)142
b Fn(\()p Fo(x)p Fn(\))433 b Fp(mit)h Fo(k)414 b Fl(2)369
b Fe(R)15851 6864 y Fm(+)16638 7346 y Fp(?)921 11883
y(Kreuze)433 b(die)h(zutre\033ende)e(F)-108 b(unktionsgleic)-36
b(h)g(ung)433 b(an!)p 16642 12850 13100 45 v 16642 16068
45 3219 v 17350 14791 a Fo(f)142 b Fn(\()p Fo(x)p Fn(\))369
b(=)g Fo(k)340 b Fl(\001)295 b Fo(x)p 27332 16068 V 29698
16068 V 16642 16112 13100 45 v 16642 19431 45 3319 v
17350 18154 a(f)142 b Fn(\()p Fo(x)p Fn(\))369 b(=)g
Fo(x)22373 17672 y Fm(2)p Fk(\001)p Fc(k)p 27332 19431
V 29698 19431 V 16642 19475 13100 45 v 16642 22694 45
3219 v 17350 21417 a Fo(f)142 b Fn(\()p Fo(x)p Fn(\))369
b(=)g Fo(k)340 b Fl(\001)295 b Fn(sin)6 b(\()p Fo(x)p
Fn(\))p 27332 22694 V 29698 22694 V 16642 22738 13100
45 v 16642 26057 45 3319 v 17350 24780 a Fo(f)142 b Fn(\()p
Fo(x)p Fn(\))369 b(=)g Fo(e)22237 24298 y Fc(k)24 b Fk(\001)p
Fc(x)p 27332 26057 V 1 0 0 TeXcolorrgb 28041 24729 a
Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
29698 26057 V 16642 26101 13100 45 v 16642 29587 45 3486
v 17350 28184 a Fo(f)142 b Fn(\()p Fo(x)p Fn(\))369 b(=)21775
27661 y Fc(k)p 21767 27874 530 45 v 21767 28642 a(x)p
27332 29587 45 3486 v 29698 29587 V 16642 29631 13100
45 v 16642 32910 45 3280 v 17350 31633 a Fo(f)142 b Fn(\()p
Fo(x)p Fn(\))369 b(=)g Fo(k)340 b Fl(\001)23314 30682
y(p)p 24421 30682 740 54 v 951 x Fo(x)p 27332 32910 45
3280 v 29698 32910 V 16642 32955 13100 45 v 47992 4800
a Fj(___/1)p 1 0 0 TeXcolorrgb 47998 6792 a Fi(AN)369
b(2.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 36983 54804 45 v -2331 42284 a Fq(AN)661 b(2.1)f(-)g(8)g(P)-60
b(olynomfunktion)657 b(ableiten)i(-)h(O)-60 b(A)660 b(-)h(BIFIE)g(-)f
(K)-60 b(om-)-2331 45307 y(p)60 b(etenzc)-60 b(hec)g(k)717
b(2016)p 0 TeXcolorgray -741 48614 a Fp(8.)p 0 TeXcolorgray
651 w(Eine)333 b(reelle)i(F)-108 b(unktion)332 b Fo(f)476
b Fp(ist)333 b(durc)-36 b(h)333 b(die)g(F)-108 b(unktionsgleic)-36
b(h)g(ung)333 b Fo(f)142 b Fn(\()p Fo(x)p Fn(\))369 b(=)f(4)p
Fo(x)37824 48132 y Fm(3)38441 48614 y Fl(\000)91 b Fn(2)p
Fo(x)40954 48132 y Fm(2)41572 48614 y Fn(+)g(5)p Fo(x)g
Fl(\000)g Fn(2)921 50606 y Fp(gegeb)36 b(en.)921 53151
y(Gib)433 b(eine)h(F)-108 b(unktionsgleic)-36 b(h)g(ung)432
b(der)h(Ableitungsfunktion)h Fo(f)31805 52669 y Fk(0)32549
53151 y Fp(der)f(F)-108 b(unktion)433 b Fo(f)575 b Fp(an.)921
57689 y Fo(f)1704 57206 y Fk(0)2014 57689 y Fn(\()p Fo(x)p
Fn(\))369 b(=)p 5146 57689 15749 34 v 1 0 0 TeXcolorrgb
921 62226 a Fo(f)1704 61744 y Fk(0)2014 62226 y Fn(\()p
Fo(x)p Fn(\))g(=)g(12)p Fo(x)7554 61744 y Fm(2)8376 62226
y Fl(\000)295 b Fn(4)p Fo(x)h Fn(+)e(5)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 48614 a Fj(___/1)p
1 0 0 TeXcolorrgb 47998 50606 a Fi(AN)369 b(2.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 66033
54804 45 v 0 TeXcolorgray 24746 81281 a Fp(4)p 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fq(AN)680 b(2.1)f(-)g(9)h(Ableitung)d(einer)h
(Wink)-60 b(elfunktion)675 b(-)680 b(O)-60 b(A)679 b(-)h(Matura)-2385
4515 y(2014/15)718 b(-)f(Neb)60 b(en)-60 b(termin)716
b(1)p 0 TeXcolorgray -741 7823 a Fp(9.)p 0 TeXcolorgray
651 w(Eine)433 b(Gleic)-36 b(h)g(ung)433 b(einer)h(F)-108
b(unktion)432 b Fo(f)576 b Fp(lautet:)921 10368 y Fo(f)142
b Fn(\()p Fo(x)p Fn(\))369 b(=)f(5)296 b Fl(\001)f Fn(cos\()p
Fo(x)p Fn(\))g(+)g(sin)6 b(\(3)296 b Fl(\001)f Fo(x)p
Fn(\))921 14905 y Fp(Gib)433 b(ein)g(Gleic)-36 b(h)g(ung)433
b(der)g(Ableitungsfunktion)h Fo(f)25972 14423 y Fk(0)26716
14905 y Fp(der)f(F)-108 b(unktion)433 b Fo(f)575 b Fp(an.)p
1 0 0 TeXcolorrgb 921 17451 a Fo(f)1704 16969 y Fk(0)2014
17451 y Fn(\()p Fo(x)p Fn(\))369 b(=)g Fl(\000)p Fn(5)295
b Fl(\001)h Fn(sin)6 b(\()p Fo(x)p Fn(\))295 b(+)g(3)g
Fl(\001)g Fn(cos)q(\(3)g Fl(\001)g Fo(x)p Fn(\))p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7823
a Fj(___/1)p 1 0 0 TeXcolorrgb 47998 9815 a Fi(AN)369
b(2.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 21258 54804 45 v -2331 26686 a Fq(AN)1005 b(2.1)g(-)h(10)e
(Ableitungsregeln)e(-)j(MC)h(-)f(Matura)g(2015/16)g(-)-2331
29709 y(Neb)60 b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray
-1391 33016 a Fp(10.)p 0 TeXcolorgray 651 w(\334b)36
b(er)433 b(zw)-36 b(ei)434 b(P)-36 b(olynomfunktionen)435
b Fo(f)575 b Fp(und)433 b Fo(g)481 b Fp(ist)433 b(b)36
b(ekann)-36 b(t,)434 b(dass)f(f\374r)h(alle)g Fo(x)369
b Fl(2)g Fe(R)434 b Fp(gilt:)921 35561 y Fo(g)48 b Fn(\()p
Fo(x)p Fn(\))368 b(=)h(3)295 b Fl(\001)g Fo(f)142 b Fn(\()p
Fo(x)p Fn(\))295 b Fl(\000)h Fn(2)855 40099 y Fp(W)-108
b(elc)-36 b(he)462 b(der)g(nac)-36 b(hstehenden)461 b(A)-36
b(ussagen)462 b(ist)h(jedenfalls)g(f\374r)g(alle)g Fo(x)419
b Fl(2)f Fe(R)463 b Fp(w)-36 b(ahr?)463 b(Kreuze)921
42091 y(die)433 b(zutre\033ende)f(A)-36 b(ussage)434
b(an.)p 14847 43057 16690 45 v 14847 46275 45 3219 v
15555 44998 a Fo(g)16226 44516 y Fk(0)16536 44998 y Fn(\()p
Fo(x)p Fn(\))369 b(=)g Fo(f)20820 44516 y Fk(0)21130
44998 y Fn(\()p Fo(x)p Fn(\))p 29127 46275 V 31492 46275
V 14847 46320 16690 45 v 14847 49538 45 3219 v 15555
48261 a Fo(g)16226 47779 y Fk(0)16536 48261 y Fn(\()p
Fo(x)p Fn(\))g(=)g Fo(f)20820 47779 y Fk(0)21130 48261
y Fn(\()p Fo(x)p Fn(\))295 b Fl(\000)h Fn(2)p 29127 49538
V 31492 49538 V 14847 49582 16690 45 v 14847 52800 45
3219 v 15555 51523 a Fo(g)16226 51041 y Fk(0)16536 51523
y Fn(\()p Fo(x)p Fn(\))369 b(=)g(3)295 b Fl(\001)h Fo(f)22430
51041 y Fk(0)22740 51523 y Fn(\()p Fo(x)p Fn(\))p 29127
52800 V 1 0 0 TeXcolorrgb 5345 w Fd(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 31492 52800 V 14847
52844 16690 45 v 14847 56063 45 3219 v 15555 54786 a
Fo(g)16226 54304 y Fk(0)16536 54786 y Fn(\()p Fo(x)p
Fn(\))369 b(=)g(3)295 b Fl(\001)h Fo(f)22430 54304 y
Fk(0)22740 54786 y Fn(\()p Fo(x)p Fn(\))f Fl(\000)g Fn(2)p
29127 56063 V 31492 56063 V 14847 56107 16690 45 v 14847
59325 45 3219 v 15555 58048 a Fo(g)16226 57566 y Fk(0)16536
58048 y Fn(\()p Fo(x)p Fn(\))369 b(=)g(3)295 b Fl(\001)h
Fo(f)22430 57566 y Fk(0)22740 58048 y Fn(\()p Fo(x)p
Fn(\))f Fl(\000)g Fn(2)h Fl(\001)f Fo(x)p 29127 59325
V 31492 59325 V 14847 59369 16690 45 v 14847 62587 45
3219 v 15555 61310 a(g)16226 60828 y Fk(0)16536 61310
y Fn(\()p Fo(x)p Fn(\))369 b(=)g Fl(\000)p Fn(2)296 b
Fl(\001)f Fo(f)23463 60828 y Fk(0)23773 61310 y Fn(\()p
Fo(x)p Fn(\))p 29127 62587 V 31492 62587 V 14847 62632
16690 45 v 47992 33016 a Fj(___/1)p 1 0 0 TeXcolorrgb
47998 35008 a Fi(AN)369 b(2.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 66660 54804 45 v 0 TeXcolorgray
24746 81281 a Fp(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fq(AN)1005 b(2.1)e(-)i(11)f(Besc)-60
b(hleunigungsfunktion)998 b(b)60 b(estimmen)1003 b(-)h(O)-60
b(A)1005 b(-)-2331 4515 y(Matura)717 b(2013/14)g(1.)g(Neb)60
b(en)-60 b(termin)p 0 TeXcolorgray -1391 7823 a Fp(11.)p
0 TeXcolorgray 651 w(Der)352 b(W)-108 b(eg)351 b Fo(s)p
Fn(\()p Fo(t)p Fn(\))p Fp(,)g(den)g(ein)h(K)-36 b(\366rp)36
b(er)351 b(in)g(der)g(Zeit)h Fo(t)f Fp(zur\374c)-36 b(klegt,)352
b(wird)f(in)h(einem)f(b)36 b(estimm)-36 b(ten)921 9815
y(Zeitin)g(terv)-72 b(all)434 b(durc)-36 b(h)p 0 TeXcolorgray
0 TeXcolorgray 17009 13467 a Fo(s)p Fn(\()p Fo(t)p Fn(\))368
b(=)20986 12944 y Fc(t)21326 12631 y Fb(3)p 20986 13157
802 45 v 21151 13925 a Fm(6)22215 13467 y Fn(+)294 b(5)i
Fl(\001)f Fo(t)25601 12985 y Fm(2)26422 13467 y Fn(+)g(5)g
Fl(\001)g Fo(t)921 17119 y Fp(b)36 b(esc)-36 b(hrieb)36
b(en)432 b(\()p Fo(s)p Fn(\()p Fo(t)p Fn(\))h Fp(in)g(Metern,)g
Fo(t)h Fp(in)f(Sekunden\))921 19665 y(Gib)475 b(die)h(F)-108
b(unktion)475 b Fo(a)h Fp(an,)g(die)g(die)g(Besc)-36
b(hleunigung)475 b(dieses)h(K)-36 b(\366rp)36 b(ers)476
b(in)g(Abh\344ngigk)-36 b(eit)887 21657 y(v)g(on)434
b(der)f(Zeit)h Fo(t)f Fp(b)36 b(esc)-36 b(hreibt!)921
26194 y Fo(a)p Fn(\()p Fo(t)p Fn(\))368 b(=)p 1 0 0 TeXcolorrgb
433 w Fo(t)295 b Fn(+)g(10)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 7823 a Fj(___/1)p 1 0 0
TeXcolorrgb 47998 9815 a Fi(AN)369 b(2.1)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 30001 54804 45
v -2331 35303 a Fq(AN)828 b(2.1)f(-)h(12)f(Ableitung)e(einer)i(P)-60
b(olynomfunktion)824 b(-)k(L)-179 b(T)826 b(-)i(Ma-)-2331
38325 y(tura)717 b(2013/14)g(1.)g(Neb)60 b(en)-60 b(termin)p
0 TeXcolorgray -1391 41632 a Fp(12.)p 0 TeXcolorgray
651 w(Gegeb)36 b(en)433 b(sind)g(eine)h(reelle)g(P)-36
b(olynomfunktion)434 b Fo(f)576 b Fp(und)432 b(deren)h
(Ableitungsfunktion)h Fo(f)44728 41150 y Fk(0)45038 41632
y Fp(.)921 44178 y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36
b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357
b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36 b(h)g(tigen)921
46170 y(Satzteile)434 b(so,)g(dass)g(eine)f(mathematisc)-36
b(h)434 b(k)-36 b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36
b(tsteh)g(t!)921 49660 y(F)-27 b(\374r)1088 b(die)g(1.)1093
b(Ableitung)1088 b(der)g(F)-108 b(unktion)1088 b Fo(f)1231
b Fp(mit)1088 b Fo(f)142 b Fn(\()p Fo(x)p Fn(\))1484
b(=)p 34856 49660 3150 45 v 38477 49612 a Fp(1)38005
49660 y Fa(\015)p 39599 49660 V 4238 w Fp(gilt:)921 51652
y Fo(f)1704 51170 y Fk(0)2014 51652 y Fn(\()p Fo(x)p
Fn(\))369 b(=)p 5363 51652 V 8984 51604 a Fp(2)8512 51652
y Fa(\015)p 10106 51652 V 3583 w Fp(.)p 0 TeXcolorgray
0 TeXcolorgray 6225 53024 14936 45 v 6225 56108 45 3085
v 13367 54806 a(1)12895 54854 y Fa(\015)p 21115 56108
V 6225 56153 14936 45 v 6225 59412 45 3260 v 6933 58209
a Fn(3)p Fo(x)8322 57727 y Fm(3)9144 58209 y Fl(\000)295
b Fn(4)p Fo(x)11861 57727 y Fm(2)12682 58209 y Fn(+)g(7)p
Fo(x)h Fl(\000)f Fn(3)p 18750 59412 V 19459 58114 a Fd(2)p
21115 59412 V 6225 59456 14936 45 v 6225 62715 45 3260
v 6933 61512 a Fn(6)p Fo(x)8322 61030 y Fm(2)9144 61512
y Fl(\000)g Fn(4)p Fo(x)h Fn(+)e(7)p 18750 62715 V 19459
61418 a Fd(2)p 21115 62715 V 6225 62760 14936 45 v 6225
66019 45 3260 v 6933 64816 a Fn(3)p Fo(x)8322 64334 y
Fm(2)9144 64816 y Fl(\000)h Fn(4)p Fo(x)h Fn(+)e(7)p
18750 66019 V 1 0 0 TeXcolorrgb 19459 64721 a Fd(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 21115
66019 V 6225 66063 14936 45 v 0 TeXcolorgray 0 TeXcolorgray
30427 53024 11578 45 v 30427 56108 45 3085 v 35890 54806
a Fp(2)35418 54854 y Fa(\015)p 41960 56108 V 30427 56153
11578 45 v 30427 59412 45 3260 v 31135 58209 a Fo(x)31874
57727 y Fm(3)32695 58209 y Fl(\000)i Fn(2)p Fo(x)35413
57727 y Fm(2)36234 58209 y Fn(+)f(7)p Fo(x)p 39594 59412
V 40303 58114 a Fd(2)p 41960 59412 V 30427 59456 11578
45 v 30427 62715 45 3260 v 31135 61512 a Fn(6)p Fo(x)h
Fl(\000)f Fn(4)p 39594 62715 V 1 0 0 TeXcolorrgb 40303
61418 a Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 41960 62715 V 30427 62760 11578 45 v 30427
66019 45 3260 v 31135 64816 a Fn(6)p Fo(x)32524 64334
y Fm(2)33346 64816 y Fl(\000)g Fn(4)p 39594 66019 V 40303
64721 a Fd(2)p 41960 66019 V 30427 66063 11578 45 v 47992
41632 a Fj(___/1)p 1 0 0 TeXcolorrgb 47998 43624 a Fi(AN)369
b(2.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 70091 54804 45 v 0 TeXcolorgray 24746 81281 a Fp(6)p
0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fq(AN)720 b(2.1)f(-)h(13)f(Tiefe)f(eines)h
(Gerinnes)f(-)i(O)-60 b(A)719 b(-)h(Matura)f(2016/17)h(-)-2331
4622 y(Haupttermin)p 0 TeXcolorgray -1391 7929 a Fp(13.)p
0 TeXcolorgray 651 w(Zur)346 b(V)-108 b(orb)36 b(eugung)346
b(v)-36 b(or)348 b(Ho)36 b(c)-36 b(h)g(w)g(\344ssern)347
b(wurde)f(in)h(einer)g(Stadt)f(ein)h(Gerinne)f(\(W)-108
b(asserlauf)36 b(\))921 9921 y(angelegt.)921 14458 y(Die)381
b(F)-108 b(unktion)380 b Fo(f)523 b Fp(b)36 b(esc)-36
b(hreibt)380 b(die)g(W)-108 b(assertiefe)382 b(dieses)f(Gerinnes)e(b)36
b(ei)381 b(einer)g(Ho)36 b(c)-36 b(h)g(w)g(asser-)921
16450 y(en)g(t)g(wic)g(klung)456 b(in)f(Abh\344ngigk)-36
b(eit)457 b(v)-36 b(on)456 b(der)f(Zeit)h Fo(t)f Fp(an)h(einer)f(b)36
b(estimm)-36 b(ten)455 b(Messstelle)h(f\374r)921 18442
y(das)434 b(Zeitin)-36 b(terv)-72 b(all)434 b Fn([)8
b(0;)221 b(2])p Fp(.)921 22979 y(Die)422 b(Gleic)-36
b(h)g(ung)421 b(der)g(F)-108 b(unktion)421 b Fo(f)564
b Fp(lautet)421 b Fo(f)142 b Fn(\()p Fo(t)p Fn(\))369
b(=)f Fo(t)26538 22497 y Fm(3)27335 22979 y Fn(+)270
b(6)h Fl(\001)g Fo(t)30648 22497 y Fm(2)31445 22979 y
Fn(+)f(12)i Fl(\001)f Fo(t)f Fn(+)h(8)422 b Fp(mit)f
Fo(t)369 b Fl(2)g Fn([)8 b(0;)221 b(2])p Fp(.)921 27517
y(Dab)36 b(ei)434 b(wird)g Fo(f)142 b Fn(\()p Fo(t)p
Fn(\))433 b Fp(in)g(dm)g(und)g Fo(t)g Fp(in)h(T)-108
b(agen)433 b(gemessen.)921 32054 y(Gib)514 b(eine)h(Gleic)-36
b(h)g(ung)514 b(der)h(F)-108 b(unktion)514 b Fo(g)562
b Fp(an,)516 b(die)e(die)h(momen)-36 b(tane)515 b(\304nderungsrate)f
(der)855 34046 y(W)-108 b(assertiefe)553 b(des)e(Gerinnes)h(\(in)f(dm)h
(pro)g(T)-108 b(ag\))552 b(in)g(Abh\344ngigk)-36 b(eit)553
b(v)-36 b(on)553 b(der)e(Zeit)h Fo(t)g Fp(b)36 b(e-)921
36038 y(sc)-36 b(hreibt!)921 40575 y Fo(g)48 b Fn(\()p
Fo(t)p Fn(\))368 b(=)p 1 0 0 TeXcolorrgb 433 w(3)295
b Fl(\001)h Fo(t)6967 40093 y Fm(2)7787 40575 y Fn(+)f(12)h
Fl(\001)f Fo(t)g Fn(+)g(12)921 43120 y Fp(o)36 b(der:)434
b Fo(g)48 b Fn(\()p Fo(t)p Fn(\))368 b(=)g Fo(f)8893
42638 y Fk(0)9204 43120 y Fn(\()p Fo(t)p Fn(\))p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7929
a Fj(___/1)p 1 0 0 TeXcolorrgb 47998 9921 a Fi(AN)h(2.1)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
46928 54804 45 v 0 TeXcolorgray 24746 81281 a Fp(7)p
0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fq(AN)1068 b(2.1)f(-)h(14)g(Sin)-60
b(usfunktion)1064 b(und)i(Cosin)-60 b(usfunktion)1064
b(-)k(MC)g(-)-2331 4515 y(Matura)717 b(NT)h(1)f(16/17)p
0 TeXcolorgray -1391 7823 a Fp(14.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)332 b(sind)h(die)g(F)-108 b(unktionen)332
b Fo(f)475 b Fp(mit)333 b Fo(f)142 b Fn(\()p Fo(x)p Fn(\))368
b(=)h(sin)6 b(\()p Fo(a)90 b Fl(\001)g Fo(x)p Fn(\))332
b Fp(und)g Fo(g)380 b Fp(mit)333 b Fo(g)48 b Fn(\()p
Fo(x)p Fn(\))368 b(=)h Fo(a)90 b Fl(\001)g Fn(cos\()p
Fo(a)g Fl(\001)g Fo(x)p Fn(\))921 9815 y Fp(mit)434 b
Fo(a)368 b Fl(2)h Fe(R)p Fp(.)855 12360 y(W)-108 b(elc)-36
b(he)509 b(Bezieh)-36 b(ung)509 b(b)36 b(esteh)-36 b(t)508
b(zwisc)-36 b(hen)510 b(den)e(F)-108 b(unktionen)509
b Fo(f)651 b Fp(und)508 b Fo(g)557 b Fp(und)508 b(deren)h(Ablei-)921
14352 y(tungsfunktionen?)433 b(Kreuze)g(diejenige)i(Gleic)-36
b(h)g(ung)432 b(an,)i(die)g(f\374r)f(alle)i Fo(a)369
b Fl(2)f Fe(R)434 b Fp(gilt!)p 16972 15319 12440 45 v
16972 18537 45 3219 v 17681 17260 a Fo(a)295 b Fl(\001)g
Fo(f)20106 16778 y Fk(0)20416 17260 y Fn(\()p Fo(x)p
Fn(\))369 b(=)g Fo(g)48 b Fn(\()p Fo(x)p Fn(\))p 27002
18537 V 29367 18537 V 16972 18581 12440 45 v 16972 21799
45 3219 v 17681 20522 a Fo(g)18352 20040 y Fk(0)18662
20522 y Fn(\()p Fo(x)p Fn(\))368 b(=)h Fo(f)142 b Fn(\()p
Fo(x)p Fn(\))p 27002 21799 V 29367 21799 V 16972 21843
12440 45 v 16972 25062 45 3219 v 17681 23785 a Fo(a)295
b Fl(\001)g Fo(g)48 b Fn(\()p Fo(x)p Fn(\))368 b(=)h
Fo(f)24277 23303 y Fk(0)24587 23785 y Fn(\()p Fo(x)p
Fn(\))p 27002 25062 V 29367 25062 V 16972 25106 12440
45 v 16972 28324 45 3219 v 17681 27047 a Fo(f)142 b Fn(\()p
Fo(x)p Fn(\))368 b(=)h Fo(a)295 b Fl(\001)g Fo(g)24277
26565 y Fk(0)24587 27047 y Fn(\()p Fo(x)p Fn(\))p 27002
28324 V 29367 28324 V 16972 28368 12440 45 v 16972 31586
45 3219 v 17681 30309 a Fo(f)18464 29827 y Fk(0)18774
30309 y Fn(\()p Fo(x)p Fn(\))369 b(=)g Fo(g)48 b Fn(\()p
Fo(x)p Fn(\))p 27002 31586 V 1 0 0 TeXcolorrgb 3013 w
Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
29367 31586 V 16972 31631 12440 45 v 16972 34849 45 3219
v 17681 33572 a Fo(g)18352 33090 y Fk(0)18662 33572 y
Fn(\()p Fo(x)p Fn(\))368 b(=)h Fo(a)295 b Fl(\001)g Fo(f)142
b Fn(\()p Fo(x)p Fn(\))p 27002 34849 V 29367 34849 V
16972 34893 12440 45 v 47992 7823 a Fj(___/1)p 1 0 0
TeXcolorrgb 47998 9815 a Fi(AN)369 b(2.1)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 38921 54804 45
v 0 TeXcolorgray 24746 81281 a Fp(8)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
