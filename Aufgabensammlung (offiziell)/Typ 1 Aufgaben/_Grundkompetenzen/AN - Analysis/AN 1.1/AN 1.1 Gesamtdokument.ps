%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/AN 1.1/AN 1.1 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:34:48 2017
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular TeX-feymr10
%%+ LMMathSymbols10-Regular LMMathItalic12-Regular LMRoman10-Regular
%%+ LMRoman8-Regular LMMathSymbols8-Regular wasy10 LMRoman12-Italic
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/AN 1.1/AN 1.1 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0834
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMRoman12-Italic
%!PS-AdobeFont-1.0: LMRoman12-Italic 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Italic known{/LMRoman12-Italic findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Italic)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-449 -289 1358 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD115081973393AA2048ECC
1B38C1B45AAF909E1D0187A0DC16F505BC42B5C6AC12168C73DFF1878FBDDFF9
5CE859CBF7A88E342F565C04C06D9DEE65C66C505D6B44F028A7659B7B18EBC9
AF12D18FB2C70E54D7C524923386E488A5781001B47276F3CCB8173466544141
F99FD85B6BCEAD8A7E1294BA184AC78C372F2F08D8C26E0D96C407EA8F1F5A28
509753BFA423684568D7C86E4655ED88226911F0DBC9B8DF79A35791C4A85AC3
E8EB007E7AA56FA62680DBEEF9E2A976C9F5A863FFD9334B04B4E297D672402F
7CDD0A80AF1403FCC0BF0C5B8BC58BA6669717265C300F0E5EC871A0896CF482
691E8AC48D1CF9C06AF63CD3C7B0AD16E4A0EF76559A251DC81E06549C9903F4
E755C2E6BAFEF9F3FCE61B6426C9C0AF1196BD504C1C2D8C735C0B1E6267C57E
93AA51E6414CE90A92DAC96F8694EA081AABCFCECB0665CBA6B56524CD5CCEB2
B5DA0717E989F874329D4C73CE852FAB8655DC1B57FCD0742B35D37C3377912E
A7FFBFFA9977C6B45233E203C745C84ACEAB8BEEC1A8C5E2B5FAD52657395DCD
3471FAD4C2A70F0F31C29BFBE131D671AA20209028882857976D4515E730CB30
4A404BE6BB5947361A0664A8BF8B33C6456686A1A4F59FA091122433AD0EDA97
E83CD285BF2D96805461215F4A5CCA6B378B9C2B93CB71E36835A8AC3FE2601C
D2B1370B82A4668FF8C1FDD66C5B526E0890BF226625457059659ED51CAB74F5
5FA7945797237B1656BA0B7B7F533F360894FAFD189B50A1CEC76E8E8974788C
239B91EBE8AEF647688A1CA66C7D5D7C0D055BD5DD5A0BA92842730DFD09DE92
3358806250590FF35564FF90E9DF85FB4B082B7806E3E941AFFA6336D4F9BDAF
124193F6E8396008E5BD04F19BB4EE30FD4A80DBE4DF9EEEADCC816B3C84FE39
07EB828519DE800A9C2CBAAE3E98D910EC76A44AB8AFD6B95D1B72B8B21490FF
528777AD3BAB19ADC5105684FD87B37B67B29AA6628DE75A69A3F38EDF33CC72
BA1C6A089FADA9A92F60CC2FD61EADF93891FC191896A5EAD415224F7E256A4E
A02D876FB0B68E723AFD17D0DF08550F90FEF1751E7E403F5F111E5712BF3AB2
51EB9FD654EF748846E38E374DE01977C142E0ED10318333382EA7FD01EB2A59
D9EE46F33362E4C2487FBD9CD96837286EBB53EFC8AF3FC1FFD3D1EF05061D80
B5E3C87AC8A76D16591A3380A49D57886D7F7BAD9BBD84F73FA38EAC51CFBB62
DEF89CE32FC2649522985C27941C58E4F50B9C2CB497E519444446F0E2F2A2CF
F9963C615AAD69907EA4205A0BC3435596988D1C67406AD33743D1E984DE8C3D
F484971F00990B88E1931C59D868369DB620A30ECD347E1717AA5D4CB03B26C4
A34300BFEE6E72FD1AC6CF819110E6FEDED3E62A92EF184C7B979C4E20450603
8E76EC13C6264E69B55D1971CD164A032BAC23C2866945E46981F9406B6E4F61
160966AA3E2B029EA8A7323F271A6643341F7720B16123685CC289FC0EFC552C
5FC511935D0402CEA398F99BBC58873131733D7FFFE2E60835E8E570EE206034
708F56EAB17C698F2052A9C6410435FF3D114F67EACD436BEF9EBFF0D3BDE9B4
FB0A540610BDB59FC4EFF8586DAA59BD102BAAFEAF854C1B48B036052A3D727C
050B93AC55B87A0E337A5DA9985EF7DBF5E1072D4D4BCADF078CDF0EDB3A2C78
66C977678C571CCC9FFFBCC76D0895C7BCA510FE3F3DA02EC5384C4E5058FECC
591ACA24662FF0B6783E357BF2DB29034B3007E7EE680C5EBF4434464C47F8DF
4DB69281479EF18DA2237CD4F3A26C1458B3F69670B72A5D4C1CD5D8613BBE22
737F3AB7AA70C37462134CBA469EFF52B99E6C1F4DE95E59DCF7E38BF93A153B
0082245B574C006312B1A0A1DCE0E4AA6C193AEA970F45D01EFCFBBD18095B62
AD860BE59DD9C26FA72639FB421C3457FDC09D3ADD6AE6CC86E8B493367C1BAB
3BC0C3405741CAD56CC6A606BF71A39EF59C9E976C5F562F31C628021C652ACF
A5745D606BBE742DCDC69705BE94A449C5EB8D42E88443AFB83F96DECD5E0B32
C5EA329CB342002792FADC15213545D7EB212CD29841E176122E3D1E147F1276
12C7EF5F32A8A3C6A4E7C3BC8F04EF6C58A10CF8D6B0D502750247BB25006F46
6250647F37A36A4911B97E5F975D12379864A4CC14D3103C4994E6CA97B1D789
3DF52D57BD6C1A6B744024CFC65AAF32058BE46AD9FA0D3E24F2FDCF57193CCA
AA36A4B774280AE1D3230BB98D2190912BBD038F21047D0019EC24C1496E1DE7
71B3FFD092BB48934353CA645CF41F7B2EDCE9FF9F84EEAD17B366D678E61C61
76FEC09C94A3784C817AB37CB52D23205066E2D80EF7C7866BAFF6B23D88EB36
BC2E699A11EC1AE28E0E6F2B383713FFE2B13A67B51AE8B12E5BFEFDE5D92BE7
BC5EC381B6B05335F5E9BDD8C3A4A82C2E598302E5493842F0A080F6AF3A9121
D8EF4BCFCC80EC71F78908BDA227422F8A56C95877234F9FD6BB97B3AB5C0F27
DBD4DD8DC2FB1BFE35F67D7A5B693EFE15A466950C44AE2D4F9D99F833D72AE0
88F54DC0BDD441EA5EB5A1FB810A2926A27D510E69512B9C70C2434513CE55BA
9EEA1BEA15C5C24ED9F31705A32503BE7225981770457FD937871241EF7A195D
4747C9FFDD581537610B95B188999EB5F2F53D263ADE076A5DDB61CB18C2C4F9
1CB227C6E44CEC46B305D67E5C253CDB908754242EC4D9CF4E75722C9F37E4C9
B4E010E3CA56EAA8868DB6F226C6E56BA3356F66D123C08884E9D27DC1FFFC23
D36AE111FFA48845C0A7FF2E0CC929CDF9447D83A7167F3FF009AF8CAC686052
7DBD2B62750C163DCCC99F21237117AD4B234438CDCA4A7E25421A64637FC8F0
AF83863CDCACA331175F46778C3202D3D4F36FEC1AB9B1973A7DD95352BF1532
EB87DC7346FD25DA53A3BBB299CFBC46A80CD1D1820D329A68E9056D5FA94871
56FED518164901F83DF3BAA6A0ED3E1145BF178CBD4637DA34744818D2364CC6
932DF0E2362CCDF28E5A9D054A1B2BED399E780DB66D502014608F6D49CC34F4
A6767064EA4E5F469E48F5AD2885076AFE1635CD9ACC3C44B5755DD9071DAE1E
651ED94B4CDB4FAAA1AE95682AB3BD762EB1D2F722477ED3C9E8221F88E54918
1454004F18A348FDA4446E35C019B5DEA938B851ACF798EB6086D99D6AD77CA6
4AA2EDC679AF04FE139D653820FB3EEA998267FB51CF42EEAD7BB5AFA236AB35
C6DCBFA1165F47F8F52B0787EB4B70B9C8A6D5E61B5B11D5B16C646BFD7EA160
518EC3FAA454407E1B8A7520C2C08F8CE3CEDE80F4C4C0838B8D797205EDA240
63103B89A932C946455256DE821247F764D8435543A6A69628B40736B1AAFBAD
A2DE6F39CD599135BBDD2D6A67F05C3FD7CF64D8F619AE619F5CF7C0B1DE078D
A0D6C0E48F1D065844515CC08B55C960DAC383D2278C7302A34A4F508E05E8C9
08C46B93419B93876B1AA19E70A1D92D48565DB08347E934C223F5A1504F2CB4
5644E610A3C02D768058BA2B97ED67821A10F50F406270CF873290E99A3BD506
A8578376F7816D6F4CD48A5197F98F35341EA3A752FBF80C009DA521C0399993
9FFC6CC50503BB871565797EC537E267EBBD1DDB3F3EDC5FA135479FC9FA2409
826AABDB6DEB72774923AC44C82D135453BD56678689754F0DF84269D869E5D4
0EB344E5D2C11E525F08CF4752ED284A1719539A584A375CC8B9C4FDF77D3016
80CB83F3BAE0A70B1DBD9977A5F4C77183F4CF9B18D3648CEBFBE395E68FC891
329882A2639575674B2A47C068AB093F74813A6BAA4F7CF2CC57A84CFBA77156
ECFCF83454E56C56A2CB0297E6C99E604FFF638C9DB5F9EBE90F1628BFF1109D
A71D85A35F40871DD6EDDB2FE95037EB3E37FC4FCE8F9492E884E432F5332C61
62371112A5529FB7CDE3A1A0DB98D05D8301FEC82EBCDC7D7A02A6CC5310ECA2
4348652BF62276DFED27FA18C1B3075EDD207C35BC17DA8E255C9216E000486D
0F3FDAD463346259844571401A131E488A004961B9D77108922CB750BE2E146E
CBDD16A1584F3EA2AB3D9A37849E283446B177BFFBD9B94C2C008FF74A20138B
EB2D0CD90BB842436D3B6DB6ED212E9BFFEDA7D3958C62CD9A5A77E01F15B23E
59C215E93A3F5018417C37FFED36B01A47F0153A926B6C6555E5389B6B68AD39
1C6A3F722B2F6C2CCB02A2A87D3D4B8954D01DDC88746908EDB625B9FC645E4B
F39E04FAEE6653798941795B253A86C73164C0B29E831F83AD94729DE9FEDEFD
6748EABD96D9FEC55051D7462136CC3306C5A6A7F2921367D2498DA3D214AE27
5931A442EE4CA0E11E8CC506066BDFE472196A930F7E527E0DF66BF48E8925C6
55C7B21A81B9FB4493377D6B952CE51F20739BC4C5106C4527DE148B31E0F553
FE1D46181A8FFFC3C6838AC1204F34A6A16569177D6B1C7CE23DA29D37E9CD14
A077B05AC1D894BDEC87BB96D4ECB175F244176BFD7625B80223C231FE14896C
C19E2DB362DE5117E6B39EC952DF96091851A33211F931022D46BB1341EE9019
40795D0F15DE5A23420BC6DB59314AE0FB32814C0BAC128B7D4D61C2AA87093F
0D9188350856B1FF3C410855F5593D1424A27B7482D2EF601673E5E859A11D4C
8C48D36D325BD229AC91336E40475264897D439788CDDCAEADEDEAE8FD8460B5
BB21912F2881FA51334A720C96C7B9CA647E44F7C808B103D657353EB568DBB2
2BA54AA1B3BE277E804C6BA17F299172AC3A4A3FC57E0F08DEF0F19151DEB13B
BE9608B43085D30037728FA95D99D376580FE5BFE1A7FCCE35DAA893E5CB7EAF
FF53372A5AA48B228CF68EE0032B1968EB88119A375D4FBDA133B5C6494E5E3B
14FA09EF6982B1220A197516A442C30D604833511E78B3DF0FF25780A142C31E
0E387E163212BD3509108B61ED33B18A73A04B5F96F94EB6DF60F5B1DEBF5A23
0721E51750128367A0AA72945C949102B7782BAB3FB8BDCE2FE2BE9B7DC14AC2
FE27CC1195254992045C0A486BB5871AD692296D2D69F6CF1E9FE72EB745E6D3
6223AB972791081FE59397EF9D69415C6994D48E7284386F6082C2362E4CCF3E
66ECC33C744624C14BF0E29C015F68BEA5EEA4CBD597C0C8AB77CF9CCD9105AA
6824BD46D237D5AA012269135E586D85A70DDE32B3521787F7A76DD68F7E5D64
0C87FFA05C0EA432E2C0E641ECC847467858898AD528633F477B739EAAF078FA
56B039D2D408B56CE03452944AEF2FCBF65E4BF33D7C43C7EFE3A8D63D2276C4
236933CA08C51C6CFF8FADA08AEA67970A39F150893C460EDABD875702C05640
E905826A2397BA520E686CAE8E9320DEF5363899F97A900FDF659BC38E6DA6E5
87C23E70241F9C323674E061FD55AB355013374B68132A30576D4DBD04EAC244
CAD6F9B9B87060EF0AC15FAD60D0F0903E76F0FA3A2CCFA0D4F8AF213E0A0CBB
C22A3CDE0856BD8640D2B9B1844E03A53BAE53445277C899FE86E54B8BDB1490
AC76FF84E0DB1B76F31FE8955F98B6EB4F83AD59AAFFCECC01B36F97FF9682F6
87343EF61149DC3BF556A632D10F0E070A5820B7C261CCEA2B02606837B57B4F
38BF32513D5EA4E27D946387E6DF677C977AB426EB6CF686087DE12B3D6080DB
90BA9AC4B9EAD70DAEAA43C5D1F96A5ADDE484DD63BA31F96DBD7DAFDE8ACA84
4DD34A2EC1F5C5C777FAEF9AFE2D1C610195FA32E61F5D12E43E43F6E03946F6
1E9135C70CD0214CF04A4EC5AD120D492F25CD6E1E8C9AD62B49EF8453EABC20
64828A2254F5568A8D9E0D617268F63AF0978DDF59311FBD5C2A43529A894801
EF317BFA201302382872B3C31E86FACB377A74258F2A8CFD319BCEF75CA4EB31
7A628F42F7EFAF5804FF385897835258981A89D3EA8E8A31F4257A299412A33A
F840C8C401103177786D6F091A1D5C37DC89CF313CD15986DBC4E6E37EFD447C
37DB455D2F083DEA179DA4FBC32DC81B92E6BA65DBA894F62D4F977DFF168ADA
E8A1716BC8DE0F27EF5A0FA16510FB9F6D14FC983E99D27F9136DDC3D925B85B
FD07F9BCA9D7C412F535755FFA6B31BCEE9A6DFAE4C9D1BB679CBABE4996D782
9CA57157A0C2191D3458BF4870481D8FA433728039209E7FDD13ADBB921A373C
0AB0A894F08D7774102350E15460EB209E5D38A3B75B9BD0784EFA1A9BD09ABC
04956B86F9B7063708EDDDF2EC93227746654ED73ED27B057EDD4280D406B542
4157DB421D427E28CA6143F63B988D41D1A114387952ED3E5141FC64FF28F1CA
6D4F1BEA1C640181908253DADD5978A9A97AAFF053914E587B8B95AFE807D313
E29E3682228BE7F075CE96A53614ADDA732F0927DAABC3A25C1C9C1670B8A568
F69091BF0FBC9AD619AF7C3147A13DAD7E3D454A365D1D4026A3816DFCC1572C
DAA62B2C802CEE88F7A612351F3EFAD2EA53AB06C46134B09B4E6A2D11B839AC
94252668AEA04F23329A968E3863DBE6D8B7D149ADB2FD8E312D719C507DDA1B
F0CD988B644482DC3BD70EB627D06BB45DA78C776FB03861582989B74C10FB25
DA53070C2BBB4411D9608F4FF0B2E1718A94E2CC16BD11D4922C16189C1C1BF9
047BB71EE34422845BA572D3FE1289FBB4C85DDF72F5F6B01E30B2D9F8855EF7
EF3B47566788D4D5312707E5F2A9026BF35852310360089F9702E3D942063E0A
67AF5249EEF89C2440409983598FBA5FE616E33EA2F454625BE4B1D174ACB337
D7CACF97B0D86FF2BC399BEAA86FF6D34DCF21BCB6C956875A422493C3E2B518
7EA654BAB542981F079D7ACC6B259851385FBEEE9F0B4F127A8D2BB1E634AAB5
83EAC6CA31CE3807506FF35794D027CE342A66A4C27C0A42420926182486AFA6
6185016F9E506375D1E089C676A57D0CCACAE3F78F40E9A45653BBAF2A5DCA56
0DB5BC0FF7FB3C608FF37988C7DE6A41FB1020DBBCC762F2BC9C4ECF3575A413
0B81E97C2A9BC215A2E2A34BEB5AC13AA7B7FA82E8E15F366CE98A40838258D4
52E73137494450BFD0B62B8429F77FB1EA332C7A1CA8B004C73183C5B5577DE3
2847B3CE5B6F1B549B9AEBB0B61DADB95DD6C402BE50CB662CB93907D38FF8EE
B225EB90EFE1889FAC418AA997C16C2988EF7E0148A1DF74DA038B947335DB91
73F65836444E4A1438A01FA0938E85E63961570ABCE4CAECA175260290D8B0FB
A6DE7DDD436420D727A083F6EC43320D24867624620D636BD5D74B42B03889E2
D09ED2F15D083CEB170CBA8F1D210044B6EE67818B6BD35FA4757B0CFBF1A087
1139A66BF3E0988D81FD93FBAF6EFD1C4BC76E61923EB04DB1DFA426E752C197
FB8DE8D169E29C4438FACBBE1896E37B202796133E24623B46B70586AA570C64
F43DC2BBE8443DB5A58ED8C802AEBECE49095FD94546064A2865BADC624CE6ED
A45FCB1CCC3ED7711F21F51EDB19091E7D74B3AC20200A8B71016E3F1A4FA300
4CE59FDE33F175DF5124D145076FDAAE3F589B4E3B13F776093E09B517BB419D
BC49CCEB522EC7754F31DB5756461350D5FE393110D0F31574EA58FCCDCD36CE
E7B510C14C8B1F6CE36819D08E37E91803BE7225981770457878906C94394D91
C7EC0AA568F7684A6B37CCE936BB41215963C34807AE4903D01C0D1793376FDD
8FA4BEF581D81248CFA611EBD038DE83EEDBA1F2C2B49026FF4C2BD0E38754E6
EAF8020E2A4B072FD6F9DCD48DB03DDFC37B6DEE0726292D744A88E3C72ADA84
C88545D16A7E9A3ABED765CF54C08D8B4939F7A3D2BBE4E1AAEAC7973E75F06B
DF6C2AA60CDFD1328BE57A77C31646BD168C1FAA5E180CAF95A4D42F25292081
FB60932638DE190F01064609F49F73121450490158098C9B50783AF12CE3933E
509AD637316FE19495581736B0FEE0F522702E81A8668CE39E3F5AAE87122DC4
DF7738F78702789C89D8733DCF9F30E964DF6C072EF4701514195A43A81826D8
B89CC523118E86C15426E4FA49EB9622E45801FF0A29945D6E004A9D99F833D7
2AE088F54DC0BDD441EA5EB5A1FB8670796B270128639A86DC6412958577C144
591984D9EB784090C81C890D0E98FD06C7AA912A719A5C01D1DB78483C99F7EB
4E1D1C5ECFA2D925E13BD7D67620B5D4DD456453124D7433EEB44C724ED69C86
97D06A5246DF0AE52856547B5920A5861DBBAE90B0137906D08B278CB9DF6AAD
544451DED49EC8F5DAACAB636082E7EFA02DCD63C03FEFA3D9E13FD38FAE1FD8
69366B61D37AD7EE87321E9B9B7DF58324AE6E3B639DDE323A6EEAFEA964B553
AA0AD4F22E8B3A5E0490DC2123B0A51F0F464405D89C0A09300879A114B70CB4
073D6CE990C326331F40C0FA6B5885F0B53FB07AB5935CB1B851B96CD7BF88F9
A67F02D5BFFD8203AAA65D8116654C76E72A1E10C8A192C2003A5D2100C65682
7B3B49A5F46A5434F1B92F57A68821525B2F86AE51839B3849FD996906443DAE
A54DEA0331A5FDF6371DF5461B6961210F26EB4AB32638AFE0FFB530D4E1C6AB
CD3A1F268DE5E0DFD60951C1450A6661F74A1032BDC79BF105F415563EDB5100
D3409F99A1ECAB7E8E690002AD3BE5E3FB620CE990D9A478B44646D07FE3BAAF
B96E88ADBA548B75863B57B59974A43881D35AC87616C0C26855C6EC0FF80645
0B5A5009B2665279C0670FB3550E5683AB56AA9F0EF60D11E54B7BA0471056B0
21C03FB2A2D227D39CD70F36330A4787B95D7A39E3BD486EAC834805A909FCC5
FF841305A8927C1BDC558808B1AADE968049989A572AA52EFF3D6DBAB167D3D5
F8C9E32673F71909551D96A01FE8C83D61D4BFB90D4C85EE83847C478012FDDE
C16E0E7854CB47132679FBABF1DF31D16F8FA295C8371583DB72C718224D07AF
1DDC3522807E1C3D9F3C5F9AE014197003B47D4CF767A93CB6A564CFCD3F5AE2
3C97CFD43428BBC79AC6BB6A8847704A656E4E97A370981C24AA31381CADB34D
D78B80AE92CFBF71741A16223D3039B3E54272A5C0E766FEC02014DE27FB5365
8648A7A378ED5B4B41FC79ECCB350466A44A8959850AA8A118E8249996EDFB39
C6E76D2A51B83AEB1553E6AFD525D156D409C3D4E8A89EACAC4D49CDB3D0670B
39E0BC396DC5F91B7D2C30CB1526DD07C87DC850B32DBCD0D7B4935D36861BBD
AB10C7FDC05B7EA423463C371B102E3C480DC46526F008FE4C217B2838E1E8A1
9D917B0E72F44FF631C3CAA2F7BD7060450426DB16BC51C8D99C420CF100D817
311CB62CAFBD00A9A931861CD9A7048BE25A71779F21527F91F5F20D556E956F
19270A4455D81D673EA0017E7D9ACB7F611965D4FD91DD5FB544D1A7D023C347
C178DDFE423A00CED68405A82F15039F0A99E6FC20C91C002D2098D94298EEBD
3E93E848FDEB52363762FD7C87E54B4F73CF066C2B9C5DF63FDC0ABB95E0C51F
5257648FEB205E020B27F5307E54B6F4A4858CEF9F21FDE883739B8D463BA4DE
B76CE1B7C8521A9E945BAB12083296DCE69D9F66CCE6B475E5278A86AC2AE0DE
347C058C7D70467A760023DE6A20182AD3520778E6FD9AF26A3D18D9E2393A43
05F3FE14E3FEAC2D18913A9445749BE14436D6637EE76BB7E7E84EE53910AFBC
4F7847A907AADA2CF8DCAE32B40799961D4076FF5637BC82AFD658B4DB12B5F2
C7A79E31D12B2F394BCF99217F88E53626358C95735248E06086D041BFFB9514
E5B8248FB18D840048F96BD4AF2EAAA6B47C55626F5C6488D480EC86E1217FAC
6ABF3636ED201011F687AA6A1FA145D82FF43C12D7E0B65E32A8EEA690C33C85
0A8BC6988EC78C99CF50A0ECBD1743751B2A5746D139A591AA3CD97D659AA659
89A7AA9AC8B6930AE574DDD32FF4BD7C970E40898A125A27BAF0BFB58CB89C44
4F4564C1ECBC4CA4FFEA239B58976F94434C1FB78334D81374C359FC48134106
B3DAC7E417094DA35293F6250F7959BA7FE2053C1C75BF1A66D0126713294E13
C1A4571B8A9E6D98EE5C232A24B7E24EE88FB207ACB013947A866A8ACE63BB83
01720C67F95A61987000720CC9DCA77D93EBC04B795D8258F32ECB811357F69C
CACACF897A7A1B155C720BFFC17C71669DCA948F18341306C3422922BCF391BE
9C97E410AFBC99CE983EA462DBC29DFBA80E389786A0EFB319B24F48600A1445
02EC6C0E97C248374359C89C36A55908223056560C55438755D243C5F055EB9D
6BC53305E13CE5740DEC775C471D2C56C824C06DF0A81A5D74DC4A5B92E22567
DDC967BF400AF513EDEDEBF50C61D9A387F167E51859F4A455482B979DBDE135
44B856AD10C3E3923FF7CA111DCEF22BFDAAE0A7FA0303A0269B0BF13AB750D9
0F2CC97C981D1FC2366FBCD0FC05F53B4C43820E6246849EDF70EF99B1C95A29
6106DE15CF1B4D71AC6ADC7C4415C9BCE7795FA44C3BFEBFD041FFFB50AB636C
FFCF2B7B6B3CE509264EE2FF75C9CE88D17D4C306BD10D7C5500A05DBAA0C671
065C069B7A80127C6837B312D82B3A36DA8CB5E590F9BBDE89001BB2008E75C5
76BC52FACF258072F733DA1AECC72715A99013EA30A2A88EDC8F82FDECC66F79
73DB6138193ABB280D5A40E79B4EA5AB5B5B58046899C9C5993E7302C870678D
EBEB00F7AE7941F78325CA190CBB2659BCC601BA85B214C1F8424F4718B5DD3F
742689B36830AA72D8C783F4104E3836FA9E6A3552760C1998BB54FE1DE1ECB5
1495B56F62FE2725A0A86C028FAB0F20F238C85528B8B7946ED38F8C44FC3311
F94CFD6BA9FBE309D08FC9D7497ADCB1BCCC2C7D61E01C7084E3A0161D14E6B6
923D472CB36156F92725A0A86C028FAB0F20F238C85528B8B7946ED380AAA8C3
39C5AAB51AB884232E9D200A40A68E4799E43B6B398D040A0E52A2A296B06FF3
313FE6C8A51F12C44923925621AC4EE580A496B1062FDB354D0361A30548CBCF
91DB3F7B7E87BD9D405F2E29BF660674457A70F9D1CF98C6AA76128546E89E3B
58D4619B06D861DE5E8ABF6B54377BE90C9252DBB5A17FAAF1500ADF49F8C8B6
C1A66E1CF494A7D20A98352ACB6AAF0217B4FA27784635B9B59B134F32B96597
E32D4268F034411E85D8D9A9DFE581739F38141B8B48F0E3635B5686764B5DD9
34BF229A852C8EA274290FCD3E6B6B8F4B86C231B10100D1BAA6B29F192CEAAA
9951CC6235CEB85520A70B252F935F7CDFB69A1F8A67E100D3A7331B63B17870
9E55EDCFAFBB55CEEFF1CA96F54CDF762254FFF6C2929FCB76A235705EC08804
9C1F1B0E75509E3A28C63E8E38D62A92755377D1274604BE61099F5FA4EF83D3
DD20FF35ABD92E13ADF85FA7B62AFD43478EC186834F549D3C3FF963013711AB
72B76C72F09F6D5B4B8ECE515BE82B5BE1AD90B13720D22930123109AD216C5B
50B31650CB2FE423749D1BA94D82FDE8602305919D3A29E20B6B00AB8DD9C67F
5C66C86976899315AA3469F4B4DC168A19486FB4C1D31E05643BE95D946082D3
0452346F282DCEB0D5BF219807F397A19BFFBA42C162329D74455FF83DEA9E86
62C77024836D8865ABF3D4DAFF1FCB2FB7F9F4B2A47C512F51339FAD5776CBFA
CD7D3A421B65E01EFA9E51AD12185C82FA0BBD27CC9FF01C6B6F27C39FEB34D9
64638590E25AA60E8F85B838B4ACB8A07828702857EDDDC1030D19928F2E2604
34DBE72F4AEE3AAB63B382FDD2568A537E7296E0EE3EE6FAA7C09C3F62414281
BCB53CA46A8161D536C2D0011A2CDF452F248C706CF3A2329934386CBBB90821
443AA81CBCFC31881D85C822D90730ABBDDC0F2CF53AC189CA31649DABC07FAB
D5959EB539EA679132F12265160BEB32E1DAEFB89B829BEDB5E3DD60F5433EE1
E6728C071FC11F49017FF1B1FBA0F5D7D4B35D4E24AC4A11F6D76801BE7C396F
D7264F7CA0638BC2ABA3F9ECDAB0F6BAFE6B54E58645E1F5AC047A8204F464CF
29A60BA4DEAE3FFD7726AA903C3D3F360ABEFB007D46720081C498018149DBA5
84E4FBE6EDDFA3B58A343725C742A8ADB8E2490B8E263CC5ECCA686818060AD0
2A38890882836514F595BBB8BE4E6127C9DC4AD6EF6EE0D15AE4C65321DD0ADF
DB6D67CAD0A3DEBA0D947D0AA1F03FCAAAFB2470787ADF04044999176C47F7AC
530B4032B650F8E73CC6886C5CAFF4DFABC2FE33F5B8CC04E4359C5F8DF1E58A
B167EE01F4206718757BE992651ADF61CF25572189A19315AD3E7801D81D4F0F
7E49D329237064384825EC71945DF03CCC045B0E4BA859C4668A7EAC8CFEDABB
124F8CBF10A7ED01F7290E7562AA10DF6AD4BC9BF80F3188A55927B3AD5B3A1A
502672B17951401E5FC1E44E37956FB033A517711384136291D57736A4454923
D4B4B28F24BC26C093E27D3E702F25F5E6D7BD27D6E494FEE2CE7BBCBB7A6A53
760429E12CD2E9B0ACF3AB0324616A7084723F065B7C5F35F75835683515AF6C
D0E731942B25D5FA8C7FC245555CA6335EA80DA1C53CFAF7F52C23D3D6770CD6
C298B294A1C4E6CBB8D8C619AF06231904D16DBC674E57CF7FCD8E02E18FE3DC
F62463AD80181F8034395A19C6239D1E95EEF85AB528E8CD2DA99E33C7EF0EE9
DF6B28DACCE823FEF6B7950098A3AFD46D2241832195CAC490303DCBE217F0AA
2588D08652288FE7AC7559D8CEC460F3F7ABD4D966424FADB66F4669192BE430
DE2E62EAA6AEE0D8E354195A2563759DFE0183C8D67B449516ECC3F573301DA3
F5C5D300555AAC9230CEB38F253DB2EFAA6218D7159784008721738B5C8C1DF1
CFD26F72EFA24CFE49CD7A4D0500600EF954CCE1A7ED40F1AA5867DC5F7765FA
FBE78109CAB35AC2730A761CAAED96AFDAD929A6D233F3ACED3874214E6075A6
58B3CC670D60B0DA4B4075416262747ACFFD9C16129FB088DDCB10080AED20A7
53D014F5F5EB1E3CBCAD06E8CB0A595875789BC8340086D1E58C2B1CB5633E89
A7CA6CFA4DB4C08432BA7410AC0C6105BEA2372072096958431641E18570C849
3096C911C42005B99D58516FA232E661C7AC66134A71A88B5A90540E5FD5922F
512C0A83999C07CEB7A37F77552F75CBEE2A278AA17E0E79685995E2DC852C94
5EF6F5BC9032145DFFB88B3A3F74518FEA9848D5AA92EFE8570AF8030FC501B4
758F1C0CDF3A5FBB4A0CDD161BEF17299F8496FFF2FE5D5DD1C32DFC80408D75
0304E9FDE58F3071E2FC07AC2DE0A960BFAFC38FBC00863EA9C8C5270FD4EF89
8C821C238EF04DF7BD7343B7724669B0E1DD9EA75A119F2282B0FD2150D8E88F
7B3CC749035143171FD57FBC1E6470FBE00FFFF6D3664C5D0355F8BF470A99E4
13617E745B66E31908E90AC92E1B0CC8FA70ACF742DB2A31AAA7432D7D3B52A0
94140E4E4D4D486A5FB3AFCF64BD2BB65C137CA2821EC9838CE391565329134D
DAFFDBA8DB8B2C4487DE9EC1722AC14066A7B4D50ABACAE365F6E262500B0209
CCA5CAD7328D8654B763B3EC3AC82CA47AC060FB482B26DB483FCB8E97F39B42
CDDFE0504EAFEC90D0AE1BB20B633D31290E01C2CADB4272447E9A1B860E1085
D81B878A24E96D6E16583FA908B38C959DFCD700263CC05F4975AF0F945A2563
ED5BE9A6B68473FB9DBC1ECE947112CDB791A1CA9D765A8CD75BCE0C43D68962
B5343139F7867EB4E3E29C51B85E6E6698F5B4DD2A2B49E3E433409D27604F3F
841AE34EB8744D1891AD19EB59A53C5F4FB5B0258F5785F7F31088D34B0343D4
8E428C5E1888B32E0B820A95DE4DC41E34E58256D337115369B5CFD265FAC48E
967E6607678BACB39D62F34059CD19DEE5041502AD1D4E21E95678C81B62F1A4
EEF90A1251CA9E8AAF7966EC96004C09C4D9F43A151C8AA138B59EECB77CB5BE
8C9A7418389C6BDC2BE1F18331E151718268DE4D626FADFD70DE44B561BDBADF
9EA1ACE49BE65A86B265EACB68F4588F0A756257A91DB5FD773C8B9DD0042C5E
51323CB81A8EDE313FDC3F5C258048D63837F887A41EA0D1CF255793E8AB02E6
149C5B5D952A1F13A9B3847249D4D6DA3A323B4FD6AC23A3BF70E39BBAB45A96
53B24873E7E9DEF64D7D71D6612420FD0665DDC72FE8375C91FBD90358417672
58B9E9C5C3913293D99529B8F9EAC85FE548406DE5D90A0FF8E74997F7CBB7FF
C71FC82F8D173315A44103BDF5450525308E5AF4F5EC3AE71C90564DE359480E
5EFB6D30CCD8BDB19447B728CB005C50AAEE736C1DE0B08E3CD72E458994AB17
E31B58C15CC4396CE75BC0580F75B3BC18A7CAD1C2D3424E9CD58A179A2BB40A
C54D2E45D2043D358DD7902FC0E967F6DECA7277FCA73E841737D9AC2B5B37EC
3D1EC098C144D60AC1FBCB365F6F507132D4DF54528FEF25493DB95F657BD97C
468C4ADA7CA6ECEE1BC41219E393C3F3334854C5D7495678DE754AF0AED1ED62
7EC8556845CF97062549BF859A34ECDE8AF4FDE7038436BE32EBCAA12C5A7FE6
0456189008F10D3367C4F128EE4AC806958EFC69D561830D33B63DFA6C31BFB3
B82DF9CC772D4890F05058B3311810C6867550C0BDF44F900A75A2102905B8CC
B2F61255AF45BDE940DC77868EB0CD12C56C7856D4B0ECD4E415CC9290C79FE2
4F182F554C4E5EA79D4611AAEEA72B791C22A1822E686F3F36AE23A4FEC8948D
C1EF163019E604B15ACE59F9353E24B64152A2A6292F0590D6F87622356938E8
367A8ADD3758098F96088C5C98E7AF24CFF8A8308EA440CD6712D60804E42261
6D69367A334E3AF5594456DD2B434C5CBB5D0DE6C7AF6488D173C2BD0597AFD0
91C43DA89EBDD69E579D536CFAF78E601BC228CD716E472C288EDF4DCB32B550
2C46DF4A11ACA54D221B44224932D25E0EB50B9C739F65118904A06FD3AD3A92
05A17BD54BE0908399C0E9C0ECC6F912AFBFBAF1389BAE45B2989DA004552525
09C78DD4A7B6D83F99EAD74396128B0C14658CE595096826B950B51C7F0AA44B
C1290E83E97E8A0DFE6D50894084042021808826FC99F980C81A563512B3250F
C8DBECA355C9F3EC62794FF9873F102EEBC5EF3BDE0D3313BBDE8FE3E910E0B8
065504CDA978928CC55044F08DA8151439F91EF111C1F3EDFD1E60442A1C4B6A
34C13E3AFA914D2A74B1D27C25684C3B6BF9DF8CFFC1B566220DC58468CEFDBC
38AF8EBA830172D0204028ADA60954348D82019B24C5A7A2A7E876F2BF05AF4B
CB13CFBDC0CB02211AADAEEA9A0FC6F031D44B26E05C9C07ABEAD29593A399FE
DFF749D9F40A99E521230DD11AB4FDABAA42825795185DA501879B80CB4F9A7A
3CC11FB34AFBBF6B76B9039446157BBEC3D6729CECDE9442B63AF71B8C660972
7FCB71EBC0F5F345606E2772266FFD6FE5CF40BB5BDDCD6293EE8A230B3743EA
CEB382DF4A922FE449E34BA7BDED29085B7D70E8A28931AC48A546D6229528BD
4EA9B10043954F184BB76BD00C626217A45A4B8199D88BB10B18B1A0E8AB694E
2AF3EBCD152EAD851ADA931C653006BF89F70863F67AEC35C89DA9E31C176EF3
28A147759BBB495C5D8E368956A4BD086C970C0C46FE2C03F43628C947DF62E5
078A9AECDF66A3F76C9B6DD93C12E47BDF78DBCFAB398D0D94571A1ACDC4D099
E5C7BC26B34BED980623A1AD0E13EF72C77AD77370B9F077DDC1D7CF0DFCD086
12B74D4A445E9F6FEE70D254362598A4A6D5E5DC3EDE73758A9A7DDCD4AB7DC8
BCABE9FEC0891318F579490DE05E146F5F1C839B26721DE096F5D2B450A6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /Box put
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890B0BBF10075D53739F7E84CEE95B40C3DB68D5
6E9847E37B7920412068C3DE2065A77281345980956AFAD312499818890B454F
5DD8C92695818BA4DAFEBCDD4D268763515CE077A64C5F3AB384A6DFD7DD9641
FCDA0A3344B3A14F82D478B4BE7BFC2822A4D67AD3FD07B11589B93842066528
1E51D954D7E6019F6921DB9B00ED303B4B8F557EAC7A0B0340A268B0DDB25B3E
BE0982129B0D3416CA5D07ADC689CAA181270B8141F9D0F60C60F156CB305E5B
E71D9A5D5FB3216BFB66284FCABF6D74564D1288EA99D3FCF6F29C3AA690A596
02C0AD2BB29A2D457C66031E5571A1454758212EB4D053F4C28FF629FA94DBF2
9677AC4B92C4DF5C7FFDE31A8F2D6F9477896C11CBA890DD464C9231B1C350E8
E8CEE17F2E0F5D10416F7D7FBC6085E9BE09E692951EA7B93A9F49CD458476E0
A380E1D122F275093ECFD398FCA6D714187CC12A2B16318F9E1D2B0E9EC134A2
C4D2674AA68D2E7EDBCCA383
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE505B8A69335E25F98573BFAC64A02542D3B835ABC68EE4F
0A1436DD48E963348F6F5650666F6BFF72D385A5FB67448213B032991B4970C5
79925CEFA92DDED5BE33EEE8275EEE83829329E11E4EB1E2E16669B21C3D36F1
FCA9535233B0BB982F75ACF33109F8AE7ADE4954D0B1E1802008B39E90FD6AD3
2DFBD4E8C89A9FA5772BD7C4CEA7C8F8272B4C34FD26058AA9E35E6DE5D8F2B1
B78BB131F06294B45300705B786BC0D0653933C657D716DCDE61AEAC6DBB9F5F
26C309EC6AA6E4BDF86680F4004C27DB20FEF95B0BE467B5B7F436B45DA8033A
3F755FBB8515426BB432CB6210B93F60C98D1DBC60E48CCFD9E1AC3BDDF3FB69
A81F2D36111B48751416C9EB562F65C3DB7A4AB69D26B5BF8D90B5758CD7435C
20A34F783A4273244DA0E4AB11C078B07BF2786AA78EC0527660082810DD4D12
583633A6CDA00B353267B2BE5B8178E6B7889A33771F86276E6F0FC729A9B845
FA4DB9CDCACCD1804B9444C284E42F73764E076EEE81285FBB3CCD86DBC5251D
2D38483567AD80CF22E61904C92A4FCD68F8C5389BC7B4DDB26033F03C778A1A
810DCD869D660DC33865B7E7C25820CBE0AC3DBD4F5A7BDBDA43B38A384C2DBF
592B0E0A571D8192A287F5074A8C012E6AD53C85A735816E815777D18C511AE5
913FD38C2705B78CD907457A5F085EF70FB8DAD2E73F158978ABC35805453F84
CC5EEC991A5CDC8C33DADDDF82939669A03C2A9AFA9544CC0C8E8B145BCD2D46
280FDDDFC1EE81028E13027F26BABF3AE38AF0FE01279F319172E380341CAAC7
984BF444AC5EABFAB89FBF8430C4611B33767D29F06AE02C06A97C3D5DBF67E4
84DCBC5B8D181BA465EBF86C3D7D138B055A428C37CBCCF98EE1D718F90E93CB
3C94F88A97391159BAD4859E93FCFBDD5E447646005EACE2F26FF29D59D6D283
4F5147C6D5D255EAA8E7449093FDB99911FD0878388176810ABBCC3286C08E54
E37F4D891ECB9EA86E36F316262B281DD1F6217ED0797CC47155E6FBB936660C
A8645DA7CD2279A82D4248CF4A39FA716CEF9159CFB01F528999160D492D0451
B0725BB2D593CD0C2E30FFFD388C9A4D86DACF991B88AE53D7650004AA777304
A2DDEBDB1FF0401FE6C184813EADA017BD0935C8886F1A143F412F6765E6B7DA
0D48A6C44156C626F31F9811EFCAA2A72B06F0B1470662D1BEA1BF3417D4DDA9
69E53BFDA83D7BFE2CDAA8EE6D91956B91D5BBAC6D753B716B430D086C02B995
0780239E9DB677B8E7A48F972B5E4F87099A41923199FF0609392A519CBD128D
D4E73F35760E5A90A2C81095B6DD2704E8D843DD2327B2BBB37D17D0D9A6112B
F019D0C8D099D2BB15565E65D85F5F839404370DB982CD4CE4AD3644FBF284BA
C08285B918497BD33DE72625843A1F40FE513A815E489A8A79A7AC17B2852970
BDFEAA5D40CC871D5F83CD501997704224AB03806F7C92BC5E75445F6CA9A3BF
DFBC194D47
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E08614769C017F6D4F14C52D7189D4AF8CDA367D8B04CA8D3F2307C
0A7A179419A80695912F456637F539123745CA8E696E250E0BA6B7C6277394E5
98A8799C29B6272613C152B0CAB05F3C7795791EC9AF2BDD416861A3D13FA858
BCB6ACF5BDE40E5DFBC1A171A7280E8FF4AC0D4C8A2199E9E2BAB5CB9131A76D
EAC166A7C449A549EA5111F1750CA2C6E1EC6F00CB6C62BA52D17FC66E06ACC9
1E6B858F9393AF9AA5E69F799E01D301B647DA57225C2920E3BCEE9D09CA5C60
F22B07F24A26DD8F4D6F9C78BFAA8D12A21531E713B80CD03A5FF4F3BBA2AD82
3BEF7DA8C97C30F1452006AA3B1A168483F6EDC4089ED02E567923AE6DBBCCA4
8C246A080448200C2A29C34AE6255BC79B73AE14B980A7C357681BB0962894CB
DA32FF2B70B21AF4D158E0F74652684A7150D0967F83E13EBBAB33588541AEEC
0DE8C53851845A44FFB46A93CEE3E8A0263882542F7F103D13C367EA8E1ABFAF
6486A9DBF6668550BE7858F5790BC87C66492C0FD34DB08EDF842E1AF58A09B0
85A9B7FA402029FE2439769D67DEBDC8AD8C861E90E5322951A2904FD702766B
36916DBA8F9C96141BBF4788FA435556B2B4E1B37DE4506ACC4224CFC00A8F83
33941A050B51B9508758F4EB2DC074D799F5116296B8822ADD743A043F9A6426
88D10767A9F99A072BD4C88CB579B34687BA4953B96DBA29F33211B12A0215F7
5F2F873E5074A7D593DAD0EDD97270FB9A87BE870321A49958B10E32850F0148
68E0A1D795937E61D4556BCDFB7F4DA63A884F9B4B07801D30B1357C3432D6D4
7B72B7D6040410C194EE5124ADFD7A40914BF569EA1F9CA8C8897E839D262395
5EDB3E97C591A3A5927DAC229EEE864B8C0F79ADBF88C0E6C41CC70D9010F07C
1CF9C05960E34FABB6C5DA4D789E39F35FE01F0B22BD9C63B3098457716D6B22
5EFCD0A960F3A2319252C7A0F73A4770E056209C14D721A714D713D5F2BFAB32
EBF815DDDE792B2556A87C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A746147F456517EDB169157DAD9D8AE5D7
EF2661E266C5C812B03E2569E0F138C2D58E38EC9F0B780C298874616D09E399
6CBC81BF2A98EC7A9A573A79CCDB6327D0DD0F821F886FB4496ECCA78FD1A2BB
CBF0CA1255799DF587CE66F042F7A5179B55075FC89BDC3302D01D7138DA0828
4C8C35A8E26752CC2EA8F3AC2AC68E70946C3E8F46B9C2DF790F79269566BF9C
9A6E54EC87BAB7D34EF99AD642B738312FC6F300093EBC7669C934250A5CE240
A1171441D03FD75811F371B3895AA29DDC6A984C0E944711C77542A66680C933
9C7F2D5A30471C6693CEA46EF483D1046E1A9FE6EFFA27CA8C9ACE821AB92B0F
5D9DC9D0A91B93ED65003BD0C4D6608A6236426C7859229DB42614A54EBFB4DC
8097C0D9B0FB95A5A87CC9FD874959462454B5D439C456BB55FB81B09E3FC5B3
26D850A5DED9EC17E11FCFDC544B2885995B5EA543CD7E8E17FCB8B4ED57D7C6
1B0C70972F86F67336647589FB0EA874920BAFB89889071729076D755021533F
B886A9483867A5E3CB8A961CEB372CDE1EA852052312ED4484491532ECA79ABC
3EE60C00312665A8DF22AACCF0CBD84EFD9EC148AF4245BFE780E23BB321DA56
DBB416890407B39D34B68BB61B00B146D2E8F794C1546CEA6E037D7CD767AE50
843AA610583CC318C66E25ACE786FE7B406E5F1F232517AA77DD3875AF98FB1F
E6FDDB6323E23AA93628A6B5887CA2263BF3F5A696EE86831C603B0AB1442AFF
5FA6C191F7A83C324AF0629A269BC5E6602B15D0B8881E6F37D510D53C60AF3F
6159041212131F18BF75E71B5B6E7022B99AA55C94130C7A4AFC72E016B43A65
AA522E7EF3FC6134D5F715878D99130DE16A3ED40825C75260C7BA8A5A084766
1FEE0F6B8798F96EB458F2E1ECB61B6A2C9887A5D0541AC711EC68B79C2CA3C6
175D4A90F08ACA408540796646E0DAC8220792B3FEB61999671C1DFDFA0919F6
35FC2CB139762BA4D20490AAAB168B00EAE492D1EF564F9D4A077B526322E8A4
4E42451F694443F3C4E2FC9541C8344D3575996B2C50A6E3D62384F9ECC1679B
6514C107D7B3A613F7287269594865E9453E9B6EF227867D9CF9549B3B5E2A6A
F748308BAE99AE06106D90DE65FFC15685F8CF6DED13F50F406270CF873290E9
9A3BD506A8578376F788CFB65E372FC69FE9FD47150A0CC019FB7BF22A3B979B
EC26787BAB2D5F893EE00D41CB48E35CE9C08D0BDC30768CCB856C1CD7DE9E9C
0848692C38D1E3016BF4B4E37EE291081DE21AF12C1240C57540E73362D1F9A0
904081FD330AB6BC5E2CECD68B9981B2BEF1AED8D00A3AE7ED338B9E18F72045
7A4AB35C68C07865063A2AFC57C5F2062F908641625F5C1C0C6A364E3100A357
D10632538A2A0CDB6AD680DC773ACEE840A11C866CC356BFB3FEED65526A133B
8800E5D9734B24E017A2E354045A20128E1705A76CC4A6F6FABD063ACE8A01DC
45383306CED62F67716BDE9F3379CE9878306CD4905832A6D7971824A12374A0
CECCAC565C16B53C7C5E1A202F5363892C77B74A200C9DC2E2179D79AED00A2D
FDA9B22773F34FFE430F51DEC9D81F1FFDCCDD178A0CFDE0E7E46CF99B117B55
B3CA9B1F3952D101D6CE60D1A0A97C99EDB3FADF880821AF7D1CA940090DB589
20B9219284D91DA3BD4A61CB3BFD0D14217EB9F2CB21F0FF6087C7308074735E
E35C87F51AB5DDF2041BCC6827E45A0370F0F2D6FDB8A1FC5066E1BC3F1D7B12
B234F60899F20EFFA823A8ED6489E6A04A0110DE316A16B9A8A6E831396813D3
F551F18C2D70B0FBD115BE7EBCE816AB40D2ECDB17E15F2AD8D3BAD0B94BB1E9
E4397ED46382B7F8A62CF533D4295155716F96B850D6FF61144F6A9E51CC1B8A
86A35082D9ABEB8D2DA4B491536CEF9D1E9F4FD8C0003E6F23293B82B65EE0DC
F0830C02BEA2CAE21DFAAFB537D8D9F0A74B63C9D0A6A9BFAA49F87C4FC0A724
1808AB8A4938BFDD1B8644456D6323286CEB879B3BDB928141D3E5403F1CB5FD
773C8B9DD0042C5E51323CB81A8EDE313FDE90D905B45223A6504CA4D48826FA
E6756223F2FF5B5167ADA7EEF2D2CBFFA77D88827236660260C19CA8BAE9DBBC
7A911F54C201E4F627816CFED662D19C21824CCDB8F71DD18800B7E40E164074
33FC9A216DC7AFCE1C5C7F7EBB14725E4813E05782683C877C7EC4C86D6FD378
06CD3E28E86F10868948EE507B47172D7B52B09828010DB7975266138B7C5168
19F07C1F01EE32CDCE87348E9A967B430996030C42BCB6B3794F51D6F7DBCCB9
A30006C7D60C7E1AA2761AF25BD01C501409DC094980FE3A0D2A24B429285A06
EBEA61BB134055B25332C4F2AFCD776ED2ABDCE78D2BDC07CED874A173236473
98EE737ED7C6090E857AB029E6C75123998FC42D3E0C3F20960FE90B3CC6EFBA
5BE1F043F38C1E3B3CB2173152213DF78D7C0934B29652E763300876BB073367
A61A91B741B3CC4B68E496316C1FCC57968F790C5E7948B72C4AEBA496FEA882
575B6426A82F101D8FEB1CBF633184CB857E6D5AB42F92904B4D0DA750DFF2A8
3A30B03BC1DB36EF6FAC16F69FC8885EAD2CAB2644F1E25DF5F6EF5B5ED1E80B
82B3BB7F5B0B954E7078DE3E31D8AE65F9EA55FD147FA2DB2E8385C7B35F69B7
D06F576D7570D2B23AC1D7040992123A276F3483AB90D7EB79A87E6467D40C46
F878C63E035056CDBBB9F4DB89659D42B100853BCBD4D0A15071AAF8079B7768
5637DDE51E631007A29FAC4FC89EC53A42AA58F08999C1DDDC1F129EF7813073
EF9409838CD519B1F9384DAB415A394588881EF3502D2588589B5ADD4C1F23B1
6A9440ADF2974910C58F6BB26C4F58D573E5546629028DCA3154FD567040DCD5
C54B9234618410808685806BDBC524F3914FB3F945E0A8B3D0BA3DB62D680AE9
DF1C22D1E205B546D86FFB6D567AEF67B112126E2ACF3642047B54B09D3B31DF
2790637E4375815EA4ABE99BE732D6518A5B8365DB72AEC255D01E5F51974F8B
80E5501D8F33616769788FE84E1E85CFE56E137BA47C2A14D106F554978FC07A
154765411925D03D58A22DCD2AEF5406DF46611E216F8B9161510B36B230EF3E
93590FA686661BC2390E19CD3DEE77F3538ABB1119F13CDF297EBD29C3DD1888
F0FE99AD7ADAD0922C1BEAAAD9B337968A02FCA0132E033BED6E64D0BD1E9C51
FE0264A18B16E899EAB7FB6A5D283005D97035874D2B9AFD4D3F29B4B1E6EDE3
0FB077310016F5279CC754F3D13AD666CBA8F8C56E27E4466907B099BEC7CD38
699015DDFA5E32143ACCD729EE43B417EFAC4D403595265F0306D9CB3B26CB5F
05EC5FBA7C19AAC361613A028572D68AB9D20F3ED4130D20DB5FB364F7BD728B
86D3BBE1E37BC2104E797474023611FAD7AC43A659829BCD60A999E9F3E78F64
80C3C8B6297958A634242E698BAEE3C5CAC2DDB333270F9AEB92A892D0578C34
519695EAD030B18D2B1B928D2CB8CAF6B4484B03FB878D974AD04A770977FBB2
C31C4F8FF8BB1E7DF55CBD0EA7805A438AAB424675C45984BC321B8331096342
44037384B36372980DE4F1819DC2B4F825D7F6AF5BA3889A9481A39115215105
5D2B2B9DAAA7D85A7F1D36345F3BC5A90CCE79572D44A07DB50823C01E2F535D
FC2C0655A9A103406D8CCCF97174ABCF4EBF022831694B2773BA052B475D09EB
09469D2BB86F7BC232B842C924ADC1B1AC7AAE6732DAC6E6E6F989D279899F03
7BCBD7DF2830E4F2AC7BC9A0512C5598CD6A8558B8C483AAE9A856CB690E4D9D
6B4452C138A84B53712BD7B639625938CDB360066803092C41828FDFFC40EC76
529B3017997B118F9C0019B318CD3A83CB0A1E8891BE5F6A0C940C93A5B74FF6
4283F15EAA51DF4C74CBB662283EA2CABC19388DDF3C5B474F5374D80D469AED
90BA08D8A72E3547B40BF4ADAD86EF5BEE825C3F850B6EE405BD38D761485512
1FEEDC70965D0185F5E174F0758420612108EA4A58025B1F47E53E0B124A48CB
687FEC13BC7E48802CC39BE1302FEBB6C5A7E2509195211FF1A494D7743D2BCD
9E84D94956A1404882E6A29731FFADE7B187078C481987BA74CE27B2C4557D4B
04E7F771105122A7F30165F29EBD4570C70F7860B7D7E3F1E81AEFECB5313C2C
C1E66069D56F6579693CB65053BF56062972DE5B56E950AD3B58BA187935BBC3
7DCC97D12D866DDBB2E9D6B02D4ED0A53C6BA6B301D3F42EEDB6BED24CEA54F2
A86A1887361F7897A2D28A562A935226FF823955C3AEC37426299AD32E960DE2
CF2E3C9CA94D43E219F06892F0F79B02434ACE821D263606A374B64A01E25C9C
7B71D4347CD5D07A9411B6E88C18CFD9B234CF2F2D603D0260B53225714419B8
C988456CCC24B81FAD59AD71A3EA68BA6A9A900EA9398CFF7BF2CB6AB91D17C5
793A8F9EDC7858C953AA3EA5788239D1FD4176B9C310D775443680BD38AACCAE
08206EABF5E61E8EB6B71AA4B19F8037836D8D8AE278B7171B945C5AEDEBD3D0
8153CA578EAF17D2B2A7B7B9AA763F56FFFFE98E8B960C5B942238491264EA29
AB731DEEDBE78843300158908F77C0AC759565A2314109D6F3AB7D037E509C5D
A4A954235A57F0F59EDB31F78C17CB202849141A1F5FC0C086DF025BD411A9D6
5745FCE585256923F98A70DE5036BD9C54DEDA6D88F609B0AA79104E10420C3F
67E491EA298A68097564A90A2DA6A2A2574BF892347DEE8E7A09633AF7B2E1BF
75521FD6C2925E38CBE6CCA897724AE8F908EF485539C45C6CF62652F79150A2
D35BD4580DAC8DFCB09C9B2F0F3258476531B36AC6458551956CA08156AF9C33
D3F197E87AB3C26371305DCF1687976964235049BD3E3CE70137A7B7FA82E8E1
5F366CE98A40838258D452E731374A7FA2B08ABBB932D5E6A03F957B7C64E89B
B59C4ADF07B4FA90460372E170BB98B788972C8F37277FC53686C2D27FFEB476
65EED274860C3BF880DC2F6C80CEC4A92BF9FA09EF0F76FAF0533551DD2C8C2B
DDCB8A5F93239B9DB45E600F1C9F40AFDFDFE2E7C19B6D1E0F9382BEA9878AEF
1CF8DB5AA29D60B224C9B8872CD9E55B2E3AE3BD97E3D9D52215AA05E690FAA7
3EC216783CC4F106FDA563F8DBA452AD22FF83BD861FCD07E1302D6A3AC105F2
8EE6A2CFEAFA21AE6C39FDE40B9D08EF1ED2E41BDDA53210944053DAAB56B107
5A0C3832220752D104FA14EE869F741128948A218EDA86F30574CAEBB8230076
EF42FBA55397E2CC27E11DCFA24B47253A03A99363DD7EDDB8CF9B4CC3BF7B29
5FB8E3918CD673DC3B1859B9B68AC9C092EA151A6F3762571629775247A6AC65
DEFBCDBB07BE8D8CFF4DC312E6A454DCCDF83FF2BBC7B17EFC05DAD545F7DA47
1CC77A08633A53B62B760DF589FB2A1C0D78314EDF4F4361872DFA2C65EB44D5
CB662BE0B2839CEAC16D813DDFFF35ABD92E13ADF85FA7B62AFD4348B8790328
14BBABA742ECE84EC3C70C8281FEEDE824560FC686802E49EDA9528B7D8F8724
EADAB1EA2DE9F76DD4113C25175B14083CDDB3ABFE914A9AEED19BD22F6E09C4
198C7AE63EE63D34A6E5E6483031F98EF3E460553709C60CDF17E6D6E4E78CB9
D61F3FD30E78D7EE3049E2E505776D90A2D1A68B51C0B83856E9927C936DF456
4199A66A432D5FA8044190358D9A42B02D8D79081A54EF4F7251DCA4D16C84E0
3F2249F606EE1D4DCF4F15301A634A43CD2AA417331E4921194F6F9B939EE166
3FD02D1E1D74F22C4DA4143A4D5C2AD9BC331525A4BBB12EA7EC525CE0D7F6D7
02247E93CC25E56B176A0786B3CE890314191082273187F24F9D209D78E0A2FD
3FA71C28EDFC157CC5F6750F1A32DD6B38F76BBFAA9AB9E3FDBE3B65729C39A7
D5C90614F22E02626ABD343F3AC0A9698AE84CBA2D8F5378FA26179EA32176F2
464A2652C19C8D31C9300E613650121894B9D280C4F16906654393ECB9D74206
B1466753DCA4A6667BB22C841A91A8AC118812C9BB0FB24D2166D5DDD4EAE075
395D7BE3CB0DFED4D966B2FD281DDA37184E620C8C9F2834C6AC70503BFBF3F5
EDD60A8269CE7950969557336AC8DB3B61E01D64D56E8C4CBB401937D3114220
AD0792429566BFF55537F41DC5950A76B816F8896C4BB18C575AADC6F5886763
3981828EC2EEBBC3928390F72AB65858B8AA6F0EDD3A3763F5A8F68A0B93B9AD
CD647D79A3E56C4B5AB275FD52B825F9C86582DEA06C1FBCEDF42069D00CFE14
02347AA07C49D2672C513510C5F90752F7DD417E32DD6EDD1689FD3081EF84E7
86D3F04F8724EC003F8E8C117DCC0D93D513E04AFD9BECE706135D9789ED8296
F3959B3D87FE3E4E2B176AF68025E0C72F52165A0DF06D6A2ECBFB29FE4D5CC6
EE8458FEA2FE94385B2AF841D9A755FBACF6167862A987D153AEFF6650578358
B43FB420AC4CFF68E997B6F7BEF0C52DB9469CFC0E9E9A6D7958D9C8465C0AD1
28085AE31D620480D82B5151EABE7353E18FF6B1523DB565BBC3A1EE19170598
C4E94B5A82490F5F3EDCCDA8B1329836CC6136E0B2DC8292E36DC444F34DBF0A
476985495B8E94E473052F20C5E417A6AFF317746B50613961F9E542A99E1E9E
AB27BEF2BCF74FB29855ABBE60E7A2F5DC169BF13C56D9D08860763C7F8F92DE
AB54453E6A4C7B7F667C14A284047744C14EDA3CFE3DC73BCCC0F2F81D7ACBBA
A1B71056D018CA5CDFEA1929E0FD99044E1B7AFA7834A95FE1307D53A8436600
3FBA0A0255ABDEB555EE5EA7AD4D7782A8387E49B8F03ADA7C7CA74633545ACC
6E1B0078A6D40CF7C7D8E436EE1C70047BA88646BAA9D6F0E16636DA27AB6AA1
6C638A6B48382CCDFFEDE240D483420C8089E81DFB3BE958C865B2B9A0705095
755901A327881880298D9DB49E020D5A7E6290AB1C4B10165DE8C3E9109949A8
FC60CB1B458121246F0C2147B13D704C0067DE90B53D9163DE8672BB96AF649E
3CC9D18701E91F5A47FF6E933E21F0F0F9F31D06A6F3355819580C478B6E2A50
9CED4243271F069DF61D27D3FE8CBB25636F48E6A41F205D04A802E45FD0239F
0F41E86F2D4EEB998520A57985CEEF4463EC7CD398769ACE9F56B1616DF4B6EC
47260A1A82EDC3B258C45EE70F2575FE3A0DEF48E5C9008EEA4F990890CFA24E
B5BA14B6722F4521E7C552BCB2882C53BDE88CC55844F1A036864BE76727743F
9266BFA212BD428B67BDB8FA30947DAF090BF54FD4E7B01311521458871B0C8B
D1AAA6452B05A9E0A4D4AC85DCAD1DCD36CB4D6288560DD839B975287260E0FA
E00E1369F7ABE64B951812C84BC29D13B78FA281C6953833F378FA3D5B296449
28DA32EAD64629BDED7F973655A8047BAA8166A39AD81188A0BCDB316CE04AB4
08327D5BED24A373E6CD0A8650EDD6F01D290275630A7BA34D7C65622708FB34
3B1EFDD4C09FFC7E49DB8929F2E3891248D81727E4DDB392685584B5BDC9308F
35A246EFDDB2CDEB75F63F693DCA492BCBB376A278F2D4AE601E817965E370A6
CE358A3A3368746A027350A9FBF947BB7C46F0C949D8A718026FA6E3BFA81B90
3519E95194C314334242A37FE3E0F8CC792879EBA47B6EF16E2C6DA9D1EB555D
555A07564A9D3C2275458700FD01CB5E99962B8E8CC2D6A52E0210B9848E6FB9
1C81497FC1AA96D6B4817323D6A88E851D672F598789D1EE0B99F19132698163
478C02F72EBB0DDC10C55C02FB02663AA47E2BDC5A51A03F48BD32FA0B0816A0
C7C6B4E3C8CF98D1B82FD0AA19633433CAC268C6BB20D3A288E01E2B9173557B
D09FD610F8281F6F34EE241674A3EE2645DA90652D589681C60C4FCC6A8AE100
116920383B0A69281E3DD8A266D484D28CC30F9DC21D974400A8C2642147D4B6
52A8F1A7E0B77D82D6A36B6B588ED0ED38C61CDD2A8431D15BFD53F1FA3B8DF5
3EE8E41302E597B15C2F640CA86F2917456CF5D301929BE09F85FBEE99D21B51
2779E121066B46DF8C2DC29BBFD9378D8E898275EEB2B9BB17486D50FF253FF6
7EC9FCE378C4940303BBD456FD31D028BBB565B96FD4E4D1FF377A5AD37C15A6
173CCBB15CFD2FD66605EB29C5526F99362C7693B01E7ECF132C62BDF74FFEA4
B0CF559A079F2FF1C3615FD8AF94F0747C51AF4683EDF97728F3068203896C93
1C86081B9870A584F81C6C24126DD123FAB23AA37B36092D3F6CE83BE0B858CE
E312A4C003B01CB922571B8E5E7DDA3913705D4DE85889C1086133C916B97604
9158408EFBBC55FA1B1F3F3E031B7169E8089525CECD505DC35CB17B6D8F433F
9402B197152704622AA4BA96347B69E844752017BD9301866119490253B6CDC9
7E1CC04D2640E97679ACEA830AB447B3B980521CA52FDCB634318CACBF994B41
4731F0AA40D28BE3700953D590A62AD8AF0F977CD9FC6A5B91EA844AA2981BA2
64E7B739C4088A25F551F578189A3285E5F32C9C8A8FA9E7F90D27E38DA7BAE3
3901AF57C7DB9106933246B30E960A439F315C4093F4AA8854274B18E9808EF2
FE36B36F9968B5CF9FDBFA11DCA0E08D087C4D099838554A169249B307AD318F
9745E6A9DB8D45F1EBAD4CAC35152F1EE78072533F8900CC3A1869BE48305CFA
07531605C233BD19F3DDC54F3DA89A38A4C935C8D023CEA0AA6B857291BCDA9B
6705F0B062A78EFC65E27CF5C83361C2AC17638689E052523D7558A09FE3BDAB
6A282D97A07C671850972D3CD9AA74EE5B605950611393C08541403FE386DFAC
2247BE094A885352C70B1CECF2F9DCA91DD007AC7D759CE74D6A9F75B373FC70
31B45B179B10EA85E741412DF41F4C59FEB8AEF11EC7D1484A695673D7CEE75B
91B36DB3081871CDB3987169479C468004344921545DD99DB567D5486DF8C298
64621BB2A03883BC623D906EC7632CB075B9D013C9266B223C04E45A07BFFBF0
CCA7BF4BADB8D4AE414A1410886EFF8D56DB118E81068DBF528C83F702F2EDF4
E45D0FEB7FD43B1BCCBF20560D772C14FED32A6D10966242774A0E978AD35C01
AAFB04FBDC7B4B8770D3E62C7EEA9759D337AA2628F08079CB5D0CE2CEAF2D85
E987DD9FBA00895D87DC834505C606643E0ED45C2BCCA0E3448730FC94AF580D
C139ADC11FA69DDC5020CC3C14EACE61BCE6EC7A9E3B71DA8E024D71908160B1
EE7C648F246AA8FB60C78AC2398C16112776678BB400C75DE3A3E70D68714FFD
8BFD9E00BA27005CD6FDE60CC49B767DD3BF6BA86CC368E9D29C6BEDD2A467C5
8639DC0E0728CAFFE3C5B6A3B3FFACED0E119E5ACD18F96868A8BCC914FA5EB8
2DFB0B03138E86C15426E4FA49EB9622E45801FF0A29945D6FC7A2D65314D2BB
69D35F3F089F755BA04D5D03A83FE10DC51DA0C4BD0F9DFA45413DB1BCC3DA8F
5A3D194C1BA4490251325AA04438BC14D47CD354A980A539A617ACB9C702EADB
545806ED3373D16487801F7A6CFE211D8F914B49D4602BB869D5A85CE51EDC81
601C6FCD650275C9828C9B2131051DBED189118B9279A11243BF04609FBE1E06
9C0B0ABC6B5C2A2B08E8F5AE4C1E037041529A9E53CF6211D6F89B3F9D78E0A2
FD3FA71C28EDFC157DF84D2F45B211A00225A607A5E867D601C60088FAF1AE5D
D970FD1BAFA2CFDE8A20546520EF3367BEBCD43247960877DEC27C2DA43A8176
62FDF1896DB204DCF51404875DA9CBAF21DC1BFC18242EEBA6A5AE45421B52AA
31DA19DA81D0885196DDE3331E23EDE760BBEA210077CADB81C773C3EC8920EF
E16FE5C7A72657A80F1CFB288E5E944D65E08722DCE6A5762EDB87EA4AD820C3
5920172BC16F63F51819C4206CB45D52E88EB1C042E28A6DFC1C6D16681FB947
7E2A1243CB87523D2492EBC0F85F5DF63C333529F06FDFCA1636023C3B45D998
37E560B854446966D0F4316983578CC350251B4474B677CEB6C248127A35AA5C
7691B72AD442BDDAD18F30DB190E4D0046924EAC9BDEC7AD1230772D7B98333D
5398A82465238D57CC64D9EE4D3417DD8BA249945228E14A389F089207FFBD60
3600E77410A768936DBB1162F16ABBA50F261D5685560A2465A0565E91E89D13
35338DDC277E410104CC34ECC71B411C533A5CC6E235B63CEF024C8BA29293B6
34CCD345102C54FE2208132979EF8740F922F120AD44F28BA8080801F9BC7611
DCF9D6AA4A8651177CB856C986119738E420E03ED77D9824DAA20B84FAA9A2DD
D4158E9AF332256FCB3EA78A9EB74B4B091BB5B674B00964CC2272497284B49F
D0B1A273C1EDA6B778AF995CC45FDBC6DE448491EE057D1A0892D6FC840E3AC7
988F2569B887412982ED98260DB84337892A232A3A1E688B8068D1DB3717525B
37D33DC7D4DCE62BC5140AB590C15346B95A72B52D8380C5112F4CBCCB78C3DF
9F8D82D9EF2CD2E03261159C7F50054928B9493CFB72DA0F5B5B75A7E3C6A182
18DF587BD534F0297E3615F4E68DB6BD2AE92B0B1D5F1E1C12B0E61751FE10EF
24A0AD0FF9FED81C2B83BB3238BC779091D87E5D195DBD7CFB9AD96E1004F968
AF583ECCBE6FE0329A031820D4D1DA9D11F02ADA84BC6E6DA0AA29EA8B96B98E
9CAC0F97387B731F438F86AA00411D4359B3AC5E1A129D34E4E1DB2ADED17246
920EC84462A1C4A7008885277DF6688E3873FBC7A10EF4BD172958717963AFA5
FCC1C753E473E21EB8BE0C7C96BC7BD5C0274440824A95B61CA0427E6CFCBC31
3ED9F5F9B0D028528F61F0B77F668BC7CD4399F08141D19BC64AF0B2552C97BF
BD1C6C0062488763FDB07939C47EB3D323D3C90009A4366F34513C6FDB2A0232
D1BAFFEA22CD6D7EAC386165819C19C75470FB635CB7271D8C8FE3DECE61CE27
31FDDF7FCF2AEF7CC2B1EE7095F485BCE6F793CC26242D918F052AA2F06CF217
8D997C4BAE6D8646785C0C82A208F4F8F34A3DA698A69BA804B9A8B27DF80902
AAFD2B6018DD0680B43A5AE7900B43027FE37891837B822BC091A27912F60DE0
2E09F6EDD7742C73BE07D03DAA4EE95D353CDED25EAEF73162A697698F8925BE
31F7E98BA78C2B52607F5AD63067BF47432AF95BE8E7504AA1542D7B23D36C6B
AA8338AC2D98DE543DC31B759E557505A1366EEAC1142E6E43E7C50DD0AF354C
ACDD111DFAF08A68119DC69C2A9360CA05073141CE21883E3595088CEABFB137
634D2AE8694C53BEEBDD14126B4825CF63C13B40CE21656E37A0FCB6836AAAC0
7BCE893A76FC1FA1CABA526EE65F6439F9FA6F27F763634C662A001B2D429D90
F2A70FB18CAF8575273D16EBC3E54475416262747ACFFD9C16129FB088DDCB10
080AEA9DA70289ECDB306F226579871CC67279A95F558EB0BA035576072FF7F7
722EB48E8F701C11FFD1B7F263ACEA49BAB119C6057DBFC2B0085C818FDDA774
EBDBE7A95500883E675C5C28DB99242A8330E9DDAED388DB7A0B4FA03C84CA36
F6027A26FF421BFCE5DAB2D853767FE8A7418038277FAD0E908C48A1B8FD98E4
EA36D07A87F9D6C0E5D31A2BB9B1494A567EB5016EA36C45F006BF7BECD97F89
0B6847370B5BC9EA4EA774B0595D87C2F5FEDBB500ED2A188680E41CEE552DF5
5A235EA7E738E9BFC10DD4C2B6ABDF8794929B68C055789F3E9C32180B57AE8E
CA4C6DA654AA4124D577D774A217D4897A261017117D7C5C55AAEF32B582FE54
F0B93A85F0DFC1C267798F5718CE4ABFBFA159B07ED5C93D976CCAD20691B072
DD49D3965FD79D8348CE3C1F8B633847DE60058E645058E425653878A1F10CC1
C84D2B69E1136A43B9372388E591DDE333E185F4E23E0A66DDD15BDED1FAC380
B91F8DE0F875032BC8A1930CA75318F382399E28AB06FCF0065DE36F91B4DBF1
2F6C352FA5F0492B73CCD90086FDAA14AE0CFC2742A66EF2BBB6B29D16487C3C
FA6F892AF5C05879B5224D3BB7D31681D75354427E16368E1BF924A8A0748B40
5513A645769B48F4B3C4262F57BB6A235DE12B38D5DABBD8DD0F6F9FD27FDA3B
150A099993B56B83709540C46BDA6AAC09689487F5E0EB021CADA860F83B7338
75079EFB568ABD139F70C1EA8869611D9D4D5CBCD692988A989C16915E134A47
A4A117A55B66ADF5E53F82A191848F9C630F52EB497E89B5F145D01D56694106
9B76780164C5A1F030379CC9E763CF518CF9E2DD473EF2D166BA507A1EDB1316
16EFCF91246FC75DE3D8AFCB7CA1B7CA84EEF0FAEB46F0B4B88192BB6AB1758B
6F406C357F05A6BFEAAEAC4737AB470623102FD547652082269DEB7CCFC1C840
AB18CB9C2773ABC9DD5B1A5F83AF6A90C0313FC09C2F4991EDD9FDFDB76A9F08
5962FE7F1251D652C1E371D57B511B52A4DB8F69D76C3BBB447074D1103036B6
95EDB12D5762D8075F69A145829864608FB4D78854124B117B2F35A1E2F724B9
928D3272F528B238359944962E09541FBB7A00956D1ACA7D8C2350B454C620B1
E6D5B8288CA707E7FA2C69204A46083988A52547BF7B3C89184B4B6AA619D660
B1402EE393F12610C83BFF918FC60843D1751DD0FB67FF10DD87E3187B485D84
58FF1D6A46682D801AAE769BE7F49BD6526B9B1584A4711E28698C37F1DF9A09
03B2FE9462811FB9AB1961065826D34C38C598D8626BFED7CB672F132E065C48
463D49DBB6803FD753A9E426992ED6BC8BEFEEAD4ADA8477F6552EEE7B621ADF
DE8A66A223AD7465B8FE6E531D9770EC0ED49AA31FA3F91F3F32707774DB00EB
977C5EFF7AFE7DC3807891D039AECEAC3F500A09579E6604D10675F1D60FCFB1
B6D26AA24377760FEA6FEE94FB119E8EB366AA299FC67178BBC57EB673F38730
E2C28D89F1B4B8DD91CB69558534CCE31AE7E157D0B060877F9FFCC4844A5984
1C7C7682105E23A374BCA91885E744912DF3620A245C8A5B229AD308A71FA00E
007F6BFBF96C927E23E338A655247C509A950BD2C3ACCFCBCF71FAD299F22A14
34E7D661083C7F8D02F91CCD580EA19FC26EB49BE412452247B0D8CDAD32D698
2637028A7DB25BE15F0AB1195D2F25778C99A04E82B1BE8D3870F6E3002F6E79
164A87AB4CED4A848913531321E4CCF342930683CE8B995EEB19420CEE8E6B3A
012AF00EF8A7E879A61719EA286FE90C2E836AC107BC883A33507560FEC3ED72
D91546DA4EFC75CB69B897C9EA83852D31F31DB5D0DAA584E4FBE6EDDFA3B58A
343725C742A8ADB8E2490D6B3B48CCFAFD2392C817B8F7FA666FBE36129A3641
9CD98EC0DD45A62C8B6CD6D07686293565232BE739AF0B70E5046A4A17B5C3E9
DAF063B335EECF830F146463EE85354BAF0C4AFBAE8CFD73A596F7C7AF437B8A
D4F2F5AB3DA5462EA74965A151E84283C2FFC9FBA8B7F9D8DA8836A078A4716A
24CDF975CC7EA03D80D1B3F78C5A27B19C016CCCF8AE794B156F8A765F5298B1
2F090260981F6C38AC8D43CDB3A383FE182EE89A49C28C2D635A298D6451C6B3
D02964A9D8352191AFBB572C2D61BFCA954964BD918A9DB9077118A042EB52EB
7800276E7502DEE57228948FA48884514D67EDFE7911E4EEE0C0AD432443B8B6
36C43D2B50F1EFE12D2352A8DFDBEB066F94C0F37AACAE40009D0682CAF5DB88
E408B799859A65C143CF499E5E03218E29844B569E2EBD6271DBA6A5B619FDD5
8DB3FD8695CC7E4D624573A635B65951DC366F76FC5B4C11DFDE03CCC5709F6D
806CFFFDB6FDF9361520D4422239A888B8FC65FD9DEFC68C0C2B37B06923F120
D2DD250D693391DEA7CB26D4A418E48A2989167B7DCE22F1803545AED50CDFCF
7246DBA338D269EDA4D6177AD9173235023D5E0F563059F9959F021413C8DC61
3D035BF22544BC8487EAEB01B65023A6FD20406E7E21859EBAA5AC022E22AD61
2B2F013E31B97F10172423BF5A5407F54179190726592F5D4BCE6738CC357F0E
B6F73D82D736703874D4991EFD61104D18E85A53B73A1FA96E48942DB6A0146A
B08A3DFE98951927F9C3A83202250796C59F8E61D57DE5ACECFAE9F3CD33E155
543275D8C75FFBFE827E47FEB12D4C3841165CE7E2B5F9CD05544030F7BD81F4
954E3E9F458653B6CA43CE1F9164BB0FE39FBDAB233679C8C3675A673E6E6554
D774D715491E2407ED9F8154824B719C8B575FD784DA7688FA287F7069D4808C
D9D7C18DD6A189304A5B5BD93348951B354102F98A86E317AAC4CEB41D8964D4
FCB5E4DD511B6A9D5A0C7973AE8E183D32A58D3C67AD87A413F6D9746B6BCFE2
EDBF4A89C4EE9C0C48A72985276AE70079BAA0ABCC95DAAFA46637704C683E6C
590BF2EF885BE65A9F57662C7908E0A47D4C92EC61C5342099C27D93A79D9C9F
278146FCE5B34B8CBD7B6D29896E8D1807150C2282F119071A2E23A9B9F38145
F1DACAB2F44A3C82D04E639C8A3488DA9CA87BC9F910524EEE46F14F2E5DDB7C
197D9B33CDA2861D1EFC1616B16091EDAC559A220F29084DD86CD873EA8E7DF0
9B18829BE2523F89F383D270C1312811B1D3A29D3668F7FBE41F4EF6A81C0F9E
BF9A4CF024C1D10194D7EF3EE7745D6460F94622AC516E9D777D6C65386C7E60
7E26481C02A184638BF92CBA44AD89CFE59081E3EB0AAAA7D87D8EAC69E3C8B7
7D780EF389B8367EC78E45BBE693904A72A20A1F7C70C68627A5356470BDE95B
95F19198D5EE9A7DB22D584FC7B6F9C35C47D639FA4FE1D6B6C4C7A6F71524A3
FC7E01BA3CCCB302F2F1DA611EED5AE7BA60B9974A0A2C7449C76238BAD444D1
29DD1673129711D3BA7C52C08E87AF023C833F2E36C296B4AF16F3A921AD5E65
45C414346FBDCCF69F29187B325AB3AC6F537AA03AB6FD0D5BF4C9BC3213A5BA
19D27374316C27000C17941474D1D90B1B2F2A74D00F0E54CD8D56C87234D559
4796765CBDDE8E2C7662221E2CBE5FDB8E63580BC6F3F69F041C7D00EE39ABE1
F010512D099E6991007574B51F1790EA75B813598D80DF5253EA093841444545
D7177A3F0A1E7CEBBF7EFA1DE6F11F14A2DAF8FD6991020450E767F2BAE509BE
09CD82AC7E689BA197B396CD462AFEF719B98A3B71E2A4EE7E20EF246C6E0A3C
23DF8013D65769CAF3BDB6BAA50BABE2CB47D7E251C0724CB34C69B407CEEF63
0162F27380860A97C486B629AA0476D37F812FED3DDD7CAA05A8DD97A96471E4
C723CBB45F0FADA7995818043B761F41DA28411430C42A3D1366F57F0124EE7C
8370B7A96738A152186EF35D59BB974980F8D0478935C577AACE253B118E0F3F
CD26977D99755C786C272911BE7935015193246FBFDAB3ED718CC8AFFDE2BAAB
56D5937DAAC2D54DD4EDC963927D1BA8B8233AC009EC59392B7E3FD59E27B303
7FD1752DF6AF33E5A6722A26ABF5A82FFC70D5688069D3A61089A2911C7D6C56
6DF75C3281ACDC131428CBE0BE100FC2D83D762E93668C0619E6C0CB4C42F5F1
0BEDDA8DE50A06B0937C0610026DFD8ADD7A7102DAFDD18952F92018C388553C
4C1DC0A7037B5A91A910B6AC680A894F4CD10296D1AB863C95186206F7453C17
4D514A9C4125B5A1A79E3CE4232E4A1335F1966DE7C21DF3510978F78875D415
94E6DDDE2D44C7385CC38494DCD832CC94C08F0492155ADDA8E704EC5CFDF86D
3B00CA7934C296F9D359945ACDCC8DA70D5339C919D9954FE91E079DCBA8B8FA
04C041A0E29BAC5703A83039CA96985A76B61AAE665224EDE522641BB0C9DC62
EE166334B9919AD6EF2876532B64A356B32A047802C9BDEE75029E991753E678
D013B8AEDF306CCF2727CAC4A13B4ACA339E375F376B7BA9CEE602E9075C5E50
9FBABC9016E62D7D5AC2A95EE29650B98ECF391A95DC4C962DF3F79C7E16FA46
3D1F514335FCE76315CA77389A431B2238DB083AAC5E39450EF20451EA02E057
2FA58CEACD61235271A975B0C11E533ACF0668F3288A152CF5343F52865C1827
BBD06810473DD85A580AE391C17BE4638F1B649958338E69CB56B870CDD727F0
B655F71017568EF083865FAFBB85EB69A6E26A45CE2C98622A6A385B447E164D
B7299AD6D1BAADEDE43E477FDB504AC6B808540C553DFF75F3A00495714800B3
06BD5DC235EDBFFDEE3E46DD584F04936B53C3C81CD9E76D9B6CCF78220F28E4
5A84B0FF35C585C18B19C61B51CA3E6C3AE72F666D681A4FA8B2477893175F30
08EEF551C2574B69A17F5C62AD9CA923E685213D53BFACB55EF49BE17964147B
02C4CA4F0806BA52F8A891A88B2F519575FD86F61DD7C7EE5F015B1BAE83E79E
3BB86BC0CFF599A80F5C4AA381B8581DF3F82578AC6FFC9216A06EBC754DE4C1
BE1E185A26488ED6138CF334D63A75CDA61370B656188C88BD1E7273E1A42F36
C0C6E0FB68F94CEBDA1CEB0CDCC489BCA1DBEA94AF6F37027434E22EC932CA5B
E3B470A5800B4FEDC4A99823CAFF87E567B96572BE6D9DA262C5151B948E529F
0C7A21052F1A28CE343530C96B7E92807415CC510ADEC7AFAEE3E54A00B1CF2E
9D4E9F057BA99AE776E482E332FC6F4EBD5E2952106E4600ED59E41847A2C431
ED3DEFC7267AD9DE87E23C236E70E1A6D7602606094B0C91DCA122F0BB3D4FA3
AA0CA96DA71466748187222315252264773FDAD954D114082DB6BC7FDAEB7C85
3A4B7B464A26A459F4A2593310245B1B9E7B8A0B7FF55338A74D2023B34333ED
B0DEE3ACD02BF724CCC2FCF1A0B58CB89C444F4564C1ECBC4CA3C544CFCA0D01
A294276F86BA1443F753A7BC8B7A60E9C5DC48A3DFFABC322A2A3F62BF60D6F2
439E2D50DCB82C026ADAA0169B6A38F6E8D65D483940C97544F888E9316A1381
F8185C146C3B2548A3817DB684926C2123318D4F634AEFAE03E5D4BE6B04697F
F3ED2A83E6E7875D6C2D53D4216E11F852EABDD845959D6C4CBC644B29781604
7EB63717E2C06056A800155E42E6B63290DABB71D4D1B394D7AE82EAE4C82760
C5849F6FC5FB394169622625F2493AD95E1A2BFFD0BB023BB23B95A95C52C138
94C9156315E5AFF47E4041A45DA7B0CABD8DE5F42B0018F834D058A09E910DF1
314D1B5A2E3CA886E10296CE26A4E176415F55FF32E4308FE22F0D0A45B8D17C
B74BDAA4BFF6DAB5380CBF6172F37B84598335AB3A61FB3C873145863BEC1B5E
8CAB530411E7B006480769434E9BF13F872380603A47CE5A30AE40FD497F4586
00B1A87AE31E65B7EFE7B1CB025613E53343001CDEFCD8F5E62795B990DB5F01
7A12825C0D642263A70EAA178D11BE7F34711A204432DA217576D9871A8E8784
028006F3F3248B5454ED6DC729CC5070524D1F1367E7D491B5803E4E32D24FDE
0B7C56732957AC35E56C635F6B316C147E4148F43F68B433E736D2E15CBE3A2C
9D93556A1DF4CEB57A1882F307F0EE099AF080659A1C90D89200DDB63772D73C
36E0280F8ACDDBDE5CD4F70A7A98F5267847CA1EA003CAAC24B337D6B2A8AA99
A53780AEAC7931FBA708E4052579960B3291B0BCB3D6138198E70881E7FA290C
6A3B164722FB8BD5CDC14E7E20CB3586C815A75E1C0585250D9F6F52025D82AD
E11AFF1EFF8F6FA46187E0BED9DB2F1525FF742755D9200C3C1FC2E172E0DCE6
76DAC7827316D2F90B3326C12523D372BEA69688A21D6EAF601ED4810A03B876
02F6FCDFB887A83C42C50F08E66B611F543149B7E31EC9602D4654DEB38E8E94
225D8F864E791EA6689395C19ED992688C38D5AB822DB77434BDC79A29F57E30
98ABC7EE49F007589A2A08E976226EA7F091A006D3E457F0FA404657430F1CEC
53881DF1B3457BD811E6152E7A6DA01FF8F441690E196B19402154F4AD4A1522
5015497AC2A59B07C199F94E3D08301AF343C837324B9EA595BAFFABFA38EAF5
3F517136457774C464F3D84202CD343788CC991B61ACB6AD7863E30EF2DEECFC
D5E0AF64571044339C2037CF6834EB429617C33666A20F94506F7AA03CEDE934
367F083F6561C939669E28B55BC3323D71FC7B4221C1A677B413EC24C29DA1F2
D33041FFA5D3B62F29CD0570748C3BBE64AC88813A2339892CF290B7D9CD73B2
B2A80AB7B924F1BEAB9F601CDA2C40EF93971D344A24F67D9508E4AC3D5068AA
B174E0965F73E7B3A5F532B99D116357AF029CBD77D99A1656CDB76C9282269F
570C0B57ED78FE33164934EAB70ED3852DB084C16B6097540C5C81A8CF53AD64
448E9130C01AB94B0657A5490D7BA7606326881C5A6CCAAC22D5454B2C1EB503
764C5B0691B761FE3254E951B3259B2EEB4FE37392533D3695FA6890A620DD86
3BD5364A28DE4283D9697AF2F4D165B73683B97280E3F8CE4547F56244DC6838
06DF7DE0E28FE4D056969AB8C04466F6B2323849E5A87116F694B78DE928155B
9D611E085902458C96E9107074347E144EBD38FF9C114D75E7B867C216989AFA
4EF66975C7C64CE5EC2AB958361D31BD648E1C0291A57F6AA25FF78D0E59C262
230123C5668C34A7178C9284E340D18BFB0BA4BEFE101D5BEA3B3CC5C384E1FF
F89E502CBB5561E9AF3C9B374D73F52611F17AAA550E93C8B39DEFE59FA506F8
812F8DA2BE72F0827246FCA44E4A772C5FDAAEFC70EA6D36AE941E3291793B66
598F7718C18CF6B0D1B1310C75AC850FB4C642FA3710C2C99051FDAA642A91F1
947AAB4A780D034BC00B16D7C4D77CA697B044812DAAEBBB8006F056F294A4A5
B77983DF1D1B3EBC3640262FBE15DEED450E81E397D0ABD05A9CB3E301CBB6E4
5FDA05D04DE260D94722956833588CADED91C5625989AFE8DD9E0B1844B116CE
5CE8DCF4C788F037BD3783D1E73023BB66A4AE15DC7959BB36A10B51E9638794
BEBDB65521D0010402575DAFFF833C4D59C1941E14E0BAECD4A9FBA8B9100A31
AD1DF7CE7CEDF45D8D75B8008CB234A10836AB34663A141DA69B46D41A04EDBD
E8A440911B183955048D808915D7BA588590785C36322BFE321C6361D12879D7
8AC6396BC3936BD40FF1476FF54922F2FD14A340951A0130FAB6CF0B56BB38CE
81015FEDF0CC3F7275F567D40E28BE131B0E4314D86EF0D6A8F840F462D9B2E8
C1F2B51F6DA60AD71029BDA0BE43A26E6F18EC0E9085AEA66291B62D69D698EE
B767B641BCC569A1EEF8A12E6263CE2C073CA42993FD8CECB8E7948261EFEC90
FFF20B1FE3119DA2CB9F6DAD1D6382F999E9F0692CB34C1344C7B86466716272
82A8947668FDF9CE6C611CD1BE1A3FF133DA6279F25F80B39F4A584B970D6156
292B8DB08399673F0DC75F1BDBE806E51B2946873E90D509B25853AB0F25FCA6
BB860E709684EA675A3C3C4F60A604BEF0EFF30EFE00E05C08AA50EABE80B564
D7AA72D05EAEE83D45EA12B8C2EBA316F10AFE920ABABE1FCB5723D66953BD9D
0A313F39A6A3DAAD30374F96FCEFB063F4E02A5A1B8F12733514B688408CA41A
769DABD9518E4DFEAB5DA339847235425AC5056E7AD9D54E4DD1BD7BEF204EEE
7DE594518B78765EE60502B5D4D8FC36D030FB2B0EFDD9A57200A82974EAF0D3
6C036B66FE05FF7E29BBBA2C52EE0385F33690BDADA2B0D538EA64AC7CB9682C
E60E17947E7E675D19901C7E8272CF0D458A8B0CF51077748D1F0A95AB030712
E24D053E101C9FD35AFEA96E669B1101E8644A4FA79BF0E2BE0D5D63D4C494AC
CCF815B9A464B3C0D47AECF229AA1EBC2E208024F3703B6B0716899B18263C29
2E1E8332654022615883F3B3D95ED3FBB8E563C2CC64E2DA3631AB809AE0FF99
F0DD777666B14EB7C80CEE58DB653AF6DEBC59D3AB82A2891C3C5224977B9464
55E674261A0932ECB029CC6CF4EB93729D362EF1C610E85FBBFC6151D81BE225
7C3E7C876E836A1E6009BE548E105149EB6052FA14D106E242C213CB237B187A
7B54F41B54433526B5BCF13ED43C4C3DD6C02669F517D7458EAA898572455534
CD8DCF13B125739FAB9FBEF8523676B7509EA7AD0D2111E3585BD961ACC52E50
F44E54C91326E481093C909067BED686BA113C18825686F9ED9588F06261AF3E
8D1343D17A35A511312DB573060A7E73001ABA76E395D789B19B969F25140187
92CA5E16B365ED83C24C44A68CC2E0C0821FA6C1C3A5B210E9C2146C0797AE35
5583D824B2BC3C6BBA9B877B857DA39049F5887F6C75EA22E2C1A23B0A23E741
9FD67B5E29F807987F3637173FA779ECF224B222F7278597CF205683610586A8
BEA497E867582A17B16335CEB85520A70B252F935F7CDFB69A1F8A67E1041C48
2B300306CB5E11A1DF57C36C6E9EA13C0560C3C8A14BF98C1530A3598F35E26F
2E8ED5D8A0B0A4EF950112B2A40681ED8E00E63D89CA32AE0687DC232178A07A
BFE12694DEB838C8B360EBFFB8D45798018A310214E9BEB7C62F58C1E729F224
EC05FB4EC009EF48E7E56CA2A9F84FDC460E352F0263ECE4B0148610E480FB16
13536FBB8EB7DE66C5F0C41B72060988FE907F39B32311E32A9B1946D8CACA5F
0DCD4EDF3A72A9A4A949376BC805CA2A372CF172D46B6B94412E7CF8B2C54489
E6D6A897790D5623EB7D6A90860842964426D9E506537B3F8B4366976D3F56E6
CF780B37CE39F605793D904FA4650A8AD23254FB4E9E9E4CE34660A7B6C08496
7A50FB5E53F0EA8ADEC17CF4BD5B6DCC5F7E835C3CE7D4454AAB910F223E3FD4
0709EACEB5AC116266894AFBA1C099D37DCC25C54AF0B2552C97BFBD1C6C0062
488763FDB07939C7885FD686DBF6C8D2BCA099078135FDF722D4C99AB28D06A0
A4080A732B877EA2DED6026CFA1807B087EAB33A3B2BFA56928987EB0BBAF4DC
72DA6B4EBF8B9D022DEDBC3DE44DD04F6367E04C3CBB3400BA3C1943B874CFB1
254F9A99F998AE7D06DE000B4293F4FCF1D78EFDE074FA6A057A6822533E61A4
C1E2E7B3AB456D19D9769EAB62AD01CA1E0C4F2554BD6F1F4C69E46C9C220B8A
6643077B74C1E100F1D9DD0E0ACD8468C5EEAB6B8AE5324CC077A3B24AEF2951
4FE023DB03883EB57564AEC4B94B42E8849A76945AE033F5D1C37EC63530A2EA
90F559625C437D4AB2016C4670C92D7236CD1D199C612555168BCFE359EEEA98
E07DFCAE1DA5FBE871D8035F777CF210384EFC671842C40D188F4E304C4610FA
7CCCF0512FDD24CB36B1F63F732A2D472C414FAC37B3A34E1E9C8CEF668572CF
91AC3CF6986C9F252363A207D88AB66A7C0DA4A116B14F03AB13D7E149FA176E
E68606F0B35312506C02F1A2826BBA36B4A8C4D61A96C406DF4CF3A843159D3B
AA527954C016D28FAA91548361B38A729CF1E6DF63A016E3F17980CE3D505216
E026DEA02B7D154B2882A031A276522741ACE718440F9AC620FFF89CFB7FCB19
55C7DC8933C690E226CCB41B71BF28FE6AA68AEFC449D6F2C5850581D95905FB
83958C19FE475DCA7075938672E207A41ED8B17A35CF2E4C380E50E1797F8558
26EAB926A054616AB45BAA486A85DBC2F45566226D9EA08B48360A2C205DED1E
30409EA873F16CF157EABB93758D7B49B76DB0ABB2C2646D3F2500142328D8D3
B40136F3CF6DB796FC6949F82AFF3FF151EDC1EF95339F55314E30DDEE869CFD
0E6BB75FD52D81EEB6FC227022120BEF4803811BEC75CB029A6DB10FCE7B5992
5A3F5FB7DB35B3D7944B49B6283A0129D49E7E9AFCA904B37EDB25A80BF2A041
0C67EDE128761D164A9843955BBFEC7213307B78378D8CAF1E08E1C53C079B8B
EAA3E0F907086AA23BCD6FAFB826793EBFED8F1CDA2D49D7672E195B09727629
C1A422D0405FB9B60B749DF353AFF70433732530AB1063F98984CC6C46F3E412
CAE11A023ED7D360444EDD72A0CC432E23DF81945A0E9729DF3EE2000E417BCD
E241F0C257CAB8981A6EA85C135F60246D47ECC90571044E7021EA984A40DAF7
FDF2FDF4017F94D9D89F1B6F249BCAAC5E185E4FFF0AF7FF5CCE31B93E4048CF
BFCDADF56B75CA51C950537F9643D44B6981772E8546A6D79EFC00389188E5C8
2D606AB2BCD7AB93A8795AA46773CFDEA40374D87CAB4A5DD8C92695818BA435
6E9666091CAEAC8D1832F2AD07EFF1919E9BA90194E24A69649F0DFD0046D39C
47645DD6E78973BF5EB3A43922976B876293A1ADECD08D35588B794EF9FE03CD
D26508432F9ACEEC0C86CA4D7F8BF0DECC07116A05B5D6D42730459DD44EB860
468A7C643142F5804346C1264135E15756B43D90E252FBBC1F618530BACF4716
5362C1E0F6B93CCEBD0545DD362FF49B08C9033A1E95F5F8A1717DBBA7AAA1EA
72855EB4ECF4832F29721F2965759EDA7ACC778D03F409DEB008EB2142A1B4DC
97D164780529938A4FA7BA0BACA855B706CFAD5EFC9D6CA122FB2077E554C9C8
4A1760A73FAC61EF6C050296ECF0188950E744AB53050CE216C0166D14BAC758
B30905B56CCEDE37F37167FBCFA2CC9AF077A23862B4ED64CD18471A49B62240
FEF22F4D82468BE65F424F267E9713229F7B3ABA30559D9E4B6B06AAF0053FF6
A81D815ABB1F31A89E1F1F3F3712315F712F719E2104FC38B591366950DCA065
662CFBC9594DDA8A2D0B424F25A1A8E0DC96E47F52F335D4EF5B45ED1A9CE37E
2A2A6FA2C2D8A082FB786FE87094992733E0E8E7B556BB4DD1B0EFDAF667A918
171169D8669AF155525E2C91A8525079B97D9FA6FE5B7DA4A263813F972B036B
CC08CCB25B2BADFDB659F305315BE273E5D52D4A69DAA10D9AC7B96C817AD352
B5C4397872ED1E0BA765B0309FE98988CAFF8DCCEB5A97352B6F2DC523CFE336
6996B02D210D844B1FA28AAAB93DC7557045787E987A0B316211C89EC7A8EC3A
02D70409252A8D4FA50EF1BEBA5095045ABA7952457E62E4081D591C36369479
139F23EB1F9D299353CDC99BA9CE2DA27F3D413173D9F296B3DD186F8C3F8658
C91B59C58B51B79E9588AFBB6A2D10D335B76934CAEC6AB8785BFB6A876FE189
F7500B393E531E77C5D38E2FA764893C50807D386C31A52984269355B641D8A0
414D327EB4BC88FA87B910008EA8FEC3E81B8D3532498E7875E1593E1DF8C371
9500A4C4A0951F09F5CDA85FDD822B626F0B4DF1B16AC3C8E46642D95E4D5E8D
E9927E16E5582217693A50FD1F5B7569629AF50EBCF7152E3715510FBF60F167
5356A9FECDA71F649EB3C250BFF809D81E427E3BF24E83613E8242308FE26F51
C5F52B538A85716A62F327A107BD87346338B9DB6F83FE557134C14144A554C6
2461266E19E262F020AC43AC01DB8BD67102E1322FD08D6A1AD08B87EDF29D57
6787EF5896E8747BD177565DB814951BE7CFE6591438894018072909D00732D7
1F63668F46B20EDCA647E66B811F82F08DFAE1979E9ADB992C57D4BC9FF7769E
0A6E389AD0B2A5D10CD4C41A40097EF750675B8D8743FC64B26BF9E44921A707
C2CF3EDBA686132F333DCAAE5B6CEB2B2A3C2A5085BB0E87DFD0B90AC4B62BB8
8965B8D22AB04A724DED273BA060E797C1BB765049E61C0B63D478DBD9D1F904
EB6959B1D3A39766501356651F2B690A9445963F346D0667986C994880FE8971
FC86F06FAA5E98124881CD477B308B5B7341714EB80B6C57DDB50EC74C20E497
DF8C5D90DF2EB6F0AC1521FBFD1538DDCF25F9748E9C7C49CDC758CA99C4B063
212655C879F6EB96BB55BF5157FD09085730695ADEFF8C47E610779597A25E67
8DB4EE7B616DD99080BF793667DE800E6DEB1FCFA76FEA448A60401A3B11DCA3
E9524EAAFAA83DDCD78D676E71B6C51A64A87FD82AC7FD782D6126DD787FEEBC
4A63D583CE7227EC10365966AF2C08726F27A20D095709F949F404909374B2CC
B0B57BA8F2F422BFF55CE7D534A2E4DC1BF74D5A454BF4485E2B7DC8C9A39E76
8F162336CEB7BE8A5C27AE952F4946D01DD1D65C1D50D6E1D486FB5FDBEE9826
DA01DD8FA5EC384E9B78FA5A7F6720D207815F79EEF626A126E8005FCA77ECB3
172F5199E5C54611D9D515EEBB7192C63D22D02BB2A5A2727BC0458997642898
4A7DFACBD3FE28A8903CB42EB0ECBEECE10F4D9FD0C5B9E9F3A14F9BFBA60CA6
556B0473D5BBC4C67C2D25384D8E7B9EB31D79E2C460742138982CEEB80F3AA6
BF99216652ACBD7F2F5349E857177D94A431C46347867CCB8E4EDFC64B532A24
C570498BBC81C4FBEB957EBC6BE93183DE178479FA333A00B88F0BA650AB274E
35E9F7715EE1E8617FC7BEC56879D91DADEAA25F850083BE6CC26AE7437664A2
7C1C6EC83AFCFCF697DCC8808A931CB62997E29B6877A1BD00BC1A7A9D57AEF1
E1DCCEEBAAE87CF5DEBCE7349981D834A1E8AB45FFE334532FFF6EE351252820
E234CA2EEEB4DBB360CA7518709F74BCB9FEE4077CC0C490F7C2A4855B442011
F240BB7390D79EB357A06CD67E2C5BD39E004F55F754A8E2469082BBCCC3E63B
027A4C3DF0C328E89C5355F29E7EE697BFFECCAE75C27AEA6C7B73B4B4E4A0DE
B874CDB1570739B1A1A213262E4D4AB784EDEA3CC6F0872C28108F7EBBF5BF77
0C0BA6C712287CC741D17C19DF574028247317FB22442B6DAAD517B60D75302E
7A8703A70517C9FE24A6930AC314870AC4D133C60D9CFAB56CE8F8D14472BA88
3831DE798AD51B71C2CEE666A5693C95962D6AC49F31A5D39135CC8D762C5E53
C23CCF67CA8BF1B1274494E363BF0890FF5C1FB5FC75FD528B2FC34AB914C268
C8874E34F01A8F3E17F33925DFE5F0CF45E34F3E676F57892E7B84E9F1842147
0D2F0274738CB7DB4E9A14291AF15CE3BBD6B3B90E59C99B4085E7065FB50E28
631D2A286B9862B0C69172A7B286134925909155C60AD3A77AEC843DC75C97EA
CBC20908E329F5DE8442FF13EBBD0D06D7E62CE534576EC62AE892310FD56056
AB112633DC84FB7743B5F73E9DD0B021F9ACD205A00D5C6228AA1D43F1C6F0E9
EA338B2E8A829D5D4EFFD8613B50B2DF38EEF34AD0B05A9F13D36244225B77A8
8166768942CF7E11D8AC59AE55F0F7DBAA322E1E5D976C33A4C1B9D5384F70AB
C8F9F74EC9689248EE97D7DC3783A048D871AC6F3464517ED20118D09F22813E
9A8F6B24CC94A37ED7FE37D7D03026506C2132A9A68ACF4E48AEA4E44DD23AD5
437110523A774873BFDB9AE479901957507D4B848A373D2FE906518513D56A96
586FFF4CDCB491617876DC12D9D703BBF1E814059F231CACE3B876EACEA2B463
B4F24C1D3D7510A603C11F295FAC3B649D8BEEE2DBF85283D1B3DD65CB510702
758F21F8DB9FABFFCDE8B4D3BF99190383F85FB9B692A0A29241EE13B4F6714D
41A2DE46FC28194AD2063A1D0C54EF86D11A29D25C36591746DD9783CE80D770
7A404B5B7F34AD778608F4CF9EDD7501A2AEE2F85AAF60771CDB854398BA98AF
AEC951690051A2662DBE19109D42CF3575A4130B81E97C2A9BC215A2E2A34BEB
5AC89CE072710DEF408694402960947DA3B6BF54DA82FFE0222F7AB0E97B3290
EDAED775EAB0D7D553F222A3B014EB44EE9624B0C96706BB7AE92041B78426E4
C7EDA2A77A7C129EE67D6D67C2BC96C880A6B435F850206D0AB69B74A7E9FD53
8C4338F8DE787EF2B604061C0118BEA317D3620FD9DDBF75FB63DB4ADBB1652A
3583ABE38CE55C584D2618007F4825DFDAA3116D2B7E450C8F7B16278DE567FB
37E8F702A228AEF49047078B06C8A968F278BA7BCA00EA900B2FCF2FC9ABBC03
23617AFE301047C9646BA848529E3D9DFFBC86682BAC2D53944F47E4D257CB17
98520F27F65D75B2E795E40A62C9EAC215ED0EEB650262CCC5BAD1744FCB6DB4
032EA0C0ECB7BBC044D8B0C662A0B19CE448D189FB99AF0D7FA4DA1316C3C527
9767142D132F62E0029C751A0D375757D95AE364394FC25E6E0D02C6840ECAA5
EB3D39A3B9FDEF15DA1F1505CDD37755796CD5F76FEA4D8AC7A08A586B816A9F
BE78FF96BF1E3CD52791A35F612F1A0E540B3911A7D28491883B928672AF8E70
6194412994A5A0298BEF561152F82FF64CD3298D11287B46482FBEAD4031D9AB
6265FB6BB647FD9FD95E0A2BC79B11AF3FD1E8FE988132C26317BF8119C2B534
65DABEDF733F2C517D970B01BF2FD7C2020471CDA35DFDD2FA7A020E5B8B0F4C
98521838E9ADF7C3C36287440EF39417ACBBED2D94330DDD281BB30948DBD034
3D9ADA66016E6C568B9C0A0C4A73C9437FCF888AA207280ABF9C548DDAE35A68
2EAD10C1DAA94393A66FD95AB6A2D50A250A419C088A5C5BD673997CFF6D5945
3F0E5D6CE8450BA1EEAF7D7C3B6E355805140A2AF25AB7CAB1AB1294CC34A4E8
E375F4819B5D5BAB08023365C6CA5F6CF88C1ADAECFD2F6924A20511364B00C8
08BF6BE47C4B4E4883C2AB94F028FC392D5640C2E2D75914785C1E4BFD2F9B95
CC367594FB2E0413071727F3BA34DD5344505F8A106132DB61FFF7E53DFF8484
9ABCABB785C4750138BCF44F6580ABCA6F9F85908BB347934BF05C4372D2F2EB
AE7A00EC62F51FE36E59F32EB5FF5F685FF9DA9B01089744351A1BD4BCB8982D
6AE5E796ADCEC43A85122841320950D78CAE1810959FB8D4B5120DC96614A973
196AD2DA4D364F328BFCEB747C734B4712ADD20899D0C5D4DE513E0D6D14A398
E0EB8FE23F24120E566AABF41F029DAF6B084EC863B1E81AAF92AFCD60F29551
F39AFEF242881863574EEAAF3E8CEAD9E2EAE9100724E22B70C2130502A39030
F10073DC120969CAAF54CDE3A47C1CB8FCE97486061BA69512EB7A36908C4447
14FF24C22C90E9B1829AECCB3D14EF447D7E09A12C41EF74CFF3FE0FA22F231D
769E8F0EB6225C7E0A9D5A5F3B8C6B5AAF67F3E2F2C12413F757EB1ECC66A70B
EA00BBDD491FE613402B177E1391FD90243A28EEB9D354ECCAA48FA831272ACB
55BBC403803D09B9E94DCF2543557EFBC166E9384CF3AE0F9E15FC4288FBA0A3
DCF2B9AA2680A692AF390F3467DBFAA0B2DB6199ECD01315E4225B23ED998AED
214BBE2CDB5A74BE21DB729838FE3BF252C6894A939DB7411BB2037B7C03061B
9E7D8D87FFA7C85B7701941DA62E7AAFA6ABFC9C4439815B40F60DA613291E2C
020F6638C8964DA68A5FE05749E9CCC94D660A039C83ED414F9868142F4CA9C2
D2F705DD34C471C23E92F49E0BF0A662C7FA055A29EC31C380BC0884761B756E
DB71A24D7FC4886CCDF9C9A48F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81A
9AC387913FCA9209F9142F9CEB88DC7864ACE2139716A8B8BCE22870B2A8AE03
61A40FACAAD0F82B44B4D6E4ECBEF48C6E2F39CBB2B53B18DF7F144E9FD272CE
6A23BADEFC0FC80B646A2FC08C8AA1C44A2A00554667CFAFF8A417D246F28CEE
905824D8C0FB19279F86AE6C8C6B3B5D4AB4CFAC640686BC6FEEB9C1DE214972
4C015A2D62C7ACB01966717F9C4AAE6203DBC7E60275D3E38C7F66058EB798DF
3A42628DF4378C539BAE628054B5C31D23B50C2B33943C5AB05E8304A43319C5
8B569F751361768EF816F30DA12ABDF5C63C5B1602823BBFC0C03B7A421A836A
CD4083FDE377A8E800BF093CC74B3F067CC1DF9F37F37B225D1A63E440A719CD
8CC6D148F1442F1386DBC7309C37D13848552D03C07E06969315884369E30CFB
BD715C131435EE885780EC50DFD4D90B568153D7F09788C8877FF9D119C062EC
9DB71DDBB40357DF31989908E4FB3FDA3303E6BC7EBC8C3F90ECE5DAE3E02206
E93022A0609D842ACA6AA03E96F8C117951E672EC54FCF9A8273B7989D201B16
1E870432822FD897B71CEC0427D5FA06B29F527B6A236CE267095F2193898745
610FFAD3AC143DC9CA8CB1C3931E36AA844248234F51BCA6F444C2905A4E241A
269ED51FF329D5C0C86D9C66ED01B85534A1E39BD5C20DE216B33240C40D188F
4E304C4610FA7CCCF0512FDD24CB36B40AACA15B0FA0098083597E359F090380
51C4BC551BACA6F728980ECFB1E999F4E0E329B15FE526F0C6285E5D05CFB53B
F7212E2933DD050FB0820AFA1B2ABFB2AED5544B06AD48DAD5E377C2F375CAD1
3A904419D9E7F6D38731EF1E8CB0917657EB749149E1D61A1EF50C19E72FC8AE
9D835BE39DF765ADAAA523C72A653D19D310CC10E9080C619F102E6C0EE4F80F
05C1AA36C2027A88763A7F0AF2DD0CCE40F2CEFD4D785A43264BAD874D4FB758
1C7082EA167108BEF6F7E34D958D6105130AE25923E7EB77C0FDF5286780C376
3D9D24E27F7FECB251C07A0CBF632410D7D948427FF6782B8850466A1FE66362
4FC26E88758AC01C1C98B568253442AD48691C2A47DF05F6A7466E87D3020FB2
D824E71394F6605CBE638D9A6B5A0DF28C4D81535BA76F76B16C6815E977CA50
513DA81445E93555250A43815E80B39AC00F7086BCB4B36C35CF2E4A42B114C0
7AC99ED39EF436CBA30F8EB1A6E543782DABE3FF805D54945D6DC2C09A0F32C2
954C689BB04A12A787B88A966DBE3F4C2EC9888B56E96241D345CBE471FFB513
9002DD5225DAD211F5C72F3127A60A33D311387E6DBB2951640D74E59891DDBB
4526022E00B54489023B0FBCB6540E7EB3B2ED0460F81AB38B9240BAE8424443
749F272CA43BE6C9B5CD3E674BCF858A46BB2D1898684401E25CC37C0FF9DB9C
5064E2E468F5906C1338EBF0AB1F2B5C97A5E4D6127212AB225F2857D0014DE7
F40568FC538A0EA2E76E1F62790DA67887A81FED8BABAFE9416AA5E06C7C4C60
0BF38B70C87E5ACE2C713203A64DACD5FD072694C71A3AF841F9E3D07C7B3788
5856BBA23EFEA2AB1902F879F1361AF8C0421A296FEED926836406E96C49A48D
AE1DA613DD54D9C840D4896A183FF4E395EB7A69DCE16AF779DB5DE506A534F2
9DCF33411B194DEE2EC1B99F36FA1A11D14A28C0E938F608AF10E3B31B98C36E
5AAA15FF94A95B38469000FBF31BAE9CE8703754A099D21B3329E0471463D457
0D4E89F4CD31A93C312EA4674730466C3EBE9F8964D358AA76DE110300CC7B89
8FBD8BAA1FEEEF4E78760F8A25C60981E6372E49D71614BB4E6EC7B1ED60BBA0
8F874D9E1B1661393BD85DEB50C29E3DBFD4613BD0DB2A70E57CB73CEEE6A51B
72B52020AB471FA444491570EBF12F70F2863F9CBC2CE3E571F5D8ED5009FB80
9985FBD9A3E99D1D6124A3B4DE50749E55267744E046627E381FF09727EFEBB5
2E59282E0199771B95DB671D4B2AD846EBC0109861075A936D6F2508D429C625
85777EB9E6E9DFCA889F03CBE5A9FB59C55523ACF1E394505886FBE4D6F739C6
6BA65248D16465F0743C602C6E12438E7E9CF6405EEAE7CDC599E8BF2CE72DE9
FEDF547B68A41FC346A14D58EABC55ED2D98DA057A876FB35F46EFA6A949A75C
F1DAD4E176B50DB98341C8D442F31C7CA70CA4411B4511BE399A1EFFE6AA02EB
E529146BB9E0D14D16625D3C830ACB43B26371195013F74FC07E862198AB570F
44DAA7CD767C726E7BF288414284CCC3E6FB3DBC5D11E9807F8B247CB591852F
EC9392079A91D02F4954FF97236F55AF6FBCD9AF0E167742D0BD0E131BE7AA98
E955D662DC9AD78F82C29C3DDC08B6A551B0CE96E180903891204F4EBE911581
EA3BE89E4CDAA342B9E52F30E55B902ACC35DE87E70DE8EDFE7D803CB0770A2B
0B8180E5389A54B85BC69FF37B8CE078CBFF5CC6F11D65E7B61ECADC94491C5F
F034CEA604CDF5412886758D49CE07427C96AEECF83C52A4555178C7AB4DC1FB
491ACDD3A0CE09DF3D2AA01AFC9DDFC002A9863D9382764DC241811B3912F36A
B2CB1440EAF4C36D14A899C877A1F71CF5F205C8FF35460B37921BABF917E5CB
A23CCBA7C46C157E3088F4D1C99603A5AE29019C97D03FA54726D906264C82E8
AED7E4AC8F66E56EDDE14DB1462E4F9859384B15882C6B0E2219186DD528D0DF
17F15FF78FCEB2CA616D526C530E1BF18C3FC7EFAC5BC5F623465E81758FA863
78485C3F65040DD351580824450D62A12078BC053A65AE1FFA91D645A9E26C29
A8311282A2DFA57985CEEF4463E64E0B7DD8D11FB10DC168A704C2C70DAEC483
F6942ACFB86DB9C4EF5E16FD6E2A4523B99D267AA808751385186A779C73E575
948744853BCF5547A7870E7F6196444513F4AA8D5FECEAC8EE88C8830B526ED9
264D4F56562FF445F348D19317A058A4FCC154CEEC13E60A53EE79C07932518C
BCF295C49DD58CF10B322634A4B9ACF5325B842EF91A19C55CCA6ADEB88B59E2
4FE4A96A8CFF57627DD17FCDC5BFFCC5CE9C78BFA2B830328F9A6D45FEEC239A
D76BEED158DB3BE2DC4BA1DC216B2D085F251E56B085F80C7C11DD39ACDF31FF
8D01256B7CED1EDFEEE0376E57B6E45D2F375499F8118EAF5C7F6607DAFC48AC
6FD2258F0314DA293F61D30028BB0FB43F50BFFB3005B677A74AC48E341259FC
DD1E8D932840FCA3727301C942C987A026992772DC2A0B06D5E4AB1186D81001
AE4288BC2EADC60BB6225D9CB6CA887922B117EB0E7F81000CCC4A20522124F8
B7DEACA9E6FB322B9B66DE572DA955FF06BBF51728AE6724360C97CE27BF0DDC
551716E8E06DDDE418B6E3E407307088DF1BF21C09F61DFBD19C30D92CBBEDE0
59D026A5A2D9B65246D93E36A7276E70D11DE1DFC7E967F6DECA7277FCA73E84
1737D9AE81C25EFAB95DC9FD91A124F9F5AE28E844C6C3EAF7DAB0FEED7AF2A9
13FB2CE66241C5102CAEC3992BEEF1999CE2A5574EAC934945ADEA6DB4E4DCB6
4BB074C6094FFB7D2AE0633C33C8E4823681C0A61ED898C571006202CEAFB5C3
E352E7F66C743DEB4EC14A3AE0EF469A2CDB23445830D0F304FD7A9EB6B8AEE7
919322D2FDF6C7D7906EDC7EBCD9E9B6AAF63DB3AFB9D9B87CC743CD66342BC3
BABA111186A0F38F642261843011FB3389DD944969E83C1B8315BF63C3BA9B84
9EDD5F620C7E451943A4E3868D2F9A6B78E6AC615258E663C9D255FBECA07BE6
FB4B14EBF66B06D640012D108ECD3329117185F2DCCD3CFCECB7224FC5E7E437
7C6E1F717DD65F6A274994CC40546439FA5A60BC3719653E525E49FF6F778D8B
ACE4664D86C8FDAD35CA3EA60BE1E28418837CFC7209F4A7357804EDDB05D506
686757C79C2ADE54B913F1ED476E3D86BEEA512B1FC55E137D23FE61B7D69D1E
E48363146DB3EB9914CE42558ABC90B623AFF1FA2CB3EE64202B74F76E195C0E
3F2B12B433D7DA1F634865DA6E5ED7511E1D930D074D76A35F19891E3842733F
8AC91FDEBDF9F8A426019EAF34A2B13634F55E964F8B7C21D937310590871C58
2F30C6DF5FA2097A078ADFACAE547DA592695486DEDA95AD49D2958D1F43A3CC
E7B7B9DB269FBAD050E6082D8DB99454AEF0AD0088753DEB92924B8AACE496E7
45ACE597058C23D84C0FB8BAE6E8B396D944701FDF7FD723D145E93B12A799B9
D0210E411564EF88E75FB2380977263E4EB261F6718EBF15ABA15B45CE0008CB
D8D2B7A1FADD93BD3CC207D8623EB59F6B3FDF302406C8F16686E31B66D8C1D7
E8DAA6804AAE5DE138E8A311A4A1330604D0E557EE03662BD31AF90587A45AE7
42E8CF9E4697F94F59B8AD259D2DDF433930B270C63EEEBF992ADB20C9F233D8
85BD42C04DC9300D4CFA004F89A55999A93B5A3EC2D3098ED38FC4CBC6BE50F1
4FFF4452CB1B96ED0E58AC65EE13077831824210531E56CCF19CDD93E462A12F
35E45673FB121E1AD75F20A8F4E8B29789DD95CA5047CDB13FCDE826D3AAE15B
CC039B1C6A9C21674AD3ADB75770688524E0B4D3151C5E51D640C741C6A05E85
EC79363ACC8A5F234575C256306A3E2B5F6A6ED4C48F6D4440488AE7C9B57B85
DE61CE78FD299609DE1D6795CBFB4CE95D68E3C7CB1D4A8DA1D0AEE7CAD1983D
695AD1DE3E935E231AB657C704B4FAADE3CCBBDC7C31C1FE52D8A57D79602D65
BBA312E072096DC25768434E7B56ABD8AE83CD6836A2A624A32128393B9D463D
FF8B865FBC10316F6EC4806316954E90817A74BFFE390FE7B5348DB0B4782BA6
D48AEE80D379CFEE11E4F1CD9A521023438259A1AFAA427959EE4927606F08F4
255EF756643EB591366950DCA06596B169C9665511507959228D5480C7AA0DC6
1F197A9CB5C80A00332184637C6FD2198C1D859D45F35E20C5554B0D72C262A2
3CCB48B112D5ADD2E056258AA295803C60070F8E89217F14F953CC4015C38151
4C1E1BDF36283AAFF8AD785A49E091119556FED39BC1843053FB2909D78D0CC5
BD0202C8FB9DFE45DC35209300AE63A15A7D983219EB991B300213F2BFD5B477
A7342D64AC059315DDAD1A2FA1F4E8CC6969A0E25CD23969EF9E387BB3BE62A3
51C14DAC4BEA7FB4C8F38C6C51F6431DE0F8FEB6C3091AFBCAEEC0FB3F3992A7
7ACADC778ED2784B3423154B7FC03D43F47C6F505869EC5039310EF1F4ACEA1A
40014BA27BD58490D243E14831C19698C0C0C9683827A13C1735D2C649C0D4A6
BE354B0E303F96F1A7DA6410CC5D3F84EC5C9F615650160747A724AF9C66AE82
CB864AB947E3582308319FF3BA95FAA268D83B462FC0BD10BBBB8DB7B12BB101
1EEA4891546F4AC7FCA094F32499C0F8AA33D2C7D00283804FD75276BF2C4F9B
E9BD77A75D5A1E7BEC988F06F62D50278904F0928D97C2A77894DADB216105AC
441F7544C3EEC8F09A260BFCE7C040D10575084BC081821FB759B9016DBA3AB3
9FC05FA6C191F7A83C324AF0629A269BCC414DDA1570B980F3596906BE0D23A7
1396BA0A0F3335B74FE5BC3367497C95A462341C8707177AF767B83F28AF4C0C
F952EA0D9C4176D5ACFBC48D8A48074357B1B8E5B17C698F2052A9C6410435FF
3D114F67EACD436BEEC8ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A6FDD
7D52F256FFCDF706B456B6886F5FF5F416C079AD248559BBDD2767549450C680
3B603B312979604965F7E8298F454E098DC4EE83D9EE5A229DA5B97FF0861841
31743AFD0DC1CF828D0993C56493FBD38744296B82E3908A1A0CE811E0CA2E52
A0EBB9F4998D40FD7B001C660CCA6AEA8C43CE8FFC9D1AEB97BAF55DA23B2FB4
A868BA0A41CE90D7BB6633CB481DC110FC14AAB8E9264F5EE49798BC49D9D9D4
9B9CB9429CA197321B545625093FAB4BE53BC96D108520D9CE9193DA216221F8
42FD0F3CB18D4D9C66FE5891B484C4F3ECCE8A8CDF069387E4FF4967E9F11717
A630BB0422421290360984C499D5C2F4750008B8107BD17C259B723F956B5B14
7E7C0D6AACEB4C9F0ADEEF68329D5CAE9EFC75DC15A9494E876104FF7675D11D
E1DFC7E967F6DECA7277FCA73E841737D9ADD1D1BAB1961E212D20880069F0F3
B5536CDE53D4A4D5012B54B227A0C18DA8A43ADB7593E98E5E0C75197138FE3F
BB31F876BEE000302935A55EBFE1CE914272A8F50A983AADC0604FD17B2A2F43
06AC9C0E2C687D1D9ACDBB674244037384B36372980DE4F1819DC2B4F825D7F6
AF5769BA3C34DE43B531F84B485EF8F360082659FFD797F6E37B87EAE0447EDA
DEB00764A38DAB429277B77869A70AD62AEA3CFD663916700C95E0023599AD8B
F5E4383BF2D5B1F79DBE83B6B7836E42C2E1AE0093867B0F2F8C4E44A16A51FB
C10F2F4BD0EB7475E396C85116A9D3FDF82014EB00C07DCD76514565D3E6DCBA
5BBF1E7E65EE55B3A8CC8D2229A01DD3EE09EEFA659502F90DEA0CEE99851BA7
2A097446FE8D54CEE9CBC3B88AF70F6D0234ACB6350CB1C56BB44AA5D7005841
0088780E87F8A0D2F6D2FA07D508BF3F6314B934962984C7FE400CC9AB1E5F79
2699F15AE7E181FE3ABC4B4C70E21F3AD9AC49685171C47A257EBC1FA6B40E10
B77C81889061E668B9444D08F3EC366CF071C473CEAF7FA64B863164AA97F309
B76EBD1D860A54D8E656ECEA88768396EFEC282AB93B7CCADBEE9CAC7E77D79B
A760EF4C53A3C983853C30DFA6B0093FC96F298AD1B5807C33A89AB14673D370
619267FFE6A05DCE65C7B986CF466B6A832F1921A6949469ACC2B5EAB9F109C3
6C9122359A60190E6C42C713A9BC911105DDAB231758BD41BEE389B057A1F7D2
5215EB9D0F26C738D1E8782D670AFDCFCBEF6BD68AA64D6CE1D7C82A1E46EF79
FDC5CF1DF72D2275F3857BFBB4FF234B2192EEE72D2CD5E415EA5C1C28F4B537
D15C66B6CA739B8D92F22E3DDFDA20460C55C375A40A34BF6BDB012F333DA135
67389FF89C666BAF1696FEE4BDC1B32589E1427C1749969DAF3B72CFD1F579F4
A62E705B6DD2AEF3D166BA507A1EDB131616EFCF91246FC75DE3D8A915DBC82A
1E46EF79FDC5CF1DF72D2275F3857BFBB4FF2296C19E66F93DBC8E9CA5E86793
FA37889936F823DA9CBA746BDC1BA4A84F7B70846E33CE5F285F32FC4E53A284
1E737ABB84A750A16A4999D5A59AEB5FAE6FA51F6C8CCF447A19D91B8CC30481
B5C49B6ACB4DC451F9C524349EAD4DF1F0DBB3869B74C2373223236E809ABE92
C2630C9A877AE16BC30D56A0B208DA546903B801BE445518F14E701BE121A6E3
C832FDC31C1546BF0855A6767030D9B6B47266B4A1084BE171D03696A026FA7A
544E4D106B9A315700669D9D8A3D985F44DE6070E8E4AF6424F3048173F52CB3
EECA756C4D24FC6054D922F59B105DBB74686310F635AE6153D9E18A0514882D
4CCFE9D44B8952190FB9EC8360698A45EC064FF735101C9B16BC27110FDAE792
2D97BF0BCEDAEBBDA6BE7764CAC582CDFB785921653201A8230C66DEBA105E89
909D76D034C9A5C6A216EE8C2D9C96FF0A04F2EBCCA2467174529C592950326D
E46CC1E57DD4B2A8821A8506BEF79EC524565788A28F5870230E9DA69ABC8078
8F2F72CEE5F5594F71A24092D1CA9BE1635F769E2AC1459B0B3AC1DC117B6296
C31A438AD167AD6C39AA2FE5CCA6028CB3A7EA6A0BB569A91BCF947E682976A4
A993A413FC97F6F1331B12604C28FE4D8F7FF429F96D0DCE41EEC1EA29EA44F3
F8493AB33413FB84F35B3C0016089A6C4D67EA0050A0381699FE2E38BEFB071B
9FFE3D7574FBB32CA8ABAF8CDE383085DFFD5EBEEF83D696C0FA27B86904477A
22C09610E936D310AF8455122F4C6B61307071FBEB6E8DA8C43C5E1C317DD3AF
44E46800FED97CA40252808F6AED21A9D6F3EF87869378858BA7E6E918D5E464
49525A4A5A2932DB6208081585CD9A312B09793B1C1FA05637430A13E5AE3E1A
3D5B471CAD468007C4A6BFEF07D313E1ED2F47BDF624179D8827CA4664F96F70
03D7D0BD14633673BF1A66D0126713294E13C1A4571B8A9E6D98EE5C2084E767
98939F0AEF7E64F621BE09010CB6F43790AC69F122BD9618E23C7FD95CDB02DC
661ACA0D9FA5DA0CEB0D82EC823434BFCFE218A4B5FF0264F1EC9818FC80F9E3
E06FA21B47A2C431ED3DEFC7267AD9DE87E23C2411D06FCABEAAA6D87458CCF2
5F198AA55DBC4F8AFB25E33D6830FF6333593140C974A8B13E94CF0E77EFE6EF
C2F0C2FE513C93C7EB2528CC8B0472B5A579EC88E8BBC1480D4976695D2851AD
FE75F0E8AAEAF174FD8B2D5264FDA6E40432CB09DCCF5C286D5EB04E5A7D952E
716DDE9DD17F51C40339BBD717BA9555F70DBFCE390F10FFC62821D7082423D4
6EB801F8502449684418493C3E014D603933A576C6B0758D49F3155D448D505F
73A5206D1647639FBCAEA8108A2649D23FC552CAD67A60480964C6CB0783A8AF
EBB8E005813FC0D89420F1930E18323460DB56C9DF95B90D45EA22620C2FA7D7
521D7D4B3FC1FDA5061C6F4B994301864942F3C18428C06EF16DAA37D7CAE4F8
5E3CC5AEF1EAA75C658E90F0246C18C21CF073CC1D7732019B86C11D799B79F3
3BB09CB6771F637D534DE9FE49A53A3812D7DBF47D9E8A2D353B48627891CB99
B8C759187CF9112E3619F9ACCAD376725BFF2760B9ED7576B9D9EADFA0D51077
ACDE9DA732031E629834097D62B5D90F48DA5BDB8D01BD0DF36D531892BB3AAC
16F85A63CA278DCC38682E1BC6D134930242730DFD14B49376780164C5A1F030
379CC9E763CF518CF9E2DD410B31012ADDA5B9ABA7F5EB2EAC54DB67BF9CD44C
49474B134D42210504E4254BC7510C4BDFDF53EB3D5F54D0C6A53862B4ED64CD
18471A49B62240FEF22F4D82468E075498FE2FD44122E511E5FB2FDC8CBDF6A6
9012CF9846CE3A9A6DE5C947140AC48B22EFAE3EF8FE12D52CB3A260C7E0FC2D
A6ED47D61F83DBF89585DAB88E81AE9FD0426205126E4CDCC23EB4C431FC6C1D
BBF79938BA64859723C4637574DAA16916B8CC6DC32495D5247D877E4B863070
61E7A19A3AF4137889983657F78257CE77F03D0E9DA4E29707C31DCF1707AA65
83AFB9A309EB1599591812BBB5C8F3CE43DCDA76D261E3F7734DE2DB7D9BFF35
01E5A6D23CF1541ABF3B301F226510EBF89944E4E9C5376A9F2841845CB62FDF
58F84CEF83450F3CF96A040F4C2047DEB00A172677774217ABBFEDC33DF60D1B
D15D023EC0FCBE6548410923051F875718FAC168E4E2720E8D959D339DA26151
5C42555EF75A03385FDF6C7DFA8FD7D02B80E1A845766CDB597CACBFE0700303
409164B5CD1CB0F12CC3632AFDA9076C2B4D0CA7D89ED2FD03763D20BE507F7E
56122CF46DFFFDB6FDF9361520D2E388DBC639CAD5B2E83C049DA71FA49785EC
5565D2B3A261A66C9F2C8501A2E9324D5E6F0F1294E1C0AC67EBF4A840618B23
172EE2D3E6538CD9B1E12B834A6D01EB50C781646E30ABD086CF9C09A6B0FEE7
416646141CCA188014A29CCA5AFD1215D847550DC0F06DD1F83FA50D4F154867
B579F69E34040E2AFF508CE7AF4B0D544E70294FCD49BCCFB65347FD1767DFDB
6F85337F7B399827B860FB08BF9D15DA7739FAB5D8E03BD8F283FB6832C3E10D
341F8D147A88D61C5990E609001B853B273DB140A7DC69895E465C1ABABD4CDC
88310748221F5BDFDC2306912DAE1934E475C3AEB56C96D1978FC7659ABBE845
A08BC6EC9EDABFDB1CAFF5FB8203CE3B25721168DC1E382A5267627FEF41D963
44A05EEE4C43E2AE24657176B6C8D3A0EB5A8C229616709EDD4096C1D4D817E3
96C6A55FFA4D67E59B58C6D9BAD063D247787282EC4820B3C3A8D7EAC66D120A
3911D284DCAE2018F883AA804CCEC457CC6213EEDC75C8890DBECB670000924D
3BAE8E7A8066D804B89BD943B49ABF548E5D92C1D6151D1ED96241CF76510076
26E9D2EFFD007A8E985FEC263E6C90BAE36C27D704E88F1F7BE09A971CABE15B
724B62BB0C1A5263449707BC0ABED19F4F1ABEA27322584D473A1A888AA4DAE7
7864042EF587A6D6C04DCE664BF83492D166B205011A3E283257FA60C5AFAD3B
71CF6D6772E5E77FC5742D4D77F4B9576213835AE7E32A2B401C36C3D58214F6
DEAB86E06EACF7F5DA3BC32030E4E23C5E0E7E82C4D1F9BD7278685C4CC54FE1
C1C4332F05F5AF14E70FADCA465393A7DEB7DA08B3012A99FB2FC7F6FF7AE570
BDBA718AC1E0ACEF9AEAE22E5FA653C2698E05E0E072A7DBA0702C0CBE5EDF6B
D0A5B47D7929F5C9317680A392DE0CD7AAC72A99F351D824F86D33CC89BD70DD
41F435624F598030F2E7121F6A610D640FC7E512A28BF6C12496361A53953D75
312631D6F07794B1D853251462B4D522B6EF8FE6D2DC18EB4C02C6BFCEC3E71E
20E6D98720013BBF6307EAD2720BD9674E2AED09E56CC6D3BF927657BE2D0749
3302A5492BEA01CB223FEA3B6CA4D0A35D6F2C5D17804371F9AEBC100D7A6D14
14C37CBD273EF593B596973EB054344F62115963E3F61A1A2774E6837D2DB796
482A00E2BEFBD6E3758A5A1CE621ACE547811799B1D7893DF52D57BD6C1A6B74
4024CFC65AAF320264BA65EA8FE3B2E77F515CF05968797241B5BA06E190C023
55C664139419373923D5BE1FDD292F80E973E271248B2E3AF05887FD5142811C
2572A1D4B9F9539CC6D9F441AEB22F4E871755911D8FAEA73E35EB7835FA1C6D
A4635171C47A257EBC1FA6B40E10B77C81889061E6696F50954EB8B347918C49
20C7142A2AC68231DD2AF574910705DEF2893D8D4BD1C3ACFA2BC75EB9471489
0422528F5121B7A7D7A973F2EF67F2795E6DD8CF55B98238D6654F8B47476E40
98ED693455F82F098F49FF48762D1C9622E0B64CD190A4AF3020654123563C5D
6ED62F1387AA1BC5F00137C6AF5840026DA68D8DF87CD5567644A09B52124E10
51A715399BBD1A6D3704BCBBE1FFF89BCF8129B98D35736FD2CCBB0E36AEB664
3C283A61B6E8613BC8134939CD28AF21976B42B06A63719C44432BDB419B04C9
19DA628C6A5B0F4F626E8935AE2943365C505CF5C7955AF2EFFD964AB8EECB15
C33CFF111F801E31FA0889D1561CB28638D1D24AA9F358AAFF93B9564AB4CED5
632C12606449ACD326A76B011D9FDD66C24C5342A5575E940A10EF9A7C4E0857
59F390036755C4BFE971F6DFB9FFAC965ED71736140A0D41AD571329C7FE5460
ADECF79C3543E3592283C6770B4087ED9EB76ABFB56774C4A21133E594461685
A92D372D4ED3F9DB786D7E7245B9B5DE70958048F037C56C14FDBCE691048469
BC488E501EB5DBB042B02CFE90432FA7D98B533F89DB0F21A61657E268166431
92F6AB4C4265A5C2599F55E134AC2DF346CD7C05F0C4B63DC1C10E03B9D34C67
27AACF1040ADBF7713E3898334BD99CFBE66C4FDBDD9B9180626E338FA32B67C
16195DE9D59A0F447B8DB69CE8FD6E2ECA90C6B424F1D39D11670BA89B298DE4
0E91D1CBAEDF3D811318D493DC71793E84BBF3E2BEE2EB813B03690C774E6DCC
F2D7221490784231EA6CF28982A4470A7156F1C7312FFAE07D32B62AEA32B58B
8D127C00F3B953C795C84E1A158E799D50610BA45F2003568AF44E2EE4DE711B
A128C91C36EEE43CB41592BD13837B9EC9735996A1376BC209B8D579F6A057A2
7AEF243C4B389CCF9385CE645C882CDB6A03A7921BB9F85B93AC64F9C82C455C
AC60CC9896FD453CF3AF2307B191F79C5C6F070D7E814EFF05F881CD7EF43871
21F72EEB3A9ABF13F7A9C46AABD4D0D976EBE8AE53D3AFDDBB926B54EF0C41B9
8D10342A2BA4F9908402DEF9AACE7BD76B3D4A244E3AC7442DB6A705BCD7E2F9
DD7C73DE15B222ABDF7DC3B76EEF17AE4CBDF387FB03FAA5AD122CB4A90F479A
EB32B0CA993ECF07D050F04D4CA153663EFF8A63016F79C7D0E464A57671FED1
E50936B0CE6E364B62411E6DF77D4A4DDF74455394437C3A7B477AC27F75850C
FED5BDB2F07349EFC5134BBD646BED8080D44243E74485FB82236249FF6726F2
D6775F15948A9D4DC82D6F60D7DC6F714656E89DC882B95552C5215183E5FB51
605BAA7948D6E5102CCC8E7AEE127E914C372C6E2DD84989E78792EC3F50C186
322A81E6A8368780A2E815A7EC49B29EA2F4594EFA2C1C079B0C777ACD0210BD
A4F06EF57BFEFA0FBA572A16A81DD123F8434BE971D9EC8149468CC0F2C45ACC
D61E6DEA7CCE2D711A218FC3953EA7B36F464567F208953F9AEEC1EA50C522B5
A42C4A99B079ED011928C2C8CFA17D95D50A7C1599E62D4FCAB001D5F9DA84FA
530D65FD2738BD6BC724446933E8927F3AACE64BE6623CC4CDCA1DC0B686ACA4
41E316ED0CB3CCB6ECBBD05FB823FD79EEBAD2F9F0891F553381C5E352B4D7C4
C1678904B22D75C8E8D4ADF7A319E9EAC6238093C798878E5D5087FC5390338E
CC499C043E346A4DBA66B7EDE932FFD9780C75301CDA60558F65241DEE49409C
10DB07153317E1A13947E293CC426E38653A16E2A7EDF6D500E9237793DBAF2C
6AB5E2DB571739092A476FF45FA1A1CF898E3FF479C1EF67CE435AD93677B705
BC81144F2E45854E93CA8D00E814009234E2A36EFBD854F868BC9301D33BA670
0EEC06C030DC43B2245F9D24D31A31F06EBC65712C870E62BFDB244441198618
3617BF19EFB5DAF155F0957D038B6FC5BF776DB24668F0F4594572EAE33CFF78
6BFADE79FFCBAA6606E892B2E41A173AA590B6C92E254AE642A2EEF5D51BE02A
C50855B9158840F97FA94CC03CF388C8AF7468EB28FD5E0CBDF9E23D1FF320EB
F19E60F85CB9568AA9C68C085E87B32EDCAFFCED2FA9A1619C3D1065724C6F56
79589C83053D4C8C9B53912E217B51E90F13A589F452936A798BADF461C448C5
480CA1D7A929044CC07FCD6CF9DD7FCE413A0B2CF777529685854F63EC8FB112
3A12157DE158671515E8FA0324852EF95789F16A8421B4FA121305A1AE54DD69
30796B192862AD337BAD6CC06279077389A26E7EF7030CB43C182223AFAAEE62
0EB7E7F02C11C1B52C95B6B66A2DF1FBE1991088128B8B12C2B28A050B50BD46
CC83DDD732C8EA609E2857FE8377112784FC50B3E2940B0D30B506FB4732B2E8
8F32140F3893EFF849FE4E17A69F02E7B4C69CA806A1A347B174992DB8D542BE
C631C8069D0DF3B6F3A5A80891684979154D98437D6BBE4C8EEC74B6D9BB7D6B
C5924BF9AB0BC0438C5F9AB06D6FA688C48C7DCAB3F09B9350C42F6BF7A4521B
21554098DCD8F7DA254922301AC847E5CE09E60F0839874318C8389E298F5546
71CFE508839634A81ECF5A229D2B16EF77A39178507E41DE72C0B30162242B3E
F7756A035C0529533E59108C550FB89650C5B0600791191AE0D2C2D576DBD6A7
3FB4C0722AACB08ABBB932D5E6A03F957B7C64E89BB59C4ADF019950C6276EA6
1AA9465BBB3A56AAC8D14E62B83EF68CDE87804FE10153467FC0AFC951B645E3
0ECCABC655E635DB463BE72AF1223D0690DDB88C7DA9D59148324E7CA0701024
42574818D8E2E330E2FE5102B7F4DF3E4FF521CA5741D8C57CCF85B7887E6A7F
6B6E4F61160966AF27B74B21C9F3D6882E3E909D80E0762C58ECC4E243CCE91A
946487E546C6E433A5C5B9FB7D5B97F2B4B202F94545C8C3A9D70992C1F31DC6
753222850ECF459A7BEA8D8482342AEEC5762713C43E7E94884C06329D340EEC
ED08ED58B05FA74B94FD084CB58F31EBFD5EBC6440498768C234573DAA11A489
B87A3C6A208E9CB0B30F7AC129D5E7217B10FF89AD4A78408DF8ECB0A02D9EED
19239FB927915A02D3D85B0C237669DC17FE1A48D20EA8C5D2A68A4127CA7332
E5039A2A7E32F2389255B0491050D86369ED418F2926916FB309B314347EE3FB
1EA13799ACEB62CB55BE2301E115BF38D18AE8461F466E207613B6C091C7A10F
D77A10F08ADDB19E494C72ED471DF04820F4F3A6713E67E7C08467C617E31DFA
524A30DB697FB4139002DD5225DAD211F5C72F3127A60A33D311387E6018F5BF
F946CE8D7834A3410F5E6EC14CC8E47337898E5E8367724E6A7662499EA3FCC2
78B616531C0CB5BAD1940ECE80B6479023DA0394E3CCA13502D03B122C2218B8
7DC1A0A15DCD491B2BA40939A647E01CA6143950A0D13DCCE128401BAB4E3322
2A22ABB177C6607F014F0310C1E7BD29FDC20E11094E2852779FC5C0D5DB9D39
648317DD0820EFEB02CDE5BF84E5F1E8C8572A5A86DD74D4FB3A9FE077F2E6D4
384BE6BC394E71C5DB81E42B90ADB935FE3468186ECD90E2F15FDBB395191E6C
465F4AA552F9CB59DC4B0FEE8C937A0920796C09CB74B3EA1DA5B74EB358437D
0CEBB9E03109C593BAC09CA9962533B3AB0EE6EF76418EDA7CC6B8795043E5FB
6F899C3CD8486A6DA3E670E6D13BC51C01FAFED3D47621376F2A271728AB7439
3AB3183B6CFFE1D0E2948B24D2A7E6A98712527A7F3FDF0C07D30FB6436D5875
3F6AE969F727C534CE5C9001F9E7A0149021BE5A65DB754E14D890F42F4D23B8
5DB5F2BD66726A544C10942C271713B28F9F33282D2063886DA7006EB5C0F757
82A3C48BD6B7D4DA8C112653B00D7E484A88A248FD17FF0E7A075A554F98C451
C7059F491D1C8BE038ADD1FA4019E1C78B8C7656766444617C98548A8EC0CC14
829F7C67999234D302FD1E40C28703DFB713F881EA0F4B81A8F1FDE4B3C92CED
078A98A433D6F3C4B442E014E3E5A5E82E52DB5332A895046FF12D01742E9AAF
ACF2CFCAF0517858C28A24FAED300D643F1880D27C0F7D73029F171028FDDF8B
55080BBC908D26B5CD10691FB92BC2FA54A04EB649B111671B43973E31253DAD
08488B1C71AA6F08A5FE3F6222ABC942F7B152702F7E48B93155A7DE83B3A6DC
7FAF8C2561841226C56160914266B1D28D74185B0E0FAC89BEC8ADC3FC027EC4
7FB0EDE4D2906CF1B55597831D98B643B81D2FCEBC963155762A1019FE6A9467
DB7E5464F6CEA824787BF86ED78492C31CE4E8AD0913637E245B375AAA5B76D5
95F18A4289312E74FA9C289A53647EB6D776E3BBBC735D9E7226D2B353CC752E
FEC2E91DF8E2DC63650E22804A5B31B13418130BA661F22AFB71F8026DC8F788
188647382BE1B7891A84B9697E22FC61EE575564D48A537CB190E26707CDE0E1
B29B2BB9C4F4716519A4A62A05A7B901F7AB8E77C6FB72D7CB3D6953F1416C40
FE153C7E73D86FD65663DA0E08018ACF34CF9BA5D7A937AEBEEC84B992D45A26
80BAC63497C593C90728B12A42833DA3C710044C03A37A680D1F806296BBF942
428E9FADC28CB5AF48F8947D9BFAF2F57F0F6C4AD7C698D46568068F98C3564F
42D2F7F26014DE37C4DCCB6B3082CD71C69A1E1A3AB1C1298DF12BB54B3EAC9C
3325FDF74E1B6222A84D10CF5EE66EC13A71302C6786D05D419441162EEAD0BC
CA6315D5D70AC07AC571FE97F03509863B9CF7A0E4A8D5214D07B149EABF51C8
5F0C8A7B7BA0AC8B5A90540E5FD5922F512C0A83999C07CEB7A37F71BB8C4C08
F359CB4473250995CB6F5DA6838536F3FE0B38EC7BB696C8285F78C66D154289
455C5FF2D23C1A59A2944DC972F44474CB35738074BCB9FEE4077CC0C49D7185
B623A143311EC892D1BB9554D34547816955434DFF68BFBC34A074CB3BC8C175
4662B5D3FC0462AC4967765A50D653FC3FA379FB4FA0AD9F83269A99D550366F
C8714B92BD48CCF7CFA30A7E92FA628D056602E7EADE6F2B3E168EE1B0AEBB2A
BAC2B90A514D97941B12553B13AE64F9F960EE62E049E6D9BC9858A3ED3CAA1D
77CFB4A424858251438F05B3EA1F686B35F0072DCABF52B26423E8BA630090AF
D344BB225F08F47868D6C4D857CF0A3C6CF4B205301FE5A2F54624315981DB9E
59213A134B651EB7A024989A6D910914C0224A700E1245ADAD0C701A6F5E771B
E54B09E2D6EBFD77645845B7C08389FFD5AA6D6AED2DC26C28A403BBCA3435C3
FB7971E9A56226D46A1174136F0A04A5CEB915B8E21F640745A0AB62F15FA8D6
5B74900DE1EA95B981FBBCE8D846DAE64D91AA7BFBD49CADFF1DC7AD838B897A
D728B35D869CF7874A1F48CA79E025C3D54743A3B0CFA14625FBF274F3794F04
4EDB9552BE2C55747D7AF3101C5F1A2A1BF6C0E2572AA0624592BEBF74CDD683
40D52E137B1DB6FF17B6629B871F0D3AF01E55645C56BFB97243ADC4813F842D
E44CD9352178217879909DFE3C012CF2809984881E57668BFAA1644FA922FC56
B0B93D32362BA966DDE41AE6A21FD20EB82747C47F18DC85145900305F388143
6FF377B1500EE02F9B9B8774237EF1899A326BEAF8EDE7CF319D42D7B7B61296
2A9DC4B8DD8DD87504652967C679E5629FE5449DD1BA7DE9ABEA28C4E2496F87
61C0638E0F7508D281F5762ADE506C2DA47286A8A2312B11DE4B488136EDBEC1
4C5256B9940F0800E6DD26001BE1FD4BF642AF9525279536814044F4AE7DAABC
43A230FDAC3D9FF0B8CCCB4C1E7696D16531A5EED36C30AA15C66D5398C145AE
DCE5826302220B185F12F8DC154E4B79B163C08F53AE78243C52D4E02E82A4A4
310980801A463964F3A0BBB90D85756EBB96B5021481EA4E845488B79682BD09
F8D07481630EC3129072AEA5778A135D164A571B22D1D619980E73841F84F59E
0500496E84FD5E9A7E4A28D9EFBDD34A443F263B41A3B2076595CE2A7DAAA94A
4B95D7E9C281194A84A9ECEFEA5023317F88FB64830A2CDD5277003D6F1D46A6
DDD51B3C62188C66D7D12CE54F29D09DBF020D89506CD1270C0B3EA235BDEFE3
E24373517FF148B2CDA2B90CB5884440F464CD57295728A8AFB1A5C97B6B8F47
63D21E005D89FAEBBD7D8B06F3FCA5D7107E8B918D946E250F561E5E394ACA6E
AD2890CD407F38C53B3E51C9FD432F22202E89A91B046BA4CDDA6E23B0AFB2F7
9CA39D61350D26435EB900ECE26C5AFC283144EA933E003739EA80DD65A63FD2
020938E02C1C72FD8A4A14DB003C5D21197F835B183FDC1269D70A0B14D4F9BE
76C4CAED815AF7DEF664098CF1A167444F32FDE1796595709294CCAA488C37CA
EF08DFEF5DFA13FE0CCA32024C378A87CFE7506B67F7A6FBF8635703C7EFF67B
9F15A7315285D2565D7434FF3C75A20CB3C1B57AF37CA806711890C1AC5997F2
1A14E7523CEDB295474F36E7AB3493706076D62F4C407BE252B5F31039CFF52F
2855C8AF27ACFD99EAD434BCC277A4805E6F068CF203053B151CD82DDFA79D31
F0B4A0485F51334BDF5CD5E855A60000B2D49835C34DE75CAF4932693BCE009A
5801BF822C193040C8E053C3F1EE0BB0AAAB446819939C850C76B37EEC59A516
F15F22949AC658037300F1E113F3BD1B4F3ED7F9F55C21A04F1A6DF8168FA228
6D8C7EB944B03F3907EC73E5B4F9B71156B357F62608909B7E4BA8223446F5AA
B34189E5C5ABCFEC51A249DEDC76E04CEABF371BFE2347C17AB8C17FDCBFD6F9
553E8BCDA3094DC141B331BB999963089C9E8131AC54F43D9D7AB95C97BD691A
D8934FBF8FDC7B97C76DF5FDC62765D55AD993DB7F0907EA177C36ED9FAC7854
AC865B2BFEBAE6EFF4DDEB727B4321E24A2D8C7D3358EE391B31E80FA5998089
7F9471F36AF42899E7278ED6D5DB95FD665B591E12E4DF06B3CEC7D015551B07
AAD8C85C6196DC28076CF4C4A1C62A4647AC1D5FB8AEBC6481A94C6ED5EAD255
0500073598D17F51C40339BBD717BA9555F70DBFCE390F10F87B5A4D7682D1A0
AE125DF60CFF05C7454B82F991CDAF3344A10115DEA01BA7890B3A1123170D99
3F727ACDC8C0F00E871C90A6175956C54E9E368CA67F79A9DD91ED489EAAE76F
173FBB4663DE44D9F0B3A184AFE75609B62AAB76074CAA13A2355873BAF0F0D1
B5262B824ECCA9A0C7F74A4D13C03D0948B6F864DCD1251D26551CB2337693A4
3B080FD17A292531B5F5E64B876C58A4CE3CA66EC2EB0A098A5D9D4D41C9E55A
7E4EC94240107FE7909AFFA25FBE1041A54E0C8A79511ACBBD91ADB807ABEEAA
542EDAC9B6ED8F254F6BB7D73551EE33D4FD3CC697DF01C1F094DECCDD9F43AA
B88640D0E9347881AB1F62D9A8E4A799A0706A34C9C8A243A6890CE854E3EFA3
B883E515D1C4E5829166B8DBBB1DD948462957711B3A26FC69AA03ED308F28A2
3FE7A7DF7F4EE6D26CBB6620076B0AEAD03AB485F43DD669E9F6D78F7F3A3D17
9B8593FC3F87DEB0F663278B252DE788A0B966B6BF54AF8DF51679CB3AF165B1
9E278ED874F8E46362D3ABC30D65F4C45137F1848A3687D5BE45FEF3D084AE1B
3DDDD239B928EFDA00F21BDC87DD2D8DE1BBD7947B76889EF72C0DCA22B640D8
7E79D24C2B8F38438B6E4F14296B301DC46D7041C10BB06215A25BD1913C7954
B5C60D0F7BF68D98B214195ECDA182220298DBB1EB1FD9E609F1B4C62F58C1E7
29F224EC05FB4EC009EF48E7E56CA1F98D0CE749F731509FB6B908695967DE2A
007A5F489A2FBDAC9D5E5B894645DEAF72A185AE5BDD16F3039A9B67071F0C58
187DD47CDEC4452ADC8A683A2610DB6EE097EF1AD94FCD6D373246804BA5F217
1C5C56B6562A17EFCDB0BB982F75ACF33109F8AE7ADE4954D0B1E18021CFABAF
619DC53F5A2A0C89BBF1AB58C3DBE99A3FD440A7D3BC5E4EFE77037671FAAF08
633A13C303EAE11BC5E99B48E34D0C2E929AEF3C8034A681E5C185DB2E609482
36429CC8E4162D346EEDC7260000BBF6A73BCE98BB53AFB2C6694A816A7E1586
15829E59EE7357336300680C95450394AD4A2DAACA192E92CF195742D5AEE902
297EE9520CA7EBF85DE9F84D3AAA119AB947B5F5B9E5E1A0C6124B1D4E67DF3C
21F1D051AEDD11F65FE0F14DAC42A2880B683118A3A2C7C7355F5E45FB504F62
6A4AED7CA434A95AF0B24B801710B398D9E9A95138859A8193A17D1369E2E54C
06B408FEE2918DFD868DC4480DBD8130BA96CD51D02FA1999CB88EA646C764BD
2088A3EF04FFBF0B61BE229F35324501AE0F98009DA9ACC5F02B842CD02CD8AE
FDD97BD87B20D735CE102C0F60A9D44BFF1C27F03F6D79DC011146CA28EE32BE
98532AF24D5D2991A3AC877F8E16E0C392019E33F268CC072F36EF12310D3095
32C303C68553C91CE83431F239BE883C519B66952A2595A07CBF1BD05B68870A
A4FE5CEAEFF2DCF00027A9D62608D532F4F5933A228601B780BA2B6C5C54074B
89611AF4987F7203DDCE93170428CB54EFDA16BCA544851B91A8F1296749A72F
7BEA1FCBD8592BD24249231076ABE1BD29285BEA0FFF15CE9237244C917A134D
A39E567075C6FD56077C00902CA6AAF0C12EB5696A397DB7699DCDD94BB71BDB
3DB5D727DA85BB43C88FD0F434D5AB83BC9B7DE897744D2CD1E94E3A3EEE36E2
EBFC879CA86CBE62103F587C5DF7D09B914ED8C78CCF45320151142D1CD4D451
CCA2F463235BA2C069E2E976668478860F81809CE7D928D72A21FC9F4C00BE8D
8CFF4DC312E6A454DCCDF83FF2BBC7B17EF8C886C4679EE1D81DC3E988A7D9BB
43AB6E6B63E503BE0AB6A71A1D06D2FA9ED0B02168B32F6CC0FE765F2AF96246
1626B5EC47DDE14A666942B10E15F853CC86DAC21F1A67DB235577B68003BA14
073E2702296B284F803745DEC5FBCB5BDED0C269EC967551FAAC019A93A7A160
4830272EDAF5E261C77D4130BE3FD062801BEDEB1BABFAD3DE6664E363591C86
F9882372BF002C07632B519225237A100E865CED746D25302D405F0492BD7ADA
007696765A48BE728AAB48D8D37D238A935D5742BE83214918E143579A012D18
FD7A725B42CBFFA9B024C740B0A9B84DDD8E00C8781645BD3696C4B6A1F1F83F
5E5F4ED9574A65B1D2AD8D5160C7E9F656D93EB214E1FA04F01C1744BD3FAB47
D4BF85FFA623E6D3B4CFF4CD3FCB4805FEE5626641060E55159270B4794F9C09
45FEAC295D137ED55276BF2C4F9BE9BD77A75D5A1E7BEC988F06F62ACED2F5FA
2FD1F6136C813C949E82A7577018E81507055232F1F349A85B3B6F37E3D2C356
8B2F7CB639939926B6B3C31FC9AABE7ECAA5701B0D2575AF8A8596254E942832
EE1D2D26278D146F968614587DBBFC546E899C8CF8DEE363237782E3B2AE143E
60069683917D8D87F03459018E883C2A3E8826B5A2A74206C0A2FD237CDA518F
B06BA8E9447E008ABD6C9C971A749BE93C4577F5D68C0F97B4B29DF4589570B1
0C9878819B80F7BC667B94AA11566D652AD737D670C54B521EED1D06828DCE13
D4F8E88380FE26A1E6314ACB088F4DDF2EF281026023676413B57CEFD1F5022B
E5B15E1D75D8A3950397E5EF69965FD9ED3705DFE13EB7E3AF75001AE8C82036
22C7290C313690B5E5EF775D62175B6409A678916CF881217B86D2EC79CADD13
2C551ABBDDEB4A06AEB42B939458D9DEBC1A753F044D70B5366304116296EDC4
7A40EA032F27237EF382AEBDC3130A05259B885E07B50701A7A98C545CE60AC8
47D16346DA185095B15ED77C6291B18D211A061CC05186F56A089E390113DAF6
18B339808C173E0F18C1CCEF5353BCA7EF8CE6151D158AA7D6F4DBE64EF67F52
2F826B7F13CB803E2B1D3E833B9F86AB3787C9DE181BC1B72D6702AE620AF391
022A8ECABC9E50D69CC28A88FC4DD9E2B7C8DF1C241030B68FBDBA63C29C3A62
24238CE4F7F89B3BD508E371B2A78B89881D1E6F9ADFDFA0981FA75DC53DC7E3
9ED5DF5D5B049F09A572964206713100C8DA1A4DF6C8B7B019CC31279CD27DDA
52E34AAE14A41C0BFF9240EBA6DBA43BA20FF624A59FE2DFD116557EE7668528
DB216195143E8CF31C5D103CA1E4F457DA4425317A8D8DDE3450CC30F037242E
A8FCBFA18A2448C08AB6F43F7EF7F2E24461AF56F587343AB6ACE30266B45596
55442B7A3C1BCA84112F5D3A5FDFDEA2F071E1A11C58D57C95BEA86D6C602F27
D4D17370D21F9C43ABD7DABA77FF818154A0B50ECB2AEEA335B5BDE7D0C6E14B
9F6330FAC9972903C2C35C5D1483348AAAA8F66D12A8DD4CF75D5B36BFE119AC
55130DF559F1BD82AFCF28BE483D01113B2BD7AD8D322D32EEDA3DFF2E9BE053
6D7854B54D737C6DF3962B95B4B4D186076AB0A3230CB3DAB9948677AF0CBFD7
0CD2844F5601EF69F8182D739E6DDFBF4CC6E06F7F4E221AA17F75D36F7194C6
FE02F08BA994239C9716711F492F317C6BE4E3D2EB53B2237891618BBFE3A012
DD55FD0AE1B8C194F43CA7F381FA1C2D25BCA2B4E479414E699B812685A5890D
C3FD956F374A2272E6511BD0987B6E4A1FBAD528ADB4433F04EFFC1A953F569C
002E526244487C242639D8BF38200B1B7AD4C4556A6C66B986A873AFB9013764
27AC06A6D53AF4F2C664871EB1A07B3A6946D45571FC760DFF6B0326EFADE719
58B056020FAA6FFBE7DDD4DBC0EAF8309A635B958CF632FAC74FB900E04B0B13
B26BFA8A80D2DD1D12BEEB0ED5F63317937B10342C15ADD49634114F909BA26A
AE7F316592E7DE134F775A835D46A69D1C49DFA018A88CF79B4B972AE6F7325F
973370C589B66EEA4DF76933B7194FD9F3E4EAF4D145E30BD9AF179FD6BC1CAB
87B5EBACB8F10A27E2B97314A9BFED3E1145BF1782B8437C16AD70B17B9AFE2E
0C0729E5F10461A8DDB90EC3250F5205F9E44D43DBC6D9B820F706BFB7420351
7EAC88DE894EE7FD9B7283AF109382E0FFBA9018C10AA63542323E9B3733DD3E
E7DF7F774DE5D0D0980DA8C7E9C3227C34D7640F5016E9E8FE8ABEFA3D85BF7B
6D1C74B6AFCFD66778364FF72B116D0C52E5E9849D674A1D183FB7CCCC686A7B
59F013C89DAA23399562865AAA86C1FA2D643CF953FBDFF9AB4FF7DAB21AA6B3
05471459F3F9E6C7AC7ADB2BA6B75F4F038FF6AE864A217029623D5F2D192FA4
ABF53BD1A28704B84939C7E339BA3F43552047B93FE85F460F1ED1372A84A1AE
47BF09D6A0EABC7BBFE8CCD3F6A21C5A0CF54DA689745B877D7ACCD7F6B73929
BAA7D6002720AF0089F623639FD3511FD8D1F9152B0F018CA61E48EFCDA4132D
4899C7CE20D71646286C2F39ECCC768AB03B0EEB8067F8B3A8D2C6AC6938C056
D1EACAA924C19ED5885F082B33616605D8BDB4DBB01DE573C039463C85D6D80D
2E3F6E3D9B0F29434DB3C3069A75239C4DB9902640D98D228F5875366EDEA7D1
9935763B4BCB3721B6370725CCF2BA061DE84855EC9193922E31829A69E2B42A
ED8B7C9729675F9DEF3A7855418DB98C5C8DFBA2792D675DB574EB20E6CF5265
80DBED3D87AE473351ABD014CD380CEF7BFBB68CDB7C90D7F60785FF17A1444B
2D1596343B2564124D648B1E09536CB44A9046A350839CC7A06F95CC4A98B9DE
4976D3C4FFF60734C14F8F8D31B1B2C357FAAA44467CB2180AB4667F400E45E8
73E7398025B179511840510271C3A7D4EEF65EF5F7024C75B312709B288BD7DC
6DCD6FD5D40ECD4F49D4602BB869D5A85CE51EDC81601C6FCD65027186768365
EE6D09B687A7BAA7F4034FF97C512C2C654D802016C4BFE510F180C63CD039D3
99B1D9C4208BDE9BD1C7B3B6E3656F1133D5AC86B8E622EC0CC46D04779EE820
A1F13D100A43CCF1E496D5D564C917583530C8D07BBCA4EBCB45BA7E9A67F161
EA1B875B8AE95D4CD1FD55EE6F662CE8868C1CF7905F6286FA59341E68A6054F
CC8F00A8847CEAAD3690C5D73FC232347B4A3852F428A4841B93E01E80D140B1
D3E84DC0A52286CE9CF86128562A1379CED615C2118100B781FC15A582A2C7C9
94E1DAA88F72831C12A52AAE64EB28B620A5EB34CC8E51496842F98A95BC9453
4501285318ADA7FF6A5828D0A8928962A8B873A7339DEE670AD4769B9E763F69
F5F53EC7555AD6564B0C2F3B595C9F8B8A3106AC80DB85CE6633CCBEF40B89B0
7BD04EC6CCC6D5C4515070E4EB6AD1236895FEC1855FAAE316E0BA82D2C8952D
424F7EAB83B6056E8C08ADFBD34C9842FA826114DFD201B608B578EF95B1B632
0CB7B552FFB89F11EA22D02AE6333848C9632FEF822007395A5D78C698C7366C
1C453FD7CC6E94C1EEB7B14B8D584BA7468DFECCF5BE1B12A00F107E3B13A277
9E62F397DAEE458E60E6058ADDAA14EA57388812D2B5D2CB7FA127F49BD2B5AC
CF7ED80CEF4FE96FEA44BDAA2DDBB3D49F4CE26294BF924C69B6CA2CFECE06BC
E203A1F200A5F7EBD0A7DEDA931A3F3AB2A52ADDF6EC78399D18E6337C10744B
64E655BE7CD1740656164600A63B1E8EADD19E252396699126A3C769848DC244
DCD11020148DFDB12EA7DAE363C007C9D9AD64F8D4B95A3472C69B786130D6CE
B0514F29AE697600849713EB0CFEC562332209F3BB6C732E191427FC63A7A675
AE7AAC07018A865FBC10316F6EC4806316954E90817A74BFFE3F3BDD5BE4582B
4C98B73630B967E4148136D99ADE05235E7E234D8B851D3FE8B9ED08ACE95939
2226C2D9AF996B8AD0B39126E6179FF4C5DD40AC274F3072B651C69C6D75B3AF
AF00AF6D367DB450F76362FD9E1C29E1A345C03F93E598BA51322F0548A74AC2
21796FEF28187ADC77AFC00767CE1BC19F391E08E575B2EE78E04C5FEBDEF74E
053DFB264188186301575FE6C2D37D8F90B509ED7176E4A450C722AF53D42EEC
D5FC0D9343070BC392C7ACCC3FB3E4038F50162676F6D777C370DDADAED2C7DB
70EB8EACB1D8A253BDAC2DA7BBE8EC827B9FA2A1C49BEC33DCE23EE53F5EB857
A86592A78771A5BE413542F1344237BF65889EE9FDFA11A543D6358BAA6FFFF2
0ABD378EA3E09B6A96E35D642A2FD3CA5AE9A9D9B585F9D490A49A50E08D6C48
10474C709515D6A6557ED09C2D3375F930AAA07C0CAAA57932CCE22798816FAC
800F990AB27F9AAC1CE8907F5496570EE524CD9C9FFCC8DDD9897A4E8994AB17
E31B58C15CC4396CE75BC0580F75B3B8D3CADA760514F3096D12ECF20972B58E
10A8538F7BDD416B5C8EDB00FEBBFEF051806B0984B004F3D2E9322138A2F58D
99A90B43CB8C1547939EF2F31348D48E48DCA979010DD43EF4D36C3C6BFC310B
412ABDC95F0615C0B5FB41B7C7648602DD62C32CDF44DD8E430DCB7638E13F9B
543C02BAA1E989E1BDDA6F5B1252670E35238A3F786DA11AAF6409C9BCCEB325
B5988BBA50810CFADB76BD6E2B7BE25FB77A60D04DDE53028BEAFC09870C49D6
1C485162294547525ACA6C964A1E08423D9BDA91822373923F8A3EFCF2FE109A
30D87414ABA2676B03B3060C3CC75C7D9F22D433947287EB0A301D916686D396
EC0F2E13B3A1099A46ADFC9FD09C33F30F499CF5DBE572B082EC10C4838A45A0
8EA3FEC1B88AE0F6576384D456A3F67BF96E299ABB918FF662A5EE19C1360B5A
CB813FEDD15DCD2B4FE22AE09DF3F3600FE89631FCCFA1C86D5327BB0DBD3998
E1FAF95B38C37DF0CB58C972E3A3DDE8CF1160D1869F461DE358037AFBCD4C9A
323769828C5D999A6A53DA200FB56DC483BBA3EEA535009B3A8AC755C4ACB41C
3B8C70FBC5D462FB486614A7B50251D861E2DA521BB92A1356887584B94B00DA
BCEC84A5888BA903B7D571D7D0BED41B2EBE007B95C1A2031DEA011531DC12FD
859DA64EABA78F8C85459E49995EC05E1C5D85FBA07F5F85EB5DD9ECC1EB5EA6
12AA0CB1A9B056402EBD718910BCB5B93E04FAA62C2147ADCC67517C05D3140B
0A40522035B2875A44EF7DAFEEC6B06D7DB4B3BE25BF69AF5168DC1B69BBA87E
DCDF6918D106959EBBD9B87651D0A83ADAAE5427689ED559EBE5BEE0A331DE60
80D89FD9037CE9EB308D4EB08F41F3C2AB7B1D4EE45BF11BC8A5CE9509756DBE
4BADE6118F4DA07346171F817A462A067DEE9D4CBEE4DC23636D83F81ECC28DB
55A59A2A7CC71A97E520CEF18D77C93470857058A2D4E08CA6D6DB9BAD1DCE82
AB4F8E7D800B6DC6690E945AE88661A8CDA9614FBD54B3D4EFBFC63A3364659A
91DDBF843D63E76119CA67DE7AE30BE86371DC189E1F2891DC18525E4838F2A7
A697C3F18F402EBF6C56CBC4B24764D050C69599EAC3A4FCCC29386254DE597A
E4C6A8897F9E44E3EC0544751FB70ED5F1CCBF4A75C9541CE2EC94D8F61BA67A
AA510FF811AFF97366C6142BCE4473932308A1D1C33B7ED241D48F5DB2174A71
2F0A1E33ACFDF4F850DFBD14A12E05C70B6412C4E4378D0EA7DB19BAE8A38B7D
803FE2C67A22346CF155930698C2E76B71C22AD65A76B54376BB68783B63BADD
D3605467881F7CA534E4490F6E53F1D972AFABF04478516C42AF46BBEBC72719
38C0FAC75080169F7301CF3C4BBFF09A901AFEC0709D6C32CBB29F1B5D912D96
569C2E45CFF465AF2FDDEBA8A249D1FBA831ECA28E1110862C783931111D2A9D
AC0C40A40CE7E45D3CE6524CBF56223468C987C1883B80126A38B28A2A66828C
4CAB067E6F73AC20C8ACF206EF6A616B5AF905FF7E29BBBA2C52EE0385F33690
BDADA2B0D53671B724CAA6C346A08DBE65B1C054C0587AFB35100BC9CCAD8633
9B1B853385B5877A20D4B5E9E26C70B028F425740B0D80F2197A5002738F9917
6AEF34CA6EA3F431822B5C7A9EE4B4D7B5CD62F6203C31D9CAB21566E8B68C60
485615B913A00461E8A7DD2946468FA6CC0A06191D9165A36B79DE786773EA72
EDB7BAC84AC54B45CD2A59986577E0795042A5DC3DBA4B99B1158F4693FBC31F
85BE838C0841BA8EEF27FDA86CF66E032F1B0D49461CDD6493DFA98800C31CEA
9AF82AE2AA5CA952A079E1ED9416BB383C12155843895629B71900A3ACA96791
E391EFB307A27F866C9C0AFF5C36C2EF1EF11F3D2EE51F9241BC5F8829643C98
362E5DFF8D686C4C38E3197D40F745BD6E2806AE36278A89B090DF1B6C224658
27E8A0B8E0B8C95C208C3E590F45036691F1A6FFA490B18E3D38139114DA56A8
3FC9AF59940CAB5680A26E061D2F60989A2DD09C3DDB7FC6A25976EC69FFF9B1
17C01C390C3B2F870E62BFDB2444411986183617BF19EFB5DAF155FC6301F6CB
86871B8015310B7CCD19092E38926AF3577F20FAB7B88FCC6940967105F6DB2A
3C6AAB2F000A9CD93C8988AA8FA5A38A2A7BED7CE91AB3830B682067181F1E18
527A7F3FDF0C07D30FB6436D58753F6AE969F72B1EFE29A003DA8B574FD56BF4
A9CBAFDF2B1BBDC28F68D7E819E076E25C4799D60C2CC73610B087F668AEBDE2
D1DC44E0972E52406DD2EAAEC94A7C22FE6C17DB6F06F83C94AEE4FB12D9EB4B
069E3C6460A7A1DFDFC053A705F2BF6CE7C365D68A64D44FDF8C65B8FF346471
992DCA437432E18527EE89B1CD18CE8F6865BBEE2C50DB4A1B7F5F86A2ED82D1
5FCC3FDA97D5DB0C39392E35E65189AF87E4FA193238B26A7DC6BB321D23CCE1
6C49D5BF9B05CB1FB6B146679A710039E6666835C2D79EC99FD56BF9D89BEC7E
504189315DE0E93169236EEC7E3C7ADD9B6FD7F16A7043460436FE0FFF031CE2
0930C273EA543FF78E0AE3487EDE0A148F2D79715A87199138664F3B0EC26DE1
0F277743C54C36FB1E6FB57DAFCED1D207D6716893A2B631360664A35CE2BF47
D21F6A7D4E95C2B8C78DADB7682DF46C8A208FC3E7B71D190D240836B73D166C
BE5811DD097EB0065B1E01ABF5E2D8428D248B1B0E6951962459E5DEFA0B5F0B
D018CE255720FD7AE5A86853261400E889701FCADD15C51FA62DAC3031E1E7A4
6E37E11C0E801D5099765AE51E69F5A96C3FD32EB20E911EFD85CF9289DF78EE
12F3DEB4E33DCD967D167E90C4B8CAE2E44AABAAE30F105376C3964BF75AB5BE
7639CE0FC2C17634E2F501BDAD29F6A0B4858DC52C5A8A9D7A1020F1647CCFF0
23A404BE28D37CA8CF48FBF19FD9398B0A7E8FD29F50BEC1BD11A79BF0A08988
4DF1DBD9FD5C47785C433D4E18A02ABA38F55742DC36E4FF07AC0FC06AB586FF
1FD4C383E2785EAD36F41274FB0BFF94B12588540C0907E3B61B9DD2525F5051
D6FE6B333DB1294356F8115338B221F2F871D499CF39FD8F18FECC0C511B82F9
E49E31925D183E246F9162435B75511C6E9870FC3825D5560B7ED120FD36C671
09A249A03088AE2847AE58E9EFC4E9DA426F1EEE653E11F8027CD26E22B5B745
E222CA480F1F22083A34BB431077AEFE4C840EE5707CE71DD2C824E9AC1BC95F
CFD42CF08A2223068F6A9878AF2A1572FCC0D2366805EC51AA2954E3A21F594A
1AF799CC1A490224BA0FF3A572D2F01F987029EEC652612CE1B99EC6765FBBB7
A2ACEB6B76CA020D42CC5DBF066D9B5BE89B9E370438443858B81E3EA2FFFC86
409023DA03942B545684AD997447474A861DB73CB7639FD140D2153A74CDB85C
4EE381CD67F05D485785B643A3972656820638CB316D079E7E378AEDC45F728A
5788DA4DA45556DA11492921556BF9EB76599D29E0B3CDCE8BB00A9429CAFAAF
47CA876366076C206ECB66614B2DCBEAAEE968D3B71F576256C859884963457F
B40DF07E328A511400F0DA12BA61F879F418D057D61C17FC494848C2EF812608
4B6A0714F1CEB183EDC7B7B7FADBB0DDEBED88A6322DE1B661F5F18060CCCCF3
97875CD9277886572AA8BEE500DE45B0279C4F2F9436D8CBCA32
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC8B64E3DB194682A30A31E9D23ADA7D5C0259E2410A72
D9504CAEF21597965D669100E95B8C450A3845A54352DFA15984693F8721BE6B
C8436111546A70C5B35A2390E5D3C43E8295CF922FF601D611725D0D5D9EB2DE
CAE11F3A66BA22F94DE028A8861FBCE564DCF89B36A5F1C621F0088A5E41311E
9B82067883EDC8BCDDDFCB6A87C2BCF37B79B1F65339265C3BDC27CD99AC7D74
8CF26DF4B25B62F3A47B378A341378AB1E9AAA88112469298B36645A69B98423
DDA04A18DF5410EEECE859A081B2D1D4CEB9E40FFAC6BD2F8303F58AD7686B3B
2D3EFDA6667CFD49D2238D55D45C48100D476045270887C0AC4B0630AAD1FC0B
5E43AC491292ED829A2DF9D4F2669AF6310773829A90024806F5F20E5C30D804
C575A65416FE521B9FFF6FB1005422A031002633BB99116B1BE6FE34DA153504
03110D8A03FF32442C84B244388B0BD94226009EA88C191854FC5CE6CFD0099B
972EC5B389955A931A37C06AD33548F4F4AC18875A81F978462C08C8815468D5
6B73576634C30DFF297D298B5348C035AF13EE678DA27948E76219462A6F6E7F
ED0769CBBB6ADC755D19F12DF33472B961D2BAA3707F23BC0884B401755BCA21
04F0A288162E71398D99F09C1127B272899CBDE139259D2FB4F683893D4248CE
002EDE7CD81EC929EC288C6FBE9B693543957EC3E6E88BA2696D228555A71ECB
C00B17ACD50C6D8989B3E8688D2A74E9C9F9A5A8859B35F71EF07D9740BCE7F7
351840EC9E4553B37EFCAF93310E3E65B053A2EAB9C183BD44FCF0C4807966D5
1B513A2DDA4538BD974A1B6EADFE9F84A7C5DC8F1D5CCE495AE3EC6EE9C4FADA
A72FC2C4A95C05EDB8B7460FB455222C04AA092C76817C62B6D9BD1D20BD5E66
DAF0068DC9C65C037C7E6832D316727EA0F8268FC0A2D646078C22F4E1DE97D3
5E3A9F12C5C922EF81BDF0816DA99795CA287927968E85C3FE71046BF1F688A8
0AC3CB19AB4DFFF39AE4D2918F2F1BA6CCE147791AFD0F429A3E06DC3E207D47
A7F2D78950A8FE7C80993FECCDEDF261F9F4E5DF33D55934F684959DAE0D0150
7191B845CE8E6E9A843F698C3DAD1EE47A564ADB97D6D5A602B7D3EC89C92FE3
CD3ED8A1A2F1F65B28618880C0AECFEFE1DBBE852FBF500C9B809601603F3DD1
10A38739E23AEBFA53A078277CAC37C3EA8626308D46806EB8844938A69CFB03
B820A2654F1E9784275C7BCA48AFF83E7540C66187DCBF2C5A459522B028AC8C
E99439F07B0F7BD05D1547586057151E55ED1B3CEEFE61FF22F5C7E3E12F57F5
A1D779A887A15B8604A3CBCBDD93C4270AE3DA6A9E96635239FE0A50E03379C5
A86CC40A01B5E51AD92064B5C5C7215796F5214CEC56C0186CEB9B4ADBDF6493
65118904A06FD3ADD36B4CE37AC98DF789900B47102EDA8317FB3B1AEB693ECB
3A91357FCC502562EA664DA13F4476D68087EA7CF4BAF95A80234119B0D0F091
69AA5A5879588BA00E287B5D47C001949F84BCD2D0CB38A77353AB9632122092
C6C3A4C5E2AB38F444CFE8AC2F2FF4CB9E7EF77E46328F6567A09597BB07E2E2
D1383FF2CF6A7072913883FCC3D40DBEEB6F5FA08F721269CE0B1D909FDBEB32
679D3660C7E9535FF39B17EBA357C5377349E486AA0EE078D1400CF7F3867CDD
FE75D9B14DA798BD282D3812381D1EAB1F762088F7346A2450E56B615E162D26
72EBE6774E672B590515688DDD4DCD2F0E9BD1CB83CA045755F44A471DC33CED
A0E5387E4760F7099D5295875E1637A0E40AC7BE3F1E675417017BC22F1BB56B
45F2D7B47772DE42C3D230AC65F8BBA320A942EDBBF5E87BCCF8B4D16DBB04EB
7E176EB26678B37DC7E8DC062531BEE12DD60F4508E6C23C6CD6DDB80800DFC6
1C27E27EDDF8FD17D4F942002E9EC233DDF7EB2C1996B0C94C97533B6063AF52
A03C695CD59D4E5254E9813BBCBD4DCE1BD93D6500812547D93071896F3F16CC
FFE05A5ADB63F2E7667343FAAB41C31CEEC629D4A92755AB8E8A78BD6BD86E48
64F497E9D81FF79D28AFE1FF22260EB1F1C6721C112AD301055641DB60028273
5C7D8B1A25674E7E12F860EA3E7367DA30C38E05F55950C806E9234CE804A646
643EDE2D604D7011061CCFA920E114663CDB07AFE5B63B5A6B991F89845F503A
DDEB65D2BA7CA345F915E1D0EAA8E8384CEE09DBD1F13C5E807DFCBCB65B5386
040D7F0ED3ACED192B183691F88706231EFAADB88CFC9A341CA4DDFE73628F9A
E9A3DD2647D4836ECC48CCAEAEB49981C68F00C16CDD8A36ED91352927E8D48B
61596FA59664DC9BBEAD1BCBCF0C4D2DFCD123085D97423AFEAB69DC34560CDD
2798A970E4F5660C1CF9B4E98230CA2319F41B8D208E075DECAD5134863B3B0A
18F59A9EBFB13800007A28A020E1786A27E71626810FEA7AFA1B7FC71C555226
B8E403CFF95DA1C5E9A7E0F3CC73CA879F06035DCF00B7C39E5E8AFC1FBB6542
6190563F69557D92586EB7375D3B126A2D20B147C2A54E4D890D4DDC18A95590
E9C6D88D99FB820328A13C279A95B02EA34EE110241D0B93AD2BE0FFCB52B44B
3660615E1A9C1FA7270C482B0EAB12421340859DEA1B9037A720033CE4DCA76B
9057A88447C7E9E3418901DC9A57FF0A107BDB705FE0AA2BECE89FE09E5679BC
70E91B6F7E05CE3072855818BA2EC6E52C3756252E36FE5BF129DDEFE9CE598B
3A0CA4D07D28AFCE14719D88F977D0C15FE0D78DBF7DEDC55066123CC357B862
4CCBBD9790D3B65E1D84FDE32AEBF03AC94B3AA0E29AD6639D14AB42FF111813
07010BC5DCFD2D5C9C76CA298FB4385D795E93AD47E23775E4C41A6C23ACB49E
08DA36E37BE7792524E150014FD66F6AC614F009FD2D1A61DAFC64BC546E9650
431CD0BC186AC949D99DDC5393F8592891D7B31D5621016AE90440837B5319C9
C94E147C49BC97B94C091B422AE63E98D9A3BDA7365B57B9771DA040F3BA9C56
F3F5F1CA9B49EC1B4440C0B7568F21B4104CB823FA3DEF3E95BBB1BB4A3200B9
2FBAD9904546420EE2243CF4C277DFF35598D98CDACE36F5310FDF4B74B9389B
6B09C200B4246AA82DDF7CE15936C1E3292AF97ACB04FFB2A485C36445CDA29F
8EEE402D8E684BB469677EE3135884611BB11BB50022DB0AD9A4D55A844DDAB4
52B5A50C9AE2B504D635ABDAC2680F56A47CD1E09CAF32F862EF254C0DBE3F0F
6566AE3B1A764DB6B80F35AA1D9A2BAF4C4CB226D64CEFBB3FDAAE430C6014E8
C7E53CDB130CD468E260BC6B3A8E376A1DB0062CFDE22FE93AA3797F24524DC1
B358CE61FA4B3043053A00EFC5B853007693A887353E61D2E9B169414C5F961F
19A3E3B5C62198EF31310E46B4D4890D3405B9E9D50DA74530F8CFE285B915FF
EE8B0022F85AB468DD1B2C10E96F6A5A4E0ACFFEB32BE83336A9B7FF7EDC7271
21E71BC88D3D672C7EC6D09DABDC508E34D901E2267D9149974C58E0E638D61E
827135E33917141E30CACEAE6CCEDDA9F4F0DC85C0D1714CBF9CE61E9EDAC604
5C2BFF7A4789B209749CD85963463405B21451CC7AB7E5B9976893653E08CD95
916DEA6371D12D3E02CB14BA515D321BDB90ACCE20C425FAFDF8F05653F5673D
E08F7424E35E146F002E43273C0B9B4A54C2F4742BF9027DC48F3484550E74AA
8CA001A8C4B7548EA24EBC1D278D776B1CDD23269FEA0EEA5DEFB4C34481ADCE
367B187C8131F9D8DEDCE3B1F9A8CED2F1A649F49EFBA37B10C7A15F004FF392
6F5A96FCD1791589748767A6DF4B92384624BB351BEC51905406CB99696B2586
39B3B6E39BFB97CC8BE7FCBAAAFC15FDE35DE88855579E55A4D71F4D5E2CAB89
5E1E55B675D7ED0CD28A457436A26D78DF5FE938D2D7ADA463AEBCDBA3F42F20
F58D03273AAC3093FDA21159A4EC7874C97974BAC73C71648AFB1C1D5EEFC516
756C5CE07FE40973A478FE1D4A2D1C14562A4FE8EFCD9A06114B4DDC1A0EF50C
08569865F2C35042
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA4119883BE0E2CCD156
1113CDC4983460A31A70C6614DA60CBEA3A564539DA028D46BD8A6C8E870451A
F92C3A3D555E94EA81503E0D53C0AE8AF190625DF8F48C433C5CA5E61B61960C
10E340864F2D181B835CC0F9C87C9CC0E95FB3F1824BF5ABE0DA3110FBD87806
4770B0F94B263E2C7A3D9DF14D9BE01BEF9882A1EC2C8DDA5931F895D02E4FF1
CAD0158061CC26D5256590E51541844B9AE3A861D6412B59941B7186BC31AAD8
9CC7F07EF9A36CF5C32F54ABEE8B83306227DF64A1F4E9B350DB04B85024FF0E
6FF4C8FDEECC5DF7106C24975E54928A3679928D4D84C98B3D33843CFCBD8AED
A1A74438EFDB0BD68AB2061EF46D65CA446C190A6BF6E0D8DEFA1E8EDDFB5541
473187ABC3D34172433CC652E9B2516AD0EEC9F452135D6AC8D97A90DD4C972B
69C05585BD438731D0DA714733FABC30765D6775BB68C69704D0BA5D6DE6BC5E
10342040FAE3CA1C359295C7D2967195AFD2D94BADCE1E95F17F0F95B5A683ED
8DA83806CBF2B803C94B5A135004A20823158454E29255E8846AB1AB9E444B82
AC000DE047EE32B5C7659AA3999D8CA1D3941D1FF042DCB7834420A2CB78723F
B40B625D7418A892CFEBFF58AE1CD0F128156868B917147969EF8319C216ED3D
620588A8D3D13C4737BB89F1FE17EA91AD0A119E1754916E4957C40F7642AD75
0E847F04D456B101A89F4E76E6BD785EB1F605D78CC0AB1425CEB017B47C1D40
BE68CE2BB94BFFF5120F91CB493BAD5966F870FFA6AE560AD6A82C3B0AF0C810
C12CA6C41677519886FD5CD163D6FB351E2918F4E5B5D5A27FB8E57A24EDF9D7
42EEFF2C7558A4479E25DBF75353BF0CB3E744B9009BFCB1D37E21EC06E4D7E0
2762A656C0E348FB75DA17FAFCFA53893D1ACEFD8C3EB97C9E7E5C3C5A303193
004DF6B0E2446527C65DDDF917C6C8B730247D89C817FB276D85EB671AD64DB3
4BB09368AB12D82CC4A183ED86D2841E499B785084AA21B81AF837A206A50773
FDDBF92515FD7870D5A35EA64BA957FB2F6990DCDDDF2859681D7B7D5566779F
26081CE1DCF8FCBF985B41005EA0771D928990C0BA6CB7E33875B819AEB1EFE3
7A3656C9B2060A89B3D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86947215D
585BABD246585FD44C7FFBD5B878504A44F08C38AB4A35ED5CC53EE38F810C49
4CDE233ED8AC7E692EDA8CE219D733D37296CEE1118362904F622FC22656FA58
65B5E26CAD7951FBF3D7B27121FF01DEA6F49C7A4498656B8A12ECA7752E0477
CC7F945AA8CA30ECC8B017D3365E4F2C4D6F555DAC9A6D17C263F63D55D6424C
58ACA31C6B17A617B342EC92A2FB13D4FDD77DC3A85B2508B70FEF36DD289991
A16B4097497EEB38F0274AAA1341AD3BB645B0D7F97ACB233FFA576119456D0E
E8D5F85BD47E3C79CDB4AD769ABB374D1B705D61C428B44B213057725969D808
B280BE2A969D2207BDDCAAB6AB26EFDBF7E27A57CE61292AAD6582B3A661F4D4
8AFE06644856C8C9DCCC07407A115D6D45B7DF6929B1C79277F3957EA1805B97
8529CE833B1EECAF947E67DBA704AF3F29618A894235D7DBFC1153A5F74EED26
102EEDB139492E743E82CB61CEFAC99D77B61F60FD9B0C1645E399B20090DBB6
8DFAAF4C6C1919FEFB6E3E8EBF926C2A91C5281153D5B28BEE5E71772C8921D6
9D11ACDDE095D43077D6D8E8EEF114F60F85935BDBDDA3362A11E0BF7854BF4B
BC52EAEB261E696CD413485DF93CADCED318B5FA421EF0BC594EFBA262EB2C41
4E43D8ACC9CB195D12F3B2ADBAA0D95A443F525372BDE229F13C485324C60FD1
D7DFE515B666ED51FB61F69E18AF955D6620C95021DF41F66204845581723BB6
B76B4C3C2E2E5B8584AD015374BE36AC1E08E1C53C079B8BEAA3E0F907086AA2
3BCD6FA9812375C8E8D4ADF7A319E9EAC6238093C798878E5D558B30ADAFC1AC
17B04381C6754327FA7C65AEAC1A2839A9FF799456B6E5B9BF421E82415746B3
63938E88CA325AE4BC6B36475154CACD25A07C74FEAA2928802611B4AAC8DA96
F7CA93B7288B2491380B2F4F87646F6BA42247F5B593A0787ACF533199348D11
730EFF7C25DD5ACD0221075ED47DD6FE8909C387D8F02A88FD24540AD71A0FED
2665CFCF412B99167152D35BC0E671E657EDD876C39BA0ED4E790A79D8AD6723
4A2C9360790E4981671E3F898A1157850F48A5E0F299DD9078866AC4AC771A7E
ECE3275C26835080FD2AC78DE88BF65298A8EB4181F1646B5867D0EA3446F4FA
176517141B75FA51F69D54478E279EC2855938CB532FC260FEF5CF3FE05F4F6B
1A6AC463C1D1A24E7B41EBAD57574D43E06E13690F831AC63F570D466C8DE97C
2E08CC01056475E95FB467E2F3B08917792C1DAFD35FDA10C0E14D125C730ADC
BACC2CBB9BCBB0BB982F75ACF33109F8AE7ADE4954D0B1E1802506DBDA73CFA3
DEC72E83650F240B54E88E51C065039ED16C5B958CF632FAC74FB900E04B0B13
B26BFA8A80D5663FAC4A5C3CC6895C0717E2271C6A3F722B2F6C2CCB04097EAF
EF211683EB8F6FF2306B741C9455B48094D2958B832B76458887F0FD9D971D2C
75AAA237EFCFBE0F14F797E71B0E19D074858D2BB30FEDEF6C34FAC40779F603
770BA127BD4B9E4F5EC52314B25837FD118062685FAF4391CC91AC0ABAE56089
30E599D101B7ECAFC159AC2335D6DFEDAAD93A074010C5626DD9470582E82C12
2DAC32220AEE7C75A5BAC24E9E43AD56BA6B5B915CA1A908C4180B7DDB99E3AF
5C45072D5FDE12DD81276D7304AFF3059366F293191CE257782F236FC2299F6C
60070DD031F172CB2FAA0C0BFDAD40BD3AE7D647B0FFC9298FF9481A19CA03EB
E2F1EEE59A3D6E3FC23B65AED24295DFD94966CBFB46E98286E8AB5BBCC5A8C4
31D8D7BB6D38C459ED7811962AD08A130D7781F378AEA20293910A7716341DA6
4093C33CE11E30603EAD00851CC85FB116890A7C58F795071033711947B65B0C
07BB7FE129E446F1A58F097CC13CA9BC695F782ADBE50737CE43B15AEE7EBCB9
0CE9D7EB1913D307114496116FF0087A48789461E310DE9062984F6951B5AA2E
BC98536501922114CBB2D9698493EEFA925E555E776D6916E68159716FC183FB
83834CA958EF2A4210A873E6F7DF8F113E86D87F7B364763BBA1AA81F9D7B871
D7EAAFDE0578B3E819F2D472E963C4FB539A61127D80FD783E271DBEDD8994F8
A2E9F96F4F81D178EDFD36B63A9E05D8F4BD13318C16396253CDCB9E1EE7A887
8F02E0B498DE9C1A5F110347B7B612146B59530538023BDA6569691729EA004A
3D96F0FBB300F40752DDCE278F26B5D50F9C8BBDC7B3D5D144869BE59F0BE9FB
57853D65DB474E4CEB98EAAAE80FEA3557FC29E982F4E43B182BD85FD6FF9604
20E3B5F8A1C120887EEDD7CEC677E95307847599B02E5AF54BE91F662979D0BE
A1CC2205A8493A22D252AEBA66664B2A0FA2AD5C2BFDC446E8217D3E5D67616F
A9C8D25588F1689221B896E4663DCB2823847EA18AEC15EB3464CD20830192E9
FA76A8D8C8454C7E9ABF6C0F725BC64477D228181C86BA782F4FE02493A70F60
73CE5AC25BF5C0579654DB07E4ACEA3666110AE5DED90584F99E14B24810C5DF
7394EE947676E459D57DCBB3829ECEFC74DC1A1B3482A99DC90EB52844D07B8D
4D86246B30916CF5B9EB30CF2688AD5470018A3F2D47875FBB75E16CFFEB450C
B8BC91FFBE6C83D561EA7819C508DE4AE8DFA21E23DB7E05FECB7CBC4A049B24
336687838F532359D6FBC18512610FC852B07E15D4B247573263395579F2B2D3
3E0A136C429A9D806C2CF8AB15954BFF59B4AE356D1DB3175DDC2A6AFD06EEE9
950911F36A1763D775A7AD326589828310346614F45671DFAC0B92FFB46990A5
043226AACB842E7FF72DC5293A139A1594954B9E6E669547342191612757ABED
E0E7A1D8E2BFD7B3EFF9DFC8C9093A07D4EBD0441C8F97FB16B6FFD1AF0AE162
ED84D3E7F1847319F0CEC21CEAC836C52F38D5506F7FE03CB4745376E6CBC2A4
EBA4E6AC870900F41101A7F4A280ABE1C7F736EE916ACFE714A3105F413AB68E
1BBBD8C2250C28C0BEE7B2EE7D3880C925978D4550C09E8E89E7C834710685AD
77CD51634BA4FA15C441E4160DDE659F85ACB1F058AB549FBEAEF52C05789919
6A1227CB2BF44CB5A1C8A138514DAA2B9120AACB6F30ADCFD2D364E623338F48
591719102119E9423BC80A628121B6317FB8E40E11E48E61DC6DB3FD9113EB71
16359EBFD88ECE219BA650EEFA3DC87EB05F6EC8D79E0B327E651C06AAC2897A
2E839E3A2225EE93EE4085E9D4CEC2DB8F0E70853D17814C9C0B8D4D3415222A
EF8E9741440E8423E5DFCD5FF7BF21EE316AEDA07CC10156E17D08C708D13559
F506ECB281432C904833AA8A04CE21181170BB05CC2CAF62830C2C50EFD34C4E
F0583E7DD4F2BCE6792B85B17D049CCC1B5B0FE37EEABC61298A192E2BC0FE74
616331609D6DD131325357A246370E090BBCC5FF8C62B894E007770954E9957E
64833D67577DA11A28BFF1109DA71D8550A457D6E545A6B2402D0FC042A613EC
DA07F513155727DD54F4A4B32B689E6FE556FBFE1DA146613EBBDA1751567BF5
8497ECE9A3EC6E1114733B84BC09F5DAFE5425FBB6A943502C0333FCCDE9366D
DAF4BFDFC82C6DD7D44B615A6CC1413997DAF01CB6DB881279180B6FF68988ED
BAAF5A3E1C9CB6400B4BC9748F5423ADD67C1631E60F3E687ED7D9A4A4E01E87
361F7897A2D28A562A935226FF823955C3AEC375EB5D98CAB97B709C0C4FED92
7C9D39B41E36C19D3B5EE34A8B4AE46E1C2BDEA679FF899B2E62D89D132868CB
221BFC42B80B297A3DB0DA138A7622A931DA293B0F8275D06C38694C8F8DC44F
BA56F4F763BEA8C2A13A6C9E4C7E80725CDC99096AC0CE97A76285EE60F39169
E60361E855D8D040CD9BED9B720F382DCB8ACA6E354376AEF7374AE1D4E2CE8B
CC2784FBE4E08CED552CF57B4797990520D9CA6FC0507ACBA12A3A5D052E77DA
331A705CE078F9A35DAB04D549E236CF43DD5D5F5E5B850F6335D515D959FDC0
F8FDBAB19F346C8B396B5828234242D8506E84527CDABEC674B1357CCAD8A7A0
F596EE01EB476BAD9496455B699C816852D5C351BF142B4CCAA15047C5C35855
C489198821227C1ACD863EDCB0110CCDFB350BA1C7F31189C9678BD132EDC23D
F3B23FC7BFEDA3E208932CB5CBA1AC1BA45DCF4EEA6EBDCD1206243547D82DB9
2888B0702B8643F60A51A6ED31906F0AAE5F86D4FFC6F2EDC7FF839307FEDFFE
C8F435767AC00997A6BBBE769FF7E73259966B461435FF38987CDD4CD5F214B4
DE9FD28162CF3A762A40310717779DEA582740E49F0886F246627EADDC9F2827
BAC12E0E45B310AD8C11FEBBCA6C3EBB1C0E4AA0EA12349BEC2C0217289E81B3
6EEC99BC608634070BF82CE46109C332BC95B250DDD47CA3E7BA19388DDF3C5B
474F5374D80D469AED90BA08D8A72AF5EFE0A67D566EE4E202722ED52BF7181F
5170D732ADEDE423C12758D23E791F163DD2224EC5DE80A585642F714E72C9AC
F7E71468888DAF2A7A1D01761D3A68F29E75AFBAA5AA9EA029F95B828F816484
772203F3CE762034012B5ED6C2DCBC742C4B8EA64508AF6897483A2CAAE445A0
B5C75D5B24CDB8B7144642812FC3C2B9A4A8BADD3CE8358129796FFC38A7CCD6
BCEE19C4B704FFCF76DE2EE4D976BA9A90F152D68E756C29A24A789A87AACF67
6B8B93E5E8FC0CC4A121C38F9927527A4AAC3ACAEFB60CF4AFE5BDA993616660
D1BC6A8E77C180BB575016D0F480E3CC861B8131DCEBC35D8EDB5CC51BB8EF1E
7B6951BCDB7912EA31A89407093756D72EF332FB941F41A8836FA917B3D0F963
892C7A014A3AF8DD342F6BD1F4D88AE061EE6F462943D5CDABBFA19B4AE92A79
516C2AC378DE479B9877082D321C9FCC928638FCC2FD5B04E6E2E575D64BD63E
250047E910F5587847B9B4F6BC438425D53EF412EEA1488622F560512DD5FCFD
BA9199FB4221F42A984DA973A1690BC030E6B9994F0DB9A2BCFB8590285EE09F
F45F2D070A7FF5391AA9BB2001FF877043CC101B46D6323843FFE132EEA49E11
D6BD6E0DCEEDC2A0860492A232441928AFE6C02A531DB33EE368F0F87EB50CDF
D0995D0085C514658D7A1084DEA5C3FCD95CB18521BE3733502E1F59F53F8A82
820CBA3C57AECF77F315157B95D693D287C2B543AF840091D69A3C1C428F1802
ED1DBB60E01D4CDDFC2E9BE4709956583F3B9EEF0BEA80BEA49E3CA936874EAA
3662DC4A2057235CEF0B996012BCE35CB6D949F4FD9B13B4C057ED56911268DB
F678B100B2E41CFA13CA06EAD9483F0CD4C4FD97D7F7DAEBF8092CC3298DDA29
4EC608D2505321FCD698C721748909EAE6E457A1307933945F052757D481859E
E0591709662A1B521B539878818276E4A5A5219BA86664FA20D07AEF6DC4C3D2
5B0E6BA61F704CAA3B934D724BD33EF52F6EB0456379A5018902545D6704FBB2
34940BD3AD8C75262EF6C5B60BD81D2770945D3D6D1EF7B87C645710C734A192
7474873DD20C86A1B5EE88A52F32C284DC5ED17653DFF7A89F87CF2348C9946C
EB8C4EDF53155B961B6C22465827E8A0B2C3BF8416A3F738EC0C9FC2350C3EF2
9619FFF3F800B951C6F129CEC3F6C7F21AC95E4E94E52B448C6CAD82D8CA00AF
3A35859345EDB591131E8017BA9EFE095875312FE70BC7770A03BD2E15CA2714
6DE12236D225460C34527BF38D21D9BFE25248E909CF3776D15C3B89BFA8B4CD
1B3701A0FA68C7E230DAD77D9951288CFA8CE4D1FFA3B942DE041262F04E6FBF
CB61D0C9755A1E6B0EFCE23A142BF2A61C072A22F9D743F683C83122C2305190
E68E3A3DF08794284CE3F6FA6E71C0550A9DB8419642F9E1FD36D119C88AB055
7483220715F82C7AE07866B1F040B42849BB161F8C5058DA20F5A9482DDBF7A3
D1A4667CC9A1D236D4D282C85ECE5BC741110E2BA6A05131FB8726B4230BBCFE
BA4C2591776BF39E2B6F358DC65C1CD8320CA7FAA5E70BDAA612AAAD51CB1F0D
ADF1EBC898F8B7E5275582F7A29888DCBC8C59DE0A5C01FE0E5F3EC7EE6E6540
D5A2602E63A04CEF6CAC90369FF71A3EB16EFAC41D22D1BF4B1F3BE5DECFE2C7
694669121D5623921B1DCBE64808E61F4ECB42CE42FFB593697B786ECFEA320C
D49838B5DAD0117D48865826750C586B6B2348A7AACC59C362864C9FD74B9E21
8E053ED37FBC0EB204AAD253FF338FEC59B512C2E66618B19A9E2827E94DBD4B
E8F8EC4704BD05F836EF0E8957540141BAD899AFC4C8A656A7EC50ACE67FC707
24BBA20AFF928DAE47397075327EED7195DEE9EA590237FF9462BE3D409D7DBD
88E7D715BE5C52E83D1D0F9C9273F5BDE64010F443E8CFD42368663888593BED
5A906995BC020FC00BB090534C11B89490C5C7222AB73AF9B8CD4CF8552EC4AD
3377675F361966D3B408BCDF5672F2AA31FB2A32A4C0367F3CDAADB9A370228B
DD707C310818B6C6F47775CBD59E060316A820A630ACE9DF4BAB3DE9B5E2972A
4DA72A6BCFEC4E47AFC480BE37CF5450DBE9B37E12F0638352EAE8A9C56346AA
CFAD4043380E9AC409BC09A2FD62C42F8ECD856EDBACB6271CAF8532698AA060
ACD6CBDA8D00D12D8F361B497A5239CBC45DD80EB4EB2331FB631B71F69D6310
046C1F5388F3ADD7AE9A5B364AC04F853C9612C58189EBF333433680E91B6F2D
32A270159C138B2409D3A79E946E56800424139C91ED5F64E18887CD987999B6
ED8D82D9CFF377612406011A3E283257FA60C5AFAD3B71CF6D6772E5E77FC44B
430B0CF7FD64C0DBA064ADFCE9115EEDBE11EBC9EEDD22DA465986E17D046965
48393512567DFE2EACC581C69174F5A031A854336C4DE2FFC6C0F0BBC5F9CBAC
84F9AA092CE32C60102BE0378196A107DAD0FB7702DA320C851DD736AE1E1636
174399D9E9174DD406F8353DAEEB9A28D43710781EB7D551626AF11157521937
78827A5BCC6213EEDC75C8890DBECB670000924D3BAE8E7A812E4BC10A55DC4D
B309601C4181DBC8C580ADD685C4090EA14439F3F9B954C160DD452EF68F5BCD
D461F9C843D3A7F033804EFBC6E42630479C6C1EB0B8D1C223DBCA46785DE4E1
9331BD9BE6C94BE2A550C3F25994A35168628E1794F24481280A0242E823E22A
4E32669BC829EF1B7EC23FBD0F81E8B6583FD578DAD2EEC2611FBF05970840F5
A04A66E5F8C165CD0D254DFB8F56C192F0F96AB790EC8BB8792E114A0B3B5AC5
FE262A49649B9FF8C8C497A8A4880B683118A3A2C7C7355F5E45FB504F626A4A
E877B20B61BE229F35324501AE0F98009DA9ACC5F02B818256F567351C971695
F0EF665B905F4B03D3D574FCA16F8C627F19006CC52D9E451DC21450FD3DBB18
715AF1B3DD5275BCB2DC287840236DF4AC604119029F54CA56938FE54F076F82
EC251D595E38D5151BE1944222C1D76DCD3BFC8CE815CF8DC0CF6D4C15FC110A
14C6B17D80C299C3E9F704859D7495D9E1AD240C5C1E3E022AE56B69F785C8B0
DDF9A3963D0B1161934B23A5C5C87D078E2AB91AE37BD4586C793B4E7904D236
27E2FA765DA5E53BE9F3AC649FD0A0C09F19E9C0302071E598DDE8D62065DE44
ECC7FEEFA841B2274570DCE510E39D6CC4DB903456BE423233DA8ECCD888428F
7B2D2B92EE24D950ADF5EA29DA3443EC28D399200BFC00FD0236F2EB01AB075F
2EBDA663508C2652C3F19B527DE73595318B43DBF896455A0810307CC13A1050
AFDB5FD2070031BBBFEE555841446B78E89DD66F9EEEF258E53D698E3F2B7FA8
42DEDD8B61E413EDA36A71E7B6110CAFAC612E3E67F978245C452F80C93A8467
5B71AF94DE6734578EB4A5B62DA3D016EBF582A3D80351CADC60B733E50FA695
EA1AB1992D4B7116517ED596F3F7BD651D9AC4C4AF100F1876492ABD03520B38
959380B6F051ABBD09BD9CD5004F44A82392F73D16FB82BCB6BF1A16587FBD71
F44A2A99B97C058F1CF5B88FBEF99742137438E51623CE0E21C27DCC5D7E6290
AB1C4B10165DE8C3E9109949A8FC60CB1B432B54EDE3A9BF589E24299FD34BD1
3605ED1672C9A740FAA22309F3094A2950EE0299930BFB1D34B257F6603C8D35
590CEA6A16E993261B6B73BC61EC9CC7B9F5F580CF88691D35FDF7B2A3B17C64
56A86FF9C72B59ABFFFC06F5AD5700A7F5DDAD6266E74BBAD5754ADF5D302238
D3130ABAFB058534BF9B357739886C97C3459D8EC19A8C25FB825A5CFD16D9AC
883CD07A159ECC675E6A0DF76D5B91D5043DF8419DCF881E4A57135CE1EE3D8A
6963AAED08D5D75F78405FA20565E8593A4E99A03A359309CF928E284E50261C
B50149B5DE3DA8E9FD9A8AE382FDCA312B030E422825AE97E638E539D1E22D2D
463042442906CACE3F59403B19344D5FF0747242DC9C42A738EC6E4DDD168E78
817B72CDDF15B11F1F4383D669A54DA88514AF3F36DF5FD7E3659796103F5B01
3D89DC6BB1318EB98C5C8DFBA2792D675DB574EB20E6CF526580DF20108B252D
3920883C966C6C44E7FFC2E83ADA764F9BEB8F974247A8299D8F4BF422EFC489
C6A256FC5FB2E4DC52F6885F2E1394A596001FAC3C14C4AE3B287732A69E6F69
01090B2786E5848D7D8CCF4DB4DF6BE1D14392EB5B553D82942B1302FD3BADDE
29F623EF50C9B12A3133CC173653E1733940CDBEC9B476678A7BCD0C6AACB88E
B42F5C93A198B5A109CA9D14EB30F6F4C1B85C7C55C95F21CC9BCDB0162BDAEE
9C327134B56197C411E3E34FABF2241D1D17784CAC36FFACA451C02169A1AAE7
85395DE0BB380F806B9B25AAA1D11047B48EF2CD97626C86330A565A6313C91B
57365C9E293CD84D7FCD0058393AC73CD1D23D5C8E17CF1B43A482C44FE52E57
AF48D492C2EEFD359AEE06232DA7EBC45D51B25D1A18AFED9664E175D191CA37
22D2E3950782EB4F63CD5071D346C0281D6795BEDABC7C47532B4B80F77BF6EE
43CFD08C97E5D11851498AD5DFBBDFD2AD3A45C0FC93D273C16FDEF6ECF15718
DEA609CF8EE797BF0B781D00CDDD6F559195A39693C973462254BC1B1501FE22
953A7743F8782E654A3E777B06DF048FAC43FC281ADE45FABED5C979A487A70D
B34E373B20F89136385827B7980C2FE0ACB1C6DD0CBE8069F818CB504EE9C2F3
9A933844BE674E4BCB5749A99AEC79FBBA92A27965AF40A71E05E4BA8D7FC76C
309EAFD25B0D6175D567B8BE86A1AC1F7D05D239E5435D056E01C1A481E945FD
890AA23745900DF0B0C1850A9462C1591B12A9B82CBE1F3F03D7E973E74B0DBC
A8021191660D4A48B117D5D4B19467429D32609EF1C4A34506C0F161DDEC1020
214029548ECB03F2BD47F24840FD8A9C7F90C99D1F049A3D2DB0551C28942259
1AA1BE76E9D8811E1799E40445E29A10318D320D2C81AA5DC978B9BCC0993871
E9718A75DFFFC74395B532A58983B2FC98BA123FBAA321C56E2584CEC64C4C76
9C96DC633E7802417921A6D16DA08C3ECC3FCC369824089657FC7259316AEFB7
64BFC86DFE3CE4A2AD2F1014CD74242AB78F9C62DAF28A240D66F004AD731FB1
9DD0D9F5CE5A9173C71760E7B2BD1AB594E30D797581F5A0E81AB0F7AA17B86A
51567AD17C93C29A9C4516327A2627A5EF96679AB980561E778CAB39F889A684
064F1BE90B82FD30406622DC1FC92423C555A7BA87D6D40ECD3E65F1C2F5E26B
E8448977C155321F731E001901E053C8EAD6D875F8B1D7A65B3CE33921DA5D3F
2E4484D88CEF40CE313C8754B85FBD63D69CEC2F78116EC8583ABEEB71D9592A
FE1D648DE206EF919AECF374D10611219620C3FB3B4C61697013B64099771B7A
614E53D6E49EAF8E8C75650D5793750A85ADAC3617AD77C899FE86E54B8BDB14
90AC76FF84E5C5591F7CA26FAFD56023EEDC6A1D3AC570D6CC1CA8D0C0AFA3FA
69E0FD82A04759D4161521BF6739131AAC956612204D8D0EC8AB2AB23D244FDB
EDE098610F35EA1148C03D60E0D67A4323F17D9178D32482B903E093F21A891E
495D887B8461CEA108F8AFFC168D29F067A65A548CB9C2880B31E08031DB686D
D167A1899D248BAB65950BFD39B7EC4AD830805823B738044BA1025DCE099BF2
716B9A918FA6C536D97CA3805B6AF48C7C20E49586F975FE55188C75096057AE
CE6C61B6FE484CE582EB7FB1756746BC83E8E043427C28A2401F5ED30A4C2578
F068E1C1E5BD6740DDA1F8B9B0F1ECD0B2CEEBBE31163BAE7A683650121894B9
D280C4F16906654393ECB9D7420083FB2FB21503D2FBE78C1B07A8E09A3BFE3E
B5A5B70EE4451B02F03C0CD7781B4461023CA9B728B39E500E11A88D68B94757
4C1DB2834483C460A5B2429AD49BD46119A5E4C8B419499D3F6B356E3548C00D
AB9B0BAFFAC1C63248AF0E1DB32EDCD71B48CDBA049DAFE3EFBDA7DE95A27159
BB74CE9AA7E2465DF8BB191187D14A7C115824034D0440D13DCA3AB0CD17E5DA
E88D33AC9465A5B4A61CB85E51ADE05F6461CD7ABBF7382327A2F9AD20398A1A
0EE48F5529487A198EAF6D255658FC52EE48924D05BDB80E51BFC1904957E07C
9D70BC63616D3087C785DD922E3DF197DBCA9EA7EF270FC45C5C09ACA1CE60F0
D6D931F4F54A0DBCCA6A3AFFABEE704EB7E47D99AECBEE8450797D6AEA1A9D7A
E2ACB5ACD2E5B15B0525D2D995F6AE7941F78325CA190CBB2659BCC601BA85B2
14C792E09D5BCD4C4FB87316BC327ABA5D5F5FF14BFAABDAABAEF221277A52C8
94A2762C1233B77692A278BCC9B2010A58ADE3B4B548A0EC5AA55A6C060FC787
87E69B9EE1215D658D71825B795DCE254E268B4FD7D591A617EC7403730DC7FD
C3F6298C4728CC5F255059BFB3F5AA27D10E337086144AB09286BE3823C15518
0832F10589F0FF9F1D002A4194A89B0BE1A6F12FF1911A80F453FE60FAC91C0F
1C634BC8303F88931CB08B75BB691459DCCCC211E44D10C0CE6B2EEAA9BD1E87
0A0687AEA01E611D2A9C5C0AB25486AC71014AF1E166A150734A6FA75DBB8492
79484E894C01652893337F41A01EBBD2FE4DC35FA945B109E02BC9D0CA8F2F54
C08E43912F98E607A891E5DFE6228FFAE7F13B55C205F1CD47C0E9F98963FC56
6AE808AE20CAAE74590B3DD20BCEC3440493662D137336A6CAECDB5D61979894
55792CD9DF342489D3D1F1EB2FBA7391581255CA9B40078FA0222BBF2EFCBBD3
0636E1F31B355F9617AFD58A54622F0F023A8B82FF19251B1D3735B67FF464CD
57295728A95F92A1A32660FA0D8A24F2D5873AC94FF8E0670B96D9D3FEF5F040
E7D8CF7849612AEA754CCB377CCDCF82983431D7C8840351C3BD6136F0361F26
BD3145C75C837C6059A02817E893DF04072B5D76AFE97A87CF71BFAF20B682C1
335904DA22349A847ADE3C060AEC69C2987EB4068372D9586113BBDECEDB4192
AE9991497A922907E0CACBA60043869CC3E1517463D978B1858E5E38F0CAE3E8
A207A6E98111D319AFF427C2FCD1B346DD76961F450A5C68403768D472C7A3BF
07DDC78A7E0B1B67BB5D60D4FD049B0DDE72B9F10BF392EEB7EB8AED2B53A6F2
E4D90A333A5F16A4F99BA2C4BB3D31412356B9E978BADE8500574E69F777EDF5
F4B1F0A6DFB54A5E3090CAF3572D2A92B052420828B5E48ADD02D81256EECCD6
57B860FD6FC29CD731C92B3119D2EBD8F814419E6ADB8B9ED01F79DBF5693A13
447C5EAFCF1C69D5DB0F42A375C8F65C8E739E6D7E1D56A5E3B35E6A3B7095BA
DFC8C8CF5314E78365B33FB1AE6A8D8BF01B7536F837FB8C5E15C269A950EF05
859843F1A457422AFDBA4AD90B8B08E26E327F9147EB85F02BD390F1A03E4136
98437C4B16EBD6039963CCC4A4F0CC5F8001B0EE826F6408B2C70297ABAC30EE
74060BE1BCD51B500B94E95873D7CAB9DE9A19F1EB9BCA5BD92B4A41ED77AC69
EB5B4F52D02C2976D1E73518555A838AFF246B3124ACCB7724D871B833B27EC8
D100164CB1D2ECAB12621EE46D4C122E13B628411B56102B368F8189601840F6
015153F1F42478DB0567CCD330C85E0EC31887CC77A67B94DAD9B8A79C6EF49A
77AD2CE1F58AA706A8B1EECD72F9EA0F2DA3A53491DA4A394F0F4FBB11452E71
C1D098571CAFFE1003CCDA641AAE2FCB016CE841C8093F2D1A0091952AF5A379
884FFE3FCACE343FAD0E5E5472383EF01DF09538C3534FA42B211EB9D2313497
CE64AF94774045AF60230D2FAA06E9F7541E748CC70A242005236AF1A851FD15
833DA88D133DCEC111B98C1EE26E43D808ED0890D2DD3D375CF843A2FCDE4F5A
2C328443F322F09C75F1E01FBCEECCC460302CE19988D5B823BFD687E4423E0A
63D3CDFBE362DBE83BC1B07B9609C4A5F8893A3D1EE49219C18D89F01FD9D257
7BA8646E2DDF3551515C0FF335B0FA6EC75B3E512110486970CC87B26B2461E0
3475A03F9F0AF2120EE57E2F91F254F997124C32D8E39EFEC1F7E108AA326422
D1BFFF245799D31494015423108276819FC53B4B3711DF050C76BD44F1EE1837
ED4629051BF30E37CDE46DBAF38F0A1F4D09230BE9F582DD36C1D29166502DE2
7CA758ECEF83772BF72932ECE7373CE5E1657429DC967A46EC5472F138A7435D
A6DB7BEDF34D729653D9AD2E546415BDD866C0EDBC2C630792CA9CAEBC0D80AC
25FCC88A6C8E50C6DE7CE99AB4809FC019A0A66FC74D095FB516BB57497EAB0E
4F882670391DEE75C7120AF7B2C332D660EFF7D2E74BBCD85E19CD2C5EFE34F6
C7EE01399210AD384EAF057756BF468EC935E3E881D60D776FE586F593F148FE
71F9F73D8E1AF64E98063893F6DA04C3AFCA9B59938A8716F6E5A41C86B3BDE9
31760FD3C19F2249E7D211EB02457653F21CCCFBC9E1FFF4C3304222CA8FE54D
CF5364857EA20DB515C86F99D9F39C0C4E337231FDCCE50828A4055091ED6C0F
F3CA23D7DF02FE2FE4DF2452F8BE15E7977ADFA32A2532DD0D47F63266C9C114
CF8F9241DEFDBF4E85FAF84F5D7BA99BDC00BD46E83398E9BBAFFCCD5611F9FA
7A8D7916E50695434F6F03480F29721F296617E1894F23DD8C9D2E86B403DCE9
4AF8EBC4464B28E6697499481447EF02271B749F09A38059935D9CE585D11091
9B32B20378D221A48DFA662C280C0A1BF9F7B71C6B7065C19C13EDBD4F09AAAF
2781E29028EB5D7FA5C19B51D32678B61A21D07309BB58F86C787BD8A8964FFC
7821CCBE04BEF72CC04AFE8DA0AFFC8DDF688C189DD8B5B217A5C98E52B208D1
62E2C153C10E6D1C3501C575E16845EAA06AEF30CEDD4FFAD24187DAC4D0CD59
B87D44AB8123B88EA78AEEA7C85743FF9A7BB7931F60F07C19C7E3CBA08D7530
230C360DA49E97BD5ACBF0F43E091C83DAC95613C4FC718265C7410369F6FA62
4AACD2BFE5D8B31A18C096AB4B4AEC93880003B890564E1840F8E29F561DC878
B26A2F7C2AD8E9177AABB7B721D7440302D3F50A273DF58E4C5280F43BD88CB6
57C7972846D95B1ABF923C586587C5DEFB33DFBDDE90588A52DFD8B3E41AACC8
621551B1C0AA3839C5EA112E490464DD878518AB90F41CD7BCD8BE7E9BF0C0EC
D8CEC00816D8B04E378D7378C3EE86AD30DDA7DB115D9475FF0CF5ECAE33654B
59D890561AAC0B8E686C0CFC10F93C92B4E2AF729F55990688E494CDE69D6591
E0B01C780C1A753922F79E82766F5970AC48FE3C2F06DAB6F244C7030B19FFEE
AF89F08AC895C3258F258A567BE25D0A91A800548E1B7F196931495B1A4C9FAE
08DD9CAB012CD08DC795CE9E6603DA890E6CBF99BB41F6022DBA5C585542853A
4E6FCFBA95E31E2B92E78502401DA7EBE72E55AB10A4988F03BFDC68FF939A9E
DD9FCF739BBC5C6984702DA1F854A5BA69064821723631BA0C34DE6E7B9866CC
9EEEDD29F9D2B7C4178AACC1B132C76836033F4BCAED9135EFFEFE489DE9B051
56D1742638046DDB81E194B5F2A56C58771481D1FBC762743EFFF7378C0DAA9D
C0A5A4FFFAD7B5CA5CBE471D151F33AE0EEB1D8046169186702A682F0D275D8F
CB667D674AEEC41A3E4912A6E35673C5F39DB7A9354D946BB87449B73583E9FF
5EA1DF2B904989D15AFA23A07B09CB2006BE6AFE2B3F176ED3A02D051057B35E
0F85501E361729AC40A398707200D8AB2ED2752438EEA409CCFD4900FB7D1C37
FCAF9AA7EF2585B92F4BD6EC21234434374F52D7FADCFC52E425D75C5EAB7999
57AE89AABB094437091BD97515AC16741F4BCC856F544529A5D557521132154E
6C79786F4C4D9B54F6F01F32EE9DFA4315D50D8B9312B5FEFE6E983CB566D63D
97119CB34E5B87902E04E190B71CBC12F033A1D5D20EBF8530E7129D0A90AD3E
A1E41EBC3DB669C8E4378C777769EAC9EF09FB04124570D4D28AADB63411F870
A4523AE8E16F422AB07D8800C1DDC7F46B0DEFDC72AEC255D01E5F51EAF4AA7B
9D5F72B936FCB102E44C07116DBD7C9A684E5BDC7D48AFB0691F1C65ECBE4947
BE9A831FB15BEFF1BE7574654748956A7DE6479C37367F2CF0155FADC6333745
C5FCCEB5988B3364CDC37FA5FFF1C16E10BF3F3579F9262E815D07B30808D536
EC432CF649CA8DE43725DD3882EA404E294F44C05C9A113EF7087764DC87F756
B0FB13F18CE2C0FA3E5B5675E4C0C986F0D069BB36557E2B5FB0D0B0B9A57FFD
2AF29CF234AACAEB7C35BD18745DE29942104A7EF748EF11B44524D5D3B635AC
0D85AF6D86E16BC577727110ECE390D24DBF800C06F80826123CCCE332F18408
2E7EA603AF86666346BA06440C5A69E046694753F5005CDDB6A2742A3F124DCE
F23C4B72517DF5AEF00958EAFD469488DBBCAA5AF7D55AF8BEAC43FE41AAB6A0
DB5F997A6B7A1791756144700ADE725EBF12B8CCB47B682220859C957D0B8DD0
236AFBCCF1DE77539DA21AB1B4803CC515471D4FB80DF03D2BAF5E8AA0962B28
97A77A491C0062CDA6EF5CD186DA8AEA4E928F9AFC3F94767351DCF88B921501
112659345785AA4B7164AB016B3EDB4F832D78B36A5FC1259A0ADB6D511632A1
393B8FA0C282930E8E582963E24884244A4FA4E6BED9B540386BBCA583120E27
5E5D1D919294B7B0E741663592B2D14DC332375587E28425D926700B3D1C6838
0BCE267634340CD7FC85D95258BDEA93665D6B5D337C8992099875EB2CE0CC12
8B24F9CED68BCE525CF0179652D889AA0F486AA9EC1B6F5A2C5F6610F58CEEC2
E489A9095E22E8B3A80158DD29A70D27CC8A66B59EA74E0707600CE680DAD4BA
EC684B748AB7A6678D6401E12584CA11E4B7856A8B966065A5FE585752CC6245
5EB0EDC41CA3D19EC86A4F20703AF7D5817B8FA9C1628173289CCEF949030714
F7B6B144FD4A0E45749B937ED7152C5D2A7DA12ED77DBC0353766158800111CC
D68CCBD3F0A6D5525F94863B13F09F0538290332E9684C6E9B3ED5E276711B2F
91920762EEB97C9509C9294CEFABF480E80E295DB0136B5A011CD1F5EACEA168
48775631E408A17DB21AB954CDAD0B26959810A2871D2EE360C61B50C4AD9C41
0488D5F19184A7AA8B1AE2C858288817D3FCC778DAB1E69AF8D8106AC9B63581
CB046CA41499403B6ADED106990C69F6FE5BEDCCAB6C5E54F18428AAC53A2372
5FFAE7E017A42A696F005D45D23642FB7116B7DA9C6BED5AC1956098FD1242AE
D172D2EA3864A7B26CC654E852C347143E2D746FAD22585A29A7C028F4AF5C95
B496BA32C088EFDD557BB27B206307EA74BBDF05B1636D0C89484D0B8E48D068
3B242F36F681D43DDC5D8A5288088F7CE7EF710582F17326E93942135845C36D
21262393CBBA11FD3F0FDBD798048E2F14862E3A629221339311AC08260E954B
4A6DA6617EBA35C373EF259902332ECB4A3310E220599D5F2BA3B9CC443858A7
B55E8D0E17F7944B43840C08B72A7FC2F3E58ADC509DAEDFC79293ACB49433EC
FDCCCE59DEF392B46C6F6FF3D2F70BC5CBE08F1F9087EFA60393FE896526D589
D8B4B63898274FB3CAD68EF2CFF05B066CAC329F3D9B1A1CA16D9D51FFEEF04B
7AF5F38B219ACC90F85D6144F4E38ADD0EDC240662FB553E583C4694CA417CC0
29ADA68F6A0DDC1BF80268E5088BDBE5E056BC8108AA38C115B664BF15DD89A0
C42D17F5541F323EF6A35E809C92808A73B72D814B4EB8A07FEF8A4C2EC80B6D
0FA871D940A66774C049F6D782893CAB60C036216F0921619C4F8F89FD777650
542708E64FA791499D4CC025B90A096C923CF3B20DB98665DB429C11FE38B2E1
048313963B8257ED203104C3E85126CD8A3E726485CB9B85E80D678C8BECD3DD
2965AD6D13EEE81647141D20652D88263213846A61C260DEBECC1EF70DD55434
CC951963D2A9E4FA7FBD5CE49A470899F4F83517B5AD2EF191E0D555DBBE0E11
80643F164F811C470475CB227050F70FA7B362CA90E1ED3A58D453C42A91FEA7
B9904FDCC97F47239D7E6BCBFF7B8624E8C1D94D3585148823E7E2CB2979F1B5
150B63CA3BD1F036E4FFCD8E877567B5033AB124F7EE3BE22A427A6AC9A51FB5
794795EB2A1BEEA95DB85B7E23CB0880B583AC806255117C5AB3764B6430F0C5
C490A1316536622AE1B20F349525DC3A6DF235AC19A707BCDA2073D016A6CE2B
13BE39F9AFEDCC72780FAFD5531BD9AC36076A56451887463098A4F88059F6EE
3674F47F9BBBF966A68DC7E3554A4936EBF3D1CCF5998C723EA7F7BFBD8CFD5F
0CB7F7B0E21931965B17736B405B7809FCB996E99208DED34537CE2D91474AD1
0745A47EEF268AA1B135AC69B5BA12980A59E1FAA9662788BDD866B2B54D40B3
4F7961BDE96BAC05AF9C7A619BCE7722AAFD22257A941CB42C399D268D82E563
2716122EBD1C4D66F42A5B63C7702E2C5EEE0650959182288A08340F232546A1
B0F73838EEFEA5F02D44E0BCA301104C929C13AEF040ADC9B80EFEB0FFC0217C
44C9F4D0104ECC9675608DDD946CC745075442DBEFA45E4F1005122C3B92BB95
530E900AE2E30B6AE41238D7E64A96A086E1299D3062ABA9484CFC349A62EDFB
1378A82F25E30592565F0D10733831CA2E4F1CB932EDAF25121D52255B9665D4
B4462F5110163B2E2F0329FF8FFDA9A7672ED8A4C5C59463D86CDAB7CDD3E0EB
58077281CCF396EB492B611C6B99EE8656AB8B1C668F88B87573047150E3338D
F3B4D57625F2C7807CF250165FB546D16B296E2A0DB3A7D528B222871F54B0B7
F4B9F3996BDA617F7DAB697B68747028114E86B87E1D5E3B0A4AA9C77BBD935E
7F0C151D70F32A1B251584CEF231F1DC2BF2F4A37287FD50430F68378D074338
A4D63F48EEEFE760B77552358AB757D8AEE572F69E7E17802B8F1B15359D3409
169666AC6207D5DDD9206A3814C7FDB09D1CBB1363C687A55EC1556D9DEDB9A6
55EEB4B0E5BD2F7939CA3DFA5933DAB0BFC9492485DB20F7B3F9EA6FF70105AC
9FDC1D4C97832D4793102884A1349265040571AE49E260ADAC23525C1DE5532F
8E392725E89FA737E45BB182E8B760660632BF9E253F8A443B64D921F919E184
1C26BC28F092C7D516C4D1DEF07B3AD764BE856C69D56F6579693CB6D0314914
A7F66C66CCA7A0F0F4BFC114025595A9FAF9F8C612BBBD629D95FFADEF267CF7
C697BE4A70BFACC247062321A35D2006E3ED63B6C5FECB9DD508C8FF2F794CE1
C522923084A14E0577C17D569DA87484D74CF2DFB6861BC85CEA8DDF6EA345B1
BED28A8EFEE408348CCEA96958F320EE069769E9F5F1E56DC09D2DD4C569F0EB
29F7BA7B4235D84AF77DCCC9D15B567135D5DBCE689FA281127E6896C0C9A4DC
DE48FD1A17E4224693B6D3C9727B3B5ABC5C04F64C49AD3D758DD408ED367798
CD81F2D41B5FA0EE5FA50EE2A23E388B7E2CD22F16345F1E1A0480E9DFA13A54
480898D17FBDF12A3CF27E0B37E33B1895F8F935628480AE0BDF7201D4C38744
B41EA2AC315C170F158632C17F42128EAE3004F46894726008C449CFE000A0AB
E41BAB5E0DDF849609B9D0745FBA5A615C5677B107A435EC6B3EFC6D398C0EE0
905FD12628EE4B3CEC9D872E3D11E1EDEC05A8C7D87D28E28C1E67F93DE35FB6
1FDFA5A4C78E426D6F68DFE42F76B635086E6CF2D3D1EF05061D80B563F7306E
867FCF093BFBE01F261F9A567E44986227CAA8DC8553696CB4FB399EDD477006
873458444F63A4185530C70CE70ACD09D1D2915F9CE67F0753FCE4BADC932A10
8874E3C2DD5BEDC7D42B4C3209635CB657E93BA8C6C018DF7AF7E15A05F59D56
E5EDB90F192981B95AFC6AD412742960F1B7EA0FDB1228C5A95592F4C694C124
E3C0345394D2ACA81933F3C9923BF68B2983B744F115492C8F03055C0D1435EE
59BB3018628A0270BA5CDC0AA1BD5324AA8FA22B51713DEE97D83DA03C2CD02D
DC2E8883D654E0E86389E084A8529BD11F724C5B6A0D8A87A4A860118EC1E5AF
1E8C9FDB232903B049A0B9F4208DA90123CAA9DD0D86FB2C527B7006247D9AC9
7CCD001D3278CABE41232DEBC1DE7BEF545A6A6AACF7C7454E23BB9F5242E31E
BCA55151933B7FD83DBCB52C61C0A96FB1741E4C7332AEC1D41CF4617D9CA1E6
C96B8F3B66A45E870911FC56535FD7B200652DFE101C358A4A82E1F8ECE6EBA5
73E31E85AF973755989306FE4DA0D661AC884ADDD838518095CEC38F84B40898
02A732F22F310469B026B3811B2E96279EED539AF49E8901281C6004BF069B74
70FFDF89014183F32B8D7398BA1DDAA0D292FA1609D14B38E9D8D634E0D71734
655F7C8FF78A830ED1A8E9FC75FE97A0494DBD60D2B82C9D42F099ACE1743C74
70118E6D7588C7563C030024B86644F41E0A37951CF0F2C8953179919790BC3F
4177AE4932029493668405ECA4B76F9500F32234A49974F2BAE982AC2DA8734C
83A6644FF0141595A38FCD48E0151F69B09EF7EAD0A6AA49D3A62C060E5638C1
CA83726A9F9EEBB814A0DF1117A8A07E09DDDE39F13812BD49B12D2F18DC30FF
42FCF762E5F9BB623801E557E8A537082F566E73C4C3C500CD798E325C588B5B
71A906A59D3DE64AEDF9B4CE2928CFBCF1802DC3BD56487C93395DFB0527F09A
03A8327D52305A19DF49FFC56301D5C52D520EB8BF2E613BA92BD98DFB3F40E6
2C47C40784B4D91FAA68F79950AAC12508D45E803A32AEDDF7D79EC833F70E70
DF9EA4A876EF77761DA6768AFF1C80468551E82593219AB39BF20402826B8210
EE7CCCF06B3FE91D12AE88814DDFAA3503BFA50C6CACC073D17B9EFFDF4910FB
E7E51B059452C1EBAAD9BF3F3B07D53FCEEF47D6EBEE92F9AFD82D7ED343A67B
22F7F2EC273C6987ACAA93ADB9E8459CEB1B599924F45A70F069E09F05D1A26C
9B31B9F907DE4FD07F1DCC60570CB02526D099B30191D50286647933459D3ABB
1719EFA24171D3E508B67D68BAF10B9381A9F25FFD647E044206E1567B2541A2
E348B84A804916C74FC6E5E282E221D7657CFC94686D9250AA7ADD01C0BB4B50
0D960AC91D6D938D0FA1B678F31DC99C3EDD82E581327627EF539EE581DF9EA3
859C44D7C21E56BCB9B45A25687A8CD2E851947683E057188855E4EA0ED503C7
B55E1FE989CF0BB55EC84C02CDC6FFA3D9651CF31D319EC3E9463F4998E5D546
73EA8C2D689329CF618036FDD6BAB7CE267A2C8CB4597AA83C6D523F568E291B
9B454F5DE6BDE46C7FD629F7C421C0B7815B25ED47290EE7AEA289767FABA66D
203158F1D78419F2DC933B6ADB72B6710A1830B453664166455D888CA8A3B820
DB6BE101296BDF05D2961D7600158978ABC35805453F84CC5EEC991A5CDC8C34
83446D725EE08F99D3CC6FC472653E6AA7362C730D208D667B7B6FCE4FE3D6D8
EA918667FC1938755B13E3BA28C706D35FC79D90A58C7E57EF785DE8496258A1
74CAF18243D1DC4B27CA2AF3D488D9F6229B65CD8D25CD028BF976BAB28DD864
3F711FE424013FEB9540B9E9EFBC4D15A945E047E5D4C440E91DF354BFEFAB24
789C09A105F92807316A387F49F889D0D67AB344FD72EC01A6A343D596C7BEE0
9D279147E69E7A19AB91CE76ED3EDCE807835F3A6C44A4E2DA5AB6545DABAD70
6267BBB47DA03F82D5E67BA200E39A0DCE951670E08C365BCAA589B9FB46E97A
B020DD38D71B7D671BE8ACB8B4E56AABF265FC35C70118E421AD66D3AE4AB324
37C58BCC4B01595D76ABDBCC5403CA78B37660FF853B68A5BAFCB4F1BBB90BC9
6AA1876AC4F908AE00246F395248E914A6496CD9BE43DA79080CE4579CC908C9
7093BACC39248D4348467EDE3A8D5F87C12541AB4F5CB01DFBF5832725554B10
43C942FFB68A5A50E8885364FEA80C1C02C837180D4C71AEB48EF6CAAC5D4912
03FF51634E98A5183ABAC259E46358A3B36ABFD6E322D01D630609C8F96F1D7A
31EAE290C58322CD9EC73E29A912F0E6267B74316AD3CFA839A3F2726AFF3A2E
092658E4EAE3D37BD4C4E854BCDECF5DFC2CD7D09ED923234FD2A3B133735BF1
C5976FB22AEF42D03E33DA209123B6E2B3AB4D52FB04D3036E3C56FDFD6359F5
E3D1F2E3E45B20070540FF096878C197312141FC1142CB27760DD320EBF2CA5E
BD456112042B008E6CB2BD9C3AD2B3F9E256BE6B9D2BC2438E3EC12BB534F448
B511C37AD295E6F385EB1FFB8C58835E14FDD8FB04712E5E8E2EA52E4183F35A
BDF05D23A0031FF418499B3932620296F23667B79E809F5F383B60B8604EABF5
670E8403F2EE79EEF6870D8F7C63A702F282DC20E85EDC165E296A1AA4EB2828
773501C351FA9CD1CDF8A8A63DD8B259120D115280A481561E39AFD5EBA2B43F
18741D1527C0893A09F73B727A34DBA11731B1EB7CCFEC582370D0B5BFC0E245
CB336A48445E64140F3096AC095EF9356F70C4C1F5CF3F84FD75CB36F23C8108
BE0812E7D1A310F23BFF8150C3937E1403ACC7BCCA25B4483E6988ADAC106A24
40851C66C8F243472A7741FE95EC5269FD77281E2F982EBE208BA9E142F0BB64
443EB7D0F6C3883D195661CA3A1BBAEA7BCB4D94F561B999C85AAF3A2346EA93
FE7B04414B71D626B84D2BF6CDFAE2AB99ABA68FADE90898D7F48AED17DBEFF9
C413DF9079FD3A534F666DD35FB36CA0D8264EAA3C1AD4F21BF74F5BF076049B
AC620D7C544BEF828A51B4BC9F972EC5B389955A931A37C06AD33548F4F4AC18
83064B844C99130FA462E978EF1895EDC4B79EA6F9721C99E377F29D405791E7
A1701989FB0AA3F0D78EAB67ED86F8BF93FF5CC9FE8D9AD16D04DE108727FD7C
001FC2FB6EB36340C2883222A1C90CA4E934ABBD8126D8F06C989FEE15BA6BA6
2A5182AD600021BF6933AAB6E358BF36778D9C9534D0D7792191D9E9598F7F75
37428D92FD7F95BAF17474EAF2F5EFDA50EE18D24B530786B970ABEEF82EC8CC
7EA5D94CC66CC5EEE0A720EA93FCDBFDA56F63E8C3543DAF3D296585FC6AC72D
767274708B95C16BC0ACB213112B9E6B2763E75FACD64EF02754AF15E6F66D58
89AA38107618EED26B3A0F96AF6224714534463F25D7CB28E1C3E568D0E8F5DD
1D495317B859237D7F5218A3AE67A8BDEDDBF2F325F764F52F4C14EFAE04EC52
C52383F18AC63FA2FBEA7BB5AC21A922E66DD9ABFA4E344BAA35CBE05263C438
6AD34C06AFB200ECEA5BA15FF061F873DA9220FF3CA685CCE2EF273103318DB2
B6FEAC5843087FB8C3DC0072C465538AA11CB7781E94F18B5E7ED330B3AEA3C5
678B97DE9D0C8ECA6C61152B56D03724734329AC83D493D08F0C6B9F09AAA010
5D0CC4D1ACDCCC6441B152778833D910E0168B6F3915BA3FA456BA16F12CC442
232E819223D7FB9DD6C6CAA328BF57F4FA281C0C79D30EB03988B4B040791D55
7DA31A46FD5F280FA2187A8197CAFF1544C76C128632A537E9C871617FBF122F
7ED5B36C3AD33E1B31038F25819C130B7BA3A84FEFB319C569DF3CD3C053F6CC
C206CCC848A8A56F942F13366031C22F0A9189488F94228B0127757402E83710
95140BED98C953283F17A3CBD6BA59A1AC2BACF1563D22B826FE26A2CCE2DB8A
256400A45CC427443177D1EEE61DA790234D34A4204926EBD8E45D79EB93672F
0AAB8346CDE677D1D691A6C8D0DA000CCDEEAA7F2C6CD09B86F7982A39BC71F4
F96C3CA910B62D00B54AA53AEAF4DBDBF670F1D83C651D4C8A970C1F0AB1558A
C97C9777C550388DD08BBE2872EC3CDD166C780B1C8024E90E670136832F1EE4
B82A2ED84300120544714CBBEF3B632DD50EAD979E1327D0ADF92820ACC78B07
93B9F0307C776C24505292E3A67CB21D5890C62CDA0789E408523360ED82AB36
3B433162461F32B8A683D9E9A9689BEAE30A39C433E290405CCEC52620BA3240
DDFA428077B39F0C249507EC3C3A06501CF1D5EB5BEF5D8746A4ACA9B0683F0A
78A3386F7C276B176E704F3E22AC59E516BDB692D161B41F97AE6B6142277A14
831CDB5135221CB5F5BF8B99E1495AB93A336E23E3D3EBDA9D5E32F1D21471D4
85F512E5886717B22B54C2F289AAC0EEA7F800BC86CA8D72626B473BC3AA7B45
8D5A131A130D9FC359432E5641F97C909A5A02696D96B97A588864977FE0163A
4B24084046009F1E2B61CBFDADD58D5137C263FB1C00B1B93653480A061AC950
EB556E3F55CAF2F4419B78FF39B929627428C3A673694146449EF06590F44644
8C1DADBEF2BCEE271D2BA5DC84A9CB9F06D2110DDA89A3CAE0A3082B99772D58
532DFC4E2B31841F621DB7AC11B51FFC94E7A4C6AC77CD356ED43F1EF73F820B
00E188F569F66DEA6D6D320CC01996194535E5F0CF45E34F3E676FA7EDC7FF3E
684B52690DF384CD7E79F30DF5E911A08FB67D2537EC4FC2BF9A79B5CCDEC1C4
9E24D8CEA807F71EB4E7B5D9055433E026D37C3FF8911320003A8B82FF19251B
1D3735B67FF464CD57295728AB36F6C3A03E2E8A943C94C5D0118253B47CBF7F
E2F3DAB7C248945FE40CF3EF0F115E15174F5971B71163F8C44DE178E1386655
FEEB4DAA80B873E779283DC050BCB10E12B085AA8E721957BBAEF6AB7B413FA2
4CA04A61785C42D2C746A98194782D9A504B2A0A92D33D0EA6781213329980CF
CFB18CF7CBE6C7FA3C27329D0C199DD06EC1056E4450D7206C6F7AE60C952F88
2E485B7E48801C93F72BD152843B824961969AA1317F148B6D2AA454497A7C03
7391001C4C6B6191B336AC4F5BAF0AAB5C123A4313C58D9F29B5C004304B83F0
4462DACC6924DE20BA1509641276A7D844B80249481CE38557F20FECDF20B979
EBD844943D7BFF7A328EF957C8FD24364D1FBA7B64E68CD0F58CE1D60E5891AB
5BA93B1B7213DD600CCB52C207CF1423844608654C815C7B4056E19BAEECA5D9
5F4C42856731B30362F2BD47D635F64A2BDE6F5E8767E560181EC0DC20E7851B
FFB45645EE57221D68D054E603A6E083BDDB9A25BC8B1B05BCD9E873051C730E
CB6E0F01085AA2E37B3DF21B664DFF0EAD54D62A75A2112D33DEA03ACF46914B
491EF0035996AA19A4B171BE08F2A7ED7150C0DFAD2DA0D79EAD729D20E2F329
7148EFED141A81EDDC020A15EF8AE56BC25E41A3E6E6EAE70E670C60093938E8
60467D7CC0AEF5AC334F364D3D26A8DBC1715EF90900FB506C3A0155F44E959A
82B27326A3A186476842F387F8FE78F0965607B5C1161F3B9F4C665AB6C1BCE5
6B96695D911FB99BBBFCCD0CBF64D7471AD16F9AEA073E85457482A80C2B5531
A2E080B421B4100E214A4DF065D122946D1D59EEE2004404F3F920D0A9B50A16
41C816552135CCFC3549FE807D61BD7FAEDB81E145ADFA910C9F0445FE5060A5
68184DF72CCD4FD69BE2E638D1B9CA04603985CC2A1CC2C5D6ADB354B0D2F8C6
C5D809F919A8D0E8EA2DC89E14C8D1F96356661FEE96995872852559FDC61BA7
709F45FD940C02D6CD5F2AF4A88367888705DD7686F712B48B68E649F630462B
DC0742C2E1AE0093867B0BD516557EF73BEECB6E0DAB2897302A199F4CC75893
5D237D32A13617115219729FD2600792A81B61FF78500C957E487EA90DCBDD03
2D720692EA0303D2B5D851BEEC467266CA5EF9F930F301D3BEEAB6F9DBBAEE2A
A447BAB5A3D2A50AEC419B39CFF766F8E5D477A69BFC4B1CBF88C7B8A716968F
6D8B9CF1743D8C50BC451EE4E9E2455C56D3A1B9F70985EFBE689724B632418D
CE7627F42D1F079808B3E8475A9EBFD70116A2F75570EE46C3587FE32175C89A
E29FBE8D717E69174196C41C8E4A869BFAA87442879BFE8FB0BD2FCC83A2AA5D
FF9059EF26714A4CC8923A9135C073207EB3018D5C09EA88CA0873AE690E94D4
3B310620E02C7BA32DE8458AAB95FFD539C34BA46D5A1E45EB406B42CA233093
AAFA54FFA5EBEE24DC0C1F167EF5E65BCA5B3BD78ED159AC2594DE88928240E1
6A7866EF5FC9A1AE08BF70FF3E29BEBF373488BA0ECC26A66F004D5305AE3703
C3F096A0CB4381C997677919B253DC064CE20D0E5956734BFB7D9D0A43F49F80
9D3DC67712D3EEACEA317103961444818A7E97BE04E8C724C13AA0F8003A587A
C9523706FAB55BDEF2D9A3B50D9F5293BC35DBDCFF727B03BFCFC98DC5272134
A27E06F952AE4A069D40AA63CD6E2A12626489869DC5FFE49A00BC74F582AC75
7F0823B5DD99B3DBF699BC3E26BF856C22E28C21755091C2353598B594D78365
36BA7593CE5105A5D4B990B9FDBF4065FC6CA697EEB482D5FBE4976FE37D78D9
02A4BE72A5B5368185230AC05C2672A31169661556EE7692038C99E18A3BC219
C56F6F9B59FE8E849CF8F8E5193BEBEE9050B2C092B1175F139CCD692C12AFF1
54FE02A09B809F42A650A1988615D962C44E045BD8CDED11DFAAC6BBA86ACEDC
40036200C3BAE0532181AC9590FFE3512B667AC78A09A780813B1FF02AA967B1
2AAFAF76DF76325215AD4ADA1BD57073D3599C70DBE028D8E9FAAA448861BB4D
E936CC3A4BF114E415537EC21D50BEC0F8865144D1F7DB9EA01FD9D1EDC42B9E
EDAAF65E0748CB663D582EAA5F87C30C6E4D3AE356170904E2016A35EEE11153
D1431E63A25EAD363168EA1803EAC4AB9F7D674E7089B4D57115306585F543EB
D8811E1799E40445E29A10318D320D2C81AA5DCBD6A833B10F327FA3BE68C541
EE8DA5E0A6923FF60DEDA3675F3E623B132906D4F88BF1D9B997866C79AFD39D
25812E240CC9516DB11C16E26BAB260DDFDAA517C958D360B60FAF2811FC2827
B7E98A4A3C8BAF8691733BF4866B4269D8EB39DC6D4F4CA355ECB144B568E536
EC77A07B96322802E09FF8F579B59309F9142F9CEB88DC7864AF19D322B82856
0F713E39BC15556741D37E9498516E5AA82B3A339A32795D60C5D75C33E69308
C7119435F4385A8E782FD7C02F080B0B5EC5DC0E339E3D30D6E0B0744E9EFACA
1AA00897940717180B5853B68A1EA327F5E48E1F44F10F7AC2BF4E685F502B39
58A1FC3BE40ACF50B32AAFCF0F0085A34F41A9B297E8B66948A36431C99B60F3
15CBA2E781A6A677C52A60427176D702F0F1E7C46858AC7236A130C5BAA5744E
CED5515C36F279870BD42F5E38F4D4F39348B96EAAA299272BC5719AC5BE57AF
5575DA099BD84B8EECCF8AE041ADDEC1DE86C0500D74334EAC2C6D2BD4D78057
167C44B6FAB1037FB0997B367483D2C8C0D44E6111CEE2EE930F4610AC6A84BD
327150E6AE971A7E893E368B8496EAED8A184D87E401ECCBF6DFD3DEF05D530F
25043629E43FEBB36CB925822B8D27EBEFDD075CC89C3E20951493352BBCC25F
ED541C36130671C924761C3BAF25E1DB18E69627C294B1438B4AEB72DDC578C1
249734429BD19E171609CC7DBDB3D27CB0FEFE0BFA5FC696E003BDD17A94FF1C
762C859E3EC37C4227707312D6A5F93D7942A15FD7690FD5390F2F836FE52E18
111F2DEF5CA103F0F051FB4235EA90B06B8186CEE9B57C3EF3F67C8AB8F6B5E0
C89A401CEE28BD18ED7863266125397CFB0152D3DB9967F7C95CAD227A5EEAD3
076353157A3B3947CF3FCB3A753B26C42C45E0DB8CFB173D518F6C42B0CDA3B4
C5CDDDC2DFC3A696F8886B8C3F7D8C5899D6ACABE8357C6AE6DECBE0C192209C
526736B990180F6CD65DF32A144AFFD8EF0F4FEE2DF1F839B2A5D900EC89092D
CD6CBD111186A0F38F642291A39BF62F08042A01A6191C392C74669668112F67
1690E2E2508ACCE62287038B549CCAA0ED3BC3E1AE738EDEF135E6B3328BD50F
4B6EE65D2DB6ABAE8133C7BDA5A03B5F487C4E72C9ACF7E71468888DAF2A7A1D
01761D3A68F6D1F55B299B012DCADFEB8FE99007AC7E0C796555994A6A9ACAD9
91877F8F9B9C3E5BDF3CA4828A38AEDC5C2B836F5542A40C33B9C539B403032B
A6AEC5F0CD878DE8C588334202428BB8E6083F17EE04102304F2F59DFAF4CDA7
170BD216209890529F4B4AFE16A851A18C01E81D27CD797DA4D343AC2387DB87
CFE3E9559461B690E02143F6DA33DAA908377AA57FA696E17A8FE6B6F2BECFE1
99946D22396E06DA8FCA17AE838B467E4B0756936D8DB0925290F014F7C5A6B6
186991108B27B151E8D4F7D855C4EAE8DEC82AA77763238CD33D0087B2FC75CA
D18883113AAADF162B023352069A40E436A59918E193BFBB4953AB21EDFDCA58
BBB77759499E1D4A28233B284EBB60B62D093C8224B37E518DA31B4EBCE4E343
661E2C9BE7CA7666A8065063A0E849960DACD746E6CAB8A745F440BE173AB90F
611685FE9635A0F5DC4890183DD07B316260DAE1B682A81AE1A5D4B3326832B5
0B45C50D8F3B912D34199D9778E46C37DF2447C343BAB5CF6D6F7B82AE7FA98B
F36721F963251C667912F605356788B31059712DFECD2A648F4DDCCAAB3B05CC
B2CB624861704F5A2E99A7CBCE6683622AB1A2FECFD8B025C2CD224195F91A18
B8B8E036255840C735291DD559CB82CE0E8028A28E85AD8F215BCD3C095458C6
317E4FCD7DB2B2FDFD991181F8EC5A00211D237E1287F900D5557019CD90C609
83C2D9E24D4245ACC125867ADCC571C1F70FA8326B8593679793C85487C0571E
75403D111C5EFE83AB5351D2B15DDC92F10775089CF00EFC3846B680BB0FB087
E05642327E0398E95CE5FDF7ADB2965D6181D0094FAE8255E099797440C31403
7C7E13F3D146873CB848F7B16C9ED8D76176AE21A24A0AC523371D10A3D5DB87
946CC03E07FD438365BC17C850FFE3F7E590C71D8976E1EFDA06DE9CAD13D618
57519977DD5BBD317B3402D11CD481BC672E77066012F35BD4B32289F7FE8C66
A6A82D7D7565D45B6C1AA0E3D26C56EBDADA436649A0E14AB04AB9A742DFEA84
42C6E5F1B697672D9BC06AABB13F6BA87C97D8DA5CDAB0611B3248836DD9E546
50EE2D2F3EB9248BC6A031C82223EEC29B326C19A0212D4D8E504D7B0B0D7F8B
82D8347AF8394EAC829591ED123B2C7DF31DD0284AD1E23380FCA95847D1E5B3
90059F800F3DC7EC74AE271326689E007EF544C2324DD24A7CC42A6167528840
E8C30572AD06D6EF7B0ED471DB941811E9EF76D4FCC9FE38AC9541D2F671D9B5
9780A91627A17CF2155464C1AA8412E1B70340B7940C14F68432134001A54A2D
64BBC6DC9F746E2C432C2AF2E86AF8169D031A2D2652933D4F316BED1A578EE2
FE1C19B9ECD4A7164F588C08340C74517253AE5497B6D99C7C1BBE56AD336C65
6DE7A216D783EF898B32ED8FFB445134A9805F40B3DA8575E8B7B2C8FDB9A87D
88D5D8442BD4F65A6FD45D1BB735AB6E7A4164F8C45252BECB5B92414038C55A
93833DD44F15ADB2A81577A0BA6A227BFE8D590992254C9ACFDA5D5D5A18E5AD
CD42EF2EC8A8089EE151CFFBFDD570C4C889FF6E06E89C0A4DD6352528D66FC8
39C05297F8AB66A0093B23CD49DC998B0E47B9727C5BEBF6692FB8A31F5ABE35
A198ADB0555C4F6C3BD429A9EE05742C16C60A4341B505BB4602DDC56B198B4C
B36F84A23EA3F80EBDC8BE46F2F150FBB75F48EC5E3040ECF8447AD5A1790D5F
F7ADA634926D571FBCF60E1669257588830E381E5CAC468E24E61EF1A4425F9D
30BB8BB0CC7E8FF81098FF084DBF9436C45BAF88292220B1912DD2A237626E80
B95C9BF073F3FDABA9E55DC9DAB89A983ACA563581CA8BED68399C7B170AA7EB
4D60CD093EE435C085784A781F0C903C50961A42E5B6F7C9828E175B751E69E9
43C5786255A4DC7DD81BCDD240E3E95E2F4608EC1B5CC2A7A5B54FB731B1BB4F
FCFC9B218F481E97A4CF748038702E5BB172656315B8B06100E75C90C36EE1DD
997DB4E2B0B06803F83D39A3B9FDEF15DA1FA75686714DC617CD9FCD6E1AAE28
782CA4CFB3DB382F87EBD49273FFCB8879DB7AA11041310FA2CAF6DB2E11CEFD
AD35CA3EA60BE112D018A1907AC27A3EFB141B56DD004B41378E9F96C0247E0D
157BE5743502A41B07CAA6214D77A9F6FF44FD755518688DB56F7795BB921B4D
9FBA7FC344A11696A15EB8F8B62288376B0F959AEF7D3E933A0347B76AAA8B00
CA7BAAAA548D35CF0F04AFD65A7E44E10038E952D7D222DB53543E61AF31D100
DB3EA0C3728F2F2F6F2C5F4EFEC4C0CBE41CAE0129E9F3CB9D1D32F101A7FBCA
C0A225B27791F6AACBD6B7E01D3C30B3D66BB1B8EB346C615F5E30A79F2EF46A
F98FF43B1D23ED27CBE1D6EA81FE1DA580CCB52FDE7CBFA758E990A77EBB8358
37A6B88161FEC445841CABA1D2A59B405B86983B45E6E06C376C331F091A8579
6A82788E3378756BCE865F85C4B6E6244E5CC893BEAB521275D0108121C2D778
E31AB1A57E4F424403B407AAF88101D7E9CC89CBAD30CB4CC859C39D77191124
E694352684D49061E9685FE4ECC0921DFAC0A37BDFF530845861D5E5C2EC7E59
783CA6B2BCD57B4AB80E8594BFFC04C7F2EF1F1ADFBE5413CE84CE78D848B748
9D3AEA31BF316342A6D5EE437382CCCD17492A0A2714CC00F05FEF56879FE0F7
240A1B663AA360F71295896B8F275D9423DBE3730633BB053B59020B7C6D09E3
2B7AD77F1645EFCF7BA5E07C667227EF142D06BFB32E643BDD07F61D79F78746
C5238C5504416B1E20DC3C3B167FA1817FDF25DB83B273BA34E3B624603B6536
5E15A90A614D3B24F00E11C97869C841848EFBACAEF9E5DBAF7FAEC6E4550D24
075C9CD47B1070873F9D00115D6F5EEE9257AC01495C144A9A0BD2A9725B047F
2104126F64633EDC41FF00D2208CBBBD76524B4084D5DBE1934628528987ED99
2822D0C9469DACE417CECEA2D8CAF0E6AA9C950BD37247401C5BBD926DABAE1E
CF919F7B4FE4CC693AB2FF1F10E9A3D3F8DC2213F643CE0B6A1BF2E290007540
B9CD7B18C88E1931D7C8FBD84577084668C2B9DE33595A91F683B16B5630E0D7
D864FED756B8585CFA732EDC1CCA3DBB2DEDAB067358B0790D209F321D7FA341
72BFC50C04FC2A6D8B62808C761CDC45307E3BD497D7F1E20918511730329995
62DEADE37AB3A527438315E377D55C114BD8277BDD2E85DB854A3C56E69CFFC1
DF788E0A5F7324DDEB5737ACDBE114B3A1FC467F98A7E2F4511DEB9FBAB2FEDC
321C73F2C88F5940C469D8E4B8BDFDD6CB7A2E110FBB161B268F9ACF7EAEEA80
6ED6ED0001C13788D717CEABF85C31BE5BB7224527BD4F6FEA7C1D4EAD89507E
04EFB96476A3B4A2511E2495CD36C0C4403C71A36FEECBB23E7D2774D28AA4C9
0391758D7A3CFE2987ADFCF5EBB603227FA2702D5777E85FC2D79481D91814C4
7A0A3BFAF7465542D6822F564FF771B2D5045B1D100AB5BC1535A37E6033EB31
3E70DFFE30BC12842D17889A326B96D7B16ACDC41332A02901B095C8FF953F69
52B174B492A2B6F641D927C74133EF89CC4C0C419898BC49D9D9D49B9CB9429C
A197321B54562509398F79AD3320EFB4D2DD74E2FB2E5B86F89160CB448A66D1
7F688B95BDA8F401BC2AB34B2B8CC71EBAE8F6D2C9F7B3EF5E5E1F8530529704
08E1B96714C7B1D4F806FCC65EEDE9A0B810C0D8253B244EE74C47F8B20547A2
A2DF2ACFB851E1C22E111F6DB9A7F8D9F240B8532A9124168000DE02623D52D3
FC439A3F6CEB92442AA9CECE368BD12208246B1132BC6AC99EF357806EC5476E
3F28789119F99775D63476CDB2ABF1E4A13CE43745164220E60D412C1571A3F8
A9D704FDFCBD13E1C658F4A959459A4AA17489097EC382B0687A8D701D86BDA1
6B44FAC0BFAB1DEA2822AC4D8AFF79F1746B14ACDB6FC83D45B9D60EBB9FEEFE
E14143654B5371340E1067A2A61839FCCC09E5D6B47F9998114BF92E9A4D8796
FB9DBBA8CDF19BF9C53FE2F29D25BC8614D6C29F336C5E9F60656D2F7A63E341
E85E4574BF359F918F2B9D3FDF5CF9C116B9C5E9D0727A7BADDD084CBD56E873
024034AE2A2783A9B0F73E1A7C09BC62E0B00A93FCF8001BCD4B6EFF4E9F8CFB
A99DA488E9091F51D4FD18635139E08DE67B8A322B656B67E3FECFBF56C145BE
BFAFCE1C65F9E73D86729847ED9CF46EE6DC5B515B12D39204AC35CA6C6957C8
7931BC96DE8BEA1505CC6329A2044B1C0EE6096E008AD67226A9ABBB491C4138
CFE03900577C266FCC8764025A06527A41B0634E876485AF17BF5B596BAF902B
8D616B50EB74C8BDB3F7E1011574D91917A13F6908510AA87E76DABB0844B72C
197DB6D89076C15ACC9A2646A2689571883CFD35787736C8282CA19A33F4F12A
98B24D7F577D69E34A12E6B5929DA5DEA6E6C8CBCFE88A7A4CEAA6CAF2FD9B5F
C4BE76FF1961031A81A012ED7A78CBB3B95B793BB0A0E371CB8D02553D388C13
5D6A037E85B2D5703212F9A5CBCE6FAE4EB6A51D29A3AF781F15F3FF112B1DF0
FD904419DBB2756A19BD800E2EB95866C5287E9A8700D904CBE0018CE3F7F57B
C58432C12DBA3C00BD8BC794C012553A56AE19C8899439214264336A4E41B544
678A9B463A9DBB056A497B17D31A9343E483712AAEC2F0EB03E3EAD909607304
CBDB3C5DCCE929A306205A35431D0B9CA4B6CDFDAFCA02BD5997134E39DCE383
FCEC8D83BCED6066FCC30FB516F2B1BC59192EBC1F52D53E9379D86591B19FF0
B3A016153CE247055590F1D5F1476BFB6A9467DB7E5464F6CDF658359081DB55
863E11A21455AE0DAA5C0FEAFE4828FFF654221EDD00FC43BADA9AE60949EC44
538232FA6F9EFC8CBD35DBA28B7D04D73F276BAC49C085FF58073F7AFFACC511
F8082DFB705C1CE3323F2DD42175DC37C7ED828C886C6C77913D7F009E621110
80520DCB21D96FCA0AE67C02A9FE9A45395CDC48DBB13D7618F4FD6A066A4DF3
5F8912DEF2EECA199594CF093FB8D49DAB28DA0EDB9463FECD217298A7661135
5D1CC1178888C7F0600AA23D464B86DE4EE68060A81E14EE323080F4DBF77A19
7944E1DDA1020BB98FB9C5968B35E4D496E63195374AF98B9D15157BB21D6682
8F6251F206B913F768902CDC896AF1F08B98B1D47F9B49E4158203B144616519
8CA073AD2E3F29539FB7F8E16596FFD4151B332C718B17339B0FF38E6E3B6F5E
02523C7F04E37242A42EE541A38371DC1FC5A8D4C9552B3193A5859FF35E8CF1
66D777CB04A65D5365284509583CDA72333B3E59CCE94C6BFFEB1F2817DDCE73
182A558006B16BAF0B0CE8292E8CF431CB02826FE1D8F246935E71616C009A11
B4D0E76C5D3E480A7CF25A7C89C3C3A7CBF49711C9F6AA26EDA302120BC19CBF
F9A8BDBE876FBBF1B4472C3A841C4C77CB3775058C7AB681ECFA8413DE795367
E667E50B0D83364F2E7CACE30E99F54645A1FFB4761B599CD055BBF881D6420E
02AB660F2FCD0563823BEA3EC790469D288A5AFEE9268A43F34E8795EDD32FAF
FE9B3D88E6AC35DCA31A57B47AE67F8CCC9FDB9F18630202CB0D07137085C70F
0018116AD9D0C2DFC273844AB99D938F79936DAA42E0AF66579C815B6C271403
BB1D7F77C2D3A7FE3632F4AC950F3929EB4633A53F0ABD50FDF8D03480A45D91
A8780B9B6D9BD9F2BBD73509ABF2A75440DFA91ED930F2F411BA880F74A4C4DA
E6B8B86FC7CC8BFD11AC59DFF36CD900141E6C4B1402BFD7BB14E7374121BD22
2FBC8FD34014196FDF7898EB4AC515366B38CF49647CB556B0EA62B667234D1F
0CEED2214231D8149BF12A0748FB8C35EF208BF1828BBCEA6EDDB85EB48D4DED
0091C0B496F9F9793E2F0586A0CE5427324B487F0477471B40006159190919A1
AD6295C02CEECF0AB5799FBF99FF27D3B97777ACA7E6DB6BB5DB467E3E06F4A8
9AC8E959654A51A37FD514AD31293A1E34C9499EB5E928B1C4258381CBFE63B2
FA0C5E7CF1E4C51F3EFA24EFE5C7FD42DBC5140F26C8456566656B289163102D
EA4F85617966C4BBF2BBFD7B688D6170DC50A91DBF6FF4BE455231D33C81CCAD
163FC103B2FE0BCA3E456772127C1599F1937D59598E5D564DF73099482FA753
002A7098A75C74E4EBED8DD26E0EC1C981E7CEC96E1E0E69FFE0868E0B3C457F
37287A544926041F9749C1033BF3AF5145FEE01B42DD1CADA4634EC49C6640AC
F8E638DF6FD4383B1526440D5B6CA0C3DF205E6430CF12FE94EEF6213A492E86
42DF7CCC001A8D44DF11AC50DBB577FF4E83DCA33952E2D41B0A66EE9CEAB57E
4A521F19D20D265FE8A6E08E98C578D93C36C4161A3ACB5B0F9649DA3AA6A684
15403ACD6EFD99B1BA4DC14A26C32A540E5722B5357163E6317F31E5A3292C54
4E5507F6633947E463F5309658F80BB84CAD215EDDA22AF53CBEF0BECD62776D
77F200F881FC5238274A77A1CEF1776ED38C03CA4CEC7F79440D9EA3D7A1EBDF
190DA6FEA6922454C711A10EE60B1987FEE0AAA74DE9CA6D404A7B563DE61A20
F562A5D9A2A855C422D56F114E32C91D2CD1DAA3B83C931EB8C1F3029A0CB561
2099C1671574D5BFC47F91035E4AAD1DD0A173BE50A10CFEF9D943B2F569E631
15E248CB057AA243F946827719467972D634A0C97A1E33BC5505F8FBEB8BA8A8
D7E0428A148DA010FA99A469E8A07CF8AE4184D1D2CE52B36C9A082D657137CA
314470D8773711501191E525F87A3F84CEDCEF9A564C8E00EC661636E1C92599
1EBF73A2AE11E070A7EE6C56D6FA69754C46CEC1B33C5EE7C6A5B9E1E7FB6517
CEF726A2CCE2DB8A256421B36C98F0A195AA979944341C61320B8A3425455D8A
CE7CCC76462297A0EF40FF263C39F55B7FB7C3F1025A4265AC7DDC0C24BE00A6
05A1E775BFFD8817D5347DC44A86F8A5EDFC3EE72B1402B1099EFA65BA6DD558
10DF2D781617671C7441B46CE515DAA51C877D038EFF7C75678559F919A7D8BD
212AF4A9F24D3A4F73D802B53BE88379AA43A365566D11EE94EA2FEE5CAC7BAE
6C2FB5A044F4C159782EFDDEEDE1A9457EB2778030A886E311C644AAFE14A393
8B04EFB4DA5BBCDB85A3A8DF89A56117775D8AD9CBE2898F341AFF06792669DE
7F11CE8C02B557D4F0E3975BBE048AC8DBA0B29483D1C916CCAE2611D4C086BD
69DE644CD380001AF92AEB23856A787D67046D200A0811952430E65DB8A32834
E906DA9795C581F309323851E1E6B7E494919EFA562E8588EDABD019177631B0
54200C90A4B1EB4631C093039B3D430525E70A9FD9C020066A81D73D378488AD
8BA601D17E60A4848C8A25B1BCF17BC1700EE239A55312249D5A676ABF5CD667
DE5764F01E73C04637A052B099195E6E6E522E4C672782B0054BCFE3266DB0E0
88F4231AC1B58E748D08ED339F11CAB630BC1443AC8FBC6B12CCB68784B69E3F
65208F05E943F5557046EBE92E054A1CDDB43E0AF652B648C037886B7005324F
D460A60C2AFBE5CA486D0DEF747B0DD70A427D6A7FFA289AAC466134A0EBF271
67D5BFFD684516A442951FDA577F2F42423A835D0A037E5095C64EC251943F88
C16C542A9A7F0B9753670116F86F88A7E966A7840B5F61B5F756FDF2F7E32BDA
1ED5D171957973584575368EE122F1EFAA6F2053E3012CE6D7C81FE8DE04FD94
69A0DAAF9106B22464A75F034DD19269D0FC91367E5CFBD5C00840F87F5AEE52
F3586EB2E2F4AA9296FE730C18339A97D630A6EE061A117C655F20C1F54C3124
2E331A21A6618C6014ED3674212BCA74651DDFE163588366DF3EBB56B92CE398
1C6DA7458145AEA87742863FAE04312F294BA57190B5C6FD2E610107436E9CA7
59C449718CA50FD5F5176B914557D3106D4D87B43CA421FAE813B722F861017D
1EDFC8AEA6D6770A8AC3D83E255B5E95EF1338EFAB48991083D4EAF33448A2CC
EAC4C7C1FF4F91AAB4050D2F3A3DB09C27B84152969500A81B85C509EDA04BBB
768D3AEC4A1094D10B440B4B15716DAC9FC0E296451EFA85F8959174F536ABA0
41A1B7F2BDD3E8ECCEAB949F6B264527CEC24918402C553B9CA57D3F9EEB1962
800559760771873DE475EEF0F25D337F54388D6A6761AB46BAE21F83B068F503
75EFB3B0715F682BEE7ED59D4B2FDD0938DC110D2D488263B19660D760781C2D
56826F986CD1D60B17DA2A733E0FD6401E4E2DCBF075DBEEE45210F28CBCE253
B667B13DE56E61B0482F8FF93BC3B163003B6ACC93B084443BE0FB726DA0178D
C235F408E90DBCD8AB3972CE5503BA560CD85C6EE39607616FEF455E85A3D56E
0B9D6F9C217AA8F5AF17916B33A20908BB6FF7243B1F174ECAFCD757C04C263A
A204E15D9D374400AC5B1FDCE59DFC646823D559D2D2E7A35F1B7A0479712E2A
5A618F4CC7899FB20A38BB5D8B5071BD8816BFD3D9A808A932383A0D84229C22
2646FF3EF2E8D8D44317E8F540D95146647935A3B452FF98F0CFDC39D8280450
42809B440CD076E66419B4EB9502FC4D2A2153F897E20C85EFE2BBF77C6C32B8
8FF34FA398E2A000267809D83B76C98E5AE64680419709B8F929C668B8081D81
89B865793A5DFA3D6525CC95D3A2B2D4ED038A9BDC39C521F0D2969684682C88
DDC834A0F5038194490E14063EF32C7201EE9CE8B4EB0B745F562C652A773DAB
DD75D6AF48FC1C3060C06BA0F7AA14F58BB9B5E8FABB7F47BB84A6B098DCC8D2
F357A612F8556097E969EA57DF936D36021ACAEFD7D0B62B6C4898F9B4F037B6
61FEB4E080CA075F5790292FFA0E0D13579F5BC419CF0D7AC297B3667F88EE69
6B19E58BBDA1CC9CCAEE15CAF5466C73036A806A080A488B03E606DB438659C0
7939D0340A0680E1B5EE3FCB545A4C811D51D1C2E84D6D0C678517BB4FF779B6
15A4ACD46C1EA03532EC08667883C92E6C968B9622C74F874711A487D6053E24
9BADE5B758E76125340CDDB7AF278BDF541564059160A454E16574017DA9432E
E586E24A73921CB7A3C20F62F88689D18964ADAE5EB0536BA158C4D2A7A752E7
7F13F8189D6DC1B4206201E435AC901ABEF031DFA42A3AAB1E9919ED7A3B6BF6
112C35C25FD364A3D8224F1EE507F6EC144B1A0F8EDB870CEDAE905B99AECB40
2E205C8DFD6EC545585D3DF40B2D85F83D29D954765EDB6AF1DF61A8DFE2FF4C
389F8C5965F19D3F1BB5C31B84E43642218CCA1DE45E1C0CC531C79D543E28D8
E8D46FE12A8A2CD8A3A463B2860F8B20BCE87EDC023426054C5F3ECBFC58C515
7420482675C282BFDE425353A3D5A95BD3973BB9EA531659EEA981413936B902
5C7C35B41D048A942126D7AF35CCEEF49C3CEFCCADA6093801E93C2B315E9E71
CAAF5A17D5B0A63F8D2D73D73291F67D2510F2A70AAD11F25BA7BF90EE1DBB2C
0397905DA0323EC2D622FF4D12B113D7D38F6780AABDCDC38C4DA7030A0E3827
7DBE4B7E77140013B4C9AA8991EE3351CE682B275D06DE54EA53FB6E6F99FEAC
6D1CCCC6601A513CA57F015DE19DB451C9F78A41B30D112F18F889050AEFB649
394A2F1575D6B6085AF9E5E39FEC54B86BE694806DB1D0C5363EC5B9BB8D58C5
08A7610D46D1A0865DBDA01830D87085A83F22B8DB56FFA4CDFAB07A187CA010
8054B890C455833343F4F6D1B6E71E49FFDFE3482251B677466E4D03BDE7D4BB
BF15B284AF3E88AF48B14D72C5EA8064A9A8905688FF9EF529D353A31E8C3D10
10A074907047578F312200C889DD04682393287B5E723A86D5F5FDFC53DF6525
05F6F22B8186890C62B75E5C6F1BAF1443AE90A7C008C7EDA12C24782F0F27BA
3E29174DBA5083181C943C3A0ECE0D35D0C209100C77AEE6DEA814D34AD1C22B
39BA362DD9EB490CF75AE8453DAF0516E65128796E46CB0AF41232430D907466
01EF7668381A9D1EC4444492CF0ECF97CAB066063054750D55A88EB090534CD2
D3751BF4855161F92BD2EB04B27774021C9F66E10838A628BC4A0A51912250EE
B87C1297C07E3C598BA6F0DA50218C965061BE225C943D41B71F3DDECD970C02
C6B17E56DA47D5EF2465DF942F49885A40A4D16092522C39CEBB6F132F087515
4D6583A8C94178675835DFDEAF8242CAF0CF180FA383B4A8B1D8DCB2B603A436
D99C39D04868245D348E92BF46235210B0D6178DB77F19D61B5A86F5026B4B8A
6E689F768B29ABDE9231DB93EF15CE55FE743B5AA6DA2AC203262351B93B0E6F
D8A2B577F824F7140B5A5C334C1BFB7343D7982F79793B861856CA6D1296CA1A
1FBEF3122F2DFBE98A875FC7F71103E41F06F1040E297052FAD0760E04D6FE99
442E4EAB9BD3742DE76FC127FFC140859BDD2BD5FC05D3BD7765B79DA0384C10
7FF53E38CF84400C2C225533CB7972706397769466E10423A82FE84641E6C1A3
EECBBEDCF6DCD8787A8D2FBD9D8E97C8285333361E48F22F5095A93AD32F8D01
15240F63A5ED93084C6AFED8EB3CDE280D81B4DBE4187B3223325DF25C991134
65C1166EBD8F5421FE71EE72DD648E8F3B0F301B2962F17E07FFD1DF74AEF617
776365299F25AF0B8C0891E10C66EF859EF8D00CBDDA64139FAF56C980DC5DED
8B3AD9D85CA66FEEB46399C889A307EA3025FBE1230BB9654FD726E1BFD9CF03
849BBC8E0883462F5480B2224C54020CCB9E04B809AFCC8773EB72B93F5FF471
AD89C786E10F8AA01CEE25114B7BBD517984A8FEE5A1F3AEEAE20AF7C5CFDD36
55670B716C6BE84453EE668185CC8D19AE3C457AF5A6F4B28B969E8D0596CD28
F2DC769B0E53B7672295BA07B4DE32EF79100F372BA89E09AAF4E5774E0A4FEC
450D3341798B5AF2CA4865E8E796052BF24E42E7282BA57270E2FF47FD815F7E
F5DC2A3972934E18412D3D7F770EA5B5E5DF840DA52A4C0D508A8848F4444F79
A23A89B171C9344C3EF53396DE41851571104E25C363B3D3870E15474008D52A
029BE35CFC7E19834CCE5A1D9383743316AC70195E09A8078C18E4CF79CCF856
4538A9BF1778C0B5713FD85757119AC29535FAB3F23BE74AD2D0B67E5BBDF4C2
E5836E0DEF26CCB41B71BF28FEFC9F044A45E98794CA0548870B6504DF311DBF
D78A49D5A9956B7B47FEFF3A2DF057B8DA53D56C106CDAA26D5C1866F9867F82
AEF3E0502B0D865E7F7F14450CF3957AC49B7943753A0C427AEC76CE1903C894
C505B4F68C9305F327123B2901371939615F97D0342CB4B1E7095B2A27E721AD
D4FCE58A39D30FD9B46E0E4CD5A36BF173D5165929C02896B41ABA6BB703DC9C
1D2162D20BB2CD56A331E2ABC095A2F106FF8056FE9F75C8EA414BE1D759FD5C
6D8FDD3254D00BBCF19C0E2F66780AB0946A829AEA2E42F69AB81871881C721B
FDF44329805EC63425273E7C4BAF658933D27AC320F7D7503D5FF9F72D39200F
E3DF926F0EDFC5580395F5A21DBE11C80A9059546F6FB1281034D16CF763E4B7
EE8C313B8972AA1DADF6D78C0AA971F822490B53202C8E85A480B0052D58FCAD
036920E02D22022F51EF63B2D3BE71F37DE0C809E82BBA7E8D16AF7A66FFAA7A
F77DC044B1803E3C1EF42D93F3A596DFAAC3B3E86B29914FA3105962FF5B3C23
D76DEB7120E63AF8B955FD3EBD10B36D3AFDABA3A82E082E54F80F5660BD04A9
6AF47207C3F6A1D4CA22B9ABA2CCC6F5E647006C5858E1FE26C7E24546489EFD
19C0A69097B47698DDCF27C775066CB58B840C6D14EE789EBD16016821EFEA77
C4BC63AAC3DD0AAD4431BE54FDE0912777C32083F4A3DA70E382C036562D3E15
46B860B115995DA12760745178369ECBEB50A3CEC467448B97F575574065BA45
E83E177B381E953F1BEF143AEF54D414A56395003FE23B18D61A690489D69C2B
8FC02280ADF805D411E603472F99793506121196E3422408601C34B914E76F45
7AA3D719EDFA3634AEE05B940EF59D2199728D096F90C6C503859B697A1E7848
084580D56867BC34D14968CDA971B7329D3B98C5C2ED3912EDECD9FA81542BDF
24CD2DC9E8ECC5C4BA0BC504BD7A693A42B93D39374561BA7542F57CB660FEDD
33AF80CFAEE37E5F539243FF65A75E27349DDAEAC3C497133B436753EB669451
33DC833E3D3BCE4188020FF2462781CFE93DF05CAA6C70654BDB62CE92ADA866
F61345D046731ECD6B09ACE81B72DCE590F97060C4083C1D5BD772AB6915520F
979D8E20738D52C7F51012DC75C643BD3644E25259EDBCAA79E44BEBD6CB556E
1D7B3C0C19716A5F64D5E5A5D0FAB2B50C37EF42363D3B7FDCC2F4A8F6382322
A8B09C71370A6050BF16E361479950BB5096CD320F48F6DB2CCC1BD094447FDF
1B1618BE5379A88B9B615702F8204D9B7927180F6E8D21939C19219BB98CBD37
76EB5741756C0756FC3EE7BB8BD6F304EAB2DB73062873FE0019BA55155427E8
322662A2BD71ABBA25E8BADC0AF8566B69DFC38A14
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: TeX-feymr10
%!PS-AdobeFont-1.0: TeX-feymr10 001.001
%%Title: TeX-feymr10
%%CreationDate: Sat Jan 5 18:49:54 2002
%%Creator: Thomas Schröder
%%DocumentSuppliedResources: font TeX-feymr10
% converted after April 2001
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /TeX-feymr10 def
/FontBBox [-178 -195 823 877 ]readonly def
/PaintType 0 def
/FontInfo 12 dict dup begin
/version (001.001) readonly def
/Notice (converted after April 2001) readonly def
/FullName (TeX feymr10 Regular) readonly def
/FamilyName (TeX feymr10) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3166449D69AB0542CB99558019EE
97CFE9FA87FAC14B55E860B5663A3D528CD3784FC9647A2EB72CF1AF4E31964A
3073722CB69FA5370CC5D9CDBF105662CA6188C1B3BFA7658F71EA5765A0D152
E60FD5E1DE3B99CE70C03D8CB4F775B5B17CE9573F5046E61444C0DAFD894CFE
E17604820BBE5A8FA11A10565933C0A8320DC5D116C780706E315C54E72426DD
AF1E6786D883AD182ED327CBB03C39C1A2602471C39296B7681215EC4F0E0E0B
264FBAD453DD3B112065828DC04E265255F9FB51F5EEC233C6A752ECA0246E0A
A2BA69049BBF94E6C8F510D29A7735AE4D122DCCA7B22929270D51C3F1E68174
E38AC54D6418690C765264C7897AD12A84B2C5269A6BFBABF05C20A37C94D927
81FD24D7817897529ACEDD9B062949D02FB9B0E1B2D0BF765675BA16EBFC1C7C
DC437BEE4D9FAC437C6B9E5B0C00111499A90E1BD29C52263829FFEF1946619B
1C81623A436D2FBD670D126855C400F38CE0C88122C60EA0D331AA9636B27218
0CC9B0EDE940FFB5EBCF83EDB330F8E83C7166452669E04F2E95A7718ADBDA8F
F99C2DC815F7ED17655111692621430D077DE661F297A8B6A33FECC10B3892A2
4F8E139F3E446CC7D7F5D64E4DBEFDAD72AECAE4D64289A3E2BE0212CF4A91BF
04F60B14E7522795440054CCBC40C49886656B6918198778A498EDBE40AF4536
7F96E77E40A9D65B1D5447D2596B382447AB5549A11BD5B765F9133E1C5C3071
32075009D2AC8147BC53B4C07B14D548E0F914E600CBF320E1639435733D7563
0053CC74AE3E7F5B9741E8CCB3DAFC411B5F846FC583B7771A7088B1C9B9613B
86FBCA1EE9E8263406C1894EE246BE87CDCAD2BA7ACB7030E45B0866062055D9
EBF7F562FAB6190196A7B8AA1B61F407B2BE0F537129E27376C8DDC7C6416358
384B2A676AB3228144586258F2B82A5BD9AE9E5442462DA626088BAB0C29E8A8
0EC75BF6E5E897761B5D095E2A8EDBF2CA742F3BF155B4DF28110FB8B7FB9A6E
9229F9D0B47376BE7AE5CE6A6AD32F50B62023CB32E8E0CBCDE2110AD8251854
5F8934CDC91E522248E019A6DCA06A0C2D005D541C6ADFF72812F474050C709A
5ED08B5F83DA1FD76037AFF77515188E13073B30F9A49A970613659071E0A130
5A4DD21C42ADFC1DF8CEE802CFAB2A75B7460E9F46DAA8CE31D5F287D3163B98
5966C073653074E89114B1B8A097A43E58DC5E49AC1F70F04A922FF9955F9FA7
20A6FCB10A2670BB3F44D959FC897BA487147A0FFDDFD368EB1A41F4CCCB619B
A362730B373EAC754EF5CE2692576DE100E10402670F41FD38F11A1BB43B7F42
B4BD7BB5F4322C4A9D04BBE445358F4B59B1A5C85FAE03B06C950485E5B304E8
BDA4BB926C21E17B3EC2D4DBC9353CFB90DBC6976B566C310DC801A28907CED3
2126B72E26578DF77022D969D09E111BC1C489E88E7B0315E926B0376B085BB5
3CEAF925AEF208D454C49A6B239924FA18001BD1A7D3EA4E7904830A6A948A79
F50CA56EA772D92627A8380A37F3C30845647AB612D5F6B5CB916996A0EE6697
BC62B6266F4314BAAD796EF51EB965F7C30C001F16442E0CB7A6984B78AEFC46
7D6938EFB347E3287600228311BA24326714E77F1932B80334F933C2926274FA
21BAAD0605BBC9A01BDAD6D5ABB885A4E651B8DFAB60487319C1C386CE6A17CF
CE6F1E639526FE52759F1C88A2B52EED4B93C0AEFE101EEEE8C108F389F9D1E3
205904304DCD3F06198594F313F1BFF10CE7F410ABFE3BD5F47CC3D7DB91E197
AE2EFFB9015482D6C79EE33D31EBC91E7797ADADAB7F682F72DFB7B0B0B6AE27
CDA9C0538E1246167FDF86008881E9F917291B498DFD93885C05A1AC6F3A7C11
57128C3D6CA767C80C7AD866074879C24CC063341E85B910ABD13E4BBC7A48B1
53E24D05C43CAC6F3337ED734614EA91EBA620346F23693C7FAA9F488FEEF7DB
E525E547787CCBE1B9824B1CF0B92007A8884194388AE40560BE9D79CD4DE9CB
96359F98E85F2A49F75B7B66C6444DB0ADF62964CF1A47855F8C4688F95EE5A4
50C96A072FB8069A59B20CD2FC703F2F90D3AD1BAA56A93E3D2E2F33C6E2A7AD
258451B1411DD8DBF07CA0246640732F5ABE58B44AC29D9EACBB671334A141D5
FF7CB44C5D629EF4C3E479B76B6A11B47AE63003DE140FB162E88854291E52CD
218D3E70E007E24FEDE321E5814C501169EE40269A4130721A95CB23F48C32AE
DD7B0B4F6320A76DA8A605679B0863982D6B3D4903CD8184B2B829CE9FCBF77D
6CC854455B66AA88CA78910178F748BAD7A4F32521BA7CACB879CFC719BFE2BC
13CF49FDAEE217C53CE31DAB6FDCF81ECAA2E72A2CF15BD84D275BE55251F82D
C8A19F36545C0BDA65AE10E063F5E05A8DB056F7A41D4DB694C98E4246E3B38E
230D155F7ED10F13F00679BCDF5604F46E28FD15B81B55471B8262F8A2F72AF4
E5387E41E401274B350EEFA6C4F03A1E6E4A6B16E528088EA3C7E0299E38DF46
D345559937225879790AF29198B2FDEFE6FC99C66C69959F3FF98F67C07CE90D
F2993F8732E88A77355D4A186BBC8C299C85DB3CFE829BF9F22AA8D3BD63F0D9
CAC57A7CBE25193B289D8A9A614DA9202F69ABA8FFB96F4281592634A7FC4A21
456B69BF77848502657B7B934003418D2BC937720E67D4890E00A199636842D3
DB74B2F004A6E3F3EA6972D62C62E5D4F096AEB2F194E77B656822D9CFF41D2A
7C14F16D7F07E90306AC87B528175244B92D6C10024132A3A1FC2FE78F688904
3568D0BD312C635BF2C024B53B5624F8B17BEEEB424E619CBE804E24E6EE1BE7
3F159A72AB7ACE1C0347278BC542E4525E503DAB0127B4DB6D8538634CC60BB6
7851F14F0753BA3838ABD61E83ECC39C427E62AD4293F672F8E7C2A49B534F60
E877F23EF5EE0E849AEC5F5E12463F6F05D059854D701CE420D546867EE7E6C8
7CD2553F33682A0BF985671C6433700CA8FFB638E7C7BAE78BDFEFAD10DC5846
AFF08F08956041F2912B4D70FD34495C96D3F9B091293B9C738CF5C9563277EC
3C6863C4A69B09E4DDD525D77FD06C322DAE13FCD48A4EA7B1B6C8F0256FC16A
3B47A4BF0DA1C49EF53974B4BF01C9BF194CE7EEC2C3AFA9E4CECD8C4029CC6F
377E4269806EB0FB78AA812F1513C2CEFB8F50CD18615EBAC10976BD12CBC1CE
8CCAD0333D455C3ED1518FD7F80539AE63A5045D34B982ABB471ED8EB18B50D3
1A150C82182B6C31CC9B161A87361A6D96B63CF0D97A286090DA8CB72991B175
EF3D690C64D9CB5EDDFF5B00B7C179825A1794CA054B6F7A8CAF03DFD7E62F10
CE5BB34BB02E50AA4DD4FD704F147DE3DCEBD3B1DEBAF3483E01CA3076EB19A5
FA2A8815CD360568A9A05176CF4111CB27C54BC8B4B991853982BB7307283D8B
93E5A2D6DF853B6E17BEF7C06A182456EB73D4A1B77FD58A853B07B04ACE12EE
D04046A4E977A39963B144EAB63C7D27F2EE65F677B9892C999BC81B3BBDA70B
E7FFF8E673275F9B84D39E641BA990B9AD160BB73CC391B6C36A7C1D68438243
1606D2298D58EA3879D2CAE2D285011E229372F7FA98F55556F0C4007621168A
A3C1F9A9DE81DA70AB287ABC70C4BAE94321D94FAD2DC3754CA39F689C8221E1
6E7E57EA41F552EF612080D82122D5733CC48978F6BC62E40728DCB3134F4536
C33E222D0E79486EBF9A506F92CCE773BBDF3A764B3793E96393DB8EF1FF0FA1
F3801274B7B982FC53258A752D43261486A2A94B321D90C9393EECE5B3CBFAAB
D0BBA6E49ED462B20AFB384AC2D3E290BC8FE7805D5C0B0D37F04586BDC8C812
686C653A47B40A803819C86FB0C8EF10AA1344350972910363FC0E3DB49A5D75
BDBED15C823E1E870E2F0EFB93A856F3A63E28CB7ECBF17E444B271FD92157C5
8727745CE16AA9376735A8B02F2CB426BB91CCC365CEE49AE5C9938B08DB12B1
EEE55B954D3694FA0AEC0836883D86F6EA4E10ACAFB7CE5D16F858F6DFF1246F
B2135837B67DFE58003AF012885480947A19B0F90980366EC245AE6D8D33FD30
E080775680F701952B697FC8FC07A014B78DEC48017E46AD78EF6EE80BF81760
B2ADCBB63D91D25DCFC77F2B8867BC0092BD9DF8EDD0F7DEDF2458F1F938D05D
DD4C3A7D4B3008EE86F787EACD7C687B6BB09D362E814AFBC75209C457A19F37
C9780469DCD173C5E5BB7C88F4A8FF1E664AD95E1F5D005B4F15416A320366E4
41E5CE5C8A53B64D290AC210490EF404D08C7C93531FF8CFB841AFF5A0E5A8DE
1E25EB0D03018A76C701E737D941569CE252FF92E3C0A05798F47B75B501B03C
D92B56739CF0D76A13E06283CB4F55177E3D6B28C265954DE0EC80A4CDFD91AC
A2FEE87917A4C63BCBDB24928F99D4836A62D3793411FFAA4CC7B12C934350E8
0C241E5C83E1BF8BCE56FFB67F9C7970CD00D64E7CF92F0A9CB5E672852960AE
8959AE74D4DE18D69B095F9F83C2D98F5D6D14B13E76E4686B85A3B606479B6D
F3B52D950EBCFE01639F6B0D9C205C947D60F2F0540D0E8B1B78AF3C5376F94E
D5769B92FC21082A872ADC4BE261FE71F0EA2422B17EF9C0338F63F4D4BA4AC9
D6C76169A46B500885E2CFB8671C053163F186C242F539453A72E3CD4F416A30
6C7A154B28FD021A13A11C78D113E65FAE2A6602D55510502603AD648CA7C698
E61A5B8F3689308EF934594FC5EFFDB86BED8324C690350CB92005EA3EBBB9CF
83EF65EA37BB27D684B89F18AB93968DBB6D0BD835EDDBF6F9425AE707A9E732
7418E39DC60A6EB89299E14D62AEA38D7E1ED70829196DB28D4906BF73574AB4
5DCF1FD068BE2B5B597021EC43C0396D5F172A723556BD8937D6800A6CAA33F6
A061415D49DA0ECE5C1959D9AA8513D8E616BEF8C9411F93E9FBCB6D2637AEDB
B0E719D54E5840E6F71109A5BFB26839255C305080216C0FD2477BA7613C8198
8EB16ECFFBB6D745422204786A17705DABE8FC123005E476FECEBE1C3E240E66
9EC0C64922C42D88A87D2D9766DB3E6273110B2F9281D80F004D184E9484EF54
222058917A0DFF5AEDC9213979C8716488573FC308948F839BFADCA37353F9F9
C7FC6FF049F4DD9DBD476228E880E779C7122C3823385F85F86DA752C3E01A8F
8A103A854A8545E4109BE8AD304A60B54F124EF2A6AD3E5E7EBA6AE533E22954
261017699960A1E27D714C2E2D370FB1449ED84B4169EC1057AC8AE70B3962A8
2A16D2F5EC8818734A52C2211FFFB785AC27000B218464AAD820DCAAB31DBD3C
2F0ABE99FB90E8A188E9E95E3320B650E814FA72E425FC6D0B5E245330843CC3
DB6AB767C90E8EDD41E12FA1973E681A7180A3917CACA630FB0BB7A62FAAF292
EE1F836E10730B4797B72E335F6C291A3BFD7F71EE335C3A6233735DB2A379D7
4D1CC655A657023C0B72C819D778F70D9654BDF7C3DD44B733468029F6DBC37E
1D00A80D8D9E7DB37593FE4C2AF5E00949062085BDB51E9448A41DB88FC7401F
725593E1E2281E1F880F829778EEE4197E71F8E59420EAE7964C98BDA67D7224
51A7781696EE91A0E6138EEA37EEA66A29A778841BAED8A196FA2C9DC4DE9BD6
4915CDF114F441422F0FE6F6DFC899C05D171FC0E370C9D27025B9407AFBA04C
19CBF35CBA1E6328BEB3DC8BF3F27EADDDB063543BBE32195A9AB39C791A053B
9D6B918B1E101C98DA8A4EB26FB47BCACE2863C768381DF68C4C8033BB3BBEF5
E93514207A5AA561F78B3F9C70C691B40F4ED7449650276BAF866B77FC16D797
B91398B1797FC8A8CB148D5C234F59A7E4E6F661431598B68DBA780DC8B34A19
AF4EA912CB694B86D5C7672E57EC16F21F87944F7585ACC0847A31E2777D0068
69A9C658B4729A5A2DB08E093EDFF069067F02F93C4495F9F171AB52A1A5BF64
C71D97FA60A71E3E705E51531028D02B1AD3E8E032AC8E599DE4DA19227401AC
F79915BC3230D5D90FA77C29DB133FB7B4ED7B0D7BDD3B018BAB38126626BE19
57BA72362A12E23AB2C4F2C20CE67ADBB39FCC59111A7A0A61ABB82CE1711D0C
193F0D086B49494669F901CA6013B32E0160B72239DB3C2E229535BEF14DD08C
A8E603EF0B6A5D6FD9CE8EB6DEA304E959E394802B82E7C4BC31E75E1CF077A0
6F520EC408B4237E2C5D41DB0B4395D891BCFD008BDE2F5936C9B7D3D7F7F9D9
06FD7B552B784F7814AE16D8351899FC23B6772BB69B5BFB57D118FFFF07511E
8C6E994823E198A79376EF3E24C11B6FA1F6DEA71942741038EB332490625EED
2F92A7EAA26C64B36C180E45C35457FEEF8039855872511C30AE0BD536024FEF
2E0F40D53EB1845EF5EA9E10FD5C63E01D074E58590F0C8112BC26F1969F9C24
6A4027E715AA573228315FBE916274AE6D17F25A21DD9629263D6D83E1C5E6F0
D0A42464C558BDB4FDBF9201F57C808EDE384E12A8235EC30E90CCA8AA3C36CC
C09C6A6D74F9A30B50CF7D4ADDBFC902F6A006AACD90582B29ABAC673E1C6D67
3A70B27EEDD61AD0C422B387CE691F8ED807C137C5841779A540211331282F9C
2997E5A81A6BE710AEC12B347D9238B584F24C63DD4A34D620644424F315D15C
C710ED000B0D28DDB19A4D99AC1E0E5589B7A6F7B2C86F2F7FA4CB217F201436
991656F10224C5AA8341E6658ACFBCD76E73AFAB6E5B0FC14CB8AA60A1E845E7
5AAE0C73DD9F872EE3D28075C27156BB8D803A64E4126866360A54D16EFA11DB
13E7E52C0693982399545875D6ACAEA88BA0A3474783CCEF9A4B65EE64958091
8951AC0C438C2B0413761A253A43579B0B640FDD1497DE8C21A0856E475510E5
142E3842906AA80914CDE9402E4B37D2A6E53BD127D2D3AD5149AEB5ECD8CE0F
A7609D35FB71A5E542B436D5C7D71A4CB29EE71D11E0C2769C4FE6E728D24E56
A0169D3676D3B731B35E37C70B8015A53A9C15AF4F78D0FBDCE03FDD2C3D52C7
5D852346EA02BAE2FD29487245DE75FBAB597E741336005E4A549429A51271D6
5CBCFF634640DB0D056DD5EC6D5A7DB00E37F666CA703105ECCDBC670A47CDB7
48FE6D422825339A8CA5AAB0B1235F8D8BD2F5D6A3515FEFD32540521E20DA01
A0141AA1F8B223BC02156AE4E096FED912A6C33DF4E150052091700123102EAC
E6AE38599BA0A0CB94E1099475C28A540D3EBC4EEB382E906F6B4A1CE6940F16
77D474945B0DFDB54731F85B138577CCA34AD3BF8B7677378DCCF3999EEC8E5B
5BE10FE19D636B006E7D7290A3DDAE1DCFD312C2726B08676AC7B03A9E5BF580
BBD88C779EF23B655F9BBBC31F4D54BCD94E4D1FB85ED55AC4475DE0DF309494
49CF2BC0A9C60D7DE24DA0C0AB8F50953F4DCE4B2FF8E60DFF1EA75F4BAD4B11
3C735758AE622B81CEB5A8F845B2547C6A43812D4ECF9C9E042425176A20004C
2C4A815A38E237DA4ACD903D32B7F9844B2E42AA7F5A5008C4CFBB51F2A20C24
C4EA6D69F6CC5E79CC490EBDB8A9D4AF6103A6CE3906449DCD35B922EFBDE023
3D5ADD67F4F5BCF49D61F67FB313A8E2F92D29A0B15C6792D299B9510A5DFA30
56DF9000191FA35C2999FDD7132B3EB5E95020B032C8EE2BB4543DAAEA0DEC97
3133A99719D7ADBB2678384749B7E1ED994548266CF51E5DA1E7D78283F24197
0EB74E258585FACA9CC47BAFA7AE9E116FC4A042404FDEFC6D20C8510CDE6796
BF13356BC9A3EDF5DF353F6CB8D21EDF5EB9B50AD6BE2804F23B1727C373DC13
E4B7B7F5F1A0333C4BA7842F4E9F3D067DA11B64EC3D1EA2AFD82DAF0087AD2E
0876AFC12C5777A2743F938C01847747CC7525DE041402CBAA4C45F273A75DE8
528FD3BC80427F9E3AA1EAB57E9E2F625484D388DBA06AA511B556E660B7C58C
232E6191D34214218E9C35838F7532579EF7430063A099A176DA59B024B2CE56
FAD58E3E9AB280F49EFE8B13EB67D91B6BF3BBA8BD16CB5EE0B3FB9BEF37503A
F4114D06702D250FD78E921D8ABD0BA3647C711CB3FF3CB1EAB2DD7137A9CA46
4E545382727CD0F1D75102D7BEB5737B3D3009136C2DD9950F1DEC8859F21328
330224F695949BFE58241CABC4D378ED409FBA824D76C2EB94A55575E0B44B99
5F05EC9CCDC503CEA55FA4032192CEB9D7160B024084A468FCE4AB2F876A1B22
2FCE1702E00029F29A50C636A6C59226685F2B7F885CE26FF2D2836BD9C03367
13420C1A8BCFCB324EA9D26744B77B4BD9099611FC2209A53321B737E518950C
751B2F929CFD04EC824A2439E9BE1C56A3A02420C2B86C24BB936C7752DFE88B
A682B788BF0113BC92352E873AFFFC279F2F3ED949F3ECEED537F134E3C8A2C0
13BE80DE36288A86E93DB390E241AC83B926EAE86FFDF45E037CC3794DDFF403
DC64962FAF85B9714D399C221E36A633C0BB26EE127EDE93B54A6C34C1B1F322
7503847E9CA4622FF6CEB1E9828DABB65D66D658349E0404BD3E7871E3952C91
81DA87EC0F40B008BBE4253D7E8E7EF16C916674FCC41131B68BA2A9FDB59917
8206CB366282C90FC91B59C8A0FBBB26408CD0110EA1587A07E4FB09130E5B0B
852C429A88461C2C51F924B919B8C4F98BA8BF058EACE6ED42C208AAC866A1CC
DB9FBF4227F1CCD9FFAF49713AE4B85EC34FFD123CC49EA507D36DD69F0072CF
B01CCFDD0BDEB72A427A0485F0FEC84B315C854A341951CD338D8B4E7A77E3B7
41ADBA8C621DE2AEB91E65A0D3E1BDEBD508A0CB08F4C4E57D8481592C817520
4B6BCB5196CBA074
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
9DC141B7F6830D6771F1A3CAE655CA173FA57D400530CA6FABDCCB4325478D0C
93AC7EAA9DF7605213DEAF94C7281D9AC68D884E15ACA3BA68034F897A2FFC1E
F76FA2A69CEE7F1E9543904F1773969F65553C3469FD85B2F2F89F0E547BFBFD
F62A3E47DAA4EAD6D47F0305CCDB297C320A48A3655FAFC810CEC6F6D68ADA4F
AB5DD7F61DB94072B0AB8F1ABF62A78E43E1578DEBD2D05109DEBBCEC64AC700
4C28C4F0A5E3A003423B9958C73D306B2B4A7C67A95F8B4E737992642BD3701D
39FFAD94524A7752560FE97B8E99A12AFCCC5044D989BCAEC863BD15CAB7CE63
0194962E4183C3838D9401260A743447DF953444B29D7CB004560D0685F73E87
72FDDAB87125F419F90D165EF1C2A06A9B7500C6AD185B4115777C6BF9C24D88
653589B431FB84E4DDB650C2F783594DE6123D3142FC5C99973AF211F2A2A05F
5A756073B85FEADA4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3580C547C2
54FBBBDC95998DEF2EA825E3BB2AEEACC0F30841835121B7A7D7A973F2EF67F2
795E6DD8CF55B9823AB2B15ADC328CC3AC493DE8C2F022EBFA14A2976D8E3559
B5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E9A716737B6BA413F846A887B
D1B3B89EEF73565F3D0D2D1E40E4C2811D37C9029692DF8E94F6FE39474EE13A
EEE65EC0E77188C18435A2E7FFBA595F0C054E96CC44F56301F6CFD2A7A42C7C
33C1362D901AC2B0FB255262754024729BBB2824C33C2FB07B4AB0E5BC4EF204
E240345C69F37D577CA917AA50C3BC9004C8FC0A5A8E517D39211861EFE9920B
3939DD770974B1929E48E48EB82274BCFE2E9D5D484DC7068B77CD864557E702
E4EB0C301062DB793BF0C98D7468E7D2C9EC10C2B121966B68222EB067A7E3C6
F0549768364D1935345EF4D1D5F8C6AE3C09162E8A4FC6CD4741B38836CB599D
F98A2468DFC2198D16044BBA796678C9ED23D6194A5CE79410133D40E5604C95
80910F6742AC40A7CB3E08E73FA1E15DD6E1179C390BC240DA061C9D539B20F4
FCFB72DD0EF634FB4137D55F76088819802AC0ECDE469085BCC3A24122DFFA52
6840EF5367946F3DF67C10B47377A99EB96C13C332632CDCC750FE6081ABD0F6
4DC19BE13680CC29CF0EF52F885E21F4CDF14F8A5BE651118D4F2436599ACD41
A728EBA6AA858A62BA34015E2E2F851AF557C8CF9586F5A809952F25B26C6557
DD62C2B52388A1B7B84A5BDD57BA0C39ED94DCCA571CD82C6E0BBE3DE5134649
8CD7D6DAC8936854A0E9B5873E0C43A98002905B196F919D54550933FC4B7290
C8C71C097F48AB5C03B5D053459D7E0ED44D117E1C942F56B51E615267D9FFC1
91A694BEB12CBF4EB3DFDA6A81788A92B5AE75375C8E3BABA0D234C04500AA3E
2F28C4863E4C426DE4581143A54D0EAF501057E3A9FF7B3D1A0671ADF319AA50
F054379798BC3C38137A81D75D5BE7E359EA0012AA5588403126BDDF5FC2AF9A
36305E36C2A2DDC690256D2085B1D4CB4BB93B1E736992E995B8A4F38FF8E7B6
0DC1EC1B6C746B6AEEC9D5B0D1C9641E59CE041594E0396A0BE7DFE162363F66
C0DDD904FAF6AB01A82A5E230905B36A862A8E30DE59B50522C8AEFA5451F931
870F2A99727DEA6C228DEDA6C25A88C4897BB9BFCE16CDE9E5F075FE4516E1E9
02D53E24B71DD4F1CC13482C48FD1456BB3B6710C69F0ABD2C8E0CD7C3900863
69D35D3E5A083C3E86374A2EA8847CEAAD3690C5D7BF9EC7DEE3705643B5F064
C6A8ED4630A58A2C74FF212B078A014AF3BB404CDF3CAADE7A8ED6135F0B1CF8
78BB14725E4813E05782683C877C7EC4C86D6FD37805197EDC7909357DFB4C6F
B6446FD6AE83EA4BACEEF5150E0962CF1989F1179C80ED82109EF203E8E6F42E
7E4D4C03E79C04FF94C5059BAC10947BA16CC916C66B1F0A58607BA2BE87050F
8AE8EA728056655F9D9DA1ADBCBF43264B09238DCEBD82AE6A09A234149ECD5B
B28348B6B53DE1E9D5E4B896D55B6783FF7E30080A67A66E91A0FB68E3E12A3F
C761885FB2C91CF3D317A7689F02B48F1A93BDFB2E5EBFA8CC8D2229A01DD36E
75EFBC2FC9878B26AC87E26AAE62521BEA21ABC737D16C9BBA570499CAAA419F
561B5ABE427F4C91C807F1A3B23B0DD937C0CBCED5F167D1D09049C07E649B14
92730DB5499E3027097569D8154C1BE749165D28DA7E2AFEAD936AE066ABFFCE
EAA68E1FAC8321871A09D6ECAED6F3418A66D35D6940A3FB549972ABB769BA0D
AB927E1D420A61A18D59779EAC7573D77E335EC81AFDF3F629F7967B89B09EFC
1C0822DCDA03918572D7480DBB61FB1A2006654683A71DF52411E554288F5A30
7DDC3E595E52574FBA6DAE04F80A9FDC4C875876D414F840BAFC74BB84483695
C1D6DBC323F6847592F0BE89FEB4B84CC0A3F6BE1B968E6F1750A2379DB19F74
24D5EB827E12F79C9CDF5A3085BCDFB39B2571FCDBFE86B35930482CED7C243C
96883233A642EE8B45B3B08141DD5CDE37FC1436175376C3719B9710793CA1D4
83984CECE060A10A0C5344888C6A8CD50D48DAEEF9CBD3BFD538FCE5941285F8
90FF78C7D0BB9080B177F7241681D3EAA0C81B561E7D6169FB0C68E1C935F2A5
6E4E746EE98B9667072874B21A5F98225AE648C197D6FB92307C9095DFF47B19
10C57A47825AA81A8365867E05A1E27832DAE605FF0A2F3DF7D337D1BD5A0C8D
8D4DC7D81815E0260D9F69D2E42819E144C77725F2090C9210626778ED2352CD
5E55393D0D97ABBE2E2A5740C1AF86E6ADC99C2B3950CD64B436889A2A6C9C5E
9FFDDEA902493E1600B69EAF1217B9DF2607B0397165B15FB665033E87DFAB3D
CAAFFA291CFAACD7F664D769E8C81F4FBF6C97AEB8FC5D0821D4070F65BEBD55
BE6CAE481F6691368AD5A88A8B57805EB9A7940908D65F1423EBC21022F91926
361763B86FA081E98DFE93C6030F94CF5A23E9F871159B2F3CDA9654D2FCFCA7
27506D04E62BFE151DAA84C3F9FB951E4C6A881D35642453CD349D44E3EEAEF1
58258FB01BB4D32A9CD744F53273DE6B8F775280C8337FA283BB4340DDEBC4D2
56E13F78F429977A92E62A0EBAE828FADD77BFC2ECDC1E562DAF56603985D171
2BA7193FB92D21BB87ED788C589CB8815BB33B73BDCD3B48EBBEF3576781FBB7
D433B58368D34E5B9AB9E2F21ECD8FA6935F9367B7EE0E503AE7505C3FA96FAB
A28063EA72DB6C8E32FA349461C1A8946B78E05C19952D7F58F6F1369A01E81F
6B24FE63F52062A57BB600DC048C2190616F793DB31310AA0A8F45140EE4FAEE
02BF3C2D6F5E4A4B898478E82A3DD10055B80BAD84A9516443BF7DA121B8C73A
FB3730AE0710CDBBD497190258A7CB7E613647A93FAEC7563535886E28292A42
2264BD78D9A8D1BE060CB343627CC5EA64D47B8012CEE093F64209F1881C427F
44F58809F3DCCD4FFE26D2A5AFF0206EE8CA277B11607975CC29FB481115A018
8B16240C0C2F5548C7B28031B29EB60A496ED7126FC299E720959ABD26DC8414
9AFFDDCE09BF97BAEFC02E8F68DB6F9FE790F7809EB1DD8877253D3A3E128481
FFD5458C1D5B06CB9D685A9561E9C86C56E319D61413D43312587BD2D16F265F
D71A55FCA7564479EF60984DBB147C7E2FC1F46751480BFA1B9D93F9F95A36FE
45E57BD5CE0C7A57713AF055C0A0F972EE6E0A5951F5F4605A66D92A94E8751E
9404BA9BE83225A48BDDED690D96080BC8A4AB8CFFE1809DF7903F6842D443FF
35DAF295574EBED60685F10EAE1ED416C43466AD142406E81524DAD37599C3EC
2057242EA8A7DA9115A2E861A239212F05BA154584A312D0DC1C199035B90E8C
EFE6AE3EA9660E33D4589CA81BCAECCB6531BBADED04255B0CC74F3E14C9239E
2FA2EDCCF47DC58B8D9F6AA2984E59812F6CD9F83F21CFE1217CF272748BB9CD
7627CCB1C8A525B1CED15790CF637B59BAD929E3E3E5249D8BBF9F2F82E1A8B2
ECEE35641512CA9C0ED68138FE4D643B0AB1442AFF5FA6C191F7A83C324AF062
9A2698BBC36952599448EA77982CDE7F785031558DD0ABF07A2B20266AD63B90
688BAFC791B2157013FAAD47EC3AF94A392F4234435AC61CF232EC59766DBB26
2C06251069578D528B258569589615714A36FE13D6FFE686B1CFD0EE0B6B7F87
3F7E4A94CEF0EB2B11BAF18374DEE98D644FAEBEF322648F56EA13A7E63CE475
C4CBC8EC0A76FC971E927451DBABCF75BB4B088A94AA7B4D9FA64FE24E480F8C
AEE64A02890FEE981F7BA9B47ADDAB87D35514B4C0829316E7B9879BDF586FAD
24F497D993A4B132A6E7DE5D7F399867841796A02A653B317A87B49D8713DF67
297C00D508B81DDDF2A190B5C6DAA74681BE30C4E671CD96973F8D37C19E16E4
5F6739F883F7465E6C0DDDD8970909777818CD73663AFBCD75E5038E74DD5222
32F5546377C9A9BE0E1BD729C5ED86B7806DFAD1307E2178523F2617B1C3DA8B
D5D0236B60DA8C3DF484971F00997FD01A6B48F9199552E36EDF555C5D62DADC
ADB77883736033997D0C4E780A9B59F3176A5C5AFB83AB20AC92EEBB2361DF76
9460CF1F7B521628787B8D52899DC4EE64CEDC59E531378F7CBBFA3387FE25CF
EF435292714A8F491E2E33E1B1A2C0601C57F5B7B1717C456ED996C6B9DE9E14
E1298DDE862922A8F80A0DD8B36675E83371DDD080429329A2E8C6DC5C92D22B
2474AEA49E3667EE9AEE712A91124176A10C38BB1F69F69112A502E7983D7A5E
4413A90F80057A34D0E8AE22EB1DFBE8CEAEFB14E6862932BE0179DEBACAC5D2
9BFFBCFA6D6B78F5A11BA3A837074466CCDBEF21889941976FF5A8A85F9EF6C9
6C1307464B56036A7143F659877B15464E7DC2E8F4F4B83CFF8B1EA27CF25FC1
02911DB139838D6763946166B3965C5D073D78706987CA68BCFA018A0355BA87
77786C48E71D0A4EC6220EE0DA77DE74E7ECB2ED339DADD6F39274E7E8B2B3B8
4C5D1256FE5FE2D537102A9309D966B7EF122B970652DE12512A8734666F2EBC
DEBE0CB0CBDE736DC50A51AAC93463CE678FEA5FB6D820FE9E6F5613F30B43AB
82895F7B7AABF3D00297CC6C8EBFEA08384809CF652F1E602E7F24A58DBD417C
9C3A47B945865D42CA061ACE401105AAFAB839D3DA2A47FC87C5E3CF18CE4227
ED29B9A8CF29DA9E911B7D738B10F304E91752899F9A3C1AA557285C8F848F83
F96A9DC950870C1B21E2186D8C4CA15E8E1CE8A3F1D611AEEF629BEFFD5239C9
CC0937BF33358AAB8806580AE0DA6C021B36D7AFDF3E2E23107132137A314AAA
595EA969F0A1407C8FEDAB69BA3EEE3097D5B123C6220CB84140F348449C01E8
51C4736321D6DFCE20133CB0CC8ECAE216DC09694D2406245E84F4D47146CDB5
CB5D21210232A7FA51D4E05D0E3374830B8087B358D2BFF19B751B8E0C9251DD
4C68226F267C021CA4C0E99CA5980B6492CB0ACF13DA5AB57954B914ECA637ED
4A18E93420C5D1136D2A635F387049A0C359218F5268C9A288E5AC0CFC749FAB
513205F0A8CF8E4559BEAD533D5C6C18C8B0075FAA6FE3D21E5C1928F4167F45
530C20E87E11035AFB3DBCAB07A8F9A07FB3455B1CE6936AF27B3CDED1DB3168
F736647968BDA608B66BAE07DEC4257E7C628BFDD753AECD1B53196B31F29C5A
F625B78AAAFB53698F8C691A46E94A4BBB826E41AB00E9A4C4D7424DB69C04CA
8BB07066B3855C49CB8396EE7E475F29A5573CD8407463A5BE869CEB87DE10EF
611B802E5B34CDD28F1C2D8B8601551912A89D32739D7F39FA44197B646D76FF
8F27EBE7114D5FB620F822CB58C8E21876ABE4967821A7F5B55FBF3C5851E32F
E94EBF7EFBF50AA184CA8A5E111CC9C24E4A7DDE21734FB6CF0E76FE842CFAA6
CE200387541A7BB8E033483DCA18801DAB7289B406DCB59972FFBC57BBBB493F
2C1B5C38F173A5E963AC7302F6B526482E4C9257CDC556314D5C972D352A125C
C80D07137085C70F00B4AA2A3F38FE549D7278D72458A387726A74FD74B84CEA
BDA95CAA798540DFBB8D88B5C99697A210FB5F43BA7DFA7A6B441D29E0473144
D89ED79D9EB46E2F96864FED2642FEF3038B305DE2B57BC63E035056CDBBB9F4
DB89659D42B100853BCBD76BC2F7683BBEB6A99725AFB0CF8536FDA1C65DE434
AC475DC718FB751B46C7972BDAE3C044E0BBD0FFCFB0E175A6B44886FDE2CEE8
4A3422285D1F143B6DFD8FE9926FAFBE1DDB72B79483DE686E68A33CE20C97AA
3D34B1AC59A0F72CD410E0959D3CADDF1CC54C45BA2FEE00D0032183BAB18CEA
58D596BDED31A69CE0AE0177D2B99C4FD98928BAA632825543D0F6A5C94630E6
3411A6ADB82394F887570B3DA85186B878777DED4FFDCC47019E59225D8FD208
2183D51A95456A761655D006138CEA62A653A0D878901EF29C8C1E3662B336F2
49CA6F816E5106DB44DC97296235DB29CF0AF628AC3C30B11F1580B25B85CCCC
0C922AEF593F091226BD53504A414099BA8E0CFFA072B739B23DEC0D8052661C
6DF0E8C82DDC5A78C70CF61CCAE02BA2398BF79A3A0D643F1880D27C0F7D7302
9F171028FDDF8B550E3357EB919C11032728BF872D2B0E155A92A4F88A8133DF
8C5450843D46ECE2BFAB53FF907FFC2D5A568F8A70B82B3BB7EC99ED28D2B4A7
B685B9B278C77FF850296B4AAD9A3A2A4B3708E7272F426F700148DD7894AB60
4E87131CBAE0109F23BE0E07C8963EA8991C881EEBFB9509E9C9D5C824E9AC1B
C95FCF73A7CE6D97C26130F4E467D64B02C1798DF351EE40FFDDCF72872069A1
57A03086BB3EAB7D1EE6F3CCA5C368CB407B7D69AE0E77E97DC26F8A3020EC96
B8B48C55D6D0B9CDAD690F8976A6736738FE530BBF2D38E8B49287A1D890E8CD
6EF325DCAF776BEC8F64D137D888EA4C020B0F60CF50A8AA982FB8BCBA975162
877A0A7E18DFDEDF0B7D717569ECED5219798E9BD42618FF76B7D7477C08779C
0180E034A90CB6BD6EACC2B5EAB9F109C36C9122359A60190E6C42C712FCEEF5
2AC5C3627A231EDAB2CE032DEC53C70B6F3334C38A509DE66F112F49E63A16F6
0B6795CF0D93839AE7E202DF023342C9FC75F522C40645058A7E9FA375989971
58794BCEC6361673853B40FF2D425FAD94B834074E9E9FEF28DF62817311B637
66ADFB7099864428EA3586A86A31A7612CA3111694728D25A665667628C2257A
A1B2B346DE1E57E1B738ADF6FD49E6A53BF48C6C2A73008BECB319C569DF3CD3
C053F6CCC206CCC848A8A56F92482A1DCEDC7551A0B9BD4F15890A30994C0F31
EA7BFAFB247FC9D6B45614ABFCF417F6FD17A704C4668F6F85E4611D3DC30222
06061E0250B09A05CF198DF82D4F2E8163637329EFD92567B804B3436E31C9EB
4EA5E71F686073455394437C3A7B477AC27F75850CFED5BDB2F0734201E2679B
339EBE55411D9D0784D058C1C336B45F19C03022C12CC43134F7A1D7DF1830B7
2582897685656833ECD7ABD94719F604EA68B1108EBB5BEBC3EF465BDF837100
2B5FCDC1B9E7775D3F365C784524E0BB5EC0268A382573BB9243648A1BE2569C
F68FF78E4CACACDB34DAC858E8A717B266D35EEA7CE9A86DF45930BE230E0775
78B1F74794F79A77A6779090AF0FFE0D3B0B72D091E67A3688CDB4211AD140E5
2239FDDF5CD68DF5A2AA09416017F29A21BEA925881F93F8A29AAD2016384F65
478D861CF417C17343950F65DDD3206D4D9072461F746A6CF1BDE2738587E98F
B123C1C8588225768D7B6E2478F73AABBD7399F1D4CF766665B82189DD3C81C3
0D3117FD9E461046CD60BE6B8D771FAB2BF3483009D4DBE25B1AC54E8CFB3F7F
1032C2CCB0D78AD8AACAB446B96DC3801FA8715FC91FFA192B3662251D029F7F
2F3CAFC7DD736BB0C4879624730441E89AF8F15566AC294E182359C7A01DA9C6
0ED3C0A33A6AB03490D061C2FDBFDA953408228EEF66661F70AD3E8EEB58B124
72AF22F98DC999EED472B2C2B85B60A1486961387A2AAC32CF65FE36A4DC075D
D4821E9C70F5D451D351DFCA7FAFF1EA78D0D6FD12743F6BC297629FB0770C96
BA9839BB9028425F71EF541587018C30EDFBF2DBFD91362FE6C3206B35A1BFF4
9DC4C5835EC42812B7FFBA4874517A1DA067436CEDBF502C4013C1C4FB9D8437
D39505EA3B58A38A3AC2E3FB837FC094F774045C1C23A45496B732668DFC3F3B
096686CA6EFBE32940D4C8CB04F7C7F0879E6FAA3630D313E6B7BE70C02F2AD2
B5B8031F7626389BD3E392CFB2EEDE173452C0642746FB5CE915C6FEE8103DA7
3B5D782BFFAD7F7C029E12E37623BF5A471FFC465B8D40FA63BA53CD71AC8A5E
D113984C395AC0D3110CBF8F774728E4278EEC55AEB085CD06FE19421FA0D602
7EF8C615112A29AD57AF9DCF94E153B65B3081FED4A12C27B85CC6A3E545A312
C95C6F24B72CA78154EAD1B0AEEAD3C32B85164D51756160504322A4030369D1
3477E95EAA9BBC038E0530B2AD398A9A505C881E8B9227E4FA17D288180AB20C
0F2AB7DE3213861948785BA79FCB77621175289491E7A1654F2D89AA725520D7
09C036188AF869E8D791FE3DCFC3E1A07E4B026599B9C50CD21979C66ADC45E9
788EDD3A24389AAAA904AD98651394CCC742D048E391EBB2D5FBCAE22D709F7B
CD2F07481FE18CEED4C93ADFF57D3211A340D76C9313DFE82FB250690B927A03
B3A5C0324C29664A425B2688ABC8F6A233E02A715BB6E2465189FC47B9F74D7B
F17163D9EF68329D5CAE9EFC75DC15A9494E876104FE4E530950ACF6844AA44B
2CEF792935B7A8034EDF79D9BDDBC76C0EB176E73C609F8D0E1B5ED58FEA3576
D093BD4CC62A60B503C129D7C618C217F049B4D74A7E48756EDFC4567EF82395
69CA8DBB4063FB54132B4206B20C6D8D67E74FB71F2025DB83B2808CBCF67068
F475601FC2EBDECD1E30A6E774696C251F318AC1D9EF5FB1F77C2C4376BE5E02
D7DC4613C87ABA83D059ED0635D58748534576A5067970D22734B027285AFF2C
77E0E26F3A507F6251C0779DAE2CFAAF3F4C13FE413330E444779002D62954E0
3280E403235E6835ED221EAF81EF6581C6AA3743F174AB871C254B8E7CD77058
113B702B2C13F3430078C41FBBE956F29D1917487D86E52CC4A79BE124833D1A
B6D6F872C83B5C895A1326893F66EFA17D7535B78FC55BB597EAF6628D2CD29E
4B4DE5EEA08530E3DEBD1A2AB3DC3A070FB0498DFCF4351939AEDECA3E47EE04
A74A4CE43C8359A162E7A5D6C3533F250818078B97D1003F9893C7B86193998C
9AF6B6EBA334E42E05C376C997EB203950EDFD6CEA20D0649071442B2916EBCE
5F4F9E3CED8EE2895A696AAEF0EB67902FA53D9E8BCF2B5F6E5B157E7B53ABA0
5461DA40B675F081053377364DEE8AE731238C83DBB5E47AC0EA6DC98916E823
C45690DB8F2C0C779718E12179D360234E5B8B2CDF5B0D0FB1E38D0A83C7F7FC
09358FD5F673DCC906C7E0FA7711ABEA97EA6A4DE67E5CB086BF1993ABB48C4D
725FCB8452DD3B26011EF6036096398D8D10ADD46B3FCFC12980C2ED95608780
D69E25CB2C0BB3B0C945159998A4AA4E2F30003AC503ADFC71C5F898C408A7E5
479868EBD29C9ED1DF53F9540EC304140C4E1569529D433336951DE4EE9AF230
2325F058328C5153214F7088915CF9F72252A0607F267659B8D7B2924AF04D87
5E139FEBB73B10C153AD868607921383630F2C6D55F3188F2D11E04C8D23621E
4D076D0FACC20C8DEDDE1923AAFFB416FB3029ADCFE0DF6B8756826B7786F35D
21E3098DC9CF8BBE54D707A910F84FDECB9089DE5CC2DDB60A534461E5C023C1
37C2FDA4CC53A8BAF39883AE261391BB667719D9F90D451198968A29ED47BFA0
B135E0989C48F28FC2B91C78AB22652D7BC4256EB11057091DF68C3A9475CC0A
3F8F2E4D94544DD6E26CC3DCBCC1BC5DA199C5150098DA93060A925BBA8965CF
383F4F4AE6DA98D1611D05E59ED9BE002F68F015B3B6E2DD6E0BDF7A1C606780
C8580ABDA2F2B5A653A7428F28CA6FC859BBB8440376547482A1BB72808179AD
6DFC8C619CE8FE1EEE3B9FE2203DC6C75B2655C00B473C32A5DAF8C0F963BCA7
58B2A02CF70A46A48312860EED4BF3E929DF288E1BB1BCCE88D89ADE52E5D625
137AD2A30F9CDE995E06A82E0E3D4D0616EEEE3C78BA20A1D763C4968C1A61E3
A5B420A712B256913E57DA32763B4BCB3721B6370725CCF2BA061DE84855EC92
438AB705D740C0686E3F73337E28400D716A714D867650F21538DDCF25F9748E
9C7C49CDC758CA99C4B06322DF1BD51FD579661F3E2FAA54D811386573C91A06
718131933E961D9D741703E35DF0172349D6FE770FD2E5461F993DBBAA82C590
4BD2170921D4B2CB846E609078D4AA87FA7194FBBF91FEE78CE10B1283A38A53
495FE8A29279CC65C774E5244912470606D852A39CBBE5E41174534C4A7CC48A
29293222794C5EBD54650D834DA175A217711384136291D57736A4454923D4B4
B28F24BC26C774243FA7BD5DCFEC68DCAC374CC58F53516ECD13D631D4095F62
4689BD1D5647A80038419AABAC1F233E8A6D737282004AB0973A5BD735736D9A
2DBC7AFD01B463273CF811C842F9C4C039F8EA5B13A3A9554E4F789CFE3A1173
0261D0E55F48B46ACF927F471834B4AF7F49B9EB707174C072F84DC47B5496C0
3BF3DDFA1BF32D8F4B09C3D4693C2DEF0AADA7436FB16103C8E0D0D3F83D6DA2
1A4C31C19698C0C0C9683827A13C1735D2C649C0D4A32E2405D04C031216BABB
F999D8532747C9160EE283538F3FFCB837DDD66EDD81132E44128EE1BE623EDD
5DA9A41DBA9543F0A89C4DF01C43A24BFE5463C9619F0CE811D94639AF9DB2EC
56C542596CCBB0BC5A6C56811F297F58984FEAB4F519600668E48BE0C7A590D6
C817424F92B9E4CB6DD2FDFF0966F0AC0BDDAA98F66B8D3BB8E402AF1AB1B480
3CC515471D4FB80DF03D2BAF5E8AA0962137E7F024EDA854D4E210DA837B2F60
92416AE6CC2D091A28A9EF2072B2957D98A12B7D4072EDD342E3811BF2F19711
01815CEE9018765F8DF8ECB0A02D9EED19239E88C94FFA872978060E65DCF7E7
39D1913657FC9B2AE9D1BDE2DA6E0C14D9C4F8923CB92D66832908806BAB3FE3
6871A176C150FA8EB3ECF9BB19DE8A07FF884C9E4AD2373122A4D63FA6DEF194
65B3F1F7D9F110CEE189C26FD508870C6C620861E751C779512C404ED48FF12C
2E3FEC95E1EA1AEC746CA2670A1AB63F6EEF2B51E682A35A14B6731BE0B8824D
2C9D5B6CBFF1A9034F40380DD621C4F2D4F37A3B26398A1D5AD2F84F0E133900
8A3A57C524E46C02C72E13688BC50A383020829462604E0C08F44CAE8A227CAB
65E8F6DAFF1885F4D4AC55BFB532D592412BCB80AA7307A1C978F414458F9A7E
C07EB5F54F45EADCFA06318AAEAF9C26338369F6829987C0FB850BC2124B1D4E
67DF3C21F1D051AEDD11F65FE0F14DAE3A61C4B6AA76761346D2464B67AEA933
DC7DC07EC2D78BA3560D9987FC1B454037C7BB317932882AE82292FA3BA04D91
B8C0B4B022FA0CD8B0AD48BF97B97292A1812706302A83B960B624C72D86913A
3221AE9CE1E7A2315E07807A5117A9461C92DE71A8B3E97803700E50900DF5DF
2053C16F183E9E658A4368AEC49715FEBDC8CF5925E2D2219D8FA49A6B1525AD
2D1F56968D9CFA81E05017CF8CFD8E6C388E38A36437B7C085B17C9070C59EE1
CCC7152A769B76E0C0329C0FAB54D836A5923D3E6DA13859EB91297C8AC75E14
B1FF34449F491D791F5D848454506ACB030A0FAE31E830C857AAC89EC0A90CF1
4793581D3FADFD7E2B2575116286D1C2A40545F973870CBEF91FD67DCA99EA4C
817D6576B0929D7D4B8B6AA528E24A58D6326FE3972951ADB395041F35A5340B
E770E44FF4CBE8EE1EF8F55C6F152328970F18F57580B62E6B5829CA51B4AA74
6B4C7A1B45353771645C01C2E1A15A852B2936996DEB087871070082410933B8
B6339B61066577B0F9535C4BB445FEFEBB1E5752CBC7539470C7635D73E77965
95709294CCAA488C37CAEF08DFEF5DFA13FF3F82237DB4313762F37D2BA85271
3B598990DA46A5B0A7E039D45886741463E26AD685C330FF9B4020A256C08D3D
D439E5109C4256E14813707C96C369F883A6E09EC106A37A998C561ABE01BCEA
8D861E6EA214481C40C73039121CD9BA70A8C79555892F5D4F4DEFD959E669C7
C9FB4E141E414CB9DECD58EB2544350BCE56376867A07B6CA8BC2A1119161B0C
97025B02598E2A483A2A4136B0B9713B9BA50198074FC701F826FD1BA4B0BA05
7825D9E0D83D5A2230B4673692A3A3E95A52591D79473418C8A19444CA7C5392
01BEE064F7B85AA2C769DA4EDD9AC24BEAD29B13DA577F2F42423A83175F8F98
E7FA6A0FEBCFE94FC3396C7915EFCA5997C1D5020DB9C6CDF5E8F831DA62186A
CB0D76AA5D81B5BA85F14B839777A9AFD530B8EDA16CD2B42CA40B85B5DE4DB9
0EDFBA844CFBC665166CDA69FE96347A9189138E337FEF9083E9A38C8205368A
DB2FB73B6ED5B2EB0FF2AA1FC8B1B7E3B416E515DC06657D06259757E83392B4
647B2459942F5E1DB7E087D52E4970B082B536E5623853DA43EA12DF23286BC7
C298B4575488D25747F1E68E0C36F8CFFFDD076DDD17E49F3FD8A4278774EF42
F36DB7506257064195851A0A7FAB1BB9286229CC3069BE68899BABB1B5DBA24F
803368A40C23317C6A53114AEAE3915AF71A6DCFDE40A89A2701B3BCB5762AB5
895EA2F65023EA0FBAEFF0DAF9F1B8CA9D9740D9C6E324E9E149CB41CFA89ED9
B3B3D73F6B2282A041999C35B4F437A2B14D3FD7A31559C7DB226E66F029918E
2237605D5D9F0D6AA132537E82416A1F84717E420C9290CF0F503D5494C8FB3F
E7FB0B88D808CDD29FB6B74B22DD993A289BA631082B177CCE6F7E2D15F11E2E
DC39FF4DBC037FDEEC19CFB7C208155164D7280FD433ED5913D53D235A93B78C
AB602D6F32297C4B1397D351076D72DD49BFAEC025A7E3A64B47207F646411DD
DDD98B9578226276C545AE8FE1D1BDBBDF68FFD18CFC6A6970F8CF7CEE86861D
03B9BAA5F98CA4535582AD3F750A3942C688F5BE1E01C60A64BEB84D0D066328
2472116D85849DF18A7C5A10AB6A94A03D9E66A0A2D0D75DD51A1743CE86BE37
DE435CD66F3D42E46F90FA954CFFE8B2904FD05D508D2866D420EED3FE660FBC
8130F5B3D77E5303D2ABD61EAD6A435168A026CB1DA9C0D030F2F68C459979D7
17E95AF2385105EE59AE24294D138ACBB52959208C2C1B8B2C645EBD8FD53D76
B890DEFB5570113B1B913D3D5960C5F535BF7621EA601ABDF182CD5EA612B39C
39FC3BDBF7D5188FE5F8D478D52FF129F5EE44DAA15BB4B9CE42E1D164C6CC3F
48971F4F52063261DE1F3DA531EA920372454A476FB64048BE505C1107C3D1A6
1893EFA041E7B259ADADE48DF2207633ACC72A3E06F1BEFFEF73BDA62F2A6A31
1EE96CFEC8AD93D6AE0030CF1824069472C101F0C901F37767DB5F58C41FE275
5D59390C166C927D3D083E2F6AFCA553D3CD1B9522F61655505F37D6A182ACDF
7D3B117B71A5D5E737B0583EF1AD017455210C8B14FE526228178500DEF5293C
01896B10A6DA71A1684F6DE6DDB7E288CEFD7FD1B6F50E79B62C4F6DE1A76DC7
1A047D9970A29892C6A829A191350F1CC6866CAEA7E137025A6E2DBED55C6B75
A5CB5D281097802775A2E4636F4B17CC38816AE91D531BD0D45232BED0ED2816
0C7365DFD46EBA6238551CA69BAF504D269D6CAC0AAED5F0949FD815F9E383F8
0E757A4558762C0B086F21D48B823D13AF2D7D9D04DD6A2671833CEF9E7B42AE
F2E2F574A1E8D06C0DC448026EBD08B43F997DBD1C1B191BF9B327F33DB043D8
25F8AE2E9C0125C0B04CF5A3A4B363D4F0DBAFE58F8A65C4A938E02333C892AC
77F3072663E9DB55C198934FF5A56D8648FA85E658D41283B81A79223D01CD43
B21860B734DC81FA6F1502B24A9D4EE882E9C090F241EBA99D9F1E9FAEB8D616
F9A98F173D37C159771006604F2933E1CA5A69BF3CBAEA139D968C51586C9ADA
5FEB5891234D2790365DE41C1A7915B0945B15F56B0A3EC1BDA23F2D0C8E64A0
1C9BCC79F0AE1AC3091B87B7F00A92DC97C689DA40CFD77C4EA5BCBEA57DF724
97B20838B773F2A3EC4464CE647F85E39433AAABB6C688F7147D3C2406BEA099
E3FD5336CDC1009565E076BC8D06A0D429F329D9A9C17E86A186DC76AC196838
8A864EE9F63C39992A6D3448297916674B250DFA66DBD48A4D00F29CEDBF311B
95DF46E4AACD35372297027BE629B5A111E09C678D9D82CF4188F7C2B0EC36E4
9B3A6C590FCE07CE7452D495A4FCFB48FAAA0E2161805686BF43828318E7659D
5A034237F25540F71DFD16575E7E54BAEF655255F4D58441F8BBC62072717AF8
583301F904E211AB3D3362FEA9B831E269C4FC8B2C71225A424C6DA581B49C70
9E1E98149FEAAB15DFE7F9447F568F0D577DF22473C89EDB9F444EA9DA277A0A
BCDE7BE416B6714320149241AAD44B2749661CDE6521332D652B510D2933E081
9A4A0855E5AF6497F674F2BF93F11D48A8C446EEE394D91E2AD2AD7F24F00A84
D4963DC226692AD67487DC8A611FEB52A12D9D030405FC314AB8ABC229C74FDC
8D8AE98E2882439FDCC5F4741FB85B24E5A9600B069E804FA7F8D5C8987230C8
7078EE4A80BDBC7E7F5259AEA38403A010E9F4ABAA42FADFC818924A8D7B153F
44B1E9468CA044C45A7326242F926D71CCD97789B712BEB97F6A55E6DAE8E73C
DD6FABA02C3880837C42E1BEFDB16079083C0578134BD8466E897703881AA6C0
44DADD651B813EF40ED6F0359B8EE33FC06A656A311F3D2A9F87C9FAC314FE6C
A6E0E2F0CC98810A4E5A43EF80302912AC116E4F105C994CC1BC277FE4513DC2
102D4A6D49F0205255EE9A9D5589C52B018E46EBE636B6214175D6C3850D92D2
95248DEC8BC4D496F3256DF52DF43E87AD00D2E826F9766A72A30B92E1D6E1AE
BF4510C724AB326DD8B6882201C6658A24BAC550C282E77B26D12A25EE2DE5E5
AC47D56967117D98A0DB6B961DF74143800BFA26FFE8CE4014A5740F30A10771
C039BE15B432C61EEB5D394E513E9D1AFBFBFB5465F27456B21815C98AF3AB0D
39B6A59E4AB9EBB6224A80B2744AA431E78ADE6FF83B734D07419D8167731659
C69FEDB4D612A3239584B851E80422F5B5B56F6D5A95A4C0618F9090DD19EF31
5171516AABFBE518DE3841EB3AF537420E2A6E40D71897E7679BDAB71D574C9E
74FC3C21253F832FC6A1629E5065821D5E69961161CE43A3EE506A1A967CFAD8
3EE41DA88D26E3889F7D7D56995CB08733D513D4C0B45C33CD8F97FE4E604E5A
5766AC4085B2D781AED2663E2BF7C7B8525EFF6252AEB9D4FA98E9B4A13175EC
8313CC3399C831384FA12697870A27ED48C67A239DFD8824F52E3371B754769A
045203D7C1B5E16AEFC40DB7309DF3690FC34ED67087CE190710EADB073FBE8C
2125A8818BAE270F6EE184863C901C95428CA110B2729334E2A39516D945438A
1EADE54DC38F3A42897FC781DBC71BD9B8B5B314D89651004686EE8738490BA3
DAAAD63ED22B08D256D6104B5C5BA1D48A8A22F2FF86AB80143BC0C81D5A73E1
EFD9DB8587895C5C402C2B09D4D592EDAA637B4E4E7E2890CCF401E0111DA906
14FC43AEA3A6DC2FF687757CE8C4E6933A314D217432E9C76E6B2D4A0EEA3BE4
E84A114A88C8E8EE04CD9406AB7220DED1EB6AD23AB5F9AF618402ADD9C7C625
4927AB68AEE24E69079ABEA5383F3B05604DE165D69E91236EA5063A3698CF82
5ABE2ADD5C860E00240523888E5B80B1295E484B454EA5E63519FC8B58A811E4
8C254547CC758207F63D9D2DD92CBB8090D74F29FE2C60EFE7ACF09B437F2153
FD057A0C2A0EDE57D10A822941582D0C817460440996FD5CBB182D0D5915969A
F272C2A073EE1F6C2CD00F51C62F04577398CAB96DFDFA2B6E1710B616901BC9
0ABA54662B927F7E8FFFAB556FF99E33AAAAFE65C12A7B877B43623C1193D74E
FD34290D6F9293C946EF9E95D9F6DFAFADFC464A8A69D8BC63776A17D3C704C2
0E9088DB453AC6AA2688BC966CA27E6E4954D3A2754D96A878A70EF3D98B5D7E
8712FC7F5DDF178584A24DB4835CEF445EF46905F9EB828410283C980AB51CF2
DB02F367AE0204950B12F696A36F5ED216CE88525561504B9B6CE4D290F407D6
315DBEE68AEAA9C10C9406F0F2295B34F6BA91FF9882F3FD475791EA2F75035C
3F4467746B1703F6FC908989E2111B60905761D141C82563527DE2F47B80B6B7
C47A7EE7E2FFFBF44B5762508425CAED24F5A2DFD055E64310B4D5E20D9A7DF3
9912C7815441CB86C0DC11E591E92E88BF0E7927B92E17E7B9DA23A8AC62BA37
35D4459905072804AFA49FD2723E90E176A79B18A6C1C3A5B210E9C2146C0797
AE355583D824B2BF5DFB75037804AC7C59F192653317BA26FFB09FD38C61F15B
C95761E9DA0209FB87B7B7999137EEDE3829DA20DB448A3858BB337F0E6842EC
5D9C0D5D2596ACBE7E4D2C2677E77EBC5F23045E29F807988C9C9223BDBA6AA3
F354F8411B92505ED41EAA47AB1436E1D51139BCBA92D605CA8D84E860DC7156
03C7D1A4836BCCC439400C0DF0DC42FFCE2766F00940E63455A696EE6F67599F
54206C42F6A0A8989BF1DC3EF09C373DAC80B9C50907750772899F9C67E85137
307555C38E9820956B0DDC77E1FEF54104ED4FE23A82D271A5844B36555EC89A
07C2C56AA0A1132E7923DAA394E7EF44C3BB744C5F23B51E65113305932CDB1F
A7BD0B36275E56FB1E8829824CDCDE568BCE4B97C14D34C2A00C978973A1908C
9144F355B607E3D44F71F001BBB6FCC09EF80345B645660F8AEF885A5D7617C7
CC85A2FCB68EC7E640023D04EAD4474D185700945B5F084BB584E881749AD7EA
75385D26D35606A34CBCFC420F51A9C588C7E7A25C4F7B414A39B0EEA406FA19
78FAAAC9543651AD90EFFB24BDB8485E39CC98CB7276D8FF902DFA75BC4526DF
0DCC3C67E65CC5F7A2E252C8FBC051E8D31E948BB07C287892DD2DDCC634D3D6
345733DA668180D07F2413E9472BA2BD706B9717E5067EE1F24D3E5B02DB0C63
D4E55EF07DE79C325205FAF4E216C4C44735C9D5B09144EC28E4AEAC86128193
B8A3966A8EF8CE6F61EDEAB30486971398C480575CFD2A6C88CF4E48AEA4E44D
D2B46903134A2006D123641EF6C0B14EBA489366C13EAAA89FB819950AA700A5
9809E8A106C733CEFFE00E416DCFC82FC4BBDE113B6EF591C138ED59D64FA6F1
ACE0B5E3C476EEF22CC6D9B2767428A19081DAFC59EA290D6E1A716FD6F4C66F
E740BA915C81C90198A06457BA38F6A5E9D008F020FE6DBE4B43B6576DAA2577
DBBD57648E398F5A052751A5B22688404DE39ADF87FC991638FFF960D0D38234
AA1C9900C092C700A000D79CB9F380A19F5FDCDCFB1CE89CF742A4CD36F91F57
5BEB79647EFD6B12DC811CDE208E36A3F8F8FE2D81F8823D1E7617F7CEBC1D2E
053289A69D8D632992D79E8BEB8165DCE465797571121E86553CD222E16881EC
DFCE3EC74F9997A40BE755D90E30F4FD328D8D84AE535D498877A27C7A34C2FA
8EE4E5B444448AB8D4747BF3F9DD6949D621BE879C3C0F32CDC8D71DAD38C0EF
448DC010FF32F01B63640A3EBE777F82A534CF2FA7D9FF944D4C0D5EE4BD3866
C092A5CB2FC283A88C72909F60F6EE34E2079B64F856BDD8599A836A9B9CAF4B
FF7D9FF75C1382ADFEB3AF68906F057115CFC2DC4FD56CEC63D326BA9BC85968
27A0858AD1D6544807B6004F0C906C81E4E156FC8A6CB88826FFF468AA2F59E3
ADCCCFCABCF0293A02107A50990706B43AD0B2ADEF3F6FCD966128AF449BBA42
9653C3BBC2A9B3B7C755BAFD6EA7CD0850E78659C1FB6846C655AE7E39ED24E8
F80EAF1D8BCD7CDB1150E00366FE3D0CA62DEABB34E009C6024B5387C37AE8C9
60233C1F70B4B152F410622996B79B8DD32EA0B14B17E29365057422BD311717
E6A72E20F0E3F04B960FD7C1D9B468F076D12936EEE94B581F848511AB3AE96B
BA04B42C23B10E30E7A4A75696348F1A02F0EE31E786B24EFF373C9DAC05DD32
17C87EA5F20E814D80660ABBC6E67CC3D1A3C9FCA6D105D0CFACA5E242A9D5BF
74D0C2828A6B7E79EBAB163B443C8879E6A00B34DC0832F2D96A868B29BCEE9B
CD6A9B13F59D4589FB025982F86890331545184B898C2958E3C1B00673CD7AC7
8B7DCD7F05A55ADB4F607323F553022720407B5709245201FBD6463F31D7B76F
E641E06972A5261CD7F6F20577E83176B2C8D0BC1C14033BF5D4A0689DF68098
DCDAC132CB230E8D0AE659F2876DCC85F0CB5F49B1A506191529CB7CE5097767
458B2AFFCFA9ADDD47D76A8F473C40CFA23FC1796BC6999672A5720FE461E42F
AC7ED7DF55FF61544A24279AD6383238F60ABD2EB15772C9CEEE3E3153FCAB30
D0A75824F265A1A9F517F2FCAE39843D3609B0D8EA453E1665F099F861A4FDC7
4C59BF8F66D09BC8EEA0CBEA857389BF82883169032531DC6BAE30390AF325FD
E41EAEC5AD63AFF3823665B10806DB03A2561326B7A7A5FE7216BCE081EF42F0
846374B50FF9FA2C15E08504F525DF166B4F587AE41977105175EF77A761A690
550697204AE4DCF7A6189ABC9130657D47CA9537E85AE9B2E9AC583521B57AA1
5F20AA80CFC05A8E9D9C6F768D517944AEFF00A5104FF667371C75420D309296
7C69120F8FB0CECCA2B707A42287A2DBD42A7F4FCC9640FB185C146C3B2548A3
8F1743EA6445D708ED044B88C40DACDD3BE3E527D60C9FE8406AA2518FACD3EC
5408261567BFCD88B60091F054CABBC857A58467528722614ADD4F3D3FD659E5
C26E834F9F1A8646DEB04C980B56F01DD65E1DECC56BAF8D3062CEF9A2B89179
CE805DFDFFD684122CA9E5CB8B73643F465F279331AFEB7C547F2297B4D500F0
09C2ED828B0AE99B252031E80CBCD25CC36A2BD90C1BA42D8A58BEA5F23E4436
E563FDAA10C4456C9C6BC708D6C05EF8FFFCEB64AC70CD4460CC22AD0F897853
0F5323DC0E5079D0A4E11C873E88DFFCC7BC07A961BB325EDB72234C49665D9F
26EF9BD388CB78A7A7F603119A305A14F1749B2BFDCBE0342BE01E65D77632D8
7082E8F9CB1CC4FD0D1F738B5D33880F62CF800A62AF6B8AAB8F54509DDCCEB9
41C4FF70659F7BEC2362816C4E9040C053B73AD1214543D5977252D1B24A4C02
3C08CDD035C121094563790CC22C491E0B16106932087FF4370D1C25711478FD
4AC8E03BE4A6C03B41D9F4437F9AFEBA80E85A7302FFC4B5D0A21DD41996F3BD
8484D4C450FD2CC53E9D5D933D8D348873F1881F958A6F1BB73771F35000FB9E
A55A132F9B151BE8FAB8CD10408AA78A9A1D1C8ACB7BB7DDF90F0B10B9717EFE
E5E2ED5BA8B40258E56469BB19E775B014C7CE13B315D263507ED17B8EC18C23
1AB4CC0999EF3E1503C02336A06B09D441F71CA0BB49A816EC5673E928D66429
CE68FDEDB8C5F946222E5186F1B6611328C18D3DCB4823C0A3230793D8F86DCA
0AC6AF61339384E0BF9DE7A7F8CE34A0111C8AD3B24B113883785BF15D76F545
7862376F03FEC1154FD5480E88E9BE17B48C37B3EA4EB80AB3942A6358AF5028
6846BC633F5A6A1D0BC35004FFE217D301CFFA2689BF8D4DDBB005961B9C019B
FC3050D2D7B94EB70E4B3148BC20BFF663DFB2EEC79FF66E27041E38FCE81A6B
22DE72D8B6558AA385B17ECD04E71DDDC16635806846FCA41F2A72FD2F65076C
BE45AFBC13CD4FE953B3674B2F9C6AD47EF55D26C69C1F0DF7958660801037DA
FF7C247411EAC2617BA02FB2B35956F471E544E0CB84E6609472092E5FC879E3
7311E30E9F731403112AE2A14626C1EF116ADCEB45DF4D00713372D0F5F979F0
04AF81C8F356470C31B4F54AA5E59A5698488D3E45FA5C4C71AE88CB1F10D0DD
754C5FD1B4ED4F050717FCC5768F673007735DFB1DE31442656FB3A2E9C361D8
BC48CC05727B71589342370F8A366E11B365442EDA9FA20DD4995A622BAFFEE4
3836F3298ECC4D623A8D65DAF13D26C24BC276BC5F72AC1343EE49D70ECC2B02
6ADAA0169B6A38F6E8D65D483940C97544F888EAE786EA97D941DAC5A7010B6E
748FD03772C5883574711B5E1EEBA36E8B8DC122B1432A6BA9A8A674CA2D5F39
A0880B501E62C497A8C5C173714D063F26C9D3A7343DB7EC72C730016968AA3F
CF6D4C15FC110A14C6B17D86FB74FB07B89AC5220EDA163A25BD6676A0D66DBD
904614E0B897C9761127F2236D6993269EDC2D5F82436DBBACF556ACF24698B7
252C22BE36764FE876B236547F6C6DFFCAC71F4E90EE0661E9284998AB98F1DD
4E042B605185DC8F82FDECC66F7973DB6138193ABB280D5A40E03F256F3B9D7C
F2256FC14BA225044236D63991615A2BCBE70CB2CD741475AE26EEDF1FA520CB
01BFB6C1B68DC6D5892B72098784F1E01467DE5917873A449E4ADE2FB92F6003
209D30974A40872E176EC00523370614897DEBC2432CC9CCAF37A49046BD2DC4
13BEF2621DEFC6E775A4650E7E15D5EB486CD83D388C14987D638DEDB5766B5F
1C9C1670B8A568F69091BF0FBC9AD619AF7C314365770EEE7E8463FFF7B0A03F
7B5931AB2418F069ED5174CF84941D66D456E4C5DD727AE9269CEC9314293BE4
DBB7A3F45E8EC63EA6C0F536B70E4894AD20A8386F66EA709887A68E872AF331
67F68DCBDCD079968D4CA4452C4A47ECC1E00482C04BEEC7772DCA16A66BAFDE
81F65C9BB3C11F8E1406D0B11F7745CB403DA1E9AADDCE367964B7B169AA673E
B782E275EDBFE0C921AFC86D4156B5092BB8F713AACCB55CA678F591B0BC81C7
37573D6A88CDF4E0C8D41CCDF4F119ED436D24F056BE15BAAA9B48E4FB090841
8AA4FAFFEEAA2CD250C2D9CFECFC23B85D09F3A5A0C64214AE63B1BA152FE584
730760E91069BA0E63C228AF568F69507FF52D831094E3986C1F0780CD1E6BC1
C43379B38C4E7AC727CE36863E5C9E781A54181AFB8EF57851F6F3E33B2BC1D3
FAE17D632D7D469EA0843102FE08470177AED0C1AF0EE56867B8DBBB1DD94846
29577F59AA2F732B12BA10B7B6B0263B8B5CE6EE63CED9FE42C1A5FFA1FEC880
08BCFB5118AD783FD8DF7AD5697AC29E3887C4FAB523150F1CD3EF8AD7DD891A
F4A025B2B06901713D3B30B95F41BAA04890239EC93C0C768F23B3A16C715F56
B2AD5157F99404607C40AD8B4B3C3CCE7FA2B8A39A865D7C3B977284E5D5A49B
23117552C38630FE38F7E1A8A4D64CD9F02AB28EF808F0E772093D2E8CA979E5
A9EAC8415FAFC12C5777A4C1694F583F56C127E3666DF8476D5A8A6CC0A5B142
0A47C8DC1CCB2F040914451A48CD6DC39120D16ABA9E1BD48BE6AD3BF8B879A4
25CED34F30D932AFDC2EC726D12D23CD984885AB3ED0612296632D7089A71125
506E67C34661FDC0A7BF5C5AD1A6C343D367E8EA1C017E57FA86F8F46E2C3ABA
05CC5EA4891FBEBE1B6371CC3040E9D7B90C5915CA0DE369A0D7112BFF6CAE56
CB9BF699DD05BC0C895873C19FCFAB9ABFE3B44D21730DBAD665A4D4E0E5B5EF
EB67FEDD00215C3E170D67E4537DA0FA7ACAE8F91A24DD7E5975965843EE8BFA
E98A1C243F368F21003A8B82FF19251B1D3735B67FF464CD57295728AB37A47E
8FE40D0D97E9BBA0D4FCF0E58E58CEABC579AFB45D39F71C4F0499935074B5B5
A3470CA5F34361AE55FDFA665721196CC9E9DE49E5BC7F4070BA732D56CE295D
F0641B74BF8864CC28D7AAD8EA3FBBBB407E0ACC56E64D6908E6D6D6BB6660DC
C1DCE70DC1A79B40E5694B251E8241046914A6EB9EBE5729DD323C742F0D5420
2BCC7C1798A4E13A1DD994EC29C4A096EC4FE1281C1EF54A3589AB493D1673B1
A2737590A0A17D5D3BB30270D5990DD9B4CA9726CAC5224C853F2229F0B33075
68E8793F1C76C3A2577467242CC0BA47B411DF2A9E44F99020E000F74AB96D94
5E03F39A3144AE0F96A6869FEF1B8D22FE9100558D6917CC3F815D0569D47E2E
AAF55B07FCB6771F6EC755B850F40D1D3EF9CC4A36147CB948C2B2415323D2AA
1E138960E3A2FB77CE97AC77B38AE210400F6029017A9411BF924DE05F50FBBC
513B395644E302DEDA0FAD876E076EED54CD5C05FAC6D0A9EECF7C1A4FC2EC9F
EBC4FC84B41CA9A4A1B9A20B1C4150AECE1B67D55D1A14D70C6060927EC46753
E4307B116EA5819AC6285FAC854E5353FB102EF6C886C05BE34A8C05431589C0
5D3CBF4D4167FE33C5A9813664082503DA2A820C31B380D37E3D54588330C267
37470E9FDBD391E0005359CFE9FF4A5F6B7493542658B38F42055139EFF2D19D
81BB06088BDFBD73A04B5F96F94EB6D89CDA73520F38C49770AE23986FDA2109
C4A0ADEE1272182915323369580C282AFDCB679AE228ED85B2B530F222BB74E1
771D533979CA17265E3073B12E6D352CF0BD7B4560FAE583D23C05B129199E4E
15ABA15B45CE0008CC88CA3FB1ACFA385D9CAC57566163FCCEC2157AFC8FDDBB
6B50B3F8A942B8A4B8C07623DC3C8D72AABB37E700581C80C302DDB5DB4FFFE7
3264168B4254611998B4C51E28BE66E35B9882BDC14A65677F5BFCC192890273
76670235DC9B3635D5C3D908C05955401EB9D37913F2B105C3201DEBB86FCB4F
010E5862C3208E495FC4DDDEC7B038087E40257C1FE1895F0598412546DB208E
FC3CE2541B69BB09F4C5DE165C851A32208C5134701179C06D60D5B3F79E4480
04D1D7C2D9B6145B64512BEFBD025105F28F558E702315F8C596C312FC32209F
7A33D1EE6F74FFBDD658513660C7E94D13D9E8F7EA8DCB856C1CD7DE9E9C0848
692C38D1E3016BF4B4E428276476ACBDCDFEFC8B7BD24AF41D55196DF6FB2F2F
BC9BC00AF48A56ABD34136479D929405FE67FE24FDF51C7D63DA82DE11F6E742
5DED611CB183BACEC7D850C26A06F128015F40CDB861A4127F3D21AE314AF86D
19959FAFD95DD054B683E784498453E70F2469172097ABD94AB45C10AF3F3FE3
4DF9C8DFBFB632E885E741412DF41F4CAB7BCA067D8C6D4507493070F84CB2D9
F2C0ACCEEF00CEF9475EFE81FC2EDFD342D34F2D3CD7C145CE057068FF3B8773
848FB9178DD9C09D647BE595260BB70C631E70BA8FCA40C0D8626F77BCBC4319
0EE840144F9F053FC85041782B25B9AEE5221CEA6F1F25312B41B125B4A46DA4
550DB20C261D35502C2D87ABEF72CEC76681F8FF7ABBFF2A12FDAEBA65200B1C
DEED78BB0428971CC9818FC947D8975301E2A80C99B14DCA4C4FB6B8A5AEEF3A
F8D386610BFE936E5B28D5B7466F76A8368D8F9543230805C8763BA4DF20D2CE
CB2825CCB577C1669626E2C87DE60D69559B3CBDC729C72235C37392697AF95F
B4F1AFD8CCF42255F3345C8A23C22FB5722C120367FF9292C71C6D5901EE083A
9785394FCC328B413F11A3968D9FCAC28875B34AB843A3CE81305F89A7AA9AC8
B6930A8E73FCF268BF96BF0266895E73FF09055B964BFB9F866089AC8FB7D0E3
B9219284D91DA3BD4DF46E5E719F95B73342C6E3CCC03022BDFEF1402DB29F17
9165241049D088D9B95ED554931272B3D92EF05564964AA9DE30E50EC3777E8D
09C330DCEC434DB9520C5179B625FE065EA3EAB37FB1B8D8C166DBC25984F4F0
ADD1466C33A81F21166037FE92E399AA274C91AA2BB67FB4D625FA4FDFD2600F
36C668F159C262A6078F4DA335EFA4CA54911BC802A06B3A53AECE4DF1E45ECD
B7329F90BB064E90631978245ADC0C6F9E2C1BB525143CBC8BEF7F9831A0E0A1
37ECC98C6917AF7FE75879BE4EF03B9AEBBEB3B51AA797687145CA41B5294E30
885DC5F1A7C010EC1B86BFE8B4E0C2804B89BA9116A13119C731B3FC8D78C4F6
E7100F70AD5ECC37979184CEB3B5850A5B237978D002FEDD82EE5CC2ECCA86F2
D458E3066714F9E17000CA41137DCBAA7A47C5F3D0C745262B88DDF05E7E3C16
82E8ED45BADC9A68B2966D7BB767D71155AD4338BE2FD18655E0812CEE627B0E
575DAC7A032460A8FE564DAA3DCFDF72D9072CA92D4FC845C5617BAFE0E4CF52
D82CBD17851D66DD6C451C237374DE5AC2614DD636249FB28B7C58DFFA036F20
FE933689ACD25EEA2A9118645C729E0933CAAEF4598D30BF5828C70AAF30B0A6
49F7FE952C45D12814134AD01B58B8684AA0C7C9844113F1273293AB153B6EB6
45F0DFFEC4B6B40F8BB0EB7DB8F83C812CD5897F861FD3B2691B20EC38E6DEBA
2AD7E9AF70AD7F40F2E194844E76B625836C94F281B1AC4D089393FCA362BC59
A995FE5430B39CB5EC916B755A389D1ADE3C1E4BA1EB8855BBFECA191D4B8021
2DEE4530AE8D7172F3E47139FEF1D23D2F930AF1B361E2A9ACE76D584AF3FD67
33CCCB73CDACDD126F221BA9AD0DC1384EE8FB43AD7CEBAA1E8AC903FB1EF52F
939E91725B111D939E2B603A03E917000E9803BBF7BBDAAEF0CF557DA7F1EC64
F8855E80F6D18ABD45FF1F673470DDC419927FB32CF26DBAE2550DD4AC5C3B2B
331C9349894999F7D3828A37632881F6DBAB481A3A5A99A30E652DD342866EDB
216105AC441F75431ACECE892965D7D4CF9DB0F7ACF7CC00AD38CE90C43ED8F6
1EAAC0C01CBAA10C0032E8E7384836BDE8A66BD217BD28393DF8BF4306AF12BA
45A11E88E61F04E09FBC53F9AF26C7751E074BB831F91F8C6ADA85A957537F15
1AEC66847660C11B9D29D54E0A21C6DA717F65A97CFCA0E3448730FC94AF5D75
E34D6AA330B97BFB4A6AA66A805ACF593CD86F51026CD722777530D9B2B3A431
0D182168ACDF7CEF71ACE7093756853E002ABC509706C00E045DC552B2E5EA05
8AAF604B878A2B5D561F97176033A7A3ABA468FA39B0910C49F0EF4D5D68E2B5
0EB8441057292CB8E3306F74A76653F1D972AFABF04478516C42AF46BBEBC727
1938CE2C79BD928D3FF52E73696F7EE6A9A6C549D8F732F740DEF9EC071CBB4C
168386ACE8B249503EA4EC512D72FE30D8B001B139A939FAD11687C905A389EC
51A2326F59E916B6009EAE101A774CB61844FEB21466DEA1115898B0431C61D8
B3624F4EEBC57CE06AA9A9C2805F46DD36F5F8E5B370F52E38E750F117A61647
C37E846906ABD5932104FDFACCCBB612308A6A0ED3AB689244CE539D0F866B66
DC7047970A8F7E03274525324959B46661FA8E0E957F0497F0F6CAF8690596A9
2D6B28370196094CE7B1C9F768EECF460CF82F033635EB5B3A4F7DF718E0E8D6
4AC7B96D2C351FF9A5635B53A1F22EBD1D2F0E1CAACD44A7894BF13D6E846736
842DEF797290E8B0D52105FAB1898FB69DB939BF23B27B2DF046F314DBFE68DD
B61B2D4B997FB0031FBE3B1EC0269ADC9B694DE661F8DC281996D7EC222F4CAC
2A6EFC3AE0500D91ACE4B124110BEAD35A7FCF94D46E085D6B51FD3EDDA3EBD2
1CB5B571D21EB618946740BE4BF01A7ACD72330ABC9E413D1DC2AC8DBE2A1452
4F98584ACA7958632CECDFE1ABA0F78067D57827686AF072D547A5AD7A1C457D
4DE11410C601C40A76214402135498CE167FB5D289C5EBF31AE4BADFF8690613
6CFFE2D1DE3A9C4D5F986B5B114CE454186605D23905D6C0A2A0837A0DD1EAD1
0B8A17BF0A5582D1B97E383E9D22D7A8C33A6F8F1F89660BB94BA41C7E458A88
4F75069128FEEC05248E9B0C2415CBB4E191E98FB776EBEAEE6FC6F392786704
04E541771CDCA5BCA8F492C4ED21BA33462A54E03280E403235E6835ED221EAF
81EF6581C6AE0AA9FF540A877293F3FF6ED9E056411524F1AC2C3EB9AF86224B
0BA4B135CC8709B34137EBE447A68F1A9E8BA52449244EB8BE2259642C943BB5
E456F818BD729B7B2220075AE705290566CC292B078F564C2502EC43AEF09B82
EB90522DD1BD8C7A1C289D26453525D02165F9F0AF0165D6FE43CBD8FA5C85ED
CD122FAC36F59FDA72E233C73A4BCA1399C9CD243FA385624CD4262561683583
91A01BE3922F1CB7DE5576AF240E5E90DE41FEBA464E823308F51B52945FC6AB
CF3E4DE8A2E550899F62278D388BFE00C4F0549D7A1C5075D2E9596C9DC9FCE1
75E01B99D38AED67E397298427A0A7A59C4ACD748A13881C130EB8F703027D6B
3318F24922645004DC681C4C204721E87B5F9FDEADFADFC8BCE85D2A7E4CF939
DDC479252D9453D326BB86A7B1E2DDDCB2BC12801C4A8ECD0B107CB61C850CAD
9E14CF669C7B38CB2D16EE53FCC59444A3FDDD7F7D589D06D3FAD451B9C70A18
70543B57FC8ABFFF46AA192DF3066AAB60C5346E0446E0EFA5A948531F89C487
83F6EDC4089ED02E567923AE6DBBCCA48C246A0802EE97F5241B4557418A1528
BAE9EFA0140545252B0FC94D57873CA379C0C7596E61997BEFCA9EB890C30AED
2F7EE46F37F0DFF07232A831D6DD9E6840D5F2DE7C00BE061A57DC9620F12013
C029BBA5AF0838806C965228715A35D8C7887C76374C1C424F593490B65B51E7
A79809A9F6BA5F4B34FDA033E3DD452C54B8E83F8C26B70C9DA49836FDB97E62
0B72B69E5D74ECFC42BA566D3D370F368FA3BC158618BF04C375E85FB9224E42
869DDEE75801F5F379101BE0E37118C5C08837113B251001F008DE01DF02DAED
AE3EE928160341FF3554194D628CDC2A8FB41FBF62124665178535462F78190F
0370D40B12633BA1C8239DBA7256940B8ADBD68E795DACF20B0A9F0B8D4D3415
222FD75FA7F96392D67FC82ADA13FC4493F50CF3D97EC8E1C47A4557984EBB56
45D175505AFB1AC5CE8B310138920E592E7C9F70C6B28C80BE87F92E37C939AF
F3EA59BFFEAA7E5E21F91A0181155AAE4A63F71D9E321AC3767F9A775A187C37
37D3D128EE8D437A2AFB114183DA45B222BD8D5C6585CC4C3D373AB6530B16F5
74AC8B12D715D33F888D7918C6D6AC4FB340CB49861F7EA05779AC0687E2EF04
A2B4D3084E86BE8B45B2158D284F2D0E9F0645879BB0CBF1CB66B537B5E6F2A0
B2705CB5581D00E6DCC91FFA0DA6ED4BD6582E0925DDC2C0F2F0DA63D0CAA0B6
6970DFB390317A8F1B0971C84FBB39F5FB235268A2B404A3C238DCFCD3AD9664
5559ACA5056F7FD695D18FD76176E228D7319ABCDFA4A2EB906C60194561D2A4
CA94C31A0A0F7C906A6272F4DA9323550BBFBCAF5A8BAD5D98B072AA8FF8597B
279B8FD1B911FDBB4D30735E62DDADF6766E36EA3E0AE6D94408A45E5F6B1292
1B80696C5C3DA57B5FA35C5E30A79F2EF46AF98FF43B1D23ED27CBE4648D9F4B
94EBF84ECFDFD0453EB0AC2EC4684B0A47011EDA316992058FC36C23CC8E7F50
5F0AC9317680A7EF7AB427A87086EA10A597E1623529F8734C0E096F18A003B5
E0E8706A72A69CACFE93147FD30EF2AA58DA33D299942E143A26C67464E6D2CE
3F0D7E23C59D2CE7B91C2F93EF95F5CEFF173F2489F4F89E7B06D64F37B548B8
97E079048596734F0904DF5280531C93F0F9BDFE60D91571AACC94CC7F685CF1
CD35D814B09AA8D57F8607DAF59D264A7F4B1C259E4B1010AC355CD9D1DD0C6F
1B2D6976B7115777B02C5938A3F1A9AF2516B0CA935197480C35973404E3091F
B1962EEE378AB97CC9D808B72E167E4F1573A6A5D78ABFE53BBA04D117B1E1CE
E5EA815FBDD0F08D8C89CCCC0C922AEF593F091226BD53504A414099BA8E096F
9D767EC93AE3810C3DA334C749E89A3AF31188198177811EAE667EE5B614EF62
AC0095DF78E2E0A46EDD524CB334592650BB4B21C9F3D6882E3E909D80E0762C
58ECC4E243CF7DD1F6ADE3DDC4FB8F46BDFB4533A84EF0714F19E2237E8D251B
BA1D812A10381D0456CC203C348DD73C1D3BFF8AF889200505C07E64B2D4509D
1270CDBEFF01A02B3106E5C17026C40204D23ACEB473C65C768D28FCE6B4032E
D5B440190F11C953C3C8FCFCDF5C20A99F85CF1D9C1DD3C00F8CC890179E563F
D9E79C9FBB0F67B045A728EA6B71A0E91D39A856F11BE21F316D94ECBCAD9BD1
5CAB0838734E691BC16C50353B2441985488F0E70611BE0F8F138B43CFEB4C30
1E5596CCFA7519DBB19F45950B74B2E9E3FEBCE28793C40544A989869EB84A01
4850D6E7F60C87FC7861180133E00A92138E367F796267AFE969362D739A53C1
37AF4C79060AFDAFA10DAAB8ED780271D3CB7FF4EFAC1D126E5AA128B5956F0E
AAB791D74FA1F530420B6517A73A255AB977D4F9AED30A343101665AA2904FD7
02766B36916DBA8F9C96141BBF4788FC2045F93E254468E3FC7C1941F8501477
8F1BBA68418155DB22B168EC5AA7ED0AFA1F31A323EB96D7FFB0FE9B1D0ACD8A
E0F36B68AA8C5FD2E0E871DBD2628AEC086C02A869937B7832DA8FE8848BA642
329B53A5577E416FBE54BA0F24BE28A496184188A549A7ABF47833791F1174DC
CDCC8FEA15D0A83A2201FED8592B8B420B33630DA73169456FD365BAE24F737E
9FA5DBC1CBFBCFBB27393105694A325DFD34412EFEAF168510323ECA1B860FEA
33A74145856413B86B4B6F63D03A8CA32BC46B30A03C5FB6C4700D3DCD989022
884FEBEE9FCA1B8B7B45FBB0B11E61980DDF168A4659E4B9705BFC0D0DFCFDF1
30BFC55FD967E8195FC8239B75243B40F957BD55091B92BE32833DD09EB442AE
A8A8F2F13427439971B8428AFE5D86570D41FEB04431DCD86F32DD06130AFA27
66FDE9E1CB58637A6D15736C339C5BFB43AF47577453FF94AE672ABE5AA5CC97
60B1F17B61ADD58A727467E3155079D01BB3C65478610B077D9DFB90ECF4D95D
35E79D4863C8576F3EA3BE8E2F73A22316553DB254BEF773C039463C85D6D80D
DEF237DB417DEF28B05785F6CD239CA5CD320B8F0D7375452187D66B2A407B9D
C227DB2CBBB2F3B2D3F3B7A7DF75345BC8A18E25F11A7D81A790181F8016EFE2
ECF8D8E668FDE7DBAC99DC13BA6AC58E29DBF78BBF060C451CDB31A29D1F0728
FA24BB97DD2DC56153ECD4ED76BF1DAAC7B611729A82BDDDEC65CCEEA5836251
69C89DA5CB7C03247DA340C0488FCF0F098B4CAEA70CACB2B5AB089348AB4C2A
B70FC1D7D893D279F20F49DC0C8E61211078207FD54E128A394F8AEE554903D3
BCA310905EFB3AA6C834595E44ECC3736ADE3408E24E67ACBB90EA40D6F2FE1D
2872A4DCFD332DA2B5B288DCAA788CD5C7775B827B19E9F0A17EB383E9A3B952
053C409CFAD483411051B09C4C04E710EC766F5A98AC261B1F041F7C597277CA
7044515630118B20992BB4D8B237EB0FC9D78A09D54975409AB9C249EA3E90D7
E4FD4A87B5DDEE81E7B12DA319578416C3ED608A507E374D2B801CA14A3E2AE5
5CBC1B2648F4D2538A80A8C3753F44E51DB1FAE57AEEB6AC3FCC14404A93F6D7
9398550877201EEEB19A460AAF4FA9551A5354A017C6ABC65E4B7D3A84800FE7
E6E16218F50F3DA778E95B51ADE05F6461CD7A0180AB8F253C04EFF328219AAA
ED2742E780C2619973666A034841B3C101FEB4B869AD376F2EDCB7189D78B62D
84334B88FF9BA2BBCB2E1F3F4823F547EE4A9EA6CA6247491D3B4E7F5260A915
0E250037C2B71EA6D805BD224A01293AE851D433FBA3B880E28DF5AF6638AE78
ECC7AF12811840B276B471D10BD5C1D87A142FAD62F73DA57E956A0825B8E600
5FDA91AC912E238315325F6667C45797A4CF8CA3C8A30553F0C9401E8548C1BE
2A96012CB84A45CCBBD8FBB23E65D301BD532541F7B6128C07230022C9216D50
B00EC0E03AC54247B91E17A4750E54C19D08E0CC56326CDD63304F1D40798B38
967F5600111E5591FA086FB3BC0EA223C43FE8BE4C9353EF5393DAB19D288A32
AA3E6F0C45C0A32BB7331F16D6FC91782EA2DA9892E643C79C90D0000189102D
B1D64470B3289215CF5994EF9D0A7EF4B68F68DB465B65CE8EB61A18ADD72AE5
F23C907AB03927D7C5D58A7AF578E243B416B679AD5B0B501E1F5F65972EB10D
98D5647E1291BAE2DD660EA3BFC3609701F2ACF55EA96E634DFC8DF77EEF58FD
459E1767A6829401990A7E127972529B25BB00F5AB1E2B85C6CEB188B216E885
2A5041E3A478F0933EB1E1F26CABE02C88E05BC4CD196F073F7297564D1624AF
332BD3E6933874EA7A72BCAAA8C959C87E9B6F8DAEC9FBB7479FCE0E785B4359
9B9692AA1487C1A3A2D90F89D91BB1742F5477E2ADD91523B144DB5E772DC9BD
289C49EBB89CDB2FC4B00BD15989C976ED795A7C508F66AB7D8607B409619ED8
0207A6574F5B19F271126ADD9390D490303571C35DE27F2042678BA659EF198D
6EDBD7A6BDE14BC11696FB793245C718F6F012567B30D9ADA1B25ED9CEA188D8
418A06E080EDFF8416B7DFB18C5F2C3087FD49AF38E46FA60F1FCE01B82AC433
6C801C993E3392C885654964E7FC4D39D1DDF3BFAAE0CF9CCFC7AD6A2F091CFB
2CB3BC13D34FD65589FC62128AC26AB2CB80EB5028F79DF46B733B9A7C838DE7
2223EFE5142D5524B8BE7D27FFBAB167B4A26CC8110F6A48606475E89F0EAB2B
56BB19176452CFF68D5C88BF820B804DB0BC025E6F7F3C437BA65A263A0DE024
3180BE3321CFCA81504833E7F5ED4F114732E0922A3C733FB9D4E3AA2260C26B
6E9372DFA835CEC9E0BC7DBF99FE89AE316159395E4DC1B358CE61FA4B25BDA6
9D569E119632B515AC114380197A09F73B3A168607183522D3C760C15DEF9D52
6B9CD65535FD098392243FE2A1BB57155D0169A5F7C046FC277D5A35E86F4C91
456466332089DD17FCBD5CD5696DB4C6D82C7AA459B767A1A86E4E746EE98B96
67BD932AED7DB9EBBC7B3FCB688223569D346634CDC6E26BAB891AA0006AFDE4
E67414E4F6885EEB501AC84D7CEC0BAD7E28FEBB56E15DB3CF7BCFF696A70D69
D38C5D150CB3584CB2DD745F4D8F35ABC8241188048EEF52489DDCD922D9BCED
8F0BB3802D68F16279FFFD6CCA2A504A117DAD565DB147285FFBA660E8F388D7
8C2F018D0FCB66CC937194ECD03E78CBB9B70049A48AF349BA8D093EF58A9001
B5FCF01EF9889B7F8CD99B3BD961A87F1F09EEBA4710B43CF6F7188CEF990BC7
1624D84798FF0F3074A82D8EBC4149FB69E422274ACC99380E64F1D54E4E0450
A7F9282A651B6282D3DB74FB84B6A8E605AE5FB8659569CBDCE96516D5901E9D
85A18FFA02200A9B0BA9FB7264FA9E8B45C97FE3A6DAF4A918DDADFA7D296ECD
32E119D583A85A04B0B0B10430338BDE54E08C08C6B9B05678876A146D97012F
4FD7BE86AB07F0239A34E5977AFFFDB2D79F7E50A886A495AC6B505BED1915C5
5386D1538E04F54DC7AE73C7CD85AED3E38C3BB6C46C7F50A5D7CE68494A08F0
48304AAA584C2523420D6724BD0522548F777C6F46D9199B2816470ADED2F092
12027706DA2A2E175E42D35054A324CFD9621AC4CA4586C7186C32B01BE4279A
9EA68BBD934186D58EC0000ADE99E60FE03D831DFB7C5D16DACE4FB9D4C5D9BB
AA5D74D8F5C64B64998811CE2124971AE326BC9FDB20541D9AD2E9DD57D06F4F
17F0BD7F1759A1206BD961DB1E7185B32710451F72B84AE7792B8FC9D8D6FFF4
59657827BC1E6873744BEBA88B01467B588E7D86E6832FE973094885FBBEB034
8B6B91D99A9708D6943D1A30272D2E769DCE0FCD149105E599705AEB7000799E
96A2CECA7C0139948E04339270049138602A54FCEAFBC023D0EF43A3A77062ED
3F31C362479838FDD40E3554F65A2BDBE8304C2C3AEDC54A6CE12C4859EC668B
5B2356655E75064E1C2C90376E860136FCB329953875F95CE449310DC11854B1
387E49B82031949E204D2B6DC776DE0F5ED8224D2F1448CA69DD7471BD6C8C49
60A6DC0A10327E472F8E76C5184CCDF791E0881ED90A3DCC496B628965D8F728
1B26325BB60D366FA105E2275429D811311147C678F369D521DD87AA593976A6
D6ED5BD6CA24A065B6EFFD7953E6DF9FA3712F7328C11427488F58140B18CFB3
B8349A89BCFCFFFF2501676CA1E1FC26D4DE6CADA5E06D19A0FA3D3C9C462A60
2CDAD8211F3749885E678A5E74C2A942E44DAAB153DE9A304EEFAA4550A4BC81
9DC9A26F891C3884A06BDB0AFD3D1183CE6AB22243B6F3A250540F43FCDBB512
4382EE0055B1780ECCB9F40356A4C33D024EA78D17D57DD5E2D5FE45530CDFFB
90961A19179713C9FEEE831420DAE48198D9EC60165DE651ECDDD4ABDF188A18
CD05C95FEF7DEA370A3B907A8272DCA3ACD982944FFFABBD5761B17621CE6CB4
82D649270D40C4BCDBBB43EF376D5E5BD514486A47C2CBEB306C6F98262D248A
34BE1503D2FBE78C1B07113B6E0794C50FC33F982AA1C8C88E5A35EBBE74C91E
CFFF63992451E1CD6C41F3FDFB57208BD5A34E14C741D529C5C10F6FFC7F6D8F
8DF71F1E25FE00EC36449C60E87B1C3B6BC8CF0D2082D9B4FCC8C222E3AB30CB
826EFA79EA1795F6E1F1CACDEBB8AB2EB24BD0D64070C636282F3BE3847E8A6B
25EF16F8FDACD474CFB672FA41B708A116A14F7BC967B9D0AF32F1F92F59865D
45BE1940E7473C32CE4856BD4E0A2A5FE040E25BA7BB7374DC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/A)
@start /Fa 27[664 111[432 1[548 5[332 2[399 3[598 30[848
70[{ enclmec ReEncodeFont }7 1328.35 /LMRoman12-Italic
rf /Fb 203[993 1[993 50[{}2 1328.35 /wasy10 rf /Fc 242[1594
13[{ enclmmathsy ReEncodeFont }1 1594.02 /LMMathSymbols10-Regular
rf /Fd 255[732{ enclmmathsy ReEncodeFont }1 885.568
/LMMathSymbols8-Regular rf /Fe 198[470 470 470 470 470
470 470 470 470 470 48[{ enclmrm ReEncodeFont }10 885.568
/LMRoman8-Regular rf /Ff 177[830 12[830 15[553 2[307
46[{ enclmec ReEncodeFont }4 1106.96 /LMRoman10-Regular
rf /Fg 160[909 45[606 1[606 47[{ enclmec ReEncodeFont }3
1212.12 /LMRoman10-Regular rf /Fh 135[739 3[470 13[641
16[883 762 3[838 12[931 988 975 5[361 361 58[{
 enclmmathit ReEncodeFont }11 1328.35 /LMMathItalic12-Regular
rf /Fi 240[664 13[369 1033{ enclmmathsy ReEncodeFont }3
1328.35 /LMMathSymbols10-Regular rf /Fj 162[361 1[361
29[1012 1[361 3[650 650 650 650 650 650 650 650 4[1012
1[506 506 2[1084 37[{ enclmrm ReEncodeFont }16 1328.35
/LMRoman12-Regular rf /Fk 154[966 101[{}1 1328.35 /TeX-feymr10
rf /Fl 650 2[723 5[650 17[650 13[1012 17[975 73[578 686
686 939 686 723 506 513 506 1[723 650 723 1084 361 686
397 361 723 650 397 578 723 578 723 650 6[795 2[1336
975 975 939 723 2[885 2[1192 813 1011 668 469 1[1021
849 885 993 1[921 975 1[614 4[361 650 650 650 650 650
650 650 650 650 650 1[361 434 361 2[506 506 2[1084 3[361
3[723 723 759 8[613 1[613 16[{ enclmec ReEncodeFont }73
1328.35 /LMRoman12-Regular rf /Fm 27[1046 31[1625 73[956
3[1136 1196 837 849 879 1[1196 1076 1196 1793 598 2[598
1196 1076 1[982 1196 956 1196 1046 12[1497 1196 2[1470
1616 1682 2041 1293 2[801 1682 1[1353 1412 1[1554 1530
1625 7[1076 1076 1076 1076 1076 1076 1076 1076 1076 1076
1076 598 717 17[1255 27[{ enclmec ReEncodeFont }49 1912.83
/LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fm(AN)718
b(1.1)f(-)h(1)f(Prozen)-60 b(trec)g(hn)g(ung)716 b(-)h(O)-60
b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray -741 4800 a Fl(1.)p
0 TeXcolorgray 651 w(A)-36 b(ufgrund)557 b(einer)i(Bef\366rderung)f
(erh\366h)-36 b(t)558 b(sic)-36 b(h)558 b(das)g(Gehalt)h(eines)f
(Angestellten)h(v)-36 b(on)558 b Fk(e)888 6792 y Fl(2.400)436
b(auf)e Fk(e)650 b Fl(2.760.)921 11330 y(Um)433 b(wie)i(viel)f(Prozen)
-36 b(t)434 b(ist)f(sein)h(Gehalt)f(gestiegen?)p 1 0 0
TeXcolorrgb 1054 13089 a Fj(2760)296 b Fi(\000)g Fj(2400)p
1054 13677 6827 45 v 3166 14898 a(2400)8382 13987 y(=)368
b(0)p Fh(;)p Fj(15)921 16533 y Fl(Sein)433 b(Gehalt)g(ist)h(um)f(15)217
b(\045)434 b(gestiegen.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 4800 a Fg(___/1)p 1 0 0 TeXcolorrgb
47998 6792 a Ff(AN)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 20266 54804 45 v -2331
25890 a Fm(AN)718 b(1.1)f(-)h(2)f(Mittlere)g(\304nderungsrate)d(-)k(O)
-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray -741 29197 a
Fl(2.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(ist)h(die)f(F)-108
b(unktion)433 b Fh(f)575 b Fl(mit)434 b(der)f(Gleic)-36
b(h)g(ung)433 b Fh(f)142 b Fj(\()p Fh(x)p Fj(\))368 b(=)h
Fh(x)32638 28715 y Fe(2)33459 29197 y Fj(+)295 b(2)p
Fl(.)921 33734 y(Berec)-36 b(hne)433 b(die)g(mittlere)h
(\304nderungsrate)e(v)-36 b(on)434 b Fh(f)576 b Fl(im)433
b(In)-36 b(terv)-72 b(all)434 b Fj([)8 b(1;)221 b(3])p
Fl(.)p 1 0 0 TeXcolorrgb 1054 35727 a Fh(f)142 b Fj(\(3\))295
b Fi(\000)g Fh(f)142 b Fj(\(1\))p 1054 36315 6514 45
v 3985 37537 a(2)8069 36625 y(=)369 b(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 29197 a Fg(___/1)p
1 0 0 TeXcolorrgb 47998 31189 a Ff(AN)g(1.1)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 41012 54804 45
v 0 TeXcolorgray 24746 81281 a Fl(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1794 a Fm(AN)718 b(1.1)f(-)h(3)f(\304nderung)e(der)i
(Spann)-60 b(ung)714 b(-)k(O)-60 b(A)718 b(-)f(BIFIE)p
0 TeXcolorgray -741 5102 a Fl(3.)p 0 TeXcolorgray 651
w(Die)451 b(nac)-36 b(hstehende)448 b(Abbildung)h(zeigt)h(den)f
(zeitlic)-36 b(hen)450 b(V)-108 b(erlauf)450 b Fh(t)g
Fl(\(in)f(s\))h(der)f(Spann)-36 b(ung)921 7094 y Fh(U)573
b Fl(\(in)433 b(V\))g(w)-36 b(\344hrend)433 b(eines)h(ph)-36
b(ysikalisc)g(hen)434 b(Exp)36 b(erimen)-36 b(ts.)p 0
TeXcolorgray 0 TeXcolorgray 5205 41558 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 328.8854 a add def
/d 0.0 a add neg def /h 289.34369 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 5205 41558 a
7410 39064 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 11 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 308.96858 0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 0.0 28.4527
T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 13 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 266.81285 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha   1  setlinecap
[  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore grestore 28.45274
0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 308.96858  0 -36.37735  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -36.37735
 308.96858  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-22.53084  def /maxTickline 266.81285  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 266.81285
0.0 -22.53084   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 308.96858
0.0 -36.37735 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 266.81285  0 -22.53084  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -22.53084
 266.81285  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-36.37735  def /maxTickline 308.96858  def /dT 1864676 abs 65536 div
viceversa { neg } if def /DT 4. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 7.11317  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 7.11317  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 266.81285
0.0 -22.53084   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 308.96858
0.0 -36.37735 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 6165 36200 a Fe(4)6165 33050
y(8)5694 29901 y(12)5694 26751 y(16)5694 23602 y(20)5694
20452 y(24)5694 17302 y(28)5694 14153 y(32)5694 11003
y(36)10325 40410 y(1)2679 b(2)h(3)f(4)h(5)g(6)f(7)h(8)f(9)2445
b(10)-35717 b Fd(\000)p Fe(1)7410 39064 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 7410 39064
a 7410 39064 a
tx@Dict begin  { 308.96858 266.81285 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 7410 39064 a 7410 39064 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 7410 39064 a
7067 39350 a Fl(x)7410 39064 y
tx@Dict begin  PutEnd  end
 7410 39064 a 7410 39064
a
tx@Dict begin  PutEnd  end
 7410 39064 a 7410 39064 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 7410 39064 a 7410 39064 a
tx@Dict begin  { 0.0 0.0 pop 308.96858 266.81285 exch pop } PutCoor
PutBegin  end

7410 39064 a 7410 39064 a
tx@Dict begin  { 5.0 6.2015 5.16667 2.33331 -40.  Uput UUput } PutCoor
PutBegin  end
 7410 39064 a 7067 39221 a Fl(y)7410
39064 y
tx@Dict begin  PutEnd  end
 7410 39064 a 7410 39064 a
tx@Dict begin  PutEnd  end
 7410 39064 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x 0 def /x1 10.859013885766789 def
/dx x1 x sub 199 div def /F@pstplot (2.2806827703444222E-6*x^(7.0)-1.7282933713131396E-4*x^(6.0)+0.005965768992273854*x^(5.0)-0.09584712783113487*x^(4.0)+0.692048431766916*x^(3.0)-1.9191657168338834*x^(2.0)+2.3785028428305366*x+20.0)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
7.11317 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x dx
add def xy  dup 1.e30 7.11317 mul gt { moveto } { dup -1.e30 7.11317
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 7.11317 mul gt { moveto } { dup
-1.e30 7.11317 mul lt { moveto } { L } ifelse } ifelse  } if  gsave
1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 41612 41558 a
currentpoint initclip moveto
 41612 41558 a
921 45543 a Fl(Ermittle)621 b(die)g(absolute)f(und)g(die)h(relativ)-36
b(e)622 b(\304nderung)d(der)h(Spann)-36 b(ung)619 b(w)-36
b(\344hrend)621 b(der)921 47535 y(ersten)433 b(10)h(Sekunden)e(des)i
(Exp)36 b(erimen)-36 b(ts.)921 52072 y(absolute)434 b(\304nderung:)p
12453 52072 9449 34 v 10315 w(V)921 56609 y(relativ)-36
b(e)435 b(\304nderung:)p 11940 56609 V 10314 w(\045)p
1 0 0 TeXcolorrgb 921 59155 a(absolute)f(\304nderung:)e(12)217
b(V)921 61147 y(relativ)-36 b(e)435 b(\304nderung:)d(60)217
b(\045)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 5102 a Fg(___/1)p 1 0 0 TeXcolorrgb 47998 7094
a Ff(AN)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 64880 54804 45 v 0 TeXcolorgray
24746 81281 a Fl(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(AN)718 b(1.1)f(-)h(4)f(T)-179
b(reibsto\033preise)714 b(-)k(O)-60 b(A)718 b(-)f(BIFIE)p
0 TeXcolorgray -741 4800 a Fl(4.)p 0 TeXcolorgray 651
w(Pro)574 b(Liter)f(Diesel)h(zahlte)g(man)g(im)f(Jahr)h(2004)h(durc)-36
b(hsc)g(hnittlic)g(h)571 b Fh(T)36557 4999 y Fe(0)37657
4800 y Fl(Euro,)i(im)h(Jahr)888 6792 y(2014)435 b(b)36
b(etrug)433 b(der)g(durc)-36 b(hsc)g(hnittlic)g(he)432
b(Preis)i(pro)f(Liter)g(Diesel)i Fh(T)33773 6991 y Fe(10)35203
6792 y Fl(Euro.)921 11330 y(Geb)36 b(en)494 b(Sie)h(jew)-36
b(eils)496 b(einen)f(T)-108 b(erm)494 b(zur)h(Berec)-36
b(hn)g(ung)493 b(der)i(absoluten)f(und)g(der)h(relativ)-36
b(en)921 13322 y(Preis\344nderung)637 b(v)-36 b(on)637
b(2004)i(auf)f(2014)h(f\374r)e(den)g(durc)-36 b(hsc)g(hnittlic)g(hen)
635 b(Preis)i(pro)g(Liter)921 15314 y(Diesel)435 b(an!)921
19851 y(absolute)f(Preis\344nderung:)p 14539 19851 15749
34 v 921 24388 a(relativ)-36 b(e)435 b(Preis\344nderung:)p
14026 24388 V 1 0 0 TeXcolorrgb 921 26934 a(absolute)f
(Preis\344nderung:)f Fh(T)15734 27133 y Fe(10)17025 26934
y Fi(\000)296 b Fh(T)19116 27133 y Fe(0)921 31654 y Fl(relativ)-36
b(e)435 b(Preis\344nderung:)14591 30756 y Fh(T)15353
30955 y Fe(10)16645 30756 y Fi(\000)296 b Fh(T)18736
30955 y Fe(0)p 14591 31344 4671 45 v 16282 32565 a Fh(T)17044
32764 y Fe(0)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 47992 4800 a Fg(___/1)p 1 0 0 TeXcolorrgb
47998 6792 a Ff(AN)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 36240 54804 45 v 0 TeXcolorgray
24746 81281 a Fl(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fm(AN)508 b(1.1)f(-)g(5)h(Preis\344nderungen)
c(-)j(L)-179 b(T)507 b(-)g(Matura)g(2014/15)g(-)h(Haupt-)-2331
4622 y(termin)p 0 TeXcolorgray -741 7929 a Fl(5.)p 0
TeXcolorgray 651 w(Ein)428 b(F)-108 b(ernsehger\344t)427
b(wurde)h(im)g(Jahr)g(2012)i(zum)e(Preis)g Fh(P)29694
8128 y Fe(0)30649 7929 y Fl(v)-36 b(erkauft,)429 b(das)f(gleic)-36
b(he)429 b(Ger\344t)874 9921 y(wurde)k(im)h(Jahr)f(2014)i(zum)e(Preis)h
Fh(P)19603 10120 y Fe(2)20563 9921 y Fl(v)-36 b(erkauft.)921
12466 y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36
b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357
b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36 b(h)g(tigen)921
14458 y(Satzteile)434 b(so,)g(dass)g(eine)f(mathematisc)-36
b(h)434 b(k)-36 b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36
b(tsteh)g(t!)921 17948 y(Der)411 b(T)-108 b(erm)p 7035
17948 3150 45 v 10656 17900 a(1)10184 17948 y Fc(\015)p
11778 17948 V 3560 w Fl(gibt)411 b(die)f(absolute)h(Preis\344nderung)f
(v)-36 b(on)410 b(2012)i(auf)f(2014)h(an,)921 19940 y(der)433
b(T)-108 b(erm)p 6810 19940 V 10432 19892 a(2)9960 19940
y Fc(\015)p 11554 19940 V 3583 w Fl(die)433 b(relativ)-36
b(e)435 b(Preis\344nderung)e(v)-36 b(on)434 b(2012)h(auf)e(2014.)p
0 TeXcolorgray 0 TeXcolorgray 12327 21313 8834 45 v 12327
24397 45 3085 v 16418 23094 a(1)15946 23142 y Fc(\015)p
21115 24397 V 12327 24441 8834 45 v 12327 29248 45 4807
v 13168 26294 a Fh(P)14006 26493 y Fe(0)p 13168 26882
1365 45 v 13168 28104 a Fh(P)14006 28303 y Fe(2)p 18750
29248 45 4807 v 19459 27177 a Fb(2)p 21115 29248 V 12327
29292 8834 45 v 12327 32551 45 3260 v 13035 31348 a Fh(P)13873
31547 y Fe(2)14694 31348 y Fi(\000)296 b Fh(P)16861 31547
y Fe(0)p 18750 32551 V 1 0 0 TeXcolorrgb 19459 31254
a Fb(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
21115 32551 V 12327 32596 8834 45 v 12327 37203 45 4608
v 13168 34448 a Fh(P)14006 34647 y Fe(2)14827 34448 y
Fi(\000)g Fh(P)16994 34647 y Fe(0)p 13168 35037 4352
45 v 15019 36258 a Fj(2)p 18750 37203 45 4608 v 19459
35231 a Fb(2)p 21115 37203 V 12327 37247 8834 45 v 0
TeXcolorgray 0 TeXcolorgray 30427 21313 8400 45 v 30427
24397 45 3085 v 34301 23094 a Fl(2)33829 23142 y Fc(\015)p
38782 24397 V 30427 24441 8400 45 v 30427 29248 45 4807
v 31268 26294 a Fh(P)32106 26493 y Fe(2)p 31268 26882
1365 45 v 31268 28104 a Fh(P)32106 28303 y Fe(0)p 36417
29248 45 4807 v 37125 27177 a Fb(2)p 38782 29248 V 30427
29292 8400 45 v 30427 33899 45 4608 v 31268 31145 a Fh(P)32106
31344 y Fe(0)32927 31145 y Fi(\000)g Fh(P)35094 31344
y Fe(2)p 31268 31733 4352 45 v 33119 32954 a Fj(2)p 36417
33899 45 4608 v 37125 31928 a Fb(2)p 38782 33899 V 30427
33944 8400 45 v 30427 38750 45 4807 v 31268 35796 a Fh(P)32106
35995 y Fe(2)32927 35796 y Fi(\000)g Fh(P)35094 35995
y Fe(0)p 31268 36385 4352 45 v 32762 37606 a Fh(P)33600
37805 y Fe(0)p 36417 38750 45 4807 v 1 0 0 TeXcolorrgb
37125 36679 a Fb(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 38782 38750 V 30427 38794 8400 45 v 47992
7929 a Fg(___/1)p 1 0 0 TeXcolorrgb 47998 9921 a Ff(AN)369
b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 42823 54804 45 v -2331 48251 a Fm(AN)718 b(1.1)f(-)h(6)f(F)-179
b(ertilit\344t)715 b(-)j(O)-60 b(A)718 b(-)f(Matura)g(NT)h(2)f(15/16)p
0 TeXcolorgray -741 51558 a Fl(6.)p 0 TeXcolorgray 651
w(A)-36 b(uf)541 b(der)g(W)-108 b(ebsite)541 b(der)f(Statistik)i(A)-36
b(ustria)541 b(\034ndet)f(man)h(un)-36 b(ter)540 b(dem)g(Begri\033)i
Fa(F)-100 b(ertilit\344t)769 53550 y Fl(\(F)-108 b(ruc)-36
b(h)g(bark)g(eit\))432 b(folgende)i(Information:)675
56095 y(\022Die)491 b(Gesam)-36 b(tfertilit\344tsrate)490
b(lag)h(2014)g(b)36 b(ei)489 b(1,46)i(Kindern)e(je)i(F)-108
b(rau,)489 b(d.h.,)h(dass)g(b)36 b(ei)489 b(zu-)921 58087
y(k\374nftiger)503 b(K)-36 b(onstanz)502 b(der)g(alterssp)36
b(ezi\034sc)-36 b(hen)502 b(F)-108 b(ertilit\344tsraten)502
b(eine)h(heute)e(15-j\344hrige)921 60079 y(F)-108 b(rau)599
b(in)h(\326sterreic)-36 b(h)599 b(bis)h(zu)g(ihrem)g(50.)i(Geburtstag)d
(statistisc)-36 b(h)600 b(gesehen)f(1,46)j(Kin-)921 62071
y(der)575 b(zur)f(W)-108 b(elt)576 b(bringen)e(wird.)j(Dieser)f
(Mittelw)-36 b(ert)575 b(liegt)h(damit)f(deutlic)-36
b(h)575 b(un)-36 b(ter)574 b(dem)675 64063 y(\022Bestanderhaltungsniv)
-36 b(eau\020)433 b(v)-36 b(on)434 b(et)-36 b(w)g(a)434
b(2)g(Kindern)f(pro)g(F)-108 b(rau.)-181 b(\020)921 66609
y(Berec)-36 b(hne,)486 b(um)f(w)-36 b(elc)g(hen)486 b(Prozen)-36
b(tsatz)486 b(die)g(f\374r)f(das)h(Jahr)g(2014)i(g\374ltige)e(Gesam)-36
b(tfertili-)921 68600 y(t\344tsrate)341 b(v)-36 b(on)342
b(1,46)h(Kindern)d(je)i(F)-108 b(rau)341 b(ansteigen)g(m)-36
b(\374sste,)341 b(um)g(das)h(\022Bestanderhaltungs-)921
70592 y(niv)-36 b(eau\020)434 b(zu)f(erreic)-36 b(hen.)921
73138 y(prozen)g(tuelle)433 b(Zunahme:)p 1 0 0 TeXcolorrgb
433 w(36,99)217 b(\045)435 b(T)-108 b(oleranzin)-36 b(terv)-72
b(all:)435 b Fj([)8 b(36)221 b(\045;)g(37)g(\045])p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 51558
a Fg(___/1)p 1 0 0 TeXcolorrgb 47998 53550 a Ff(AN)369
b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 76945 V 0 TeXcolorgray 24746 81281 a Fl(4)p 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fm(AN)679 b(1.1)g(-)g(7)g(Prozen)-60
b(te)678 b(-)h(MC)h(-)f(Matura)f(2013/14)h(Haupttermin)p
0 TeXcolorgray -741 4907 a Fl(7.)p 0 TeXcolorgray 651
w(Zahlenangab)36 b(en)614 b(in)f(Prozen)-36 b(t)614 b
Fj(\(\045\))f Fl(mac)-36 b(hen)613 b(An)-36 b(teile)614
b(un)-36 b(tersc)g(hiedlic)g(her)612 b(Gr\366\377en)i(v)-36
b(er-)921 6899 y(gleic)g(h)g(bar.)921 9444 y(Kreuze)433
b(b)36 b(eide)434 b(zutre\033enden)d(A)-36 b(ussagen!)p
1062 12403 44260 45 v 1062 17469 45 5066 v 1770 14273
a(P)g(eters)289 b(monatlic)-36 b(hes)289 b(T)-108 b(asc)-36
b(hengeld)289 b(wurde)g(v)-36 b(on)289 b Fk(e)506 b Fl(80)290
b(auf)f Fk(e)506 b Fl(100)290 b(erh\366h)-36 b(t.)289
b(Somit)1770 16265 y(b)36 b(ek)-36 b(omm)g(t)434 b(er)f(jetzt)h(um)f
(20)217 b(\045)434 b(mehr)f(als)h(v)-36 b(orher.)p 42912
17469 V 45277 17469 V 1062 17513 44260 45 v 1062 22649
45 5137 v 1770 19454 a(Ein)551 b(Preis)h(ist)f(im)g(Laufe)h(der)e
(letzten)h(f\374nf)g(Jahre)g(um)g(10)217 b(\045)552 b(gestiegen.)g(Das)
1770 21446 y(b)36 b(edeutet)356 b(in)h(jedem)h(Jahr)f(eine)g
(Steigerung)g(v)-36 b(on)357 b(2)217 b(\045)357 b(gegen)-36
b(\374b)36 b(er)357 b(dem)g(V)-108 b(orjahr.)p 42912
22649 V 45277 22649 V 1062 22693 44260 45 v 1062 29638
45 6945 v 1770 24634 a(W)g(enn)433 b(die)h(In\035ationsrate)f(in)h(den)
f(letzten)g(Monaten)g(v)-36 b(on)434 b(2)217 b(\045)434
b(auf)g(1,5)217 b(\045)434 b(ge-)1770 26626 y(sunk)-36
b(en)447 b(ist,)h(b)36 b(edeutet)446 b(das)h(eine)g(relativ)-36
b(e)448 b(Abnahme)e(der)h(In\035ationsrate)g(um)1770
28618 y Fj(25)221 b(\045)p Fh(:)p 42912 29638 V 1 0 0
TeXcolorrgb 43621 26498 a Fb(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45277 29638 V 1062 29682 44260
45 v 1062 36552 45 6870 v 1770 31623 a Fl(W)-108 b(enn)391
b(ein)h(Preis)g(zun\344c)-36 b(hst)391 b(um)g(20)217
b(\045)392 b(gesenkt)g(und)f(kurze)g(Zeit)h(darauf)g(wieder)1770
33615 y(um)415 b(5)217 b(\045)414 b(erh\366h)-36 b(t)414
b(wurde,)h(dann)f(ist)g(er)h(jetzt)g(um)f(15)217 b(\045)415
b(niedriger)g(als)g(urspr\374ng-)1770 35607 y(lic)-36
b(h.)p 42912 36552 V 45277 36552 V 1062 36596 44260 45
v 1062 39740 45 3145 v 1770 38537 a(Eine)434 b(Zunahme)f(um)g(200)217
b(\045)434 b(b)36 b(edeutet)432 b(eine)i(Steigerung)f(auf)h(das)g
(Dreifac)-36 b(he.)p 42912 39740 V 1 0 0 TeXcolorrgb
43621 38500 a Fb(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 39740 V 1062 39785 44260 45 v 47992
4907 a Fg(___/1)p 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 43813 54804 45
v 0 TeXcolorgray 24746 81281 a Fl(5)p 0 TeXcolorgray
eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fm(AN)756 b(1.1)e(-)h(8)g(Leistungsv)-60
b(erb)60 b(esserung)751 b(-)k(O)-60 b(A)755 b(-)h(Matura)e(2016/17)
-2617 4622 y(-)718 b(Haupttermin)p 0 TeXcolorgray -741
7929 a Fl(8.)p 0 TeXcolorgray 651 w(Drei)469 b(P)-36
b(ersonen)468 b Fh(A)p Fl(,)h Fh(B)536 b Fl(und)468 b
Fh(C)563 b Fl(absolvieren)470 b(jew)-36 b(eils)470 b(v)-36
b(or)469 b(und)e(nac)-36 b(h)469 b(einem)f(Sp)36 b(ezialtrai-)921
9921 y(ning)449 b(denselb)36 b(en)448 b(K)-36 b(o)36
b(ordinationstest.)450 b(In)f(der)f(nac)-36 b(hstehenden)447
b(T)-108 b(ab)36 b(elle)450 b(sind)e(die)h(dab)36 b(ei)921
11913 y(erreic)-36 b(h)g(ten)432 b(Punkte)i(angef\374hrt.)p
26482 12880 45 45 v 26527 12880 7034 45 v 33560 12880
6681 45 v 40240 12880 6651 45 v 26482 14871 45 1992 v
0.8 TeXcolorgray 26527 14871 6990 1992 v 0 TeXcolorgray
27624 14274 a(P)-36 b(erson)434 b Fh(A)p 33516 14871
45 1992 v 0.8 TeXcolorgray 33560 14871 6636 1992 v 0
TeXcolorgray 1372 w Fl(P)-36 b(erson)434 b Fh(B)p 40196
14871 45 1992 v 0.8 TeXcolorgray 40240 14871 6607 1992
v 0 TeXcolorgray 1439 w Fl(P)-36 b(erson)434 b Fh(C)p
46847 14871 45 1992 v 921 14916 45970 45 v 921 16908
45 1992 v 0.8 TeXcolorgray 965 16908 25518 1992 v 0 TeXcolorgray
1629 16310 a Fl(erreic)-36 b(h)g(te)433 b(Punkte)g(v)-36
b(or)434 b(dem)g(Sp)36 b(ezialtraining)p 26482 16908
45 1992 v 4709 w(5)p 33516 16908 V 5882 w(15)p 40196
16908 V 5365 w(20)p 46847 16908 V 921 16952 45970 45
v 921 18944 45 1992 v 0.8 TeXcolorgray 965 18944 25518
1992 v 0 TeXcolorgray 1629 18346 a(erreic)-36 b(h)g(te)433
b(Punkte)g(nac)-36 b(h)433 b(dem)h(Sp)36 b(ezialtraining)p
26482 18944 45 1992 v 3878 w(8)p 33516 18944 V 5882 w(19)p
40196 18944 V 5365 w(35)p 46847 18944 V 921 18988 45970
45 v 921 22559 a(Gute)584 b(Leistungen)g(sind)g(durc)-36
b(h)583 b(hohe)i(Punktezahlen)f(gek)-36 b(ennzeic)g(hnet.)585
b(Wie)h(aus)f(der)874 24551 y(T)-108 b(ab)36 b(elle)627
b(ersic)-36 b(h)g(tlic)g(h)626 b(ist,)h(erreic)-36 b(hen)626
b(alle)h(drei)f(P)-36 b(ersonen)626 b(nac)-36 b(h)626
b(dem)g(Sp)36 b(ezialtraining)921 26543 y(mehr)433 b(Punkte)g(als)h(v)
-36 b(orher.)855 31080 y(W)g(\344hle)583 b(aus)g(den)f(P)-36
b(ersonen)583 b Fh(A)p Fl(,)g Fh(B)651 b Fl(und)581 b
Fh(C)678 b Fl(die)583 b(b)36 b(eiden)583 b(aus,)g(die)g(die)g(nac)-36
b(hstehenden)921 33072 y(Bedingungen)433 b(erf\374llen!)p
0 TeXcolorgray 2468 36503 a Fi(\017)p 0 TeXcolorgray
650 w Fl(Bei)419 b(der)e(ersten)g(P)-36 b(erson)417 b(ist)h(die)g
(absolute)f(\304nderung)g(der)g(Punktezahl)g(gr\366\377er)i(als)3782
38495 y(b)36 b(ei)434 b(der)f(zw)-36 b(eiten.)p 0 TeXcolorgray
2468 41041 a Fi(\017)p 0 TeXcolorgray 650 w Fl(Bei)390
b(der)f(zw)-36 b(eiten)390 b(P)-36 b(erson)389 b(ist)g(die)h(relativ)
-36 b(e)390 b(\304nderung)e(der)h(Punktezahl)h(gr\366\377er)g(als)3782
43032 y(b)36 b(ei)434 b(der)f(ersten)g(P)-36 b(erson.)921
46463 y(erste)433 b(P)-36 b(erson:)p 1 0 0 TeXcolorrgb
434 w(P)g(erson)433 b Fh(B)p 0 0 0 TeXcolorrgb 921 49009
a Fl(zw)-36 b(eite)434 b(P)-36 b(erson:)p 1 0 0 TeXcolorrgb
434 w(P)g(erson)433 b Fh(A)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7929 a Fg(___/1)p 1 0 0 TeXcolorrgb 47998 9921
a Ff(AN)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 52484 54804 45 v 0 TeXcolorgray
24746 81281 a Fl(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fm(AN)718 b(1.1)f(-)h(9)f(Angestelltengehalt)
d(-)k(O)-60 b(A)717 b(-)h(Matura)f(NT)g(1)h(16/17)p 0
TeXcolorgray -741 4907 a Fl(9.)p 0 TeXcolorgray 651 w(Das)352
b(Bruttogehalt)g(eines)f(b)36 b(estimm)-36 b(ten)351
b(Angestellten)g(b)36 b(etrug)351 b(im)h(Jahr)f(2008)i(monatlic)-36
b(h)921 6899 y Fk(e)650 b Fl(2.160.)921 9444 y(In)340
b(den)f(folgenden)h(sec)-36 b(hs)339 b(Jahren)h(ist)g(sein)g(monatlic)
-36 b(hes)340 b(Bruttogehalt)f(durc)-36 b(hsc)g(hnittlic)g(h)921
11436 y(um)433 b Fk(e)650 b Fl(225)435 b(pro)e(Jahr)h(gestiegen.)921
13981 y(Gib)447 b(die)h(prozen)-36 b(tuelle)447 b(\304nderung)f(des)h
(monatlic)-36 b(hen)448 b(Bruttogehalts)g(im)f(gesam)-36
b(ten)448 b(b)36 b(e-)921 15973 y(trac)-36 b(h)g(teten)432
b(Zeitraum)h(v)-36 b(on)434 b(2008)h(und)e(2014)i(an!)p
1 0 0 TeXcolorrgb 888 18519 a Fj(2)221 b(160)297 b(+)e(6)h
Fi(\001)f Fj(225)370 b(=)f(3)221 b(510)1054 20541 y Fe(3)157
b(510)p Fd(\000)p Fe(2)i(160)p 1054 20754 4810 45 v 2439
21522 a(2)e(160)6365 21064 y Fj(=)368 b(0)p Fh(;)p Fj(625)921
23609 y Fl(Das)498 b(Bruttogehalt)f(des)g(Angestellten)g(ist)g(im)h
(gesam)-36 b(ten)497 b(b)36 b(etrac)-36 b(h)g(teten)496
b(Zeitraum)h(um)921 25601 y(62,5)217 b(\045)435 b(gestiegen.)874
28147 y(T)-108 b(oleranzin)-36 b(terv)-72 b(all:)435
b Fj([)8 b(62)221 b(\045;)g(63)g(\045])p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4907 a Fg(___/1)p
1 0 0 TeXcolorrgb 47998 6899 a Ff(AN)369 b(1.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 31954
54804 45 v 0 TeXcolorgray 24746 81281 a Fl(7)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
