%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/AN 3.1/AN 3.1 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:40:10 2017
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMMathSymbols8-Regular LMRoman8-Regular LMMathItalic8-Regular
%%+ LMRoman10-Regular LMRoman6-Regular LMMathSymbols10-Regular wasy10
%%+ LMMathExtension10-Regular MSBM10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/AN 3.1/AN 3.1 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0839
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA853
B843CABA76BDE9582090299F423519EE3AF8F83AE7F7828B314B6E36E9127419
F274E9FBF5622C5E48D7E95664D6C0C1006661038CF2C93BEF1DE34A163A2C86
693A13F4D0F052D2E183F36401F0C29862BC1B36A086524F76C7EE2C6D436A23
7009F146F1756DCADD3F70C51FDCE610E30C0F4AC538A2703423A07976ACA74C
25F4CFD6A92969E206375FB0C672E45948B0E832F2BE688EC22FEEB3E06BBC3A
272F73081A30830AE4214F2F029918FCA40BAEBED6299EDBECA01E08F27E5627
F53BC56F4AE7CE2D6273B27323AB829E2D51672A4990E3AEE84331583A99DA4E
63610AF8F10C50FE6196E3F4C1E4FC9BA6BE0ABDC81A0A7BF6A5792A97BD0A7E
7BBD31C3FDC01D734550843C8D84C6CC0B492CD1A6CCD57428F03A863E959C77
457D401028FD00FFA9BC422FD09D8B8A70446A61CB256A2FA0B59A2646D9C5FE
961894DB8B315C52008B4416AC35439E010BF90E43A05FCB2FBE8E62385E220E
588B7FE5509F1BB71150E159D01D24EE28008D4213227FE9BCAA34364B1039F6
BC142AAB19C8E9B15F0113781DF9C9B3BC145955552A901AEBA588D39D7E87F1
CAF27D315E168807021B0CD1B2CE13B611A7B5FC28DEB4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245AC583FE784CD69B918457FC63ACB5FA24E41
CAE39AA9386736476F5C0BD3D01ACFCABB35BD346B884B97EB5F467C93A2FC7F
82A0B3682C1D7B0CAE0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7CC4EFE6
1F9F8E88832737186037F9E5AB161B8A2090F5569529861FAEFDC91E823E0A0E
A92E7F1118BCF413BD355CD844D0F88C47B267EAFA1585B4ABAAAB9BF885D233
DE4656E4CCC1AC1A5762BE48F5FA88A0020AF17A438014B5902A55EE220152C9
0348CF590A07761415D2F53A866C95D4A6848E2BB7970D176670F90765843635
9C2461BEA57F9CC512BDC51EF25496B2C2253AE85AB38889B26761BA509C7F63
8C6CBC4BBDEA74FD3B43A178C86F9A97423815F5FA2C09BA590B8371D5B7758A
43F98F4DC4792308CDFE2779CA6F20ACEF23FD8FC11F483C0CDAFE837D984A76
1286C4DC5088F5DC4B8D59F781ED48736CDB2D0B9B51340F6218CDD622544552
9BAB6B88481D111091C2CAE5E19903BE5F2C90E79E2469EFE314329B4653D49A
0C4443075770A91A1C8F4179E4167E37B2DB2FB55576CE3A4FB2BDCCC49ADAFB
01C7A6C0A0CABBB72135D782D6D302DA6F67A5A31664FD4312483EA00066C08F
2E907B83F704F9E870AC27EBF1A21DE55E2E8139EEC0F780FB83BBAB87209B36
C1E995ABB0450712CAF436627E0FA539AB4047E252ADB05C815832FA26D5A46E
6E6D081665CDDB47E5F4524EF2CFF89AE5639E089330F124508E3A00E51CD32C
2B1D7FC2F5632F32B024FF4066E30D94383AA882E38281D84775A03BD1F7B995
9DAEC7640944CC7BE3791DDC409CD8D537C3308195EB55597D9E6C5410AB7DE1
82463159831D8EC348AD05386348C3E9977F2E748C3B018195B5031E3F51C95D
9A061217DA9F3B704B75F1D6110C7D4F9DB6CCEE47BBD06941C667CEC41B0F43
4CBF4E08767B6F023C89659C6661CA363D2BC38DCAC52E6C67FF1AF9B6A0FF16
6C4164A695E66B3B6E55D7183E48E3F84E99225FD4EE99C3BFEDB90B94740F22
63066D80D2C9CCAE054CD0BFFB25C7AF92F419E57D9E910B719BB3E00FD7F8BD
14FB0CAEF5370AD7AF775252ACE49DA73B0D2AA9F15408179612668B7E8662B8
AF299360DDF702A333A109BA94A4A3600C16E04899E47073AF80A3CC059D6366
A37B864D6DFDF35F7F77B6B130C5FA0AEC8A11C893E0037B0D4138E2C5411D63
56857185E1E0445A51C67BE74F11BC20309B35A2CBC0209F8032C8D0BFD97EBA
0D5A0F94355FBD634729E049E1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A22C1891358A8E2517E771FA86C4210C7537BEA4
35CF4310F4987468340E2078899333E34575B1741A3DD9230A48751850985FE1
3F6F382B6D6AE0F7030A9099638BA429F043F4D17A96133B2E41002B0165D3BB
CF3704A6431624D00ABC22FD059C4858F97C79D08492ACE3AA3E3C9EF2EDA160
FF152DADAD834A43DD5CB510F4E2813868F76D25C8878E0AE2CD2CB6A8F5D480
878EA65EAFB3D4B6C5E3F2FCD8562ACCDD70CBB223ED1F8B2992B4BD17DA6335
29C87CB33A7E80B9947416A78AE7441E61FC59ECE8FF86E5068EB1C90211676F
6587EB59E5E1B9022D2E4700F5F4896B8AFA47B404339FDF8584D5DB0E5C30E5
A42DB22DD8E13A29F907A96094308DC00DE7254DC9D6511D316FDFE7C4E523A3
982C483F0D2B4266B025DF0C80782B325A0B3CF637603BB8F2E403EFEB2E3BD7
28621B9FDCFDE691BC8D49F87A10E9D566B4A07963E6186FC14FAEB626F3220F
EF6225C60220CFB93E1367A44620F5DABA46E1D0776A475E19B20D76175E7647
6C8CB6F630A62B2F7FF71AB4967291D8F4C505701CFD75B4722D0D4A5D12A425
A6AFD1EC5DB8CBCFEF2D9D9DDF4AC3EC8CA7F4FC55E38BD325E6D7E6D032C78E
D59A778685633B9D1051C94D2C39FB9FDBEDA3611E4D2A423B32709EF925BE59
F4D01AAA19D422B71720E485B5D572F1CAE6C5A217D910CE4D1B7A2CE5F5CEAF
6C50EFA95DDF532ABB0406EE71DFEFA8E871004838D1508C74FF46CB3BC3B606
DAC6AA8B21F2CCA18C2A4F36B45D39656DDF98B2898F9AD6D3694483292D315C
D306FD27B6E851B1191B534A4CDD6F4F3D05C8F61EE206080ABA29450A1E27F3
B26827FE47D6849DC77B7D5F653FA09BF06BDBDFC5AAAE4AA143FF9AC3B73609
0CFED922F99BDD6AFC31644FA1381273B6A60FE355EF1C3539AC34F294B9A386
8AA30F304B0E40A4D31A9493644857BC161B23A52BFE345C66230D346249BEDD
E9CC655BC2BCDD51E4AC23D4EA010E388EAAFD44D56E1414BEB89FE439D4EA18
5B7C1DFB7055FEA318EE8D241DC4C7E8383A3C4B976B6BFDEDC298DF2EC770A6
39373CADF41506D705E1D38869FF9F0D99ADB6DDE7CB4454EC2129172B4BC79B
B527D64C8ADE8A347C48DD5E2F9C77E6E238C485F7FE26C45AAD37B374DE4442
8FD0A9020A53B9405381A563C6AC5B44944E1F7EAA675D8BCC999B0366E136E0
B8DE163F0C6AE6F4D621F693F0F477BD3CBEF357AB5518BC0692537FB0162BED
1D123F7AB6C149205A5945CA0E934E4449C14C7E3AE9A1D7ED9643C911D294BB
A184BF1AC11469FE7B71CCF1DA1329C5003905516734FEF2D64B8487D1C0E292
02B0F58C0521C97A3844738FA21AC58A7EE6657CC8C78C2B540932A0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /Box put
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890B0BBF10075D53739F7E84CEE95B40C3DB68D5
6E9847E37B7920412068C3DE2065A77281345980956AFAD312499818890B454F
5DD8C92695818BA4DAFEBCDD4D268763515CE077A64C5F3AB384A6DFD7DD9641
FCDA0A3344B3A14F82D478B4BE7BFC2822A4D67AD3FD07B11589B93842066528
1E51D954D7E6019F6921DB9B00ED303B4B8F557EAC7A0B0340A268B0DDB25B3E
BE0982129B0D3416CA5D07ADC689CAA181270B8141F9D0F60C60F156CB305E5B
E71D9A5D5FB3216BFB66284FCABF6D74564D1288EA99D3FCF6F29C3AA690A596
02C0AD2BB29A2D457C66031E5571A1454758212EB4D053F4C28FF629FA94DBF2
9677AC4B92C4DF5C7FFDE31A8F2D6F9477896C11CBA890DD464C9231B1C350E8
E8CEE17F2E0F5D10416F7D7FBC6085E9BE09E692951EA7B93A9F49CD458476E0
A380E1D122F275093ECFD398FCA6D714187CC12A2B16318F9E1D2B0E9EC134A2
C4D2674AA68D2E7EDBCCA383
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651116B60E90C44327CD5A2D03F0BB00CC767E
94056D90F65DF04C5CB2970F9B5770A43503544216E2F57A08E04B4069B74436
F30E4486D38A1F4AD6B2A2E5CEA887FFC56F020D8AC47392A9FDB4F0A407669F
1CEB12E9843F0EE896ADE3984B4D5C21C8C2ADBE3B028C2F41247DF4FBD194F9
D1CCD3D15A6A6B4A8E7F10F98A4BF6F10F1E9BFE2C67AF32BCBE96502F8C07A9
8B612A4BC3C262775F82A0A261324189EDB3895E2244FD2AFB9122443B0645EA
FFC6D9286A14454C13464DF6FF5DD25E46D601481B2AF1C02B1E90F19FA5A794
A3977CD21AD6E5C1C149D38E4573AD3393806B86F68A2B24998E20AE7ECB82DE
0004A2A79E72C1E086AD76C19784527E7D439BC23540E3C5F35440E94C826131
7E023D1EE84E77FA87202565ED1441166D7781D4D80C42DF15FA0C223FEB058A
79087370680BF1F01BDFDF7646A6B124102E3E79F99D7752F69281A72D0FDD53
34B63F8D214124A76F9125DC076EF963EA3015DFDB2A56BAB31A5EA4CEAF88A3
E604A7598180C7599FDC7A3CF5B6AF26E79DF064197F823364608FDEC37438A5
5BD0F593DF24CA8DF65990374D2051B800629BE0847718ECA5DE4ACCF88DD41F
15407BE246E17A70D63B06C79767C883413630758452CD70A67A06DC1EB3F2B3
C58FBD1B8C370980AA1F6F7C9417F1CD89DDDB2D5CA8BE744B66F291448A32FE
A362D83933ACA7B1AE394824C03E2B60F678F7A1C98BFF1C73259669E3AE2639
BE0ACE6D50AFE94B7DAFA256E293BE57A429980A9B0776D1907465365ED2CDC0
0635411C8F8802574F7C72914BBE9E892850C340643408B2CDC39081E36984C6
535A4650B5291ED39DBD4BE29E699D9E44B7A6E99ACE99DB144558BCCDE3633F
D159C855C4CC46FA71B56A2DA46A21D679CC94D621F31DCB3E021998A5D6EE94
CA4BE214D389061AEED8109D87C3B4C7E5E204608458C84ACBB96BA75BFF1DA4
A4B30051CC74AC1BB800B2B30D034C7B9B5357DDF12BD03B73301F26B4FBF514
C6B17D80C46A07455FC54C21C91014C9D31B5743A9D4FDDEEC02D3608A55356A
BAAF656D818042DE6272576C6C5AB1D32F030C155D3A2FAF6407776001F79BD1
1779E3C05A51F4D95AA1618380D5DD66986E77AC8BDFCADA76C33A4D4F1488C3
9AAE61A41BAC6A15727CE914A3E498AC1D7181D637A568C615AC3791D8E50942
287A1E4B97F62FAC2F2E1F29EF28B4A46FAEFFCFBE7A8E14AD3493874D67FB56
FED2C58DD18152F75E9E3A668042D76A759A08D6C227C3182E3AD32BB1121234
B9C232BFB654B8EC5201F17A7C3397C6BF0D4B077C4BDF8F3BC00D46513F0358
C43A22C413D9A6BA6B3E1620947F2328348B3A1D3B71F26F2F83281B0E9F6BD8
CF959F46F3FFEC99835C3925BE0A67E48E80449794AF1AB7A2A906A891187692
144C02E84D49BA4784688882986F6F6D887F5514996D92A211B473C0606C8AD3
4B0343D48E428C5E1888B32E0B820A95DE4DC419C27936087ECC11857EB450A5
EA61CB5B39159BA9ED5159F0CEFD84E9F655600B8893EE2C65BB593B873D83BC
9F306B44A7BDD35F637D616C7003024B08E525258F47D393DD4DB22595437E8D
F94EEDDE8B7549800901E8E4467605FB8B7A5143E0EA721DAE16CB509FCE4321
1B9B6F9110AD2795D667D3E495794B2EE280C8CB29196D5920D78A27E926494D
5F4D94DFCE0A72B58807A874392E443C9867046F4B020955E1D3C7DE551E0421
69E60B4CBF586E6627B5968B5BC6C000DA29F1FDFDDC44787F71D921C7D214AD
7506C365F18BCE1197AAA82BC3F8ED9A6096F5A3E865F16B9F09DA1BCC41BF0E
6D83ABBE7DAEF9717084FEDED9E4551E55318BCCFD678C80E8DCB3E415B42D11
01191CBD18EC07707515C98EBD4804AB2F70FC9B014D8999FEF618A308E59FCA
877B18EC6582059C07A4061C6F4B994301864942F3C18428C06EF16DAA338481
D1E82C2A9040EA273FA0CD888A97E1C3E59331243BE72E4B676F7A211F72225D
B3DB146BDB01C7EA6588FADC94A77124E291CB27BF10E4EFC417FDB11A805FFA
B99043D683C060DCE93729098B15814D6B80E416B33B0262CE0FCACB72E14C2F
DB87A97F47425FD3D3BFFEB9A51236038D4452E44A34F25718B715880923FA50
51B3D743AFEFD90A9A9AECDCE9993C761C959965F8BCC18F2DABFE741402AC62
ADC049DF79ABF4FF479612753E3B373D0E5E288AC7CC5D3A7510954CCF87A1F6
518873BB51A83E52C3780BB51DAE9592FF99307C50C7D8E3C246E698C6593F11
0D2B1C36469B088DA06584BE2E6A1DFAC98532A65305D47C7236A12FFDA24456
666C28476F9C08001CA1508B0EDD5F430005EBBB793A0B71577BD408C15C2152
DC52D90D1F40BD085085D8BEBAC637D3C1CEAF96B4581E1C91146B9A7E900D06
0011EA3A3DCB102E369C03C964E7E03F1142A16A26F5B8E1ABE5F318AECFEEC1
6BCBD17B30479A24550576D66C38B59CDEFC01A7C48DB784F230A5BA2F0C8D3F
B6D387FB176FE3F23AAB4051ADDF7DC9BEC731AD6040FD9B804FA14D6093DFF6
C5C708439E4EEAE16EED2627A072AAF760BA6445BF8D61754CAA63E526980A6F
1295C15C74D7F371F9A2413631598808E0F91DBA758A23E515E9F86A0C9E7FB2
98A96DA2A9D4F8E755E355D409355C896084200650870F0B9A39231246409F64
587223CBAA733EB6682CD1F390E9C2228F3108E1803DA3064F4B89352E776607
8FC2D5E7D65F806E16AEF21B9D49943D6ABEF4BDB422FADBA84E0ACCC5040518
BBF10BCC769079E9EA4FE64EA87FD6E64BBA672C3E6A26B4F875CBD0403E755F
E896AA75B11435C7A68AA72F30ED118514DE43D9EA8AC68B343772084D45B94B
82342927145EBE94FB5A471CDB842AFDA408E56DBB752A54F715395E7BEF91C9
7ADB86AE079BF5ACD30A86AA99BC5CFC3BE8595738E3F5D3003710B04AD8F176
7A4504027833484674C9ED2EE44D10C0CE6B2EEAA9BD13E616B0350CE3B1F694
0FD72632318CB05F5C32363672B12628C0F838AD7ED830886303207DF666D3E2
EBE4F6BB01F0C56FCC494F773EA3CEDD717B7AB5ABC1591AF195CF03E794D875
02CD2BA63EAA5B1F92822AA4E0AB1944BDDAE1FB609F621928A3A51EEF532687
3CF2F60A81ED8E00E63D89CAC21AEB73BEA13415BA19B37938E4E97753E9A6D2
3CF1541ABF3BC0EEC37C87D2A144F20F58EB4D6572530FCFF3F25B87B75D65CD
B23CB54D3C2666ABBD193FECACFB570D76D01209F22F4D026A3744BF5BA2E459
D20A178882FFEE4C84A9A10F63CFF96C4B2E4338930C45F55780C59378BAE88F
6E3EAF3E903BAB38790E87297D59F3FBB2E6D45D87AF79C754F223D3795482F7
EF56B8F9FDD85B80344D2F92CEA5ABCA369A6C9857B8186F0008B18FF4535E45
411A09E1E4FCD42F1EED670768E55C12619BC67D712BF7CEC27CE0B7ED8D31A2
9D7F2D888C3186B3B9FA6290F8A62EF992237E07E56E9FC168EF59AD59B3A519
F57AA785B3391F9355F74CD2351AF96F3A50BF004B19B3310F6288DCD79C8644
99251C58ED8EA00900F7C975FF818253E68DF4F605F5D980FDEA5760835D30B5
C93C144FD17EAB19CB076C36396D4C7506C27033C9717D85D4C4E2E941026C25
847C739B6EEAD71C8C4B54CD26548C24AD096915F3D1256D4F620A7CBE642E72
A7230653A5A96AC2CF1C5C0A71AB7E9A77A1671D36AFF7D8ECB4EBAE515878A3
1F197FD069F443133F664C1DE4052A9D64B50B488945EE7D39347EAA6B23D442
61879D82A412650F50E47FB25F865D3DEDE7CB7E6220B04BF0EC948B805403A7
84DE9193BDEDA3D741907D5BCE6F065C9DF33A73898D0891D1AB821CD8636B2F
07B289DD3B5B32E6F3D5BEEB8A2D7BF5E58BBB72495C099A15D1CB265CF381F0
2FBF83D19176AC10FC9132536131D0E4B65B1BD866436AA7E2D2C09DDEBD95B8
9FEE748995E4073535DA36AB230E3D91EDC1384F92AEFFB951414B1E91373F67
E464D8057C5EF17F1C3EB72CAEBA74FCDE91AEA7484F17687D2F3900B9524B57
8BCF2CA6C2E6624823EA6464AC86DBC3773EB7AE9C408E9CE5EC8937C0DED6BF
AFA574C89BC62032F460C2ACADF21897575620FE25B2A9EBFFF45EEE2DE2CBAA
132A8B43EF2DEC54600D9B3D9EC972D59920550497162B435DEB3C8C4FCAE0CC
32D2B7C11EF06056690527A4EBD1F1355C3BD6CD6C967CD1131E219545FA3A15
8E38BF7B3C0637E012B265EBB5543BF7CBD9AB3DCC986EE326A83A732EE5CCC0
ECD9151B8114E865F16B9F09DA1BC80C4F24C4204A2EBBB9310ACA9E70B88230
EA5B1FAB3FB36895326F7D72855E00406AC83E492595325B50D7D4FA086B02F4
2B2EF6104F0437D55A4BA4FB7BD38886C5917EA8C3D12C66A4CA6D951C5831F8
22FD946524C5E3561BDFF89136385827B7980C2FE0ACB1C473BDCF3935617129
72B4422D91CC4843EC97AE75953896A95B38469000FBF31BAE9CE8703754A099
D21B332EEE877D60593E7DD7AE98A2FFDF5357A04F8A74CDA53B7C474E6C96B9
741D43C6631805B7A26AC1D3470F561FAADE901E78AA828FB9ABAC42443EFEBD
A80787A0F0ACFC03F44D6B213F348668DDF7DAA9D6EC10735D7F5A5D0C087F55
A5CB694336732534694A184539909D5294C2F0FCEFE7D6D6BB6660DCC1DC1737
FCDAE025AA1456448468C35F2ADFD9D42E2637E8918867F04D4049A6FC4E4ABC
09589611DC0A84475089DD2C1469769932A1904106A5AD2B6C499866AC07959B
5C718947ED68381DF68D0F691C7BF34A0E25EFB2AD7503D23492E7E980B2C432
4605DA55453F0E5D6CE8450B21D3AE71B2C39CA75F07C0A9FB923B5497EF22BF
3645D4AAE35E132D1CA61DA085E302E2F1348B2F930C2F482F17D107B1AA4C38
9137954AA8C5B997A491F8A791216C6FA9A62D337FCD128E51C622A8BFA0F031
A3DBE8DC1D6FB37B2A939790B6F8DCEDF8F4E9B794586A9CD11C14D25342DE63
682A24C06093B68967704D31695637109405150D9B3A9D82BE7F1B8AD4A3A370
81D7529F94493EB4739C267B8C54B3A520286B65780C56418B79CD715603DE5C
207FC70D3705A954D27D19F27B189ACCFA1C6C760DBEFBF5A18E58BC07B010FE
1BFDCEAD62BC0C4D9CFFECDE469085BCC3A244B2CC3BBC829FA6CE8505766A92
A30DCF28A4BB318C417CD4F2BCE6792B85B17D049CCC1B5B0FE37EEABC62DF2D
1FB4E7A6CE89EA7C92E036C703AD5C787C37A4443BE38DB5E710CD843327B1F3
60133AB8050418585ED2A08A902D1438E9C14862F5B9D7E218877590C769C117
C3927783C7AAB8029B889562D1C9B79325BD873AED4410BB9143CCE20C908DAD
730609D523675B596817F235289889848CAC014692B1C29B425E2C447E62AB58
DB118B869FDADB33032C1FE6C3F486108289E9F1B5E29E5FEE02D7277C0D6FC2
8B5434D6FF1A1EEE3D5E439D7D25F1D92BFBBEB52F816EFDBA9CFF83AC072C75
218AC4F3C48A02E5A53629ADAB0817E3035573987B2AE56319A35C10A9A2A09C
7581D00AE9851B126B7BDB0BB158619EDB0F3D8B7306E4DCA49805DD8D20731D
B26C86ABBAB81C3D0459A8C4DA9C56A0E7FDF5AB5DE3BB012A4BB51316FCABCC
AD6C82EB09720475D09D7B01F32707FA6CD9704E69083FA1EEA841E5ED4DBBC7
3231DA05B8B2A0D2ACE0D9461D2390B36E5A8B6279A5D2569F321B44C355E6EE
3763E9450DBDE6163D435C4B87391B48D38FA18B0787EB8BFAA3D4CB5E173274
04D6A835514F62BD91BFCDEBDECD1E30A6E774696C251F318AC1D9EF5FB1F77E
805C8331F31E58AF3A560C46F0F9A0A0E9FA210EE25DA7B249B8BCA5CAD037D3
A89C9AB453BE811A5BDDE433068365DAF13D26C24BC276BC5F72AC1343EE49D7
0EC8DAD2BDE0558439D97094864E520391D337A6EA74FCEE202F81332CF1D679
F5BC882E15EA2D1720BC5258423CAFEACF408214A4AA87D2D24B95D35C381AA7
D2DDD0EF9CBFB72BD872061B3852B74B006793BC90615DC552B1E9015B085C51
E64CF72B4AD92A58658A653522C805428A226F6A5EA2F0320C361E061DAF254B
3AEF3ABB186A79FF929EC7CBDFADDD1496335FEC30F5E9E16AC846CF2CA01342
B18710F6776C75FD20EA19F0AD47C282AD7255306531420847FDECB667D6344D
FC50A6DAFCC37D67529045E34FC40DE4F2C1AB3B8A063D0C75AEF496466CEE0D
E23759F4F6C873CE2D380084EF6C3C222E4BC5A6E6B1CE75E467680764A4DF58
5AA8EA461D7B9AF3392AF74A4217F8CD1349304B2F9EC42548BABF0CEF8252CE
71CE44E755E355D409355C834D83442568CEB21A1007D6F060849FD41B522218
C0489FFA0ABB2610A999CBE43D9DFE30FC3F11D35462BFA4E8C577857F27E667
1E663C8F925F1926F3A7B65535A76E627AC2A9170334E4543E1B4C48129E8EA2
E56F69A9903DD9C28A08103957BBFD269B2CE9C17B631C13AA1E09D56A9947DC
9406DE7410672590BD7BAD0514C41EE293B4D500F009C2ED820B75D4FACAEFA4
489F27E10D41CB0C6AD90F780EFC2FEA24988396DF3B2EF01246E15A98CB068B
967527DDBDB7956DE8EE507F79A3AC7B34A0C98C9BB1216EDA7BC3094324CEA4
FD5A9518241C11F149B5DC15AEC0C2F352F81DBD13A927892557DA1B6F0176F8
C33FEC0D845F72BE9148067BB63A96771486BE03EC5B28D8121A2675BFB15380
11B31D5E979F33C5A673C5F8987CDF2672DF6276A805DFFB0936772A59026C42
2B822F2EC862FB85A1432711BEAC9885863617CAEE1CBD727C392573F54297DD
89B31F7F895AF78B5C2649C2934DEC46A834C6F87854E01F1E4D5961C7DCFADD
298A0514882D4CCFE9D44E1FE98767E4C2104C0E8B6A3276F2A6B53CFA73D612
3B284C05FB322D6D71495FEA18BD7F4AC251E82C6F8DAB21F04B4C272099FD8A
37EFDA8A41592048C44921BE0711B5E598E991F848EA30C10EC4FE555C937AA9
C3159F7C9052074BE0186D76FBCD574B60FCDC3378865B875E268F936A1015AF
245D194DF08AA86E554A2C80D054416EFD2327DD0406D7E014791771EE369B64
E66ABCF881C58222CF1C4DC905B343BB72416574240E31C6425DF93A2E8625B8
3749A64A7FFCF96007AFA65AF4FF4CD91F14FF6AC2C483CDC83C4A31FBA4EA51
5DB7EB2BD92CF97319F3EC1C7389F3C9A5D9E476DA325EF01591BED7DAAF8E7E
4BAAB9DE55C8366B7853299DFF59BE6971B8165C38AA49D69F2E0D329684551C
9012158313A9D61498851C4348C3109D0671951505993DFCEFAA29DD4D3E4AFB
E261F8D4529D93F2CA8DBCF55453A1FA4D7564917E26D9C375C5FA13ECA16AD1
716CC234C4F66BFDC7549ACA3FD626CC47D247CC610668FF164EFBF2FAB08964
AB1B4F59F97F2A13C267EFF9D7CFD1A202580A25AD7DD6C9F82415A6493913B6
F85C089DFFF324232471F90DC7F94604002D6AEBC8E4F8995AA5159E80FF68EE
81AD0CFDA85B3EFC1C18FD44FF2BC993B88B9FDA9A88A19294FFB25645C229D7
9B653C8924EA89BA1CCA966803DE5D6DB3041CFECCC768588BD38F0FE2F105BB
CE99A877C937FE4AB2C6596ABA6F44E4104996B360A0A47A32CE8589D0D52DD9
44C86245BD9D75B49EE17C674DF8E0D6ECD341D45C249533277FD8F9B93A877C
F541BCB68EA9101270D15AA6590DA4E9FFFDE23B9AFBDC82C3CB019ED4ACDAD3
18A82BC7FBEC9EA7853CBA4A7DA5DF270A79EBC71B33F0B065EBCC731CB2F06F
856541DAF494881319DA06CEEEE414994C63199351A0FE860FE1A87B2E2B931E
76266B15CC8303BE2A0AD1AA715ED5ACCF101EBCB9928FA04BEC5E4D82B404A9
7DC2B00BCFCAEA602634A9043906742D7FB5604173241EE0C7C6A83E5EA7C1EF
F3A92E5909A8F0811FE2758B6161A8A960546C2566373365B9BA55EA06912BD6
A44BE069F990585122C903DCF858CE686804C3F119899F5BB3DC8DE39690B59C
4D0A5C6247166107D6C1A4FAF9AE46BCF6A6475B4191956E127A85D3D37535EB
04FDC8F5D9F4C526815BD2B80F793AF3A361467D0F4BDD30DBD01665C86A6AFC
2A734E2EE35305FFC71211EBB0E78F0DCE9A1928EF6140FF3716622E4A7A73B4
1920BA2F51F6627DBC1F119BA6B4854D126038CD221BCC55C37620632553EEFE
7F587C8450F7733659F7942BD75F3D839477B4EFD118CAAF6688230371CE75AB
A0286FC31EBB7B819AE455CB993EFA46E678C4B37430AF88A3F85132DA00251F
5A4E3AD99E44506D839EABA33EF369C5B372666E36BA4EB2F17EA485D1190698
545847359558542A92D1957A9655B65706692EBB782EE17D8B2225DD8537468D
380D92E1739E47154D776F2BFE4CEB6EC3DC2047E83B6CEB8E578476FA68A161
3ED40825C75260C7BA8A5A0847661FEE0F6B879B0056E0EA0612B985AA1BB8A7
F709BDBA6705D80FBF09FF2F2D225A489707EF7C63BF5C6AF68FC04C371C2F51
5DD7D77DC9FD54CF21F2FF33F31B275B5711FD6B227ED30D4C233FDC93CB79DD
476026C29FA3779933221D89B00F916B01C3A6062F7A3BC54250B62CEF85C03F
169C60B50476A8D3D684C0382B6B7D81C888A16012044DC21EA96D8651341B01
80318EA6F8F74453C82F5F25F7B08BE9D16E320913DE0F6F5038EC5FBFE0A25E
C67059955232BAD83120E618BBA0C7F201C3E6822BF981212D178B55416A0648
184969E1B81E56D064B91B61206C2FA9077770096F2168B6852B84A789872053
E9930701583B663D1CB3EA16BD2E6D4B219D019242B90623603F7AA446B762B9
982C571293D7F367FDEE695858694DF4BB1CAFE033D8A98ABDADE1C8034DFEC9
0D3E1942C400E92CE001B3DB3A00354353B50C9B2DC97AC798D4FEFE2F25D3D8
766E11D0BA0C28DA1F33D7CD2DAC4E5575DAE436A6439810725BFD45F14D03C5
E6E79C4C60FC2937DD698C0E7E71F8C21BA46E833E6C0DCF6556C1CC6A1C88EB
BAFAE76F1048FFD7F31682DA02DD0A0B0E576D84C6AA5E901408347A37A4C6AE
05D33C0C639094C9578F8AA247F2251FBE08FB8C4BD04036C06AA4752B076F4D
900DD8FE06DC6D27AF94F660759B7B78206BB5E077D703D0003ECA6807D768CF
FAB4CB966B5DD8436D1ABDC3EBF2BAF59BEB8A88BE7913502E5684A8BF4031B2
FF05CF369EE815F229C7D109D80B8B72A6365A4A9445A71FC40FC96D068A79FA
919FFB035784EC0522ABA63F28C05753331E5C7BDD1DA502EB95C8250D84458D
2C7380EEB6A9E745436705400274C0D4C718C8D6908551C3C14F979F3CBB5795
3FF21D450E360B5B7C5B6A63ABCDF69EE5A14B9468B5528F5B5DC8BF515310F6
A1BD5C2B6D5B95D16A2E8673A9B6A1BEB2AB7D1357504048C0F3CFB611D0E9CB
D331ECA61B000C13A681B5D7FEFB9C088AAC8A150F12EEBF5F137AEAF15A3EEB
91741098C5E292C5BBC9451EDA76E0F06E75724F3301194447ED73ACD563461F
5345962DED3B80B0BA1D11FEB59B435F3A43D71A0741C251373FA21A6B31A131
C0B7A7B5856745613704F72F3CB90B285FC2AC725EB17A717495A6ACDFF63915
E654F48818DD76A3F20E743FF42B04A1190B5887B087C7C6E030FDFA52A4A0DD
1FA6C44AC165850765B2E8555F8F5AF589D7E094DA3786555D0C046A427ADF10
1063D441F2FDFDD1B4174B45501FFB0478D14C301A3D7F74A20BC3423FD37E58
6D41CC4BB36198BAB18372CB83BD2AC655DCDFC20968F5BD12B078701E01F539
C74B3749D02F0495F4468D46EA652FA3C1D0822F18A0DABD42D29A1CA0507234
3C48231F676FAFE00A584F6BCC0F612647E98EC55BDA4775EBF5BC24A892B0E5
5396D3B98A2AB15434DC3DB6BB2FF28A98266D9C2FCEBEBAD94412A4EE620EB7
E7F02C11C1B52C95B6B66A2DF1FBE19E1AEA508606B25AD830B5B8D898D2050E
58B55A8298ADEB40E7D211EB02457653F21CCCFBC9E1FFF4C33042256CF34CA8
4EEE10ED317BB7A7A45CF75B2F7C16F5392A02ABB93736F0919FB6A34D45A3CB
C0646C7C6E8008138BFCD3060095F72715128053E9B14A055D9F688B1F4F08CE
91DABECFB41C6DB983ED839187D445CA03234AD498026FF6E7FEB0C0477DA65B
79AEACAF019F736B0BE6E102EC370588601C9DC97722C444D33D66795ACC5DCA
76C1303174D9022512B07ACCCCD0FC88CAFA9983962BA20C0026AB90EE57BC17
191E745696CAB5C2BC92E5EC43F35A377FF6243E9B38814F9CFE771F4A5F8ADA
3243C040F04FF20C785A6F46E7AB1852DA3A667B138DB0BC131489EF28815477
997EEA26D31D194DA347C0CBC91F003AED8DBA6CCB2BF3DE8FCCEC7CC905285C
9A15577879248D54C82E7BD9251162B90DED88F59B4A7B7F95E8004CE4A07243
9889894BA8D06C686967470985AC22D7873925F1C44C35973785255AC0FB1C9A
4B3C2FD96A239A93B9E8C5FE755C4C89783B5327A582968548D1C5648CBE6BA9
3CEA0DE409FB08268B3398FBBD0D4765CAD178A6F93C5217BD254775685D3872
539DB46C17F1DB0C4292D035FE3A7CC3A47191D0E81852FE74F0D0781CDC5303
AE631B7AA2484EAFF7CADC1D4D8A059876405158D9422E934429B55AE8A9490D
CBBC597F2F9C959B69948674FA133F77935F24EF574D171C89D8AB26B7ECBFF4
EBCB68A2D325F02C783AFFC144B1D6E9C29C2E65C25A7376AB0951A98F668902
003176F41FEC04B5C12B40DD1B386D89AD8616B4153EE7795D4EABB2794D20E5
16EFD47AAF5F4FC227188F0BE98303B994916D5EF2A997E3D910E754B16CD164
8D0896E997E956F2BEC8DA741392C241057A119BDFBDC3A1643643176BAFB7DF
0A157151F7625E63296E325E2C3477D5B4C564C26AF25696553753718AE0425F
D9EB66638AD294B253DBBBD6F55EA100ED3759D056E3F40CBD359F4A92D103CC
ED885841ECE762E3C3BE03C7C33CB54FC9C9A7C8F8272B4C34FD26058AA9E35E
6DE5D8F2B1B2971EB6A1FA8E8D9DD4C8E0FE813D368961F1E0847C956B24075B
9DCC920A5FC0D6206DF1B2B7701C20E811C3B3CBFE528A33C4E84D465FE6FB03
1B48D904C5120D4781839EE00BEBD3E75B1D437F6D3770D5EFE932221CAC4A0C
EDF97FC4AAB63663D90B58EA05AA0E74F6493295CD5B51641DEE00FF8F167815
566347A097F48184A0C02DD2E72532C2593550EB0DF54DF41CB97FA4ACCE1DBA
6376EEA6745F62F0715C865422128A163B6C6AE0D98BE584B3FD79F75ED2208F
2E90FC60916CAF61A15C78992B3626843F3F6A4B5F54DC2F30B792C83DB0D731
057B6A2E77066012F35BD4B32289F7FE8C66A6A82D7D7560D1CBBDE94E7B47EC
E15B865346D956FA91D2C2028FD77C3B2EE061BBFC66180409995938F9BD5A6C
A0873B281A46365AC1B832D55382E1223B42A1C367FAAFB12FEAE6168E81068D
BF528C83F702F2EDF4E45D0FEB7FD43B1958C174C6FCB236E69C3851B68CC160
A319BF4831B80A3687793CA934F06A27C78C5122CD9EC73E29A912F69C3889E1
82E472DBD90378CF2F2CDC50FCEC4B5D63D0BFD8146D59388C05DEFBAC33038D
7A8B32CA1902B7559B79EBDA867E2657828356256B69B89D275EFFE5BE1AEBEE
5EFC3ACC0D5187DA632D4BCC51FE58FC26FAB5D9CC78335DC5F878639CEAE3E2
E03FC534751C24EC1C8BD8569DC67E8DFE3EEFA96E8ABB5CFD28CA18CD9013BC
8691189D99F221F2160539A2A7A5A9E6FA0D8EB2C074357AD807BDBE8E139521
04D6EE0726B4A298F819F4B42257E5567ABD3D9951F55183CA0B9098477F133C
EE71594DD74E23D93A69FB240C1D824CCCD268420F8B91DD8B96709F66FE8B0B
ADA48B50E47EC0AED73FA6DCC8878DAF5734897477BA5BFECD08F2E9B0678F1C
75B4349CD9B6A3204F03427D0C1ED063F935C93FEC0118A7769DED5BA9379B1E
5038238A03A23B1B4CB13CE190839BC33B85BC9F7E9767A9F5DE2E80DFB6AB43
3AB94FDAA26C1D43386030276B14D1BC62CA55244B6AD971A023FA43049D1F81
7AE48BF7E9B86B137CA8D14ED5380FCCB5C92B054898FFEE955E7C8A927D947E
18E7DD9DCA763789E4F54EF89A73B433B74131B5C935D70CE9DE75407AEC938B
8237E30DB8618BB04B765781A7EAA080503F951082BC6FB281D67E3B28B42133
8F959AEF7D3E933A0343758C13EFFC7DCD6BDD329EC69AF33E7FAFCC19B3590B
22F627553081FA9CED02E69B4C058DEA4F847FE19CD96773D38567245A095F8C
91294627FFAFF0399CCEB87FAF74A03E247B70D47FBDF082C0A57A2777B0CBA5
B890A9F613BCB3E17E0CE57CC25022A23E388B7E2CD22F1016A1D10889B11F21
8E4AA3703DF2398F5575678E1451E9F15FE997780F5BE7AEDBB1E59C200B6C19
D8F511D7194BD7496882273FB569F8254D556F1DB811384DE04F2AA42E3F2953
9FB7F8E16596FFD4151B332C718B1737E563040DD351580824450D62A12078BC
053A65AE1FF0AF2E919650F00D4F0240AD2B6D0FF2710FF55BC9FDD1D309C2C2
7956D4647D2D624D9688C49F9C1C2FBC20813C68B45A2972D906C53B7C1E0B5F
7006777AD11B35658CBB99AD9D53871027450BAA1FC67517CD5B69EA896623AD
C00767CE1BC19F391E08E575B2EE78E04C5FEBDAB0FA30947DAF090BF54FD4E7
B01311521458871B0C8BD927970F7C91F092B209AE35C91CA49AE879DDEB6990
F0EBEE23AE4194F920986C6CF3A993077C0B2501E3EE4FC3AE6C99D80E14D8E0
2C1D3C4CD54DCCA57CA4B53783DD01F3110239048BE84817BC6C82C18B54D4DE
7D6D47CF5020446B3C96FF9C99042164C633B9FF63BCB6458388B706DAE2E1F2
AF632754B587F41F1228E21080303787515086F457B5AEBA634AE5C759717330
44D64738F06500FEC0A6D60143CC3D55F1DF6AAF7C9D25D99E42F8AD3947E293
CC426E38653A16E2A7EDF6D500E92377922B2A43415B8C958B346537659450D6
4195B170A799552AED212A9B5E86CB221DBB7DF956A4BE1571615EED8D0154BA
5F4ECA8379F7F7BFD9CD497E66CBE3728B69B856040AD12975FBC71D755F8F7D
D4F5E2996046854DB78FD7A1DC0430AC5DA38AEEBAA87DC3DC4E5149815A286A
1C79BB3D11F2E85043560FF3ED1C64D62E796ABFDE409A9B7E90D35410E9FC9B
F1625A2C942739DEB8C573F3EA7B75EDF72CCD4BB1D84D1BE81AE2EE6C98ED67
85D8EB4B4B37C5C1538E75C144D7ADBA18820FFFF178CF381DAAB3EC41E1C8BB
EAB138088F3E3123018D1A97239C0075F512AC73798C9668E38E4B93D0746AFB
81B587B4ADF0D9950A195F64FD3209C6D47B46B7708F8558A342C9F585ACD311
E1BA537EE424CCE1F22EBA803145EC2A793EBFED8F1CDA2D49D7672E195B0972
7629C1A74E00C8B9D7D6BA0BDFB13866FDEF0C1BE93B62AC49664B15807D0643
4687FE13EA3C02F9DC6DFC201FE269C2EF66FBBE740D39ED276776306F8D5D38
05E3CD4E8ACA45DEA071AD0580BC14CA70AEA97FF4B704F7641BC2612F4DDFDA
94B1438B4AEB72DD3680CDFCE4008A7DC06BFCD08831A3BD98C5361B66226EA5
E832444FCCE71598B143AD2EA3AA6C50684EA6FBE357678D1B3EB2A32E2CE5A7
BBB90D85756EBB96B5021481EA4E845488B796836ADDD7CDFD1D6BEFB5B19614
4E026FD76EF7A00B6781935EC953F77B5B5AD7E02CCA12A44CAAE0DB157CC78F
D6159B35B4AEB6B72F30468065D1A2ABF1AD34324CF0C4C08B3750415CA80E85
90F52DE971DAB656E0A43AC914EF384662B1CEBCE890D038C519BBC0C2707BEB
48FE9F6B755E73DF40B4E922D522E2CAF63FA0A8D22AF657B0BAAD4599C62078
A6A0650913BAAB932E8505934C94B1FE212E6C4E3BB9EB3B83B6CC6F8AAF0C6F
28320573ACEA1C11D89D826CB5889D4C31446C85E1117E316214BC944BFF59B4
AE356D1DB3175DDC2A6AFD06EEE9950FCB6546BF7BEEBF9D323B549CAD581F17
DB11717FE743A284FDA690E7F50875DDF46EE841D521A3FFC26DBAC059F33485
903C00361D3E72B126ED17CC167AF714716F37C431588DE29FEFCF03915CB1C6
4141049219FC028BAA2C55C5ADC3F4798C3EF4A56D79AA6C5EBEB45D3AF4DCD3
6BA4D8CF21F49B9F8E7A7FEBE37CCB1B2D86051AFB6793DCF0F7022C4E8DFBF1
D77A634F74977E6CD6DF7470BF49F20E7ADF22AE9612796DEB9138059A4C12D3
FA2A6F890C9FCF40E7E8AF25AB31DCADB49DC2FFAD16EB205D585BABD246585F
D44C7FFBD5B878504A44F089ABB0392205B663A86AC14CA6B1021B49E52A1ECD
75BF7AF56B0D764C6CF527395C123A1C5329F2EFFA0034DE1FA7383F955444E4
D85F3A4B29D5F9688F1304E33253BDE77D3E702F25F5E6D7BD27D6E494FEE2CE
7BBCBB7DF62B1DC8E05DB6D173A1213F53DFFDCC9A06088B42CE2158E47F7EF0
AB7CE7E6D8524ADBEA8FB5746CCE8AE3133B87793CA934F06A27C78C5122CD9E
C73E29A912F194A49CDF16DC6A00064D7077F2DEF495F3DAD5C26B0519F20763
0500597A96A072EFCB143FEB9090CCFA94F783508A543C549693D3DDDBF8B9E8
EDBE199B899A6C6DFADF7AF0171682E869706799A16F3755CCDC64A183E01061
50E2B9EF955D402CFD581761BC87542C1FFFE3D5F9DC9EA1ACE49BE65A86B265
EACB68F4588F0A756250CFA4936151A76B2D60E7A7AD55991FE366E1D0CBAEAB
4015F75A541D57004DD0410AF49106890688CB5BC41428278851C763613B3DB1
1FF0CADCA84441115A0F585209BA04C0AE0FB4F043144C99F35A215B53DD2A8F
4652D21218B7A460A2DE4498F25A81DEC9360CB9AD881529A96A7EC9D666970F
39E1F01522BF2FCB6B28C527C32DA6B25308A2C0A24EC521CC6C63EE16D0C2DD
5ED0582F716E99EF4332B8606F8473AABE20673348F59F48E71CB9DF80B9FDD0
7CC588F6956EA539F8D3D032A234F38D3074A03D6E1ACFF8BB118DFA9CD64A24
137F2DA6C2105046ACCBAE584E51CC1432C5F44E74E3693663C3C16082FFE73E
4C56D825689D816FDB1A4713F18099602C64E70673B573CA453340C9E6BF8260
14AB76265A00842F900CDB4E931FC6D4955C5A3FE49EEB6F8D14F2825BB6175D
62B0E0C454C8C57735031B7A58D1CC858BC7B4D6BBD38831A3BD98C5361B6622
6EA5E832444FCCE71598B4D6C432D525376DEB06EC5DD932D3A480A00C51EDF0
51BF06FEFC81EA3A88B4024C64A79740384D09CD8FC8D82358A6FE193719A5BF
EF3EC9C9E9CE600B868A533137877446DE8A3045682DCE85BE2776C854E9B465
EFA99381868A864914D7D81C56574A8A37285AE9629E2F0E685B713F5332E0CF
05C754FD76916FECE4DB28073349A4717F25625D53DCF0B9E2386BBF0900E0E0
11E8ADFBFCF0996CEEBE9F1EBA0D3519F878064707A6F8DB91EDF4344D46262F
0331241D87492D92E8936325CF2A102EFCEB2A3DF44A0E9804EFA2830C2B6307
34F59939234F086B8FB9A647A4E659A1398396FC2E6B686FBAF2667CDB2FB3DF
F3A5DF928ACE185CE5AA1C802FCC33FE87112C6776B627A600BE050E645BEC59
B1DB14A6EECC6AF55B2767A0B0EC105F70BED7DA446A3AA2FA4194F8B3806953
0701E1653DF36A29C8C3254D402D0140F5FFEDA4E9B98101CCA5E70934685EDD
C8AB34F4C00FB81E38C0AC446F1A5E8C10A3A63EFDBE4A15FD0D0C1948BA5673
5F9D478821EDA9FDE18036D39D5F49FE4333CA08BD3C010A694B66190041E8CD
FD55B70A87E0F22F9EEC3DEAC72C43F82E3B5CDF9007D9B8833335C407FAC26C
11FC50A9F91561508D4F286F58CF2232CC5DE35248DE1C26CE20003885443D4B
789F3B5981DFEDFED146296AA6ADC2FB506C959D1871BEC575BB74C8B3096948
19EA9FDC4C39925269B08B19376CE9DDF854810CAEC564B8FD0B66D74EE0442D
2E487C9425C59EAF0DFC887D850F2AA269C98C2277D665B99993A80FBEAD46BD
124EE5DCEAC3B4A784B4B9AB0A69C94BB35D55EEFC72CB446B6A381A419DE514
94A639DD781F1C8B62B732C93AD6D525231340D54F7702F478B38C812123B3EF
E57CCBA8C540B2E3E05315A88FAB1C999BD8C391F4F045EE1155E8E99331D135
C03458D9BD552DE9B8B026EDE899A33A846BF3636E5E11D522DD7FB5C5BC6F1F
91660E29A76141D7A01CF2B7FC51D5BBDBBE987F6C8EB5612D2437031D7FC78F
7B489E2C7C0817245326322B9CC4939BAAD44192B471A8B98CAE36821711979A
B941B3ED69062C3BF7A0711D008FB8AF1F080A993C3C74871E4B7BDB2602D075
87AA81C90392A32E43FA49F5870695901E686D807DCC3888DAF39D27CB74DB2C
C263413888D1C4B8121EC2C5D4A17AA465BD01F4798FC6992CDF5BB179D88092
E01559F242C557F3881F60996CAC3A8DE48A068D1C93F641BA780F3865514827
EE8342A3FD62997C78E97EEC0F46067F858565BBA14B434DBF69D73B8A80C184
6F580CDBF24D8CCE8C8A80CF81E84AE79A1D195975505B8C882FDA6207E41F0E
1A221BFC6AC5FBFA215F794437CA41C353DE5176A63E28A188C61B4A7E31D2D7
BA8FEEEB27011F9126DECE1F777842B539ACD2402211FD7AA16326666A6D2C48
ED56DE23EEE2017BDAF23B43A46B3D7F98D1B26CE1ECA8CA5310C6D6546B775F
F4F305CF450FB45C7CD36106CC6273B47E85A2EE6BA8C000841060AD56F2AD23
4A740B3108C3DB7B3B44749089EE58EA8237CE1B096986F51F2A5B292A271029
E3285E0C367BA6F80A3B750DB063E962E26A130BB340B62D67138E254A8860DD
18EEBD72E9B9F46ACD230977EE7D7931F3657E96DC43141F02009F1C1931DEEE
7AB6BE2738AFC14AF36B6E54543B4114855461C83881CDF494C2B435724223E0
45D831BB05A5B84D1F2F28F0ED2206681776168DA3489F03F9BA2DF35DE06DC8
43B5446A9665CAC0919B12A70DC985FF76BB327CF2F2FE3BBCA3201A5C276F66
D175A215905A8F164CC6FE9D1090AF2313F5925E517FF6029E87026F3BB851D1
D7FFF4837E72EE7A9E43591930A3BC84A4B0A07BE87C6830D19D19CB2F973729
CD7C935525DE50E59155867B241B4412EBFA51F690D5DEC204AE4868012441E3
6CCEB83971E3268925E475511FB3C6DB0CA94E944C0E17C3999D8B1F00119286
FACE27F9ACD205A00D5C6228AA1D43F1C6F0E9EA338B23EAB29D9F34F5BF921A
7F042B8F51E4F01551966A7BC5B57DA8EA3AFB5F2BF0AA18CAB0C73967BA45AA
DEEAC0F8C05D30BF42550ED9739076EB30477D455C7DF2258B783FE576453559
91B4511E39D8B71F1B8622A7A5D19E67AC978A20070745A4FA25CD68418C5E78
FD0770E038B22D9C446AF84A690F56A09A84EBB1CED5515C36F27AB2BD88D4DA
BAC4BC89F49090246D84C30C58439B06AAB97AC1BC5F3C7795791EC9AFABB609
F395A7A9484BC9608CB4EB663FD7959C6D491010F976D4C7EA2FA6C18E2EA497
F739879F1507A6001113B11FCC641D676CD1261F7AAD325FC4E08FE4C042560C
3A4FAC284BD50D9DCF6271630A40E5141CCE4BD29366A9F054CB1A731064B78D
790E0F815DD97129D00042DCAB50773F6757CEACDFCD80890604E19599C41FA3
5EC31FD6CC6E3AD220E3B38C5CF8D78833331325C02CECBD9DAB3E69F4335F16
037AE54A33A110E67313A03CAADF59824B168BF2052AF8A78C329F948F8182D3
CD8E04B4797EDE196B5C2F401C421412AB0EA9446ADACB1F10AE19DCC88D07A5
D43B48D40D3DE3B9062DEBFA016CF35B36E9EEB6F83E59EC7A1AF42EE9757978
30468685029B228749331FDB4CF16123266B94843C4586F7B0914CF412BBB387
F3261124DC587C5DEF6FF091ED97A96DA52D9B109EB596973EB054344F621159
63E3F61A1A2774E685D2E3376C60F780925A9118B20AE2A92285A05CB8C603B9
3EB7CCCC686A7B59F013C89DAA23399562865AAA851C10BB383C121558438956
29B71900A3ACA96791E39C882DB52E5D383DC3DE34556B64F1B8F1585F2DA9A2
44B9F8F7C9026CEF9CE1362B6AE20B9B066AA3C20FDEB6A4308B6A8C71424769
AD11C53BED84A70F8992AD63D0133A3DF4F7DEAF1F6B9E51B875BC1365D6F008
7748D6AFAB505007DE8C88C38D1EC7E3C678186A0A453DE850086D5957C6B1F8
C52E04F218AC6D549D38EEC7353F533663E8E9F82E722F4184AED4A2E2CEBDCB
8D9F0CDF9F4B1018AE87809540C40220B93500AE2D5E87BFE61302B759176098
C0CE2464D64364D58E131E105AD89529EBBCBA731385F8462D0CDA1D4805D809
09CA3C46ED1DD8FB320B3DED35FA8B22E68BBA0A874A5D7B55EC7C9F0F31DE37
F37167FBCFA2CC9AF2EABEA3F373E18A9DD16830E2806DE4BC8000E49A10A905
EBCF17EF1AF57B30934D33BCB97230F1F85044E957BD6D51962459E5DEFA0B5F
0BD018CE255720FD7AE5A5C7033BECEDFB1567439AF718D3B7B02416DF5DECAB
A0CCB45949007FB2D0557A88D362014EDFD3445233A03CFB31A3DB9FAE17B29A
59D2C328CC6D94A70E8C4DDA69356D486AF3ED9EE1D3B4A47E26C446E0B8F2BE
CEC0A341D572A8935320F972462CEBEBD4F449CB10357090B64D8E4113B5988A
E71B8CB269364E8216D5A4DD597640F67DD4FC672CD10024F331FE72D5006B5C
B38C7A634956357968D3E4B93F95F9B04BB3598E49B7B58B7F38B6AE291D7FA9
18D72051DB6CFBA44520B5B5689C87541613BC4CE97E870122A0A46CCFD6B415
8BE06C768C73F4777C7131E0EFC7FA91D2E9AB6B3ED5569C5C5673B880AD9B1E
AE6A5E1AB2F9C2FBE93E979D8C74B1ACB91AA1820DE0FE9CF57C6AFB258F7381
6CC190CAF25D9965CB11E2A163C5CF1C65DA4E6C2DE96F10CE5A5BD760D3AAF0
0CB9A42F9ABF48FD69D228F722EC13D6CD3D48CCC0B6CAE725D5331A5FC98C0A
152D5BEFB905F23FCD5F1DCBDBF5C4AFE6A3A47B951E95208203259F04B4A05E
D332AAC6DBA2FE878C9DC0DE713AED5C3D15DC3BA585CC2739DB42D0F81842C5
B3903C9CA3402866B1CC00EFEC7581489F8CEED141266BBFC3A410EDE45304C3
A59D0BE4AA66C14DCED3C6423C5CF356801EA5EF8237CA9D177321F9F6B14AF2
1276B0F2BA21C2AF10B682BDA4338A2C02B3423A0D61F6BBDA5BA84D0B7A4F25
BD6581217D977B3592C79197E9EC90D4EB51A32C571DB75206A5F117077BE5A8
813783C8DBED5C13A383C77C2D7887B361297AE1D1E38DC82512E4336F1402C9
FD7909FC251378DEC6CAC1670457E00E1DB0091F3D634F8841713DE784371B9F
CE178F9A75F3504749F0AB998A4ECC0DE847ABED596854D54DC3CF3DE605BCDA
7E47CD2896298503F94188127439890831943816E86338E7084D3117388A7BC5
17A62B79D15B613C7179F42283706B548B9CD05F0909FDFF1DB7D89D00AB1F14
DCCDB555946B3FFAEBF3970D6180CE16EBE8021E7A49B60B058A75B5ECDDDD7A
E2A28CF1A28F13A15B6F920A2C005BE523A0168FA9B70B4CEC804A5A4354822E
CA37B52D2724A9D45FC59495002305AEAD9E8C952EB8F5F33BC2115FD8AEC87E
DB82B67E954E577BAC3B3CDD1ABF136DAFFA5155E772C98E9401739B3454D2D3
B6FCF5943BF5BEEFF1F9BF99301CB61CB5FD95EB97EBC30B2506930DFF22B41D
6C75698D18ED153CF2CB902E1BF013DA33CF12BB0F854CF1B11DF76574B9CB39
5C06CAF403BB449F19BE418B41F69BC01816313959F49F7456F5098FEAE629DE
D7BC7DF8B3E12873A023AD86126B92183B89A5F6281F58DD7BBCD7B39756AB4C
F8D67A6E292DD6BF1F40F6A5AF97C3FF71B1FB57CB3623484B25F44472739699
13AD25DD44676FBD2AECD4004E6D5C839D8E474A3945350FD283F04E72AE6EA4
0AD3FDEE51F2C888F976BE53A8E2F5D224FEFC2DEF84ECFA903E1E319EDE20E4
1F813357F2002FD7D3BC2795CA29E31432D1710083A77BDC82ADA7B15D4FCBB6
EEF0D1E8D950F715A1452EA51C9AB784C23CFDAF6F044A5C2AAA6CC858E7054E
364844F0BF03BE50426089EC7071143F51732C2E3E168EE1B0AEBB2ABAC2B90A
514D97941B12553887632BAB2409BEA0B2194F8237AB16453B934905064484ED
DB6CA773A51FD274161A28F3724DA810A30D5E911899019ADC42725032D28401
1B7B7F6505A11E4649F0D1C9C757B0FD0A10AC1127B4E7D18ADDEF5FFE63A9BC
95BBAFC2B36119FBFBA42B3D2BA631082B177CCE6F7C49BEA10BC47E59D475EC
12451F7BACA032DDDFC1FCFDC5B5DE04B45FD7B2E7A5C8A7753542EDB8976C75
50F59EF7996C3B6EBA31DD3D93D53092B551E8B90414D80A96F020649F82D416
0A07270010141602C3A6572740DF47D3BEC686A4BCFB0B711A7715FBF66DD79F
0401A8767832AA1318D6C8A846279561D05B04F0B99D834EA23F276DBC907128
8ACF1880DFD95949115B4C3DC71E96A9B83B41DBA733D25A9E8862A3056A35C3
7842C492D9FE67EC8FB1123A12157DE158671515E8FA0324852EFB33D31F14FF
6AC2C483CDC83C4A31FBA4EA515DB7EB2F1544CEA03BAB6258E19FA15B2BF1F6
366EBA112970A59917A20FBB4489E38DD4A5C259786822401AB64F51DCCDD88E
C1B4CFD5AF48A8912248A84EFD386C6B61A5E64646219321E41EA5FA846C0522
6796D86CF4415C5B7625C69AB0195C0B9D8AA2604D44E97BAC3B8BB13E562BC4
2DCA8CB077B8A351836209123853951075DD808C5AEFB730BD40ABD4B9459C4A
AD0A5CD393B69534D6E2F90717CBFA4606BD96D7A485AF1114173E61A36005E1
957881804E60080A4C7FC4641AC84D9C0A610AA270C03421465E9289E06D03AA
72F51E926AE304CFFBCD37501954F8F3D42FC229CE2A91FF4FE435C3E56A8EB5
794984BEBCCF38B4F4FC0803BF6176B216B0548AF522549857D702AA6824BD46
D237D5AA012269135E586D85A70DD9CA23F39C45D48DD9671757D5F5B4E85B12
4B81A226975A7AB54B7DC4AB924F985E05CF6073574A45148B7C63D6672AB6CF
FF3022D1FFC91F6F2C6B28808CEB9BD6EFE1FE36D4E7369C37B8761341D2763A
1FF764ED045DE99306529FDB1612F916D7D98F158635436B1C389EF06276B632
3869724E5B9B138BD1ECD3D5A132DCFB75BDBA9E24E35305FFC71211EBB0E78F
0DCE9A1928EF6140FBFBFF49CFB1A8C60E56234CFD61340010CE1C184163D772
2958A103DA58DE056B7B0F8795CCCB1CBD4239EEA7BC5B7D08577E142367B8B2
C793C4C3F429EC27C0DE70B571D2A628392368D68C28ED60CDCE0CD13F54F0F6
FEA50FFEE00F75614F4E1E7C566992724B1420BBB25F1A6FA90F5DCBB866F314
8AE22AC1F787677CDC3C2F1C7C2B1A00237552934829824046E10E39028ACCCC
B0D001DD40609FCB048910F3D70211659CDBCE05F0733AF96D0E5FC626ED3A07
52A698D4275D81725E961D50F182C7BF156B6EA657FB1500B51C672DDD9181CF
AC6D5546FD4E6D40DF30F4D117235385BD69D068F1BB3C6B565D23198D6CCD74
7FF301150AC50DCCA3B1678E3821635D8A6E32CD7ABCDFAC4FC1DA6FD8EC3D68
DC64FD48A2D0555B0504E8A02BE75CE74039936A3B4A15FA6A19562171600A6B
19FB04F09FD74E4BAAB1AC8F69282AA9E7C5F18E4857576943B4B53DB3338A89
2839466E31F198E98BBE0DF9C8123980F45FEE52B749BD29F44F0EDDC2A33E97
D36AB8A7DB45E860494281C0ADD4A7DD834FF84339766A71803F1EDA2DCE40D0
4D61E2BA36830559BC1E8FF0C3D790FC1DDEB73F699756F1197D8B120E48C983
DB51F4FC23E3107EC8244852267155E9595327E348EA30C10EC4FE55585D602C
826D378DB18B9B53B5ABAFA5FBA977C63E3C9A226E621F2D21847A702489B28C
F62768651196F757C18AB5D2CB8DB11D5DC82583BFEC2642310F2FE0596A7432
032F908641625F5C1C0C6A364E3100A357D1063254B11E62FDFF275A0A7A86DD
D96474F7F7DD350006200A631CEAFBC59BF0404A36DB4A079CF92AFED25998FA
63F6763BD358D6931EEA4A860E1A17079A59DEB9C7A4C5E7683F9C1062927E36
A2E4A6F34E754C8DD8EA2571C9B74E74336231E9136F61962383C65150264A44
3188410BDD9FCBBD8F6DA5C9DCF1E682A24EE12B834A6D01EEFAE1F8F43667B7
9E809F5F38468C15B44107090BF34F006DD69C399F75811DBA593EFAF5CDEA80
3796A28C51FB1AAA85099D9377DAF483C9F83F7B916DDCD573E08BD693E91B0A
972678A8E98315860D63EFE6178FD39A8907C5FB2C3426556F00AD40A44AC4E9
BF26B73B17B6640A5A0AB686F9AE782F6A1AA23FD70CFE0C2768667D4112B7E5
8E41768AA815396C31F0A44812EB038060994733553109C189915E0CE863C367
99BA1D959BF559D2BA4562F41A74BEF5C8743351DC9550AC182A98736A2FAA7C
EB656640B9FD8DD7D1F131D312C2CF747D35FB85D945FA3B39579CC1D94AD59B
64A54DA9FE4C01E4EBADFBEB240274738CB7DB4E9A14291AF15CE3BBD6B3B90E
57675DECF5CDC5C944756DF6511AE5914212BA387D89E77CD735B5B88C188D46
282036EF183AC810D42A2265F89CAB43C10F8DECD8B6327AE6B4CFD16C32B42C
F908377389B4D503F271A9E25CDBDE8F162EFFD0DC696282138C056ADAED535A
8E130B46D3C97F4DE0BF14EF07EEC7D4CA5D566003B04D0603504C04951290F4
3BA455DEF4F16E59281B91BAB816434577E380D4407D0BE8775E1B4072DC754E
1BEE6C8EE443D62AE6A2C9A48EFCB71AD5AE6CB754E3D03ABC8B3DA3F4F6C2DB
54682F72DFB7E22E22891A6CDCC8CCDEF2831F9018BC5383FD2B6330A6D5C46D
280F5F7EEEAC3688BF8C81F905CBA8DFBD9A4BD9EE9DD65EEC0E3B82A17A9686
0BDD648B80788E52188E0DB5CA45552F8867037B2180897707BFBB2D7BCC7B2A
D411091E49BEE16A177AFE57D15B1C247D42294EA3DBBEAA7A63B0279661F69F
181917D92AA630A36CA1E814A85429BF76E1A7D08ABCA4443ABFF10E719613D8
F8AC93832B0AE9E5660F58AEFBFD489E95ED635BA2EE929D0E702360464B8C34
11B12176D834E8F86337041D3002ADAF1B24FEA0222224772B8C81CCA566DA88
AE924240BC7B65EF3C8AD4A3B09D1063F29DB08FD8FE6027202E3D57E12A41B8
4FB718280A3834256B83DEE05DA13EEE31546FF8BBA320A942EDBBB502F22C06
986947D7CE258B44BD61476A3AE1514693CD585D84EC5BC076E9E126E426D5AE
8D60C6838B371ADA68DAEE4E1255BF293797A1BD1FAAB9AF2BAB48012C3F154C
1A9FA36793CDAF2C98FBA727B8BCDBC1AC8C364EB41608B023E205DA4BBACB69
9D403C81679A763013DD727FC16450E008B9A2A9C69D704164C36B9E9D404908
69B4069D6310476781777382D05A089F2CEE01CA940B0F7C555721D258DB8C4D
C732ECBBCB771FBEB2838C837446DE8A3045682DCE85BE2776C854E9B465EFAA
49AA709A2E36051D710DAFB9333E14C331C9742197917B8CDF69931B83B3329D
DDD044BD3C3C36FABC9898C6233AC5022CE64D636D0BDEF9A08A4AFA85AB3502
A38C69597DA5F382ACA7B466770490E25A05B84717C2B04028820DDC68CF3E2D
9833F6C8093294282F81CDC0EFFC4A588D3449EAADC717918F453F3824D61FFB
B85FDC0049022A4A85C0DFB2B43B0DE7F4966E008C066BF6EB9A7E6476E333BF
24A5894AA474C9F08EDF66B627B992CD3F01F11D2A73FC722BD5C566036CFAC5
397F2A5132DD6C55F4B84AF763EECCA28D26DCDDEBA956D677C9E9008728D730
37E9CDEF09C16A2C0FC13C8732D5463F7F5A5011658C23144649A72A043685E0
A6F25531307FA0CDCF70EF9B49A0E3E2DF4FEAC551B910E8AB17977A1A79062D
027374A41C9AE494AA74D5DA4F158E624C2437B34D3CBB32FCC219DFFAD9A7F7
A6CC1703EE06340147C9B9316892C857A51A8D59DE97F8A01E890DA500847930
E6FE6AF873FDD624ED688CC9A6DC06F4B0187CC87BF9FB219F570C0B57ED78FE
33164934EAB70ED3852DB085F249803E279A093CEA32F30D8B9715C091CAF8D0
B987108946CFC0018ABB573A78C271861565CA746D4F166455A4DF9EDEC5A319
6E9B6C6FA4B7408F85F5C6069BF073262C65BE92FC109B2B38EF8C02F86120E5
87F7F3E1AD1A7EDF3193DAF1B8120F0F2A432A086DFF8B3E1440C102BD781CA2
0D18948D1EC237F1F4E10E9278AD06755E7EC574C35CCEDEF16C8D4DC6B158DF
E9181891177D0D43A998B4D17E3B952A14553AEDEE67197D07A9AADFB8EAB6F8
3E59EC7A1AF42EE975797830468685029B202577B5B41D4821DD03215A441D04
F7C6F42E0BDB28F6F6EDD49FF4F461B6F6654C38E2AB2136F48FCC5A39915D00
2E0EBEE713521F94935F1E0AE4D56F9A2CECCAA7C753168DFC95D11A95F2A231
EFA975860530147A410D7B811B96630F615DD92A73EB8E89EE80310D61F570C3
8C6FC8DB147061B7E0724EBD5B7C5086947226AE2B51D4179E0260BDE76C0957
18BD5C740598CE2C7C77D782CB800D73A2DC7D5FD4C70A011E82865D0FE2D708
B7225632233B8547D3A8E869BEAAA7C629184E2CC529482638964A6F9E339D15
083D5CC2C528BB2F8DB988718ECA133EE410DDF4CC88CFB52D075E2DD5A9A512
1F9FD0A10299EFE59FA506F8812F8DA2BE72F0827246FCA44E4B26569F1C5D94
4E99D2FDC58F6E9F77C8A04B529CC5F97B61976D71E22D7C32DD6A251141C84E
DDAF6793DADF3D58939684C97933EA251CD6756B5906E9BECD2BB5E91F69BE69
1F88466DC0F0146E8DFE8F8C8A21B412B32B89AC483205BC17D596AB465DBC71
1A2FC1016600AF74BADB1BE89BD06EB28A3E1A31DB992E807F01F1EA184A0407
2CBBD3FDE9C12E9F359C58F5315DEAE7E74A030A9BF2C23E8F23AA05505670EB
C3A55E5E44DF8F5E397156636657C593686101542A0830ACA6918C86EE5D21DB
D348847ADC08753733A94EE437ADD2B1F010484E86E0B72AE9A4DBD813BEBF3C
F60F4757F6503E5FC28B8115CAE6D46F4CFF5899A0884293BDEB690DC928A68E
FFBD0C1083BB6FBF2402581F6F84BE8AAA3CE7A906C63EFC4CEBCEB8A26FE7C2
418EEB63B7E393108CADDA24C91C1963D68F6D2348A62293E5275CCC13243DF7
B68E47AC505748A127782BA27C44FD991761CA10FBFBE802FE062ADC1BE829AB
731DEEDBE78843300158908F77C0AC759560BCC2EC7178E13A405DB7AFFDF91F
37FA0152864BE7EE915F3BAF37BF555A0E2E8EA5610ED0DE91985A236F4B6DF8
FF4067EBD927ECD3B5E0320C672715B6FCCE5548E116E7FBC75362064CBC02FE
63B7840E7374C5EA086CB4FEBC511CAB6DABDC2EC9F4D778E7384A27AE6A8DDD
0B551A46D72EC70202899C79E9AAE60D511A68A3F2E56169E3E7B8F62F158992
42629F16F6D74D78150FA93BA5743D5E67080D2843D44A3585E078615BEA476C
8826413BF4F2C664871EB1A07B3A6946D45571FC760DFF6A50ADC0D6D1559DE1
6723BFEE1B4FBA65ABFF7C516F5C3EFCF00A0A3C2A83A328B249EBF2C31AEA9D
19FABD566D370EFE1C4A5E9CADF1E05BC7982648D5C9FB29924B4C0D178B7B2C
E55A8F36653841CD79FD3514557D69179E28372103FD8A2DEFB6371422CDD072
63005CD5709C1F7042209AD8BFDAE064992A2C14B13F18D8048B24FAB01F3027
446987CEA1944FB852892C26CB81E231E7BFA12C8B81071A62AE7E7856ABEC91
B8CD1DC24AC1E0C03087AA02B897A5ED4709B6DCE7BB41A81A21F8A1EBF266A8
22E3BC4257933F986FA58C106E98B256E229329DD9E2F9185FA9D6EFD6B7F816
5A6437F7600D061DA9C846A716F69FC8885EAD2CAB2644F1E25DF5F6EF5B5ED7
81E9D0EA1719ACDE43012A2AAA1F71550220B035B6AA5523160A6ACBF9C2DE66
992CF4DAB3368A64C98FAB5E415B21CC28D856E1923E8FDEEC710B6CCFF25048
A50239744CF4686BFBD66879769650099A6CF35C3636F99C96C904F646FB7704
DFDF783B55A6821F7861B12877C71DEE435515BF52FD453207213F3E13FC83A3
6F2D86CE0A8EC228781C7A75A1F69DE5AD944A590CD39AC23462C56BCC6FC344
70C82B24631BB6E5E32E0E8CBC71BF24F033F6AAE1541AB6B5EF2212B7C64598
6B3B35D7FFF7AE6B0F6572393B8F51227D876CFA92E57CF66198F1F63DBC9141
95874CFED7C0517136457774C464F3D84203F74B1592B0997E15984F42D4B724
DDEB44FBFE435F9D85579097D2E55E6C7A52C3C7106FE2658CCCC0E009FCC90C
1148A5CC5C9F4F3BE200877997AEFFCC41456009E23FB3BE1A74230C180CC48C
0F9D6BE0607254667BC4A6B957C6625B1AB3426B888F236D57DB2F5A50B37FDE
9171848FC0CBAA6606E892B2E41A173AA590B6C92E26734DDBD0291F03932E92
CE5320DC3DA94674E8E633B7BA94E0AFD080DA0CD80D8DF7EBC89DBD03C02B59
1D929BF57D68D16395D93479B3BD866A4BF33913DEB54B48132222CAA7A8676A
83FA6E29AAADFD82C6585E084B8EE1FAB04A0D7F1783EAAB80313773E1AEEA85
7364EFD47A8B12F4ABA9ABF1ADE79C00350F35CA47DF4C4C6CEAE8ED6DFC9CFB
ED73EBD70DE13443F8CD56E8D3510D303D976CC2448603573F9FFDD42DEEBA78
D07AB1BE9109C817CA3C811A7E6603E81923BB703E08CFF946346790D7B6CE70
ACBC2940E23F8C860EAD0EC4977851FF7A77DA9897FE30F301D3BEEAB6F97162
75EB86A05E8F774377AA776F44F0AF34047C9A780F3B520A8E750230D50D9B64
C2CAF198CEB491BAD552FD0CA912D7A12E6590B5A948A294068183459B1E9CA7
3B17DD9B8D910E195BC497E084DE8C3DF484971F00990B88E1931C59D8683694
746A70A60C38F60C315723B65F76D0A2586694A3354C5624D1246E8CB995B03E
E89D82EAB424DC564F094556CC17D80BB8FA0FAF29FAE06B81C261F6727DD85F
70B84D5618E8CB44F4D7CD98AF85DB5EBCE6755A1E1598F1334C847B057911A7
01B04AD42FE5E3006B387EFEA69310904EE185F2E67008CADBF78A9B5362F30A
10692689E5819F95DB948A2AF0E1ED9254513D2002A9CCD73361CC952A8E9E2C
21D098A19CBA9A2B675BEDDAB6513BFA1F239FF7AB24EB0380E9D540C5C7F066
FE58AA0A5CEC68C6169E3C0D6467D7A9F92E580336877BA82B8A241DD366C394
B3F2186D1A1FDED43967E0676CCEF1352E4A2703C331CDA96CA9D7A40CF7118E
0350A7A62CA04CEC75EEFBFFA59FE7AF09ADEB92C3C1606B841225DD3D0938E6
C80378B314C689B5120FE3E899A302AA02C1755E12F0432B068F874806B28DD6
494B19BACFB9A4F2A162A2BEBC8A6A6B3995976FD8A571ED22E7DD3D7AECD327
0AB5D3522E93D4C9067560D8BFB357EC36FA7538A8FC6AEBABE906E2257F7F6E
022A83225E1FA0DB69E9FD5CAC0BBCCA2CD1ED35A34E3C8EE1BF62F8E55BA04F
5F8B2B995B9E260ECDF00181ECEBFD26A75857615AC246DBD0D0F1E7187D34C2
FBD80D723FEE49F8816692BAD1AF5757F5CDC15AC1C6890F75E5A8051A8F3ADF
763134F27244F5372A311546DC584574FADFF891534D0607A1588A2162F88F90
B1BEC28C5E79D226ED183771AF6D40AAEF9494E107235A45495C02C6BFF83417
2108142A7E856E653377FB536E9537E0EC21F7CD596D42666B2797082FB84B1A
B137884E1351074674EA36B66B7AFDCD2646E1BE7C3CFF9219C646A8004DC008
BA50AD9EEB4E35C06F7AC66E9683C6BE68C8DEA094147EE1B5493F5E6002B8F2
9E5735877D4DA75DC04099F57033090FDD7482F0B36D06B51FDFD86A227093F0
E18D0D9617B616DFCD5F0F20732B6336FA37C15765D66256D4D9344BAF976DE7
2F2CEBCBB82426B69AE6F31AFD1EA14AC5012B058584F02F7EE6641F852CA79F
EC55648FD8205C17DF4FF0F91165172D8C23E08FA7CA97EEF6697B45A72783A1
570B02CAA42C229C982274B923AAD2FC00ED1E11588114EFCA7481B41D9795A9
F8DAFD7CC4B4456961E1FAEB77A036FB84BDC246621FC14BE8BB26281DDA717D
743921120CDBB748DD805F5B0A3AF68EADCD2CF51F96D61E3FB47F4B6890DC3D
746D8934951BFD8E206FA5AB17D7DFCACA93DE53AC87932D97DEC94941023750
185F65268C3F4B1C95C51A562DC4F2BBEF7B2FDC3F4832C2F54A2DD7CCACFEF6
18CDB70D8CD885D6A82C471FD101CFF9207448176F8C6EE49706BFA108CD9BDB
E3EA3BC89392E9B7341D74D0A8ADDEB4D96794E2743CBF9E74211CDB0FD35AA7
A2CA4B55B0D6258BFAF8B92288098A90E8DB450A403FB14B1C5C99A09BB7F150
8E6F6CA27784B354C69E0919E27CC0FDF0581CF7690F93A008678FB5301E71F2
0C284307E548328B508FA4C87D94ADDB985EAF84779E173B4A0ACF9FE5E3AE15
2D3552B881284415FC1FCD1E8D2F0C28E223934A66EEDB1D02B39B2AFE22C310
644FD13FF21E7C4E4E58D3D293244CB21BD345FA38A671641E00DCE2FCD2D326
C7BBE55595D50625C6B589935380355A19EFE1A57A02663879CE38DB7817304A
BB07976B3AB382B1353F6779E2D2931916BA953A7D0BBCFC68D0369CB823037D
926BDE9D90C7747B205122B269D1686FCC21
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81A
9AC387913FCA9209F9142F9CEB88DC7864ACE2139716A8B8BCE22870B2A8AE03
61A40FACAAD0F82B44B4D6E4ECBEF48C6E2F39CBB2B53B18DF7F144E9FD272CE
6A23BADEFC0FC80B646A2FC08C8AA1C44A2A00554667CFAFF8A417D246F28CEE
905824D8C0FB19279F86AE6C8C6B3B5D4AB4CFAC640686BC6FEEB9C1DE214972
4C015A2D62C7ACB01966717F9C4AAE6203DBC7E60275D3E38C7F66058EB798DF
3A42628DF4378C539BAE628054B5C31D23B50C2B33943C5AB05E8304A43319C5
8B569F751361768EF816F30DA12ABDF5C63C5B1602823BBFC0C03B7A421A836A
CD4083FDE377A8E800BF093CC74B3F067CC1DF9F37F37B225D1A63E440A719CD
8CC6D148F1442F1386DBC7309C37D13848552D03C07E06969315884369E30CFB
BD715C131435EE885780EC50DFD4D90B568153D7F09788C8877FF9D119C062EC
9DB71DDBB40357DF31989908E4FB3FDA3303E6BC7EBC8C3F90ECE5DAE3E02206
E93022A0609D842ACA6AA03E96F8C117951E672EC54FCF9A8273B7989D201B16
1E870432822FD897B71CEC0427D5FA06B29F527B6A236CE267095F2193898745
610FFAD3AC143DC9CA8CB1C3931E36AA844248234F51BCA6F444C2905A4E241A
269ED51FF329D5C0C86D9C66ED01B85534A1E39BD5C20DE216B33240C40D188F
4E304C4610FA7CCCF0512FDD24CB36B40AACA15B0FA0098083597E359F090380
51C4BC551BACA6F728980ECFB1E999F4E0E329B15FE526F0C6285E5D05CFB53B
F7212E2933DD050FB0820AFA1B2ABFB2AED5544B06AD48DAD5E377C2F375CAD1
3A904419D9E7F6D38731EF1E8CB0917657EB749149E1D61A1EF50C19E72FC8AE
9D835BE39DF765ADAAA523C72A653D19D310CC10E9080C619F102E6C0EE4F80F
05C1AA36C2027A88763A7F0AF2DD0CCE40F2CEFD4D785A43264BAD874D4FB758
1C7082EA167108BEF6F7E34D958D6105130AE25923E7EB77C0FDF5286780C376
3D9D24E27F7FECB251C07A0CBF632410D7D948427FF6782B8850466A1FE66362
4FC26E88758AC01C1C98B568253442AD48691C2A47DF05F6A7466E87D3020FB2
D824E71394F6605CBE638D9A6B5A0DF28C4D81535BA76F76B16C6815E977CA50
513DA81445E93555250A43815E80B39AC00F7086BCB4B36C35CF2E4A42B114C0
7AC99ED39EF436CBA30F8EB1A6E543782DABE3FF805D54945D6DC2C09A0F32C2
954C689BB04A12A787B88A966DBE3F4C2EC9888B56E96241D345CBE471FFB513
9002DD5225DAD211F5C72F3127A60A33D311387E6DBB2951640D74E59891DDBB
4526022E00B54489023B0FBCB6540E7EB3B2ED0460F81AB38B9240BAE8424443
749F272CA43BE6C9B5CD3E674BCF858A46BB2D1898684401E25CC37C0FF9DB9C
5064E2E468F5906C1338EBF0AB1F2B5C97A5E4D6127212AB225F2857D0014DE7
F40568FC538A0EA2E76E1F62790DA67887A81FED8BABAFE9416AA5E06C7C4C60
0BF38B70C87E5ACE2C713203A64DACD5FD072694C71A3AF841F9E3D07C7B3788
5856BBA23EFEA2AB1902F879F1361AF8C0421A296FEED926836406E96C49A48D
AE1DA613DD54D9C840D4896A183FF4E395EB7A69DCE16AF779DB5DE506A534F2
9DCF33411B194DEE2EC1B99F36FA1A11D14A28C0E938F608AF10E3B31B98C36E
5AAA15FF94A95B38469000FBF31BAE9CE8703754A099D21B3329E0471463D457
0D4E89F4CD31A93C312EA4674730466C3EBE9F8964D358AA76DE110300CC7B89
8FBD8BAA1FEEEF4E78760F8A25C60981E6372E49D71614BB4E6EC7B1ED60BBA0
8F874D9E1B1661393BD85DEB50C29E3DBFD4613BD0DB2A70E57CB73CEEE6A51B
72B52020AB471FA444491570EBF12F70F2863F9CBC2CE3E571F5D8ED5009FB80
9985FBD9A3E99D1D6124A3B4DE50749E55267744E046627E381FF09727EFEBB5
2E59282E0199771B95DB671D4B2AD846EBC0109861075A936D6F2508D429C625
85777EB9E6E9DFCA889F03CBE5A9FB59C55523ACF1E394505886FBE4D6F739C6
6BA65248D16465F0743C602C6E12438E7E9CF6405EEAE7CDC599E8BF2CE72DE9
FEDF547B68A41FC346A14D58EABC55ED2D98DA057A876FB35F46EFA6A949A75C
F1DAD4E176B50DB98341C8D442F31C7CA70CA4411B4511BE399A1EFFE6AA02EB
E529146BB9E0D14D16625D3C830ACB43B26371195013F74FC07E862198AB570F
44DAA7CD767C726E7BF288414284CCC3E6FB3DBC5D11E9807F8B247CB591852F
EC9392079A91D02F4954FF97236F55AF6FBCD9AF0E167742D0BD0E131BE7AA98
E955D662DC9AD78F82C29C3DDC08B6A551B0CE96E180903891204F4EBE911581
EA3BE89E4CDAA342B9E52F30E55B902ACC35DE87E70DE8EDFE7D803CB0770A2B
0B8180E5389A54B85BC69FF37B8CE078CBFF5CC6F11D65E7B61ECADC94491C5F
F034CEA604CDF5412886758D49CE07427C96AEECF83C52A4555178C7AB4DC1FB
491ACDD3A0CE09DF3D2AA01AFC9DDFC002A9863D9382764DC241811B3912F36A
B2CB1440EAF4C36D14A899C877A1F71CF5F205C8FF35460B37921BABF917E5CB
A23CCBA7C46C157E3088F4D1C99603A5AE29019C97D03FA54726D906264C82E8
AED7E4AC8F66E56EDDE14DB1462E4F9859384B15882C6B0E2219186DD528D0DF
17F15FF78FCEB2CA616D526C530E1BF18C3FC7EFAC5BC5F623465E81758FA863
78485C3F65040DD351580824450D62A12078BC053A65AE1FFA91D645A9E26C29
A8311282A2DFA57985CEEF4463E64E0B7DD8D11FB10DC168A704C2C70DAEC483
F6942ACFB86DB9C4EF5E16FD6E2A4523B99D267AA808751385186A779C73E575
948744853BCF5547A7870E7F6196444513F4AA8D5FECEAC8EE88C8830B526ED9
264D4F56562FF445F348D19317A058A4FCC154CEEC13E60A53EE79C07932518C
BCF295C49DD58CF10B322634A4B9ACF5325B842EF91A19C55CCA6ADEB88B59E2
4FE4A96A8CFF57627DD17FCDC5BFFCC5CE9C78BFA2B830328F9A6D45FEEC239A
D76BEED158DB3BE2DC4BA1DC216B2D085F251E56B085F80C7C11DD39ACDF31FF
8D01256B7CED1EDFEEE0376E57B6E45D2F375499F8118EAF5C7F6607DAFC48AC
6FD2258F0314DA293F61D30028BB0FB43F50BFFB3005B677A74AC48E341259FC
DD1E8D932840FCA3727301C942C987A026992772DC2A0B06D5E4AB1186D81001
AE4288BC2EADC60BB6225D9CB6CA887922B117EB0E7F81000CCC4A20522124F8
B7DEACA9E6FB322B9B66DE572DA955FF06BBF51728AE6724360C97CE27BF0DDC
551716E8E06DDDE418B6E3E407307088DF1BF21C09F61DFBD19C30D92CBBEDE0
59D026A5A2D9B65246D93E36A7276E70D11DE1DFC7E967F6DECA7277FCA73E84
1737D9AE81C25EFAB95DC9FD91A124F9F5AE28E844C6C3EAF7DAB0FEED7AF2A9
13FB2CE66241C5102CAEC3992BEEF1999CE2A5574EAC934945ADEA6DB4E4DCB6
4BB074C6094FFB7D2AE0633C33C8E4823681C0A61ED898C571006202CEAFB5C3
E352E7F66C743DEB4EC14A3AE0EF469A2CDB23445830D0F304FD7A9EB6B8AEE7
919322D2FDF6C7D7906EDC7EBCD9E9B6AAF63DB3AFB9D9B87CC743CD66342BC3
BABA111186A0F38F642261843011FB3389DD944969E83C1B8315BF63C3BA9B84
9EDD5F620C7E451943A4E3868D2F9A6B78E6AC615258E663C9D255FBECA07BE6
FB4B14EBF66B06D640012D108ECD3329117185F2DCCD3CFCECB7224FC5E7E437
7C6E1F717DD65F6A274994CC40546439FA5A60BC3719653E525E49FF6F778D8B
ACE4664D86C8FDAD35CA3EA60BE1E28418837CFC7209F4A7357804EDDB05D506
686757C79C2ADE54B913F1ED476E3D86BEEA512B1FC55E137D23FE61B7D69D1E
E48363146DB3EB9914CE42558ABC90B623AFF1FA2CB3EE64202B74F76E195C0E
3F2B12B433D7DA1F634865DA6E5ED7511E1D930D074D76A35F19891E3842733F
8AC91FDEBDF9F8A426019EAF34A2B13634F55E964F8B7C21D937310590871C58
2F30C6DF5FA2097A078ADFACAE547DA592695486DEDA95AD49D2958D1F43A3CC
E7B7B9DB269FBAD050E6082D8DB99454AEF0AD0088753DEB92924B8AACE496E7
45ACE597058C23D84C0FB8BAE6E8B396D944701FDF7FD723D145E93B12A799B9
D0210E411564EF88E75FB2380977263E4EB261F6718EBF15ABA15B45CE0008CB
D8D2B7A1FADD93BD3CC207D8623EB59F6B3FDF302406C8F16686E31B66D8C1D7
E8DAA6804AAE5DE138E8A311A4A1330604D0E557EE03662BD31AF90587A45AE7
42E8CF9E4697F94F59B8AD259D2DDF433930B270C63EEEBF992ADB20C9F233D8
85BD42C04DC9300D4CFA004F89A55999A93B5A3EC2D3098ED38FC4CBC6BE50F1
4FFF4452CB1B96ED0E58AC65EE13077831824210531E56CCF19CDD93E462A12F
35E45673FB121E1AD75F20A8F4E8B29789DD95CA5047CDB13FCDE826D3AAE15B
CC039B1C6A9C21674AD3ADB75770688524E0B4D3151C5E51D640C741C6A05E85
EC79363ACC8A5F234575C256306A3E2B5F6A6ED4C48F6D4440488AE7C9B57B85
DE61CE78FD299609DE1D6795CBFB4CE95D68E3C7CB1D4A8DA1D0AEE7CAD1983D
695AD1DE3E935E231AB657C704B4FAADE3CCBBDC7C31C1FE52D8A57D79602D65
BBA312E072096DC25768434E7B56ABD8AE83CD6836A2A624A32128393B9D463D
FF8B865FBC10316F6EC4806316954E90817A74BFFE390FE7B5348DB0B4782BA6
D48AEE80D379CFEE11E4F1CD9A521023438259A1AFAA427959EE4927606F08F4
255EF756643EB591366950DCA06596B169C9665511507959228D5480C7AA0DC6
1F197A9CB5C80A00332184637C6FD2198C1D859D45F35E20C5554B0D72C262A2
3CCB48B112D5ADD2E056258AA295803C60070F8E89217F14F953CC4015C38151
4C1E1BDF36283AAFF8AD785A49E091119556FED39BC1843053FB2909D78D0CC5
BD0202C8FB9DFE45DC35209300AE63A15A7D983219EB991B300213F2BFD5B477
A7342D64AC059315DDAD1A2FA1F4E8CC6969A0E25CD23969EF9E387BB3BE62A3
51C14DAC4BEA7FB4C8F38C6C51F6431DE0F8FEB6C3091AFBCAEEC0FB3F3992A7
7ACADC778ED2784B3423154B7FC03D43F47C6F505869EC5039310EF1F4ACEA1A
40014BA27BD58490D243E14831C19698C0C0C9683827A13C1735D2C649C0D4A6
BE354B0E303F96F1A7DA6410CC5D3F84EC5C9F615650160747A724AF9C66AE82
CB864AB947E3582308319FF3BA95FAA268D83B462FC0BD10BBBB8DB7B12BB101
1EEA4891546F4AC7FCA094F32499C0F8AA33D2C7D00283804FD75276BF2C4F9B
E9BD77A75D5A1E7BEC988F06F62D50278904F0928D97C2A77894DADB216105AC
441F7544C3EEC8F09A260BFCE7C040D10575084BC081821FB759B9016DBA3AB3
9FC05FA6C191F7A83C324AF0629A269BCC414DDA1570B980F3596906BE0D23A7
1396BA0A0F3335B74FE5BC3367497C95A462341C8707177AF767B83F28AF4C0C
F952EA0D9C4176D5ACFBC48D8A48074357B1B8E5B17C698F2052A9C6410435FF
3D114F67EACD436BEEC8ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A6FDD
7D52F256FFCDF706B456B6886F5FF5F416C079AD248559BBDD2767549450C680
3B603B312979604965F7E8298F454E098DC4EE83D9EE5A229DA5B97FF0861841
31743AFD0DC1CF828D0993C56493FBD38744296B82E3908A1A0CE811E0CA2E52
A0EBB9F4998D40FD7B001C660CCA6AEA8C43CE8FFC9D1AEB97BAF55DA23B2FB4
A868BA0A41CE90D7BB6633CB481DC110FC14AAB8E9264F5EE49798BC49D9D9D4
9B9CB9429CA197321B545625093FAB4BE53BC96D108520D9CE9193DA216221F8
42FD0F3CB18D4D9C66FE5891B484C4F3ECCE8A8CDF069387E4FF4967E9F11717
A630BB0422421290360984C499D5C2F4750008B8107BD17C259B723F956B5B14
7E7C0D6AACEB4C9F0ADEEF68329D5CAE9EFC75DC15A9494E876104FF7675D11D
E1DFC7E967F6DECA7277FCA73E841737D9ADD1D1BAB1961E212D20880069F0F3
B5536CDE53D4A4D5012B54B227A0C18DA8A43ADB7593E98E5E0C75197138FE3F
BB31F876BEE000302935A55EBFE1CE914272A8F50A983AADC0604FD17B2A2F43
06AC9C0E2C687D1D9ACDBB674244037384B36372980DE4F1819DC2B4F825D7F6
AF5769BA3C34DE43B531F84B485EF8F360082659FFD797F6E37B87EAE0447EDA
DEB00764A38DAB429277B77869A70AD62AEA3CFD663916700C95E0023599AD8B
F5E4383BF2D5B1F79DBE83B6B7836E42C2E1AE0093867B0F2F8C4E44A16A51FB
C10F2F4BD0EB7475E396C85116A9D3FDF82014EB00C07DCD76514565D3E6DCBA
5BBF1E7E65EE55B3A8CC8D2229A01DD3EE09EEFA659502F90DEA0CEE99851BA7
2A097446FE8D54CEE9CBC3B88AF70F6D0234ACB6350CB1C56BB44AA5D7005841
0088780E87F8A0D2F6D2FA07D508BF3F6314B934962984C7FE400CC9AB1E5F79
2699F15AE7E181FE3ABC4B4C70E21F3AD9AC49685171C47A257EBC1FA6B40E10
B77C81889061E668B9444D08F3EC366CF071C473CEAF7FA64B863164AA97F309
B76EBD1D860A54D8E656ECEA88768396EFEC282AB93B7CCADBEE9CAC7E77D79B
A760EF4C53A3C983853C30DFA6B0093FC96F298AD1B5807C33A89AB14673D370
619267FFE6A05DCE65C7B986CF466B6A832F1921A6949469ACC2B5EAB9F109C3
6C9122359A60190E6C42C713A9BC911105DDAB231758BD41BEE389B057A1F7D2
5215EB9D0F26C738D1E8782D670AFDCFCBEF6BD68AA64D6CE1D7C82A1E46EF79
FDC5CF1DF72D2275F3857BFBB4FF234B2192EEE72D2CD5E415EA5C1C28F4B537
D15C66B6CA739B8D92F22E3DDFDA20460C55C375A40A34BF6BDB012F333DA135
67389FF89C666BAF1696FEE4BDC1B32589E1427C1749969DAF3B72CFD1F579F4
A62E705B6DD2AEF3D166BA507A1EDB131616EFCF91246FC75DE3D8A915DBC82A
1E46EF79FDC5CF1DF72D2275F3857BFBB4FF2296C19E66F93DBC8E9CA5E86793
FA37889936F823DA9CBA746BDC1BA4A84F7B70846E33CE5F285F32FC4E53A284
1E737ABB84A750A16A4999D5A59AEB5FAE6FA51F6C8CCF447A19D91B8CC30481
B5C49B6ACB4DC451F9C524349EAD4DF1F0DBB3869B74C2373223236E809ABE92
C2630C9A877AE16BC30D56A0B208DA546903B801BE445518F14E701BE121A6E3
C832FDC31C1546BF0855A6767030D9B6B47266B4A1084BE171D03696A026FA7A
544E4D106B9A315700669D9D8A3D985F44DE6070E8E4AF6424F3048173F52CB3
EECA756C4D24FC6054D922F59B105DBB74686310F635AE6153D9E18A0514882D
4CCFE9D44B8952190FB9EC8360698A45EC064FF735101C9B16BC27110FDAE792
2D97BF0BCEDAEBBDA6BE7764CAC582CDFB785921653201A8230C66DEBA105E89
909D76D034C9A5C6A216EE8C2D9C96FF0A04F2EBCCA2467174529C592950326D
E46CC1E57DD4B2A8821A8506BEF79EC524565788A28F5870230E9DA69ABC8078
8F2F72CEE5F5594F71A24092D1CA9BE1635F769E2AC1459B0B3AC1DC117B6296
C31A438AD167AD6C39AA2FE5CCA6028CB3A7EA6A0BB569A91BCF947E682976A4
A993A413FC97F6F1331B12604C28FE4D8F7FF429F96D0DCE41EEC1EA29EA44F3
F8493AB33413FB84F35B3C0016089A6C4D67EA0050A0381699FE2E38BEFB071B
9FFE3D7574FBB32CA8ABAF8CDE383085DFFD5EBEEF83D696C0FA27B86904477A
22C09610E936D310AF8455122F4C6B61307071FBEB6E8DA8C43C5E1C317DD3AF
44E46800FED97CA40252808F6AED21A9D6F3EF87869378858BA7E6E918D5E464
49525A4A5A2932DB6208081585CD9A312B09793B1C1FA05637430A13E5AE3E1A
3D5B471CAD468007C4A6BFEF07D313E1ED2F47BDF624179D8827CA4664F96F70
03D7D0BD14633673BF1A66D0126713294E13C1A4571B8A9E6D98EE5C2084E767
98939F0AEF7E64F621BE09010CB6F43790AC69F122BD9618E23C7FD95CDB02DC
661ACA0D9FA5DA0CEB0D82EC823434BFCFE218A4B5FF0264F1EC9818FC80F9E3
E06FA21B47A2C431ED3DEFC7267AD9DE87E23C2411D06FCABEAAA6D87458CCF2
5F198AA55DBC4F8AFB25E33D6830FF6333593140C974A8B13E94CF0E77EFE6EF
C2F0C2FE513C93C7EB2528CC8B0472B5A579EC88E8BBC1480D4976695D2851AD
FE75F0E8AAEAF174FD8B2D5264FDA6E40432CB09DCCF5C286D5EB04E5A7D952E
716DDE9DD17F51C40339BBD717BA9555F70DBFCE390F10FFC62821D7082423D4
6EB801F8502449684418493C3E014D603933A576C6B0758D49F3155D448D505F
73A5206D1647639FBCAEA8108A2649D23FC552CAD67A60480964C6CB0783A8AF
EBB8E005813FC0D89420F1930E18323460DB56C9DF95B90D45EA22620C2FA7D7
521D7D4B3FC1FDA5061C6F4B994301864942F3C18428C06EF16DAA37D7CAE4F8
5E3CC5AEF1EAA75C658E90F0246C18C21CF073CC1D7732019B86C11D799B79F3
3BB09CB6771F637D534DE9FE49A53A3812D7DBF47D9E8A2D353B48627891CB99
B8C759187CF9112E3619F9ACCAD376725BFF2760B9ED7576B9D9EADFA0D51077
ACDE9DA732031E629834097D62B5D90F48DA5BDB8D01BD0DF36D531892BB3AAC
16F85A63CA278DCC38682E1BC6D134930242730DFD14B49376780164C5A1F030
379CC9E763CF518CF9E2DD410B31012ADDA5B9ABA7F5EB2EAC54DB67BF9CD44C
49474B134D42210504E4254BC7510C4BDFDF53EB3D5F54D0C6A53862B4ED64CD
18471A49B62240FEF22F4D82468E075498FE2FD44122E511E5FB2FDC8CBDF6A6
9012CF9846CE3A9A6DE5C947140AC48B22EFAE3EF8FE12D52CB3A260C7E0FC2D
A6ED47D61F83DBF89585DAB88E81AE9FD0426205126E4CDCC23EB4C431FC6C1D
BBF79938BA64859723C4637574DAA16916B8CC6DC32495D5247D877E4B863070
61E7A19A3AF4137889983657F78257CE77F03D0E9DA4E29707C31DCF1707AA65
83AFB9A309EB1599591812BBB5C8F3CE43DCDA76D261E3F7734DE2DB7D9BFF35
01E5A6D23CF1541ABF3B301F226510EBF89944E4E9C5376A9F2841845CB62FDF
58F84CEF83450F3CF96A040F4C2047DEB00A172677774217ABBFEDC33DF60D1B
D15D023EC0FCBE6548410923051F875718FAC168E4E2720E8D959D339DA26151
5C42555EF75A03385FDF6C7DFA8FD7D02B80E1A845766CDB597CACBFE0700303
409164B5CD1CB0F12CC3632AFDA9076C2B4D0CA7D89ED2FD03763D20BE507F7E
56122CF46DFFFDB6FDF9361520D2E388DBC639CAD5B2E83C049DA71FA49785EC
5565D2B3A261A66C9F2C8501A2E9324D5E6F0F1294E1C0AC67EBF4A840618B23
172EE2D3E6538CD9B1E12B834A6D01EB50C781646E30ABD086CF9C09A6B0FEE7
416646141CCA188014A29CCA5AFD1215D847550DC0F06DD1F83FA50D4F154867
B579F69E34040E2AFF508CE7AF4B0D544E70294FCD49BCCFB65347FD1767DFDB
6F85337F7B399827B860FB08BF9D15DA7739FAB5D8E03BD8F283FB6832C3E10D
341F8D147A88D61C5990E609001B853B273DB140A7DC69895E465C1ABABD4CDC
88310748221F5BDFDC2306912DAE1934E475C3AEB56C96D1978FC7659ABBE845
A08BC6EC9EDABFDB1CAFF5FB8203CE3B25721168DC1E382A5267627FEF41D963
44A05EEE4C43E2AE24657176B6C8D3A0EB5A8C229616709EDD4096C1D4D817E3
96C6A55FFA4D67E59B58C6D9BAD063D247787282EC4820B3C3A8D7EAC66D120A
3911D284DCAE2018F883AA804CCEC457CC6213EEDC75C8890DBECB670000924D
3BAE8E7A8066D804B89BD943B49ABF548E5D92C1D6151D1ED96241CF76510076
26E9D2EFFD007A8E985FEC263E6C90BAE36C27D704E88F1F7BE09A971CABE15B
724B62BB0C1A5263449707BC0ABED19F4F1ABEA27322584D473A1A888AA4DAE7
7864042EF587A6D6C04DCE664BF83492D166B205011A3E283257FA60C5AFAD3B
71CF6D6772E5E77FC5742D4D77F4B9576213835AE7E32A2B401C36C3D58214F6
DEAB86E06EACF7F5DA3BC32030E4E23C5E0E7E82C4D1F9BD7278685C4CC54FE1
C1C4332F05F5AF14E70FADCA465393A7DEB7DA08B3012A99FB2FC7F6FF7AE570
BDBA718AC1E0ACEF9AEAE22E5FA653C2698E05E0E072A7DBA0702C0CBE5EDF6B
D0A5B47D7929F5C9317680A392DE0CD7AAC72A99F351D824F86D33CC89BD70DD
41F435624F598030F2E7121F6A610D640FC7E512A28BF6C12496361A53953D75
312631D6F07794B1D853251462B4D522B6EF8FE6D2DC18EB4C02C6BFCEC3E71E
20E6D98720013BBF6307EAD2720BD9674E2AED09E56CC6D3BF927657BE2D0749
3302A5492BEA01CB223FEA3B6CA4D0A35D6F2C5D17804371F9AEBC100D7A6D14
14C37CBD273EF593B596973EB054344F62115963E3F61A1A2774E6837D2DB796
482A00E2BEFBD6E3758A5A1CE621ACE547811799B1D7893DF52D57BD6C1A6B74
4024CFC65AAF320264BA65EA8FE3B2E77F515CF05968797241B5BA06E190C023
55C664139419373923D5BE1FDD292F80E973E271248B2E3AF05887FD5142811C
2572A1D4B9F9539CC6D9F441AEB22F4E871755911D8FAEA73E35EB7835FA1C6D
A4635171C47A257EBC1FA6B40E10B77C81889061E6696F50954EB8B347918C49
20C7142A2AC68231DD2AF574910705DEF2893D8D4BD1C3ACFA2BC75EB9471489
0422528F5121B7A7D7A973F2EF67F2795E6DD8CF55B98238D6654F8B47476E40
98ED693455F82F098F49FF48762D1C9622E0B64CD190A4AF3020654123563C5D
6ED62F1387AA1BC5F00137C6AF5840026DA68D8DF87CD5567644A09B52124E10
51A715399BBD1A6D3704BCBBE1FFF89BCF8129B98D35736FD2CCBB0E36AEB664
3C283A61B6E8613BC8134939CD28AF21976B42B06A63719C44432BDB419B04C9
19DA628C6A5B0F4F626E8935AE2943365C505CF5C7955AF2EFFD964AB8EECB15
C33CFF111F801E31FA0889D1561CB28638D1D24AA9F358AAFF93B9564AB4CED5
632C12606449ACD326A76B011D9FDD66C24C5342A5575E940A10EF9A7C4E0857
59F390036755C4BFE971F6DFB9FFAC965ED71736140A0D41AD571329C7FE5460
ADECF79C3543E3592283C6770B4087ED9EB76ABFB56774C4A21133E594461685
A92D372D4ED3F9DB786D7E7245B9B5DE70958048F037C56C14FDBCE691048469
BC488E501EB5DBB042B02CFE90432FA7D98B533F89DB0F21A61657E268166431
92F6AB4C4265A5C2599F55E134AC2DF346CD7C05F0C4B63DC1C10E03B9D34C67
27AACF1040ADBF7713E3898334BD99CFBE66C4FDBDD9B9180626E338FA32B67C
16195DE9D59A0F447B8DB69CE8FD6E2ECA90C6B424F1D39D11670BA89B298DE4
0E91D1CBAEDF3D811318D493DC71793E84BBF3E2BEE2EB813B03690C774E6DCC
F2D7221490784231EA6CF28982A4470A7156F1C7312FFAE07D32B62AEA32B58B
8D127C00F3B953C795C84E1A158E799D50610BA45F2003568AF44E2EE4DE711B
A128C91C36EEE43CB41592BD13837B9EC9735996A1376BC209B8D579F6A057A2
7AEF243C4B389CCF9385CE645C882CDB6A03A7921BB9F85B93AC64F9C82C455C
AC60CC9896FD453CF3AF2307B191F79C5C6F070D7E814EFF05F881CD7EF43871
21F72EEB3A9ABF13F7A9C46AABD4D0D976EBE8AE53D3AFDDBB926B54EF0C41B9
8D10342A2BA4F9908402DEF9AACE7BD76B3D4A244E3AC7442DB6A705BCD7E2F9
DD7C73DE15B222ABDF7DC3B76EEF17AE4CBDF387FB03FAA5AD122CB4A90F479A
EB32B0CA993ECF07D050F04D4CA153663EFF8A63016F79C7D0E464A57671FED1
E50936B0CE6E364B62411E6DF77D4A4DDF74455394437C3A7B477AC27F75850C
FED5BDB2F07349EFC5134BBD646BED8080D44243E74485FB82236249FF6726F2
D6775F15948A9D4DC82D6F60D7DC6F714656E89DC882B95552C5215183E5FB51
605BAA7948D6E5102CCC8E7AEE127E914C372C6E2DD84989E78792EC3F50C186
322A81E6A8368780A2E815A7EC49B29EA2F4594EFA2C1C079B0C777ACD0210BD
A4F06EF57BFEFA0FBA572A16A81DD123F8434BE971D9EC8149468CC0F2C45ACC
D61E6DEA7CCE2D711A218FC3953EA7B36F464567F208953F9AEEC1EA50C522B5
A42C4A99B079ED011928C2C8CFA17D95D50A7C1599E62D4FCAB001D5F9DA84FA
530D65FD2738BD6BC724446933E8927F3AACE64BE6623CC4CDCA1DC0B686ACA4
41E316ED0CB3CCB6ECBBD05FB823FD79EEBAD2F9F0891F553381C5E352B4D7C4
C1678904B22D75C8E8D4ADF7A319E9EAC6238093C798878E5D5087FC5390338E
CC499C043E346A4DBA66B7EDE932FFD9780C75301CDA60558F65241DEE49409C
10DB07153317E1A13947E293CC426E38653A16E2A7EDF6D500E9237793DBAF2C
6AB5E2DB571739092A476FF45FA1A1CF898E3FF479C1EF67CE435AD93677B705
BC81144F2E45854E93CA8D00E814009234E2A36EFBD854F868BC9301D33BA670
0EEC06C030DC43B2245F9D24D31A31F06EBC65712C870E62BFDB244441198618
3617BF19EFB5DAF155F0957D038B6FC5BF776DB24668F0F4594572EAE33CFF78
6BFADE79FFCBAA6606E892B2E41A173AA590B6C92E254AE642A2EEF5D51BE02A
C50855B9158840F97FA94CC03CF388C8AF7468EB28FD5E0CBDF9E23D1FF320EB
F19E60F85CB9568AA9C68C085E87B32EDCAFFCED2FA9A1619C3D1065724C6F56
79589C83053D4C8C9B53912E217B51E90F13A589F452936A798BADF461C448C5
480CA1D7A929044CC07FCD6CF9DD7FCE413A0B2CF777529685854F63EC8FB112
3A12157DE158671515E8FA0324852EF95789F16A8421B4FA121305A1AE54DD69
30796B192862AD337BAD6CC06279077389A26E7EF7030CB43C182223AFAAEE62
0EB7E7F02C11C1B52C95B6B66A2DF1FBE1991088128B8B12C2B28A050B50BD46
CC83DDD732C8EA609E2857FE8377112784FC50B3E2940B0D30B506FB4732B2E8
8F32140F3893EFF849FE4E17A69F02E7B4C69CA806A1A347B174992DB8D542BE
C631C8069D0DF3B6F3A5A80891684979154D98437D6BBE4C8EEC74B6D9BB7D6B
C5924BF9AB0BC0438C5F9AB06D6FA688C48C7DCAB3F09B9350C42F6BF7A4521B
21554098DCD8F7DA254922301AC847E5CE09E60F0839874318C8389E298F5546
71CFE508839634A81ECF5A229D2B16EF77A39178507E41DE72C0B30162242B3E
F7756A035C0529533E59108C550FB89650C5B0600791191AE0D2C2D576DBD6A7
3FB4C0722AACB08ABBB932D5E6A03F957B7C64E89BB59C4ADF019950C6276EA6
1AA9465BBB3A56AAC8D14E62B83EF68CDE87804FE10153467FC0AFC951B645E3
0ECCABC655E635DB463BE72AF1223D0690DDB88C7DA9D59148324E7CA0701024
42574818D8E2E330E2FE5102B7F4DF3E4FF521CA5741D8C57CCF85B7887E6A7F
6B6E4F61160966AF27B74B21C9F3D6882E3E909D80E0762C58ECC4E243CCE91A
946487E546C6E433A5C5B9FB7D5B97F2B4B202F94545C8C3A9D70992C1F31DC6
753222850ECF459A7BEA8D8482342AEEC5762713C43E7E94884C06329D340EEC
ED08ED58B05FA74B94FD084CB58F31EBFD5EBC6440498768C234573DAA11A489
B87A3C6A208E9CB0B30F7AC129D5E7217B10FF89AD4A78408DF8ECB0A02D9EED
19239FB927915A02D3D85B0C237669DC17FE1A48D20EA8C5D2A68A4127CA7332
E5039A2A7E32F2389255B0491050D86369ED418F2926916FB309B314347EE3FB
1EA13799ACEB62CB55BE2301E115BF38D18AE8461F466E207613B6C091C7A10F
D77A10F08ADDB19E494C72ED471DF04820F4F3A6713E67E7C08467C617E31DFA
524A30DB697FB4139002DD5225DAD211F5C72F3127A60A33D311387E6018F5BF
F946CE8D7834A3410F5E6EC14CC8E47337898E5E8367724E6A7662499EA3FCC2
78B616531C0CB5BAD1940ECE80B6479023DA0394E3CCA13502D03B122C2218B8
7DC1A0A15DCD491B2BA40939A647E01CA6143950A0D13DCCE128401BAB4E3322
2A22ABB177C6607F014F0310C1E7BD29FDC20E11094E2852779FC5C0D5DB9D39
648317DD0820EFEB02CDE5BF84E5F1E8C8572A5A86DD74D4FB3A9FE077F2E6D4
384BE6BC394E71C5DB81E42B90ADB935FE3468186ECD90E2F15FDBB395191E6C
465F4AA552F9CB59DC4B0FEE8C937A0920796C09CB74B3EA1DA5B74EB358437D
0CEBB9E03109C593BAC09CA9962533B3AB0EE6EF76418EDA7CC6B8795043E5FB
6F899C3CD8486A6DA3E670E6D13BC51C01FAFED3D47621376F2A271728AB7439
3AB3183B6CFFE1D0E2948B24D2A7E6A98712527A7F3FDF0C07D30FB6436D5875
3F6AE969F727C534CE5C9001F9E7A0149021BE5A65DB754E14D890F42F4D23B8
5DB5F2BD66726A544C10942C271713B28F9F33282D2063886DA7006EB5C0F757
82A3C48BD6B7D4DA8C112653B00D7E484A88A248FD17FF0E7A075A554F98C451
C7059F491D1C8BE038ADD1FA4019E1C78B8C7656766444617C98548A8EC0CC14
829F7C67999234D302FD1E40C28703DFB713F881EA0F4B81A8F1FDE4B3C92CED
078A98A433D6F3C4B442E014E3E5A5E82E52DB5332A895046FF12D01742E9AAF
ACF2CFCAF0517858C28A24FAED300D643F1880D27C0F7D73029F171028FDDF8B
55080BBC908D26B5CD10691FB92BC2FA54A04EB649B111671B43973E31253DAD
08488B1C71AA6F08A5FE3F6222ABC942F7B152702F7E48B93155A7DE83B3A6DC
7FAF8C2561841226C56160914266B1D28D74185B0E0FAC89BEC8ADC3FC027EC4
7FB0EDE4D2906CF1B55597831D98B643B81D2FCEBC963155762A1019FE6A9467
DB7E5464F6CEA824787BF86ED78492C31CE4E8AD0913637E245B375AAA5B76D5
95F18A4289312E74FA9C289A53647EB6D776E3BBBC735D9E7226D2B353CC752E
FEC2E91DF8E2DC63650E22804A5B31B13418130BA661F22AFB71F8026DC8F788
188647382BE1B7891A84B9697E22FC61EE575564D48A537CB190E26707CDE0E1
B29B2BB9C4F4716519A4A62A05A7B901F7AB8E77C6FB72D7CB3D6953F1416C40
FE153C7E73D86FD65663DA0E08018ACF34CF9BA5D7A937AEBEEC84B992D45A26
80BAC63497C593C90728B12A42833DA3C710044C03A37A680D1F806296BBF942
428E9FADC28CB5AF48F8947D9BFAF2F57F0F6C4AD7C698D46568068F98C3564F
42D2F7F26014DE37C4DCCB6B3082CD71C69A1E1A3AB1C1298DF12BB54B3EAC9C
3325FDF74E1B6222A84D10CF5EE66EC13A71302C6786D05D419441162EEAD0BC
CA6315D5D70AC07AC571FE97F03509863B9CF7A0E4A8D5214D07B149EABF51C8
5F0C8A7B7BA0AC8B5A90540E5FD5922F512C0A83999C07CEB7A37F71BB8C4C08
F359CB4473250995CB6F5DA6838536F3FE0B38EC7BB696C8285F78C66D154289
455C5FF2D23C1A59A2944DC972F44474CB35738074BCB9FEE4077CC0C49D7185
B623A143311EC892D1BB9554D34547816955434DFF68BFBC34A074CB3BC8C175
4662B5D3FC0462AC4967765A50D653FC3FA379FB4FA0AD9F83269A99D550366F
C8714B92BD48CCF7CFA30A7E92FA628D056602E7EADE6F2B3E168EE1B0AEBB2A
BAC2B90A514D97941B12553B13AE64F9F960EE62E049E6D9BC9858A3ED3CAA1D
77CFB4A424858251438F05B3EA1F686B35F0072DCABF52B26423E8BA630090AF
D344BB225F08F47868D6C4D857CF0A3C6CF4B205301FE5A2F54624315981DB9E
59213A134B651EB7A024989A6D910914C0224A700E1245ADAD0C701A6F5E771B
E54B09E2D6EBFD77645845B7C08389FFD5AA6D6AED2DC26C28A403BBCA3435C3
FB7971E9A56226D46A1174136F0A04A5CEB915B8E21F640745A0AB62F15FA8D6
5B74900DE1EA95B981FBBCE8D846DAE64D91AA7BFBD49CADFF1DC7AD838B897A
D728B35D869CF7874A1F48CA79E025C3D54743A3B0CFA14625FBF274F3794F04
4EDB9552BE2C55747D7AF3101C5F1A2A1BF6C0E2572AA0624592BEBF74CDD683
40D52E137B1DB6FF17B6629B871F0D3AF01E55645C56BFB97243ADC4813F842D
E44CD9352178217879909DFE3C012CF2809984881E57668BFAA1644FA922FC56
B0B93D32362BA966DDE41AE6A21FD20EB82747C47F18DC85145900305F388143
6FF377B1500EE02F9B9B8774237EF1899A326BEAF8EDE7CF319D42D7B7B61296
2A9DC4B8DD8DD87504652967C679E5629FE5449DD1BA7DE9ABEA28C4E2496F87
61C0638E0F7508D281F5762ADE506C2DA47286A8A2312B11DE4B488136EDBEC1
4C5256B9940F0800E6DD26001BE1FD4BF642AF9525279536814044F4AE7DAABC
43A230FDAC3D9FF0B8CCCB4C1E7696D16531A5EED36C30AA15C66D5398C145AE
DCE5826302220B185F12F8DC154E4B79B163C08F53AE78243C52D4E02E82A4A4
310980801A463964F3A0BBB90D85756EBB96B5021481EA4E845488B79682BD09
F8D07481630EC3129072AEA5778A135D164A571B22D1D619980E73841F84F59E
0500496E84FD5E9A7E4A28D9EFBDD34A443F263B41A3B2076595CE2A7DAAA94A
4B95D7E9C281194A84A9ECEFEA5023317F88FB64830A2CDD5277003D6F1D46A6
DDD51B3C62188C66D7D12CE54F29D09DBF020D89506CD1270C0B3EA235BDEFE3
E24373517FF148B2CDA2B90CB5884440F464CD57295728A8AFB1A5C97B6B8F47
63D21E005D89FAEBBD7D8B06F3FCA5D7107E8B918D946E250F561E5E394ACA6E
AD2890CD407F38C53B3E51C9FD432F22202E89A91B046BA4CDDA6E23B0AFB2F7
9CA39D61350D26435EB900ECE26C5AFC283144EA933E003739EA80DD65A63FD2
020938E02C1C72FD8A4A14DB003C5D21197F835B183FDC1269D70A0B14D4F9BE
76C4CAED815AF7DEF664098CF1A167444F32FDE1796595709294CCAA488C37CA
EF08DFEF5DFA13FE0CCA32024C378A87CFE7506B67F7A6FBF8635703C7EFF67B
9F15A7315285D2565D7434FF3C75A20CB3C1B57AF37CA806711890C1AC5997F2
1A14E7523CEDB295474F36E7AB3493706076D62F4C407BE252B5F31039CFF52F
2855C8AF27ACFD99EAD434BCC277A4805E6F068CF203053B151CD82DDFA79D31
F0B4A0485F51334BDF5CD5E855A60000B2D49835C34DE75CAF4932693BCE009A
5801BF822C193040C8E053C3F1EE0BB0AAAB446819939C850C76B37EEC59A516
F15F22949AC658037300F1E113F3BD1B4F3ED7F9F55C21A04F1A6DF8168FA228
6D8C7EB944B03F3907EC73E5B4F9B71156B357F62608909B7E4BA8223446F5AA
B34189E5C5ABCFEC51A249DEDC76E04CEABF371BFE2347C17AB8C17FDCBFD6F9
553E8BCDA3094DC141B331BB999963089C9E8131AC54F43D9D7AB95C97BD691A
D8934FBF8FDC7B97C76DF5FDC62765D55AD993DB7F0907EA177C36ED9FAC7854
AC865B2BFEBAE6EFF4DDEB727B4321E24A2D8C7D3358EE391B31E80FA5998089
7F9471F36AF42899E7278ED6D5DB95FD665B591E12E4DF06B3CEC7D015551B07
AAD8C85C6196DC28076CF4C4A1C62A4647AC1D5FB8AEBC6481A94C6ED5EAD255
0500073598D17F51C40339BBD717BA9555F70DBFCE390F10F87B5A4D7682D1A0
AE125DF60CFF05C7454B82F991CDAF3344A10115DEA01BA7890B3A1123170D99
3F727ACDC8C0F00E871C90A6175956C54E9E368CA67F79A9DD91ED489EAAE76F
173FBB4663DE44D9F0B3A184AFE75609B62AAB76074CAA13A2355873BAF0F0D1
B5262B824ECCA9A0C7F74A4D13C03D0948B6F864DCD1251D26551CB2337693A4
3B080FD17A292531B5F5E64B876C58A4CE3CA66EC2EB0A098A5D9D4D41C9E55A
7E4EC94240107FE7909AFFA25FBE1041A54E0C8A79511ACBBD91ADB807ABEEAA
542EDAC9B6ED8F254F6BB7D73551EE33D4FD3CC697DF01C1F094DECCDD9F43AA
B88640D0E9347881AB1F62D9A8E4A799A0706A34C9C8A243A6890CE854E3EFA3
B883E515D1C4E5829166B8DBBB1DD948462957711B3A26FC69AA03ED308F28A2
3FE7A7DF7F4EE6D26CBB6620076B0AEAD03AB485F43DD669E9F6D78F7F3A3D17
9B8593FC3F87DEB0F663278B252DE788A0B966B6BF54AF8DF51679CB3AF165B1
9E278ED874F8E46362D3ABC30D65F4C45137F1848A3687D5BE45FEF3D084AE1B
3DDDD239B928EFDA00F21BDC87DD2D8DE1BBD7947B76889EF72C0DCA22B640D8
7E79D24C2B8F38438B6E4F14296B301DC46D7041C10BB06215A25BD1913C7954
B5C60D0F7BF68D98B214195ECDA182220298DBB1EB1FD9E609F1B4C62F58C1E7
29F224EC05FB4EC009EF48E7E56CA1F98D0CE749F731509FB6B908695967DE2A
007A5F489A2FBDAC9D5E5B894645DEAF72A185AE5BDD16F3039A9B67071F0C58
187DD47CDEC4452ADC8A683A2610DB6EE097EF1AD94FCD6D373246804BA5F217
1C5C56B6562A17EFCDB0BB982F75ACF33109F8AE7ADE4954D0B1E18021CFABAF
619DC53F5A2A0C89BBF1AB58C3DBE99A3FD440A7D3BC5E4EFE77037671FAAF08
633A13C303EAE11BC5E99B48E34D0C2E929AEF3C8034A681E5C185DB2E609482
36429CC8E4162D346EEDC7260000BBF6A73BCE98BB53AFB2C6694A816A7E1586
15829E59EE7357336300680C95450394AD4A2DAACA192E92CF195742D5AEE902
297EE9520CA7EBF85DE9F84D3AAA119AB947B5F5B9E5E1A0C6124B1D4E67DF3C
21F1D051AEDD11F65FE0F14DAC42A2880B683118A3A2C7C7355F5E45FB504F62
6A4AED7CA434A95AF0B24B801710B398D9E9A95138859A8193A17D1369E2E54C
06B408FEE2918DFD868DC4480DBD8130BA96CD51D02FA1999CB88EA646C764BD
2088A3EF04FFBF0B61BE229F35324501AE0F98009DA9ACC5F02B842CD02CD8AE
FDD97BD87B20D735CE102C0F60A9D44BFF1C27F03F6D79DC011146CA28EE32BE
98532AF24D5D2991A3AC877F8E16E0C392019E33F268CC072F36EF12310D3095
32C303C68553C91CE83431F239BE883C519B66952A2595A07CBF1BD05B68870A
A4FE5CEAEFF2DCF00027A9D62608D532F4F5933A228601B780BA2B6C5C54074B
89611AF4987F7203DDCE93170428CB54EFDA16BCA544851B91A8F1296749A72F
7BEA1FCBD8592BD24249231076ABE1BD29285BEA0FFF15CE9237244C917A134D
A39E567075C6FD56077C00902CA6AAF0C12EB5696A397DB7699DCDD94BB71BDB
3DB5D727DA85BB43C88FD0F434D5AB83BC9B7DE897744D2CD1E94E3A3EEE36E2
EBFC879CA86CBE62103F587C5DF7D09B914ED8C78CCF45320151142D1CD4D451
CCA2F463235BA2C069E2E976668478860F81809CE7D928D72A21FC9F4C00BE8D
8CFF4DC312E6A454DCCDF83FF2BBC7B17EF8C886C4679EE1D81DC3E988A7D9BB
43AB6E6B63E503BE0AB6A71A1D06D2FA9ED0B02168B32F6CC0FE765F2AF96246
1626B5EC47DDE14A666942B10E15F853CC86DAC21F1A67DB235577B68003BA14
073E2702296B284F803745DEC5FBCB5BDED0C269EC967551FAAC019A93A7A160
4830272EDAF5E261C77D4130BE3FD062801BEDEB1BABFAD3DE6664E363591C86
F9882372BF002C07632B519225237A100E865CED746D25302D405F0492BD7ADA
007696765A4CE85D0762327E13536498C50760182535BF238B1D0DA5C2AAE493
B2D97F55D69D35C0404DCD54C21EA62F91951BADA960055F44D04264D92D6F13
267A724482A87FB8CB88CE0C0ECCB5C070C96FB7C7C7B8F1CA0747D9DADF2C98
FE196B0EA52B4479D078E44B99DBDA167714218DA0554750299F7A6109C7527A
3D23763B76BD8F81F317A7974C5A29C373261FC67D9C9FD61BE5C587D864754B
774DB9CDC2DBDEAF1B31D8CF1437D6B136DFE42B145626CDD287909F4E902B14
59DF1E36014C5E4B546CEC445793129113559E917EE43E836C79D6AE577A3784
FC94031C64514BE9CE80266F62A5FF87059721A58539EFA64EBE9014BEE383BC
B280D84ED26442237EE2121C14F116A1114838B333EF11A87895C83CBDDB25A0
D1A489EB0BB10369D89E5E7CF8E766FECE6BFD3D847DA4F518B81FADA8181433
2B622EB0CD4AE4C7AD117137DDC1A13F7AD8BD899F9150D97CB8BF6E77DA0A0A
BD46A72802B0912C5C20B3BCDCC053DAC866127A85D3D37535EB04FDC8F5D9F4
C526815BD2BC47E36D2CFE3CE783D1708C7B09F9A92B658455FB81B767DA7E07
50770213BF6188DC183302136FF6CC18ED1A45D5D133019C4ADC916AA6F4F5FE
8A642DA2E54F422145BEF3E6526AFD58333B551D1907126E0FF3D8FCAD4797E1
2CA1757A9B630AAAD6F1CD463AA8E928FDC8155408EE4D3AD3BFED9D1DB31CB9
069D9C3FF5D78DA7FA71DDE465C0D66A993ABAF34BB243BC19DE3909DA113261
FE646B3B9FE10A0E27F605C0005570FA47070FC79D81820CAC77FA44C3B89C72
55A4F118846B7570803990AA1C1666B68CCC383E5403F0A734ECAD86937D32FA
CAB278DE94035C5AF7538DE81B5B4A7A4AC5F69B87DF1F877DFD7C77E8A28931
AC48A54635501C98C38B816811216A3D3A3F46401469C834216DF6E346AA93E4
203538720A95874ECEC5C8683B558AFED820387436E05EE2FBCFF44CFB953DDC
6288ADFD74FAC115C77370504EEE4A84753C33CB35844961E68842CFC30E62F3
92C5C166ADC1F3FB1559C371159F0D61B7E1CA292AC7A96CEE551D9189977098
F67A41B02DE27C7914F1F0A96E74D38961ABF1146F5E771BE54B09E2D6EBFD77
645845B7C08389FC49DFC204AE4868012441E36CCEB83971E3268925E47605B8
7766998E83E5365136ACF7F9D099F66AA8A0584CC439FE263FDD04A29FDD1974
485126E0DC86B790B2388ABEF2807862C3BFF8017A84BA6BFC1BA5940ECA3071
C1980C466DA9C531E1F1D1F093F794EA44C40A9D57214DD89FC8C589974C5551
3AE70589392CB5599C78917AA1C2D3D02D048B943D50B0081B2AF62392F4313D
144EBC7F73BEA16D73BEA8CD5127E5BF5701F9D4D8E417058AC3FB2F3A34AD00
EA828769273159D4123E00A6BBC3134E5C47C34D835DB493AECF6389494276FD
A4925399C22D4924000D2B35448E633F319D5CF793DD6C37FFAB63689DAD9B2E
82A7FFAD8A82C46149A381494CC9A9FFD3F9A0EBCDCED96FF1576600F1389BAC
04F9EFA7496374CC886F5949790A7E4B850B6B8E31EC18B7321E63AB41C5D766
69DBD8FA9A0CFC2D221EE4C0BAF1C49F2B485A24A736A894F1EBAEAC18CB4B7D
1983C85DEA0EFAB36D1CE3F1A80BC2BA01FAB65E3C91AF82D5201412387C5C3E
DACB7BB8E5682658AC6F300ABDB95B176FE85484DB0E94CBD27B6384116F985E
D4FC0CF7A1C204D4BD2D6AE28647D8B480F14B9D9A5B20898C25C34DD931F1B2
73E3A94B20BB08490E8968CD02762CE02CB727B8B6F7FEED25B1A51E10221B4E
F82D270EF712C303999771049F6A51C42FB9B6A9C4362429C2FBCD39A24463D3
E0ACBD81605DD868C8F663872B230E921494B129F80EA04F868CDEC533A7F975
9BF94C667916F166A4AD0D7458BF22EB926389B997E7182C83525F3704A64316
24D00AB9AF9F8EB2E53E15F94647C5EABC7C20BBB90B79A821F0377F09852707
B51EA42C0BCBF43D12C109FA7F552931E2C9272B577AD0616D09DDA2A16584C8
D40E7F673FBBD653BF01CC178DAD3D35670F258C5D392138E7847EE8F522D480
9F6CCD8766C637919F05E3BFD1EAC2B12D952D9B6CC48999B19367801BA59E66
0FC5B2B1E296511E8FB28339DEE85CE619109DC5B0CBA8EAA63129ACF3AD9459
AC97AB16CFFA3F66FAFBD0B269C85A2743EA91492DDC2F0F3FA60911C921CB16
4D3E4DA74037035D226F9883B68D6CA9C60D3A774AC7448624EBE6A7D0067E35
6F5FF40C89B75E7FBC53EF85680076F0A90CBC58D0632E74D42C3CBEE053515E
87D6C4094BBE3F2AA63EF2CA799E15322A392131FB96C14CCBE65E59BB4D23F8
2F2DE3EF5F034ECC85F78DC9DFEC342E27A763669EF26D60529E8FC6212DD2CE
8D723DEAB785CF0E1806D7B4826D421046FCE4E987E770A4A7512B5276E36EC3
072C6DC675A2DAE6040C150F8FCEE87A7483F92277B32B4863B8E1579B599829
376AB867F43B2F6320B331A6EA21B51B03F280136F3A2C060587C6798E098A1D
4AEEFA5457E09B1C60BA9D54EA09C0E2FCE8507F619CDA4BACFA4A91B27C809B
7735371FE5A2F54624315981DB9E59213A11EDFC1D01EBB4F43D271F5B16796B
6E9FCD7713EFBAFB09A6CEDA2DE760A98868ACB45CCC8CC2370FE267830A4D0F
2409A4459BC9CF7B2BA769BCBBE17E81F552B601EABD3DE0BC0C3844480A8AF0
4EFADF5D4F908165B1838DEA82825E379F4A7EDE97DB40ADCBCE6D67206C7D11
79F265ACE1585E331A8F8B5AE06FF085C1F349215584090AE7EC27EA837EDAF9
DBBF7EAD3B2858BCFE820B4503BD5F29999C7A0E3AC55C7435402D28F2E84D2E
E64520D20DAE1D863047ED474E472430B205A38708508E366309BACD4A217669
C30B543B9CA91FF11E59DA20A8E9CFBBA5CCB1A9DAAF125E79D5AD7DAB05959E
694040B3A4B0F23D344B5B3F2A805F8F3BBBA4BD19649A69BDA0DEE6B17CB6C8
2D7263DE921E4F22630D3B3B95B790F3FDD35E4640BC1D08E083BA4D822D74C1
473FEBC4F1851DEF7E13C4711484075AAD24C10874C856F4FDA49C6389BEF3E4
1B0F3C4A5DD8B590DD235A5E32DA7BA7C5416CB1585074A85023AAA9730364B5
B8B54C1627D63C58C1BFE6B6F2583055770EFF67496C00AFD0E4B4C9307FBDBA
3C5FE93DF12830D995534A8D82E4B822F07B115A331A3BEE244542BFD2849D49
8C239237ECDCB23458C113C2E75BBAE92454507BBAB460BF0CBB95B97314FBD0
DE871581DBF1739EBD93CE53DF85531821C23E4DE1D2A886CDBD8B600FFBCFA5
C1900BDB11125CE2C263BE33460ECE4FF7677CEE2603269D5F288AB410ACA8C4
1E720CCF8DB6EAC00A0AD9A3D55C4A7AF95B79602F210CC9FDA0B6813DB5D7FF
A4D0D4CE63891BF0A2BB9F3FD7213492DB7C4531253BFAD3180DBDF8DEA31BD5
BB3282B3325B1C9C1670B8A568F69091BF0FBC9AD619AF7C3141F3BF49BF2C28
599EB66F071FFCE3410C547A9B74D212C964E312A2D5ADF6881FBD66D03721BA
9C1B8016258F5BE116B1B605357F60A18B6D6EE4E5D1A32026B5D6109BF472D2
230BF4BA6428F8EBB500802B6D2B8A73C45807856D80A2EF8CCAE1564F2D3FE9
ACEC391B579C16BA1AE8BED36EB2C52BA18EF531DE09B52B7093D785F43B98BC
1DFF4721707ACC1E45E4D50FA5D878A7BD6CAB588B84CB37FCB36482DF85E9BB
4725630BF0B5CC539DB1312AE27EFE633C28A2F142B8069EA0BA7A8CE3B177F7
3BB5805D48E87054CE92EDAD3E4E503B07EC3DF25246FA9100A7BCA663C43289
67C977B430B63CE6CDFE50A0BAD205E6A62F64EF5974CD8E25A6906CAC83605B
885A4ED63F4BC399F6BC4CC2760F7973D6FE77F7AB2E72FFBDA53C2377D779DA
1F0DE6FC09910A13B23860D75CE5D4383FEA6A7AC505A4349861F3FE8BCDB2B4
47A5343D2F42500A28A6B2126EC9DB90BA60D4F0CEFF050A2D0C361DBA96475D
3AF367496E34A2E63D693D006CF3E86C24F49D200E2BB4A8AA530ADF5EEB2DA9
FB58AB983090B83B89E67D5EFCDA9560134AF22DF5DA92FDADFD2B6BCE818234
2AEEC5762713C43E7E94884C06329D340EEF7131E803A7E943672A1CD5715F33
9292048488706530FD15A0614101B04CBDDA982E68D06BEF3405EEEAF0EB2F2C
EFAEEBE5F14FF089AC9771948B6A6CA310BEC37379CDA9B76A56A327053E0F6D
96D1C2B699867EB1007E5DC5EA6B562AAAFE1CE74489C9049F0F4999FC5108D3
0E0300F41101A7F4A280ABE1C7F736EE916ACFE714A6B9B8EAA1C995B7D1A07F
F0F73B0283C8843E9A3001BB96E55CD0C1369B201B4DA7CE2B7194624D33B425
27A37458A934221765FE0CC6A3A745FEB2C1986547967104C20BB07933495A95
4F676F7DFA49F81BA6B221FAB4F9BE46875FBB75E16CFFEB450CB8BC91FFBE6C
83D561EF669E58F253A769F6124346CDF97050E356F2216D58A6C06EE1A99350
025F131D697CC0ACDE8CCD15659B544FF00AB76C39EA6587B515F5CAD0858001
D0F08DA33F15A77A5BC024835129BC973464E42088642FACFD91D0DA472B7A12
45FDA84738BE165A609F79CBF49D51AB8BCF5446C01C12DF0BB6864399601696
27640B4ABA46A9C504E1D3078192F37463DF15E7FD87D172622D47714FCF9186
9575263C4C2DAE8E5FD3CCC8747BD12E63220BA21FD9E81986BAF8AFAA241DBD
42E7FC2458BE65CA6107E74C1638DCD31FB2283B5F192975AADB6E27FA797874
CDBB0288B81EE909C1C6481A61401BD72C146D133AB705B2C95F99B731FD6966
0310783BEE1DD3D04EB580E039C2A6D3663AFF2DE36A2249BFD2DF460161D3EA
5C1FD48BDB642F09E20933D1022D57370B9BB48DBDF15D0CFAACE523B36A2AB5
F41BAF1D6771576B4D367AA58DB75319204D8D0EC8AB2AB23D244FDBEDE09861
0F35EA1270FE584EFC5ED60AF6B276713EF5869F582AF9C2D268844EE86B58E2
8A9F5670A5A21ADC5159077D035218E54FAE83264251DE61694597FD026472CB
F13D266D599AB1EC96F5B69456110B9A8BBCDA8551C3C14F979F3CBEE18F1B61
D9AF69A47DF33A789FF79255ECF2AF644EDFEA8330A2283B586870FE655D6308
126DE32C494C6AAC602AF5B9CB036BEE99855EBFA4EF4B7B119AFB50293D843F
7A4E04BBBB4676534794CEAB380B1E461C5432ACA19E2F156ECC4E82D4CF8E6F
87B2A2DAFC69673E1FB81997633C312BAEB63990C31F1EB7DA809BE9F612EC55
D5A9C1CAF14A0F012805FAA4DE2E937E03744732E3FC27B12CFB717869B7EDB6
649D987B1654AD20D7CFB9509DA585AE4898298C84706D59C727C55EB86C8253
596C70E8AE60AA436618C281E0A0E3B3A9303CC927663E45ECF5C7965E5E2A13
03E1863D4979A4D16E807CF86488DE041D6692D29D19C4CAD31A9169AFE4B6F1
293846B7C544718297254186940D6305C96EE2B9E3E7C9A622D43076C7FF8258
27FE2A6C008801304DCA2BBA8F01DFC24EBA89793BC051BBBF440365B4EACB09
32EDB316D35424CEE4FB1687A50867043566AC7938C812D690765D2AAD322BE2
E7EA49AABA75AEEEC5DDE1D8BF68483C3D2F616CA0F6F9D726CB2CD81B49A9F4
7C12FF76284D3B0E49FCCC1041A6FCD1E20CAC60BA728EE459CBFB2869BE3566
AD877E9208260AE6AF24100E2B365BF89C5B67986633AE820590CF22DA6BD562
1A494EA63AB3321C9FEF1B6401D2862D912B670A8E4BFF4C49067AD2D7F96127
78739907C3E14616874AD27FE89777BBAE47CD1B4DA8AABDA0113472B8A6F118
86174A37BB8BC122F8F3D7EFDA0CC4B5A78173F07E3FD7A174C40F2366A89977
6626190CCCC3A752A37735B9C1F81610054A54D7696562872BEAEB44D3903FFD
37E0BF9115CE2FE02D8A3FA89D55F8B4EE3580C618C1814F112E445F32C09708
17BC405BA17A8DC92C1620641CC75AF1F20897BD0FAB1B2FD02D8858BD9EAF32
1A2AF2256EA0675264922F9A98E6FBCFE8EBDD09F60C7E4966B4FAEB0406B72F
8FF605BD06DF2FCF59CD95FEDFB910B6371422CDD07263005CD57093D705D445
AA4B08E97B5BD3466C6897065446F765344F395FF6F56CFB6FDA12DD94D5837F
8101D3D65F56FC7F03149B9B7DF58324AE6E3B639DDE323A6EEAFEA964BF4076
068AEDF0FFEB7DD80B2AF0AD023ECB8F8B6686E678F02CB217DB07076D4391E9
9DF321D0D871A37C34F2091D7DB7178BD882E77D1781093F956E26F8437E9BCF
11C6EB1984E30EC73AE00E97EEB44B3FCB53808E0E4886406A9D33DFDC628688
61B6EA02DA05D223700B79E4CE12D3C314505BE94706322FD8812BB27937AFD9
64103EE91B3C44DC05BF90F7E1C0DC50899D11BE76EC06EED3099779E5FC0575
729CE67A777CC63C4C9E2FD5412246BAC474C4781B457EDB416CEFF6B6CB9AD4
F9A371E1CE10D1447846216EAA9017CEAD458F7A4D93E623023908E9E810DA01
91D78DC4590C6F4A4A6E856625268517B9480A1FA7EE5A3EFD38C40BC331DA68
9C88D488A05BB7FF49A02C19D15ACB2EDAC4132FF682458C372C56F0089D820B
417C95781BFAB6A0D8B08715514B0FCD8B218F5D6F402974C4ABDB3265849FE4
C4DDA6930768FE6AFE6D28C37D65824F530A6DFB468D532C2D87ABEF72CEC766
81F8FF7ABBFF2A12FDAEB449EBACFB570D76D01209F22F4D026A3744BF5BA2E4
509336B00B60CCEB075B7A849768E3AF8E18EC31EF1282DB5560640BB17710A5
ECDADB2CDB17ACEFDE8AA1B618BC61851AD5896ACA01B2989993D432EE93A758
60E50752896D831ADA61B11F5EC2A7D2C1CEE14D1A67BCB8CE617B764818176A
2720844B18EA91B95602F465D1AD44459C0B6301B1902F233736792B3CCAE73D
EF3F7438E0E130C03711927D4E8BCF6DC82DF9608B80D8E86E8DDFC641A71C9E
0244FE096571F074F07CC1AAC1DF294CF5A9982514018792CA5E16B365ED83C2
4C44A68CC2E0CE3049606D0467149176EE154BDCD604A3A3A5769147F2341452
34D9D6EB4DBCF69EE93965D4CC8D86D95693B04644EC4506909C1B4904CED6AF
B3EA913918F7F9AB043708BE502673FF855FE49B1B3DCEB358E59045747E0164
0867A82845403A4DCC892D2809761DB613442B58C7A2595EDAAF9896D6C10980
A09DB34E084C8A754E31BF57102DF3066AAB60C5346E0446E0EFA5A948531F89
CB6FA0473726E1F3D6DA978D71BB0A50519CEC6E1EC23F475ACAFA3A1CC72F7C
D60952852C53379530E0A6BD411EAA3DD5D71B748F6814D308FDD1F2E214177F
B453C00B249F51D04092795F2EFE5D8F7E4DE009307129C04F732D4405A8DA2C
3ABF2B3E9255B1CB006CEADB9B9B0FA5B6805A9F7769C3FB1EE4DEB7FA2E6C74
B7B0FD749F1BE8235A5FC9E2821663A5B9ECE9F7A044C3775D3A1BA43AA1AC0B
DD648BD4985112611A61E9A0BC91EE0DBA5A65D0367FA04BE436D92E1D980CFF
D78371E3B56BEA2F73F484E5CF75E9DC90AD1FE38A6A175563D9848ACD3B1C76
E9E0DEAE85DC7A673BB17F6DD0D58ED7928C5B6B00F617F1B8AB2E2A5D69DD11
F6760850FD87EA797B9231E72D0B5C6C21DF6FEACE550A42593EC6AC7AA8B27C
FF05C50D710572B9755DD5E23B191D0F4F6364347390B355E5F85B449A296930
A074E05C82101A3AEC9EE2CFAD5144B78C30DDB18D53DB226FC21A99664773E3
E4AFA69D200AE2AE695674C0BE048ABD7D334D4A2C46946F570C6118915EBE78
7DD3F082675FD2C53652D20A78F84AFA88CBFE8A2DE758406C701EC0A2E7CD85
8C24BB8A4703D4D84D1B7BFA5D342C1F9C574DBEBE5FA4F63BBD7A6D35563B70
55E16394D78CDD74A0FBA343AB7090DAD70223B199F2133EBF300D96657ABFBA
F38CE72C8A833D3C6A937A1CA321B950C8CB71D66E45C9986C6298A1D8D41A5F
7D1DFD3B04EA0BA35F1EBC62C3043F683DCF8580B1D12808020E2E2275BA97FF
BB0AD2C5BA7EF9CC64977116C3920F4479A729819AB872F18A2FE15167D17959
E993D4FCC84A43F02E224A54E7CB5770B8F2B3EAFEE32CE2A7626C25265B2F1F
AC587D68CFE9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4A2DE9AEA203B209385B88D9E708FA615ADAD672C6
BE223D5855C0F6753649EFC00A7683A9EBCDDF1610B2D942987DAF090BF54FD4
E7304082BF34EBA0169EC3F6190879D5D8DE05CB5C6CE7C2212251BFE8824A87
3A277D0CE8C588611AF4987F7203DDCE93170428CB54EFDA16BCA73256C1FF85
2C85996873C9487906AB70DAF5E4FF2EBB5C7489358365EE072EB45FE7328E73
5D241828F39C98E813E0B142027DA0842BB3BB3A4EA8DE8EB34BB81AE7BA9B29
193A289A9EA7EC158512A268417204F047097E042BB52BDA0AA3ED16B4315244
E3BB451A99B211EEA2F1CD0A5709AC8CFC3EBA9A0C45B48925B43CD4417517CF
6F42243C234413756CA68A0F125A0E7C1CA1F6166685C3FDC27532C931AC8B86
E81FB0223686025707E5A69C6BF3D0C6660E636D6AD25B03A44355855B2712D6
F84E63A541739B3F161891F0FEF72180DA1546675AE16824DD84B6CA375598B6
C439A2E90E30B7AF6043F860D5D548B166C25921D8DDAD3398299D23D94203ED
FEB2A8899B078698314F08981397316AEEDFAF486F58FEF25284B5B5618A6762
967822C2B91D421D3C8CF5D76D071D3748C32BF1C779E9131603E8C0EDE2D696
E60DFEE5F15D5EA092DCC4D49B16373FD58807C44B06016EF5E2670A911AE147
CC5A9756F870A1716B4DC3D868BDE539079576E5CDFFAC34E165C063768ED394
770CF07675657587CB8A56596847362B00E9728B7CF7F5E85673E4B8C4F424D5
94F93A6861828F6251F206B9131C951D1ED4364A9CCE5383C0DD92E3E329CFC4
E2B36E704F5A2E99A7CBCE624FD99EBD4EE699630BC16854CFB80EDEF8A6A652
03EA75BF1416D23DA37B18363AB001813EFF029266FD7220DF1315C0E76AD8D0
3FF4CAB5E5114042B951CB9E36B323D53B28643AA12877E269C4D95E1ABCE508
4B1C0EE6096E008A5C34BEA647B937325FBA2FAFA9F834FC7F5DDF178584A24A
214283F53AA2D015BF620BA5C87D84E4607F3A29AD8DB076BD9AE6E949DB069E
5A8CC9484A18CBF278813319FAAF6C66177F200389C2015EE81663AA56EABEF7
C4CDE32059DC33368DFCD76D138D0BE636CDDE883E1CB4ADF94B4DFFE102DB0A
43842EACD9168B620439F55FCA7313B67CE7FA22F861B2BE1B1041C5C68C45B7
1A717B81834A23F54E80647B84B6EAB895BA6138753EF23A95D41A8069B91B9B
0B327E651C06AAC2897A2E839E3A2225EE93EE41B03F3907EC73E5B4F9B71156
B357F62608909B7E4D0D6E6DA17D2763E1E130164942DA5F704DE35D983D12A3
6140B8DA142FD05AA44E8034AB75C30DEC81BDC725D2CC7FA26EF0C059090FB9
3A5747EDA57889E0E402EF14AE8BD323700B083E6FB9B54FF40B63FFEF520AE1
5B9882BDC14A6567C19ABE55F8186365B30C9002FC88AC0C591F66241ECA8269
A34B5441CC0CF92EF7F66E79D3B2B7687683D34954230DC6E93A7772A7BC9056
B27636A3AB7844D6308C174441730ED96BE3E09FE4561AC4F28A2C7BEDD716B3
3B820BA74356DD9FC8C589974C55513AE70589392CB5599C789178CD1C1C86B8
FD8EF3FC186A8EA4C9BE51D592FCDED41C3662B6A487F14B9D9A5B20898C25C3
4DD931F1B09E72D4167DB96B594B7F8296FCE3845ED8FAF19EF067F6572E2787
8BAEE83AB15A7D8416623122579EBFEFB21DEEE302647D68DF3B50F5CAEA8BD4
F3E91ECEF9412CD96BC9190FF4B231AA728E36BE2546E81C23F4584FBF0D451C
ACC5142CD5AAC12ECEA34351F85390338ECC499C043E346A4DBA66B7EDE932FF
D84DCEAD5F98337B73527537B8FA58F86F01329F1C4BDC2FBE36276FCC5A538C
B4A58590A3D15A7909F012E909D4F3C596C6F28C2EE0009E717CFEFBBFEF27CF
58AB01C17F7F53615F79D689B6B02532EBE773369461C682C841008292750A37
6D0398DA95DF8AA168A0A9EC40CD9E45022A81934CE5B9973ADF81D7EC966369
AFD3D36EDE20B10EE93517665826A01E9F0C9B401CC50F9B0A3DF60AF84E3C2F
621C38C0CAEA89B2205499005327DA99E494D9E1FE8EB703797B611CDDF7DB31
F62CD736AD7AE654A7A2D892EA471590989ED2A8B9CA97C357ABD25D6B8DCB78
E81FB5B8D5C70217A7BC930F472F93E247E29CD9852001BD2E16E51AE491BFAB
A39D0F2725E0DBA7C8CE305DE7C1B59DC2184E09F7B7B2AC0F915A89AB253EFA
653E29CDBE7BEF9D40CA8BFEAB9B506088DB3CF99C78613AF62054AE1A32A95B
595E32FF28C330E73A2D5F605E33B1B0E45BE31A8DA7AFFA42839CC734E717BD
D52F97832A24A6606A5065F649FE81E6B3B1E8D0ECC21206BB80B2FCB7BECB03
39036F3C3B3A2FB108872E8860AB6F67961567329F5626E6328EBE3D35B8883D
AB6FCA8A2B979837A433DEAA348233900A5BA22C873A42C13AFF73AACC425448
8A571F1CF7A9B7009077815F2D3488996A754F0D89465BD9F32B061E78C54C77
BC1DF51167138A612BAFE409CBEF302E61421FC31A29D22A5C46B2E75557BFA0
C123C0DBC44BC7BA77E553FA3B4CE88FE87326511247518E629A2B70B0577881
BA6D9347F9A8303DAD8BDEEE87084A06B962B7E28A73BE0B2713DFD32DEABA29
3EEA5ABD85A37B1F3D63ECFC9C885D638355D76EA0130CCE173653E1733940CD
BEC9B476678A7BCD0C6AACB39F1863ECE4DDE11AA3604E2022AFC909284A4D43
B90779468E29838365121EAD77DB71CBA6FAE1532A4AB7095F9B0A6F329CF352
2C813AFD3714B9A4A8A22C26D9970DF9F48A4C3A801E35A650279607C8CCD738
1713A93E5F02E55EF58E729E06BA415230C0578017DC87B4B835C7DE472E783C
F2984139C440B1826E3D41A3E8AADCDB4D18753287AF757E77D486D15908302B
0425976C12C80E4D9A88629DE47E52E3669AB62A75EB16BCD26BD752DE5BB21D
C9C7FCBF815D3F994BF9AB0BC0438C5F9AB06D6FA688C48C7DCAB3FD13EEEB24
95BE6DDF7C7106C66F3EF6A89F9D6EE68EEE45A1E9807DE85363DF1E37946025
9D44CE016453B2D233667BE25173D9C0204E159D8118F38CC7E8D94F702D9143
ED9E898E52F2294018E293B4D500F009C2ED820B75D4FACAEFA4489F2CEDCDAA
EBE72E55AB10A4980F44CC84F8DD351882D0FCBBAD99AAAD749454CDC40CBD7F
0339D4128C54EB3CC09A62F2A89E84964B2B68602D92E9EFF00404D754001050
958C69140F1F2C1AA25026527B2EF907DFBA5529A6BE858036376C4FA580E848
A60972C5B158A400A02489B68AD753AFE0EDF8A1D4870FFFA81BEED1AAF3AE9D
FC53C7151C2833C292874D862ECA061ACE401105AAF98F5204D0DC5D0A48DEAA
A63DC187868A36BE4D0A300EED51D6DDFE67B17371ED611BE4D7B64997EDBB7F
76DF9C944854063BC769DCB60B07F8269ECC9C3CBC78B6B8B645EA0DA31233D7
314E181BE22AC5DEC8419214AB037971D60E1263BF0531B1C2CBB35B44EFB916
10A25BE41C16332B2FB45C8EE0FE37548CB4E8CFD3A1B17BB03BD1095F4B6EA7
F33AB4C9A8899425160B09958A4E4E57F1F0D63BF542E3EBB946BEFAE400803D
679A09E8FDD123D7BEACD227738C9799E75EBE18C09C8CB07D857B213A5C3257
00D9B26E3550CFE92EB1ADB8E291B92D9C83E3A099154059B4C3D3682E201087
D5254167A21DF4FB6A5AD022E53DCB7581DA05232AB8B9DA4232E01A4A07DCA6
47E66B811F82F08DFAE1979E9ADB992C57D2D64160CE8C45D4BE3CC38675F817
4EB604F72A3DCEB5844A7E86EB5FE4B3AD545CF2DC302D330A414824E7D04631
05B993F5CFDB502635117336387D170AB42F95FAE674764F88644C6E5835216E
D2DD1B36FCCC468011824FA85ADAFE597F9EBA67F2649DDD2EA06ACC76A99D5C
10305A8DCA14E2F47D48B84F12D9C4E9CAF3480CF9616524271AFB296347FB55
9192E232A545F6880EED34399F8DBC47350C4C4560D8DF4183D3A57A63AEFF63
019F3BA113AFC31FA0BDF2E8E7C96506EE806011CFFE9C7725F5D2172EB25145
44F94114F1E4FD6B1EA22DB4BFFB4F76A8AD8F15B503D1B8B1111DE5EDEAF225
C2D0629A1C60DDB2317D3C80B154B7AF8E3F832EF9F9143CCD4A35302FACC4A9
CA124E747F42131319C2B08B17CAB3527A3203B75344CBD8FF10C2F189B284E3
195A26C1118A84D472BD8D065D839581AF228C8CC160A319BF4831BAEE2CB600
615805E8E1580531A3598A6DF957B18A048DE4026A986ABB0B6517F723F12714
2D077168A5133D3A807112C8A8B4D3FD1F68A5290E42B689C8AE581CE6668FB9
ACCDFA2245364CCA16643A3C1698851C4348C3109D0671951505993DFCEFAA29
DE7CBCBAF734E2BE64FF1822562B0143D35A5C72261EE53F49A7E1CDBDBC5A05
41FF5E194CEC0F3A909C9E8EC0A382A92C6EF1F4931DE0B7C7E22A39CE53FABB
454EAF6DC7AE3C09162E8A4FC6CD4741B38836CB599DF98A2469843C4D931CF5
7774E70909CBA2A8CCAA351D75182B3693EA7C74A64966DD2F49858BC351519F
C213A1475ED12F6AD62D05AFDCDCE4E33091132D471EDCAE38607B7DF9183CB1
B8DD2F0B8D82752D7110C1B6F23B6ABA33D49BF1BD7160A6A0042097301D2FE7
0F509164183C0502E692582B811FEC555145C96752D543699833D3672EC78714
CB01B1D8CA5599BCAD944BB557C31F53FF81FDD39CFCD0E8A6224BFA03E8C6D7
3F4B8F48032773BAA8AFC4CD1348704810FB580525AF98AAA049AB16CEBBCBAB
6D0FC04107C550A0651ACFDFF4FF58DC8A4CD9CA8B3498FEDD429B1B1B8550F2
219E7EF9CC6498377C1758DD2FD2D201ABC2BC9C885982D66D66856C70DA2CBE
E232AFFDB3EB8D30CE573EBB102C0035A843C4B9D41C4A6A03DF80613744CB90
1F158461DD969C9268F7A2C3061CE4536D95BA99A20C3F1F5ED107ADA1A4940A
93D2B35FF123E41619BF8224AF5287216637D2D784D667AB71B6EEB65857E4B8
F9D6695EF332BD3BAA9EE551A4B142DEF712C8EAAAC52FF900289981316BC60E
07B9A6F340CD1BB34C1F92DA7F0794B9AF93ABAA26E503301133C6EFE1B50738
BDB2E1896C2A385BE7B4FFD3D75466F1B50C4415860EED4BF3E929DF288E1BB1
BCCE88D89ADE52E0EB3643F145DF5577981AC9E0BEC73764560BE3E6370C7CBC
EE7B25FD8E586E601605E5777DD29330926A2BD1571670047BA88646BAA9D6F0
E16636DA27AB6AA16C612BA07E3E6F30AB83C9D7B714F88844A10F1BB7CF6F78
C49A3ADD031C747FA6722534BA34991AF3F1BF309ADAFCA88BB9A8C848963020
A5B15F862E7DCC78F25D7C54E0858BA701017F06A4346DCFC946394126ED6F9F
FB5D6F890545C941D59CFA44DE81C9562831CD23DEC40E676F50BD9AF7110967
46C7E0FDA4365BD3F76AA92124A369054ED88F5C38BDA87F5FA8880517429B9C
4E5FE983D4900DA4619E834957CB1CE9106A9B0A113ACEAE5A6A6B93633EB68D
3D7EA4280488512449D5D23CF6D1769138F207317E68EF2C3F555A3B98ED3007
0CE54B0FF347ED99887DF4D7213857122D75D80CA3D75F6943FC34C1D29CD4D2
B1F245E01C1F36626E3819E7DCBA9450A2BD6959D8DFD24C4CD8D9B4A021C0D6
ECB58B929D51B9B81D16D2E9C52118FECA4C326D9D8B30A01DDE65747AFA55B3
E83E4BBABA6B5866E245E496357193569516DA8E92189E7B8A0B7FF55338A74D
2023B34333EDB0DEE3A8996FAD573C57B42DA521764563F69E7D4E26057622C4
F3B4C95869C26EF6419C4C12E7A2941391819066BE33BAF5739A9E747AD286D0
1FD254E83FBDE2731167C1164288F8683A835B98A1D4AE5D9CA434A535EEA888
124D0826574F7EE6C6E5AC60D349CC394A7AB9B964F4168D6901DFBCA4B2CB22
6B7B79D0C98F360AA384A8CDF19D5E1D8457064B684F1C65D278FBCD01A64C1B
5BDD579B46E95334D964597367A2AD10641BD2BE6FAA002114184636C3946900
C72DF7CF454503703E08CFF9463467991EF6352CF26ED3CD24500143F538CB73
76977E198F06B287442D495C241BF0CB3F2CD4CFA7805F434DFBD7B555E5F91B
A5DA79D7AB6BB91A0A6D6FB96ED1A9AC8C22E1342571377BC9C4511413092358
6825E363007FB211DB3DBAD9B23E06267D9AB0480ED8F243C7A7491600124B98
4F033343ED04ECCDF84588B7283413A413A9FFE1D87A7C28A3A5C25871D190E4
758A89DC70366AD98D5D7F862F48F0854805296C03C19A04DD221C12FCE97ACD
0BE65E29994EBA7BFA669EBE57C23DA2FB25FBFCA984402DE27882B0D6E75FAF
1F0EA49BF15B2B3893392706C314E2CF2657A2CBD51A828AFF6D632592EAEF5E
F11B6DD3C8403FE359701CF821383B333964A7046250D98128EED292F8185A51
C669C2CF4A14206939359018DAA3D4FA6E88C3FB8B507F851ADFF489BFF84D0F
5B1EDA0CED4C3D2F1D57B1FC895F6D1CD6C2A9FBA36545B9F8FA73BE010D7C4A
A47A1B1DFA5DBD6CA4827C23FFE2BCADEB2F949DC6AD6A6C1101004114699B23
A83B8DFEAC96CC2FAF398971563BD18C1EA75B4C1FC380622AB54A020EE2840E
81E9A4304EEE370AA99FEDD2330BA2F38CDA9EA0AC1EE47999E46871A176C150
FA8EB3ECF9BB19DE8A07FF884C9B2A7E789A9BD47B5D0DCCCFCFF2C34E70591A
1A14D969BBF472DD0FD35AA7A2CA4B557102419D3FFCEE29301476387287CFED
D75B4E4105E7A667E1F13DE61F3DBA37AE61722F6714289AEFFD81A5C59D0F92
24DA14A90F143FA8E9E178660742054A8F069F831C8897E39819D72CA5D4F54F
A2527C9F05D84934498CB1CA294DA6EBD87A4DA6E2457CB0F59386340C9F9A4C
0BB89310A62AE967FA1BAE411E7EA01A0FC4D4097B8095C662F932D9ACE5DBC9
3A0EE01654FAA9B291ACBCF9B25F34EA5EA1DB1FAD71C69F5C5C9D103BC20518
57423CD52EC08E3B0CE768240F0E8CE9FF939E4B1A63656649F4B8E2FD98BFA9
D08818AF6D6B1C17387237FC958B971A13F50C7BFA2F130478C2A03674870F9F
AFD22BD2AEFC3022C0AB581D0FEFCECAA1615EE015B4701779D8244197CAB8E1
FEBC2FF6ECCABC763FF7C995738B082B37F823417D9962ED08A7961E7583EFF3
49B5AA436EFD876C3F70FB9B6E9F731B075C021DB2F0DC106177F0F23E54F0E6
A25F0AD2166D5588B879D35419219D12344E68D9715871C53A42F1FAB0E3B7BC
860BCFC54F567DB1899287A15A2FF0173379547D9D4D841359D93CC99F6D4183
85124758A2CCBA6604E8F72BF2316D9271847C8FD8FCE2474FE577198E0892BA
1FAD0244E7A83AE34B90740C96C7B9CA647E44F7C808B103D657353EB568D824
FD5E8A62A9926FB0E1DCFECBACAC50B4CE8CD9DA1831EC348CD37B9D56B3AA8B
008FE983857E2F142D2EACE0C439D359F2E8A6DC5EB9B6D9D3B4CFF4CD3FCB48
01A203B5177BCCF14778CF7C65AA035205A6E77500B2717C3B182971A143737D
515EC7EBDAB4AF1ECBA1C6E908237051DF3DA72DE6C083E4FDF42A54520864E0
6191CB16A436E150E02FB2831359FDB95792B2E6431DD24BF9C2AB0E6573D5CE
090C2DBDCA93B57A82AF52A14DB5E1CE4AFEA458ED232D3F24C4839AAF0BA7BF
EF50AAAE91322B434937BA7ECE3B966FA4A35BEE2036FF9C5C4239762E498A17
C7ECFFAF85013B5C541204F798245660D00FC4BAEA53ACC2539978118B095E6A
8ACB62DD34E1A0E1C92CC3D01782E74D45DD4CCD6B47CD7AB46DA2993171F396
52670F92510ACA7AFD71D2B3E874456992AB83EB16EAFBC59BF0404A36DB4A07
9CF92AFED25998FA67CA010CCE8249E41DC16DA43F79D4C8CE6C8C9F8C6B7872
2B93E8650097C6F2596885420B2B38DCACB524BE8F56A6F17C220DF312D33508
279355F50B3A93FF5A9AA6A5CE2BEE8993C4CBE39FBE83BD728E3724990B9056
627C72C577BC8C1DEDC1B91AE582EFF2AD2B9B2D6D097D827B6DA01FF8F44169
0E196B19402154F4AD4A152254522354EF68A6F45AEB7201BBCDED53FC161D39
1E60CE743E8B698E8CFEAA802AA756D266577110E20B1006DD05555094A153C5
0E9529CCB0111130410DDABEA0F10C0E78AEEFD661D65B7E4B89F61A68A6DA11
69AF4633F4C244B9A75976A9C88B7DBCDFAC4FC1DA6FD8EC1B80DE6EAC609AFD
9A2542FD6FDF9AC00585C3CC8D5088D1E07DE9A236EC47F7B64835AD3A5788C3
B5482C32218DAC009E61CB5D0C412D86C40F45A38067A3F9EF95AA52D488BF74
29F177F11CD02925F50656E4B48909761DB613442B58CD591351D4898A8AEB12
72D191659D594E2F607FDC27964213EC04130145F296A8ABE0FA78461A9D769C
699B9CDE02031EEACE32D841355592B42926CF2AC2C9B4F61E975595338AAC66
7E1ACC0A3D0AF0B6A0995FA30D388DB8266AAF65EC987FC4455748C8913FC00A
0894B6B411D3EFD92B56C3AA4FCE302713F2D03E73FC22FB16ACD4B800D58CFC
32379D202E9FE870D53EC343C11F2B4EB8070D31E6FC60F8C7961BA96362CA77
1E3DB9D81E4246BA02EFE26B967C16CC36DC88D33F56B50160C9912B4EA3DBBE
AA7A63B0279661F69F181917D92AA634E1F600C235888D9E3D24C7DC65F407F9
9A68AD7AAE87A67E396E56294C4ADFC4F456421C21CE57C3B6D1E212F916A158
580B6FC64701269B96C0805EDA2AC121809A5E2D4530B7CBC274729C142A06D1
4003C671AF4B2C83CAF58F98DA8885B49EEB34067BFD6D4B1CD777C88DFAC0FB
DAA5926EA5679791D474BC0B7939D43C0AA387BDCFC166F63AA2D015BF620BA5
3B1985060B8735BBAF51A476AE2AEA2111F06336C394A67EB4705D5E99A4AF22
DDFDBBAE9CC424E277788953475AEB85C963B6B554201B994F007A8EE703F498
74F401C2C2DA8C44148B89451FB0168B89E9F85BD1D47602C83B9677F41ADE04
A99F0F9D4F0432AB3EA1F5D8579CAAE0CBFD02AA25E4E524540BE35E5A9DCDB6
52FF0580BED4F03CBFF9ACAB4457130C1CA28838435855B0AB044D62EF8A8810
791D8613ABD000197D7542BC10E7F9CF2FDDFE83B006FE1A6D13CCDE0D15BCB2
18043ADCAB60AD76E6CCA5E6E543778DA24B570700606CEB24A581288CA7BB87
2A4450AC4A843F587DDD6C18C08A283861D5CE115E38AE2884231EBFD255AA52
F9CB59DC4B0FEE8C937A0920796C09CB74B3ECFE06B123F26F44A44A50D3E401
1D097E2C9FCA76EA594EA70E64F2A87F902F283615BA37673DFAF9E0D2ECB318
95448ED2EDD5640F536A5888CD81D75B60865AF75FA32674D3168C7EAFF2CFF5
8C61C07CCF01EF9FF989C86EE40DDAE88E34ECAF5F6E49A777D15DA87D810AC3
FFEE946FA7DC5893341815D40B5BF0736BF1523F30B484134701A876A328D587
84A92C4BCD75A6E7F80E8475793E6A0ED4F0A5D956F69B4B2ECB5B720B5CEA5B
78ED3B22D5C48CB4B342B148AA93A8CBD31ACE5D70E4A43CB0119529BB1232A8
72ED519283A94B4B5C53088DCDF8895265B973ED254B7542D9840643A543F4F6
CC5AFEBD207A592AB8585D9C731EB49F2FA5A5A6B5E003D704FC6C69086ADE17
A52A09061F578841058F3FAE9DDA4237FDDF6861387A2AAC32CF65FE36A4DC07
5DD4821E9C70F42A853B54C7D2A3108D8678E9172B317EEF73133F01DA8B924A
6AF320A298E24A387E512EF8751BA554EF5D72E4C18771D2C0F6AF4B088734E7
EBC09BD2179A38B82DD94A2C2F50316E16C3790BA720B4B548D1238C04EBE493
6BE68C2719F952FCE0E4069B1FCA4F37D4940D54DDFCF2DB627140ED8AD5DBF7
D86C88CFE8F438798324763B76BD8F81F3175B3F0DF72C174DA81A6C22939D71
95036204AD33B3D2C0AE4D8B48A2D487CD98C91C16E597A746456FC88176952B
24F1AE4D3E7C0EB2B265C86C7DB62ECB4EDD85E0E54189DA2943462CBF2A6A66
190D060C9118E755156C0414885480C7AA0DC61F197A9CB5C80A00332184637C
6C41437F17BB5F05E7989CBBC604FFCA18F18485B0DDB4E499D3F8B06202FF8D
CD698B56544751347E9AA3520A690D815BC8AB200BFF20B2977882BF479DCAE5
46EF660B7E7C5FA2A0EBCC7E875A641694AAFFBAFD9547DFB6E752561DB84E0D
BA4681990CFB4A9CFA7584BDA40907DD9FB1D71E4628D5FBEA6CF56DFCE167E5
20F354B92F4E65F5271B585DF5B7B45AA568E8AA00BBD282C676DCC96BA5764D
C678F13AE68F6564178DC036732788F61C3849543D3C75088DD2EA623324F8A4
4CC44C8345074B1F2C00C537A79FFCBB1A784959B43E58916CC8628DA7C0A761
8327CF03CA722B49406D37C55A99E3965213CF690386FF773A42C48EF4AD284A
F072BE9A8AE7F3D8EF686CFC5506C7C15F6B9D5EC69C8D84107B3BEE7CAAB72B
FB900699E6CA7B672D208B1FD63B002F2E0F5AFB3DBCAB07A8F9A07FB3455B1C
E6936AF27B3D87621D8C76A413FECD2CAC29F721C8ABD6EAC332B9BF35343429
CAE52817C005CB1C0D2451E712783BF1258D051215D5934DF2891D0C954B079B
D2977384B96D84665AF5711EC7925B7D350B4BE346E565F3EC43199BC6D871EA
1075100D53E3A6523811C0725A87CCC25FB9212ED78142D76A759A08D6C227C3
182E3AD32BB1121234BECABB2559A35F7C4AF039C7D12B6BA9169218D70EF87D
7F55676B729A5C500D76AFA2763BB34CC63167197E6A3A52517A7FE8C30572AD
06D6EF7B0ED471DB941811EC709BC61A41F2B4CCCA221C3A72AB7584D2440067
1CD13E9E052DDC7F055DDF6A6EAB9E62CBD50ABE89F5DA45924E844F9F61FB67
0F5521FE1FEFC260F3E926AE8AE9009E1F3193810F97E77202F1B53871F094CD
AF1D7AA84826A67D4C205294597B09384BC11B0F1096BB8B09A9D819066F8122
9CE2F044729C66D790E9E9BAFE9E1DA971CBD24CEFEC85AD6FEE1DC312F6D9F3
B9309B62AF4D7EF3E4385F1669CC593C7BC83E9BC020E8CD317805BA7FBA9110
845142660F556F69906E2416B7550D5216A8F41E35DFD843E6E80330277D1033
B7235B9D9F26A5094755AFA08A933B05135FF872432977E2F106ED93EFE827EE
00951944E8205963AD84F305C99A04E9DE6CF33B189D65761E9A49C5275E66B1
1394A9468B30AB81F675EA7DDD692239FC4B3201383F579BC8B0A946E84E8391
8C7C07497AA5676C08828D7CF593CECFD951BF6DD21DEFF76EE979AC3BC155D6
E552A5E95D70A7F43A0B52F06B6E455B0BC940D1ADE3C4488AEDC5005E81BF78
DA7EB6C619EB67576524BE0B1B9D79543243A433CB4BA05B67A5D8C28292B968
4AF30E762E30B604E4DE22C24947C31261DFE88A93AE4E6C759C696521C4B1AD
E33FD14670C66F070D8CF7E7607B46F7DE7C29586D1E0321559F67C057FD7902
194490A4C139E26899B250BB8D47D1AC16F4B8696193FA77BF6B4ED7BCD0F54B
EAB6227878AB001472B32BD540B24672F73A957442F4BC5752147BBE75D0799B
3A3F84CEEEC397F44EB5CF38B4F4FC0803BF6176B216B0548AF522549852E8D4
D133019C4ADC916AA6F4F5FE8A642DA2E54F4224E8FA1CFF4792BD162749C314
2978CBDFA53DFCE348FCEB623E1A4D816B85DADE28C0C67A74F8126AE35689EA
87F031697A12FAF69318771383D3F2349AC7FE93539DD4680DF3AF3420D94859
E53AEFC9D1DD75BF4A02A4E4BB5BAD8FF6D402754F0A59F7B466741F359B651D
48593E9BF94963AB9399A239A74E0C03B7D1CA4CE35D25CA28F044176BFD7625
B80223C231FE14896CC19E2DB360665712C3823ED9D1FCFF6B51EFA6D574E59D
BDAC801EA3E5A6E8C45BA8FB7D7D91AB2AF53C297A795976B7AB5E8EF52F4B16
916E28A58257322FC8F59A6B5E67035319E7CB5F989871CCE60042E3E8AE2DDB
34FB454F1FD5FD59E7DFC146AFB27C32BD7A3AE60ACBA39AB615F95125C0BB98
816531D1983A33A1BE7394B42FD72BF46E439AF041E49E8816E1FF70E1F51F02
7A06DBB52362404C8C4143749F272CA43BE6C9B5CD3E674BCF858A46BB2BB960
F8DF1BE13CC06BE30D434EE42C60407656EE331DD533FF07B5274188AB0109E9
6DCAADDEB2432FC8030F27FDB920E721E0DB58AE8034D8C75D758E668485BD02
B2D3E724B15646DD2FDEA523D863CBD4EE16455CEA2EEE2C6B3467D9AC4A08FD
88BBF11EF3B6A9B45DD69A8E6695ECF80BEC71602E0E5B7E33A8466E4A855CBD
2A9E725D8CA6BF14A5D39DE3A7ABDE2A6F2F91C5C4EAFAB848A0969DC1FA04AB
C51B7387109C1185AD5648C12F4D4571111E11236D9752D9686B08933405DBB6
07CF1A065922BC4874E464ADB3D3F07FA22542322B7BEE5EF03C87DC4C7BC4D5
4F94FAF28247662F3C670A75D4877A13FCC1C787F36A6CFD7131512ED31831DF
0AE286731904589503A4B5CBCCDFEEFC01872476101D65E487A587BE1B1960D3
0B9407C3D09FFCAD95A1C64FFBC6312A96D987072593DF513D3154E07738A2E3
9D6AC9429F1A3597CE0343E025D14171FA920BEDF8462A59235F808BFBFA956F
9219BC87F668804CDB793530EF5B16FA667198C9B4CB57F78D75440D43A1842C
41D9535EEF0550084F41554D3C3A0CC1CFCF4A01F9BEFA8EB263C089CE1074CE
DAFBB92592316FB23745EE6EE084196CDBAE8F16946D8B139B35B4AEB6B72F30
468065D1A2ABF1AD34324CF7AB36D903C5B59737BBD6C22E537A1985F09FDEEC
4396757EC9843929D1039829938E915BB220A5C653EB9FDB579150AA82A46536
49B7CDCA11A1FF27AFA7FF189A7C2D1A848795C2BC29B689EEFD40F525663D02
25B4FC16E40A747E3252294D52F199F9C7094BF0EAD8152BF74D5EA8F83339A0
A4E5F1AA194B2FC8593DE970B2C883FF187D96B9C7C7A4BF4DF6D6E015FA1CC8
6F6E109C81970839EFC522CF56EDA6F3147B3861904FBF8BEE6DB3D578B75E96
8EDE4B8D2EC13F789CF1A4AAEB28A369B4626B255FC1154DCB4F6B2E00FD798F
0E19F1F69F478CB45BC339ADC11FA69DDC5020CC3C14EACE61BCE6EC7A9E349A
F0BF0A6ADB465304C7139D333EB97012DF3733582A7B1759C1BEA3DE43B426C5
E175B059005BF2911E6A31DF4AF36B6E54543B4114855461C83881CDF494C2B2
530DB0C8A6C144DBAC1FC39DB9BAE78383486A34CEE467A8FDEB4022640582C9
72655ECB16686869E6DA6414C171F1B61098EA4DBDDA6D7C1033099BB4F81CEC
D8C88519B6A1FA8E8D9DD4C8E0FE813D368961F1E0847C9566324D17D8832E0E
2EE836DB259FEC75B3179FBFA7AFF5571CCEDD11F7C39B765BB942E979AAA1DE
3496DAABB443BE46363E2130C0EA0DF460C5472E7D58C187468AF625B3D3837E
F582125213E7FFFE5B26A1F268AC384764F8F9E19393688B1DDB7F1FA389D5DB
40B69F81A0769E605170437D1AD9B992FF3092CACE0E6A101E1F33FBA9193148
EEF22BEEE604EF958923630C1C7B9AA0F2E0078BAC5CFCE312865B20C7D9B0AC
A5FC06EEB85412A4C1699C1F1736E0BFB09AEC8B7C4992683244ED5A4477217B
2B948DED6C44828FBFBF98843FD61AAC4452EE18E3FCB1AE7D1F4FD7BB0D32C0
CC64B7D418705295AA72930096B65715DD63A14FE70BBF7EEA5114584A91048F
64BD4486E7038C3C3492C914860E06521EC9E8056816F3C3D24D701891DCD212
C9FBC402B9D46B2600BDF5F0F613167CF5BFE161C8612D66A783164ECEA734E4
3C215CD452A743AA3677BA05A43742D2F19BE31AD5366B57CF55C4EB2E24242C
086E4EA35EA092DF7815ED4F2F36F3CA43221E352FE816B1FBBD606D2EE9B18B
E29DECD2D19C0C17AC6B6DD86F6CAA313DABB7CE3A054BB979C6C11BFCC5D710
BC0C3E25D648B2B1F611F90FA12B7B13A7D8FA2DB2F4AB03FD01A267DB197B7E
E08A4211AD764B9A8D9CAA0D1DE3106460BC92E5B34A0BA7578B14A1DDD2B86E
4865F1E32B00231981FCE48FB645C36AA39D5C319D7EE734890C67B2C91387FA
A532F194C524458044D3C80CB40D65BF919B7FAE83F64EFED6873046F14E850D
30BCFD2B6A49A29126C9FDEF1D0AD9A06DB0B3D5F5707EBE31FE7F66E30BAD23
5D7DB781EF298DBA6CB1758D22EE8A7680B01DAC100B58EBE782C3DB39C27219
20D20C636A3AAAEA3274474A4E1699FCA923AF2346E469D4BE600409713AABED
FB90A4BDA29C7125A248853E26409A6B261A7082ED1CF3294F2A50FED5E82F60
EF74D2DC69A76032DF5CFADB42D19B956113FE9E1C781C3CBE645A0F2B353C39
2C7D740394E996F5C3BA6E6CD5AA138B168C23814295B0BCA19F9712930D55F9
C88123B62748256476032496AFF7EA77D133D904B7FFBB8A539A5A7870C9521A
69E792093D1EEABC26B39C6C9C9246F8DFFA8CEA79A99AB0622795E5360D50E4
3A1EC101E5DAF2E7182728B38441B5B6FE9C45EE32B5C7659AA3999D8CA1D394
1D1FF042DCB78341952915E735265413B1CB62F544C3791E2FE62B0384F81ECD
CB2B9EF7A89A36FD278695F6F2FB9A6F974915BD20B10F5554A12B671BB2CA13
98F65FD0A764A54500F17B0A4F8017BB4FF779B615A46518B256B2C43B27E28E
25E5E2D15E9763A4AF799EB15520B2AAE41F05B4B317C45A777A780D6AE247B4
F6AFB89C6C1A186EEA1CA1BC3CAE9693C973462254BC1B1501FE22953A7743F8
7829604257D87CABD63E5D229BA73D9CB7FF02A992E25157509E80F96B6A10D7
D5EFF8F0EA992128AE3DA845EA485209786698928404163ED36491F24D7C3D63
4B25C2CAB7536E3ED45EDECE8A9243E3A6697AEAC8555DB9702500AF9A241585
69F13BCFEFBC700CF3DCC7585F89457A5371A5EA495069A1DDF11DC589D2E91C
1514C2799C574F965B8E690B5DE0D85B3640F18B169B121155CC0181DB5D38C2
3AE0E328D4FDC5C2E8652C59215D05298EF4529DC47BED68A6F45AEB7201BB3E
14E836ACE16D5438B362178F30E460BBEA210077CD79447156FED518164901F8
3DF3BAA6A0ED3E1145BF1528F6BF60C4D07048BCF34879B683B2846019287CC9
C7BBEBE8E76815C389EB932443AB7C855B75672B3C002FE467BA86A8ADE9327E
54958A52991F50800BDC90F7603C5F7822B3B824A70DA042C65F687D8908F985
795BED8B027ABBD9E82CCD3229B5836092A7444313C171B4CF755A645F5A8D84
FB1C177AED502F9F054D68CB91DE636E0704E422616D69367A334E3AF5594456
DD2B434C5CBEEEC8FD3D1247F6B05A5E7A47526378D488DE309604EA9D2F14ED
40653C899AD3D26C369A7FCF5D2513062CD5C37D8B2DF6A3B6681C63BCFC1413
5382469123169802562E7ED6AE24C15111AEE8B0120DD8E29CC460BCFA32877B
E563EC799879ED9336B3049684BC628996B0B1925DEF6A8492F020E67407CF32
1E01EE8F2811A9C0AAE5D09DF9243C4E6488D2D3CC9C266FD12E129320B519D2
289DBE70F640BEB821AD49E34383E63C474FB5CE9B8C15AA315E2E1C635618BB
FEE940CE89127BD552B9E1A220380774B94A95A7DF70A4AD4FF3A6CE3B66E429
E778A1871510FB3661D8B5F4D9120A155D32DB5C681FB5A381CDDCAEADEDEAE8
FD8460B5BB21912F2881FA5136D51C41C15D5756CC52CA9EDD64727BD3BE976D
4963BA172224E2ECDD3E91D91C57D855D818C86819DA7A0A6BD0F5088A5E4131
1E9B82067883EDC8BCDDDFCB6A87C35DF439B07DA441ED1B5D45704665D5E856
22B48BEC77D6444798C06E05F9BEF1443CD00570B204F24BA7D6B5191297716D
BA03B23D85CC8B701EAA654C5EE74F40D4717E9547812B285C06A7820642245A
91B895E018395581C02D807FB5FEA260B384C50C1AA512A4037DBE17D744E661
2BCF02B2131A3CADB9E405838546045104C6E0CFD1B2CF0CE883364277D3A640
78243821C61CEFAE802744C24EC9E9FE0E06062DA5F15B505795EBF3D9EAE360
0A6B940689A9BFF81AE977229DFDC97F6D49C244B238264B5C69A7A5D1EFB9AE
A2B937B8A44FC8744ED18C501AFDEEB6BACE8BC6CB616A6ECC04788009C66F09
94F09AE084076359555E349DF9047799AF6695703A74E962DCE8A157AF5EE2B2
15349041312CE5A72C79E35A36C8A928C84622DB54069E13E5D56C3DF27EDCDF
8DE8259509744976ACAC4664352445E264612579A737F9165F5858F5643724A2
4F5D407B09611B68C4010F4F23BE7C87D76E0827D008223D09C4EB82ED802E3C
569F49D9A0805D3D273898016D2A03D04D2BFF8133AF65594A7BAAE51B6D6EC0
5185DDB06443B6DAA4B932B2A9795629A9C113E14768DEFED563830832F894A2
DAB1DF4623A2E8E89CE40FF445CDA8C6D70D1BF5C7C506FFA4DF0DB3A94ADDCA
A06C2141DB9DD9363CF0B3E15D796F8443CE0454C9EB5D2FF638F272D8F116EB
A097F38DD0FF286AA33A38BDC49AD915215F0B518F671CC6E69944C9B51992F5
4667A6C5F4E7C68AEDD5575659F50043582A0BB5881432F00D1BD598939DD488
4EB87092F8F840C896FA5712CBDF0819F4143F8200BBC991F32D565492055703
C1902004B2F5E9B7872CDA01A565B80B9C7EC86E484AFB692C46D24B67FBF903
5FDC00E1E4EA729524CA745729E372D417708234AAB10D0CA4E48A33BCF62447
CB6D22C1AB117CEFECB17E024EFA2ACC536A5A3AD0261CF023C6782ABE861BCA
5A1E71408439FEE4B7C93D8F4BDE9DFEBBA91FA3BCB6584CA7F9335E08EF8D9E
9E923C172A1C56F8BC2E55C048ABFA8D3AF363552C972649F1E5AAA05725AE76
AA204BC6DFB07D15896E4C14D8A90A3154A16BD31CF436013901C9671F77F34A
63F361C5579EC5E00C5F874C62A1A023478E0A63F78F34606D259559757BFC51
91B085B780907FBD9576DD7A964C4DA8497F4F463B9DB23FEE0F058ADDE497BB
608E7EF2980758D96643EE9E92E3795D6A54671A203090D6A3CD8BFA8032D141
58465F67F8E12BD2D533FD518C50FD183423ACA510B114C5F464BA4312D333DF
D9AF222657A909B05FF88701F71E146ED29E938E5612EDFC3AA00D003043473B
8378A65ADF7A1B2EDB906C4339D227289AAA3D18DEBAD5097326B2E601200401
3831B592AA8415E414115EA49EF71D1AC87C2551568C30A610E3EFAF465945A0
9300D9E1F088A356A9819CF5F8C3F371373F41B53BEDDE62408CDA329965CE66
0824417913834851463F2690069DC727EAEED51577F42511E90ECDB81D04F977
14CD908BDF49CB14D3DAD1051DAEAAB582ABFD65B25581E5C633EAA9EE450CB0
D387A8D8E99C2BEAD357C5C2FEA45D126C2938D3E44BBF171BBA350ECD3DD3C5
2C8772D2001C65E980728CD173FC530B6DA0DB9C19169A717F4DC319B4B59C65
6335A959D465B74109BA1843085C27C269C751AB2AF45F6E58DE8F6A911EC2EB
559845DF0757DD486736F199AD54A20D8058C080B0192B1E978C54F10F7CBB8B
CF4698217EE379657F625ADCA0370B7275EE78D648B9D9F85BB33C445813FAB3
5001566DD1EA99236F203AA377D98E51253163A086C16A6064A23DC8360D95B7
44EA92509C390C16FAB956C690E1C3C1B8B47D74A896739B79F7455307AF5951
DE4832075C4DA986E4F3D6F093ADF78BEB7E84E50F6C79C713E10F79751A44A6
A55B1B94A5CA636E2EAF45B9661E3C6B90B034FFF62E2E9AB64AC8D8E5480947
22EDECF4E579243F9CBAD79C9178164BA3805DB60EB9C51AD662B3C599792AD6
6C0477E5617B36260C08C5E2B71AE46BC57AD2FCC53E40B5C1ACE829C52914B4
44A04EC42F693DD5B218C9747AD74AAD53B52D7E88BFEAD6BC1953C9D977BE8B
DAA24B1AF96AC20A3F9D1E0043BD537A94A41BAB8DA482DA498517209FD8AB8D
C7AADDD02B6F9368BA5362185A3D2C7FDDD2A7CCCD284419157DB4955B508FFC
F2F636CDC9DC0271A9D5FBE6DB1BA353D5AE542F710A2921739B69AF06A708F7
CEACE45BEDCD84BB0459BCD1175F613C14912BEF5DA914EBFE1E4AD9293B6F69
839D88B68964400EFB94AF8277182C979E4A423BD4BC6714F6246CCC29C2B826
69376C08F49B1761F5A3098653BD01CF35EA52A45316EBBD2F0F669F51DA4612
7EBAC25EBD757BBBEF44A30051A0D8532E134B842A793607032158458F3B54A0
530A6F57C315D9F068D64D747B4FA9E9AECADB0D7DA0502FD3DAC3B683D8DC10
476651D72C21EC14F219950F42B011D9FB3A9FE077F2E6D4384BE6BC394E71C5
DB81E42B9EDCD133F44803D138396F3619557849327871EA80F6CD7D9A7C8CB3
4B040C29B9DF8963000217458FABB5851BAA776B4C613A778B833326CE81F2D5
12D2D5377941FAB08D753329CDA8A0639F3B3FDA6C11E023EDE1EE58A0A3CDFD
66025BBED8288F18ED50E1F14CA2B9D5DDEB4EA2B05513B331F1A76D61C6F6D1
CD7C65E82EA70A963F70770D687E32EAAA36B13D2360A34112FB5BF92419C850
A42A59682AB4AB53D80402CF730DFB0A760CB9980D31A333387019B63DAEEBCE
DF1024F1F9C03817F82805E61ABDFC1C570A502BE99D1A8C7C2A6C659F3EE6D6
D5F242F5ED8508E45F1C05DC2F6F62886E826B1E34FE43AC42F2CDA91256B567
B305246489EABCEB5BD3E404EFDB26BFFE04E6FCF61BD5956C926F67E8BFD858
37E01AFB35DB8E5294BFF48445017667B1FB17A05CA34FDA0613DA7F75457CA0
960E194FE3F9A2CEDCF13598FBA3AE627F8A57B0831D90AC39AA49A04943399B
5E7347F3F835B2E07EBAAC62C19663525B99F0A8D519F169887D36058B06F3AA
BB121CA1540BA17F0A43DF8A4F827BDA5C7B54C834E05C08BB18374623A45C5E
B8C4CB694CAE022782598F875C9C782EB31A620CF5FDDBA93E0E446FF61A6344
E0C2762680FE6CF95997C1A3EAC45B786AE380963B73B0F57F1BCC8AC5289426
F13AAAF4708039A5B5A267262339CE00C333100D3E8567E86C50A294BEE37902
2CD9314B57A7412DC5B38CFD84F54AB2414C65CC4072EA036DA9B0F9036CD8AB
6322EAD642F04F2FB849CEF3E0AABF6B9828DBE2FB970F46D3C22F9F054D68CB
91DE6362B4476DA9F56D57C3ABCE6BD62804CA36D4619D8886AEA9386AB833A4
54AB5D18C53458A42EE57396DE02E9BE2B1F6671B47C747D8B1049314EEBDFF7
4A015AD39EF3C06636ADE42958F9BBCAA7923ED9D1B3F218BB899839C1A8392B
18A01635AEF6C4327C784AE207BCD9C37FB0D6107A14557952BAC5C13F2107AC
D710349728CF571D54387439D9A49C7FC748658E7E8A2B2BFCB68A122AB23A82
764638AD33CE5F285F32FC4E5517EA00961DD0EDCEE6CE7F6AD035A435017F8E
DC6CAB403C796C1CA9DC0B4586C3992FC5BFED4CE5D3EB0EDD1FB7C56E0B784E
9D5C7BC8866984BDBD3D0069C8850BC45FE8000BE70F07B47A7DDAD4954D864D
8C0C7EB52CD5A98FBCEEEE87F7426B5D7CCA935CDA2426AAFF0627CF441FBA3B
AAF9C0ECB241BAF2F5BEB1F2E4C65AED3D1F2FFFC79289E052DD7C2A22CD5334
4D6E71765E00406AC83E492591F89A972F463F0D41B85D627518A85CC96B29B9
9A1B50D6CEA5F4E2BD2EFC1FD3A889B72499CDC76B695D9B66D30F98A0A0446C
51BBDA67E8ED649E9139A810A287542536E7BC3EA7E94CB5FA1FF39B1C84D09D
653D972F6240ACFA2293B3D35D9CB836E59213B117A07F92441004DA5AC56474
9731835393EE0F33D62A5668324CF84900BEA008A59D9C57DE0C572DF7A0D8EA
56771C7B51FA8F32FB10CD06184AE9C945344F0D0C0CC3D3B7A1ECFC649A6142
11EBEBA3D0A82B2000BECBACE7F841AC1F60D78689111BFA6B2D1015854A4029
E175A3427EEA86B3B7FFD2698E45AE7028797C31D0BC8658FE6E5831772D9032
3FE545D5ACF2E67A4371006220AE435E6E6A2D8E9FD907D4C79C51FA0591BAAA
D656B45F8A98120389D0C27E534344576429483FB89C9FFC5FEEF911CD270050
CE244B92FBFDDBE281685837B1058200F421A856638EEF005637C9E2D2CAAAC6
74F9A20A6C525410C073152679345240DB7C6024E885051A2C38AFFB084C8D09
9A75D89D6A89E962E01BCEE4B418533584CF6EB91BD761D60494E147C7D1FE07
70F1CBC70FD109BF1082FA1344A2C5487F804149AD06FB7AA0982470EA0B8E44
E41B80A8D3ECF99F3A56480DC3CA3990343E2E9E2F45F9BC637D3ACA90492228
BB3A5C9B5D382EAA5CAA8B67F86D9B9B91BAB43AC589AA5449AE7CC16338A37E
1CA09C899559B5D4BBA50C5BB240AE85C9D0FED4FFDB3366DE8C1EC99548F30A
5B906839B70018ACED61872E8BE53AD067E409DB625EF5CC0FC9F75F3DC29A2D
259D9ED2ED5CEB8F405846F6E03E04B174929C7B0DC200CDF3AEF14DCCE9DF7F
FE29F84923BAF76A67C84BDA24891543DF9ECA43D58112F34189E979AC363F2E
B5ACF8AE57DB0B2935C762460C65A05C2BCAEF41AA487290B1041D0278F65A7E
8F642E274124FAB71490FA5E8C70194A66D911FDA96337E764CA843166BB9AF3
EA15E529EA84F6EFFFD352B64025900DCC22ECDEF1C6E11A6D9C3507086684A1
70AA8DC30B8DB403A32F3F99DFE893163A849C6F36E4A52101FDB83C9F5919DA
195C8BAE46FEE788D3690D77CD17C22B956ED27E8CF7475D56715D1670D463CC
0686D40F8B4B7BAC4450A046353C3B610424FA694C17EDA955C783FD77FFF3CA
7BE73F1CBA7691480D037E3390F6FB3C608FF37988C7DE6A41FB1020DBBCC762
F2B85AEAD8861E0A4808F6F1115CA55BF67395E58665F64346B563DBA37FA36E
16221286E64651523B4D25EE586D21030168C115265BE5A8F1EC99AB07D9DE8B
36407D2FADC6DF8700D6A7DAC57FA333C41297D1EA5F5A1243D25957BEA746DA
9AE52507D4FE60370787642FACC6B0DF8F8E200B9421D3A398A33A4BBBB1AE21
4C1AF5B4A20B93FD8A6C6511E63001D5C01F68729CD6D6FF385A963E8AC645E2
DFB790AB1969D7308AE46CCC67D72D0A78C38DEB4D28350F30419F4FB53003DE
148503AFF59AFAC8125412D4F4694ECE22E5F745B457F5B849893722D61A2ED1
5CFD76D2439330EEE904B76D6090245BE7A3DC5CB4A60C72B62704A385C87362
35C0F76BF39282D0236E0983786DEAF6699160F8838F1F8D36B2C37824D4C023
33AB0F9A9DDD4B765D10F4EED8C21C185C9627F949FFCFA845B0AD255FCD0AD1
F51BC14642EEBE5346D52304430C1E2AA0B1B40CD25437ACAC7BB7FD7DDE93CA
08D6A14FC33E5DF42DFA24FD4367B1556CA591D8D8FA844452A6928EFCCC33DF
3D54629E275947CC298D280627C911B63AC1E863DFC15292FDA65874CB396B09
DA6000AEA0E6DB1B37F06CF72D76D460EF34B60223FC6170F5DD66C140773624
4C0990CD5D264A457C0B7D8A0B2087D1106B5F1AFFB04888664F82675A3DD3ED
0601E5F8D083AF733C5EBBA3F13B59EEB1F57DFD4ABFD20D4BC6325B8C959F2B
069A7596B1FD93AAF111F2F744C434C7EF5B7A7237C903C44B538EEFBA6788A8
5A9A6F9957642C677B94DFBA770A2B0B8180E5389A54B85BC69FF37B8CE078CB
F2DD258B31A138323C4E3200FFFC58752B3FE0BF95441223032624DF8003A95D
A1371E2EE456CC692DF7B71EAAA0266001E9305D4D6C43906892A62E27D5B5C6
93F73026EBBAE950FFDE5D53ADB1DD728C02742D0E51D69C74B36C646FEB3B75
A6480A4DA327E1141A5C1AA508F530839AEF9D2C3E327A3543E7BE8CD70295F2
8C67ACE72A6111711752A750D194D1A4B9FD0835E3B37E6F8C869A283B9B4859
42E9FC1919274BD6E9D119E8E6F31237136DD03E82DD0FF3370FF7EDEEFAD818
DED7782293A60E42C5B818C0D50CC8FE4E73FE9669F35AAFBB791034F3066AAB
60C5346E04C66F45B196BF195759FB4B2F533E45727127414612C2738A138E5C
9AB1A630AA252EC1841444A73FB82CD9F36B71E5531EFC13C61E3CF7629BF2AC
BE68B7B6FB17228BB5FD46908C44D7F207BD3B37B88B113B8C72D88AE1393E44
889DD107F682D9DC54D1F0A947F347B91D8206296D827DBB60BFB3A8F3894A96
EA64198CD4968B3B52CB0CC53AEEC91FB188F2714E3CADB2BB44CD0F3CB5FD54
9F97F9AE24B150825E2EAF7C088BB9F3AC38C9B27DF2D79A9C8F988D8A2F6936
CEBADD828895209527681DCC73DA92751B5DEC04040F5ECAC9221D163351AF2A
D600C9FD8848F979F052CE26A3EE2519A54DA73A385F9AF86EF6E3F5211BBE23
CFA178B0B716850B179347DBA9F2647BAB07A6A7A35C51AE502BF89DF87747CD
1F7E22E91860013095828F881B8FA97FE08946B80755EAF9AE2EAE070AAA45F5
B83275588E668FBB27AD854F1407EE0C9D7984C40E1435BBA32C243C0D7B94D6
DEA8E2A780F2D9693777731F47B6018CF32DB1F7AC0478F0A9D13C11D3817200
B43C05DA8960309A86FF740C208AD152E12301D314B10228C7855C59CF9E782C
FBF97A9DA8E246A30679AB8ABB02813DC1079F5455802CAB1EF7276159CCD797
E4FAA0216AA7352111D1F55FA9529D3ADF9652F109666AB226FF0D4EEF2E7DB7
91D7D60A532247D3F625027853F2BADE29DB7B1C21485F880314EBE5BC712437
3543A2C18439DB2227247B30A41C72B883603FD098A7E3C12A28151255A160CD
37BD577E68D82FB160F087B1AF2DF436612B8AA100FD412D5FFBAD5B58A5205C
2BD10AEDA0ED4B79DB8371E66E7E514629C9EB5DB46759B9CE398B143EB12DF7
70B491A1ACAA844432598487FD9219B1EC95FA761422D7F2795D522C655D52B3
FA5AB67BD68C9727006876DC67F3A2939115852582BDB1EB6971F21BCFBF1F06
2002F59441810DCCE49DFEC5A51B16270ACD4837300233685A123A243E77CCD5
52AE68F04175A07C00DA16CBF9AAB0E0128DF29000CD859409A304D7E5757C96
6E0AA12B2AC51D21AEA84ADE5572FCD9F64D2A2A040B5BD7E5031793A4E70219
B6569340B59671BD93C153E8D23F4A900FE2081725F4AE20FF5356642D5BEFFB
636EA3D0ECAB7C63E4670B912619226F73055009D0D8DF1EDA5D8D6E8CE594D0
75D896BE5F0A77DE4AFB05673F19B8573883C6B654A67D0BCFFE888D9BE718E1
9B6E55B858A515B02955A02D24583C1894BC3272E573A8BE836B14160772CB88
E16B97042C0403FA6A514232563A2C330AAB6481AE291923E7FB92D94512BB7D
A323732EBDA9294229C7E6DED97392298428EFCDF0B920817C4B640F66C0079F
EA686E23E0F62C484003AD496421594478E7550CCD1B2F6F316EADBD633ED91A
E41149C29EE10B65C84B94BDB2FC07702E1EFE08B206DD0229A2B37F520136C4
E3D2C9EADBE885AFDE8514ADC80E0D2727283C29744C9267DAD51797ECDFEAD6
0B41C02C33635ADD8E0504E1648717934572F9758EC8427B174A2F92998B18CE
FCAA0474239049077DDDB8F3EACAE865636E5CFA757AA5E0CEAB244A45B28174
4F6111E38EC99F57AD5A1601A6C2E44D2B6799B72E8FC95BABB1C72723505DAC
C79208928D4CB592FF600FA25897DD6C435FF8C63C3BDDBC01A2872419D1E84B
2BE1F9C1B521A0ADD28DB9911F7A00D44619B2B9C9CEAC40B039AB0C8DDC072B
E8E14F21E6E08B0401E723102B682022282A11FC23F3DEF204E895B8F66CF074
5CAB4068CBE0B9DF511017E77DE30E4887C0E7B8F2A0D884F8C09A5CDB304AE5
CC71BA9B8CEA1FEBE62D888E525888557F6DEEF6376ADF6EDC72B7B9B4BCC17A
0CAFD0999DB431B3C6C0C41A4C9AD82A4074AB2BA5A1B1DEA7681F9DF2B827EA
A77BCD218FC85289C8495D474E3FA5FE4620CFE29C235D948C766718394B2226
F45B8C52032702CA253382173EB76F4B020955E1D3C7DE563B0EF9EFD1011B37
3B255A74797B2ED2CEC60E1267B2A7ADFF0E32780B9B5BA9968923919D295CD3
DA706E007649FBE31D6CC6B63FC347F5E8ACED4509C0A4F0787A477432F91101
A7F4A280ABE14D8FBA38F4881E3DB928AEE4D739B5DD82AF345B7A42C65B2C2A
00BB2D28F179B9BC2C058A5471EB1FE28A210201DC113A42F615AA8C44E8FDB4
80085041703E51A80CB1353AB59CA4C7A2FD4490D7A6F79A3B1800AC3252AD83
47A2660B90A70A8821E9A558D7CAEED317FB3E238BB9E71EA6161CE4DC1FF42D
F64FB16F76AB229491D4D926FB86BF48CD0CCC200A001A7915E263C75F3EF051
4718C801B23EE9D15EC3DA1315FD6A95C3F466D4B59D9C2EE4F3D571285E319A
78F909421C31359DDB4850CBDE3446BFA1AD2EADACC64E043C813DA0CE1F389F
B62602E25624AE69AEF32464B022ACFB895544396749C8853A204FC7DE239290
5875FC28D07872F48FED69C7E564B884EB8FE09CC08E327ED0533EB8527CE5B2
AFC3DB4662B143A3489F9E63223BDD7EF4221296C56BDF9785C5680318737FC3
4302E8C570833D6493E4E0E53F9F3F6AB1879EBABD00103ADFFDBD5D8AD7055F
708DB156FDC4096748909D14E7501F9853417B10AE09172A4E2A8DCC0B8BE4E2
B930D4CFBEB9FD08A946B9781F115B15915E5E2A33809D8394DDBC9ED83B7199
3132778EE114FDAAB496EF36E316D1600D7F62250ACD35E387DF38E4B5DC807A
D09ADAD44A2DBB0299A67D57DFAD06744BAE758B478EFE5CBBAB5138D6E4ABAF
D58CC22B31D1F538028370500B480E7F4CEFD31FEF6A93EF9EBDB9F5C00CD1E9
6EC3028ADD17368F5DDEC4C26F6DE89E1ECAB22C58A1678EA936F6804E78DAEA
FCF6C9890C14F356FEF1BE1FA788335EF0647D47D0E9415ACD9A316E1705BCD9
E873051C73F24FDE1869981D8918E87AB5E523A1504B72D068F61CC25E0B22E2
649E1894286F202FED5FC1155BEF52A35B0A12CAE3DC3CD4B2E77DAB689BD681
C465D7D7A0790E9C2FF67D214E6B6497CC768DB05E7B70CD645D5B63AB30DC3F
3BB4B4EFDC6DD658FEAFE642F6F311E286573C00E3309342340AFDD4DF9670E5
2D7342ADC8EC7756459053227D9D94FBA34793243644B8A33EA33DC7F873854A
5E51E73652B90264B50DF8CC22E516C5CC3A90DC518CB551334B31801C22BAC7
13DE7CEEF020D205A4CAD10F821F886FB4496EB11CBD14B5555F3E688B8D4DE9
FC0324DC953E18E8C835DDE56BCE43C4A12F71AB2248FC9DD408A35E4ED2921F
33D101E94ED93C336F3D37D07A7E8E1F25A36332C3B20593FD88144862395988
CF3B3417A7BBD6571325B390444D50BAA99E9CA9193C157D240901B2DCD8C027
8E45C7FF136F2E8C4427C3CBED8C05B798CE493C56301E053895559E883DD2E8
F9D3C401E52940AB9AC4F0A284FB3D1E658A4306667786F6967E0BD370F2E2D7
1D2B5EE0C3F03A603A161713216AF97C8810074347A9CD1C4F12145EAF482EEF
F168D3385ED3A141583DD6ADC1EA404EFAAF8B115F12452068DD8E12C96B8C77
1317DC8793A42ED044B5732B83F5100E432D7603E143D8A9F181EE5C17925192
6CBB9146855D0C7E976997606AD5DDD4EAE075395D1EA874E34903BDBE4B4EAA
A45BCF1001A56CD906D340166299B47A10AD5ACFFDDEC07313CDEFF109E126E3
7540783BE784755194506E00B1675612197DD34000D9B35BC93FF2EFF7DB3731
D2735638CFF9059F996B83FBD151E2D0A7400D969887C56D536C4D96D26A1C15
C9C44C0B2443A912256561BE72017DD91C27E915FFC17FBA27515DF0616188BE
A55773FE4972A46DB7F4436DF8BA8FBF153088937C8E9A419410ACD7E07EE647
967525002205BDF49DE4C1B446CBE6683FADB4A111D9DCFF8C54171E3379E1A8
6B0079EE25B86A0C5C44E4974BF9AB0BC0438C5F9AB06D6FA688C48C7DCAB3F1
4FCA0F1864ADD4B589EF591764CADE1D74374DD0F5568C0065F3AD3BF8B879A4
25CED3BFA6CF260E299378AEB30F0D3302E925BED1A67009B828ADF411C334AE
1529F1D4E7D25298AE9DFF0E91873A08587031EF40B039746C1224A29D191A0F
C338485DDEBAF95388BB7F6588A5E347A760B51AD2F6D1D9F8B9CF08C2BAD47C
A4845891E5A496633FE5BA26599C52D2EAE58017F1DBA8CF2EFF8282A2DD1749
55C8C25B4365FB4E200DAB652A7F02188453F359AD3442F184C939139DE0B706
E2D56FD40D8CEFA3E0CBFB2DB53C79D16B085D8400FFC9324014BE2A1D5F0220
2F950C9406E797B8EFDEE18692A44EB4C25C7281D8CDEEFCB46E6DD65747A981
438EAD81C85FA3CF7A578FA4E16965289FE28186AFEEC45CF8F5AB034EDF79DC
C6C56D14A899C877A1F71CF5F205C8FF35460B379214C5A0442451D874ED7DD9
5F14008BFE21B9216E742687BA5315AC46157BE30A845EBEBB3BA89C638A1DE7
0179F976BB15F35792DC64B934DDEDF3147D1D4C2FC72735A21990D3894D4E5B
C8240049B266753B194C29B9313AA8F8BA1A70E802E9FA873DA5795B8F1E2A0E
B551DE3B12D5049E4EAA10D4CAA881DC64FF6A8F16F5CF7C67C0712E7D6D934C
2B9845ED5F5976D5782864F92FC6F366301C3CB452F7523C4A50E456B4D96CA7
3DB8BCD3E76A862C33A0FE4BA3C647BFE5D3E84F7092710495D7A30239E7E76E
FA9CA18600157E422D320BFB0D1623C49F3A52C46D0791E6EA881F6B3B94A74B
F81AB68C57192EE2C8EE57C22D903545CA0F731E2E46FFE447493289BF7520F9
84974991CAC7E857F71627FF349EF84074F350F57D75F45282DCE3042DC9767C
407C0DB4D0FD1A4881A34FA19A9000777A6B882F96B951F92E5D4E51D532F29B
CDCF2A201A9E9B87F2B03692C75CF5492D88F2CBBB332B75CE148B8A92B33CC8
C54E71E0755C084E1CAF4EBA9DAA36AE1DBCE0F1296A165350BCE4F5F308141A
118EF6D04BD1DE87107DA7254E741264DBD4E5FBBEEA52ED0990578F4EF3F82D
C5B0B8383ACFEE3B6938E48D3D951EE81BA9219AA2698DD62A83D27A94524F1D
055ACE49256CB0A20DC37903206F454DA63428781779115C7FCF8864BCB64F0E
6C3302C757891C27DD949079252C11CF9443C68FA1694150D115D6A6557ED09C
2D3243D21851505DD25C2852914D32D788151CEAE8F1A1DE61AB1CD657A37364
FC9786665C4E53A4606EF31C0805222AC8B236106CC41518B19128C7D5C852B2
AC48B3790DFBE03D6DF9C02645D738EEC68F896FCB285FA5D7E21AF5F8CA1DD9
0BB7149E38E23C91CFD9DA2F5D21A1CEB79EC9FA7740D7B63D2E758297AC6B3D
B9D3A9023F4CF9FFFFDF4AD66DDBFCEBE67A5946F92FD6FFEB67D82DFB45489E
E29037D78EBA8ACE3D9812D2EF8EB96EC0CF7D3400D722A9A3BAC1712AEF1B70
6104300D19993C4A2B742819BF27D104668ABE3A22A718FF6175E7AF42F09E2F
DD12D223CAA2BB4ED9FA06A32A2D92138EB860EE64DD4F1347213C9327521457
91F445DD18C42150008FFFDC9DA85E46A319CEBC4461BD67966CA2B53DB31F06
59B51ED8511FDD8168230FC426B1EC78B67DCCB9B25B6D66A684A2923C2BE477
AAF2BAF6DF94949B8039ABA5AAEA55AA790087769F46C4433B990B0AB267D383
7F53B0DE93BCDA2430F0047ECD8F3E0397E9EE664F5D6AF7AADA2681AE19E74B
CE80D725B3C0CA9868A1B4B066C40F22F2334343E3108CF16A8421B4FA121305
A1AE54DD6930796B19286031E71B6E0B10EEBE23B5D3EAC1B0024E13C0CCB254
57F48A1F25AC7EE3A0CCB8649F60957249EDD95E20DF098F9CE186CC4C1D1A07
77414CA0B3EC93B33505DF478F179C0DB9A7BD92FD6CEA20D0641AF50E8BADFD
8FBCA3A7DBC21AEC23B83E27C1F56563D4C9C5DBD862B7F1B9B2C2DD489054F2
7EED53CF4DF29A0AF1D20E42F631825BD352A227553D9E68FD8E40425CC640FF
EE3BEF3E46AA957F5D1988A3D8F64CA95E2C0ED3657B5FE28D7B390007124F78
7E4BCA6DC9DCFE97842402772B16F6E7154C570048AD99925459B26B502DCF5A
73D587D414E23FD2ABC31881204E3601B559F9525ABB154263682DBB5A4ABF55
05E2DC5AE7B6ECA9B754238731D32387352DE0107F20A95F021C5ED463B7C86D
689B72678FE867857D585ACE25A158AED63B8FE391030C50E338293409C46992
0A5E60BE73C36611705DF0DE767D7692A3F86F8D01486E55880DF0AB4F473A29
54E0735598AC1466CBBCC0A6FC6992D7A88271D6E297151CEEDA02B8185D0223
F54CF458C55EC52140FC2E3F8DD36F7F04FC8EFA7C6EA84F44E072E1270CA039
7CE074789AFE07857CD9886D8F7446FD69BDC60671F85B85C8C7C39C208FE65E
62F007C82321782AF5DAD5D29C36BF040C21CB82E3BCD3F1B331D5ADB8CF5091
1D06B86C95FBF9D83E5D5DC3CA953BB415E7A13F826B680DCD9279C9DD4A2C7B
BDFA938518614AB19736F20E623743BC6B81B78CC8F970FE5877977859092EB4
F022ED1EB5F1E82057447BD1FD2837BA49E58F8E0BF932669E8020FB501C223F
493D0FA587209565FAEEC1CAA89569AB9FB5659AF715D308A82D99CCFDE7136C
97A1F14CBFBAC0D6B05C8C570A8F4BE71C6EAC82D9A687BB4176F682ADD4692A
C17DF0F573E96B0A3A213680FA3422FFA31828CB16281037C9A723C97E1E7DB9
D79E66207B5C82D0A68A90251F8BE10CC0F9B778CAF0AFE2F8EADDED8634396E
18869541B5C880A9FB2CF3E22A7E1CB879643C8403F6EC91C399848142311BE4
EA2723C15799E53CC35B33CF858E27739FAB9FBEF852369E070AE3FDA38DC3D8
E1B6593D309E87EF1DA34020C7A9E8D092833737DCAF6C39498D77CDC3BA7E39
2AF1C7593EF5658A9CA198017B289510D008B8DF64C3DA9E1191B06F159BBBE9
A458E74FA3791FC1A124D3C9624669BDCB6FA59CACE35A7A69D855014758F38E
DBF26FCFB8DAD66072C6CBD6AA21A86228FC5D146A91079B753C8F070216961F
A82A0C847ADCC5187331D0863A4573BE520DC5E66345DC140741D2C8AA4AF16F
B7A3F50A2AD1C7B39E275111E0989C9BC994FBFC03283882E25F3FE1AB440436
7115D38CC9927DA529F8FC8E7FC55ED3858747EAAE222B1D550213BEA0636439
6D2794838A393812DA577F2F42423A83972F2F36ABC8703D5AECBE6C19C830E0
BF310C364C44C6C465F7AB7CFEDCEDA0858C98A44EDD3E54A6FC00F6B840D9F0
D686688E4E1B0136C47C04E7E646BFAC1154841F2F6B5EC9C8EC48AD1DEC0D97
E3A65C939013F386C1646CAFE072D9001B6FA4F965AA2AFB5669696B08202B03
4852C673ECC7DB0DBB2716A0A15521CFBCF3BDA6B5BD673BE8DC07AC60B192A7
F0B0E0E7B8BE31067CC1BAE1C8E075529DB164D525D44DEEE670BDE0278B68EF
896E2B0FE4E7F1CCC04D200FE34CEC934F99C14E909440B5457AE7487223FD50
479581DEF6C117C0FC3E2F617807E129EAF9B119F8AD90572C98E0C1D30AF2F4
B6F4AF0A0016AA9DD6C3FF3CEA4EA3BC28CFC074C6F25B6A1A2288F32A88C7A8
53E8D2E82CB840F0BE5ED8FC0CCF161A7474624A37B48C6DAFB92FC1F21A4EC7
894E2A0D7248E313B21251B3DB82E6E6DBAB14516A2C4CC67DEE79B9C147FC6E
2627C754B79F4601DE1B6FC0D6DB7692A30F7A89D929C309009C30F1C356E5AE
411E7EA01A0FC4D0C8D6629BC541D7616E6DFEE98F0C2A1BECD6F22EAE4D2099
911208B258E1F1DA5B86C8D277F8134D0136CA2C3D236A01F0BC578D010289CA
B6E1BD31C3757D0D2E4A3EAA93CC4045E642852E92B1E380B1F06E8509F672C6
E0BC76AC732D8EC584257D260AB9E6C50BF3186A550FAC789DC46BAEA1D02889
1BCE072BC404EDC4597F66694FBD2AD81BF68FF2E378BD8357CD1B64FE62C400
F5C62E9FC8B9E84BF464065CC9706434B1250D0A55C920430B9B73AF085CD308
DE598078BF655B0065D1A2F9B4BE5A76DAF30053CE655A7C984B6BB390F0706C
A5DD1E06D19E0E44804AB992686370EB8BD3975AB0666CECFEE6ECB6AD565E77
920BD3FF425821DAAABF4C02F7290E7562AA10DF6AD4BC9BF80F3188A55927B6
3239151CD82DDFA79D31F0B4A0485F51334BDF5CD5EBF602952F95336FC07460
2E6957DA97DDFA62CF9AC0CE6C8C7FBF7F2AD389465862718B6186BB2CF4B290
AF581A54C29D62A325714D3FE8C3DC019CC01E8738CCA25DA04ED74C02021E77
20C1A97D52651EF354733763E926E5390401ED6670E760380D13AA1E8ADD0658
2A41CF0DAB03231466CE39F8A0AE08492B397CAE82C85E4435F198CEB491BAD5
52FD0CA912D7A12E6590BB57D6D91C1A57EC7ED634879371972B69D0EFAD4132
CFB8A7FB9CF5756A44F596F7FDB2F8C49BD9D0BA002ECC78C1D81EBFAAF1C869
62E60F2B694FC5A12CD4DFE5DF19440EA35BAC078D7E38178ED36221E23ABA19
28A87DB2DC104E45B02002E0696A9FAE1DC74152E3774FBDC21506D6592C9057
B3F2EEFC3A4CC5CD2A7D51E233D97718A6230489266D48BC973B1FB980A6CFFB
AC0CA1E1FF9A803136F0D2E991E7A981F856B3FE2FC33E62EB5B506DEAC620AC
8164DFE14805FDA0610652C7E1FC0CCF314DE284F23D9D74EF77341BF5205537
2C7634E0CF214C9C7494568BA189D2EBA4FBDB82C06EE94B48F13599875048DF
2F55ECEBAF8931ADDAA40188DF87013C7CADDC2C3309492A3DB33F8E9EB23EEB
04A933B9C195EBE60A0D0CFCD9EA63D68BF541CC8CDB12539DAF2376003C4BD5
3477FC1821C7E3630875D508C658DC0A8F43B0957C4C8051FEACE2D683665627
AE2A9E519DD31BF880063D45A56E344D88A1B3427AC6ECC3614D4B07861FFCCA
D519F795EEEBE065B0FE4575C2E872B3BFA950A38CAA7AFFE06A2759DA45FE05
D46494A56D2B75C4C2EF537EFE9C11BAEAB87EED912CA93AB73A06C86BDABC76
55415D6CEE8270C09B5D1EF5EDABAD791FC03198CA758ECCEC7A8BF7389062B8
0F9C42F94BC9977FB0CDD38ABCBDC7A6CE5DC2C43FF570F11189568B9E5F2F6D
60D9D0AB83C5098CBAF49320A183B1D1549B6B0F3EE445F2E3EE3C0F379E76F7
4C7F5E0CD2A99BC2121A09FDD24977434F9A3B2DF42A250DF1C156C1C5F7E3FD
B00E6D5249BFE5781D8123F0A4CF72D34197A02725EA6760134EDE54665B021C
9B7B677CFC8628F2C27C692437FF6E7EAA212F5A9E8FE84174DBF6BAD8ACFE18
0D3C3C1F0B13A90C323ADEEB647C27595555FDAB7231D3BB20AD7DF140520BB7
56D8D9BA458A0FECF0759213898B5CEAD46B04C44DC66508A3F74A2746ECFDB9
0525A583A918D339C1DFB90CED5EB0FC05B94A23B6E6E1FC171337AC5E8807FD
C9766DC49DB36DF165E8506EE1D855C0CEA79080BB00E1CC70736B448E2B9765
F08318341BEED641D1DB07D0DD69386DFB3D8144988BA831D21DE023EFEC3EAB
42278DA9E391EA173B346DDF2DF39279E81D9CE04C5C360D7677FEFC0BC3255F
0106D7892F1E5CF85A18C47CC16DA17EB0E6F223CEA5C7CB28ED4C96743A5C20
DA6A81780AFEF209FD02965BB82EA5DF4C780BB7B6AD8195784DE96BECF95B62
5F9BE81B72C84FCFAD6C3C935E56C071FA9EA5EDF607C614359FDE1DD757CB6E
DB44AE4BF87D2B397F2CAE33909142C47C0DCFA16FBABDBA9EBDF4DE3A734D55
417D4499D2287F3F61C8B1888D966E976366613A8306E71E42B0BA6DB0E240E6
3B09A42AFA1280166BA32320E7A31326783358C15FDC12169998C520F77AA503
9D010E970C2848C91929D830BDE94E7B47ECE15B865346D956FA91D2C2028FD3
3DE94A452536D090A4E2F7572FFDD5CA092FE2119CEECBBACB93EEFAA50DC64C
2AF35ACCE17494B5C951874C54737643F167CECCA7E0092E8793E70015BFF6F8
E8BE2BD3A84C1A663BBF1BED53E17904D85DF0A7D9E501B59E4B817D6632F177
642E6BAA8B00CA7BAAAA548D35CF0F04AFD65A7E44E1003A4983682C351FF9A5
635B535146BE6FAABB489BF46836473D481D35BB1246CCF238F367F22484318D
BA850C6B3079A59D486D06EF85935F685AF1E212CB88B7154D0103A05C7B5EF3
704B16222179BC175DCE0425E287DD83DBED95F86BF10FE3E2B5313B5B467FA2
03399555124CC4DC12073C98C11EA4490D85E9FE47488CC4C3451BD48C15D194
B7A1468FB932FDFEBB8A80ABD3372BF7B61D458BBC8CB550C60D7EAAE9864CB4
353C49A547EDF96B754E7C3EB653959824D31196DBC0D56912E3DF1E368C0123
60EC5FF1353E2FC4CDA7130CBD47865E2E2970795EE44D702271334D0F869A48
C9A8894D29C23D28871812FA17AB46856D8FD92C3919755C48B4F711372AE3B7
BB1090E9EE6F7780CE63468E0AB1620CF517E98EE8437F47D2A1F30B3CF86986
E143A620190406409E997AD5336173B7433132BBA4A518CD5875BF2C0CCF808D
15B325EBED86B1CB9084DE701498E8C8A4A3E8E2EDEB61B783E128C91C8A0FC5
4A4271358133833A505F8549AFE87D9E1FB63B8B3B182C98B5B8DC46F0BD3A59
58D09D1A2CEA27D8149BCFE17BCC47BC633575AC8E776CEBF8D0A7BC63DA68B7
7ADEFC2CC8499FE18C377E448EDBB0823526BD66B40F0519F048C9CA9BAB1CE5
77EE970A2B5E013E23CB0654536FBDA49282D958844F545060C666801C182AF9
9D4A8A3DEAE41C09BDACA34DE171D74388C0E5346B76F0A64687AD770BF62755
E2E7F9C81FE8C4F9F1F2AE3B9560C9DF5FE424DBFE8BC6D819708103BB963F6F
0BDA611B948CBECD368281A39D50B6B39335FD0B631F14AC9D91A3260DFD1549
C0E9F98963FC566AE808AE20CAAE74590B3DD208A47A5C245A4CCB9D4320925A
3BDEEEC5D09AA10EC89520E27CAAB72BFB900699E6CA7B672D208B1FD63B002B
D04814195463EDFAF7DF63DEBEBF603B631AB2F750DE371B94660CFD380BE8DA
45A7FD3452FC17F10A319F42189DFD0DAA5FA394260A3496C4C35E5FAEEDE6A3
DF21370D87682AB0267EBB3BDACCEBD717AF3271DD9D078EA935D9063CF404AC
2E77E5E3CA28061F91EBC607F7002722FC0C7682845F3E4266B7D327312EFB77
0916FBAF2586237FEC5E73AE06CE637878782106848B43A4D6B5FD7D9E361A45
0E360B5B7C5B6AB81A63BF179D89686EF1CFC02368CA6979DCE89432DAFBAADD
105D02E6DE1844ECE2C0A3F399965B6D0FBE82A0D7E42CC17EC4297D7C67D824
D69A724D45DF521DF193348E8CA988354F249E77C9CC8EE4CE02F8BF12D9ACD7
B363AAEF5CA4DA0F8986EB1AED17F3C269A335DE3AC4AAA21B870398665AE86E
05A877997553822C405007B9643CFDC0453801C9F9CC4576A424C98F8E905C9C
0A191BFBB6806EEA5F544F97C99970DD26BAA8541E0BCD3195357AA6D4B2ACCE
DD68D6115E61287184386F6082C2362EE13AA21B03404AA583A5723E9314F12E
9C2F1FC536F237A32D5F06CA5583D01BA7C1651CF31D319EC3E946CFF341E7B7
05B7CA581530F35783F852696436B7118F7ED42F491F993EEA7AD2E5B0FCBCE8
6C2522310BBE23BB3067EED8B44F8F931474AAB028B22F3B9C80D003E0ABED6C
F45ECEA90E68E7B19AB87520299E851534408F39443AA946A7630D1872B9A91E
DB84A77AC0ADBE695F365835E3C5F9582E3BDB63218E339620A52776770935A6
A193FA21A3DC25DEE401092D5A147F0A784F0C5A4E1934FBA251CA55B73D77F6
B4A65D410D9F9BF7165218F0C90C55B3D9BE5338B8588CBBDED7BEA22E12E9C4
197D8F0301270BD064CA83C8F7F0DAC1AF6943D1FE3E9ECE5E9EB03B29502331
7F88FB6483084CB34792BFCC5B88D2579130A132E47F1F4EE7941C17C89111A8
912FC701E722D7FA3E8802243901F1E0386C10F35B2A9F922A4995E083622B36
DEFFE1A6AD802B4A8B1C5E1AB0CD9B4F53D76767CEBB5907ED1D4869931C5BE5
F3DBA7F211C30A4DC08B2473442AB00336285F6AC2DEF8290D5915969AF272C2
205E542ED8737891E67EC4AAD3F1B93134816B1E636A2327F6240BFF595E24EA
9E5876B333A6C3F19DA92D2CBBC9432665B57DD68379C9AE81C5C40A605C6ABA
AF2B79CD0FFAA87D27A23AC0089863179D7817BE2D621F38EA929BA06C479288
181A38909459426F0F8C746EA69182257F088300F8FC865969895654C00A5FB0
7B78CEEE258FFD412E30B39AC4BC9598A1164C54C8D9AA3C5EE89A4551F4A118
5EBF7C6DB74F19E18341C0A3D100830935214EE979CF43750B0398545396739D
C1FCB787A75D9436A821601BC0C4B25F99CEA6F18AE7CDB6815E093401A466AD
A1F1FA785C2F7C6A82CE54E8ADF6AE7587323E0FBB8CDC843B618536EC5D92F9
4E4A4101417C97FF34822E58F31233C943396EA654AA4124D577D7D8F5116E63
75CE82C02F71E1017BA2B725D75B20635A6DA7342DF114F848914CDFA4200365
7DDE98C3A778CC8CD983C77218B7106B4CA9280D1D0902B60BCF50685E6AA784
CC3F008697DA4DC266B82442CF26BBC51FDF763A89A467ACBA108A6897A46700
80F01E5A27AC93A99E3F3FF805A169831C56ABEB447878AED04272E47B605F64
ABA8EBA239BB75EC0D2B2274740EBF73ED44ACF6A36333B83843E9CDD27B6384
116F985E7F1807E37D83C20B78F0E7844697B4156ED714986867575CBF75D206
E96DF3364D650DFEB627E49183888433B42A68912F8385BA91BEAAD103061714
D187457E1169A20A4E89C7F79DFD10D0AF1F63A4D588772D7443368FD6795CC3
89D4B140D3BDF8E978195D6D1E32D8292505359CADFCC9C1AA8656DD19931F16
64FD9592CC96CF93B8174635DC0719BC34DEDA4EF1E3FDC47E40A9DC9DB850FD
BE750564B8D0080599A8E692E4EE0C74EAA167087E39FD46AE6617524F6AC0A1
776DE5FF1E870863D15B77A450A4C98EDE4FC026081092BCFC8C0DD17EB82566
F307C98D1972EB6C8B045A9C172209CFF6B8CB38E70636D0F5D792D021D95738
89AEFE7739382EB296E6C817120E37DE1EE708D997E84B9DF46218919238298C
ED39E6F4A633525F0D5A1C08E36FAAC59BBB29BDC6E13AA5631CEC597BDB74BE
5191EEEF65C00F49F9B48FE16D120014D1DC9B790018733EA5A772BC83E8B60B
622B7FF109D189A909B9F43FEE949278FE0D8E3426A84EA4E718C30F9F2E73DA
F30B7241A04F7EE7CA9C2CB80D54676CC86E2B2D3924FD979EE97EDE6645986F
A3C86E01419781370F1F8BDF0E7CC6BBB60CE6239CCF5AE1CFBE7A70CFAAE3C1
E031912478F16B0E620B673A92A8EC19E02FAB6004371D521FAD409AEF71194F
3698A3149D28F16BE908C23C46CAC6D85CFE36A8346042F2EE29D7AC8B8BC5DB
EFD5446EB70DB238F7E15FE3E939CECC1C639907102D3A961633D49AEBB683E6
BFE23BEAF3F65E5A470AE66F474A13F98C9431FA84AF4B3C32F3BCD5CE77F825
5DC20E6FD4FC4C1781438E7C4098B628037DBB73F61A98B4FE6A1D9305C05DCB
6D151A6BB1A8ACA6E54D43335BFC4A2B57D5001335EC3251A9B839E766929FD4
3D4B29BF0CB4C826F472736F2B9B077186B6D4FF5C05E2CB3BD87CC28CB0C482
E842BBF544228B3C9ECA8B00B59BF0D753D4258DAF17F2F14192363D0D1A184B
3939B13381B9B1E0CFF5571EE0C02E15F0BBE98331119ADEE8C8C6468AFAD6A4
5ABB395EA97281D8A9CACDBD0454832A27F9F36823FA990169AC147A46C290B3
E84048A0585652C724BD78B91FC67C62D5FC04877D5ECFF8E4EF92D08E81580E
2886359971C26AD80859EFBF4062F741796621F95A8BA84384FCD896E34A049E
34C9A7F772934E6EEDB56F993CA7D46505489C29790B51C2DCD9A999DA27D083
A5DC5573FF5275FE9B50EB4E5695408E1B6EC914C74F34EDDE580BF3A6C1556F
37C6DD3EFF7E568671FCC4DD4637B8800FA6EFE3E8D5DC1B40F1EB096C60436C
DC36B62A8E9CD6282D4317193DAC7120466DFC7FE1B0955337FDEE1CA87CC1A2
7EFD475F932FCE2CD96CA7B4E314638A0428338503D01C8FA5B7270E046A52AC
1278E32A87FD0BC37619430CF4791952494B04695B9F23B716573F9A71E249A8
E8CFCC28BF2C6BFE0C5032F34D00E9BA6CA82996601F1958E76174598C5C85FA
44FEC24A61E5A4F7CC0B1459E13BE6BAFADEA0F27FAA188005DCDD6C26C65462
B3061E4445DD5B885A81D05DF989F7F70EE22FE68690655362D4C15B6CE1AF5B
5D9288B8F54F0F14AA2DC6DCF64D1021B63044788DDF4DA067BF8EC7241AB532
3371EB9FC731D4AD6D3BD6A4248D095038F8C8964D31B4428942CA19065B6988
2D5EE1176D331DE1135E5425C6AFC224124669587F187F5000E3AFA578B2A6F5
35BC67B53C7938F64DABE9F5CD37B4B217ACFA775DDF9999EA535847B00AF7F9
CBC1C827FFFCA35D005DFC8F682475E3C803B83E7A0FFF14E0226EC243695767
24D35181C99C8A6924508E7DBD096DC9942DA6296EA3D8358E92C4AB22904592
38BD0D26A383C2C993A4B718E525C0AFF4938B7FA8567F3C3E27DB88AB9FBD29
78574DDEAEB65069CB50F499947B14C9538FD91FF011CB6F4D866D8767BD6747
625E216F8AF6AAE86A8E7827644C141462C820D6792E27ABD4B97044C65D3684
9122443B067727A226F92364F5B1ED6EB2725AF6B814498EFD70306D4929EE7C
9DC63EA855CC235F216BFCE600BD224D3CBAFC5C3A68138292CE5844158A1BBA
87074BAA648B722688FFD555964E6F96F75E2DD68B7BD572A25A6863FEC07F83
BA731AEDE8AA97262EC0B78213C20650435C85A30949481E13C01A40846D897E
821E4BF38C718EA6DCD84FB8C2B37D8F388FCDA0BDB35B410CFB8AC6C99D86DA
ACD46918A3AF543537D12EAE8438E1D4B711D0DBFDE942056A72156C6739393B
B3EC7D950AC870B24A053C818F3C5965257FAC9F7EE6EAD6DDF9BF7E70B54F4A
A00624C1D1644ACF67128CD696DAC45CFC50EDE8D18A56D84A65A73E8AB9DCDE
A23F47E71C242AFCA452C1E4467C8E39782ACB8A908C5EC218F405AB84E79421
0B88455A12ED8C988EC67175C2089F943106625A3ED6E71EC4B3FBBAD76E08FF
78E8B6CCC3FB6FD26838468808F67442FE0199FE01A84B71B0ACAD5F01E2B46C
CF0DEDF4CD4B320B55675EF0C9A4980D2D44B3CEA1B8AF5D46188DA0331A0507
795BCA6C2EE7E1686063EA4C9AA76611355D1CC1176ED0B9B61067C43D3A7F9F
5D358D9796DA59986AD7BAD7684180A3CDF93A16B214596B12EB7872555B2F40
6B9EA8E6D1AF8208E0516CE73F143F8BD7B62E5026B85B67FE104705B53C872F
43DC8B9D44F21CB0CBEDB05237312D5A3247740E0838C4DDC7D84B916DB45751
4A084B3A964011EE687AEBC83B2D487EE7AF00BC8DA24B945F9EFF7EC7AE2F81
0A5390B40E2F8EF925B9C9883A0B52B00D4E5227A814137130273273BF20C1C8
7F06BE7142A348D5A786587D436A5221E4CB067DC4203413233010F155C486C6
000B251B097970A90B42B7E68AF6D664E6A18665D0F314BC0CB7356B3D748652
DBCA8DB977739CC2584A9656701DAA22778230E2D5EB647EEFF0C578933498D2
047535041AE48AF8B01DDE03F13AAE1AF378594DB5DE104EB3D74860A361E3F4
A69DF1BE5C352197EA1A10545170666E466C6A09BD3BCB3A254923F6EF78F4C8
0992F40B966CF816D84E9CAD52A779A70F2E17A0E393FE33B96C7B5E049363BB
926C68F4DC15189B9CE7AA1546A0BDA749C2663DE822A796EF00B855AC4F5483
D179AFBE6C49425FC89271C57638E5A0B455819CA3667721011C85C92DA2B3E6
90C0976503F41B26247322504EA1F92B4D96DBE68FF0E1441E44BB466953B0E4
29012AA960AA19B9DBADB9000EE484675DDACF81FAC8CE8A274152C4537B5942
EBB54DA644A69937297BA32DE8458AAB9569DE14CBD8637E9322C4BEEE946B31
DB0252BE1C44D879D4987657E504DE144AB03D4AC882B4CEAF34DB0190634936
33D98EA0547B54C74696FDA483DE1CBFE0F275E61D82FCDD3EAF50AD077D3C2A
D28FC8967818CE7BA4314D4EDF7DEF21B43E3E46CB9F6E6ECE4F69BD9AA2E1E6
23EA1637EE563AB6834801DB757DF8D0A4E0B0980DEEA854DDCFC2402AD38946
5862713CF6E62324F59179212FC672B52856B424BE662E1A976ED9D353D4E6BE
4DB9A908E48303B8908D3C31C60D5512B681BF5CD94F5CD421DFD0E58CF8102B
09B0CAD12E1AA65F36785718102E54F77D4337BB46D01FB2662A627D55896B72
1DAAEC8DE90A7D2ED02FD1324A88C1C5E396AABA367AEC9098034BEC932F8097
7525676E9F313EEF69951C2A0AA2D8821A51A6727348EB7B873DD31BFE1DA86F
92577BE1B559BD84F6422C683982453395C326838986BED504C55CCCD214D4EC
71401438DB9FBF1F35F8EC1A17533A8BE1080729D8F8E8D1A3ECBB9FA4CCF4FC
39E0FD092D16C8DE5ECAA91A3889C0E4223E4776769DE91E023D79E9E906A5FB
1C53CCA53DED1F4619F671605FAC4B033A1A0EC40F57ED785FC5665B5B9A0DA5
A4ADDF6AA6425A7E808821AF747A5FE2F83B786610DBEE4F50670EDD32271BC4
2214AAC3C6D5CBD45D8B0FC144C7F75E839BDC72C00ABE08B8B7E6B12AC7267A
B1AF71BA16C10B98CC300090B0DBDA51CE8642207AD7539050388B99FCB328E7
8098C8EAABA334028459FD493EF38771BCED8E0D0C7EEB44630D5CABC90F3627
D0F1F83734CD770681B374F1A22D1BC89136051A377A689C03129E66DCC6B6EA
29E37365C046D5A17A91C44FFF88C7F65F842124589253A9868771B39AC40341
AC9F6BAD89040BC37A348532C91F1B3121D751DB01D0542898A91E93D5D4054A
6D0055E4120ACE6BD60411F01FDBB9A6593686A0FB0A8076541880193CC9B54A
1A601CAD38C80B20EDB37953452FACA48870D7D5A729C0BC642B647B25675695
A093ADA7D4AC2B500B37969F67F9A7A3517E2697C75FBCDDD23C62EDE049D72B
178249A27277D4E422045F45A358A71E4F841029139568AF4F39DBF6E70CAFB8
138EE8A938B41EB2374992009A2811316A4D10B682A739696825AFAE514F9A0D
74ED533B80C90F677CFA27BE5243B2F32589CE8192748B2830A5E06E82C44BD5
FDA44C2B97579B796F0702AA596B20ABD303D049EB280776A22D18590FE8B48E
600C1F353801A5D5B344B9525D4E08813497F6D6F5EE3ECAF271FF917715057A
AD22A1CD3435391B381FA9B54CC419FA263DA450D6ADB941C89CF6693820A268
6EF150833E918ABB83B089E12A50A70D1857EF6B3FAA5263A43DD16BC6D005E8
04FA57E372CDC75037D9B903A5B048911B66840F8125F7D3F1801E7A469D4E23
4296BC55F890DB411C0EA72CA43EFE8E2503466E9266613A1DCC1B7F6362DB27
E2880A6518C3E585EA800BEBA1858B159F91A96933F13E8107B425F413E982CA
15C53D4F93FCEC0A8052DFA77FD01A9E4F3A6364C12F827DBBDC1273B0780598
CFA6291D57179BEDAB37034C73B26AA618F253CE49329CE4B4648049569DAAF2
536C24B5874072E593901C96924F6369337E1F57948B5A9A84EF9DFA5735EA1C
26F07F9EC3D521917EC1BE5860DA99D3EE70D255758AAA179727DC0FBC61F154
4D36C2D6086ED84D99E658A3A6E7F91C982FFBF2B7805726188A67B095981FC5
0577536B88ECE7C1CE0D7E35C6DE58A4D51C65ACF321C8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D6F6BDD983146333DDA29DB81DA54F44DCF5364857E
A20DB59006F78BA077D29ABE7A537D2358B1DC13AE97ED90F7D1AE27A1CB55C2
F534E2B546BA5531AE88840CAA741A57ED1F4587A72E74AFA15F15C69046ADB1
B3B6C392AFD856716F96B850D6FF61144F6A9E51CC1B8A86A35087D4A3A37081
D7529F94493EB4739C267B8C54B3A1FC2146237C1D110D4A10112D496250647F
37A36F59299DD9529CD003AD4E0847689E519FBB2B7796420D8EEF6ECA04DF85
390E261B43A555BA97B9F30C18F4F39F192B2A2CD3C1D68ADB1867509CDA93D1
CF858DE8EC69D57E5A7BB2741F4713569CDA64AA18018935D81D1ECAC3C42C4B
6105C3B521226A3AA2ED3A5EA5FE176CE753C04BCA19E4C4A11ECC428F62886F
B3AE8EBC12CE6421C3E633443649187C8B38E5EE9428E1E533FF1260DD242EED
B955A9E3C2F73B641A68A0EF3B9E26314B306649FD15D7B593CF3F02EA2E6627
C292001D28A40628F89D0C92DE66489694C976E71D9214BE0875849A35084581
5873E4D6FF4EDA98E456F41F67A7063A2EF9ED5AC30A07BB8768BA4B23707BE8
C925BE37F7B4C8E511C95D4B61E15A9B84DB541D8D299C5C5F56DD69E7635073
B64FA376773A98E09E6A816DD71D80C3D80ABCB006353330E36963118A600F83
AF3F1902CB9FEDC0DCD19B1871455394437C3A7B477AC27F75850CFED5BDB2F0
71EB6873264F76A5963F0D97E0C4887DEFAF1A5E5016CE039FC62C37DB28EBBF
F30F651543A11127279FFE3AB5F06E440720BE08EE3F85DDAF46CC4190F93B9B
749C6AF33D323C2211D5ADB7AEC6905E1E94099DF34C4CE52D95FDB6A8E7ECA2
A07D4200535F51BD082591E896938B584450D9E008CDD0202DB1B3CECC4CDCCA
F87401373886FF9BFE508C3A751057316CFDC6729F65C26996C69E6486DEE35F
247C439B8FBB6A187926694EC48CB03CF1EACFD31FEE3C7AFFFF0C5E0BAC7583
F21FB6E4C8D2975DF55D9CC0ABC55E08BC81772751BDFCD4A1FEF82C144BA8DC
FD22EB1EE626D143E2530483ECF9EC3055FBEF738582004DC27F7E8E3BCD4513
9706F68286959C07BDDBE793C16F9C0CFA569344FE06F0B093B14CD9DDFCEEB7
BA24A8294C452A3E6A6E801FDD83FFDA10EF926255FD030246AC687884A3547D
A00438951DDEF3CDA03C46B2C8DDD315850235962879E04DC0D62F8ABEBB427E
01E60CCE30B0F2B691E3A8C1DD510CAC115E06D26A9BBE52E1F8AC594D1FB97C
C66F87A5FAED84AFCA8D7AA9FD3459A7A0E1D38EFF958AE17E8EEAAE67A7B343
8B6BF9DDAD0CA0F208E714887CFA684183E6C588A9581C79E063E6F8C16CCCAF
7D31955B4348874282130A00501BE511BC18F5756C90C15124CF46DFECD56CAB
B99249F730E3C262A252D3D0D52BD2C36C0277B78AB9E47A9C98D4CA52DEB18C
09C37D1333A89B440F7D02D0122EF082DC56D8659AF6978D929610EBD7377CDC
F10ED0FC09AC4A77404511789C579C6C0079F63DE952A42F2A105C8352BC4BCE
137F0A3BA0DAAD44D0DE0D1FCB0F2A0B2F5167231B9F444D424CDCACD9224A99
F5603B4F07056B32D7EC92669D61667AC36F600DDA427733BC545E7A0FC87AAC
0C66AE06B2ECC7EDBBF5C59CB1A8092652C9A66F3CE0F674F68710F218E2F689
6603072ADB7A5294C22779301F940CE9BEF8F903AED5BE9223C0B4892B1F9050
4968788137267589E2C9337234BE27F76FF30078FE1FB9C29B50F26C354ECDBF
7CE01413A33641149AEBAD547DBA8D07FCF23F0156B675C487C974E83B697896
998D0AD8ECA947ABA96383FE3AD0822F0442095C435FD449D8B633BFEA89FEE1
487F472EAAAADD75849F6FEEB9AAA211D66F6A9E5471698444AF1FB8717A4B7A
BA17B745A0B2AFDFA9D2E23BAA121241064CCB054F952033E3860BDD2A4C448D
3B84C6F76FDA5F6656A933CE50D43E8ABD17A57673DD6ADA204B98823B357A4F
7FF308AB9BBC1A58F589DAD5F2AA00C98EE7B96963D24265EF84F405800CD737
0946C83CB9505789A52D15747D60664DA99B4AFF17926E16F75057AA99AB641E
919BA8A514AD5D06DE371C8F575AB03E3BF397BD89DE337737358DACF0B868DD
7E1680F779DA16292804BACFA34715416A657C04E5F9E2471E1C88F7B748602D
C6196DFD26AE52F9840DC0EFC417FDBEEE119CB226154C70F061E70127FD2E51
05E3499D8F4AE3487A9A52CC785FEE4075DB213B0E2AF386DDD08C9AE66EB7EB
A860431BAA0D144E02A88CA3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75B6B271326A2E7B313EB4598DD7FEA
4A5D95437CBA46D85A5EAD76FEA956126B3EEC337FF78D906699CB9CD7B4012C
474EB33D12DFABB3BF569214525DB9B2D4B34136FDF936F96FFC813FE16DA5F7
9B0F2B3110B1F8C90170E014FE8F31A5FD35CB74EF0FA13C6DA74D7264618562
DABD7DB8E7F480D0521581902848649AD3EBE39E618667C59EA499B7081A0844
B6DC10555D27819E6CAA1CE453A7A68EF1A3EB2178BBF9B9BEA9DEC679DC10D9
E3553DE260FFD590BEDC71CA9AD4AC12B09E86D933AF49B4CB901556E63BD639
1B3C3C3C80C46745E1CA7983B9E80168018E04A84AB47C854C73FC58A393974C
1AFF488EBB29B293905951355C4D4A4F65BF1A72956515750DED0B87A8D3282C
72C634347874775B6F29EB873134F6BCC2EBBD3703E9619F762D64128A18C957
22E6C0DA907A17868AACF3229C176FC26BFBE255AD62737D234986AFF04FF03C
1DB4D1F2D9F60CF2E4DC5DAF88EF3517A2D91CCCBBB8753F92B3E0CDA5D26523
B84CEE3A0429655F8F25C89E65074A52CC6047885F4105DD62F1FB8CC7A4CFE3
22EBEEE15E3395B062B933EB55FA589373CE26568F78981B480F688646A5C8C5
63B8FAAF19A1F6166685C3FDC27532C931AC8B86E81FB0223686074ED596FA6A
922B662575F23B53B7C6B245AFE90258E743F284E22E30D2B418CAE285AA38F9
FB436D39371781DF4FAAD1CFF3BFEAA81F5D11DD76BADDD8122A4AA44B9F863A
DF8127F1FC35DB9CD34EBC684818AB259FFC3C7CE34C9DAEE69D70D010C70540
3B359BDAA5B9ADD10F6F7F2C19136157C6D83B33313266F1BA8B9E065A0C831A
47D767D4558876E85ABB0B8396FEE0C3327CFFEE23D0D7C24466E5410DD289DF
78C335D2BE90B5C581D536596D97F1F463EDD0A9C0118790E5780C0AC27A05B6
4DB13A023A3E5225E0377ED38749AE1F7714AE5E1D649A3AFCBBF060F416C0B7
47EC5BA54AA743154084CCBBC2A47037DDA09D9601412F731039746C1224A29D
191D9E221C06A7EF3CAD09AD5ADE65A51B6A915CA708D66C3EA93A0BE63CDF0C
D9A4546C9325291D11D02F4C2284918795A5B6E6CAA4CDA0371D452F65EC9097
657F51E83FCC22A30D649B80CEFD9F6FDD51AD33D3DB732FF26650A90912822F
9E77D8AC13393AA1B04DEDDF6C37B2D1DE50258300B9BB455AA872810C7948B1
EC866883E78F23DC9DFF60701F4F7C66B61198F8066DD493031D1A5EF91231B4
470B5A034CBA00791EE592FB4DAB538C280A8047F6290E265C8A88331305E67B
EEEA9A03950593605886E125446E5CCB325BF943C3D7F32D49651F5744A27DCE
6004208003A95DA1371E2EE456CC692DF7B71EAEFA2ED09E82012484AF7649C3
FA87A3AE44D93FB7A0D1A7A08A419AFFF7DF7065992B084D567645EE4D2FC29A
888E5E51A42920248E4BF77A7876799B1FD856AAB0EA73DCCBF7FB5979EF5F01
2CAF413DABCB3290E29A0CEE18F02BF93ACF5E651F75F1C47F2699BD0DA86F7C
5E18E1895ACE4B125EF346F608ECCD4DCDCD47DD7717EBC78AE3DDEAB5333174
18A8E967F635ADA03D2EFF80D463A521EB069C2B6271FD736442AF38A52EB58A
59D7A62D97171B45D2A6AFFB7E617C9265B466295CF70CB228FB295850D653FC
3FA379FB4FA0AD9F83269A99D550366B880AF05F913C074EEAEBE390144ECA2E
ABD1ED2BB6C54FAA70C9BA6C6794E3AC06D503EE876C915252EA75E6FA113380
E4E2A0CEA310D96BDFD883642BDB55525358ADA70C5ED0923B060EA6EEA5B735
D0D62E41842C07B79C0E8DC56C55084EE590D2BD58FD9784BCDCC3D498B69CD1
D7C24466E5410DD289DF78C335D2BE90B5C581D53AAA27CB98A914D22E25B41F
E35179D5E020790534D6BA1670B6783FA8DBA0D35DABEB8E162D2EA2ABCB6CC8
DF8E44430383881E5ED0F7F184DBAA9A394D0E08138E5B80D224D4E8FD6F8BD3
255103D823B86B712CD58FC2FF2C9B963C235A59BC191B84B9B6A2D87B85F21F
39F33AD118513BBA722CA46E21F697AFBFEE1989A09F9F9F7F29C1E0C0F28E3C
C64BB4933D3AECC99FEC69C3B047482C0D6F22E851DFDF1315C0679C0906D77A
B2144E810FFE3A942963C9B2584CE14922AAA9E3456AD60EAA44317BAA8D81C7
33BA78C0DEB8D1A2C9BF7CFAF3F6C87EFC09B43D790D3E80AE0EA0AEE1984C59
0DB7EE142C2444A3F4DFAB0C651407A58102F825D9534F2C1768DE55DD354014
B4AD13F8F95AB9B462F7A5950046C9C4A8CFF3CC3738D894770AD27F2BAA1A8A
C49D55D311D7B27E77C664BA4DA424125D1735CDCF888572C3D4E2F0230BB1FD
DAD562E249FC2F1392F7F378BB1754A2E80DE0D9FB55FAFEE3CCC1C812E9FAC3
31FD70975E3A0C72D37207D8A6034994F5A338B85C4ADD0A28C7A8FB765C4A04
DDCD6E0E7854CB47132679FBABF1DF31D16F8FA295CB56D75A836ED366963BD5
7A5FDDECE89ACF7D2EAABC3C655C247E6AA58C7B3A65D90C4598DE6DF2AA81DF
1E7AD672C058BC13013E94942CDCF8E20DEC5CD4696759CC337B6514AEED350F
45EB766C4ADF2EBF18F155CF537A97C212FB23022E75D57D24147D284196D0A5
17320294E3C7A3A1A1BE80ED8FF0A9C509420006D2229CC525B2E21332AF97ED
907BC5FAFBAAE31FCE73C77BFD275F6CD038A6DB9EC1FB4AA5AF31A16FC07D58
F6AD35B345BFA1CF7B0E9545795A6E62188B643BE9FFFFF69BF0E7C694E07807
E04F51013AA2E2215C03ADCA175FED41854EBA64EA1BFCA7B9ADFF7F4ACC6DBE
671126FE078F52AB62DB59A9B9AD1018F245F33A42CF224F327CCEB361EF2E2B
DD7DB751EC8C146E17EAAFC942F80C2313118CD80744B1160919C81067D75442
072E34982759C289C8F929334930B4AAC76A132C32DCBECD227134E7F747AEFB
6809685156270A536E5DC0236DA24612993121152E7E72353B4E4A19BC80F638
158DDC1B6DDD5CFAA56386D2232E51B3AA708541C4671738A1E0CC16CC401640
5B0F10C340F24A30B1C3E6AD87C7D4424486F4D2504B044E802A8B30DF26FC38
1D8D871D0D96566F0E4910D17124056A1F0AD7E9C1807ADA0EE65BF63372B918
2E8CE99142953DBEE0C0104B1292A1F83517BC28709D3864CA389D6CD1041740
7AC6A0DDA1E77D37AC83F0991A4EB1258E47A4E04D0DC15BA4F0C1D12F27F5DE
5E37A07F94A89276B909954466C7032C6FD3DE6ADE20EBA3FA90A309230B93A5
B74FF64283F15EAA51DF4C74CBB662283EA2C98CCAA3F64D2E64AB21C48203C6
08CCC92CFF820CBFE005BB5D4B098F3CC567E9DA9952F5F95048B505DD5C1BAD
049517C3A95D471EAE9D83E664D7CEF78D51D427D2A9126B689964B87ECC23E8
3F19351612FB0B1E70D91934375C410CFB8AC6C99D8665CD7E1CF880F99229AF
C16232CEBA6D7B35526797A8C94EA0723B3062409182103B078B6D4120137695
A8BE5DEC8383E556D1067F2D10E43F158978ABC35805453F84CC5EEC991A5CDC
8C33DBF86934B5368C099B59A7114410C608C749D1B7D493E67EBD9DF99EED9A
ABA70EBC005B7E807A854FD70F27639BAF68211DD20AF3D34A3498F21B00999A
CC476DBE2C5E7F404E59340CA51DBFEADFF2D6856FA15A36EEA17FDFF093D02F
B419CDEAA8924DD923B74F252664C67CEF45743658D8D43AF001ACCC0284EE83
D6B900DDC00EEB5E881FFE9B414C45B06FBC491330279C671334298D0621D516
6AC107F3AA081661CB91E004CEE7220A24C71BBAC196A23123BB399318B4D2A8
36F88D24D6FE3898D6D1C76D8F8E2C75D7460CE135C4E1D0349033D576ACDFF8
68AD600D610E32BDC63998EFFBD8BB34D2423CC6282C145F3F0029A07BA8C929
7BF8B0B016EDCAF80B9043EB61A3BA3E78F64ECDDADF68975D97F94EA8A698A5
CA287EBBD5193878AF0D3EE755BD5958FD3632E670306CAC950F8A1F66D4720D
DBEDC0E0857B057D019BB4C3C1C751481ED7C692CF08BD1EA6C5B30BE280953F
B8FFF50082E28A8D951207D7C494A7B2784E050A11FE8B1CC619F387E700EED9
D0956AE651C28A61DEDA9859E01101F5604685676CFFF64C9F2630CABF2F83D1
37D226BD5EF6EE8EE1EDC4194F1012D8BB958B6940681AEA50C7C8964FB0F377
23C0C4BFA4DFE3FD4AE99F5A8595EA873728E2C8B6D05AA6861E3ABED84D6761
ACEDE777F2D3BBF85031E42B976BF76149CEE298FA46B57981087E31FA46D2C1
91A16ED86E07D8E45FB322FD0B3D25692D2A0E7C4DB93BAC55016AE065951347
39401B0D8ACDA770B340277CE3950462318057F893A50B1BE89222348D7F09A7
FB9144E9162A946DFAAD95EE0B346EBBB899F1F37A0F89D4DAC9B7B0F3348A1A
FAAE48BE88E0E16B8E376035D6D75C10FB83D7B0EB9DCE189314BFC6A128924F
34C083E289918FCC37040DD4771C1218921FD978D54413617494E68E34391E25
42903355658BD278E67696161CDE14626D101B4E117C63F2E7A60627DC40CB9A
B1634701AD9AEAF5D11607A783874D716DC73DB1CBA45D33E0076E992C7DACD8
026D7F4C5AC1E5D796C0E5A79C61B5BF586A0FFF6BD2983A840B68D656FC1584
2D694DFBC7D7800CBAA90F3BF0022E66A54BE1059BD5D224B674AB4D2AD930F7
F724A305C4DB7BBE9E3E9D166FE9AF6147A8BC97C6834B365C39F4F5C39DC16D
F38ED4E2751BA59C0E9D7A0546E34F8BF633F656FE32F1FF453232617FCB7419
0A46165FBE654065FEA56AD83B17114EC5A7245AE7D9853223CADF1D781A7E4D
07DB3D4F16AE25026F52A8DDD0C9028D5B251EF32A329A624148C46F02C06DC0
6EDBDF4FC7DE2392905875FC28D07872F48FED6ECF7ADFBA23B66124203536CB
04FCAA433B9C6D4683C6C6B46A36ECA3A2B2AD548B7E6BC11F3404DFB91962B6
7EB0838F0E570E8CF04E85BA16BBB3123ECF3733A72A52F7F904C17DC217C7A9
CA604CF8401B289C1AFE778297F5248A37F2CD354ACE5EFEAE295973F7FA2EC0
8BA400C2BBCF8152ABA14FA9FEC5040D1B278B4D30DECAD8C97075573080E67A
B9F074981BA85FE7B19453C2013BB61AEFC3A15FC3CBB1E614186292D44DCC6A
69F94C1E03F1215872715967549F665E4D31FA89D07F9F7B71AABA6AAE1F3C1C
D65F797C3D02191EA2AA3B8A85038832720291FAAC68BB43B9A09A43832B289E
C07FF27F93B72A12C91CBBDB130C200349628F5956A835CBA540866CB82A2248
4EBB508F45A2D621074C5B93A4B520F1284E1B7C5D8474A5E521E7AD69BCB87C
68F1DF66B627B992C83E67679EA3C924E8517AEC1141FEB78E3658C308139AD4
4F7081DA3E8F839EECED8A0313F0A6DB604D39EE99D02D3FE7C02D0BF476D768
D438A2C24653F345F4642D12EA28AFB297DE661883CC13A06C3620FAD86F61ED
E3925484E3FA45344C7FD3D4D3A68B7BBB2A964AB2BE5A83FBE336D8C2D1325E
033E6CA7B01808D190FFC22AF831712233AA23BA994FB0C2B8AD99539008D50D
C093C9E693265E828A441345EA5C4EECC58BFC3D4AFA6168B74E2261A1B0741D
368D2D66F5AA22A1627640EA969285AD222A233EC61899AD22102AE68685A0E9
78D4C5714622E75955FF3E78C4575D810E7E050508B476A385CEC705A2EB89D7
F32FBD60C08B86A3021A5E482C8AE579801B110C76FD7357B8B0659B1BCD7335
D0A83ABBAC55FD47082DBE00ECB6C5C0F3CB6F2433FA52B2594B85C1F204B650
9D5201534954EAF50FBA122F4899016E04B4623EDD9332FD97D03F0162CC8BDB
0FF69CC3901209AE676967CFC73A878756C67A46AE14E613A8B3A93323427608
2E17993B297043B2F75674AA08FB0BFC904015AA56AE725E5AEE820FFAC05686
3E893BFF7C0C4F83D0D961AFC767E7024AE30751F349735B6CF6543D1067A9AA
939ADE975C80C4626D6BFE9FDA94629DB2CE69239856F03E138D66F8F733E229
271102112617F14FD5C3C6C486658937E811DEC0282EE3D0E3C1A31B94D7F13A
33FE49FED460A102B225FF51C3CAD527A8BF9BF8D495F7B532647689F1F21366
57C025AD24664C9C8191484D5D8E1304268CD4715C7B381ADD4976C0C856986C
FC6730241A41A2AEB1DE5FBA892DFACE7CBA94036E7A98F6B77F65031C7D4F88
38154177B46BFEC2D3481EF9EE5D5BAE73131662CFFF5E427A5F5DBB56FE1FC8
15414798C06E05F9BEF1443CD00570B204F24BA7D6B2F266806E6B3FD434FDE1
329BEFE5A0C84E3977329139F1192DF3F9D6BDE77DD5870ADEC8900D6346957B
84C8C7258B552DF354FC6CEB056DA1B1163C274D54F1350C83A736479DF26E8C
FF16EEEF9346A156B1131100E3AF27DC49B4DA067FDF88CEF019BDDF15F1864F
5406CF60DC00C440EEC436274984B73FD1A0031F824B4379E2E62864039797E5
87FC41E5C04B4690A2F2526D0272FD1B8220A2F5882788FEBDF78B312FF0A732
2C021122E962CD756DE48DA93798FBDD034F46AD3FA9E8C2D786CB4E75B9CED1
03496C03093961B8215359D6875C634D9ACEF68ECA80DEC81A3B612DBBC52B97
CEB83FAEE7B897F107662E8467FAC8D9E2AA0F906E7211622FCCA2C5462EA92B
205DD2FB6D547ED3D559005ED37BEB1ABEED9E395F1F1DD95ECC8B4432266F91
66273B59935B388CF75B423EDFBC4680B3A107EA9167B4A22855C1F6110A42D0
F70DAB4D6B7E2187A3BF218A6457C7CCBC0B06CE3AF4C560DF495B58D53E718D
89741F32C6351F8C78E4B9A0F49AFF1B3302A64232D15AE1B845171FD57FBC1E
6470FBE00FFFF6D3664C5D0355F8BF415C1A47585A4736B1045640800B098489
8282CB81A1D8FD3B8EF85867862B8FFA7167A39E37833AFDB4BBA8D5D855EAE0
0597C351139020D27A614DF27C3A72B169AA4B53EB63496BE00FAAA681420DA7
DC25AFA04AD42EBAA71F635AD4656A8411543FD8B3DB6B7ACB32CA6E4DEC6127
A633D126CD63FDEE48E210E261C16EF1A0236360B2A298C718416514400EB47B
86E2FB3F8777BA26C0DA8D6350B352014576858A26DF969402AB30E0F9C56CAD
A5D9811D78900B7D347046FF9C2A9DA7AEE1F42E318FAC7813157D0F0ADBEC73
9208D41C02C71A920C9DC8CABFF7BABFC41EEF179A9E95A7B2A70E3A9170C482
33DB00A098BA24A0C4A864AD85DF65F71B56A2E8BAC52A17FB2D357BBBFB0E12
CD481F96252AB7402213DF9BB57411622FCCA2C5462EA92B205DD2FB6D547ED3
D55900582DC2A7C10394B4FA2872BB77817D1E2258EB8E4A109699B8A1F921BA
F0ED78D89F33F144043D0FEE36BBF30AFF155EBDF9AB2A053F432A3149B7BA16
8CA488A7CCCFF0B23C07EDE4EA5BEC2AA85224F7C29A671F032195D9DDE7F51D
D5C45AF9CB8A6362CD7F38CC43C354FB4992CA8AA113256A370E02BCEB767B25
5C72846F1570C10ED164D1841B2FE33F3DF5262A92E98F7A5873F70B91A6C6DB
6BA74C7DC0D0D0A183BD254DBFAA7388CF2CBBF3342BE2E7EA49AABA75AEEEC5
DDE1D8BF68483C3D2447F4FFF02D0050E6489C4957F418895E6576FD8A8492C7
E1AB315D335B1A481FE3DB344A5F50DA95EF3F0F93CD2305D67A473BCBE4830A
B55944F07DE38907B58D16FCC2A074E4B55A869C96FCA78117347B9CFA480FF4
A19B9C158291D7F537E66AF56C22A58D8D35E53CEFC1C884F25A63CA278DCC38
682E1BC6D134930242730DFD156C0584682B19C3799784C1394A7F95FA260EA1
3D49E335E7800708D97515CB6CF112C2A89D2D44816E907417BF962CB750BE2E
146ECBDD16A1584F3EA2AB3D9A37867D85840C6AB9269E1FFD3D6432231D47B3
729F7F9F81AEE979C967DC7FC302C4D295E606E3BEB5DD0B068D6EB99F5F10C1
83245F1B733C17D3B854D53BA686CF408A174C4095D3732590B5E767CC184E97
59AEBEA33FBFEF7360758B40E87EFB947F6EF31DCC61CDDFC39A2771827A03FB
E2486B329E785A8113B00497A08154752DCC693ACDBECD3B9F74A6B21D04D33D
8D6867E328F1F84E503918D4F7A808F1DD37AAA08EF4F57EA64B4B227379834B
494CB4FAD1E78E9C6871F23DD7DEA7C7D956560D8BA51ABB82EF2B3AD0DC0EDC
D1DCE78055807A3A8E822A31DEC6D989490ADE623FD53D3DCABB2ABAEF03EE07
C3EDE4F0AF6B7A776C63DADDCDD47EA7CC5A25C793F813C55BE3B470A5800B4F
EDC4A99823CAFF87E567B96574144DFFC8BB0B9B743486E0A343D68682DDD7E1
0A9FB3BCBD8BD4D92DACE0A7B4068772E5278DC12151835699EDADD87DC8C632
5F0460690BE677AA6DB7E0250B5194D04A18A3CDD0D72D52948373E38251C508
E4505E845177AB715C3E6AB79D37E3F452F951612427A24B996F9F170CA2D76D
94BCE9E2F06F49A6F65CFF1A4F8BA05BFF847954D298A39FCDFBCB88AC0EA6AA
CCAB081537DBE4849DE52AF793A4937CFC9E9ACC236CE307310AA50B8A67181C
0DDB2999F26EED9D32C373613F2E788C56EB0FA4ED1F232CACF2867E6F462C04
4BC20DA885EDCD48017EB746DDA8ED86888DDA3065C5091D99EEEAC430924707
3044D4B1F6F9AD92CDAEAB2DAEE928681EF627A2AAD93DD3DA2A47FC87C5E3CF
18CE4227ED29B9A8CF29DB40473AEFA67EEF8FB207ACB013947A866A8ACE63BB
825F4B0F36E5B0018C20AB43FB4C215C95659DD7D7207F8C04C021434CC2FDC3
5A4FDC88E365F40B9D576708B6B6AA87B5EBACB8F10A27E2B97314A9BFED3E11
45BF128BFD65CC057FE1DB587C8B2D7A74FCA897EE756EEF785C969EFCA683A8
3C9AD337F4726906EB3D588F93D2104F2FE63F810E6A3000E8960E71B73E9003
276E22FA42881EF50DFCF371A8C762AF5BD7C49E875699AB0AF95891548445E2
423C73FBF82E9961A7926D1A05FDB243631EFA7025B92E55DD5D5897F13EDBB3
356F9E2B9DE1FBE209F9CA03F6B4CA4588D5430DD9943FA6EE299A4FDAD6B1C6
2ED755C31CBDECBBB7C3FBCA1B459501F78B07E4A73F5DB00C952DEE1F6CE6A0
752411EC61354347A5FD43D296FC220C6416877F7F1995EA262713DA7EC6ABDB
A76084AF0E901B4CB170B03CC44F6B34BC47F3A3226AC68289D2EC32B466D21C
9B802FF1810458E2756AEF02A8FD4A64972D941EC585207C0E0AE908826A5894
9611AD7ACADC778ED2784B3423154B7FC03D43F47C6F5546EDB0EDE9BC6DFFF5
67025D6E00A898F0FA2804E0BDA68B696F299A0821E42C97CC50E6C4D6C1ABDA
A045DF3C2F7F9F8206F24A189E57A0B5C178B7326860AF2A3347D964A134CC09
9A59CC5126F95FA957C3CE225C0FDF7C0B02C3678DF44F20E718545C2F6F7E7E
A4526FBC431FA82095A39C74183F41E46F2C56BCB59CE6AEF7E91331ED5D9A4E
479C21D6A7DA9D6B0B4FF494C2668BB221AB188DC03492775B2B72DAA50008CE
4A663353A1DAB9DA50258300B9BB455AA872810C7948B1EC866883E78A3F4C74
3DCDAD88BEF8B3F7104BCAA6E752EE90D2B38F2DA6707A896EC55D98E82E3417
677CEE755D41C6192B100D56F15192E10DCF5EA55C12219C8AF09C7FEA6FD001
3BC73E02B5065DDE064D64B07C5041BDB97BAB801A993B33CB35844961E68842
CFC30E62F392C5C166ADC35156CB090E79A5CC212295946E98647A6F5903A6BA
EDF01C0D83A41379B0ECFF59CE398BBCF79F56450208CC12BAF282AF59619638
A93EC62A029471B6078CFFD8A93C63A2AE944CDEDB8CB0483DBAE03637CC4C30
DF26D99F628D62581D54A0EADF9DEFFB3DB34A9F052BCE33D0F67FAE47CF016E
3B3AD1A5C090108D4964C7FD5E57B7B839E058C6917D4D2261EF3B27F4F84A27
603543947A1C2DFD3164CE25F9A19F120360F93E7BE38AFBB5932C570E8F1106
F98799495DBB3A05C04BD649053FD29385E9D3822007395A5D78C698C7366C1C
453FD7CC6E94C29F597CE7E75A8F7613805064BA22FE6411CFF2DF50799947D6
5414D629B139C0B3C2BF3D2905CFFAE9EAF0BBF3A22B3EA98F5ADA485A644A34
CD0F70B5ADA7DCC9E4CBB91AE2FAA8D878652A4CAFD1F9EB162702D1F6805D85
A8216B17742ED304B2996DC77BEA528DD00039AA5387ADAC3617AD77C899FE86
E54B8BDB1490AC76FF84E5C3FD68A234C9BECC29AB2EA93D4D4B5A2BCEB8AB14
CF291E7A18859EDE149FF3F07B59EDA5362CDECCBC03A19FCF1125C2B0BA6F14
13D796C008A2ECD55E062CDFDFD9C0C549CEC434910D8AEAA207BEB7A8B22721
7A2570A2487847107009B163709687F03E8904C670CBFF1BC60D1A07473EB703
C2B27847402CA4B685827479170AE5F99FF4C1D98BA42AA91660B2AE39F7BAA5
A9077FB463B8C35CA96A594D27DA3C1237C61DE1A5F5B26FC8966F17D3D545F7
DA471CC77A08633A53B62B760DF589FB2CF3EBA2F6AAC3F6FD242C25F6952AC5
5C24ED123A69E8EEA7221CBBE91BC55A81CC89FDE91EA283543BFC3DB722C5BE
799C9F485827AB10332BFA0505B5EFA4F5C59B381527B753DEDB0BBB7D3F0376
8BAF8691733BF48669EC0B1D817B4DB795BFBCC80F4EFBE3D7E3776948F8D116
96805A94EF9D879BB2E5DF7188DC7DDF4D7C8273211809C8DCFF798F2ABFC4F3
539392985C4CB324B0007E830B78301A03015901FD3A2CD7D5958BC9670F3722
5555B3B50E5204E612A84E61DA20F004DDB1EA743DEAB15756522DE65BA32464
0B70E9B902E9FB32F894C4CF451DD10098E54CE3F758E2C884D6830B00E1FB1F
743CA70F98903806F30AF37522828FD5DE3EC220C719B63A95EE943F25A823A8
8C7E731F647895CECD96CA4A2FB08545662DE0616473D1DD73635F2A6D25FF8F
941042919BC8E49987E0A462594AFB132AF95D2C459ABFECFD7096366E004D43
6C27CC46EEF80FA1A05AB90D788643BDAA80A3358D068EA5038FAC8EDC241DC3
360844AD12B1FF1DA78D51B6F3880C38FB2349BE51D981A08AA153E57F9DCD40
430507B2814046F5F211E16EACD389622F0C6FABF465CD8674717E87E6481701
FD1E1B8705C512C0108055A1BDFD83F4E6FB7C769819702617D08C10F4DC99E8
0028ADA6938F1BBF331D54AF9C627586F74CA84272C6A6AA48D9FF64C0A8959C
2DDC8B5F4F725ED7106CB261CAB582F367CCFEFDEF1C42C612D947DF7BF71424
AABF005BDAB11CB8C655A72354626722C510D6E242E10D29DEF786D7BBDAA2A3
5EB13FD17790793B2B4A9E06A916D8C6A93A6C0E4A2AE7B930B69005A3A2C122
5FF0F5DDA04B584EF886716F299981EC9BEA227BEE986A9A0D47A669C20B732A
AB2589536FA3B43E92840BD29870214BA57E5DDD4315463D662B9274D2E29312
ACAA9B901E3CC8090E857AB029E6C75123998FC42D3E0C3F20960AEF3549801B
F7518806C6D295955BB71395C43390497BB8F03AC4B9254462A42F410D55B6F5
4027C1582963712777AFB86E4FDDC0F31F92595FE56D439417455C5DF15519B9
0355ABACCAB80AFEE37A412B255DD542E77E5FF7E1744D529624024E35566FF0
EF71D60ABD9581F43AFC4A1BD1D7AB84C2DDCF5DA974B2068488AE47A9F07ED5
EB4D391DCD5D08268EAB44BA2650CBFC0CA9B55CBEAF992D7C9F3D4C2CB294E4
4361808DB41180D66B2A43973F90045EC2A8437DF5F02A69E236E3DA43171237
1A1D71BCEF8BAAC89772FBFE65D33E336D9595FD349D0874D0203F8C21D9CC04
E187BE53F8FED4F33633BA03A22DC683B3C8533624EA8841787FEC863F584F1F
FABFAD3A2E6AD0F142653DA546D27C470377E95C9B1336AE10C98008512E1E9E
B36A96421288D8A846DA9F3D3B8DCF710DD336290176B3E0B546698B6A12F524
DC97030DFB981F11116C45649029E8664B1EF5856534B80E1124ABC86D6376AC
6E3F7414E4A017F9FAE43F47C36E5544A0C54A415C5AB2A72BC3F9A63FC847DC
244530BB6D83D8495BCBD805D3FB3054DFF46F83F65741B1017E96CC1AFBF465
C25A312852770DAB7D39E1217619DADD5A529B743B0977263E4EB261F6718EBF
15ABA15B45CE0008CF15222103B3BC5F55E235A90201A826568CF2C21EE1C3E7
45A96B9D1102CB26CBE3E62D0410DA79BAB5DBE07DEC2628A57CD458DF6ED9F8
FAF6B0A70F46877976C12FF9758C0625FAB1DEA0D55F11A0674E11C30C0E964B
009A0D5AE5DADC353EF52CCCCE5A99EDC232F01C9EA889DA4DAA4227182ACF45
5865CA526CD0C3AF1F22BD3E3ED3DF208D3C2EAD0BD5AD97E55CAC100AE56356
4FC1EDA0CDAA94F414ABCA46ECF689BA685F1BD831B4271EE6BF93276CC51C86
FEBB15424B17BAACFAD06CDD337834C067CA415362050ECB9A7C3AB8AB6C697A
D5845D58D9ED8F00ADFC43DF9A0143E2ECED58D83420F4B02BD746BA78DA8CBE
C2E6CF74853B93B427A89089E953E1E2F0364B9E535558146EA08DA0C652BCE0
1A9FA4A9F7E83E5A35ECC699EB8815ABFD76B252DA958829F3C7D61F31822B91
9195B5862C96EA1243561331C2D9EE7B65B82582FF665721196CC9E9DE49E5BC
7F4070BA732D56CE2A0B7759542BA952A714D454416CB94A007509B3DEE24837
AA2077762F4B71862C04384D39621BD0FC52CB938CB2D6250B9B5A29475E6D8C
7941A079B1FD89BA0DF0E23866F7FBAF466136460A8ABDC4FB7A6B0BB95D213C
9E844A30EF07FF70EADB5D360E52B0879E3FF37E86E0541451E2504DC6092E53
F92783E0AF62957C5F79B80DA6F7A9E9B5ED66F92F3918E329298D9F6293E861
4966D4EB74CBB3229F32D00F99B504DD1602FBCC202CC8046D2C6F867D0207BD
48FE8067168C4412FC80CDBA62F8B5EE4799A66A432D5FA8044190358D9A42B0
2D8D79081DFC1266E398C58FF8074C8E860FE132AC46A5AA4DD33561D6864F50
6D98DAFC5178F2888E87D68C0B8C9CF3C303218DDE862922A8F80A0DD8B36675
E83371DDD0804521CD931104741A6C9845338F0D171803EC04C9534EA7560311
2A781CB563378D8C5CB7F8729D436B65B80B3ABBF6F3A7A5FBADAB4FCA85D1E0
E9149E638845279D7D1882C85174FC32A61B787769985079D60CF71131977E01
B98BD4D92DACE0A7B4068772E5278DC1215183569F9F606219F17E801AF5F306
13E7A2C3D32301ADBCFAAE454977605D7A072513C78F710DC9A54F1891759DBC
520CCFB55CA9534511D08883DE4ECD76DFEF5D26165777E3A6AC573D7380FC35
63D88AEDC9A339CF931828B48A786E23104BF1F2120197E9029CCEC265896D74
07CDFEFB4F82C7052CA4B6D9562B4D49DEDAF13B1FAEA97978E66186A98D901B
B47DE5D3C0CB6239FB2D5B4AE3224D98927206B1397E32E2D63C350442E2115B
8D8EEB7C04319771FDCDC0F19C8D0285CBCE07513C22253B9753998B172BB857
A128D43EC71195255DB36DCC13A89DC815DEBD8D82FC9AAF598C88CEF2A15D6B
13B95692C2467A80D01B800831E129F0DBDD7BFBBEB8C1E91EDC4F4ABAE63F91
79E939E8E50F7BE4118ECC2CC40F691AE97489E86F730074CEF8E44EA7FC0D28
FF3E8AD35CF856DCBF0AFB088AEB39EE217541A4C17DF1A012D2896DFBD323C6
1060D30B9407C3D09FFCAD95A1C64FFBC6312A96DFB2B087FD918D3B0ACAB4DD
394F6FA4728AF2CEED07C4C304955D53D70756AFD54C0DF38C3D61071868A4CE
3EE4C9F842EF5F146D57D0287D62D1A34793E173D032F164360D643F1880D27C
0F7D73029F171028FDDF8B55093791EA7C2765D1983BD77CC4F02023B383E397
12D0264CB3CB960EAE6489CD6C8FB1F1FE5D283A981437DA8E17399F86CE048F
4C870A446EB3E06BFDEF95D17AECAA204ECC569F78BD73D380C572E5087A5556
397E485D176692361A09B1D7853518F8522B9D21C93BEA7C0092280431577112
645FA4CD45A4C459D5F7693C618A5993DA8F9F0E434C04CC0B14B0B5818A6680
7B57C9DF5BC56081F75C01250653512530A9EAA3BB232362BBD54993A73001BB
38598B98C22D00E3A9DABC4A0462936E42FA97182259D06005CB78305087DF37
9612E501BD37874E1B97916A78683B9A3AD981AB1D33B3D8C3BF7E8C5A4CFA44
553B25512B68E1F53B4321870D97750385866B1F923D80B19CCF78577C8065C0
08159E38B52F54B227A0C18DA8A43ADB7593E98E5E0C7519713F452774D1DF23
5DE89D464EF44F2C9297ECBF2840EC675E1354B3A8B9591B661400E4F79E0702
2ACDC7705AF6EB8DA3E68A7D3D06321D6DB80CD676DACAB1311AAA28A04F8FA4
3925639BEF4B041AD7722616B477CCFE4F4E19F17745D950EB67D443394E8BDD
F37CC49F3CBA012789900B6F71FC815A42A6DF5A23909E98A97DD3D6B5968198
6295CE18217C34587290413C870368709A54C7F10AA03ABBAC55FD47082DBE00
ECB6C5C0F3CB6F2433FCC8E7FB24BDB8485E39CC98CB7276D8FF902DFA75BC45
2284439BBBC34829EFB4604097EBEAD0EADD41FF95E94001271A374CFFD45381
7EFA61369D50682A921BA0584EA4086A3A8247773BF93CE143AB03DA13405FD3
39E460BC4372AB83D8D5B8ABAF9B0F4357C55E650295BF397A910F2391FA6B63
F2E6A01890368EA8F0D42E7A93B79AB6EAA7055CB375591EC4D3F37E7B7E75DC
DC8A7A2A8C0F2C82FF1C89D50AEC1914521656935D7941BDD89FF156B2FC00A5
DF4E00FC298FBD257F4710C22C124A1DEB617A90A0C56F5579262F21158A01DD
99AD1B94EC03D853648279A1FFDF80FD866093100BFA1B2F56DD3ACB0966D42B
8D409D7C6D4317DD04FBA0600C7D9BD7D4BAB4EDD6C01AD5DF101B787127574D
0135483FB7B01BF324114D5790F5E1FA70E23CBC505DB31D91AD7E3E54B0EFD3
55444F1EFEA078071DEFA5D9E32E3757D29531D7FCF22989718F2C36ECD7ABD9
4719F604EA68B1108EBB5BEBC3EF465BD9EC6C21979A92FBEB7B5DD5CBB13A88
6B8BDEAAFFD177C2812845C373426BE65CD959E960C59C49ADDC24B5E878E4AB
3322A727A6A32D5E34FA090973057AADC1CE91497B3234A963F7F6C74C3424F1
32DB46B106ABEB77388AC2FE880DBA07B832A01384198E068B9B5C062C6CE35F
4CDD59F622DEE2356B941F292425C63C09D85A4E0A6E6C8D62E624BC2288BD15
56D40E81A3759E13390EBD206240DF30F4D117235385BD69D068F1BB3C6B565D
20F9BADB0AAD09C439797D92E1120186B88DC96CED6B13B24BE6491779055E28
94626E6C1FE4DF68E66F83EA24A81E005DAF108ED84B38AE432E26D07AEA271F
903D7DA531D0C5976420C76FC705B17A54E9210CECEF0F667F0F6B55981C414E
F167481A4A921BC2AF4DF194765FA36CD626CECF8B700CE9C0415271514ACFA1
9D2B9D2E2AC8B1B2A9818EFA495DD7323AD188214EC435BDEF2823C66D256FCB
DC8CABB9120CB6FE9C2A2F5E9385BA8C8CEC1CA725867D8C47D291939025EE8A
893CBCA7253320CBB89D32B10586ABEB987F718C6428CFC648FCF08698746A12
A911BCBE921B6481C78754B67CD39A57B6212A7EF7013B8ABE63165ABA155451
46ED2FCB21B0345A1865E364B357AA3AE9D82F4D14AF09432E7EB23DE8F34BFB
D63B47E1F7AE890D3803E91CE2738FABBC214C731874035B049B3ABB1719EFA2
4171531390974F7ACA41C21AC7529A90F32E07056A8C1B4EC651793395449C51
58F230F8D80E6F6E63C9AB5A6DD6B453E55F0F0BDC5641CA847462B2343C70E5
55143424986E3DBA396394B3D6FF4EC4E64D241A73D31EAA8AEB33A17B2EE094
302A297311DA3110A873E6F7DF8F113986D80F4A2BE12342D800225F9CA35FEB
2062B3FFC8CA7A21A09CBFCFB4CF3D13A7D2321812C81B5AB9FFB728BDB9A3F6
A927E3BA6903B35183A80EB555699747DE2D4F8C2F1EE9501481D533B2FE9BD0
5DD58E41616BA8F9474F56B528409B1A8EBDE3691D3DB7823F2C72C23DDF3B8E
8ED0D273EB6C5E74C8B1810ED416C5B52DCDDC5AC236FD6CA218A1CB03FCB945
FC24376A45F2DE0C2130202357494F739C8C730BD62FE336E47CC8CA845F90A3
FDE8EA63DE4D8AAC6484D208FA185432C09B97FD98064ABAE30173D395E1D941
320BA2A64B42C1373ACFF3D498B492BB9B82D69AA1D690954DD77B0CC9B82400
7A7A107B461B9C9B15DE33E67B25744E2FDA2E47AADCB32CA45CA934221765FE
0CC6A3A745FEB2C1986547967105F2BE37A64E5D3D4F344C2CEF37572E4BD892
DA454AD4EBBA96CCD0A712E33407446CEAB96221D7B3F4342FC927B314D3A0C5
FB48201578146A0398875225D8B82A862E808401C9F67679D26D08019521E472
CCDAE5AE384465447F14B549B1E8C80D263159FB18C27A41CE503CAC99E732B1
102E0641EA168C293C33DD472FA6E37EFEF51CCECE5A5D7D2174EAF37344789A
441B786CFE74A43C2A0EC5A3071152823274A655747C9818C9E722B70AC20D7E
9A7F928108402DF39C62DA2EAE8BCAF81DBFDDD7187068244A2EBBB9310ACA9E
F05193524C4E85AAA0DA6B393A8EF97727B7AD57C1A0288517686B4FB0FA31A8
A79CB235C3F1A53833DEEA43BE551A26129AFA9DF1882F711CC72721564B8709
C55F98E7C5F18E4857576943B380E6AD3BF8B879A425CED34F30D932AFDC2EC7
26D12EEE185D6B4A80C1BFA827E4F15E623A96FA4C467944F09434CDB5E5E325
33B70D1E617E255A4A7A43966ED6BB830850AD921A5A247FA60A89A2EF6AB95C
AE1FB11E5EBE50A258E9EFC4E9DA426F9E7F8D2811727965C75F5E7399040B8D
BCF17ACA51256EA4737474941F6AC36BD7B72B85705BFFBC47E7BF4384C54C4C
C3D0954E2ED1F87C81FD22D4E3D4FAB8CF8175EF5935660B84B213E16E93FA02
8DF04128F86348FB9A511FC9C5F2A4948ABC3E733875079EFB568ABD139F70C1
EA8869611D9D4D5E14954DC972F44474CB35738074BCB9FEE4077CC0C49E2470
5230611A6A981DB0C6D6509CBD4D31E445F889CCD417D67F016B4990CFB9B733
5AAFB1B259A7B19DC09F1A6A7F52F09F53B087A3E5284B1C41859808C27C7DFD
F9C9FBFFD76DF58E255556FF3CF3DC114009CDF5B02053B16114FE9DFB07B652
9FD752D2FFA4E8E41BE6221F322725C767B37870CB666228744DB62F32588C5A
A6C285A5EDBB5401458A9F79AC191B8E09FC386D4FCE408C3FA609FEAD8D88BB
59034060C90D2A1B932C5284AFF0A661ABE8C13BF3FEEF165DE8C3E9109949A8
FC60CB1ED59A9B1D202003469068A5BD2017D3094B67D6A21F2F943A13C77907
FC344161A50B22D67F4575D447A18642EDF23485903C00361D3E72B126ED17CC
167AF714716D53675E766A1BB33298840D0D678CEB623240957A1B5C205B6769
3BBF4A936F085874E5F906BF0053655C34FB8427AD7280AED8771C6EE2F7E2D8
6C5661CDBEBB354FDAEA18523F07BEF10B0BB14C4D4DE4F2AEDF89BD8952813B
62275478A5CC6EE68F395A1EA5B475FB3AA771E12181FF5C74F992A787030817
72B16091B3FB2C085ECE0624B9ECD544CBE2D7C6FCEF4143E50F9A9079DD2FF8
D6DDC12E2A3866CD683D9E28335D4CDBB01A7D2975F5C1130C64E40B77F2AB08
91C0C488149A01F7EC3CAAE5063D95CB6D9C6D0CD91133BB7425A946AE49732E
9ED9EDA4996ADC3AB5600705349EB8A95F4B8EC9D803D7A6480645BB84A6B098
DCC8D21513741301029A9B2BB63EFE799456B6E5B9BF421E82415746B363938E
88CA35ED1F038DA385B17ECD04E71D5396B116E4F72E75AE307178FE04FE78F4
A81011B1FDB1281D976A2120A6C46DD04DD294847E27B311C9F0CB6AC63BBCC0
E1BC5DE74A333900576F77D4DA319B068FFB6060AAF40EB540CD55D931F2D47D
3BA57A060FB9C607C595D09538788D3BFCCF51B6678880C0AECFEFE1DB370309
77C13AD37F8242ECE402B261721845AD34384F239A820E20864EA8411C6ED08F
6897511B2022AE9612796DEB9138059A4C12D10618066E0025917D1BDB7E9E37
AD935833B94133FD5EC5FB346B63A6444A311CED27BD539F7866D7B3B8321E72
06A098C7CA76DCF7AAE610F4D7E477E158973A5284DA859410822C4DA3FB1A29
ECC9DFC6179A8F984CA140588198D72E2651B7E4C955607CE1B1F5B1800A27F3
F3FA2F50292FC9B939559654B5B6A617D2F569070C62E8F09E2ACF4EB2C17357
D4E115CF13487F83C49AD96E12E55CFE00F867731F2800A33133B8B9AEF03A70
F4AC6D13C69643C95DE6366E02817082BE6FE0B04249A4840D3733DF16D6CA98
017C7C118D8C67F71A4BC3C8794BDC3B8195A435E9CE18B233FFC1BB425B1D5F
66AA868C2CA50DBFE58D8315D95C3F4E7B7B2E1F2895057F1AECF5ECBA17E084
BFD0A3606D42EFBDAD44BB98A7440207EBE66B38A8D691D00141839F00325608
81EE58F4131631D6BB57C7E351F9925FB96349F8D9786D8E6FF03E9C49F87410
6AE7DF76703FB9AD2773972A8075F7A95632AF5243A4E04D0DC15BA4F0C1D12F
27F5DE5E37A07F94ACE2065D418602EEDBE78843300158908F77C0AC7595616F
45EC2E1DA96256A9C8141D8B7C8067797C0CE920D9DECD2056377F0CF94C53FB
691309C35E6977332CCC6DADFAF49C4438FACBBE1896E3E67F154BDFB49E029F
B00FF859D248C6D982B908FDFF6E6135A30D1F0CCA7F0DDD96ECF80BEC71602E
0E5B7E33A8466E4A855CBD2A9BE0609B264BC4DD2BAA7B849854C392E05AFDC8
2F98287A272EB09126B4AC396F3C67E74A975B2388B120C0FCB0FDDAA696FA9B
3C3E63A7C4DAC907E3B5CB7A37135737EB03DA3B3F75110F5FB3A4F452BB1EB3
476551DCEC5B5A31ACDFF47EA3BF4C901BEE4B08759E95A8672CC8C5A2C4AA3E
AA4D8EBB26E20BB00D228B4EAC4A163E0C36CE47E6D295E4580B8086E6E274DA
359F1EE65BA3644E6D8FB919EFEB0B16C2B2424F664480018DAA9E22DBCFB4AE
EAE9CF1701F6DF625DB40083C9FDB651061984F95DA294068183459B1E9CA73B
17DD9B8D910E195BCB7C7FED134379E63D9D00667CC3658B3E33987BE2F5314D
4C277CE3950462318057F893A50B1BE89222348D7A04A41C6CD3EBCE191B0F18
97F45E676D2D16E9493A2A851A3CCD63701C3C4909B75D5369025324B818204A
DE64AA22104BA2EC72F0C22C0236C3DCCCD0C800997CCC26349F861BF4B3A4BD
D20B796CC7DE1FBF2AD98445A919373EF1DC48BD8BA01A6D096129CD99FFFD3C
D8871A3D3B3D9E96E3E09612F99B100345D53EDC134D23DCAABD54C620B1E6D5
B8288CA707E7FA2C69204A4608398B38301DC6A599CAFB5997D5A77B20D702ED
AD43518F2B571286BFE7BC6EDB0E09F822ED7FB3D64D0EAF70FE2E9EBC01C1E3
50E571D93F96910C91BDEE18E063B395DC87677E6544A4F7393C18B2E5098B1E
6B0D879A638AACF92F5389C0CAC1CCAE761DAF98DFD702EDAD43518F2B5716C0
8D45B0926739D960D4614B51D997DA5811CD43F0859C7E0FF099162109E4C8B5
05BC4EAE56F9DB92C25145FEA58CAEBE7C450BBA192F680BDF496A8D3BC5C594
445552FBC5C4A8FFAE0D6B157FD406FA22876812040CAD36E5FA1E8FE0EE6A8E
81E6A3BBF9C1524C164F2F5689CA7D1FC1A124D3C9624699D76D7351A4A78FC2
B005367BD3C4E4E674798D1931020E3CBF159A4BD8DB71636DEC5D5D66EDF8A0
07C8C599F051F8181FA2DA8EB01AB39EF7E7FF54D1784AB514FAC0FDC8DEB8DE
95405BA6B6AED78C902403D7562D04AD6C66416E7D4C105DB1AB69E9F11717A6
30BB0422421290360984C499D5C2F1E824F7F1B3230E5A39C9141E775C84F5F0
8DF1178332DDF6FDD9DC994C11AC11F9038B2B1B5F0771332BF01548BF15CAB7
CE630194962E4183C3838D9401260A7432EA1767C48C39B007A51A697A4D8A36
0D401719C5FDD2931E6A7518D86054936C7BF0C028B92D0BF1B02876E34A1E13
937F62712B8A590ECC217E6BDCE13F09BDF18D970D39371DA1EBCC31C4BDC042
E1F1EA4D4F7E587BAD07F3AB9F24EBA197C783B2B6DAD6D6D9CD9C8E87EEFDCE
2FA2E814FE874B911DB19255486BBB934077F4ADF324CAD77AC775F945CF1F96
E80E3B5528D4D09E1B5E7A11526A9BB3489FBF70088277714B8AE8CA8C2BE326
03689F50AAD0D3F4DE56356F862D6764FD9EA134359F45855E8EFE43E5DC858A
AB70CC2F2DB52466AF31CDD0B1201063B35717DFE874692145232E89FC52487B
D40ECC37E040275953E222C1AB7FD8AFB2C629CD2B0512E17DF7AA6C715F56B2
AD5157F99404607C40AD8B4B3C3CCC9DA325FD03C5DE5384AEF8B6C7C5DAB64A
0F3DBA0168FB516B5D84723A0D6B9998821A9350D76CBA16B7A86041B8B44B8B
81D92F63481CCEFBF4264ED8900D17D961404437BD2EAD945FC6ABCF3ECD8410
335AE6CAAA4F71FA7859542BA952A714D454416CB94A007509B3DEE24A965888
1B07218CA48BC688FB299CEB1030A8A9959F3698F00E8120F8B239874FFE2072
A731070FFB5095F90CC6B7C95F2682BC5649C7B03B92B57DA0F5BE89F5DA415C
B7E943D5A4A38A97F0BE22AFEF4406654946B67B1CC24095E3A4A5C17DE68237
55F59BB9E3A052F69C780A50A3BBB299CFBC46A80CD1D1820D329A68E9056D5F
A89AE3A8860E05E535736EA7255D81C4838F3CCBDCFE64C46134D7A15072E61E
39663D742EE1B3ADEA80B1E8FD34599B2C8BE107A98C2D54E5C032BDB0B4906A
F58FC7AEB9D4B34136FDF936F96FFC813FE16DA5F79B0F2B37CDB3C196EF729B
B5BF404B88E88E169AA5732CD542012FC4A169F8CBB6E313016221878340DAA1
8AA6AEA3BEC127FD607249CF57E563E6D21064ACB65D4AE61083604B67F57F98
4176061723F228A13B7304F3254E39EC3A4A5D3ED3F0F3C18D8364FB18690C61
2B5CD41D099F994B0BBC8829682DD15C645AD96FF912E55EA81D25E465CEDA21
EEAD4C33CAE6A2C9A48EFCB71AD4FE08D9C17F15D490A70F55BE1A6C135C1123
CB216D712F7ABD90085AAA33E69BE4F483891FF5C525ACE7CC2FBB7651A9CC47
F695536EA269D3EE945D55154AD3030520C16DE73E5A06C67184BBCF69B32C4F
358A707613C33E726DA2E4F9E5FA2905FB26784F9F27A3F3F226449231837447
12F5F7235A497AC316B10038C608B4DDD70ECDD3ADD2E056258AA295803C6007
0F8E89217F14F955A003D48BCF38067456BEEE0F9BB5C87D20B5BE0C978C2C74
54DEC873473E09F9302D1232938E68FC8EA33DA9F6C554114ADA73978E9616FE
099066621A67E74232CF03CA6A19EB6A3E1BF76F90C6FFC27B544A46BFB42672
05FE1AA603DB7C65046CFDE4172E5134BBF95DE794599480663FE8B623E1EA73
8390CEFBC818F1F770E20899B91732DE58D373297150A1BD25542746ADFAE256
888A3E1DC2D80B2772B05DA60F3DC15A815A6BAFEDC399C965E2444EA33B01A2
2F873D195661CA3A1BBAEA7BCB4F077AA082E96BDC5D82872E30CA63DC5D4FC3
1B8B271706883C4E497D1E90E7A0F10941DE0F2AC2D901074A797003FE42EB03
3DFBE2E387A0EAEFD03A12376C5901B464FCA19C7196EE55648E642184BDF993
C99EF7C10ADD5E5CFC35DC8A32BCFEBFDB16A0642E5CC69E5A25A661C0B0869F
9D5F0086E13F8C33498D55FB08ED7095020359C19239871F61F40EBB75EE3024
F37818C68FC464E498ED9EBD6CB8017A27E311AE62FE08BEE58F2B33AD6FB2BB
3EC722CEB29C19EF05608D01D55454CC24DE67F242C1275AA5105A3A7422823D
4A30D7FD19F77BB2CC4D054766A9AA7EED0A2C9DC58C0E1C62AF2EFAB5813E89
3AB0F0E126F26BB682FE26B34CE15E0AD3762D59AFBFEE7DCA4C0234D36FF51B
ACC428CC989ADD61913D31D45CE37355FA9CE1F786D72DEBEB61EB4738BCA0E8
2AA80DAE712E3305DE9A02A8B5684BEF87D9D231C885FC017A29DCE87E866DF8
9959D51C64C7A1E697B5E0C1A473E28CA1AB5E0FD14B7DFB4AE346574ACBE433
3E0446D615435CF6FB58654E826205926D24E166AA1BD70D4F16E3ECB172BE41
6FEA0D359CBE04C83230BF3F1AC09699FDE445A0688BED45967508B39362CDD7
8FE87CB5FD78E569486AA65076EBF7BB068C9ACFE42A925AD428839145BF198E
FDB35B3317308967A00EADA8A54DD0385F3A4AE94D3B5428A9558234C5696044
41691CDCAC602024B92D1817C9199521DA6B008853A9233AB0689882BAE7385D
F409B2EC2A214EED19C0944931E28C745EC3E8B40F232617A6362382C74274B4
75D7CA0AED37439F38EE027589A0359D1E0EB2BFDCA868023E1B5CE76BDCEBA9
51B61BA48FC22AEA6EAE2B21689B6C9F482833B69725F53363FA389679893905
7C622AEFC2E054064B3E173C14293A79645C7F3E359DE5E3A949793EB332EE6B
6EEAEFBB67BCA5DFC7BC2E11AA69651D677ECF1229D9BA0A6773C8E3AA1A9D95
416FBEEA932062EAB72407B03DB1D677859BE22829180DC4FEE2FF8B6BB9A1F8
0A7662D4F231FD969C7AD4DAACB1EC98E1FCF05E25D98DA373A781FA2E008F22
E3792513C2AECA099B3C5B31CBF550EE7E64A3684B3F2BFFB49B4B37F12C089E
9FE66E7E93F104E59979F5E3892618A1D6D53FFD63DEE775B1D22F6870661769
3ED26521FE539E4BDA81535F8F5AF589D7E094DA3786555D0C046A427ADF1BCF
CFFAC8BEAB0F3CEC7B118CA007C99ACB3A8CAF71BC4A753C98E8231D2093E841
0180C54A379DA75BB9DEA42B1F07F0082339FA96FA33678BB8CF50911D06B86C
9B97F933760E8BAB3C99BCA59162FD934D3BC1ABC8DA0026D0AF58F5013466FE
35AA58273F81C7787B17C43557F6F94415E6E5FCA3C6AD820A8ED4978E6E330D
A55D39529BEE81FC98ADD44640348F5C7C91A449496A33F2A60FBDE19AABF32A
44BE6C9CEAD20573503B88047D7DF293476975188599D789CE1B957195602471
00F68FEC79A45F869177E89E3292F67CC0B78F7EC1AB6A1C69E8076DEB705E77
AEC7686E7239AE6BEF8873E2414668CB1AB8747C2924D1424C444B9D6FDCD019
5626B9FF52B0CDB8D264D57B60C7293CF362A457B088E51440ACAF6EDC1CCF83
01CA929433E1F250004CDCF12745359AE31AEC86D1BF682FE837974BA4A855C6
A8CDF351FD697E94A3D5DC8F3807EF11C82E84E736A060EB4775CAF21065407E
9E8EB0AD91804A740DAAA914520EDE2097309D26901DF0A94171E466E55C00DA
09E33D4874B43A3D1C2B9F9BDDD30EB70B6B0E91590635EADD02BC13F010CFFD
A9B295B02EA0F73A2399F6CA5070D2E18CC12104F20316A46ADEFDA3210CD859
969CBA457F8E3521E5C12B6C71C7D08F6A8B85BF21E17D7E1358D170EBFB7778
3C4BE4F4D111C5CA3DDB86044617692ACAE9C6921FF416129EF0D8AF161D0E04
A27484534EFDDE0F7BBB3FAEB89D737F9FDD69B4EDA79D15DE3A547E16A8CCBE
3E2F865EE8E446C3691A53BB210F70B8B42D8C0FDBBC83D0067A8069A068E7AF
13A8E87145812C8E9EE7A622F66300B69C5B27CC34FCE07B89282BA7B2A56B2C
172B4E14AD845BE9A914353F9B5B82423BC0B3D05BCF9C2F8EA64AC3C5F7CE2D
D08FA2EE679A9E1327D0ADF92820ACC78B0793B9F0307C776C2944F46680A7C7
34917A00C16F249A333A1F83E14DFB0D9754286FBD511C388D8E5A1679DE7B5B
440C24318B2FE06BCA420943F7F3276BCE104716347CBBB915B41858B8982CE5
5B9EC1DA6680EC73D7A0FF7A3010CCC11700E5BFDAE0C84509C5E1537974E0CA
F7DAEC080E93381AAB6A326EE8F91642618758ADB2F329BFCA914C8AFC0B2BEA
C18CC368C55FD0BFBB72B49DA6F49C7240F00F5B075E1A17C87D7082371D3D48
84B50E1295C517FC56B362F7641AF333A71119C04E7C670E03482CC063B75149
B263B4F5C0C775C25AFF4F5099CD3A2FA59ACA735719933070FB9B6E9F731B07
5C021DB2F0DC106177F0F23460521D21F6A8A812C1CC027C7FEA0A1B3AF89372
E086133FFD9F5293A438B4357D08665B3C4EA7EB91B62CE8EC3454013B7E8052
CB1114E003A35ACBFE6EBCE44EC8205D05B3DE9003CCB87514B12DD6A793E1B5
41228CD981DB66D99E9F2693181BD4984D3DC61DF0940C86A0DD6DDA1AB294CE
26F1CDC61056D549846356266E6BD347842BE25541B8337D84CF214AA6752BD3
D12BF3C5D3AA409ED5B8DB12732803AB5DC9CB3C391216C1F404E089DBE9E68E
AFF2EC753568A17B70DFA4C2FC10B6C23F1C7ACA396D34ADAD0D55EDFC40CD83
C5CD165AD333498E5286458C67D2D1D2DAB8DB85EF3262A90F1A24E03D0C6E89
939748CBE052AC7C8020BA9EA3481E4B113F3C797C7EB0D1DB24C891C2ED19A4
A22AC69C69AE62558ECEE82703AF77F5BD01FFCBC347495D4FDFB9E120739196
BF425A1EEC2CE86167E303DA318BDDBBDF7ABF78B6D5ECDEC401C70FB12566B4
1067D8369E6D3BD4DF8997A84B3CDB6646C5F97742015668ED2462DB30F3D86B
26184B5FA28D313F992FFAAB306E7A9326F6783BF0CF5A56193763B2BCFC4D86
EFF38D2ADDE6768D26E67D32936F6F74DEBDA3B886A697C5072FBBDA8BDD4478
AA5D08F0187F155FFF82DF525391DB8C279F922A4995E08362942E252F1FAB72
594432DAF4D9ABCB3EC2A9CBD2496A5A4BDE9ABA618C81C4F53B801647B65783
982626DE10ECCC647E1A79CB94D06BEA468F303E08F1A55A5383955C850AA7EC
1E225FCA594CD7F47EE9186682415B33626FC9C187526B5E4193E96F40786721
70DBD974
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E08614769C017F6D4F14C52D7189D4AF8CDA367D8B04CA8D3F2307C
0A7A179419A80695912F456637F539123745CA8E696E250E0BA6B7C6277394E5
98A8799C29B6272613C152B0CAB05F3C7795791EC9AF2BDD416861A3D13FA858
BCB6ACF5BDE40E5DFBC1A171A7280E8FF4AC0D4C8A2199E9E2BAB5CB9131A76D
EAC166A7C449A549EA5111F1750CA2C6E1EC6F00CB6C62BA52D17FC66E06ACC9
1E6B858F9393AF9AA5E69F799E01D301B647DA57225C2920E3BCEE9D09CA5C60
F22B07F24A26DD8F4D6F9C78BFAA8D12A21531E713B80CD03A5FF4F3BBA2AD82
3BEF7DA8C97C30F1452006AA3B1A168483F6EDC4089ED02E567923AE6DBBCCA4
8C246A080448200C2A29C34AE6255BC79B73AE14B980A7C357681BB0962894CB
DA32FF2B70B21AF4D158E0F74652684A7150D0967F83E13EBBAB33588541AEEC
0DE8C53851845A44FFB46A93CEE3E8A0263882542F7F103D13C367EA8E1ABFAF
6486A9DBF6668550BE7858F5790BC87C66492C0FD34DB08EDF842E1AF58A09B0
85A9B7FA402029FE2439769D67DEBDC8AD8C861E90E5322951A2904FD702766B
36916DBA8F9C96141BBF4788FA435556B2B4E1B37DE4506ACC4224CFC00A8F83
33941A050B51B9508758F4EB2DC074D799F5116296B8822ADD743A043F9A6426
88D10767A9F99A072BD4C88CB579B34687BA4953B96DBA29F33211B12A0215F7
5F2F873E5074A7D593DAD0EDD97270FB9A87BE870321A49958B10E3353D075A1
E740C054E9AA191CC6A2B8E854AC7E02D6C53ABB1608ADACCABE3D5AC2F894E8
5E234F72A1C099901DE1E49328D413CEE1295B615F37F139B70238D0C3177995
99A49939640D06478EF23B0FA6C4056FC2D15FB7976D3ED682374F415B8C958B
346537C424D9503D92F1A4394FDC74760106C5895DBB7319A235C0E0313FD6BE
9382F72BB38333F6989452F4E2531047C5663D8B74F6E519395002D61953D7AC
9041F71327F630A452A036C4E06CA3653A9C0F06A8D0134AE67F2D0C9932ED94
63221E7FC9FA156C68417E3220F5885685F46B3FC45274FC345FD64E1810D1E6
2F552FF14B5ABC4263BA38768F4316BF56C2C97A106E296319E528AB821C5027
9A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC8B64E3DB194682A30A31E9D23ADA7D5C0259E2410A72
D9504CAEF21597965D669100E95B8C450A3845A54352DFA15984693F8721BE6B
C8436111546A70C5B35A2390E5D3C43E8295CF922FF601D611725D0D5D9EB2DE
CAE11F3A66BA22F94DE028A8861FBCE564DCF89B36A5F1C621F0088A5E41311E
9B82067883EDC8BCDDDFCB6A87C2BCF37B79B1F65339265C3BDC27CD99AC7D74
8CF26DF4B25B62F3A47B378A341378AB1E9AAA88112469298B36645A69B98423
DDA04A18DF5410EEECE859A081B2D1D4CEB9E40FFAC6BD2F8303F58AD7686B3B
2D3EFDA6667CFD49D2238D55D45C48100D47604525BA0852326DE98A17CA12A5
67CE98C02760C521F44824D1B8EA2E10C8D15A57F5E7884B1F63ED9B541446E2
14AE6FDA6F0EB66522C36B257335EE0539B9E15D0BF27D8D2083E799A8BF81B4
D1FC7CBC756CA4ABE99BE732D6518A5254C42DE6FFF8AC8683DD62ED727126F2
36C790583AFA3E58651B2FA8827ABE229BA994FB4A0185E38559023F4168EDA7
27CF0DFC3ABE725F0FE01EBAF6D0E7CAA8B511A630E8148A51C1394C7C321156
CF52EE7F3710F645DF1A4A5582FE6A701C083B7540B54FBE689D3EEE6EDEE8E8
C6F72242CB222238B955EB40FC8206E642813B01CAE8B6D3F79EFA12E39E03B9
888375E11BBA1D0821C1D40D4C232D2A2621514057156FEB1709FD747E0D67A8
42B20050A93D6DB8B2411DCE3FDA5F4B4698CBE32466DCF2665897C5FE2E1554
509B77F925832DD59E613B99092C8C0BF372AC59957A0BE4818891252E1C8954
CE34A28A00466BD986761AD3E2EF247FFE69935BFF8D957C1F0D9832BD2B1F97
858C8260E73B513FD7315A2ED9A64ECE748AC1F0E99EB86F6B50EF6A2BEC0691
87F54D15342F45D4F7750EDD2A2DEEB6134FD6F15A5A9ACD38589F75C1C940C0
650D2180DBE5D8E384CA3C4F4E14B3C9C75D027348A06CEED162C2AF67684B23
B68282D499C36E95B907FF9D9CA1C6CE5D16A2FA826A806C0D781DB6A0FC125B
7C3D7B73320282050D414A08CA6F8B4ADCD6594737FEB49069CB12B66F4979A1
C73E9CE4E8B2ED99EB20DC83379081693B70E98C1801A6B5C62854B3D276E1E5
2FEFAEEBE5F14FF089AC9771948B6A6CA310BEC376804FEA3263C3BF8ADA61A8
40CD78C266E7E119A2C1A020C533F5B87A0D016B3A67CAC1CE1953C9CF733716
0B1E596D1CD6C2A9FBA365CC0EE9F66370D523BED524048F6DD490FB0420CC06
EBDBC3500C1F7D1744346F2C46582F405BC0C4F5DF7026A1ACBAD079FB06FFE0
6037F6AEEE30FA38A38D36FF89B3F75166E595BB5E72BB34D491A84368333B06
77BAE28D7E749E019F892D0B32620DA72606230C4BD6F2633A320F649948253E
C51D716AFAE949BDFDC23E3FD6DA409FCB1ECED12B003EF311F280AAC4F19FA2
837AFCFA93AA8C31B2A4BD7DE7939268FD82C1919638DD6697C46C486E08181A
C329C892CC29662D1AF4E6E67433E932FC1BC0BE4D361B6388DAC405DC29B30F
8647382BE1B7891A840B1CC2A78F163A3A6D1BD695366827542446D5A88A7EBC
2C9A3E3A1D6A856CFAA31DCFC55CE9732254698F93F8F6255C94343A211D3E69
B6E7EFACBAA1E74E11A5E6A02D7F8D31B5A31B2DE2693C516E12E9FBA3CFF8E5
1355BEF40CEE9B5118DFBEF43987FE4CBF0A33EAC92A87FEB06EBFBF22683777
2A3D6989B9C2C67C711DC7B25E845C8BF302C0DA5DC5DEB3C754A67430A1351B
94C7E76D57492BEE84DD2A67455C9D8752BF72120A638507D0FB71E21C8B6A20
247B49CE4109BE4BE7CAE5188F7CC687B6E76C465D7FB39A101A45AF6FA5244E
2635E592A1A17EC88234D87655D9B7398F55C998E0A8CDD4C099FA56E702A859
AFF42BFD1423A5E68B2C8649B86E423BEB341DE32DB59C868D671F190894EFB7
536C38CDEF8FB15A4E16B5C9E6E8B5C98BF1D030754302FA1438578173BD58C9
B30C97A8B08C1CB6C180E807DAFF0789577354C6AB42E25E2CE23D75E252C834
63610E460E1FD5CDCB26AD6098FC98AD5279AB114CB198096ED22B90C280DB5E
4754078D3FE7E16748BF9781923CD3904DAC0A37247B7D1510546F0009F98531
9A852484AF9BB8BD8A3E7ABB16FF2256D55BE0EB23A03BDC57A838B71F204B01
51EE10E7057DCCE1CB5CBDD1D461A38146C49EBEB11A76A19B9A4B5B3368B564
EF814848FC3EFF91C4470360E4D4469F429E95F8A5C2E2B1535A63CEE3FE43D8
61384FFD189B3CE6255CFC0EE10C4E0D5E621430F30A7C057C6F1D5FB3027F1E
FF1B917D75048B2F1331094A7BC298FF5BFB6F182115F31921B02B198B6BF310
DF43DF9932D6CB426BE65B18553C9C0FC007EAD4CA454E7A067E261B66942521
D570C713C53826C35DC09386074DD37A5A93B94149050689B08BD44428F02B9A
A0BF15A80F84E7462C70DFFEA11656025CECC07EB98B407282C8B68011BCAB54
0A10CD18D1CCD3E0C82105D82A6DC40DF8863ABBB829526F096A589EBD737E88
AC99679C2A2B8F6EE67BC6C69359B512537AAC2F5BB0BC25D038B0E5711EC086
D049F1FFE7BC98B6F81CDBEB6A8EFBC5759B06AB93584B5BDE0FFDCA52E819A8
191B4B29B4A295FEC3E58AC8703120FB22388C5F767AA40C5B9DFE3451041922
11EEC997AA02723168061BBF8A9D09ECB145563069BB2B8362CF3A762A403107
A4BC7F29769041EDEFA3E267B2D588D30FE791C1AB2669E626DC1FEA582FEABB
2AA67CB715A80D6D041104BCD77CD32E89779A070B3D405B7E54541DF652F95C
97DF6AA0F61F98FE5E29B43A2BBFF66494DCBF0215657E0811353ECB064E72EB
63EE57780848C66B8A5265510564C997AFABF7E5DF45EB328EDED4DC087B54BA
15687630A7C8DD448C0C6236D343B3BE8A2F43C2EC2EB86EFF24BB31553003E7
2F5371CA77404D5CADC1F568D96EAFF464ABAFB9207624F6AAAA9794E65C716C
688B528C4926186483EFBAE5F13BCD2157A89154B150C2023421370DD218D700
062D25D955EA5F4BB60FEBB85BAB5A9B3CD6A1DA8A4C32554B72B0B78A3000A6
7A0B85E5941CDC67B3A78ACFD4161F0CFADCBCE528959F632A5AF5DF5ADB2455
ED64FB4D6D7E8814F9063299A9C7712B1D90C3AEAF174BA95E1925AA80BF41E5
884B837CC30A8FDF9C81D8B7A384A0917061CCEB1A9E0239B580921EB0E37140
D9D1AF5606B8864E192130F16C066511393D126ADF78C803D5BE5F06EB59D01F
B897DDD3FD3A60E8D4974932F56E84EB9EAF1BACF57E40DBC2D5EFACFD4625B7
528114B41EA9526342478F82F3B0FD36B2867E0B88169AE3D32E693B0CFC56D8
02DC4AB29733436D6DD55B163DC2E19CC1E6AF095B04FC55EA91305A38BE5AA6
A1736B274BA05A0DCE2033B8C9E0CEDCA977F0D88B26E7A514B9A7610AA3518C
B6C705846B3B2C5CB0E8D3E9F0AD838F2B13CC1E62C2CE985618B4A0C147A88E
F5CE54FDFF8908730D3680FEA1E71E820C1EB35FF231D3105592E6DB5E30A7F0
23EE3800C3325D556E7C23D047BE5B3174465D45120259DA592C04B30F4A0D87
CFAB62755D542EEB2120998CC7814D6A8FF550DCA7011E44B25280E0431A63B0
B7BF920877AA88542B6F1A9586B7CF01FDFED37A1B919C05E0C3FC3CACFF131F
CB6D31A3B7F1DBA5A1B696DE1C214588490F82B186207C6F53AAE6F9FA21E5C0
16D64D2FFB5B2257DA556090E513559C1AF5CD76C2C0764D9598BB8EE63FAB35
657218555A713B667334C9739320696E3D4EF4B358C4B31E5F389001C455620B
0621686DDA9E54139A8587080C6306FA97268EF8D04250DD3D83F8E4D5E8EAAE
5B25B8BB0E6E9B0F8A26583FF3F6723DF31650E5A66A3449AAC5765BA2AE36BC
6F6C89C968D989CF9A314A18A5DE3AAFDA182074E24A02F47BFEE3B0E4E64BC8
1EE2233E0630E457A962FBBEC0E4BC37C92C41FB5A05F076B584E94C3ED499DB
3C12BBE2649CE38B1E8E4AF7BF9FFDA2FF8FAB23B6CE639C2DBAE6CAADE9BFB5
AF73BB42E1B77F85D2C2FDA51E219B486F70B46414982FFD253002022FC6F3A7
1A1E30E362AB748CCB21527B0A7B3F8E3BF8F2963A88C9321E0D49B4008DC712
110E224BCFD3AAB14648DE69659228BA5E3F10A95D53C126459A0E5DC091942F
5A437CADA6C3298C15DB994AA45B11C4D13B2ADA129F9E0338384C663D591A8E
0A3E5DB9A7697FC2918EDD607B923AD68A863F0C0163B423490F452A5D417F83
AFF8C51AB9F1CC6E1AD7548A10B67E7C835B567D0001E9919A84970A9E4A8777
E7E91EEC512FCFC9539E9DDF3A3A10C0F1CCB91E7B3DFD20295484BF37B81F08
FFB18330
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
9DC141B7F6830D6771F1A3CAE655CA173FA57D400530CA6FABDCCB4325478D0C
93AC7EAA9DF7605213DEAF94C7281D9AC68D884E15ACA3BA68034F897A2FFC1E
F76FA2A69CEE7F1E9543904F1773969F65553C3469FD85B2F2F89F0E547BFBFD
F62A3E47DAA4EAD6D47F0305CCDB297C320A48A3655FAFC810CEC6F6D68ADA4F
AB5DD7F61DB94072B0AB8F1ABF62A78E43E1578DEBD2D05109DEBBCEC64AC700
4C28C4F0A5E3A003423B9958C73D306B2B4A7C67A95F8B4E737992642BD3701D
39FFAD94524A7752560FE97B8E99A12AFCCC5044D989BCAEC863BD15CAB7CE63
0194962E4183C3838D9401260A743447DF953444B29D7CB004560D0685F73E87
72FDDAB87125F419F90D165EF1C2A06A9B7500C6AD185B4115777C6BF9C24D88
653589B431FB84E4DDB650C2F783594DE6123D3142FC5C99973AF211F2A2A05F
5A756073B85FEADA4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3580C547C2
54FBBBDC95998DEF2EA825E3BB2AEEACC0F30841835121B7A7D7A973F2EF67F2
795E6DD8CF55B9823AB2B15ADC328CC3AC493DE8C2F022EBFA14A2976D8E3559
B5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E9A716737B6BA413F846A887B
D1B3B89EEF73565F3D0D2D1E40E4C2811D37C9029692DF8E94F6FE39474EE13A
EEE65EC0E77188C18435A2E7FFBA595F0C054E96CC44F56301F6CFD2A7A42C7C
33C1362D901AC2B0FB255262754024729BBB2824C33C2FB07B4AB0E5BC4EF204
E240345C69F37D577CA917AA50C3BC9004C8FC0A5A8E517D39211861EFE9920B
3939DD770974B1929E48E48EB82274BCFE2E9D5D484DC7068B77CD864557E702
E4EB0C301062DB793BF0C98D7468E7D2C9EC10C2B121966B68222EB067A7E3C6
F0549768364D1935345EF4D1D5F8C6AE3C09162E8A4FC6CD4741B38836CB599D
F98A2468DFC2198D16044BBA796678C9ED23D6194A5CE79410133D40E5604C95
80910F6742AC40A7CB3E08E73FA1E15DD6E1179C390BC240DA061C9D539B20F4
FCFB72DD0EF634FB4137D55F76088819802AC0ECDE469085BCC3A24122DFFA52
6840EF5367946F3DF67C10B47377A99EB96C13C332632CDCC750FE6081ABD0F6
4DC19BE13680CC29CF0EF52F885E21F4CDF14F8A5BE651118D4F2436599ACD41
A728EBA6AA858A62BA34015E2E2F851AF557C8CF9586F5A809952F25B26C6557
DD62C2B52388A1B7B84A5BDD57BA0C39ED94DCCA571CD82C6E0BBE3DE5134649
8CD7D6DAC8936854A0E9B5873E0C43A98002905B196F919D54550933FC4B7290
C8C71C097F48AB5C03B5D053459D7E0ED44D117E1C942F56B51E615267D9FFC1
91A694BEB601A5205AF33E1C34B285CDF947005615DD22A9FC1613A051DB8558
F2E61CB9E2FFC65BCA52B690F4D37B2D133D36D963BF8667C8DC3E83CA195EF6
ED3B6830A926EA62E36D03175564995F2A07393255D7C3450305468FD152C0CF
D0662D318787C108CF6922C96AD6DAB12F4ED31D68B15F2B74914BF86548D873
16170A909C07EBBEA2ABCA49F3BCA51F5A6CBD8E9D15F2EC5327E0258F5DC219
8B09579780B48BE9C0136E0E1F0FB0A3B5D2F78D1155CD9CF416060DD63C0ABB
648ECF22AE7B058941E6491779055E2894626E6C1FE4DF68E66F83EA2063294E
A25AA159168EBB2C3776B64C0436F1F67FCEF9D5D09562C477839F178CC1B15E
B3F3FC1AC6D8EF13EFFD7A41639E03C463B9D538F59C2C09D9C77E08FCF101D3
B8A9AFF2A4E54487C65650CD39A193C7AC2DB13218F2B69738A18C5FDB992385
1677980F42821A0BC9D23CFEE3864766CD821AF3AAE8945D037F78D6C568F714
07BA29FA30319B8C68F8F7DCF39E5FF7ECDAE3884DD8E69253CE090D90C29776
BF27FADED563AF292C8F30EC9CDDE8C7989902475E6CE9C732AAA49CE107C713
A3CCE5702F4BC10A55DC4DB309601C4181DBC8C580ADD685C6E19294FC93545E
8653E95751A2AD9153777F195B349B3B264DF1EE2C19E988BD4F24204A6BEC3C
2668B7E3840DA5AF83878A4A44931955CB6414033DA24A82858192F432180950
A082F14F89C0C1457A017C38E2A83A91D93A331F9B154377E72DC90F8BAA20A4
9AD863023AE1DDD067F152B4802D5DB384757CDC3F750A55BBBAC8AAEE632092
CF95DF3F33AF14D447E9492F907BD5AD2F14BA35BB6E9431F461C88E7EF2198C
005568E9DB85B2A0D87AA2DC2639360B54A8A32224F0C87186BD352E33A39C6E
994BD8680045425F24579852564EF01DC4AD98F15D522BD15FB90245D0469A37
176FFBCBE1C6CB58A383EAAEA0F49A0200F618D424859429DCB4ECEC7DD28263
6A3D07044AF419F80BFD3C1E5807203C5389F960C2262A263D11F3C1C4381886
DC53F8FA85EF54E973862BFDABFAB60376DE3B447C643458A03D0AE482ECB5F7
2AEF37B4CFC3B241CF20A2D9E9AF9010D50B99310A0DAF0C059C1793B8FCD926
4ED3E1F628D703A105CE990529B56777CE41740C3DFE1A1BDB292EADD055C979
6574913FB67F661E0251CD156190FC3B3561C0C632FFB0E9DFF71385693E6B75
BFC0436205231264EAB0C83C286D1A2CA6C84ACED9E02D9E46CB2FE2A6C3F956
DD94E57D946E83F574F370790FF713D5F12B0141EE5B103938F9A7D897D7E9C7
88459B39B30321C6ECAE276B63B88D5C54A849C5F2F57D79D880E13273F7A423
D64D1693B638AACCAE08206EABF5E61E8EB6B71AA4B19F803780CADE7CCC0E92
7EF7D853D4E937E83A49AC57D38A8949880F6851E4CE7E0420FEC748DCD88046
CD4A643BCD58FCC62B4973BAB1985E2650F843FEB3FD3E1D20E735860CE2D6B7
457368EEC9C3C172E6FE5357807A77F869A6387CDD3E0DE35AC5CE15B3640136
0DD1D3A7ECF49D996D35683140701ABBD926BB41B1B531E491065D57658844EB
974B33799F8C044D724E8463B767DFB1E92A0B73F5904B2F6FECDFD361063AF9
A6CA6F98607BC14EDA3F0BD3DFF58FFF4C5A60CCF5DD51CC3DCE518DD210DB1D
D6BD34947AF82D8D10AB50C26895953E493CD5E3519EC430FF06342E7FA9FE4B
EB970EC45F7A56748D8DE39EFA109002DD5225DAD211F5C72F3127A60A33D311
387BD33E014BC32FD730F22927CBA09B8CD2167352E6BA2E96F53C12D7E0B65E
32A8EEA690C33C850A8BC6988EC47440DB00FE7A2187D2562E08382F94973EE4
F7F6CB934CBD6BE5C83A0D92C36E2531163563E652BCF2B244439881DEC17CF4
BD5B6DCC5F7E835C3CE7D4454AAB910A3A53788245B1B6AFD86D04C4F84FB9CB
9BAF821700E77085B3FD8695CC7E4D624573A635B65951DC366F76FBAAA7DBD8
13BEBF3CF60F4757F6503E5FC28B8115CAE3463D9EA2612902D77900C11D9D52
F70E14CA100965B20E64C0FFD4CDF61A9BFFDB50D7183314985C5064F395E8FF
6657943255D62F0C84FE8A630204A8E64D8F940DEDE77276C8B62F82F71EE259
411685F5F363A593AF5E6E47645F0D700BE85D676051908E55A864FB37E8F708
5D2197ACABC52E9DB146BAA3A8A02B7C530BED308ACE263560EE977923FCA3E9
8419129D89B413FC97CC45ED2F7C2225F177F11CD02925F5FAB55B0D23D72E78
0E2E9DB264F63C7588955BF73F38B67E1FDD63579EE3AA4DD8E712FD1674F353
5DAB490E8F051B47608C92E95FFBCF0512DE0F2DECF50026C2CE0EA143A330D0
2BF42181AE73E98E31FD3021485E3D82A817866FE481DF6360BB13439812F73D
55BF7E9EB4330844CB6AF35D2AA9116E2837822DF741724E8D187C522D898821
B44C90F115910E663682D938AB70D416CD39E8562FD546F1E50BFD47DD5E46B0
069F980F33D5DAC4625C6673523DB325960834566D7E438C0A638968AC06481B
BB1161022A4A5AB35A76074E35E35172BEC6F4580AB5F541431E0E308517D9FB
3900C42DD44F3D393FC62DFA07074E9560A88F8419CD7627ED3AD4456E3A67BF
5BB49920F6FE6620D69EAC9C53DCD269E9DD9EDE9AC14EBC4FA2B5ACFBDD4DDF
06D18F30DB190E4D0040FEC7F51D28CF849D07521DE30F80A6CFFBAC0CA1E1FB
5B49E53BC96D108520D9CE9193DA216221F842FD0F3FC15D3647E4140325114C
5985EED0B4F03E7872206B3DC5EF17A88D9339CE85E9CFCA1E8F117A79DFEBA7
463053295A5E99B61D5CAC79805B71F1D1676B4F66F415921702677C10ED094F
00C582E77F6E21A71D0C319A4669B72F535E2BF50AA2FC7D4B4D2AD7A2FA8C47
740F3830AA88AF3C087A889420CA64CC1B060E260782BEF67219EC77F5DA72A9
75945FBB6481FBC4F25889CCCD84E330E0C875734240E4B00DC0E60C98FEC6C1
1C49CBE7C4DC8399E844D514E123FDBBD49FE36AA88DF9E59107C89426CF39A1
92BE91F8D48FAF80B44392DA442669E852483AB704AA104765FC7D16FF244FB5
9389346314D59863EA1BCD9BBAEFD254C37229A534DDDB4A6EE41C002C5FF185
A72F8B21D6486CD41A80EC051E875DFD36FC0B77BB85D026CE39C8A5D9B970AC
4A2E427254454848525DD37049D7EDF4B3170188BA06228CF9255EB8300C0254
C27B0A0F8D3ECD1B056A35C37842C492DD3D2BD45222454C6A9CBBF205039D6D
35C09A0CE284E2C57CA8EA3AFB5F2BF0AA18CAB0C73967BA45AADEEAC7443B76
8D791D09FC3085B4B346057E4B61E706396369E596F2095052D9519061D19D1A
FE2AC159F0D616FB5057F1A668F7137A78C8931460EE06E8301A4D701ED56D21
25766949D3621EAE1F6C849635FF109BB34E10042752C0B839FF9E5DE35F3230
F195AE7E6F4D20CAB9F8DC6E18CFAF1B0317208639181AE77338F7A45BFF3ABB
A75B3C5272D5BBD6166D18D45CC2A95E63CA3CD3EA4EA68C83BDC1A519119811
D7845571C082FE435A273EB95A6F0C1CACD44D331BD9FCEDB32E261F8BAE4665
4CF523D136CCE8B52E8946FE0828548474134736DC80EF55BB1D5A1D7873601C
10FF6626D14B2F917DDF19235846BBF4F9A6F044CCC5443436AA0E1ED55B70BC
0079CC996AC611A934830E23D7B77A909E2842E0AC5D9D07D01A4BABBDE2AC70
FE54CFA6969DC1FA04ABC51B7387109C1185AD5648C12F4C91C5A765E76365F3
143D534721A8FC57B1DDF4FC0C5C0E3935D16553DC9E0C7C69B2FCA88B893F92
6BC76BD2ABD7FA3621899D8C72270A9A4320E8DC181020981DDE1D281B22FAE6
EE3AF85762C36421F2913606704433208B98A702C74C1847E4DAF52019012701
B060002FBE2E1C0C82B2470726AD1F8E045592103ABB689244F248F0686C093C
2A4F6B9F0BE52D4F1F2758EC48370EAB4E1BD1E2D6E4CF241F15E10AD8E5F61C
7A0D270B420A6EF707755DFABA79257C6496F5915596B31948B3D449E96C73F7
BC30765D6775BB68C69704D0BA5D6DE6BC5E10374DA7E2F02732CE58012FD29F
E236E71AECD6A1C355132824D0C8D6B4811AF48F65A36B0399A326E0A57B695C
768264B68E84AB3FCC5AEF37DB709AF088DF321590915E0C79468E2983836512
1EAD77DB71CBA6FAE1532A4043A86CA7DD212083440C3C61D2BF3B821B982896
93291AB9FF3CD0CCA2ECFB00F9F098AE65B317C6D0B0C463DDF8DBCF314E86EE
AC33E4D2C1D1824EF8B65209F7072A5D8EFE43E5DC858AAB70CC2F2DB52466AF
31CDD0B4B786134925909155C60AD3A77AEC843DC75C97EACBC8260B38D1C42D
E323917F5A2060C8FE2A71716D3BB90BF37E6C3EC2334B0E774B507859A6D731
65336F72FA85DF0CD9B5E64328E0400E7B8EA408B38D5F709E08E283462DDB1C
8CA289698C8A74776D9E8691770B9A7888C218457DD6B4436A33B405FD0DDC42
3BB98D03DA68EF579CD4EBFBCF2F88DA535DC05FF15EE71CCD0E31B97B3FAF26
B96747A8E7DC923BA8EF6C979283B323CEF30133BE0EAFEFFC4C84B2A3F6C00D
E3EAF479087BD368F48FAD6D6556644783FFE23953B99EBFA7AEC6D3831A64AF
D7C9D8F85A009814CA9068F00AFFEE9E02B18CAA7FD01A9E4F3A63641E03D2B5
D851BEEC4676B6D205E6A62F64EF5974CD8E25A6906CAC83605B885FBAC809AD
AA7D8763049DA1AC185137EA26A156A4BC6D38BA3B79B89DE7E561195C6853D2
2BF99D85992FEAD2404C1F96D34D66C2FED66CF844B490B537561865299EC0C4
EFD6B629FA661440C361DDE7817154052436A36819D744E1185B218228603A4B
E4454CA625FF4A75F5B1E0C15441D95220FA6EBF2EF10A76FB4074806495A0A5
0602DE59F506812770372AEA533706FB1C83E14DFB07F4F05E25D98DA373A781
FA2E008F22E3792513C2AEC011204236F5D60D4A2BCC3285BCA27120C75242CB
2E3D02C422A8BFA0F031A3DBE8DC1D6FB37B2A939790B6FB6D1DC2DE477B1197
46FB1460E1E8C3CD4D4201384F217587868B07F5431C973C89C949FAD868DAD4
334BAD9912CBA46D245630E5544FD394214F121B2479BD820FDE43C06CAD4BEB
4AD7FFF2B41D9949AD45C84F6C4592EDE71F7E434238E2CB1197394F9085AF0F
B4A3861C67A4552C610497D442E859E555B085A49A37D37011B460934CE4FE28
0586F49FD91AAD697CF24DE7029566695B04E40439A30337C834EC6E764E3958
7BE5AE2347C835DC00E5A73E95668DD0484A9DC74C98B028B708C01494CFB36F
5239D236E560C663AC60BA81ED16B267CF5797437F0E0A3CD668D7703F05D814
495B0944DAB553727A204C65A18A0AFA2C09BA5BFFAEB657E9905C54C9B6935D
9A6DD1FE21A151698B803CF31F89F1FFF83FDB4A95D61ABACA8EE7F72E226761
3939113B980562CA065AADD1A707CA33BF3D4D3ED20C4DD33CB926D41CCF5BB9
64801E50422D5352C9CF80145A8A391D056D55AD5797D4267092C026DC41AFE6
EFF0FB84B7B19883B9F981FDD5AE272603E4D20E7B2FEC57157AFFA94B4E72EE
284C44A9C294B2B18D9A2E50D9090F86DD1260C67D7A9BFC8533FDC27952B08A
5ADA04C82CAE67591CF5565A0DCA782650D54B8ECC37EAF5F568B3CBC20E1DE0
1FD075EA5F795AF1EBC820FBA22DA808C3F8FE3CD1E8FE988132C263A316141E
D0F25A4455C957296BCA81E275BC94ECEB7B517E88F6126B8A392F9DF19625E7
24380AE722EDA58756E4FA9184D9C324D2DD19EF8EAE36D1249689B95DCCC057
6057EE2EB1058D6D3CD782F72F8BAFF44F6397A65272902A535CC1368458740A
51D88D84788538D053AD12CB8CB171565D669B97B7B49141484BDCE75BEBD9D6
B46ABBBA618BBA0BB81D8743A028C9C9DCBFE53223D096351D214B3DC904C32D
9F2A1453D091A144CA758059FA0277EA78B067E06E2F034B1E0DDA0D4DEDABCE
EFBB94D35FD6AA23331BD1E82A1C1FE9DDDE60530ACBFD53EE23242B4CC75114
C0102E36F20649476C08CF8E15487FFEA1EBC887F047AB45E4DECC1BB1EE4DD1
AA03DFC8ACC8BFD0FCCA75F4FC8BF8D29173F65836444E4A1438A01FA0938E85
E639615658E82EF284C2DAE08E3664B7D51FC34898B2382F1AF6645AEB936185
CED1820BC8C84AFE01CB0D6264972447612E401EB1EC420A711AA2C73CA4D373
8F09005FA73F28E02429623FA7AE4052DB2AB8C6E032F694E7568C1FF71B5A16
F356294AFFB344911D7ECD11AA4FF54DEF7C132BECC26F5AE4C45D6027A5A267
FFE9C5280880B86F8BC7C2E8772A73892309E2F12284A4CAC143C758C695D7AB
978BA11CE54869E036D6FD235FB2A7463F97E3645F56F1A2BA3EAB6FB86ACAD4
DBE2B70E8198A1BC0A9021342FC78678B5FB7A9D371CAAB9A8A382A36EAB6BA7
ACBA356F66B6CBDFE9D437F55F17C33AB41E835231B2FE84B7B19883B9F981FD
D5AE272603E4D20E7B2FEC571072483CE4272074EBD88C9DCBDD1E51AC1353F7
C1C188D80BF634E2E96A083378107344FDEC2A1324ED781465C66313FDE2A914
45EF7A5754713BEC6CFBE152CF0EFB9AC8500084FD75CB36F23C0BEA5C55AD27
8CA8D557E05C63AAAF50D6EB1A77F44DC13FBBD93081B66089B14C81209DDA78
F22714FB9DE80D3833DEEC7848D7C0BED821B0A34288A49CA23BA885D1C34836
249AEF8ADE9EACAB21685EA394047116ED7629C74E8171EE39B996859285DE76
0393BC3AA13298B3CCBEF6F48E4D371BD41C6F7E6248FFF91FD52CDEA7FAF961
05243EDF44B4052D2C4D4C4AE6754336416227A68E47E30ABD93644E4C20F9F4
F5F2B8AB0B4503D1E9AA8E377610666E66BF183F33EFE8E4AF40F73F7C7BAED2
D2F3FFA02D3F4C69964D85F986F0213F6D2790D9F623C83753963CA85E894401
A0B0F23D344B5B3F2A805F8F3BBBA4BD19649A69BDA41CFB4FDC94B58708AF1E
5ED01B4DF28C2D3457FD0470877E946FF72DA1DA89CF6F9FBFACA3A735ED0119
A05C781073E07D5926E15A353FC4B60BAD1709B7EB900C0063B2A1A79E3CE423
2E4A1335F1966DE7C21DF351097EA1C46311794B78307D3B0114756B82C2962B
78D053778C63F578DB8121C249FADFFB69F2296D9F724349DB4968C5813663D3
3205454A1A4B2D9173D593615C4459850F3B205F302DB580277A6D0CC1ACDE79
1164E8F856E89732AB22827038D5E2DCF97D2AB8EAEEF6071317CC3476AA7C04
25A51A1AD668CC571AE16D327D5201D31284ABC62D816A955259A1419C8C25F4
F8378BAA0E7564DB00EAA16FE8F9DBC207EDEAA72C2F7D4B7B7112BFDD1C3179
27BFCAD617463B1D8D5CB6770DBDDFD8C0EC2F47878DF55C88892053C5F1EB2B
F8DBF444E3818EEE8F76C2A25F2F87A57D5BFA308354D2D9D706A9F8DAB06350
9CB07BF4CEAD88713B289E12D7842C2A3A9861C89A246656E615C7474753A387
E4FF6B9907F28808DC922FBC7E007AE8A23C751014185DE9AFC917F2D783A083
8DB6527B169A266871978FFA3BFECE3465E9F0918267336AC496D4090954392A
F6E9F4038CE1ED6F82BB418528E99401A5034AB0C1723CDAB592A57DDD60ADC1
2D2B0A1545BADA42F20DE12B75E2802B676484C9F05BAB96F9090DDD84A39B2F
6BC16D2D9F44B625E04A753B82978F6CB37DCAFD3C85932525DED92156181855
1B6F7D1EF65DAA2F15B7F374D259C8221EF16504D11B5F35E83F0D28B19EF003
A195663FFB3A1235FEC42224E08E3030C575B94E034A8D5B69C16F750F4788B6
B3C3C2776D4DDE24821A922F97CB79720246673BF3BC51B6185221DE666FCA1D
E044675B4A4C1292728C3946B7BC590B9C68F20FC56076E333BF24A5894AA474
C9F08EDF66B627B992C9EC7FF107CB781E2093B59BD4F441A42C82FFC652D3CA
F9ECA9FA65A75E27349DDAEA619E52650F8D44A7B98EA24E2FF4F71DC5AA368E
0EA45AE3A0C9A76C320DDC335A615586F5EE36BAA962D733EA6B1D615D235898
F90A82015174497638D4991FD23B742F56E4C380A99E72CF1B8174F657E6CE1C
BBA31DD5B6A2A51DFB6604687AE597EE3E867FDC00EC4D156C8595AA55147A38
8E68FFB817019DA6DA80D33DF167B2D5EB80A3007FBBAF0BD71927C722A900B1
910B7CD0FACBB9AAF4192FB72637BDC4B550DA479E3876BC9388C67A6B10685E
9921C7901778BAA2CAD73E31BD3229C5F8931981B7F9C278F0853C048FA8216B
17742ED304B2996DC77BEA528DD00039AA54BB248E3112888B1EEFA597E16235
29F8734C0E096F1BCFC02A54ACA688D325B8FB6FD35D8B2A9420802B29FC35F1
52EBB1A1303E87203FCEB23CE074F149C2EEB2965CFF8EDB02B3CDA24BE5B94F
4D4C0FAB79CD0D3E7F8F21481592B0997E15984F42D4B724DDEB44FBFE435F9E
BA89164E51081B57847EB7A96CF69DC3B99D7E681A9E5ECA75C377D3C5C7267B
EFE151C52A60427176D702F252E42B4D798F49CF236D86B92B8F499033A7C8B2
0514BB3145CCFB4ABCB0F054105D73742E37B7836B2B4CF85E8CB8AA74382721
EEFD8024BB1E35A650279607C8C0066DD69C399F75811DBA593EFAF5CDEA8037
96A28C5358DFAC43A659829BCD60A999E9F3E78F6480C3C8B62C9AFD10D626A9
235C76FC3010895BE4AFF551597F0B1E044A23B8EA6D147D264E48E69939FDF4
8DF49CBE4C7CA7B13E75F60EABD442FCC40EA91D47117C01D70565B66E21AA90
3C3D3F360ABEFB007D46720081C49801814EC30EB8400C3750001FDB7D481008
6B2F93321EC74140E0E86938763DA88DC72FE6A7DD768B984FEEFE58A20D809F
A1709E0591879D2EBBF3BF9D7499840F2B1B8D8676B6B72A57757B2CBFC6F5D9
15C260859C43D16849F528191450CA8349B2329C5A790B7E639F78BA7BAAA5F7
642F333275F645513FB6547F10E5C09F9E499346B2E68B5A1A45D342CDB4DF61
5E2CB64980C415B399C2439A28260A8BDEA29E0041821CAAC5999C228E7E7F3F
8DCCC7E3F46D76D5CDE0830034E3BDC2EDA5AB4B0FD9F3EC5728B60F86C0DE56
2561BEF83496284C96B1ABB917C07F6276BD5C9CC6EC08DB9DEC5670442C353B
FF3858929FC438FE124966C4632B7CB94C9DF7275990EBE5D704AAFB1AA784D0
8CFFD37CA7DC832D75FDFAD81AA210A77785C186834F549D3C3FF963013711AB
72B76C72F0994C0C43E119762F2F744EBDAEE29C212731C37A3C2AE122AE4B2E
EE6359841860CBA24C3DA9B60C67906B55C6C5E34E49E23FF845CF525D7183F1
0CAC841F7506A5C4297CCCCA10F4DD4657C898C9FE32ADA265685700673ECAF8
84BB311DB67D0136E0984ACFF19D2AB6FD30228714F0FAD8EA305C71530FD917
3A18E079156D95730D37D0FA4C7218D7C2DB81480315A1E63B66E9630C4F792B
EB57C7B5A51D29A3AF781F1551F23E2D70CD53E72377DC5941387F50C5E0F59E
80EF4B772AFD59D0135EE290BD96D4D3327F08F492656C7650C071B1FB57CB36
23497210885A346AD0BCB540FF5D3D13C722603FD1A9BABE7A2AAE2574640741
E932216B2EDD93D69BA58FC9EE3B058C0DDD5C6C2F44BF832E4D54880BAF264A
44318843EE186A774F36277267A2D8C37934DCAB3006734A2562DAED29D97E62
720614F7C2864E75927DE4EF96AEFE850F73D6CAFCB00B7BEF6E47AC23B920F7
B535193DB8FB167E2176F487FBF625F17BDA24AC5310B950DED8E8F5BDD2AE37
98F900A467910D50BB0E97CCFFE2322734D68747283186D67327CD487B978FD5
0D9BCA2508355C5083E7E062F1DF68BCC50EAB2B6C8E7EC2B798E2E8BBB30E45
5AD9FCDB8B5653DCBE2D97FF4FDC32FCEC52BE9958EA640C074C521CF379526F
A0FB75CC1D909407C93B0DABC3B6AB1294CC34A4E8E3C92492497C655970855F
DF5DCBAC6D32B6252CD08B9545A8E2F65453F244CAF4E3D11C158F4FFFD54FFB
2E9AF810EBECCEC5B24B93A729F00FF86D3D7B07DD66C717D9F02BA4C1F8B3B0
6D26642CAF184694442AADDBB4DEAF6141D460D1FE4D5BAE8C4D5AD87BC27392
D7A101E273541B8FFD8A9F88AF43B0B65FF5F6677DCA7F1C959023B655F22809
D752B9BC2DE864EFC9B18C7002F76150B70E79387F8C338AA7CAF68A05F18A81
DA0BBC618A937C4159C91A453A8C4B0B11EDE8FA92FA6A07625BA11F8147B49D
D7F33D5B4AB718672C8CD853C485813E28C40289360E6C4A9A5C31196CD6965A
9EEB8D28698323FC999AEF1676C30FA433DBB9E90A78E085205665F388085839
515F0A04B1BCEFB778B5D1D07C190A30D72F4DC185613B31DF5DDE27133DB264
B519B6B0A216CECD233B141C8302FD0F5B244B3603CE3A840AB8D41D661554EE
356173E95ED01005A9992017BAC758B30905B56CCEDE37F37167FBCFA2CC9AF3
9B554E9FDECA7817AE2B293114B07A729355B1CA091A4904D3357320847B6C1D
B296E14620C75A20AA65A6DDBC242AFC7128C270B7D38E51CC303F5861CCDA6E
28C4C560087727DA51CFF0E36D2F6F445CB662BD8BCC4CDADF99CC450A630792
35C60E9E8A93D1D0E944A69E85259C88A3E04E291EE8E9E19ED316C9751654A3
CD885FD9EFEC343274DA68CD751A72052D4FD983EB8C149E0815932B76FF010D
2AD94168B2D6D475471A0373B8D9B96919898B0AE500E89D1C1CB5ED9EA6FEED
8611EE83825A2F85B4075D21CF191A2A9F42EE8C9E9A2200C8EE611D1485FEC9
EFB184F8A92781EA228C2F15AD9AB1DA7506C3313CA4C624BF820B1D5045588E
94F4336D40A60E388C467545DA4CF1AEE0B143AD0177CE7C6A00090A973D630D
142BF88C8C80C42C920F0A78A29D8B8920635C95C18B3DD1D270D5456DD52043
ADC089C9F1CC96E65C43409872EBFAA7BA8938D226A76B011D9FDD66C24C5345
C7AF8BBA3E2134256EEFE521828FA7C6D4935EDA719370B0BA77AD7BDDC80206
1A356D50C2E9313AFD64FF51DEAC1D12BB142A68D158BF7303CF8DEBA6907726
10D542CB869974806D4C172EDAEAAABF69B8207EB307DDA81AE0245DC5AF19DD
E65C1D94FEBD1905A9A72FA4D06D3F991DEA39B86225EAF382B96ADBF3C5E16E
71B74E547229E53708F5BC82C0E7B20A342611B40D7583E13231069C7682BE28
2F3AB680D0F819611B1EC04080C904892ECA0720C647E1A67FA3C723DAC77B64
A3DD517522B401F3A783BF474B153533C05AF2DF8DDA96046C609118F846A805
E5115D72F39A27500D6DC4DC8B00610F7B0817C2AFEA036ABA82B0F948FEF722
A5E8E19EF4D22C4B17B5B519213DF80FD44FC66C5E3DC9C49776A26632A172EC
0CC9D3D768CCAA53ACD8E0027529EA4F26153F8C1916E584AD089FCFBC30C0EE
CAED11F0CB247BAF5F945241BA968BAFB95F85742EEB47991E563C04EED93CE9
002AEC15A8377A0EB07F7F6CA2CC765546C687B03ABBB166F76CD952FDFA1067
ED03017E0CCAD89F4C823422815DACE30CA1E3B5BE216BEDF3DADD450F0EAA9E
8C1CAB12C2496497B844A1675F179719539CD7E2929D0C5F00804B9AF0DDED96
C0A58FA0A596D890F6602F5A003C0E3CBF159A4BD8DB72197865133D9FE4E4DA
535522CD9BEA020D177D508A2C32C74FB469D5A604912CB9E9EB983B413169D3
58FCC5C4FDD638090A5FC2CF5713BD205CD078DFBCA72AACCCE3F5074C667D85
466135DD29C55C13B03464984CFD8EAA034CD9D86B5C639F2189BAF3E455D5C6
1D63FCA06924608E46AAAEA4996C094A256678D873B65968AADC6C5C6F8E85BE
F92BB3EF9BC7437A7E4BF432549555BAB23704DC4E15C3A164B2E367B0931B2B
10FCBC45A7D589FCA2241A9F23532942606DDB0532CD28A761ACBF18754095E1
EAFF6EFDE9D73BF4DDEEE3DE53AEAB5BE44EC6C77195140E171DF8F5EAB5E059
B2545EF6BE61C442FAFC53436499B844379760DFA626612E7199553D3194EACC
224E0B3BB2B2CB9369704CE85F5ED2FA84096D5D15D990775DCF97D8047E1875
EADCF481F2F81930EBDBB259A6B2C55D6F8F4619204010AF891E52745746535E
D39FEA0CD9A73E5319AE615F4FAE8B073DBB835D357D648E1C6B79CCF7B3524E
BD33FA52AFCDF52382B320158257C7152CDCA050B9199E33B649BA70E46A68B6
ACB65800BAC16E68C4E9A32F7C821A54A6DFBCBE590909F0D8959B7D1B78853D
D77BCA8B511D804A116874F66D2D798310CCF9B75DAA370ED245EAFEB8B24E40
8A8F210D02892CAF8811E0BFDCD7B9739251694A588B9B343BB278D3EA5B2D5D
BC4EF2DE599944404B7B0B7B0638810834D55746262B47195560253D16818C5F
A1CCA5F7B9CDAD10889CB78516993F21A22D9EA094626F29028A2183438A6E92
4BCE7AC0E750C97D5ABBBBAFD4580327E59E0EA124080B808351F8A8F00FA1A7
25331CC6CF0CC94B34779971B821E5F8548470104F35215A65DE01A64C21051E
A4E6171FBC83AB9370374C1BFA8FD9C2340C5C4A96E21673CA66B2FCF7F50CF5
E3F65F253D1538871BE6851692793929CC3D4191B1A146794FDF67D68214B348
BA515FF6CFA1514E73FFEF3A4734D2461808EE984B1C0CC6DF638AC5E2602FE5
2D3DAB63D3C6F2F6AF4795A06129FFE738D97885E28215C63930511B50A2D4E8
42A0B481818FEE09F5A6C9AFDCB18A0F841FDE7AF593905CA3B37750013DA1A2
5F10F9FC378D0148C21E0BDF778C7BF7AFB89645DCDD0D8AB09A15812DD45DD8
306E5E3E26316F673D05B9D3F253C0B613BCC0DB21111B76580BC4A776DD86B4
6D526B0F88F5D96E4896A95FB6020B097082E73509B70F0C64694B73BFF1E424
039ADA8A80553F052F97988D4B276110BCA39FC05DCDACE1BC0DD381CFE39B1A
502005580FB2BC843D9437A12B3AACB2F0D6DDDE2D630E60ABC877A9942FA95F
1B5811DBD07B9918D9C1E8E7198FEE0309FC0A832A6AE897F23B2131F7379F79
75D353E7854C1490D11A191D2EBF12E8A3D7AD15C26F90CC7A1117F16A1BBC12
4AAE1170D90FDE8AA1C7896618F0595617F5FF562F8EE2C029E99EE8446CF45D
2D463A806368057133B71C7D637420B70C1EB22DAA67DCB9DC94301EA34C3872
A7A145184E7661CF1E6D38A88954123ECF3A49397E241F49FB97F33B3BA65C47
1B0FA00E3C4B798386E997BB6A8F931D012BC2CF39BA5B81A28684D5DB0E5C30
E5A459EEE0264A2AB6EBD829D599740BDAC6EFE554055C109FF161B25EFC936D
D822A33D548BD17EE03561E766D3833AB29820A1C7DAD08D4179252C36F38F36
01F26998B6620243E2822B5A68BDF924334D5838E937290C45A260784163A286
82EE9717C1F39F8313F52E6DD89EE3F48D9E238F76BEDA167D68917AAAA9244C
BC3060CDEACDC25F74C5966D3C176366BA38EC8E5FEC51972AF7ADA5A471EFF1
43773C17B9863075AC88D9D890AC2E64C158B276E8851C66234A9E6A165F30BF
A407CB5EFD9E057B1A71343DACC41CBCDC0E30F2E76DCB7725A484FA754C9789
DCD73BC1DF740F437DF5F1B361E2AA589E224A8A389D0F351D3C74500EE5012C
07BC0869099137662EDA7B7928709B4C8BF80AF88AF78338D0F3F92BB781422F
088678902C2E7C695D2A16601914D7F9560D6358D54FA3CBB78FDFE79B6047DF
F92A166F1E1336C275072693582F748B5CE88FDE540BD165FC53BC17CCBCCF86
39A12537523F9D4B02D4A922707EFB9AF4E6F90E9298053F6C3B01AECC58B5FC
E7FBE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B0C01E8CEF273808B048A9
10329044B0344247E6C405F65492742CADA77012FB60C5E2373B24D4D4767281
19E8FC8A77F4D100499847E1102CC075FA1210881D95D6E89EFC5848CD2BC751
170B446F9FC06F4B6EA145D5DF31C8488D38C18ACDBA92637D2CE33D3A4CCF6D
FF88C9908C2E8A190C8F4244A785B21F1018221DDFFAE1D3F6A716D68F992C7F
0C6B5D8A1D4DC6EA958EC93947204554BD7760B17BDD06B9C87EAB91E9046CFA
2D9A57FFCBCD401FB4774DE82D5FCD59CF230876D82442C38177BA36BF092235
5F64FE3BC62262510D5767874FB7BD7587FFE8A85E35377DD93D53BDB0A0C63D
DCA521894AECCFE212DA7764B29464E6115950FC91D0D8E57D6CFD8CC47A7026
EBE9E2D29031502672A38E1E353F407D5ACAE2328E36EC5CDEDA752C57E9B05B
A0552EA27C52D90BD7A9FC68FCBDBA95FEB451F1CDA154648BB0C97875DBC88E
44D1DBEF2ACC114AEB9AB51124C7FACD8FC33E5E8A70C1BBC07691B869023B80
F1355EB41AC61E0D63972ADA275CBD38E1C812E7AEE1D2F868CE080BE66A3BA0
ECB7DB74CC5B70540619D87B469DC1376B60F312DEC324B31B9925463626648D
D1F193C2D6A1872141DE6FF4845014B6379A7F72F1879084AC00B6031EF5BA89
90633918F5A211CC9414A94BE79E2896EBA4C090854DD806FF8CF8D4707C3B6C
BC968560E43A9928F7C1302B33DFB91A93FA995AF792FA4ECB9EE4D1B9B5AE2D
6FF99C5A65AF5D9F1D5A2F357435AE71B0292FA781E14282982C1AD13479B617
8D281CAA541FD56D5DC4B8E53AD1E9C1EA0ABC02DF8661DB0F0E9413B8BCE1A3
BB7CDAC928ACF5E79F880F462C4BD3D9B4215B399A3EC36A606C0EC22D17904A
AF144001329CB38269BCFCD3BEB99D558E1BBF66C0831FCE68A3BB831F582215
4704224654D12E881874A2E9F1A4A904FEE686F3B90F35AD68CC26E2E36DED20
5CB35248386EA71CAB1E41EA4D0C1C6E9A8E661F3B3A495AB5227C00F9879B27
393F32C904C56A170F23AA28DBE2955BBA64939D863B13F09F0538290332E968
4C6E9B3ED5E2767118851B93E01E80D140B1D3E84DC0A52286CE9CF8612A3325
A82A3B2D14EA94DA77871E3E5DB662E87168ACEF63C31E82416DAB7247513CAC
C14B8CBD8EB0268DEA962521C2CB65017E39FA39EB858131899EBBADB8AD728A
D67E90ADFADD51AEC22E555DB0B646C624C2BAC68B939354A2069615E1CA2963
E6B887D24D81C14516A86E3CF532C4004E60AB20BB0B6582B203C55279B6778D
5405D301B6453F400E565AD7F9E14B1DABCDA48C539701A25DB30E22B0EE3FA8
84703D1DF07EF2E12C9802AAB56426BFD7E71A8056C7655C3F38501A90A773A9
7D8956D2178F0FD6A8F3171751875DB588077B7851AB718C36FE0CAD339FF96C
C3EB5C97AFC2911CF6BF22BAE1326E80DECEF4C62F612EF9EA245107CA7E0172
0AF62FAEE0F7314C3B3A7BA6CF548FDDFEA51BC09CBFDF30F77BCEF2320A63E9
17DB16E743E4AD3904EBB7801639DDC45D8F5CD84432C0FBE9A5084EB62E1603
C7E5224201D72CAF9B2935E66E18A7830B7502FF8B5171D26A8F58A41565B802
5D257624B3EE5A06A68B857710FE67A9085AFBD092BF5077000CF024F54F5473
5C3E33A53A4C3514D140FE523B895815A21717A547ED696A2B6DBFADF7816D77
FF711BFF1E01A8A61957FC0D48925676189A160B13E37A299335B9E65D6E1725
F39215694891DD7340A5F235AE1BA3C6F3547FF24606651E5887FE8CD061DFB9
6D5030E787961D72D02C195C669E792C0DF3BB2677B3F0D608B7A4B741D98D6F
302CB1578B0EDD5DEEFDFDD85B80344D2F92CEA5ABCA369A6C9857B8186BC201
DD3074E6838601709849377A996334AB244E56288569EFBC8B32CB794A611B4A
1D01B718045E7C89D47A685C4B53AC68930296F1CDAF329E153A3B8C407AC39D
C00842112DAEE535BA335142EFB1E9193C929DB1AC0ADAA30771EA0D71860477
743BB9AF35E1ED5BF128AE5EE80E061142D52151B2F874A2E69F5EEABF5BE3A3
6153EA88A797296F2FE302F23663D9FBD17D506DCD633FF85AB8335BE37225FE
DD4A7A8C4647B450DC78723FB40B625D741828FDFA67CCF6ACFFD348B65FE925
46A8CAD0053ACBDCFEAA78B1C438F0151EF5DDA5944CEAD1E7576E7004D25DA5
6ED8031F3C5714A75072DD0FD6E05E75F1E9039D137B2AEAB2D4358CB69DCD78
80744EF7118595C0B230144E5805C3362F459B92E5EDE4922593FF8799AADAA9
F0B33635764D80CD7FF037EE0A0F3FDF3DD494E0D7DCB9C3949EE03A8B575DEE
AF7F4DE154F78AF4380A48FA971D432D797B92EC0F1118DF8277B318BAFAADA6
2B8D4C029422DCAA84352D727967F960F8BB2881FFF71D7EC3AC6B48CE8A3594
29E8EF0DE16464B61F785CBE4A783198354DC5419299AA55AF836FC8C6F3A733
46EECC44B44CD8EF11B876C5BF67BA726AD57D52C41558DC6243A8B2D68D7337
F20ECD290B758FE1C218E7B6A556ECC24D62546E8C75DAB52F0F1124D8D5A9C9
40EB2C13567B53E2CD41B2E9E7FE264C6134E9BC2A18D6EA03C8406123FC5ED4
FFE137EBF0B978E02B58D8DD236225BA9F1310DB41E69A16AAB002041A0A4B46
0D5D036F930EA0303F066CEADE1CAE64FF8C3D3C98FD52C93306F4A89AC8E959
65A3C79C82898315CEE468F4DE6BDB20E619935816E2533C25674275D5EE119A
61155F340C81083402BF6CB44B26C38327CBA96AEDB8D1D6466A441F541DAE5E
7D0D6E69C9C8118E7D56E48DDF6733C6B5D18F97F8D46BDE3E94FF7116138894
0F7B2DAB8D24655DAE9D44886ABB687AB43CB6E7B93B734C1CA00749253E6CFE
3AF2CC8C8B621E9E46930852518DF60C8C4302F118CC36101F95005A03795FCD
8862E334D8BF5EBE385E3093778B96235511FA3420B9C1E4B8BAEF4546E758E3
D7A00601A7F24ED0E41F7BC797ABDB097F614066FDA7AE8F65031CC7442382EE
56D3AEB130D6B12163FA509443DF0E24D73AA9B765C965D6911FB955ED484458
EC7A47856EDD2F4482CA1EEBAA5C23F704E0B0E9313749E436516518542AB92B
C063CB94BEC45A43707CFD45E588F7F0CEA7717976FBB04E6A3577A216E0EEF0
934AD0C63700B4526A98631477A19FE5E16F02625EA72DC22A2A2D37579F0AF6
0B42320AB25C8D7197E6C46A1CEC6348577FEED9DEB0315A01B1C5E471B7D304
1FDBAE439099A26795368D71319B3F7A50C6DD0D6DDBC01F6ADE5929090413DF
FC45B0AACB0C9C73FA82E4A61F0466B21482C7BF953F4ABCCEE93877C761DC9E
8724CD16747863635CC02C0EFB71049C5EDAECBAA6A6EFE438687C2CE1ED3C49
1022E0A3D258C77C98ED17D587E59EBE82AEA21902BED714B47F8F5727786505
640B773F7D3DD328FE984962B913D09A1F1C5B9B68582FA88B14A33B3832B152
E7DE263C890D572C04B0E339F5C3648EFED121AA4154AD1CE4392C6D856694FD
1ECEDD93D69BA58FC9EE3A559662C583A36889B0D2DAC7CE9ECE44DEBEEABDC7
F1B159D808BF8DB52AA655A7E3304812ECDA0AB6DB5A44A6C2262B286EDF17FD
F6B8E42BF9FC3F2D8336D55D81EE5F4365B862D3DB25A03FABCCF53F13B3CBAD
79CF6BA54EF0769C121D08184ACE269016522842B29A8B3092EF6BB31F1EEACE
14F17F48D3782959A1DA04A777B592888D38EDE68FFB3EFE8383C8B075F91364
9F77D74740BDDC09B2FAEBE1A7FFB357FD4BF1C6964AD6F4FAEE9F0B6F4A1C9C
8FCDA78622AF39B1ECFD4473683CE752445A56F3C953E0080C2F6E390FEC9621
2167ADE22B5728F5F9B1E60889D97FAC2C75FC95DBC3C288FD2689A4650B9642
38A8E854B65861C90940C926EB62475AD1D3F7F34C748CE16F76A93E5F85FCF5
4F0E2EBBEC84C9D839CF9231D4DE942B7951DF1805F0BF6D684FD9084AC279F5
EBCA452889175FC90DDF36F2FDBABB8BF813CB9DB27CB44AA47AA0D4E6482409
B31B2D45B2C2005DDD22E105A1F4AE4D2529C9B9A1CFADF1052B5CAD0B414672
95852D6808EED272D50566ABF6C04C9931543057FCA963E43D248FEA4C74D488
566C8603C4B5A78173F07E3FD7A174C40F2366A89977662B06DFE9A2CD666371
8F996C6DDF899795F71DE1CD9746281F041001D41BF85A2BADAAFE357B446B13
C8880EF4B5C3C090B33F185DC6A9CA2EF3D53B18AABDC8BCF46E61FA4415E6E5
FCA3C6AD820A8ED4978E6E330DA55D3460DC5A5D241FD3677E133346B521BAE6
46C275A7A88797F72670B5D3780ECD1635CCE3A881E4A568FBBAAA0A289E2C05
52F8FBE17F4D8771BFC6109E6D709951694C7DEFC8F2D11C5BC1C5A5A08B9425
28B4FDF9E42A5F69E240C40DA56736E66D332AE7AE9677BBF810EBCC6809D6AA
C253FBB76D129DA851411F7D28F71BFD25F6FBAE4D9D6089F0C35EC708D48FD3
B3B6D764189B894725907E6FF57F4B04B03D4460F5B8EAF3E626D7B094035B9D
1D15568FEDA1A74438EFDB0BAB5655BC02EDC17DE7F03DD9FF4C5536562FFF26
C1CB5FD8E91869E0A83A5567CB78EC3BCB48CC57C8C32E97CD42D32405BC7964
C0BE8ED03A492402821ED1357E2AB27E104F8608B5B569A0F5D6DB7273C63AD9
84CC78F8608FFF953BF97FC634E7DE584BDE5FE9BF1CA0FA760CF3A0204FDB98
FD8F05E6C0D35AE05A53D1015D613B637F19614B32D3113FEDDB8BD432AFA5DD
2F3446643AF9F1BCD69552B351076B53AF9F34FFD9C20FE68BFDC01EF19C34C9
A6885403D18C17AE5C2620AC1BEEBE8A4703D4D84D1B7B4499E585B500D54F9D
0A26FFE769D481F38DD868CD2B4E085BC075BD7242ACD7956921C4B1ADE33FD1
4670C66F070D8CF7E7607B46F12FB6F3E41B0F3C4A5DD8B590DD235A5E32DA7B
A7C540A0E3CA65C90FF5931DADF03DA48AFB8561FC2E7100805FF7A1CE463A36
F540B77EB94DD1BB25D299CF802690A3B70CF5301148D3FF60C0D208A8233A02
00CF7F8E6C8D6CC8AB6FB3AD6AC55575E66721F58FC39D634E3C6700E793F73C
7A6506BC917B840F304A2C9A9D22859D10AC0A4946298381C2DA705BB5069F19
A580755318BB1E29F6F3A1B6E08B071117DCD7E1D83FAE2FDECFF5AFCCE8A7BA
4543C27621FDBA8095A57A0ED59D1FD8F749BB37BF23DD472A01FE93EA14C8ED
5E9949CD49DD86CCBFA61930529B3EE149554EB95268A1A07E6E7BCD1EE19E6A
8E5A62966B7A6BA5E64FABE65A37E50D691811872419BAC56A8FD9FD1DC9F621
C157FC555B4D973E24040EF032F73F6801A8D444C47FB698D76C578D009485AF
F07451FEBD6FD869276EAC3B0E5079A047920ED4CA54820781674673692CE6C1
E789276862A62B2B4CCCEAA8C0CA6CA715213D58C90DC6F1E8D30DA214596757
542192F7CA87F1694E94DF56B10E2A9644B3BC1B2A2D8F2923FCD4DDDDE6FE0C
89FD8C6A6A80494F02A74E3290B5C563266755B07C1E9658B8DA9F48C8E10FB7
F522E822A540F581EC9293DBB7A4F493722E61DB62F5D66C3AE5A35132E20692
1E3123164FD0AAC0858943DD35D61148346D2C00518ABADDEA6ECD7A1713DE7A
D5B63A5D90672E47DA7CB4ABD9B410BEF6473FB4126192FE57A42E919650F00D
4F0240AD2B6D0FF2710FF55BC9FDD467C6FACBC4B11F89A33FAA0EBE495F4B18
12A58E06785C5370E62809CDAADDE5477731E07BBC8FC11DF49A125E7DB2A19C
EAB36F2AAA1D97A808C5F6CBF83CBD288B5106BDCD78C5867AB1E7208BAC32A8
5178D80F0380BD701931BF066F165E93C49518C4CC5E1F2F4DAE9DCE0D91777D
6BB31C9509F7501E561EFDFCB8E2736B24650D6513EB0DFA5729EBDF45C746F7
4ACD5273B668BF0D68D1E11019933932255E64CA4A64BE0D62BE5A00E856F8DC
28ED95B6F914297546E842A1BA859DFFF108B6CA7DBAE995D30FA79F47FF2043
8FF0E862A01CDCDAA35F9880387B45785C2A6FED25180F4035419C04A8DBAF40
01B1A75E37F0B8EC78EE59EF00278C493EF4CF3B2FA7E676945E56923350BBAC
0CF7CE13F17B38CE0FB078E8E0585F0E658DE2D9D2DA8A7F1D81CFABDBCFB93F
1CE208B7854D2FFA0B52AEC0BAB22788328F3E837C79B08A0D430EC5B0B72ED2
CB6AD90790A649E56E319D0180539C7C4D29744876E9677D61D91219C131EEDB
643E95BA23CACEF51D39DE1FF5A65962F6D2D46F27B8C490D251EF5CEAB81803
CE95FA057885CFD7DCFEEEAC1AC027895BAEB6643C283A61B6ED6CDD7BE8A273
A04C8F9210E9C4ECE00BD8D482DEF3BE415B73BB6A3319CDD3D3F40DDDB6A941
A0CC691A06F0F02FD90877BB4BF16337454E773DCCE965FFDE0940A86E00456C
76D4296225700B5BF6002E086030A0B1324CE0138C18E5ECB2ED339DADD6F36E
C7DA6CD04AA96A20127E396BA95C597CABED3A50CCCFD5203C590C5D5901E753
1616016A7C6A48F5A42BEABC88E28B653076CA53A9D73D5FB903C296E7B8D163
ADF58724000F352EE7FCB385152B94403349BABB6C7704E977406D43B19F9221
7A4C47F9C8818FB6B7A241712AC59A63DB5244989CF982AF536FB9508C5F7EAD
4C42E0BD6AE190912DAC612FCE224B6C00F8F4F6193B55E31E9FCDDFA1761BD6
27D86E69BDF08C1356CE7690681A76F31FE8955F98B6EB4F83AD59AAFFCECC01
B368CA9DEAC3A4FCCC29386254DE597AE4C6A8897F9E44E233596DA918AE8880
95A07528C8343292E178983EAD816CB0C26B5F595CADE6F1EDAFB2F2B0B4D2AD
F82AEF3128423EADFE1A499E88284D2FB544B7BDB637868345A942F083422F93
DB1A210C6917BB6A04E89C45507BE1B164CCF12912B16B203007F4E5A56534D8
FF497D5482498D75CC66CBC040648C9619E4EDEBACEB1DCFFF624E00C15FEAB9
1FAFD236C47F453B38DB0067907A28EB5E9D6370B1F06F3A8045F2F5C4FEA561
AB39B0357DF3846D6149C97B09D52283D8A0EAB2BBC969C1C809B9043E9BA858
D54F38918FC4E5DB34D197DA44BD9FA34500075B72503F7B408394D537825C3E
369DA8469B8303B0322D64A2CC9540383368DE382A5AED5538D460D3DBC589F3
07BCE400E9F96CC34E7ED0E5314ADF6474FFF1E11BE17D9F0BF4CBA1EA3CBBA3
D1F3F17A82F9FA7E2CCBF22D5621D28A2FAB089CAD1CB35169B5E03A6D5C369D
CB320DB89681A5A80819BA929CCAC4B35B07FCF178ADDD21FA514C6B9EEF4C58
04E7FDFBB5D0A20D24A429A9164F99E13190C92480439ECC2081B0004DBE82B8
6DFB5222223CBF84A4FD63188C4075C00167E486248EF2CAF94FDC94B58708AF
1E5ED01B4DF28C2D3457FD04758F88E7842553EC0B88C4FEB2051A53DF39AC01
775FB68BD20E7AA0406B2687088E8F68DB4007852B3CD8D1B8A0026CC4062C46
D608FAF16668DAEAC1B7207895D8AAE708196E122DAA1E98C127199A84F066C9
A2C4AA3EAA4D8EBB26E20BB00D228B4EAC4A163E0C3A0808B8DA451662B0E22E
6C9CFA0ADF6CBA96A4D3CFC4D17CD234AE808815D148029DDC2B792BBB7D92ED
CD6DFCFCAD77D5B37F7A9077C5507E474B0B9C993BBAF0D85D563BA978983483
B8E9F23E0627B0B00E5CF46FD14559D153111F2D1120F72EC97E80F7FC76948B
D99882B2114D863304A8C76D1382E660A0B6D5A86178956BF7940F2912421C4F
3BC76FD991ED51EC94BC4C8C0CE36A84A3197D97FB2F10CC9D7A16A40D958AFB
0F2BABD93922C7DB78C54E81C2E4C11086C1F8EECDAB6C133AC3DB55A9E502D2
37B04DF5EC040F30128C21F713D83149911CCE2064C0AFB4D935B09F36A0FBBF
FF3D5179BA96D4C42B0063B3407F3CF897C932FAA1F825B2A9EBFFF45EEE2DE2
CBAA132A8B43EF2DEC53B2FC8C3FC7EFAC5BC5F623465E81758FA86378485C30
0D1B01E06D4E3A5D9B158C2850D3804A3FD46D6C80ACB6E7DC41A0488BD81A96
995486E14DD40726C5DB385565CDA5F6578E98921EEAFD82A9ADDBF268B92DAA
61713675AB1FE72FCE9810E47C9014DC9D60CEC15B6DA376106BA4F97B07E6C7
C5BDB2833E4ACED336BB116AB3BE6175D6DD1CAF80144DD5D926C6BAAA155810
85459FE250BBBC4D930258426AE5F0E9843393E4A54487A84A1FE0826D7F9932
6A41155CFC75A8C70785108131959D62AA6D34A37310436A0F074D76146204E9
EA06013A5495CE3E95BA3CD53A5CF8310567B2B3C5476FB0F676D1D27BE17543
2DF3C803F934690D1EFCBEB637D314982D218CAC5D30D323726526F7E76B943F
B1082E09037CB7DD11925E58081E32B98A6F0F70430579F5FCF839B2E8EB4E5A
0810307CC13A1050AFDB5FD2070031BBBFEE505D46609FCB048910F3D7021165
9CDBCE05F0733AF96D028A769D9E25F7D20104D4A69C2E05352428D4C5BDF29C
DF42654223C32BBDFDDBA1C764174646AD7CF224947456E9F5CE52FCBD642AFA
516A9906D6A7CA92FD4732DD057AEBA832EB995E27D36EEE7386A786E482EC5A
D928D7A460FE8C33947B6536F3963061549BFFDB8444B5ADFF61BE5406E7BC10
B8386B25AB4CF85048789BE20F82A1094FB5DD29CF46BC063ACE8A01DC453833
06CED12CC8A9E303A6B9AE1AE673AEFBAB29855FB3D8891C1CCB0A86D6A0CA26
D77F403C06D65B7394BF1FC7D06D386AEA1C46D517324A5E6FF1135DDEA77C3A
81634324BBDE5F1C939FC76BCA004EF729886B8B4D23228A79F78E00C43FE2F2
9D25BC8614D6C29F336C5E9F60656D2F7B1C027C56AA3C9B7FFF11E9378A08B9
D0AF0BC5CEFAC7AECA3E2E64E5F9E5AD6C0D954C63AD197763069EDC277BFEB0
C2E69B4855FB1875FB25E684AE7DD09D090B185235937A0B37B5F1BC381AE354
99EA5A9CBA58CCAF8E48872DA7E4740F8BBC91379EE330A885FD5F1BCBAD3AFA
A833247E900925AB5E6CEE75B1741A3DD9230A4FC30750B4F8ACE22418F08755
BD425D00D1D5B53BF96C26BB967BDD5BB072E876DBD7E310E31D3CC5E760B824
2AE22788B16C329BD7A7DB1F1484B90C5FCF30F541532B33940E21815820A6A2
C9C88CDE9F60759E0B1A59EBED2A77714C1AF8E0C6A0245047E24E5C08743C03
E696CE60DB20B31D8B8BF6D1B7A7404D833570846D0D8F4F0C823FEE57308EC8
1D16316F21015487644B55DDA2E1146AA3CFCEF3E9D4902C2219481F2E2E4718
FCA2A1DAA2649DEA714BB9CE4FA973134372970A35FBF96123FBADF96FBED934
E08B0E51C8366563CFFF0CC979AD410F813119C55BF00C1EA26A509F71696EFD
6AA65FE8DDCF6896665FA1AB8026845C6313BB0B4C5EC4080E081E216B9F4BDB
061255589EDBD5C7FAF35C6851CF1F50DC361C2E701A8DDC399FE1D8CFA559C9
3999700F1189021D60151254F81E640D484E5F57C00B1336A8F61DE8919B9F5A
5F9156095D1CA40B9417A1DB1BC9CFD7A726E5853FD36D964EA80C9DA4C61281
64F916E33FA94E0AAD969CB264AFB8C0B62A386DA308ADC62BBD45A0CDC511DD
9F49AC35B4A1CAF606D3673A778B833326CE8172363B1B4AEFDFEF2308AF792A
B218A0D298CD90EBD495E25C073D0D16E9D6F28285ADEDEB21109414C1615E41
C6952F8ADF3C605E104DA2811AD7326AE12B896F411E09C15B0506D1F8055553
B6EB85B639AECCCEE6D0DBD0696846364345641202B833F2EA12268DBF4409B8
41B034CB23828A19AE93174891E6086844117D223CC2C4B14C8E3E833E87535C
CB79A40DB04821702D0F93FBF513D7B85603C8A0F37E5710C4E8EDA8362FE97F
209BA574B5D5D039A77BA46591FD5B0BAD9D8392F13CDA64C76941DBDB078EF9
949E93963984F0A6A23DB17B18E4EC033E3F43231E7565907B46A264F4151893
F3AAAA5336A729FA8755702DF94F34D4071E65B1991419335CF5D00CB056EB62
E04FEA0A55503F88BFDF011436D9D5088D559A37C5E5774BCE7CC77605F9C660
EE7F9C7DC4786DB8CF2D60A09920BA5365737C679153F7F2F9E5AB5811332526
38CB2582F75CA7F1BA6327B0A39B251E10606421A5827E0814F1D21FEE501DD6
EEC702869029C91DEE2D76E59ADF7B8EE627BBB16725AB0343406EF987775C4F
DAE51DDDBCF5CD186B769006A8C4DA630D126721C3E4F32DEDCF27F6F4313459
64D7EC49B27366BCBFC852454446457A97395E80B0B978A58EDE8E9FC3BB5F4F
EECA2A8F28EF2935387E3210CF1A247B4A9794FFB25645C229D79B653C8924EA
89BA1CCA966D0AA69E2AFCCBB41E1272EECD29EDB3025F9B12B5215ADCE28408
B2D37A45A80B6EA8EC9363C4496E88651E5FD7D5185380E1D346582C2E719ACB
75A70367913F69BCB69A3CFBD921F0CA89ABBEE5B7886F0CB27373524C39EB62
D2D8F3A71464A4FDA8F96C2E130157F5D625228A4D9CA864654EC7DF5F707023
A5FA5306CD8C2CE2CE97F590E1530644E4601D291DA077BE63D94C9BCB476ADC
DB4A49B7B4737AD52783C5737C44F9E81FD417458095CEB1D234F2618EBCA323
CC1B73E3AB241E4E95C8D8362ACB1FF84A44F975CC568F473D4DD1C15A47185B
61E123DF66FE19E730E41E15F6762B5E01B93B02F3963828796947D853990D03
31B2DEBFA31B50103F6332290E522C15C74514792333087E98A8C64083C6E51F
0E0BF50829783C371AEC661475905983E84F59B8F57165B37F41C142A35D3EDB
52900657F018FF227701992647C9DB8E4802CDEE37154924F4739C650A8EF8D2
38C73BD6689A0657DD482B7706ADAF1B24FEA02222D4B0EE989B48B94474ABB7
06FA2C35C2588C904D214B34BF4AAF793DB9E52A967FCEF677D3E2B31056F217
B2BB9C6F38617CBEE762A049E849617809FB8B2F24322AB310F16A60F884A588
9E953DA6097C93F217F851A9E251C407E655C9C0304305E5D2542C638A9A3290
7BC6AB6E2B4761FA8430E43AA76644C4DFC75455A2200DBC805F99EC797F4997
9E2083BC58AC6096B9FFB9528ABB5CF947610CBE28AD7A67CEBAD901F3AD3A81
23DC0D07C9AE01CB5374C727B32D6A4F639D0B81EE0A1007F49D869222D13CFD
F5992DD961EB8651FA565118A0879107B23BEA0A8C70A9A506C02981DDD3ED77
85E4749C80980C93D33ACF3D4E8D9CB1545A0AF6AD4607D51AA35CDF99D8776D
D7434A6AC5C391B07EB542990B71533BF0276DB3DCAE4B0B3A76793F635F97D0
0D08EE3BBAABC0D90638338645941A4BDB630F29B13F38CACAF6F08C1C16A1EE
BCE90A95C5E4E518E99528808E4E4702B9EA26AE7D8F1FBEBB19B27498D264E5
A199EC2ECD29C06D1C6C48948C45C925E8C00BB3E642A64685456B6BAF629AB8
0858A9E48EDC00A8415D70BD5463DC64D0B5DA5324939596E5A169C0D3B776E5
E469A0E168DFB6AEF318B1F51BA4B3C16953DAED7A0061A540F22CB81BC3816E
6267EAF2647B0A4E33288FF3508ABFBC38F3AFD684646C133952B649EE94D1CE
DF1E2D29BB43864AB5B770A14C98A4335A963F26AC8CF5ACABBA90B45A486433
4BCB401296D20A79169A266871978FFA3BFECE3465E9F0918267336E1ACD9622
969F5488761BF2229D98546B4D60320FA0F1815A171717E42CCFB6922C2D5D6F
DE3D0553CAB203DF8D9CB2CA9BC97C804325EC599D755882E751A70A0EAE62B4
7372105F841A259EF699DB0CD08D81478BA57338AB558A543C549693D3DDDBF8
B9E8EDBE199B899A6C6EAACC244852267155E9595327E348EA30C10EC4FE5559
01F7AE7E5C4F9A5ACF9D140BB494D0F41C0519E7F586F1B80B332D76F59E6621
1F9A875A1C25F7D6A8D961E29788E0613C0947FCF0BDBA0F1368D3E38954279E
5FBAA7B7D96F1E7EBF3D9A4DEFC8E6C0C145EE09CDFF8BE55A05F82998758C9C
0692E9E9017C2C0F7D5C198848D8DF9C2ACC48BC4377CC1BC095304CD782CFA3
FC106438C4ED95CD0440A10C20518264F004513EA7C21AB713B0C9780572F045
B32289A2AE66CC44A1C13FB8BBD4E182A2F947F46CFA54D4184BA475B5D0F236
1EAADB7574BD5C3F21B2AB6FA1AE122A3004B41BC98501FD21BEA832D0AF1C8D
AB1C09D22FBC1FA4B08158BADEC7D2872990E75669D7AF3ED443E932F28C1FBC
220A4657478652DBF3C64D22CA556E23D42C79FFF7E1CB0F2199F55A7B7C488C
3838D7F8D11482A0DFA99F57C171FBC479980379169D62C51134B7EF26D10EE0
5685EA4B31E5396C42875A0B65F70E23734E5A7F68B96A78AD524546E1FBA306
2AA43B42B106FC9F431EE4199FA93BECBFA8E65256D66CE9042D34FFFAC353D6
91D77E3C0693A37DEA84B0633460821B7847393ED199BCF4B603863FB9993BF1
A337D0E0BD0DD81CCEB228F0B38E5215683BC2CF7E387414E4A0175E26DFACFC
751F8B708A82FB4436C49C78DA39CE550D306412ED74418D5DE5277152AFCB83
B29FD643EF56A477B3DFBC1FF91A5C81A1F24E07B261FAA73542DB0DD5BD8BC6
A7582B85E40BFAF42265513EF8CD3CE25058423109226CC97F9248BCFC22DB3C
AADC734D10840CD0504CC8666C64BA831C0992BFD1C77BF9ECE6A911C2E81DEC
6A94DEC9BF949C7CAF3DF195AE7E6F4D20CA006E6C48AF17F05ADB17708940A4
C2746B7D09BD5A6E06D0E646156C50A6FC6C0C09C65A7DB1E9233B2E2832AB3E
9EE088211AD9CD6474DD6DD9A781CC9F5ABFDB71AC6712326147795602BA26AB
D34C284A8A52984FCC62617C5AA6335EA80DA1C53C5FEC66330EE9DFC5979BDB
E6621DC33D7FE20CF8B43E6334EDFFBC4851929C423B6D98FB5D81EAF8FDDB7E
44ABDC54F40703FE7FCE4C45C4DBAC164E3D03D9C2241143ACA5BC701F7F12D2
944350FA2963996A30D6DC7A6341EE709A270827B3068221A80C56297C56D270
8B772BA6B0DB00F3AB9EDA3F978513F8754E24C62747BDA783968D86ED4E1B29
8F03CEB1DAADADF6EAAAD55C437136EF4E084C43A6A9E86AA3F42BE18AF4561B
EED6F13CDAF39675BD2A92C31DC535C4C5F47580DD9B991C24883E1225FD90AE
BC73A7EE8F57C81DF5E9389A39571FB7767D1D6BCDE69DCB2798DBD5ED06EC4F
5E8A91431946669B936589B06771F609576D51097CEC47898477228482487F3C
D1D6CE617DAC0615412F9A25F1AEC5659471E291AE3DAB384313D9B95B28A624
AC4590D97995D3C6EFC6AC367A3E724715EEC9C62749AE59427BC019A89599F8
6D8DBFC0646C1B9E0113A1C02B62328A55A23793CDADECACAF2A40D0DA6040D6
1A806D10622B96E1E6E683D2545B0E286D1BC92AE4DF62EB684A22568B179752
8065E1F077D32318B9E33F5989D861C2C0D36FE35EF01D45DBC297706724DF91
EBF8EB6E7EECEB4F6D3A7D616B5776CF0201886444D2CEA88AF6378E074E6733
344918707E056E6DF2050D1451F49AF2086F72C1957DF8794912D6B2A394FCFF
0A4B0D12EABF64DE3BB61C626A33D3182B5605EC2C9E33F50DC49A872AACAEC7
7B6E8F7CA5DA5C69C1306E887FC721E9D752104DF2C738F401E2F22800F1C851
A6AB98EF74DA00E561372510E38A11EE3A1A7D870F92BE2BBEEE1A73FC674400
3516BF9C18F1B3F086E1A60D9FC3B68AD0BAEC10CD0616AF02286352EBBEB717
C7969FFAE73E095B57547DEFDB9B738C8F7904CA9252E4BFA193576476D8AB90
50496FAE0E87CFA9249DF425258FDAFFD424510F8B5B70FF4E962626AA48336A
1717D73C372D5FE2FF91BCE3B71D09B9324F17BEAE248CE1F7E9E3048A818488
6E6662C81232F24814CD3E353F871B72AB1EF7B9B26C2A69080574EBD7BE7A13
11BA3AD081C67485C54A03408A1863C034F82A31386D6151D9C1202609BC68E9
3A4E78A79A0C1E82FD9CAB76E5D3892221BDC9A7C2687D9D2854A2499AABD5A9
FA4D18A05926261DF1C801CF63F0B71A7C046BDC6DF17A2A60CC1F3DA3AF0781
26540BD2D48B69B3CDA112B4A3D59286F02CED88931EE2AC3985A6444999DA22
45556B367F1E7EA66F443AEF54FF81EC0D3A09F1B937CFC8FF03A161BAE9EDCF
2708AA0D7A911CFAE6CE7D653B2556C24343DEF89340C5232C8F230640500EEE
CE84F332FB505DB3A3E3F07E45C94CE8B86DAD04612478F47F88E8252FC631FF
AFA0F554C8530D0577BB4BF16337454EB5D175ABF4E442E46D250A31FA386DC3
304615DE53AF69B19DECBD09D239CBF7B4F02F1D95DC5174E50A56E966634BCC
5FE4F1C14CF075F70A8BB95BF5D494EA4DD4C1359A4EB1FFCB5F9C5B36EFB58B
2947D13F590A9EFBECCA2B266452AF1784358C95D77A8ABB87C4B4873714ADA9
47FBF8360C3696330E16B965CB6F2C39534F12614E0D54E896C002FC183E5D19
B19FD404F64B5EF26F6FB1BBFDE26CDB975B333A8695A2F062F69B935148E8DE
2F3A4EE44B0324C36D5C9CBDA7A64CBB54F55A192D587A289C7E7ECB466E5B8B
DC6CA6DBEBBB6DB2540DAE972490499DB3567F289298A69F7947CBE518DE4AAB
55AF82AF87984334D8E76BAD22BA29D339C747E83B562D653BBEB6A99725AFB0
0DFF6F8E075D74C3B1AD0BAA75A3093118484CE2705C454A84F12F46592D1F30
54E6631E85E35432E8D46E8307A684B0432DE9047E2685DBF411A2249D8AA1B2
5F657980D1291A5D80610591714EC08E1ADE67D047F410CD1709FFF5B24490D4
D30CBDB45763B44D31812531B9DACE5455758758241D75D2E39837EE4B66B30F
1BC2F65AF7CB46F1DAA4713CE987C97E1E715722C22E753CB0B8DE41915E54DF
672E43A1CBE153C70E08B63ED82ED2CFA0D96D3BA49633F18DB2D811D528D153
2392C19B79CB0807A6A2A2224665D68CFF6687283DE3E952F177F0BD262BC4E8
D683720FC6AFFACB0D581B1384039664D4D1F4DB51BFE24F9CE4543D3047846A
72F9A57DA97B7BEE14B187E36D162854077D95DAC3CAF865571696A55077C730
0F05F11346358A71551C94348F26A20BCB7CD3F58F09714D92031E48741A3456
6A406C3068BAAA14AF6CCEBA2F1D5F172537F9A5116DED5607C07BD771890FF3
7B87061E0D535CAB43EEFBEE05CD4C4E6E28A842A61A47B1AA8505ACFD7C4819
C593D59232A8572CBF1FB4120133B672DCB35CAEBFCFB763FF5B92465FBD2CF1
9A3E824129806AFC6EDABAB333245898996E328A5D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/A)
@start /Fa 173[959 82[{}1 1328.35 /MSBM10 rf /Fb 205[886
48[369 1033{ enclmmathsy ReEncodeFont }3 1328.35
/LMMathSymbols10-Regular rf /Fc 165[615 7[523 82[{
 enclmmathex ReEncodeFont }2 1106.96 /LMMathExtension10-Regular
rf /Fd 203[993 1[993 50[{}2 1328.35 /wasy10 rf /Fe 242[1594
13[{ enclmmathsy ReEncodeFont }1 1594.02 /LMMathSymbols10-Regular
rf /Ff 138[449 4[449 3[234 427 1[234 3[363 449 2[406
9[811 5[621 22[234 58[{ enclmec ReEncodeFont }11 664.176
/LMRoman6-Regular rf /Fg 177[830 12[830 13[553 1[553
2[307 46[{ enclmec ReEncodeFont }5 1106.96 /LMRoman10-Regular
rf /Fh 160[909 45[606 1[606 47[{ enclmec ReEncodeFont }3
1212.12 /LMRoman10-Regular rf /Fi 162[361 1[361 29[1012
7[650 4[650 4[1012 1[506 506 40[{ enclmrm ReEncodeFont }8
1328.35 /LMRoman12-Regular rf /Fj 153[452 3[403 500 38[261
58[{ enclmmathit ReEncodeFont }4 885.568 /LMMathItalic8-Regular
rf /Fk 202[470 1[470 470 470 470 48[{ enclmrm ReEncodeFont }5
885.568 /LMRoman8-Regular rf /Fl 207[255 47[732{
 enclmmathsy ReEncodeFont }2 885.568 /LMMathSymbols8-Regular
rf /Fm 135[739 16[623 641 1[676 560 553 683 8[1079 16[1026
842 10[361 59[{ enclmmathit ReEncodeFont }11 1328.35
/LMMathItalic12-Regular rf /Fn 650 2[723 5[650 17[650
105[578 686 686 939 686 723 506 513 506 1[723 650 723
1084 361 686 397 361 723 650 397 578 723 578 723 650
6[795 2[1336 2[939 723 2[885 1[975 2[1011 1[469 1[1021
849 885 993 1[921 975 6[361 5[650 650 650 650 2[361 434
361 2[506 506 6[361 4[723 759 8[613 1[613 16[{ enclmec ReEncodeFont }58
1328.35 /LMRoman12-Regular rf /Fo 133[956 4[1196 837
849 879 2[1076 1196 1793 598 1136 1[598 1[1076 658 982
1196 1[1196 1046 12[1497 1196 3[1616 1682 2041 1293 2[801
2[1353 1412 1[1554 1530 1625 10[1076 1076 1076 1076 1076
1076 1[1076 598 717 45[{ enclmec ReEncodeFont }38 1912.83
/LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fo(AN)1005
b(3.1)f(-)h(1)g(Ableitungsfunktion)999 b(einer)1004 b(linearen)f(F)-179
b(unktion)1002 b(-)-2331 4515 y(O)-60 b(A)718 b(-)g(BIFIE)p
0 TeXcolorgray -741 7823 a Fn(1.)p 0 TeXcolorgray 651
w(In)433 b(der)g(Abbildung)g(ist)h(der)f(Graph)f(einer)i(linearen)f(F)
-108 b(unktion)433 b(f)h(dargestellt.)921 10368 y(Zeic)-36
b(hne)433 b(die)g(Ableitungsfunktion)h Fm(f)19848 9886
y Fl(0)20592 10368 y Fn(der)f(F)-108 b(unktion)433 b
Fm(f)575 b Fn(ein!)921 50035 y
 currentpoint currentpoint translate 1.35347 1.35347 scale neg exch
neg exch translate
 921 50035 a 921 50035
a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 300.197 a add def
/d 0.0 a add neg def /h 245.30598 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 50035 a 15645 45061 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 8 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 167.18335 0.0 -133.01366 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -113.811 0.0 T 11 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 200.37534 0.0 -22.1688   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 167.18335  0 -133.01366  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -133.01366
 167.18335  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-44.93065  def /maxTickline 200.37534  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 0.5 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 56.9055  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 56.9055
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 200.37534
0.0 -44.93065   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 167.18335
0.0 -133.01366 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 200.37534  0 -44.93065  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -44.93065
 200.37534  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-133.01366  def /maxTickline 167.18335  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 0.5 abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 56.9055  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 56.9055  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 200.37534
0.0 -44.93065   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 167.18335
0.0 -133.01366 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 13668 42197 a
Fk(0)p Fj(:)p Fk(5)13668 39048 y(1)p Fj(:)p Fk(0)13668
35898 y(1)p Fj(:)p Fk(5)13668 32748 y(2)p Fj(:)p Fk(0)13668
29599 y(2)p Fj(:)p Fk(5)13668 26449 y(3)p Fj(:)p Fk(0)12936
48450 y Fl(\000)p Fk(0)p Fj(:)p Fk(5)18193 46407 y(0)p
Fj(:)p Fk(5)1949 b(1)p Fj(:)p Fk(0)g(1)p Fj(:)p Fk(5)f(2)p
Fj(:)p Fk(0)h(2)p Fj(:)p Fk(5)-20465 b Fl(\000)p Fk(0)p
Fj(:)p Fk(5)-5082 b Fl(\000)p Fk(1)p Fj(:)p Fk(0)f Fl(\000)p
Fk(1)p Fj(:)p Fk(5)h Fl(\000)p Fk(2)p Fj(:)p Fk(0)15645
45061 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 15645 45061 a 15645 45061 a
tx@Dict begin  { 167.18335 200.37534 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 15645 45061 a 15645
45061 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 15645 45061 a 15302 45347 a Fn(x)15645 45061
y
tx@Dict begin  PutEnd  end
 15645 45061 a 15645 45061 a
tx@Dict begin  PutEnd  end
 15645 45061 a 15645 45061
a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 15645 45061 a 15645 45061 a
tx@Dict begin  { 0.0 0.0 pop 167.18335 200.37534 exch pop } PutCoor
PutBegin  end
 15645 45061 a 15645 45061
a
tx@Dict begin  { 5.0 6.2015 5.16667 2.33331 -40.  Uput UUput } PutCoor
PutBegin  end
 15645 45061 a 15302 45218 a Fn(y)15645 45061 y
tx@Dict begin  PutEnd  end
 15645
45061 a 15645 45061 a
tx@Dict begin  PutEnd  end
 15645 45061 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -2.3374442326058738 def /x1 2.9379173276093633
def /dx x1 x sub 49 div def /F@pstplot ((--2.--0.5*x)/1.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 56.9055 mul F@pstplot 56.9055 mul
} def  /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy
 dup 1.e30 56.9055 mul gt { moveto } { dup -1.e30 56.9055 mul lt {
moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 56.9055 mul gt { moveto } { dup -1.e30
56.9055 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 0.8 SLW
0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end


@endspecial 1 0 0 TeXcolorrgb @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def    /x -2.3374442326058738
def /x1 2.9379173276093633 def /dx x1 x sub 49 div def /F@pstplot ((--0.5-0.*x)/1.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 56.9055 mul F@pstplot
56.9055 mul } def  /ps@Exit false def xy moveto  49 1 sub { /x x dx
add def xy  dup 1.e30 56.9055 mul gt { moveto } { dup -1.e30 56.9055
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 56.9055 mul gt { moveto } { dup
-1.e30 56.9055 mul lt { moveto } { L } ifelse } ifelse  } if  gsave
0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end


@endspecial 0 0 0 TeXcolorrgb 15645 45061 a
tx@Dict begin  { -106.97133 66.8485 } PutCoor PutBegin  end
 15645 45061
a -172 x Fj(f)15645 45061 y
tx@Dict begin  PutEnd  end
 15645 45061 a 1 0 0 TeXcolorrgb
0 TeXcolorgray 34152 50035 a
currentpoint initclip moveto
 34152 50035 a 921 50035
a
 currentpoint currentpoint translate 1 1.35347 div 1 1.35347 div scale
neg exch neg exch translate
 921 50035 a 1 0 0 TeXcolorrgb 6529 x Fn(Die)513 b(A)-36
b(ufgab)36 b(e)512 b(gilt)h(als)g(ric)-36 b(h)g(tig)512
b(gel\366st,)i(w)-36 b(enn)512 b(der)f(Graph)g(v)-36
b(on)513 b Fm(f)34470 56082 y Fl(0)35292 56564 y Fn(deutlic)-36
b(h)512 b(erk)-36 b(enn)g(bar)921 58556 y(eine)402 b(k)-36
b(onstan)g(te)402 b(F)-108 b(unktion)401 b(mit)h(der)f(F)-108
b(unktionsgleic)-36 b(h)g(ung)401 b Fm(f)31588 58074
y Fl(0)31898 58556 y Fi(\()p Fm(x)p Fi(\))369 b(=)g(0)p
Fm(;)p Fi(5)403 b Fn(ist.)f(Die)h(F)-108 b(unkti-)921
60548 y(onsgleic)-36 b(h)g(ung)434 b(der)f(1.)h(Ableitung)f(m)-36
b(uss)433 b(nic)-36 b(h)g(t)433 b(angegeb)36 b(en)433
b(sein.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7823 a Fh(___/1)p 1 0 0 TeXcolorrgb 47998 9815
a Fg(AN)369 b(3.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 64282 54804 45 v 0 TeXcolorgray
24746 81281 a Fn(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fo(AN)718 b(3.1)f(-)h(2)f(Stammfunktion)e(-)i
(L)-179 b(T)717 b(-)g(BIFIE)p 0 TeXcolorgray -741 4800
a Fn(2.)p 0 TeXcolorgray 651 w(Es)380 b(gilt)h(die)g(A)-36
b(ussage:)381 b(\022Besitzt)f(eine)h(F)-108 b(unktion)379
b Fm(f)522 b Fn(eine)381 b(Stammfunktion,)f(so)h(b)36
b(esitzt)380 b(sie)921 6792 y(sogar)462 b(unendlic)-36
b(h)460 b(viele.)k(Ist)d(n\344mlic)-36 b(h)462 b Fm(F)642
b Fn(eine)461 b(Stammfunktion)h(v)-36 b(on)462 b Fm(f)142
b Fn(,)461 b(so)h(ist)g(f\374r)f(jede)921 8784 y(b)36
b(eliebige)519 b(reelle)g(Zahl)f Fm(c)g Fn(auc)-36 b(h)517
b(die)i(durc)-36 b(h)516 b Fm(G)p Fi(\()p Fm(x)p Fi(\))d(=)f
Fm(F)181 b Fi(\()p Fm(x)p Fi(\))353 b(+)f Fm(c)518 b
Fn(de\034nierte)f(F)-108 b(unktion)517 b Fm(G)921 10776
y Fn(eine)434 b(Stammfunktion)f(v)-36 b(on)434 b Fm(f)142
b Fn(.)-181 b(\020)p 0 TeXcolorgray 0 TeXcolorgray 39496
13398 a Ff(Quelle:)275 b(Wikip)22 b(edia)921 17051 y
Fn(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36 b(k)g(en)358
b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357 b(Ankreuzen)g(der)h(jew)-36
b(eils)360 b(ric)-36 b(h)g(tigen)921 19043 y(Satzteile)434
b(so,)g(dass)g(eine)f(mathematisc)-36 b(h)434 b(k)-36
b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36 b(tsteh)g(t!)921
22533 y(Ist)366 b(die)f(F)-108 b(unktion)365 b Fm(F)546
b Fn(eine)366 b(Stammfunktion)f Fm(f)142 b Fn(,)366 b(dann)f(gilt)p
30610 22533 3150 45 v 34232 22485 a(1)33760 22533 y Fe(\015)p
35354 22533 V 3515 w Fn(.)i(Gilt)e(zudem)p 921 24525
V 4542 24477 a(2)4071 24525 y Fe(\015)p 5665 24525 V
3583 w Fn(,)434 b(dann)e(ist)i(auc)-36 b(h)433 b(die)h(F)-108
b(unktion)432 b(G)i(eine)f(Stammfunktion)h(v)-36 b(on)433
b Fm(f)142 b Fn(.)p 0 TeXcolorgray 0 TeXcolorgray 9577
25897 11583 45 v 9577 28981 45 3085 v 15043 27678 a(1)14571
27726 y Fe(\015)p 21115 28981 V 9577 29026 11583 45 v
9577 32359 45 3334 v 10285 31082 a Fm(F)181 b Fi(\()p
Fm(x)p Fi(\))369 b(=)f Fm(f)142 b Fi(\()p Fm(x)p Fi(\))p
18750 32359 V 19459 31024 a Fd(2)p 21115 32359 V 9577
32403 11583 45 v 9577 35736 45 3334 v 10285 34459 a Fm(F)181
b Fi(\()p Fm(x)p Fi(\))369 b(=)f Fm(f)15591 33977 y Fl(0)15902
34459 y Fi(\()p Fm(x)p Fi(\))p 18750 35736 V 19459 34401
a Fd(2)p 21115 35736 V 9577 35780 11583 45 v 9577 39113
45 3334 v 10285 37836 a Fm(F)11308 37354 y Fl(0)11618
37836 y Fi(\()p Fm(x)p Fi(\))h(=)g Fm(f)142 b Fi(\()p
Fm(x)p Fi(\))p 18750 39113 V 1 0 0 TeXcolorrgb 19459
37779 a Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 21115 39113 V 9577 39157 11583 45 v 0 TeXcolorgray
0 TeXcolorgray 29910 25897 15987 45 v 29910 28981 45
3085 v 37578 27678 a Fn(2)37106 27726 y Fe(\015)p 45852
28981 V 29910 29026 15987 45 v 29910 32359 45 3334 v
30619 31082 a Fm(G)31645 30600 y Fl(0)31955 31082 y Fi(\()p
Fm(x)p Fi(\))369 b(=)f Fm(F)36478 30600 y Fl(0)36789
31082 y Fi(\()p Fm(x)p Fi(\))g(=)h Fm(f)142 b Fi(\()p
Fm(x)p Fi(\))p 43487 32359 V 1 0 0 TeXcolorrgb 44195
31024 a Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45852 32359 V 29910 32403 15987 45 v 29910
35736 45 3334 v 30619 34459 a Fm(G)p Fi(\()p Fm(x)p Fi(\))368
b(=)h Fm(F)181 b Fi(\()p Fm(x)p Fi(\))368 b(=)h Fm(f)40451
33977 y Fl(0)40761 34459 y Fi(\()p Fm(x)p Fi(\))p 43487
35736 V 44195 34401 a Fd(2)p 45852 35736 V 29910 35780
15987 45 v 29910 39113 45 3334 v 30619 37836 a Fm(G)31645
37354 y Fl(0)31955 37836 y Fi(\()p Fm(x)p Fi(\))g(=)f
Fm(F)181 b Fi(\()p Fm(x)p Fi(\))369 b(=)f Fm(f)40761
37354 y Fl(0)41072 37836 y Fi(\()p Fm(x)p Fi(\))p 43487
39113 V 44195 37779 a Fd(2)p 45852 39113 V 29910 39157
15987 45 v 47992 4800 a Fh(___/1)p 1 0 0 TeXcolorrgb
47998 6792 a Fg(AN)h(3.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 43186 54804 45 v 0 TeXcolorgray
24746 81281 a Fn(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fo(AN)718 b(3.1)f(-)h(3)f(A)-60
b(ussagen)716 b(zum)i(In)-60 b(tegral)717 b(-)g(MC)h(-)g(BIFIE)p
0 TeXcolorgray -741 4800 a Fn(3.)p 0 TeXcolorgray 651
w(Nac)-36 b(hstehend)467 b(w)-36 b(erden)468 b(A)-36
b(ussagen)469 b(zu)f(F)-108 b(unktionen)468 b(und)f(deren)h
(Stammfunktionen)g(an-)921 6792 y(gef\374hrt.)921 11330
y(Kreuze)433 b(die)h(zutre\033ende\(n\))d(A)-36 b(ussage\(n\))433
b(an.)p 1062 12370 44260 45 v 1062 19980 45 7610 v 1770
14238 a(Ist)h Fm(F)614 b Fn(Stammfunktion)434 b(v)-36
b(on)434 b Fm(f)142 b Fn(,)433 b(so)h(gilt:)4814 16519
y Fc(Z)5921 16870 y Fj(b)5429 19035 y(a)6600 18082 y
Fm(f)142 b Fi(\()p Fm(x)p Fi(\))p Fm(dx)369 b Fi(=)f
Fm(F)181 b Fi(\()p Fm(b)p Fi(\))295 b Fb(\000)g Fm(F)181
b Fi(\()p Fm(a)p Fi(\))p 42912 19980 V 1 0 0 TeXcolorrgb
43621 16507 a Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 19980 V 1062 20024 44260 45 v 1062
27152 45 7129 v 1770 21965 a Fn(Die)421 b(Stammfunktion)f(einer)g
(Summe)g(v)-36 b(on)420 b(zw)-36 b(ei)421 b(F)-108 b(unktionen)419
b Fm(f)562 b Fn(und)419 b Fm(g)467 b Fn(ist)421 b(\(ab-)1770
23957 y(gesehen)371 b(v)-36 b(on)370 b(In)-36 b(tegrationsk)g(onstan)g
(ten\))370 b(gleic)-36 b(h)371 b(der)e(Summe)h(der)g(Stammfunk-)1770
25949 y(tionen)434 b(v)-36 b(on)434 b Fm(f)575 b Fn(und)433
b Fm(g)48 b Fn(.)p 42912 27152 V 1 0 0 TeXcolorrgb 43621
23920 a Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45277 27152 V 1062 27196 44260 45 v 1062
30318 45 3123 v 1770 29115 a Fm(f)576 b Fn(ist)434 b(immer)f(eine)h
(Stammfunktion)f(v)-36 b(on)434 b Fm(f)24010 28633 y
Fl(0)24321 29115 y Fn(.)p 42912 30318 V 1 0 0 TeXcolorrgb
43621 29089 a Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 30318 V 1062 30363 44260 45 v 1062
35059 45 4696 v 1770 33202 a Fn(W)-108 b(enn)5588 32304
y Fm(dF)181 b Fi(\()p Fm(x)p Fi(\))p 5588 32893 3450
45 v 6605 34114 a Fm(dx)9539 33202 y Fi(=)369 b Fm(f)142
b Fi(\()p Fm(x)p Fi(\))p Fn(,)433 b(dann)g(ist)h Fm(F)614
b Fn(eine)434 b(Stammfunktion)f(v)-36 b(on)434 b Fm(f)142
b Fn(.)p 42912 35059 45 4696 v 1 0 0 TeXcolorrgb 43621
33043 a Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45277 35059 V 1062 35103 44260 45 v 1062
42453 45 7351 v 1770 36970 a Fn(F)-27 b(\374r)433 b(b)36
b(eliebige)435 b(F)-108 b(unktionen)432 b Fm(f)575 b
Fn(und)433 b Fm(g)481 b Fn(gilt:)1770 39049 y Fc(Z)3099
40611 y Fi([)8 b Fm(f)142 b Fi(\()p Fm(x)p Fi(\))295
b Fb(\001)g Fm(g)48 b Fi(\()p Fm(x)p Fi(\)])221 b Fm(dx)369
b Fi(=)13129 39049 y Fc(Z)14458 40611 y Fm(f)142 b Fi(\()p
Fm(x)p Fi(\))p Fm(dx)295 b Fb(\001)19366 39049 y Fc(Z)20694
40611 y Fm(g)48 b Fi(\()p Fm(x)p Fi(\))p Fm(dx)p 42912
42453 V 45277 42453 V 1062 42498 44260 45 v 47992 4800
a Fh(___/1)p 1 0 0 TeXcolorrgb 47998 6792 a Fg(AN)369
b(3.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 46526 54804 45 v 0 TeXcolorgray 24746 81281 a Fn(3)p
0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fo(AN)587 b(3.1)g(-)g(4)g(Ableitungs-)e(und)g
(Stammfunktion)f(-)j(MC)h(-)f(Matura)-2331 4515 y(NT)718
b(2)f(15/16)p 0 TeXcolorgray -741 7823 a Fn(4.)p 0 TeXcolorgray
651 w(Es)434 b(sei)f Fm(f)576 b Fn(eine)434 b(P)-36 b(olynomfunktion)
434 b(und)f Fm(F)614 b Fn(eine)433 b(ihrer)h(Stammfunktionen.)921
10368 y(Kreuze)f(die)h(b)36 b(eiden)433 b(zutre\033enden)e(A)-36
b(ussagen)434 b(an.)p 1062 13327 44260 45 v 1062 18463
45 5137 v 1770 15194 a(Eine)g(F)-108 b(unktion)433 b
Fm(F)614 b Fn(hei\377t)434 b(Stammfunktion)f(der)g(F)-108
b(unktion)433 b Fm(f)142 b Fn(,)434 b(w)-36 b(enn)433
b(gilt:)1770 17186 y Fm(f)142 b Fi(\()p Fm(x)p Fi(\))369
b(=)g Fm(F)181 b Fi(\()p Fm(X)104 b Fi(\))295 b(+)g Fm(c)221
b Fi(\()p Fm(c)369 b Fb(2)f Fa(R)p Fi(\))p Fn(.)p 42912
18463 V 45277 18463 V 1062 18507 44260 45 v 1062 23695
45 5188 v 1770 20426 a(Eine)434 b(F)-108 b(unktion)433
b Fm(f)11080 19944 y Fl(0)11824 20426 y Fn(hei\377t)h
(Ableitungsfunktion)f(v)-36 b(on)434 b Fm(f)142 b Fn(,)434
b(w)-36 b(enn)433 b(gilt:)1770 21471 y Fc(R)2730 22418
y Fm(f)142 b Fi(\()p Fm(x)p Fi(\))p Fm(dx)368 b Fi(=)h
Fm(f)9211 21936 y Fl(0)9522 22418 y Fi(\()p Fm(x)p Fi(\))o
Fn(.)p 42912 23695 V 45277 23695 V 1062 23739 44260 45
v 1062 28876 45 5137 v 1770 25680 a(W)-108 b(enn)433
b(die)h(F)-108 b(unktion)433 b Fm(f)575 b Fn(an)434 b(der)f(Stelle)g
Fm(x)22639 25879 y Fk(0)23599 25680 y Fn(de\034niert)f(ist,)i(gibt)g
Fm(f)34361 25198 y Fl(0)34671 25680 y Fi(\()p Fm(x)35916
25879 y Fk(0)36442 25680 y Fi(\))g Fn(die)f(Stei-)1770
27672 y(gung)h(der)f(T)-108 b(angen)-36 b(te)433 b(an)h(den)f(Graphen)f
(v)-36 b(on)434 b Fm(f)575 b Fn(an)434 b(dieser)f(Stelle)h(an.)p
42912 28876 V 1 0 0 TeXcolorrgb 43621 26640 a Fd(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
28876 V 1062 28920 44260 45 v 1062 33724 45 4805 v 1770
30787 a Fn(Die)335 b(F)-108 b(unktion)334 b Fm(f)476
b Fn(hat)333 b(unendlic)-36 b(h)333 b(viele)i(Stammfunktionen,)f(die)h
(sic)-36 b(h)333 b(n)-36 b(ur)333 b(durc)-36 b(h)1770
32779 y(eine)434 b(additiv)-36 b(e)434 b(K)-36 b(onstan)g(te)433
b(un)-36 b(tersc)g(heiden.)p 42912 33724 V 1 0 0 TeXcolorrgb
43621 31654 a Fd(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 33724 V 1062 33768 44260 45 v 1062
38823 45 5056 v 1770 35628 a Fn(W)-108 b(enn)365 b(man)g(die)g
(Stammfunktion)g Fm(F)545 b Fn(einmal)366 b(in)-36 b(tegriert,)365
b(dann)f(erh\344lt)h(man)g(die)1770 37620 y(F)-108 b(unktion)433
b Fm(f)142 b Fn(.)p 42912 38823 V 45277 38823 V 1062
38868 44260 45 v 47992 7823 a Fh(___/1)p 1 0 0 TeXcolorrgb
47998 9815 a Fg(AN)369 b(3.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 42896 54804 45 v 0 TeXcolorgray
24746 81281 a Fn(4)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
