%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/AN 4.2/AN 4.2 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:44:33 2017
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMMathExtension10-Regular LMMathSymbols10-Regular LMRoman8-Regular
%%+ wasy10 LMRoman10-Regular MSBM10 LMMathSymbols8-Regular
%%+ LMMathItalic8-Regular LMRoman6-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/AN 4.2/AN 4.2 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0844
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651F4370133E3968EE80FF9C2E54953EDACCBA
2549852043B5A93B09ACDFD025365A4F8FBA3FCC4DB60700C22ECDF23E95E01A
4C7B87E4F5D46CD2AEF5D46CD2180E4304BB80E17A83397A677D32DEED9BC850
B4C056641799994DEBD48FC73D616143FFB85D78805A95B8CB191C775A2DDEB5
FC8B803AC7B461E0FB63D746090AC3E759366E115437A8EA8CD328F309EC0960
36351451AE7425A26CDC319A31BDE48F68B947574C1DB2834483C460A5B2429A
D49BD462D9C9F75FBA92ABD47A5EF18C3A43B9B7A3D1EF1AA43A6A68E4D42CDD
2484CF47C0FB3A68121F424FA4B29058841D9821D7F955D3824CB1754278E8D5
847116509B7D3B960EE375F1DCCB4CAA1CCCDFA0E61FE01518738F7E6B887898
261117EDC211226EB3A9E0B251FD4CF4FD2543B7E6F394D3D262DDCE224AD9CD
BDE8CDCEAF38C0BC9E406A35F44C6B412ABEC730D9DE3716C5B0A87BC7ED856A
77E3AEEB9912B64A5298C2F4552CECF63C84F805508C4A0CB98910441699B722
2BE7727547825EFBCA21408C5F84E3E7781B5BA336E0CF740BE6D85F8F6F8631
BDB1D0AC05ABE2EFAABC930F472F93E247E29CD9852001BD2E16E51AE3E1A77D
4B05540EDA577F3759A940D23E73451C967666B5EE5CC6EDDB55CFD4CD875072
FF79F4ABDD8F935A11E83F9D6F40978896B8F7A0B472D1F9FFC68F7C2F5EB1DD
447832B4E1DBA7870A949E48C9DA6B47BA581F7D24C5A0B90A66F0FFC044D1E8
0652D0836E0FF5980A50D39360DC793D9C260F9A68379C031C3F363054F84888
CA17948C9FB31CF86E555B4815AA6C826666025BB984A519FCED4498E4A4CD61
BDDA5F652B54A3270DFE501ABDEAB9327E296740F0DD9B42A45879E285C8E0D2
DD61A71643555DD007B6477A05334C6D7D079DB00F337979DA04BBD485BD5630
0DA794E86C9815AB3FEB37E78106CA0A3441735AAC9EB49CCA33DF4322929D86
32C4BD136C89169D45718A88BABCB2844362B0652A6345C6EC83DFEFE0994552
32455B3CC14F0D2FE83F60403C598F8E360AFD7C3A3F37E771BF49F20E7ADF22
AE9612796DEB9138059A4C12D4A8B8A37DCC221CE80014F807A53945E21FB479
4956F9E37B87EAE0447EDADEB00764A38DAB429277B779104D1360C711A40FE7
FE508CDB795A3BFDCC677893634CF91C45816B9AC1146B1BB7AAA74FF92F4273
B18D515086F457B5AEBA634AE5C75971733044D64738F071F82148EC95F4E53F
D20E5A2A4479D59A73A9D61F3E4E4894BB92AAF0AE56AF9ABB385D300EAA72C4
388B62E7C32A29313EAAB849169FE98FF9B3CFDF3FC9692113CC15C94DDD2940
49748B473FD5F4AE9C34F0554E0BAA2290B2082F996026ADC420C676AD59744E
3D1C8132F311B70AE10E12E863CF044F38542BB9CEFC017BAA8166A39AD8117B
F368B91934BC6F0BB1B2E7C4F285F9BD614A00DE6825572189A19315AD397814
2E2E61CCC0992B66DA71D8BE22836E6DE06A54674E34DC85646396AA84DF28CF
38994138E0F4E0A3F1604049D39F50717E4670442DBC451B029ED37E22709B8C
11F4DC6A1EE18BFA4AEB8E8FCF1565480CC3C141D6375466FA0272B67393DCBD
86FE4CD039BB44D2BEC68717E95B7597AD7CACDA2A6A4E8808BDF0ABA0997D0E
DBD2BA7C8586E942973B8ADC21BA304ABB619E86CEF1C8D3D84C9892F62613F3
FC722D561C0B4D707CFD45E588F7F0CEA7717976FBB04E6A3577A2141CB8A8CB
6EA47F3B1F8BB5B13D7B90A4F95E54057A005AAEDAD9D7CEBA399B3FDFF494D7
8EEF9EC6AEEC046812CE43B02B9A8F4A127E7C98CF0C088786119EB7E0E7EB32
C428F531FF5E355D691E098D1FB67AEC40458600B1A87AE31E65B7EFE7B1CB02
5613E53340E473C1D5495826470F3A1F450D1AC2C81C876EDB818BA0919DEF1D
3F443A32A724A003C23DE44D0A1774265B27B89FAD2A00A0F8325EF3029125BF
0C973EE91DB8A81E4164F827F359A4630C2955964D0D808BE8D16D2EBCD7AD30
50E68B2F5B879433A41FCA23CE3D342D8157822D42F334B8793F13FB6797C5E5
249834816FEB195E5FB218CCB914449B44FB92C6E63D1999EE615767510AADA4
364CC2035DB3CD08B107110C866C7FC5A1A8A411A597335E6BCB62888AC8539B
369E5FE68D9DEA3C0DBCF7C332C1413109E975BFFF13E7D0BA8720C1A7936015
028480F2CE7EE814B92E5BFEFF479612753E3B373D0E5E288AC7CC5D3A751095
4895B6583129FB837AFE9E5EA65226535F722426F039917C6C2E033240C86703
508D2380278FB9B8E12B455199E01A4C7B87E4F5D4EC84E9D21FC68D0D1359FC
7996DB1B6A97E165EADC6CE23BD6CB9700745AF7FB6DF76A2251C779DBF0649F
15D26FD05EB16A7702D79D42364FC91AC88F98EE11E8609E02E01CE344598BF6
B0D1B1310C75AC850FB4C642FA3710C2C9905F224C87890C9DA4E53930BBDB54
CA2AEF866BDC2071045C3D71BAB3CF386AE54D6D57ECEEF7A86A51787478FAF7
EDF2347DFCB070CF8E3093B06D0B80CED641940DD7A92B277C63B178F5E81127
0F2F4E4FB0360E4923BF1A75C78A77CE2BB4368A7C8F48639FC3A0BF18262068
E043BAFA2CCBCACE0875E368521C0D91FF9ABF781BD5C69282459F75ADA02D7E
D5D348F7CB99C78CFD41D054B08B9AD11A4F25CE3652A01C7033683D9A1ADF85
5A6BEFC921B4896D04E61B913B6C417E0AF5A4EB59A67192BCA9ED8B4D70ACD4
EFFD55C41DD3831AD6161DCDD67FFB74C773637429CB45EB3EC279B505D8299B
2AAA7A05FCEF74AADC754D33163A47C93361B58F38ACBE8868CC263D0793FD51
0BEFD0B8DED7C00CD9A60AEBBA3FADDCA48E2745359AE31AEDB60F54D334C1FB
8CE7C6CFA4536829527A871675F108B3A973CC43AFC2BE532ED012C3EB58266C
BEEBFEAE16F228285B627BE31FE6BEC3F374AE853CB3E511385FDD62F98D8CAA
ECD64C7D8468DA6DCF2767A73AF89279E81D9CE04C5C360D7677FEFC0BC3255F
01003FBC34C53EEDB7645170A6A6B6C1A85D0058926158D713B29EF1F9D60352
A41DBE68A7816F315788F094FF4AF02F686A3D22F12830D995534A8D82E4B822
F07B115CAEA24F19126C17DD16A3913F27F12C896BDE5C6BFFB9251338B976C4
056DFB27F053921193C59DB289A4188A942F2D2D868F92B8459BCB9EF09ED7B5
2B92B00BCC6ED4FE1BC82E285FD99B6CC9808D4BF6C5E91C51725CC94A1958AA
70AE9037BAF2779ED8034237F25540F71DF81701B07933495A954F676F7DFA49
F81BA6B221FAB4FF6EAB642A91F1947AAB4A780D034BC00B16D7C4D77CA1AAE7
242CE5BE6A645C2653FE55D062B786BC3C6651B6A1CD604A45763B67768AC526
1DF9C7E081A7F60049B5EE91E7C3F3F02E3B8751E078517F614A52C9CF58B49C
1D1550F2589FE68B29179A3E97A3F0B35A3FE8DF5B26B0E8BABDC5FCEE3EB404
54892CE429C3ECA8635B7A013061A8BB2B0EB98CD8674AB5A33FB9835B0D1EB4
B6F550DC77164C5F6B43342A87FF745965DC919A12B63D7058BD4F4BD90D4EC8
361D3DF55B5BF4BE1765CD19CAB0F92A94AD2E091DD7659A4DE4DE812FC92035
4999BE909721075D1D40A984E6E75ABA2F4AF1A7D59300C44EF44E7060A9FBF7
B5252C0274C581A2005CB515170BEC2C09C3EEF80AF06A0B3E3A704A3B79B914
B6737628E56BCA749F4720DE9195E8559ACAD8346F7BD9DED0B9584FED157922
B29CC828ADD9B2582CF6C3178700E56D15B3AB9AFAA3E9D10D4B47F75D05CE2D
81DB06B129721A9135C29F9C2C2C9C3FC2897183D705A37702223D1466A03D24
67AD61286FBBAA4725D698612300458A151C340BA68A9106225ACDC6D829F002
A20624B2659A7011A9657AC8B869C2FEB82AD03AF067FC6D600734F59939234A
15ED0A6402505729BEDFA52397A053B37ECC29D2E0AA06A2BF72DB85657F4A35
58D4585AD1918E86DAACB86054F56F7394088DC50A1C1FC14A0F8E5003D4703A
071AAA2FB6B31D984F0072AA303D33D5478995B533818649CC62032B5D3A3F48
0437323E1DFE2E69212EAA61EA27F9EA185D6B4A80C1BFA827E4F15E623A96FA
4C467943C618A5E35267223F46AB148E74D8D1B986B2EBAE55077A0E54BA5F4E
CA8379F7F7BFD9CD497E66CBE3728B6CC761E56E90A48FDBEA688E80FA438D78
057EA80AF988C8767E67C90E0CCB24824503570117323252722787576A552F56
5387D8D2176685B1A58609AEC90E71132EABB4AF737A7AB1D63393DB4A3AADCA
389CE1ACBF20AE2FB1EB4802C331780943D1C667EAC9A01B6176AD76F2D3E88E
98A5679207C76C999903969568B43673A80D0C5108E8116E5F5C2F25A54FE587
E55C037EDF4C9BC1D95FD0DE382839AE8C789A6339F7D36DAFE163824896DC2C
78FC9DF1F980D05D8533158A7D1941871D0016ED45EA05983F88B9E7E3262FB0
36E1F51B26BFCAC3915932A9CD8EA9FC589975823965AA4D2FC6AE27B27A17C5
10EB9072FFAE0685C7C24E70ACB8564454277C41C28075ABDC428D3809A6BD65
49A52A6AE38C80AFB8C867AF2D6B55B800BE51509F685173FC157CA62976128D
48E72C15E739FA6D2412BFB5783DB3C0F6D60E34BE594B65D769B6340202E77B
33EC7CF4718DD267EEFF4C0000F2F317ADB833E0D0DDA4D02A93E18795A8AA1D
4994D871C6C5B81488F425782658BDAF63E8792D79340D223C92CC01B7E355BD
A077E525640CF211E7A3B8DB7BF746E85C18EC1FCF0C423A86C57CBAE8F9F82E
65EDBCCB17469C47E7B6B66DC8BDB8552BA01AEE38E1205B077C2F2C646FEE57
99A02E0F53322EEE450F6DC39A4F03032CCA7A8320F6B01B4C39C37DE56BA266
2E21344E73C74148C1ECA7D4F858CE686804C3F119899F5BB3DC8DE39690B59F
D2708ACEE9F19DCDFC2F1E54AD17895F81828655204581AF0B98038CA5F5DFF5
D325975F280CDE4402EC81ED6EE1D304C8D933CDDB280F05DD157E37A6EB7BB4
51424B682DB6CE16E840BD0577CD58A2FC5B7D170AAA239E07DF91A1C10223AF
53A16B1DCD7C5DF152E571C9E7318117E3200AEF170495FC898F22ECC3CBC849
8CF1AED08F797E67C90E0CCB24824503570117323252722787576F4CF1A672DA
6A04C28C460DA2A483E9826D8813326765D2A528C6A92646975A56E261E3C169
37CEA1C949ACC063FEEAFE31C8A721C2D46AA00C10681BA9970D09F1EF4676BE
5E02D7DC4613C87ABA83D059ED0635D5874A3671EC6B08F2A0B3374650DBA970
A8893D25DCBEDF56ADA1D011C03BFC4D497466C7F09105A287FB8C8D3083CAEC
5B4F7B332E904266FCB27950759D9DF1DC35FC7A9C4C4799419A851AF73C1978
E6ADEA42A238CF1150B5BA091FD30CB05C0AAC0D6FD8486C034DF78B77054829
D7A079D7BD85B9A80845B563220566FEB8F341AACA7DF6DA060ACF1112FA31D1
0565B2B293E7A6C09E2E8FBD459825415B084F754454ACBF44DCF4961F68DBB0
644E77613C9E96ACB55A77DF4812D900F42AF9770E51EC98088D8FC81C7A93EC
9FC3BB5BDA3619E904570286AF49CEAEEAAEEE0AC1EDF4DC2F53275011EE991A
A96DDF4C96A9E0D8E354195A2563759DFE0183C8D67B449516EEB59F22B42BE3
2D7B1631DD1E36137B9C75F2C99248D4FB86CB367BB50ACF8FBB2C8A2EDB17FF
267D0F21C35BE86E068F98C3564F42D2F7F26014DE37C4DCCB6B30860F43089C
0A6E1E7B4D9287CE71718F81073EBCBB4386C5F4957F220CDFF1BA5AFF56910C
49B957170DFE24CEF8234658524B0071B5582DB34872C321F5D6A82C3B0AF842
D748E7160373CAD07AAE053155493BC317F89A8940552EAC2159B49C1DB34B25
67B50D0B0F2BAB32DD9D471FDFBE9B4D20B0BE8BBE3C1A5459A27799E63F136D
C58DA8682674E24838BF99B06FA68C91E1797DB85D924C037C275BD496F93E01
565EF63E388BFB5372277A752C858F67901B52715557491B4DED0A19A1E6464D
99B41FC0AC101E91B84180444A0A928894F8FCA116CFFFF88C6F1C7BF34A0E25
EFB2AD7503D23492E7E980B2C4324A4918DD087768EC44A893A7EECB6D95C35B
B87DA2B112A3E5F0257A53249617F3F4D9F5729FC7C25090211470F9D3B10BF7
FE4019611CC67279792C59C002037F13240A333B2039FDA78228FF7FFF776789
5FB02F823B2CAEFB944B42D689B020B11D38ADCBDC1AD716F75A2C6565B6D04F
A90E615D06A805EF2EA704243FB382621C005388966DBE3F4C2EC9888B56E962
41D345CBE471FFB3B78C4FA50EF1BEBA5095045ABA7952457E62E4081D5CA62F
44DC287DAE5C2DBBCA73CAF31025A3FD47B8B313E59528F2881E4C77381AE42D
708DF8E5C93474AFDFF39C78E4003E7B7FE30D31721B0ADF552294F3AEAF6C9F
4EEB4990475FC4232A38D8F3903D81C9A329939DB5396510900CD5D522C5E9DB
C5C59AF4C51B407D44468B5E2614DD937194ECD03E78CBB916BC57037DBE008C
F0CCF784147D8580979FE5FCB204DC95F10D6E5571D4EF121855C1086E047F04
3F4D780E9A34C3E671B402F789C9F3C869F0FD12D2A1FA3458D37F8CD2E85194
7683E050B6D2E4F51FECC9351B42923E388B70E7C41B77DAE3DB6C579E3A28C6
3E8E38D62A92755377D1274604BE610997CE121BDB9CED994238C39531CDDC19
7EAC2414615E79137C52F372CB9CFAF7DA3CAF003473DBA5C03B5BC597E5C182
CBE1F42E739B6485473B414FCCA4D5C10FF38CCCA54DA33831938E9392DEF759
4DE827864CD1D0B2F50FA679945BCA6A71E4329DB73E7F29098787D96D89D30A
3C961F55E64983F69651D5206CE47CF745E42FF494201D7BF2AEE8664D6AD229
D31B6E7713609222EC88AD13BD745CE175B921697F9D9FF0803559FEA2110988
23531BE96D98F0401D2545E9FACD008B4ADB50EB9F049AABB576738EB12DA190
F7B750529BEE0764347214528AE43CB7EBFD4F38C31CF4FBD46EB44215D6E646
EC32B1031A6A54A6805B7F680B56CED7F1984220443B845A9FBD9CB9C38B9396
02D8F7A3F70B39F1723B8E668827FBD165657C485FF7D48E2C2AA8284ED768B1
555C02AFC9FB543ACFB65DB1A10646D0762B400B49288C480351F7DC67048E5D
A26AC7D0ABD2820C2F4E7B76F2F0D593E7F8D1CB8EAD24B2F8DE2F54038936FB
2D9659D413E08C97C832D3A03EF24ECB073936A0C035ECDD9681A52882BB4E55
C113EB226EDBFA60AF43C7D37311FA695AF97F91EA727C3FD9D0C0217C057987
87881D07CEFE01902B0D0F7D8913B4E954FB295B5ED5498C4A68B73340A25409
4DB0024341A7BA745D8F3DF3DD0D5AB028F2EAA1AF13F4F8F96019FB2822AE4D
7FFB00D18FF44D2B0659D8818C847E21917F8043CBFAD9A3BADDFC68DCCF67E0
FEF88AB76E205570691C6063359CE9DBA2E3ECB7B59435E44A8B4AE46E1C2BDE
A679FF899B2E62D89D132868CCD003AB7AF9961F0943FF5F02016DD6F0563A26
851D5491A897AEC52D74BB6747FB9CD5A633DF53752834D3CE0EB2B7D7775E39
5BA4BAF7F82F0850D4EC408D5FDB7470CD59E8576E72A8186570F0EBCAA0CCCA
D7FE46DAFB0044DB29A8B801321969CD052FD61493FDA21156452D2865572235
B8CEACFD7733CEDCAA991212FC3C15A7E8CA6E083C0034671A4E268BBADA4583
A16C3C57DB5F720871CFA9672BDF5356746638CDD9FD68E308DDAD15D5676372
A863F05EA4BFEEBD5DEDA74B52C8EB0BA716FF6C6468BB98385F009C20BB8434
DAA8EC8FC416BB45F9DB9C98773585EA5E4D316AEAC8CB4182A887EF4B289F0D
3573D61FA865EBB3E287937147C9BE9926DAAAE4C59ACADCFDA1CF32A9E980DC
7946713AA2B67ADE09E2FD2209974B99C3A0363AA5CAE125EF0F3B74E35560D1
6C07063DFA0A742BFAAEBD91144D26AFEB983E71575D89DA575AB19DF8CEFDC0
FA2A5EF2622F879D80738E31D04524CDC4DFD91254F5F7DF55FE68CAE7989878
5FA31D557C86F93742930EB43CE5F45809AC88B5FE9E89C2EFFA64B2ECAD898D
39DB7D202BB69739202BD31EDAA120CE54ED0DE7EAAC5065B4F48C0B7DBD8AD9
FF3B7B5B4A1B7CA0542072597BA50F8F45B3B08141DD5CDEB790D76C36E9CBCA
5A955285C130E0EF728A401986C50D3DEF377CAEF216A5A795DD63F3C6659BBF
4D2971663D0AB84621F15C186C06199CF885D233DE4656E4CCC1AC1A5762BE48
F5FA88A3AA47DFC0FAAD37018CCA129A4897876302C02AD8911B3371DFA6452E
0BAA0519CB64DDE6282787A7F448D78DEE9271F19E6331D554E6829242F1E05A
A1A3BA678F42355A6F1123474D93C05C07B8689FC4885699E4BB766350BA721D
100516CB839EDAEB4DFE011D1947F0D4874EBFFA5673390D853D8277AB6758D6
8E11567ED38212B204347BD00B461544B85F64FA6D6130832DC718E26691AEFC
1DD6435FC6A7C2B91B672FA23D9F875C001E76ED42D71E62DA447AB71A060B51
99BF7899D41F602E326BF53E4F91B77B22E158BA172BE33861E18AAF3A48C72F
9BD37EB716ECD75C6A6CAF0F0FB5F6A73A47FFFB9D6414E7013B7D984B3A18E6
75655F4CAAC54F1F933DE269C0DF2BE55B48962C844CABB7BED489A190D1E853
9853C0DAA181E59ED9410F4D901B9CD2061595FB27C9B1720C97C551826A537F
BE9B5F897B957CDB27ABA4802F0BA02D8DDC0144E7C1BB169635270568E060AD
7BF221339567C68F6B8CD63633DD6BA618557B6798E9F793E6C866B334A71EC2
3B34833BD3B6BF56210B6FFF3953D0944D30855CB73E7A7A981C9CF9174322CC
22362D93433F8D716F159B035A561C376465F9331E5C7BDD1DA502EB95C716BF
DCF80180EE6DC71C01AC6AD353810CA7938D83B174577EF9C645314BAC0C5D26
C1076AA31C8E894713849EB6F8AF8007B3F27A59C82174638FACDEA968C7A123
2104B287170D086BCAD5C7C2BB9C184A5F3F9186E7F3B1D843EB1118F160769E
D9844B47A8A2CC08811B93D94B01FE7AF62D56594BD31845DD8EF67D1D889703
646420B074E222B6426D8AF577A5B7F2B019500E8FBD9E83B2C925BA9BF62903
24C59F30816B248D320852F6F0BC092B0CBD2223900A5A4D8EA5A11699365223
82A3D7D73CEBEDF433870C0523C3C8A7F3AF5DE044750BF9BA8D07C3D70161F0
724055E78899DDF3BCC34D14196B1E24BDDD67D0110B8331410F1DCF9E65E733
8B42FFA0B337AD7CB84CD7CC7795A8F1E7197309DAD0349A9659540C28723810
DAD7CE08EB085D29AC7925CE02513B4E614C0862D035E6AC70E1B1B5F02E969A
DF6CDE36D67EB79A6BB67B5CF26F8C6A61D41E773D3D0004057BF9DE91B80648
FAD40756621200E43834B0CCA28532BB1E7CDD3327289EA1C3C455D8E7D7F669
5055586AD4366A741031698AA060ACD6CBDA8D00D12D8F361B497A5239CBC501
43E098CA65841533DE0242731B79A1A82CFCE9E49B19F5D32E2386B247139DC7
37A0C0E3D0D1237B3FD2E75B2DEB5195839A638DE491FEE467F68D25CA5115B3
81E6D61A9C9A71CD02986992B15F4CAD81E8CD4B2A1E85BE0192A4B722775DB1
D43ED534CE92916843FD101A6FE4D552944258F3184E28421EFBF0F6600EFA1E
7D08A1D454FC01407126D3973FE22CD3AC4F6FBB0AD7B96D842474D1DF235DE8
9D464EF44F2C9297ECBF2840EC61A089DDE23DC9E3DEF6471946061D0DB6701D
0563A3792A1FD51E5460CFA0338DF1F5726862FAF91505153343C3BB0884A7B6
0DAD17058B8E88AA568ED8E38E0955579FE200979E292B3B57E1F7A9FBAE495A
2A25D5A813D1536D5471C3ED727BE7E559B6E54B0C7A64D4A2C86BEC799E6806
C49C1636A77020753AE9AA57C1CCA7866F6543CE1B25AFD261C434D1D4CF4FE9
C907B8468C530A546D701A3B92313C397F0A208ECDFCBEE936D0293C010457BC
056BCA70A7E3B757A8130BF3BC078B17590D62EE62126F8F3B0DFB89AA1D0FA3
717BF3CD52E7FC86C8FE3A9FE76321F3DF1B8D279AD66877E0B05E0220FB8FDF
41ECD551DD326E58FE258D0E268FFFDAE1393586EFD449958C91252156984401
2BABB5ADF93891FC191896A755CBAE3F0F649948253EC51D98A20B1C4150AECE
1B62EDF28AB0B03187728AF15BEF6EBCEDDC19B9F7DB2512B6AC7FE21F478248
CF21986DC483EC4FF27307585A474DAB678B23A7EBCAF98097861710D733B551
0790EB12F5FE80B60089D4C18F187D265E8494A80BDB1FCB3ECD6DE46267C21F
A581E86060A00DF7E387FE4360955D6F814A0B72EC09A99E846384818A44E541
E4E108DFE5E34573DCA40F5946D9266E07CBF681164FEAF332C19BB771979FD6
A842FF6BCEC22ED954560FF7A1971E39FD57F8460A1AEB659C973D52B28D6CA9
2DDED5BE33EEE8268324F6C902D9715E9D5EFF5814A8F3E1BF0B7E35DEF6A9FE
4F0D2A2E9848262290D7F8E5AD77A3AB32CE9C79E9F9F074AB70369ABE28B707
8F57A4D6313458E50D05A1E91DD6435FC6A7C2B91B672FA23D9F875C001E76EC
92FB6934B5368C099B59A7114410C608C749D1B7D49233688B150E779FDD9DB7
3AEEA11615E7DEF726AACE340AD9F2EECA199594CF093FB8D49DAB28DA0EDB94
63FAF413BC1FA14F1FE0237FA942F76F1157480F336F73452C9C15322A392131
FB96C14CCBE65E59BB4D23F82F28E6759E924266ABB0F5AF2002DD17FB094011
08241414A916807F8AFB0BBDB5417E6D852FF038407BC405811993C856601474
FD3DF4947137BDEA68BE33B1C86B31E1EC5E2E7ED6AE24C15111AEE8B0120DD8
E29CC460BCFD5BAC82C941C2774AF399F6E93075A7A0EC5AC289BB9A3C004C5F
FE6777D6E374B40FC2ADE40888C5DC808B63EBED348D07AAF2D7F7A790A0F099
8C80FAD9A265F84D5031EBE0F523F174D1B87F8E5A06CB2F03B396D8F523E783
87EEA92C452CE44D0E6A37CF3696FD8206E691FCCC9FF002209C1C76C4C64695
6668CB64B378A98BA5F5DB1F67DB7096EFB1F419D84A061BF099B8FA36670B16
90CB69F17E9E3BF1E15EDCC29B7701969EE4D07BC78F07D63D7D6E5062055043
0364C88A1DF224DD3EE5110C0D94DAEE6E66D20397C46FEA9B6EF288668FF3ED
3835171FF4288E56438EE91BC7297A8469F567938D322537FA0A8B5CB3E29020
7065992B084D567645EE4D2FC29814CB1D7082661851B3D94D71719C73B320DC
91F4F64B9B942A7CE1109EC7BBE8E5B7AA2CF43FA2AB8EE4213DA7C6C4277079
D25627DCD5E40E3E202D7176934072863EEA862AF354FC6CEB056DA1425749E4
65FAADFA4BF11DD6766C8D058CEB08DBC89FDCFE829432331073236C67785257
36974DCC85E7CAB9173DEBE09BB23B6885F25CDDF3C2DDC16FD131C7F302A2F9
FB65ECCCAD4616959B80FA764F314AC16BB1740C1B9A34534A154E2B04009136
E4115E6073611BE138AEBDDA44E8D1AA9ACBD47097BA31643A74F5D36BD72480
8357D4FD1813801BFDFFEAD8D918A30005C31F177816336B74AF8B9931BEC0C1
8AE73FE1F01FCCC7F5399762D1BC994E94B6179B1A7982129C594986C30DCAB5
11686A2C699385B3CD763CA12281B1A5C2E93E324FF5545D0CE8972C2431411F
730D16480AEE8D2E2DBB374BA8B0C30D5E782C9B7DB4551CB68D0918B52AE133
CC3977DD3448946BD058A0C86C7B26309AD5A80DC8A9A5AB7918FAB070E18406
BEC009B1658A7A314C04B7546244474F513F8F91E616AB868D055C8B11CD6EBF
9453B2F632E36A15B373FF3FAE535328CA8C0544484883A0F02FB4B3781CFF5E
1D1550A313D6A7835FE456A79A38623745FC7BC778B3765D421C915FDA50CF9F
04A95ADF3F80F3C4CE59FAF95451251659F4FAD3B928D141B5A50A3F5E9A303C
99A80E76CF38AA5B4C4F8D3809A6BD6549A52A6AE38C80AFB8C867AF2D69FB1B
0EB44C2CBF703208747659F0C260A6B4FD314B9A936D089493E3B7C7A3BE9AB3
1FFD0D9227EABE61529552E426955F25BD3D4181C84D03DEE36C9F7327962802
9C83A000941FC5F85C754D5132402A0A94EA3D0E37D4DBCD22AF7C60C6CD394D
7C4BC204610D3A92541054C0574496C4587DF29768E6F31E94A1C96D41BCA87F
4236846933F03C778A1A810DCD869D660DC33865B7E7C25A8F933A0E69D24DA2
92AB092D52FAA80F47282D973F48A92193487C2944D35418E9E9DAC3479D3309
DE69137DFBB7833E98F45B76D98F7F115A67578C90CE30A316B6D535855E3BC4
95EBD55052F31B47841D36838D978E70BDDB5116533BAE1B750318362BF85D9A
4FED0550257C16C0F488A11DF9E9251C0554FA532AE3CF6B4CC492912397B565
5117DB31B989EC2622635377629CAD8E550923A84F19126C17DD16A3913F27F1
2C896BDE5C6BFFBCB03C94DFA8ECE2B7374827AE168634FA007F8981ADA54F05
501654D663389C4B5A8891EC5F847FD143664560BC4C5FF77A0D68AABE3A561F
9B19E9E4F465753B660F494EE3BD6829B0EF25EDA2814492016AE68E31049842
FC608B1612C379841BC04CA5D5C9E7B9326E24A0D47AD9A7FC20C44470BA5BFE
CD08F2E9B0678F1C75B4349B10E0C822E7774D2E36B7DC679E91F344E2181C96
31F0E06FD50B7F3208C3AAE0F19541EC977DFB9A5ECCECE193800E322F11492F
E2D4693CDDA5926F4D6643907C7A8A5891F445DD18C42150008FFFDC9DA85E46
A319CEBE22106497041C6BF0D15CEBFD453284869BED4F94E7563A22D9EB3820
144C7EADD2B7564578EE778AB577C5BC1E44C3FA9956F75531F04161B2C21F34
CBE80DE64145C23FC97535A6E4F812454833BEF05947F6414AFB850951A3BE1D
DB72B79483DE686E68A33CE20C97AA3D34B75B9B69C9CC6AA7EE629D85ABD5B7
B3158D44150D249200D31492FDDAF610CC80CD098D1E968B18EE09AF09D593FE
3D0A62701D18826FEC47F867C4FC966D23A12CD634C1FA9AB34BBDD9983E5D44
1DF74B89E58514FE8D5100151D635CECB8442177468B4A69E269481F40D0047B
25617D002082B89E2DD0885CA956529EA49D7B9133782E80CFF57472F27BC0D1
11482C5E2407F0458D28393284DCBDB7835E97EB66928F45EA8146164441267E
54185239D9D66638FDA8BDD4DE1F10153D551CCD732503281837C4897D51AF17
B9562670633526DA154F2FC6BEEBC0DA2A57657BE4BADBA11C52E735C2C981DD
1A51008E09E7576B43654C207F12B1FE9D0800C9DA440F8F4DF5248637C3BC95
98A1164C54C878B02839FBDFB30634D2C908A201142248276B7E4F8924750C83
61FDB1FA328EEC43A235F6F3C221A21FA27814F2945BD12376C76382F3C9C3C1
7519E46F82998324BBD0131B32482D403D243A54E251CEDFA01A8BDE36275E76
D3407C62A81FAFC5A6918FC0E56BDE223615AC1316EA2FAC998F9E08DF976658
5D049BF9B0C16328F8992A1287FBE4016ECACDDC72CCFAC8BEAB0F3CEC7B118C
A007C99ACB3A8CAF71B0FD53F0FBB4B98CDD23C4D7A4185722A4CD1DF2EFBC64
62DCDCF81DB674AF26BD3389F8ACCDF1DCE3D915F0FA21593561B3F793D4ECDF
9B17AC4E1A9871B927051015616FA105CD31AC2704D9CB29783F12C090F7E38C
A5F15406029C0EAA200C1BB9070C7F6833CF29BC0C5CC42B68D8F370F21DC097
78880C3CE4E08BC8EB4F995A09CD0E77B6A97267F4C63D4093BEA8A34B315CEE
932B40ADA36F26410CE158403B4CFB64EB4D80157F57E05097732B4DA0F2F3C2
F479FA651F01F72A57705673E627FDF5A0598054506521227674339C79F366B6
CA9EA7CD06B8D0DA8E969FB1F684291242494E52311C02C8A34C0A5B3C13F380
2AF740BD9C765861A95092B7CED26EF1639CA2DD130E71A587A3935D91E2F1ED
F54D76932130618C8D76D20AC022026C6F2643128B9155F977871CC667463212
4F6F9B939EE1663FD02D1E1D74F22C4DA4143A4BFA7B3D22F58FAC1115AFF937
E1A8502296281BF8389A348484028006F3F3248B5454ED6DC729CC5070524D1D
B08A192A26EBA06EF157958C1BC00554409AD56FE7142D333CD1D23D5C8E17CF
1B43A482C44FE52E57AF48D3E9B3D32C3D557ED2F6F284CBCF8856B2A22E72C0
C525500347775505F87BDCC02101AFF38BA1917A296C2BA59D189CFCA85A1AB4
7D180AE3AB5EDC9A66EB2152A3926D74DA3E0E484D43621E697DAC8CC5B7F6A2
587F0A3ABCD8C3AA3F46E30A2EE663C2CC64E2DA3631AB809AE250FCB0B7661A
99E3BB1BD13565961B1B3760EE57E29C8BE8F4333B259C51DB04F83FB8A8CFF5
EA08B850563F1082F302DF65A337A60C1F7C2E743954A17D26C0DD1FC6719E6D
DFBF4CC6E06F7F4E221AA17F75D36F7194C41BC7659CC291CD5DF9CCDE6DA0FD
3C77D56D063AD44CB7970DD572CD605F5E64FCB19D176C24DBEDD2808DB3D785
BF794EA774CAD2ECA4581BD58ADB6AB154DAE7900B7D1A5831CBBB712BD4433E
492B5FDF3908E6BED58C9765976D71E22D7C32DD6A251141C84EDDAF6793DADC
A8DCD7CC7C04DCA33030F187E88F3A42403FD4606192DB1E65591E8CAC11A84D
FE3F09633B0FDA064321595BE68894E2244B800EA15AF8C16B9B8329E91644DB
1EACF1F12425A26341AA5AC2DCE2E64092DCD8A43E347008B7D5A184688CD0FA
CC7802A28ADB7907E056D20AEC2ADCB43DE6F84089E6E0A57A6AD525B4FB469D
4FDF87EF60080E1EA0527DFB9564EBAFB4292516657B11080A18CE326D18DB4F
C12F7A8E9820207DF26473C9C949A2D6059CF772992C5637092710177BA2E331
993DF752B5F9DA8A06B993088E210C91279AAD5922A3546551F93A06B3BB0227
2B60FFDF4B8A791B5B54E5E9D98BD5B3A86E909F1A18CFBBB502CF3C1C33D64C
241B9F161DCA2420C4E62A6FBB9EAA77C3E1CD4050AFE0CF39A32316087A9435
4D471A4D7A6449D75188F3F600D5FE70576EA42629818DF9894AACCF6FCC5C78
714AE6F776AD12743DC8846D4A70232F0EF82F448559F8CB85DD9909A74AD696
B4E706A3B47E119413DD9556FF4172F1B18271FC2435C354C3F09D46C1354E5F
C1A63D9D5B91BB6B95C298D03B35B604E4DE22C24947C31261DFE88A93AE4E6C
759BB40715E971D4F9F578518E37E431CD2798239CC4C949013F16A197425EE1
20A17F7791554750299F7A6109C5FB6761886F19B5B15D74CB098F56CF1CB341
A140660093A3A260FFABF332DD702AC4030A4AD4B5F9F13F05973139BC1471A2
E5D6D0C62F0ABC86BEFCB1F65AF4CE77AF74BDCD3B48EBBEF3576781FBB7D433
B58368D34E5E37B9E2FFCF9AB319C9F3BCA04911B77B657C0E6ED908335A1687
C92D7BF00C6F8129E347C6489FD4FC798ADB86B0C865CA2BC270E4E404F8A08B
6EA22077FDDCF0DD9D585ABA5B3216B772316E03AFA5A27E6F5EE3F77F4D523A
7A4D01199AFC3C88B0E2AB5FE014A8437745108009D13B449B4A055214DF69D0
218549440B1C5F19476595E964EFC9B18C7002F76150B70E79387F8C338AA7CB
A1F3E799A32B23859A4CDFB52C22ADB4DB30D313BD85B3214F6127B0F5A90B25
E1B529E86B0B4656620B937876139F8A8EC00C8BD6EB20AB66BC1FABC48E4ABE
10D7B7E8693AAD1B25349EC43DA3811A83F1E546C0CB1649868C14720C008F4F
FA8D3075910926C632218410359E389D874F4F719293D0B0EE58BE36458AB3CC
02002C46A704E345E7CBA12017897EACD1FB64C1F829392A430C1CB8E88CFB0C
AD53BA7F20DAE648EE34DC7CEC39CFC55A9505206C3C604F4F02C815605D0AD2
FE07CDA8A9F8F0DD0C048753FD98816588DE9C8A2C78E7C8BA614F66F38F9383
79CAB93ABE05747491570EDB80902B818F3E52B84BF6A1ACA730BA1FA90C0D7F
09B3DD6A5FE918CBF88B2CB98B7D817311B63766ADFB7099864428EA3580F26C
C4D4978813067D64E0DF70541891615BDCBF3B5FFB74AFEB695F8C92EB33721D
D3B41058551019C4E12555C4926B0116F86F88A7E9660AA8253D564A36E96024
8C4168E113B6C0C725E49331DC85507BDC697A1C20A553A349DF9D95D5D24C4B
6B2795D94BDEB015C731EDFD27F3823CA2D05633BAEFF23046DF458000AA7477
BE93D17A85E0519FB0B6C5BDEEBB9554D34547816955434DFCDD0733C148B5A0
52196AB08680F5ECC44BAEB2FC41FBAEBEBDB65521D0010402575DAFFF833C4D
59C1941D6160B8FE78D5C3354C17511541D364CA8C1F27232312DDB771243735
43A2C18439DB2227247B30A41C72B88361E10B8CDCEE93DDCDF5BDEFB5F08872
C77BA070C12B23B2C6FF837473C372E70836D4C5747C4EEB85DCCE9246271769
E060E6EB754F8E89B075418D032D7BD972EA6B859338F8D6BEC3B63C5E9999C0
6B34A79E0D131D233FD3CA93D8F5B1DFDCB271329400CAE5B90560D4FC5A1154
EECD0CDBA01C3098332FD8CE6C0A393AB1BDCB88B84A418C9D3B15FB9ED1330A
B93E9A8D466EDF09418F46892F4FAD459D4943657ADD842FF3D6D1143830B378
A3EEECB91EC67FB176F2ED906086FB7518C7167965813AC101434BE5D692FD50
2589F7B14BEE15894121E8CB7971ED4DBD5A2DF213D85A56B1CA85DEA53ED029
9C1E8516B0C02E9F97305FC7E43A31E0002A2F803A30B1202AB55D0FCB8A5F3E
321815C3C7AC714C3DC89D789252A42CB2F981BFA79544B1A2F756D81ACAE235
A58C64DB60FD25EEDB5A9E09F469071BB0F203F5D8ACB7A816012ECFD7947438
5118652EB37CB7021F80792262A4D2F2AAFBBC879A3A7321FADA299277D8D09E
8CEE8238655AC752A08A6091BF4B9D6AC543B626847B574F60E61F9C0710B5F8
3F74EAFFABC289CDE655EC5D586D483DA69DFBF9E2B6F50F1D8890FDB8C56DD0
6D24DA09F845947871FF414A3BF0C1B89EBBF3860AF123D485799661E8A45A88
8FC99EBDA38E539D9345F4B58F6B8E3E370C11DFCA06C381C6793D5574AF08AE
5A4FC89880D4A8DB59D7952F55C1F6110A42D0F70DAB4D6B7E2187A3BF218A62
F3B4198881C0D98302B116A463934A5A28E8EE8C15F8C89E5E3FA70B901CD5D2
C49144778CFFF1D5B63E099BE878F99C34FA15687F78572C5BEBFDDD80971DE3
920CC6E5D47ECED72963406AB79426A14A17B3118E50A9DDDA6C8BE52B95ECCF
029A6B18A512D30CEB0B6ADF80F97EB95E310182F66B217FD6CC9B23CD9DBB08
CE4B28C3754678266A6A1133D8151A000D95E13EEBAD4F2156298B976E43EB00
1FA13E44683DC6CCED04122D1FFF56BCCBB9A346307E3BD497D7F1E2F51B557F
EB6AA32E84F432B9B5D24ED5D673E26A25811D4BCA9D693EF8ABE780991240E0
27E9A5005DF162A28E497C231A0B0AACA773466D924AC2337BEB55ADB1106E0F
F4863C43F7B4CC4CE5008B883EE21D9BD24B48E4D1E03E7378C05B62DC04A3C3
61DAF3A67012298FFD77760AA9C0611FED9B670604C24AF36B6E54543B411485
5461C83881CDF494C2B43135E8062A9F9101ADD125A32195B8CB98C9B19235FA
FF7822685D87B84ECF255178D2D2C4B7F7857E7F5572D3BE2154C076B263342E
8A6977987E6EFB3DD2AF1E6F9CB166C25A47C770E62C69C131FF3870C42B68B1
0C4961AE98EE106D34CD0D4E15BC0A018DED92CC65DA0075E384D92FF2BFB06C
A814AD933409C99883AA5D858AD143961AB8AA828AE35FDF411CDB247C03750F
C0A519E36BDCAF2DEBB2EE0FD69336E7070E3EF345D6D1EDF0B88D08486EACAA
CC508B9D267C79A91646478075E259EFC03C3504BDBFA2B4520DD6104F783317
388D31B2DAD1BDD5B3ECD980DC8CB9A9D9491DF42A8678BEB35D372AA9F49EB5
0246E1D3C022B0C181F21093450D19267E3515B8A1080BD883DE8D9798D30A9E
DE6936EA527F5BB234A8CCF2825E654D39A6BAF9C116EACD0849C62658655B0E
080F0782EA3B1142C76B364D2D85AF83BDA04D57515EB1FD87B119E547047F43
E9CCDE1C1F8645DA03EA702EC5D6CE35E7D5460EF05B1A5136CF2C1DDEB46F73
8CD632EACDC90C78A145838224866EA5C1299D94203D107EA052190509727D83
85E5F898B7E28470245FF4482B8A2A6094E407A823BEB4FDBC9149EF33A77FFB
B7146C2E8C4A133F7EE497B6EACE17516DCADD90525F5041C4CDFA9AB34BBDD9
983E5D441DF74B89E58514FE8D505A1638BA2C25389A4A4289945B806CC14F19
8DBA7A8AE3C9738AFF44731B6DB8007749D1B605F397413DF96CBC1E7C80FE52
EE1275B05D19E6DC95D93914B713820CA0517B8C2E43E8716526220CE629452D
507C04521B474F40D8A1DC5BB14E21CA654D970958EECCF947B560471E2B661F
9D677552B91A9CF74F2A195EAEEEDA16C981DBA60EAB988A1C23C7B8940F5D25
68FCC3524F6F89EB6871C1BC5F3C7795791EC9AFABB609F395A7A9484BC96D0B
47751DFC2986440D716CFD5D2E9A57D84846762A320128723810DAD7CE08EB08
5D29AC7925CE02513B4842EB1E9D4875A753BEC3BF97265F7C2DB58B320496C4
4192E544643B9C3417305B2906D26756132ABB51B16AD09C775D6F86C4640222
DC394CB7CAB104F32FF3156173DE48D766399192B5E968035E7DE5E0350A005E
4C5E642AA0C21706A33CCB741E91304FA287688FF87FBAA13C3B3D9E96E3E096
12F99B100345D53EDC134D23DCAB6BD08ABE642223D82A657245105757BE84B5
99C63F2B0325B83BF619817A00CFE9FC5B0A0FDF982B147D2294ABCC25D34DEB
46C4AD0D21BFC3A9A11405B0873D4E91B0F787067554D464306A44A49AF8095E
431F91B8EA995AC6C549CEC434910D8AEAA207BEB7A8B227217A2572029B1D1B
86B55D62ACB72C877AA2E3437B035F7E7ED3A541B6CFD10F1A79C610ADE46912
115330743692D0DA147586A859D490BD6B1BFE492563525B99F0A8D519F3DD43
0BCC3E3E57052444394E46201B34B583A55D565EE540EB9657AC7312FAC9897F
56ED09E02AA857C6FF5F8E402EC24D46F92C99498946CAB6DED8F5DF0540063E
98DF31F529B5CCE7E07337D8C589AD71BD8F24699F277E4547CE7E8B4444F14C
80FCC7FA5791A50EDE1850046FB56C0E793DADEE301792A7EF4CE1047C153C87
C51A4B39BAD23DA4DC7FC3B4C147A3CA6B939B4B19E81AB5B11C7C817FDF26B9
5211DDA7C94F44637ED9DB8797D2DF5E6D7A8CDD807B3CE00CC05F6CA1D87A1C
83530D8C784A1FC3204748B39BBE76D32933BFB3185C3972FFB69493300C455A
EEB30CDD6E6108747FD778A0042C6E3B4244948F1B06A1B8A026B3CA477D4CC6
12D0DC8CFFB2DCBC8B1A8430F7C7563E306B853097B47852B119B42F57BA9A8D
93E92CCC167DB36D72585E112E6E8CBD8C816E92F88027568E1C088F279AFE03
1CE20930C273EA5AD065F5AFDBCE03E88F208A05B41A2507A6E6908560B2236D
329FABA01826377C35067A7C6785ECE0C669C03CB875F999FE0159797AF521C0
6B9CA7915AC36C9EE0852CFAAF230E92948EEF95C118FA39AE58F8CE7B0D7EEF
59EEF91AC758803D0E4B73F10FFD9EECC0C4A801EEFB0932FD5E0D205C19C8C8
E8A46BCDE4D72920AE03699B75B6ABFCA418241E9B027E28104D22A3702E2B9E
F6D164CB498F4A7ABD9CF59BBDB7B721D7440302D3F5788779FB6154D819C083
EC14CED56021B719D487D49C3D836D47D72E3B76081E2BB65A9799C14504DD4E
19C5D371BE546C3286EE772322BDA67D447EE7C7648F82B339C1351E66B47C85
4C59D6DF7BC4B1B15D32EE1442D960EF520B1C97FA7431055B6BB25DE7DECADD
E32B536BCD546709A5DCC6E9C1C32DC043D28239E5B6F2CCDFEB403080EAADE2
C215DFC548BAAC67797FCB1530DD6EDD1689FD3081EF38C1F9942BFC3262E057
CE26031D846064A6082D5C5ACFEE84BE1DAA388C29ED456ECDE57C81CF06575D
66FD8EEF218CEA7E07BA3FB71E41E67E4889F953706FC8A5069768FE8FB5A0FD
27E00201FFED0EB0C511389EA07B5CF1708760FD26B48D0190E9F3C691BB581A
978506DA0394EFEDB077CBBFC4AC6F6FE7A374
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC8B64E3DB194682A30A31E9D23ADA7D5C0259E2410A72
D9504CAEF21597965D669100E95B8C450A3845A54352DFA15984693F8721BE6B
C8436111546A70C5B35A2390E5D3C43E8295CF922FF601D611725D0D5D9EB2DE
CAE11F3A66BA22F94DE028A8861FBCE564DCF89B36A5F1C621F0088A5E41311E
9B82067883EDC8BCDDDFCB6A87C2BCF37B79B1F65339265C3BDC27CD99AC7D74
8CF26DF4B25B62F3A47B378A341378AB1E9AAA88112469298B36645A69B98423
DDA04A18DF5410EEECE859A081B2D1D4CEB9E40FFAC6BD2F8303F58AD7686B3B
2D3EFDA6667CFD49D2238D55D45C48100D47604525BA0852326DE98A17CA12A5
67CE98C02760C521F44824D1B8EA2E10C8D15A57F5E7884B1F63ED9B541446E2
14AE6FDA6F0EB66522C36B257335EE0539B9E15D0BF27D8D2083E799A8BF81B4
D1FC7CBC756CA4ABE99BE732D6518A5254C69BBBB3F049FE4E20CB2F1FAFE9C3
D0241E821EC6D5B52F2CF79902518AFCBC03673814866E05C160FADC9454F3BF
6E3E3E92E174A38E5E90E92BB23F551378BD21CE4AA6E46E93A632174371F4D2
4CA34028E7E245CE2991584BB7997B693AFECFB56A60D19EFED7D65E57DFADF9
23F763A8F3E79EACD5C3AE21E8E0E5DD154396C58C3E0D42D357AE25A878133A
558079225EA3E16BD3BC5C9FE406C4A4206D7C38DBDF053965E431E30B763EB6
6BBD39341A2145850696AB7958858AFF92138F9804831E71871BEABF82C3E6E3
5C9C8745F20E73FDE400C7E7A7EDA8A65A9E3679CFF2A83F7C00DDFCCCCD64C2
B9BCD986C1B4AF91878B710942BAEA44C03D2A1C718D48E7B3208A91D2089B87
EF15130BB552BC10D167988C81065A6869DD79699485B918F3ECA9ABB8AE7C2A
3B02D7E1F1676AFF58869F047479A49E3E35416B3FC184BF83273CB744C2FDC1
3CEAD856EE64DA25EF8E97E7852D96E5E2E5D988D566417E5C380DF1F0DBF6C6
2D83149B03B5B9161C5B5E1FE556DB10026B82284D6A75198D3709DB41B886F9
E10F6E67710521DF039DC21D974400A8C2FFDED99C80C1606F1F0D995BE44595
18EA7D6E5D76B38961227A0D233A7D8A3B7BB14945F0004DC415EBD3E5AD3B27
057DE8158DC15F71924147AFBE2E6D1929EBECD716C6D7EE18FABC747E22685D
87B84ECF255178D2D2C4B7F7857E7F5575621D89F3B76B92097A94B6212A1708
B1A968EB32F5F4018630CBBBBEE85F2CE3636722B3367C1932A1142C5BD5B2C9
39EB45253B4022131371865C802493A046C6AD9C3BC8BC42AAD3E536FFE80969
22A48FE482FC5BF2CA888CDE224CB1128E4A79EE9FF01BB0A1B8C24DB58F7FAA
F67B92282C58FE7EFC36B16D14D500520213CC900BEE740B4A10835E8A57F5FA
D2717B07EC5EC512D732AE2BCEF21BA7B21FCD27D1347CFF5111DD549802DFC2
B5CCFAADB4F36D07691063790D6E6F13E7CC69B5A6B8A41A3787BF44FCAFA999
BDCE863FEB28258596A350EEC2055F3CC2A0AA363107EB804A364BD145EC7E3C
7A872A3E8EB34063148DE7A97235F02D79239C4DB9902640D90D0B74E71B30CA
1D53AD06CF12FE9097107CEC0EEEAC5B338AB8288A87A59704F263E2E4C4CFAE
75B0D37602797CC85761DDD993C4E2AADB754136E2E30870272D0A6374D09486
BA8AC8070359B30823EB6815C389EB93244342CB47DA4B31EB1C7AC655CE4E60
1F01A5851FE694EEB4952CF35319AEAEC802091098642FCF7406BF674597589E
F29FE64ACC1DAF146D123EB6D30B9000AAFD5A27F08164D862B093DFF15E760D
EBF139E1499EC7F87D1EA41F9B989CC4EDC5B5827C6E2E6ABE73AAE3ED2E14AC
0E8514C771270E6ED133B09ACD9E3C2503A1C807F13026C214333DB1F650E142
65FC47B9F894FF81DC0EF7CEA69F59190F5C9F0E65AB22EEC73FC8285E57DF8E
331F13FDE79F6262B76319AAEF662F28D7EE830FA978B32A711D47677839A1BC
B17BA3A43DF019ED62568386E52C3488C72C9038B1496988E63D3F4BFD7B7CC9
F9DB04938A7A67FE8F160630CBE59C825FF4CA2C83BB08D0CB748DD079BC9AFC
1EC0965EB4E86D8330F18DB626E692504407EBEF62F94535E342A1C01B4E93C9
8AB54F0B38EA864D481F345ECF4F00A4DA455615D61FDE92E2D826C63639DDC9
3411E67B68D0310E8193A20EC4C9B0674DED6B6B8E47DBDB00CAA04E3FDBAB84
A1B11DC9DB384E9FC4BDBDE254076FF215EFC70AAE1167CB3C1AF213D52F46DF
88B69F45A369D9F9EEE34FEAE2A6537FAB84DB49CF142075D5BB9C1BE48959C0
ABC289CD405A7D6C914881599AB7BCD4986A5B9548CCB240F251B0389A2E8F63
21C26100CAB1CE44018F8FB45810CB4C28429578163FE7ABE779C6DF6E4C0D15
592AB54D1A49D1FFCA591A168B6F4801EE243A097325804F46A131C7ABFA84BC
7CB5E1438DE814940F8D2B98B874B5A7C2D9F9F87F7B98A3442F7E2E3A11B29D
9ECEEC11E98516C6F612EFCBCCC717902B13EEE9CD67752B9B5BD908DBD7578E
043545398590A3322FD4CA796CBA064A9214717A273EE3EF7FB6663A17ED78B3
7DBB399AE37F3F10203FE6972588C4C70AE35AE0DC721E647B09265FA95715FC
5C7677D19C574F3B871E59EEC1F288E2A958AE19CCBD6CA6FAFA8EADB103076C
B8E64A6898BED1087FAB1BB718CD65F29C134E4C79A2C7A3F00A017554657BDB
A0066ED7823DE69745438E06F5360D3EB2F1B49034D18727EAE6D64F78762CD9
BAA6EA1FF0F2C48ED416B04055EBD7B0F04219C036A4AF7E79D901EF85DA48F4
3FC8E43A3179B8D45144B97641D3D3DF0604283535EDB60005453A53A0A48836
7346D6170080B662AC847BACB78AFAF705234701D104D70AB1824B4FFF15EA39
E7B627B4A94E6D8C6943004536124EC97DBA9EA234A0BEB00D4E613002446A8F
F4F0EF370574C2D788FF9788716D3249369511AEB747071597732D9DFD0A3B81
25DD99E18CC42CD148E77D6E8176664B0A2E289A32915063727FAC0986083F59
39D2E76903AC6C181A5714C313FACAF4B78F3EE8713C62E4300D9610C3E3E23F
B54B909252B8F3827267A4EA9B238E696DB87D7B2D872C0206255CD38BF0EB3A
A31DC691B532B8B6010138C9094F2A92361BD6BE0766B706507B4ECB9A90EAE1
47B1E5F667214D1ABC9431A977047469B537FEA1E8B49D5480B66205F813F823
B520074CEE98B50045354DE6BA5207595D53BC4526F6DF3DE9D0D1185CAC3F41
660880CB55C945879E6EAD1A7D99FF72F5DA813CB5F9285DECBF9CA92D5AF82F
FF1DA1AEB6324D77934DB9398A81575F7ABEE910D5127BC93FF0E2C7DF59C715
AAC04628BEAB71D1DC26DD710ADCFDC61ED62D2AC8E9672EEDF48638ADBADB49
9FB9A3E7DB2BB6D5EF0D27A4470C79CFE2EAACF9361A6BA40648CA3C4D6E2521
5D5CD0F0072F58C2F42647019B48168AF91ED1160EA99B886532CD504030703D
E507CD6A89067F9DBE09370096ACCEDC90879138405234426CC59FFD818A4036
C2D07ABAC0835F7264851087D70F004359E916860927E3EC5D3420F4ECCC45CE
57132D5CB5A1FC85FBB105250D15C80F26E91CE86F67DFD7DF19B24176C17870
1743B786FF1FD4C383E278ED6918E7DA9DC724CCF9895D9357ACF844DB211BF8
DAAA7A9CF36DBEE3A6C8025B7BD8E57C838F61F560728221C89AE28BD3FF05A1
66E9CDC70AABF4591E0F594ADD213F95E74413064FD26374AFC781896F9AB871
B50DB7AAE388665FA174B20DF7056F986D7331A5D19F21B040B503F1F8C2941D
BC5C5DE0B448BC90AE2AEEB509B0164986983FAC74F6BE223ABBAB122BA82C22
88755D6ED37E49D68CEDF267FCE2FD88DC13F2DB0422190377778CCC657B67A5
78C76936B979A3C1B85489A77F39F239ECD5BE0F783B5D2385F8F9C878E9E814
EE9BEAE35130EDB250CEBAE35B616C1A02B51AF068A041B4AB20A978E99A204E
3E67184C8E510BF05A6B2A24F967D92C36104B57EDC8C6ECD1B40D50D12E0FB0
CCF018A42F2E26A3F60AD133EA83ACDD871B251F07AEA5012129017ABB37D35A
EE33663F46BDB87E1ADA05C9DDF0AA7647CD3DDE6C0950531D1AFFC9F862C807
F419FA707BADBE8C02ADD8565DFB846BA8CA66CB2AD78A7F213E6CC3DED586EB
44210FA678868B7BD5B0C49D61771AADA6EE8E7D9CCEA9836CE350AF2A57DFF0
2EE0B26F74288471D9B8708BAD3C033FC40E4E3BB61D07BA004D9DAFFA3EBF6C
9D6BFD6237F15A96053B9A5E32901327EBAC01392083CD3C2CFDCACB74DDDACB
5995A42B9EFDCB238FFCF24A63597331A97065F1DC62470A240770C1DD32FF14
F8485C964F78DD0017031687E492D2F2F3CFD069CD14150094F72971EDCB4C1B
E5E701CEA5E92BE0FBEE1A7C3D95F34833047FB0AF486DC93ADA9FDE62349B61
C5CA9C8FAD0B71BE73C08E7AF5CACB63701C3C4909B75DE6CAB667F4617F9950
654BE8A754E05E5A43B469342428EE61BA79B3D740E19FEBB805CD0246E6C4EE
B0A9A4F7D5D17FA77A17DFA0CE3AB668B8E4D2501550B1A18BAC2AC15DEB4C61
C6B30A115C85BB794400D8979CD6AF34317CAB1EC803AF169432842B2244736E
94B5A52BDB6C8D2A8045D61471054554DBB077DC28BC4DAF49276BF970534ABF
AC634E9AD3A65084E0CFE7E5FBFB290E6CA529188EF5BB8614077741C981A638
7901F954A41AFE93F7D2A58961460B1BB1E377FBCD16E95C9143AF920C6B7BB4
93C6A1F46156EB982A52D77BDB3F34D5E304DAD852F5ECD243BC5CA534371498
D75F568F0238FF3B267983E6639E751241AE0EFE59A9B721102BC58CC6932FEC
ECA5A5157D56628680B5C6ACD479ECB969607AD7F590FFDC49D29173CA90650D
96F73D64B4D9A23E77924972D1D63716D1240536C5D216800DCE7FD111CDAAAF
E9F9969C52D6D6C2E9F9CF8E3F605D70F7723E0E5EE657C0D83EBE0FB0C0EDC5
7184C164D3DACAA91EFA8324553688A6A196AE41A4D6D120DB06B6A5541ABBE4
81601FA203AE3415AEEAFE92DDE51FAF57595583E59B43A8EE352B52264D2D27
1A99C339786615601C6E5AF38C833340255075685050BA33F7F63FC10F15A7AB
71C28F76D5652842282F6D13C28A324739B041391E2D505684CEC56424B5278D
18C921EBCE6A8229F453BCA5542C9880E6F0A01A76692D28A7CEF26223D6A85D
67145D076E6DAE8F9E31D9C0133BB71E5DF93D227A1F09BCFD54D123C5B53431
717411A870CFEC4C4B45CBB6C84D0ACB77B5CF68C0F64B9A76A374D602470AE6
C3D7A1586CECE261E8655A7BFE36DE01C5E64ECC62DE283D0BD85BCE450430EA
17822A876E83BA5196A99F01BA0BFD232E49D25B34CDE1F6D6FC52B8BB2530B9
E7A40A39BFF8DB30429410218604A09CB45D67A13272CD0910FBB138FDC63704
24384DD56843B29EFD3C20AC2F2265E233071FDB97512DAD6C010D9F15CD7CAF
95E55B2C556FD3049E092CB910C5B6AE52186D6DCECAB106D4ACC83A71913185
B6D99E44AC183B2C2A11AA373E6650C3446F6A45E222A54AAB43CD805EC55ED5
A72360FEEFC79041851CCBDC0E7711E32D86E7A752C78756303E85AC06668FA8
D01E6129EA44F7B6FBF6D45CA800743CABBE6F9A9571F23AC1F263
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D6F6BDD983146333DDA29DB81DA54F44DCF5364857E
A20DB59006F78BA077D29ABE7A537D2358B1DC13AE97ED90F7D1AE27A1CB55C2
F534E2B546BA5531AE88840CAA741A57ED1F4587A72E74AFA15F15C69046ADB1
B3B6C392AFD856716F96B850D6FF61144F6A9E51CC1B8A86A35087D4A3A37081
D7529F94493EB4739C267B8C54B3A1FC2146237C1D110D4A10112D496250647F
37A36F59299DD9529CD003AD4E0847689E519FBB2B7796420D8EEF6ECA04DF85
390E261B43A555BA97B9F30C18F4F39F192B2A2CD3C1D68ADB1867509CDA93D1
CF858DE8EC69D57E5A7BB2741F4713569CDA64AA18018935D81D1ECAC3C42C4B
6105C3B521226A3AA2ED3A5EA5FE176CE753C04BCA19E4C4A11ECC428F62886F
B3AE8EBC12CE6421C3E633443649187C8B38E5EE9428E1E533FF1260DD242EED
B955A9E3C2F73B641A68A0EF3B9E26314B306649FD15D7B593CF3F02EA2E6627
C292001D28A40628F89D0C92DE66489694C976E71D9214BE0875849A35084581
5873E4D6FF4EDA98E456F41F67A7063A2EF9ED5AC30A07BB8768BA4B23707BE8
C925BE37F7B4C8E511C95D4B61E15A9B84DB541D8D299C5C5F56DD69E7635073
B64FA376773A98E09E6A816DD71D80C3D80ABCB006353330E36963118A600F83
AF3F1902CB9FEDC0DCD19B1871455394437C3A7B477AC27F75850CFED5BDB2F0
71EB6873264F76A5963F0D97E0C4887DEFAF1A5E5016CE039FC62C37DB28EBBF
F30F651543A11127279FFE3AB5F06E440720BE08EE3F85DDAF46CC4190F93B9B
749C6AF33D323C2211D5ADB7AEC6905E1E94099DF34C4CE52D95FDB6A8E7ECA2
A07D4200535F51BD082591E896938B584450D9E008CDD0202DB1B3CECC4CDCCA
F87401373886FF9BFE508C3A751057316CFDC6729F65C26996C69E6486DEE35F
247C439B8FBB6A187926694EC48CB03CF1EACFD31FEE3C7AFFFF0C5E0BAC7583
F21FB6E4C8D2975DF55D9CC0ABC55E08BC81772751BDFCD4A1FEF82C144BA8DC
FD22EB1EE626D143E2530483ECF9EC3055FBEF738582004DC27F7E8E3BCD4513
9706F68286959C07BDDBE793C16F9C0CFA569344FE06F0B093B14CD9DDFCEEB7
BA24A8294C452A3E6A6E801FDD83FFDA10EF926255FD030246AC687884A3547D
A00438951DDEF3CDA03C46B2C8DDD315850235962879E04DC0D62F8ABEBB427E
01E60CCE30B0F2B691E3A8C1DD510CAC115E06D26A9BBE52E1F8AC594D1FB97C
C66F87A5FAED84AFCA8D7AA9FD3459A7A0E1D38EFF958AE17E8EEAAE67A7B343
8B6BF9DDAD0CA0F208E714887CFA684183E6C588A9581C79E063E6F8C16CCCAF
7D31955B4348874282130A00501BE511BC18F5756C90C15124CF46DFECD56FD6
3DCDC287F7C995E01EF0542FAB6B96E3BEA6EFE7C3E1AE693D9F54E9E05755F0
47827FA00C8580D04FB479707C9AB1E3656F1133D5AC8605FC7C69CB348D2AE0
4500101A4D3120650E6D940EB679690D8464063DDE09017660C171B18708D71A
B48F80827B075DF3D90E2153D4A1C71727E7FFD609B2CDD708E7A35EFD065090
894BC8975ADEEC5973544D7E01FD1D3148747AF1703C679EA8D3DE1D1FB74F93
161035FF0DEC043F8C23E5239A8D04BB078561F58420455E453B9470587070F1
AE2DBC001499649DB9851307FDA0EE7BFDD0486D44C13283F2AA225B43B115BD
BF0E83CB339048F06DD629EB1BD4131523D7625A37F1BE2B6C86017EA5E54AAA
4E9368A2B885182279814C86C33206B9DC256CC0ED57BC296B0FA6E3DA05F8E0
130B363B169E528B367F3A84EEDED1BB2DF34B84B57FD75FF534F3B4DA15319B
F6B06DEF3B78968B7348488B632D37EE2C85CB054858F68DE3C64CC4ACA19B77
BBC1E07DEFEC7AE8C21109EE3EA8D7926C1A5B519F8E3C09C028D65C79830607
6D16EC74A06A9905D24B960AB972B042738A1F9A2C37BE68E7AE1B5259C4DEE4
EFB4FED5CE7D117CEFBE2A97F78CBDFE0EA538754A5408F3C6C5A128DCE6DBE9
931DE6E9A201C080817772C2567C1DC8D4221B1BD6DEA6D763C4968C1A61E30E
9047D783C00B7C7497274A45D45154EC544C6EBEC21D90599E379F77390E877B
44FA48835CA7643B1906FF87E93C39A7399EEF1290164C8FE745C6E969D04C99
FBE458D662672545D4ABE841CFF204323FD0C613440438C82BB4B28725B0CE83
5077EF534F78B9809245398F6948C6F7A444761A888FE64E47139EDA3A793BE9
D2AF4EAB21E9A0652A4CA37AAA921EC257D3CAACED8FC1867143039B2D6BC194
52EE9C4044083C3DC89FB4E7E6621861C500199F47505873BC4B9DA843E5F685
F2B80FE8A030B36B22482CF96F727DF33032365A846A9B9E329932E5B2B37D52
F8086874041C3220CB6E119083E06684F43ACB262668A9C4B24D2FD1490ED1B6
1B586FDAD6D4330D208D7E3A25CC5BF58ABC07868E5AB0B42A6294AC756CFE48
CC06401D5B3AB629C9CB100639AEEC43A841A7C52D8BE0AAC074A46D2E9412EA
FC8CEFB9A3896301D8282DB9E303896ED56D2BA007FCFCC7AE274827A368F3F0
8283ACD3AE845D15E0EC50E66268264EDDDF013C038DCDA0823CA05AF829AB3E
9D0D39A0D2CAB5868D461DC108D21DD9003EF9D6FABEF04CE0936F32CF70CF2C
6B5C8401E4EABA1E3DC1970E1F6B8B6A6E2B0E52C6AEB7A9B2D2E8742C8E7DA9
91489DF7C301BFD2A560B75D2A04A54055E162E8FC02EAA3F103343913B1B744
A30BFDCB07D9F13825C16C59C02CAF649CE4AD24615DAD6D39E88D8B93F5448C
1699C24DF827C3C5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E08614769C017F6D4F14C52D7189D4AF8CDA367D8B04CA8D3F2307C
0A7A179419A80695912F456637F539123745CA8E696E250E0BA6B7C6277394E5
98A8799C29B6272613C152B0CAB05F3C7795791EC9AF2BDD416861A3D13FA858
BCB6ACF5BDE40E5DFBC1A171A7280E8FF4AC0D4C8A2199E9E2BAB5CB9131A76D
EAC166A7C449A549EA5111F1750CA2C6E1EC6F00CB6C62BA52D17FC66E06ACC9
1E6B858F9393AF9AA5E69F799E01D301B647DA57225C2920E3BCEE9D09CA5C60
F22B07F24A26DD8F4D6F9C78BFAA8D12A21531E713B80CD03A5FF4F3BBA2AD82
3BEF7DA8C97C30F1452006AA3B1A168483F6EDC4089ED02E567923AE6DBBCCA4
8C246A080448200C2A29C34AE6255BC79B73AE14B980A7C357681BB0962894CB
DA32FF2B70B21AF4D158E0F74652684A7150D0967F83E13EBBAB33588541AEEC
0DE8C53851845A44FFB46A93CEE3E8A0263882542F7F103D13C367EA8E1ABFAF
6486A9DBF6668550BE7858F5790BC87C66492C0FD34DB08EDF842E1AF58A09B0
85A9B7FA402029FE2439769D67DEBDC8AD8C861E90E5322951A2904FD702766B
36916DBA8F9C96141BBF4788FA435556B2B4E1B37DE4506ACC4224CFC00A8F83
33941A050B51B9508758F4EB2DC074D799F5116296B8822ADD743A043F9A6426
88D10767A9F99A072BD4C88CB579B34687BA4953B96DBA29F33211B12A0215F7
5F2F873E5074A7D593DAD0EDD97270FB9A87BE870321A49958B10E3353D075A1
E740C054E9AA191CC6A2B8E854AC7E02D6C53ABB1608ADACCABE3D5AC2F894E8
5E234F72A1C099901DE1E49328D413CEE1295B615F37F139B70238D0C3177995
99A49939640D06478EF23B0FA6C4056FC2D15FB7800AF689C6868DB1E0A5D946
81993A3B3C100B5FA02EC334CEE85D1801AAFFC4A9253F6BC832A0E63EDB6F31
07FCC58C94F34096603C9E8E3719950691B4B5D8C0BB08883E09585EB7530664
C79582CCDFDDA4B4E487A57D8207DD18420AF0A75C5534B47DC12F571F827CA7
B93D28D1B195DACC47FE5FDC29EDD6C97DEF92E40FA9F957D6EC2A2902F7C4D6
8E837E7D573068C55D4470801D8E2D6B5972D30B54C54E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA853
B843CABA76BDE9582090299F423519EE3AF8F83AE7F7828B314B6E36E9127419
F274E9FBF5622C5E48D7E95664D6C0C1006661038CF2C93BEF1DE34A163A2C86
693A13F4D0F052D2E183F36401F0C29862BC1B36A086524F76C7EE2C6D436A23
7009F146F1756DCADD3F70C51FDCE610E30C0F4AC538A2703423A07976ACA74C
25F4CFD6A92969E206375FB0C672E45948B0E832F2BE688EC22FEEB3E06BBC3A
272F73081A30830AE4214F2F029918FCA40BAEBED6299EDBECA01E08F27E5627
F53BC56F4AE7CE2D6273B27323AB829E2D51672A4990E3AEE84331583A99DA4E
63610AF8F10C50FE6196E3F4C1E4FC9BA6BE0ABDC81A0A7BF6A5792A97BD0A7E
7BBD31C3FDC01D734550843C8D84C6CC0B492CD1A6CCD57428F03A863E959C77
457D401028FD00FFA9BC422FD09D8B8A70446A61CB256A2FA0B59A2646D9C5FE
961894DB8B315C52008B4416AC35439E010BF90E43A05FCB2FBE8E62385E220E
588B7FE5509F1BB71150E159D01D24EE28008D4213227FE9BCAA34364B1039F6
BC142AAB19C8E9B15F0113781DF9C9B3BC145955552A901AEBA588D39D7E87F1
CAF27D315E168807021B0CD1B2CE13B611A7B5FC28DEB4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE27995D78FD99C5784B2B7C7C509E9B93BCC29
35CD2714C50B246A7DC70C99B7DBFADA1E01B81749EE49A70853CD45FC323019
A45BCA3DE39C3E7618C6322D264556FD657D9270933D8B167D2575CF146336BB
1C76735F3B09470E40B0624E52F21809704749F6D81E3B829D163D9F61E070EE
D8CA803E56CF227F71EB8061B83E035C7138A7CFB6D6CBAFB766754C0E8934F9
AB738930EB75A2713CCBE333CC60A6A8F2BFDB043ADC0B94FA3370BBFBC61D7D
25524B08C70599D58E7521F58D26AFECE212309BD7BCF62735379ACF3309DDC5
C3F30DD7D3A37804BB23274D7B30DD69E1B2C3CA70F2F79FA29543F526BB808F
04609B43776382C4389362AEA7FE4E03637B4599D176F103143DC04D5B5E53D8
568E7911839EB05C8F4A9E9C911D746C4C8EBC0A4E6AC3CF08AC86548A8FD6D4
7450B1FD87B119E547047F43E9CCDE1C1F8645DA03EEB02B27E36BB6C87F39D0
505579B2D0FF4DA9D4AA971DB4C82693DEB59FAEB3A14C1547C6C46C24FF3513
EBC97357AA2F25BCDC92F98CFF9F3D5881095B96FBB30E8330499FB4803EAF74
920BAFB89889071729076D755021515BD8DE5177013854B10911605F872456B8
F504547AE968C323B85DCAD9AAD5FC33F29A921D427EEE0E098E8591EA7F2D7B
A5CD8A91C01AE80B672831C286C900AD20776B50D4D2004F7295D860A2974B73
A9E8B594BC8BCA8356DB43399E6A6918A887A64B2EEE98060E47C0F371681713
13F92A306D1A7DD5FCA29CE223138B98E6C6BE9F3B305E2E4ECE098AEC270F11
2CADA74CFF4BD78C5DEF4354211E3953CD7AD90239C1FFCA061A21652104F54D
4CE1C6B388B901F937A299F65C3217180D4BBDA87A96F4C31014265EFD9206DD
DDD45DD3F56823BF8236F0E6B94537D9CEF904EDEC7EBFB0E60995CF6457CF0B
1D76EFC8D22A8E991888FC44FF9ED2954B7A9DF5CF6F256C8A86C3D98CADF1E9
24E6C6725EDE1262199758B2B070504BD81147F35D8989D2CA44BEDE6B8BA09F
511388851B9D9865887D4EF8AA7AE6AB234B252A506EA2EB59B1AD40A04BA972
EC6DC7C9E4ADEB7E40045F10F38E0C8D50CD28D96A028BE7C67D1CD148404CE3
0DE9213AC26B82EB823194818E6DE249207343C37BE9B926EEDF21E1D52251D4
37D555CB1FEF227CD15A08CA2A245C3C6508DD3592E809E0C72380B92F4B946A
7BAF34835CAC375077A843F61978AB4876871FBF42DF8EB5F877033452F08D41
970883CD836D1668B85BD642F7F50AE117B3ACD1A1372D5D4D2555A2E8E23E29
D8C8C5F39807B5A01188DBAA07A27A116C80E837DC740E86068952F0A57E9027
C39A603A4886213EC782000DEABF71EAE1B8944E2EEF19E1F7FBF442840845EE
D13FA9B4C5CB1FDE6F0DE20AAD69160BFBDA23C2D29311C4F82514DCF27C6B94
A8E727522E182DAB2869CD2C2B0F39016EB778060F35A6FE085A1BDB04A65CBB
6605D4D72E11338D87D5B0283A4B81EC83D03F502E7DBF202BA558B4EB271C57
922F0CF3980A02A40CEB2FEE42B631C999B71EC234FED7B269E5D91564F0AC54
D70F8EFC63B94F73ACBB4CD279716F68783C493794BF12502E04FC52064E63D0
05F2034A1E7E4192D1193BD94E99C0CCF702D9EC100066E1490894F5ABC92A92
C3F42F4101AC88024884C018C7D0DF65F7CEBDD46FADABA26B5433D34C2AEB07
6031841EA02F1C9622E0B64CD190A4AF3020654123563C5D6ED62F112077A1E5
88A8C8499A8917CAB23F00BC124FD93096D2603BC6C1734124CA3176AB14F488
26ED2E56C67571DB18177A07E082CB873440C4648D3FFF06A1499A5C7EDBE172
1759C1BEA3DE43B426C5E175B059005BF2911E685D076FF12D01742E9AAFACF2
CFCAF0517858C28A24FFEB5A26E46BB5B788713FB8009CCFE62C17E001C96636
A8DC58B71D4BC720F615D2873CD11E06DDB3A7788888A8E713D0E82FC861C0D9
ED98E873821095C6BE6CA909BCEB6C9BB1B0730BCBCB20E22D06AD1AAE225D51
25AAA901A78E86386D29A7CCEFBAA8F35B4813CC9D289E5244483DFEC10FF237
E38BC8E19B81502A19E0BD113AFF02F4E365A4708189A7BDEAB2D32A6E464AAE
B3505AF669EC3FE5A7C9320D907438DB23A82D8CB9777BECA40890C137564EAC
CE768714D7430BE1825C90D88DF40E753607A06AFC0046335F97A2FF20EA44F7
94C1DFD6B105FDFC6EBC6D5745C10D2C3BD560C939B80707B471D13D7A910F23
91FA6B63F2E6A01890368EA8F0D42E7A93B343C664BBCEBDBC0C99138A50E5C0
F57977D929DC9CC159568FBF5523D79229E9BA352E4193A44EE745F76035DBC9
34588B2B8FF44C8368C9C69AD17E91BD78559AD4BE219C8B110472F95FD5CEE1
A7EC2A78941AFD0B102C6CEF9D5BCD4C4FB87316BC327ABA5D5F5FF14BFAABDF
9FC06879D91DADEAA25F850083BE6CC26AE7437664ABB66CCEEA19D0BDE898CF
328861C3CB4423FD2C0C1AFA95A6195FEF30511D5C87876C863364CE4B089A97
6F9C29A14A61785C42D2C746A98194782D9A504B2A0A92D4E4B5062855A33404
2E14145F4684AD22D461E740FA8DD232D18E559DAB50A977CF474EE1410D7097
785D120CA5C6E051D096CC40E931BEB074AA9E32BBFA361593C78D0D2EDCB1CD
D560A14E93017099D24663633B06BBE3C20A2718C044731B6DB8007749D1B605
F397413DF968722DC03BD138B0559D3E5887B7EA9C9C54F8335F55CC3F1B9135
C70CD0214CF04A4EC5AD120D492F25CD6E1E80CE87C5709112938ACF9BB2E011
87FC035CEA0FD5C1147D41630F1CC9B82B395BDCE1885A1D5F3441B03AC321C1
5CDE681DBB192993B553048C58C55F0E420DCEA46CD16B75173C5D37047E511D
C980EBD803E01C35504C4092D93AE476AB15324149043E713261671835DDF160
4B8DA000941FC5F85C754D5132402A0A94EA3D0E37D6B9890461CF1C65AB7C2E
E42288BD17DB983600580BB1513D30983C4FCDD1836FEDC80308316401D8B181
EE2A3B114F68DED3488EB9ABDBCE6E73EC5A0AD42D7735045D594C43A33EA29C
BE2AB98CD0305DD935D8F0F5EE3205A7576650887883B3C9AC23E217F48154FD
6CE1454F09486B47A5A18DE65034D0CC9F9F66DE2BE45C2D6F1AF8B10F578B9F
F66D78D738FA85FC454C23236FF4B665EA0E6210060F6439E9CCA612DC7ACE7A
D12F478F25D40CDF7D23E3E543B75A97A7BC960A7F742A2C89212832C36801A4
C384B89A91D53E0CD886C7BE0692CEB0CF29D9B4BD53E08D9FC1A863599BCF9A
717F4DC319B4B59AF009C11A91ACB087542F94750DC53232E62ACC3C660965F4
5849011BD76FF8489964A7848FC6F3CFA44B7F502649EAD20FD32FA1999CB88E
A646C764BD2088A3EF00A4F1862F2CAE2F8B6A8DB26A1287AB3DD941A92AC57C
EC6D4CFCE0ADFD99BDC3BE161F4C1FBA9B854899BDB7E9D09A1E25A95E9789BA
DC6967F96E550903DF9B81969E38FA3DE2A058EE2076C77C33A93F2FBAECA0A0
EA98FA4C3D1F8700B04CEAEA603A0833E91FB4A44AC83C4E86308B6E89C99A84
8AAAF1BD143560B559176CAF28B1D8B2C8370CBAD5873329B24AD4A743F2CFD1
8B26B1128AA48F72767FF2268BED8317FAFDB532191FA35C2984AE7C50481FF3
126BAE5309893814BA28263EB863D5E6F01C423E6C5D3289B152CE19FDB55A11
282FEEFFF3E262F26041CB1AF30804A3CC34C06C6FBA8AED582215711B0A17F4
1B505FA0B5F906C537EFCDEE4C69AFFEF89B74C5B83E2DEE7642AA85B1615F9C
BA1C3C3197223C98A1ACAA495A6B8B8F1919AC158DC63FF4600FDF993CE8D2E6
3DAB7E352BE200322BBAF6DDD2628694612A7790EA8E1836533738405E9B7AB6
9DC77FE9A283B3A8C6A3651DE8AF71499D39CE0567AEA286091BEA9D6A443A5C
D35747785C433D4E18A02ABA38F55742DC36E4FF07A656AFDC3D0A32CFC097B0
5F9D90CC4B614AE7F58F3BFAF22EE6821291164B14DA11FB16C0E671A6104082
94D05830E44ED3E9908B59DB3B3506C60D3F766ECE69AE23369AAC3B5951B557
D62C7728D6E3F13BE05939C2A6FAA336EFA57001DE299223DDBB333D71003681
B4A816B378AFE37543607554F1F1B427784EFB366CBFF1CD7CD5FE3CB61842EF
56F134AB25DCAD2BD08AE61E233FE6FA79017D1883C61EF0334681CCACC5D024
F39309DDAE717CDDEBF80C88974D717C4539732DAD1226FE504620FDEEEC6266
41060E55159270B4794F9C0945FEAC295D17B4E252D015910B847534A519CFC3
2D52169510940A9E9AD636AE141331BE35D1D5308C927BA3940B773F20E5B3C7
813663D33205454A1A4B2D9173D593615C4459845E1AEEEE1ABCE3E5328D3F81
11610DB32C86FF6F9DBA1B8D6BBA3C4AF64523F37F176F3256E298D22DC5F1CC
F1A67A355219E2EE13D5D6369F656836EE0A77206E8236649E81A1F0E02D8D3A
3C8FAAECF7839D20329CBC5ACB43482D3A3A1E9C3A426BC7FE406E89FF25FEB2
34CCD7F3FB3C608FF37988C7DE6A41FB1020DBBCC762F2BF24BF424BBB2D3207
9DD408226AEAA0C4DCB8DF16CC6767B0BC73EBA052FAA5311407ADDD4BDB1061
3A860B10D2C219E96E61050B98FB04425912F484F5B79B9C0735F92C1B4353B0
76358780D1547206329F302AF6853E5DCFBFE199A76734AEC487BBB103A8547A
0090F0342D48DFF9EA9821454CB759B3D82921AB4B9278E652C2F30A8A121781
8CFD111E32142FFB160DB6422A5884151A4671D631260FB1758BAC67E14234D2
5747F1E68E0C36FEFBD535FA5C64B046AA8835817140B76DC22B5453AE8F3F76
C69B9F10988BE7D061F539CC8711030D2483F752706E27D43E3102CEC57B8A58
6D3FF862999D20CD6BBDB23762249BA7031D4D97DE2280C10756DAC422F0B747
E427E5DB0B265FDD57193B8E7F00C2162FB111DC4972B51E59320793EC60AA3A
F4A3F68AA5E11F657F898F59F67E0D285167231B9F444D42F17CB182EE584117
FC81DDB5BEF8EB957F817C5699C7293E47DAA4EAD6D47F00FC6443EFCDCCACE4
627CFE80E82179579BFE305B9AA1770E8E8970E70524F9F7AE081E64AD1F71D6
CC6FF054661866B68CCC383E5403F0A734ECAD86937D32FACAB6B04F3F9ADD79
94C11CE94999A3F38C88115D6082DECDC2125A4643102DFD0AFCD8682BE5CA11
AABA54285DEB171209CC4CF8879A65088C7381B9029B67CE9029093EEBBAEDD4
403C382D29751340F63D14C45D0C8ACE829FC3034643F4B76AB7BF41CDB0A2CF
B2CFF7A3E022256D29AE0E789DBA81CB4DDE7D4A970A3162D903EDE2880C20DD
FCB205309DA145A55A2C6763E0D8BC8A0BF42461DCA1CB7E613647A93FAEC756
3535886E28292A422264BAEA373D5F1AD84FC79DE23E2BA52D8EE1B1D3F80318
8614D6ACD81856288366086F50154919E5C99CF62A7700E896F5B69456110B9A
8BBCDA8551C3C14F979F3CBB597AAE41210AA7A444428DD055DD35D91A1DD465
3800988005F542BD304D2D1798BABD827BC8A689C3C35078CC3502DEF40DE082
B544B4AF7127EA6D5B8FF5A0735257BE29E36A29B707A51A697A4D8A360D4017
19C5FDD791A1C640D47AF86948448DD00039DB41E9C5BE1A7E6BB48920932280
BC552ECD04E2C33B76A0F6172098AA76CD4660980EFA1C84D5348740B8A4885A
BE1FC79E81913524DB238155870C6B9819E5842664A4049499CAFA7351D3D3BF
FEB9A51236038D4452E44A34F25718B7158C40F12ACA152F1EE78072533F8900
CC3A1869BE48305DA62447B28A45D6F516078C72A4B155A2715B713EC359F680
FCF2663644C985191135F0156722F0BF1DFACDE42BEFD5278ACEC4A55F1A082D
537B3C1EE890A6FD2ECE0EF3999DB161EF7DB88DA4B0C592385D35F705BC2A9C
CD7351AE879DBB7FB52F25A5A5DFA45DB0FDF9B94F0AA69918932E563C8827CC
340AC4350DD2FF1A3EA9F8F3711A16CCE9A37170F0C02A9C7143D722CFC08677
6227901157114767FEC20D2DBA71C87061EE8BF523D591180D29A8F8E14A7959
731A74DC4B215D7EC095EBE86A3CB7C28C2EA7E6A19A68B64EAF236A3468C0F9
453189A1DFA55A9459D1C5B8CDC769D992269E6EC4631B1B75F7E6A511DBD978
F3032D2FC6BD54FD7664FAF472BBF13AC7F619FDC4AD5B38CE04E4C555757F69
C669C5EC403770F681C400FAEA98F62F02633E0F85A780A61DF255239F9BC3EA
AD652E6D5E754B9ADE46841E52DF90C3F0D7CE5DD684566DCF0B43A0B0F975DE
AE2F7601EB63C39D6EE8C54611D9D515EEBB7192C63D22D02BB2A5A27270225E
C95173C09068553725ABA9423F4B268C58072241D2DC5C080E7881848222220A
63605F00205C205B35DA93F4D000126B2CE72AC322B4D962537889CF225B3381
6EB449BF2C28599EB66F071FFCE3410C547A9B74D216032B72854A0B8A6ADE15
EBBFD5CD2BA9FAB7E75099FF1B68329B68A2CE587608555325EF062CFF465B6F
184FB4C37A50F08B2F1CF6E09E92D6215A5C9BE511CF326505FC5EF2B72DC40E
3350D5D5358B49CD7A1713DE7AD5B63F462A77B6268B7AFB245DE6EE02BF2A97
B0542A5CFD6CAF309B7E10ECA06B51C2717DB5BDE8E80D6F29B33E9FE12AC804
AA0C6670967F6C3C2A7310CCC64AB48219EF140A1D9A942543FDE90924C9DB3A
5D667E0AF18066F4318101305AED22847F855960CC952649426FBD46FBB5728A
CA73B436527795BAA59086831567FDD5B3BA6931468115577ABD8222985FAED7
B6A1CC891D07185666E6E74DE886BB13021AADC9950E2EF1FB69E5350B281CA8
F05E2830521A7BE2EF1D993F75619EAC1B3A7A437612AB0E8513DF8F0F44E933
75553EA81965C83F6CA655BBD1410B7E8F600CA820DF8B4BAFE515BCC974BCC2
8E06AC06B07BB7E08BFA5CA8C5EEF8386971DE077781A9E67359AD8E75DFF208
727DC428911CB820B9211D2A3C6BE6A3ED0A5A2C1C623A6D6615F24FED298A68
097564A8429CB235119311B9888D0BE96AC4BFD340BCABB8EE589A69F749B180
3E3C1EF42D935EFB4AEBC656854ADB4AED11740BA3FFE21D9099979EBD752E36
A8EA33F541256C368B3217E226202117CFBE3DE2C6DBFB0BB25BB138BBF69BBB
484DDA6371DFFA6222F88F0886C7F8848E932CF0D89BEC7E504189315DE0E931
69236EEC7E3C7AD630E43CB5B3540FE72436B7BDC9E33F6D4B2E9C167ADE4932
2A5AA48B228CF68EE0032B1968EB88119A375D4DC1AF6E4FDBB4862DB295672C
BEF8C0780AD1CED1352575A76E2FB6DA0EA3472267A89135EB528CFD0877E8D6
E31A02A87587DC7D4030E320C514539B504A31AF3D7A4DD413750FA4B723142B
B074DCC9B55E3A49B384006A6320B55B1CF4B2482D465B5835341350E215B0D5
5DDC1F173119E073DB7DEED7DC4A04968B69F792644FA8B0757303F40F4E3D39
ACE81E6816449AA859A9754CAD99EAB3F59EBBC14ED7BC71D669091521BF6739
131AAC92DD77A116EE7E81836676237F88C519F8DBF39EC35FE36E3D2577738F
553F81135829F9118F4BFE20CD51190F2806A37A4B011776C7A572D2FCF18871
BB569C2DB5B9A3347F911C34150B85ACF4262B137D9E0FAF538F8838EBF6E79A
1ADFB94FEAEC654AE20E3A693C2D57AF9597BDE85CA476C09617B1CEE6A2B48C
DEB0450B99E5E00DD9825D72B3A9D95383171187CD0E33C8CD308C436B64C763
C407654A8C311D3B3C8F5901B2AC785B222E5DE6A3FC2A9B0662335A2DB9C80E
B7BF67101B1F500FEBCC23AE484F2222BFD38455BA078A1A500CB006AA6A7D46
70530EA460E36E1FCC24D0148C458B745876A5FE5919C3C624E46C02C72E1368
8BC50A383020829462604E0B5B2CDA9CEAAA07D3BFCE05B6A2BD017FA8AB3942
D6C7B09C6F75C799F437E74F0E185AD518B7E446C30415CA18B5F59F3C4DC209
7CCF7B2FC2F789BC49E4AB223FCEEAA22FF3F71E5E5E966DFB605D18E4B1CA2F
59697989C41141C74CAECABF8616AD95FD9ED3B11C918BB38D14FDE1FB20C560
4C70DC9E98857AA358B5F754BC18087F2F7BC99B501F212C04DDCF148251E923
37D102BDF468038B07C256081F5B8F3636CCE0A293F905974A0B37050C2ABC49
F5FDFCA8BE38549AE53F72B85A6F03B58AE18FC178D906B9BF3D12A818C8EBD9
90E7A12A38A89BDAD7E6A192877F8F9B9C3E5BDF412BF0E8C92A234BC8049091
778F36D558DE72E0CF1737994854EABAF8C2D221E0081D853369B8ADE0B18E8D
FDE785893B5EFD6019A709D99989DBCD244F0C11087A077D2103E494406B1DC8
1032B618349FC6ED24879F02A9B2C2924CD9E921B84C4E6C0ED0396E44A5667B
7AD3375595524D22C358B73374B5E7C4F285F9BD614A00DE6825572189A19315
AD3E7E3EE742E2EC53C778F677810DAD0C8F97E6FC8724E306E2E37B799A57B8
009493929890EBB3F0C168479B6999AD5B3C3DFE28AC43FD186B6BABA7FFA776
83212C8FAF6DC682C841008292750A376D0398DA95DF8AA168A651403C2477DA
990FC58E46BB65AB0676A40A8130F05A6CD8D0A2713820D615BA8AE46DCDCD93
BF182F0D752C9EFA34692B1E9877D715480B2CBC1181E6A95B05E9285F173BEF
A5424D243AA8BC7E87176773002363255E70443F86B6EF38C81511BA8FF4887F
3EE4357A421575258AAEDA4B5DD9ED6E3482283ACB506A2D6812D4676F3F6464
94832C8EC9EDCF022E141A5DE5496F54EF7A0050C0D1D2166C4A311A0C52ED00
D2305C70A416567F5EE877F0D165C4D4E6B00BF84FBE6428597412531988959F
3897745D7159FCDBB10B6459273EFD03520F2483A9E7FA0938D162FC5890998A
99BFE2406581D64F49F46B2D453844BEFB1931DD7E2CE0E540A398AA83F57164
3D64D9D9B4DAB92AE722C326065E48F4EC7FBF2E1158F0535DFFB59313804D69
60AA6F0C136BBED6E020CA50ECC4A6C90A628121B6317FB8E40E11E48E61DC6D
B3FD911235DC5A823A176D8387CA420A441980D3E8666043259B63FD3CE13E54
945B0A6BCB5633B1D580346D913BACD9742B308D575A409EFBAAE5D96D65773E
BE8D69A606A70A06E230290370856A89FA8D56529F252E7CC538FD5673744947
AA98663DA46206E7A75B1E7AC0247834B4558985AF6894363B2114294E668644
46DAA5CE2591121519A4117747BF9CCB78F9F8A3F5D44459BF81997F9E7A34F8
122CF87CF933F558E4660C9FE5D440B33AE6DD4220A093310E3E65B053A2EAB9
C183BD44FCF0C480796469C934250A5CE240A1171441D03FD75811F371B3895F
AA14A75448ED483C51D41076C0FE99D988D612DEBF78DD7EE23922F1A25B3421
F4AB7F9881955BDB0AD3FDECF4CC3BFC8CE815CF8DC0CF6D4C15FC110A14C6B1
7D87AB69D8E840ECB176762EE87EB04071EB8061B83E0359E6BCF317360AAAFB
7C198CD8DBE03A3CE7728D8819BF7826CFD7EE20738DE07BF2CB6AB91D17C579
3A8F9EDA9EEE6F64F51F736877EF6935ECA18A5F86EDFFDAB7E32A239E731333
107A831FBE6A6CAF1BB6D934295DDA357EB9FD1661523AE5AF8DDD8B198AC29B
D3B8DD91D49CFEA23E7D6EE63090EEC569D8FBEAF4E5CA52AF81F8FE49557D75
B147C85088703C68C018951631F2EA80DF28F24FD71D502A040CB4DACDAE1FC4
F892A2F092A3E45C31A6DF9C59631C5811D0CC79DCC5C2D73915AB87E8E31B37
12EFFC2E3FE1428B2DAA1853FEE27EF30CB0A494BA6ACDF6788877A3104070C2
23170140A7516D83EA6A99D1E4F756CB95EA4C2F9F4541B4ACFE9CA666C46C7F
031C67944AE235F4F872E636F24BA68ECAFED13668242C92CCF7FABDDB6C50DF
2485AB8138E3D841A9D8F9F80AC1BABB452DF2ECC9744C9C500556EF9EB6764B
4F8134DC429709776F04C4D5E4D04DAEBF5C475C7C3EB2EF7E035707E5A69C6B
F3D0C6660E636D6AD25B03A443509DE32694DEB838C8B360EBFFB8D45798018A
310214EB1672483CE4272074EBD88C9DCBDD1E51AC1353F7C1C6F691546B9315
12AA015585BF3EE444A7F201B20F79ED641D0EE7473C6E028D62D173D45A6D17
B4A1D1D916165B0BFB018964439FA7B3877858BBA8A26697C5929DF8B06BE1AE
01528C75262EF6C5B60BD81D2770945D3D6BB88DA9FDDAC13FEAF57217EC230C
CA301F89A1016CD564EF2EFDF0BDB775895C4746ECF87F40A23A8418AC968F2F
B30D5073CE2A53F750B082C4A6590AD501BDF6EBCDC02B48008D082AC5C1C042
7AD24E2C9976490B46BBC2187317D00BE0D30EB7BD4463F7A542C9A7373C3A43
39301CE2F890851EB3E99946DCD9A40E25DD883D396E1B7292137CEA7B60FAA0
52E4E631CD7AD08606E816F3E54E20DE4C1F23B16A9440AD00F6BA5601CEB6D0
79BB75886BE988058F4C5A79047AF8C75EEF3919EB6C5639046C6371F2024871
88A7BAFAAD7699E573E26B49D2D3520CE7EC27EA837EDAF9DBBF7EAD3B2858BC
FE820B4633E69F61EF0A9659847F8BDCD4238F576E09B591DD088900D4590818
6740C9412068CEBAB515DF56E83B52503F2A044FB87D284384D6AD0810B5407E
1085B1D5104BEC91C4AEF5E1E1F02AC9FCD1D87929953EE6CFB6C2FD8FD23C18
CA4063BCC8EE90AC1756B426A936BAED123DB1E3297770D868CC596E737A5234
E91EA9C52A86F396EC334621CC131F067BE82B7A00167945245303572FCD07DF
901E78AA828FB9ABAC42443EFEBDA80787A0F0A9682632A59B9D4E948DAFC6D5
74A33B9CE67A5639E34DBF36BE9F30BE03B0B8FE5F8EA006251B9E33FFEBB1BD
B2FDE76B58AF101A0AD64320E0217F90916924BEAA08BF7FF02DCAE8484C13F7
C5DEDB4EDC72B4042D30D14E8F4D415C5AB2A72BC3F9A63FC847DC244530BB6D
83D8451BC66D90AA787A9A653A4F75C63447142226B4AD05ADD80A9D7DF9C7A1
817250E78AD0204C9DCF16C79410605D4D744BFBA60FC22E964CE10AF512C228
F4CFC3DD85AEE7C9E61D62CE0FCACB72E14C2FDB87A97F47425D7D53DBEE6D4A
863D81138795F521C6A95DEC14BBB3E5A8BB3613EA73BA2AAE3FCA5D2E78ABF5
0BCFF51317165C88BAE59023144D99A71EDBB90FB84380ACDDA68AD46AC7AE3C
09162E8A4FC6CD4741B38836CB599DF98A21C5245BD1435E23F7395871AD1115
8CFCA33C04ACFDA3F0707836091A6260F217D91D4EA2F2B6FB87E2E004C0C5AD
DD2AB665537FEBACD5BC7C774D53CC63B57F7C9A28A5F0EA14F929D5598F4437
AB944A06B5EEC3343EB1EC04DCD09A2A4F2CB04C74B200EE87D92C452F79B850
8B5A3F364A4DD82BA880A7A5CD59F8F6000E1978A9EBD18D33DDE269A3E70362
6A0F204E36BEB8606041ED5927BF69A367EEAB44967489A34B460172AB269789
DDA62F516CB7FCE827E8B6C453F843B10EC212D258C3CAD385E8512B667AC78A
09A780813B1FF02AA967B12AAFAD9ECE68CFFB45E6E44703FC7AD68DBAA09BF4
E38DCE8FA46EF5CDFAAF3113D089D7C85E5859F27B8DC4C5D864F41B8B3B0F66
D6FBE907224496686847529F68DEA6FE86CDFE2FEB8DC3AB2D124146E08DA532
B277C8A73DAF87129F39235E00862E70D7E93430EFEEF4CA1441C63290D48E72
84386F6082C2362E4CCF3E66ECC33C744621B1FDDBC9F587FA9AD60FF1DD01D8
20488450336225C64FDBE7F75433FB87932A162CCCA0114944A1AC1E57C446C1
533D84AFF286AB0086008147E26E133E012707E204F21F5EDCA106FA0636B029
F12E6809CD8308A1512A4F3BBA0E02AA42C71D9E27302A88E52BB8B1924F057C
43DB0A92111ECBF02129EE8DF16E063B7BB9D34606831C82F4954E3E9F458653
B6CA43CE1F9164BB0FE39FBCF2876FDF951D8F9ECEF97273B7554C01E0528548
562040B9FEDE9638C09DB8EABA360ABADCD32C16E9F72E34B4CCD3A3F1A87879
31F61A705F34B65A7D17B8BE932648CE9E0B7240BCC29C59A4D84770FD34E97E
0E6CE2C95CBCD1A7AAD2312A280F0C0753434F33D438BD8EED69053BE9CBDC74
E87B613542F58DBCA1007FF58CD1A3F9D87400FB8A600F088414D8992ECDA0AC
C39AB210921E327FD8B10856C476FBFA10D11E87A61DFE3103AF0DA9F627E710
DB3D3C578C86CDBBDC0A2BE5F6D17EDD30DE14918A2AF0E1ED9254513D2002A9
CCD73361CC952A8238AF64FF352BAC31D36B071C4B68DF8BA0FE38D3A0188439
4AF829C39DB36BFA67124053D79DB19F848987C0F2E57CC79D75EC3262338CD1
3F13C659D762DB6199447516E1A5D4B3326832B50B45C50D8F3B912D34199D95
8BC7C6ACBDEF8BA575387DD0D73162CDDD96166F795C46B8AD5A7ACB5C30A9E7
9E85CB8BF53846F45871E08B42AF72B3F3760F5FA35BCD767FEE4E9808EBF054
38BA865AC5CE19DB05CF529A5DB0DFA4F1AE311FF2EE1311CEECDC45A5A65A71
E268231C07EC0F3AAC2337536495DDF6085A1BDB04A65CBB6605D4D72E11338D
87D5B02C7980703D1DF07EF2E12C9802AAB56426BFD7E71A8056C4D40E53D42D
AF400AA41C55881CED39A6EAD01854DB545A7D0E46716D81039491DB446916FA
5F10B5FF1AE36BAAB8A07828702857EDDDC1030D19928F2E260434DD44D61B33
1A026E3D72A9FC0E15EE51F97141125A74C5BBC35D82385C083D07AF133BB1BC
941AFDD9F34D5E0FDB49915C613B9E6CA03E2FAB053421BDE071AA7232D3FB8F
2F4E2C4C544F441AD84AB5DE68AE07093F707C67DB1DC2AF85CBA7D0FCFEE888
CC7FFDEFCBD573725714DAD9F6D32D04C681C42D15D8B8DCDEF77987C808BF0A
56664166455D888CA8A3B820DB6BE101296BDF05D296180E1F0068E431EB425F
A04DD315AE10FD3A72CBDDE3AF4825F7C3B591FB74909EE16F53AB0F444AEC23
3ED419193715DC8998AC0E556F16DB74C13D05E062FF908D37AACBCC9086AB4D
09E359B41CF74AED5B75C01085EEE6959AF5B321D1550C15C0E4AD2245D110C2
485C08BA84E13D79C4875E249580B771CDADB22DBBC1715016A91EB885A51BA3
F73CDCAD65BE718C0072A840C5D661E2BAD9236D480D9250A1EEDEC54A0D75E0
C853808E0E457AC644B40C5D496DCB96A463116389EAFF5982413681C556258C
6A96EBFA86A669F671B2056B5206CB2889A999E7573B012EA2371452E23091C6
5D76AAB3B0B47745CB8CBF9EFB538C274E3C64685888A61CD2FE2A3912714563
19C9B1F9D62740A6C1E4ACA130DD76A67920DBB1EBF803737388C01B84BAC1F8
C5D2AA3A3E6BCD63BDDD75FB5390E6DE2159D712C43EC39112935BA5FBC2D1C3
048DD4A16B2BECF9DC186E0B3479EC564EB9E63BE5C92779434A3938E1970D8E
A3CD40C7B8FB442058996268D90BEC85B51D5111091F54823FDAAC9DDFDDFCC6
DD12C114B7373759BE4A62F1370FEDE056CEE265838696FCEA5BF7EF4865F3EE
0054B00A9EF36E06722397867DF4DE78492BB8EF96B9D0B8AD794FC37229A534
DDDB4A69FCB5E94DCD2FB69D65D8D970C3C755E6F464E23802978FFD29A0F681
BB7C42AB16F3DC305839233A6D79FF1A8152419BC99C0B233ADAE39DC533F1D1
0843067264DF39491C34CB4BF88039971CBF0B811DA5D0453701393BCF3D6251
E80A93FEA61864BCFA907DA7513A5D5AB90346D805E2A2205BB410B3E1317CF2
47224ECF9FFD37BA6DB7283B75010E5542A389EA2F787A4693E254921B8DED4B
654A34C1C67C390186CE712378CC6217567E4233AB90D231BB07679EB2ABDE89
5E12261315A776E2579686DB956486C96942AD652B9188F2FFA1495493978225
54956039FCDFCEF8BB4382003153E604C23D313121A31905074446B1B55348E1
E2CEB827C74133EF89CC4C0E3BC93691F53282A0F0627B5C2BF0D24FF6B79AC8
74474B73FEB6FBCFE8F5D07B521EB0F086704D2F749380E92B97B1D4D15A6A6B
4A8E7F107E2E4ED3AF0A323F4ADF5BA2DBAE0C452EB77B9EB60BC8E8DBAC5E44
24AAD00B852219A60384F37D44F4096D8AE632FB2EBC0DDDFE6674552253C086
45F0BE1E25404BF8131379A057266485F454D5AE1081304809DF523EFE64D400
BA4D22773664235629410B1866D7A52B5AF7B22EDF4D13C1A0F81659D7C22C7D
D495DAEDFC651D4A939CCBFF875032E159EE437A2F68FBB9A796AD2042FF89AC
01843A0B408603CDC4D27FAA68D7A5407E0BA263CECAF34FF58FCCAD408B8B07
D84E95D6D79E0FDB6BA53C1C524097F7E1070005FE0374ADBE880B8E044E4662
EF0AF221544DE5DDC61A54CA0504D9C77E08FCF101D33E908A71B94B57A71E99
C8E97C95D6264824385F1E9C6AD73172B8777A6A9C884E2131126C9A2EA19A80
074BCB3432256BFE41FBDA108B3363B7102FEF09C25D849D7DAE91025A4C6D38
DB16CFE8E67900498C2F9834799128DF2B034852C673ECC4B4C9D77AC775F945
CF1F96E80E3B5528D4D09E1B5E78B3E352007805470CF8FD960389A736A651C8
E9877DF4A9DE3457D17C81740DAFE000798A2787814333C50AAFF69C863E0A44
8CA25084B8F3F8F2E1057421744C063FDC483737D18DA220D239EC30F2A4A83A
7E833552D0A83643478A3A066E2265E93BDBB105C2D5C2068521B1D65F4055C3
38C3101D43BC8F4B50E4D18E37D86325B248378A1DCD06600ED4C433F802A055
BC642DA69CB9C0C3C86327BDD6C8B68C6C14DBA851306CFD37C3BCE8AA1DABD7
95C477FB0CE298C342355B81E752AF4D91AEDB312FAD24E279B120EC195D43DD
298F750556198C024A0849365795E0D4CEB53AC09FCFDE40EC0A2F76154EFC83
56EC90BFD09D2EB451EFDFA251E9C4B888392C07F151CABAE683193992F71A1B
3D33AE7ACA07B528365AE5233ACEB384A165B2D50284860A8999BEF98BE52924
33CCDCC16C0517F50F406270CF873290E99A3BD506A8578376F78C0039EB05BB
1BCFB9788F34E0A1E89410480FBF4F9B7273BF9C21DB56697EA83892E675B312
9DC52A00D34F00D2B4433E55D01F120C19F0659221256914071E40F91E422175
B0B92FFBE2C5A9839BFD9A7C3AE5D2B7E74C9164FC764C168B3F14196D870F88
2916467E89A6BE6E65CB9EECE72625F9302F42336C8325B4972E875507636B1A
4CB0913C12A8AB542901AD5E7B28EA43908F716CF825DB774EFD3AE4D7F6B695
E7A7A4ED77EE109EFFBA1A6971678EA3492A1641851FF8280D2C1BDD3A42C2D2
49B9AEAA95107DE25BC5A014E43E107F0611BCA32216D81DBADAA3DF3C2ED508
A5547C4B8B182CBE28D968BE8AD8FD28A9EF8EEB25F6A230DC6AB0708EA90668
8B5BF313FCE31C48BF614B833459A85A5D0CA2D66A530027FB3AB9F4C1441ADF
A105C13756FC436F3748B78F1CE263073D8B3381AC01A56232B70F2CAEFC3628
D99C53FA9E9697C436DCBE96EE891EBAA705DC8FD04FE2FAF9F4A6E57F52F58E
F8FCF8A7624569779268B1DCAA45E8F2E0616C674CA5960FB71CC02B49818A14
1E36A6EBEAC4EBDDFFE3A1CD8A96F2D98B3464EAD10C6F0DDF513A630E0133FE
C808630E4F7DBF608179C8BF28994732BCC57D928BC883B8E7606A48F0D4C547
743FDD7A68BA6EADA8955D5540308E63E4819C7EF38084D649289E4600F5A672
56788F406EFD37B89CCDB8524EA0501EAEC5D21617E9E56D6801FDCB65D082DF
6A96B530E0992F3E91EAFB51032C05E7D425131A70F0FCB372678F0CA59C72FB
D14523A181350D6EF6F002F576E078BD26167522FD3089298A2618F22160C2F2
FF4B19149114134BFB10D1CD4AACC908540C9F6C3D06CF91AA7CB06D15F07AD7
9D6C0ED1A722A10690EA308FFFE6C5279097919A2254314FCF21D618A11C8FE5
D0C2BF07A23245F40EB62410686BAD6E6AD0598415CC635F66E8CBDD13F1D5A0
023C7B41128D4859E7AFCAA164A1C6D88BCDB45C0778BCA0D4AA7841DE13466D
E9FD198909D3CAFE48B040D71A55004B6570C850B55F5AB7CB006979E332D642
3E07B092D8E28E4B265AEAF52EC041FE1BD2E892576552117FE414336D3F93A3
06F06252902D6AA8E9366E0BEFB97591F9BA5D835B77624B250F783A5D27DFBB
1F3D0BE971812A7A83450DC0675C45C27E6F17EF73AD5B6DC764101CD4CBC3FC
2A4F1010CC1DE139E514CBECA6C2E7E0A6FDC0D15A6913B9819B3642F3604903
B4E15384FD809B87619E237CF2217EE3A1584F20C0C8FBCAF232FC4C567CFD7F
82EE726DBE6FC611C3664A4F155166BA36E2A6FA8745C28178B036AC8106AD43
98AB97AC321B53C8510C426305F225C7826494441E3C08B847BCA2FD7D159B03
08E33E6C3C2DE149887652DFA852F8979C7A5CA5D52FA1B48C90F140B934EB58
5D0954056E01C1A481E945FD890AA23745900DF0B0C187E60F0FC69BA71E12FD
05D033B7BB81DBA95A73A3C62A32D58DEE1F47F846CE2506708B2CE2B1449BA2
CA19419F655A52CF668AF92D65A63A040B60AE30C062E95D29D42469E310D0DF
F2367AAFF803D5FBABD8FAB1FA27CAE4EC9AF550F8C5D4D704CE2B2DBDB6714E
EAB762669F238BF24243C1B3D8343369FDE6EAA3E54E66E8F5F95CBDC0840F95
62D8D8BCCDEC4F62A11DF4A3856EF44077C2F4EFCB6D11B27F8A1E3C95DDE4CA
70E9A40D7B621BB1B3E49E42E7B668D99299AAFC1A4965F05C16DAAF8046364D
9C8E8A7E042AA371E061C368E357E57FF2A70AD3F431A4B0997305F7C70A208B
FC470AB52A361AD1A30E7AA6F9A2565C497B97BAD2EA3CB98A226E473BB86FAE
BAAC45F7D93B07F4CBDE23971DDF0430718AFA1DCBC38BB8B643E00579309882
35049DADE0837EAF221D2C24115A2111DDDACE89B77BF3C800BA09FA51118BB7
0152D429F5D06F3DD650A91022CB10424212EA9016A34634CF88893EBF53D8D2
851EB31C681B7DBE3E7C7BDD5E6E3F28BC2BC1F61B40C27CD56175AB87E1A511
A61643A607CDD14F0BF896E4F71B505002FE74B02B3D0C6B9B201C3AC5CD3117
B29106FEE42E23DB94A0D96E085BCDACC4CCAAC9DE3F669EC1E5E85697146F66
B9C5BFA5415ED1D6DC627CB8D85DDBF1AE27C913C7BC985CDE0F17C218947A97
29FC99474E7F1A136DE78C2925767507B0E05FA1C84E749A04D3F612F8D1C888
5FA8AB4D8167C57C6E3EF7B7378704D1BE4545B72D59E2898450699BE5ACA02D
B1536D99057E320AE759A081B2D1D4CEB9E40FFAC6BD2F8303F58AD7674FD8A5
8AD06AA5691C9898813E5A4AC9BD0087BFA2F2D8B223D34FA3304DE0E78D6286
46C32C1D95C0DAD9F6FD130D8F94874DD922AAC1936BEC68BEE119F677563470
7BDE40DDE9C577433F1C3461DA816138BBC8B8377BE17AEBC71B33F0B065EBCC
731CB2F06F856541DAF490B0CBE5DC0AFB32A9BCBECCFA292AE5BA0FB5139640
5DD0D9D83AE512C9CEE0C1C60290E3616A3F022433C3F6F6EAF6DE291BCFAAC2
BB1DEC703A7CFAE5AA32CE2A3247337EB35E06463312D48584EA1598B47E9026
8D1735C146D41E551CB2D3F55CBFC8CBCFD7F9AFB62B4BC3691C113D57BE4BE1
82B460E8A72F356B76A6157DFE1896232BBD03520B38959380B6F051ABBD09BD
9CD5004F41069A1AEBA592BABA2DB6F3D663808C2BB6B3BE5B62FFFD82406EFE
DE2A2CD2042C90ADED9A98ABAA446EC08C05CA10C25035383201CDE43E7D913B
7CBE1AE4819EA7190074DF45A0B3BCD6478ED664774225E83D3E036A9ED5FD9C
9C2F8385BA91BEAAD1A686B66DC30FBB57A48916C55BB69B7607279862E41917
DA08F87D352652A3C287FD64E859A014650DD9C516FFEE68BCBEA7419EE8EB8F
DC46382E841BBF95A07528C8343292E178983EAD816CBAD329C7450A21E4F97C
8FF528ADC2F97F87C5929790B2C8CB205DE87280206EBD32BB042F46824DA250
3750181426B688E5CDF0E2192521ADC7B5CC65347138111EE35D377D3EC454B9
E8E4E4B7897387234F730A1D2900A06F037C4184CA5445D5B4F43726D9BC8916
53DA634349A875D3E200A018C78BE2E930457BC33AD2FE36102437FCD51D6CF5
DC1E2B1CED5D9B69ABB3746877771FFF3BC6AA3C93B843D8CD8A652A665EB31D
6B75D752E09B524434BDDCBBD35418E9E9DAC3479D3309DE6913788F5EABB3B1
2CEA753FBCE23AEF16A12F81D6145E335597105DF203CAB41F0E6C48E1704F31
1F51451DD607A8AA3B6C211267BEED7075B675167872F7A506F4B9E48DA54A2E
9107BF28D8FA0786B28FAFD19C449E201F2916589239E47749CCF7812E0A4CB2
D756FB0E9E4903814F45A7B7F83DBD4E4A9038636256EABAF8BAFA31DA0FF015
2F3D8DF4024EAD5CBF3F5EB4F2B352F6A9FC7FBC2A09404AA91EBD84A394F478
83D04366386D92945935DD9E884D3C542F83821C56B4F44B70462F9975A6E314
A2B10A096686CB6BC7604D84382347522297D1EF900E8ECB62867E05A1E27832
DAE605FF0A2F3DF7D337D1BD5DA91DE65303242E2818BF94F3B4B60480721532
3DC5C7C3D0AECA2B8B7F8EAC363D0D75730D6DEBDCBF8518893D93E79C9AE952
3AA6DBBB526995C1C0A3FB8B3BB4222D0DE8C16E6E4A5CB4922F133136AA81CB
3DE0F664F7346E99BC3B1CC6D379B05809BB83D175B1DA90C2478E8C29ADC1FE
E939D24196218B6CABD4E85705EA9242C437C464A5EB0BB4F2C8AE029BD1172B
430088B5786E7E1952E0EB7A4A5B00AB550C451413A237842D91C888C70D4BBE
E691D8D8ACA1B60FD474A38C925E0587A1CCE0EE37C84FFBA306FC5E40690E46
4D46673BC84C902C08C9E34D3B5428A9558234C569604441691CDCAC60202A57
8EE093B5A24E49740C2B0D1133B405FD0DDC423BBDCB935097A6723DEAF7BA84
D19F98820F993EEBC5CC2B1AAA776F927C4FD3E0920790A57DAEA08C5B169A3E
274BAE85AD457EB21EA14C919CE9F13C2BFED1652493DE183B62202487944A1F
C201C6C5263EDD2A7CC63B5B7267817D60593E7DD7AE98A2FFDF5357A04F8A74
CDA53C2FC248DAA549DE6A1C991A3B0CEDFE7569ABAA9786FAF0DE5752ACF12F
16A5BE9A050B0DE704CD8EE4010F3E3141E56AD8DE314808FB8636AC4B4F409C
806CDAEC4A8CCC02A5371334CDC01EFB707AC25F7C9EC4EFA5119A1AE99FC285
EC1BB6E19BE9B1E902D8F01E5ABE8CB47DC4D24F75CA3925E9D2221524462A1F
98761B4E749C5032ACA5617E1CA933E7FF893E32E154B890317737F63FC5CA01
470254C5502AB9797B8CD0224FE1EA2AED942B5A64DCAEFE14DFE807F4F8A095
040E95C59CDC1729452E72066A485F3B1D0C21299E38A93996A0EB7A3357ED91
D25A8FEB3C0FB8C09606DF50490C7CAFCE844147A475EE0DDB693AFE84246AB1
8279A2B24E5B50A2FF63337416F8E90B351B015320794A89E84C34F32B465E20
17E4B307D03DAA4EE95D353CDED25EAEF73162A697698D24543F31906127617D
2AE1B888EA771422EB425F39629C42CC87EF9BED29CEAD50C3030B6E9C2D912D
007543EF2673FC4B62D766B257DB2E4947F750508B0076DF11E65FC232D7FC15
64A39987B28E2EEB041DE92DD0AB71B6D28861E5F87CDBD81FACC7DD80091F96
8191E7B7FC8CF4E3C7FB4EF007EBB868DA7F878BDF6355C62305966105AE2EA2
8F6657C76F77B64D605695615950B45A64E19FF25AE415F460780114F9E0E089
B3BA3FB5F7E22E99211E523BCB1AE8B9A31FAC398FB4643E2AA1E3A0E7A3DFCB
F1CC2B737C0219CCBAF02A248C68FE46365EDFD0D9542C638A9A32907BC6AB6E
2B4761FA8430E43AA7620ECF712C0C0CBCCB4E89492ADA71B9168C6AA9E42174
18399378863E3AC6FD31927C8FBE090DFFAEFF60859A9FCFF7F8EA237FD355AC
A0F21EF5CBDFCDEF457F841F3F8778C8C392A02C263614D142436C0FF38F25E5
6C50F830947DAF090BF54FD4E7B01311521458871B0C8F2B194DE33DCEB8DC36
446FB24D63F66122E702CD92ABC542811EDD07010911E6A7AC69B91B15400EAC
8A99506BE309001F68B04377E9DAD87BCD6759B3DDBACBD0BFC86ED05D1091E4
5AB0CCE4EA77B08DD920920702B39D25B60288B81EE909C1C6481A61401BD72C
146D133AB7004F31C603AB653316994DE423123662D2F640D9972C7A030CCF03
F513355BD4FC3209B93600F1254FBAE5E170A91F6C849635FF109BB34E100427
52C0B839FF9E58FD6F58CA946D021BC9F43F89A649676321FFFA0E5FF58C9A60
5CE4CA8FF7ECE554F84179D60D0A12F526494AD3FFD3B6C69E17A074031B8EC4
BFCCC16DC273D4A01C98D826925DBC56B562DB11A93A95D033B6AA4DB98BA976
7A44CD7D920874B55A2F393F513C09D57D1775AACBC7B948F7712C064081A7EC
21FD1F6781D44DC2D13881EFA3DBDC17A5FFAF17078CC55DE418D9573497D391
1B0931A2E09C012CEF743BE11D57529C07C114D1424B7AFA2EE1D5167D0E2E82
D385830EAF3992E4D8C863BA7F27390E2FC058956858642FECD50A88C7CF6DCC
924A2BCD6C8115A2DEBF8CDAAF3BBEDB05DE5BCB73C7BDB04AA10C83C684F7A1
7F8ED87A4177E1103949CD12715E498B6C3C6D5085D8843F74732B2B10DD809B
BE09847418A295CB9D8204F0C5D2E96F447E8CD23B3F1329E1F01889B9EC401A
4E61E3036097F66605251CA558067D2FC53A9523AEFAD8BBD5D9B2BF18926E27
341D514047E4BFD62CACE934EA61838AAA3CF084DCB1FFBD0AD41ADC9000FCC9
B323648D1111EBFF81835631AD6C6FB88D8E7A079EAF6894363B2114294E6686
4446DAA5CE25911211D267842187A9B2C04618D40E0CFDD1B23AA85A32326487
0F66D52D087A2188BC928DB56231BEA4051318283E0ADD5113D005A1B66901FC
CBC69829663359171CE6F9ACCF83B0C2426B358A2CD7AD380EFAC172D225FB20
7136B4785BEEA5DAFF02758FB7059BD3600C7881088CC4528207CF061A6389C8
44A4C3429FA2BBD010E0FCA4E93442482049435B525F265179BE321E5CB431C0
BB2A983CABEDBAD394C7A7C155763D1C8BEBB691166245A8E0305104D7FC78F5
84294508A53A987160E858F76C4FC85F20C66518608AC5D90D8ABF8C14922829
10DA2DF6562F904A9A35927640256B31120CF711DE24CAB53C62484F3F51EEE8
831C28BE115D375CE446FDEA7E0890575BDED9864ECFE0D6959D5114EAAF1612
C970CAA2C9472F30B51D2E9B06FAC2DE33D3B1965E05B2B363111F45FE57BD7C
BCD7D4B885AB7F5DD10679FCA5F7EFF91D63A91366E1C578BC1B886C07064267
C1B2123FA24C9748A351E3AC2B6D64A6930EF0F1FA9BD328DA2BE70941CC71C3
940880EF29384A5AAB483A5B9E87B17D39B03D2D10C92F70E345CB8027706AD0
A4C81D4BA9759243F2451618058903F0EFD56598F4761FA6C4AFB18AB8418651
E701004643F4B76AB7BF41CDB0A2CFB2CFF7A3E02225682065948073F4086B4F
B7C98DE9FE8F04DAD394CB6AF59988A1653959BD6F18A593F7F2F727BAE27D7A
66202FD03BCD9895C6238C883492A1DA82310E6BF4F054EA47F2A7FC201267E8
25C3F5D1A08FCC2DFFD2DED749E8744ED16D426B269537BD1E24DF0D018CF19B
1E977543428D4628552FE5641F3F463F43AEB75CA5648A11C4330F02D322DBC7
56822E7E515F4867B0507001D56A6AEAF4635944CB0AE12FB168192AEE4AF696
EDE54CDD8A7B0DAECED0C4166E42246934DD00C08EF218B03254F3561CCA62F6
821F0D3764780499D4A5816CC1FD41FA211A5E52A64CBC728EB209FB5A0BF3C8
5656D645C92FFDC311F8BCF7EAC2D6E2FAF9287268BF1C0FB911F7C941789090
5A4243F63B1C1767A866F1F9B4B27B64CB3D4410822DFD4382E4302DB3EDE6A9
64FBB99F8AF170A5FD7DC664CA947527D857FD477BA50486F6864CB7AB263AD0
3D83D0F6ADE3DDC4FB8F46BDFB4533A84EF0714F19E2237FB25545914F295276
29DCEA6EBF0D04FF08A23FBEF74F72E8976867475731BFCBF77993B27F23C4B9
C0085190AF3CF7CC2822A913F10B226B6B3502746636481D83C0C5EEFFBA7C46
4034283055A466DB744A42B0FD920AE1906A8C93E809536E9087CCA809106A42
A59417359185373788CC991B61ACB6AD7863E30EF2DEECFCD5E0AEBF033BBD2C
297D25B4BE338AE55A86F9BDDB2548C636296EB39698DABB64FCB88168ED8149
34A247C30339F76C9A03EB5B24698F6B41DC1BD6F08FFB4BADDEFB530EEE02C4
49CFE000A0ABE41BAB5E0DDF849609B9D0745DD364CC9D816852D5C351BF1456
B1AF4BA063CE6B333D258791B01E61A2DD28EDA14B5FF1EDCABA25574158AB0E
AE3ECD62EBE43B473FEC1F76DA6C55089AF3D95E3FD517265D1BDC9AD9DF4202
E2704E2D855D46F32DE17AB46F2DB6CE16E840BD0577CD58A2FC5B7D170AAA23
98634EF7000A93E26823F80BD469AD6C685EB8A77528DF8AED1074DCC257ACCE
56149A49CB4B62561534BD33772C84E85B6CB1AD69A9A97282E8DF9FA97A20E0
5E027917F050631E86379F959CBD9EC46414A822A022439DD69B047ABF905A86
E2C6C10C1694F3526F0BBE8E4F5D2AEC739E33319AE8172CC0EDD3FBEE6667ED
A6AF0524C08F445DEA4E75D61036020AEDB7754226F422E9551CB484ED910269
82512AD84206EC1ED85DD0A6F34D79C33AAA6651C0779DAE2CFAAF3F4C13FE41
3330E444779009B6BA9C093CF2C222DDCB85D19E179DE6EEE684BE3A7701C475
AF0249835F399A5539D63AF043C136465C5C64E4C28F8FAB1F5AE6A7B8DE3F5E
89FCED37E45A5A67994277A6C80746117F7A46FA312C0BF7140BEE573BDBEC77
2628A177FF01BE719F6DD2F44248DE66B6EADC0609303E7BD00B461544B85F64
FA6D6130832DC718E2669B99D0572C623DA41AFB80699B22545368AF6CEFD616
49FBDEB3B31F1C72FE37AE784561BFBBFF0182B969C8BA1632FF06342E7FA9FE
4BEB970EC45F7A56748D8DE3972F09D1FF6E8BE11546D448B07D0D6408A3845F
F656E4337499040B8DBCF17ACA51256EA4737474941F6AC3653F674E9625262C
A557911A3715E19E727337FD16171908B26A86E0A700BDE9F57448C205D6CB67
FC2F45D36AB4620DFF2CB459AB7EA91A802B34425BE1529AAAA0013447A29406
8183459B1E9CA73B17DD9B8D910E195BC496329C200E954B4A6DA6617E3A56D7
2EF332FB941F4B9F4453E8ABE6A6FBD131E1691F749DEBB18A5B5B90DC62FE06
D303CEEF0D9E89E6660D609C17A3E2095F15E4A479AD325FC4E08FE4C042560C
3A4FAC284BD50D9DC2E974270D1A32A27E91FA346AE9C4573DE9A207101BD828
1739C239C496145E7DD84FDA4F11EEEA103137618B2919994238F3B603EA8489
EF99E770EED78A968F1DCDF69464FDB0D304F9ECE6A91142D95593EF9FD51E98
427C6AB73A763C946C412296971E30E6623CFEA491774E65136E7B0C5230E9DE
6E29C0B90BC60B67486D3657B4407474902F732C9E1B3968F594AA5479AB954F
72A54C001B54B0F0D6DDDE2D630E602B38866A6FFCD97DECA541F288655D2AD8
A06DCF95A040605BC8FCD3E6965395E189A1957B94105A98E5ADBF4795A108E6
C6E15097ADB9A5BEEF8A8EFCC84F58309D656041D58C14FD6E83D3282ECD62C5
02212ACD4ACE665C932C85AF503A78F14FD977B90BCDEDA619912D6E53B35063
7A1C6B75840B1B208693397942ED0508663E38B7FF05556CDD7FAF7FD75EF875
D05D0E3F9E07539C80A599C7AA78251241B46296A30000B2D49835C34DE75CAF
4932693BCE009A580C543419D1D8303C39AC1A889D7B29349C96A4FE994637E9
68B392213A1665DE12954F43E5359A69CD68985E4E88F3FD741603D1E0E18571
D3DA62557A0376C2E7162D1657F0FBB4B98CDD23C4D7A4185722A4CD1DF2EFBC
68BEB0D23573EDF7798A4397FC6B28F7DFB72F5895A6B2A2D69F7A08162ED8FB
6C594E1B6C10BEF2DC54827C90C5DE55D4CB47440014F30DA7BCEA6B5C566F54
1B1E142CE9B86480FA9072E4E58620CFFBC8C6E51250F22B888FEE8C567225A1
6C4CD76EB085CA9444AAAE42D0F6463B2BAA66E94AAFAEEEC73F2A5106CFD4ED
E8ABC0A2359CEE98A2B2A68C8A932B6A16DC2B71A6E1B96BDF81D048279887E1
40801399E5D9D2687A4FE6FDEFE5BF321C1316B0C7EB28F470193CA13D073598
7D4AE2153E761050BCF89FEDCA6F80E6E4D69A0DFF99D86DC88F11FD55B53F9A
E906C232A124D171C22295BACD1D974C8BD8542BA4221CBBE91BC55A81CC89FD
E91EA283543BFC3DBB64A20776A74A77D10C6C1DFC91DE62C1AE05CF606926EF
B1031FBD6D51D46599D8C2DD5DA039071BFE90DD871AE2C6DABFED1B54FDD197
F7EA97493D82715A6386E4D84F5895B5D3A2E908E71993B14E043AF1AA9EB1CC
D8D69B0B5EC2658862DBDC660C680662D0B2574244FCBBD3E5D8E6EB5EA71F72
080DCEA94F64013CD52752A4466FA247510E8E072E21690A54CE5323B12A0B90
4341DDEC5809D633E1A4C6B4CFD5AF48A89122E483F8661C950C7ADC1D2DE0A3
764DB1135CAF1608528E74409DDEC376D2723C7DBF2532C43B6FA3D536EA29B1
3132018A82A296D651FF97151ED7595AB50682F2836834154C396DC3BBAEDF30
6CCF2727CA2E83ED9E79081548DB041DB04D84272A866F0924980109861BB4DF
42F335D727C36BB48AD1F304AFCFBDBD486760F1958966EA37144AB0CF61C74E
F6D8F76EA62B4D546FCDD0C1F53FC35738DF6986A64B26F9E938262ACC97E500
8808925B41F6D4D4FD57000E1EEB5AC81E317B1F8C38CAB1E3B5ECF4790AF0DD
285B60CBB224FBF95B8DE84D7EEA1AE5CD5546F84FFBE2E8629B9A5D3AA47409
1E825AC1163E73D55587E321B5DC6C78F4AE10A3C1BA18CF954AB640922BAFD6
649DE323D2618AC4BD618B14688F7A0FE9706923BB5374A3A0D10D4915CF9F05
31A6321F31F3CC115B95ADE2346112A2FA021FDF6E01434E46A736FF8BD7FB1C
BBF39F343D0A97B53EE60875A3B358EF90BF4C932C20A40454D3AE5A79080527
EBD453B75D33E95D26A1FCC3075BD5B962023191EB1A75BF470A021C7A9661
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A746147F456517EDB169157DAD9D8AE5D7
EF2661E266C5C812B03E2569E0F138C2D58E38EC9F0B780C298874616D09E399
6CBC81BF2A98EC7A9A573A79CCDB6327D0DD0F821F886FB4496ECCA78FD1A2BB
CBF0CA1255799DF587CE66F042F7A5179B55075FC89BDC3302D01D7138DA0828
4C8C35A8E26752CC2EA8F3AC2AC68E70946C3E8F46B9C2DF790F79269566BF9C
9A6E54EC87BAB7D34EF99AD642B738312FC6F300093EBC7669C934250A5CE240
A1171441D03FD75811F371B3895AA29DDC6A984C0E944711C77542A66680C933
9C7F2D5A30471C6693CEA46EF483D1046E1A9FE6EFFA27CA8C9ACE821AB92B0F
5D9DC9D0A91B93ED65003BD0C4D6608A6236426C7859229DB42614A54EBFB4DC
8097C0D9B0FB95A5A87CC9FD874959462454B5D439C456BB55FB81B09E3FC5B3
26D850A5DED9EC17E11FCFDC544B2885995B5EA543CD7E8E17FCB8B4ED57D7C6
1B0C70972F86F67336647589FB0EA874920BAFB89889071729076D755021533F
B886A9483867A5E3CB8A961CEB372CDE1EA852052312ED4484491532ECA79ABC
3EE60C00312665A8DF22AACCF0CBD84EFD9EC148AF4245BFE780E23BB321DA56
DBB416890407B39D34B68BB61B00B146D2E8F794C1546CEA6E037D7CD767AE50
843AA610583CC318C66E25ACE786FE7B406E5F1F232517AA77DD3875AF98FB1F
E6FDDB6323E23AA93628A6B5887CA2263BF3F5A696EE86831C603B0AB1442AFF
5FA6C191F7A83C324AF0629A269BC5E6602B15D0B8881E6F37D510D53C60AF3F
6159041212131F18BF75E71B5B6E7022B99AA55C94130C7A4AFC72E016B43A65
AA522E7EF3FC6134D5F715878D99130DE16A3ED40825C75260C7BA8A5A084766
1FEE0F6B8798F96EB458F2E1ECB61B6A2C9887A5D0541AC711EC68B79C2CA3C6
175D4A90F08ACA408540796646E0DAC8220792B3FEB61999671C1DFDFA0919F6
35FC2CB139762BA4D20490AAAB168B00EAE492D1EF564F9D4A077B526322E8A4
4E42451F694443F3C4E2FC9541C8344D3575996B2C50A6E3D62384F9ECC1679B
6514C107D7B3A613F7287269594865E9453E9B6EF227867D9CF9549B3B5E2A6A
F748308BAE99AE06106D90DE65FFC15685F8CF6DED13F50F406270CF873290E9
9A3BD506A8578376F788CFB65E372FC69FE9FD47150A0CC019FB7BF22A3B979B
EC26787BAB2D5F893EE00D41CB48E35CE9C08D0BDC30768CCB856C1CD7DE9E9C
0848692C38D1E3016BF4B4E37EE291081DE21AF12C1240C57540E73362D1F9A0
904081FD330AB6BC5E2CECD68B9981B2BEF1AED8D00A3AE7ED338B9E18F72045
7A4AB35C68C07865063A2AFC57C5F2062F908641625F5C1C0C6A364E3100A357
D10632538A2A0CDB6AD680DC773ACEE840A11C866CC356BFB3FEED65526A133B
8800E5D9734B24E017A2E354045A20128E1705A76CC4A6F6FABD063ACE8A01DC
45383306CED62F67716BDE9F3379CE9878306CD4905832A6D7971824A12374A0
CECCAC565C16B53C7C5E1A202F5363892C77B74A200C9DC2E2179D79AED00A2D
FDA9B22773F34FFE430F51DEC9D81F1FFDCCDD178A0CFDE0E7E46CF99B117B55
B3CA9B1F3952D101D6CE60D1A0A97C99EDB3FADF880821AF7D1CA940090DB589
20B9219284D91DA3BD4A61CB3BFD0D14217EB9F2CB21F0FF6087C7308074735E
E35C87F51AB5DDF2041BCC6827E45A0370F0F2D6FDB8A1FC5066E1BC3F1D7B12
B234F60899F20EFFA823A8ED6489E6A04A0110DE316A16B9A8A6E831396813D3
F551F18C2D70B0FBD115BE7EBCE816AB40D2ECDB17E15F2AD8D3BAD0B94BB1E9
E4397ED46382B7F8A62CF533D4295155716F96B850D6FF61144F6A9E51CC1B8A
86A35082D9ABEB8D2DA4B491536CEF9D1E9F4FD8C0003E6F23293B82B65EE0DC
F0830C02BEA2CAE21DFAAFB537D8D9F0A74B63C9D0A6A9BFAA49F87C4FC0A724
1808AB8A4938BFDD1B8644456D6323286CEB879B3BDB928141D3E5403F1CB5FD
773C8B9DD0042C5E51323CB81A8EDE313FDE90D905B45223A6504CA4D48826FA
E6756223F2FF5B5167ADA7EEF2D2CBFFA77D88827236660260C19CA8BAE9DBBC
7A911F54C201E4F627816CFED662D19C21824CCDB8F71DD18800B7E40E164074
33FC9A216DC7AFCE1C5C7F7EBB14725E4813E05782683C877C7EC4C86D6FD378
06CD3E28E86F10868948EE507B47172D7B52B09828010DB7975266138B7C5168
19F07C1F01EE32CDCE87348E9A967B430996030C42BCB6B3794F51D6F7DBCCB9
A30006C7D60C7E1AA2761AF25BD01C501409DC094980FE3A0D2A24B429285A06
EBEA61BB134055B25332C4F2AFCD776ED2ABDCE78D2BDC07CED874A173236473
98EE737ED7C6090E857AB029E6C75123998FC42D3E0C3F20960FE90B3CC6EFBA
5BE1F043F38C1E3B3CB2173152213DF78D7C0934B29652E763300876BB073367
A61A91B741B3CC4B68E496316C1FCC57968F790C5E7948B72C4AEBA496FEA882
575B6426A82F101D8FEB1CBF633184CB857E6D5AB42F92904B4D0DA750DFF2A8
3A30B03BC1DB36EF6FAC16F69FC8885EAD2CAB2644F1E25DF5F6EF5B5ED1E80B
82B3BB7F5B0B954E7078DE3E31D8AE65F9EA55FD147FA2DB2E8385C7B35F69B7
D06F576D7570D2B23AC1D7040992123A276F3483AB90D7EB79A87E6467D40C46
F878C63E035056CDBBB9F4DB89659D42B100853BCBD4D0A1507680ACA37850B3
0D1BBCDD128AC4835989372017D208167AD025F24591E5C2F51F98C01BF41ACD
72DA94D28866A036F901A464DD4880F9F40FE635F580687D0AFF1DD18800B7E4
0E16407433FC9A216DC7AFCE1C5C71363A6819F959EE20C356B257165197946A
19E5C7BE0C4388BC2EADC60BB6225D9CB6CA887922B117EB0E7F88EC910F8DF3
92FB73AC3324F36921AAB291F94D0DF09A825E5023D34DA177B1DD3787D64255
F26B3D26D7F5BBEA15237FAE74B8D924E48E8EEA7BAB1F7EF9D23EC7BBDB05B7
5831FF3172069E6700B37C86688FAFA81FF6D7051F0068E431EB425FA04DD315
AE10FD3A72CBDDE7E050D961FA70CCF2A9568E3A47FF5923031E7BCAAF39492D
B6B31D984F0072AA303D33D5478995B533818649C64BD8A696A7DC3322D57784
BFA903DC5A829DB662C70E21ADCCADA33D971AD09BB3CD3F0B7CA95D9DFCDDF5
4631182971A143737D515EC7EBDAB4AF1ECBA1C6E90B454E1F911994E4587875
05F98C38ECCABB39F621AF083C05E38A7D50C6FCAADBB9EECA944E5E27C23C75
A187BA522253C08645F0BE1E25404BF8131379A057266481BE460641116F6159
4BDFFEBE4B49A1DE68B5FFB595ACF8ABDF9F1234B69484C237E2D1E2E64C0D48
329329AD3163CF7F52E058415778334C75C7ADDF2B56C066ACE9F77FFE1A9367
96E59409AB7BC232EAB93115FE51069ECDA25AC0244C26ED6EEA47C3FD8D9159
594CBCCB611D701BA76B9E0D0920C9326B499854BCB7C7CBCD9F99899EFA61BE
5406E7BC10B8386B25AB4CF85048789BE20BB070528381C4E322949AE9033744
9F9C55DC86637A15E04FF26BF77D9D52F6CB8D6974DFB548189D085A7DE2E7F2
8F9F4A0FCEE7B11A31731DE6B46EE9D1C3D61DB2A1ACE0D8558D54219531226E
D1669D0FFECB6894E20C2ED721B7E4F39B4E372C87AD9B9979BC0426DA3CC71A
C744AD23F49087E3B4F7B2017CC4DAB7563CDD7BB8510F569A64768B17FECFA7
C2E70A4086F25183DAA9D88551F04446797CD20753F196A12A09781F4BC06848
F7FBF186A7D7DD69E01C7636A79E102F70889BE3FA0347CC98BD7DC49648D46F
2741B3A91D9032F24ED8F7853E8E12667D01A19BD70782CA4698C639FE6EC028
F530815B29EABC88E28B653076CA53A9D73D5FB903C296E7B8D5BBCCFB22495D
38BC8D05DABA5643B0356EBBF5032B6769C2CCBFC37A265AF506B75CB8F49891
4E17C88A93144618AB2A3A44B1EB69C07BCBE3A853130C1166EE98EAF0E5C8F0
9A260BFCE7C040D10575084BC081821FB75A629547382DE885B0C370FB104946
1E4F38E19D26A7438848A9682559E4C206881B58EA640A934223A46C18119F29
11FDA4C818B0A3812B714D9025814369FE71C3906EA51E75FA45E7C0806AC25D
D3073B09D77F9DF706F9E6252A2D88463EA735A8A10E8796D3D03BA155A1DE78
1B0153435F46538BA5C30C185DDB06A284AA5034CA29DEF651F60F496088AFC5
AF7A29C4E365335A08E4F941FEC43D60E0D67A4323F17D9178D32482B903E093
F21C6A672DB4498C0EDAA9F293E7264A221A21C15AE0743D640EA3CBC14D8D08
7E4AB1D89F945EE06A5FC0B48EBD94DDE333E185F4E23E0A66DDD15BDED1FAC3
80B91F8B0A349DB48187EB148AF69215DAF450DAB3F60B618854DF95C0B83559
BFF38F41627BD8FB32E62B80EAC9889188E5F0795FAD09FCE908A5BAC001904C
1FB4D0A3796356F2ED6510E900FFFC8BCC3D355A4F3C7BB8FF0113F63C66BFEC
839D4500138EBAE207115E8947123C8464BFE89C409BCAB867CF2D3F12E53440
5BCCB859F8A683E368B3C6F947205DE82F1F269661A95AC6CA56E7E1B0F3D3DF
94035C5AF7538DE81B5B4A7A4AC5F69B87DF1F833CC350508790F5A5BDD2DDC8
AC150F6BA142E6C2CE640035AE3392E4D5B7DF63406467FC8E6A63DE565844A0
55D086FADD7D7ABF910EE4798D537E8542C599D4E6BEA3CD03915F269B7B231F
5D9B1F61DF7CB03421C5F460457A63DC721E0041BB3DDC3172FEA590380549E1
39F633399946F115492C8F03055C82927FFAFA6E43AB24250CF29962034819F2
B5B36DE73A691A3166DB4D1DECF2B55BC3450F0473D5983C8671BC0EC4F54A9B
7A7F52C6D4400EAECFE4448F77D161F6228107C92BBA3269401FCE3E8DA44750
6ABCC3C649EE21863E4C426DE4581140121831B73F09457859EDAFD61E776823
6FC0A4304940D005FCC57E7C01E510D507ECCC190832266609281D85FCE96D2F
B7F1523133DA1537C79EE63BEACBB06368818F093EEDDF41DEBCB1FC8F4F3B28
8515CE43713570093409BE8321430B4EB6B72238B57AAB07DDEECA4ACA5DDEDF
C21B126F607D31F950B24B2C9042139D5E7DD438696A098E153341BC60653264
E799832A468D399CB9F5A1DDA2FE214955FAA891C7AEC18EF33485035BD4C479
BEE49B0C813CAC93DCFD9043706B83ABFD905E60E745D553D9666700C095207E
57106950D839087BE28F05EECB6F4E6128ACFCBE80D55A54E9B0A6134FD07C07
6DCB32292D2C05B69E55969AE74CD3A31D6E5204F368919512767884B8BD7016
B83FC3997DFEA159A40DE56AB52DD28DECB36B9DC8744E250A9967E7B70BE19A
5A755A8DCB30FF06342E7FA9FE4BEB970EC45F7A56748D8DE39DC304BA7BD6A9
F971DFCC0433D3116D7E782BDE113598D36ADC7DB84DEB6DA73092F21F04F718
009DBA58BF45FC5D20A5428CD87225C7FF28FDCD4FB898A052A0B1A5AFC5FC0D
AA0822F331CCCD4B8DA3F4CBDF92D8C0515AA8330A6BBA324DECB086CB36468E
DC8CCF17E0FD80252E1894C1637653261B1EB6D2DBE47EB9CA9D1CB1644C5290
BA2C884669AE0C0DB079050609754CBBBC246B3F9B0C5A4A032CA6EE62D04B06
0453F94317D02D74E2C69FDED6EC398CC60728D7C950215F7843FD99CB484617
06A5FC2351186925971163B35413DE46EBAEB9EB84D549EC28626CF01C28A17D
DC8EFA3F3BB820A0C21706A33CCB741E91304FA287688FF87FBAA571048E684A
C60B650D0B4FECB6021EE5AE710302645B91B520D3517AA2725F29A668466E60
F4B88FD73A25CD94DDB16460A55F02528ABF0F629B34522F0F346F7624D45ADE
4B0D29AAAF0817C72707E20B57E4BDF333D06E68B517B3EDB6200034954AA910
243AD968B0C259DFE81F3748ADD641A983CA3BCD930955DFBE0DA8B9619E7552
9E6FDBDE53381FB28546087A7B8E3203B60A8DB83571D7575CA478784ACE8B90
A7EE190F692D11BCF43C8BEA64E8CF221B995527DC000AAB577963DFBC17E9D7
D3CD65C234573DAA11A489B87A3C6A208E9CB0B30F7AC7CB103024F8557E154C
7D4931BA0DB8E389011B40CD9E05FA19006C364F19E7E1A053EAF0914A14E141
190BCB8A5F3E321815C33408ED9FE64B5355DE9443C83A69E6585EE03637CC4C
30DF26DFBC6C87525FB73E7A7A981C9CF96AF60C1A17077816E8D6A873D48481
B0B8843277AB75EBD225CFB8599690329703061104BD2BA32806A2DA6A968C9A
5607A019D84A227270D13F0F01BE82A0D7E42CC17EC4297D7C67D824D69A724D
40DB1C38BCAC0A5E098E19FC70CAF6FFBEB70AE878B9FC9B0148CE7EDE034DCC
44740002ADBEA1F7EA19CCCB82D951788245B1B6AFD86D04C4F84FB9CB9BAF82
1700E779C5BCF2FACDEFFEB144E451C6F8DD0ABAB19C9AD3084A04E263241320
66549F95CB77B32D6A4F639D0B81EBED55DFD21DBE1EB344E7ECCD28B98FBB72
1C2095CA98BBB1C23BCF60F05E76FDB386C31B35A7C9DFC6A988954E5BCBAEA4
6819A8980A28067452810D07BA9A666A07A081BD417C9C3A47B945865D42CA06
1ACE401105AAFAB4EB318D56BE2225A82EAE9027257F2186CF716C6853EF8E70
864FB3E45F678E37B79A0D3ABCC1C4DD55BB8D28E4078529DE942340A40AB1CB
BCCDACF0046027231671D48B9126DDAF9B52DB3F3E766420B22AB9AA334587D2
6605AAF7B532647689F1F2136657C025AD24664C9C80E0A24176DF46F0BD3A59
58376B794F2043A295E20E5E07380D6719079991D4BFFD5CFF4016400DC83E5B
C6EA2E4402135498CE167FB5D289C5EBF31AE4BADFF86D5F66FA4727C8709EEC
EDE5688308EB0C4B651E83B1CC69F4FB821CEDEFB4941ACB6488C1A608FA21A2
EDC0D22C7CB909954466C7032C6FD3DE6ADE20EBA3FA90A308731744A6A5FA8A
32C70F2B0FD9F9B61C3966A802421481FEC3A407C19851D98823AC4376B82705
87E8F3721EFE8D5451F815FF783CDE0A5A0B345E8350B8F483C8FC376BEA04A5
D5DE3818E473E0994B2E20DAD9A162A81119AC9CAD4F891DF034AAA2F22EEE5A
AF118E236AF721FFB25B86F15244E8940C2F9BE4BDDA2E4322C0528513D3C406
AFE312988C0368F9F90D9C4536D71DE4847E188ACD9BAB1CE577EE970A2B5E01
3E23CB0654536FBDA05C875CEE544EA7E773049D63C65BD60F8EA4F783BAA1C1
35FB15F340E5A3CFDDA5A71F7E94AF1ED9678AE4A9B1B605CB50300FC5BDF1B2
3B687C952B12E664666255CFF395240FBABEFBCCD544C3C373CE86507AB035C8
35C8A5F08F46CB6CA73DB8BCD3E76A86ACA7D04D9BF97CCC4384A6F778D88027
81AD3E55040605DF7335876F57D22AE2797EFE0990B7BB874D278FD3C9EA1C71
8232391934FA35C825C0FCD9F2CCD28DE9E316B7F259D4D3D6D1F0B06737D3F3
68BFF332A7553709169666AC6207D5DDD9206A3814C7FDB09D1CBB15DDB345E7
54EE14A52E72AD3B8B87225562F446E9C589F045413E6D78388251FFE0BF86DC
B132C9BC7D2FF013C50B05DEF2893D8D4BD1C3ACFA2BC75EB94714890422551F
D146AFBC2F6F95E7917BCE1DFABD5837A3B800C481675D13BBEF95108334977E
7FE842A2159F2B9C8553307CB51B3B89D7A218954721CABDD00A51A9D83D24A7
4DC940404DBD9689044B71F710D0D5A3B77A6480E9774E87CB37FCB36482DF85
E9BB4725630BF0B5CC539DB50C9BA23BECCE71AB67639EBC8E9AE584A9127874
89177D52095D1CA40B9417A1DB1BC9CFD7A726E5853FD3695EDD3DC133F7F5ED
56931FF5F3870023C31C1FD013E64D50CBDE3446BFA1AD2EADACC64E043C813D
A0CE1F3EB375380B34888EFA8DCA131BC4999FC01E54A639DBE68DEC06A17CD6
9552295529C8414B6DCE99A30CA2FCFC6E3FCF04187CA5BDC8EF1246B62339A0
63C5D408C5602C704DD59F00B920D3C62C04AAB48F6BD8C8BD63D84611317EB2
DD950F79DAF6854FECF2736A98EFCBCBB624A9F658FB3F74257F0549BAA570F9
5B97AE0BC57BB243FFF79F79532CB300479063EDF342183754AE0BA15031E8F5
68D86A801BCFE9AF58090CC13DA30697FB05CC8219DCB61CECF668D3B57D6EF1
54E44DD2822D40E023A5486F105DCA9D58467BAFD6F42DEA149D44C84A2FFD5D
742531E4D683FC1DCADA8C9F90CBA770F6B6A655DCB98186E8FE4A400A7141F2
B42864AEA61576CC7CBCCB38C9010AF17A438014B5902A55EE220152C90348CF
5908A3DDEE2A17EBB179163088E634326B24C471AD74BB3B5E0F5956B0333D16
019A6A972910DAAFFEEFAA0C2F8DA10DFA2C35C2588C904D214B34BF4AAF793D
B9E52A9224181FB81A8A756D9FEAB2BE6324E5BECB7546B03B3D7EC38AD610BF
5DD105C8A8E7861C4EC541FE5C14FD2D84ED47FBE4EA1867EFC6BDC20BC853E3
57D674717EBA3E864B416C8D24FC15F45E5961D4C11AD4C569CB28FC896BB4F7
45DC04A3BB886BB2FA71A4716FF440DBCEC6632D1E5CE6827A0ECC31B8BDD499
38EB436641D9980520C3959A0DD9A52F808A67779ABA1385A3D821F31923C592
81BF38FF9C114D75E7B894D5074110BF19A25FB466A4E5FD49AB7955B7A0C977
0887DA7B5A123239565D14BFAB0F671B02BA487CF6B588EBECD26F9BB7E8DE0E
1CC6FE898EB349CDBE1919CC375D1D12A1B06B72A0634B92D7BE2DB024F9A283
E12327A26FFA9F875020231A7DD7D49DBCAF4C6205808A224EE853AD4E54905F
25CBAB6ADA27795EFE5F6E32A89FFBC59649CC759617E7091B62F4EB93729D36
2EF1C610E85FBBFC6151D81BE2207559990C8285E8B30A95FE7E65D68DF89517
96A6472DB31A5042DFA3B1458EA90D68B2B13A5D4A79B827C9387C6A6CE39489
8642FFE0B0330D747E4E19758FF05165ED944BFD62F54A6A98F74CB852D6510B
5AB1B30E1EB6D19973CE26568F78981B480F688646A5C8C563B8FAADA7E8632E
97CA65D1D2BE3644E84A35070D8E8B67E27EF19D1C56F4D928F66027A6667ED5
1E045924E18F072054E228E2E96E73CD01019E64A01054E5E94ABF52DD9B6893
AB76866C8A62B4D0BBBEB154A4D9849A7CE08102B23A56338A6DDE916F06560F
CF1A2F982FC8A95F789A66DFC5E76D39946E99ABD6F2B63BDE0EB1187C1B15AA
F1C5F4392E853E397DC111E36130DCAED0AA9A795BEA6BA811DAE5DB81E86A55
E07B024D8B822CEC255B464915C3F6A6210EDADE29D28FD21894744C824E290A
945A9B6D42FB35256D93962CEBB584381E580898746A3339179D8719D173F4FB
A16DEE1DF371A889E06E4F7ADDACFBA21E75AD0820BB68EDCC2143F284391BBA
9910455E7132C035D9D6B9E25671F9AC599A40C37B2439C06FDD768372B9E6D6
A900BA44046812884F2FEFBBD39715F1250F660510E592C567EF82459E96DAD7
99DAF44C46E6B5C773F55431F902C010DCD2B820343C96F968FAA7B341E9F430
4327B11C6AD9295E00BDAF29369F62CB781FC7007AEBA832EB995E27D36EEE73
86A786E482EC5ADC429A9966FBDE2B55A8B0031DE455BEB83DF8971CCC374F53
D27915C7EE363C4A24562849E8FA141C5A0DD35EF536771909F986707330ECBB
978C088F44633DD9300AF1B1364CA33BD7970142AE10B7C80C03876B0FD46A58
E892A70F6AB8025660CA3EAA7C93B7524614BE7C95360C0FCA450BC8DF6000D7
A571696DFD366D2040E3835532A5C0D4990CC5130EC9F6DE383C674C24816DAE
80ECF90B380D6719079991D4BFFD5CFF4016400DC83E5BC1E290476B28F8B4B9
68EBCABB8ADFBD84B70334512ED5D8981617188042156923BD16CC0CB64264C3
A44FEED146540AB1195D2F25778C99A04E82B1BE8D3870F6E301DD750EE20E59
47347A5E28A769C9594F7E01D63151DD0361C5ABBE84D7A5B8293A52908D4E42
16283297E4F440F55A63CA278DCC38682E1BC6D134930242730DFD12DF1444A3
6FB4C3A6761D48BE17ECA852F8AF6C244132E1D70E8D0E067E2A3D0BE8B2D378
E5E3EAAD4EA0CAABD8068CB65E040980BB5098946A6A5FAD931AADA4A4CCA216
8F4C440B5BAC980CFF66BE9DA2BD1B660010CC6D9DC141D0FBEDCC43893291BD
CEA2DBB162B85E7721EC493EF9ABD46CD3CBEC0C78624CF7BC577F1363169B58
D84E86C8FDAD35CA3EA60BE1E28418837CFC7209F4A2CF47754711D99A68E296
DD3E74E0DF56E079235A8B3A5037847B83AFF2D45661D8895227166F7AC9B7A2
D6B06A3F0056EECB028F93FC3751A9EBD1D97C1B4A3D172D6734601AF5B44B01
6B77A11893EF2C8B92C906A72501683C22C4B0B6ECD515EC314C7493E8924708
EFB767F91294CFF677ECD1AC125C7750588490111E7FDDEC92AD6CA3F581AA67
2B92965E2EBA4725344BD3C039A064EE2846089CFDD51972D8DBD2ABC7D011C6
D2D65F03B4F1F1DD0F04859B03FCEDCC76505876A049DA9D644D2329EEAFFECD
A71F649EB3C250BFF809D81E427E3BF24E80D9CDBC417DBBF9D784583F562C05
37A0625C655CE749B68D1F6B84939432C6F8249D5179A163671F3FDAFDB397F1
A3B7BC194C7854C54411F14FE808D8D515C07A313520C14065D013427D282B07
510C3A6A9597B5C69D8CD05ECF938729214C68FFEFCAC997EC286F30AD0245F3
DA06DA3BD897156E72985C4E6BD2E7C6A96DC29BDE65BC23762CACDEE383614D
564D3EB1A4DD9D4C46B9DBCF6D14EA45078C9A2ED39DF9D18B3ED95BB7437C84
AADB3B011BFA0F2BE6C6C1B18A3183ABAE5355A146D8BD2D46E99E0CBF809328
C5737D7917AABD0AD9A87F485E0A2B2920FD53A6555556089ADAB4DAF9B826BC
53D97B466CFB91B896AB101C8EBFE4A0E12ECC40657518624A1AD89DCF27DB47
1F324B3001608F864FD058E1EBB9EA9AD8B74C4BDA9AE6DB8755B830F8D53490
BFAF28A556C6C664DA53C48FD5DB2CB067251245BCDBCAB05DD4156328D44358
54CF9F5595B56A90380C329B741FD07F83BB9FA249D36116364F6521EB538AE2
8E6235227D5C399114814EF2E70FEB9CB1F837A1BDBDB68D0A2B5ABCBEDC4CE4
6A492EF0633D73C071CEA58830A18AE1C56554EE4DA60AD1BCE8B254341CBCE4
CDE08008E366649A77170E9ABA4C2C3F91912C485C5DAC43C435E2F5527D647C
06A3AC81514A6D62077C6AB55A4741BA2CF596FD49BD16D7FE540BA2788C932D
6C9C5F29AE7C893FD921D33FA8C85EB548911B66840F812555122B46A03394E8
950894460ED9E422045F45A358A7A162679E52850A292A061DF02E595E1EE2ED
F7BD08F2EFD59C7EA11F70FA5E6581393F036B5AE64868FC6AEED9AF95EC8F2A
EEFE4A90F9CB33666F9BC7190004D7FF66A476EF9D5C57F4B14BCFD9A07D507C
A97CE92E3DAEBBE3858C8E8D7E1FD04439DC427A23258B4A00740F47DD5A381E
988069565F780219ABF9D3D0CBFD6FA67EA6CCD740525D51D713CC62D0483F98
589449C6B0FF73A672307B352E141233CD8809296E95B9E2C710DA59618F442E
4009B55F53BBA833AB62C711C5DC5DED743A7ED41E852DC45BCA016BD8169B18
25CD1AF401D01E56B576F52469452A88622F592C90985A958D9250B329ED72DF
FF1413E660A1ABCBB982B64E2527265C047DCB885D6B04DF891FC807DDC7F0A1
D36528C8DF2BD4E05147ADDE9902E5A3C0E5F4F0D969A89D7A3DBC73AF1C90CB
DA109F6CCC9B275F869ABF3D648BB29CD9930C9E18593DD201B93D885973935C
91CBB82A8E339620A52776770935A6A193FA21A3DC25DEE79562EC834127B278
FA649D6626B1BD577E38DE7C917D2C4E973D2E8B7D560376C0E8E99F2A2EE1D6
F12A029BFC1C565F1D434F1B0B6E1EE0AD2510D6B21D5E44574BC5169161520C
5D9CAED67D9869D7CC5684BE0ADB28406B5EC4E875136FFD709A15AB5222CF80
8EEF614A417804C180D36EC0611DB7DFD41217DF50CFB8585136029085FBD58F
87D5145728C12387213B2AA0570A583C2F98E796D65A0A2DEF5563A9EBEC3B5A
1BDE88057173C0341CB6D32E828091F08A979A57E42CB409B958567133644A15
17818CFD111E32142FFB160DB6422A5884151A405A8C3A714E15A869A760D44D
5B355836833BD1FA7CE36A5FA2C70191B24E20E699454570FB31850DAC38AE17
CDEFA244AC1D2C3E28B6F4DAFE97712E8EA0BF223323C0FCFF46A33F0BC00803
6EA3093A4A799D6C4B772D38C920EEB55D6E64436B8BB1659AD76F75EAF78BD0
4489E6F77994E36E7F3CB0F128274D559A0304705FE55B686331A46C2DD760E5
5A38A3438240D2F1D473CDB0D16751C3C0936B813E3BE2A9303C579CA1031E10
26549AD1539B59049EACDB88F80734E7F9CB5739D3DFC864958728154B97F62F
AC2F2E1F29EF28B4A46FAEFFCFBE7A891DFEAF56B913D069E412674347F5269F
25522F64B544A01CEB0E1351CDC979DCC5C686D4C9E96650E4FA7090FC8695A7
EDDD68BBA96359EE849305A05FB99890D4C30C766A7F1428C5CC1E86F6821160
698242C7566FBFFE82F18BABC1AE4CB0FD382E26BE0A83169B6C371950D13D00
2DFAEFD098374854AA3AA151BD54DECE76FAEDD517C990E170EFFC12D2D1F235
6F8A3D634E5AA9137DBB7AEF4BB288C0DD7AEC8D6A3452F221D0151ADB4DC2C2
86068B8FFB0F430342E9A29FFF81E59CF308A0BA859E05E589F1A1AF4513558F
46BC41E42F1E3120A19768AB34A6E242E67E22527BD17C13D14367D478A2DDA7
33AB75B7FC8FBFF9AACE0299E84F822C50194C21EE91693882E6155EBDF9AB2A
053F432A3149B7BA168CA488A7CB151B4477E4B446651688FE1B8EB87FF39E7D
3F4A4F8218AA2765CED0D79F987D963CC392365BB3DDF7350A281C54ECF5CDC5
C944756DF6511AE5914212BA387D89E4E81DA81F088C9AE16443C5E70BC18F02
9243D6F681B0D36E17105A2469DC27876F4035544028390706CF1ADD17C22CAC
231126A1CCB9E7F56C30AC8709634561B22AF7357BAD6CC06279077389A26E7E
F7030CB43C182222FFB76E44EB0771512E7D7086371BE3A8E4186D7E9615BC5A
7B80FE1C82074518D7466BB2B91FDE11773B643152B81A11D9B9DF27ED6A8E4E
5C370542ED6B9BD96F75D78516FA5F8498FD5AFC79B778CC40F4F63FA2845A50
6392E9E9A23D08ADA7F66A3DC74D6126B8BC8E30EC6AC4D0FCEDB32E261F8BAE
46654CF523D136CCE8B52E8E4A3D01480A897882971D1E412CF0D484F1010276
900707EF2EF67B28A1DD29D10C7BEEDAE714ACF1277D793AD9B989CC650B5F64
E2C61EBD43DACB4DB6017F17589F9BB28BB131F06294B45300705B786BC0D065
3933C6556BECCDD8F6C7C11A67ABEBED27BAC915531365E910E11B33C0844CC2
D620523FE20328A0C23830544D48FD3C0FC46C33B4AA716C348026B4E7844945
17023CE9CEAEB35CEABF5BE3A36153EA88A797296F2FE302F23663D9FE6BCD22
E3E4A8E70082F0C085AF03D89E764E46770E86DEA3DC9FADFEF45E209717A157
AB0CF1881601EF240D6085B5393B876ECEC4101176BE636CB678AE18A2C6DF46
418FE27AE87A1879F88AA4117D8064EDF35EE627AAF5B56DC959DE82E9467C98
255B361BFB67AF9124F31E9C641178AFDAADDBCB87A95E0EB45F47522BD93ADD
42F5E79B9BD4C929C8A03801A388315DE6EEBCAC80D5B3B291460381531F9216
A04022FDD663FDD73F1821CE0D732B7721C7A3A8D01276AE06E8767ACBAA92E1
751C9C9CBA42428460AC283786C0E4C0F45DA2C8C78EE354165E062324D586C9
37020B6F50C8F9DEA93F60D8B877B75C7E9CCA690FA83F7A9EB23119348D2C82
A64066B4469B2DADA3728C9E3E0893C478B3F7443D9A332101D295A653A20995
24F362A188688DEF40BB855F6102028DE2A526D1C9DD766FD65D3A9CD4503AF4
114D06702D251C527601F30C7FF2B337B41232EC7CC4F97EA37953546FCDDD70
C8C4850AE8DAF010FAC2791F4AEC2207446EBDA08BE86A783BD5E0935B9AE0C2
0F25A9379E3924A31F5A247E6AA58C7B3A65D90C4598DE6DF2AA81DF1E7D618C
DBAA54FF0F25A13DAD43232F7EE4D840B4362173AD662DB496C9CCDDD789D38C
643B17E3100DD9DE9BB3C245407BA6F533D3AE96EF148ECA646A8C3CC88384C7
E37093BA19E9B52F29C4A4A908677E909606528BCB288C376F87D1A473A40A3E
DF8B197CD2F3699339E66CA6486BB128B1333C3AC8C616D3E3A0163ABA54C7A5
1A0A7C06EC344D217432E9C76E6B590845648531D696EE45113310944053DAAB
56B1075A0C3832220752D104FA133861C68EEA00EDB0DAB677F5EA9680FBE092
70164155B01C2D46B6AF48AAE86AF2661052C122137838B8BA1AA3BAB963CE62
F33F0C59263FA14E1C9A0A271B585DF2178075BB691459DCCCC211E44D10C0CE
6B2EEAA9BD1FB41B1D9FCEFBFD625B7348402BEE59368220EB2EC57EA7CE8839
DA1968122EEA8D652BE7479621A99C4CA4FCFCD593295A9BA1323DDE0BDB1208
6DD12861DAE169C21E41B36912CF67F8CBDFC44617CAEAD49134E8205BC67547
E1917DA885DD96133A5CE1A290DBBFD88AF285A5D8869338F8D6BEC3B63C5E99
99C06B34A79E0D131D2338736825CB278DBE285E67328F96BE577CC30B6CE0F0
6334601AF5B44B016B77A11893EF2C8B92C906A72500BEFE346BB0E37BB222FB
8F4E5FEF51F9240CEEE5D95DE814D51FD579661F3E2FAA54D811386573C91A06
7180070A344D0D7D2BF30C27280DB9C511A8D4988D2E2EDE1DC5AF60F4FC930D
D4035B6261BC005B37CB7FBD7D9E26D03F7885B8BA6067D1F1F3991E5CC800F5
76E5B5CD68413D22F075BC085C5EE3C4DE3A67C119D31A41EEC452E56D58EBA8
97F21FF69D3C7EAA31D96A339927313ED5711E32991CD6749D1A4743D28200BF
CFD221DCB9C2BAADE6D39151BF63E1DA974D025D27495A9EA0959EF652A0A6AA
E8DAF2181E4B9536FBDA2A79357702F2456B23322DFC10B8D12FFEB765E13449
1771614E91B8167212FB2D1F27F55E67DB8A021F37873F01C1B94DAED0347805
F77FC6B9FA59933EB42976891604A7FE7F45300282249B72EC6B430828F906E8
DB9E437FC8A374E2E2A206FF4F75362111E463091E2AE2CAD1D430527CB28CE9
7C9CAFAC45E9CB3A9D5F4D96CDA006C6C5970FEDD06CA3E4D0D6CC2B10AA20B1
058B8F343B361B63274F6F1F8FE4C0B17E8DAF300174CF1F94F92BA2C5CB3325
B741674905EA1822DC9BDDA3C1E4E3DE7740AC86555C8854EEA8B2DAA366873C
C16BC6FEA4F4374C3A173AC5FE0D3DCE5EABB5B0135ED388EECC78C2B35BCA1F
F7E30FF3CDA6789A50609824588E505F6A89ACA2C20F6C082B005BDEB67A0F5C
70BCD554C23A55968EBA1D4B6247EEAB29B2195F29379C4B88C50DF01F591763
F16FE1D5004B948E27E1F2FA81FE54BE6C57EF8C2B2E460F0863137F71365B8F
31103159F65D30A7A318C1056BF638C9EC8197FCF8347448BE6E53709C51019E
B4FED063631C64385FA1F1AEE941D71BD74833CB42F7971264162BCDDF6BE40B
6E071D6710FD81A5C59D0F9224DA14A90F10FB8BF9E3CB3801A1338E70052F86
3C4AC914313AB457FD1A8828BB42507B524B622F10AC8781B19CE8AA275F887A
61527E128134359B08B66C67B72578917BAD888D463C083E74BF38D750469D21
BA79F4E3F2F5A8CFDB0D7ECA187895DF24CF7A7678272330F105A8BA54994521
5DE7851846C1782A8AA423DB82081866ED14DC5D32BB99D9CC1A4449060046BB
92467157BCC8A4B98B0078C8184DB9C788F9A2ED85682E2AD4A82CF17C026CA7
87293E61125D7B963E45C3DAD405EB8E538FC894CB0198C9AD193F94381CC6B2
A33C20BF4C061D7029C0F8C58566D6FD1DED9D5E46248C0492A232441928AFE6
C02A531DB33EE368F0F8794D668726402CDA46546996D58107C54259B102F429
1EF5013728391BA228211C06AA1096232D7603A06ADE5620DE8ADD8530F6EB1D
D8265712717E4F7691688FDB895F43247D66D8891E5DEC2B7C87192EFDA892E8
AC1E9C0C440D4A2C4E81DBEE2C34418B805EF51C5C3F8184C69BD7710104D3FB
7D11D7DA737251FB47D0B21212E70BC7ECE6AE3EA9660E33D4589CA81BCAECCB
6531BBADEAF1689E6A6A1DB9213C2142AEEA0B692ACA1E819ABF89CCF85724EA
4468506521BD15E02CB2F4E5B602F55214D78ACC2A1CC2C5D6ADB354B0D2F8C6
C5D809F919A8D37D60D38CD0DB6335FC4A6B27E683A4B83116D297C7638E2370
1EC88E6252EE0010BC0D07FBAE852C0E40A4599391A53326E328A8F446C41510
A842D5DFFA8223B033886B72FED0B13267168AE0533F2B554DE764FFA72EFDE9
79C5C6E2C88FA9336082C86E84310DF2E15C2A8EF5D13562536CD04016863340
8F8A2EBB7E183462F00AB95AE025B66055E56D4A8FB3ECB4BE8FB8D21D943D33
2FE3EFECBB553C90B4F7FB949DD094EFC754BFFC1C0AB45641C40DA56736E66D
332AE7AE9677BBF810EBCC6809D75376D595F18A4289312E74FA9C289A53647E
B6D777900E69E5C9D6102F1D3AE812694F637A69A84A663208CA176AA5E7CF17
4EB3D74860697B255C72846F1570C4971C89B0F5BF07644BE345E1981F763976
C372CCEA27CE9DE28F01D75A8C615C4369745102A403BB2A06B29470BCAE7B17
92D37DC62BA4E4624D7930771367EE05DB6CDB8BA616F9AFD42DE42E1E308C54
A8F901E183F5C809062371456A4FDA919406EE9395EC4F768148C131B26525D1
73F07ADFE2C2AAF32AA214EB7E10FE9F30998217113414AF854A8EC0F2711373
51A53EA9F973E3F4E5F1A14EBF827DCA38CBF9A44C723387F94D688139DBF47C
7AD4138EBABF491A61ADF4806718D5E9C4588AA1B9BECEB18D785FF63B4FC19A
C48284778489D1F02B5F76FE3295DADA1A1B81C7FBDDC7AEAF37B854E2350677
895DC6E31E6A6A9AE7E377278A307E09372BF2B9729D821A95E113828FC83BAA
C642E71A44A86C70DE2A317DF81F62E9625582A50F194BF2331E74B50CF4AFE5
BDA993616660D1BC6A8E77C180BB57546BE5DB6D9AA6689BBE293616A6176B8B
D6BC6579118D500FEDFE39D0B1B9645A3C1F584C7BDA1A1CF019F969B3C8AE6C
4C9F01745475B1E3429B7F0736227E92113F419DE6086844117D223CC2C4B14C
8E3E833E87535CCA4C86BBBA1075607335EA30C933E3EEDAD46AAD79527081B1
88D172A23805D386A7BB172CB1A15504C1CE07D6E69C695C361239FCA77B7F43
646B0EFC7735157E5DA71AD1478B3C8917FF96EBA48DA01AB6A5B0281277C4C0
BE9B3A725BEA035A713FF09CC2102F0346E649CF82AF4B575E2E2CB0C03D63D8
8A3519FF3EAC194810CB34B805BBFDB0F010CB7C057C2D55F38347EED6B47F99
98114BF92E9A4D8796FB9DBBA8CDF19ACF47D4BD7A06D8EC0F00E69984EC55E0
B487FDEBB3F6CF0CD4284550397AE68035EF3FC6CB42AEE39CA3E37AC28ED89A
B8A2F81D9A9D3BAA712A0A56D9636B62813FDC562AEB53ADE69B38794E048CE0
C6DC07949849C1EA95B6967EA0E4C588F40F4683C2295FC0C58D564A2A4D73CD
6314FCC53BE27CEEE5696F68966ACAA484F977367084AE75813B0EED37BBC077
BA859B9D7D602DBC212D02557B3F0031BCD6269FCB4EECF3171B30132CB709EE
4BCEF12912B16B203007F4E5A56534D8FF497D5482498B9EE6B962B946D56AF4
DB0E0BFA4FDFD2600F36C668F64811B97E5F975D12379864A4CC14D3103C4994
E6CF8522C78D33BACD0F4D7464425A147210602FC06FF2DC12FB0603D91737AA
D98092CA8D7DA7CD664AEB24C96DA6F25456B353EA0D2FCB03FD86FD6A1A1A68
C4191BBBC786B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA4571142BCDBE88F
CF29C984876BEFF75AFC65947B449F21D19D62C4DDC5ACE95A878698528C4C0E
32E2C73CB8F9E15AAFC7ECC4FF008A8123FAD0B30DFAF717211AC59F1963A8BB
2B0EB98CD8674AB5A33FB9835B0D1EB4B6F2C54A5911464BA2D6CD239CAA9B28
146CC516ACD809E279DBE84ACC429FD2D2BFB9BB504FCC2F01B128F18E12C16C
9F4E6447311C442A2473C244D3EA9800F9797A4C0E2E1F05A2B5F750ED1A437D
F6480BC21F9903195EAA23F90BF5310D575C438B2DFDD132D6121E7EF980861A
F4713295FCED7EAB37F39214430BFDE103834356A6751DE1E90BDE98DA5E4D2B
C78ED4EBA41C83C1D5DA810EDD40D38A9C18114D2952D05A84180BD1D23E7D47
43E43E4BAC98660F929FB67086BBF02A521D080237AAB4A0C1BC9FEEB1A483ED
40E46D101D182AA65AD1F663FB2926067DEE9D4CBEE4DC23636D83F81ECC28DB
55A59A2B2679924147AFBE2E6D1929EBECD716C6D7EE18FABC7027429FB381D7
1265DBE5375B06FFCD490B11631704A7CA389AEB8BA48A087BEA2DFF55CF5E3D
E25AC0B17B4D60031CDF7D441B7AE1D7BE2A34836ADD027CDF5266E183F3D9FF
DC44787F71D921C758A6201DC0CCA60576BB9BC979863C9E50D108A802E91C54
59F5CEFCBA7605BCB16E646A00758DF5D608B586C124751DB340CCEC2DD976F1
B6F48BA251E00806A73D03794DE47B279943CFAE793902ADAE6AFBD7842578CC
7D5D745F0DE62C03875A18C75E4AF324E6C818F612F8B4655058AF93C2AE5D98
0275452231F3AEE8D8B385478A32B869B09A8D987C120A69BFBE62E25684F1E5
22390200D36B63F0F10EC6B434B75C6EC92936C33D0C4E94489A5F4C7D9CB318
EE2C99E44F21A90B2984906ECFDE87C5BB61C6C9FD252A399BCE9D804C05019B
3A82879EDB943E49C2269703794D9B4F01FB87292A9B91A4B23807EB0C84FAFA
0C6783C7D6C6DA409998114BF92E9A4D8796FB9DBBA8CDF19AC8EA0A7B58F0B3
A71010CE8BC3CBC4698763770EDBD23D62BD66F51E58627D5E2622D22B75FE01
501A8E798578A65B6B41E04B3165928EC47EA505C0871967BD9419B48FFDD7E1
71D89B69CE420CBB74084CECC414A478029657AE19C8899439214264336A4E41
B544678A9B463B4F793EB332EE6B6EEAEFBB67BCA5DFC7BC2E11AA696B356EC9
6CFFA5BC0890A3FB0719A6950C452FDADCA2264F95EB567660970F66F2061328
F85AFC287E9C2421C6A45C9FE3110CEABF5CE69F5813A5220097640011752EEB
07EC363B043E86C3F7B277F2894A51774BE9A86616EC12A6CC773050239A5EA4
35E3D5AA43E658F649DEACF2340AC9F84BEF608604B0A8621EEADB2460C5BC05
4D33ECA9D9CEC8C45B66DEE9133D7AD1A9D40C851E4D571A9AF36C9CB1B755EC
5E1B8A0254490EB1AE1279F582D83C00CC70AD584FAD5B5B1A5DCE841235DCAE
82C54143E0CC8589D0D52DD944C86245BD9D75B49EE17C674DFC3B7A2AE0633C
33C8E4823681C0A61ED898C57100620550E428EDD5367CC0D134374CC5FBCC1D
DEA0E7B467F989D5796D0CFE51760C4C5E1684D5EAB3437D479FC455A726AF1C
3E2C76D4ADB2D5A08ADC1D399DA667468786C6DC3EF7CB0CD6D034A76D32DC84
4CE009C6EBBF9C93721D983A2C03A2967EC7E8754C5AE41D324FDA33265AA659
45FE6953D18AD1C2573314AF568A69608A9B382BBC5E20BA23B66124203536CB
04FCAA433B9C6D4683C28FF4E6A68654E1695F8958AE4D69E5076CE4300137BC
E2E3CA7B2CEFD8BC432268AC2DADC295EC4D1154426B3388FB6FA8D8AF2C8CD5
272AAF5C45A924199B057DADB8EF2B12BD1301F1248952EE375832C57F9ECCF6
D8C60B4F9FB6F7B0164FAF03ACCD9DA7833A213F9F08DFC6D92580AFCD60F295
51F39AFE3FFAD1623684285DDA8286F9EE5F20C2557425963BA635204E89F80C
AB3A5533679C4D9B67975E893E12F61E935E00406AC83E492592AF5A713ED286
1F781AF45D55D2D83387E9874EA766898D1ED0303CC174E858BEEC37DBBE1180
DABBEEB1741600202AFC7128C270B7D38E51CC303F5861CCDA6E28C6B65BAD8F
F6D402754F0A59F7B466741F359B651D485C4CF0AB9F24EBA197C783B2B6DAD6
D6D9CD9C8E87EEFC161601E0BA8BF96F5B965079BFB307BF0331BB6CA78559BC
F7D42C6FFAF8AA0B6CD15D4CA8C3B522944E2DFD3C5A21CB29F03CA5FFAD3937
7CA1DE2D3AC84FE96501231AD39204AC35CA6C6957C87931BC96DE8BEA1505CC
664ACD4E770540F478500F9A415B5CBFF6108842C02404E60F407C2D4DA38EA4
32F0E7A6D8221F23B7C33CFB21100D8F94874DD922AAC1936BEC68BEE119F677
563522CB91AA2F7760754D8ECEA334EE267256720D6CE4B55BC974E8F4E4BDF7
4C53268E1A7ECA73776BA42DACC0C8E3744D529624024E35566FF0EF71D60ABD
9581F439C66D85191FDFE85AEDEDB77D9E723ACF7CED4649DCD46AD9CC4B007E
C9B5F8E0E2CDDCEE93246DC5D6C0E5F8272DF032CA0DEABE21398FDA5FBD5500
DCA48E4802CDEBA6C7776E54A682039510EA5F62BDA21D0F909C5A804CA52C13
3DE3866CB703A5B760715238B61A4A3DA508F20126F1D3861E1D799628816A87
6C6FBAAAF8270E05F06294308DC00DE7254DC9D6511D316FDFE7C4E523A576E3
2500AB25E770BCFC5B8326FD06BD8F3BD37EA60C1D9FB329E4D0744DC2F3EF68
DE59428D533DB0EDA6479909D9C7BBA90E20CA49FD3906B7D32C787DE06908B4
66ABA1AC5DC311A762B8B785369B724520AC4D6A00898401333A5F16A4F99BA2
C4BB3D31412356B9E978BADDD525717444C8E2C33EA2B27F17185FF2C992D480
DE37A9E4438464845B950140ADD971D94571113689C17519F66EA0F72CD410E0
959D3CADDF1CC54C45BA2FEE00D570CB86EDF3B85D6028CFB8B7C3087738C879
87C4699C48FB940714204D06B4D6749FC4B0B5C900A42D124B68DA1517828F1F
96EE07F8B09D8C19FD0B88366F92ADDFBB99E88A7A33FC9FFE0ADABDB61315E9
068C032EA11C9B3AE8D749527468A9A8F373D160DD28034D6CB67336A3686D96
70FFD34A14D9AE40C155E53CA7CC6FD6300B4DEB23358E192532476CD8EA1F5A
F507CB853A32E8C7903E1785444BA37F8C8FDC0BA91F0E9CD7FCA2DFA599808D
F4356FE435A2B184752DACE1A3E8298420C5F301A5BD4A9046A350839CC7A06F
95CC4A98B9DE4976D3C4FC56749B1FE01EA77F8B138F5317730A33951FBC2E5D
E3316C54D73D83655895D321F9F0E05BCCD09705920251B7A1A42667DCED2DA7
546D2A60525DC13209A1520E17E5A4CE375DF221D42B25F5A9CA888CDE224CB1
128B227FFBD51E0BFF44D56F0B5A0AB3CD1F01A0271DA668DDC1BB9EFDD4B00E
D3667B5FDC6BE303A38053780085C6A216F3A921AD5E6545C414346FBDCCF69F
29187B30E11538BCAC0A5E098E19FC70CAF6FFBEB70AE878B9F903E0F5413B11
FC9A0751C9864D727013B6AF798D3CD26FB3DE0130EDD2873049D87288A8DDC2
D7BD0DDCE249155AF6F56CFB6FDA12DD94D5837F8101D3D65F56FC702DCD8E79
38A0A43221BD62CB3E9919166E4C5685DB27451F994D643758B7B210BC4E6CD5
B400D9440DB8DC2FDC965DC51B3345749C0F3396B9CCEC6870E828171F7DDF65
3C9C5F76C2F9071A4BF4FFF2AFD7A0B06B3F26FD89945E6C7EAC6B9A8134C4E8
F4969C9268F7A2C3061A07C11A9075D0F61488AD74097708FFE5192452360028
9A96650AD3AD3FB83EEDA6DD6D62A8602A9793082245FADF7E1B7B1B1505B3F1
266FB8568E4BFF0410C077520E504436F43A7A7DCB3BCDE6CEE24D8172145EF7
B107D0F8DF5C7834138A16E9F85EC9127530F18DF16ACA8ED5BA104C1D3FA29B
837D378BCF35DB43628938193BAF4910B6D200AE32705CFBF7A12EC415F3FD1B
6DCFE6A3BD02B9D471D1594AC915B4676F69BDBD0776126ECE134BD6C8438C13
AAF1AD1906A8487D16E5957857BBF82029ADE7C9E61D62CE0FCACB72E14C2FDB
87A97F47425E23567AAE309D82D571ABF7BDD1BC595416627023EC782183D92E
D19F7BD84557E026910BE2318501A0DE4CB31841E7D7605EA8D14866487822BF
0869D8D1E67389FDC1874319631E4C662C9C68868890B42D97FCFF4C7218D7C2
DB81480315A1E63B66E9630C4F79285A97778C30C707F241997679C770C20768
A0635F4313CFE967ED908314B0457C276C5B7F7D603DD37541E34755273110F4
6B69FF8D6977A044C17F5553C13218A901BF8EBAABAF6AC17FC4CA57242CDB49
2A7ABD387B8D294FCC2FFA61BCB07DA35CCDDAB44EBBC0C3C24A20DCC87145B9
C3C3C5CE0F22D4B5DEC2A17886B60236E277C79BF6BCBA6948FFE6410BC7E74F
3FE437C78F9C8BD258D1C694069BBD9DD80466FEF5099993B5687CE46F97F06F
469C78589FDB9EC33A8371EC60CA1EC350F26EECFC2FD37984B6B44AD59BE051
C0B91D4BB0CA143702D04DE8A06DD65D6909629F782FF974AFFC81043DE28C52
BB7B201D053025A68118D8FAC8B22B497F54DCC1A076DB74BE5191EEEF657F57
B67B7A30F1999894F850C29D62A325714D3FE8C3DC019CC01E8738CCA25CFDEF
8531A574C42BA2F296A2166926C9D207751DE0BACB91481C9AC73B31E33AE09B
FF84B081C3F860632FD990E28645E1F5AC047A8204F464CF29A60BA4DEAE3FF9
3A4D1F96D34D66C2FED66CF844B490B537561865299BBB137C8DAEBC28D7DE5C
B57A30F23A2859902409CD4A8043973D2E8B7D560376C0E8E99F2A2EE1D6F12A
029869EA119BABF0145D6824F051CD6391BC93472F780F0FD690019ADC427250
32D284011B7B7F6505A11E4649F196300E5B4B5B858609A41C02D3637C5EFA48
85FC8B186C4B02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BAA17A86D89B13
B8AA5F1D41FA62396D75D56EFA3BE867E8647F8F56BE5DD221F4E05D8C864F9D
D3E99FF860333A651F75F9A9415D03C8D92BA72C28C2C148FF488439DDA656BC
9177F6308978F8DC7055F1F2F1307DF865ECF24BA4B6470AF1DF4F4EBE911581
EA3BE89E4CDAA34D54CE1FF909D5319865070DD71843404E5407A01A2ABAF017
D1156AC74542B942B0A4F70B64F7A89EB8D38656302BAE3AD612DAD9059A3D7F
3BD63827E28F17D57CE9A480E85AEADA1D290708A8224C649D3021CBAB14E580
AC3B293409C469920A5E60BE73C36611705DF0DE767C4AB840C2A15E2F739D73
D4931E3263E89A0CC83FB6A1F8D1ECD982ED8D24ADD7FF8D9918C339A8E8B413
83620BC9C397DB862F93B03A24C94154047FD52B983F0B0DCD99570C9ACB9712
FBFA2E51650EEB6C028CCB54907F2ED4CB1E9D66C8A43EAEB35FA5C74AAE3A3C
F4BF3E3E7E1F8D696AD055A5370AB3C99088BA3E5E9954C28F54CEDFC72A1414
223E4341BFDD5DED06932D5C8B83FF8F16ED7860E2A820C1B83FAEE7B897F107
662E8467FAC8D9E2AA0F9065CED7662FC9CF4D1A5F32B6E6F0DB26D2A2BEF333
83A77732B523A27F53933C6B62D8AA75F2D6D1DAEE7C7685DEDB9FCA3CB6695C
4BE1E0F6F82FDAAC5F5F221014EAB1BDD9326D7F4D9C73B08A835F9753F33639
20AE7C77DA541CCF203D557ED2F6F284CB1F217112AEB98781C9D355908DC0BD
CB286BC5CE7E8D2B9C605FE94300EACCF4A61657DF944E96B000709F316CFEBC
879A3A7321FADA299277D8D09E8CEE82386557B84A6A600029D5FACE40BDF7F9
B0714AB9E6E655AFEF29CF0FE98236360548F75D58871FEE5164282E9A50329F
95AF6B99D5EDBE2499BF00ECB6C5C0F3CB6F2433F110E4F9B83AB19D7A795E2B
E005DB42E46653449EE97E8C08EBD10B9AF08E23DA4E74DFCE510F5077EF740D
3BFE9BC64B5221A4CB065B2CE1ECB841AA4263EC9EC6D0D4DB32EB0138177F7B
AA9F7B6D47FD3DC952FE149187D70D807A5117A9461C92DE71A8B3E97803700E
50900127A3A593F8E07F69906E7ECCCA4B02E89E47DE705EF4BF9A5B51F33D50
5FE3ED168109F1F39AC5C3357E48C1CA6EA99274341D829D2AB7082693239C34
68B177C20D60A32DBA8D37A86E9E871087CDC163F7596178F69D9EF23C3B4D94
38C2D541657DC358F6305450C4A820C87A8974295E1CF51BAD0124C1C996F035
78FF6E93F270CF66D36ED4A688023BF4933D7B415FCEC04738328542C611DE75
AE81DD5C91B731F89E0191BF23AECED19F8E9BF572D42C495F3A0157E54C5133
C1136DE2492BC07C053F6320E3BD7EF1CBA472270B4D082A1E33222F1F99ADBB
D256CA233093AAFA54FFA50A3C775B46790D67CC07F48212F6E3F6C4130F2D0C
B03E49B49CC85A767AD06862AA254D7DC8EF0FD5AF6AFFE3075776440B9864E7
4CAF39C9C760818BB03F7FD90598C38B1C2E0C9A9A82F9232C73FF500114962E
610D7BE1ECB505FC2988F00259AF8D58418AEC18D647A6DA9DBCF5A10C5007AD
BE32EFC2A13942A9F9A0D2322C8B3CBFDFDDEFB7386767ED5DA7915B8E690B5D
E0D85B3640F18B169B121155CC018DAE6CC41A8F2B8CA0CF190BB8B893C1C1CF
3FBFF392E6C6C89D179FEC22D258A9F7CF063183A0278A8DE53E74BD0D2E0BC8
7ED892F1A55E037E8FF8922F465FBC904BDAF7E0CEF719C42900593C3BAAB7D3
297DA8D308926E4D087D73BCAAFC7EA12E655385B81A955C3C74165F4B84967B
12C71E4EC25CF58ECF5D10813F8E9806EB6A0E096940A1B6C425B64C9349133C
D4BCE83FBF92FCC32B212DD9568D55A983BB46DFD9578EB2A654E16FF1EB04BB
78E7BBBCE6DF35CDA9C10DA2FE76DB1BB4C7EB42ED1B9C21DD900A5477D9741B
D918C74D13C349F4119A78E7BD66A4B803B7B4ED054CD81E02C40475CC3DAD99
B56FB281D67E3B28B421338F959AEF7D3E933A0348625F83351D10405C55F6EF
17EE4D84198A9E10E1101F4A219F8496FFF2FE5D5DD1C32DFC80408D750304E9
F61FECD853133786151FD06B447323A98E0481DB2B803F605B943A7BC0C63098
35F84EFD13BBB1D2AE8399154B7B188C1D859D45F35E20C5554B0D72C262A23C
CB48B8FDAF70CABD8E491D8F710C5F31260C5AD761E6DF3CF6C5794ADF4FBCF1
0F61C9BC429B5EEE3FAB3E8E696897C1A4490D2E6AA28DCBF3BAE8C7A5ADEB1C
EBA885B22128F3711E158D13F55A2A587261AF1A2D7EB2E0DE91EFFAF90514F8
8E8FD48F0B675F296A83AC1938FCE2DF92310458AE284B31CCA193CCEF339CE7
D928D72A21FC910665A42A4BA653D5C26C224A560EE958725486FC89936EC4F4
8B1949C72088EED64E45DD9874A61523D2319F9165C96C0CF9FBE043EF7C2EE7
F2A4AA9EF432736C2BC0D10841C2E785C0851356A4FE39BFC1390EBAD6D89FA9
9902434ACE821D263606A374B64A01E25C9C7B71DE23A1C89F08E56C96371257
25BF8CAC5473F8755B70B9E95FE2218C80C58E34DF3EA0718B7C8E2D6511B059
0247408E4461C90BEC03F13845FC82DE3734C39568116452197AF36B569E7801
A099CD6A94C3DE4F5B6DCF51605262E70EC9BEF8C45604CC4171815E8878B452
2D1AEE292065136707039C588A95C0C8510EB01BFA8A4E91E62121E11E0B609B
B3D21CEECF486BA43E34A5C0EA6B9BF62E20882EF75DFA6087FAAA5B09E5BA7E
1CEE806F38CE41AC3D7C91C5B6FAD0ACD57FCD6010484C672938065118F3D78D
DF1F0DA1371D12B4FDE6651D79B015F0C8D4F478D0077233837A7A22676E0768
2E6D37BD8C1FD5FDD671EFB8A0E66298B7DD49C46AAB6FB9C7C500DCF3C8DAE7
69D18B44557A542545D832CB512420281D2AE2DCAC7BBD600989C6DA0194D352
6B2F54E742F543DF0E15D03A2ACB50DA5B48B724160F941F239A99781EBC4021
9E40D9203F45951EE163AFC9B85983A7CDA6B7211BCDB9E4BC72321192F39013
3F097FF5826343DD4F07AAF3125B7DACEB2EEA9497425941EC3A6CE69B838CFE
02F4FA49D2808A9DAF2E60188B3EAC9D60B184E973255132DE99F3F4B79ED648
5FB759AAA805F2C0D798E91B4D4A924F5C87DADFE41154D39DDD40E12910A82E
6FE5213352797C503032D8FC6A066BD04BDAC37897F1AD08AE6669BF1BA7184F
B7392ABDFD1B21C3CE128FFE449E6A0B636EB65530D9C559242B8B03760FBDA2
9AE79906BC2752911B183955048D8089A9F3A692F65B9A47C70B892169029079
A6318CA6EC72577E465369CB894FC346C9590BCF31E3CBE928229969850D4783
0F66C880A349022E33B86DC6D7BF06825DA9C4D8C4AA23243D892FCEDB971618
A97054E2F5D10E847A2A353F4E0BE76738A81DAF4147F4AA0BDD994903452A53
A7BB77CD8365648BE0804EBEE7EA126705BF65B6AA71DE7A693D370794546B25
B41CDB2682E42BA9B7F729AF3AE5182FC0A446A7FD4F436C59C5596795AE59FD
B1F57D61A9062C30C9960B9404F1DD6D4EC58E617C4B33A4AAA4953DB14117E9
E09BE98DA43549ADB5019438D871AF658676C6BFD2BD2DA321E1F15F4FD0D79F
1F0EB524E820BA024A4C18C3A908B7BEBBE9515013EB0725C9351502A2F87E00
D7085570EED05EFD6F9CD53690FF87555EE22C55D4871E6F09BD794459FA2ED0
46579F38D6B8F9AF60789E352167D0032D99
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245AC583FE784CD69B918457FC63ACB5FA24E41
CAE39AA9386736476F5C0BD3D01ACFCABB35BD346B884B97EB5F467C93A2FC7F
82A0B3682C1D7B0CAE0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7CC4EFE6
1F9F8E88832737186037F9E5AB161B8A2090F5569529861FAEFDC91E823E0A0E
A92E7F1118BCF413BD355CD844D0F88C47B267EAFA1585B4ABAAAB9BF885D233
DE4656E4CCC1AC1A5762BE48F5FA88A0020AF17A438014B5902A55EE220152C9
0348CF590A07761415D2F53A866C95D4A6848E2BB7970D176670F90765843635
9C2461BEA57F9CC512BDC51EF25496B2C2253AE85AB38889B26761BA509C7F63
8C6CBC4BBDEA74FD3B43A178C86F9A97423815F5FA2C09BA590B8371D5B7758A
43F98F4DC4792308CDFE2779CA6F20ACEF23FD8FC11F483C0CDAFE837D984A76
1286C4DC5088F5DC4B8D59F781ED48736CDB2D0B9B51340F6218CDD622544552
9BAB6B88481D111091C2CAE5E19903BE5F2C90E79E2469EFE314329B4653D49A
0C4443075770A91A1C8F4179E4167E37B2DB2FB55576CE3A4FB2BDCCC49ADAFB
01C7A6C0A0CABBB72135D782D6D302DA6F67A5A31664FD4312483EA00066C08F
2E907B83F704F9E870AC27EBF1A21DE55E2E8139EEC0F780FB83BBAB87209B36
C1E995ABB0450712CAF436627E0FA539AB4047E252ADB05C815832FA26D5A46E
6E6D081665CDDB47E5F4524EF2CFF89AE5639E089330F124508E3A00E51CD32C
2B1D7FC2F5632F32B648566D82D57DD43D7D4F5A6FCF0C7E4C041B6692815328
7A71344C3A872F26765DFCE423ABCBB6B53E99836B5DC5D42992C607F629D79E
0718FF511CAC5F37A63F31BF1039AAB63B37F2D42B6A97D7A5CB8E160A743DC4
2FEB04752B5747BB29AD02740D706C0C170FFE319AC7AF9804A60D6EFF03E137
C2EA42BB12592CDA763B97B7902BE8D5CBEF16716C447AEE860DC8DE04B04364
33E5EF4C01942B5629F09AF215F2456321A752B7A4CCAF844D9C9BCA6E43E67C
DC994BB76EF7796A5C462A7A1473B3B26586842320D66FEC301C4856D6DF28AA
F3323B4D2F67E0053A89448DEE93C729FA09ABFAA8B678D04B2EB8287D50865F
CD685405D882B814D89E41B42B5D3B25075961D258678312965398FAED8523F9
27E7487923AE5FDA3DCA45D697E5DDA8F449EBE6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A22C1891358A8E2517E771FA86C4210C7537BEA4
35CF4310F4987468340E2078899333E34575B1741A3DD9230A48751850985FE1
3F6F382B6D6AE0F7030A9099638BA429F043F4D17A96133B2E41002B0165D3BB
CF3704A6431624D00ABC22FD059C4858F97C79D08492ACE3AA3E3C9EF2EDA160
FF152DADAD834A43DD5CB510F4E2813868F76D25C8878E0AE2CD2CB6A8F5D480
878EA65EAFB3D4B6C5E3F2FCD8562ACCDD70CBB223ED1F8B2992B4BD17DA6335
29C87CB33A7E80B9947416A78AE7441E61FC59ECE8FF86E5068EB1C90211676F
6587EB59E5E1B9022D2E4700F5F4896B8AFA47B404339FDF8584D5DB0E5C30E5
A42DB22DD8E13A29F907A96094308DC00DE7254DC9D6511D316FDFE7C4E523A3
982C483F0D2B4266B025DF0C80782B325A0B3CF637603BB8F2E403EFEB2E3BD7
28621B9FDCFDE691BC8D49F87A10E9D566B4A07963E6186FC14FAEB626F3220F
EF6225C60220CFB93E1367A44620F5DABA46E1D0776A475E19B20D76175E7647
6C8CB6F630A62B2F7FF71AB4967291D8F4C505701CFD75B4722D0D4A5D12A425
A6AFD1EC5DB8CBCFEF2D9D9DDF4AC3EC8CA7F4FC55E38BD325E6D7E6D032C78E
D59A778685633B9D1051C94D2C39FB9FDBEDA3611E4D2A423B32709EF925BE59
F4D01AAA19D422B71720E485B5D572F1CAE6C5A217D910CE4D1B7A2CE5F5CEAF
6C50EFA95DDF532ABB0406EE71DFEFA8E871004838D1508C74FF46CB3BC3B606
DAC6AA8B21F2CCA18C2A4F36B45D39656DDF98B2898F9AD6D3694483292D315C
D306FD27B6E851B1191B534A4CDD6F4F3D05C8F61EE206080ABA29450A1E27F3
B26827FE47D6849DC77B7D5F653FA09BF06BDBDFC5AAAE4AA143FF9AC3B73609
0CFED922F99BDD6AFC31644FA1381273B6A60FE355EF1C3539AC34F294B9A386
8AA30F304B0E40A4D31A9493644857BC161B23A52BFE345C66230D346249BEDD
E9CC655BC2BCDD51E4AC23D4EA010E388EAAFD44D56E1414BEB89FE439D4EA18
5B7C1DFB7055FEA318EE8D241DC4C7E8383A3C4B976B6BFDEDC298DF2EC770A6
39373CADF41506D705E1D38869FF9F0D99ADB6DDE7CB4454EC2129172B4BC79B
B527D64C8ADE8A347C48DD5E2F9C77E6E238C485F7FE26C45AAD37B374DE4442
8FD0A9020A53B9405381A563C6AC5B44944E1F7EAA675D8BCC999B0366E136E0
B8DE163F0C6AE6F4D621F693F0F477BD3CBEF357AB5518BC0692537FB0162BED
1D123F7AB6C149205A5945CA0E934E4449C14C7E3AE9A1D7ED9643C911D294BB
A184BF1AC11469FE7B71CCF1DA1329C5003905516734FEF2D64B8487D1C0E292
02B0F58C0521C97A3844738FA21AC58A7EE6657CC8C78C2B540932A0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492801936F5E8A1E4D3E7274DF2F942B199
6D1183CD9CE1840868C9F63FFD1470AEB47FFF33703961AA34F3DDAB60E003B8
2AC1CF96295105A1686F43AB0766CFB77AA11B6C2A35FAC32CE4B5F87EB125EC
C6514500A94323FE593E382C53036412B09BC866F7FDE874F7CC79FE5120FF31
49483DFA3A94C37DC02088BCC1F9216D904E39F0F309DD6CB08C7537A7232DB5
812FF744EB62B67DCA2A8F59A0CF417AE778624FB2EDB7C4BFFC78BF8F01FD26
CC7062272CDBEF76089EC94D81E8CE1799CE9683265DE8EC9081A4880B2A4A85
C0DFB2B43B0DE7F4966E008C066BF6EB94409974A30FD61E80F89DE77282D378
56765A2E39849D81D1712BA7193FB92D21BB87ED788C589CB8815BB33235118E
56661189F7EB8082AB27FB0134859D338FF8AFAD4A873434BA54F345A4579916
27A6010A110BB3620218BCDE98C1DD2EB7D4F9620BC4B7218AC15426E4FA49EB
96D19FEB158D305348CD49837AB3BD89872D7424F58FAC1115AFF9379C091AA1
66BCBD86EB1F0BC203EFC221EE7B9B1A706A9BCD08654565D2D020355736906B
6B49A9E2D4F5528A7AA7F82814BD4A0F872A3A9A3DB9E454670D51D7F880B571
05C366245B65AE81495FC155B67C8626FF33812B1372175E6FD7D43D9134ABD9
70E524EFAD438A22F57C0595450394AD4A2DAACA192E92CF195742D5AEE9022D
B0B214D3A0C5FB48201578146A0398875225D8B82A812671A9A853C1E216348A
B87B18A4184C84556C0476BCF80A677C10ED094F00C582E77F6E21A71D0C319A
466A6202027833484674C9ED2EE44D10C0CE6B2EEAA9BD1B768A46C803F4AAD1
A3DFA06621001C51AF2CA7A39AE14A233698EC7F74892831CCB18FB0F415637D
9DA636BFF95A389410C035039A8AA12C716CEFB63CAB2D660A2809569B1CE561
CBA1F7CD528FFCEE309C660D5004585BA16031D469331DA20C3D092BE8CE38C3
5CD2C51E4E4DA76ECF291E75620A44CF49E61F3E1B499563E06CA6CF44BD3931
9CE74AD419B077F15EAB31E5C4B86186A1146BAED05F01A4B2363194A109026D
51F307DBFADD52A043395CDC48DBB13D76EB7119E0A92B74166F08F7168F45BF
B5024F2D9F96301EA58B21B16CDDFEBD4CE912FB57CA67ED55E354EFA8D23F1F
F599194A044C530AFD829D3AAC9798AA8208F7E43C2853A219D603E1F13740BF
D314CF05D2B777C13DEFAB9B432418962704D4B752F8ED233FCDF1CB5EE18D06
D9774D944B8F078716378FD968142C01BAE136BD3099FE129C396E9451657AC0
723C0DED7025A4E8E09ADEFD471CD755F7BF623C0B41CE79E0C8820141AFEC8B
F607227130388C671631D20EF5FC381131B7C4C90E04DB61386B508D91B4B29D
F4589570B10C9878819B80F7BC667B94ADA2152E1B66D135E09A46B054E37922
BFB709F40562D39AB10F68B19CC8756AD1987C4A8477C26075C8A819E4BD602B
782939220D351CE8179EE650B0D9C5050670A800E58F30906003D98F0F6A1CEE
4A6444BFF43C8B73F38C79D03EEF6C753F57E34AECAB0CFEC7B07A150D715296
701D9F11ADF00AF308AD5D17E2040720DA0AE2393C3189A7023D699602C35016
3AC9894C524D7AB88D8DED9656B074B08F2CD31FC681245C724A8E754BDD8917
7C8C2DA74A41FA6A57C96511A0362FEF840B2008B04C23B85DB5F2BD66726A54
4C10942C271713B28F9ACFD22A826FCE49A38C299F94BAD0126091EF1E08F8AE
C94C3703BDCFB578FDC44CA7487E3D39479CA476045E4BB7317B507875E601E6
C0BC1BEE8EC0B014E2B65B5C3093A26EFE383B3319A212AC11C1B4B527E2C5CE
E8813C4DB5BA5657FE29CB1AB73C6932C1D2774B66A14DF4431DB3E8171FD0AB
92FF425F78F81B0B618F1F0458409D442D2E1FC2D1571D44ED014CB9CC49C5FD
F45FEA58F190043814E3A4CFB85AFD46ED46CCAD840106074F69AE7C306ABB76
1FA0C386F50D2C9FC7F252AD669BB39A19492923FD2ED1219D78BE4FEC3574D5
AE3388DDE9AE21AFE51F5210F9C7FAFE05CF14F606B403710A09383043E8652D
58B7C68F9B79E823669E4FB3D3C5AA908E542445660041EAF9EEB803F299EC1C
19CFD831CF7C554C0136175BA218DC02351A89F44B6CD666B66DDAE74F5491C0
11C8D44C8637E18847234F5123B210DAD86B6517A40DEE910C74C3593BC4C0F1
FEB1F16E9B05B3980E64E135A4F5320F60DF7A27D153F5B5FAECE0ECB558341F
4CF24489372B653AAF9CC951A3385396491BE6C582C7FA09872A6575BDC2CF7A
4927D841354301EDE00ABDCE8BDA33BDA6DA5D6C7F4B7CE7389C563D11219A88
7F01853AEF9D5EFDAF51FF07C966B61B01180333ECCD5B3FE94019A96B2C19BB
6357E64ABF5421FD338F17B562E955B4EB2BB06A779566ADCB995B47A4712422
DFEF01EA631F6E5657805483BFA8684A253F442DE07FE2C0A459FA2AEDE1B3C3
173126E3FDCF7D711DAC380E4F048050E3FB3B7D2A66138292F2F3BD650E492E
CA67D539F5618E2557047727B1877C6951F86EBEAFE1C5725C894669FF44C8B9
F47FC101780A1DD8CE08BC9CFD4C466847FEAEE0AEBBB377419F816A5CCE657A
26E927CAB2BFFBF4CC1A24ABE2F4A3070335F65B05427E6D300B417DF52C331B
842E3875E8C4A4ACA5ABA29958F36904BA4D3157ADCC999D22162298E015F6E5
DD084E68FAE757E5EEE778111715039B1BC2EE98C878DD54F9923F72D6AC5BA8
47A7B941EB716CF9A6D08728DA3D95ADF1C5C812B03E2569E0F9B67770D225C2
850EA487E561E61A161ED1D578B1F16C6FFE3C105348362C617D60BA3678C821
5B9F542D8110235CB8B0A4B09E56B24538CEB6AA2DDDC988D12BD4E20BF39632
C267A05895B76C162F6A87E39DBF326C93ED85EAE5B5EFEB67FEDD00215C3E17
0D67E4537DA0FA7D52EE2420B6D9F5E6FA1855513B7131C7A04B00038E4A5491
19273494A85018A22C3FFE633082B4FC549FAAC2236FDA214B1AD5EB1B5B430A
F25A20A0B636FFEE11DDCCA10EAB988A1C23C7B8940F5D2568FCC3524F6F89EF
BC5FDBB970F1EA2861AE50704AD81C1F42AFA8C2997C195CBB4DAD4B0FF3779D
39D39D12059B64E8C6097B502D3C5991D623FD166DE7C3A3DB02BE86FD262DF8
2DD5E8B28A52C9349C362FD595A48C117213B7502DAE7A29BB90CCF1CB0F26A8
2703271ECB04CC388498F04F23FF1303F9953D8EA3833BE27127E1C489198821
227C1ACEB8CA656C724A35D2B660BABC3A7894B0BC073FD16A8A89F66F7D7FED
1BB6B48B01ECC02E7933E19CDA965A8A28E60F1CDC69E178C52B5FB46AB460EF
E17923AC043A9D478C77F515EDB95FF9CEC0A5DB50A6F692DFE6BA706AC435AC
D5C96624B440908C7332AC97BE9EECE5D83678D5070A0CCE97065387AA5D940C
35AAADE17F23A5763651EEF6D328096E90CC61CEF424A54E62107D2ADA1C1940
5B9CB4C132ECD0BA8720C1A7936015028480F2CE7EE814B92E5D5301D72483DD
8EE227926096F165FAB755DAB5D72512557EBCBC43190EE840144F9F053FC850
41782B25B9A9F7A9E3B82F4A439AF0F1B4D45E4DB17DA98F338822A9A77DB147
CEB89735647EE159434E3AF6588F47FF9722B8ABEB807C68E89469C90A45164A
894F551A6EB2B7D1D182C7C67B10432575088796B7EC70FFD665EB792C140D2A
5D433D8D42025BAF9011131101A748BF02525A10C58FE79946DD2FC6DA9C9ED2
954B7A9DF5CF6F2F47FC9CA1C386BB2E6987F808E2367DE0FCFF08B9BD6771A1
2B7B344BD20B1596F0E85BF4FD69A927D3CAB63029974315DA2D086D8C9C3332
63A1CB934C35E1576099082701FCE199811DD294CC46C967A70BCB4C0B890E4E
8A779653C1E96E17AD82C65D78615D023C7CE0560525A8DA4CCCEA32F995DB32
130C39B589801F5FAF474A0F212719A259549EF7BD5AEFFA09B762D7F26D92B5
2C881153E8228D33EFB93F057E59632B9C1281DC5ED17653DFF7A81FC83C826A
94C6EAF95DEDD7E1161B20F3AB5E3A7507F25CBDE0504C023A845ACB93254749
D04EBC0F1106F62A30D3F714A33E4F65F32504181FA5FF370EEFBCD54039A07C
B8A81A3677F4EA0C7CD823DAC6570CF2807253D3A1247C8C227A1A8B322F38AF
D236FDD824E7C7679CAF5EC58727292379DC9E243AF4CCE63D0DF7B2B1A3C18E
B948028979069609E63848643B9C3417305B29F56639312D415B1E7A6CACA81F
279AFF9578F1E3A37D5FB6DD000AE628768F7369727585430AD13990FFCDB4B3
51DFD640AED1CFB4DD19EE285B8AF50064A73BA117E56E0ABF41F9D9F03F1466
76BAD9C908DCC13E41A9A0633280A6F2B466F2C552D54C7EC5656F78580E7C0E
668F00DF9D78D125449EF704750D1D074347A9CD1C4F12145EAF482EEFF168D3
385ED456A79727CFB0ECD631970284C29B441B2ED2FE4D0EEF25A94159D6E004
CA0EE326B90C882E7CA0051D10AE4BD1D474E07CA2BB35988541C96FF775BCB4
FB7C6FB85D144B87597F21C39DB6A2CA7C80E5410BFF7EA073A18AB8DB16D5DF
926C4455FE7FCBE124CB47C28D01A91B6A3BAA221351B0C59C9F6CC71B257345
C6CF339D33335C01BE6CD0F0F5D5CEB1B55022BA9D729630C537E79CAA63E057
25DEE581FAFD1F33A85B6169D4794B1D73940FA0CE7BDEB2E80D58B526E647AB
7936C6997E133DC99E733D0E2E7FFE9382A570237B4D891245EB3074E0D4D371
5723B661222CF49872856674212EBEFC4A56D4A62C5ED7895A415FC06B0EC169
287349C52D39779DAAF3AE24C8D6D02CBFF67018A565B949A243A214842D1606
24E08188C9A984CC9A15294FE77287A25FF17CD929283CE90F6421DB4A3B7D3B
B63FB1C3717A3F6D817EE3E6701FB389257B8BC397058D8B733962414281BCB5
3CA4171D36A9753F39C027DE74CE87B3170A1ACF1405ED43CF572883143623D4
6EA143206F25481C94C0C9EA96A6336C58388D785C3B64ABA12578DE3A8A834C
A31512780A0BDB4F148BDAFA2B81DFADD8E946FA4ACA6F2440D8589DC526EED1
027787E23EA108C7FBC17D2C074997AF181DEC919B75ED0EBBCCB03EF5F13BB2
C4F0EF5A35D860207ED4C1346E54223361FA1DBA789C741EFC39C26105C01437
D6B136DFE42B145626CDD287909F4E902B1002698CDA5AC4D983DD924FF55316
2EAA260B060FBB085F0367BC3185A2B9793C0F5FF3E0B7165966BA0DA27F8DF4
AF872FB9087A949AC0B319C4E438820420877D1A660D5056FFD5C15326E2556F
74364A8EAC427BD2A1E846CB05EE8F14F6693C8A0A2A3F09FEE2D299B3AAE7FD
EED53AD92ADF54472F10F9349B099A385062A0C4BF5F01CEDEF3F63DAC512FAD
28B396CD96973F8D37C19E16E3AF0E7416AFAD23482C4B5B7EF989963A266CE0
B3208E7F3A89E5336EABD9FF7AF6E0E6E181ABF8F70FE748A4D674F4D2DA7EF9
DF36E738062301846EB0A80C9B59A56B57B4F5CB4436B0898FA6FEFA3A13AC9F
CE3CC664E02DB73A03BB379BDFD1FDC40E678BC42FB3835475F099D7CB244B0A
88652F5A1EC5546FD4DEAA2A82A209E2423BF606BF81D08D68F7920A19389326
38DE190F0106460D303EFC8AD0320518BA88600502C545F92404F6B14C48398E
C8AB3867E917C98CE630833A36F018B6309FF1095C643EB591366950DCA06596
B169C966551150795AD77671966D5E1909ACBFEB342BF961147137F29D045456
07CE4FF7677CEE2603269D5F288AB410ACA8C41E777335F068007B7E87BD9D40
5F2E29BF660674457A70F9DCEA00670E67B8FE790851B16E71241433FEA5650A
385F5B558D69FB699E5EF78ECB6C3E02F2391C4FFAAD40AD96481FE070C5563D
8B869B07D3DC15B26A068ABABF6474DFD7561D55C9E03EBB587B340A358A65AD
DBE9E9001FE8DD894F48AE762283F1DFEA6F94F63BA7AD480764B8E0D3242796
12DA5AE02BAD64FECF383AB03CD1178026D5B5C1160B5D69090DD7D72C1AF696
3F1248D082EB823E670F03DE2BA917E3284D54F612C02DD4C626DA9A39081C6D
B089943F99EE41F4B708D6A5C8140FA8C2181121A40DD44E6C1F7AC9E31FECA5
3748EB84088D6EC2AFB9CD15ADF00AF308AD5D17E27ECA92DA53ACB1AEFC8A9A
BEB40F9B370415E9F681E8C315A1C697A6ABC3DD2C8EAC5CAFA7A2B028395D93
45A98973E2BCC93E5C239DBF57C39F0E777BE87C953965460BC44694D27E18F5
127D111222F954D38FBDE3BCD2A31DA0096BD2B59BBD64B98EB4657F1F3BFE97
412F176E0E7716C77AECA32C589DB264D2A274CD739F6A9A8920C2DF579A8C1E
5ABDD0BE5E663EB3C841021D30A1B105B84A93E0E8625B0B2E13B3A1099A46AD
FC9FD09C33F30F499CF5DBE572B58A6577C72DE1210BFE3CE7DEE4C16D48C915
2A95B64BB92122AA0366719B4BA72DA32AFA04692BDF509BEBFE82CBF5EDC527
5EC13567DC75F71C7B290BFCF9BAAB9A23C0B86FF022AEC92E52EF848CC7C269
868F4967109DF47B79FDC83F65B0E6BF7A62FB6C2F72A7EBB5E65B3D3EA9230A
1B797ACE38376DB0321D7D2B33C37AE910E6057A2B9793E3E2CDCD508876E200
F3B1C6FC0878C362F8A5046453291395C141525C234192DBBDDE985B647F5BB1
F8CF7D23CE3F199B1E265B3DC015029A4189E4FF1B916BE395A5D247A11BBEBA
73C5E364170E0D91C3AC561FD031BDDE4595495A365F434AF6C6F50100F19785
CCE100961DD0EDCEE6CE7F6AD035A435017F8EDC6CAC06D2AE646132032C4DA8
7E55DF77AEA448765D626DEACB5888EC70E89A7B24032854B34F5FFF1B228362
1D7C9831F5B60E17C6665863AC03E8F8CE02D50F50548791316300496FC8CCA8
9FED056BE93035A6C4B1ED297B46E5AA046D42C63A23A98E0481DB2B80357CC3
35E9C897B23FC7B2DAFF6236CD773386E362EC7FCBD0629A1D2FF5BAFF93EB96
F05B27DB20DB5F93D184144B2966F72FDA23EA23E0F6F14DE7029566695B0414
B1C854E5BB8E40E62A6E434C409BBBDF2C41181C4123B58CAACAC3667E2ED796
A8261AC878AECBDEBCD3CFA7B4E67242D230E1B1659B547E435D5A2C4BC08929
53EAD550817FB700822EB157C4BE8DE0D015723DCE48D82E48819606E978EA55
D01878C314A51EFDD4A9E36DE60819A02B3BB4F76F3EA659AB97D4964C026008
9F9702E3D942063E0A67AF5249EEF89C2443DA991D1A05BFFFB607844380156A
9D5FE2A945D007DDBD1EE29DAC5C515886FA6CA4A2DA5A44546025251CACDA3B
7409F8E584012272E23198CF7161ED6CB65CD866990A10275D0131A54A6DDF0D
F26D432299F879232E6BFF7F11FB18BC1EE16369D35D3E5A083C3DDCF88D4016
3340A17A117E25C5C463F511124CA3AB66526511B33EA2D57539AF4AA14612F0
4C54D59077B880823883D4DE05CB5C6CE7C221A2038461896FF0EBC22A43E725
B66055E56D4A8FB3ECB4BE8FB8D21D943D332933637497EC9C0DA348063390B5
A90713629B06EE09140FC25E2A4FE2658D8835158A2BE0E39E2553001E8333DE
66C96E44060C1D4CB37236209050865DB7C42DF627BD1BF35697E1E5A8B467F6
A0977BF8BF827381B96043357C8CEAEDF7D117235385BD69D068F1BB3C6B565D
26A73593B5567FFD39CA40BE4EBE0174BA827E7DBA957FADF9E79A1ADFB94FEA
EC654AE20E3A693C2D57AF9597B8E78AEAEF8F7D549E21A4313141CC867DD598
0ED1DB1257EF87EAF7D39C885971ADCC853799433B9CCD5CEFBEE48004033A4C
316ABB86A95F8FBDEF27B9FC1AD327770232CC36A7FFB12F2C8EA399F5B80134
86E63805C5A43793E1219B298DA01C6F8EB2A860446C717D6BFCDAA76B47C748
125F1CCF350E3930ADAE5249B3D5CAE21B20FE6FC3880C639397437CEA43184F
519AAB4A64AD758F0995231827D743E89BB609034EAF37E97C820EBD842FD1E1
E7BA8E5424C8D0A899F621CB490A6823BF823416E0EB478B7AE71A3F43E960F8
B52A4B88828D97DCFC234184F8E87542DA5F9F33C1A8EBD03D61ACD1D7DED56E
82B323F054FEA3C549E19A12B667165B8292EAC8693D605BC753054E1A5ECE20
913D3B458713583686ED9CE0DB4B01FE7AF62D56594BD31845DD8EF67D1D8897
02BDB4D4B38FBD79364F45DD9E54B2B1C3C2A125975270FB74FEB0BFBB6DC2FA
129B42E2142611ED0A8ACAC6EA5DA6DC6C188D10A28BC48676E4777D65051CF3
515639300B02CDD229749F777687ED8E8879C26149F64F24049F1EAB2EF18341
3A4CE70C72CF3197C6081BB1F324673D9DF4C2DD17352573C90177484F7E742B
00B7C92F1FD6C023330E4FA7E65759489A8C1A520E35CC383CE5CFAD74DE4D8E
251CB3B3A5B0A91C0FCD7FBBEAD7A812F51B3D622135607CCA8FFA213664C5AA
7B900A21CEC16FF66E10AEF8AE8448BBC999C9FC6C6189F016B1FEABC10785FE
EF0F4B11C7658A59CB2BCA64D93B3C247EBC526C2F6C8B93EF2E8025EFB02E5B
C10B45B7356973C2FBABFDA96B4160DA342B14BE2BB9585301ACC64063909D6C
1DC84C274C90004F41A1F818BF2300ACC1EA8D0BF2F537E32D59842E589B79E9
7E151E24D7066D87CB4EC3F62D26DAA40EE834CD0FDE05010CB9D4BF5D79A01D
EFD54B921A3E1EEE011BAD68C038745DF836C1C62F7C09A0AB81C8E8D447D5FF
7EA0C9255E4B3C55CB96C5D792E2DDFD91D5D62FEA685E88587691C916BF9A6B
DAA24DE24D6CD65831B8E50C195D0028E09573F33879D310C2E50AD555023527
0EA6787A487A45B9ABA7D911F8FBA229B8754C9302959895287ECD2C4E990A4F
3425EC73D566E48A1FBB6F45F6DA631D7EC438C14E8CA374CC57F368646CB35F
333335ED4B815FB31FAFBC99CE983EA462DBC29DFBA80E389786A0EFB26A7937
4D96BDAF0BD36479D9E9468E90DBC42371036525DA1B30140CE83AF772E98E8C
B3158C0C324C6C762B1682A8CA7C0098265EDD8DCFAA7F25EC0DDF6B8AF6C0BA
979E4CE06A8B8F46297420FFE3156A9D060D4353F77F23BB87283D668AE7CFFE
59F18F5A18743210743F07A89CE15405AC35BD4A4795277C0923A9947A2F28A8
B88D94BAFE7739382EB296E6C8B20081C7787B17C4355CF90F93D479FFD5CAF4
D703926F1BA042CBA121403FA636D226CECF8B700CE9C0415271514ACFA19D2B
9D2E2CBB0C08DEF0F19151DEB13BBE9608B43085D30037728DCBA6BEE30DA2A9
CE7073E02324E9A21A5BF2DC34E1767AC7B8337F060FFE21FF47D8FE250804AC
5A885463B7FF049A75239C4DB9902640D98D228F5875366EDEA7D5D43254FB4E
9E9E4CE34660A7B6C084967A50FB5E53F4257A1729711369CEDDA424A9E19BED
13D137DFE3F01D429FB4B6E2491256DBD49728AB2F1555042E52D5BFACA82C2B
D7F4E0CEABFE19A44B5B431DD849045A57D42263F8929F48743EC18678FA414D
2F33B16A28C4A677F8FF7926FF7AEDEB09DFB0B956B404C74657B72A77E33DE3
9B5DABA1CA25FC1490BDE9F5C90E5734ADD96E296A70CD5080169F7301CF3C4B
BFF09A901AFEC0709D6C3996C77FC61989DC798351E5887C989E252F50035966
E05254C74A835C5A785E9623F0D483091D6F95BE42F08C924BA4B18CCFDE020B
76AF50EFF43A273D7BD0EC942D7ACD2A88AFEBF38541AD1BB12E1C38C34B695E
681E55DB13DDC232DA306F6F29C43472FDCC1CB26D7B4D2566BA19A3676F2F50
09B28FD8CF4AF9363F34FE0A4ECC977E0A848850FB9B3B0285C7FADB28A3711C
06273B79F97E929385AD8AB3B48C4FFD3D428036E074170F62339983F268DF9A
75ED5B78C49642E51A141C5F34F7579AA55514EC61593EC32F0C344B0DF25879
638250E227FB0FC00981F42A504E56A4ED8BAF6E29CAFBDBF11307E0090A4535
369EB96E6A51C18E0BC4346921EA3A8BE3B6808C852E541C1A3AFF4C57B0BA19
6BDF885DB63DEB07C11DEAAFF511067D817E9E09CA0BB698030672C53966B9B9
A97FE6D6832E5BEB7383E249556A7D03753BA53A79C62E20FD53A6555556089A
DAB4DAF9B826BC53D97B416F02A9C7F00013BF9997611ACD8B2253EE29D6495A
FC01FB442BC91FD47E1BA93B0C8B4BF4C285A2D8EEC6E0CDC36C8DC6899671CA
0241E12598090868A71838E01419E6E2BB3674F0F3273808282A91703702D7D0
6B9B67CD2354E2B76A28306EB1C4001F386EEF84DAA4E59974A636596318B3D7
10351EBFEA8ACEA7817B9F50285AB5EDAA611EFAEDCC9135C58F8F73D47D434D
C4A4E0C2887AC02F0DBAA9DC2F6628F61497ADF417AABEAD370621DC8CDDB37C
88A024D42DF89C8D4D734A0B108FD2BEB5B1D48AB9A9E70887177E32CF45F527
68B6086C41EBDB84953882D94F90EDEAC8A3A8DCA72E26C987F09AF3C4A335E5
D798A70D15F48C2F617CE0AD7A4007088A67BC31CB3D34152E7A950505550B84
20A45DB0FDF9B94F0B541D23F2D92A82A96482D08216DF53ED0681C54829529A
DB1D09636D8DFE49F75A1FEA7FB038BD30EB76410818E1B530885A508D2B610C
A7BD6C31B86706637E2576B49D739929DDADA413EE35894A6A5B14CBB136548C
4EAD1239CFEAED6935F88625620CE2D7C64250A8F2D0FD2807CFAD5EFC9D6CA1
22FB2077E554C9C84A1760A73C1E37B523A27F53933C6B62D8AA75F2D6D1DAEE
7C768917E9D4CC7DED2405EE490294E01303458F742E5D683C434D7E86EB5FE4
B3AD545CF2DC302D330A414824E7D5B0B6A2C97D222B4FD5C3A9B84B9A2646A2
689571883F0693FF880C9E2BC216AAEDA4CD5A9F739E9761283FCDBE787A0C5E
D8C8CB4191E950DBCCD311A20B14B417714511A2BEC0D54AB4B6D20E345CE6C2
81F4630A7BA2B583F64A5748ECB4D1A196028414E78C7DED728931C69AC12028
A632351389FA5027404BABEE9B38A41B2049F9E84F479F700980BA6F10E8B532
CD0D4E6630A68D7D5B29BA9FBDFB0AF06A0B3E3A704AC861A29E20F232C4A4F2
92ACEBE32A424A9F151E04850D07E799515496C142D484DD2FB5235AB9484989
D12039202830E4F2AC7BC9A0512C5598CD6A8558B8C485090BC327702B132335
FF288ADF62578F30CDCCCF826B228728F8BB1AE6F5715FDCC38757056512214E
3767938919E5AE3E1A3D5B471CAD468007C4A6BFEF07D313E783706E32E5C129
BFF10F485B8221483C2AD47B0ACA1D523D3A3F46401469C834216DF6E346AA93
E420353870904DD265B61AB7EA4EABB4E952B6F2A20051ADCAA1AA9DBCF89DB6
EF6577F372161863C546327B4BC36E956B59CC1D72F9F8D4F020C558383A14BD
C6B6BAACB366800B11DA33EE74DDADDEAB61616CC225C4B8F43907261AF9023C
C77027D8A3C0A06A48BCCDF5D6D6770402B4F2EC1302DA3CDB78AED53F981614
64DC5DFD2B460B990B0F5D331622A8090D0C2F709654C55A596B7D4F164FFE9A
F7D6E14CA5398F536AED18CD8C9B2B1F9096DEE8449BEB4A584F9424F3AF64A6
F0A9CE7AC4FB789C7531FDFDB2D96924A2CED91A65032FCA67033ECAAB246290
E8CA8A94110358CDC54F8872D80168B446D19614EB0F5E671D6C43EDDB378640
49CBAB6CF4D29FFADA86B2C558CD41EC5B69DDE72B7679DCDC16C306CBAC3C06
63A1274FED51FED4CCD2D249ECF4B22B21842C8F86DB2D0534A67AFE057FE488
17E2A2F71DB6E33BD5AF7B51FD03EE567BBB5A970FE5E447B6F81571AFB71F8F
AA0D71F811174F90C99D86095BE64A36FA8733362A8D4A227387940C3D3334A8
479BCAEB272DDD92972ED8E7789EF98998CA4573D95745C61429907F1246475B
1ABE516106FEA012E71C4352941A09AB5A195A605234B9D3F08D50F8E869ABDB
DFD0CB0D5516F615FEC677A6D52BB7D6B0C6BC1B8D6BBA3C4AF64523F37F176F
3256E298D22DC5F1CA1CA8246990A7AD75FDC24A2207E5A857C0E850A95336D7
41E55576D0F5393DAF1D8A790FFF331CA9E4C9DEC7D11F6DD71F93F498F4E720
FC9819E6C6AE3A34049A9940DE2082D0D84D0E0B99B789736594D7F6C77E2497
63C762362656A65347488BCB948F88B5A51170582F8864C29C7A039CC88FB05D
871D43A760D51CF8893664E7C2CCD757747CC6EA3092B8839269033689E3FAA8
AD725CFCC84AA3BB820A654E2172ADD82C5E393A5BD57F140ECA79A75B620C97
0F79650251CE45B487422C3CF3ADC3A1BF06F1E787DEF42A610E752A8B935A95
8D9250B329ED72DFFF1413E660A1ABCBB982B6430645C8AABF5A037944087CB2
D5D260D28129A5DFF692324734BB13A16DD0175A1E5A46C49A663A888F8D94D0
C20766D3626CD8D71DCD638A3E49FFCA7473C3673901758247355868BD41CD7D
18A25093E80B6B407F82F35A6671F04ADD10C478B7F8D9A562487A9FAD8D2C70
C3C5CC0DC5B4F3268A8831F3391A7B2A17E1A8397AD349110D3DA891517FEDF5
73F23AD2236AAE8F304FB73D9353CB090E79A5CC212295946E98647A6F5903A6
BAEDF45173D59788E039C0BD01FBB360077A16C6D30991FEF07CE0E00A028B98
F990B4D015153CCC2E1853473BBCC65C424F73BB55E9EA795D3FE450576F09B3
4137B908AFF83B8DF53EE8E41302E597B15C2F640CA86F291742C260D69D6D5B
F8B24AF382484337EDE6D846886EF1FB1BBC5E654836F18A3A1CB8A8D3424283
A088E9C112206AE25697146F66B9C5BFA5415ED1D6DC627CB8D85DD911F08AB7
6E205570691C6063359CE9DBA2E3ECB7B5925234A43FA3CF732F443D1B302755
CA7C1A3014CD8988E57CA416ED9175D5C9919AA6516F0E77C57E563C368FC06A
72F915E90592641FE99B4D86F2CAB2B61F652CCB35AB1BAAC24515355F9825C8
43D0C6BBB366C705803BE6A1C4DA8EF1641407D8477DF5922A707E00F2E580F1
16645586F5EE36BAA962D733EA6B1D615D235898F90D10254BA70F470D82194C
DB01A2CF44626B93639150968A7870533B07A060CC98A51DFFE0802D3E494A9C
3B2EDA82BA4EA66A6F3FD3AD3BAADD985FD3161D832259DAF6B0D2A4CCB243D0
CDF738D528F5AD6146C71E300A5AFE6E98F9BDC785B5A5373D2C48A45ACE2B24
69145058104F4950155BA3735F23AE54B8CC5ED298FB0FC01E1C7A0C6795B895
009E01DC3F6092AEAD960DC4225B975A53A14F98F22B1D4C7DB3E67B52AF8E00
8C9AAD287A0D9CAE214621FCD777E18D3B2C5D46A482DFD3E046ADFA61CAF5DB
B40A144B36CF8C61221FE03179B1B0E46229E3D3B21F23C56F76E3D69C1FDCE2
EFF0F6591BF6B680BC0E6A1CCA2E4536E8DC8BE29093903774DD346D6C9EFF96
6DCE3536A9CDAE49B7F5750FA6A851AE5BAE20F895265B5365A82239F1100623
8A0529FD9DD0AFC288DB567A76449F1D8E9B9841FF8219240C5ADC52827BE367
E59D5389C8E504BB11DA744ABFE6427AFBC2DD36D178CBBBD28A1E03EF72308B
351431C450FE86DEFF590FCC0D307ED16DF74255874E84B2DB564B26FCFE2B11
2075556F2639390D2D516F34C8CE38551D35D6D7285512A4ED243A72AB0D46E7
6A796A8EE0BD18A2E8126B9DA035A198ADB0555C4F6EA8C47A2C872C8A180D8D
ECFA4D3AC5AA09062BFEEBDBFA53FCACAE1EB06A4A3149F5129CFA856445F6CB
95DBCE3389F0554DAB34FDF320FC110AE5AD486A531B8639BD6E55F11CBADED0
26EC3D6CC37646553125F8E6506D64AE62B52AFC248E10D2DFE70BE9A0DD218F
29F94078A26E76F0229EFE5C9AFD1BBC00EBFBBF0BEA65A379549CD75CF5027F
0E4B5F938E09B951E782CECA45544BD39B8AFBBEADAA1EF7BB54E858A51C275D
767261F93392E82A94F7EF991D325D6E22BB357ADFA81295074EE621FB870733
2118C455CB52182197311EB2A518C68E7EF2198C005568E9DB85B2A0D87AA2DC
263933EA5E43A727025E5B23E9EDFD422C969BFBB8C47A09776CB5F56DE418C6
05C2C85F79D5C65D8530D6445599A5772EBBAE216DEEB44374B6CE3D11E64FEF
B5D359409AA8A0D74C84F3FAED36C9F2A0D215EEF8F4856D5967726EF1D034EA
7E05796553E9588FF5C101B2879C5975D9E72A598CC3C199186194DA76A25D36
837D2E7CEB1A1F003303F18F2BD8B0C9677BF1291A0BF9079B0908EBDEDF13CE
286ADD2E17A4041ABA65112121E1DEDF84EE546CB007C0920FE0D18A619F3B48
6A04CF0DF13E902D8B291FEC73F4EE988105953F49F8DC8141AFD6FB20B0589E
957FE79E333955AA86C93BB86586F20B17A49D19277CDE96C6486073D745545C
AF14ACB51623AB8F149B28618A95F299A994AF66D4528B5ACCBBF3D46857F3D7
77B1E9BDD56A550B4DDEA69DACAF892B12F90344A92B1CED3062B0EB1356F97A
EE2F1D5E6EF44F8FD33C3F312EA818A50BF589E955E949E75DB2A16CF4644DA8
BFD547C37039F916880D9B3664EF1C10EA92459701E5CA79FD81C81CA10FB878
2587E86119B0036AE48CCB5D492D5EFB88793CFCFCA9DAE4E27C9A6A4EA27E35
21C498D60753BB4725B1FCEA21FB89065ED911978A0F04B29BD98E25A8686EF2
B3BF42D759218B360F1C6EB0CDD1DFDA3C646BBADEFEF32872CCD70940185615
15963AE326E5692A981BBD5A663A69D6FCE8AF7C87661161EEF56F5C5FCF3F08
5D6FBCF5658E8F5008EC604D43FBD502BBB03F82E7EC0A5ACD455CFCFF0AFBF2
5EB16DE8ED408313649D17330669722826E47701F12BFF14AEFB17415FDD6D9B
7D352C5AC030D32A58A871DB21FCF4BA354EA51AB9923D50061579F7C2231C45
45A7EBA332801200B93C0A193E273153804A90659DD7AF69B2F8187B396C1E80
F1096EA9B7208B77E4C82D82F098BB7A4C44EA0976166C248A2226C150F12621
36B055F0DD7DBC89A8B2F35717F32772B3752C71EB3E94123076EE0E84937959
2C7201FE13726EAEFD159EC8AFF2A898881B2A1CBE3F1254AD28C5BD9176FD2D
97B62D41FD38A1C1653893B926578957C8B944EC80C55B12BCEBFBDE5E0EAEB4
0F44BD7348220D53E2D19EDEA21907217E23A19669917D47C9BD7509679591A4
25340555CE06787714581287CA52C91C9502EB0E0AC2423551059B0E84E9549B
81D7C6667DB8E6FDB8919DFB023CBEED7A0D2F3ED5E01AFBCDD6F22183917696
B808EE5C5750959FD6E79A6EF0EDF2AE8B49189315EE77F14FE2B29098176457
603236CE9CA1E77CE33972FF83AC46096ACCD1260A4D32DD7305724FEBF460FC
21924747C2362B8B9D55452D2C096ACD23D9791A773E7CA3A4598D7C2C4E1693
606F212A605F7CADDF781B2B8A8D521A387672F4A8022199D0A7D13EC3AF44F0
ED1666CA8B3EE1411D7260FB5697836EE2A0E57CDFA83B5BDAD51725CE38479A
8CA61A5985F7D9A1C2D376DFD5D1048DC87D9F8BBF3A28847AFE8A99CC319B18
D509A1ECC9A6B0CF986FD92481ECFACB4EE836FEAF01B300CC2A00140DBD0D44
27A3ADA1BA2B63DA2C508718AB6F0D950DF4388E104C6C10185CA87D2F059D8C
292570C1F5BC7CD8C5CFB64E460047455979FE3728FBBC0A1C755335C064284B
D0F46D6144668207AC29CCE77576C7858384E9AC8380DE321F6F7CC13C847559
D36316BCB7CB186F410EE6DC05C747353CE0CA9BBE0C8107EE2B120F23129000
34DF2CAF1BAB5C26D3FEDA26A24CC33668CBA2B3E416EDAD7CE19925900B1F95
87570416043958C9DAE0F6F06B4E2B953A4A6007D18071D4B724D828C231BDED
6F233AB29C4BD43228591A1D4635B129887F8F2A95DEA3DA8D2375E04632A495
7812FAF78F805516B5AF5C69A181EB73A53BB741E29E6EE745114493ED6E46EF
D327DB6C254E666310DC182BD6B15A296A3C71FC49A49ECBB1118BEC17CE4A8C
A2FA3784613EBD358CFEF2F71CDD9B12DA394FF35F45937C9A7609605767510A
ADA4364C42740F66BD32A1C57B2FF3A799CDB8D30D83527E6AF151D193D1C687
83084AC74861280348C1DDBFAB5BA213A4AFBB375C8B1A3D3845472CC80DD725
5D4520586E1D7551D3DF71B183C87715414F870E722B47AB99E14FEE9254398B
57B05DCB5B3F0BFD6254BBB56E59C4ED9ADD60FBD7FBD5CC37571D048FCF5A40
C9286D069B4344B2767533FF7F98ED693455F82F098F49FF48762A872C7C6F41
50C4774423E8C99C28166E5FC3BCE52C110A81C3B8702ECB834856A2A46D834C
E1AD964D0693607A7ED9916A68DE125562EC1630A660306B15BE6F918E6CB26B
67A81978DE7DF52149D650A881667D5926AF40959CE7CB20F96BE63AD78A531E
A2E377D1E3C541768E94EDA37679ADF77DE62D90CE8FC319254A22A82A6126C0
A795A658BD1035E4B1CCDCE60643FCBC5ED2534D8F94620A6237CF282ACC0ECB
E860D46CE6A6A025D0F438904BB943CBE88F5EFBA35B5D9288B8F54F0FB93B7A
F74423F534302F10CEF5E84AB66357112336162FFC02B1784A43AD12531A7CAC
5A444994DF23A71BC72D8899BDC301E0E4C4AC7070BF14742996E94CC540CDEA
3D5CB910095DA9D998F1FCDD71DAA04A0EC6CC614FCDCA428F05A8217EA6B00F
1C780F9781C7C9787DCBB0998E3159BF64ED5D9AAC84C31347008DF3743ACEBA
FE3E81BB9EF330915208B9A409630F200D145C14E7DFCA3E9A3549A3E0D915D7
E58D777D53156CB5D90105651F3CD4CB92469B2D7A8C0CF0EF9A78F1F8F1AC8A
2B6E682C31FF1765D325CFA9B6FDE14C5EE4240CDFA0ABF214F88DD1326FFDF5
F0DCD3CB725277B84DC32FCE8820E1602A7920DF5E9D164315728D5307C5F700
58602AB4E441C7A3932CF66677AB4EEF1BC91039C2F66B104863986B7CA75518
FCF4740F95EF201C0BA8100CCABCF56672398AB8BF4806C61442FFFC285F9640
52C7D8502433ABBA6374CE96C956BBF7C91216D9DA07F14A378B308F05D8E216
AD28B476C2BC4C6EBAC24D83185BB86DF833FBD7158789A638F046E0966DDDA4
67FDE2D4C5D8CA6D25308D2BA044F618D7181F25CC981CC602C9E2BFD7C5575B
F9B9D23D3CB198EF7553F793265B4E992E316B4E4D34D348DA91640C8038A813
8232E92EB1ADB8E291B92943B485758B4AA264F37E7F9262FC8C671FB33550D3
CF542CBB5561E9AF3C9B374D73F52611F17AAA550E93CBC36BFAFA9FAADC31EB
4276D688354BC5F1CE123DC8A4E76EF57C9273B157D4B16FBD3573FEAB355DBD
E655298F1EEC919B75ED0EBBCCB03EF5F13BB2C4F0EF5A35DFC81258DB4166E6
EA59A4BD30F90835BB5715353EBF1CF67342F6F4FCD97CF3756F137A237753DE
CF6B9C18246DA4A71D431B936796E59409AB7B4859C1F81969208D6C62736C80
28A8571C6C847FD4D9B7D4098E4B8E0F6C29D3639725CDD77B26974BF2BBB477
E244D1CDE69CA5B88A304F57D4FB2FDEBCBFAD072BB78723076B561E0EA56A4D
BB3E6FFD5DBBB3D96371E249B935B14C1862B67AF2E7A23883BB2994826A94CD
43E3B7B8185E8351434248BB842525E444D623594F9CCBFA68E1E503B34EB323
D6AF16C4B4192A4EEE4FEAE252FBF4D680943457BA43EFD82EFB753CCAB4AF4E
47049C5D47A322026B24CE26A3113B9B8EF99593ADD4A5E27BD8D20189AD7B34
656760E61A757C56996789E4B12F56246063C717EF6E9E7FE61644CF845749B7
EC0CB71B3E92A7735B36AA65C14D09CC44D967342EAED6779CE0FF2A640EAB1B
DC36E85754A1ECCCD1B930A2439EF269055E7E139BDF6ABC4F20727B9371F616
2AC51A6AD727D9C7CE79488F153C2AFE9CA273B5B70FB0586732A409C2F6DC43
EE3F7DF88A171692E9A514F9C2EA6D4EB4BABEC25133A8034C60AB4BCC8AD9C2
C652C992BDF5559A3629363F7221A561425D9D6B7361098CDFC43B1868E47D60
3FBA919F8E15887B5EBDF162073F0A400BACA04D67CE6AB05B8D2852F440BC61
4981CEA35234C6E78F7D3C33A6A356C8FAD1926D678F40D096BEBDEC5A9BC079
BE38E9AA7EA122B25A2876D30B7F88F0CB30A31A3D3047267060A8AC847883AC
76FD322A43BDE87D79FE8097C07E5531CA8FCEED50A794BF5B08D0B6E2FD051D
5AA2C26316335707709A91A70B7401ED336615E9F77B8867B8FDB5F81E5D42A2
7D3BC70BB815896C3C727D60EF09A867249D5E0B9DF531CD017A2891B77F66CF
DF698F93A69B7A2CA831F04B2186400BB5940FC101422E82F4240889D24EC3C3
294E4A0EB5965CEACE1936B71FDBFBA2186C85A9BE1AA786EE31DE1804389129
FF2C430A29467E59230877137F88CC0E3097CBC8CED728F194FF22B6F40304D2
12B6E7A84CC717F2EAD20B165906BB32FF7970D9945854DB6ABA7ECB21E42BD7
299008B6D4AFA04E78C98FF463EEC58A2606D55D937A97527FB7BBDA18EAA241
DDF92CE9D7C1E5F2EFE5914DD87C840AC9F097E4C2A64C738BE824B008DE628B
3B0FDABB06B4FF2EEE05350A346F9F0FE9DF9333BE17E37CBD332EB57640CA48
78CF17E822E395763E90F1BE08C47F7D1C871BE42E5CEDA6AFB08BED69072F00
9FE4808E6120C9A6ECDB5C9BA2B9A441DA122921AA16E15FB314649E1B48EDCB
3ECE7A948F758BAFA69AFA3BF464186EA9C5E4B14BF26A5DC40551FDC72EDDF8
5582683C6E91AFE304CA7B586F197C9C0F4864B8AFD2A1337C8ECBEE06CADFD5
806166762CE354AC81182B4BCBBE816DAD78D2A4559277BB6DE8A71A687EEF8F
EE37A901E96BEF0A312E31B0BE5AE9847EB70ABA558FDCC50FED51DA6BD33B0C
A3D75F6943FC34C52C091E2F1B972B143DA98F5CF93DB14805DB66731CE2B979
B8F4DAF1405B0467027EC16263B42A8BFC5FE098F883AC827411A37A52A9B903
B2DF83C8034D1537ADCC34722016522130665B938EAA47702427303A2BAE66FB
8C174FEA65BD1C2A9BA0688D6C8E8456D5A32DDF9550058462FEF0DD94C37A1F
222FDA1D039ED92541E9E6473AE9140BEC5F32565DB05D6BC44417E8CB8E2472
EF2624C23DF65B86E38ED0BE40F822BA1ECC9339131AD6F60C2D6475E33A858E
164A996FBC6332E5FB95EEB520F94E0E5F7CF9D84E0EBFB0804CB5C11F19E996
ABF632C239AFC51CE662E3F389DC15130644BA4DE2CF255C4935FC9A9E435134
864DADC909A108DBB947EB72183E3EE2CA07EB3D3FCCDCFD756FF77CEE11CF19
31ADE32AE3633991E13C8FF6E3C32A80FFA333112059D9D4F36935B24DB0AF72
D21AE33BB46B6451A4FDE93962D3CA8EAEC79C43139C271052ADE7F788203C76
9825A5857A790DA3F35B144C2B56A4EA77586BCB00B117214C298E92D4FC9522
C5C5F27699CBE2707FCC2B7BD4AA2F17B383BCB08CB65D54AF557F7F294D17F6
7F79F4121A61E4FD557161F8BC960ACE1E67E718B90FB9ADAA1D36E5027D67A8
9EB217A642A5B6523F7CFBDCFE76E6FEB489AB996E582220B21D0484AA03F55C
B07EB6E4C2CCC138E8DDA571EE7C414531140D785F1252362A8C09DDC599F8F0
628482F888FF14332242CB2389559AC080FCC1A392452B76764CB09F09553CB0
3D2F880436B9DD1D71BCD104403C5D431EB8DF660947C3BFFC91D244DC85481A
59643044E28E299787622AB1A2FECFD8B025C2CD224195F91A18B8B8E035707F
F2736910354BDAECB0ADC75C71F46A5C4404BABC9ECDDC289148B25E8D0C9EEC
30FE27C9D88019A42FA2AED6C0A04768FFE0CA6F35BD97586C218B55A756F03A
5C9E0B446B5DD47BB5D12845B3155428E5C18B6F8A34FCE4B617E8459380D70B
0A4905D717041DF12E948905E2D850D697BE04E8C724C13AA3052289B5EAC79E
8C71C2C784871083A4E385C64EDA6E8D9CD53C1E3E2F47B265EC4F5C9D2EFFB7
392DADE035B51EE62752531EF9FF7261E48286E459A20A2C92A3BADC9E446066
E1663FEA690AE89101B40BDB699A62FECE5AD18A318EBC02A2E097B9D28D7580
A81C759907E64CB1B7AFFBA017F1D04C517645CC5CE80BD5A43425B7C87E1D24
C34E9E43AD56BA6B5B915CA5EBE6886D3893D29C3D8BE4F0C431D198D753B688
E50536268E6A18909C3145DCB406C18A093991710A31465E865CC0F4D99541A5
72A600B027C08C31DC15C46259230A8420AF4F50B43C1FAAFB0C3288589D3367
DE545C6E217A8D446C0F3EF094840AFE537D17A838DF109AB7631B321258281D
AADA221C4D03BAA1CCD5A150AEBECBCD412A7D6A0F9355265962B7A78CD99408
4F061342BBAF0F1CB5926568BFA9207F77801966DE4030AADF92016BEE10A8D3
F831D19E7C99DCC73D03FBFD0D4EC35246FA86949D7245601F7CE6149875C5C2
E072A9C7294A0587E84774F6B4620EFDB24DCC255951E05DE00CDDA4763AAFF2
692126B4FAD8FEB10D1F22FAB247C46BEC449857DC4CF794E41D60C88AFA993D
EFB4CA29BC51FB2BC0464CC60F14FA10A92284DAC66D75252DE2174E5FD4A694
08D8E7EC4754A31F764D68235EFE219339DC5A8FEEBF3D1C0FE1E92237B462A6
59C848CBCBCC95DAA340C3C863C430DC50F3E912AE3C3A0541C76C8BD999C0C9
8E953BFCCF393B728A6C9AF778B4A8AC4B7453D1FEBB6A127F69814C79042329
864739637BE2400D66DA14B2535DB1434647892190CDF8111FA63CDEB382371E
512AC1D59062E88B42F9675FF9F39812A8177DC6741803B651C6BB854D17244C
8053A206220152C90348CF590E59E965640810BD7C466F5F433EC555E83C466B
698F5A24B5A32355119A0FC4A9CD665ECA7277148AE89168C5196F3B0BE5018C
EEA86FBE5B2B3E46711774FEC1F777C6DE60128B422B6C3FE9EE339CFBAB2C86
6D8E21292ECC3FECA9329513ECA625CC1C5FC3AFB291A6B75A593FE2F9A863B3
F62A4266E23A13459056C077EAE6F2F7D7F08C8C6C6A9F990892C2D7E95BE91F
C0E31DF3DAFB3C16F472711443EAE5E9F00B1A30FBD0D4A6DF6FA203D1B4D3B8
779B19DA95F8770A8AC28AB106B768F1AD074061E8F0406D7C42F9452AF3B1C2
9FC24641BA7E32CCDC0E9D6F4A23BA287FFE6009ED3444794D70F85F6D29E273
5FD1D6A0D66F925D3F412391BECAE636D97685EE55162C76578255BF9E7160A4
B451DACFF8E13940C82DD40FC12D5C84BF11579620DDBC7C22B67C333ADB40C2
8AACA1C46A85FCB0B46004D5550F42CA253DB791AF07085B236FFC8FA7EADB08
865836B98C22DBC04A91CE237B8ED9D9F44A085A46AF3F31BCD6269FCB4EB963
2F91D799B2E4BC4F39B3490C19328C34F4C7741415898C07564BAC8E96B7E3D7
B75AF7198D57C575A88EBE51BAB28FE9FA9445769232A2F7B5CE59D2809F3C39
FD530508AA55CCC48829ED9E0004C544DD086A8EB0BB33851B932DC90880BCB4
BD955057E2C94BD8F6B16BB950947A3DBC73AF1C90CBDA109F6CCC9B275F869A
BF3CB604D055996B79C2E6795E23452881DEA6255133A2744311A145364BCB37
21B6370725463D929F53E83B46ACD6D1BEE5A069FC2490E9A44648F3C15DE114
601C08CE15464955A5A77A39E07949FC929B28870FA8381008D946574E0328C2
E864DE81DBB2DD223E235930A60846247C0C8E5287234F09C3FBDBB97902A7E8
AF3DB7E22D4D56FFF57977D929DC9CC59E5E948A22882BAC405187207AD799C1
260629F7829527ADA1AE22778230E2D5EB6497E5FFC3F42F921D984E7F9FB875
6E55BA2372E3B035D28F3590BECBC508D4EC5EC3351CD3A742CA7070AAE1C43E
988AF2C9E3733429DC0C6D09BE359831087184E41CE590F9C8EDED3799041D5B
A2C2C9BA623D7424874E55FC5358F9F242AE84AFDC5BE86C0A7A3AFBFE040101
F5F3E2EFCFDF11D52E8D4F1FCAF25E31DA1C884762EEB3EF125C2EF65363C8CC
F59A13EE858CC59EC3F7AA2291A5E70CA38BEDD9CD548120766D593B7D93A619
CEA9F8CBD5A4D935396F4AD193AC08A595C8C4FE59D6A79315460A9778598C9D
82187356853E0FDD936FB446D1385AD90DF77D9060DBA3F8640742F45D2BE906
B1955501847A162A53371BD3F69A70793D051FFF5B94C59304876FAEF505C654
1197174C8AE0AB34792AC8573B541EA613909134908EB91958D7B43EEA506E0B
4A36A18E25B5BDCD74A602D97017393DC2A256F557DCBD0CBDDCFA83A5772C0A
CDD88E03687F3DACEAD59ABD78FD41E2AF19079CD73B31F9C541B744E1392FDD
6F261EE615054441DEAF68360901BB1A762ED37127DF2283B905B9CD7FE4F2F9
2C54BB4D7E47CB31336E00CAEBF6CB3BB923E06AC9A1AACA4762B8EBE31F9952
F450564FFA2192AEB59BE07FA9A8B4C1D1695C67B0D2084BD2CE9D78D259C69C
9A4AD8F0BC2A6D28B60C36098DC23CD3D78C5E29C73452F433135B9F72E13A49
97830FFC316EDC1E2114CCC7A0B0A762E8A8F95F922F3AE5EFB5D93860886ED0
1600FE4FE5B6C87C05AFA7DBEDA2A554D4B5C232674A9840F94B9CC170284FA7
1225B2BC8EE4250364FE5AC95D316535E1AA189B13BA39FE835CDE2C0A5C9A1C
1B39778132988F62AF56BB1C140022F1CE80515086F457B5AEBA634AE5C75971
733044D64739B61254002A2DB1C9F9FF6A9DE9A3D778A6463E16EABB4F047AE8
E1C15ECA68CDDBDEB160D079D3E26D36802C42491036AA10A473FD189AEEAE0F
65A634C35F542BAEC088C9E75B209A0D1D50FD4944872BACF33694F9277E02BE
D8CAB6D434D089639078A6E2B4611577FA946AC005A24A5F4F7677A67ACD7851
3065013A5F251F4698CBA18C8F5C09614885AE35DEBB69A83DBC6A3F47F75818
3AA34579531F8CD58C4CB79CFACB637FD78047E8507EF8D68D573C8304004786
00592C2FF2A519E5ACA10F637832A0BB4432250C17C02A844CD9F42A31F6710D
B8CE763A3B9659F8C258F320A298E24A387EA177CBA83C8DD4DB4433C967C2FB
78A2F6154E6384046972A3700BEE2818ECA7F0655CAFBEEB7CE633B880241595
18783357F86D30B779B2EBAC3FE77410A768936DDE0796A5DE7BF8CD20371A74
5A1AABF03B498B7E4301006F5A61B99C10924C20563860B1BF4CE0098D167221
28D23378F9FD3F10F718F7FFA2F37353B078FBFB64DB5CB767160E4D69E0DA14
FB11C5BACFFE3BFDA9D980C1361A9D8B9D4DE93829BD5771658E12D10B5B94B6
7BCB31A90E674993EB56E41F7F2A40728D4EE53A37365EA54DCE548ADFD4544F
2055F67F0ACD49A525DE835260C8569B437B93FE55D79C954243E49E2AE538A8
469F809E3B0565A1B2E8CDE5B41853C84DAB11F9AAA3E7A190E4D7EEBA59AB6C
387579CE1377676B975B2D4A0AD62A4F05DEE05F1EC55930D3AE6DBF8004EFCE
5783854FF5E2F9910448AC2BE5CC7E6A40B0865E835A7F9AF12D871A9D5CF428
801C935CAB6B0B33BF674F75F8CC11C2BF0B27F6E7217D171A060FB78883EE20
AA1CCF60B75EF14ABA888E8A86017FB9100ADA3AFE7425AE8C68BA28B2988B10
841910B474F40BDD818D5045261CB4C11EC19FB3615681265BDF97A281B6DD8D
94F708B97EA9CA6049E0EA4D7BF6CCE6D0EF9731B9BDB35B9A52934AC46E268F
840DD5B088B31A0FEBBD75EFCBC76F9AE5E10940A366D695DDFB929E2A4C99D3
E190499E8CE1E1CA739286C1F3DEBCBDEA09B49A6BA842A1A245C5F14AC86DCB
FEB4648D9FF84D5E4E011AA1E25A4FF63F69044A4B96BCFD90D22F5AF55FDC32
932FA3F5B34063E50B3056452810F9349B099A38501F2314DCF08578A30A645F
954BFD62F54A6A98F74CB852D6510B5AB1B30E1EB34BF91300CB89C57B1EBA59
7184F5E0582C2DB209479A00CC3BF9557BBA97CF0CA0AC1804F22510987F3AF6
3EA39112805B4180127D394BF0B241179F8CEDA90AFAE3AC40E3EC779A517C4D
6040629FA35ECF5F72BC11EC5509F8055B9EE8EFC505738B7A2F04130B06A027
6FDF184F2D813D247827B40DC36A2CBA4A701C45942DB1C91ED363F3201708E5
E6CCD078D772DD8B03B8407E5D1390C5E2CE6CE5EB710C0C4158958C7C34942F
5E790F563AE6A29FDF0F5F6BEC271ABCF830676F26D3AE1BE4F8EEF29954857E
0FA694D08D904CEB39290603337673F499C793D5433F6551DE2AA7178365C1A1
D3241D90E8850AB5144766498457EB73E110A8E3427CE2389A1FDB3F30FFDFD2
1EDFEBC9F360185E35390BDA777694895A258229654BFE28F3D520A3D82ABFDF
1EE572AA0BCA67416B2DFE8E990BE20C2D479A8AD498CC332F769C7A667DB07A
DDE071D0ABCE7FE0771E71BE78E2AB1A89214DB807EF6AD451029A28472E5C1D
848726B4230BB3F668AAAC3F13E07864B557B8353EC005BD3D9F7BEC7C1BA4A7
B0486DFB4058355684990536122332494404F56BCF6B5897911A81139FA53735
D6AF1EC54B3994EA142AA7C9B2D68E0520E9FC0BE0D2AE2773447D0806328186
1DEF54E530279E4DB9DDE98CE3D3D9D7F36EFD601220D517CBA3A1B1F375F6E1
027AC6FD965368A5FF918A176D4D8E22EAC333D5EEAFDC96511ACD9866CD17D0
C43976E19764F51CAF9A5A6DE60E6CA83EC2239DA49D23EC2BB5EE76CBCCBE8F
BE932F21EE27EF2B6C1E47B0216326BA8588A76CA59C5B4A911933A8A08DA1A6
5C5E66198BDBEF35D3BA55FFDDB2D85D484D761BD5F917AA4B0CAE436DBCF04C
74D32A028DE88BDAC001BC536DD71A23F2DA399A27F6CBE666D856ECF1CB1741
69652B2A4217FC10A5D5010758C64C5DD02C3B2D079CF29C24AF8AFA777DB335
DA52CF48F097E74CADFF24B9CE02C87BF693DFAB6CFB5D71F2F099C07CEB652C
32098C8C2589360E6C4A9A5C311BC5EF26782C59DF2A8D383A09280F36634BF9
DFDB4977EB57EEADE83466DDB87EEE621F8683716ADD7B571EF404937DCDC9F7
5FBA92ABD47A5E105A3F92C90ECDA75D56521090DEC4D187F31A27B7BD8936C7
DEB8AC6A2656B7F55404D233889A637A10C2F189B284E3195D4D07529CC61AA7
2B65C3BBEF8E5756364F9FFA4595334DE3A17654F1F5E2CAB4B2AAC7A152125D
D22BF58EE602B6E17F11CF99C1F47932E06468E5A637424DC59853EDF5E65237
EABD8B2A042FABFF483882103582209E9DB25DC6D28ABDBB2A12B3458D45683E
36C1EE1E404F4F6584C582BA5F2A3CEB2E36ED7F380FE5D6F3249FAB8EC80D86
7CC036CD64AE593B577C000A9E64BDFB0C587DF45C0D480E34D300EE501DD6EE
C702869029C91DEFDF4935667F35CC08BE1F342CBF92C72A3E5C1ED9933BD008
787A1E8CD54F218A9AC180881999997C04897B6F2460F70017AB1080CBD35574
6CD367DE0DA181673C773571925362B2BE1B1041C5C68C45B71A717B81834A23
F54E856B3587D89BA1939D7E997D0D0045D200A4B5D7338A9B85C82387F92A4B
74262D7729B2DD45824839717614269C0DB3A973CC43AFC2BE532ED012C3EB58
266CBEEBF12E1C740BF0387A7CD0F3B55792C246E2E3A78173A54573CB5663DC
C197BF4B50A727E39FC0A268AD04B2F99D1ECB377B8BF617581B0815B64285D1
58937BC567347ADCBE4A0F70C84A67CADA07EA907BCFABED24C52CF93AB1DA56
AD02D6CECA4A60E4285C60D97F7F07CA3E40FF22E49508122C6ABEEBCF5295DD
1DF80E51B967C2F79A4613D92363876088B797CFA81723CE0D40998376845CFB
620D70D860F3D8A69C4B93D9317200419F673E4C6AF2DBBB39FEF6DC3AE6AB54
36D0CC4AFBE18216BB13E034969900DF023342C9FC75F522C40645058A7E9FA3
75989C9F6CCF7832639C870058C8994A992E11B6031783B9E7FF985967518101
732F8F0123285D28FAF035843EA4C057681106E6484F1CE2F236707FB540E7F0
1D9BD148F827927C6509693644014E579BACFDB7DAF89C5D10CBC2237D480ECD
8AE0F36B68AA8C5FD2E0E871DBD2628AEC086D37C75D81CDD22A8E991888FC44
70247E48F7CCC197755FF988CE3695091311B5283D45A9FF051FA42A12BACA33
B2FCA14C13768537E5F158F6B8F05A44A093EA73FF16A2F08FF74A20138BEB2D
0B2FBACEC65A0D801EAB3A54B9033E2F76BD601C44A1D3E4391D59D13810E0D6
8A6141B270D51AEEFAA1260D71E966D27498A8D8F7EDA2B6E13DE7376841DAF5
6BA40C621D4133C6B3F16A9EF4C694C124E3C0345394D2ACA81933F3C9923BF5
DE57AE1E677C9BA48F730C2A8C551EE899E768EE8A0686A47E3EFB083B3F7A5B
B9370AF8596AE1A24672BDC1FB12C26A0368DECF83D245E58F5663AB8E5A9C83
EC24060AE2D76C692678CBF5719CD4E8F232C57C9D4DAC9CD8A7A770CAA8581C
266CE0F84E68235F8D95771DFFCF89E918F1702F5867DF3636C4F5C226AF3F2A
59A03E715AC1329D7087AE7FA7566551A6F3DA2B8D8298BD9A3A98C5081C21E0
936519A99620B2750C297EF4B5191EEDED7DBAD6C2DC94C3FDE7A9F8FCBAA2CA
F3202633C2439B0F17B5F84D9A7DC48059582D24A5B0115F2DB4BCAA7B9F3056
47F476751FD7979D8C74B1ACB91AA2B6F045BAE1153548794D9232AAC8869689
4BD44A8ECC30889FD3D14329ACAFD6E7462891DBF8004B6F3240C4568BD11FFF
4D6C1059D2FF11546E62683AA35636606BC8FBFC1F3930B708E9E73D9E9F69FC
7147D6F8064BA73A793AAADF05CA40B85CE36520D26338E61BE49BAB2425F778
78BB7EE46C628D17082E53A81D4027605C67A9A27FEC0E324227ED29B9A8CF29
DED1052D5A147F0A784F0C5A4E1934FBA251CA55B73D76C603BCB6E74179B5AD
81C7712E7A631C736E5371BAC4E046B7458940203FAC1E30BAC5EA8504558896
D2CD51B540274ACFBB6A476ED88BE7999D64A4D0DCE81986BAF8AFAA241DBD42
E7FC2458BE65CA610634B65B9BD0784EFA1A9BD09ABC04956B86F9B706370F4A
8E573C00E3309342340AFDD4DF9670E52D7342ADCB76DE2EE5F139D6F7BC4BDE
AB35049A2811FF87EFB04ED132BE4E6D5E670EC10649434F4B2C81611E89C732
60D470E4E52363A60C0C5A9EC51A1185D758C54FD608D8499BB7874727DE8091
C6FE417204F047097E042AF0255D585BABD246585FD44C7FFBD5B878504A44F0
8B0AD9A6B241473F8252E34FA911185BBB34A6EBF5F641660FF8D6B0D5027502
47BB25006F466250647F37A36F4F39BB36B38CE86196A8838829AA72E7DAB351
553149015A424DEFED99CFC4E44ED5ED05A828C54ACBE6E9B58399E437573DE5
3EE72183F0F38AA08EB6937BE5560EB1F29680726F63DDB4ECA19DE774DFD673
1053FA1402DAB650A20BAC294E4D392E266D5F57CB4C3D19DE6FD999FF93F10D
C49A872AACAEC7DABABE1EB7F65A47E87241B3258B6BDD11A8CB27578D696F79
4DAF2B18BE63F6DF79A81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFDD6CDCF
E362567ED47BF94B63D67A9113921AAC23AB19283EB5F068AD3383C8AB94ECDA
209D5C0F95F246F3C2BD88040B92C4A8095C39662ADE9DC902AB7F8884A38971
97B73847A86EF72565C43F022989DFB8689451657AC0723C0DED7025A4E8E09A
DEFD471CD0F5B88BD48BA694011E44673A17D6C5E3203CE27B1D963A5FF32A14
4AFFD8EF0F4FEE2DF1F839B2A5D900EC890B802F4FAD459D4943657ADD842FF3
D6D1143830B37BCC83D64E24F517ED326030FCAA6F3262DCDFCAE93B9FD3FA6A
2BC17116FB9DECB6FB46371C045B266FF717BF9750B2D2505E80A48D419066CD
B888332A679835679EDC64A8B873A7339DEE670AD4769B9E763F69F5F53EC6A1
2E35B8F620A0139D762DCE5166E3F4D34E56D7F9FBCB3A5BBD0F42D0CBEE87AE
6D68A4C0336BE904ECD31545882B5B970CC74AE8A08E28A3804934FFA3EF4A16
926236601A02C87F60FDCD5C26A477D10A511BF3BF9327C9C36E08FD6C00C5A8
FE4A68219D37379F93E5A5D3CD9985D3C4ABD2EC5989B1CC6E2F95B44BE23CDF
0749C17BD54BD30DBC6F9D76A3672054A8A2DCF22D6F329E2AAB888219F6137A
5EAD65B433124BA3A88365C225DCB7C07A9FD4973CA9936C7CEBD55EB56E4257
54B8EA76F422D587253AA8719E0B1CF5F8398E7A333FC6B7530C9C3328EDF761
3474D04EDC016037AC42DFA66A3BD6DB47042FCAD926D4D51FB2F9D578755F7D
D891F7CBB7FFC71FC82FE50DAAD52BDA597E84BF613D1E4A1776969257F3B7B4
EC914CB12DC9821BE8778FFFA3D1A5BEE10BE1C89CE48D96B5B46AB0BCBDCA92
D786D073CCC2DB54A7ABCB6D3BCED34EC3BB3EF85075D2DB23DB4174C0BEB3C8
E60EB0B3F118970E6C09E7ED70B816B58A62877B36A0BFAE5E7D1459BC80B376
4DFF696A03E46BC6EC917F5F9D13D9521CEA49EA4C81AD2CE3DB0B46E25392CD
6FC3BEFB27A960CC43B18F00C0B86C38CF5F8E1554E4B6108B1BCFB5C7E9E70F
8CC39DA0ECCDCD40CE7AC49715D8BD0A6803D8B14E7552C928BC4240CDC4A307
90A98F2ED8F648FE2285E3198E910A616FCDE88AF09C8E66A6F20634ED606B07
11FC7A4F2D3C5674C5AC5078897A329C93F2EE14E3A98EBFD4C24AA771835CA7
58618A721902BF8DB53DFB4077401739999D52E01B0AE4D903524DA5A22808E0
5029000F8DF67BB8DDFE1727B13C4D9479C0CDE6DB23DD22858CF8EC35E9BA35
5BD413124FA95DC9A54FC4D5354081979ECA823142B2E0232969B8A8DFA23D94
7DD947FC3D3EABDFB3E9951B189D6D909589528DBE0C561289A1FD42CF31DB91
147FE91F51CC41BF43E129B634C5A56D23EB3C4A6E163F86E1282A12912955A5
8507FE5B38B9A73647C5AF4395F8AD7A723EC103C59607DE5E15CB2104827B60
B8DC3BA7249C52BB50489637887844B91EF7997833EDFC712A6BA1803308E8BE
DF458000AA7477BE9173704910C3FDF052322E21FC7551EFBB19B3EB34222E9F
6A0246D45C9BDECE37D25BA38E1DF56398EBFB56ECEE41D405A20F40C6438352
BCF7B334E90E1996E442F95BD3366BAA540CB1368B0A134DE0D045B00FFA4D2D
EBD1716CC234C4F66BF8DD12B77B654FA8C6FAE137AB0AEA1045EA8FC0DE95A4
9FB6B4177CE8CECB8FEB6EC5CB1E2301B2DCC11D878A3A0E26F58BA375285A1A
BBFFD5A0FC0A6DFE97CB6991FC5DB50264F98CB091B751A58D4412A949B9E6E8
CBCCA818AD96297DAE0F90750C0F2D3B286B540CD85D2F9FC229DF4AD90CAAF7
A0B94495594710F7BB631D9C72CA8497518EBC05643DA5F9D1A2030F95C95E9A
39346F176906FA594EF999C3FEA429669960EEE33E1150A0FF472D7A5ED0C0A9
F051084E452C075130628DA275FD4F4B20748B2DA4315C703763D6B35A4836A2
AA71B39B7AF4B8BB2A75EB16BCD26BD752DE5BB21DC9C7FCBF815D30B6F74D33
6A889395E771CEC29602496D2F4CC30058602B3DE97870BB576EE3FEB641B33A
39173CC1AFCDF3D34445A4076FE8A8CB29C6584BD2BCFB94C7DF0C87B30FF805
CD880D57B3C76F872FD59B4F9744AECF49D237D1CABA20A32B8C6655D93EE99C
369A527E8B26E91080CAA7A663417DDEB103FF247068EF9B9B43A951DC93BDAE
F846DF6311E088FBDAE805AB5ADEB60FEE09F826DCF07D70C03F176DD4C1346E
54223361FAEEAB2B7C4E180A3E4FA1ABA65857019909701293F9E3E6A2C1FF48
B5FE9CBE00356E030FFD1FEABFA10389B0FEBD0B26DA3B909CE9A4FB204D7735
ADC8F265D8796C8B7268EFE5EE6B0CC0781AED1350BEEDA28353CFC4F70DC503
EB508567C7F34ACED55A535E0B2C29E5081CA0A9F1A8ABF2C8E1C8831E79BCE2
812C0A6D302B23F52108D2C5C866C3AED7982F20C398F9E16C935727D9602D4D
8C5C4E52F038F5EB123DE06B1C784F381DDB9DBE2A0A4A595046417B3B0363A9
AC70912A5540F87F4083EFAA0BE30367B512F1146A16B5BC5130AD1ECB85068A
365DD2BEF1456CB937C25EC824808E7EB83C015915618AEC56D17C139D07FE23
F038EEB1ECEEE2C6C6FE26E31590FA1434C200D7F343C625A5F20331AF4FF731
353DCBDBE248933DF4F2C664871EB1A07B3A6946D45571FC760DFF6A55923EC3
6A606C0EC22D17904AAF144001329CB3826B188EEE3E874DFBA4D875BCD1C5D4
492AFEC03AB3649B0F6ABAA68E8C882F2910FA56E5006D6CEC4874090CEFFC78
ED0A50085840105AC946A2667805EDDEE005AD1BCA7F9663DFE6DF1C63015A80
35A9BF1DA3F832114E67896323A364BCBBD8965C1E7FE952C244D78BCB7A908A
ACA1EECAE6A061E7A0B90629040B2BB97622C5C5D8B3E64238578C1C38811224
409FDD3819C98C395DD7C3AD05DC5ED1B38B00B195D30C1B286BC4C0FEE3F61E
CE6D765002EBB2A1D4651975A1AE548B20D5F98A3B0BF23D33B7993E98FE31DC
936A3778F5C7C882B7BF79F5205F9E9A1EC74128D2448189EEA20B34FF668EBB
8778FBC25403DF78F5FCAF62167748A52D77211A860F0CFEDA2199DE30E50EC3
777E8D081348D10296D1AB863C95186206F7453C174D514A9C4384627AA14B3C
6CBD50988936ADCCB5EECAF200E1F890B4C9D9B37E0C4A117BBD21E669106927
2A6AE455B1383E0F02CC9E6C93F62E5E348A37CB440C6BBBBA505595ACD01540
2B06C2CBB2CB91B45D00DF27E5A47692A30E4A5D6E5FF90C7382C8BFA25B7A64
8D21067F8F5DF8B0BE7AB452B2C4B94917B90970B663D6035B274091578E57F2
BDF8396177D83B6AE2475B45961043BD8C7908EC27927975B3C8FC5D5856C4CD
23C29A70F8E71CE392DB0DD4DF451636E19BC9CEA795AF21EF3258E5238D15FB
2F43CEDFB38717C0D90AB406A2F62CD9027E5A7B4D1725BBE30173D395E1D941
320BA2A64B42C1373ACFF3D54D9C78E1AEF561B5DAB94DAE398FE3245FD01186
A24108B5DCCB2CA4B5EDA26186578223C50EB478AC4131EA33FED13382D0D84D
0E0B99B7890219840188ECDDB3B23A4F4ED5ABBB4DD67A03CB7C80B2F7C83C90
746B01E904B4E002A992E25154CD9C9277AC6FD3CC08A5CC35AD1A28A299E810
6180D91D28813E9A8F6B24CC94A37ED7FE37D7D03026506C2E49C46178EAD742
4BFB22B681A69BF0F2F6CD3E4A4EADBB27890121402E174C0FEF0F7C708372CB
EC77299D1ED12E37A220CD48F835135E977EC58F8F1654672123916E7F4DB4EC
6A7F0BD9D94C742EC951D87181CA0F7E17A9F6B2EC76C259792B97B32ADF930A
9AF712ECC55B31CBBB712BD4433EE4297AB54AE4B4922E904205E3BE52815366
389F8DD8C3C5F7CE2DD08FA2E1EE803F5ED9D9D20562309C8864C15343B4356B
57F433FEC79B4D853F4E88375ACC6537B211AEAF32BB5631E1797594568ACF58
264F06E2E9CE1A5F6FECACFDC2BEC33C54E57970BBF8083E18442269180D891E
38C10077F1BAFD0ADB621295B3EF67AEAD84CC8BC297009EB5D21EAAD7AD25D1
5A3D7256D18948A1809D2DBA95373E39D2ABEFE8D35A165382B84D71F7651E4D
F128A822D7B2105A740A517530F27565EF2D8812D285B9B59F8C8A49FB435D45
7089D988C68A2F65C6E8D8541274CDC40D332113F6273CD90811BF959E4F8348
015D1F8D9591F91F6A2A228D82AE66353911FD032BE7E564473F851F794504BF
7C769AF86017B703F3F57C153783880CFA8F10AF0867C9A9C8FA75032BC8A193
0CA75318F382399E28AB06FCF005AA792B9793E3E2CDCD508876E200F3B1C6FC
0878C367E072994B31A6E70BB982DE2C8C9866B0758ACA2BDB182B76D3CB7FF4
EFAC1D126E5AA128B5956F0EAAB791D74FA4614BB9A9DD0AF18A2C283506A625
24C3113CEF9C35EBFA7C8FD26CD774574D565B2B29AC4BBAC5FA27952ECA2B1C
56E5E5425BCA9FB60C5F7AD4A89E4340EB7620EF3AC87AB76AAE9E654ADAF5DE
725EBF118B25A9BFE298A5EAA707969EBABDB7A9DE9B347370E70DC93209CF12
29AF428F3F75B756EF5F32A4CBC903F7540F742EB5C68BC6A3D23EE850C6380C
4E25028F5961869AC514E4DAD713E3F6E675A5ABCE871F02784A8474EC78ED8D
89B01492C6AAC452908EDA95DA482A1E9029F1AAECF2399A9DB560149BA6AA54
509D31772F680EC7E350551D212EE5C806315866C3198F4DD44AD245F4003163
9B4FFB2B4B19F4C6CB6C360E01BEB6061CFFE8F3A0CE8AE64B1780D6CF2331CC
D39DFB5289F4AB3E534B34595668704883E224185FE2350F004A860A3204AA8B
96401EDED514F2420EB6FD76AC858795E3F399ED5D0CD91193394066E7CAB7AD
3F3C03892460944E0183CF9C586C0C05119DDADD4B5148A1668CD01BE772DCF5
2FB02464A5B77F46D22453553E4579EDAFC86145AD326FB7AE2356A550266A98
4E6B60F94D0D57782A08892D58E1EF34E322DBB95204CD70D96042D805A34C3B
7E956FAEDC26A6942FA66ACA70D15949A766D377EF185A8B4322FAE8541B7644
5884DC72762D3C5B471CDE2C3225FA6EC550CB34928EEBB4EE9BD5980AA8171A
E7E8A7D0FF290C4F941709B11719C913CE150BDEEC2207A1D87BA5A12F4F215A
200F7BF1528F8332383568F248CAA78C44238B46CB9F1C3BA35D4BBD7F3C628A
78B0925D47795285DE9C1FF8BC4D167CF6864C36FBE06CB968CCA5E0DD8E74C2
5BE31A29CEFCC0E9BBD4E8B8BC4A9C1BD0EA99DC7E7DFD5DA5EAC90C8A83E5FA
A4A4E29ED940E942A2CDC139D4E592D84C42D74348F3CE1D8CE70A5C440A4A4A
5ED381944E3C14A781550DB79B71A9DE12DF6BA8087DDFFEFFC3E7D60B2D2D21
A1EB0E54E6D664D46BE56F025E323FF5703DFB5DAE24B0C91896F6ACDF79B342
B78EA18BF726F4DA6F46F4402428E4A6F3FC93B9F64BDB1C6CA6D4FF3EA978D0
D0CC42FB96FE7AA6003C7CA56B74865A45D3C820E6167347A43F4F35B201A9FC
B8A4B63D6C47104E62233CDDBF4C141FCFE9A907CD3E8FEEF8B2036AF21C6C77
D7048C9097C9DC60EC7F01EAB4B38DA5490B76591E738DA5D352C87569586393
CE3EE53F486AF84A690F56A09A3B011FCA13AB2898EB220E2B676CC73ECC9161
9B4C6B021A30A0F87D7BAF53ECD08D65DA3E778EA299CD39D8CEEA8DE5B97E43
233459B44CF9AD29EFA6520B5A410E854CFBF081425129F42E2FE3E717261A60
396517BA0C4B9A0DF0205001B776E5B1367AABA1EFCC889FD3180EBD5C1489D3
BE213D08A28F4F965C80C38C5AE62E13F910A2BC6B506976B434B000FE4A4A5A
C347775A2C12FF356F959D771C93EBFEEA9DE7B9F7E01BE646DF158CBF2C2A5B
63978E50C7A6F3F65E5E4F76DB86D4341C03FD0F8F9E78C535F0928F0C2A3E28
AB110748F3DD5440DCBE4355CA04DF5A475D4920990D19D375B2F047577BE16C
C07E0B4E766B04EF98445FC760CCBC60050DAC43F4B5F1D0492D0BA4F86A4DDD
FF737BC324E99BF2B41458843B72CF8C56F9CCA2CBD01D89D6DC2DFDBC8D73AD
FBCAFF90A40CB97F96BC5E088F4832543DA50FB12316FBDB5EC2CC421B8BF756
FB378A9C866485A155041E4E55808B06701AF0E82B86B250A60FF96B7CF8A2B7
125A0ED6BBAF4CAFC20B57735B516EFCC662D2848401822F5789F9924057554B
1A03B13FDAB2E80D58B526E6470547D05929559ED0FD8DEFDF6A68FEE370D37A
EE08B04D1CFCA5683C4ECA576ADC8E3C64D15DA14016A9CAB3E89CDCA254C8DA
17CC01A45A8F6C68CB0F12FDA76FF74FD8733FD241C9589080C78B914A03ED84
E0058B5E9429F293FDC53FC98ED03DB1FD7A90A8005BC0276057DE93F2A771C5
1D9FBC02A68134F11283DCD8E53C987D8AEB86130E52D84A0A19CF54FC53908F
A3C6EFC2C96BA9C9F7A16C3B9E812880C7E50E62BC6898AEE81194CDF00AC379
471BB817133799E501D4BA13116B9503E4134EC410027D0BF4FE0343CC2FD4AB
FF7CA58B286D70D2301EC8D39B5D11CF9F5BE8DD9D67BA6B71F21EEC5F69F9A9
EE867E28EEDD2B354DF251F3DACDEA36DED383B6EB6CD680C3CA9666A9D4E416
9D1EB90287C39AD29629F24154076885B3C078312F3D76182E820AA14F1F98A3
F1A134EBE96BBDB909FED8E0C84F5673733668FE80788D7BF250AC6EB34D3853
1320CC9790A9DCFF14F3FBCFEA5CC6A794F7FD7F4998057B95A6CE6AE4D3F6A7
AA9E7219E08B2D8C9EAD0AEC4BDCB0170157CA6702E622C05F51205C43F4E13C
5B801B91D29857D25B1B47F8774C82A77EF65F2E49513F2CED0B9F77B5EF8AD2
FEB971908B6E932D6862C8BCA434A5264E64AEDB87E18DCED1EA1D3669191923
3895CB58CE276549B7311C9236501F271717A2FED24298046E0F966AF97C0EA3
AE12B3ABF049DBA5FE140A414756618DD2ABD172A685442203EFB60D4161445D
B9463641C63E3D4A97A753CD4BB8EF5F03E3BAC77062EB81AC21A4570FA076CE
3564EAF4DED1B2EC17F6A56159ED342721FA5FFA979A11CC2E105E60906696E9
998F294DBC35299D22C700D924C86AB3FA8E1E3559FAD50A4470C7BD06E64A13
DD45DB9801FAA2FC9032C1269E2B6D4C8BD9BF08D92175FFF639340719363951
7AB16402FD61A288BEE171FEA10F1A89B25A3CB7415F6E62CCD3B249FF949F11
F016205FA2F74A193593239243496BE11725BF9F595BAF8A3E9BAD32A979D0B3
C1261DED89C7385D24CF54B6CBFDCCD8B8298BE9CB6197FD70563E250F9802E7
EC3D00374B54DB3DAB617CA8B941DACD48D350921326895248F262291A3DBFCB
56CC41634DA1CFE55830A76C6B248B214C9A339B2426FB0F8757D7BA2FA86495
C3EF5B308CB9EABED14DE2329C678A65F357A06703AAE682E41BEB21C7677714
2472F01A72D0A210523D1EDCD823DF8673A3ED82BB094CC6A60ACD9FC5033C22
FBD7F18C9194E42ECE55BA58F115A12C0D8321A2E3014B7E96D4CCCEC5384C60
97F43F0E70C9B5379C0501B3CEBD719EEB381991EDACCC3FB55BEB0995328B96
67FBEA36822C126C5F5F4EA286A6DC956D59BD82AA7C5760FD1319146E6D3022
1641B75CE0C5C8455854789CE6D478A7EB3B6659E3D29DEADADF069B160E9D17
5E0FCE3055DBB299CBAF527237223650B29EF0F50F8239D38647064C53779456
80907E49348335EC5CBB3D48A7650971A44D523F9DC8633F74130F8EDF790518
3644A73E8F5740DF99DC286CB2807DFD0D868A09540841E1ED6308F30998D4C5
AABC7884F31DFA1C43D4D502FF682D73588E5EF3ACD4C6FD980C9406E797B8EF
DE5FF3503DAA3183EA94F777217628F4213B55C112BB4EC57A73C47B1F9E2579
7AAFA8D93B667B27F8C608736D48EC6030DB1A314AFD211CDF059F134DECC711
AF569353F7922E7E99DF0B2CB4148C4D27F6E74D306D5BB902BCEC40AC8EB68E
5B0178F9430A348B11A33ACFBC3A9FB3BB3A11A1EB5B4600D0E077AA632858A7
16CE7699D138C23B8330DAC287EAAF4F14196FC9503270A1881DDFB7B879A44E
F28DF6A17D6226A70E373DA479378522CAE3BA0AF3955415CB1D8B51FA4A30DF
10847AEE3B191EBB60F2B0823AA7B831FA2CCD8700C92480EEBDD46806DCD614
4FCD1688AA8C5D7DACA2D5A5345839C0B0451515A5D8388E31781B178A186480
F39AE19A37AD9342B1C5B581FFB050FB068A410A3053F1083CEB58ED298C06E1
ECA8F784D73BC28B9086CB786EDBE881F8168F3503E2577BA45E18F5556F9D12
79C9300FCAD18CE93BC17144DD0B4517A663A176A319085EFA41AA09D8FD97FB
CA100ADB25D9D660EDD65EEC321EC2285C024D0BD14BA0831F2EDE3B4418CD44
C3159A4F11DE69464FC549304D355D3273122F634318B1A627B7C24666D2BBF3
38EFAC34668D0774B585A66DB5F239F11381B937DD86E4D6F65B597A4FF40BF6
687FBCE5341A6C3EF12D17E183DE50D5959C0433787A89416DCB98625D1DFE56
787B48D67133BA2FF7AF8A8599C758247DE525643F78D0241961D72A09F51D41
06C835AD5AAA2EDE97A72D7E31156385D23458051871A412DDC59A8BAB29B888
2161922027113C0F34CC9C1142F18CFFB9850E42D8EDD394E098B13A6ACCA7B2
8ED60B7A9A9C63E67F04AEC2BBD44EB478D5A85D3DE8A2064E7D89C3B7287F12
C9A96F7C3E6AAFBFD719E3FE6DB781BF8B7DFF4FCED44202DF46B68180F17743
6FD2605B629236651A6D77B82F3A27FC26CFA60F80E4E176C69A26525F6CDBCE
C709578D867F27B3A1A346BF147B1559E7958A656B1F3F6BC0EBC53E53E4E3B2
C028DB1D76020AB29B6177C3926AC35094B7E127A4344B3374744857187D6235
449DBC93D51170F61C916BDAF20CADA68CEB2133C5E3C556E5453DFA4676044A
66B9666A71D32581D4C803B54487389F47DEDDA4A14A3B0B45CBB5B2C1CDA558
157037E65B20BDCA5EB57C81832D8BEAA58EA399DD4F713D656EE0A3B309B6BA
98EBD8F95D139CDA82D0C5598CB8CDC9315FC86703B92AB34D013567B103AD1D
F6E353F5F7BDA3C080684E626C1FB2FBAF05A3EDFBFA7021A73EA20DF0AED23E
F1FC09589A846E0D98EF0E9F722D7DB5841CB75B684C93FEB40172A61D3182D8
16A662F303F2DB9DAC2C08179C9A71CD029869927BB55B8031D8DE43B7C7DE46
AB958E037B7885779A335531461630A27D7680B3353E5F2E89710EED72070A49
F2E1FEA7A1DAEDF59CEA521721A84B83A68D8776E01D4B1AD75612C9C807E57A
2B531D038FF1E16255036DB3DCFDCC741550397679ECE059D6719065AC277F4A
EE3B1617D3482B4C9F3B9EB93AF184DA0839C6358D0B49CD9F0A3FB99778F369
AEE2443FD0525E3469BFC41E342FF772EDEF6834AA4DF4EC502B420A0A0E19BE
958ECD964660B8E65A124F588687CF5FFFEC8E94BC39B3D4C61FC0692C9A5C89
DF27F9E7E745FB5D5E937AA4B98491043A6E4D74BBACFEFDFA490138B7A5200F
F03F5CDC3DB65636C3BDD5435F25F3EB0F8538289E4EA8F2B2A53E68BDB2A924
DC340706452F11954A21977992FF6D3DA56E5A8F6E187588BC1D35174B519A7E
5079080243CDBCF2B4816AAD6B0544DE81DAA3095E1EAEC8257CD8B37C3CDBAA
64843E232558482B2F9870679F67C0A3F787CE2B38E0A361CE12261DB9DF54DE
9A7CD52520A88B6719E50D6258620477A7D3C894DD22707AB6C6989D72323860
506D8118605EB197DF06F8B9502C93A54F689BA4BD428A5C03701E4B5515EBB7
281C122604B9824670AB3F3A48B7023DF504852B5883FD2CC9F3AB5C346BC3ED
12B101B35C3AF642417E06EBC15F22EFE2EE81BA4893702888D616020A083FCF
539E4CFC448DB87A525BCD87A697E2F324EC582EC0B7CF273CB7BD400A88DD1E
D1830F50D750C806886D4F8E31B9252007EDA6A48F64F8225C3629C9CD7E9940
B686070ED6F3380C4E8230220176DCB1075BCA87C4570462FB6D232FA7DCA666
3329CA6737A43EC14A4D56F7AC14BA0EB7E76AEE5BA4C5AB6FB96D89A36C8391
1DD74DBA3B2DA343A2A4012E201267ED962797B5BE93A17E68E2766906788FBF
8D1ADC58A2882D06CA8D015CEE4FEB30BC26EBFBFCB7140D418E5AF7496E20B3
A136F8B1ECB6764254874EA44E5DFB39B8502AF36484482FED25E6CDDD649343
87AADE7D0FC056E5A2BE1B4B6B6B4FECDA0084F4C01F8750AA2CAA7340EFF4CD
5C56277EFEC6C794D462BBE009C62C3F521B901D73FD4FD11794222008EE97BC
B60F2325D3F46602AAF2C66507E89B97158EAD3C1AC8D4CE212F7BC0AB3F807F
E1B6BFFD566AF8B8BE546E3A2D629461953F888413B92725DDF8FE8895B0DE16
66BA9537F6E88FECD7781E20C0597E82C67732CAA2054955CB19299E303E74AE
F0B2F936F81B8B2693D974EBBC6C56A8E448159F5EA24D05DD927EA8671FCA73
279DC65271B7A9C22601D453E4FC876D46069756FFA08C17ADA33296FC0AE1EB
D395A4DFF1C80D4F38AFAC5A22E9ACD120377E498F335C3D75B8E8F0EC860CC6
C4BF830B865B1E9A58EAEE827C495A28E8D8EEBA2194070AF49D501D0B75C7E7
C7554B4C21D31F9F2A72FEC0DC2E76D6E458002196BC550CC9611EC521A97243
213A05957B16FF309E4E6CC5338F6E9C127FAC827243D3175B9046B7FDE30EA3
4258415F41DE86C8F138107D90F236D3D236C1F614E59B395D1D9881C3673BEB
DFF33CC219FB8A7053349B75A1D5D04358506149130521D056BD6308B35D29EC
DF53A180B109077655A717B4CE1D54CAF80389C60495198A88090D796ABA2E8B
6B687D3D7CA285F8EAE9045F8D80A5675553B839F04D3B66FDF3666A91411B87
5B470C7F9DECFDE491441692122F6A4C33438C0C9229392445DFE9AB58C86523
8CC3FDD828E66AD9FC0C74F9B1AF6814687488E97F8537FD7091
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
9DC141B7F6830D6771F1A3CAE655CA173FA57D400530CA6FABDCCB4325478D0C
93AC7EAA9DF7605213DEAF94C7281D9AC68D884E15ACA3BA68034F897A2FFC1E
F76FA2A69CEE7F1E9543904F1773969F65553C3469FD85B2F2F89F0E547BFBFD
F62A3E47DAA4EAD6D47F0305CCDB297C320A48A3655FAFC810CEC6F6D68ADA4F
AB5DD7F61DB94072B0AB8F1ABF62A78E43E1578DEBD2D05109DEBBCEC64AC700
4C28C4F0A5E3A003423B9958C73D306B2B4A7C67A95F8B4E737992642BD3701D
39FFAD94524A7752560FE97B8E99A12AFCCC5044D989BCAEC863BD15CAB7CE63
0194962E4183C3838D9401260A743447DF953444B29D7CB004560D0685F73E87
72FDDAB87125F419F90D165EF1C2A06A9B7500C6AD185B4115777C6BF9C24D88
653589B431FB84E4DDB650C2F783594DE6123D3142FC5C99973AF211F2A2A05F
5A756073B85FEADA4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3580C547C2
54FBBBDC95998DEF2EA825E3BB2AEEACC0F30841835121B7A7D7A973F2EF67F2
795E6DD8CF55B9823AB2B15ADC328CC3AC493DE8C2F022EBFA14A2976D8E3559
B5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E9A716737B6BA413F846A887B
D1B3B89EEF73565F3D0D2D1E40E4C2811D37C9029692DF8E94F6FE39474EE13A
EEE65EC0E77188C18435A2E7FFBA595F0C054E96CC44F56301F6CFD2A7A42C7C
33C1362D901AC2B0FB255262754024729BBB2824C33C2FB07B4AB0E5BC4EF204
E240345C69F37D577CA917AA50C3BC9004C8FC0A5A8E517D39211861EFE9920B
3939DD770974B1929E48E48EB82274BCFE2E9D5D484DC7068B77CD864557E702
E4EB0C301062DB793BF0C98D7468E7D2C9EC10C2B121966B68222EB067A7E3C6
F0549768364D1935345EF4D1D5F8C6AE3C09162E8A4FC6CD4741B38836CB599D
F98A2468DFC2198D16044BBA796678C9ED23D6194A5CE79410133D40E5604C95
80910F6742AC40A7CB3E08E73FA1E15DD6E1179C390BC240DA061C9D539B20F4
FCFB72DD0EF634FB4137D55F76088819802AC0ECDE469085BCC3A24122DFFA52
6840EF5367946F3DF67C10B47377A99EB96C13C332632CDCC750FE6081ABD0F6
4DC19BE13680CC29CF0EF52F885E21F4CDF14F8A5BE651118D4F2436599ACD41
A728EBA6AA858A62BA34015E2E2F851AF557C8CF9586F5A809952F25B26C6557
DD62C2B52388A1B7B84A5BDD57BA0C39ED94DCCA571CD82C6E0BBE3DE5134649
8CD7D6DAC8936854A0E9B5873E0C43A98002905B196F919D54550933FC4B7290
C8C71C097F48AB5C03B5D053459D7E0ED44D117E1C942F56B51E615267D9FFC1
91A694BEB12CBF4EB3DFDA6A81788A92B5AE75375C8E3BABA0D234C04500AA3E
2F28C4863E4C426DE4581143A54D0EAF501057E3A9FF7B3D1A0671ADF319AA50
F054379798BC3C38137A81D75D5BE7E359EA0012AA5588403126BDDF5FC2AF9A
36305E36C2A2DDC690256D2085B1D4CB4BB93B1E736992E995B8A4F38FF8E7B6
0DC1EC1B6C746B6AEEC9D5B0D1C9641E59CE041594E0396A0BE7DFE162363F66
C0DDD904FAF6AB01A82A5E230905B36A862A8E30DE59B50522C8AEFA5451F931
870F2A99727DEA6C228DEDA6C25A88C4897BB9BFCE16CDE9E5F075FE4516E1E9
02D53E24B71DD4F1CC13482C48FD1456BB3B6710C69F0ABD2C8E0CD7C3900863
69D35D3E5A083C3E86374A2EA8847CEAAD3690C5D7BF9EC7DEE3705643B5F064
C6A8ED4630A58A2C74FF212B0A35CAD73632F8EE978BC33C8CB05AC2BCFE82D3
29D3A95F82D98F5E335A3E0F3980CEA094E6903FF9BB24FF67FD9F8598AD4F75
1527050258CB8B3F35F8ECC07BBB7E68F4BCB0B429D4AA25A2EE0287CC9B31D5
DDCA74AEC3B0951BD68B348D9C3656853E002ABC509706C00E045DC552B2E5EA
058D326D17411EDED514F2420EB640B4AF9CB0844D53C5BF81667E78A1837931
98838A2416018B583A55803F83CDACC6647227DB9302337CD98D1FA385DA5005
A64EA3E34E0AE3F5B34DAE23DC67DFE7BFDA027A952ED903E7B54769B3C48544
FAE2FEE14143654B5371B4E2EBF9784F8835D49F4E72B78BB5DFEDDF9BA465BD
FA74F2FF3B6E50CEAD45ED2C0C24E1B13B03CBA0C37EC251BD452805722C04F1
9A3B3C950F5252385EA3E898611BA9C4C8A5E0A6AD4E40D06FDCD6EC46527591
BFB94442A0146D8F93A35D8AA216357D0F96B8C07983FFA8FEC41B589A018331
D25E5B0F594F5C418739003766FB193DD7B97DF0F9A11121F9383E9A4D7A4220
2DCE9AB3649C01936660D3CB62D4FB6261D9D30EB70B6B0E91590635EADD02BC
13F010CFFDA00810855BC4D8EFF39ABAA0D3138F5E51E6484AF6EECE850DFFC5
2F6B458208BEFDD79BD8C4C6E6394AE72B8A73A9D1D8F443AAE0A3F0C050249A
333A1F83E14DFB045589F3D6D1DEF71CD3173441F1C3E12B9F46F91C415D6C8D
7FD5678AE5C1B8ACC9DC66783428D06E458F96BD48CCF7CFA30A7E12255939EA
6CF81055E5330CC27A4CF7A4C462D94D7EE9B48626D5D425D0D6058151285328
89B5CD42F763105DCAF788648D74B078ED080E3573D61FA865EBB3E287937147
C9BE9926DAAAE76BD43CBF626B54567266EA2F4411EAF07AAB49611D7EBD8CBD
F1F5449C2169315824D0A6BB0AD8D5662A85EE619178100F6F37AFB159DC1265
4EF3FA2D2446A2E1F947B15B3081FED4A12C27B85CC6A3E545A312C95C6F2627
0159823B33BA57612F379BEDAE5DE173B15C5200882F03A1FE6FA61A1B3F4468
7041F37ADD6989E85FCA21B588ECBC54F126834654AD20853F11A6AB840852C6
9B0516458463E8C58580DA921CC84DCA9C4DE27B681970483A2A2E8BE06358E0
BBD553D9454EA8BE0A8587039B95A5A344F9EDCDECD6B5F6907657BCB470A304
2A3655D5DDFA9138E7C6E4B118CC665F4B861D3766A2414007C963C65C70BCBA
DAB10AE54A0DD44C28DC4763D04D61EDBD52292E6028414C7FCAEA0A7E62E4DF
D5645313CBAE9A863ADF8127F1FC35DB9CD34EBC684818AB259FFC315839277E
B107BBD3E6EB771574CC29C1415B4811FCBCC2EA6AD5BE04886842418EA1872B
C169F92A89067878C5ECA2BE88D881CC03929299117F82FE4F8D747109F2BC54
9621EA8FAEEAB5E745E5CAF9DD3087C4764D41F0F503DDF0F46C7CA67023CE05
2E3296ADB222FE2151E375731F47B6018CF32DB1F7AC0478F0A9D13C11D38542
D397B3D34B2D59D4B2A379AE1347C5A1FE39542C99525549B30ADA383485030A
EE93AFBABB827D996E563EC2DDAE9AE9D984422D428200823D674B1893F03384
89663E033545AFBF576377A48059E6DECA5D00BA874DF5039207DA39BA7C9692
6AA7769E7702305CEF74EC07C03AC9B7D8328977A2F5D9D63813A994A1F9E8FD
54E8D967080E1EA0527DFB9564EBAFB4292516657B11080A1EE01CF75C43A202
003126983D7E5049DB20BF5BB1E2D14E3985D2D448742631A0DD067F416CBD96
D8705D5108615DE881F53F51C9B0807122846CB7C7A03548AA0505F67A6EAB2D
85E1224B6CA124989F106D85DEA26E8593730FA3F6156B914FC6D2FAC6B2A4B0
C95CDBA6575225199CC9AD11D7A028153A308601BB35995950CB00A5EC95FC4A
76220272D548D05150B173C7EA7ED2705E70F62B7A1CFAFDEFA9CDDE6ED5B7A3
31AF7237DCDC2483E367DD892F6347E5FC21295B65E2A540432B97CD7F69F767
A67AF3BAE02C93A4D410EBB91EB3CB214F4F214DFD130D697972BB11E9F0FF45
52233B804496666ADAA0D84BBC6A705A9C77B52181F10FF86D3D7B07DD66C717
D9F02BA4C1F8B3B06D204AB5CC3944DEB241F1FD9A5FBEE5B1F2620B814FA2A2
2A70A7204D9E9FA8728D4BCAA70FB527B440C0CAEDC181359BC2D4AD8C286AE8
F24B4C1AC770D3C56ACF5456D1E1C30B2506930DFF22B41D6C75698D18ED153C
F2CC4A73C3F5D62536119B5F7E15A4207DEF9096D27D3D6EF2322CC7D54C426D
3E520704A5B0FD809F2C02709DE350D3E39C9D5C62A298B8BE48AAF79E7C22E2
D14BDE2BC816B49E850ACF32FFBFD9E8DC9D45873D43E2E654A41B44A22874D1
9630E3FE3A991D494458B14D051F8573328804790A03D98CFC032242FC6E2627
C754B79F4601DE1B6FC0D6DB7692A30B21BD669D367C6FF13C336537B67F2357
95800CA8EF1DF18B65A82A1D003242430EB6FF1DBE8C3D96F2BAFCE65EF058F9
C71DCA9348746900FE665375E9C805A494EFAE4CA9986794B83227FD4117B279
84A141A4B19E695AB476FEB72F3EFC3DF5F9C35B0D6BD335FECFA17526833025
71A60B1C9951D8A457A4F1CB344477D7A6516133299B927170DB0EA31A11EE76
34FD75CAEAA480F411AA4C4BCA1FB7AC7E65D5A5D8C5FCFDB41707B035520A5A
B0BF40C2A15E2F739D73D4931E3263E89A0CC83FB6A41EDEA073E552117442D8
02DF52CEE62D333C8680E45FBBDE9ED6E7F01E5BC22E802FCDB0BDF1E2A8A533
CB7D6E917D674EE5C046727F6A3F7C7EBE4EFE700BAEF06637586AF5185655D7
1592270DC46238DC0DC4515EA969F0A1407C8FEDAB69BA3EEE3097D5B123C627
7CCC673FAFA4504EEC448C29A8F93B36FA63BA313949DE5CD8790A1CFD6359EB
FA90EBE9B7BF54177F19A68ACFF812AD00A931626533380BECD9A77158110E3D
15561DD6C244D36FB6F2A10673088AA9391CAD3D4BAC7001265D89C2F898AF58
91402BE5A4F09743FD2234D37A9E63527CAEB1EB68F8C5389BC7B4DDB1BE711A
8FA47CD65AA53D6253DAB94B98B47A204F3F6E7362DF98165B69189829176033
2FF8D4A862142B7A895F9DB67F41582D0C817460440E9BE7D223D4E55C35805B
79260E90985DA5E5B2F43DE775602DE15585DD5741BF8FA5615C67DCE3740E00
9C06CE3A8306780B31793DC3588A170E5A20B20B7C7E7B74D4B52F2C03FE2C63
B1708B7866DD9E8FD9C6F90676BEF9C36E083C0034671A4E268BBADA4583A16C
3C57DB5F72093F76F9FE0B6D85C50D9B2C4875701BA03B7B042C7E63292ED9D9
954D71AF0B943E3C6B83B82EC62BBD305B6488B4B726AC41950EE2F482555BF7
40EFD19B8552B70046123162295E5C1B8D5B1F8E0AC21F2EA065FA879F533C36
4C054BBF7F35F0B627DDC5FE2AA948AE738E07D7CC041AE13DDC40D378D93B05
6E4D96B1E598D949CC0520E4BC324C436303E25F013D1F713C24FA7BFD9BC3F7
7A89F8EE67FC86A86A4DE5C59198F5124711CAE1F4208DDE790812C4251449DF
EC70677B8B3BDD77FCA2B98631869511DD652656AAE94C7E3F4E753906B3088D
008D7E2A999F4ADD8CB19C27CA6B1929BCF6F52BAD537EB57E6B7B0934D43B9A
24F5A9BDEA3D6D9690B071FF90E75A9BD114ECEAE9E2018FFE5B97E3F9B57EC4
71115E3B32A41A879A41C90FFD91A30625AE7C9E1E3501BB5D739AAFD4DC3147
EC63E3179574E6CCEE1FB1F6773117ED1243332FE1E3FC91864C8AEA7916A726
F924AFD84BE27CC51890A13715B7B5CCB828EB08D9A9538E1F48CCB869DC2181
26956CA9B66DC23FBDDBB5FC550068417C156478E76014DF9C546D9201261AA7
1B05F2E629B6BCC46BA91937FA1C7D5A6E4647A70CB32D9A9EA2796070A56B4C
6445370A3F1E0AE7F74F1BB33955864E470E9A2911FDA4C818B0A3812B714D90
25814369FE71C3906B189C2DFE3DFB24004666BA8435FE10EC622EBE16E77DFA
1ECA64BE4C153AC91451F122BDD5C724CB802334CB2B38ED365FC4E08FE4C042
56827F2B19FA865D6FB094DC02259344C0663016BCCED66A698E664B6E422EC3
0DF812D8CF9F07F4974D5CC9278E3D3982E45D21DE1CBD7460D2C4421C6507E4
DE22C24947C312EFBF84019CB8AAF309253549DE00B8A092ED646F3CBCF00FFE
1C981EB0122C3515BF2776B5B833FA120AE7A81C64AB2F20E7735CFD4B13C2A8
CBBE519A8F57C6687AB3639219910900DEF856C43D283247162C392D23E1F183
C1602259E6390F359CF18F039F3026354F553B1FE5366C26CD0F254CD8A11ED7
7D05FCB64F261AD82C4DF999CDB8524EA0501EAEC5D21617E9E56D6801FDCB62
45E566251AAFDD0A84155B62410DA5D9D10A21CA8B7001A24B5801BFF9879441
A81C2BAA74E95F79507D65838598D01F66D7743E3C1CB6D013DE4A201A150213
ABB82438AFFB084C8D099A75D89D6A89E962E01BCEE4B41F30351159C5FAB596
0A2E3E913CC7EF0A07843E37CFC27442EDB3DD9AE5B2B077C4245513CE965D1C
9B09EB62FFC06C3233AC20FADB3505BE2B8C29DB3630B72D102AD6B2DC9BE98B
8A5013F998D83349B69E4DE0A3A861D52D8CE2EDF98FA2196ECE13CB4F39641D
55BAC02180697B632E74DA5ED29F290C37D03C0EFFE15D0917BB65CB6E09B76D
BAE3AF4FFD6E2D1B76DD3B13C37D2D54977748622922EA97B59C1D004F8ABF17
246D4C8C41D27CD2C06EAA2577DBBD57648E398F5A052751A5B22688404A5C35
4A11BCCD8A5E225D29D453D8A0AEC70EF07B7B8D3BD42BF755353F893CDA8E7F
5F377C51A8FF392A822244F5550DDDE2FA0394898879AFEB695F8C92EB33721D
D3B41058551019C4E123F76DE89C99CD0635E33CB76E5DC2882CDF9610932E40
8FAF53A7428F28CA6FC859BBB8440376547482A1BB752BCF90B12E50FEF3F5C5
6140966AE46B713D0F7BA5129A1FE5CDED325D4DD939DDB00630FFFC44925311
1FA8F0E714784C3D073FFF4BBC2B12345A39202444EB3DECD89E871E8B5FAD8B
B153024818C449D1175755ED672E32D303658881A9C92C09B14BB2D87AA395EF
6E1C8A6D3FDA0817AEEC11C8E1544DA74B369425D80E2A4707E1D31125C9A277
DB7ABA077B0AA328E3B9E203D6837046ABD57717801BFF29280E8DF8D728D7E1
456BCA6134F5408C6D211148FEFC69658175AB69C72C13AC5E8C97D2889804C9
19DA628C6A5B0F4F626E8935AE2943365C505BCA8137E42846577F66B459169F
E19DCF73C5380BDB1F292A420EC9F149FD6A55F1A51A895E2858859721116246
449E3E04993FDFDC22CC8FC032E38B815EC475ED194E34A31AD7C1FF48617243
9C132B32E829D10EA969AF62C711C5DC5DED743A7ED41E852DC45BCA016BD811
97C69AE05B9BA0D7E90197A12DC144FF69C587FA522DD3CC1436E2109EBA9AF8
CCD5C58B548FE6133745BDAE9395B7E2DEAA16597E0264A7F978D83065BDD909
7F2E659FE48110DC766F03DBCC2EF01DEF4ED73A8A2F03FB0CFCC2425C26A601
78B8E8F81C48D8EC11E458D64A6C42DF8160C467A7EFCB0CA56ABC164CB4DC95
3DEFC2248729B184761BE599B45656E0EA348B0D6BF5D5EF7738F88510E8001D
DF0750125FBCF26095A320A1071176B201AF4D97A7DB4E6BB61E56591223190F
13A772ABD2F1CDB3E0A35453EEC505A64E4AC9B0D19B39BF010C61460D47AD5E
325197F08B2ED6DAF07474FCDF67A10B68E22BDF53999F1101EFED7759E39C83
1DA47BD4A04494337B7F921741A4F2D840D0F744A1470A7A67AA5644EAF8769E
6FDA5D5AF706F0A30AB0EF438151C7D39682CE23E960F2CF8E1D94B543515988
4E743DECBED602BF78B6938EDBAA07A27A116C80E837DC740E86068952F0A57C
3B603B750631B0E76083832E083EF17DE3C42A87CFE82AF05EF4832B592CBC98
09C6CFD90AFB12DB06411FB9E0B79143CCE20C908DAD730609D523675B596817
F2378FDC38E5F9621B41A27CB8FEE8FFC1A2FC48EBD2582A979D024649C941D5
9CFA44DE813A3BAAB63A6DC5B59CD7F5588BF938C4E365335A08E4F940CE9C8B
0DE788BB2AADDBB4DEAF6141D460D1FE4D5BA9825FE6E4FE5420A827D08C98A3
F490025B20ABE6A0B2A20847751DFC2986440D716CFD5D2E9A57D84846762C9C
D2D8564975D17D8E0A1227998D4B94FCA8042756F97AB4D1D7EC69D7858D0B94
1CC83FDAF4DBFEC49C4BD7EB68C1A456DAD044021E04D419C671C0EB19A35AF1
49CF0DFC953C2158D476D0FE0725DEE6886BDE038E272D555323B5ABDD850E11
E9FD1C6DF7729E6E985765D1246A4453042FF7455004899DFAF0BE19102E6F61
11C5CF960C1336E30CA4C05B1532C6D15624A83CB86FC4DABB5F0949234EB51E
B6E52C6840365835E3C5F9582E3BDFBB41A27B1BD42213757E16CEFFB075813D
F7B7BA6C66C0AE45EE3DCB18B1DF5F8B1351F3977813674AA6FA7B7337F2D735
9D881F7AFCCFDE78C4D950AC4F5A16E34CECDF508F3EAD9A57AB12A9A916D7EB
1B0EBCB743ACA7309AF9FEE4E81E152F9E1712A25EBCC360750585E50A56E2D0
74627218388B1327B6AF6AECFA67902D0150EC9BF11003852B5883FD2CC9F33C
5535522E2BE0AA2CBC7EF880B60089D4C18F187D265E8494A80BDB1FCB3ECD6B
0F6D0BF513155727DD54F457E9C2D20417DA2D04D7F1050A5B9B4BEE1ACDB865
00AE72576A26FACE3A2E762C08F5A26B783AFA95962E9438FC3B10239FC8BE78
0B52071B481165B32528BF3209DA0DF713EF4751FBBE4F9CDE0A6DED8311D435
5BF65DEF10B20843F0B1AA4BE4B16B1D5CE7BEA436FDAF8EDFC92BA4E94A3367
17062614FA2BFEF596C524B327969A71459F9B49AEB06A762AD99555FD81A22D
E96084D7181957F70B74CB84912E47C82FA1F72C6B470701C381E335C2364CFC
EBACDD20C85C9EB877A5B3EE0EBAE8E5652378AA6CA84F0A02D1B93FD3A30D35
C693B9AD261C3CF603FCB87651205D6CF7D35FF4BC0293BD16FACB5C78714AE6
F776AD12743DCF5777DE479B9877082D321C9FCC928638FCC2FD5B04E794B74F
B52C492BD8F7DA28DE71D625BC1480D494B8CC3051A960ADE0663431603335A8
DD49D99E769BD738563FD6CFFA37FF627F4756AFF88FF10A172C60310C10FC17
4DED03A449DF4655802BC3265010F286DF8660274B8943C4DFC75455A2200DBC
805F99EC797F49979E2087F4C8B553325437EF1F238C8C1351682ACBF252CDCB
515DA39081F7A1CB7B7BDAC189A0568797D0A56138DE4597AD70CABD8E491D8F
710C5F31260C5AD761E6DF3CFDA1B80945B9CD7B18C88E1931B1D04524CDC4DF
D91255B93F8DA447506ABCC3C649EE21863E4C426DE4581141CC86119D2B31A9
4BF39948D4B3688E588AEAE48E2D6C8802E957F931995C83EAB1684CA637424D
C59853EDF0F3EEA94867E63CC03ED3A5C17C70BBC9515DBB6667A5DEB3C95B6F
D047603E302D3D296FEAF54D457AB450649FF44BE5BEB40B796AD36F4FA86F33
1E4BC14C95C484BEE7FCFA9D92F96615A5922333D102DDB3F48F2ABD30843BD0
7A191CC377126A41EA96394170A5BF25824F7CC6FD2FB39619860EA3A268C57A
3689F66F0216EC69917215FFA0E0A37F242A86EABF81AA379231DB5D3C3328BA
0EB79C88C7611B6007BCEEC990DA88025400B0A616217FD20B41AE6B28880F9C
43CDBEF790281699E31C3828044F325AED5CE3785DD783438D89D92DEEF30B11
0A08B93165BB4DE936CC3A4BF19EA1C5D6C0D79F9DB3B51022372FAA078DC8AA
B00146550EE703A14B531D522A916140DC786D901579C497C3EC6D98BCE6B049
7E4A4DA0E695CCD0114C8B49875196489903BAEB958166DA999573ACDB4D4833
03C17560B4222FAF139C90CE7F8D0DDB2AD5B440190F11C953C3C8FCFCDF5C20
A99F85CF1949EA1EC89F0A6EEB2AC5F91494F51D54FDC55115DCC4C45344C851
2CBC8FA98A881F22B81F1A7B425686367092595AD53C8DD8710ACDB3786A919F
B356CC2695CB277B0B818F0F735BA0468954522498086CCE1E87A94354844855
23EC18B9724732043C890248711496B906E3EE71FFDE79FFCBAA6606E892B2E4
1A173AA590B6C92E254B94FEC3FD0397C7EDA10C345F5F68747E05DDC8CCFAFC
FCC3A05017A993D91DABC265A39EE4A494BCDEE07252CFB58374934CF2F01C5E
EFBE63A5C3B6BB37221F748E44105AC946A2667805EDDEE005AD1BCA7F9663DF
E52D3E342E7802A5BF4C9235E28F5D93FD74122FBE17C51078FB07B89AC5220E
DA163A25BD6676A0D66DBD9047C3BD0A03D6A06ED9890104DA2A575EA45E16DA
2E1FDEBD1E0663525D6DB5D83E17A2EF9D954C1DAAD9BDC21D31E8FACDF70F4E
CA4EC27770554DB296C79D6604875FD9CE3E5C2F3604019C1E6EBC56418922D3
7F9EFAE47ABB2D3BE5F7F9BF42EA170FF2EA98485424B855AAFFFBBBC4375601
1358C467EE03A929F373697CD318EE0DD04E1A7B7EE08A4211AD764B9A8D9CAA
0D1DE3106460BC92E4E45DEF36C266E8D4367454CAA54EFD38F6228B461690C4
CEA7AFF4075A15327318F6A5962CB9AE8BA6D61ED3727E406FC07C39CE6E1DC8
3F0927DD241E10AD24B5626487656C1A822C24636E6FD8026C79AC276D5AFCFD
2C18164803E18FB6CB61F2E6250150868450EF0D046B4B3F9B5EEAB01EA2E378
3E06B4B229FFB653DD3771390CA5043B8BD242CAA7C7A5AE5240299623E3941A
AF5A7969EC0DF2A546BE6DD1D5CFBF9D84B0EA7776154D3A001BF90B5EEC2B73
9A109B37B07E8A668E68D117A492AFBF7713E3898334BD99CFBE66C4FDBDD9B9
180621FEF8E5E63526878D37BE1992CEACDF15B23F185B3E49C87D9216FF6451
FCFDED1ADD3E2F982EBE208BA9E143A77E69E855D69DC9212141AA5E0D9097EE
B91AF7DBA4D062976D71E22D7C32DD6A251141C84EDDAF6793DADCADDDE9727D
DA9DC6806E9B9557CB4844083E1E18979BC911D1F43EFFC35BA38B0EF54AEE2E
8E33ACE1F665E818A68F7EA5DCB240685CF1CD35D814B09AA8D57F8604B78A83
FD214FC6C24EA2A599EAA9C44772E82AEFCCF26794E6E9F1316BFAADBA9135D6
4A7DDEC789195D7563E24375445977B74378CDA96C83F922465298B05A57E7FD
189B9877E7AB494E1AA44C47A3C883DEFDE65E02AF6CB83C88BC5BC19777A3F3
8F7EBE31FE7F66E30BAD235C44261F70D0F14165FDEF1C160A16A35865B057F7
5B766363A0C06130F8B2A4308CAC725568AC539B2AD1B54AB5CABD8DE5F42B00
18F834D058A09E910DF1314D19F92EA90DE4DAEE9941D44D8D1E3A19399F13B9
3D9B50468C14C0C9BB060ECAB69004D3628756A3A9B624BC0D5F28B248D5F6D4
027FDD43242FD0C11C69E5C568E7109A6ACFCC8E1D5988003939B48CA8DF1737
3001D829EAC7D75EF2022EA1DB12DE17BED15E6180B4FD4920794D88F70E34AF
76A51E49D3987DE5A6D98BACA13BCDBD10CAD76AB68A4B14D70599BBC56D8328
92EBE9E2BB72A0DB5E92ED5E489583C42E94755EB0854963D365236AC6A17DB7
86AA6415ECAAE9802FA36E4096D06B36932CDBD4243BE77B846C9BEE668BC55C
B057A516F7CE9C37874AD3E9AE3C91030D7E1AC115C39AA10546522A5801B720
5CEC8A2A03707848E83FD4D72FE9017FBACA70F73E4FA42B38BBE71D4A8624F7
E5A2AC0BA9E61AEB6C0964E099C0086F205415C83F3223178394A917C85BCF3D
A628752C6A41E086DFAC2247BE094A885352C70B1CECF50F3FA3AADCE73F5F01
81BD8456E553AF718E0CF6AC6DBCC0B55CA9534511D08883DE4ECD76DFEF5D26
16577634DEC9B8553DB4FC96FC35ECDC38C3E3223F9E340C60F87D75F55315AD
3CCA107D2129DF2865142FE8D1300B82193992F71A1B3D33AE7ACA07B528365A
E5233ACEB2D2EFDADE4FBF97E68F1E8880FE3F7F28E2F992F038340E3EA5E689
4193547D1B437DA59E2E6681FC2BBA58FF152D6B376D2F261E6F833FED142346
3869E3095E39976A69057BE93BEA6B23FA0D592C03BA3BA078F55FC5D8EA335C
C21AA617C494D2B867BF1D13335BFA551C7AA8F13CEF0BDA5CD019A73B7944C9
C20553244EEF2BB5BF8DB000BE51509F685173FC157CA62976128D48E72C10FC
CA61DB74D2F14281A9EEA64E716FC9B7CED8E8D3476B29EFAEEBE5F14FF089AC
9771948B6A6CA310BEC370D7C96C80A38B22DA623C9FFBDD1F916DCBBEFBCA48
B59C0B571B4377AD4768FBEBDFCF6B49F09839B935B1F1F29153773FBDFFC20D
FA02DCA07F57B5F1164FAB22A62100B8F38A83E4045F3CC8D78FA910FA0E9F2D
6F8DD3CFE4CE6FB4EF66525E8F15F63E8A9F64DB7890533FDEE19E4696787665
56ACA88EDAA1C1AE97E95FF9D6AC69E66A29F308EF10EDC419BF3A54256E363F
1E05B58EBAD875B786AA6415ECAAE9802FA36E4096D06B36932CDBD68B7E467D
B8DBBD7C54C2F4C855B2246112743572F49FA0C47538C692108055EAC99DA91C
D3B0A2B7AA4D3BFACB39A192BE91F8D48FAF80B44392DA442669E8524ED8B560
3192E5E9D8452B79FF383823BC168252F57DC20EF5F9B1032905B4783C306AEA
BADBB9D5FE2EC20FF407858C8013F639D55E1AB926E5F1A3DA05CD7B57181439
A4FD867ACC97FFD90BE3D64E07193899B719D4C66F6A92092647824E2A729099
86ACB7F2D3E8F26E19400C0D8D85F3E1FC3AB51970CBF70B4E7AE9CAFB17E91C
0AEC2E2E528FEDEA07EB75683D3F7ECBEC8D2BFD53ADD291A4C06A964342967F
9B30EC9CC20054ADFAFB24570707E1DF84720D96E7BC0971550C0949FFB72A01
9225DE431875265009DFD6B507D3A46796D66E945140339C5AE416217E67BA48
A08D67CDD3187B1C219FF494608FB8CA1B5C445288723EED953C340380940BB6
06838EE5993E91A7F7D5BEB2D5C48AB854809AF052A54024A8187B271701934D
D25B8F8AF56609304D4B2B4CD77264839B75317A0E7F825630A070CBE36B35DE
E9FB183D6B126C723D207502D2173AFF0686408EE915BD2B9181BFE3D27BFF87
5C0DCF9718B307C55E82FE27DA8669E15E17828A9B813CAF67B112FA21F3FA32
5AABC72F4C30A834C76B0AB9E932D8233261311BF25D7ABAF7727FAC911E23CA
AD1FA80328613AAA9B8D29EB8FCDA4F0323901508EC6D0D3A034E32075540F89
022EF0686BFBD668797696D0D9AF04A1C7B90896969A7C55F05598AF8EB44019
1AFF2E3CD1999300CCE139C59452B03FC2465D0BDA02B4926B0BFFBA07FE5A6C
4C9E394510820B2C893564576914E2F063988642399337B5A796DA96FA381435
6B3041BFF573C002101BA63992A5AA7BCAEDEAB5CB5F5455E34FB4301B06E2D5
EADEFC7DC7455C329B922E3D7E4664FB207E79C02A0D8600186A7C0EF8386177
DE53A87B9534E2D2508337A872904931C694DABDA2048D30DAD9000BE201399F
3DD9D04A2F733F2FA7FA17B69F210DEAC93679CBB1ECB962969CB0CF9108B76C
757C825B96B50835C22BB80E1DCEA211C6A105B67DDA75ECA8509959380B09B8
54DFC7EA17B841B08F51C0B19AA5A57AC53B91ECC8B81ECE2FF508D8FF932FEF
5DECADF9C9A01972BF24DDA90C9F9451435390647EFD219AB24330A1C1A23C46
487504F37B426F712294B17EE79D83E5B1E959E9DD1C01D07A159ECC675E6A0A
6D076852CFCA79E7AA6D35E67B78AD5EF9807827E4D436AFC9DE97E9FBA8DE12
6801D91B5A91F64F738F6FC48C424DFA7E0FDABED7149C45961D76032805477B
F45424707F79FFA23416858ED4489B03C1980BCEBD7F1118B3C17B47A4FB28F6
6956A0AA6A5E239216A58EA4DF84432E73960E138B4EEEA43CD465E910D5BF9D
848BAEDF271A27CB70C6F0A93338F4A52CAEC63543EFE3858176D2599A5BB9DD
D9C86EBEC4967FA8023B06981B759AC7398D708AF7766C28863DA14FEBA631CB
A21429F145DC04A3BB886BB28EDCB92F4C4B4E388FE42BF0ED5A6535EFC94C8F
F04A53AB23BE46BA287A27CA64314DDA490D59194CB61A2C7D123EF52FF80815
6FDC2ED7D210CC8F8F01C63FEACE4C0FC1F957F2877BEAA11A660A0B95BC2369
8C31C1AE4794BD38551E5854A9D515B27056697172B7B2A9B6EC97468E597D01
10B645F29C75F2920820D0EEC81F6CFC4F9B6356A2099AF552B50D70BB6DF1E0
97732C7D3F306987E2CEB8DB33045CB43FC3FD94D4B44BDD0CB2E76E2F4D553F
305A76B24ABD85D041D7BB4A992DE5510AF9C87DA29AEA44A0C27A83DC7D31D6
6FAFB55B92D9F7F7887E49FCCF051A2EF3F4F5F58340AA9A61DED2E1DE62B8EC
E240DBD1DC8BE384206008C19FF9E1F570C88012D54CF7E096632B3ABCB867B5
6C0A19AE0D60672A349E2E471A5E45D35406243307E91A451FF192A67D474951
E0A31AFB8A0057FC05B91C14E53BA50B2BAA66FC943992711B1631451B85F4FA
662C4DF758DF71D3C1163621F17EE1FBE12CC8B5433D2B80066D1546711B7DCC
3F36A8C4EAC4CAF482B8B494A76C14482C54B5AE7359002E314235D4E3A1A0EE
D014F18D368E2FEB778D4B35D875A31508DB5D0935018610BBD72184C6018904
B0DE8B565F61E70707A202F9C57A356FE20EA62D0025C768C8882E1A3183D2A7
61DE5FDB4122D4F57F0DCBA32F57AE6C9AFA10DEF714A1468207592BFCA2FFBB
4B083155753E239AFFCB3DADD4F443AAE0A3F0C050A476C407635CF3FA6BBA4C
9421250952C7C07A4E542A94AACD8531313E833FB4BC33DDD360DCF6AE70760F
F45EB12A0C2586F03C01A4B3553BA25E7907031D0844ED6DE4E6E041A0001C86
A6204FDD42AD28219686E3F152A2D0AE6EF16218D1F469A140B2AC91DA556437
6877D6FE545A2CA8CD5C1DA4163F3C8527B04465D1DA737BE911DBADCB74EC3E
677A6D96510D772EB23E477890A5D14998D330A8A2556F5AAEC0E7BA506368AA
53BBCB5B0D8E5EC9CFB2996654FBD9EBE48EB637545AE188FB95575DD6BB2E05
043B6F49DECECE66289A608B7927000F1B1D3CEF5B35C66B985E9EAC141191AF
490223FDC3F76A14885829EA01D23DA613F10E5A866D9DCE96B8E11943C3DD9C
29E532F6E969113B1A2E9F01E8F1833E13E1C658F4A9594599967E95F6B93681
42FCB34668AF303A6455B248FB866C4C26A9DC4ED432F5107AAC6C8EA201789E
C66ACE781EA5D03A9D22D14C37AA9EACFF7CC81EF9860D5DA595CD14C816DF8E
A6C543FB1D7EDA23A93106E334C67A08EF006B5958789C5A19177BBF30C4391A
56CC43A1DF7A5DFB14AB41D86DBE138D2A747302EE6A546E661F430543CCB7D5
5EC788C51899A2F667E4FAF0B219142E6AAD5C11332B950DC8BB7724BA604597
8DDF03125E8C2DC439819DE5F41F9EF2FB44ABF37018755755829DB89C4F1981
E51F0C96085F6EBFE51DDC3F9133B9B781C4838F3CCBDCFE66BE86E485C71B91
6AD96DD66792A732A188E6A57C4592DEEACB517109806DD2CB6704EBB0D4389D
1217080B72FC74FB036DDCAA1493A3CB561652AF97BE9ABF32C070F420AF131F
6ED23CB26F35F6359B3A7A685AD5F10E98E83279E648782576B5A13736EAD94D
09A2E490C0FBBC34A756704074898293D413CB31A56E0567BF9D34A03CFE0C36
129669D2C465CCF78460467F28410DCED5544F47A0FE38116D86F1E4E047A269
E833E27108A8A203E6C3936BD9FD34BE009D46F44EEF8DCF9E9CC88FB05D871D
43A6B69D972B1B61F1DF68BCC50EAB2B1810434C48DB5D97A20CC268BF7F2C29
B44C8B4A549AF510D6F4ED0E77C703FAF68A7B787074FE222677D0A5ADF37E7E
F58FF4452741FCC54E3214CAC44E30ED10B989C465569BBCCD9A64BFFD1E7E2B
D50FDCFFAD98FB65C3A2F67BF987BD0F0231FF01F517FC6DC1309C9767CF2A99
8F40A38BA6340336705887734A32E59BB8A14C8F14749E69C1BCF96BE27E277C
E3E55C54FB9978374102512019E52C810E9AB8691764D1FDF723DD5769990F7B
F552E25EFA7274938E55FBBF174FAAC6A56975464934C7B0AAB2ED51D07FDBDF
93556FA7685C65598D49DB98F222CD610262EF74F4A0A389F9BD1A4077F7100C
D8B11D5CD83479FE9D7246A47C25CD7BBCC85F36350E2F53508FDA16DB9280B9
48DC18C7FD646FFEE194FD77F248733BC01012EA1E217ED355340D2626EA4449
BBB8E8642A06EA7A923EEF3B0481940DD8B604DA986CCE2A0D7E8A73D41CBAC7
118EA7034A4129392AB0E3770F459264F005789BD1882387175782D08B80EFF4
D243E540B2AF088951C2DCEF7122D54F331DCDDB7218971819C586247CAA2C32
68A873DFF67670E6D7E1699143DAC8D6DC8637D80DEF10612A371E81D4B0C2F0
F42CEC7C7A078C8E824BDAB2DD639721B69427FAD6B68A896E8B23F1C186B78C
A88697FEC9A929B290D3EE9D01CD2CBA5225E7BE83264290AA91AA62F4FB62C6
27BE890F468E235B532AA57ED152F61E14523AFDEAC5EBEBD7E781941ECD189A
CD8491F7C979DC89F5FA1EC354CE9369D5B87FD0189BE1530644E4601D291DA0
77BE63D94C9BCB476ADEB401A06AFC0046335F97A2FF20EA44F794C1DFD6B101
A1026779D9CE0C778599803EE49EBCAF6C6E111EDC912A64332209F3BB6C732E
191427FC63A7A675AE7AAC05A9C96ED8421A33E150C9B1E5C0BB4A93696D1E80
065856C675069B389CC83F46739DE30E267511C17BA404D994BA9F88601E35AC
171B70939B9F1DB84D0F96A7244691AC3F7926AAF199BA2A8703D40073D0E8A9
FB5C1718646DBCB7C2700F76DB3F149B83ABB1747861D974C0AFE0224B029070
0BC64C9BC11A05C216FF201AAE1BC3D424C0A9ED85609866D2BB91984AC05352
738A017F20AEB5DB041FAAD5B43D784D9C57675577E0B8C62A383FAD18079A8C
1C34FC7ACBFB645E8B43FA0D4901449659E9F9549BE591769A5BA597DFF0087D
7B14AF75754272F2694AD6F3B826809F80E975EF72140E6C29C726C5342EA83F
B643CCA869713BD199DDE6A75AA602192DBC54EDB495ADD6DE823A4272581B36
017B5943635FA1B67D9DB0C4F18B1A50FADDB85E1F7241D7966725AABBC667AB
9A10EFDADF015452EE319FBDFA5069CF288DC8849E90F329A99B4D96654D86FB
9B419940898220CD80FC38F94739123C0914378BE32F5AA70075A7A820EDAB07
CE5312B9105E56819CFB48E9ED1ADA34CEB275AE56BAEF2140AEEA0883F37B36
68B55E0B0C39591155137F0BD9C77F80061D4402F2C6A0877E263DDD92F0680E
7C423EEEF03AA3A57B297710A8CBC89A8F834A785FD854B42050CF2BA53FB59E
4C7FCDCD4BE45917E8DC0876544B886DE6851A9084E4B8F79E73AB52D6510177
794FB3DEBEBE9E4105AAD34FF119AB2483CCA47C34B73D8592C922B8284C6C64
525B4CB3EBAD79C8F4782584F36B0027977D6B37B2827E64FF0CA96215E2EF64
9DAC1AD18370705123053D6E902DF3C0772DBD3469506FE345B5E929CB01DFC6
E4AE406203A42C91FF4B45F186F94ABA89ACD0FE5A2F658749215E4949290218
884F94797E8436398296FED759493DDFC4FB8EFA16AC6EB1670165C363D63770
4C58B46FF09DE05666FF7610AADE8405B686A5AE45EDDAF9D56FE071295B3DCA
64925D2AAD2AFE6134F903C86F916DE43A2D6833C6B303A6C2F04759B8CD6E0B
DA9619CD99C52D6F06C5B9FDF07F8F59BC39811AE71366876EBCC64A3DC51D78
999867C5F0970BAAFB320F87FC5D14039580B86E0656F78D26B63043DA049792
55F46F985FB09548A3CD1DC8158AB32710451F72B84AA5FFA04DA64420627B79
D8E8B19B07C7C05D297B0730260E8A8AFC80EC2968D347FFB126893067153879
8437AE104D9787A4E3F119C20D49D413F64DEBF01F42E04D32B8C3F00F0BFAC7
DB226EF9FEE0BF6A92C3E1D081D58DA932B6AEAB6FD69D9EE7E7E6B3126A318F
15B21ECD20D872D58B4A2F8A56C95877234F9FD6BB97B3AB5C0F27DBD4DD8E82
EE57A865FEC1A4D1579782B6E455DCC39BA86A4F795D2ECFB466A82EFE254436
F6B868D1B3856B9F739DBD36B1D6A9397945CBBE4BC5F5E034719030564FF362
E752A41EAAB844833F0E3453EECC49FB99091F90AA5C75EACF491F562D7E6EB9
4DBF469F3A4674A87418119F5A18F93EE02DA7704BC4D795CA5B7F2DA556AD4E
4F7FF1CD7A35428384B8CB62B1F69C6D955DCFC868434D047683FA023468C59A
D9C134CCCD3E6F9A0A00B31AF21965817E208CEA03F3B539DB370630563B679A
A6318A6A254C7C24BEAF8BE1D8ED5854DB06E105276059FA2D8FCE181A0FDFAA
104BC67A0BC509A3219B4939A60D2F1556B64741BA2CF596FD49BC60C6AE9EA0
8BF104B7B56C1467D1A59C6C9E2844A8E2C3F2971478ADD828089EF0860DAAEC
478B6249A125B3396AE898B26AAFC4BB81A046D60B2C7CA4B9F8B066957F9B25
6B8720630ADBC22C05D725B47FBA659B0577323C0BE0D8675445E6C1862F9E28
1D93325B90F3032C5724AC2377B7396B1C699DDD09776DBB40F441601F033C7E
722155E8EBE0F004731C4F3F29DDE3FBEAC75DC6654E5103233DD55CD72A63A2
E1F288C05385C2CB220B6CA3F4AC26E61CF7CA45E590E90CA9C6BC448888ECF6
46A49B2C58E9A830E17A51E93E66F98A1F7AB2695ECF4ACCAF78045EB1DAA01D
37A458F30C0F6998FFFE5B44BCA725E3A753AADCEC4C2F1808967B7E7D4B4016
8557D752702C2EC8C5DD2F437598FFEBA2211BF02DBCEC07B4F8A42300C86A8F
9E01CE03EE044934477FF07F5A634D16079B65CC2AD57E203ED82D36A2E1474E
7CE6AF8E5C9A47081BD8DD70B2670BC58920B6D16DACF598BB78A11652C94ED6
B11AA7E19843EDD18E223007DF572F02AB0771CEDD80101521B061DE77292FE8
2A9FF932630B0316963ED418343E2A613BEAEE61D672E7B0ED2EE103BC38B50D
B5DD183B29FB4379A53DC0A994805F1A758A6938F43F703F7F3F4D690B31E8F6
E4D8B2DE06EBB5886888D4A6C5C7AA46BF45AF4BE807747B2E425619F5251850
B773B9AEE7DF52272CD37586B120118C49109DC23451027036DEF9E8780305AC
EAABA3876DCED3A54D0B15C50A9B5A2620D1294824B9FBD7577105097ABAD89B
6F1BAD19D20EB55355BD3AD72B695D374A755C07BDE48C36F314923962BE843C
A6324ADF5A44FB13C8E8718CD873D4B16E2C99D4A43E82BD8449D049E509F7D6
8582BDE24D4F1AB889C1587713E9777F02DCC43CDEB070E18406BEC009B71C41
C2809358F98D672E0262522F9EBCFA1387594F694BDB55E846BB874493329A84
28A74BA617D6E6E409EDAFA3AF09FE90B2BCAF57AF98D359860605C5E357B989
540E613B41D3085CC2F73EABA38549B25AF373C6C8AEB79BFB3FD9B5FF561B1B
DFE3BC0D3DF17FEF63080E828A46681B6BDCEB222D1A9EE67D5EFCDA9560134A
7251E0074A52AD9799DFC142082B1C9FC1BD7F09D4743E240F38501B1EA372AE
D42A2EAA4820C7232F64B833D743A3C6E155D1E5434AB8CD4C49CA1E06014E22
2D164B946C3BA22541981B2BFC9710A8CB0D7709DDE2E72E16C80CC9C0E7940F
FA97F2BAAE7D2D89C614C29BA02A0CA7652FED31AAD7D9DA35204740FF3228F7
AE4F3F4D9249CE3F49CEDFD6535A33E313407A497278F7396429314EA761154E
74B23E9154CA9017813C8FEDF0474F1130E7020E7B5044DA3E8463DF74D6A88C
3183D62CEAC8CC386F8D67BEE8E8B0B00C0CD02E96BD4124E048782F415DA100
ED3759D056E3F40CBD333B95412CE226F3DCBB29F24D8867604211EF85475300
358724AEDAB696B5F8DD58102244B57B4EC95FAB829B2E848926FB2DB5D17E38
46A504DD4CB19E5572E733BF7E6DB541821E70B50EBC9B34634C3506E6C02DD9
4BF37F3DD79CEB33713CB4B56EEB8495CDE61641369CCCE9B1128B543BB870A6
B0A27C3FE0952C8436D8F3FB9FEEA44EB7F13F50228CF39F95CCD01C4FFC41DE
C6B8F3009D3A5B02FBF8D6D628597637CBB5FE379E49085CD89656C9CAC30425
2336ADCB2ECD2CD0776D11E2A9C6A33B500B9BBED3FC83A55006390A12CDA1CE
DEEEB5C5AF18522A53B8E6078E7D54CF4CCDA844FD10712892425D9D53EA5F76
C27A29659CCDE1E24B4798922969C12381C2286B98ADC3B63E46411EF45B36F9
DC01D41560DEDBEE197837D8D3E11335B837654CE6FEA54BA8474C6C5040F29E
5A7FA20A53F70AD2A368B12F26DE416675E50F635AE6409C7C7DCF2ECFC0D1ED
01722E83609860D89187189DB76123040AAC7E20D1151E8693DA446E9CBABABD
55D2CBBECDB2CCE5BE9885C3670D82BABFED7F3FFDBD2A06FC203245246BE574
08FCC7B3586AEF5F4DB23CD9014102CA922C49DE8429FA026796EB130B5C47A0
7067CD85EF39D00AF0F37FA2971CB3884245656DE2D3F19BD17FAAF1AB49D651
BA461A183B0568A0D5DFBDBB0F42CB14C2927555F9E3A941979D1034C7ABF4BD
EC33CB25B21B1A1DE1210AD6FF4FD87AEF62CFAB86F6D929D939660B9B62480F
744BB395611A52ABA4CDDE6F6BEFAC5930C84798AD0AC0EBFBBDB59538A25D82
AFC001A83C656A53BE11638160D02C20AD9155EF03D074AB53507ADD6CE50BE9
D053F69949A8186350BBC3D5BEE3156DD191B119B1E0E3377987917E5AFE8944
70F0CD712EBB329628BBEEA261D169A0FBC7EE39F1039736FA1233BC532A8B5B
7892F1A8D70C11DF5DB740D059F557455D51E1ED8E082C5B80B6328C46302A3C
4235274C47E1AF40C108D941A956CCC771C84161CEA1CC99381794C92ECF2DB7
3266E2983678DF3162572B72CF62DD216C806D2DCA0A46E6B56CDB43D0140419
8D02F80585B7F131C26CE0671E7A1484F89A902B54DAEE3771A5DA5B088B5D14
46633F29405756EEA3C5D499DB9FE842BE1C8F23CD1B5D2DED3C31AE91BE8E28
3EC2047174DCE15ECD7B0E9545795A6E62188B643BE9FFFFF69BF0E7C1AAA758
8AB326AF9512F818BA924F894BFAECFA026BF0B86BF293CF46D124BE0F8664FE
A6713D4D0616EEEE3D21C4F459E0DF961A5281ACE5534744D5DCA956F1D0FCA0
3BBEC350358D62B7B015A019679B0B8E742902AAFF07930CF0F71F72FF52A8A4
C819D119551A8B29CCFE9B2594FE90C29498A23277FF1E33D93913C29A0FE8B6
85B01511466A09528BA62782207FC7A988C4516ED8B4B30846AEB12BE24421CD
F6F1AB2E63235155A2E98E9922822602A00BADCC3DC3ED4030BF80B286AB1CCC
12AD3AC0E50370BAF7C1B52A067A884BEC6465A5814897382AAA77C7FF825827
FE2A6C008801304DCA2BBA8F01DFC0EDB46116356E147F7D25A6B84A1921CFCC
821786A49B672E65249ADEFE783DC387F6033865E77FCB36CF08F7A09B030720
8321C365A5104F1AEAF8EBBCD44A60F2BB490F302B0425976C12C80E4D9A8862
9DE47E52E366971A400F60395AD659378024307FF959945AC0B31D21CD04E31D
D7C45456CB361F3E4DFC92F8E22872CF885EE44FAED0E554EC0AAC8B981AE837
E9DEC70E8BC41368FDB595737BFCF9EE4DED1841F703375E81298CB839DFA416
20D9BA757902C2B35C13487F0BED5FDC378F9CA528DE634AD3607A91673A3DF6
2988DE97DA96C5C43CC638DF218CE4F7F89B3BD508E371B2A78B89881D1E6F9A
DC470EBACAB50AD9A7B337F96CA38BEBA274BAA65289DB07CF01AAA7EB4E0964
A3BF581253F44F738A0EE96DEBBD7F046E9E882CC3102BFE7A2779622C2C0DFD
489DE38EA5FCF6B7D693C9CAA4C56E41279AC0487B7B61DCCE028C20789DCE25
39DE30CA17ED4ED3CA124310171CDC99FD86A83C0F3BE298373DA0C6F6DC99AB
6BC8DBFF7A20AB9970CF4226B84C5662274AE08FAE2C146CFE6C569BACF92904
78CF74E5E3E6EE4729AE50195AD9E6D7E28F87B3AB57432F7FEBEA4D91BBFA56
1A1B537B77209567D6F07A1EA3E5B759213DEEE66D3161FBED149C07C54AC6FC
55563FFEA13E2869D9ABF1FCA0E3E26DB60CD75E3C8599B34EDEDC15BE430F9B
681BE4C947E90690E749713A3B66761870469F5E3120992A5315540D2A088691
C41D2C864192EE55EA494D8E0BABE24ADBEBAB995DF855C0808DB5E30DF03CBE
F98214DBD2BAA5AE04DE16A0B6C9E22BEA80EB84C857186645C467EC0164AB60
86D2C2D95B64F37334623409DBC3224E615E1A621D5784661CDD3BCFAB32F274
4E9BB90DC6A06EA9EC460A2631F6D3AD4EDFADC9F352DFF83B4D7FCB6B79C54E
4F1776B782CB4513F96BB8C413E95EA8B6DD3AE6D86EEBD98A422438DB94ED84
AE49B4054206AF4126A23FB9D6936078F7F920B19ABCC944634407025ADD9448
9BCBE0D1B74F8D5C7F99462F250DFC5608982CE8CFA119B586A83E8FEA614F33
4040DB786E290974F9FA28FC998BBA0706D024C4B58BBE718A0E50345F764B36
FB60C10262CEAA93B50888A49F437A9522A015D41C58DCE0075458FE5CE17411
896CC90C0254C27B0A0F8D3ECD1B056A35C37842C492D9FF28B9ED09B4910925
7898F180D2EF552359727536966BE7BB940F4B9E175F63A948F9E8787C4DCC3D
F5328B98BEE30180F132FBE37AC3236AE99DB944D7B4B835FE7D69B5EF908270
5FB9BCCC4C76CB01A877C8242EEEDF7323A817DE43146AE4E04FA79AA91C814B
18ABD2C55E62E8CDAB6C133AC3DB55A9E502D237B04DF5EC040F30151758756A
CB344238EDD985C41FA9CB3C0EF588E024005204A4C1CD1D33D5E8BF44603E07
92D6E631D300A77E7A8A6C11DE9062984F6951B55A5161D84E3DB7E4D3CBCDFC
99845A5BCC061A0B17F85225444C9E6105543929A78767429D5E4106CB6E0F01
085AA2E37B3DF7640490C6F31F4FE1B034F6562C37B61AF832166709FCB9245F
A7CF327CD80AA98451165EA950EB7286B37A0E1D37D1EC32C188F311A107CC79
FE5120FF3149470DB2EA756E2FEBD568CB936E219E668DA53FF34C3A8F3669D6
2E098A318D191F85CBAEE851CA87316C1931D95295CA5417D55C7942633C87D9
F166D63C7F5C1E50F0A68E409DB4002D4C4BC04EA151AFDADE5E98576EC29AC3
7DF7B1B66C47A4205BEF37C9A723C97E1E7DB9D79E66207C0970BAFE8CEA10F0
641AAE9B8FCAED4532D2A567ECAB5942EA95B2230234A295EE399B59353144E4
41AC8FB9BC412E218B36654F17E1979E9ADB992C57D560295028755256DC9C88
264BA93ED74F6D1563A62164A4EAA62E9A96916B66634E1DDD9B5BDB23E4BE46
17DAB6BEF4C9773BB2A66674596C6E1F9EDD7A31931BE625CA402700E4F6522A
C97E34D5103EF7E40057ABBFA1972F4871CF68957C133B251A5F608D545317C5
685824991DB8621A7903000C44E38F4E0E95CF8A70EE271268611A88A29942A3
5782E3C5A96CD83831472E387A843F66FAFB35D36EDA2160140D2A5DDDF19827
5C12BAEC51FC86D328500A1BEA9D3128504CF2131FF06AC9AB33BBC92C9EA701
260EAAD48C62C3CCABD5C3EE7287D83A5A92E94E4287B17F5613AF6AB69664C3
435496334BBD7F93E0759B17B4ECF6097BECFAE74F33D2C3C10054C7BD59539C
83534790530EA8F82D984D4A6D435AFE919476818DC7A83E11EE15C1628C3266
4DAD98E133A61BCF1E3A2D3BF461DA442B627F0F4B35C6F50C1A42ABCDF4388B
D84B0E55AADD306BE466BBDE6EAE0BA3692F694F6372F727AB01C215037E94AC
894594D8BEDA65FE59ED0418F6CF07B28837D638BC0C2539678A7D314BBF92D3
F1CABDC48E9156123182A8C9355AC98BEF4DBB83B3C77432EE201F41C83B213E
BBBC0E697B2E21D687B8FD41367123CFEE10E02CC61C6E632B040D8DF791FA45
681D61D02D28B179B615B20CF55C982B8C3C51CC9F13A9C6B30C25C9D12CD0A1
FD9B1393F69D7EEF90859F5A678B1DE0EDF19C2B2064115FCC2C0B048E62B50B
F64A9A860C3B9292C44E0752F5F7063127FCDE7B0BF8AC4AADAA7F475E413E64
456E7DB77C108E352D524047FE70BC85716E4D27CD9878853CF98FA8A11410F1
0A172C60310C10F98607B823A0FA5A18321056A36750BC67D3CFBBE3A4BAC1CF
10CDBC979A265C946FA308B93653480A061AC9530EC5280ED033AD04799EB9F1
3AD2F4373BDA157D23881A808F67901B52715557491B4DED0A19A1E6464D99B3
6C43D65414D629B139C0B3C2BF3D2905CFFAE9EAF0B917CBCFEF045F51E61AA7
64392A75D832F9338F9912E521605703E09CDA5B195BF1CC49F81022023B083A
73BD86EB6B71A0E91D39A856F11BE21F316D94ECBCAD9BD0A87E598AB20A52DA
BAF7035C85986DE59AD301B93AA9691C885BB65207810A3802155C5BF6A0DF09
FFD5521396A836B4369B8114E1BDD480913E76BE4F94D9F38EE02AAF0E620659
E4C22CDA8CF8B8509574AB474CCB523F71909AD93135E53A6779EE416DD62A29
D1D2382422B3445F20AE69B187F676CD296893B8270723603F0988D4FF26DC4F
71F761467B648FA5276E676EA0764715E6FA76F75E25984ADACFBD08DB006790
7A28EB5E9D6249A4B1C120403BCD3BC89209B638E1690C72AAFFFFCB522B97B9
8E4B295FAAA1DB61BE5464A8E1B4E97E8915CD386D79A1CC66446659EAC7DC7C
F6ED25978A39A2F85DDD3BD613FE60049BBCC9B483042A2D4B25C77BF9228CE0
94B48AE11662FFD3D82CDC8C6B8E693CA7828351A291E71F4B71945D3F0043F2
7F1E73B67016A5054F7F72C9843929D1039829938E915BB220A5C653EB9FDEFE
15C441E4160DDE659F85ACB1F058AB549FBEAEF528CECE7C63B2B88C188D4628
2036822A1C598B4B5B93D4491C7529E379110A4DA60A4623D57515D844338D51
1AECFEBA938FBD32813C3ABD36AF87384CFAAB8DF74D54DDF7FBD46D78D457CD
1912F93210F9843E2C849DA765FFDCAAD86026AE6BF312CDF423D6EDACD76F95
E53C32B68AEE779AE3F1D5E9DCAE29CD2407FA461AE8A8238ABD81BC074299AD
75B115B39FFB3EED1B421C054AF4085C6EF2154D218F88E5406F5D9554C12846
876AF043BE97348C0743D0F23472748F91545DCA99A43FED371B22439D6229C7
6449ADDFBD2629E6607E3D13C8B6ABDFF9B4B7A60D26292EF22A75C8E8D4ADF7
A319E9EAC6238093C798878E5D526218E29233DC3E92F5C7379278D200DA126D
47E4E0093766FDF75E42189D550A9F9807D58480946C9E0ED103AB2EB0A08A26
B00280FE57F6CB0CB72BC26EF0ECDD29F105287FE939BD9F4A12191B15548AE2
75EAE43BE62E6F9CA864B3F5914E6B2D81EE6EBDF15640CB97B66684EE7B37E3
8623E0DCA16B183EB03A367918C5AB7825A5A5F00AC60B233EDADA99405DAB8D
E77DD5D3FFCD2B587A14E290FB00470F98FE893D492C635963CD6CEFF0BA8BB5
D2CB8DB11D5DC82583BFEC2642310F2FE0596A743330D377ABF76FF4B424C52B
01B04C84A40DA304D3A67F5C92FDF5D85FA20C90F900B0B1B8A29A56F8B56C2C
66D37EDA2F0B0340F42BAC73E2AF10B1C767D7D6063025F94638F565E8882EB7
FADAFB33244852267155E9595327E348EA30C10EC4FE55585FC159CE994AD4BD
0065D122E44FFE52EEFF539E3EF7A97BD445C1A83904F00C6F81291309385591
F8F942D426F1E78296E6629F615A53B3D8A2BFDE6DD6DB8B6A0F6F0B6DEAF86B
33F38CB163DA500C58AD8EE472B30B7BAD8B85CCC2020107EB1B7A7C2E9F5D04
7CAFDD08829CE775C1F5D2A21749E12A711CC72721564B8709C55F98E7C5F18E
4857576943B61DE1BAB6E7EEEC6CA0A6EE762C39CDFA05F1E4A7E9741022C9A4
0E3253F2D48149DCD7FDF13F5351E6C89C8582237FEC5E73AE06CE6378787821
06848B43A4D6B4C22F268F228F0EDBC59DE4F648B6F6F9568EB7FEEF20EC7DBE
F5FAA263C6B723AE4E5B34B405A0A13E318FE505B2DA406DA85CA0B7C26E68F9
E48691ED23DB0D3ABEB63616D1DAC8CE1540946D3EA0CEAC72D968371521CB57
584C10A82EF3CA876200D507AB2452C39E0B928D1DB46DF65694328781509A5C
4F020EF1D81AA3D7E7FF53A9300D35319E2C674C07B0C87EA3885BC505BB0A5E
9F34CBC1F4E3A05F05F21E123CEFC8CAF8386FCB9239BAEFFEDB9E2018FBBE9B
DFD1AA8BFC116E09414E329D0B3FA83AB8F380A19F5FDCDCFB687120DD2BE530
53630196FE8F6D83FBAACF3E774843DC696631017979602FD97B06F088F10DE2
078E17FA0A86A5017656773E7A78C38373EFC913E2A460620B8ED037AA0B85DD
20AE595CF33753062CFE7850E680ABE4B1EAA94F686169AC4687948A741417E5
C0A79444E197B321BB8116BBC6FC1C6B60CAE8B2EC957EA523BD60F37EE2857A
FEC47E25004DA194EB503A2D1437C4008E97C76D74AD430973E848FD4048EC8A
2A03707848E83FD4D72FE9017FBACA70F73CE4B8B1B4AD97C71B859F5A7BD099
3656EB9C77529C29F2D3EE477C9DA3D871F8AB4E0B4D591478C3BBE529B2AED6
27262D504BD6F48D79CBBA728DE44D5546DD2BAE5308A83D4F817D36920336C1
5859D86A2735F7BD089186F1FF6DAC32527E37856C4D35E27563D8F6EA7CCC0E
74977CCA24B4A1BAFB1B6E4F4BBED8DDA2B596018CCB25ADB0EF56AE8E19BE0B
99F0EACAA52EC073331BABC2B016D44880F6CAC0A225B27791F6AACBD6B7E01D
3C30B3D66BB1B8E44FD0A4011808FF1EB140791D557DA31A46FD5F2AE4BE9EF5
B081D3EFD3D8CF64D8F619AE619F5CF7C0BE5AB66CAB9410D0BB68B865F3E43B
A0FE2822AE9DF915F79F9009940645BBFF1BE36B870FE7C734D80223E8971997
A02EF8DBC323983FE3080CC0BE03329FB9B40B64CECC029AA02B6836AC76C0AB
A46EDD524CB3345926548CCF2B4EC72C1A62821E2EE07EDFB52DD4C818EB9FB8
B5EAA333EA3E0AE6D94408A4DE33B175F82DF5B8D6FB6C79936EF172D65895EE
51D72E80106BC2A33E97D36AB8A7DA9088F794BED5E77E07C36E69E259E3E3D4
156C9152A3207C02979C16D8514CA4A9D6C1CF093574382D325644F800EE0C8D
F367F52A990C81BE29F2EBB890B79DC12585B664F0C0172F32136BC1076BDEC1
F9F3DCA66E4EA2A3EA0C00D0E11B189E5EFC007B0F2CAFEFDCBD00F3FA4714F7
5950B0C5296AE847C21072039C8206693ECCC8A212D39385A57F9383AA235717
AF84AFBF5D808D320163815FE70E091803D9D14037AC4AA8C4D17EBB62ACE9CE
E930791A3E891A8271EECC4DB35810B23AEF6DB436797112A63719B030315740
9B8829E42F73F3C0C69AF9D5AAB8813A342F1ADDB73CB22403A32A6A2672AEF1
172124527C1B87380F9EEF9D5620E076CBA0CDC05E45D59FF354E4F8EF78E7E5
51F5BE8CDB37840C73294FD6273F61247E9B350B5BAFEED9557F11257F84A7B6
BF4FEBD03132058423ACEC4EC28CBC31A86EE3C9A0F93007CD6E9202925CAC77
38D360D07B1264E31324B0F048C2F099F9085FC2395C8F5A89348AEA46CDFA38
44078AEB61E010A7298BAF0F4D6E3B6C4C197A033BC707E128A76B257163E21C
9192B6D9941AEEE22453FF31C9679195FDACF8F8613EA299D5E69BD8F2E74317
DFA43920C8ACF206EF6A6164F717D2BCF947E22EA79D2C8F57868E2AAB61A3C1
D0EC610AA14DA5BD9E017D60FC01124BABE23FF62E75FCA6255E3B72048904BB
D47D276D475E2FB51F74A8BE2E5FE17CF1D5FF2C33B1C5EC90FEE3087B3EBD66
74B9BEDC535F3B7DBDA4351CB31A8006452979E48AAD6DA7B1723072EEA6745F
62F0715C865422128A163B6C6AE0D98F395B984FEAB4F519600668E48BE0C7A5
90D6C817424C06EA3FE5A7C9320D907438DB23A82D8CB9777BECA40E4DBF5C2E
55A016EA9291D93253757C38CCBE4B84B942FB3C38ED70E86F742C3B5D9421E2
AF8F2412E78CA82ED8A7331B63B178709E55EDCFAFBB55CEEFF1CA96F5494F69
D508870C6C620861E751C779512C404ED48FF12FB276593D308297C9E4EF1E18
4E7CBFE72FB934BCEDF642349417A9DDD70DD72422FE3DFF0AE98ED96F219D4D
5B7DB5AE558CAD41225BB627A6D60FF613EF2279B10F4460086EBDB5D24ED5D6
73E26A25811D4BCA9D693EF8ABE7827DFF313F26FF8FC14D0B094AECF5905476
5816492E0F0C1A557EE7668528DB216195143E8CF31C5D103CA1E5A4B6B052B4
49B2C401E18976E5F8628E21B209878774F7DC33CDB6803328A3D52EEDBEB18D
D80446181DAD8C8CDC91AD308DB487846D17E9C3E95E5842D5FB7A55AFC57B14
F8DC4749DC919D6C50524CDA3E22965E2FA5AE2D1A824E1ED5C40D3C40923DA1
50C493699F0E68263D8B7618B0337447EE38A02F76C2350AE180C2CE885D8205
CEBF230FC69B3106F6FC309582A8F0D6A9A658BC1382656372A863F05EA4BFEE
BD5DEDA74B52C8EB0BA7136A5E452A796C29B69E80D20566A1D1F66A3BCA1BCF
84EC8D1DDEFFC32B73EC8B2F1D7B06C593C45A0AD2F96A002BAE0876BCD79829
E9DCBDD3AED5AFFCF2921FFE40057949A59807EFE25D24B4C1C4F23C8B48F9E5
C850205DBA78130DF9CCF1E2852692398A096390C89EE4EF30A3A414DD0B724B
E0A1C17A3A1B9300CB76C15509AFAB9A0DB67B0F3DD5A429F3BA4C47364C2B89
E30AAB7C5D7B5FE169E77EA5F7C13C090CE5A4AA9CD320E60A47B056AA68F52D
362E4965695C529AEEBD3C8C802A1517D9C6FDA3474591F19D573EB051F4A690
DED35127DA26CFC3AEF7F5FCC28AD5958092060864F7E9A1CAB183E05EF9F364
4BF2530CB119078ABB9EC055CAE7DDB2FE3DF3B0A54FA6F218627A66EC82A85B
732D3CAF4493204C69E3BA836D7EF5018BA0B9143D177E28B072BF7CBBA2338F
F37B66DBD7046671C2E5DF9FA15D28634D6A4D485945A5459ADB92E9EE571424
5B93A43D7BA2015057767BD78B47B45FFF2804A3D613BE2E74767836091A6260
F217D91D4EA2F2B6FB87E2E004C36859FF7AFE7DC3807891D039AECEAC3F500A
09579E6559F7F217E907C79DB9CF3744EB03FEBA08935FE077982988414DEF5E
701BDC76E7B9700EBBB54DEAF0039BFD9397436541040CCFE0C249EB7C66B766
663913C8A0B37CE291BF536B65A044403646B0E389C30386A643B907A569B972
6C2C01AD1AB2CAC1ACA73FD1E6619B3AF0FF86336BCFFAFC0F71433B47B55359
AD40D487FEED35517823947A25000F352EE7FCB38558C930AC584AD9EFF36422
CF1ACD96D5626928657F879A3AEDC52E192282E8B3891A02F0EE31E786B24EFF
373C9DAC05DD3217C87CC3F44A57AB0BFF75CBCD814C6BE347362C258287B16D
89A40A2A3B17572EEF08E6DB55269AD747CBE7CA39ED00270EFF9E8D6EBF6674
6CDACEED55FF7A4E26CD6CCFC6B8BCACA4693DF0370A98042E527BD65EC1E77D
32A6133212BD3509108B61ED33B18A73A04B5F96F94EB6D944A303BC18A2DD5F
D92C7422C4911428468FF6A49FC285FD1D07277FA98A26B7A42CF88DACE64A3D
C88377E70812B9E2DDDDCFD2BD85125DC5A043A45C0B9D3C86A9ADB13F6E52ED
2F1DD38A57AB9AA6FC582E9A9B3EF96F9ADC08473EC5AF48825E4C875F948434
3056C8FE000E66D88196354727A942CA3BD03B589E59FD355EA0AEC0CFE93763
E9450DBDE6163D435C4B87391B48D38FA18DE429E5AF03D5D40EA463CEF58BEC
AA54C4CECA1555A99370016ECC11CECD2B9CF3604BAFEF71D332981F93C9A71F
60E58F5D36DD56EEF77CEEEEF190F0F3E050E7F5707B70D7D7C91E4EB5EC487D
566D3E6EF1D12A5235BA2CEB94CAE9CE1679120CC4D0A187627AD3837CEB894F
C54AD10567743CCA20E183ECBAC7895A121B95D98819BE333183FA468700B349
268DE077F06A85AC4FE562780E5053AF0610A0CDE4CFFFF3309BFF3A50DACDF5
65F4F0BDF30EADF22F18D850B4772D99EC426342F0C8B9441F7902B05E41E873
AB5A1370B41A524BC6C9FD257EAECA38106B685300BCB6D128A47D8BA7B6BF4F
EBD031327937E7C80BCAAE301843304216A26603E7BE95D2B9E8006CE86DB6AD
94FAA11BBDCD2F81C88903D7ED0F7495CAE65334A00D9B0A1EBC7C3EEAFCAD7A
BB345C389471B07EBF0560F5AB98AD39A92FF664E23C565720F61FF5AC82C522
009728BDE7D1B2C018F21006AF55B05546DC9CCAB78E8749620221884F993EEB
72264285BF79E4B914A15642E290215A5BDE6F55DA100C92DC34DB456C04B56A
9B718EB7CBA49E73C3E45FD42111D95927CA74B89D94199A7FE91F7F7E5084FB
133B5AF8B79C039BAAD80BE93022A0609D842A08166440D2C2AA7609DCE26F32
4D5EE8F0F34C3BA75ED709C263E3011779EA48410FF81BF823B71ACDC9525AD2
720E93AA891BBCF4ED4F5DF336C3D85F8AB7B0ADE5B44C604AF46B9D3D44AFF8
E15E626F43CFDBEA54CB91FDAE4D78961DE665ABEDA4C129CCC2F4272A829759
867EE98F1B58DC0029A08D26FF6EA4ACE47437E4E94AB573C5EF5EA99AA9225B
3BD128B6F564B0ED6F3CE369E794054652F2371114DB16E0E4C6FEC70424796F
299A0821E42C97CCE1E53314340FECAF950BB5AC907C00B16F47DD374327B11C
6AD9295EBAC27BAE6050863037810423C7F6592BF69389F5388BAC43AB8C7C02
B280D88A444031EDA46926E3A4F90B5679379447A103B0A34921F04231D7D0B4
30839C9F36B69955CBEA067195F1660F0DEC206029738371EBCC79089CEBC907
C07D78614495D179680584434D3390E25884A7BFE9D89157DABE3A12B448D367
12DB65EEE8389D4756D3C2DD059D73A130384A00823C42E1FE8B7110F8C228FA
C421FCBBD8EBAD294B251BE8F9085A2D08D5BD289CD192C5DCD3B8EF228E2F7C
1C073D4DB1CCB94A499667FF6D66A41B002F37CD93094180B8B256CA248AB163
B06C80D414866CAECFB405F9BD5E706205826F249E8167BA873ECF91DBE5D8E3
84CA3C4F4EB50BF820BD8BCE9554C442299F1D2992C05B5FDC197EA627089D71
EA05E5741DA5F8B83801B5ED258B2EA88DB8320E59760B4B46028194687C117B
762E228879EEECA7FB173E7818F9770D950B906CAA9864524218DCD8A9705BD7
C94290DB141074433C9814F56B58B5A914D817CAFD46C7AFAD801C9E4825489F
8EDE5E249AD148875015FFFD20AA1FC8B1BE2F42DF62A71D4DBCAB8604CF1FEB
97B583E90AB61AA6117D663E34E5A742B570F25AB386A4FDA1F8810FE8E1865C
2D8E9D8C05B117783578A9C2D6A3B09C9DB3B34DC80C02923932B5A36FBD12DF
2C358456E0809E0F28648D2F752DC68F2FB20A78226604DE8699001A1C74BFDF
30CC6BFC253E63043B7F1D7C59FBB5A0C5C90B1CE7294A6351EE3C4A76D4D072
E9B2F7115E990F28735D5C7146DF2B070DFF7CA8EAF157562975C4A87881507B
CD1ADD8A60FE2E726787BD117A363D64434192B4A1296E17E3B8E9E8831C28BE
115D37E08FD786EC2635362AB0C44F29C1AC1241349128287AEFEE2E372BAC8C
F5ACABBA90B4E592FA4A2DFC3C6ABFFED8F8741F6681B8B539CF1921EE4E2A04
5971D213CD7CA9E99FF199B19E610A767886F7F022633F34319B18DD12BF2317
5C5C2EDC99CBDDF7803FB3DDCC3B1E11239FB3DD15EB066F6FE6879875DE2CB0
9E8C96F901BF6D9816FF1A161DC3F1A56800E509BF16B6E75A0576EFE70F5E93
6D5BCDC33EFFFD39299ACDD95BE3BC65A57D90633F416BA490A3BE01C453C352
D3533BD90E1D89EB1176B7B470642E3F575F4C12F9B8ED1AE9A9C679B418B7DA
1442C96B365D75AD85E460CBC31DB3C7D4020AE642327B74B616A832FFB86002
3E6B2A3A174FE64E47554BFC468B63FB15F40E52362457EA58E5B1027723C2C3
BFA14C7106C9769B944B0B65DBE9D65C6F816E62D99AC2324677C64D1887129A
47A3F64D2959BBAE1CE9599DC38E6DA6E587C23ED5425598DC27862C917BF14A
111CA0CEEE8CB1EED241B40C8DDB88A18145452526D04CFA02A512DFF57E0920
7DAEF75368123128E3288CBE17FE866FB0213EB9734627090BFF55F895E46033
14B16ABC545E6FF51B3F92F4E3681F949C953D7B982141EC7A445408FCDFC906
9CB9C6CD3A6FD3AF79662470A902172FF5BAFF93EB96F0028763BBBC84C34E78
85FA35B2EF7798C12DFBAB242B5107A3F2A2896F4C4C3E4924F517ED326030FC
68DC395ADC22F221BDE2BA85677D67D972698E0DC00CC722B6E6BE16CF68D070
4AD4B264D2E83999F73DF2A4656BC5B53FF7E35F9000E546E4D972CA6AE49159
EC6AA6222753F0CBCD80F7557A75FEAD4717FA428A10857D35B48C4110A232C4
C75F23A07EA1357ED1C23E4B4118F147EEC84412DD13760C51C934CFAFE6F221
DE120CBBF8C80477637EBAE71EFC77FF4F8CABDC2B1D37ECDE452652C15272FE
AE06C07652E795EA23CA299CEA82B8B730C218BB9C9F02C5FD72471CCB3D6560
FCF516802CB90798A3B45D92B274920A928AE36EAB7EEC2FC100F12664EA7000
A50E48BED4E6450A04CCB219A5470CDB442B28C3F878B108184636BA0F41904F
5DBF663AC02F8923FB8435A007C9FF0C684749E5F1C23C2DB6BF5840EF7B3457
F381870C5541C1E135C64587E74DB89A13D48F01C2CFB8F35911445061668C02
0B5C72DD0F6A00DDC07835A6370A19A1BBE5F56FC10AD4B152C48BD4641176C5
1D57C59DEE189C6932AB4B3D00E8B27F55597A7A40F498B14912E48897A19BA5
3383AB7B2FD146C1A5CC3A03996EF52A5B10A78F5E01743A5794756A8C651532
91B67CD56F7C49CDDA8AE96CCF10C93BA1423FF9DF4F06E231CCA08CA4892D10
3A1F8A614A4BEF3E036949DE3729E96CB8D815B84E1EDFD65E53F7A80A2E2321
1930F153D57675DAA8B49D285C0785D9EC864006AE869BD0362FBD20DD6B0E85
1F3E72931F4375F48901F9E9C19AC45103F03EF699DD9957D8B9C5A6BBAC75FC
27D071ADFB89344C2822723341D43591CE838E55601308B24C01170112B6DE22
DD0A874BF4E389553EE08FF2F908D9F353F6054C7751186A3CA8C01983ED53C8
6EB3821FE06C0D5382DB667F2F898EAD7FEA2BFD50AC36AE111C1CFA96953540
5031EDD3DDB87A9F84F4EB6CB776DB327483A131FFD27D21F892B9AE334108A1
973911CADEDB4EA280F60C7E5EA333E7730C26A70C09FB28436137F0F871644B
B89B9ED56C4CFF7BBA3E8A3163D33205454A1A4B91E87EB3477A223C93A98D61
805AA64306217A40F84CA2AEC980A2FB52AD261A3A8ADF7E878F337E4C0B0894
F90E0F8ADA806335BB7A9B9B958342136F1C6F4929B3C72DDD593FA39C9F6064
3AC75986DF23E04613CC822ACCB3B38B6C6D9A2D96AF9A7E35E0D21914D97519
413361AF4A2C6DA9D1E487E7467460ECA01ECC383CD156F6191C6BB7FE962462
F0C20768C75537B2F6E5F0E377FD0A494B2732ADB5087C72714564B4988B6F1E
EB6020F85DF8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/A)
@start /Fa 204[406 51[{ enclmrm ReEncodeFont }1 664.176
/LMRoman6-Regular rf /Fb 153[923 102[{ enclmmathit ReEncodeFont }1
1912.83 /LMMathItalic12-Regular rf /Fc 135[530 16[448
452 3[403 500 97[{ enclmmathit ReEncodeFont }5 885.568
/LMMathItalic8-Regular rf /Fd 254[261 732{ enclmmathsy ReEncodeFont }2
885.568 /LMMathSymbols8-Regular rf /Fe 173[959 82[{}1
1328.35 /MSBM10 rf /Ff 177[830 12[830 12[553 1[553 3[307
46[{ enclmec ReEncodeFont }5 1106.96 /LMRoman10-Regular
rf /Fg 160[909 45[606 1[606 47[{ enclmec ReEncodeFont }3
1212.12 /LMRoman10-Regular rf /Fh 203[993 52[{}1 1328.35
/wasy10 rf /Fi 199[470 1[470 470 470 470 470 470 470
4[732 43[{ enclmrm ReEncodeFont }9 885.568 /LMRoman8-Regular
rf /Fj 149[369 55[886 48[369 1033{ enclmmathsy ReEncodeFont }4
1328.35 /LMMathSymbols10-Regular rf /Fk 165[615 7[523
82[{ enclmmathex ReEncodeFont }2 1106.96 /LMMathExtension10-Regular
rf /Fl 155[723 6[361 1[361 29[1012 1[361 2[650 650 650
650 650 650 650 650 650 4[1012 1[506 506 40[{ enclmrm ReEncodeFont }17
1328.35 /LMRoman12-Regular rf /Fm 135[739 15[749 623
641 603 676 560 553 683 16[838 6[574 2[842 2[931 1[975
2[1012 650 1012 361 361 58[{ enclmmathit ReEncodeFont }19
1328.35 /LMMathItalic12-Regular rf /Fn 650 2[723 5[650
17[650 105[578 686 686 939 686 723 506 513 506 1[723
650 723 1084 361 686 397 361 723 650 397 578 723 578
723 650 6[795 2[1336 3[723 957 1[885 1[975 1[813 1011
1[469 1[1021 849 885 993 1[921 975 1[614 4[361 650 650
650 650 650 650 650 650 650 2[361 434 361 2[506 506 6[361
2[1084 2[759 27[{ enclmec ReEncodeFont }63 1328.35 /LMRoman12-Regular
rf /Fo 27[1046 105[956 1[1136 1554 1[1196 837 849 879
1[1196 1076 1196 1793 598 1136 1[598 1196 1076 658 982
1196 956 1196 1046 11[1654 1497 1196 3[1616 1682 2041
1[1685 1[801 1682 1[1353 1412 1[1554 1530 1625 7[1076
1076 1076 1076 1076 1076 1076 1076 1076 1076 1076 598
717 45[{ enclmec ReEncodeFont }50 1912.83 /LMRoman12-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fo(AN)718
b(4.2)f(-)h(1)f(Un)-60 b(b)60 b(estimm)-60 b(tes)716
b(In)-60 b(tegral)717 b(-)g(MC)h(-)g(BIFIE)p 0 TeXcolorgray
-741 4800 a Fn(1.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)363
b(sind)h(A)-36 b(ussagen)363 b(\374b)36 b(er)364 b(die)f(L\366sung)h
(eines)g(un)-36 b(b)36 b(estimm)-36 b(ten)362 b(In)-36
b(tegrals.)365 b(Nur)e(eine)921 6792 y(Rec)-36 b(hn)g(ung)496
b(ist)h(ric)-36 b(h)g(tig.)497 b(Die)h(In)-36 b(tegrationsk)g(onstan)g
(te)497 b(wird)f(in)h(allen)h(F)-27 b(\344llen)497 b(mit)g
Fm(c)476 b Fl(=)h(0)921 8784 y Fn(angenommen.)921 11330
y(Kreuze)433 b(die)h(k)-36 b(orrekte)434 b(Rec)-36 b(hn)g(ung)432
b(an!)p 12484 12296 21416 45 v 12484 17076 45 4780 v
13192 13671 a Fk(Z)14521 15233 y Fl(3)295 b Fj(\001)g
Fl(\(2)p Fm(x)h Fl(+)f(5\))p Fm(dx)369 b Fl(=)f(\(6)p
Fm(x)296 b Fl(+)f(5\))28602 14685 y Fi(2)p 31490 17076
V 33856 17076 V 12484 17120 21416 45 v 12484 21900 45
4780 v 13192 18495 a Fk(Z)14521 20057 y Fl(3)g Fj(\001)g
Fl(\(2)p Fm(x)h Fl(+)f(5\))p Fm(dx)369 b Fl(=)f(3)p Fm(x)25337
19509 y Fi(2)26159 20057 y Fl(+)295 b(5)p Fm(x)p 31490
21900 V 33856 21900 V 12484 21944 21416 45 v 12484 26724
45 4780 v 13192 23319 a Fk(Z)14521 24881 y Fl(3)g Fj(\001)g
Fl(\(2)p Fm(x)h Fl(+)f(5\))p Fm(dx)369 b Fl(=)f(\(6)p
Fm(x)296 b Fl(+)f(15\))29252 24332 y Fi(2)p 31490 26724
V 33856 26724 V 12484 26768 21416 45 v 12484 31547 45
4780 v 13192 28143 a Fk(Z)14521 29705 y Fl(3)g Fj(\001)g
Fl(\(2)p Fm(x)h Fl(+)f(5\))p Fm(dx)369 b Fl(=)f(3)296
b Fj(\001)f Fl(\()p Fm(x)26803 29156 y Fi(2)27624 29705
y Fl(+)g(5)p Fm(x)p Fl(\))p 31490 31547 V 1 0 0 TeXcolorrgb
32199 29490 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 33856 31547 V 12484 31592 21416 45 v 12484
36371 45 4780 v 13192 32966 a Fk(Z)14521 34529 y Fl(3)g
Fj(\001)g Fl(\(2)p Fm(x)h Fl(+)f(5\))p Fm(dx)369 b Fl(=)f(3)p
Fm(x)25337 33980 y Fi(2)26159 34529 y Fl(+)295 b(15)p
31490 36371 V 33856 36371 V 12484 36416 21416 45 v 12484
41195 45 4780 v 13192 37790 a Fk(Z)14521 39352 y Fl(3)g
Fj(\001)g Fl(\(2)p Fm(x)h Fl(+)f(5\))p Fm(dx)369 b Fl(=)f(6)p
Fm(x)25337 38804 y Fi(2)26159 39352 y Fl(+)295 b(15)p
Fm(x)p 31490 41195 V 33856 41195 V 12484 41239 21416
45 v 47992 4800 a Fg(___/1)p 1 0 0 TeXcolorrgb 47998
6792 a Ff(AN)369 b(4.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 45268 54804 45 v -2331 50569 a Fo(AN)718
b(4.2)f(-)h(2)f(In)-60 b(tegral)717 b(Berec)-60 b(hnen)716
b(-)i(O)-60 b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray -741
53876 a Fn(2.)p 0 TeXcolorgray 651 w(Berec)-36 b(hne:)19142
54306 y Fk(Z)20471 55868 y Fl(\()p Fm(ah)22409 55320
y Fi(3)23229 55868 y Fl(+)295 b Fm(a)25219 55320 y Fi(2)25744
55868 y Fl(\))p Fm(dh)p 1 0 0 TeXcolorrgb 1054 62392
a(ah)2486 61910 y Fi(4)p 1054 62980 1958 45 v 1707 64202
a Fl(4)3439 63290 y(+)g Fm(a)5429 62808 y Fi(2)5955 63290
y Fm(h)f Fl(+)h Fm(C)529 b Fn(\(mit)433 b Fm(C)464 b
Fj(2)369 b Fe(R)p Fl(\))p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 53876 a Fg(___/1)p 1 0 0 TeXcolorrgb
47998 55868 a Ff(AN)g(4.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 67677 54804 45 v 0 TeXcolorgray
24746 81281 a Fn(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fo(AN)718 b(4.2)f(-)h(3)f(In)-60
b(tegrationsregeln)715 b(-)j(MC)g(-)f(BIFIE)p 0 TeXcolorgray
-741 4800 a Fn(3.)p 0 TeXcolorgray 651 w(Es)434 b(sei)f
Fm(f)576 b Fn(eine)434 b(reelle)g(F)-108 b(unktion)432
b(und)h Fm(a)g Fn(eine)h(reelle)g(Zahl.)921 9338 y(Kreuze)f(die)h(b)36
b(eiden)433 b(zutre\033enden)e(Gleic)-36 b(h)g(ungen)433
b(an.)p 10507 10305 25370 45 v 10507 15084 45 4780 v
11216 11679 a Fk(Z)12544 13241 y Fm(a)295 b Fj(\001)g
Fm(f)142 b Fl(\()p Fm(x)p Fl(\))p Fm(dx)369 b Fl(=)f
Fm(a)295 b Fj(\001)21526 11679 y Fk(Z)22855 13241 y Fm(f)142
b Fl(\()p Fm(x)p Fl(\))p Fm(dx)p 33467 15084 V 1 0 0
TeXcolorrgb 34176 13026 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 35832 15084 V 10507 15128
25370 45 v 10507 19908 45 4780 v 11216 16503 a Fk(Z)12544
18065 y Fm(f)g Fl(\()p Fm(a)295 b Fj(\001)g Fm(x)p Fl(\))p
Fm(dx)369 b Fl(=)19884 16503 y Fk(Z)21213 18065 y Fm(f)142
b Fl(\()p Fm(a)p Fl(\))p Fm(dx)294 b Fj(\001)26064 16503
y Fk(Z)27393 18065 y Fm(f)142 b Fl(\()p Fm(x)p Fl(\))p
Fm(dx)p 33467 19908 V 35832 19908 V 10507 19952 25370
45 v 10507 24732 45 4780 v 11216 21327 a Fk(Z)12544 22889
y Fl(\()p Fm(a)295 b Fl(+)f Fm(f)142 b Fl(\()p Fm(x)p
Fl(\)\))p Fm(dx)369 b Fl(=)21539 21327 y Fk(Z)22867 22889
y Fm(a)295 b Fj(\001)g Fm(dx)g Fl(+)27526 21327 y Fk(Z)28854
22889 y Fm(f)142 b Fl(\()p Fm(x)p Fl(\))p Fm(dx)p 33467
24732 V 1 0 0 TeXcolorrgb 34176 22674 a Fh(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 35832 24732
V 10507 24776 25370 45 v 10507 29556 45 4780 v 11216
26151 a Fk(Z)12544 27713 y Fm(f)g Fl(\()p Fm(a)295 b
Fl(+)f Fm(x)p Fl(\))p Fm(dx)369 b Fl(=)20527 26151 y
Fk(Z)21855 27713 y Fm(f)142 b Fl(\()p Fm(a)p Fl(\))p
Fm(dx)295 b Fl(+)27350 26151 y Fk(Z)28678 27713 y Fm(f)142
b Fl(\()p Fm(x)p Fl(\))p Fm(dx)p 33467 29556 V 35832
29556 V 10507 29600 25370 45 v 10507 34393 45 4793 v
11216 30975 a Fk(Z)12544 32537 y Fm(f)g Fl(\()p Fm(x)p
Fl(\))15078 31988 y Fi(2)15603 32537 y Fm(dx)369 b Fl(=)18901
31638 y Fm(f)142 b Fl(\()p Fm(x)p Fl(\))21435 31156 y
Fi(3)p 18901 32227 3060 45 v 20105 33448 a Fl(3)22388
32537 y(+)295 b Fm(c)p 33467 34393 45 4793 v 35832 34393
V 10507 34437 25370 45 v 47992 4800 a Fg(___/1)p 1 0 0
TeXcolorrgb 47998 6792 a Ff(AN)369 b(4.2)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 38465 54804 45
v 0 TeXcolorgray 24746 81281 a Fn(2)p 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fo(AN)734 b(4.2)f(-)h(4)f(Stammfunktion)e
(der)h(Exp)60 b(onen)-60 b(tialfunktion)729 b(-)734 b(MC)-2617
4515 y(-)718 b(BIFIE)g(-)g(K)-60 b(omp)60 b(etenzc)-60
b(hec)g(k)716 b(2016)p 0 TeXcolorgray -741 7823 a Fn(4.)p
0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(ist)h(eine)f(F)-108
b(unktion)433 b Fm(f)575 b Fn(mit)434 b(der)f(F)-108
b(unktionsgleic)-36 b(h)g(ung)433 b Fm(f)142 b Fl(\()p
Fm(x)p Fl(\))369 b(=)f Fm(e)38335 7341 y Fi(2)p Fd(\001)p
Fc(x)39652 7823 y Fn(.)855 12360 y(W)-108 b(elc)-36 b(he)548
b(v)-36 b(on)549 b(den)f(un)-36 b(ten)547 b(durc)-36
b(h)548 b(ihre)g(F)-108 b(unktionsgleic)-36 b(h)g(ungen)548
b(angegeb)36 b(enen)548 b(F)-108 b(unktio-)921 14352
y(nen)525 b Fm(F)707 b Fn(ist)526 b(Stammfunktionen)g(v)-36
b(on)526 b Fm(f)669 b Fn(und)524 b(v)-36 b(erl\344uft)527
b(durc)-36 b(h)525 b(den)g(Punkt)h Fm(P)708 b Fl(=)526
b(\(0)p Fm(=)p Fl(1\))p Fn(?)921 16344 y(Kreuze)433 b(die)h
(zutre\033ende)e(An)-36 b(t)g(w)g(ort)433 b(an.)p 16138
19044 14109 45 v 16138 22486 45 3442 v 16846 21083 a
Fm(F)181 b Fl(\()p Fm(x)p Fl(\))369 b(=)f Fm(e)21972
20601 y Fi(2)p Fd(\001)p Fc(x)23584 21083 y Fl(+)25024
20560 y Fi(1)p 25024 20773 471 45 v 25024 21541 a(2)p
27837 22486 45 3442 v 30202 22486 V 16138 22530 14109
45 v 16138 25805 45 3275 v 16846 24528 a Fm(F)181 b Fl(\()p
Fm(x)p Fl(\))369 b(=)f(2)296 b Fj(\001)f Fm(e)23582 24046
y Fi(2)p Fd(\001)p Fc(x)25194 24528 y Fj(\000)g Fl(1)p
27837 25805 V 30202 25805 V 16138 25849 14109 45 v 16138
29123 45 3275 v 16846 27846 a Fm(F)181 b Fl(\()p Fm(x)p
Fl(\))369 b(=)f(2)296 b Fj(\001)f Fm(e)23582 27364 y
Fi(2)p Fd(\001)p Fc(x)p 27837 29123 V 30202 29123 V 16138
29168 14109 45 v 16138 33920 45 4753 v 16846 32064 a
Fm(F)181 b Fl(\()p Fm(x)p Fl(\))369 b(=)21502 31165 y
Fm(e)22105 30683 y Fi(2)p Fd(\001)p Fc(x)p 21502 31754
1920 45 v 22137 32975 a Fl(2)23850 32064 y(+)25289 31165
y(1)p 25289 31754 651 45 v 25289 32975 a(2)p 27837 33920
45 4753 v 1 0 0 TeXcolorrgb 28545 31876 a Fh(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 30202 33920
V 16138 33964 14109 45 v 16138 37239 45 3275 v 16846
35962 a Fm(F)181 b Fl(\()p Fm(x)p Fl(\))369 b(=)f Fm(e)21972
35480 y Fi(2)p Fd(\001)p Fc(x)p 27837 37239 V 30202 37239
V 16138 37283 14109 45 v 16138 42036 45 4753 v 16846
40179 a Fm(F)181 b Fl(\()p Fm(x)p Fl(\))369 b(=)21502
39281 y Fm(e)22105 38799 y Fi(2)p Fd(\001)p Fc(x)p 21502
39870 1920 45 v 22137 41091 a Fl(2)p 27837 42036 45 4753
v 30202 42036 V 16138 42080 14109 45 v 47992 7823 a Fg(___/1)p
1 0 0 TeXcolorrgb 47998 9815 a Ff(AN)g(4.2)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 46108 54804 45
v 0 TeXcolorgray 24746 81281 a Fn(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fo(AN)525 b(4.2)f(-)g(5)g(In)-60
b(tegral)524 b(einer)f(F)-179 b(unktion)522 b Fb(f)728
b Fo(-)525 b(O)-60 b(A)524 b(-)h(Matura)e(2014/15)-2617
4622 y(-)718 b(Haupttermin)p 0 TeXcolorgray -741 7929
a Fn(5.)p 0 TeXcolorgray 651 w(Die)546 b(nac)-36 b(hstehende)543
b(Abbildung)h(zeigt)h(den)f(Graphen)g(der)g(P)-36 b(olynomfunktion)546
b Fm(f)142 b Fn(.)546 b(Alle)921 9921 y(Nullstellen)500
b(sind)f(ganzzahlig.)i(Die)f(Fl\344c)-36 b(he,)500 b(die)f(v)-36
b(om)500 b(Graphen)e(der)h(F)-108 b(unktion)498 b Fm(f)641
b Fn(und)921 11913 y(der)489 b Fm(x)p Fn(-A)-36 b(c)g(hse)489
b(b)36 b(egrenzt)490 b(wird,)g(ist)g(sc)-36 b(hra\036ert)489
b(dargestellt.)i Fm(A)f Fn(b)36 b(ezeic)-36 b(hnet)489
b(die)h(Summe)921 13905 y(der)433 b(b)36 b(eiden)433
b(sc)-36 b(hra\036erten)433 b(Fl\344c)-36 b(heninhalte.)p
0 TeXcolorgray 0 TeXcolorgray 12701 40190 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 193.4605 a add def
/d 0.0 a add neg def /h 200.4595 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 12701 40190
a 23407 29002 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -85.35823 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 96.74696 0.0 -96.71353 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -85.35823 0.0 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 99.39053 0.0 -101.06897   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 96.74696  0 -96.71353  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -96.71353
 96.74696  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-101.06897  def /maxTickline 99.39053  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 99.39053
0.0 -101.06897   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 96.74696
0.0 -96.71353 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 99.39053  0 -101.06897  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -101.06897
 99.39053  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-96.71353  def /maxTickline 96.74696  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 99.39053
0.0 -101.06897   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 96.74696
0.0 -96.71353 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 22162 26138 a
Fi(1)22161 22988 y(2)22161 19838 y(3)21430 32391 y Fd(\000)p
Fi(1)21430 35540 y Fd(\000)p Fi(2)21430 38690 y Fd(\000)p
Fi(3)26321 30348 y(1)2680 b(2)f(3)-13434 b Fd(\000)p
Fi(1)-4352 b Fd(\000)p Fi(2)h Fd(\000)p Fi(3)23407 29002
y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 23407 29002 a 23407 29002 a
tx@Dict begin  { 96.74696 99.39053 pop 0.0 0.0 exch pop } PutCoor PutBegin
 end
 23407 29002 a 23407 29002
a
tx@Dict begin  { 5.0 6.67703 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 23407 29002 a 23037 29288 a Fm(x)23407 29002 y
tx@Dict begin  PutEnd  end
 23407
29002 a 23407 29002 a
tx@Dict begin  PutEnd  end
 23407 29002 a 23407 29002 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 23407
29002 a 23407 29002 a
tx@Dict begin  { 0.0 0.0 pop 96.74696 99.39053 exch pop } PutCoor PutBegin
 end
 23407 29002 a 23407 29002 a
tx@Dict begin  { 5.0 22.88857 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 23407
29002 a 22140 29334 a Fm(f)142 b Fl(\()p Fm(x)p Fl(\))23407
29002 y
tx@Dict begin  PutEnd  end
 23407 29002 a 23407 29002 a
tx@Dict begin  PutEnd  end
 23407 29002 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   0.8 SLW 0  setgray
 /ArrowA { /lineto load stopped { moveto } if } def /ArrowB { } def
/ArrowInside { } def    /x -2. def /x1 1. def /dx x1 x sub 49 div def
/F@pstplot (-0.5*x^(3.0)+0.5*x^(2.0)+2.0*x-2.0)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy /lineto load stopped { moveto } if  49 1 sub { /x x dx
add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
28.45274 0.0 lineto -56.90549 0.0 lineto closepath gsave 90 rotate
 /clipType { clip } def 45.0 rotate 0.8 SLW 0  setgray 4.99884 0.0
0.0 LineFill  grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   0.8 SLW 0  setgray
 /ArrowA { /lineto load stopped { moveto } if } def /ArrowB { } def
/ArrowInside { } def    /x 1. def /x1 2. def /dx x1 x sub 49 div def
/F@pstplot (-0.5*x^(3.0)+0.5*x^(2.0)+2.0*x-2.0)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy /lineto load stopped { moveto } if  49 1 sub { /x x dx
add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
56.90549 0.0 lineto 28.45274 0.0 lineto closepath gsave 90 rotate 
/clipType { clip } def 45.0 rotate 0.8 SLW 0  setgray 4.99884 0.0 0.0
LineFill  grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha  
0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -3.399092081089317 def /x1 3.4002745941473695
def /dx x1 x sub 199 div def /F@pstplot (-0.5*x^(3.0)+0.5*x^(2.0)+2.0*x-2.0)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy moveto  199 1 sub { /x x
dx add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 23407 29002 a
tx@Dict begin  { -76.21753 76.39511 } PutCoor PutBegin  end

23407 29002 a 922 x Fm(f)23407 29002 y
tx@Dict begin  PutEnd  end
 23407 29002 a
34116 40190 a
currentpoint initclip moveto
 34116 40190 a 921 46166 a Fn(Gib)433 b(einen)g(k)-36
b(orrekten)434 b(A)-36 b(usdruc)g(k)433 b(f\374r)g Fm(A)h
Fn(mithilfe)g(der)f(In)-36 b(tegralsc)g(hreib)g(w)g(eise)434
b(an.)921 50704 y Fm(A)369 b Fl(=)p 3646 50704 18898
34 v 1 0 0 TeXcolorrgb 15044 55241 a Fm(A)g Fl(=)17768
53679 y Fk(Z)18875 54029 y Fi(2)18383 56194 y(1)19622
55241 y Fm(f)142 b Fl(\()p Fm(x)p Fl(\))221 b(d)p Fm(x)295
b Fj(\000)25463 53679 y Fk(Z)26570 54029 y Fi(1)26078
56194 y Fd(\000)p Fi(2)27557 55241 y Fm(f)142 b Fl(\()p
Fm(x)p Fl(\))221 b(d)p Fm(x)921 62663 y Fn(o)36 b(der:)18411
69192 y Fm(A)369 b Fl(=)21136 67630 y Fk(Z)22243 67981
y Fi(2)21751 70145 y Fd(\000)p Fi(2)23230 69192 y Fj(j)p
Fm(f)142 b Fl(\()p Fm(x)p Fl(\))p Fj(j)442 b Fl(d)p Fm(x)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
7929 a Fg(___/1)p 1 0 0 TeXcolorrgb 47998 9921 a Ff(AN)369
b(4.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 75552 54804 45 v 0 TeXcolorgray 24746 81281 a Fn(4)p
0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fo(AN)997 b(4.2)f(-)h(6)f(In)-60
b(tegrationsregeln)995 b(-)i(MC)f(-)h(Matura)f(2014/15)h(-)-2331
4622 y(Neb)60 b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray
-741 7929 a Fn(6.)p 0 TeXcolorgray 651 w(Zw)-36 b(ei)338
b(nac)-36 b(hstehend)335 b(angef\374hrt)i(Gleic)-36 b(h)g(ungen)336
b(sind)h(f\374r)g(alle)h(P)-36 b(olynomfunktionen)338
b Fm(f)479 b Fn(und)921 9921 y(b)36 b(ei)434 b(b)36 b(eliebiger)434
b(W)-108 b(ahl)434 b(der)f(In)-36 b(tegrationsgrenzen)433
b Fm(a)g Fn(und)g Fm(b)g Fn(\(mit)h Fm(a)368 b(<)h(b)p
Fn(\))433 b(ric)-36 b(h)g(tig.)921 14458 y(Kreuze)433
b(die)h(b)36 b(eiden)433 b(zutre\033enden)e(Gleic)-36
b(h)g(ungen)433 b(an.)p 9912 15425 26561 45 v 9912 20260
45 4835 v 10620 16800 a Fk(Z)11727 17150 y Fc(b)11235
19315 y(a)12406 18362 y Fl(\()p Fm(f)142 b Fl(\()p Fm(x)p
Fl(\))295 b(+)g Fm(x)p Fl(\))221 b Fm(dx)369 b Fl(=)21679
16800 y Fk(Z)22786 17150 y Fc(b)22294 19315 y(a)23465
18362 y Fm(f)142 b Fl(\()p Fm(x)p Fl(\))221 b Fm(dx)295
b Fl(+)29237 16800 y Fk(Z)30344 17150 y Fc(b)29852 19315
y(a)31023 18362 y Fm(x)221 b(dx)p 34063 20260 V 1 0 0
TeXcolorrgb 34771 18174 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 36428 20260 V 9912 20304 26561
45 v 9912 25139 45 4835 v 10620 21679 a Fk(Z)11727 22029
y Fc(b)11235 24194 y(a)12406 23241 y Fm(f)142 b Fl(\(2)295
b Fj(\001)h Fm(x)p Fl(\))221 b Fm(dx)369 b Fl(=)20068
22342 y(1)p 20068 22931 651 45 v 20068 24152 a(2)21147
23241 y Fj(\001)21811 21679 y Fk(Z)22918 22029 y Fc(b)22426
24194 y(a)23597 23241 y Fm(f)142 b Fl(\()p Fm(x)p Fl(\))221
b Fm(dx)p 34063 25139 45 4835 v 36428 25139 V 9912 25183
26561 45 v 9912 30018 45 4835 v 10620 26558 a Fk(Z)11727
26909 y Fc(b)11235 29073 y(a)12406 28120 y Fl(\(1)296
b Fj(\000)f Fm(f)142 b Fl(\()p Fm(x)p Fl(\)\))221 b Fm(dx)369
b Fl(=)f Fm(x)296 b Fj(\000)23974 26558 y Fk(Z)25081
26909 y Fc(b)24589 29073 y(a)25760 28120 y Fm(f)142 b
Fl(\()p Fm(x)p Fl(\))221 b Fm(dx)p 34063 30018 V 36428
30018 V 9912 30062 26561 45 v 9912 34897 45 4835 v 10620
31437 a Fk(Z)11727 31788 y Fc(b)11235 33952 y(a)12406
32999 y Fl(\()p Fm(f)142 b Fl(\()p Fm(x)p Fl(\))295 b(+)g(2\))221
b Fm(dx)369 b Fl(=)21590 31437 y Fk(Z)22697 31788 y Fc(b)22205
33952 y(a)23376 32999 y Fm(f)142 b Fl(\()p Fm(x)p Fl(\))221
b Fm(dx)295 b Fl(+)g(2)p 34063 34897 V 36428 34897 V
9912 34942 26561 45 v 9912 39777 45 4835 v 10620 36316
a Fk(Z)11727 36667 y Fc(b)11235 38832 y(a)12406 37878
y Fl(\(3)h Fj(\001)f Fm(f)142 b Fl(\()p Fm(x)p Fl(\)\))221
b Fm(dx)369 b Fl(=)f(3)296 b Fj(\001)22557 36316 y Fk(Z)23664
36667 y Fc(b)23172 38832 y(a)24343 37878 y Fm(f)142 b
Fl(\()p Fm(x)p Fl(\))221 b Fm(dx)p 34063 39777 V 1 0 0
TeXcolorrgb 34771 37691 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 36428 39777 V 9912 39821 26561
45 v 47992 7929 a Fg(___/1)p 1 0 0 TeXcolorrgb 47998
9921 a Ff(AN)369 b(4.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 43849 54804 45 v 0 TeXcolorgray
24746 81281 a Fn(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fo(AN)633 b(4.2)e(-)i(7)f(In)-60
b(tegral)632 b(-)g(MC)g(-)h(Matura)f(2015/16)f(-)i(Neb)60
b(en)-60 b(termin)-2438 4622 y(1)p 0 TeXcolorgray -741
7929 a Fn(7.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(ist)h(das)f(b)36 b(estimm)-36 b(te)433 b(In)-36 b(tegral)13535
12466 y Fm(I)473 b Fl(=)15963 10904 y Fk(Z)17070 11255
y Fc(a)16578 13419 y Fi(0)17625 12466 y Fl(\(25)295 b
Fj(\001)h Fm(x)21130 11918 y Fi(2)21951 12466 y Fl(+)f(3\))221
b Fm(dx)434 b Fn(mit)f Fm(a)369 b Fj(2)g Fe(R)32134 11918
y Fi(+)32921 12466 y Fm(:)921 15905 y Fn(Kreuze)401 b(die)g(b)36
b(eiden)401 b(A)-36 b(usdr\374c)g(k)g(e)400 b(an,)h(die)h(f\374r)f
(alle)h Fm(a)369 b(>)f Fl(0)402 b Fn(denselb)36 b(en)400
b(W)-108 b(ert)401 b(wie)h Fm(I)505 b Fn(hab)36 b(en.)p
13464 16871 19455 45 v 13464 21706 45 4835 v 14173 19808
a Fl(25)296 b Fj(\001)16433 18246 y Fk(Z)17540 18597
y Fc(a)17048 20761 y Fi(0)18095 19808 y Fm(x)18834 19260
y Fi(2)19581 19808 y Fm(dx)g Fl(+)22598 18246 y Fk(Z)23705
18597 y Fc(a)23213 20761 y Fi(0)24260 19808 y Fl(3)221
b Fm(dx)p 30510 21706 V 1 0 0 TeXcolorrgb 31218 19621
a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
32875 21706 V 13464 21750 19455 45 v 13464 26585 45 4835
v 14173 23125 a Fk(Z)15280 23476 y Fc(a)14788 25641 y
Fi(0)15835 24687 y Fl(25)g Fm(dx)296 b Fj(\001)19731
23125 y Fk(Z)20838 23476 y Fc(a)20346 25641 y Fi(0)21393
24687 y Fm(x)22132 24139 y Fi(2)22880 24687 y Fm(dx)f
Fl(+)25897 23125 y Fk(Z)27004 23476 y Fc(a)26512 25641
y Fi(0)27559 24687 y Fl(3)221 b Fm(dx)p 30510 26585 V
32875 26585 V 13464 26630 19455 45 v 13464 31465 45 4835
v 14173 28004 a Fk(Z)15280 28355 y Fc(a)14788 30520 y
Fi(0)15835 29566 y Fl(25)296 b Fj(\001)f Fm(x)18834 29018
y Fi(2)19581 29566 y Fm(dx)h Fl(+)e(3)p 30510 31465 V
32875 31465 V 13464 31509 19455 45 v 13464 36261 45 4753
v 14306 33506 a(25)i Fj(\001)f Fm(a)17249 33024 y Fi(3)p
14306 34095 3469 45 v 15715 35316 a Fl(3)18202 34405
y(+)g(3)h Fj(\001)f Fm(a)p 30510 36261 45 4753 v 1 0 0
TeXcolorrgb 31218 34217 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 32875 36261 V 13464 36305
19455 45 v 13464 39032 45 2727 v 14173 38087 a Fl(50)h
Fj(\001)f Fm(a)p 30510 39032 V 32875 39032 V 13464 39076
19455 45 v 47992 7929 a Fg(___/1)p 1 0 0 TeXcolorrgb
47998 9921 a Ff(AN)369 b(4.2)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 43104 54804 45 v 0 TeXcolorgray
24746 81281 a Fn(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fo(AN)718 b(4.2)f(-)h(8)f(Fl\344c)-60
b(heninhalt)715 b(-)i(O)-60 b(A)718 b(-)g(Matura)f(NT)g(2)h(15/16)p
0 TeXcolorgray -741 4907 a Fn(8.)p 0 TeXcolorgray 651
w(Abgebildet)966 b(ist)g(ein)g(A)-36 b(ussc)g(hnitt)964
b(des)i(Graphen)e(der)i(P)-36 b(olynomfunktion)967 b
Fm(f)1107 b Fn(mit)921 6899 y Fm(f)142 b Fl(\()p Fm(x)p
Fl(\))369 b(=)f Fj(\000)6370 6376 y Fc(x)6900 6063 y
Fa(3)p 6370 6589 991 45 v 6630 7357 a Fi(8)7789 6899
y Fl(+)295 b(2)h Fj(\001)f Fm(x)p Fn(.)921 9444 y(Die)401
b(Fl\344c)-36 b(he)401 b(zwisc)-36 b(hen)401 b(dem)f(Graphen)f(der)h(F)
-108 b(unktion)400 b Fm(f)542 b Fn(und)400 b(der)g(x-A)-36
b(c)g(hse)400 b(im)h(In)-36 b(terv)-72 b(all)921 11436
y Fl([)8 b Fj(\000)p Fl(2;)221 b(2])435 b Fn(ist)f(grau)g(markiert.)p
0 TeXcolorgray 0 TeXcolorgray 7666 44669 a
 currentpoint currentpoint translate 0.84589 0.84589 scale neg exch
neg exch translate
 7666 44669
a 8100 44669 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 332.32826 a add def
/d 0.0 a add neg def /h 328.91364 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 8100 44669 a 26116 26213 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -142.26372 T 12
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 169.57854 0.0 -162.74973 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -142.26372 0.0 T 12
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 162.18054 0.0 -166.7331   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 169.57854  0 -162.74973  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -162.74973
 169.57854  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-166.7331  def /maxTickline 162.18054  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 162.18054
0.0 -166.7331   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 169.57854
0.0 -162.74973 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 162.18054  0 -166.7331  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -166.7331
 162.18054  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-162.74973  def /maxTickline 169.57854  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 162.18054
0.0 -166.7331   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 169.57854
0.0 -162.74973 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
24871 23349 a Fi(1)24870 20199 y(2)24870 17049 y(3)24870
13900 y(4)24870 10750 y(5)24138 29602 y Fd(\000)p Fi(1)24138
32751 y Fd(\000)p Fi(2)24138 35901 y Fd(\000)p Fi(3)24138
39050 y Fd(\000)p Fi(4)24138 42200 y Fd(\000)p Fi(5)29030
27558 y(1)2680 b(2)f(3)h(4)f(5)-19733 b Fd(\000)p Fi(1)-4352
b Fd(\000)p Fi(2)h Fd(\000)p Fi(3)f Fd(\000)p Fi(4)g
Fd(\000)p Fi(5)26116 26213 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 26116 26213 a 26116 26213
a
tx@Dict begin  { 169.57854 162.18054 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 26116 26213 a 26116 26213 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 26116 26213 a 25773 26499
a Fn(x)26116 26213 y
tx@Dict begin  PutEnd  end
 26116 26213 a 26116 26213 a
tx@Dict begin  PutEnd  end
 26116
26213 a 26116 26213 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 26116 26213 a 26116 26213 a
tx@Dict begin  { 0.0 0.0 pop 169.57854 162.18054 exch pop } PutCoor
PutBegin  end
 26116
26213 a 26116 26213 a
tx@Dict begin  { 5.0 18.93042 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 26116 26213 a 25068 26545 a Fn(f\(x\))26116
26213 y
tx@Dict begin  PutEnd  end
 26116 26213 a 26116 26213 a
tx@Dict begin  PutEnd  end
 26116 26213 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  /ArrowA { /lineto load
stopped { moveto } if } def /ArrowB { } def /ArrowInside { } def  
 /x -2. def /x1 2. def /dx x1 x sub 49 div def /F@pstplot ((-x^(3.0))/8.0+2.0*x)
 tx@AlgToPs begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot
28.45274 mul } def  /ps@Exit false def xy /lineto load stopped { moveto
} if  49 1 sub { /x x dx add def xy  dup 1.e30 28.45274 mul gt { moveto
} { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  }
ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } if  56.90549 0.0 lineto -56.90549 0.0 lineto closepath
gsave 0.12549 0.12549 0.12549  setrgbcolor  0.25 .setopacityalpha 
fill  grestore gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor 
1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -5.720000000000001 def /x1 5.959999999999994
def /dx x1 x sub 199 div def /F@pstplot ((-x^(3.0))/8.0+2.0*x)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul
} def  /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy
 dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 2.0 SLW
0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
26116 26213 a
tx@Dict begin  { -129.74443 114.38014 } PutCoor PutBegin  end
 26116 26213 a -258 x Fm(f)26116 26213 y
tx@Dict begin  PutEnd  end

26116 26213 a 26116 26213 a
tx@Dict begin  { -3.41418 6.82881 } PutCoor PutBegin  end
 26116 26213 a 0.12549 0.12549 0.12549
TeXcolorrgb Fl(0)p 0 TeXcolorgray 26116 26213 a
tx@Dict begin  PutEnd  end
 26116
26213 a 44887 44669 a
currentpoint initclip moveto
 44887 44669 a 7666 44669 a
 currentpoint currentpoint translate 1 0.84589 div 1 0.84589 div scale
neg exch neg exch translate
 7666
44669 a 921 48654 a Fn(Brec)-36 b(hne)433 b(den)g(Inhalt)g(der)g(grau)h
(markierten)f(Fl\344c)-36 b(he!)p 1 0 0 TeXcolorrgb 18502
55183 a Fl(2)296 b Fj(\001)20112 53621 y Fk(Z)21219 53972
y Fi(2)20727 56136 y(0)21966 55183 y Fm(f)142 b Fl(\()p
Fm(x)p Fl(\))p Fm(dx)369 b Fl(=)g(7)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4907 a Fg(___/1)p
1 0 0 TeXcolorrgb 47998 6899 a Ff(AN)g(4.2)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 61543 54804 45
v 0 TeXcolorgray 24746 81281 a Fn(7)p 0 TeXcolorgray
eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fo(AN)479 b(4.2)f(-)g(9)g(Sc)-60
b(hnitt)477 b(zw)-60 b(eier)479 b(F)-179 b(unktionen)475
b(-)j(O)-60 b(A)478 b(-)h(Matura)f(2013/14)-2331 4622
y(Haupttermin)p 0 TeXcolorgray -741 7929 a Fn(9.)p 0
TeXcolorgray 651 w(Gegeb)36 b(en)756 b(sind)g(die)h(b)36
b(eiden)756 b(rellen)h(F)-108 b(unktionen)756 b Fm(f)899
b Fn(und)755 b Fm(g)805 b Fn(mit)756 b(den)g(Gleic)-36
b(h)g(ungen)921 9921 y Fm(f)142 b Fl(\()p Fm(x)p Fl(\))369
b(=)f Fm(x)5943 9439 y Fi(2)6903 9921 y Fn(und)432 b
Fm(g)48 b Fl(\()p Fm(x)p Fl(\))368 b(=)h Fj(\000)p Fm(x)15447
9439 y Fi(2)16268 9921 y Fl(+)295 b(8)p Fn(.)921 12466
y(Im)417 b(nac)-36 b(hstehenden)415 b(K)-36 b(o)36 b(ordinatensystem)
417 b(sind)g(die)f(Graphen)g(der)g(b)36 b(eiden)416 b(F)-108
b(unktionen)921 14458 y Fm(f)597 b Fn(und)454 b Fm(g)503
b Fn(dargestellt.)457 b(Sc)-36 b(hra\036ere)454 b(jene)i(Fl\344c)-36
b(he,)455 b(deren)g(Gr\366\377e)g Fm(A)h Fn(mit)f Fm(A)406
b Fl(=)40312 13511 y Fk(R)41050 13862 y Fi(1)40835 14796
y(0)41797 14458 y Fm(g)48 b Fl(\()p Fm(x)p Fl(\))o Fn(d)p
Fm(x)p Fn(-)921 15503 y Fk(R)1659 15854 y Fi(1)1444 16788
y(0)2406 16450 y Fm(f)142 b Fl(\()p Fm(x)p Fl(\))p Fn(d)p
Fm(x)433 b Fn(b)36 b(erec)-36 b(hnet)432 b(w)-36 b(erden)433
b(kann!)p 0 TeXcolorgray 0 TeXcolorgray 7667 47604 a
 currentpoint currentpoint translate 0.9807 0.9807 scale neg exch neg
exch translate

7667 47604 a 7667 47604 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 290.0021 a add def
/d 0.0 a add neg def /h 264.48497 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 7667 47604 a 22073 33223 a
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -113.81091 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 159.86389 0.0 -130.13821 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45273 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -113.81097 0.0 T 11
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 134.57628 0.0 -129.90869   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 159.86389  0 -130.13821  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -130.13821
 159.86389  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-129.90869  def /maxTickline 134.57628  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 134.57628
0.0 -129.90869   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 159.86389
0.0 -130.13821 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 134.57628  0 -129.90869  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -129.90869
 134.57628  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-130.13821  def /maxTickline 159.86389  def /dT 1864678 abs 65536 div
viceversa { neg } if def /DT 2. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 14.22636  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 14.22636  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 134.57628
0.0 -129.90869   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 159.86389
0.0 -130.13821 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 20828 30359 a Fi(2)20828 27210
y(4)20828 24060 y(6)20828 20910 y(8)20096 36612 y Fd(\000)p
Fi(2)20096 39762 y Fd(\000)p Fi(4)20096 42912 y Fd(\000)p
Fi(6)20096 46061 y Fd(\000)p Fi(8)24988 34569 y(1)2679
b(2)h(3)f(4)h(5)-19734 b Fd(\000)p Fi(1)-4351 b Fd(\000)p
Fi(2)f Fd(\000)p Fi(3)h Fd(\000)p Fi(4)22073 33223 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end

22073 33223 a 22073 33223 a
tx@Dict begin  { 159.86389 134.57628 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 22073 33223 a 22073 33223
a
tx@Dict begin  { 5.0 6.67703 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 22073 33223 a 21703 33509 a Fm(x)22073 33223 y
tx@Dict begin  PutEnd  end
 22073
33223 a 22073 33223 a
tx@Dict begin  PutEnd  end
 22073 33223 a 22073 33223 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 22073
33223 a 22073 33223 a
tx@Dict begin  { 0.0 0.0 pop 159.86389 134.57628 exch pop } PutCoor
PutBegin  end
 22073 33223 a 22073 33223 a
tx@Dict begin  { 5.0 50.02498 9.0 3.0 -40.  Uput UUput } PutCoor PutBegin
 end
 22073
33223 a 19304 33556 a Fm(f)142 b Fl(\()p Fm(x)p Fl(\))p
Fm(;)221 b(g)48 b Fl(\()p Fm(x)p Fl(\))22073 33223 y
tx@Dict begin  PutEnd  end

22073 33223 a 22073 33223 a
tx@Dict begin  PutEnd  end
 22073 33223 a 1 0 0 TeXcolorrgb
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   0.8 SLW 0  setgray
 /ArrowA { /lineto load stopped { moveto } if } def /ArrowB { } def
/ArrowInside { } def    /x 0. def /x1 1. def /dx x1 x sub 49 div def
/F@pstplot (x^(2.0))  tx@AlgToPs begin AlgToPs end cvx def /xy { x
28.45274 mul F@pstplot 14.22636 mul } def  /ps@Exit false def xy /lineto
load stopped { moveto } if  49 1 sub { /x x dx add def xy  dup 1.e30
14.22636 mul gt { moveto } { dup -1.e30 14.22636 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 14.22636 mul gt { moveto } { dup -1.e30 14.22636
mul lt { moveto } { L } ifelse } ifelse  } if  28.45274 99.58455 lineto
 0.8 SLW 0  setgray  /ArrowA { /lineto load stopped { moveto } if }
def /ArrowB { } def /ArrowInside { } def    /x 1. def /x1 0. def /dx
x1 x sub 49 div def /F@pstplot (-x^(2.0)+8.0)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 14.22636 mul } def  /ps@Exit
false def xy /lineto load stopped { moveto } if  49 1 sub { /x x dx
add def xy  dup 1.e30 14.22636 mul gt { moveto } { dup -1.e30 14.22636
mul lt { moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat
ps@Exit not { /x x1 def xy  dup 1.e30 14.22636 mul gt { moveto } {
dup -1.e30 14.22636 mul lt { moveto } { L } ifelse } ifelse  } if 
0.0 0.0 lineto closepath gsave 90 rotate  /clipType { clip } def 45.0
rotate 0.8 SLW 0  setgray 10.53735 0.0 0.0 LineFill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -4.573832520992393 def /x1 5.618573368066927
def /dx x1 x sub 199 div def /F@pstplot (x^(2.0))  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 14.22636 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 14.22636 mul gt { moveto } { dup -1.e30 14.22636 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 14.22636 mul gt { moveto } { dup -1.e30 14.22636
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -4.573832520992393 def /x1 5.618573368066927
def /dx x1 x sub 199 div def /F@pstplot (-x^(2.0)+8.0)  tx@AlgToPs
begin AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 14.22636 mul
} def  /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy
 dup 1.e30 14.22636 mul gt { moveto } { dup -1.e30 14.22636 mul lt
{ moveto } { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit
not { /x x1 def xy  dup 1.e30 14.22636 mul gt { moveto } { dup -1.e30
14.22636 mul lt { moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW
0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial 22073 33223 a
tx@Dict begin  { -79.32347 85.05122 } PutCoor PutBegin  end
 22073 33223 a
-172 x Fc(f)22073 33223 y
tx@Dict begin  PutEnd  end
 22073 33223 a 22073 33223 a
tx@Dict begin  { -102.42093 -86.70601 } PutCoor PutBegin  end

22073 33223 a -172 x Fc(g)22073 33223 y
tx@Dict begin  PutEnd  end
 22073 33223 a
1 0 0 TeXcolorrgb 0 TeXcolorgray 39770 47604 a
currentpoint initclip moveto
 39770
47604 a 7667 47604 a
 currentpoint currentpoint translate 1 0.9807 div 1 0.9807 div scale
neg exch neg exch translate
 7667 47604 a 47992 7929 a Fg(___/1)p
1 0 0 TeXcolorrgb 47998 9921 a Ff(AN)369 b(4.2)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 49640
54804 45 v 0 TeXcolorgray 24746 81281 a Fn(8)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
