%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/AN 1.4/AN 1.4 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:37:56 2017
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMMathItalic8-Regular LMRoman8-Regular LMMathSymbols10-Regular
%%+ MSBM10 wasy10 LMRoman10-Regular LMMathSymbols8-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/AN 1.4/AN 1.4 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0837
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245AC583FE784CD69B918457FC63ACB5FA24E41
CAE39AA9386736476F5C0BD3D01ACFCABB35BD346B884B97EB5F467C93A2FC7F
82A0B3682C1D7B0CAE0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7CC4EFE6
1F9F8E88832737186037F9E5AB161B8A2090F5569529861FAEFDC91E823E0A0E
A92E7F1118BCF413BD355CD844D0F88C47B267EAFA1585B4ABAAAB9BF885D233
DE4656E4CCC1AC1A5762BE48F5FA88A0020AF17A438014B5902A55EE220152C9
0348CF590A07761415D2F53A866C95D4A6848E2BB7970D176670F90765843635
9C2461BEA57F9CC512BDC51EF25496B2C2253AE85AB38889B26761BA509C7F63
8C6CBC4BBDEA74FD3B43A178C86F9A97423815F5FA2C09BA590B8371D5B7758A
43F98F4DC4792308CDFE2779CA6F20ACEF23FD8FC11F483C0CDAFE837D984A76
1286C4DC5088F5DC4B8D59F781ED48736CDB2D0B9B51340F6218CDD622544552
9BAB6B88481D111091C2CAE5E19903BE5F2C90E79E2469EFE314329B4653D49A
0C4443075770A91A1C8F4179E4167E37B2DB2FB55576CE3A4FB2BDCCC49ADAFB
01C7A6C0A0CABBB72135D782D6D302DA6F67A5A31664FD4312483EA00066C08F
2E907B83F704F9E870AC27EBF1A21DE55E2E8139EEC0F780FB83BBAB87209B36
C1E995ABB0450712CAF436627E0FA539AB4047E252ADB05C815832FA26D5A46E
6E6D081665CDDB47E5F4524EF2CFF89AE5639E089330F124508E3A00E51CD32C
2B1D7FC2F5632F32B024FF4066E30D94383AA882E38281D84775A03BD1F7B995
9DAEC7640944CC7BE3791DDC409CD8D537C3308195EB55597D9E6C5410AB7DE1
82463159831D8EC348AD05386348C3E9977F2E748C3B018195B5031E3F51C95D
9A061217DA9F3B704B75F1D6110C7D4F9DB6CCEE47BBD06941C667CEC41B0F43
4CBF4E08767B6F023C89659C6661CA363D2BC38DCAC52E6C67FF1AF9B6A0FF16
6C4164A695E66B3B6E55D7183E48E3F84E99225FD4EE99C3BFEDB90B94740F22
63066D80D2C9CCAE054CD0BFFB25C7AF92F419E57D9E910B719BB3E00FD7F8BD
14FB0CAEF5370AD7AF775252ACE49DA73B0D2AA9F15408179612668B7E8662B8
AF299360DDF702A333A109BA94A4A3600C16E04899E47073AF80A3CC059D6366
A37B864D6DFDF35F7F77B6B130C5FA0AEC8A11C893E0037B0D4138E2C5411D63
56857185E1E0445A51C67BE74F11BC20309B35A2CBC0209F8032C8D0BFD97EBA
0D5A0F94355FBD634729E049E1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E08614769C017F6D4F14C52D7189D4AF8CDA367D8B04CA8D3F2307C
0A7A179419A80695912F456637F539123745CA8E696E250E0BA6B7C6277394E5
98A8799C29B6272613C152B0CAB05F3C7795791EC9AF2BDD416861A3D13FA858
BCB6ACF5BDE40E5DFBC1A171A7280E8FF4AC0D4C8A2199E9E2BAB5CB9131A76D
EAC166A7C449A549EA5111F1750CA2C6E1EC6F00CB6C62BA52D17FC66E06ACC9
1E6B858F9393AF9AA5E69F799E01D301B647DA57225C2920E3BCEE9D09CA5C60
F22B07F24A26DD8F4D6F9C78BFAA8D12A21531E713B80CD03A5FF4F3BBA2AD82
3BEF7DA8C97C30F1452006AA3B1A168483F6EDC4089ED02E567923AE6DBBCCA4
8C246A080448200C2A29C34AE6255BC79B73AE14B980A7C357681BB0962894CB
DA32FF2B70B21AF4D158E0F74652684A7150D0967F83E13EBBAB33588541AEEC
0DE8C53851845A44FFB46A93CEE3E8A0263882542F7F103D13C367EA8E1ABFAF
6486A9DBF6668550BE7858F5790BC87C66492C0FD34DB08EDF842E1AF58A09B0
85A9B7FA402029FE2439769D67DEBDC8AD8C861E90E5322951A2904FD702766B
36916DBA8F9C96141BBF4788FA435556B2B4E1B37DE4506ACC4224CFC00A8F83
33941A050B51B9508758F4EB2DC074D799F5116296B8822ADD743A043F9A6426
88D10767A9F99A072BD4C88CB579B34687BA4953B96DBA29F33211B12A0215F7
5F2F873E5074A7D593DAD0EDD97270FB9A87BE870321A49958B10E32850F0148
68E0A1D795937E61D4556BCDFB7F4DA63A884F9B4B07801D30B1357C3432D6D4
7B72B7D6040410C194EE5124ADFD7A40914BF569EA1F9CA8C8897E839D262395
5EDB3E97C591A3A5927DAC229EEE864B8C0F79ADBF88C0E6C41CC70D9010F07C
1CF9C05960E34FABB6C5DA4D789E39F35FE01F0B22BD9C63B3098457716D6B22
5EFCD0A960F3A2319252C7A0F73A4770E056209C14D721A714D713D5F2BFAB32
EBF815DDDE792B2556A87C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81A
9AC387913FCA9209F9142F9CEB88DC7864ACE2139716A8B8BCE22870B2A8AE03
61A40FACAAD0F82B44B4D6E4ECBEF48C6E2F39CBB2B53B18DF7F144E9FD272CE
6A23BADEFC0FC80B646A2FC08C8AA1C44A2A00554667CFAFF8A417D246F28CEE
905824D8C0FB19279F86AE6C8C6B3B5D4AB4CFAC640686BC6FEEB9C1DE214972
4C015A2D62C7ACB01966717F9C4AAE6203DBC7E60275D3E38C7F66058EB798DF
3A42628DF4378C539BAE628054B5C31D23B50C2B33943C5AB05E8304A43319C5
8B569F751361768EF816F30DA12ABDF5C63C5B1602823BBFC0C03B7A421A836A
CD4083FDE377A8E800BF093CC74B3F067CC1DF9F37F37B225D1A63E440A719CD
8CC6D148F1442F1386DBC7309C37D13848552D03C07E06969315884369E30CFB
BD715C131435EE885780EC50DFD4D90B568153D7F09788C8877FF9D119C062EC
9DB71DDBB40357DF31989908E4FB3FDA3303E6BC7EBC8C3F90ECE5DAE3E02206
E93022A0609D842ACA6AA03E96F8C117951E672EC54FCF9A8273B7989D201B16
1E870432822FD897B71CEC0427D5FA06B29F527B6A236CE267095F2193898745
610FFAD3AC143DC9CA8CB1C3931E36AA844248234F51BCA6F444C2905A4E241A
269ED51FF329D5C0C86D9C66ED01B85534A1E39BD5C20DE216B33240C40D188F
4E304C4610FA7CCCF0512FDD24CB36B40AACA15B0FA0098083597E359F090380
51C4BC551BACA6F728980ECFB1E999F4E0E329B15FE526F0C6285E5D05CFB53B
F7212E2933DD050FB0820AFA1B2ABFB2AED5544B06AD48DAD5E377C2F375CAD1
3A904419D9E7F6D38731EF1E8CB0917657EB749149E1D61A1EF50C19E72FC8AE
9D835BE39DF765ADAAA523C72A653D19D310CC10E9080C619F102E6C0EE4F80F
05C1AA36C2027A88763A7F0AF2DD0CCE40F2CEFD4D785A43264BAD874D4FB758
1C7082EA167108BEF6F7E34D958D6105130AE25923E7EB77C0FDF5286780C376
3D9D24E27F7FECB251C07A0CBF632410D7D948427FF6782B8850466A1FE66362
4FC26E88758AC01C1C98B568253442AD48691C2A47DF05F6A7466E87D3020FB2
D824E71394F6605CBE638D9A6B5A0DF28C4D81535BA76F76B16C6815E977CA50
513DA81445E93555250A43815E80B39AC00F7086BCB4B36C35CF2E4A42B114C0
7AC99ED39EF436CBA30F8EB1A6E543782DABE3FF805D54945D6DC2C09A0F32C2
954C689BB04A12A787B88A966DBE3F4C2EC9888B56E96241D345CBE471FFB513
9002DD5225DAD211F5C72F3127A60A33D311387E6DBB2951640D74E59891DDBB
4526022E00B54489023B0FBCB6540E7EB3B2ED0460F81AB38B9240BAE8424443
749F272CA43BE6C9B5CD3E674BCF858A46BB2D1898684401E25CC37C0FF9DB9C
5064E2E468F5906C1338EBF0AB1F2B5C97A5E4D6127212AB225F2857D0014DE7
F40568FC538A0EA2E76E1F62790DA67887A81FED8BABAFE9416AA5E06C7C4C60
0BF38B70C87E5ACE2C713203A64DACD5FD072694C71A3AF841F9E3D07C7B3788
5856BBA23EFEA2AB1902F879F1361AF8C0421A296FEED926836406E96C49A48D
AE1DA613DD54D9C840D4896A183FF4E395EB7A69DCE16AF779DB5DE506A534F2
9DCF33411B194DEE2EC1B99F36FA1A11D14A28C0E938F608AF10E3B31B98C36E
5AAA15FF94A95B38469000FBF31BAE9CE8703754A099D21B3329E0471463D457
0D4E89F4CD31A93C312EA4674730466C3EBE9F8964D358AA76DE110300CC7B89
8FBD8BAA1FEEEF4E78760F8A25C60981E6372E49D71614BB4E6EC7B1ED60BBA0
8F874D9E1B1661393BD85DEB50C29E3DBFD4613BD0DB2A70E57CB73CEEE6A51B
72B52020AB471FA444491570EBF12F70F2863F9CBC2CE3E571F5D8ED5009FB80
9985FBD9A3E99D1D6124A3B4DE50749E55267744E046627E381FF09727EFEBB5
2E59282E0199771B95DB671D4B2AD846EBC0109861075A936D6F2508D429C625
85777EB9E6E9DFCA889F03CBE5A9FB59C55523ACF1E394505886FBE4D6F739C6
6BA65248D16465F0743C602C6E12438E7E9CF6405EEAE7CDC599E8BF2CE72DE9
FEDF547B68A41FC346A14D58EABC55ED2D98DA057A876FB35F46EFA6A949A75C
F1DAD4E176B50DB98341C8D442F31C7CA70CA4411B4511BE399A1EFFE6AA02EB
E529146BB9E0D14D16625D3C830ACB43B26371195013F74FC07E862198AB570F
44DAA7CD767C726E7BF288414284CCC3E6FB3DBC5D11E9807F8B247CB591852F
EC9392079A91D02F4954FF97236F55AF6FBCD9AF0E167742D0BD0E131BE7AA98
E955D662DC9AD78F82C29C3DDC08B6A551B0CE96E180903891204F4EBE911581
EA3BE89E4CDAA342B9E52F30E55B902ACC35DE87E70DE8EDFE7D803CB0770A2B
0B8180E5389A54B85BC69FF37B8CE078CBFF5CC6F11D65E7B61ECADC94491C5F
F034CEA604CDF5412886758D49CE07427C96AEECF83C52A4555178C7AB4DC1FB
491ACDD3A0CE09DF3D2AA01AFC9DDFC002A9863D9382764DC241811B3912F36A
B2CB1440EAF4C36D14A899C877A1F71CF5F205C8FF35460B37921BABF917E5CB
A23CCBA7C46C157E3088F4D1C99603A5AE29019C97D03FA54726D906264C82E8
AED7E4AC8F66E56EDDE14DB1462E4F9859384B15882C6B0E2219186DD528D0DF
17F15FF78FCEB2CA616D526C530E1BF18C3FC7EFAC5BC5F623465E81758FA863
78485C3F65040DD351580824450D62A12078BC053A65AE1FFA91D645A9E26C29
A8311282A2DFA57985CEEF4463E64E0B7DD8D11FB10DC168A704C2C70DAEC483
F6942ACFB86DB9C4EF5E16FD6E2A4523B99D267AA808751385186A779C73E575
948744853BCF5547A7870E7F6196444513F4AA8D5FECEAC8EE88C8830B526ED9
264D4F56562FF445F348D19317A058A4FCC154CEEC13E60A53EE79C07932518C
BCF295C49DD58CF10B322634A4B9ACF5325B842EF91A19C55CCA6ADEB88B59E2
4FE4A96A8CFF57627DD17FCDC5BFFCC5CE9C78BFA2B830328F9A6D45FEEC239A
D76BEED158DB3BE2DC4BA1DC216B2D085F251E56B085F80C7C11DD39ACDF31FF
8D01256B7CED1EDFEEE0376E57B6E45D2F375499F8118EAF5C7F6607DAFC48AC
6FD2258F0314DA293F61D30028BB0FB43F50BFFB3005B677A74AC48E341259FC
DD1E8D932840FCA3727301C942C987A026992772DC2A0B06D5E4AB1186D81001
AE4288BC2EADC60BB6225D9CB6CA887922B117EB0E7F81000CCC4A20522124F8
B7DEACA9E6FB322B9B66DE572DA955FF06BBF51728AE6724360C97CE27BF0DDC
551716E8E06DDDE418B6E3E407307088DF1BF21C09F61DFBD19C30D92CBBEDE0
59D026A5A2D9B65246D93E36A7276E70D11DE1DFC7E967F6DECA7277FCA73E84
1737D9AE81C25EFAB95DC9FD91A124F9F5AE28E844C6C3EAF7DAB0FEED7AF2A9
13FB2CE66241C5102CAEC3992BEEF1999CE2A5574EAC934945ADEA6DB4E4DCB6
4BB074C6094FFB7D2AE0633C33C8E4823681C0A61ED898C571006202CEAFB5C3
E352E7F66C743DEB4EC14A3AE0EF469A2CDB23445830D0F304FD7A9EB6B8AEE7
919322D2FDF6C7D7906EDC7EBCD9E9B6AAF63DB3AFB9D9B87CC743CD66342BC3
BABA111186A0F38F642261843011FB3389DD944969E83C1B8315BF63C3BA9B84
9EDD5F620C7E451943A4E3868D2F9A6B78E6AC615258E663C9D255FBECA07BE6
FB4B14EBF66B06D640012D108ECD3329117185F2DCCD3CFCECB7224FC5E7E437
7C6E1F717DD65F6A274994CC40546439FA5A60BC3719653E525E49FF6F778D8B
ACE4664D86C8FDAD35CA3EA60BE1E28418837CFC7209F4A7357804EDDB05D506
686757C79C2ADE54B913F1ED476E3D86BEEA512B1FC55E137D23FE61B7D69D1E
E48363146DB3EB9914CE42558ABC90B623AFF1FA2CB3EE64202B74F76E195C0E
3F2B12B433D7DA1F634865DA6E5ED7511E1D930D074D76A35F19891E3842733F
8AC91FDEBDF9F8A426019EAF34A2B13634F55E964F8B7C21D937310590871C58
2F30C6DF5FA2097A078ADFACAE547DA592695486DEDA95AD49D2958D1F43A3CC
E7B7B9DB269FBAD050E6082D8DB99454AEF0AD0088753DEB92924B8AACE496E7
45ACE597058C23D84C0FB8BAE6E8B396D944701FDF7FD723D145E93B12A799B9
D0210E411564EF88E75FB2380977263E4EB261F6718EBF15ABA15B45CE0008CB
D8D2B7A1FADD93BD3CC207D8623EB59F6B3FDF302406C8F16686E31B66D8C1D7
E8DAA6804AAE5DE138E8A311A4A1330604D0E557EE03662BD31AF90587A45AE7
42E8CF9E4697F94F59B8AD259D2DDF433930B270C63EEEBF992ADB20C9F233D8
85BD42C04DC9300D4CFA004F89A55999A93B5A3EC2D3098ED38FC4CBC6BE50F1
4FFF4452CB1B96ED0E58AC65EE13077831824210531E56CCF19CDD93E462A12F
35E45673FB121E1AD75F20A8F4E8B29789DD95CA5047CDB13FCDE826D3AAE15B
CC039B1C6A9C21674AD3ADB75770688524E0B4D3151C5E51D640C741C6A05E85
EC79363ACC8A5F234575C256306A3E2B5F6A6ED4C48F6D4440488AE7C9B57B85
DE61CE78FD299609DE1D6795CBFB4CE95D68E3C7CB1D4A8DA1D0AEE7CAD1983D
695AD1DE3E935E231AB657C704B4FAADE3CCBBDC7C31C1FE52D8A57D79602D65
BBA312E072096DC25768434E7B56ABD8AE83CD6836A2A624A32128393B9D463D
FF8B865FBC10316F6EC4806316954E90817A74BFFE390FE7B5348DB0B4782BA6
D48AEE80D379CFEE11E4F1CD9A521023438259A1AFAA427959EE4927606F08F4
255EF756643EB591366950DCA06596B169C9665511507959228D5480C7AA0DC6
1F197A9CB5C80A00332184637C6FD2198C1D859D45F35E20C5554B0D72C262A2
3CCB48B112D5ADD2E056258AA295803C60070F8E89217F14F953CC4015C38151
4C1E1BDF36283AAFF8AD785A49E091119556FED39BC1843053FB2909D78D0CC5
BD0202C8FB9DFE45DC35209300AE63A15A7D983219EB991B300213F2BFD5B477
A7342D64AC059315DDAD1A2FA1F4E8CC6969A0E25CD23969EF9E387BB3BE62A3
51C14DAC4BEA7FB4C8F38C6C51F6431DE0F8FEB6C3091AFBCAEEC0FB3F3992A7
7ACADC778ED2784B3423154B7FC03D43F47C6F505869EC5039310EF1F4ACEA1A
40014BA27BD58490D243E14831C19698C0C0C9683827A13C1735D2C649C0D4A6
BE354B0E303F96F1A7DA6410CC5D3F84EC5C9F615650160747A724AF9C66AE82
CB864AB947E3582308319FF3BA95FAA268D83B462FC0BD10BBBB8DB7B12BB101
1EEA4891546F4AC7FCA094F32499C0F8AA33D2C7D00283804FD75276BF2C4F9B
E9BD77A75D5A1E7BEC988F06F62D50278904F0928D97C2A77894DADB216105AC
441F7544C3EEC8F09A260BFCE7C040D10575084BC081821FB759B9016DBA3AB3
9FC05FA6C191F7A83C324AF0629A269BCC414DDA1570B980F3596906BE0D23A7
1396BA0A0F3335B74FE5BC3367497C95A462341C8707177AF767B83F28AF4C0C
F952EA0D9C4176D5ACFBC48D8A48074357B1B8E5B17C698F2052A9C6410435FF
3D114F67EACD436BEEC8ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A6FDD
7D52F256FFCDF706B456B6886F5FF5F416C079AD248559BBDD2767549450C680
3B603B312979604965F7E8298F454E098DC4EE83D9EE5A229DA5B97FF0861841
31743AFD0DC1CF828D0993C56493FBD38744296B82E3908A1A0CE811E0CA2E52
A0EBB9F4998D40FD7B001C660CCA6AEA8C43CE8FFC9D1AEB97BAF55DA23B2FB4
A868BA0A41CE90D7BB6633CB481DC110FC14AAB8E9264F5EE49798BC49D9D9D4
9B9CB9429CA197321B545625093FAB4BE53BC96D108520D9CE9193DA216221F8
42FD0F3CB18D4D9C66FE5891B484C4F3ECCE8A8CDF069387E4FF4967E9F11717
A630BB0422421290360984C499D5C2F4750008B8107BD17C259B723F956B5B14
7E7C0D6AACEB4C9F0ADEEF68329D5CAE9EFC75DC15A9494E876104FF7675D11D
E1DFC7E967F6DECA7277FCA73E841737D9ADD1D1BAB1961E212D20880069F0F3
B5536CDE53D4A4D5012B54B227A0C18DA8A43ADB7593E98E5E0C75197138FE3F
BB31F876BEE000302935A55EBFE1CE914272A8F50A983AADC0604FD17B2A2F43
06AC9C0E2C687D1D9ACDBB674244037384B36372980DE4F1819DC2B4F825D7F6
AF5769BA3C34DE43B531F84B485EF8F360082659FFD797F6E37B87EAE0447EDA
DEB00764A38DAB429277B77869A70AD62AEA3CFD663916700C95E0023599AD8B
F5E4383BF2D5B1F79DBE83B6B7836E42C2E1AE0093867B0F2F8C4E44A16A51FB
C10F2F4BD0EB7475E396C85116A9D3FDF82014EB00C07DCD76514565D3E6DCBA
5BBF1E7E65EE55B3A8CC8D2229A01DD3EE09EEFA659502F90DEA0CEE99851BA7
2A097446FE8D54CEE9CBC3B88AF70F6D0234ACB6350CB1C56BB44AA5D7005841
0088780E87F8A0D2F6D2FA07D508BF3F6314B934962984C7FE400CC9AB1E5F79
2699F15AE7E181FE3ABC4B4C70E21F3AD9AC49685171C47A257EBC1FA6B40E10
B77C81889061E668B9444D08F3EC366CF071C473CEAF7FA64B863164AA97F309
B76EBD1D860A54D8E656ECEA88768396EFEC282AB93B7CCADBEE9CAC7E77D79B
A760EF4C53A3C983853C30DFA6B0093FC96F298AD1B5807C33A89AB14673D370
619267FFE6A05DCE65C7B986CF466B6A832F1921A6949469ACC2B5EAB9F109C3
6C9122359A60190E6C42C713A9BC911105DDAB231758BD41BEE389B057A1F7D2
5215EB9D0F26C738D1E8782D670AFDCFCBEF6BD68AA64D6CE1D7C82A1E46EF79
FDC5CF1DF72D2275F3857BFBB4FF234B2192EEE72D2CD5E415EA5C1C28F4B537
D15C66B6CA739B8D92F22E3DDFDA20460C55C375A40A34BF6BDB012F333DA135
67389FF89C666BAF1696FEE4BDC1B32589E1427C1749969DAF3B72CFD1F579F4
A62E705B6DD2AEF3D166BA507A1EDB131616EFCF91246FC75DE3D8A915DBC82A
1E46EF79FDC5CF1DF72D2275F3857BFBB4FF2296C19E66F93DBC8E9CA5E86793
FA37889936F823DA9CBA746BDC1BA4A84F7B70846E33CE5F285F32FC4E53A284
1E737ABB84A750A16A4999D5A59AEB5FAE6FA51F6C8CCF447A19D91B8CC30481
B5C49B6ACB4DC451F9C524349EAD4DF1F0DBB3869B74C2373223236E809ABE92
C2630C9A877AE16BC30D56A0B208DA546903B801BE445518F14E701BE121A6E3
C832FDC31C1546BF0855A6767030D9B6B47266B4A1084BE171D03696A026FA7A
544E4D106B9A315700669D9D8A3D985F44DE6070E8E4AF6424F3048173F52CB3
EECA756C4D24FC6054D922F59B105DBB74686310F635AE6153D9E18A0514882D
4CCFE9D44B8952190FB9EC8360698A45EC064FF735101C9B16BC27110FDAE792
2D97BF0BCEDAEBBDA6BE7764CAC582CDFB785921653201A8230C66DEBA105E89
909D76D034C9A5C6A216EE8C2D9C96FF0A04F2EBCCA2467174529C592950326D
E46CC1E57DD4B2A8821A8506BEF79EC524565788A28F5870230E9DA69ABC8078
8F2F72CEE5F5594F71A24092D1CA9BE1635F769E2AC1459B0B3AC1DC117B6296
C31A438AD167AD6C39AA2FE5CCA6028CB3A7EA6A0BB569A91BCF947E682976A4
A993A413FC97F6F1331B12604C28FE4D8F7FF429F96D0DCE41EEC1EA29EA44F3
F8493AB33413FB84F35B3C0016089A6C4D67EA0050A0381699FE2E38BEFB071B
9FFE3D7574FBB32CA8ABAF8CDE383085DFFD5EBEEF83D696C0FA27B86904477A
22C09610E936D310AF8455122F4C6B61307071FBEB6E8DA8C43C5E1C317DD3AF
44E46800FED97CA40252808F6AED21A9D6F3EF87869378858BA7E6E918D5E464
49525A4A5A2932DB6208081585CD9A312B09793B1C1FA05637430A13E5AE3E1A
3D5B471CAD468007C4A6BFEF07D313E1ED2F47BDF624179D8827CA4664F96F70
03D7D0BD14633673BF1A66D0126713294E13C1A4571B8A9E6D98EE5C2084E767
98939F0AEF7E64F621BE09010CB6F43790AC69F122BD9618E23C7FD95CDB02DC
661ACA0D9FA5DA0CEB0D82EC823434BFCFE218A4B5FF0264F1EC9818FC80F9E3
E06FA21B47A2C431ED3DEFC7267AD9DE87E23C2411D06FCABEAAA6D87458CCF2
5F198AA55DBC4F8AFB25E33D6830FF6333593140C974A8B13E94CF0E77EFE6EF
C2F0C2FE513C93C7EB2528CC8B0472B5A579EC88E8BBC1480D4976695D2851AD
FE75F0E8AAEAF174FD8B2D5264FDA6E40432CB09DCCF5C286D5EB04E5A7D952E
716DDE9DD17F51C40339BBD717BA9555F70DBFCE390F10FFC62821D7082423D4
6EB801F8502449684418493C3E014D603933A576C6B0758D49F3155D448D505F
73A5206D1647639FBCAEA8108A2649D23FC552CAD67A60480964C6CB0783A8AF
EBB8E005813FC0D89420F1930E18323460DB56C9DF95B90D45EA22620C2FA7D7
521D7D4B3FC1FDA5061C6F4B994301864942F3C18428C06EF16DAA37D7CAE4F8
5E3CC5AEF1EAA75C658E90F0246C18C21CF073CC1D7732019B86C11D799B79F3
3BB09CB6771F637D534DE9FE49A53A3812D7DBF47D9E8A2D353B48627891CB99
B8C759187CF9112E3619F9ACCAD376725BFF2760B9ED7576B9D9EADFA0D51077
ACDE9DA732031E629834097D62B5D90F48DA5BDB8D01BD0DF36D531892BB3AAC
16F85A63CA278DCC38682E1BC6D134930242730DFD14B49376780164C5A1F030
379CC9E763CF518CF9E2DD410B31012ADDA5B9ABA7F5EB2EAC54DB67BF9CD44C
49474B134D42210504E4254BC7510C4BDFDF53EB3D5F54D0C6A53862B4ED64CD
18471A49B62240FEF22F4D82468E075498FE2FD44122E511E5FB2FDC8CBDF6A6
9012CF9846CE3A9A6DE5C947140AC48B22EFAE3EF8FE12D52CB3A260C7E0FC2D
A6ED47D61F83DBF89585DAB88E81AE9FD0426205126E4CDCC23EB4C431FC6C1D
BBF79938BA64859723C4637574DAA16916B8CC6DC32495D5247D877E4B863070
61E7A19A3AF4137889983657F78257CE77F03D0E9DA4E29707C31DCF1707AA65
83AFB9A309EB1599591812BBB5C8F3CE43DCDA76D261E3F7734DE2DB7D9BFF35
01E5A6D23CF1541ABF3B301F226510EBF89944E4E9C5376A9F2841845CB62FDF
58F84CEF83450F3CF96A040F4C2047DEB00A172677774217ABBFEDC33DF60D1B
D15D023EC0FCBE6548410923051F875718FAC168E4E2720E8D959D339DA26151
5C42555EF75A03385FDF6C7DFA8FD7D02B80E1A845766CDB597CACBFE0700303
409164B5CD1CB0F12CC3632AFDA9076C2B4D0CA7D89ED2FD03763D20BE507F7E
56122CF46DFFFDB6FDF9361520D2E388DBC639CAD5B2E83C049DA71FA49785EC
5565D2B3A261A66C9F2C8501A2E9324D5E6F0F1294E1C0AC67EBF4A840618B23
172EE2D3E6538CD9B1E12B834A6D01EB50C781646E30ABD086CF9C09A6B0FEE7
416646141CCA188014A29CCA5AFD1215D847550DC0F06DD1F83FA50D4F154867
B579F69E34040E2AFF508CE7AF4B0D544E70294FCD49BCCFB65347FD1767DFDB
6F85337F7B399827B860FB08BF9D15DA7739FAB5D8E03BD8F283FB6832C3E10D
341F8D147A88D61C5990E609001B853B273DB140A7DC69895E465C1ABABD4CDC
88310748221F5BDFDC2306912DAE1934E475C3AEB56C96D1978FC7659ABBE845
A08BC6EC9EDABFDB1CAFF5FB8203CE3B25721168DC1E382A5267627FEF41D963
44A05EEE4C43E2AE24657176B6C8D3A0EB5A8C229616709EDD4096C1D4D817E3
96C6A55FFA4D67E59B58C6D9BAD063D247787282EC4820B3C3A8D7EAC66D120A
3911D284DCAE2018F883AA804CCEC457CC6213EEDC75C8890DBECB670000924D
3BAE8E7A8066D804B89BD943B49ABF548E5D92C1D6151D1ED96241CF76510076
26E9D2EFFD007A8E985FEC263E6C90BAE36C27D704E88F1F7BE09A971CABE15B
724B62BB0C1A5263449707BC0ABED19F4F1ABEA27322584D473A1A888AA4DAE7
7864042EF587A6D6C04DCE664BF83492D166B205011A3E283257FA60C5AFAD3B
71CF6D6772E5E77FC5742D4D77F4B9576213835AE7E32A2B401C36C3D58214F6
DEAB86E06EACF7F5DA3BC32030E4E23C5E0E7E82C4D1F9BD7278685C4CC54FE1
C1C4332F05F5AF14E70FADCA465393A7DEB7DA08B3012A99FB2FC7F6FF7AE570
BDBA718AC1E0ACEF9AEAE22E5FA653C2698E05E0E072A7DBA0702C0CBE5EDF6B
D0A5B47D7929F5C9317680A392DE0CD7AAC72A99F351D824F86D33CC89BD70DD
41F435624F598030F2E7121F6A610D640FC7E512A28BF6C12496361A53953D75
312631D6F07794B1D853251462B4D522B6EF8FE6D2DC18EB4C02C6BFCEC3E71E
20E6D98720013BBF6307EAD2720BD9674E2AED09E56CC6D3BF927657BE2D0749
3302A5492BEA01CB223FEA3B6CA4D0A35D6F2C5D17804371F9AEBC100D7A6D14
14C37CBD273EF593B596973EB054344F62115963E3F61A1A2774E6837D2DB796
482A00E2BEFBD6E3758A5A1CE621ACE547811799B1D7893DF52D57BD6C1A6B74
4024CFC65AAF320264BA65EA8FE3B2E77F515CF05968797241B5BA06E190C023
55C664139419373923D5BE1FDD292F80E973E271248B2E3AF05887FD5142811C
2572A1D4B9F9539CC6D9F441AEB22F4E871755911D8FAEA73E35EB7835FA1C6D
A4635171C47A257EBC1FA6B40E10B77C81889061E6696F50954EB8B347918C49
20C7142A2AC68231DD2AF574910705DEF2893D8D4BD1C3ACFA2BC75EB9471489
0422528F5121B7A7D7A973F2EF67F2795E6DD8CF55B98238D6654F8B47476E40
98ED693455F82F098F49FF48762D1C9622E0B64CD190A4AF3020654123563C5D
6ED62F1387AA1BC5F00137C6AF5840026DA68D8DF87CD5567644A09B52124E10
51A715399BBD1A6D3704BCBBE1FFF89BCF8129B98D35736FD2CCBB0E36AEB664
3C283A61B6E8613BC8134939CD28AF21976B42B06A63719C44432BDB419B04C9
19DA628C6A5B0F4F626E8935AE2943365C505CF5C7955AF2EFFD964AB8EECB15
C33CFF111F801E31FA0889D1561CB28638D1D24AA9F358AAFF93B9564AB4CED5
632C12606449ACD326A76B011D9FDD66C24C5342A5575E940A10EF9A7C4E0857
59F390036755C4BFE971F6DFB9FFAC965ED71736140A0D41AD571329C7FE5460
ADECF79C3543E3592283C6770B4087ED9EB76ABFB56774C4A21133E594461685
A92D372D4ED3F9DB786D7E7245B9B5DE70958048F037C56C14FDBCE691048469
BC488E501EB5DBB042B02CFE90432FA7D98B533F89DB0F21A61657E268166431
92F6AB4C4265A5C2599F55E134AC2DF346CD7C05F0C4B63DC1C10E03B9D34C67
27AACF1040ADBF7713E3898334BD99CFBE66C4FDBDD9B9180626E338FA32B67C
16195DE9D59A0F447B8DB69CE8FD6E2ECA90C6B424F1D39D11670BA89B298DE4
0E91D1CBAEDF3D811318D493DC71793E84BBF3E2BEE2EB813B03690C774E6DCC
F2D7221490784231EA6CF28982A4470A7156F1C7312FFAE07D32B62AEA32B58B
8D127C00F3B953C795C84E1A158E799D50610BA45F2003568AF44E2EE4DE711B
A128C91C36EEE43CB41592BD13837B9EC9735996A1376BC209B8D579F6A057A2
7AEF243C4B389CCF9385CE645C882CDB6A03A7921BB9F85B93AC64F9C82C455C
AC60CC9896FD453CF3AF2307B191F79C5C6F070D7E814EFF05F881CD7EF43871
21F72EEB3A9ABF13F7A9C46AABD4D0D976EBE8AE53D3AFDDBB926B54EF0C41B9
8D10342A2BA4F9908402DEF9AACE7BD76B3D4A244E3AC7442DB6A705BCD7E2F9
DD7C73DE15B222ABDF7DC3B76EEF17AE4CBDF387FB03FAA5AD122CB4A90F479A
EB32B0CA993ECF07D050F04D4CA153663EFF8A63016F79C7D0E464A57671FED1
E50936B0CE6E364B62411E6DF77D4A4DDF74455394437C3A7B477AC27F75850C
FED5BDB2F07349EFC5134BBD646BED8080D44243E74485FB82236249FF6726F2
D6775F15948A9D4DC82D6F60D7DC6F714656E89DC882B95552C5215183E5FB51
605BAA7948D6E5102CCC8E7AEE127E914C372C6E2DD84989E78792EC3F50C186
322A81E6A8368780A2E815A7EC49B29EA2F4594EFA2C1C079B0C777ACD0210BD
A4F06EF57BFEFA0FBA572A16A81DD123F8434BE971D9EC8149468CC0F2C45ACC
D61E6DEA7CCE2D711A218FC3953EA7B36F464567F208953F9AEEC1EA50C522B5
A42C4A99B079ED011928C2C8CFA17D95D50A7C1599E62D4FCAB001D5F9DA84FA
530D65FD2738BD6BC724446933E8927F3AACE64BE6623CC4CDCA1DC0B686ACA4
41E316ED0CB3CCB6ECBBD05FB823FD79EEBAD2F9F0891F553381C5E352B4D7C4
C1678904B22D75C8E8D4ADF7A319E9EAC6238093C798878E5D5087FC5390338E
CC499C043E346A4DBA66B7EDE932FFD9780C75301CDA60558F65241DEE49409C
10DB07153317E1A13947E293CC426E38653A16E2A7EDF6D500E9237793DBAF2C
6AB5E2DB571739092A476FF45FA1A1CF898E3FF479C1EF67CE435AD93677B705
BC81144F2E45854E93CA8D00E814009234E2A36EFBD854F868BC9301D33BA670
0EEC06C030DC43B2245F9D24D31A31F06EBC65712C870E62BFDB244441198618
3617BF19EFB5DAF155F0957D038B6FC5BF776DB24668F0F4594572EAE33CFF78
6BFADE79FFCBAA6606E892B2E41A173AA590B6C92E254AE642A2EEF5D51BE02A
C50855B9158840F97FA94CC03CF388C8AF7468EB28FD5E0CBDF9E23D1FF320EB
F19E60F85CB9568AA9C68C085E87B32EDCAFFCED2FA9A1619C3D1065724C6F56
79589C83053D4C8C9B53912E217B51E90F13A589F452936A798BADF461C448C5
480CA1D7A929044CC07FCD6CF9DD7FCE413A0B2CF777529685854F63EC8FB112
3A12157DE158671515E8FA0324852EF95789F16A8421B4FA121305A1AE54DD69
30796B192862AD337BAD6CC06279077389A26E7EF7030CB43C182223AFAAEE62
0EB7E7F02C11C1B52C95B6B66A2DF1FBE1991088128B8B12C2B28A050B50BD46
CC83DDD732C8EA609E2857FE8377112784FC50B3E2940B0D30B506FB4732B2E8
8F32140F3893EFF849FE4E17A69F02E7B4C69CA806A1A347B174992DB8D542BE
C631C8069D0DF3B6F3A5A80891684979154D98437D6BBE4C8EEC74B6D9BB7D6B
C5924BF9AB0BC0438C5F9AB06D6FA688C48C7DCAB3F09B9350C42F6BF7A4521B
21554098DCD8F7DA254922301AC847E5CE09E60F0839874318C8389E298F5546
71CFE508839634A81ECF5A229D2B16EF77A39178507E41DE72C0B30162242B3E
F7756A035C0529533E59108C550FB89650C5B0600791191AE0D2C2D576DBD6A7
3FB4C0722AACB08ABBB932D5E6A03F957B7C64E89BB59C4ADF019950C6276EA6
1AA9465BBB3A56AAC8D14E62B83EF68CDE87804FE10153467FC0AFC951B645E3
0ECCABC655E635DB463BE72AF1223D0690DDB88C7DA9D59148324E7CA0701024
42574818D8E2E330E2FE5102B7F4DF3E4FF521CA5741D8C57CCF85B7887E6A7F
6B6E4F61160966AF27B74B21C9F3D6882E3E909D80E0762C58ECC4E243CCE91A
946487E546C6E433A5C5B9FB7D5B97F2B4B202F94545C8C3A9D70992C1F31DC6
753222850ECF459A7BEA8D8482342AEEC5762713C43E7E94884C06329D340EEC
ED08ED58B05FA74B94FD084CB58F31EBFD5EBC6440498768C234573DAA11A489
B87A3C6A208E9CB0B30F7AC129D5E7217B10FF89AD4A78408DF8ECB0A02D9EED
19239FB927915A02D3D85B0C237669DC17FE1A48D20EA8C5D2A68A4127CA7332
E5039A2A7E32F2389255B0491050D86369ED418F2926916FB309B314347EE3FB
1EA13799ACEB62CB55BE2301E115BF38D18AE8461F466E207613B6C091C7A10F
D77A10F08ADDB19E494C72ED471DF04820F4F3A6713E67E7C08467C617E31DFA
524A30DB697FB4139002DD5225DAD211F5C72F3127A60A33D311387E6018F5BF
F946CE8D7834A3410F5E6EC14CC8E47337898E5E8367724E6A7662499EA3FCC2
78B616531C0CB5BAD1940ECE80B6479023DA0394E3CCA13502D03B122C2218B8
7DC1A0A15DCD491B2BA40939A647E01CA6143950A0D13DCCE128401BAB4E3322
2A22ABB177C6607F014F0310C1E7BD29FDC20E11094E2852779FC5C0D5DB9D39
648317DD0820EFEB02CDE5BF84E5F1E8C8572A5A86DD74D4FB3A9FE077F2E6D4
384BE6BC394E71C5DB81E42B90ADB935FE3468186ECD90E2F15FDBB395191E6C
465F4AA552F9CB59DC4B0FEE8C937A0920796C09CB74B3EA1DA5B74EB358437D
0CEBB9E03109C593BAC09CA9962533B3AB0EE6EF76418EDA7CC6B8795043E5FB
6F899C3CD8486A6DA3E670E6D13BC51C01FAFED3D47621376F2A271728AB7439
3AB3183B6CFFE1D0E2948B24D2A7E6A98712527A7F3FDF0C07D30FB6436D5875
3F6AE969F727C534CE5C9001F9E7A0149021BE5A65DB754E14D890F42F4D23B8
5DB5F2BD66726A544C10942C271713B28F9F33282D2063886DA7006EB5C0F757
82A3C48BD6B7D4DA8C112653B00D7E484A88A248FD17FF0E7A075A554F98C451
C7059F491D1C8BE038ADD1FA4019E1C78B8C7656766444617C98548A8EC0CC14
829F7C67999234D302FD1E40C28703DFB713F881EA0F4B81A8F1FDE4B3C92CED
078A98A433D6F3C4B442E014E3E5A5E82E52DB5332A895046FF12D01742E9AAF
ACF2CFCAF0517858C28A24FAED300D643F1880D27C0F7D73029F171028FDDF8B
55080BBC908D26B5CD10691FB92BC2FA54A04EB649B111671B43973E31253DAD
08488B1C71AA6F08A5FE3F6222ABC942F7B152702F7E48B93155A7DE83B3A6DC
7FAF8C2561841226C56160914266B1D28D74185B0E0FAC89BEC8ADC3FC027EC4
7FB0EDE4D2906CF1B55597831D98B643B81D2FCEBC963155762A1019FE6A9467
DB7E5464F6CEA824787BF86ED78492C31CE4E8AD0913637E245B375AAA5B76D5
95F18A4289312E74FA9C289A53647EB6D776E3BBBC735D9E7226D2B353CC752E
FEC2E91DF8E2DC63650E22804A5B31B13418130BA661F22AFB71F8026DC8F788
188647382BE1B7891A84B9697E22FC61EE575564D48A537CB190E26707CDE0E1
B29B2BB9C4F4716519A4A62A05A7B901F7AB8E77C6FB72D7CB3D6953F1416C40
FE153C7E73D86FD65663DA0E08018ACF34CF9BA5D7A937AEBEEC84B992D45A26
80BAC63497C593C90728B12A42833DA3C710044C03A37A680D1F806296BBF942
428E9FADC28CB5AF48F8947D9BFAF2F57F0F6C4AD7C698D46568068F98C3564F
42D2F7F26014DE37C4DCCB6B3082CD71C69A1E1A3AB1C1298DF12BB54B3EAC9C
3325FDF74E1B6222A84D10CF5EE66EC13A71302C6786D05D419441162EEAD0BC
CA6315D5D70AC07AC571FE97F03509863B9CF7A0E4A8D5214D07B149EABF51C8
5F0C8A7B7BA0AC8B5A90540E5FD5922F512C0A83999C07CEB7A37F71BB8C4C08
F359CB4473250995CB6F5DA6838536F3FE0B38EC7BB696C8285F78C66D154289
455C5FF2D23C1A59A2944DC972F44474CB35738074BCB9FEE4077CC0C49D7185
B623A143311EC892D1BB9554D34547816955434DFF68BFBC34A074CB3BC8C175
4662B5D3FC0462AC4967765A50D653FC3FA379FB4FA0AD9F83269A99D550366F
C8714B92BD48CCF7CFA30A7E92FA628D056602E7EADE6F2B3E168EE1B0AEBB2A
BAC2B90A514D97941B12553B13AE64F9F960EE62E049E6D9BC9858A3ED3CAA1D
77CFB4A424858251438F05B3EA1F686B35F0072DCABF52B26423E8BA630090AF
D344BB225F08F47868D6C4D857CF0A3C6CF4B205301FE5A2F54624315981DB9E
59213A134B651EB7A024989A6D910914C0224A700E1245ADAD0C701A6F5E771B
E54B09E2D6EBFD77645845B7C08389FFD5AA6D6AED2DC26C28A403BBCA3435C3
FB7971E9A56226D46A1174136F0A04A5CEB915B8E21F640745A0AB62F15FA8D6
5B74900DE1EA95B981FBBCE8D846DAE64D91AA7BFBD49CADFF1DC7AD838B897A
D728B35D869CF7874A1F48CA79E025C3D54743A3B0CFA14625FBF274F3794F04
4EDB9552BE2C55747D7AF3101C5F1A2A1BF6C0E2572AA0624592BEBF74CDD683
40D52E137B1DB6FF17B6629B871F0D3AF01E55645C56BFB97243ADC4813F842D
E44CD9352178217879909DFE3C012CF2809984881E57668BFAA1644FA922FC56
B0B93D32362BA966DDE41AE6A21FD20EB82747C47F18DC85145900305F388143
6FF377B1500EE02F9B9B8774237EF1899A326BEAF8EDE7CF319D42D7B7B61296
2A9DC4B8DD8DD87504652967C679E5629FE5449DD1BA7DE9ABEA28C4E2496F87
61C0638E0F7508D281F5762ADE506C2DA47286A8A2312B11DE4B488136EDBEC1
4C5256B9940F0800E6DD26001BE1FD4BF642AF9525279536814044F4AE7DAABC
43A230FDAC3D9FF0B8CCCB4C1E7696D16531A5EED36C30AA15C66D5398C145AE
DCE5826302220B185F12F8DC154E4B79B163C08F53AE78243C52D4E02E82A4A4
310980801A463964F3A0BBB90D85756EBB96B5021481EA4E845488B79682BD09
F8D07481630EC3129072AEA5778A135D164A571B22D1D619980E73841F84F59E
0500496E84FD5E9A7E4A28D9EFBDD34A443F263B41A3B2076595CE2A7DAAA94A
4B95D7E9C281194A84A9ECEFEA5023317F88FB64830A2CDD5277003D6F1D46A6
DDD51B3C62188C66D7D12CE54F29D09DBF020D89506CD1270C0B3EA235BDEFE3
E24373517FF148B2CDA2B90CB5884440F464CD57295728A8AFB1A5C97B6B8F47
63D21E005D89FAEBBD7D8B06F3FCA5D7107E8B918D946E250F561E5E394ACA6E
AD2890CD407F38C53B3E51C9FD432F22202E89A91B046BA4CDDA6E23B0AFB2F7
9CA39D61350D26435EB900ECE26C5AFC283144EA933E003739EA80DD65A63FD2
020938E02C1C72FD8A4A14DB003C5D21197F835B183FDC1269D70A0B14D4F9BE
76C4CAED815AF7DEF664098CF1A167444F32FDE1796595709294CCAA488C37CA
EF08DFEF5DFA13FE0CCA32024C378A87CFE7506B67F7A6FBF8635703C7EFF67B
9F15A7315285D2565D7434FF3C75A20CB3C1B57AF37CA806711890C1AC5997F2
1A14E7523CEDB295474F36E7AB3493706076D62F4C407BE252B5F31039CFF52F
2855C8AF27ACFD99EAD434BCC277A4805E6F068CF203053B151CD82DDFA79D31
F0B4A0485F51334BDF5CD5E855A60000B2D49835C34DE75CAF4932693BCE009A
5801BF822C193040C8E053C3F1EE0BB0AAAB446819939C850C76B37EEC59A516
F15F22949AC658037300F1E113F3BD1B4F3ED7F9F55C21A04F1A6DF8168FA228
6D8C7EB944B03F3907EC73E5B4F9B71156B357F62608909B7E4BA8223446F5AA
B34189E5C5ABCFEC51A249DEDC76E04CEABF371BFE2347C17AB8C17FDCBFD6F9
553E8BCDA3094DC141B331BB999963089C9E8131AC54F43D9D7AB95C97BD691A
D8934FBF8FDC7B97C76DF5FDC62765D55AD993DB7F0907EA177C36ED9FAC7854
AC865B2BFEBAE6EFF4DDEB727B4321E24A2D8C7D3358EE391B31E80FA5998089
7F9471F36AF42899E7278ED6D5DB95FD665B591E12E4DF06B3CEC7D015551B07
AAD8C85C6196DC28076CF4C4A1C62A4647AC1D5FB8AEBC6481A94C6ED5EAD255
0500073598D17F51C40339BBD717BA9555F70DBFCE390F10F87B5A4D7682D1A0
AE125DF60CFF05C7454B82F991CDAF3344A10115DEA01BA7890B3A1123170D99
3F727ACDC8C0F00E871C90A6175956C54E9E368CA67F79A9DD91ED489EAAE76F
173FBB4663DE44D9F0B3A184AFE75609B62AAB76074CAA13A2355873BAF0F0D1
B5262B824ECCA9A0C7F74A4D13C03D0948B6F864DCD1251D26551CB2337693A4
3B080FD17A292531B5F5E64B876C58A4CE3CA66EC2EB0A098A5D9D4D41C9E55A
7E4EC94240107FE7909AFFA25FBE1041A54E0C8A79511ACBBD91ADB807ABEEAA
542EDAC9B6ED8F254F6BB7D73551EE33D4FD3CC697DF01C1F094DECCDD9F43AA
B88640D0E9347881AB1F62D9A8E4A799A0706A34C9C8A243A6890CE854E3EFA3
B883E515D1C4E5829166B8DBBB1DD948462957711B3A26FC69AA03ED308F28A2
3FE7A7DF7F4EE6D26CBB6620076B0AEAD03AB485F43DD669E9F6D78F7F3A3D17
9B8597267B24C5A0B90A66F0FF40B7A8BBFF59DF5DFCA78C2EABC4E6596C241E
26D1DAC6FD9EEB3E49BA2F9C8A1F81321917173BA912ACDC3DEA3227495785C3
F2294F7B39280205AFF45CB3FC3BAEB6236FA30D74F880C2B7F9F332869613A4
51A1BECF05EBB5F9A6AB29480451E1F04B10F526DE12D88C310BE18640A8C3F7
D97DC5E94894E1E63A7D80600B945DF961A051A3404D96334DAFF3A84B4AA0E7
8957C95F4AEB860E63F394C4C8430BBD1F3153BB1E66022BCB537FAF75BCEA52
B0C480AA4A7B456EED703C27AECEDCFF899632154D9B94338BC8126131A6A430
6EB0CE8E5ED39155F7935D54BC20ED3F90905788CEA450619E78AB817CC98441
4283FC7AE67D07BFD4AD7D7C4574F0F05157100BBDFF6D94E602481654E5378C
8D137E3A872753CCDF7FB7936D800446E46A852229C5B4F6A84675CD614591D2
CE4A17D968CF0EE334272D0C07FAB282082DED26D59937662A90683655A66893
1A02B1E2F133686110E9F6CBF529A003DA8B574FD56BF4A9CBAFDF2B1BBDC28F
654075946FF72DA1DA89CF6F9FBFACA3A735ED0119A05A899EBBA6B2A5A6D96F
9F2221E85020131163F32645F474831ABDE24AABF7BF07C8C599F051F8181FA2
DA8EB2FCCE6ED8D9799646156E1491E5521FC8B9CD9158D751961A994238F3B6
03EA8489EF99E770EED78A968F1DC0708455FB4E2D527FBF80D86BDC60DB268E
AE4450B7679E7B3BD358D6931EEA4A860E1A17079A59DEB9C7A4C5E1B646D86F
FB6D567AEF67B112126E2ACF3642047B538A5ACC31CD5366FDA28662B8B1E5B0
D69E77228C39700B0D924194E8BB270EAAA64FE96AC960F649C3503F0C3E2DE2
C9375CDE80642BCE84D2C73C8376BA18203DF1015DCAB4224C27161748515EED
8C9C455107A2D2C947255EC7EAABE035F2A19ADAE898B7F06CE566B5620FD22A
897330AA18015EF8E9F24C2853EC5DAAAA0A3CF68F9385394FCC328B413F11A3
968D9FCAC28875B34AB843A708428E61B06606BC5EB52813C4291A716631BA51
59B67DC9CA5E9E71CAAF5A17D5598D8E8BB772EF73E44F16935F4004BFFFC328
F44E8D61C0AA41A67D2613F71AE1C9D16A7AA32EC49EA31641D1739B576500AD
BDD6E367A5FC24C9A2C7BDA35775E82F7A255D99F0E55E529D9D84E737091B05
A3BAA49FCAE6E32DC9D1AED22C2EA982CA04F4C1E2AE758EB7547FCF4ED34903
DC094F76FA3181CC2B509E9D70AA5F53D932C71EA76AC75EE6B6869201F2CB8D
ADD035545E90949354146146EC313CAAD0714F46FEB731944E4BC8904F2378CA
3894EBDA6458CE2C1C7C63FB94A146F8B198581C154A82DCC9485E11904138C6
CEDF412909C924E8493747E723EEF55EC3FA5F63F82BDD7EF5018BA0B9143D16
4B56881B07218CA48BC688FB299CEB1030A8A9959F374A4E9D79539ECE65CAAD
81B406E0401285D6645237F7DE0A89026F9112209530A35FC6145232C379D553
9538424447C802D85ECCE0C0F2EFF20DFEC6942E2E9BF901A0305633D7AE561E
A78C8C5CF8BC3CEB46314C6D52679533CB2C9CEC2CBDBDC9CD49C47C8E31E70F
F75FC4E6D7789CB482A3C065CE71C64A50CEB925808E57CB966FBA3A8D0AE464
4AEDA86E3FBFC275FD432A8A3B1ED1EC859DC0B8E8E937971E94C01CB172F3A0
D8F7D7A4E37D3CEDF8F56A233A629F16DFDC16B6687D0DE3C875DDD9D57AD111
B10FAAF8DC17EFFB7A46733C277C6506C04B1A1F3E4A90F8699D221982DDB791
FBD3D0C08B8C765496CC34F527E214FA6357E9754F125FA40C3BB93408AE6A4B
9A6E729BC52112E16D2DA72BB391A2F176F0F1C7AE2A8462EBC9D7E87A768516
600ED3FCFF8565C6A56B40B5E185C99C45010F8767C9B877A8D7AD7FAE19BEFE
E18D0461CF1C65AB7C2EE42288BD17DB983600580BB6438B938379CAB93ABE05
747491570EDB80902B818F3DA69F908BF3B1FA3743AB1774489E6AC37064B511
3F90A8A759EE56F352334ACD0AF4601369783A83EE1F040911392D595F3A3E6D
B94D42D2EF8BFB8514BF6888BF5035D47808E8A177AB68481BCB9DA87822AFA2
C2BD60161D040C93443F0FB9FC74E637DF7A7C47091724D0FDEC98F16A44ED8B
88CB1B2544153A1AA8D2DAAD95397886DCB4A57E4F424403B407AAF88101D7E9
CC89CBAD30CA9B2554EFDA69E253507A388DE74333F6462EE1DB7FD6D73FAE53
445277C899FE86E54B8BDB1490AC76FF84E7A0FCF7C8CE3CBB1DE5A1A15C14A6
76EF40F0B1FD936FBFCBAF101CDED67042D64FF3624B53DB291BB2F67548B250
6B2CC0585A7AC24DE6DB33473D460C71EDBC4D84093CDDAA06862E0BFB5C0D78
8E57D2FAB457DAD3CF20BFD9DD09A881AD81B6A8871661902B6EB87D3A7155DD
FFD4C7304FFA804319305B7CBFB2AEE28CE031D2246E033969456FD365BAE24F
737E9FA5DBC1CBFBCFBB27380DAA42BF7E5D940928D79AE4C033417461CA5BCE
21881ACF28B2A6342E7FD23E1BFE1487D82689119BB85671238A2737C3066683
F968834E025CD641E85C4F6D5103F131F6AB633326189C155E3D6F77101C59F6
2AEB10B08140C56020D4EDBF4044F0E247D957956045B161311057C8E03B1AAC
8C7642DA07EF2F28988112405F80F2BC8B1704434961BF1742DEDF34244D43CB
96CBDDBE2087BB84B10A9E09D504E360902F0680AC09575B8AD8AD4103F9D642
F4B65616E2A22223B0E9F7715EE1E8617FC91D62F1EB94DB2F0F49AFBC11E920
52F10FD3856029CB2A53387FF65A63CF2A927E5F2D7313EA2C5610209DAF93D1
59945ACDCC8DA70D5339C919D9954FE91E079DC802ECD246AFF35AAA4298F411
E56C523B561890369540074D2B31841F621DB7AC11B51FFC94E7A4C6AC77CD36
1313F8EC42A55A21F2525A8CDD9D762EDD8A41EE4E585BBD9A83284D3F6E0192
DD8E788CEED141266BBFC3A7A5FD605A64384C2F529685F965F25D9E0B3809BD
A31947472B8626B86EDDB355D66FC9A90DADFDC11833C93643517AAB3A6F5F1E
07791446F9E9D18741DD7643D81D93FA0FFC24EFE5C7FD42DBC5FD7EC83D687F
CB4D1D8619B481B011C5B308DE4B15BA978CDA8A87F21359CB4BE3EFBF6B348F
E702D99EC976714B5FE29DEAEF0BAA410F66BD660253A72E63479DBFE0FB8041
A873898332BC1C3DF78D4A55409F16111EAC8BFB0D946E34E5623D6F6DF24E2B
B54EDCE5D6E365450F5CD528BDCB140E3F69A89D2D7ED74ABA7D7F6D429C04CD
1D5D807ECC4DAD9F507AEBDB07EA3A7D588CC01789095BDF3B457065184310E8
80B78186D7F391CD91B6222E88C0BCFF662088172DA0DF932280BC552ECD04E2
C33B76A0F6172098AA72836D3D449AFDF559CE627D14BDF05616FC958B62CA3D
3DAE2E3C709E9102C9FC4C68FCDF6949852B16E2BA59D1E712FD1674F3535DAB
490E8F051B47608C92E95FFF0FFD6FC77F1AA11A8AFA6B6EBA8FCA6750CB48A9
5CA332557B3EBEF1809376BD5027E2C7593EF5658A9CA1980C12204619E77C87
BFE6FE50DE547A4CD3C7D183BC20FD7FE34C9DAEE69D70D010C705403B359BDA
A5B9ADD67B442648506E87CD85E84C54E47C448AB0EECCCBC6EF119E6442CB14
BD2C5658C938BC685FADEC8C6514A72D3DC3E4F9DF3A174028CBB2A2717C97FF
0F700841CB1C12E63DA907A0788B783320EB9EA8A9E4B2BDB0B3CE870DC57681
43FC961DF131B7BA764E5CC20F3FF194C0CAA484F18430B571D1DE58FC6F22A3
C5D499DB9FE842BD65CEBB6C36374EB7584F372B9A40089708F461991A7C544B
6753DCA4A6667BB22C841A91A8AC118812C9BB0B69037BC2A4FFE2D0208EDA33
3AA5F4CAB0ABD7E1CB7B84F6324E9DAE1176C7724CEE2C70F3A203377F7D1E8C
9A61DEE775B1D22F68706617693ED26521FE539E4BD4E059163D152A7105F942
DC1CB22923131131AE570FD8E443F0EC948B805403A784DE9193BDEDA3D74190
7D5DA8DD4712304723A557C4C0F1191116F1C8B82758E41BA20ED6AA571F5701
69FBE88604B96CB32927A36FF5BD0CF7F778DA38E54F972D6A17B932EFECCDDE
3DE2B357001C372B3F691D60B533FCDBE7BC65101A046A23D4111A78534BD65E
DDA5B466A2B687F0998FC59BE4B93F412C421AFB91DC4E6728A1CA7BA4ACB868
F9CC431C92BFBB158C4ECBA4CC50F8131D570FF2C9540CDE769503AAC132989F
371A8F30B1B39DA9B1F203A2814A200FFD12925D127FFE601E8ED0AD98E9E8AA
E92BBF0645F4CE741B19617A6DC6D266439974A234EFCD5B6E0E955587621E57
5AD4C8278F0385DA62ACDF1DE9348FBDC32A12A9285D36442C20E14598F0BFA3
B6C2011B842784111021F7F2A53C5CA6FA9E91D8A28C719F9348509C0E17D634
5BB465EE94D92CFB878BB725B0E81E119B3C1DC388C3045E230464AF01944BA2
D55B6E014C8A068F6391E1132CCBE27058FA600C8EE798C5B24F5EC4370F3F71
E5D4AB281E2074B7116C3845EEA16B5282A7375B3C445C617DB85E34777FF1CA
8846EF23C38EF2AB975F04A6CB5D2ADABAB1961E212D20880069F0F3B5536CDE
53D4A4D0189EFFF5D998AA85011B3174065A5F5E31B386BA7D571121B94EB181
D2943267C158AC94F834EB78FBA80799BD96AAEDEDF87704921CCFA16F0DCD60
F522EE900DAB2DA0D8A953C6B82258000B6D88AFEC97220365FC4125E9AFB1BD
18A3F032DFB948D077AC495C5D85F5543B1966973AD999EFCC929EB4E58DA543
765A3B2F82FEFEAB3B82BD40FB1344156DE7712A41673F44DA2E1E7D41DCC07A
70037BA5661166F3898963472CEE9BE4D233792A139EEB54F16863203613AAAD
505CCA785EE521B5D53CD01765536AAF054BB9154531EBEECD5C8A5BC1850FE9
B8D85CA5AA9DBDFFC35B8399330235BF13206A3DA1E62291D1A9E5969D76BDE4
FC976074F2D623721D38E3F0DDF77B1EB40C8A664FE68BFEDB98E14E3073ABF3
9EF34651AA5BFEB4F8FEBEF49AAC62C0ADB175C4E5A961D1BEA92AAB25258A6F
B58A9FB1545F9A501ECBA1C6E90D2ADD9ED6A97910BAA4B9435F706D1C44139C
B79AAEC9DC673C9F180BFB8D66CA8CE71CE3E84D7B77D65D423D0263A4E45306
E0646863CAEFE1DD07EFAFB9C0229B562017C979A8B2C95DF751A861565EF6F1
EF22E1DE92C4515C8A5673B23AE113B27C840C2A5C22FB0CAAB9C88D9FC47262
724BC9A9A578B3BC9DB5CB1B44B1BD592D434C6A40ACE8349123EFE3513D141C
31DD7109BCA7E9D83EB2967864508357A1401A456A310532D16EAA27D66C10D2
1AA88BD8E49C55BC1B68C60B75E2F3010CC15E819B9D6F09BC62E0B00A93FCF8
7163199C3E19E8142BCDB7579DC67E8DFE3EEFA96E8ABB5CFD28CA18CD9013B8
425CA573546B97FE15F640911E342A125982936B54E14F2D87C33D002B9869CB
C177BD7D99E0ABA1EBF44D7C496CD9CDAE093B74A454F11AF9AB265445B1B28D
923E4EFBC52BE2AE157BA062086CAF2EA14B0C75E8E5D87BFAD63D91F1056A41
B007AF081136D50948561FF5E7C65A4BE490FA6577D5C87A08B6F333E1C2EEAB
C20A070A604794599CD605D3A0B3369005E3FE2921D32022B8FC8E22DCB5AF19
19C4F3EE314D0F09A5DC24D41FDD14AC7B7034E207FD3BEBEFF03973685DD97F
036BD60D4E316A865DACED6F47059CEEBBB988E953AC22110E3366B93603B2B0
A8CDA0B452409C8C765E4F4CC0F2544D7E72C14127A27B4B7E6C306F51B9F6DE
F9B5D3F20879DF13EDCC1F4943BD62EB9AE82FB51E7BAF5E238FBA0F27720497
CC1439AB311604C7573677EB149C38DB0E2BFEED19396B72A26F7C5BFB146E5B
38643081A91DA1D968D3C7C68165EF09AFDA587B09E521D96E58A9E2F58E923F
CD2EF1FA3284186CC6BA6A41105AF4BE60E0FE5C1E463A3BA3AB5D13CB050010
6B9ED5D16E0B45FDCB6775C886406DCE772F4B24C9343E42C3D897DE532796B4
2E8B6BB4C4A2D4DD9AD8A3E4F85B69429085C453279987D169D535E487C20BB5
3D87CEF1C564E90FEA605DC6AEC7D3FE1B8542C6AB92BD3F909E6D8E33EE92C3
F5C3905C1C3257153F687ADDBEBECDCE5D5144613798CBF687F2ABA3FCF75F7E
BA48FB20B41C838045FCC8E3D582A3A35DCB72CCEFB6270BE052F658087D5C67
D702AEBF0B8AD51121D5D0686F0EC0E5329D621ACC21AA586257CB49B3ABDAB5
FE6DED172EBBCAC68218092F4480C7CEABCA44AF2E62C8A2C7CBB362ED6571E7
BE314685A1B6CAC416821BC06936B979A3C1B854317B64E8D558F15D8B89B0B7
C62F58C1E729F224EC05FB4EC009EF48E7E56CA369F9C0C632D8FB9D752C15D7
DCE35C0616D2AB62148C73AC7C079EAFF922CB7CDD5F4A783115A6438E26C04E
25D310D9E3553DE260FFD590BEDC71CA9AD4AC12B098EADC4339B1552C248BEC
00A15EA0644E6EA0B2D2FC4729CEE3874CDD4ED921463C0A12389EC9A25555EF
5E6B4F5F7905A91173BC23B3D1657C9E8DCBDAB522E1F4A99F194E744ADF4A63
3D9A257753C55B22E5A7D1DABF78ED1ABC113A4110B17E7A2D7E4D7B9F3C55F1
9F4663A78EB081B3C938D07FC7C596429076AF0E8834E0A9D16C4DD8309085AA
D4C782B78A35CE8DBE0A290BAD0885D35B2CC9AB6FC6D10AF305373E1B87A5E4
62AD7A71280FB152DE49D65F468A51513C6C0C4E7C73BD8E43A845AE2C108D72
84E514F58BFEF59AC638DAA66BDBAF071B000BAA41F4BD73AFCE72BB50260661
0206D020115CAD36A50DBB526053ACC5C0FF6206B2953C9350E57657B3728CB2
8412EC053B76295C62743C6E640BF62620A76D2C40B75214CF6CAC749486C2EB
98B5C918F0139932876C65DE0CEB089401871C26C7DDFC5D5CBEEAE249871AC3
8F1658C756F9CFD8FDE80E495150D14546AD2314D025295172435BF4F490AAEF
2FBA46A4A07CD5622A67C4F09D8C07C2E3E0745ECDCE77D328B1D96A0CACA7DC
161769068A94AA7B4D9FA64FE24E480F8CAEE64A02890FEB06AB59B3A519F57A
A785B3391F9355F74CD2351AF9690C9469C84B6C55AE734229625C964C5B35F1
41AB733C6DAD3C20BF4C061D7029C0F8C58566D6FD1DED9D5E4B2B6DAD6A19F8
F0894C659A61F005C6FCE1A0E970036F5F642DE1E3AC0A662937874153DA92EA
F57D6D9CAACC8FF6B31609AC2AF79ABC77A6717A1AECF7A8190680364C8EC229
ACD941918B6554DFF02340FDD61392BE9B0452796DA3D81E94B79A2965D63753
EA5B10491A203C94C3D07BD7BCE91BB83992C45710ED1D59C50642A0CC1CF140
FC696BE86B702102D7FD9E0BA2EA50B07C5DA1221A96218CBA86DC8B9DFDD6E4
0CC6D9AEDD701FF0D0F2E44D4469F390804B9039E21F1AFC9380F26571E3B2CF
8FFB2066D6F8D2701298CC9FDA7928F99CA135B6980455638B441CF1E7447E0D
79362FB4D7D3DEE02F5A89B11E1963015A8035A9BF1DA3F832114E67896323A3
64B37798D531BABE8865E8D3B7640F59B5C07D2CCA6C0BEC68A85AC51DCB5719
82706F101B216B4AF3523974378454CCAE6ED037138B3294CD515DB323465DEA
95A929C8EF90C2F356C40059012FA7ED8D85A93D8FE2BCAFD3B62E325E493D7A
642A63F8C286FC69F1DE5A80C4C8B981AC887CACEBEB622B2E1CA5CF16CF357C
BAA6B894DAA2D41877D1902E2C12EB0C7BBAD9D0E9CA6A557359E8A213276496
D02DA951336995D2DE6BE506F7CADABDB3E88987AEDACA045F663A3C778D20B6
52D4C20EC662F2781858A1BF355FFE11B5C1EED745EC9843DE6274B66B04A5E7
4CC3409440737FCCF58A9899769EBE684B749A17A621440E42355BC95CCC2164
85429D48A4A0586058DFD60DF2C7C96B0A969C6ECB58F8CCA98524AE18876BA2
C8C875CD212E6BC289D87F1E08E6EA810D7009159F1163623ED58922C2D185B8
0B478DA643F3EBED3ABC74F322606A94470FC8ABFD342B6906A5399825EC884C
FCA6DBCFA3711FC47CD0A0B1342AB1D8CD714C4A4D49D97B1C1A63025D2261A9
87048B8DAC71B17769AAB13BF63F27AF18CEDF9A16487327DC3CAC470BC33A67
3DDC4423BD1946FF5CD5A93E1EF62EEA51B201D3B14BF47757260996B103E77B
80A9643541BFA570DFD8F4C41F743CAB40A76A25CB7A543B33ADFBBBEC29E29C
F2347AA6E819890634496E91133C49BB85A6ACCD867561C9675B8A9C00B5BD80
6A94BE6EFB28733CE39CF390D8ABDE4AB15F3CD7A544AA4A74BE19F45CD466FC
F191E7EA641EA38659F905FF7E29BBBA2C52EE0385F33690BDADA2B0D5367265
A0F6F9D726CB2CD81B49A9F47C12FF76284D3B0E4AA5403149E46F78BB6AC81D
E809BFBCF8A569CFE3CB562F9FF563441C51E317A1C20944C84C955F1A89A134
74CD0B2B0BD44F9515593C1E7C135233EFBDACB6C76BC2B8CAB15E072F4D80E6
FA1492BDE59F46CA026F44DD608069997CDED15C68243F7EAE1026C16AE0AB3F
B9D1DEFC6D8A110710DDA85C1C163C513D25B9264E3890A559355E4AF324E6C8
18F612F8B4655058AF93C2AE5D96AEFE024E4521C755D34B49654CA7AC01EC05
50084F4A904DF4D734347F11DCA2502FBCBF32161D54A462A9B39BA191F804E2
4C582927E6F48151E720E33CA846C5DF85D00483F7A3D5741EB51E3EBC641AE2
0B324996DD00246CE562A162AE5CFF0CDDA4763AAFF2692126B4FAD56A6D7DD5
435CF699EFFC1E7C2FF53F19060E6B43DFBF32E30E6933244B839FA71A9FCF98
F4F9501DCF69FCD2451835DC1F3DA652834955472F18F480491EB93BA36FA490
10B5BFBE8D380ABE4CDD74110BD6BA8C25ECCF8DBEDA19EF89C36481229891A6
896896EABA373495457EA4409116426E8103DDAFD22E571B4CB13CCB6CACEE03
99915306DA25FAAD0615A216362437636B18E83E6FD6CD003FCEE108DFE5B296
64487F6DAFA63CF029261D0202650EB370F940BAE239D44DFC4ACDEAAE35EFAD
BB58ED706A189D0C954FF3EEA9C631135686B061B09C4BC213B13A8AC0F22CDB
3F7E9F8BE834F74ACDB59493C8EC4122BA1FB8EF956CB9B99E3F22458F76ED92
6229F613C2D20AB3ED46752A98B508FBCDC00E3F6E1658C134D080C5EEAA1B81
BA9256C1F2D9E2EC0AACA3347D0AA62394F8417DE903CEA643F806269105CFB6
EB420AF315F0C61BC0C63EFF738E0CD0C5C96AB24902E1D23DBF7538D7A2D646
078C22F4E1DE5F12CE65244FB26443481FFA84E5A580C214699B3D4A639656F1
2C7EEC2E99E92B32F1D88FD23CF092C5A60A6F7ED44EECD87A1BFF2600398BED
517392F9B8A458D5DC490172B4F2301019FD6B3FC418EE9E2906B9336A904D50
6C85470436B32F8323AEF18BB2725747DDE0708149B3C59E6975DA9A4814A573
2C3F837EFAD7995C65B47D6C81C08D6FDD3204DD656436AD6194408AD11DDE03
C45631E47113261BE95F2EEBED6C9DDC1D2D26EFB54FC4DCE037ABA4029604FE
656B2E96BC17352EEDB150632276BC39BD69D7047E9DAD1E8BE9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /Box put
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890B0BBF10075D53739F7E84CEE95B40C3DB68D5
6E9847E37B7920412068C3DE2065A77281345980956AFAD312499818890B454F
5DD8C92695818BA4DAFEBCDD4D268763515CE077A64C5F3AB384A6DFD7DD9641
FCDA0A3344B3A14F82D478B4BE7BFC2822A4D67AD3FD07B11589B93842066528
1E51D954D7E6019F6921DB9B00ED303B4B8F557EAC7A0B0340A268B0DDB25B3E
BE0982129B0D3416CA5D07ADC689CAA181270B8141F9D0F60C60F156CB305E5B
E71D9A5D5FB3216BFB66284FCABF6D74564D1288EA99D3FCF6F29C3AA690A596
02C0AD2BB29A2D457C66031E5571A1454758212EB4D053F4C28FF629FA94DBF2
9677AC4B92C4DF5C7FFDE31A8F2D6F9477896C11CBA890DD464C9231B1C350E8
E8CEE17F2E0F5D10416F7D7FBC6085E9BE09E692951EA7B93A9F49CD458476E0
A380E1D122F275093ECFD398FCA6D714187CC12A2B16318F9E1D2B0E9EC134A2
C4D2674AA68D2E7EDBCCA383
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 78 /N put
dup 82 /R put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F48833E9E
B7BFE6134591C923F2C91D77A132347F5F471F1139B9938E880CC5B3409B3385
9FE870D53EC343C11C946BB9B5FF1454AC7D547539FCBD3D77D83180BB4741A6
90189230B9B61C6C54309B61623636F98871724F9A85088E44779264257FFA0A
FA05C2842C534A411593D10A76CB09C8FB45E6E44703FC7A51D81D3C1E8F27F0
3AAA9F00AA3A998A0C661B72E46589CC08EA87EECFDF36B819B07306C38AD155
60CE44A39581BD6B555165091C5D4107149E976E2488EBD830CCB0A350C695E3
ABC1069A94F16744A6F2D97BFD4E208EB2BFECD6B74C35310CC3567F94414FB8
334C42FEAB58B02F67E9CBC1855FE7DD7C1B142979D80DAF96A3F3517933574B
07E1CAD5FEEB9AD584935A58676976DDD2B6E118FD1D46453894775B2DF1F871
924CE2C0479EA8C8C337504C1F456B77CD97DDCF704455215B860BD0241DDAC2
F375DD996474504545DD2C1B775E4CAEAC1DA45C79223AECA9329513ECA625CC
1C5FC3AFB291A6B75A593BA8B9CA4954AD9069797717CC0B929BABA88F67E4E3
691AF74A94E95E6AF67C7B550FE44C63FAA5B404457CADEA896C69E5262430E9
787D1CB2FE11612EB29CC828ADD9B2585FB30DA75565D2D87C4AFBAEBA55678A
4E32C9C491BC85622463D65C0E9723DA72D45C6893928AC636427894C0E9F152
2EB691A2A5801D5A81640C764F9A566B08ED4A961E3BFCB36482DF85E9BBC7F3
5247FDF3399AFA35B53FB77245F078106D54A33F9750D97EDCC08D9B9F2ED1CD
BF03FB8DCEFD50625819EA67CF3CD416A288B64803F7812C8098AA640AD515FA
8DCA20A4D4C737499EEF3679764FD4A04E5228B1AD544A8895FE9041B84059DF
8838BE0BF67B63ECCEA2C818E780A376155506DEAE8EFAC53CFA081E1E3AAED5
48503118A8638431E939D9E13BE594932C814BE6698D6FE3F0A15F05D783EFC0
F61B5669446FD2E920C181ADFE551ABF15D225BC65D7D42768BA1EBBC19F64A2
B184B211D5470F81BF381EB20360544635CA4D3854C52FF691A36F65B8FC21FE
C40FD027D6674118CC6AE144B22580218E792D66C0A78B247F176C5DC2354D7B
D7C057D61D96D58A77B1D185B846C03C5E1EABA4E10AE611F9F6101BB688F315
A960C17110CC78977A7E4E7192134CA69E81694F4B9C95F55AA0E0993D1AA57F
1B79A6329C4CA5AAA7C11D2ADAAC75F205A46B98AD7B55C3E2C848B7199BB7D3
1FC47D6B8B5763F072395B0290F3852D907316BD2EFF8DC8F0C56D1270CC0240
FC4E984DE027548467A1AB533FCC30AE9474B0C7FFEE3613B07F31CE784BFEE0
D1082C6EA416F1C9168C61FD6AD9D85529CC3E6524756E85FE5F3EAB6872587A
ADDC45FCCD96D682A7955721B85FFC8A38719A69DFC85DAFF614E4C2FDD72AEE
FD4AA3A0A1313F7F8572D560C6083C9E631710C6B2A3EFD47ABCEF65271557AE
21E0C130E70A8B764150022F6E697BCAAC6986BC9E53751FA783E0C060228A6E
A40AD3F2BFB7606DC0F40AE7B8E82FB9A7F88FB3BA8CD0BF99C91FDE78ACD0F7
610091B3F0CC1BA054F52269EB58A332EFDF0E03AA4EAFE33E3CCE1C24A0A7A8

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA411984C107C8FD9285
F08FC3C879AE6D42023BE0E114B374F049F75FC09E974E64A63E36F76D0DCE3B
3E57F4A1C80AE684E56726F52F4A49A022808893BADF86ECD0EFEACC9F5B7E84
1DBC5A753D3803C89C438B0FB99CAF607B7B16433C977215E7F78D80C54177E7
D853C4EB05C108B4859A21AFADEEDBAB163F8C1C822C4DA3FB1A29EC3ACE79A8
C5A00293FCA8CAD6BD2A94098E88D45175D4D9A88D0F77DFD5C14FD6081321C7
AEE0F7914B79B9ED057E292AC7A96CEE551D96F4D85369D2B4167C0A622AFC28
80C6D6FCF36412F8EEC622F2783C9F1A0403E9A5D876942803F08147525ECF7E
0304D3BD24256912A2ED3C59B32CB4091040E21EA8F9253E6CB7433656B87E1B
0A17BA09B89DA54E89C36AC72560140421800FFBFCF4372B123AB0EAA5A28063
EA72DB6C8E32FA349461C1A8946B78E05C110976E5B4B81BD89C82D81AEC14F6
8511ECD14AC322A438BDBC4262A26D679ED4D87F89B2D3FF1A88AEC671EC30FB
4DDA9E1BD3A55C4D59BBFB7F5EFB232FCBE3C721D8D181B02711EE2C105FBB16
BAAF98F469068B96F7ADA96E4C628D450E7E1B4025089EDF05D020C458C7F3C0
A9E5F676EB11E606954B3A3613D4E1DE3727C04BAD9177A42914B371F4FECE62
5C47EC539B20F4FCFB72DD0EF45CC71FFA185F653F299CF0858E25008D1538FD
4D2748FD791113395323560E169AC68D884E15ACA3BA6934ACB18CFB0869D655
CC9E8B7B2A883E868B7D9AB5F1966D7364A38F999D57EA93937C58C1343F917C
4B77C7BCD394C7A7C155763DEF4609925F2B5D58FD32BB7BB54CE2DC59D09E42
CF83A35DC7802A111D96E6C592F5DA313DB18AEC1CBD734D9C289A53647EB6D7
735D9E91EE200FFF4250D413CF779E46A1A18E239FD522EDAD8AEA7F7EC5D653
0B3F2D2A59FED4C52F3D93BEEAFDDEACCA99724FC6248DFC44FCA9723223CBAF
554E37F1F63A7CC7241B6A3197C6081BB1F3246540E952D3CE37E2F63D1B34FB
1EBDC9A60F4AB8C27EF1D4E65E5E97328618BF64DE4BEE2CB0F263EF782C0D49
E6AC6384AEA13283716F280C3478C8EE4EA63876BB37A5F17C733167B2CB7DA2
0C340ABA91FF0B3C926798326D283B4A92B34FFB6273EF4F8128FCB12A4F2C8D
13768637D078225DEF89BFE7329F2B420491CAF1794C18E8AB1DEA1749E877EC
12EF096A2BE42692EA401E2A3A11F32513AB4829EF58D62DF6C4CD5658D8DEE5
58D56E17F13ED15C8E490FF120C6DBAE75E3AA5B8D06A527BA83FC7759239ED3
2C9487CE5089F76DAF6F1AEF63D276707539A79C0AA4367F4B1359BFE46E90DE
9ED306DDA195B893F42B5C037A98F21B48AB50B63BC616BA3F3C588FDD7480FA
2A14FCEE4706AA003DAE9F92D5C55727F7AC23F58C8EF808B093595E631544CC
051BAFED695D5C51797C4E9E14EC72010DB93C1EE96A8C4EA4856637A5669681
D8058179F67449AE6584B538A32295BC5C5F40DFC533F5B87A0D016B3A67CAC1
CE1953C9CF7334F7F3605E4426785042123F5784844950C5E30EFF8683D73019
7DEDF1DA5A31B8AAF9FB4F4C4E0E815AD1282D0003D149F5A1A1742EC110A5AD
42B236F512DE383DA77E7ABE6662843B857DF4EFF9DA9D4652CE666141182F86
363104165800E6AABE35B01B991AE910B7DC821CFD8A6B5C7F4CC6FC03C091CE
C66A50A9349FB3B1C2A695930A19809C222D522ADC89CF698C61B861F1B4CCA1
2CF4B2481E472FDDC90C7BF552E25EFA727413E0F7C59661F1ECF4DCCE59D724
2984AFC94A2233E590A733DF8E98FBB11F635BA1B2912109796C1C7ED9476FD9
4CA6A05BB8C3A756CCE5D25F8D2B1B99B73FFECCAF7C7531842B95B7A4A67149
2A44B7F43E4219879931BEA2B95C7510EA319DE31DA5E946E39856B07D81DF2D
0C98672BD99C91405F80083EEFA4F53DBE3356BE438546C0FB741303E40B31EC
F7705509E83E336BA0A9264629A6EC25B94E589B80B54A3BC1358EC3FA22E15F
C60EF3EC60091856CB963DA4B845FB3276FD3F0B755A375F5C9D4F03D038DAFC
2F7B2FC44D874EE1812B3F153E63FE095A87CC113B930AC5E5548B3701982522
7FD74D17B8E54FAF294389E3804F2D8827B368FD56FCA8E01B8FEC2384E26B98
803679524D46A5A1BC4BEEC335A5C78E90E121BEFE8C3E1729FA4353EBB08AE3
9BC8B715A541515BA68D3264DF63396D5C6B2FB989FFAAF363FBCD811050AD49
BEC1A5CCE5CF234EDC9466F1B88FFEF31523001CE48D8F355B2BDC20BDB11845
0F9F9C13AF26147A6F94636839CF1075286502027833484674C9ED2EE44D10C0
CE6B2EEAA9BD1B7182CE9151EF2A4AFE4FA32112954C5B86EF7AE3D015FAC570
F6596AF00C0F5C7D6336E0E19CA338CCD852E4AD9EFDB3784C6366C4A1EB3950
6A273761A898F69A36FA0E6ADE17A52A09061F578841058F3FAE9DDA4237FE83
F267FB2E492AFCBEF4C8E9DF3FA6967F6F5C9216D1F34F1F9025773C7EA50CD0
1DF13A42E9491468078630B74E277F5C32166AB539082917BFF7EF652D589681
C4958EC2FBCE0E01F764EC4EDBF1A7E60ECE54CB38A7251F23A0CD43453352D5
C5AB3E3F4D4D5CAD9543A3ADBD3DA129B2195F29379C4B88C50DF01F591763F1
6FE1D1CAD9382839AE8C789A6339F7D36DAFE163824896DC2C7B007941D39239
CFA195CE54BBFE9F13E4F119193F62F76BEAD5C3BEA1E7044636F7D3BAD00C99
38DA2463A42D22D0C888082F3DDEF6558D68EEE57DD7DE2478A2B21894DBA290
3489ABB6B2EB9F977F3F4D690B31E8F6E08514B46890A7D87B06DD81FCC70783
17F01C0E31E1A4C310B0C4E5DAEDBD08EDBCBC3BAC588F367E850F9D9D2A9F7B
17BDC34F34DA91337E5469B32C9ED1980C4CB36101226D4929EE7C9DC63EA8F9
780763E889B13FB2BC0150921CF2C5C11A3A9A52E09A006B8124A80BBF26C1B0
D309A6E8E5F3879805D13FB270799FDB98850AC5630E0DB9EA544860D688E9CD
F25E98769FDA84FA98DAA60F8B7B4B80EE209CC66F763542D242050EE1FD5980
C610C2AE6F94B0997E15984F42D43D629178D72F01CFE1AB79E6A2F569230CAF
55EB6CF686087DE12B3D6D19E4ED3FC032610EC4A97842F2BB59894122796E46
19F5CE7FC3B92ED8BC604ABBE0575CF97D126E1669A54A08243D46A59ACBF3D6
48C1AE05E9A2A4432B7BB69C467659C2247A0B25217E43C8C3A9D70992C1F31D
C6753222850ECF459A7BEFF8CE272B577AD0616D09DDA2A16584C8D40E7F673F
BC859CFE666140D9EA8AC68B343772084D45B94B8234219A28235DAA4CAE0221
E2C18D9ACEC0622533CD5D4DE4A73E4EBC70F615B86F0F94CB2242B9A1A169D9
F8F288743D1E3A6608CD85F75F066456236C022022138A9D77F352F917353464
4BF7E5B57B4024BF8569EBC2A52B22A941B3A6E25E0975F1807213EB4B15F281
7F78C65E88EAAE554A620FFF220994D707C8408749E0B1BE3E1A0D6A43944242
63E5C1227B11144E6D9936FEC600F494EDD20F9963136BB32D1B6B279AF3AB9D
5F77E601BED695A5684A1B63876F4735431DC5C43A3416B7D9498707C04E9115
D411FD74AD771B597490128C8B11A8B9D7DC54F36AFA934E907162B395AC6CCE
2024702BE0D79C81597D49BF022A2D851A47A2D0980909604AB40535E4200380
CBDCA96015D3822CF627EBDE4B073A3D382C0D49DB776D978DBEC0E0DB9C4D5B
396D449686339482AA1837850FE2D62A37076A214FF23F38C503ADFC71C5F898
C408A7E5479868EBD29C9ED0280B0DF0DCB558FC69B86672F4800F84EDBF06BC
D1FC75BC0F25F7863DAEEA197452481FB78DFEFDB25DB9C1715546D5A01E478B
28EDCF596E49354927CE1CA3BC97166513DF0DD4BDB67ABC55516176ACB9C1A3
95CB124A089316735E3BDF0CD8E74DBB2BBB4DBA7DCF000BA5716D4C23C75336
80C591C3F2AABA930D16B3E035ACCC32925732B3EFD6FDFA76A5EDC83BFD9948
87B537733C6365064602FC128B6FE1B7E2FCFD2FD1A3676A2E5FA0831F3CF67E
16AC8F8976E9DD1178ED7A8ED2A9A049F8D6ECBCCB7AAA479AEED2F233B51BF3
D9A2A91F226AF6C4CCEA67E397298427A0A7A59C4ACD748A13881C130EBDFF9A
C8500084FD75CB36F23C0BEA5C55AD278CA8D55637BCA0113472B8A6F1188617
4A37BB8BC122F8F3D7E5EBD6870DE90DBCD8AB3972CEF5BC502DB98B9C81A16C
EF4A50A48CA9E1CB491AD7475792BDEECEC4D91D676BB374DBE6F6DCF9A3C3CE
D6842C356858594C63EDBA283BEF68C48B1D5BC0A9F9A1E08F5F5A67D699C2FD
288E2840A294F94CBB55FCA7617F2744370D43F5E2B9EE58690787848E6766CC
8D703B64341ADC30B47F91282EDC52AF3AB927F3D32B1842C362C65CFAF72D25
E958FD536F7262E51BF95F2A67090FAF972407EBE347570AD63D00376533B99D
E6891224A5614BF4EF1DD2FD31DDEFFFB31877BBDA711E73F6CF45F31613A24A
30023BEA9A207AB22B9A84DAB00C9C40F7C6953CFF071E1637F543A9C767BF0E
BDCE91305EB05249562A4CD54490B02C9E0C18A6CDDC9846DAFED80EB5CC9C2D
3BD6BFA858DFD28BA7367F8CE68790E465CA10C5BD5401458A9F79AC19668143
123EA5A04FE3C20F7835E00413726E689E002C56B3DD423BEAD05D75F6F3F71C
5CD8623B1DB3881C6D925C0951C6696807DA71B2A6243E6AE7CD6EA69488606F
AF9788E84B4399D4C62D85B43354FFB487FDEBB3F2F05D1930A3BC84A4B0A07B
E87C6830D19D19CB2F97304564CCC8D838ABBD910E13589CF5EBC5DD20C62F79
E7CD714832ECBDB147C54FBBD70E578DD1B8E0D0CBFB6E67E4411B2C07E5378B
12A51B43F968C73FEE454454EC6D29BDA5F5E89BEA4ED9866C07190F669BDEB9
74AC424C8FCFF3C17AB9B7DB8AF11CCCA7F63CE26BBDF0ED84C9A57353E21802
D01FC0805FDEABCD251A329B0093D81FFA11EFC865939088A76CED8311D4355B
F65D138ADD45B04EA0C6CEC3C5EF6E9C87B23BC17EE5F9289F3A163C87B83931
C2D182EEF0A879549CA69DF4936D96FF7D662428235598FCD6DD8511DB50B45C
14C9B744BD98D8D42978A64051D825D512C6F54EEE069F2D12E8CD0B2F904558
7F1A01F5A732B226AF22FDBB02300FF1E679503C5583354E1535196170E9653B
E0827146E007F30C7FF2B337B412CE14B4692AD3E9BCE009D1AAC39B97AB1FF4
8334E802732D4B23AD08E64CD0EA508DB893617833CCD0593B7DBDA4351CB31A
8006452979E48AAD6DA7B1773F54F95693A5DC3207DBCBD73B067552BD50DC53
426C1306B46F002A6EEECA27573AB03CB34BBA039100AC626DF4085918B91237
93DECF156F4018399C3DF46C502892B1C31CC35457264B5C3945D52B74C2634B
7D524AE40F50EAEAA592F499107FB92E22D07071D76B34DBB969A12C5C35FA0C
AEAF0A927D5C7DDCE03DCCB229C4467F14BA6FBF2402581F6F84BE8AAA3CE7A9
06C63EFC4CEE531EFA8B150CEF52C48C478EADF2E58D3CB1CA23A337C6F222BD
9618E23C7FD95CDB02DC661ACA0D9FA5DA0CE8FFD6E3D0DC8157A389BBB3C8C2
D91E42A8F3E97D7D47B4034E440AF248939790081C2D4760DFBE929FECAA9913
3382DCEC91583A2C59F530DC560BA854234631E80192E51515D2BA0D44855014
654D1A999CAD1A5E9DD6E22CC2A7C10394B4FA2872BB77817D1E2258EB8E4A11
46898DFD4034416C03D9795EF2421BD5E57F37B1C07529D0CDAF240C096EA124
FDA5B87D97FEE3A170D269ACBB27E1067D627362649D82A5C3A57DC5041B1A13
FD2C19ACF31E6E14715CC3BBE5610A2F1EF8CF49BB7B91865638736C94EEF436
01F88970E7D93875080E51A9730FBA9AAC65020F185B10B98514C1FFC6EAD731
2BEB7AF06965DD0E501B8F4CAB74A5F64B4A95DEDCB0179FF112309666BEF5AD
61EB798D2240D716C6A657C2EADEBEDE79A4A4DBDB198C7D06A54BFE71B75777
2EDCB61AAB312A0F097AEBA832EB995E27D36EEE7386A786E482EC5ADD7C3EE2
C7FC6ACCFCA617E5ADE3D0B721C751699D83E88265D7F1B78D3C62F09DB17818
A5F1AD15C37D3EB3C5994CC70C22568949E624D8FE780D65910243575ACA26FD
559D963B070E54F97AA21DC6CF0C51F78E246AFA80E790BD5C16E7C3081360CC
A5AA4930D43C04A454C2DF2A67EAB46B72FFD337D62DEA0EECDAC0ACC8C1B258
E2E92DB4308976ACBAF5037EC19191219B28B56B22AB4FA9D2C6095F052CEC01
B7D399D097BACCF6C9E10E5C10982606645116C02BA07760B6EB83C36829DECE
216E9D4DB8034808F6E4E32CEF72DFAD9C60730CDB6C87A6D62040F5C74D90B6
068A5235A9B6ED455575CE888A5ACBE4C407C9A5B51BA2DE4A99CC2F0BD0358E
F36D729114E76BC14680A03096301E4AED065383A95AD5B56B485C2576912814
545EB4C9191CA240C9AB7C5170EED6B69AC63EE2AB32A29B2D317D76FBEBA106
D7FB803545AED50CDFCF7246DBA338D269EDA4D6177ADE1559A2967E453EA6AC
9AA63C2672EF797C6B569D71D35140EDBF0CEF41E2E467ED1518D82B08130625
B70FF9B93328071E36569CD507130E8F1A2F242264F855979752766874C540D6
43AAB88640D0E9347F6391F9FB61694AEA08DA49E20BC42CB63AAD25E7467AC5
384A146153A376198EB6A60DF3BF7828275184B22B4249C7E9A7149C40D1DA85
36AF51BD0187747CEDD0E230D7D2156928CFC8EE865A632AB4A611CAD82809B7
2668606C1F992A1D8ED0E05E441BBF12394F7EEB8B3819183C0B4D2F92C01428
AC9051C9F5AA344BCA6CEC10B732679DA262C5151B948E529F0C7A21052F1A28
CE3432A48774F657E6CE1CBBA31DD5B6A2A51DFB6604687AE4E6C3FC00077335
72C4C243D9DF0E9D06A41B396DEBEF9C74E4017237825DB5F7B38287124B1DF0
43B0FCB636084A02557992807415CC510ADE3468E921B07AA81F5FAF91E5BC1F
B3E8FAC2EB0B8B4851081B57847EB7A99F9A7B7A1834D94844D6E71620BD36A5
4FA4F01190D208744A52E593570C6EC8E49BD41ED979314ADAF31C5F5FE5DA04
8E15F885C0A3B24E090B54A955B493DE5BE4582B4C98B73630B967E4148136D9
9ADE052793419E5CCC579A53EF65B45958718732BC5854B981DCD0BD4A91BA9B
DFBFE3B71B65667AE5E27D9AC6340012BB6769BCBD30416E874194A2C4AA475A
156096793EF4ACF83A7ABCDB26BC852F5DE03B3D0A4233EE942AB48EDB7E7AD2
91C4F0BECF14318F0C968433143A19DAC00D94C51ACDDB5CD7B1CBFAF76EE833
E519C3715CFF2AC110797C8B2E92C0A1800E4FEE7E5C815A19621A9BC5B1D724
EE059687FE5220B6547F10E5C09F9E499346B2E180B923DD3A0469D988EA0122
1F330746FB913FA421FA364411BCB49DE285E7CCA8EA2BBD321844409FC9537F
03EE894655E7B06095437FEF27B81EB14663E3073EA7B4F3C8F586487194107C
63BF5C6AF68FC04C371C2F50ACCFCD94D505A649104701909913270E0060FE23
E1DD26C9FCD1A6D912D434767D7B8A4C9B926AF19C0DF700A101E6F5D1016D20
34CB499EC864B2332429C9661A98D41AE749165D28DA7E2AFEAD936AE066ABFF
CEEAA68CBDF5739A9E747AD286D01FD254E83FBDE2731167C114E683627E25E3
29840D68F0ADF43FAE666EA92F348B251B150668C4624FD1A83AF7FCB128EEA4
82A28A5F2C678E00CFAC6A5F3EF9A9280384C5533F7843E6670B24942EE5ADBC
27F1D1A6D28C2DFD8FA0571D0F96B18F190A1E4AD02916CD5AAC997080A82247
55C02404518AA498CF0543E39ED8BD5649948DC2AB15DFD1E50FF58784918CCD
F15F9000E546E4D972CAA80BDB3B8DE0E5509ADB513013C14BC3BF884B0077C9
CA4DCA2FB7C7EBBE81AC6285739DE018177CDBDC528E02E2DB1D249256E80132
A72215E735265413B1CB62F544C3791E2FE62B0384FFE09989361DA0D7AB8B97
9BD91DBF43FB52495F20DFBF177862FB7E2AA16B50DEA57563E4E7D3257AA9DC
B5ACC160FBBBF11FC3780E630A24EFB520A6F60B505174A3BA5AD35382FDB4F9
D9095FE29387298581754E13E220A73DC45F7C9A433ABB0C95B092BA558AB5F9
CB60A2B2B7D3726D4D06CAA2CB08BE1790227EA6F673ED5F34F1C1D20B609A15
2EDECFA26874115B2ECDC7317D6A8D4BF728F12F0F85E5554E9E55EC6EA9E821
7A7459651CC8DD6791A341BF41A595EB76C28B15527BB2894802F6E0E5B3B0B4
2C4E29643EC14B471076E26FA0401C5456071B3EB1BB3F89B77292DB05259285
9999FAB76E6EED4FDFB7F4E8AF8B78EEEA35103C16878DFD8D71077571051F78
E2F19FC9A2805325F934D2AFF7DD25DD7D7D3CAF4B756A92744DAE82DB7EC788
C66DE4D9D40638251FE20A5C8EFD39DA710A4716E17B0A64B72719C1AD14481B
2B5150C63198D61A3611651A828C14720C008F4FFA8D3075910926C632218410
3598068D0CFAF36FBB0CFA78A1197FCF102CBDC87BBA43365B631FC5A011CE9F
CB1A8CD9C7C03E8AD35CF856DCB95C747649996DB26A6F5886A43625C6A60E77
A37D5DF30EB0DA12624B76F586D52B66A64F52700746CE527471A6BB5E968EDE
4B8D2EC13F789CF1A4AAEB28A369B462663A4AB57D15D6C78153E9C5533E181B
368CA08340FBCF85576DC46136E789DFBB551AE2C2838982303318BB12F7ECB7
224FC5E7E4377C6E1F717DD65F6A274994CE25E0780071A93BC36DFBE6029F87
8FC59A654615785A05D05D6909EE7D51FE5378A0BFF5A15ED9D04A7D6DE8BE61
2DE0616473D1DD73635F2A6D25FF8F941042919CF810D7868D9E0C4930379FF8
7D4EFAAD7ECB31744985A5A1E520FB83F50F647650E90E3AB137912FB38808FE
40D40453B564B8FD5D5C6FC917E2A4CFA8FEEAD0D3121F61004FBBD05EAB603F
D46909A3D892F83A2264C4FA79369178B57C16A763CFC9BEEC276944BDEA2557
89EB0248216027C63FE9DA78EBF6575AB221C113F8E414A0ABB9B11B3D0DFA60
D4F1FDCE6B39387CBE54C520F44C0510C2DB10CADE05ACBC6787BB5EA465FF0C
FACD9BD10017A51F5781CAA9A414AEEA78ABC17DDD10E2B4D770A890088F2433
B0E8C971CB07C66E1B7D10869521223EF246673FE79AD708BEA8279138FEE23A
7FFD5603B9AE93A3F3B48BD6A3C0EA6FCB062F85188250B9E9257305C00CAE2D
5E87BFE61302B759176098C0CE2464D6436275229C8858737C55E8C217A46212
4495CBCA87983B8C8A23DE804C125D97F7149F4C3F33DCAC5FED08DC51843D99
4DCBF759C9FF16A8E893C28EF549CA3C0F7C8169C35E11BA428CD87225C7FF28
FDCD4FB898A052A0B1A4FD0E3B03BB4ACFE6940A2A8ADC1CC2AE21BE2B99735B
82ED5CD6F0A4C535708D4AF7A08C723C249E2405110EDABC0A0C0091B3AAB071
0DC00D013BFB23ADD7E58713D6F50C4EE4A1724BED4905EDAA8A46A337EA53E0
87176773EC684F397CAFF417D6C412A8F0B0A50A868AE11FF98F7A863BE2ECC5
74316F84B6B883943D8D811986971A6201A63A8D0B8B644D5701348D9D601EA4
C2A10E6FD14C29FEF6B211BD4356914FF31EF22D4E33B72BD8EF80DDA3D368F2
DE00F49673BD3CAF2983DABA4741F36C07704CF1E57A190FECA1C07F42C53E87
33A85F5D1751BA61595BA4880CE60BB7BE9A862223C5C6E41197EA80FB97B8A7
35E82BA885886035E32F00C15325D93A44741FE1EA6FC1C0132B5FC4AEF8D136
49C25047D5A37CC25F49DBD6D715FB80371B38377D2252CF0A85C938A803C624
19A78482CC2C6BCE14019813261209B2BE5BAFB5140A380D6719079991D4BFFD
5CFF4016400DC83E5BC6E29D32F4F4AEEF704A5E8F6E9AD1631F9E304203D296
FD006F2041CB837A1F9DA29079555C100265D82C9C1ADBF790F08E13E483D3EB
2263E895FA3541582667A785AC38CB4C011887694480448013E594FDC7C0D407
5CF23EDD14322BD5347564C463176A0223C98D80CB40CEFFD305298627548355
3D8A07FE60B2E85D5ADA1125B5EFAEC6D88BCDB45C0778BCA0D4AA7841DE1346
6DE9FD1FBEACE7C9E61D62CE0FCACB72E14C2FDB87A97F47425AE492128293EE
FA925E555E77E72F0216B34D71875B4D79B84516E95531B250C3F352B68B3A44
C5A4EFFB389F1BA701C8274C24B6B3A684DDB55A94C6BE29E490A13033C96F3D
D0CD46FDECE92D3164A4778B3F91C02B6F1EACDEED343F64C6CAC65D8218E75E
CDA7292A0F2FBB4F6FDA012374B67D02E99FBA47C206FAB3AE433B5CA20389DC
C90F998103A821C35734F0153950E5F72FF6A8AA6EB410F9A0DD26B8C9021222
71A38B7923957A15D11966B9E435D3C02792CB44A20B258ED67194ABE9DB2D7F
F5D548D12AE567FF26A95D677617CAEE4CA4B282C8E4C909E04ED65CA0335AEE
2E38537138BB6A9C5FFF29E24BDA9D2F35DDD0320956D2148DC7C2D7EFE859F4
1ED26EA3022E22AD612B2F013E31B97F10172423BF5A5406C951592268E393BF
A04605EAF9BC3D8611E3607832D68510008F296B41CBDAC3A4FBE58E4A0A7139
B77AA48D0E9B385193A438B4357D0866EF0727504C48C199E97D12E58178CC1F
0438842223DE23A662482960E68DD0C70A9F1C2526D896AC099E3A80CFFF873E
D6A4217C46957761C494AB9B449F059AE819C2C548749B54EB652F76630E3A62
B63A3562A54144C6ADC85EB548911B66840F812555122B46A03394E895089131
50F65DA63402166F691C9FD7515D76F88B3EC71C77B2FC5DF8A50E6F0C48860C
52FEEFAA70B5953345537F57C8CC20403BCD3BC892094A5128E251260C8CEE4E
37A4322C021122E962CD756DE48DA93798FBDD034F41A5A27B2EE094302A2973
11DA3110A873E6F7DF8F113B60494E325B88AC132D54A5A908B5F2A32F38960F
40797D24A219AAFCC0FA245C6731A2E8E561C63B7BC3147E3CE83E5238AB3271
A5B75ECE9721E484AEA8DEFA2A777D8DC46327C16278EBDA432267B7341E9AFD
5F6E12D659B4086687E740D8095E63F70CAAEF65D1CDE376470425ADEAA94000
C80CAB2AD7ACA1D2D0827EFFDD05D4EF5C4B2E9D77EACBBE3D271C3DD27C28F7
54521E715BE966E243270A5F80A39279C5FADD1F62ADAA1745AED61BB9F57054
887C1A67A03BD63D38DAAB64D6298026C401908F420B0D93133DD2DC58828E00
7E0C19A802A795C3F4D81CFB8F041A7DF0647C4175A9FB3D7E1F335DD114FBBE
B5DDBAB7FA350C8593FB3FFB4653C90385399308DD757F25625D53DCF0B9E238
6BBF0900E0E011E8ADFBF78987B0FF0AA4C418F45F2D92CFEA647A6508A8ED9E
9359B8B197E71BC91760CA2142BEC03AB7FC544C630BF0A1F5832E0D2619B8C1
EC0024EF9121CCE324DBD5304DFFBED9620EF9547592558767041EE4823E86D2
D04B58E6084D3117388A7BC517A62B79D15B613C7179F423BE472FF4F71DC5AA
368E0EA45AE3A0C9A76C320DDC340550973435D5593A75071F79CF9F58F15C92
A6FBF7BB5A8D72DF46095F63990A29877ED1DB307A71C06148C3C941C5621797
FB5B6216077AF948D21F19461C01EB61F3B9FB7C8E37A821C28E4BCB80DD25CA
F8C992AB1C117152E944D47992413B4D7D1EB9E03780803A4FF311D28758F65B
D5C77819E5D1E2696EE70519534343E3827EEE216EC733F5EBF4B339B9233DB8
0680CC93187A2D88C7153CC6668E41C25F7F6B8F03CDCB969B3E4144A54F6C3E
1EBCC7E045A26989E420C7A3279EC7FEEE5B8D8919E0D1E69B1FE209C5F74C45
8DBC2B47BDF624179D8827CA4664F96F7003D7D0BD1465A904D45B8DFD10030C
5BFD9FEB992196F63AC3417C576DEABEA662B5BCED70A87CD0D4798B97D61B2B
B33D779CD76D4DE4A69CB97F313BD8C3043369E961348F41BBC1A415CB387A35
DF5272A9AC765A0BBD8CEA4AD8DA1E1165D4410060824D13F79652B119EE5520
7B3DC19A5C94297598A699CAAE9C9F8FFB86FF1286CFA04302F7BCB01E2EE84B
DA72BB756191E47408B194F0C5A0A86237D816A81C502AB62EDFB6C4B0552007
ED672902C0442D8292CAD8F848007099ADD8776C15B57643B5BAB4968D6696A3
486B2251BA5739F9B229E9C09CF9428E7A631B949FAF68211DD20AF3D34A3498
F21B00999ACC476DB87EDB1309B66F009808B3E847A873C89176E748078A88E7
AE44F5EF74DC514FD192BC3581A31F2DA8A5556CFDBD18492F7075C9C6693914
B9A8F47F30452D5F272EDBE95C81F96A4EC47EA032C6BEEF9F2E6565A0071252
8F2B2483BB3238BC779091D87E5D195DBD7CFB9AD96E1000B85467D359020C43
A00570AAEBD3DBF637154F719CC5BD0584F68B6894B08FDBB5212B3BF054EC7A
E555280860D7F7A5554E5303A733731BAE1FCEAC6DC0C39FC5C37E035827B86D
C28D9CA4675C45994145E4498BD600D62DE637CFEF6F01DF05AB584287835441
5764B9BD69A8174B61269B223772DD50C38E2F028D6DC0211784C5DFB296C590
0AE5237B45130E4710D0836CF3ED8C8A945E9364D0A2E74EFFDDD223B25A18DD
02C33B8530C66E72A87F2C2C77759D9709DABAAD70831CB03B114552BA291898
734BC35B386DD73F210405FA82D4FF4C693D87EA5DCE08C6A7015F4382B06B54
4701EBB9BD360CD3838EBEE69874E2B28D2D25CC9AA17D40E3C0A3855570C10C
2D652B739F819559F2A9A66F35E67F69AD67944338F57340EB171E7A77F97F4E
08C8EA82E98341B6BA6B0E88BBDBBA73A64A421683D25AD6436A70B0C1C43A41
93883CCDCE5E9DEA14079C31D65CD90FC87D36C94C964E14E80E9A94ACB51EAA
6E118F884F366809A801BD2EA673A481F9F8A480CE34688058B459748891EECE
C925D07E69F38364ADE2D588CAED1762A638A1A744672EFD7B79C925C306A533
A8446931C0B495A15E2B9FAD45DAA0E7394A4F14409113BAFDCDF2DD76F3BEC8
E5C8E392F74B77F39F9A24CD51B1C90785BA381BCE9F6017BAFC485D707CAAD9
82C15D834ED8037525FB4F04A5681C5044FF8E20FCB88B47156407412D006CCF
EBD0E5F63029644C4DD89EDD03764A886747BD1DDF0C56D2B9099275B2F7A64C
887BD6424A4B3CA00EA5DABCD95302C49DCA68415FFD480A88AB7A99B853DC23
12424FCEB8F1B6B787CF46EC0AAA7D22AD11FDC64D98CD63A2309FDC77F40B81
FA139392F3546E4A960A24472C2DBB82AC6BFC124A041C05803F3007246A9456
3CACD3FFBA24CF0BB4AF9365A3FA68415F0883F7CB9C22FF50FB6754734F28AD
8AE2E2BE4946D54E1BF9F5B08BB2C93A086F4A820B473B4680A21C62B1C34069
60582537683B4CD384F086C683BBEE0BBA13E42C25930FD48CE731F818AF9BE5
E394CA5C8D84AEACB22DF4254D357F3A7E6B491907D648B724F859C71755BBC3
3E742382B4E62863966D832915156EC79CAA75C87AE8EBD96775BE02DD744C92
00A0413DEBC9ED5366D420385E93FFC102570E9ABD5AEFCDCC32DA4C0D6E828C
70FCDD9539126DDB18D340C2A9068948BCFC9D524C2F3F4496E7D88AE6043B42
8809596B78A21598719685617EB20EA7C8CF54FF6DE26DF2A7C418840BBDA3B8
ACBE006E0566428B1029791405511625ADCD6FAF887C734FB6E0639FE6B7DB46
6E4539A623FE61214D1652D195017688787B52E8D45BB213AB591824863549C2
8BBFF99635A5179E8A701EB1454223AB0FEF925BA6DF2F7ECE5372528327F0E8
2B94D81A648046E1AF5C3566C89A941F8C57D73B0CC109B50D3FF3E6299B294D
94AAF8ADD7F08F2165357DA495B9FB2DC949B0553D06689926221F28E2D15DB0
ED22C3B258EA1E8D74644E22933D5EBE4C195B43BA43F4ADB8FA1D12EA588075
8B0B66ABCB5359689B96E53223849E649F6AE1BBBC85220B3A60EE2CB9C8A975
367ECE7A4A49E6F5F727D96C6F633CD36C95B7AE4615ED8306A5CC70AA78F1DC
3F27144971F9DD3B2E4F28ABAB5F03A7A2F93C9A970D1B6B4E86B3A0EF63679C
D35D1BAA663336DF18166F27FBFA72EFD7E34802C331780943D1C667EAC9A01B
6176AD76F2D67FD1003547D36E0DA51E215709FF69322D42C893A30D5BEF4F72
54543BCB1AE8B9A31FACB97E8871D426129643DCA08B4C2465CF0F115CB6D020
EA583C2B3D912D80CFF0796A8ACF06A3700FF9118231DC7FB7EA5E15BAAE0BDC
C61995F8CD9792FB95207ADF6C83603991640A669776BF2BC7B41AA00DF7A314
D70CF604C0CE208637656E5A077826387909021E90A63242DCD4F182A6A4B76D
21676E2413F24CCDD669EBA8853C695C665F45683C780622FC07516C846CB94C
C3C3A9A1ECF89828149745DD561C9E6EAAF411A29D75013DF667C9A787082757
EA4E767E0412B5F9983B7CBF78F29A9B8AE282CFDED6A995C2EA254FC0465833
E13B768E2BA92CE70A6824D6B328CD89FEE0994DC62687079718EE927F118C27
A333904DC309FE38C3177D03D10B4D07298B84D3DB15F540BECB418F547292FD
6E15A7E95F13A1934AADE1CBB4999D8A915E7FED81140F55CAC640AC8506AD39
717C1C4B9EB0FDF13E48DCAE2405F22AFD3689C4DFA264B219688D851A66E102
9583CBE1986746B64A1FBAD528ADB4433DAE898C9E180AE76CE04F72FD23A3C2
36080ACC735BE93FF70FFF0675AC6C8238797C1345837D666DEA3C36E5F18466
EC591F6D7D13DF711A998338891EA5E79E46FD5518684D54178CA395EC3FF2E4
7B530F953DBFEB3C8D7CF797279EBFF089A67669FC86272C26181EE5D00ED29F
B770BEEC3EFC7109D062B3172FD467D95FBAB9F1C060435FC4727439EE55601E
DA7A8A153E24C9A5B11A1D6A0264342F04CCAA4BB5A79A10ADC83737626FA23F
E7195F2293F587A18A1BB668C80911050D26C136AF8ED60148D7AF6A6C9267E0
59049DC5CA318072ABBF88367653837DFFC1735E1C6FDF84C9B2E9E9B5221F89
BC2DB1381ADB11431C97A8DBC052426E3C95458FDE3DC7B60951DCDAE117C4B4
C84ED93CFE8F6C686EA17C776A02AA4E9514F1333E90196993EE9BCAB5C0836E
768D3B7BDBB412C05DF71EA942B886AA18C28E9EB07E4258607EBB818F5FA120
E88F97EE5D7E413582111B54374B5AAD461AE38DEC0284D781E031CFD284C968
1092D74B36F35BC58367C4A05D46BC73B2B3832000A800E9BDECCED09B50E356
E526DFF66FBFA709DE2661F0F3C2F479FA651F018A812EB018C3AF6DDE702806
569D1DCC4D3A4332D2F5AC8ECF03708130A5CE31A6EC915539AC277BC12C19FD
7DB788F0DD444DB29C75616086FD02B5F5BFB5DD7E0852804435EE83DB86046B
CB38A0A3D2BF4B3869C5C3D643BDA4F116CE21C2847108F46241B1E077EE3B44
52678014BA1821D88BE7BBEB9F20D53E34574FA61C037A6F15A6D7912F301A8B
999219AB9BF6F4A24533B1B1ECDDDD6694637624E926749AC021F4F38BEE8DF4
5F5601D9477A7DAC80AF7C8244917DA635EEFA010F61D05C5F320357DB771BD7
A674D75FB486A911840172E028189D005070FD4D481045801264AF54701AA1D5
F9FA4BD21778AFF7DBAC1F9BD167FCB3E2C3D6248C819344C9FEC6174849C3E9
DDF0C6BB078DE5DD14AF26D1AD82F3110F12B71DCD8BC06AF8767D9044474C21
144F5924CF474D50516809898ECE828DE881C1E2AA4A85F490D9704ECB039ED7
624E34F5532C5674B8E4A625D521FF30633D9E2844494A36F234BF9A8E21EC90
8337CEA9731946D7E555E86D6E19BE443270618BE421D6C9101DCE217CF27274
8BB9CD70068848B095A2F11E5AE7C363134DDADDF22A63D8ED8A8A7BE4B385C6
8B2892EBC7C02404D5341D337B72BE2F3547F7B899874E3FE52BDAE491C8EDA2
3431F8ECB06CD052B9BFE9F62A4A99356BF92526C5A213945F2E889DCB5CD540
602292B7257380B1D778FD3049239BDFFCE02B2F6DDBA32D5FF4EB96117462C3
BECAD4C02BB8C4AF17DD162515BED498AEBDFFA77AD3A0FF06CD8C7397CD22F0
308E079E5AC8F64873CF73121FE06DB13169236EEC7E3C7AD1C2BF07A67EFDF8
347448BE6E53701CA29972CB034A827124E8CACA8EF9F23F58D7EAB9092DDFFA
E53D284F6035E6CFC0BB2CA60F74EC613F44CF34740F5A1AD6B33ECFD7F0FC74
EDAD0C8B6E264319025D41069BFB4E7CFC47E55CCB73101601A59083BEBC849A
C224E932E67FF3154647C61D3144945A87029B1592AB90F713D72A2C77D678B3
A1F3237F7522F40539CF2FAD15FE866F5836A00A3BE60BE7772482920517139C
FC2B423322A0AE12786688C1D5C8740F766D9190DFCE704124FFA8EAE43C63EB
7DE075CBE059AA92F0C3892C1EFE4158E007D01934352D2B78A726A30E938939
A6B9AB43A5217E0CF798EAA6DAF554E79B1617EBE26BC966C81F84D51F465C50
A9E888433EEF640F46C5F9DAA43E9581649B54778C8D3E751E2672FCF8781942
D5A066FA12234CE94B94CCB6706EBDE3CE7C09CE1C2450D8BE5C6A79E97D62B0
42D4894C2565F7A4D16243A6BB0AD8D5662A85EBD7CFED55722B12C8E070FEEA
2648A9AE95525065CFD4F1FAFFF7CD0CA9A0EF849BB02EAD3AF8F83CD875E238
9AC1E7CAF21C1A88B6B83084124419E86CE0E18B3140C530FB693FBC926FA731
ABE19EFB8B984474678FAF062FD42B1E2DD8A662380F94303C8F8E47ED3D61C0
10DC1BE66B0FEBC7318E632D6677B9B3A12F3F5ECBDF1082D8EC9E522BEFDC30
C1061631ED1633106A3562D7EEB74EB4A7BF5F91BF124F5547EE4C5B2F9DC83E
6D18DB4FC12F7A8E9820207DF26473C9C949A2D730C02A5063946E868A53B43F
C51E04F40B45F0A3D5D3B4F2AE14E7199BFE84B55CFA5C5D53627386FA021BCA
6D60986E2D7301BB1FAEF875BBB8646743F2A1E9FFEB2C9E4F00A776CACB3DFF
8C1AD8E193457B563750382ABDCB60B310ADA2D2631C82AD38D03359238402F7
70A9AA6B97E7A7609EEB5EC48882BCAA45727AF5B1CF8CC1DE4A1BA0D9460DBB
9FBB38F80F74B6BE30324BC55F8CE7F024251BB7B2A6F70D6DC58102BFD0E487
71D44762B993033260573B858A3EDE599FA9306BAFD4D51FE287F39DD4F89C12
88B1A120DF8C8DAF04270BCC74C1AA964A0C4593EF8FE00DB0704336B8B32319
E7587B5879DF0AFCCEB07B0A6C07983825894243D984C04188E6AE0CE8CB3DD7
BF11FBD30AD9AE80A2959D02E0BFFFCC34590D81873D531DF4FB838434FC4B72
0582050782D075C5AAA0190182797E60835A740EFD72228AC15AE3D2FCEC7F12
2A635F387049A0C359218F5268C9A28F480DCCC71EE1321603E2DA2759C4D518
0F276BBFB65A37E73B5C31BBE28C4347C76E89E28C2D4AFFEC50470201DFE9A2
CD6663718F996C6DDF899795F71DE1CD97462FF2A19AADDA2D05AFDCDCE4E330
1165BF418F8BB614177B6B6DBDCAC12AA061F3697A7B260B212CA992ED400A72
2B76AB3156DF510FC84420B65A5FF600B4E33AA6739BA6AB92857774BBF5089F
B0903655C6A2129095334D0B0DED2F2C2DF94B7C35FC945A1BC64EC907584E33
5FBAECBACD2176EE791FB3266BCE1A488C977355E6029AF347B9DC222EE8D6B1
979BBF1E4AF89319F6B03F46FA5D6A1D70A4696F3F34A03637034C0DFE77765B
4E531DD892D953B961EC5D48EAE26CC9607B16D3DC4133C3E4ED882D5C87CBB0
7EF7E8513DA7146982E0323F42FEF67A004B2C5B8564F9889AD059A8EC727C67
1AD711C46CE72544B6140498E1AB7200FE6F7730D33F2436A103E9F63453E69D
68E57589A4B7FAA484B8AAEE700E4B420E24985657DF8B01F896B7791EF23C68
8DA7A43E9DD5169698260B64BB42CC59209445D315C9EE79403FD3F45E5A9C1F
B0207B71E6BE1DBAE82AF1CE604B5D22915A67CF97D49CB1EDA13DDCCCA351BC
6FBFB967EBADCAC2E78AFBF3CED18E88A64850339F287F81BC4281A066F99509
FCD10FD22D5D948B7ECCBB1A848D8ABFA323E04BE24E0A032DB8180105DEF289
3D8D4BD1C3ACFA2BC75EB9471489042435BE73C4E9CACEEE3E3153FCAB30DD1C
6D584BFB8CC147FA24DA60229179E556AE9F246050D12179CF236D637B8E3E1F
CBEDF065429FCABFA5A85F46816DC94FBF01123DD9D40F17B212AFB7CD84B0F9
423A52554FF091C3E89FE017F5CE971BCE542FBA01CAEE706DFCABD7F6A34D8D
80F472542BB72823DE1F7C66FB3F2A762F36637E055EFB165093697620287A26
52937629F3DA4827C259A8EC2D45C5EEA7289DADE2A91AC136249E468E3B74F0
0B7C50F194174412809E59572E5AB8FC12AC90A8E2C1EBCE3A9970E20E6F217C
F51AA8E202223114499661767274A21613E545DBF5CC6350A27F6DA2E4F9E5FA
2905FB26784F9F27A3F3F22644905B553878D48A33B68992E7A2F38F40BF990A
8097201438E19E70541B8BA64E876518B84385B09A82F0DB1FFF5CC6B6E4E7B0
7844520D72621103592D0FB5BC9F004705FCF27D660A755EF3B4C5A3859D2C88
47663F5FB01E59BE374410CBFA95EF2CF17D6D8BC84E9C5E9E2BE09D1B6B154E
5F2D7FF1EFFBD4745214F2E67A69C5F3A6A112882F7FB7E2AE623EC013530313
180D53386872D15DD315248065677E23E93EF6F807063947A87DC519A751197C
7437AB2E2F9A3A9738A32B3DAB3EE82F2CAC37F98C60F16B2BF21708FD2E1545
6C49BFEE831D2C5EF0CB9FF21B00999ACC476DB92764225A64F60AA55662D112
772FF28200768B4631A82DE8FFEEE03BD713C0382566754AEF95040B32DD49B6
1ABAB3A9955D41C1D2EDF5F72E5064DA099D8193B8D0D572338E23DD27FAF7F6
58FD8ED930C12FB15C554178644400323A80233E68053B746A9A8120AAC06635
EB634975C5AFB94D712AFC36194FFC408350CD28D96A028BE7C67D1CD148404C
E30DE9213E18987506AF66467C135210AE637F9D491DB422E2CF3C790F7DEE9D
4CBEE4DC23636D83F81ECC28DB55A59A2895C0107C077ECD6D1576A4D235D1B0
B89E512B2D301636861F55EFE40EB68AD4A746324B6128E36279CAB17560B865
BE0416FE1EE4BDA71618D70740BBB31824F932A5F38BD84BB1AA7F88CB97755F
3116CE5E9F6A43919B83B823DDDD0D1ED5E8A86BE9DC9C4221824015DEAFBF83
C45EEC430E833C334D08DB20B4B37F6192597C1DCD9A3265246220081E3ECFF4
DB73738C626B004526F40CC01D40EEA73A9F6CCF5BD5BEAE0F8E859AC29AD550
22F9C985A37A98FEFEC57A7A9421F220E6DC57C55584A781B98E805208FDAEC3
B1F0D7F17F9CB1AECA3ADEEE18BF378D181BBB700C79F4CF492E674B2237E61A
ADA9E11209807CEA5263362052A343A594F2323043C6D1CD3D6184298AE2B266
8C4B1961F5C0990906B67746318F4269DED0ACE839C792FE9473878AC367C255
8E6D2633DA6FD66B9FDE74DCC852356FCA867515DBEB08F0A58921A12F13DE55
6919AC0D5A26A5A8A0F97EA3E4A864AC9AFEF360EBAE60F0E052E2961195F6E6
051FA85FF049F44FB06FFC7FD5EDEB099BFCDACAFC4390EBD6D4C21CB96C8602
0AE1AF4875984C24A5B211052E0B2B9E2F2733922162A43E390E7C610393E501
55E147B56A611DE32CD81E5AE417A7375A356CE06C94088F0B75AFD0745E87D6
29E9121C083C292944EAFF49757E512042B2D8A6B1D55887087EB16A7C4531C4
89CAF2AA8F6E9D7BD11009DB4446066A77980A1CD5BD788AB1A0BBEA55EEEF84
728F4493AF051E881B3973024CAD62D773FFEBEACAB5EC2EE1A023993E0EC352
DDDD4A24D1141181359FFD1DA9CEA32EE1EF7F3B37A5A152903D988B1E9FC635
A978028DC307F671E02A43FDBC78E462F4E5F75E3C4724653AEC3FD32111E8DA
1F47B6293776778159E65CA3F3155A1761CF7E4D053E502F8F78437EA418C191
A0CB79037CE8EFD3D8B675E8E9F748FCF2ABB408B0F2B92C317AF53DB8EC6021
3F3492CFC034424CF5D5758D70BED988656E5A28C01104A4D4171B4CBFE6DECA
5D00BA874DF2FBF9354CA4D7DA345AEF9160BBA6B3BA13F0C6568FF994684F53
4FBA37A4AE429B796007985E02534129CD6856E5BD61C672413D7ACE9BE6FD16
64846AF2A92CB29F8C4AC1E99B27945BA690D688B70D6CFF3202B437B28C88F3
B8EA0EDF6ECC00A2F8A0E0F260928F8C0E31A009C71863C98C73D83360E849EC
87FF49C62A60B503C129D7C618C217F049B4D74A7E48738F60CA40D2F1CEC1E1
50F553908DFCEAE061855719DEEEED5A650B103312B17D16087D971DF8DED6FD
9A52CEC96198158026A35D6B9BF2B5639F05E2EED7004A710221840E3561E8C3
5DAFCA213BAF79A1FCB758DA125B7C6FFFCC78207DB7D460E205E90E2E8698FF
1F321607612B7CD82D11CE59215C7F1003E5B419D74923EA6464AC86DBC3773E
B7AE9C408E9CE5EC893389127893A1120E26A9432F7FA157FBBFB1B70AE5E683
91700BB59301CDB1565A1FE79B8C6D19792A0B89D6C292196155E965C2DC78F9
199CDC196EF1051B3C6FBCF03BFD06626D408F422A3654CAB250C03C802C1EE4
1162D961A00166B8FECD4A17063BEC1E0976741E4F80ECEB0AFB5B8AAF6FAA30
BC7DDFE923EF6C11CCD1376A320A79C6A1C23A69AA52F0C2DAE4B5A131633AA0
6E23E069BB184DF562DBFE821EDE4DD0A444F14B8B65F039D3056C40AF85B372
19454DEF00B2D653044B31BBD22557604935EFE18A435D7578B354976F03BE8F
B43F53A207812A9694387BC6A7A14AEFFB24CA59A2B909CFB47CB43CB452F752
3C4A50E7E772CD88A995C71A69F35BD0CA4542824B1F4329D053B1767DE16E4E
0310DF2D64F17F251D576849C4E66DC6111D526E43A96190A500004CD4DEB162
52E5CDBD4753414EA9356E31DE4DACBA1F499AE6ABFF4A09EB041A63BF31A754
AC1C95E5BCF8BADB7B2BEF8D3C2E6EF2ADCA7A1E9D2F7B7517783CDD94738540
02F89616DCBDBD9920A80B44E7B86A5F06A7E3FA6983AE6B5BF42727B6839D9B
4B13FB6052FFE9745AD039F664B5260AFE0BF440BE478E468E7B5F1979571395
92A3AC70874CF7951879AE0E9364EB6F4862F9A061DF1E7B1AC32B94F743A099
1B56496ED7126FC299E7277E6F9BF7EA521607C9807ABD8B5F2A41D9D60E8E24
4B1ECC2631D52BA0C29171B40E2BC4E567B4DC63A29B0F6DFB0FFB2587943DFD
B4C6864CF1FC7152CC2086075372D6B610CA36C8A6051774DAD79E4E3DD10CA0
6A91930F31EFA7F4B85C04D8BBB173F3A1285DEE9D690E225B3F1D6C42B91F3F
42C467E8599E2C88C2E4394A3AC5C6F7BBDA1114D3A4716D2FC8CAF02604678F
13E367B27B69E23EB050A79B3CF43051177D2B521C6AA7771940DADC8132CAB3
90C14088307C8C1B3047D37FA2C56E0DBCA5B76375A0D3D5CCC291E80A27C97B
7ADB2DD5A9F66C4F84DAADC83D34D7AE561EA78C8C5C1D9557954BA8EBBBBF39
4209E16025506A0CAD88771EF032EA8E83014AA4B89C52E50A9B1F4E59CD27D1
8389C3A9C315B3F553D69B1947A98A5142232ED3DC286A6EF53F586EB25C0679
5D12BEFE9ACADFB67B23FD0CC520310B3EF0414CB723B3506D033C94DE74D0F6
A2AF779C4C3EB248CFA39F91D15852ED50E4A372C1D8E9C4E792D5F6F64F61A9
38B92266139D34F55EFA72D200D8748450CA33B71CFC7D433C315BE8A8C54BAE
3D03CA48C91A031F5CBC33C3B7C17F2D81668DA26A75C9C7C6A8C8B501D8FF7F
01A573F28C047E0881B4E7821C89B2E992A8BC3A671776FDCAA3AFFCC71DC7D8
19C3A202A4E77553F9C318BDC34C0670E527BC95332D13B3980549FA02073BC0
A63F7C34829903FBF1D34D8D6337A32D5F06CA5583D2FC072C37AA700075588C
874F55F68102F3DA5C41E67BADF8BEEAC6052EA1957768F944ABE18EE9BF7A69
F10D6E1265BC7A6A79ECE3B067EDDC2EBB5D4D7A4FB314C8DBE3104AB2CF13F0
603DD45A70DB907B2A19150135B79C455291553EFA10D2ACCD611E1644C74DAC
6FBAD49F35764DE6FC0B0215E251D8AE49D129C90A05B4082DC1A02EA0E2E870
60FC7E3856B99D60BC6A5FAE1F8F869D7AF5E4EF1989FD377E910BCB599D53A3
367BA3C28DB6183AE68F6564178DC03174DE823A21D4ECA36B55B270E20437A1
8E90172263A3AFC47A4589A0257051C54716D2440C2CF4262663EA20BC11B096
2894CBDA32FF2B70B21AF4D158E0F746526C8577E59B9CBDA3DCDF109071C246
9B43DF46DBBA605A73B362BD95E09ED8BD5649948DC2DF0E8B58D8790088B539
EAF236004CD40622707D83A08409C7C500119C729308B1138F8AB16C6851E778
F3CE301BB854FBA73155AC1C4BEC4D0BAD916D5F17A5CC46AE216687F4500D98
6B2DFC49FED242248773BA770DB6BC70E7083077C8861CC7820836ABF8BB70A2
DD5DEDD4BE6B108A704F46F8D097D53AB04E673CA6A7499BDE06054E15F4290F
C2675B83E9CEF6EA95FD665B591E12E4DF076A8B150E779FDD9DB73AEEA11615
E7DEF726AACE3296AE3ECE6505EE8972574CD5EF7C12AE10ABB066C75DB4F13B
3EC438D3DFB71B016A8BB6B315DE7285F1C1C3EC3714548269750120302A3727
03A175DAC0EA3CACA99224E4E18997786BA72E91BA1D2759753E96A327B6C3F4
5081F8E9C247CABF7B388D925ED40B709076D394F96158B0874CC2E6E1EF0FCF
B020704D6C60668FD101F98C1BA0039BB18BA23743EE73E6D1107C8532B24304
60AA3CC12BA4F1A7F8F158AC09FD70701CCD6F562DC078CBE51B42A0F21076A7
72D82863244536381E77342659E32059DC33368DFCD1BED5B64C7C2FFA658BB2
1E8FAC70D8E3823E35871845CDE5864766CD821AF3AAE8945D037F78D6C568F7
14036DA3F6166685C3FDC27532C931AC8B86E81FB0223682C123A6D9A6D7D8FD
CD2B2D8D8EEB1F5D86EFB76DD814FCBF3AD6DC4CF005D393672AF65F0D015C86
E975DA657C3B31432F5D4CBC310CCC04B69F50626EABAAE93F51598D537C1D98
5D01E1550C5264380CCF5672A842E776DE89AB3B09CD3442635E016E6C1EA525
EEFBEC6472CE4CA7DC110CE6C4EB2604C7FCBB986B3B4F2E6842645756037E37
B946C846C5E9E947578FBA21983E6C92B608C178B9CFE80ECE33972C89697D1F
23ECCF227F45E156283DF3CDCD1B6A64705AF23B9FD29229E48655942DA5F323
26A73C542254780ABF33A990617B60B2368B7868C178B53BAD827CD0583D9F91
D8744ED7D04A96240A6E17F35807A6797738C1773B9AD2B42BC431C60418D244
656DBCA28573927F048904BBD47D276DB7292DAA25D98710B88AA197BAB2A676
1E205EFAE5027928C998B9F7DB819C1A5DCA40D2B81A6FF9B9D1DEB497232C6A
1DC39AC45260991533E0E7E5FC166ECC5C25DD63A93FC9B75FE67974A4F6681B
6A7F5F3256FEE11183C611D8B06A79E167022035397F0D4C89B451BD6134F6BA
D32AE7178C9A6EA54106B15EE37DC5F4533724D785C22C645809C6B3B4B8C4A8
27C83335DA36AB230E3D911DF7E95A307952572E39641D8D29A0E83A4D6D3A0F
0CD922006AA569D433864C6702F16D073726F56019E047C3516CC0C270B82BC1
471F59C8E83C89403D6A88CDF4E0C8D41C64B9B1DEB72F0E9058E0299CF4C1D9
8BA42AA91660B2AE39F7BAA5A9077FB46287E1C2E1CB52CE308897EEBCBD9D63
256680A7326CBD70FF3735768313B5F00889BB34CFE89B07FB2426EA455DC518
5D4EF2AB463B2A6191E9858A30330AB25140C288E5379779A27BFCE204587871
00DC099F78035093ECC5D103A9F5E0CE1DD74F1C6081D61317763D0C226C1C38
F44663FFAADF916E228A077CB3F8ABE7FCF57A38E11873F63DF1D239185EE1A3
7965ADAF56138FB632CAA0642389C8C4CAB5C56D11E8666D01F0BBE6F84D1E39
E7A9131E0569A49872A93CE2CABDE58FD88394F6A8086E4A434207F479BE7825
9B900D8DED34B8A702E96ECDCF28BAE94FE49CACB8EC3C1BD05637F157FAA4BB
ADE2474758D2E81F0231D22EB4374636F2E5DB8CF80B65E415BDD44B433185E1
EA206C5ACF068911EFD0CFB268307F4CD1C56B301385AC41D8A3A09D09EBFEDF
3197A5796A23B927227E51EFCCBE2A7722E3F8EF38A0E0691CBC23262A3846A8
94BB1017B4872D158E88EE3F59090FB93A5747EDA57889E241D03E272ED4423E
DA32801D0E9ACBE1FCDB7E7C02D08B67C1BA6CCA1752015D12C8EF9631E73021
85E4751E8039020ED7EF071525CDB93880A24EAEADF171B5C073ABBD94F73B5E
091A7C7480ABD73CBB882068CCE35AC34161A50BAD32347F5F471F113996C0D5
3D89A05F7EA1AA599F5BA75795283606765B20F9CF7C91DF2CF308EFA414005B
07DAF6FFCD3DC801A285EE4C1C98FD8EAB86F28E9D55044E9080E3162EE925F7
21969C7BB7463204E96F011EE6CA8DB225952951EC738A989D5FB2A75DD37A90
6CF70E653C90C089D455726190DC47909B47EF7FCCABFDE1D42F35D6FB643BEA
249F58903E050C9681C7B56BBDE3739BBBD4B9DD9B38B4E1509509A4F93E8570
7759EA2989AD2CE3DB0B46E25392CD6FC3BEFB27A960CC43B18F085DB78F0161
080970262BA056A97AE47666A97B0F12ECB5DEA40E027D3C647EBD0360971F45
B557C99447D8F2E01573C28FEC8EA168F6812CE255099E6A28C7BAB69EB4F63E
4AC349EEE44131B11B2B14E3203762536CD040168633408F8A2EBB7E183462F0
0ABA00E91B3DC5D54F473D67AA4E0B001530F5C1B8AEF5E6B80069B71C883FF0
1BB562BF7A2186934736CD0B6B40FE5BF0E2A3F96EC372F641521A7A2D94ABB4
BCCB98C80637C206AFB78B02E7676849CA3AACB56919F96605E9739626DF55D6
505C4BA5C2B8C70A6D14DD9D06240C3A8207BE56F0F81ACFBED577BEC9CAF16C
693DC70349836B0E293A929D10C3B78D2C8DF7F96807EAAA0A3B3BDE186ABA3E
B5E26273E19416E0A587B46EF0BEFE46B5440E33B111B6EAABE73DBA9E508070
C5EF4ABE96CD1DCD579977D630CFB6473F59F44B4A8468A69D2017930E37E683
725D0E67ACC5CA9D0018D08113B1DBFE72A1FD997A76D3BD3D5B77F8739BE177
0A5C9AEB1460EDBE0DC8DB890D11DC74507C468B750A7C0B3985DE4F4E8AE631
059F57AAC90DC5BC21D9C251BDF71BAD45A7796DC14E05E21ABCA63D27DFE528
DE46B5A4EEA6194949DCC57444C2CE9DE998AEB025C5AD675024291195EEDA4F
0388A0FB97733E362EF962D2F9E3404F10A26CDC319A31BDE48F7A25CB40C181
0125E03F6EB91B2FF2940C4D59B2B8B71A9A3B8DA6EECAE6FBEB376DFEDEB3F3
BBBF7F084004DF214874AEBEED60C15E571C435B31875D3CC1A3F0416B6EACDF
1182219104B22197EA041EB4BD5601CEB6D079B99B1A2BD8BA8A977F82C51263
08BCF4260A82E355B41E13B72993B0B64CF58CC0AD5FB5C133C4B88F55DD762B
D8C8B509AAA4C4FA2E483423BF653F266B625B455466C48DD5BA0988D92C1817
8D980C95CCC8786F8764FFBF60D51844BE36E421823C92ACDB9CACF51599C945
CCC4C12E9B5D8AFCD05E737F205BB29B089C2FB956382347626D54DFC04333C9
90793708413ECCE85ED1F4FF5F2AB41E0AF0066B4EA38D4011CA65109CBCE47B
48D589852694FB6731C02D847D0A2374A0F4627ED82BBB50568BFB59E7DFC146
AFB27C32BD7A3AE60ACBA39AB615F95448CFA5F0B9477E6F64C0AA0C5F1ED2BC
24B77548F1E1DE97DB7C4531253BFAD3180DBDF8DEA31BD5BB3282B2017E8A6C
3CBC4C0021571B3CC5CA5EBE70C4090A88DD60FB72FD9DE8D9A98B12353F30A2
71BFF44BD7D24FABF450BF20FF26A419A0164428AF93CB8E478CD9A7C093CC20
11E9D3E5C308E5FB883C00D2D7048EBF70A6190039BD94F26063183E327C5685
AC8C39C577434D2BE617EDE233F332223D5D07211EB0449CC49084879CC485ED
07D5C82E0CB0A5ECD2C2B7269BA4CC90F014F7C5A6B6186994B8D1BA877673C4
6D2ED30023EB3C9C310FEDE003EEF948B2A5C1CDE2B37C804F50577B6D1308DD
9C414C5FA259EF83324E37079E6B44A586D80CFEB32246F16C0DBF76FCC8BD8C
4F0B6AB3CB42D6319091FB1944279C1A2331A0AADEBEA9D1A4C30F51E9B375D2
4D089EEF4FE084413B720C7C93F217F851A9E2DEDDF84D2832A66E19A05C1096
110F9A6C8C704014E5881424CDCD3007628A61A36D808014F53BFE5106266EEB
7101ADEC74D9B2545B32293CD75A59434FB3497FA9E66C34723D48EB70473182
81F436A4F58F606B6770C73439FCC45787A5ED8191DBDB9EBA0778C040D92268
0B6920D4F21F965F07A52D95A0BF717694530174EEFD6EC22A739146572A29B6
B31D984F0072AA303D33D5478995B53381864E33C361AB6EED2DC26C28A403BB
3A0B174BE609D12B566BE3A74DBB82A051FEB6935DBE8D9B009276D9595388FD
3C55B45056F4C51B407D44468B5AEAF15751F65D0DCFE08F837083F21026CF30
3DB053CCE6E03E82878404BE7530ED3C037A517E7F4D92C7AB78493355A2080C
457601646F7B8699BE56070C904B4AE84C104835EE254A19F24544F83FFE1286
18BF04C375E909E180B4C93C463A4D7E48F5DAAA4F97931494D07E50AF1EF03B
A757F351D7485862C4B362348D2790BBFEDB39178153C01B18B52167C68C50F5
D5D56A1C8B460B9F3F9D8106A76D69C047ABD46F8457738A2C2D82740AD33519
9E8BD7393D9FB38E8749620221884FD442FD20E94AA53D550506ACCD960774EB
8009E5EC2E3AE0CD1D90BDC5E957464C0351E7C01E2F192A5F02DDA40CA0A492
9782F4913CBD0D3DEC9CAB1588E1268772307DC168E01E7948B65F1578E3C595
B123A580A6D1687034F66F68F4B20B982796FA0A3268C39A8856732C10C27276
BD83F00FFBAB1B64AF8A7F2AA63EE771FA86C42737BA224E42869DDEE75801F5
F379101BE0E37118C5C1BD6164552B3B82461BACB2D43F4107212EFF565D78B7
E929A14E137BAEBE1E8493EFD072C05A99E07F040CD81E80C9A349F09F9B1EC6
251C49EBE8525E98579D536CFAF78E601BC228CD716E472C288EDF4FA21D459A
4602CFA5EAE2D3112D43FF22C4723429BCDE22FE91D5FB42C42113C538E707C1
6EE24A3F375E7C538F15876157E3D03ABC8B3DA3F48B3D022A17153BCCD467B1
18C07A52EE20687C634E807C033D7173250B16C30733836E0435D1C3957B514C
734B170675CB21F6FCB4A040E616D1527B5003F22BF1308A48081F26F44ED99F
0E127CD31C76CACB2ACFEA6D9118760FF7550F2F1C0B1B7A6F6E5A7695FE9B0A
14BAE8D2F1219AD80D394D7EF737E0276B998EF4993A3F79FD1031B5C8013826
3B8E0DA1FCC4238D71517DA1634659B306FEFC81EA3A88B4024C64A79740384D
09CD8FCABA2B6D038B3E0E5E88944720EE44A47E6D5C64DA4CD79F1BF996F4AA
B4425E9D7C3C8193004DF6B0E2446520792AE27C86BFD7AE2B988A390BEB3529
17E28C85B86FB50F453F5F150324F5348BEEBAF5BE5B3848DC05D389D8281035
2FC66C6F7741A542E9CDE296B257752B47C3216615748C612172660B703CE21B
8AF66DD531736D4AED69EB786F9F7BB862DE9557DBBABF3A9BDFD6C700DCDC4A
C93A3C6D20B40CDED1AADCA60A7E22E14EC367428337244FC1C48152CB31E6A8
B9AF90B8D4563F3239985306BDD8F37356D0AD0FBAF2575BD32B5A292F82A517
241D574325402D6C38DB6483C8038819C77E1D32B3E56D416E646DCBFB46B046
D2BD09D8972ACE6A27BB12FF9B399DB1AF4BA9A5705502F55E4CCF73C1691BD4
0DC9460D14489F24BD551B8FA02E734151B8A123C75C6F816E62D99AC232AC9B
5F97FE1B129C727C4109E8A3010266862CF39FBBA573AADD91993E707C3361EA
A4CCFF81E8B58F2F29E19F7D715AD567F556BF4E61B3BA2695E1AB97260C39A7
CF8F690145893081D52922385448D09F8AE5C4472A15B636F7BCECEA17F062BB
9AC4CFE91544BF5FFA32566D2B54F3F661E2B4C573909272AA8C00CEEA2D5938
74859A612352C2F5CBC7FA72BB820C2B0A3844C5C96C3FBDFD4730D55851D084
4A405E0FB4320D53CB983F9BA5E77BB3F6A96281564D7ECE456DE89ED11A2258
BB34CDE1A6B86679411B5E93236A473754E44E193347AB77051B3CA13376A740
7780BA906D23BBE5842B62270DA4BEF8980EC8FD96A95560D1CBB8E471BFE26E
609D23731B3E3C83CA192B0238FA6BA49EA0881583D592358BD2E97DC820D7C9
168F18B16AC95599776889FDC6E22BDC1E924E1C6F28D9ADCC02BF0D0D93133D
D2DC58820E0B441D00EA8B752B3C810F924F082AE4099C0234EEA83118BE4EAB
7570AFF635597C8F42130B01ABC8EFFD9B0B6F1B5CD8EE15D1756CFD54770E2A
8DE9590AFA79755A8027CF4556A70BB2EE8EDEC67198F3D8710BB7C30D861A89
BA610B4DA0133110022CA50F930C31658949AB2B87D00D84B6D0D093F861BFC4
B80BA5DFD09923F19CEDBDF4469A1960DDD1B7F7709053A5BEA233B6CE69F812
8315D6E745DF282E69688D002B83604BCB1609A79260B2E2A4CFB85AFD46ED46
CCAD840106074F69AE7C306DC3BC1A1D088DBD1AE35601F4179387D3EC15B2AD
9D2B29248B3398FBBD0D4765CAD178A6F93C5217BD25477068573262B829F82F
3A7C8499303C6AE8E9BBD2C410EDB7A0B325248A35188BDC34A29875564DE454
55D0ECE6B680F5589B7C8D4CAAEB97FCA815A96E878E844B4E0FEC8738AD55A2
BF3B8FF641B5E0ECC8D97CD5857B695EF2910E75133FA33D5DB2D7B95663D921
A182DC7C205A9B36E8A0F64A4247E469A15621528B0D3E35B32DFEC77845E38C
A40F75AF6C7C0E06CEE66B4F37242B95DB6B2791F4C64CEC0F3A909C9E8EC657
3C8C412C3476FC2357E9D9D66C5BFF648729661AC64E96DBE8F85BD5D59712F6
8E537C0D2D854117B61E603799AF4259804E4FAE04E8C4F911B346B8EC57A4DA
26D80D31ECB293ABCC98CE06A8F09FE0D3E9AB19869F677B7E8B05981F90ECE0
392FE7706B4EFFB51B648A1DBAC16452A2AE729E5228B23FDFBCBBCE2C5FDD5F
CFAD2D21A6507A1B7F61AB8F320729F93303FF70C3ED0DEC3FD062A50C8ED460
100503D4E26EF2B0F6BDE444FFA6AE6016EA67F963FA2AD4257AFB55B24F4D9D
03D40585C0AB2F5ACE792F05368499B19687E50088E5CAA8B511A630E8148A51
C1394C7C321156CF52E84320DC1BCC1BC10458CA6C4395659B0DB6B612C15150
700DE35BBC126EE2B757D65087645DC8FDB735525712B3B2129A29DFA844C6B2
085D6A445D1F877635AD1522759BDC6A255BE6483A3AA13B3ECEE040DA280902
D3F5DD1EB79B8A2E285ACE63FCB0B137685611FDDAB2E8FEB3F9D943262E9ACD
8CDA7E9E78715DA56768569FA88C39E28C8107A98B612A4BC3C2E8B2504E0CA6
E7B65FEB653ABE614678C070E5C8D318C9D04C98BE7418101EB62605F03BB593
307B759B93432F1A710625681DEB0AA59D9992C7A013C8F18B2F59A440D1EB1F
CA7CE575BC478082D2255515DF5AE0BDD7D9580A0C213E6E213C54D02A32CA6C
96C38E6DA6E587C23EF0A31F6CADCB5C13E9D8D290A28ED563A44ED8C4BF4FD8
9ED6DCA669D921F23DE006D0DAA35F9880387B45785C2A6FED25180F4035419D
36BAC47141F9C5DCED967A0667DE7465B7EEC2606AB0350D4EAFFD8C81AC0484
F0C03336ADBFE356DDD6B35B917E54D460DE72B50F3E8A04A62443DE2A9DBD12
68CA21E4F8E45682F807C20ED6F9A0ABEEE49B89E5503449BEC88AE9F0D06720
FCBF516671F04ADD10C478B7F8D9A562487A9FAD8D2C73534869D9EB2C285965
F4DCF207F6BE5A1C3C4AEB59E31F41FED753FDD26C83FC50615B20D31CCA7EB2
16D27FBBF95725A858E8CBBCE530216B800BBC61147A491046DC5A4004CFE5C5
61D5BE0DDA951F2BA6C2E80547957A1C9D9FFEF75F5D1D12A1B06B72A0678430
66E5B646BF63C8CFC8E9F7553776EBFF43A3476EF368A9F3C7925BCB5FF2C7CA
9DEBF9CBA77CF1F05FC862A51BB19C6B5C8E29F71C9EF54E54E31E9FCDDFA176
1BD627D86E69BDF08C1356CE76911B9F40834E46C308D4687822ACBC6D0C5565
A50437FAC4D34C94B0CB5A4A187D5630B7FFDB55C192759CA156654F58532D7D
A349A085E560FA3A13FFD612BE78D90580A53AA596A5D16B68355F68A29263C5
559C5E7E303AD40555CAAB080E47FBD491626CD2E866E0D13F184EBC038CC319
7F8DB981AE8354F4F6396A66ABB3F381CF306E4B796D7EB96AFCA31828CB1628
1037C9A723C97E1E7DB9D79E66212EC538F9573334D07FEEE0594095712FAAFD
F0A13E3FFA3686B0C08AF8A15F4A4DF313D85C474780C64CE32B41AA9A259683
BA62A5132CF549382EFA09C29290665BE9419365090D58BB4E0B099DA528E5BB
6426A755DD91877663AA169FEE5F45132524C3FC033F9042BAC702CB8549706E
11F696C94BF5BC7CC2D96B88B21C755C6C03BEDD767BC1B29116C0E58457A669
12291DAA0915E7D640105F3C5C599D94C41FD7DFBA480BACE78DD43DB1BC2E1E
BC77AF26173ECB2A2DBDBCE57EFF45E30DEB3091C42F7AC696EF61D185E06F87
41AE6FBB6DDA9C8EBDE42F5C0EB5BC3D38B1FE6F1A7578AACCE5E275E11BBA1D
0821C1D2AAE4FF455F34F89764223F7DC55BA669B8793F48CA8A4155AFA08A93
3B05135FF872432977E2F106ED93EFEC7BCBA54277F55C9A2AA048D8FF185763
DA65D56DB07230A4E523C17A201E21DB85365DD8B855E4BDA6A34B1E60254AEC
C3A2904C546D6F2ED297BD3D3A359F69CD6E4D8575B9E41F9876BB6949602736
726BF6EFF89C97B163A5D4EB49510DB2CE5AEC31C91E211F0A7E41C25DAE5FC0
0783F6DA40C59AE09ED22AE971884911F452C33D3F39EF0BDA5CD019A73B7944
C9C20553244EEF2BB5BC7A54E583461ED91A90CA5B743636AED81E5142CC0A7F
A37CD8B6B56E6D899A4F43A8D839B656022769E77676CB406B403551C0BFFAFC
E6B05E537144CA3F6E7E9580D820F9ACD205A00D5C6228AA1D43F1C6F0E9EA33
8B2109E9C6B8E4AD2D5278A472D241413AAB892ED473527D9BAB863328670D82
2220DF701049E106F04530708DD526F6B1A20E03DF07E27D18847771F3A1E788
724EE04C6FFC6EED7D5B536D9846B22B75BE321739617F870A32F2F31C59C6EC
C63492962B685F8A1FFCF6417C6BB50239739B6E080329586D89149DA8000E26
7C0907718327815B85FA52293721E01D8D407BF78624E13C5EF402EFB962B5A9
0CCB17F9AE98A88215E857ECD58C15610EB43EEFC0E8093628071751C2CA3E8D
601A411C3A5C74E818177AEADF6225417D8D289CE51073B056D26A458BE20BDE
45E6C67C0EFA7DF4B64ABA37A4AE429B796025BD293C4C59D20D9D42C5B15660
C76F867829E4A9FF9703BC1322D1F2C585014E500BA9BFC908A2BAC4B3062E37
B68DCA401224A80EDC6174295CB49AC66E224B32478EEF14B427BAEE5ED2EFFE
80960FE6C0814EAE725C7A145264FD0161DC0587A7832364729A22714A5F0E7D
9EC4F5C2BA5FB0E2B5B78CED47B6CD5CF3B3697C3600773BC40F2366A8997766
29A2444CB20D135064785DB257070814595572FD8BFAD4C635EC7784463E467A
01384AF92E650595B13720D2293012310CC8992E83A0D7A93F3AA16385F40896
D4A047C14C559F25C7067FA0E5D929236579DAD5A6BC105B8E6211C3F26DA653
D3CD1B9522F61655505F37D6A182ACDF7D3B1227118FFA8B1F91DB49F181F0A1
5E0F04FD0D8236E1A5B92F70131A55B77E3CB0CA12010DEB5B132FD4C5CB8306
2D7AE3313B8D619B84DDD8CD3878A4B306950873DC7FEDB7DDB9983A97A95C1D
97479ECC18F73683CED56A589B8BD38CED32B34BD8D1A690B61E603799AF4259
80494E9CD6AAC616784D91B39AD85200341B4B33127E9CB214A0CD28FB9CE1AA
C9DFC79F3A01B4173EC057FA97394854EE9023F36DC31498B59AAD06E09E5968
1B5DF0CB0E032FA0793789483374DD552E9B16777A48894038417E51D901EE47
4FC850195B412374C856B1E01CE4F210EBC592FAB9A6B69B884BDC78990C7CD8
A7DDF17F31B25AEC0D519E676A2FF3B1516455D2D07046482C4EAA0F443BBF69
199D881A57AB799053F2F993D9BDCBC31425AE75F1A1801FFC346E1658C134D0
80C581EEE5420F5B45BE601FCCDEEEFF09D56C850C04A0FA08AA2C48B5F12C3F
BA7BAE21AEF6AE0B1D87F13556C213E42992B618D483ACCCB679917FDF7856A8
FB34E3D097A09670E4E45BE9EAA665FC79F85DB8568556278C9456C5EE747AA4
F26D563200D49FD4C4F18D90C6A0AF79CD78D365AB6D3C0AC7054A91B9D63A26
B2A529B59755EF7EEBF71DBE1DCBA8FEC61C1ABD30BDBA936014055D1043E5CC
BEE79B2B5BF5A19412151BEC6B60F1FECAF85067DA0E16707CC2A338B0636296
5FBCEEFEEF0F40503B6FE82E570272689BB3156A539BAE39D37FA12DD1858F86
13E20894B5D15FB9E10D1CEEAEAF4E7FD8DB4AFB689D2D20F9FDDD9069BEA650
11A0D426C16FE49EA5746744794D6F6CF9EB25AFAAC30CD1136B42DA7FBF6F37
7E25D2EB439878DC16659AC47B1630B9DA34600653E1D2A58FCA910C0222741C
245DE6A23DC133E7B299BC8A5A10BA8FA13A75382C3EE6F28D81BAAF616F120F
C5812DBA87E49E0E85B4DF5D2B4DCDCF415D6EDDBD0FEDF69EAF6F585769D9E3
FAF48AB39DA2695285EAFED835504674CA6D50B634ABB0E933C7ED0D3C515904
4234054D2E84FDA1F8BBB81EB4609221DBCE623DDC147FD2FFA710D8AFCFB1DB
499CAFCA0A219E5673B23AE113B27C84A995D7A4D1E7C018AD67B2593A06829F
83532A5D07AB52A60B29C4A061C631D6BD584BEDE4C4F69F15A473605752B3F4
8F4BF51DC5F7F319DB82DAA8830E1FC5C3C5321ADA41416D9698F888EE19A689
ABA95D76089B8C6D8C93FD4B18CD3A4D359964FA97B3A2128DF134C27E96BE43
5CE6C983CC634F77D9BBFF54513822A586939243DF1050B9BBFEC2F24212E226
C11A9A829A3DA4D2EB078567FBA258B6E9AC491C898AFE094E585B73C20A0628
AABBE2542909450D284BD1FBD41794810D713971CC16ADBC00FB97BF26AA7445
F488FB62B8A25D3A3D3195D3A03206A45BCBD2E9CF60E9DDF1268F20774549A2
D4DA18C4A8AC9463B3425FA1F36AB078426695A03E7E5D2E0BCD631D5D7CEF24
BEEC35E19804743B2EDF5366D2ABEC7B8FDA5587C195EE8B3C26E292C090B36D
DD56FAC219910F8EFA4180D90B2E91E7775D46D67331519AB1DE08865836B98C
22DB7FE881EA68BB752DDB8C8EA435CBB6B3044A814A838C3F51B917C3B4C1B6
02458BBAB13E52139497AF10F293D2A1F99CA594FA011052D7310919553E40B7
D79755B654AFA0E5D9B0431CB5F91DBE37E4B7CC73AF7624D2E874DE913BEAD1
CFF574036E13FC1CA53C33D1855885BA6336A041707C270C280DB9CEE431B395
00321A010747FC044EB991507630EDE09E34730636B8500403F35A1E828C9316
D4DF8E11698C3D5281C8D076533D13FDD72B627D92C49BC4BF34FFFC90C2E7E8
612D5D585BA6AC3F806BB067863A449E024F36901F18F51B9FE2B62376A3E57B
C2203471A263DA01823B1689DD20BED6C52FDB2CEE2EB71218C9466605C828A1
36279D4E9C13216117236121F163420E7DDCE021BC8175800C1B1694E92F2E65
FC57771A4DE423B9918C47F787274B656D89C48A50F0B8981731D69E8EAC3979
608E0F6D54FA4A4D8A3C61D2291F16294748BA10758E4D81075925417BA5EF1A
ADAEA47AB5D94520046EAD1C50C79F9A030169996F2B6314E905021CB783ABF6
AA2CF0054446E03FD8EE4C785FE8DDC5C0C1862C41B9F6BA8E4E27E5EDFBCEC1
2663E7A767052D9F2B284DF2B3C5E26E9C6E76BC39BE3D339E72C09A17449D2A
E4D45833A4517978C3C6C42BDFB21755CC2A6EBFDE1750C6C674EDA1CB3F32E9
E33FDBABF9C00FF0C6FC55F78A4BE43408C7C25B5D8B83E87E41A8BC723D3336
8A039464F9C30E298DC55C1B43EB9623DB3657DDA3AAFC20AD4D16B26F1EDE07
8061C23D5421D67EBE70F40BBFCCB4ACF5829EE1393B22141B3A597F7D59ED57
FD416EB5EF55573F8BF8F6A95FB9454C10D0C6CF5757AA6771BC785E63286D42
34E04570EEA49E5CD0527C4C7CF4318CC19B62FD3A0685594F745AE079A5CB94
6DE358CA0CD09EF595C295E79CBBF927B531830F826C3D5B775EB0077AB53018
CFB0B1F497CC8EAE056121FC90354F682B63723A870E1A3C85CBD844461866A9
973EE7D134EDF0ABC5238EF7F9EAB6F14CAA1FC2AF8313BF4661A73AD8B6CF52
8F6FC65269B4CF96EAD1B3279636AEF8405A3496E733828CF31D7DAA2C065087
0F0B9A3923B2F052EDD3653C5D6478C400EA6C36DEF481D3CFDEB43CF6521CED
E844A86DA1603907436911A15B5BF5889081CA863766A4ABA1590B6088C42431
4C7C9C3A47B945865DE644755FD07543166B6E81C14C989DA54F82FFD1237050
4015D490A70F55BEAF6E6F8495B4CF0663E3E2FA211E0C9EACE10837B4D590E0
047DD127057E2E11E81DBDDF6D59559AC49F17879EDAC652957EFA5E03C8ABED
241337B112E082FCBA0107F891381D2EE8166EB371B9893AB236F1B5C8384D26
C28195A1F4C47391FBCA675BA6FA85310FE82ECCFA1306A0968A59914D28E64F
E8F3F50A501D8977A5422138BC4327BCFFB5FFB53FBF04AF99207F439C07F2A1
8F70ADB7D0AEFAD712B752CC9F6B0DA4611D64C42F4039C7032DE9B70CEC7005
8D312D3EB5E85439E3F43ACD5E01DE227BEA8043A67432D2E6035ED49CBA5A93
112D9CD41783B0BA16A6947D9A92705A2FA440118DB7613A4C7FDD7280B14F33
772905F1ABEDDF358F152D23878E807AE0D583D8DE08E51EAD1119B519D5F6D5
DA39D4CBB0E33CED0415DC13C88E6252EE0010BCB2DCAC5E29D061218CEB8A73
9F97BC50396B6812249702A602B04E222FA8EFADB291258F397E45C8FF5CAD91
41BAC4619A19EA49452C9A1AF1D2D44E015B5FFCC718DEC26D5707E25EEB0CB8
CCEBDF6ABB2967DD9CDDB99B21BD4DD57414959EFAFE3D85AE0D67E58736D619
4847E6B210FAE6F254543D4FCCF54A0886B3C726418E0D287775036152320205
90E75827F7E3CE6666058370D0D29602633A135AFE1982D04048C32118C8E1B9
1F9288F0B80EC2923D62D31A2D208FB1E7F35B272B1E915AA67EE4C721CE89B0
5DE34707453FA5D7417DC8BC95BCDC6E60CAE38DA90615D481E932974663AF1D
2426A1AD01D08E94977C5175F28C070EF3CB459C8282607480B0C0BCF5A69348
7F3AFE08E2DC28192557BDB7A0A452F160C856B719CE70A5EC3E45C90B0828DA
EC2897086E75A78055B90C7546E1CAE9B7484D85D6C6805B62B2214F45452FAE
A3281414C2AC94EB101855B44907874A1B286BB4EBD9F4B926C85969F6B07FFD
ED7EC85B988FCCF459797C5972B74C13DA6E07449B3308AEE513CE84FC76A01A
D7881A2A30C59173E5B9358610112EE5938BC4DCF38129FF0125570E570A98FB
A44EA242B01F147152DD4E6529C9B14AC2E612925CC81204044BFAB07E6B83EA
1459070DF19731477929CFC785688DEBC02A6E020E3F28493F94F81090367109
470FC2B217E3274B76859EF282309F47AE44927B27DD71A357840065DC25F12E
AC68B3727CB2316F699334CD7BD6C8939DFEC79FAEE72F8F22A241EFBF89F405
24BAB03F66096CD6908440A1E272A862336FE61AB6EDF5B63D9CE4E0E297044F
D35BDB8463F4CE01D1F7DFC7F3CF29516C9D091A164766154DBB909A4024E79B
8F3BFCCC7178CA9E8F441D58977CF9A0901C92D7BC658EB6090955F293250871
BBBDF0C97E8A80F5B1D504881C72DB74BE5191EEEF6596705DBF12098A65E4CB
EE092F01F31BDCE11BB2AB01F1F0F2751CE38C743C5A5BF33ED1E1690DAE5FA2
4B16928262143A09A0674FE13BB0DEA29C5B1687EB561ED3FC69AD3D069BD386
64E7CF3478568A3CC8F56AF6FD1392E2FCAC705379D465076351921761B1CF00
C3DA574C26EE1385703F20FB70E37AECCEFD89AD59A902B6E9A15B413FC45ED7
09B5A0E5ACCE8A0963CB0A7715DDC34FC7157E3562A194B60231AD540EACEC30
6A43CFF99C01BEB18F67B4381FD39D6BE0AF695917C64A310CD1AF7B3B2D58F1
1879933F08C99976013692DE057784F166561604D0D26971AC5CD9747A2907CB
D475E230C07506A38F734D002C85AE7B5A211CF432C79CD4358C700EAD2DD71F
0D8F935E7E18A2BC09D6D9D0DE09E9353EAC8DD0E86810C03BFC4D497466C74E
305A0AC47C2F17C8A2E201CD173340E90F709994CD5DCA5EB7D547213A9B5651
981F67EFCDE1EDE239C0115C8FF73FD495F3947BC776B06294BD86ABA80FD24C
4BA295170B5761342C33F2284E2C9D2E8429A98B7912D9EE08021AF4E1ED980F
4D70FA44C3B89C7255A43B30720CB1411857522DC1214E1F11EC6183FBE5FC60
2B7E7007500A6E4F0CAFA00B90F2050933BE09152D51C66065340AC3F2871F5E
4453A41E21049A19ABCF5051CC37EC32B023BB4BF450CE06F9CBDECFBFCF6361
32032C4DA87E55600006223E6E86A63BF65A7EA273F8AE6DFE0C622C294474CF
4F9F7BA15DB3B749AD6B09C003C5B0DDA0E10D6200539E5F6BB12D7778E2942D
80BE3F1FB3E96B09C5C8D72B6A840503370C3735DE613055897966A0E817885B
9649141BBE104703E4B4A31BB9433B162A4E65A29FA0F31AF09CCCDA9C6FB9FD
7CCD20037AD6B46FEB5251BEE4F70B7A8A7F6E5B23F7440CCCA71C9B002DD0C7
C80946BB83CE29893B69D81496A8452B10DD230872ED41F7309664F3A67A8276
C6A3E29810AB3012837526FF57C45973E296F0630788910EEE38DC986D93D421
D9E1A245FD9518486F67E289026FD0C35223D2E47DEDF3718C4161DA1AB050EB
4CB5160D2B2233F0198D548C2045FF2A70BBA48E0A87F25883D5717EE6278F14
21F25D29A099D3BC4F65CB0EB688644DB92F45F6465F5186BFAA2A6763B25F03
93EC614C68F8734BBBCE32FB5434315380E376DA809B1C04D2BA6E6275FD91FB
C98C8AA27707D0B209169FF1BCA4BD954D69A9D8099E794F71FDE660116C77C3
DD71B17438180BFC8D5FDA9BEA51A3ED85C3CA5BA55D70D6C4162D2E56520AC0
5F3CEE845DEC3FD826176C12AAB69CC7F33C300D7BE05CB278B13A4F4B8A8455
0870B717B2D699610A2BB62DA3D8642F886A8EB0BBF3C58825BD39453EA9E641
163B158C34F7D383CBFD06F175766D457F34061AADC3352F8B51369F136164FF
E0734794A7B19871EEE38E7D29A56EE8F8F0DCA0FA1BBA30D437AD57AC966E34
3F28B16F1E569DC8FFB2519EDFF3EFA1FA49D7F2D0F5AC2C1C82071BB9D7CA4D
045B92787ADEC43D001E881F100D06E2BA476FE03E36B0ADD447C8F5DEA18BC3
044EBD9985AFC43C1782868E3EC857757F95105CF9C3E937B85CF877A439E44E
DB5B79CF55F23EBFC8023490F89678BC41212087A9B2C04618D40E92B9E9273E
2A4D4A0D0EA04C6DC1C8EC6FEC27076BD91E22CF5CC7FE262AD74DD4584CA5D0
C0F390B276CB600AD105E674E596039EA631316B3F75ABD15A5759F9AE5536EE
A9E2FDD761CB86FF0409CA308962E2608FD538AEEA009770CE23AA11998960C5
A9099A82F6A70B91A64E44BED51E71325651C1B044D3B456AD8E5DE86D0FFFBD
103228FFDAF52459A77CFEE4330D4F4F732D8BC516EA387C2C428E75FAD39587
3A6F8E82BDD35D0B6C9F6F5CD5A0DD0A6B42C01F8641F3A4C12ECF0B6421FA8B
53505C8BD15F216730B6CEF121AAF3EB21EBD8D1D52FB29CC828ADD9B258E690
ED1CEE477A482AC68CA820A4EA3B70012569A810343DF8BF4306AF12BAE85545
BEF30E3CDF952131B206697D8A1F41BF0B25685EFFA24D8B8B5C5D7C8AC1E93F
31135C00A711EF6A6B740FD63FB0B439A6C98111374314DEA17736D0535B2C94
7071DE6B75D3D630F121C087A050F5B508093D5D2D2BEFD56B2B5D2C73263F38
C9A08A0BAE8904A5899CFB3DF33E04B905E8B3D422576505F66E3B8587ADB7B6
B5D0A38AFC66AD52CF8F949ECF2D1B2BA5646382389E1D0B9490A746D85B22D2
D89FD355AAC23BD949DE2535090CB1F67206E709D5C65A7D6FC1E5AAE5C83340
7B421C3610E750F190D0BF6BC6BCA09F07571364AD2F001A98784FD0EE40AAC6
CC6270D38C7DF9AC0C9282A7EB93DCCFFA7BB9E03149AE3BBD0F88CD92681E81
944C5799AA78C00D3AA656D921891F18BCFF541C09EBCC0D001D3449BBB5F585
09B41B59C44EE010C5C206BEFEBFF9B198426AEF2D5B015C51361FC3818439FF
A8F792D43AAC3B9EDF4FB0AF8E475927EE052BDD7AC3D09229FD98046104CF1E
1D6149084248C626E9A4246C7E64906B9EA87E08522CC2982F14702C686D0795
72C435D6194B7A6187221588D7EB84155FCA136A246251B90ECCBC9FB8641DDD
0DBF095DEB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75FB8D5B00DB7BA78FBFC5B95E167C6
CFB9A2275128DDCE62E56BBF35D257EAE99D627535F8E5ACB4A4D3E1E6D9D24F
9CDD9F80028D37C9CB4067A28D41E879AF98739929DDADA413EE35894A6A5B14
CBB136548C4B00E47FA77732DBEA89E10E98CAED50DEC8AB2536A447F7D46D4C
63A99114EFD23133E2FB8243221A2E8AB1CB892DE716CA34CE544502ABC9526D
F48B0762B57F8AAF2E120D5DCD70D140B498BA43863C45D94E6642DD04CBDC31
0087B2FC75CAD18883113AAADF162B023352069DD1BDEF229E16DE8D008A4CCC
BC317B47BE42354627EC77B91564A034FF2F3B60508154B08981B62A2E9974E0
E9A46A3AAC7F87B1FD8620A5A695852F2FF71CD16FA34635B526265F1A635254
75398013F04B49F67164F03610FAAC41229306EA37B9DF6E8DEB1C6C2BDEC9E6
EADDEF6E99BC482289181D89CF74F9995B40E5C55FBC81DC7686AE740022F764
C49FE9B49A108931E3CB077A9C53C764DBB47C789C795E97A537F013BC2BC786
BDA32DCD5A856714ACD5D2BB98B011650B2A5D8B881D6854DA373B002BA279C6
0649618BE2D9B1E10DECA9090F66F089E4D7C6D8087016FCB998B95F194BC9B6
E95BA14850E251A4EFF1C66B148E036AFB7FF007F18AAB4CAA2CEDB34F65F327
D58731A241E11468BBA16BA3494A4E80FF16410385FF17A1444B2D1596343B25
64124D648B1E0955CDCCE027BC9F127F79622FEB3A6781181EAD3F02101364EC
FB540C0B2473F20BF05A8315BBC31178398C4DF5CA482F899FBE7654F08D93E0
29994A566CDDC866CD6A1CF5DA076F94B31AE4EDE8237218A12D5E9DEEB9EB26
7CE99EEF40ED1A5A247FA60A89A2EF6AB95CAE1FB119500650FAD0C18B03564E
B61A0D261812A3EDE5BF402542BD215541E3A478F0933EB129EAE44484E084BD
DE7D2CEEF5E54E2CBE14A20F56A27B70B9C7DCBE9300AA2826EF2D6E38C9EE32
60EAFD1C1B7E9CAE9EE810B4C7934D08C44E8A3EDCADDF8FCD6E289C19A7056D
A716700F391FBA6480099E8276173D443884AC0600329C607B7521B1C1C0F575
F4A979FF04F1B3C17864FBC8B92B77DFD068E53CC9111E290624DC39FB79FEFA
C07D2DA7DEC9642694ACAD9C980FC6F26BBC4B98AA0F9624D8678DDD10596E3F
55CAF2F4419B78FF39B929627428C3A6736D8777332C017A9411BF924DE0E40A
24B0E1B797094DDD8EA17A7A281D007F1F6EE3CB17E0FDB167D05506A96F7296
047E208835176F3154E8757A1C21857556EE412F4434E8062A9F9101ADD125A3
2195B8CB98C9B19235FE35E0DB6F1FBF31ABF448C9261B75BF1EB61260DEF86E
BD69F26D77A20B25BE10094D4C196E26034F2577471EF7CDEFD087BAFFC6C93A
F8FE338E70387B4F1BA2119F24E0AC14D6C89D60DBE2E17850FEEDA72C8A882C
F268AA853D036C7633EF1DA737CF40C5F170EDDCB3B5518E28C971EBFB43D842
99D336736B15B05591122AE51D1486E1F2FA31E9C9379F2B3440AEB83539438B
B83563DD61FA39B66B4DDCE39F3E590823590CD7C75BBE8B58EDC2F2ECB1E684
00C6706D29DF0BCA1B5C649CF209DAFA7619F27D165264869A4D5EC574FFF640
76FD6BE210178957E86D8B7303BF3EBF660879783E563E5FD42AFA2E2C523957
8183B066D5A65BAE4AB038087E40257C1FE6F484941D7387A2F92A69CAD3FFA9
AE559D3043D7128482D9ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A60FC
7025B92E55DD5D5897F13EDBB3356F9E2B9DE1FE09288B3217E226202117CFBE
3DE2C6DBFB0BB25BB13A128CECEF9D4D51001EF6E00C9CBA158724AC4352EBBD
4085CC2897C588A09FDB14647F570BBEE55DC7F2AED102A1134FD48A8C8480D9
137F359E6287C5369650A06422FB0B3B29ACF32F3DDCB4DF8B5AC385B0E99329
08C1050CB6DB39BB10C1F4D149305E6D442E7D8B58020A01C8A417B670A41F2E
B01A30F2AE8C73D83360E849EC83AABD17E084BFD0A3606D42EFBDAD44BB98A7
440207EC9597D409FBD1E6B2429DCC30846293BF3060E9CAE54A81D21AAF3BFA
BAFE773F095BA4D5A0F9607E25DC3137296CE1D8E2B8FB0DF6B5FB6D5C415495
635BDFF798B08041C566CF1D783EC7B15B4330A37FC9C1BF23CE45EF19471FC7
2472E528053EC041E396333C90480C82F2B80E740D5ACBCB0882F35AE8A3E3B1
FE3903A941EA20902C10B0C3E73DF25106052700653849C02805E1C56026FA71
302E87A45A22ED99B04853D66E5A22B56F79FEF73918B7CBCC65CA7DB3E410DB
1AB7AAF9B483A4DB3B333B158517971542915D70737B3F22C6A831A9821624AD
61DC8A0DE77A1F4BA087E7E54F4602592AEB49D4AEA40B81B7B653D90E146B6A
AA318E165C8353C9CC1F0927D73E21ECE52D9C3EA6DE3CE70352D2ABEC8E3DD4
CCF226A6829DF67E37A242C5E0FDF6AFCEBB0621A8ADE7553CCA3725FB707ED9
526ED054C471B82AA52B6C090D4C6C776B5610954A6E5471F8D8344C07DB8E45
BE34098668A5FB9DB4D49F3FC041809ACDA455C62A76B51D730D8B124BC6B76D
049B17736CD9E28DA73506142B6AA54FDFAC9050332212CD062A6B96FB18552E
DB51B991870A6E579DC68B52DF7F950CE1BDB15548CAD879752198F3A2141F1B
77DCD2B7DC83E662C19DDE6A5207ACEA1E0C78CBAA7A47C5F3D0C745262B88DD
F05E7E3C1682E8E90674B781EF298DBA6CB1758D22EE8A7680B01DAC100D3748
CA1BC047117E5E9AFBA7839CAE44964C974F08DB4C947F074F5B3644BB3F93D7
F96770C73499AC0AFC3E20F0BBDFA01502C9A1C30E9DF357529D99BD156464C5
D64ED5C7BE1C1DB9852E09F62BB22A3A51BEC8BB98DE63D6763E8225E9ACAEE7
9D813C62B96A7CD2247A269F53AC59E3E886BC531628CD9FDA87188135B3D6CE
0F2CC637A8F2EEEA4C05990EB23142620576551DC347BCB2302D5D5FCBBB04D7
7DC4955E84168F9AC6EA2E25C8C38B8A36B337C6925E0CB5BD963CB791E28CB5
4B37655D9DC3BCF1F660E8262CD10AA45C67562303483314B5B71B07C7F8C598
D226227FA8C178C10D90A2F26A639CF016B843ACE6B352A0B859AAEB15A52403
FBD562D284EFBCAF3553CC5A757FA50D53E6AF18AF09A1B9C4792EEAB445547F
698E0DC00CC722B65CBD277C5DF3B4B1275090B71A4D4B3B7961171D67F8F6B2
6EBA8AB37B5C35DB16D8B776255132DE99F3F4B7530A72C49503FC4D5C84291E
0740415B51E89FC1E4887D1912C7FFB218D23A08172BC11116C8028E77D0FE5A
DDEF0931C9EFBA2B76B78F6A90C0E44F8236F55938C3CE5A9EEAA8379EE7D879
D13C3E2D204512584029A7E941946AB7D45710ED4396C6C9816137832A56C48F
C89066B9FF63B80A84B36F75AD6D455B580A4BBE440839A54B385C9E4571C466
AF1C084F04AF31AB83EAEDA618C70F735DF746994341A37D17E8AE636315CE9D
47B1A020296D23FD0A59D6AD28E34849187D767EDE855B520ADFA07DACBEC45B
BF0C25F00DD94C798C8CF098F26C8AF48B458803BB26487C1391BD9A5B51F33D
505FE3ED168109F1F39AC5C3357E48CB38906275AAE8D8CBE9ACD7740ECA4A47
A985E2E16051FA4178F6557DFC8FEF287CB787EFF59E86B4A72A199F16F2C24D
D5A6AD833A4BA6F96FE67FE603F3DE0BC536C9A2A04B73CB2E4EBCF70184C5E1
D9C9E3DF6D0AB7F44E679E8518074632F6BB0639E2AA1DBBF34708FDB8092FE9
343274DA68CD751A72052D4FD983EB8C149E081333B2F0E0A54134F91D7B4ACA
E954658CFEB3FF04F3F9F42C57124BF3FC0BA485E050DF883E4B2767E236BE21
9FEC94EF94D9F2096E76F1C558F40812444C6F0F4DA995C8C03162375AEF5BBD
6BC3B250625E4B5C2B2BF9879F853460339AEFAF4FCC58EA396431BD4F95BD5F
6DA31DDC13D860842BAEC5EB5C217FC685C06C5AE447C991137584534EFDDE0F
7BBB3FAEB89D737F9FDD69B4EDADB476A1E588A8C8499A8917CAB23F00BC124F
D93096D1B365B754E3D03ABC8B3DA3F4F6C2DB54682F72DFB7E665EF36DBD3B8
9455CA9BFE2FE8ED26203A2B353C3C9C7AFCAA09793C8A74DA25396CBC1484DB
565607911498AE56FF61F2AAB48F1B954211AF0A38D6CAB3BCD6697C7E56C29D
62A325714D3FE8C3DC019CC01E8738CCA2596AB05857E4B8F9D6695EF332BD3B
AA9EE551A4B142DDC13600318F45CBE1BB1A6E0CCF1CD79182D3B235B457CA9F
B713822F634A96C5D1923710DB4B98B063FA07A5FFE26234C70FF6EF6CA2A853
FE0F76AB1ED5B97A1060D13911F4AC44FA5358837F7CC6ED863F0FCCE5F79065
D7AF0839F444CFE8AC2F2FF46DB2B95247BD8261F39BA12AD5E50433EF517BD0
FD04C73FBF1058A8907ED43B4C144BDAA3C4E6BE9637FC8BD3E94D6257BE1B7B
FB179A4479EBA92EF2EE4E7B73DD295274E1D416F7AD7338FB3116A3CFEB9E33
8EF0D7B0FA721D7D11990750232AB90B60DEF84924B838AE79C6689275697225
1698C73A825EAF77F8C38CA8468E616771E6C9093D7E3479B0DF3F3160EA2059
B5F7BFD55E90340B4244BADD57DA5902E2C08D00E814009234E2A36EFBD854F8
68BC9301D33D0203F8D1F59EBCE526B06B610DB1B028D29F838A52AEC3BAA982
56BFC6A306ACDD86AEFA6F4F2AFCE55BF27AFC96D93AE476AB15324149043E71
3261671835DDF163EA8D3DA7CB1F0514DEECC225301813E4ECE6D689B0A04229
04F28E6DD3CAF0134F9E19DF8F5ABD86CB0F8CDD3A059F2F3421FF99BCAC2D54
03D67B0DD5ADFC6174D559534155A42F6626A6E7CFC849FBFFBB17679ABA8C34
B1296EAACD7DA7010ADED0D6A83F04F396CE83F0549B1168EB7DA7468011420D
BE034D5AB67817DA21F12130B85DF957C636987F2ED81971E9FC729AFC1E778A
3C062A85C2282BC39C571BD45057FD09085730695ADEFF892B4307BB163A248F
9A2052CB8980119F3F2EFECCCF2C04B55F44FC0D155C1E04055D6F81AE5E20A9
E98ADD7649142C6CC2FCBD09F82ECF0716F5378A8C51C139D72816DA8B61E413
EDA36A71E7B6110CAFAC612E3E67F979E774BA9C7A580D605929D6D790A34084
7DD751CF51F14D89B269A940060FB0B603D3A2A6839C1C36A3CB55707A0663E4
D7346CE1DD000B51AB4A815FECF291D3E8F573EEBB83E6F9DECA82BEB3F58558
67B2B884E4A9A334BC95558E4C1A9D0B93E9A8C0D83CB8354B69357920BEE4A0
4E464B774D6CB4588DE10B3DAF9F7E546F6AFE62D85E8D25FC1A0039346F9156
82672DE85AE82551277388BDC62DE6FD1A3DB14805DB66731CE5CE34765A6E35
825C99CB7AFE5A873340B50AEE34371B1D7C90AFB517178C9DFE59CE8B036E3B
067B364E0F77D36DC299ABF128FE2511732602A5885A6CD283AD3C1C87F360F7
BFF771183B302FF55667390AF2E314BC8E0EF10504B5612395461652E3B2D6B3
BCCE3F5D699B3E2227DEF786D7BBDAA2A35EB13FD17790793B2B4A9E06AFC15B
8B1E7C3534BF816D19A02789F1E1BE623EDD5DAF54733EB1AD965E8A5A3ECEEB
F44790D57FFB857764A8EC459BFF61D9A893DA0177CAB77BB183F54581052B66
D6CB569F8C51F03E409DCE0717779DEA582740E49F088BEAD6E482EB87350926
910860A95DE4100D2A9BA91424DAD1802F2EC862FB85A143D7B299223ED85252
02C31B687F2C19136157C6D83B33313266F1BA8B9E065A0E64509902D75FF0EB
AF919567B7A1CDA5E14FEDA66F60059ACA0ECA3D597FBAD8C7EC31F3C1C46E5A
E79F74B3589EA1C34BC2A4827253F72CEBA7495FFD2989718F2A54E5D0EA1719
ACDE43012A2AAA1F71550220B035B6AE978341404C817414D0579308612AD113
219204CA43994CAA4671A6A97BD8C6807C21360D0C3F7742F47CBC2D74EF214C
0B15C50A9B5A26205F096D63762A9B14F267CE0337485EF58E37EEF30EAB487B
6E7AB230EBC988C382F594B4D4D4B92E6AEC4A9F07841FF93433615B89BA1272
6F5B01CD5715C6432452ECEC048DCD14814E47DC1226F723CE25814E30876470
F16C5E8F87F74CFB89CA99219C25478E0A63F78F3460EDD4F64B4D2A5B3E660A
B83C0CD1BB032CF0DDA97FD7C35218928C48545178CCAA9646C6C89D2FB89665
3CB3AF6C9466BF2240E2A71EBEA84FE2BA8B2BAD7C2F670BD9087F7531490409
D02F3D87BE05852F9C004219582D45949B8C3A7907A725B1DBB3F1A92E0A0456
D103AD819382A9EB1E201AD6F522AF0386A751E25B22ED67B8950124818EB258
558D55DEB0F69F7EC0494AE7680BC389A1D78C6E2E6F172BF6516D722C6A41E0
86DFAC2247BE094A885352C70B1CECF2FD1054B0F0D6DDDE2D630E602B38866A
6FFCD97DECAE86E0C54C0555DF2D2D3ADB4C7ABE81EE545B39C06FDD7CBEA4EA
491DF016DEEEC4AA85D17812F9302EE8C0D76876B6DE6FF9635DD8C6FD508F21
1931143BA01D7D08EF474B8E802A47C2278F2BD50DE2A806B0D7FAF791407E54
B2D3841A0B5BE40198A48B0D8111B2390B732BE425E0F608D032C4E96971E635
16E5C4D6123C4813ED0328033D88BBBFA3DD28BAFAEF400F21A35667DC620506
2B5D915EE69CDE1336040C536CCFF439BC8E43553D81398E206027B020024CB9
8169C9FAF20B76D6CDD0DBABBF37CE29175A0E7D978742CEE7D5CE5A41AD7F4A
2230E8411017A9B4017D9A660E62AEC1DAB9EAB216693978F85F6FB03D879D90
0E212698367D13499797B79D0F03B942277F5C32166AB539082917BFF7EF652D
589681C60C4D6F18DAE625C2B99C0E088ED65F67D42CE5148E2C2D2A4537748B
10A647F1CEA85D597A49335CC40D38639FD9932BDF7D79A3BDD188901FB6373D
0CEE6B46717BF3403171E1C0E49642378FD9C4078079DC3F513AFE01F4C14CC8
F267CDDA36431BC83D98704404C2E77DE572A47D6C4E5A68F5DF71FC609F11AF
528652EB3D0DDBD754BE5825DDCEBC94807EB8FF83744B52A09BAB0AABD26CD6
24F68FF90D3CED5FFC01676FDAE623110FB41F8F9CF5F3D42FC229CE2A91FF4F
E435C3E56A8EB57949811670BBF47A320BA4335D4C8672E6CB0C819A797C01F9
BE699A97BED4C33668C231EF31A4D5750105FEB6F0C35005EF96552B4F2B9552
C8062FD3AF6DB5E64B0E98E6679780F96B6A10D7D5EFF8F0EA992128AE3DA845
EA4F3F1B2F7F09E24144CE3A48B8022207EC5890EA64DE54CBEBC15F79D3C45E
B5F8353C55A5FE5BCFE16F81B25B5A991F31464448C0709C1710DA050C922414
669E32BEC8B566C25A47C770E62C69C131FF3870C42B68B10C4F1869592E5725
0F65306A1666F002A9B36C608B6E3EE1030786D6A0CA26D77F403C06D65B7394
BF1FC7D06D3D6E22B0A2C11C80CF098B6FF0BDF6453D33995F4E54B855AF1341
AD3BB645B0D7F97ACB233FFA576119456D0C0B4F25246D8BE271D65F3C028D63
0522F6FCA9A699805DFA4F08F2F02F17C0B8C688C3CCBD2BC6A26E593FD52738
E36A67FD71C4DCEDF3CFB6AA5BAFC7DCCAEAA409F59107DBBAB34668B61D026F
025892B1DA5E6206FB732DDB4D5FB00FABD415EB4EDA15C15D794AB11EE10C59
ADEFB34C7EE68BF805D039CA6AC7DECCD1A395E7BA2DA5A818C8319F95F80388
48C132C113A068977147461686EC910F8DF392FB73AC3324F36921AAB291F94D
0DF209354B08F47527C3D37F285153BF1EC03635E0A8F511C784346040BBF8AE
8E79C861287E39335277EF229436B5465583BE8D6250D70C0DDA781474A6E41A
25F0C95DDAC7E4FC15EFF6D20269A6F4463B12C214D99E68F113C0E455B1236A
7E230F3F2F59283A035DD6FF0C002B64B08288C0373276D0A4757D7AAE13F281
57D31056B9B66E98944EB87C14221EFB3A7EA319B4EA0EC773D5C912FC70D03A
38D11BF9A3E8B0E5080A1994B7689E5EC50A51315D542924F4BF5B4F3426C6C6
E12E081339CDBD42C1477B50BCC14DFB635868845956AA111A3B5E5DC9C5129F
C520FFDE29D0AF2B26F944B4DFA2FF98D118E251313458BF958D3986BF189636
037E95FB425AAC96FCE976E28007FB852E0A92ED6D704F15FF0F863528DB72ED
40167B7CA87D55C524317DEBDAC19C8635B0769DBBCDB187164FD2016CC43256
A16EA86B4045C16068D8B27D0BABA1AF1694ABE315FCEE9ABE7B1FDFAA901217
BEFA0B23FFBA6D5301445B8B5EA3B5FFD7CB15E2DFD2F64EDFD3B929533FB006
5C5DD17075585EA332D29630559522A339F16CF415B773153D9615BED1251E4E
E61363C267DAAB3B5903F65176285D4E6B602D25520914622B01185B2F215632
12B299C296401C85FCEFCB9B92D2B261197683957E4A59BB4D268C8E961A6E25
E7A787826AB13F78D36F643201F5FF971324F72468AA5AD6D13FFC99CC4D3AEF
A67EEF8FB207ACB013947A866A8ACE63BB825E9384BEB5BB38161FD1EAE07711
0A3AAF7CFC57483289ED6E06B3A2480DA075AA929C4C36BF112678869F99D709
8A7A3D4787A965192CA6DCF61AB5B28E406FD90885D51E3297DF93CBA6EEDDC1
BEBC9536C17D7F7254FD325EF566C1B6345A9FD75F123B9D58A04D880971F692
3BC93E5C2F3604019C1E6EBC56418922D37F9EFAE47DCF3CDA788E47008109D4
8C9B54C23D6F7DE57D9852BC53AE5767D18142144D77BAB2ED0A4447580C3A67
A908C8BF65EE479C6E657A4D88741DE590A670456AE85070F0882204654A5104
DA365956B096C1DF51E9B76BE1D1DD1608BBC8AF9626B1DF061FFD64D5E9727E
D81446B26D6CB086FC994070DFCB8299304A5AB02D643D8B74EA8E603A135A27
0FB3E83D87F3A394FC38E69967833C0DA2AE8A174649A0504BBF5BA6C59C6BE0
B2BF3FBC775F108A94E3A541677336CE9CB590A8ABE634D07B0846A52B20729B
AD7469C7629574F2389A8A9D172FEB292DE6D31CC333574DBEE3A176FE9CDB0A
29E37C854308EADCBC99DBC17E8CDAF6DD7B3F01AE728211B0CCB196A467AB00
76E7EB96907824B42289A545F3AC0F4EF1A383E71F65057830951C7BBC506AAA
B6B13F7D2A91DF1E449AFC2ADFE46FF64199038C006B74DD8D060CE5FE0B0EAC
5A07C9960F4AFA057FDF163D854EF6C3A694BFC4C5F66F8436ED71848D2E7CD6
B766D4F3E1751C3B528D02BE13F17FDC2B9D64684E50A322FE625BC7D1AFB7A7
ED9F8DEA9F917F6077D95716E5AC076A63945057FADE224B49AFF6FA2E3AEB47
A9A43B5CE1EFD56DA9F09EC52450BD6F531DC6F43B3E523AA8313C2A4ED52022
C5D8E515B289509D58442248ACD2A7972364C8360C4E43E2198D1627F39F3E04
6E39B6FC8A72A7B743ADE3EA140A91FD9A8EAB7A471BB817133799E5AF19B255
96A888D7530BE53473297761AA5581CF8198041C66E6A3601D9EA9ECCDA07901
A44E7A65D278EFE0C676826DBFC268474EA90929EC7C25AD67D929CE8BE711ED
480CBB8B9E59E1B8F6B1ECFFBBC58151AF05AE335200711ED945E18B4BB95B8C
F4CB885E940AB179C9355CE53FBE5B4786920842AADC5C0B144E32263F5185BC
8D9743E4144180D45375DA5F9A3433023CE0290DB68CD3E9FB8AFF9059D3EA7D
118CBC624BE0FF069DD3891222CDA54C7892F94C31BCA3D2F6D2FA07D508BF3F
6314B934962984C7FE400CCF4222F083329CF7489512BB4C998595438ECDA604
1A29AE162EBE44E19FA0FB17A49D37AEB700DE11773B6430A74EE9FD460B957D
4B1952198B7F6F1309B1DA0F7072D69B1EAC33605FFF98C7D011DAF6ED1AE0EC
E6A43A7F115EB14294EA45E98F210DEE90F6F195A3051CAFF0CD4B51CEBA89FB
D98CB518CB63F1867A7D6E44D9E4187A671C34E5096AE4D664B57F8BA938A197
34389E8677FAA943C3FA9956F75531F04161B2C21F34CBE80DE64145C0598C70
4EABA8A055F8A2E33E28344A7A9EC8F2CD1D6D00C72BE097018749375D92AA33
5837AE286EC25516E5D7B94DFC5FBFA569DB2DEE9C6F9B59FE8E849CF8FA406B
0D2C08D1FE8B52B6439032D4D1BCD52F450A808A9EC7825E3D9C55E3AA166133
1AE72D19680C28C445067BF029D2BDD5E78B2833CE36458A6868587A364E5DE5
728FD0B39126E6179FF4C5DD40AC274F3072B651C69FF082E9BF5C9F1644E40B
2B0C342B848B632D0B88E14FF0661979BDF422BC83B4B51D1A0AE3CE120540E9
B655EBB6FAB486FE7BC2E431EE3F6186F857B2FB2F403BEDAF7033590D735BED
02CFE7240C5A2A31CDF0EB03E3E915BC0191A11501ED68DC615750C28D1FCF8B
365CF72B8629AF4A0E1A6665AC061224F46C8EE81AEFECB5313AB50EB8F085FC
7A58576F23CD19CEF83ED66EABA8CF10278C0919365662F6447C26EBEF90C3C5
C5827A77DB5E70842E559E428C90D30E716DD99709F634C2D6DDD25658F3590C
15DB00EFEDAA1F5EFA3F7A080233266EB528C12765555D81CE61C00B56F28F02
FB1F11D7C48435E82FF888C930E00C41B9413108F3DDD1C99DB7683A108BCF60
7838911ABD2A1FB29A5124992CD43B1100ACFB26E144CDFBB94251576B80EB8F
69200D272C713BA3B6143DE90513F88B6ED044C2A8E33A6CE95D45E6B54844D9
2B8433D3EAE60B699B566E964B52CC2EA8F3AC2AC6835CC8BBC9451EDA76E0F0
6E75724F3301194447ED73AA79C22A26A141370CA486620AADDBCF844B487004
DD88A145C7EF56F0BC4307C6A4AAA30A692BD60CF2350748BACA7651007626E9
D2EFFD007A8E985FEC263E6C90BD0A1A9BCB80C73C09D36274C91F1149C89024
DA3E3E052F70812C84055F651E11ECF25ADCFCD2CA43728C2385D9E555EFDABF
1C2DC348AC0AE6777F679E2F62A0A3EB0F442DEF09B69CD09D14DCD518446435
CF22A8AC8BC35E9A0FF17722847C88C9C0A2FE4804ED676411B1B59EA2399640
C34F8E643B53372E4F87992C3AC9232EEB7DE325D5FAE581E04BD937DB4BE342
FF23E08F149D9FC951760987ACE9F2A8EC2DB98F85783C01623FD3612C7B3911
366FD9AB35CEFAE60FC97C6B9EF843CD60CE8C6FF3358A0B67A82EB1697DCE77
59EF3E2FBBC0EE740CD328DC28EB556402AE344855464338F161DD40C84177BF
7B34D9B107BBF43CDEF5D2A41B5CDED1A9D574718B9EDC3EF2EA12268DBF4409
B841B034CB23828A19AE93143AB9FF82CC4E4AE64C608EEE0A2FA4E6E74BE7E3
358DF698CE901DD2E8EFDDDBA23B3C979AEE51FB9DDBF7725BE2F150E92112CC
BD815A60CA119EBE7E37AC81F9D20AD10A9FB4D7BD59E92911ECD5FC0D934307
0BC392C4155B17E5FDB9A55FF38EE51356B2B3C5476FB0F676D3BA1670B6783F
A8DBA0D35DABEB8E162D2EA2ABCB6CCDD77F873328B5CC351E220C6E7257BBAE
F6AB7B413FA0E76AC3223744B214129F08490068B7643F0EF407E64E6F06D360
7DB7466631822AF1BAEFB301E6900AC2B65E1D300A9A8816072B532A5CCE96ED
940B3ED7CFA73F14E314787E2EC3CD4C3CD3A40DEB1D00F3908FEC9886FFBBBD
56EFD9800F98038B815C5D1EA498A138CD5AED45F8DC8B90A55077C7300F05F1
B24073ED052F37A3183DB9F8AD07EFF1919E9BA90194E24A69649F0DFD0046D0
0423F8B5FCE988C624FF44D2ECD2CE5C88EE8FDB5E32EFC9CD960C9757BA852F
889293D91A1CAD3A4AE79D35E66AB6C02A43B80A127E623F3ECC64BCBB149C68
A54B696707ED8C313841A757C5FC51166D8E74E342451F0E5BA4224FC39F35AC
5F1F43601BCC7F39E89FD7D5E9EB6DB5258A37008484F27750EAEAE17A63DC63
6EE6CEA958CE5B051E3DA7AE134145C9BFEB0E526D408712B812EA459C064067
48B63B0C6D53B5874942C33114CCADB7ACC25746930017297841A20A8A19FB08
24C590DC62DB98D92753AF1177739126415AF93E540BAB65FB6F4D4D4A651A2C
A6C84ACED9E02D9E46CB2FE2A6C3F956DD90A9498271D5613B831E9FA76E06A2
98ABAE1A432799B9D577A443F9EE67AFC9B0045311717C3A40790CE64063D333
7BDC7B8D4D86246B3091906127EA8E50EFCA3437BDE629746ACA103A34C38A7E
6808E1BA082060EE975A8D8217DD0820EFEB02CDE5BF84E5F1E8C8572A5A86DC
43F261E9DB07026560DB5FC2C270C0F297A27F4C1A243E8D7FBC872405B7183D
2385AA4D74E4741583059D78C2618D90A399CBD792FE3855F316DC33187662B5
19FD020F717D7DDAC8CCAA0089594BFD7A69C3DE3397E5E9E357270915680C16
10576D93988FC7CBCE8F8EEAD3473E1BE4EB78C1A95CFEF5D63253821A866F13
CE96048DB3439E5E03218E29844B569E2EBD6271DBA6A5B619FDD5879CAB1BC9
1BC2BBE4FE6F206CFF3902D64929BFBC25EE29DA3443EC28D399200BFC00FD02
36F2EB01AB01A5C6DA760514F3096D12ECF20972B58E10A8538F7BDF25CA8C23
F82FA31232BF9D0CF9C597D22FF591A28B7EE4DE020468EA77EE29E32F04AA66
78579818D3B7D3B0C6189160D180D9309F26FC26798343F80F01518636C3DB80
C30F9DC21D974400A8C2642147D4B652A8F1A7E6680653405970223332F61BF1
660842463FD6E80288BCF303845581723BB6B76B4C3C2E2E5B8584AD015374BA
FA0FCBBC0BF0A4DD2CB038B8843685BFEAE15514C343CF1001E1EE4498B7F8AE
BF68A600694C245667C46D53CAC4B610BD103014CDE75223E802DBEEAA6286AC
2398F24827736C9E61DB7F0FCC062D4E32B9D21CB37C99462C259E73A0EB1FBE
7B70C8CE0AE57426572795B0826BF459DEEE6CFD7697FF9C6A98C0F94E241102
3F22CD2DDD10B45566C1D73A8143C8A24C4A470432BD989259DAED9A291A35B5
A1EAA58C8E135C5DBE19ECD7851035CDA661A508FBD0C338ECAB53C74DC4E883
803F2FB7FB3D47335714CB9D2D3330ADFD7241F285D511A410A3CDC58A90DA1B
1B82FD8797EEEB29846B6DB84DEFD0C7F2F968E6C1897FDACE081033C2648F76
C255145D67DF638E0F7508D281F5762ADE506C2DA47286A8A2312B11DE4B4881
36EDBEC14C5256B9940F0800E6DD26001BE1FD4BF642AF9525279536814044F4
AE7DAABC43A230FDAC3D9FF0B8CCCB4C1E7696D16531A5EED36C30AA15C66D53
98C145AEDCE5826302220B185F12F8DC154E4B79B163C08F53AE78243C52D4E0
2E82A4A4310980801A463964F3A0BBB90D85756EBB96B5021481EA4E845488B7
9682BD09F8D07481630EC3129072AEA5778A135D164A571B22D1D619980E7384
1F84F59E0500496E84FD5E9A7E4A28D9EFBDD34A443F263B41A3B2076595CE2A
7DAAA94A4B95D7E9C281194A84A9ECEFEA5023317F88FB64830A2CDD5277003D
6F1D46A6DDD51B3C62188C66D7D12CE54F29D09DBF020D89506CD1270C0B3EA2
35BDEFE3E24373517FF148B2CDA2B90CB5884440F464CD57295728A8AFB1A5C9
7B6B8F4763D21E005D89FAEBBD7D8B06F3FCA5D7107E8B918D946E250F561E5E
394ACA6EAD2890CD407F38C53B3E51C9FD432F22202E89A91B046BA4CDDA6E23
B0AFB2F79CA39D61350D26435EB900ECE26C5AFC283144EA933E003739EA80DD
65A63FD2020938E02C1C72FD8A4A14DB003C5D21197F835B183FDC1269D70A0B
14D4F9BE76C4CAED815AF7DEF664098CF1A167444F32FDE1796595709294CCAA
488C37CAEF08DFEF5DFA13FE0CCA32024C378A87CFE7506B67F7A6FBF8635703
C7EFF67B9F15A7315285D2565D7434FF3C75A20CB3C1B57AF37CA806711890C1
AC5997F21A14E7523CEDB295474F36E7AB3493706076D62F4C407BE252B5F310
39CFF52F2855C8AF27ACFD99EAD434BCC277A4805E6F068CF203053B151CD82D
DFA79D31F0B4A0485F51334BDF5CD5E855A60000B2D49835C34DE75CAF493269
3BCE009A5801BF822C193040C8E053C3F1EE0BB0AAAB446819939C850C76B37E
EC59A516F15F22949AC658037300F1E113F3BD1B4F3ED7F9F55C21A04F1A6DF8
168FA2286D8C7EB944B03F3907EC73E5B4F9B71156B357F62608909B7E4BA822
3442AD48691C2A47DF05F6A7466E87D3020FB2D9D297F496041F09D34B681E4F
B941B56A2D110EE04B8B5F6E28C9131A963E18B6332AB35D35E02407B10D04DD
2B155BA730B13E566F44104BD1DF95D7F1298F80536C85318DD7902FC0E967F6
DECA7277FCA73E841737D9AA41C7D9EDB93D121B912F50AB9ED5D4D7857FA703
F285748E030C516E31813AFCA02EC2AB68D12BB1C155658F8BAC80F6AF3A9121
D8EF4BCFCC80EC71F78908BDA2269B0CD739E2BDD299569EE578A0F2E627F3CC
475425783A9535241E195B13D4214E6B52B988CB670FCBB96B89A53A0D119914
CCFA9695F7B307DDE91948D2CC6E4851B9C6780569F8BD171FDC8DE902DE9D0B
D18F71602D20E7E69C44DB7E4D3197AB4C0783CAA0FBC688A301D80422898D88
C5B218508B496F4129E0FFD341CB04BD18AD6361980C5E12F686EA34A11D89C5
D28C2445072645DD2D80F233808D279DA78714F9C1C8D4475EBBC2A22D425FAD
94B8340748EEBB18942E5AA2C99D424B8AB1F5A341530C88F6424BAC5F9B594A
BD65472705FDFD994C874BA8127BCDC229BB9A644CB6F9CBD3D6037A86835390
60782AFAC5638D01F44E15521D25E3923F0EED07FDB1FBF66D0C4D01EE388485
66A3E5DF65F790B7D627679909F5CE6D50AFEEB877913213A61C9C3BD9336AEB
3CBE770DEF99EB9336A424B91FA306BB15DA5CB7FE994C3506E6C02DD94BF372
A0D4EAC7FAAB2B6EAE8EDEEDF2704C327E35FB77CA738ECA7D1FC1A124D3C962
4699D76D7351A4A78FC2B2EB863131733D7FFFE2E60835E8E570EE206034708F
52A04B54CCA4F97038266A4F21190000CEA2845E755D26885143D6E82DCD40E8
CD287ABE7FF1C9476D35403448F593E2B5F25E776623F737A0D08EE122DA0A83
B36C92A006C0253B84F8A2A807C55DD3FA8E6BD89DB7995368C23421EF5E4BAB
A9C7632E6AEE83738BEF36982B7B694AD7F9BD7278685C4CC54FE1C1C4332F05
F5AF14E709F10504B5612395461652E3B2D6B3BCCE3F5D699B3E25B00623474B
E8A196AC89067C7D659080A08A54C3602C0C76111957D7B00FCF5F246C5AFD97
D7F7DAEBF8092B15073273D8D6B92F86979F67036C2938DEAF61D75DDB28079F
2EB3B549BB128053BC57B5D0FCFEA1117400819A902C4A766B5FADE47588232C
1847141D567C22A1B4DC07EB7005A526481C611D9AA7AE34F17DC740742D3B34
3E30386ADBD8ADDD1496335FEC30F5E9E16AC846C8417B7F8684F40362CEC29A
918C4BBFD2AC730A5AE67CCEDD85C2F49AC971143F72CDD20FA52AF9AAB06016
F84504CCEF55DA8EF9A5BA0127661B4D4017D0AB5103EC32DBBB62953D37E4A6
11232816012C099051B50F1CA43FFC9DBB43E06E13690F831AC131251BF298BC
8BB67F62FCCF03F6BD746FEAFF2AF046C2F395D837E0B2E643F33539F5018462
944E1080623A9AE0F3D8EF686CFC5506C7C15F6B9D5EC69C8D84107E46BD1284
132F1FC2EA71CC5D2E2A146A92B5ED12F71BDC06AA6A1B7C9AF629B6230BFD81
E2AC57A8E54B8672F14E7B21AD14C38A072C6AC3B3D16BEE28177D4FFB05A5B5
B119C6057DBFC2B0085C818FDDA774EBDBE7A957E16A3DF05B3CC7E5AB7C0429
084ECFCEBD777E6FB60145F40B249362BF1999B6EB81DCFCDA69E68F2A60A847
C26B2A041FD896A90E8613DFA8EC49288F55CC3673EC17743FAAFBF6CC8A06C7
26F257E9972CEB41F0D250942B117BAB39735095A31BBF3C1D0D021B9AFFDB32
CBB385C8BF230FC69B3106F6FC309582A8F0D6A9A658BC12D9D6BEC708838D31
1CD7A6C78FC4A53F0DC10ED188D19A8DAB79438F28BD4D270F57A959F2699792
9BD1F883435F85BC30646213E8AD59DCE3FFC7FC963342019ACA06A4F9142D94
7AEF115AA3D597D94A23BAB91561D07D5E109B84991F3AAE219469E3F323439B
F51726A76F64107BC38FBA8107608BAFC9DB86B570FDE7E6248B6EDC790B74AC
3DB2FA45CE3BCB2EA1EA7FE3BC6677F11BA3AC97EDAEEC72A56069441487C8D1
53304E35363E7132BC63068B6E7C7CF2E2432A65BA21DBEB0A83FC660BEE4AE9
7668D569B2BA9FD4066AD925D51BAF05CC288C0B998736EFF66ED148DEDE278A
D1B30ADCA9387FCAB26D2D4501A9F7B88E15ADC59103F6A71B686E1ABF47D5BE
1507368056BD3BA58D0F6CD3D13C09284AFAB3CEC3010CA270CABD8E491D8F71
0C5F31260C5AD761E6DF3CF8BC7B3295FCED7EAB37F39214430BFDE103834356
A6751A5970DBDDB43739D05EECE15112FADEAFA8DF7BB61A57A4A316A001EF34
B710BB4B0E89898939E1925A0D5E882BB07D3813F871C07E725DB927C4A31F09
82334E7ED718630796D4D43D238D59123F59A4689F02B48F1A946992D561FCF5
AAD0873312846B070B77C6D79C45080BE61F1FE9DDDE60530ACBFD53EE23242B
4CC75114C015174F6B47F2E2057457A2BAF74DA634A429F9D0B47334BCA89CA1
1FF988ABB796B6595823707D1A37CD0C8A8F72DE9BA6DBBC7DEE251F5A950D0F
62F276A9161DC1DA48B850D88EA0547B54C7469642A1D00411D464546F5C590E
D695F62C5C29BB006DF06A0987AE903B8BE25A754AF8B31505C0313797A2C620
16519BEF23B160A29C60DEA485A98E8C2289567906FE61337CAD44686AFE62DC
9499186CD60B16C94CF8AC326817CC906885AB05948CFB107BA8337DD20637C6
0CC7FBF90EFC89E6F7488905B10701055D27B9479396116CB75D3735842F6E70
6AE8F6999C94C53ADDD85AF53C31B80C1B952D9DFDD48625A646A4ED3EE42458
BFF881F4ED4F4D5B8152B9917A20939FA8612F0879B86426F794B2A19CE34F56
1C0F16F6BF25FCDD9467958904FE0CDB65F52BA057443EC42BF771C9275B27CE
B7AFD708B24D34BD832406A8BC38C5777A31ACE400F6B71D871C67F70A2572B1
FEE2E0E999C11D420E0FF5C38EE0EF4E5A8928286996E80992529539B99A409A
49A381C62843B4E0E1814B49D0EC4DDE1F841FECFB57C5A9F564C6E8073325CF
6C091DEE5EFECC8EA4F38F9C917A16AB20AEC7563535886E28292A422260668C
8DF214F09E29FF55CF49C204324D050BF5D846C686C8F5B2093E36A61F89CC3B
6C73ED2387A1E63212A3C4FA62CDD5480E97BB4606EE953350A75AD01DA8E2D6
317BAD6D1B60895C289260E878ACE4F6553610240BA2ECA2588B34522F89E6B7
EACEC2DA13A8D0B66AA0C3A7A5FB847458A56C0318B909C36E876EA4A51D0B7A
3A3D52E4AC14D6C89D60DBE2E17850FEEDA72C8A882CF26F77F89E19D9B48709
CBCAECB30FDF85C8D7EC43C53CFC73A4DC6C188D10A28BC48676E4777D65051C
F351563C58798BF6CDC7CBC908A3CBFD39BACCB220DC470F0947E65F43D6E82D
CD40E8CD287ABE7FF1C9476D3540344B0E021725B1560B30D6CB37427427EF40
79D701BBBF33F642DB063A3C2559073D8ACDE59EBD4B0EA25D371BEEE59988DD
862CFDC0F7B123089A4524CC7CB3DA0D395A9D80F77651C95BD71456BA087709
827B05A80FF78741C66AF8AF8CFA76772D207D8683066FD5D51EDEB31493F35F
A8A395D92CAECA93514C49DFE1D67475BC144DA3569DA6FFA0C2AEBFAC9216FB
646FACC2ACCF7936399A2EABDBAC88BF012B53F8D3262E9BA4F370699C8678DC
9DBFE55CBA5E62F16CA4AAD970585C6E338F5F95A8391C1B91CAE0922A3C733F
B9D45F81757CFC8ED6BAB5619655ABBE60E7A2F5DC169BF13C56D9D08860763C
7F8B460C4B798DA8CD1CBC87E83C04304E64EE3ADBF748470A54F566C1B6345A
9FD75F123B9D58A04D880971F69732F073301DA3F5C5D300555AAC9230CEB38F
253DB2EAA9B073A253C5266654D1AA1FDD19A24674F7A8D5A62B694D0BC01C7F
EB8A6BF182467ACFE3B05FE61A64BF5A47689E55D655CCEBBBEE705B45D1EC65
D0EACD9C471E32A1835096C78B011EF763D54AF25210BEED9B500C968B0A5317
86DB4AB32DB1BB2F5103AF1F774721D232F5051D2EBBC1F3A141978919811620
2901B611D9294AA0AAB57BF4CEAD88713B289E12D7842C2A3A9861C89A21DE61
70A65AA798B36A639CE4CEE3511B7633F41B407741803838D7F8D11482A0DFA9
9F57C171FBC47998037866A26E2FB6DA0EA3472267A89135EB528CFD0877E8D3
5D61F962F957C199FC3EEB1B2CAF8C3E319E894B54BB8A2551B3F78D75DBDCE3
6109147088AC6F4ED2BCE9A7B2BC0525A583A918D339C1DFB90CED5EB0FC05B9
4A22814EDB063A3C2559073D8ACDE59EBD4B0EA25D371BEEEA9C385193A438B4
357D0866EF0727504C48C199E97FF979794F86ACD235A8530DC532B2F8AC0364
36F7BAF5282C9C8858737C55E8C217A462124495CBCA87983B896B7D08AD1D76
5F168FD2A18582D3204B245758ACE06FDE6654C1AAF015B9F8B0A1A057B354D8
D8A6BA18F7EC7A6FF71BA6A38E10F51F646E6A282516B7800BA8ECB867F80E9B
FAC42105EBEAAF269711C0CE1EE92FA7DDB885C7468C99A8771958C008DA29E1
8492BF190333691957488BE03F7387C697011834635F86095CF4ACDCC4CF1009
AA3C59061728EFB3E1317CF247224ECF9FFD37B88D2A0A5C9A1C1B3977813298
8F62AF56BB1C140022F3A30B83C5806A5D2A68A0D7DE3CF703F23838F8AA7E13
CC93975E55E8D643E8CE7C64CECA3ED61B87EECFBD14DB50258300B9BB455AA8
72810C7948B1EC866883E7890F1FFA253FC082B0DF92B1175F139CCD692C12AF
F155AD4D7C1884E26AF5F6F84166DA2BC35986BEB89C511364C4AADACC89C52E
4241BB747C37DB43119263FD591C9EA7260659E5AB473675F8DBD91972A0A607
EB12F3478F935A958D9250B329ED72DFFF1413E660A1ABCBB98184BF9E4721F5
E6D8E78641CA4885EC4E8528B65F7006C9214C84D1A517B53B0BEA8A936F9CF3
29B2F4350B0F0C7A3C9BA08A087D28C9FFD6BC993137C87A7B371399DD135F7B
1D591B8E7F59EC311B6A6961FFD3E15BA20F82158F4EBCCF7BA65CBB6605D4D7
2E11338D87D5B02ED78B7A314C04B7546244474F513F8F91E616AB868D0103B5
4E5341320F1BC615E42A10FDBA51398D360D6B47D8F78AE4F7AAE4A9D1779A74
7EBA5F945E05D1A6D916526C564D07D976715AB3D87BA81F0E2E8EA0BF223320
BE6CF71BA6A38E10F51F646E6A282516B7800BA8ECB865187A1AFD423B1BF490
E4400E6BD41BAC278FE141F58B2597D9B7C2B7126F601786EC4B09DE2F5F3077
293577BF78292784F5FE400A3C60F6468F8B032E5F26D2DA104E5DEE5352981F
D5D4C9A111AA0BAA5FEDBE64327724B46FB281D67E3B28B421338F959AEF7D3E
933A0347B5FB61E85A09301C445C3D82FD3B3916108E22E96B1F2CA5159BA81D
2F515C46229D50F7DB0820570898CE53ACD3EC0E12B5AF108B0A14AC3F8338E1
910099477D1A73D01D09636D8DFE49F75A1FEA7FB038BD30EB76410BA0795658
ED8E5B44889B553AB3021AE0C0715D60E8D7B28D6105A0E23FA25DD024213A0F
8087A08EFE3C136A188959085E68EB262A88EC25462A4A9EAFE20A956D40C8D5
09A4B18EF4517870CDDE29515039DCAC06E1FAE9F752286D45ED4A730B66F160
0139D8A3CAC11575AB52792EB6BF4C790B5512330E38997113EC573B375CF75B
3EAA69C0D3B776E5E469A0E168DFB6AEF318B1F51BA4B165C5ABBE84D7A5B829
3A52908D4E4216283297E4F7EF9DE88A7A33FC9FFE0ADABDB61315E9068C032E
A11C9D9B14DE0E4409134DC478749FF92F0863167264EFA9CC7F27012BC8768D
E3DAF4BFD84C402D527E838E0D630D656C1F992A1D8ED0E05E441BBF12394F7E
EB8B381CB8D4D49DBCAF4C6205808A224EE853AD4E54905F25CFE2167E0ADB24
42E31F4D770C18220C5D77607237A69B814322F4596B941EEE41F2B753588999
185585F81C9BA8B5608634070BF82CE46109C332BC95B250DDD47CA6096C0329
D96C037786FDA53FCACCB9944666479515F4160A02CC9E6C93F62E5E348A37CB
440C6BBBBA505595AD84A7A0DD2323D70F6BC699CDA42774EA23C62ED0216C73
646DF47F999BF6FF6FAD1450F5FB9B42ACAD360B18DDC6AEF534C4587595D6A9
4E70F6DEA969386F22CA95B193990B04C3257D9AFFE291DA3EB108F3896967A4
05CC3BF9557BBA97CF0CA0AC1804F22510987F3AF63F54B81B75FC1C5036EB45
4C8FE7410BB44BE3BD2F43012D3EB9F83BEA96C9925A5BA00548A3141A398195
5A3E8E4628552FE5641F3F463F43AEB75CA5648A11C4330F0125397FF5BECDC0
98C7D011DAF6ED1AE0ECE6A43A7C81DC233D06F6AB2EC17F47F22BB4A70DCDF3
4A78081EDCA9B5726E510616412B7B63E421AC2C8430FD153C81BB2C3A514453
D826F13E1E0B4599E2E7913B88A92FD503722F34B8C411EEBD07899B75F39105
446C4636845686EC811133C56D59A3915B9DF6704156F61009A392A6759BC3F5
85A84A39BEE0AB4AA71E488097CA04688C94717B2F1204BBE9A32B02C569FE47
B757860F55F347797DF580DA0E0A4F13FBF20B25DFF7861AC20249CC255951E0
5DE00CDDA4763AAFF2692126B4FADA5100B43CF881BAD3820DCA4D00D8F5612D
A38C110B09B508770A202E74519F043C7CD8FA2E6C749D88789C53B96C169F1F
E7A3D115E94D83126336DCB8867A795FA35A5EB11DBE0E749BBCAD61107F6273
E90DDA883A59F7F3164E7703909EE04A1398B7099C43E177F5D36E7AE51C420C
80EDA4C7B9E7AA036C519879BD2073F64575336D31F207CB8F046CC0AD35FCFD
DBF7B4B6C2BE6916DAEDE1206A96B530E0992F3E91EAFB51032C05E7D42511B2
91810943D04AC52679ED7C3B66FBE5CEC1281F967597BDE9108C28BD3BDCACE2
D523AC51DB2BE615EEEF46770E341FDA50EA0C33D256176782B90D7BE484BFA3
D75237FA3269233B7E735477BD3A2A4CD3AF4410331B1F407143EA94DA0BC737
01373BBB6375EA7AB2ED618FF668C0F2EDC7FF839307FEDFFEC8F435767AC009
97A6BECEC6BE7E0A995FE1F23ED1AE1984D78EF2399E862A26A113A425883428
50F206E4C631AE0472AE86C7CEF88D6998CE9D804C05019B3A82879EDB943E49
C22697037894648CBA1EC08E9F58EBD80322680FC4456E2E0FAC9B5C43F6290E
265C8A88331305E67BEEEA9A03950593667D1F51A6108AC1864C968DC394CA30
0DF3C5A3E0FF81E9092F362FC1C2780E963028ED2ECA0B7A027A91E51A28A5FD
E9FB408F222758ACA18D93D034D2C6FCDDCB303F1FEEE8DEF5E7410B896BB3E6
51A8C015BE7596617349E906A76B29E132634A1E34B04D9557145C824496B360
6E913A7D988627BF757E7E3AE3BF9D3AA5AD4F5C82088625FB825A5CFD16D9AC
883CD07A159ECC675E6A09BEC7995E07B3C24E75C142A970F63BC1014A091DC9
54483B9F874FB0C605A3CF549097960C1297C7925F24B85DB900BD9B73E650FF
B71DEAFD8526EE87B9D95973156AD3CA9F07CE1FC794D4BD78C6F05212E12763
2723E044E1082D8DB99454AEF0AD0088753DEB92924B8AACE23C37970F89B6BA
6E8B05DDF2B538BC24B526ECDC0ADA099EAD4D104C87151EEC9CB06B3771F1B0
19073774CD2A2944DC287DAE5C2DBBCA73CAF31025A3FD47B8B3199C55F1DE2C
BBB2F3B2D3F3B7005E9F83E783452A7DDA36D1BBAA24089A1878AF0758470A09
72F9F9E6AE36035D2B5AF9B9433AF21E8D84C50F750434191ECF16684185AA9F
D41904242E9A5E28527EE6316320769D55983EC212E3CBD1C1184CB026A08245
79AFE5358825AFF1F4608DB6B201419E5B08ED32C29D3EAAA1A2F363888E2C46
5AD7B95E7641782E3298C0C14329D5B5C1160B5D69090DD7D72C1AF6963F1248
D0888475CFC1932A19D7626D40189FDAF1286142524FB20ADA90546F4AC7FCA0
94F32499C0F8AA33D2C7D0028389892020FCD23AB28D932EEFF25B5D70F45018
920ED59CCFE036A417D0BEC4D2E8EC7B5FE002604AE05DACE3C15FA71598F0BA
5A856038C66F720952543DC7BD168457C87C169A266871978FFA3BFECE3465E9
F09182673361806D9E6A6A1DB9213C2142AEEA0B692ACA1E819ABF84DDB5A1D5
E9BBCF46FA3AE7DDF8E169FA4E0EA83347D44BAA6FA65A1084DC7B4B8770D3E6
2C7EEA9759D337A1FEEC22A64441FF6949A8AE1753283BF2E9B0A86139A5BBD6
B2384F074BCDBD82DCA8B2F64974B71872B0275BFF76DD3CD527317F3063086D
8B6746817FD31B267DDCBB70CD5E15CB2104827B60B86EDFE9A595ED91541B49
4B18AD646229028ABC08FB2713C4FA27A936F7574C32CCB530B2C7B42D4AE17C
C760410E1A0B555FC30C8CC88A6764852E31AF8787CC19DD310EE1C9F89F88C9
ECE08E3B0087B2FC75CAD18883113AAADF162B02335206949266A66D60F7565B
29F58249DAE03DDA74A59A2E8C012B8D046D3E8F0B8C9F7961392FB22C4F8680
188E87C9E51DCEFA37A93751BC46076F01E2D91BA27FAF9AB7AA017467C20C6F
31801F823E6B21EF61C7E869CF3B0AF39F9DDF31D967A9782C3D1060E25FEFDA
9A31D6E86755626C5C39B92C18AAD0147814BF27C8FA6DCA0BBA0FF116E05BF9
C6B42EA671743480E6A45FEA0456295803305343838490E80AFCBB1340C523C7
E247273704AF5EF1DDF72E5B9575E9569E23A6B682C062DC908673639472B4BD
D57ECD3B26C607EFA14CF65A22F5837D99A00136660E99E698CB7816B2327C6B
BFCDF43ADB4E5D6BC03122559CEC7CF2B7AD52EE40319BF9FE809C13BE788C4D
80C98301CA929433E1F250004CDCF12745359AE31AEC86D756659A14AC21316C
183F9C1A3AC7F42D1767C2A8274A10456758B49C4B75E97026A70A7D06D47649
CBE0F2159E7A09327BEB82BEC7BB8F1C1D8540FA065E4DECF024E8A5821F6CC8
CEE36C5B3BDDCB4B8EC7AAF56205322F919195B5862C96EA1243561331C2D9EE
7B65B8282B43CA49BD54EEC1B72058DE679CDAD3DD8F72FC2196458F98A56792
07C76C999903969568B43673A80D0C58D555D75A0A63D485FCC987A796F51CCB
0F6C7F85853524559DC1D014EC3759591AAF9B974EEF817A3B0F0EAE143E8DA5
C99BF5A1B462BEF910CF31255442BF04AD519BD32FBBC0D754AD58FBF92629DC
8866A0698E72EBEE598640323E44B6BE8B3EF7FE3444518A18EFED89C4280218
4C3BE3EE5DC01A9FA9D3613E04F4B21AFAB6EDA5477B8BF61AB70AD1C6615B51
881FB83E438FA711592FF6395F7D502EEA7777133601A5FFBAAF6FBF4238921A
4A53CC6D7F485E4E870BC7C4BF3CB01AA002B9839341038CE51E437A784C051E
021D36141E5F1B0E6F48F939E7607942D643E7118C6FB8485C3B49DF8D5CB26E
31BBC1D02D634ACA4FE2E0A3A7504E4A466962C44C451D3A6987212139CEBB6F
132F0875DFCE9FCF90586E2792450A85D95B7DBF3D2758D029FE6D1EC1336A15
4B5490D174ACD4EAC7FAAB2B6EAE8EDEEDF2704C327E35FB77C7D5C834224945
955899DEC9801311B7D2C3BA3027C823E8F673987DDB3166B0451C25FE586EBD
0299E2FF0C685AAF2BFEF5D7A650154D81825DE5FCCABB1CCAAEA3BF33B24F12
61ED02F538EB5D0DA359A819B422AA0D44672DA3E7671FCF89B8B76CCF92AA7D
1BBA8A78D0B43130B4537C25DFE96A9E6313BAEB3A19A9447A91B9B2F6208237
2768E4AB09387E7882BE91EF888F5B3F7A4EA73AEBEF22A27A4638E865226A54
0ACF29766A458597E54C3A1969B336B1CB7C13B8EF3C7E74ED81093223688CA8
F475D28D1A1590B8F6948887ADCE136FD736B9D50B7B557C41155DA4BF032502
23F156497F280406D6083ECD41F2E476FCB07E178D02B7848BEBF35F6EEA79F3
AF9D4458792D3E4DC1E0F3236A11BAAFD8A5F9BCEF849935919704DA401374E0
D4A996E35FD3C883714B3140AE61B32B3076B845E108684DE46BD0EDE34F588A
77C230CBC0676B6BC81F3AE851B5F86EE8C778642B51FBB307F55195A6BD180F
6166EF8509A93275D0E993DEE8EFE824E0C352F9B9DD64414BD3D566DE9C08F3
CA3861D33E20E696DF55F0538C91F54D5CDBCE8B952D93E7F3A32E8860AB6071
C60DB0E0CFCC0604865A7C423281663C420B2056E8623D075070526420683EEB
7F265CD77BAF4352916296E58C8FFE608C1549458A8327161B8D6B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3CB3A677904DB96A4FC7509374E544FDFD4473683CE7
52445AD38E6F3AADA886EAD97F34E1B4DE04B482145F39350CB3BD73F6BE22FD
F714EED60CF92C851335C54AC440689A9CFB00470F98FE893DC9FE736A73D749
8A032F336C94C4C3C0F4ECFA9007FD8BF48AC4747D6A07A1EE6BECB17039FF93
8277AE848F2424871BB26E5F9963F3C6022BCB476ACDDDC00930BE769752504D
9980BC8D8085015695A4B206D94F9FBEE46F6B6338DD6CF29695F529C5D7372E
F249FA9C5B267A504E92D83012209B6A453DE2357CA4D18096E23B75C676FC8A
17C8047C7BDA301A3FDA7F3A8C08534424CE824EE2C0C5D132FF52043CA1090E
53F371F8CD2081A7DCF6C4D23EA8159ED1DB7774C23B6540540B7E0F3A7B8EDB
F4AB33DBFA1F4D3247809896E904F3EEAEE288CF33160E6231BEA40513182831
E33921DA5D3F2E4484D88CEF40CE313C8754B85231AF98893672C3DEF7A733E8
39622CCF9361593316FCA3E6ABE035F2A19ADAE811C74EFF3A0FB759F08DB739
0B26AD5250D0C6C61C210C8E6721BC5514E18BFE38E0CE79ADDF7809B2196708
B412205FCDBD5B08C6ADFBC2E20E1B62223A7A2914E413A00A993F5542355968
3AA301FACD379DDDB1DAF3EC66FA0B727FC6AE134C01819BE812383102D906D9
36C579733D7270243C367AFBB76001E331CFAD639BC4A5B134D08DAF80F9403C
AE2EFBAEFD9CDDB5A1D5E9BBCF46FA3AE7DDF8E169FA4E0EA83347DD892B5A16
3785EC96245A45B4ED6B5BF9F0750DC176964C0089676139B95B6170A1856367
EE3FBBBB32173165363DE21EF673A9FD8F1F6D3906315A09B88C3910BC113A41
10B17E7A2D7E4D7B9F3C55F19F4663A1D97FDB790547FF23C860C2CFDCABB5E6
428AD036B21CD754133A2722778B45B63E3700A128E7BDDFFC28459FB0A22594
D4F72E5FB7E0ADEFFB8C9D1A6570919B3F4246DB26456DF3BF35FC83A46006C3
564370618F60AA3A85021CD0CAEC1E3AE9A2BAC620ED2A12432CB1FD2351BF27
F03DCEF58B7EAD68370E4A0A6FDBB0B23809B9A42F9ABF48FD69D228F722EC13
D6CD3D48CCC712D8FB65A4B85073FA7C70A3FD3F1508DCBB9F314375CA2826E8
82D4FF6143BB5933AE882A540B806AB197B102B3BF7DEF41CA3B9DB089C0995E
743FAA61D49C79DE4C9A09A5DE47786C8929492CA2A57E6524BD91E1F1638D68
35AC99E993CA45692C4749F00856F449A37259EB7338CD9BBD4D6A6C511D65A5
02CF8A6A26530A92BBE9D55F80435B30E583F53718ECDFD0BFC09153B90A002F
A840FA6FFEAEEE59420ECADFAEF80EC2B697928BDDBA32D6066DBE9F9F6A572B
A8BE7D6136C56B8AC3CAD293520707315B7B6D5D19AA32E09D7EFD0F229B2CFA
3C96246B36D399345F7C174BA730CB58E65C0B30BEF7F044473060C047A5DCA8
A63C1D7462EEF63349E1B5A1C4FC665D79AA32670DFE257FBB9A55FA80EE0B21
5B05E1D829BBF44C90CBC9C93A93AE21039986E27AF406E2DAF411198505526B
0D17BD23BB25FD4F79F6AF4BF306186A29502F894F48D395BAB7BAD72F71A026
CD359AFFCC3E73F6BEF634BFBE1A3302C3C0544755F2D0FADBE2BCFD0DA870DA
49765296DC38127FAE211D946F9201CEA52A380FE5B0CCB5380CFC1A59E27A6F
6E6C1AEB192DB95D93A8357AC2E1AC49DCB371AC94ECAA43E37958590CB618DD
13
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC88F86B07C1097F9C5C5673B88582CEA8CD622F9B0C79
E463DF7F2F4C6640FF3852BEB520F7B23D8A22E7E601EF9CC6D0A2E6E82E6840
65B82C6A3A6692811E2B4F57723AA3A6E27076A2F63D6CE1FBA7ACD844E732FA
02797B386F2EDCE9FF9F84EEAD17B366D678E61C6176FEC09C94B74DFC090CCC
40AE9DA65E5DA02E7A7E8A840B45B752AF11A279BA06F821525DD0F477831176
84C80B29D318260FBC314986223F9EC4DB5B0EF2EF5D424C6DA581B49C709E1E
98149FEAAB15DFE7F94977CD2041DEBCB1FC8F4F3B288515CE43713570027C3E
2D68BB99DCDE2D950740A8EC16C42EFEC22B34901DA9B302C7B6492ADCF1EE4C
8C8D102B0C81DBC566450B0EE201286021C5A953D8DCCC8637FA5C02E813A318
F739DDC20785E785D3E86FA49B6804313BA4A5FED7BECB1EF153B7E79F9F449C
246733E425AA6317DAA66604633B159186F8846CAC78A7DC80655064CE701177
534AB9CE3BAE1E963098AB8D252B6668089F50930339C0DB023D08E56830888D
15578EE45DAB0A4848457AC88F0EFDDF41C475151142AD85180CFB2ABF3C70FD
4D6F5D2DB8636933471256FCFEF68BAD89962FB6264195185AA3AAF0221050CF
667F6493508B69352AD004798C505E280DFA90085DDE5E201035E216DC09694D
2406245E84F4D47146CDB5C83345C80493B3ABABB911186600AC62FEFFF4F775
4C4634DCD369BC6549D8D02596DE943C067A52E1E2498D6744292F1C935F264B
C418F82DC6E6BD61DBFE4115EFD915BC35CFBAF0B302D1B51345D93E3AA87D79
02FD7717B220EB681772F7DA60FEE4B8550AEFC8DB84F40188C27BBE3F428015
515987EC197F07C4D191C75FBC0707877962A117040A6C7C0C44194D9A9925A5
E7E8DBCD2179606DE0AFFB919FCA0D249F96C527822305F5F1DF0AE468D1CC58
7A732FFFE842E222CA480F1F22089A3807969231251939229BC7DE43E8733557
0FA82647AAAF3DDC1CB2A8C54445163A14EF447D7E09A12CFDCAE0432930CFC3
4EF705F801C1BE18D9A9003DF1EAE13E909E2AE6F4577C2833C59AEAC3362D63
2C46D544863CE042C06D7791D3EF0A6ED57C7E21595A6696BFA861346B76F0A6
4687AD720699E31548FC7703AD5E1BFE6AC2F8D5857311A80A95D9F7A5E8A9C1
D5460FE747D637C095D3A56B3D34375E493D7A642A63F8C286FC69F1DE5A80C4
C8B98B99551015629711BE7B3BC62F7F0C2F956BA1A8B0EEF9281ACDA84BDF47
71ABB2128D56845EF751EF29ACA96CF1D2728FD1F66D22D9E23F86D207F78900
67C69139520E5D1129031466E74112A6709BE47A5332D3D80C97C473C4942FB1
04B117A5DC62AE2D88586DC9DA2FE1B1FF82C733E34F7EC4EA33C53F89D5DD64
07BB98B211697941A927BC72A6411263F02140AEA93FCF1A94F1D9A4D1598596
C6DD4E1E0DDA0D4DEDABCEEFBB94D35FD6AA23331BD1E8297B0ADDFF5AC82153
843C6F7837AF311F4FF876AB3254E39E006F8EDBEB4D0BAFC703B4BA947B234D
397EFD4AF198E7D3F9667872F2934DB4715EA754BCB7C7E13232BD0ECABB2AD5
445B16A1345F4874C14BD64E1A605574A8027F3B602CDF89080FAE520596F4E2
31D1B3A32E1D939EB933A329D0DE3BB879970EF1DC5428128D47FBEF64F6760E
5E0DB8F6760D67B53706A4FC57712588786F47B22A911AEB7FE63A0334BB90D1
190AD30DF81A112AEBF72608CD916B9FC4DC2FE8250F3FE0EA96AA9B80E92D68
7F6B38051530CC0639D346F0CCA613E31EDC8F52C25EF18F6033F28624F33FA7
3C85024F71A49D8BBB399ACD6A0289B620D346EB848EB87E629DFF39046629CE
1313FDCCD94A167A162D1E73F1C9F9DE97DD7928DAD0B29FEF423188F83A1351
E140EF04A0C516FE4A6D30C558176233B2FA5B048E8247C31BDB9027900C59D7
380F6538ECEEF3141935565934159AD368851F4EBC350E7364C6CB15799103A5
8C86501BAB79876F6444E6E684CB75B2C5ED13C7EBF38D7EEA4331C3CCE70A09
86843F05AF68AAEADDABB22BA15E6973062695864229134A8B3DD3956F490A52
6C7D46F2397836000CECEDE726992405C3E0A40402C2CEBC696BA3C283518FB3
111C44CE85C609B90C1F35B1E104720EB73D88E5ED86AD8713091D65D3F9D492
62DE8281825C7F7258BE32F22ABDC388CAA5180C78E413902D1947F5D5F36A95
6C3A4D21C4ACB7A03A6F314E2367D918F34F808F0077825375548CD323D2B39B
B88C0238F77180DEEACCD291FE8900C5DB0A3C0ACCF64EC6B52ED847248310BC
0FA88D9FD11A54142AD933518CBCF295C49DD53E0B24669F87A483D14857C121
0977B690FB55FAD7557BFE26C7F23A5818D452ED847844AA3E1CBDB2D3222A0A
178A38871C5C1291E53DBD5510EE5B530DC8C78DDD80A8530918B145CC693395
0198BD5481A6B7E92B66029407833B5B2422F40FA10FD36A3AAD0BA1AD5E2739
F38D58A8D4D179F2AE014CB98D0610DA6A88E723269334EFE6D581759DE3856E
54EA5CD721C7FC1664C9D5B1C28F36AAF51A2254F118568AA6412ABE6B2F3AE9
B0E7DC752EE2A86EC2E6C293B182DD0FAA5DF0D53E0E5ECC1D33A07A42C2ED5D
505755AC051ECBC64E7FE1BFFCD4AE138A45F64B7AFE9CBBD7E95615344EDB69
A5CDA834F0218382806F92D5B6D21C5AE58CBE93BC28C34CC1E5E3F3A798430B
5C3E99307532303EFDEC82B9355CD37554014029D23E7AFC3F97D70D2457088D
C793B25F2E842B96C8AF15D5F9CF733618477E954893AE2E4CF0BC38DEB1C57E
F5399CDD5C6E3648617058AE5B4ECAD38479861F0EF34082FA9ACB1AFFF9761C
6BAB875249A5206D0F071C1F55E8E31EE7BCF394E5E1596F8D5819C69187633C
5635C8CD44E0537C5FDB1748C031488273CBA6C6DA82BF5CD84F556AF25B15CF
A596C86EFB17373DB679676E42B665F93D2E4A25252D7E64A6E093AE698E3B87
E62E82DFB2E9D2B1B756C03A5D1396FFC93BCA9D28B13D2D2FC2F379434C6A15
5F2A0AC801AA8AF4578F9F2C21F88729493B05905EBBAB8822057DA8B2C95DF7
51A861EEFF8E6F72C96A96F8856E4E3BEDF23D9D4EBCF0DCD736265E76115509
E71CCA4440454A59828E787E5175B8D94D778CA64271173D435C5EC6B136C3B5
1C031BB4ADA91FAC52AA8C5C3E2D8C2ABF3ED5F7BE0396D97394E32BD23E408D
3CB834AA1BCEF06D768E9AA43BA52F20B57755028DE268FE8A9CFC65C29EC45A
865048121027297C6D03931D5A2C7876DE98AD7BDDCFC0412FD7044483CBDAA7
D195A6BAD198C9AEF527467CD91A1B2A3D894278F90699C9F7EBE41BB4844999
B93426B196515B34AA04D09CD9E63E57230A96600699183520766D1F52FAE889
1F0C74F19E5CAD2015D567FEE6FAB2B311A1D5A3F698B315F2F3FBA0573FB4B0
F5AB4DE45EAF81092AA2E4E8B53EF04FF229BF1820C55C3FDAA14ABEB7E3F9B0
4385C914549F66AD6BB6C173FA98B8458AAB45C84D1F66EF7F6B04BBECC25928
6EBE3B7CB148A0A34BC3F001CD524FF20F5AD937B3BD27BC272BD739BD2648F0
85907603B7E5566491F6F93998FAB4400247574165DD9429853ED7130CF9EFAF
AC031F302655157132687D2DD84916575D095167AD01C2317FC9D01D49E3B39E
C952DF960918FCC37321FDF91A572B51D0BB8E0FC18FDEA032FE018B8F157E34
E41730F76C9E4D3FC26AA77571A1A98D11D70FA5F23B232245B37F0A9924F3F4
99A496861DC34E0CAD41491691FB2C4EF6D3FE45E68823DD9BB77FCEF214B079
783A6112F2E8F12E8904B6F58C77C98A6347CE31F7DB0B499F7EF45E15258A14
8716F2C9C50BF53E547157BEE26704390D28F9C977788BD490C3CC59F2C809F5
EB1D5678ADC96E75078152ADFF5AA5E2C1D657F0D47075308AC836F9CFC65709
497DD00680533741CD7FAF7865899F01A02ADA0BC3337A8FC5B541D85FF49AE0
086FA38FD465D6C73B66CBC8FCA4E46C4AA949835C45132F7426AC820DD25B5C
4C1EC7C4CF5F39B560F3CF4E138685EBDA38AA5CBA5ED0BC3C24CF56D184311E
77992AD2278EB2C5B25510032F4ED27AD6B00167BE303C3119F8FC974F7DE29B
134EA8C9FCE5E8CA57F3CDB7EAAADFB636175D4B72211DD8CF9F0DC52B693B02
239CC3E0060DC5E4F3B7CD067A955CBD485E9447B04ACB49E3EF09CF71D8D279
012D5A10AA52A1F23C34E4D306BEB3C05B924B2C53B33DF0DB8B6223329276A9
9CA5BAED791F36277DF348AF1AFB0CBC498DF9D1299BF90D5C35C4314A117CDA
7CA365B324772FAFA2E37055DE2E78CE25F697DDBE55E4297B539AD35F1AF427
7A305FE4BEAE56F98E19707BFFB57E13017E795B3B399327837433F32C65B2BB
83A0EB7E4AF4ED2D24AE94684AF76577D3C9190252B2FF0AB8192FC50245A8CB
E61FE56797602447AE07380012FED307FB276714AABD67ADE23668DFBF63E3C3
DF2E80332621F132B03C3E208018437DA56C955CAB0A266193E259660E9DA88A
E273C09E114A9638C9AA8C3524CCE0F24548D74CC8AC944958F1BAEF5CF985E1
9374A20372CEDE3C2E0EF9F1C5744BEB0B3DF52EA8A6FB03D3BA955F8D3EC9F6
CBDF070F7C775751A1669EF8FCFEA4BD1D81E9B6F49C6A5EFDF42ED9FE26875A
BBA5C56DC87F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBDF6B6D329ABCADAF9C19EAC5F36E1D210044B6EE67
81817CB502BE94904916531564BAB2A6BEE21B8195CA8C2C239AD3F5E6367118
DE229885DE2FF1F9AAEB59A728B7F0E9CD9B977E0FD77C2B28FD79C68B02B494
2C1BB525143CBC8BEF7F9831A0E0A137ECC98C66873C49DC522636D5B7FB6EF7
64097A17DA725C3AF90CF297872CFCE56CCE1582A3A05CBC51647CFF73CDB3B3
8CEDA174CA001B312141BA6CC5B99C850C4A730ED50DB3F2F775CFFA46A74C3A
092A7D5B7274DB52066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0E0AFD87C
47C937209B3DDB4F2FC6DDE67D9ECDCAEB8255FF96F06EA28A98D40DFF9A4EB0
9326163E0BE257546798FC4EF75EA4F294EA8496D032ABCB2D78109875A1E454
EF28C6D432330FEE56133F3C323F865B46D03457D17C81740DAFE000798A2787
814333C50AABB6966275AAE8D8CBE9ACD7740ECA4A47A985E2E16052A8C0A764
66650B00DCAF38B8C9332CA8DC2E6F45197653F5A7DB9D25F0BA34EA859BF991
D0354BCAB97DA3AD0210C33F871D66D40597E4F20CAD0CC21D2C3A11820AA663
1D8DAA61F415A48B0F77F4A231F76CF009FC101B4A0A95F9E4E435043FE03050
AC8844641B1DD28CF1325D3CDE7E16731A336535A8231320B310E52436CC4611
8131021402F19CF7286586D1DE7A371B537C1630B06C33F7273ADF8801A3A75A
21C5E44E033F2BF6960992A383636F6E73AA9410881AB9BEEE451A3871DE4536
ED469B863B655F084C94FC6DAAFFD6FC5D5B523FBF1058A8907ED4383E343147
A45701BB16F608B9148CA790F2B232A67E71C893B96FE305B9AAE0C5A246A6B1
8E275EB0CF680A06BB8AAA21828F98DA44728B485BE2CFB3AF841623A121D2D3
EA73BAB53FFD35C67AC9C3B91DF9A4D1BF35CA6A8CB8F15F9144E36E456648D7
54560459B7CEC323F8B488B6F5A8EF8D69FEF91E13323FAE6EAAC2E5ABF665AC
E1585E331A8F8B5AE06FF085C1F349215582AD71679D4266E65DE1A3A418E02A
8BE169C5D0B120623BDDDDDD4A4A3EA5B0A1FA84E55ECA7617A41124595DB723
ACE8B379456632E7FD1AA490E97EF1BD458DF08168DF0D73A1817FDF25DB83B2
72364E00602BE904C3104E28F1BC97F954526ED470061A1D580BF1F0BCC7FF3B
CFCDA3F50A2DCCE206FD51CD406098F09718B87F4D3D2A68B2366102ABAD3D8A
BE1CFB0A9DE45E663E52C1F8296D44549A5ACB293CCA55299C1B7FC3CF0FCB89
4D177FBBF1DA7D23111F9CE050A46D17DA14ACDBCBB6E7A547A5C29288C628E0
8F20AE2DDC41E023D259FAD3064DD668D016CD47C8D086A4C9BA264829CBBF81
E16EB49689E6DE0BEC9F0D0757DA536ACB2FBD7701DAF3BFA182C822EF32A610
14DCEE4C10D079E09DD023897E5C04A697AA57C90320E876A9D379C95DAA74A8
F55CCC78F29612225D642CEBA1ABCE8CA4C24E1C53AF1802803BAFA58499CB72
47A5FCB8A175ACC50198C8DC5B2B886C4663E744455F75F6CCDD17602B9DDA97
2C7CBDBB564F3975E4776C77C9E9CE600B868A5334480557187ECFC0EDF5C1A8
3578340AE2AC05CDA9853770CA04F646FB7704DFDF783B55A6821F7861B12877
C17CE7BF85A1A0F45C2285C8FD8AB16B1EC17403B22A336925DC1BCC1BC10458
CA6C4395659B0DB6B612C1515624B81B7733EEA500102E39529212B65E7565AC
5AF020369C09E15CB4DF774A63C6E75A7426A7632B8B4797AFF642E3EC779A51
7C4D6040629FA35ECF5F72BC11EC52FD875DAFA62094DDF19E30DAE8C4560205
1A73839EA18F58F04E7136EF4E084C43A6139EAD2930EE95ABAE64F7AAB44907
6E191A04CAADA5C99DAC0E8B0A955302C1729C903A7EB7450AA2BCC638BCB6D2
318C6E6FB8AABF774318AC445D88D9659B81A1793927F359319269D09D154B8E
1D84E1D1C15FA740A00EFAB0C19B7B6C6A3BFE86C94FCE2C16F58B8554679E85
DD52F3371D778B185CADC001476DC5CE792212AF26C201C8C824DBC23AAAEA2F
CE789CD18B3E16C95CE43E0C054CE99B9F75309C621F930D074D76A35F19891E
3842733F8AC91FDEBDF9FF0D5D177375CF02D031E0E8A39F334959E7F9B0AF89
23B28EE0F0C862742F9A5F889F5C57CDC1BCC32B6E3FC3BE530F1F6510D8F19A
CD02E04943BA7EC7F18E90B5CEF2130D6EF52F14202317FC40F6C9E49FEBC2B0
D191D9B7D1A52548E29D4DF19FB9DC0BCF64B60BCC727F951DC7EA3BC6CD1111
9603EE13A25D981B6802C7E63E7A22043E1C81416DB353A4EC3E8784399CE0C8
6BEE448E4120FFE9F98963FC566AE808AE20CAAE74590B3DD20E52FEC2425C26
A60178B8E8F81C48D8EC11E458D64A6E39D4EE42DAC31AF82047C67E36FDBF59
07D4CFFD67BA3FEE0A83169B6C371950D4454953E61B5A03B7A717E2549FA37F
2D0F72C1F50D22B1CA757C4964F4552D7DDE76E26C270781E833BF2E62AF339D
6C19FCC634E08E4E5E8175E8F3C861CB90E032EDBB29432AB3533DCA6D5343EE
D6B47F9998114BF92E9A4D8796FB9DBBA8CDF19D5CABCF3C6BA6E9934C391131
6220EFE0994552324559442F3A2379EE0E65314F93025CF98030242B34686881
B2ED80D5A156E3EF0EEA375E66905D49892B70588D776962D803F076030FFF8A
6E67975939A309E59A677A59CADA930F52A470C1E54DBDEB37700A3721BC3AD4
6EA86FA3C4DCE5C2E5BBBB62E18C43FAC309B1D08B75145802DA8B6E6B2C6D45
FFC106C37AC51D8688EE9373B2EFD14A1FF76CDB4883B98CE96563219F82D9EE
AFC6F78AF8033A6885457284ADE2BFE27697FF9C6A98C0F94E2411023F22CD29
80F7ED94D2EA2BF7995852A58B0CFAC2990DA3A1122651AC3199BD45A3407A47
7D1A7D972649F1E5AAA05720A6E020685F5E2937C95B50D07C6316ABC08495EF
3198AC1630F62DF3027C7E083EE4F51AB14E086217DC4B46BEAAFB923B5497EF
22BF3645D4AAE35E132D1CA61DA08745D02A196F9653441D5D99563AD6A01599
5764F5EFDC2BCE4082C1418C66C90D4AEB3FC1FC92FF7B00CE081E7600158978
ABC35805453F84CC5EEC991A5CDC8C304A240C77DD74D3948549355B2CE67FEC
2D4EEDD46512C33E3647AAB514D5094464C2C0E24094C30247BC40DDEC907CE0
F42652BE475208B5D9BD19B906C7D162217D273ECC3AD0C5EA2C6E6492815712
79CFF261C7D433B2ABE29D96E5720E9ED02B59C90AD14E7456D7C51CB856383D
1AABF0209B70104DD5760C7AE8A23C751014185DE9AFC917F2D783A0838DB4FF
A0CBCE159F7C9052074BE0959711884D54979C5CDEF2E4E3CB6EC9FC5C3CABF3
74685C35E1405C7EF583387FA265B2D50284860A8999BEF98BE5292433CCDCC1
68C0B1FAB486FE7BC2E431EE3F6186F857B2FB2F403BE8AB3B9D4AAD46370C76
C3162444F3AA3672C66C81B3B57AAC56032E6B45D0B3327DECC621D956927412
507700F7222CCB48CC57C8C32E97CDEB89CF5E0C032E81DE314FCBC9A2833660
3006289544091C3074E04673F0EF88773900553818527039AC74088A194CB25B
A1A334F4E505BDAC6F537AA03AB6FD0D5BF4C9BC3213A5BA19D27743D4009F15
549E0A5D45A0357FA8A5AC12E289CF2D955B500EA7D9EA5958819F5CE03BEF6B
59B669723240EF4809F05BD9039DFAE90751B085BDF6F5AA9A634B5BD8EE8D01
867D04D3D49F5F31B0A04AD8EAEE5761B51B310D8F6A41B74ACA861AAABDE118
79E3ADCF4CE6147FF7E06FF74BE92989C382E8FAC254F543E8D3E7146C9A0609
386D1C9239E6AACB28D629DE12C0CDF25A65582B0CD2180662D1D1E9C9DF1DA7
866A772E358CDEA9FBA4EF1D05428F54E69DDA2B4A1261CC47C1960A223B94F3
7843A6E820F9C89089D6E93E537B37AA80AC7DD11E95162BCCB3B7D78A82D9D6
D54932D5495476440B9864E746F74EF95F7E0B679C0D5FE02E0CF9AA45628844
A54275C7B0058172DED8AB858A3708405E2A42E5C47B6FB432465C746F94E090
DEEA37CAABBEDF919F519EC7B7BEDE7A89B5C99697A210FB5F43BA7DFA7A6B44
1D29E047314C6B8D665D7AD4D88D93C0C8AB119B54176F13818AD4F8567858D4
1F90D67EAC7EDB89A28AE4988715E24A126B37F2BC9D34718CFF0C7E964D2E3F
3F43F762533C0FD818F20C94ACB7915123B1432A6CFAFE75D3CB61E1F53BC41B
415182F40F5238A78CC9E05D7B24FADC2B172D329D0064066026BA32428AE3A2
D1A275297514E762C01CD9930799BDAA3C034E90D4DCA975DC5053D8E9AFB660
0B7E2D72C3661E55B755982F4503E3C6900F66C1307DE0DF1816E435F38A7E85
CF447A19D91B8CC30481B5C49B6ACB4DC451F9C5269B2153C07311290983DE2D
68D10F80121551249FFC6403CEF9340F82F0E079F1C7200DA0E6977B036E69FA
E5A7F17F9B343C3728B26AAEF33C0C45D0B3A5A116E6D0E0C095EC82A83DB6FE
4117618F07A640306AD86444DCD28E703FF2732D0D1797B70A52A1BE26E3051F
E222C969CD40D03EF76649A6AC929DCD3FF06B9FBF62FB12E530B8502A8FB364
2FC273354710741654704A4035ABD05CF1DFADB1116E4FB81DEAAB0CB008421D
1582EA2091E8ED9F4F6608EFBBBECF32F886C8D85857949472AF39337984B781
D64B6075D35EC1E3507FD4FE2E7097A37739AC056B0B53358140F209905103D3
B7C48B8EFBF5CD06453A25EA4468506521BD1513258185E463FE973EC7CAE49B
9BB9DCDD81DBC7413F84071BCB3FA82780691BB952D29ACC6130A67E5C0A293A
0032D6CF19AD21811FD0A4E11C873E88DFFB1600AF07ED3EBA0348F6096E7794
8FA1E14A0D55A9D7D1D2BC8C59DE0A5C01FE0E5F3EC7EE6E6540D5A2602F1391
706EA336F89880CE4C5B805C3C54F112F7AA206E8905114B1E6AB325FBC17947
2965BB6B99C21D0CB6988EC557F15121A5265A4B316901E61D0B6A13CBC0EB3D
E3BE0B6582B203C55279B6778D5405D301B6453F40096FA604C465F93E9719EC
CC2067B9FFD03692B957A6C405B74D7E3A256280E9447A13D00FA3D6E666B4AE
09D0D4E17D3EBD682120F16D0C5CD183D626883D5D0AD261A26360C6A22A08CC
5EE51D63E06664FEBAFE8EA3EF4D61FE9BBCD811E591E92E88BF0E0D131D502A
D4F1A6CFAE9E428541B0DFA805BA4C153BF2E8606DBD72262B58167617019BED
0DD554AD31AB998F5821BC611BE57EFCA8DEB439C20604A2F7305334AF446F69
486AFD469D399F3A9476BD22EA0588406A8AFB3B28FDF2EF9CDAEE6E66D20397
C46FEA9B6EF288668FF3ED38346058B665507B45B50783C0B7F2B149EBC1EBB0
2C3344E965621F2D21847A702489B28CF62768651196F757C5C225AF1C0BC901
3F7EA391C892A0E2E1BE404255A2DDE90F1403952205AD7583B62851D1C584DF
E01F26F3CA131F5338E0712671B6BAAF068A8D847CEA6EEF8BF956A4BE157161
5EEB144751981FE1313ACA0F29371954548294DE90C4CC2C0AC393424A1C0FC2
4255111255AFE2F18C1272626A0B3C2FB4308976ACBAF5037EC19191219B28B5
6B22AB4FAA8B60536DCC4F9E890C18E8E4AA4B404CB08B7DB3B9D1350F00CD0D
E83A89CB97C7E6E5D5C17A42A296FD7150760AFB7653B6B48F2EA618E11E28F3
5CCCD180DC4E35EB6597036080C9C93BCC120E2E8273EE34C3A4EF03868AB98C
5C8DFBA2792D675DB574EB20E6CF526580DE7C8F7445DB68CE32AACD6F9DF713
EC04130145F296A8AA310361D03B248E7E7501BC64297D3C8BAF3BC9C0D591F6
1F8870E661D2CC3C4CF5D9F46E05572529A19B09E5BB056BCA70A7E3B757A813
0BF3BC078B17590D62EF2B5614E47D092A699F1B16C8ED115437A8EA8CD328F4
CD47B2D9C437BD3011216F3F8AF6256511CF4FE9B3F3EAE1C46FC8BCA434A526
4E6403BBE783360B95522684D8544E85513A94BE894217DECA2F18BF6FA92CFB
8D553330D21DE023EFEC3EAB42278DA9E391EA173B346DDA22ED2A8FDF0E16BA
13E4A36F92147E38CD27171877793175C9CB2090624BB22393DDB90DF1D85456
51EA77691E98F8540FFFA6C0EDCECDFA28A951DD5211ACD684E9F908D429C6AE
FCBFE9447A13D00FA3D6E666B4AE09D0D15F9A7BDA3BFB7599B02E5A12708947
3EF2D6224167F87B4A0CACC2D10D2691E186A948FF3FF121F7B9E3926D4440A9
6499663C88B604B2A8F947700A630BFD6A503B4539587BE5AE2347C835DC00E5
A73E95668DD0484B4C0E807A5117A9461C92DE71A8B3E97803700E50900B1022
202EDF2C3F52D34947E0964D0E8E89F6043C0D2F218898A433D6F3C4B442E014
E3E5A5E82E52DB5332AEB4E0F43CB223DCAA3F7B016E18B0C7B457A7055B3CCA
EF02417BA5DEEFF27E8E687DAD0D563C70F88ABCACF025C88B9F906FC093BBE4
CB287A8D099549DB59B6B635D21302E5912990B512A76B3C9E8A4E32908BB9EA
0F043D5E0F563059F9956C8E97D0910BDC93C0B1C62AE8311C4337297A36C364
0D188839D61DC331EFBF3A33D6CCC71210935FFB2EF82F098F49FF48762C6D6F
0ED0ECBE9814BD19184B2C0F3B04B2D3ADE23588314EFD42EC3E08AE30842FCF
3B0E4E69B1ADA04C0BB92DA9642FCAEB99606BC079F3230443D11313D6EBB932
4B70C05B82C58509CC2E624E738FA2C0117AF693E5EC1DB2A8DA1B30A710FDA8
E19C96C0CF4B8DD9CE727EBA86291E50B6F2F4222034E26E42AED14A2966BAA5
D3D01EADF8610465DF3E58C716D4CF801A88960FCE4C041DB0AE9057F1BEC82D
844D2D51514742D35B30B867919A41EE61D2894CAA4AD7BBB0F287460E60E88B
89FFD6543A885B8AB1BDC2EA8159A3D4ABF94655F14D1AEFB4EB119E6442CB14
BD2C5658C938BC685FADEC8C6514A729F36B82EA013B359983AEF8630E66386F
7FE09C53EF75FD3C3EF313DA6EFC55D3AF10B647078CA66EB88EEA8F43FD00C1
313C220BFDD7A30DEDE201C51E84D9573C7ADD3387DAD29CEA4A4A57E1FDA443
7978818B4C8EB83414945F10C183245F1B733C17D3B854D53BA686CF408BD626
0D6A37628AC7115190CB24C6C0D49BA6630E7487EC4CE9FE49A53A3812D7DBF4
7D9E8A2D353B48627891CAEB3C1BD05637F157FAA4BBADE2474758D2E81F0235
2531B9FEEEBF339018ABFE4B145D5495681CCC5B02C087285B8940F89B5C7F34
567483CBB8EB531837396EB5AA7BE08E08FEB6872FD53DA444F5EF74DC514FD1
92BC3581A31F2DA8A5556CFA10ED3AC238288C127BBEA082DE33FA87A83DAB9E
2334A7522E789A1B31DEC7E8D9D51D81B8C0706630395896A9F40B2514EEA06C
4D3BE4D8D2EFBB235EFEFC8FE8B7DCC147112CFAE733CE01AE8366D248927BC4
93C29414F3CCDFFCD23AB28D932EEFF25B5D70F45018920ED597C6BE2ECB4634
4523714CE9C02A06D93CA8594725A42C8A798A6DD355CE23F77BF90DD88672ED
1AE3C262A2033208BFB4CADB3DB95CE2C74DB09F6C18D083A389BF56BF13E4E8
BF0C3E801B7169500510B895BC38114416C640F69650E2366C1ED10FF2C16F57
EE901070A024D69A4CDAE1E4C1597DA77B79DBD87A4C7E777E76F039C4EB9590
75B0394B8BD9364298FEED3B9CB12EFD2936C1B4407DEB9554FF0F25A13DAD43
232F7EE4D840B43621750A17A2BF34A30ABB7ECEF68EE3D3050D3C98651FBFD3
D5898A10D61824D760F2B86372EC36424D8A7581AB3E7B0B041B711C074A9C05
A17C014945F08547DBB905FDC78D84D3DE066D920D3EDA7BFBCCA8E99A035B26
D05BA27EC4ED61B502E510A24171D3E508B67D68BAF10B957E621C783A24F95B
D0EFFDCD8FC061A2D99F8C01DF71FCAB30D6704BCBE14EA5296654634482491D
C499382D5CEF3BF05DF426810EFD59CDAE3C17E2F46669AEBD145EBFAC32A01F
37CA6B04844C8C223DA6A67682A05FE52158570A24B86F46D7EBF24DC37681F4
84DC7088B6E19C06BE8C5822318FF299F6967B7B4020B64FF37AE7FBF8722F85
20AB299EAB77CC0EB53BDCF9FC767A18B14A22A4A9508F6836E3CD323B86F7C0
1070725DF295DAAA3E6F6DC6C00AA4C418F45F2D92CFEA647A6508A8ED99AAC1
04261B458247D328EF400BE34A35191DEA9BD6BF45483A1F89DB490A00E006CD
BF5C2D61B80B78261A2B584DDA29B54CD2EC33F618B8CA36FCDA32FDC097B193
54BCAAE4015F53DD5994514C074D8D84A638CDAC65937C3FD76973B67E1EDE40
002AA5F65AFD81A00CA43438531131B5C80138263B8E0DA1FCC4238D71517DA1
6343309B7B468C11A86C1A517F86D2C6190AFE9B31BC892BDA6043BEFC350D92
3102BA1448C23FA47C2951D0EA78866FF65694328781509A5C4F020EF1D81AA3
D7E7FF56CF4AE61C0B63D478DBD9D1F904EB6959B1D3A397665456E7ADBB28E9
69382B124072BC0D21A599EF056F9649C7646CE3474CC7DD07E691CD9AA1950F
E5D3ED2A5AB7E52988534B0E643A05643E8A83038029E832F016A7FF2E92279E
8C50DC9D1134454DDC883F670B4913D76368358FF4CA0741BBE9B037B6EA815C
3D70DAC34AC084B4373BF6A99E9FFA2DB4113C12AB9C616F074276C4840B1BC5
AF422389CECF1E55321FBBD725BB08927B936A151C358F2C21B7CBDECEDA8B48
4FD4DA121C010A40A2D486310FB2CBF3D51FBDBAC9706CA8B4D3FD1F68A5290C
E081E093B5A24E49740C2B0D1133B405FD0DDC423BB8DF8852EA30A8EE16315D
4FDF3D2B521CEDA9446FDBF356287F35014DC7DCEB4DDDFFB4612C0862322F67
148B740F8DC56C55084EE590D2BD58FD9784BCDCC3D498B43B4C9DCEF584E4F3
3BD1D1F421BFFE966396E29C4389A8B5CE76E8F0FAD8BFD15B26A6FC4B864511
588A5FD85AFE629095B531FC4DBA01FA187DF959E597FD86C9DA74A7CC5274F9
67A17ED5875C59A2FC08256ED16256524591C31A438AD167AD6C39AA2FE5CCA6
028CB3A7EA6B3906080B4FE69807BC5F37C37F75307C68061FE700D52737D498
368FE6269F852FB0E950210F2B0AC83BFAF040BAC3134C59FAE8DB8EFA707B43
D3EBA7D9183C5C6C492132087F332C0BFCF3D479E5F6E9C23CD986609ABE0FC0
3A858CE09E4587B808417B54E603A6E083BDDB9F2AAA7B2263889F1266F35A1D
775DA8BD6974D336DA8F08071BFEC6663C275934BF33671BD55C838F4ABD354B
2D98B35CAA4F4C66C0DC234DFBDC9B13E62E040FC34E734957AFF7B9A1E82072
0EC4993EC419CC471B55FD82E7C56D1761528870007CCA3A83192D97B128519E
4CCD435CA65496CA662DD5E4E73A3ECF8471A5E819CC19FD7983CC2897C588A0
9FDB14647F570BBEE55DC7F2AED3E1A10DB6847516F91852E1FA44B33B249C61
5F4A4BC80E65F29016204C9D6FDC7AF0C1A9BEA45AD2998C6921AF249886604B
70B9F2A25A7D576FA1D70DC935CDD3EAFB968B026DDEA892BE5622E14F961290
BA90B74ABAC9FCECA7CD3268D06EDC9C961F361257D41DFA162A4DDBAD586C07
438705279946B3ADAA44E8AA7D7C5CFDF2859A76D67B499D0018976CCB04676C
0F14DC71F3703814D30F2A18FE28F830562887FDAFAB6244BE43DCB6A70F052B
F9729847B5A4A1E37B766568C833B98C74B15426DCEC28E6A10B9C4CE4DDCBD9
035FA26259BCFF0397684AB3BB1BEA9D226D8EB21CB81D28CE330F988A4D89D0
6DA11AB621533F6A1938E812BA39E0756E167FB5AF544814F2722A8A64D56F9D
6F5536ECACEAF139EE9AFCEBCE3D6ABCBC147491A0EB8BAE82C9F14E9F3B744B
51DEBC6A2A04D26899399FF91F4FB98EF6E228ADD22D093A82B655F78EC2B94D
D3F90D597100C54656DC80A7FDA9EA93F3EB933F247EEA148BD2C80C06E54E71
26C3703B6B981AE96EB4CC354B33828276F2264F3155D4DD61B6AFCB19B26AE1
658A5516E42BFC4A9EFC0F71935DED5C5C316E7D8DAE03CB25E6664A35015FC9
684B7899AB6CE0C7DE35DE090F1E6616D745D03C080D30E00F6F434FD5D6A766
EBCF15CA68D755C30E02C012629BB5113F959B23417C1865E2E3FBAD3BBC137F
D522CEEC5B7CA9EE521D28AC72D636AE969256DC91944150153C99FBFF355D89
221E3FCA04C2E431EE3F6186F857B2FB2F403BEA09AE1BA87D1EB408C340D047
061DBBDE1BF5AD5D038BDF37E72C290E08134D763B15BB6B2B3B7C1EA96FA422
B3DE77164C5F6B43342A87FF745965DC919A12B63D723FA3FD1B158F1DEEFC66
9CE697CA332B58B295832B4F1328E0F029C5D7372EF249FA0267C140139E32A3
C82A1B5B06F008EC7289246D873BD543684D927C597918F9AAE6D16D2EBCD7AD
3050E68B2F5B879433A41FCA23CBA7871F388983E560AE31E321A14D78E952EE
ED8A2026B8392F74668E0E69CCF8F290683546915E0678897FC2042AF4448043
68E12CED705A5823BF6AC2348B46BB51E7C4DDA6930768FE6AFE6D28C37D6582
4F530A6DFB4AC86F0989E89F2E5E5E637D1599298AB3F54B995885FBFDD07B05
1AE1826675A5F7CC5523D27FB37B08E03DB5A3E7A7AFC5E8194110F5C510EA23
F4925336C274C5E3D3EE7D3C388798FD878DB9AB32D771BA8F05C3924C95AE97
DEDE4D3B78F8F31A5A92ADECF6E7F3706A4B080DDF43564B87986C3004ACDCB3
ABB01A2C527F67DB1AE9AB852A66828C4CAB067E6F73AC20C8ACF206EF6A6167
00E27E1C2D93E4E93FC183B92C92EBB1C9D571BBF3740C9AA0ECCDCD40CE7AC4
9715D8BD0A6803D8B14E755062EF5975692F213E2BE3E1793DECCD5D9140740E
DCCB97BA522BB3CA2A986A3005BBCB68F9AE872E75C24EF24BD82D3183B64667
2DFB2D45CE801DA6FCB815622C7AC313350FED48DDC2782659F1F50E85A8AC19
6F341FA2FC9385CDE9A053D6FECAD8593BDFF25FD48046DC78E4F5299C581634
E789A5C10BC1E93488DCC273143E7538574071538878B4522D1AEE2980FC421B
2977AF4C08DEB2C606C2E49CD8D7CF9FB27D90834AFF6D3AF0118FBDB85AAD89
C7A604766FFA65AEA58C77DC4ED68C27DD82968B865E3B1BA1CC3F5AC379835F
5CBCA3A139F60B9784FF59A6668CB8F15F9144E36EB67847D5B5ADCF63EE33D6
D47B012DF74FC07E862198AB54F9768E5DE5E7FF04454A49B719BAC88C628407
6BD9BFE898E1568A318FE982BCC5350CF122388E09B6946DF24426226756497B
4207C6D3173ED4A0A7FB5A609F0CBB017265443ECA040F54A876DD343BF69D7B
2F16E43F5C4693C31A90C79771C91DC4D21798EE7C1C69BCC4C6E911D4309085
AAD4C782B78A35CE8DBE0A290BAD0885D0C5FA1E949D32FA1F1D5B413360E704
B03FC0CAFF1AE2BFF058E4E877FF83DADDD463072AF184A4C3FF125A06944A21
611A35FF2E1FB51FBFC7B27C86A5A58A0F460B4B4FB2D8433E743612D6589E71
4230D8F8C47ED334CECDCB8137E42846577F66B459169FE19DCF73C5380BDCCE
E54C734C935545B49CA1AC6D7566EFE5BED447B2B009F6506D16094E18D9C77C
B25E04053E0552D157029459FF0D7067FA57B561F745A1E86953865D451F5B00
2D7E0B1A6BD5BF1F8E62D380C7849CDF06492BEC78C977AA4B0282850350E764
479A66194341696E19DACC83FD7DCBBAA7E71D9C2DBC66C593BAD139B3E20FA7
F817E146B9B5DE70958048F037C56C14FDBCE691048469BC4F6AA33E7842920D
073CEFD986A0584E020CB5105DD5E82132BDBAC2EE943566F917B7E3C6B26FF7
C075A884DFF38EDA00FF11BFB205B9A42EC1F50B435E4D44E14E24E469CEEA19
D0BDE898CF328861C3CB4423FD2C0C1AFF8273F35F8F6447561593F32A2457F2
6BDFE2E421CCC9F3FCA1993B5020F8574CE0C8B6FCE43E382AA3BBE0CAFA1266
E398C58FF8074C8E860FE132AC46A5AA4DD334B03F6E7D8DAE03CB25E6664A35
015FC9684B7899AB6B3DDFEBFA9023144D99A71EDBB90FB84380ACDDA68AD46A
CF211F81404A39FDB273B64ED685BB2F05E6532BB973108150989F4B398FD87B
C27EF47166DFB2C258B6D0A9282875ECFF84EA5FB1D26743416B6D20BA817AB4
9C6B47E64ED200494B8AE9CB3B6F78899482D13780ADA6AE3B02A6A537B9DBBC
40F6BB6B0814E228451BD8DDFC724071FC89B489D589D8EE7AE42C127A721354
830444ACC1584CD6C80A8D3A743D5E41F80348022624DF8003A95DA1371E2EE4
56CC692DF7B71EAB5447620797F020956A61C93EC15ACC8EE5F47D870C09033B
5C73E7D6A82461ABEF2983B43D784D9C5767557637999B1F18D2EB4F21CBE775
41A399462C960C43534286DD021A3E7FB37914E7F6865A5857BD7887CB412AFA
E7980DBA4431261733A76CB16082B4DA5855DFAD242152B17B3B3A5BE99F52DE
A3BE0F7D8F2CD2CF6917F314F5D43DC3B8599690329703066C2239A18F39540F
3B96C48E07C256081F5B8F3636CCE0A293F905974A0B3702F9516B5D84723A0D
6B9998821A9350D76CBA16B7A863D767534E0C331CAAD340B7375427190D9ED5
D06C044CA4C48C29ECAB193C45F75C84522AB7294F11F5D48A292C2308001FD5
3B47B8613BCDCBCCB6F6229A9F23C5949B30A07E52E37E0E3C411506C07C5E6A
757165B44F0FEBDAC4527982F9CF0D4F945873774ECC50AB47A610773533D9B6
B47266B4A1084BE171D03696A026FA7A544895A1187A8197CAFF1544C76C1286
32A537E9C871617E8FE2B7BC93FBB87AC0D15C2818BACBAACBD8298AB198C285
650A8610901321BAFE2BAF5CF065EA8A940B85D735A7C538C885519815287BB4
19BD974BF795D871B9E7B4A54DC1FB491ACDD3A0CE09DF3D2AA01AFC9DDFC00E
09E845721D0F6D8C3A1D8CDB3A7574A94AA0157967DF61F2D3B6C69E17A07403
1B8EC4BFCCC16DC273D4A01F22AE92DC3E43432CB3F9B7DF88E28C60B0640FE6
7FE1EE29D9B8F060B969D4438A98A52B02183737B9E9E6D5B870AA8C00CEEA2D
593874859A612352C2F5CBC7FA70DE88865E3B1BA1CC3F5AC379835F5CBCA3A1
39F60B978EEEEC0BDCC168B924C861433B8BBEF911422ABDEBF33F8CDB902F41
F4B45490CE22EF90E0091626E212364E7D4D8DDAA29E8C49C99FC77431D816C6
037B572470CD64DE7618429F0E1DA8F500123550A39569586D11D0D8562F72B8
28AFD7F7DB46C37189458FF03F795744D8D71F37734EBA073E6C3F8F41AAC3B1
3E145F8356FEE294963E3D16D9A917FC729B9B81B5A6A2BF0878D7B3EAAE3CFC
8275E4ECD10A53C5944DF33AF5FC2C7C43CA40657952DBF58F7316F97130B51A
A953E39F6DEEA028AEC3465CF1C823A2090E1AF5CD5388A0802D81AF2521B4BA
0EDA5CD019A73B7944492D9F076B5DFB6E169D071043270E40E0861CF34708F5
8D8DB8EE92CCA7EAC324AA29EE6D7D9F77B9AA65B4D75D6D404FBE3EA7ACAAEF
E5EF7E8C4DED4F54345AE358E19C8D5C7A7B723DDC677674417076B9FDB113DD
C5D8C4456370F79B144D4B3B3CE3F4E5D90AB94DE7245CE3A4E8F298CA3B3A2D
92DB7A6DC75B7613D5E513D4B14CA45049A7FEF59BA214504AA95D15B952B7FC
D358084952321C3766E7EBE3ABBA67BB114F84862E6B822BC96692FA7B8AA386
6FB247E9FB01500448E744755962523C7D2834DB46095F63990A2987FEA17BA0
FC8F966190BDB8B9848E0EE12E46A4C80ABFC4A9673CF5ECE2D18ABE7081B3A5
B88693DAF8F2B38141FF845AB0CB5D1BF78FCC9C5B55D66875DF1FCB2375F1AA
0CCA98B93CB4841EC60086E0E5CC6A9647541AD6594C3748D1CB4E631199A34E
1B9EFA85B55BE0A4BBE0CCA75892E07013BDA33B41417F95B25F6883BB8F247D
280F980BE045CB6AA618D8F66D60BC14A12E05C70B6412C4E4378D0EA7DB19BA
E8A38B7EBF54CD2FC19C6FA2E67F9064EC92643FE737847E977794A20AD68C3A
6CA58947C32AD7A83FC42E630743754D68CD05A0F3D347065576FC1BF0F07665
DEFD09A6A2A890D8FA1001A7B07C931D77CD5D3D9F953E5CBB74F0A21B56D996
886C7E43A82EB09D355202534EB1FD9F050455FB4025744944FDCAEE2CC872E4
59003DC8035F024CB7A0D4CFF1C1224131A6D15828BB6EF5AEB7FC6F424B3CAB
4ECB83E35C1FDA98474DDFEF67657AC4B57119D420CB454EB0552B9EC2E7721E
F7BE33B4CD12C56C7856D4B0ECD4E415CC9290C79FE24F1F82B70AB9D6ACF11B
8FE226AE94AE468C42ED2D365EFAB4E2656A2D24A8AA0A63D692939B0FE58575
955D4283B9BAEB84B73432E42DFC673AAB3B4833B6F82574205EE78F26E2FDBC
EA3ABCAB78A616E5BEA2FAD3168BB1FC2787B56525EC8CA7AC9E1D894D3D57B1
46AF3311A67103D848F8216D0E6D22B137629A74ECE877AFF9DA9348AC1274E1
6848FA104800DB0683B9037CD0247E8B4C85FFDC2A7E77DD82D39F6D024ABDC3
2AD3129890A71BF3E13EB28A39687AEB89B306962EF2D971B0398468408AE8A9
D786D4459F1AFCF28364189CFE9F154411D1ECA40563B020A997586C6F60D265
8A1F3CDAB9DA778F7B38E900A04994A0DF2E01D4AE7360D3C8F052C352024179
B26C24B1E63B05AF6F7C04706AB685F053F3AC3554B70AC631CD7C97463781B2
A7E84EA6E864FCC84D48376F1DE6367859577962FB85BDC2EEFA56694D7E372B
1E37C08BE05FFB148A7DE0D6470B06B3E8A8EB7A04D3A671273BEF2087E1DCE5
7E06D2D612C59918590CC699CA19AD713A79325EFD7F29A7B3E83332EE3C28F9
C068C2E70FB25615CB38097F4502F5A5082E1BDAADB6C11E275792792B7D65C1
512863B474DC2C091F71B82AA52B6C090D4A863D9B7D0C03ADE959A33ADA89B3
E520919C9284F51C00F784D34EC12601C5A7C39DE7FCDA595BC79C3AE7EBBBA8
F1DC8C1AAFE57482BFBB77B71C56F49A6B6C37FC89617845E5FC97EB64800A56
EA468C53323511EB7272E6C52DE60B8897923CF3D94B1A12FA39ACD5A1343378
93E0B3E2671019640CB97809B0A6C079C35F62CD185E66369D40E2EA17D8446F
5DB906F7E1A1132B4B57606265430D9333A2A7FAD099A573D384496F359D605D
4910469BC954433942F780C11E23BA1BB32400B9C94F643977CC2128F91BB7F0
7B561F87FC20F8DF9BA51DA9D73407CFF8D5FD6B858F4C1D1D2C85AC2C40EFFC
805BA9B62A372FDE4ED62FD1D706FE1DF687FBF9E1AE72196620B5E4F4F3A22C
EA8D2C165E63D9D3C969C73CFF7FB3EDD658251CBBCC2CBAAA28A4C0C28702C3
3BC9F09BAD19EA5401D744C33BA124C28B11FDFD11B254DA5A780315A45857A2
421A4097A36061CC565074ED5B7B4E0FE4AB4B45241AFBBFB78BD03562DD6EE8
38D77DDBFB34F909B2B6E400BEF294AD0BE52E0885AC6834AAB075BC78254EDD
16DD0E11384C2B9911C0B7333AC1AB7592836AFF739EC90B569655370A0BFF65
52E09B24E0B0C85977F1EF3B3D9E241D80E698F4204FC95F67F0941F59519690
4381F22CE2985DC473740297BC8BCA8C0BA2D0AE7B59E068881C0E6D8B86511C
38F1337AB10E70FF4572893FCCA38A1AC33CAE092996DE7E4B0D6200942E6880
1BAD9D07AA3C12C0C6851CEB926D7FE3BB3DC4ACFCEFE43D6B2459C99BAB1CE5
77EE970A2B5E013E23CB0654536FBDA673DD00CF57932BA4C9DB0F15FAFF7CBD
701050A1DB9CF9F6D259576C2B7F6138C7D17CD5D1BBC93A8D6377B3E0ABD952
198D430E37B4681B2FFF2156D4FE55143F06436E6621F00278F830E4435A1D12
919D9479B2DB50F0F7BA3E01E4052177A1A087459630D957349D55EB9AC596C2
9A72DD34FCD2533984DFF192F5099B560FBCFECCD321B2E896AFE4A0B7FF407E
280E800586D0663DA1E5B2E6A65AD91A95E23F1B5A3A163BCA095688488B2BA9
0E458BBEF69091EAD280C1D094A679AFECAEFE76F23D37F2CF41350708CDCB4B
0DF9735DA9CE62B6E1063E4C9CD2431C6127FBDFC9B59B95A1FECAC1191EEE53
5662D92B07F4EBA18FB4C9348B7FEE4E7B14727B086F27E43E6E3EA6EF0DE68E
1B13A7F318F05DDEBFE49BE6CC438036AED93D9AFE101D4DA303BC18A2DD5FD9
2C7422C4911428468FF6A49FC0113C0CA5751461508D4F286F58CFA2CEEF471F
95DF1F86C93058C299BDCF3D055ECAB228A0DB4EC7B896A63045A82484F11376
6762C442053E8F8F449113D61679D54A62954583FF0265C5B2DF167E5A6BD1D5
EEFD6793D8AB16439FF08DA34537FF7AF6977BDF90C1F0D4EE3989D5A011B32A
DF708DDDCAEA17D707FAE9A685CFA82CF91854D0CF8296ACB49EA77AFFD48B51
79E5F796C0C332A009D7C51593FE61EF8E551DD7447CAEBA850576455580CB25
A76738C0290F9DC123DA6C846530146EB576CB1297E00D51B0CAD57C6422A427
89AEA864B0311EF761773C853BA1117F8FE0DAF2216D762FA68C9C8B717555EF
218ABA1F0BB152EEDA096396794EA61467DCB1BD38527EC8D1D19EFCB7B23310
33E4F074D29DF85080F069561019E04A1971146BBD342E796FF285F008E8815D
C181F7BCB30C2773AB09BC1BE9E1BF3011EE34B526EA480EE2879F3C8452DC0C
6B34FC92D2E55E6C7A52C3C764EC95BE2AE0FABBD1CB25F94A7834381F28E08A
6800CCAF287B9BE4AEB841A90B56360272E58D180FFC0123D228C5EC31DC5E2C
7307561B1BDE34B1E9CC70FA93F130138565D6EEEACA58B73B1622C996D4F551
478056CBF7419A74FE0913E4E927A6477190218D6AB8BE84F14FC4E83C234082
6EEEB89C9C1DEEC667C24623767E76B9C82B333613435BDE7EBFC56883452CA4
E82F35F9DF4D9921EA3B5693352F173AC1563A7B1AFFE2443A802660221EB67C
D38E6C61075BD2B969B2CB297D56B723A35165D01E0E0201DA9E3FFD2B74EC45
548D9DC7F950A5F48EF8472D151736138E571D092B040DC8EBE2CFC5562F2439
4D84EE44C6B826CBB029A417292028376D06515D1FFD8EB258F4B27CD71B2CDB
A3CDD33FD07C793A7B23C7170A7B3613E0D56062C397D456E05B2BE7BA751A6C
2D330B1CFC47ADE896255DE1FFA8CC1A09D261ED469812F73D55BF7E9EB43308
44CB6AF35D2AA9116923C5CF1B3D6CC1C0132B5FC4AEF8515965186DB9971F4E
E68368588DE1FC13ACF2C6D5C5CEAF5D8E4163D09FFB0E9FDD83AAAB4A08A213
66004416D0192286114B03033FEC754DF1405F96EC00C2399383527AFC8A170E
18D569EDBEA2C4808F4247D440D377933ACDC005C07CF2D955A79C95DB21B547
FCF698B77B1F27924FE043312773834D2D1F04E5A80489DBFA423354DEEF2D9C
03B22996536F2532F29BB6C55AF7087BA48DC0BE31643A74F5D36BD724808357
D4FD1813801BFDF935621A22FB9D4A8EB84608A5E95A2593A77AC3B48D4640A7
353974224EC5F788E46EFB2E4C90B25136F46AC739EF08459EAE3A942F88C1D7
80A05A4E06A62760B4CA620BF3A0AA48E15A3666497AF841DA89EA2A4A7EEF95
AF85688930FF453A60894A68573278051DFDDA43593188E80C22B1ECC4FD7395
16B170D2203777864ED2679D67439B5B9186CDD1453832AB7F0675DA10EC323D
13C2104EF3D7B8F5B30ADCA9387FCAB26EDC1D8AC7F3F66C8AE30B2A8BB96416
FDFF848179580D8522CBE12DA950703A90C352983D6F88861882EF3B6D439069
753C8545D12267B73080586D6DF236FA11114242ABF7F61DB14D5A41C19EAF43
48D548CA9F88873F8B863527BE0BE7954B89B9AC70CA27EDA34497A23B96FB56
1B42D7A2BDC6CA45032E7BA3509E818B702711B95198B0CFED132C306DE865F1
6B9F09DA1BCC4AD110DB67630CA95CBD688B57D54C27B00C6A7067BE10660DFC
26A600CB272F79AE07698A0018620539FAF1A2E6744CD16AA40D8CA0ABAAF045
B883582FD986BC21CA444F45AB1BCF947E682976A429FBFC661918D2F6C903A0
9BEA73F1ED28993FA9D33C11B115AD04E8A5325B1361541E62F89015CA235205
8FADEF26FE348C02EEF85F19CB825CF7B49AEA0DE8B49F4D82338FDAFA5A0CFB
ABE41E2167A6AF00E07A5DB36E8B7268EFE5EE6B0C4E50DEE3C0ED68224B104C
D8FAA3FC2278D9996323AC1C6446C56DDB9FEB979C154B51F2B68005E1EF7247
F2663A0FF169015E06199D7E393AC19B90E930F76EDCBC3B76E4BF81F282B4D9
0BAFFA06CAFB2CB78D5460C4099504D7CAF75D33F0714B2D3AF0B01C82C8CCDE
E09D995FD401A5CFF839107FB3778B6D5DDD2472E3C0F8EDCAA3573EA8446BE6
F8BC46AD9BCE576D9439800B20C7E958E434402D7B35FC32C14EF2F4EF054613
E498C9C34E74DDF7A623415DC91EBEB6C936FAE3403D2A8A4CEAAED4F5539AF8
39E2805EA3762730828FA03188D4E44167A0D719573AB6294F8C9D89633F8961
A42961928F8645822C8024C26B676320396DF96BCFCBA878D1C4BC5E837574AC
97358061BA560EC6788079CBEE0A3A239994AA447F37981D3F184840124630F6
1BECF6E7F3706A4B080C12AC1EBA9E3D4D08CBC96D16DDAC763D90BA0719EE72
690A58A298F222ADED151D6624B77CC89B61AC1DEB26CC751B907845DBE20A68
7B2671A72F86BA1C0676AD3E2AFBB700CCEDA2796B5B529886B43FF98795FAC5
2501862EFE73E3AB7EFDB05EC6B43C8F5A19826B863B51CA2E7213F958D75C20
4CAF70D4F64B4D2A5B3E660C12533238F6D9990CC5130EC9F6DE4CC102681F93
F09127BF98289ADAB1D725F02E51A0DA9BE6E26013B4775F78CFA0F06F8F65DF
7DEEADFF3751579B0D8C31EA7E0A6650BE288541C2422D101B6F2816AFF7934B
93FC444EA83972B6E0D7F14FBDCA4AFD890CE7EC720C4C59BF3C8F43FC052F21
42DF7022D43F32836C77169EAC3A0D90E781E785AE5CDBA4372B858D2D40789E
B1A68AFD88B506A966D122408B680A84582586E6E8AEA43FD5457464650A7F1E
8C3C0D7584C71AFECE41946AE57589E52A9DAB9B4C133770A3C53883A81CEA92
C44BC47BCDE8872E629F0AE737ACB8C524C309464E26670528675F4439BE1C4E
C7DD64037E83FF1FF68888718E1225092D4C0C2102482FF18D49B46CD588520D
19AEDFB130A03BDAA0966ED67126A7E3491BC95D574A4776206D47206ABCFBDC
5A7BC9B2AF1FFCDCF1F3FE84582EE513651C31C2E05587419C70AA92193462DE
726263DBFD9635B5AC07C024B6224C27161748515E1D52BC86B1A99F909D4B91
4833F73BD6D4F448CB7E035144256AD8A815ED1D07AC282F4C684BBEF591E576
4897729D512FD2DC4A30411209383893AA3E9F104ABC921C186C15F286A89B9A
EBB0B61DADB959813F8C42E1B39E04D2869D5977090454CE868173147F31D81C
369127C10143E67CFDA4EB2AB73ECF4D48BBB870B6B8C0507ABFAD1D2D15210E
7DBD7DA6639A35CB772DB3B808B18DBBB23C502273B92070F4F7EB470C7D04CA
7F4386D6B481B5C8159E5848B3062ADB1E73F90DBDCCB31A8E2E0C4ECDF210E4
621145D1DDDA773EACD2A76A874653825C1B1141409530A7C6112FE68BA00B04
50F39D72E2B40DC41ED5120261A2B2C5E1404587CAA07EB5B732E39F223836B2
B9BDB74BAD02B24F4137192D72A5B688AADC2D58A19B51225675535CC4A9A1FA
BF864912E8C6290EDA146CFF4CC9426E90F57925E63968F4579CD3F05443E69C
3628CB8EBD6436B5C3858332DA063338D818446623545A9D925D6548ADD8D511
8AEAC5B7C538F177366F4A00C5F779639F5C14A47D081A10C45E2BD3C3439BAE
274B70ACD4DE33CD6D813D15848C62E46AD7C7A83273FA44CD9815445A8290E8
0C87150F353CA1EA88BBA66116E1331A9BF9A2A77B84FDFDC167FDAAFA5E235D
834A8DAB1F263D199DD465CC88CB877EB3C7D60A379132D32DD815D75665525E
C2DBFE798E6A68580FD4C9797F778F857B82B3F4011A322FF6E162F22AAE3CB7
7D042970D8DF289A5B356340C7C6192B612CA221DEC34148961D0A758AF0D4EF
7190AF4DED21065E88EFD35371ABB94D5627324603FA471A9A53EF17E862FD37
61EE921EB6733895DBFA077248817328CDF199D0EEBBC826E2C4F58E89CF774F
199F33DDD269E32DEA345CEDC5FCA439B17E417CD5AE4FAEA6BFF1E3687690DD
4BA60674829E5F29A86E7893894CB442FBE18CA6A96EDD301CA972F14F7AA428
51342B1DE47A35E1161EB98F9897EC04963DC7B1D749A262C11BF29C123E30C6
130B6FAE70ABE4F0279F43EEE58872A318021FB7F35D50296B0B418D0B955374
51DD43DAC6C32C9548DDD1E077198C23B97D4D900B43CBD3964C3D090D3AA548
362D1EBF6C2DFF608E1559B01F86CBAC9E89BB27860C36F96F52C79D7E8FE326
7589F1E7251D0D8F858094DF755F2C326FAADE0FE46BAC8456A9F64EFF4A9E0F
4E362A91FBF7B5EAB9F5FDC218C305A5CF3A81942435388ADD4BDCA1CC03470A
7BF6EB039F4D5DC1D8477988E9866A5B274A91EA22A64441FF6949A8AE175328
3BF2E9B0A86139A8C31230550F564DC6092E53F9278398A6E9F80F7605D21771
A84EE188446B7370B2BB477916DD1AB289817C32E8D4C2C62F5DBB022AD87B84
A8D4A61294E39C7E8FDDC5F5CDA286C427A4311B97CF1C0A2BCC97982C0091EF
C4C7250C9C551ADE9D810BDF65DA28C25464A54F5D6AFB8163E96B794FFEAC7D
0E004CE53A4B20129777C739510E8DA8F6D55F47E5F2C22DD60AECC27DBA9C3D
4DF97EC342DB9499980D2927D81966C4CB338C27F2AF1AB351AF0C496C47A6E7
7A6BED090D4D5FDA1A0BE0987919EF4C84300D8F0D525AEAD86F15B14F29238F
C27EB134F0044F75DEA0ED166E2B7A8E2D6711889B9BDAC51756F53B4BBBD35E
D563A858511A007A5CF26C0480F314C2379816FE7E22ED5DCF2DDC5D87190E75
50901C15AF3DF81BC4B27B13C435E8596F1E30D6899E908E18A22FE323E2FCE0
87ACC1E0E541F898F775A9377832161964B66E462FFFB857B589F3AD6040FD9B
804FA140E34ADCCAF87401373886FF9BFE508C3A751057316CFABFE8C2B06F8B
E03AFC1BA88831D98BF3CCF251C95E5609EA39BA2B09EC01BA12C16350A9F5E2
15EB4853B5F99675B6D9B4A24FA5C433EFA2028E016C7BAEADEE68B058FBA617
DF7E6022E9D50B282B1284DD9EA66137C29734619C1E23917BCCB330A619CAD3
1DECBB7681BCC13A58A6467D96C2EFA24E139633A0AFA816EC666651DB443351
F87C91EA476E88A666F06EB8A6A15ADCE25EF3570FCF964248444FCA4DDEA8FD
A9B882F96DCBEF94CACD0532822DF741724E8D187C522D898821B44C90F11596
706F84F61FEF1A5C7C895EA1EDA6A750662B898F653252467827EB635BFB6D5C
8C66C3D184704C86343AC38E2ECD5A26DF835CF0A83D7BC91AD4E67CCE7B5DCC
EE38E9E25E5FCA9C45F47ACBA52FAC5337E9C92A7C28E1ABDC585475BAFBB0C2
CC97274C6E5C643E53E9B1AF632FDCB0EB9F5002AE1230C4BC5F76AD2134CC4D
DB0863C9C8B00AB94318A5836D68D560A7D49F1DE0E1B857F2A2A2F57FDDAC9B
B599A95E1F1CFD654ADAF5DE725EBF1368236A0C03309EBD39951A398883FC91
9A711E8E891D9F9D8231F43AB56A939CEA08AFA133FBDC57CD092B319C930917
ADF00AF308AD5D176245643572C741F526E2F2FE48EE3B46B2150DE67F616FBA
22F823AFAC1A9A7BC23989B6ED615FB1A022FABF29074FF629E2D24F4B9F754C
FD12AAE3D45E10BD736B633C8ABF3817168828BE50DA91D009ECFD4FEB93F67D
421DE406A860065D9F5CBA6FDDD9D42D9793D294D614EC2E59D82A6C535F4F17
5C66B0C07E6514BB715C0D1CAEE3F58518368828C83D8A6326938F5B9CC6C66F
8BD36DBA30975B9741F24A479F827532A008C4373425A53658E3D5CEAD9728F1
85FCCF89BC0778B174A9FB4F5872BE9544EFA6B44B27044B3F72DD84699ED708
C0A0CAC3E2A3DCF638CB1A92C7F617FB824FC072B2AACD1AF7D38A23A0DDDF9C
8151350CF5D4BCEE4F3CF5AAC7552A1F227E23835628DFBCB6C5CE15B2F784FB
E0FF2443CA9578371461605A95DC2806A1C92CCB6E47F538C8880CF7AC0CB08D
9B02969B70F32A4A1C8BC24D8C2C25B06AE011437ADF0AB6544EE52E1EFDEE73
7107961C79CC491FD1006B698041796BB8CA4A1EFF2C32B91F9C63C0EE168536
A6D4F2D569EA127EFFAE496529E7DDEAB533317418A8E967F635ADA03D2EFF80
D467F5CE5EFB3B38138891E1078160934A07D13A3B9C6AE6D520FA8098B0DF87
DF883F9EEC9EB616F9350EACAAAC13144EA7452F2FF1F6287420403A0A31CE4A
66F3EC223434E577C63265C59F3BD53A8882D82929177263931A6BFD4BB4BFB7
4DF4FC0A490BADED520764EB70A3B42C7607620A8739814F08E6AE1C11242FE1
52FE3479D3F1D3FB4171339ED8127B9B6462C898A450BCFB7F47C813999C3C59
5AFC86CD0B7BE65DAEDB31008A893E477F543893AC88C956283FF7B7628DEDC3
0573F494B55540E870497A23620FE7F21F1CA698A994BA34DB5C0B144E32263F
5185BC8D9743E4144180D45377B5FD6936ED5F15962D7DBEBEBC3D2667ABFED5
8E96F29CC4ECA2BE88D881CC03929299117F82FE4F8D74710EE475D2A6283923
68D68C28ED60CDCE0CD13F54F0F6FEA1346AE807F9874C8D167AEDA5D3F96AB6
0F049863F1A6E36F65281C6D23D511F2C11DDF3FAA6364C632C8D32A8749781B
940016CE245180FFD7F511AB4AB4C43449A3E56DD6AF90A279801A14ADF9521A
F092C2D2332AE84A6DE02388A27162B28C0BE79404C5CEB92A8077C3B8AB5024
3705F537B4BD8AF397729222F3B7FE28FA141151082AB1027A7C1571B9B88D34
5869D96C57CAFCFA148BE140BCCDE6A3E789472D3AE7C4ADD622E4C02C8A6099
3BBBCBF09505D2F86D456DAFB6C4040E640837330E3AAD079A9D626D3BD26ED5
9A293533DE22B29941EA1A6AE32E06C7E21CF97AF5A8C40445F92A42F13233C4
B77DBC31F13F4DE9EB8E64108F46B746BB065D74ABE4135DD7C7DAD4BABAB50C
71EA17A038A5B777D83180BB4741A6944060F29F3EF6B7AAFFB00FD028B380A7
31A931CCA7A63583195B37D993CCC2992E4434D1B356BD56EDF5FA05A74F0D4A
2C4E81DBEE2C34418B805EF51C5C3F8184C5E5CD861DC641B307C9106E182042
FAF2889FF5E9B28A69A1BD4384B22773B360E6D2985D286251408C309A6B6B42
1CFD00FD714CA61C1FAB36B54263EB45F0D1798271EBBCAE67280B865E25B0FA
38A6356EC5262F82A1057547D68EBAE59023144D99A71EDBB90FB84380ACDDA6
8AD6CEE5A9FA9F4E4A3C202A37840975CCE17FF54704B700D5F8CC0EEB8823C0
4CD0BA645FF3C43A4FBDFB6B2CCF8E12DEF0FF646CB89023CFA982D1EC42F237
D223FA42DEC7AD105D966EF35742B97B28BE5A28C45D282B4812892FFFFDD6A1
AD528BD3C55CBF8E1BE75BD78CE015E30C75C23678C9E199D39A3DA75EB096E1
6E2DB3E14D30B73FC9FB7835C3770D3A978D4E3EDD2762284D72142DB6F47D20
D4BD53FEC32A64F6569E8940C58BBED4BB5A69AB5EF73946DD638750D7DE841F
FCE23CC6F8CE92D811BBF0B96010A9B9FE47D7D4D67C241EDB484A7FBDFA9385
18614AB16736CF79B54D75DEEE550B267F35014DC7DCEB4DDDFFB4612C086232
2F67148E99ECC9D73F2C768710DA5E40DF238862E45E699A220D40BD6D60E690
22707C03B0945C024DFFCAB8CE80C66E2C8AA39E086645C864166D4712B2D954
4C24BC76AF9AB11BB24C4C6D84DDF7FED053DDE31A3022536E00E404B169C966
551150795E2E533C86545C388368F9DBA8FB6EB80D987E3CD8599FCCA19F958D
D55E589F89DA132FAC2F4C7E25DBF8DB1ED3F0D14EADA91723871C567389395B
47BBD756CC3443683EFBE41341F1E66C35E865636E5CFA757AA5E0CEAB244A45
B28177D6CADFFD0665DDC72FE8375C91FBD9035841767258BC794E37DD52DD42
EA7B5C525587613D335148791C6FB25E33C12B31833685258242CB84997044CB
1395A056C38C6C0F7E71390D853D8277AB67A4B5C1D06D78DC6DB13873BC445A
9AC23FDD3B02BE1B987E11A046AF9AA1FF0EF9479D4507A02417B42D51FC346B
B0E37BB222FB8F4E5FEF51F9240CEEE5D95E9FDC4FDAD15AE9EEE8D0A68AD0A7
EF1A58072EC648A92439229FA67736D0BE676B71F30B6B5345F132B2058BE956
650DD43058FE3EE7E9638A0E1D60CDBE68ED525B3887793CA934F06A27C78C51
22CD9EC73E29A912F30DD2C09EDA896ECFFB9944EB7EEADEC7BD012E823A34E2
89EB3A44D8C1AFEAB666552ACE170271D4F4AFF846AB8EC3022C50FFCE40AFD1
63F8B4B5199B610EB41E96384F31C1486D6B0646AFBEE8172CD48EFD8B73CE70
8594D8F7356C311D84D4D071C1465C95E05BD1F6B603AF4CF3ABC92A92C3F42F
4101AC88024884C018C7D0DF6263E6DCF166E1670F2EE9B93192C92AB0367DA0
74BDBACE42A597FD8B9EEA1912509175541A94B56EACA7043938C8DC1354D1C0
E5ABC997C64F3C84D2C3B7581BC95215579454E8F5D1A42D40CCFBC093AFD3E5
7973A0090E444CFA159AAEC0D5C3C68A4331F3DC0B17631B9C51FCA1578281B7
81E5BE8E7D11102487201758536F18576B177A69483B217531C75FDA1C3036B6
95EDB12D57927399204A4A37919725ED7E911B0834692DF2767C467EB3079E6F
FEF419356A926E12FBFA7343990A15C333E1C096BA2BE2093426677988047263
FBB7535FD83605378496D3BF44B4596E7E46488BC3EF5E5F6E5986CD69469EFC
DEF78BE9410041E48C09444867A5E1A79AF82A06235AA8C72B021754E2FFBC90
A212D08F73B02786146E9E55882E29B65E5BED61359E90187A6854C768BB6471
B452B2C4B94917B90970B663D6035B274091578F07D7F4516895203B8B15293B
65444080B62ADDDCA6FA277257BE14617E26AF53DB2BA5F5B6CCA6F90D80BBCA
B4384232E2417D1B42DD280C1F946935F2A613C86B7D453FB556D53539822FDF
2759BB80F2E0C472E54AF2D1717F7940E7BEBACE151FFF0B0DE1AAB7C81D2651
78E45959BD7D3CCA69C4BCE2D5E9EC06945ABEB10A0C0091B3AAB0710DC00D01
3BFB23ADD7E5871679ACCDB6D3EAE3B8270FC13B3D7E0DFDA4F9DC4D7DF39731
E7174F8B2069BB8336F6D8165939C93A81867C7ADF94471E8F0FD6CB5E3E5AA7
233A33DF49A031282BFAE76323C1445F276EE252344EE302BFF19972AE5EDF59
E8839371A3A87371FB86ED65E2EA90B3EE5BA8FECC6FD1DE4751B3A1A0E8E686
759EAB96014A06B962B7E28A73BE0B2713DFD32DEABA293EEB077819AAC36161
3A028572D68AB9D20F3ED4130D20DC03DC32EFF893D6315C69652F112E6D2AC9
F733F2E0D2AD338A0B67A82EB1697DCE7759EF3E2FBBC0EE740CD1B5580AB5D0
98057BB2FFC2399D9F67A7A4381C9283191E7D0F97394DCCF42E5DB57AEF5C1F
15464D43E2A627A6EF38F12057AE3A4492672A3B30BB7DFC8DF26DA8F8384189
AA8E895784B9D744247FC4DD5575318E1A50D2B0D1B167D87DCBEA2E893E1D90
E69E828F3C7E4B3D8ADDD6F125518B48040D40CBF94EA8E15DF7F0D97F71A0BD
E13CB78B1801D55698E3D6EC1A2ACA80B84D754C1E092A9FE53ED6CADFAC726D
9899C7DB08AEBA5ACC6B5421D48DD9362326398FE89D855996801421B2FCB9A9
6154DD7D01B83978699B881FFD22477F14B549B1E8C80D263159FB18C27A41CE
503CAC9C75D42C3CBEE053515E87D6C4094BBE3F2AA63EF2CA773EB77BE98A8E
2FD588E84A9CA278B8475A2E6F25B033054671A5D581DD872E68B52EFB1F152F
52200F300129DB39095E006F462A4822308E5AF4F5EC3AE71C90564DE359480E
5EFB6D35CB17B24EC39E1164A06C9A13B541EB4AD89289FA3EDB65F691BB4E32
ECF1455DBC3E902F2AC3ED51A3B369317045F62DC6AC474AC2F11808940D6E9A
FAA51EF6C239987A820401628C3994C49C54859DB5FC6D3B9BCE6716E40FB122
71168AD208A98540BBAAF61C73D2254EFA2FB833A79937141E27811C6B33694B
3F988AB0C9ED06E38DB7B4E7A62C4655FA5FF17B14F01B02C1A4E8BE81DA36A7
FD0532153D5C6216D9C9385A18202E78D9E7ABAE41490018C8DF726B18D5D532
00D554A759A938C2A64D52893B3A0DFD699A8218937CFC81E2FEDC87AB035DE9
D539DE8D3C9B3740FE2E9D8D012D2D358ED89B9258E22A58F987566C2B8C83D9
1079238C2C778E65A3C355E25A9B4366459001D65EB8E3B97292C22851E05AAA
1B3CC74C4182329F95AB474108A296063BF7B01D5F186B2E0938EC9553C3EC0E
E8DDC9546D4F64411F413D11D4F97CB387FB24E65976588BA3E06B1562994D05
5D0CD6D622752CC313D5CF78AAF3F04237C96FB9F683BD3212C156A0C13ABED7
B7D6F757C202000E691852A6833B4C2C142FB20340B9E55A56C8C9DCCC07407A
11DD050A05D0613D919D6E18D3BE0243C1C624B43FFE5FE99F96DA5B69786799
B1451532B9E75E499A4499A52A7E549AE4DD1FA1B0FE4A25F7C3B591FB74909E
E16F53AB0F444AEC233ED7AAD0F21FAE3978F76AF912A7C41A5ED6AB07863F84
531974AD8253C8460D4159149C1EE0F65C84B23A94F21B0597DD1994F22CC5E7
9354065CF6357433878A4512DCD0A19E5BCD82B4DE1097FBA4DE7BD4F60E2FE3
92959562CC7264DF129DC0FDC4BE50D52531AB4957CF5447D44BA245B825D1BE
0B24D4DD012882BA02C707C35FC6931CB240804634E69B29DFA844C6B2085D6A
445D1F877635AD152274EE6F7B0BB69266D0FDC747F0F89C2635D595FD984AC6
12D7868D9E0C4930379FF87D4EFAAD7ECB31744981671B40B31029A8782D21FC
23266EAA8DFEB21B2A38ABF7D4DE91ECD2A4B570E70B8E61B2E9792E6510FD62
DCDD1A5404E168882E7A8D19838D3B0D2E3FE7A0A34BEBCB56730CAAC0C01CBA
A10C00326816D488576309944CFB524ABDCED4BE8D8F668603849F68876CE406
26184B6E430E43D16E0D780DA825AC347EE138DC959E22DBCE878B7001DB7CB3
8F2ED4568BD464C960DBF2CA9A2228D792CA9F5B7E841DBC5A75CE61456C0CA3
80F054C140FC1F5B990B0ABC6B5C2A2B08681819A1887B2ED2BA1145186E0EDF
77F055ED2EE5EA7C62793566D41E4C261B59B85F66A5614941E5A2F473A7FB09
9D3D51EF85BE0B5CB46A7C3DAC04374FC83E8FA88B00D0AC7B10B67EBC2E6787
6D118E873523346BD5A991D00BAEE2F2A82E2D45D4592152F35A5681980B7728
5AF53F0C37CE00142A969285445A4ADA16D9CA01B23D71CD0AE618D84B06C1D9
FE95840B9A74A213CF090BC879F9374DFF4E327DA2F814020B730C37B62D3D1B
F8537CFCE40CA18283494E800D9DC4AC0D077FE7AE2463F40DA89824D1C5D17D
C70E13594CF93499BBC0AAC68B23C5040989825428B9A87CE2959D0D0EEF41C6
3F2B9EA92EAEE25DC07611B01065C2AD714FEA6CF18A0D853B16CED5F07CFDA4
F00498F076C7E477F83FB34973C214F3C34E22A2CC5CDF1529F5431782DBEF78
EEECC24D15ACF07FE60F8FE27425D2AE291D57D931114C65F4BE3FBD539251A9
62A62B8DBA2E17C19C92701B02B221346DD9FF42C3A7955F8ECE26DF469E6085
33B9C9167F560F297B693CD1EBFA43E63A8CFFC8027AFBBF5CF2C8BFDCDE2A9E
F02F0A8959D899C05E423C089EF4C750437A96608C15FA48C1DDCF19D5C7ED23
A3308BAA1C50E4191480AE0609A73E8F846DC67F7E4F58AA44B4C495DA1DE22C
FFB00F6A8BD111DB26A98C80DF80A4AADC676D8D9D14BEE9262BECF1F824F718
B21D74FA8A73F4E888403E6E145EEF8AC9C176225B3737CCBEFE80D433049C9B
B24F9FB191508C75C058F8FB65399CBCD9C9E552D12FBA7F757259A5D32A90AD
3A6AE9463220934657E390BD5C16E7C3081360CCA5AA4930D43C04A454C2DA26
219F5407670A26DB1F7F5D67C4D22790BCD0F1E86A3C001725B1560B30D6CB37
427427EF4079D701BBBF32C1155E06D26A9BBE52E1F8AC594D1FB97CC66F87A5
FE2BA8B10C1E4E91CA5F7A54D5F433E3C4634AEA50366D6F73C02E68FC5C48B5
8141C7E8628F25C313F891CC49B7BE2F5C93A198B5A109CA9D14EB30F6F4C1B8
5C7C5183A01FCE8D612125A9132BBE333BF49BE67A05EF6637826408C11C9D6A
9587CD6B0C5B05426509C3E539135FDE71EBE6BEAB237B1EE39B3D1EF8827B9B
2DBB5EA1F2C73A72BEE52CA4ABB8F6729C0EB1FBE8C013A0A5AD5CB4578403F9
B40E5323A575E10783F79F90EC2C2B435FD2902611D709A4B18EF4517870CDDE
29515039DCAC06E1FAE9F0F51F8B76F4B9E4DAA7AADBF42FBFB59DFA497020F6
2C89826A640F93FA574D3425DD12DEE557D4BF8A30364098F7769E0A6E389AD0
B2A5D10CD4C41A40097EF7506B9B927DA0EB4A84E947B055CF58D72D9AC8286E
61677D924A69EF54FEF08241C7BD0291A1F80AEA1F88493C6BD38D1FFB7B94C3
54409D0DE2BABBE2D7EB6B950A9CF60BEDF98CE5BA1AB235E1190BA23732E428
41B2BF6FD01C91CA52CB6583FA4C6F64BD28EC6F839F95D74E2C1A438B1FFD32
30CB86CC47C82291767018909002301A1F81BD454C5541515438E1F36D83F1D2
8F389D04CF6E2FB7AD59B05AFD3E3735059D83C6618D55D6EF890FE6BB060A0F
1F97EF6E289ECB08D2103181F00DF85CF573ABB2AE9200F0BB82064A2167D57C
7B9D3C49DE611929FDC28A4FF17660D2A1E672DD1096784E7FC2FC77FBC3E3B3
779DDCBADA54BEC1AA5090A901BCAAEC3CFE6EE8415C0FE2858FBA0B644CFAE7
B8C8524D89C39B10EE68B6103675A3F2AB66751C1C9459F26ACD3B639C622791
FC049B5B1F3EAE2CF8F223E476FEADC3B3752CB69D37162CA32B7B98C60E9435
584AB2F5EBF30905CAAAB4FFD115846BF98CD6DD8CC10E123213E5733A19B030
3157409B88DA26F87AE38BDF027217603A487CC65DE1D661D58585D675467E66
06632B9E57A58BDE74BE36312504D8F7F6AC051CE1ED882DB34E16B8FCB1A20E
03DF07E27D18847771F3A1E788724EE04C6FF8354D2543083B82A86CB11FFE11
6CC66FEB9C7F7BA95BC87234D5594796765CBDDE8E2C7662221E2CBE5D67CF1B
3B924460D9FB6C2AC28C5BE853ABEF6FD03DEBD347EB9657AC7312FAC9897F56
ED09E02AA857C6FF5EC7F506D282428650B6B92749BCCD23DAC55E103B45552D
A6D1DF64C6AE6FBCFBD9E9879DE2E51C85B3597B7BD8D2E6CEA274C554B884C3
BD0416A6805C6D9831ABE28EE496269C90FFA27C5A51513DF558A8B499C7B615
88BB020D519DA028D46BD8A6C8689151A1053F96BD81DA6CF7AE7934D6F3B792
A1257B9FF5EB18BB80A6425EB8B95E570D595681980B77285AF580EC18CAEA7B
BEDF79A28451A7C6E8D94DE69ED6021385310CD6D5CA9C351992735892DA7996
380563BF7A3B679EA85FEF772477C5474313F296C41FA4A5AF7A016D83EEA265
93C626AA26888354FDE3862783102132351BBE123998F904876921F957CEBAD6
3471EBF5739689B9658F75B4746F0788B24CD11215234A18987DB1AA8F2CE0E5
D324673C0803E716C56EDCDE5659639825AC78602AD07851D8FE9BCA91632B27
11C91B90C11A6D6512428B0CC7E43E676816D961CC20F69219562767BA09C44B
8F1E68BEBF387FC14DA876D11CAD02ABB6357F0AEB3073FCA9B33AEC147B3D0D
30CBFEF15BD7B46BFBE6CFA0982129B55A27E737D99A2C29680C0EF7184211C8
79D1CFA2AD39885649818C29DAE2DC59CFCF6E7C9CB506508BA61B65AB48E090
33F5493AB33413FB84F35B3C0016089A6C4D67EA0050A52D70F8BD84FEAE4EE7
D82E79E0CC17D3339E3DCED98F5A939336581A8F574B9A027F4B71B94F7F6D2D
6C1B64D0A123E641A3C6041A21B868DF1830434167D30A7CA2F279276A63A998
A2BFA40E9ED604253F4F49484F00306C1D289AB81AF734CB3B071CD069035F6F
ACA7716D9D6F1C2A017864DB26BDFA6141BD29E7CE2971D38E8D6431A3AF4CAA
BBFFA1D65E0577F470498FB05F46D65080E47C868308F390BCAE0168D9465B74
C27B1DD081B89F4C8B75B626AF8A317F76CA72A4671386EBD21EBDB1BFB6C6D3
6CDB1C3537127AAFE8018384D2A9A81458CE1D54B29793AE39ECE44365DAFD03
BDCADA541EA9D47C1602FDA35153CF5520EA2EE322E56945432B6CF2B9B44D3F
4CD44126D1B05C9D0DB0D74B0574B161014E096032CB777CD3B07F91EDACF642
581E181553F5D0BA52F6B26EF15266DACDC603A161BAE9E1611720131DE3C8A7
025F583D3CCE703BE817EEC52D4DFE1324B95CB0B82F72C8E218C7925B7D350B
4BE3E36A9705EBE99588567A265C02A28B68392E9345964A092A06F39D706CBC
1AA1E602630427FD81B5E14E109A4880DABFC429EDD42DA8B03EE2082CFC37C3
8E3103051900B4A2B9B0F29B76C9927ABC8C1DEDC1B91AE5405A82093D397F7D
1516C8D176FDA8F92F853A712C7FC81229D9BA0A6773C8591E71B6BBE4A7CC04
F43C848B33D62052CFF7B9589EF18E1AF0AA57A3A7850E91E21E0B406A0A88EC
8B7568500BEE779E5A5B5853AA7B9B3D8BE6506CBF5D3ED1F8FE7BBB22CB5AFC
14B0F73509BCD150B72564B00219BA4298C3CA53608173E9DC5D385CD474C7AC
CFB62C16D697D0EB6EA96AF47035812F47782ABF7261275CCD223939F3E07B66
DE90471DD335ECB9BDDA48C9A21A557CFF94B74415B3E817B1296716DDA1A3BB
B6540E7EB3B2ED04DA629583060CF58576535691BCCAF1857BED6A8F2A70237E
64624B177A80ED0619D67C50C3C47007E6396A839C5AB75F18B4B603A5C64E3E
CA3C53730AA8B6E67444A042F1B7A66FE2C481EE4E90F79398C04FFA3FFAA10A
6A81BDD5DA7C18150C8288087B11D68689DBB26AC329E3960516ED3BA72506CA
3888C1C58E3B0D49B10525F47280B1FF706D44449F8A07B1E122014F8F2AD25E
59DA9147E3CB99046E626F98745E6CA5E0AC1BA6B0CE4E762C7BBA0B72D510C9
7788920524C7E21BF567676067713D607F65C92FF3112F1661D4D35F2596D1A2
B7F537CEC18D2C18200B23E6EB400B290E84CB063F99CEF0511F811659D795D2
ABBC8116512D868B55A3FEBB7869DC6D511FB363A0598D47F77A1B91C4C93121
28771A311B27592B88828C4B5F3DF1ED496777415632A432EF7B5F365921A92E
B04D52A426F063F6A998F48746AA1899122BE0877E9901EEC4A39717647178A3
3933DA95DC0A634DD5610206A70948E33299667C5E5DC7F820B735D3F92CCBB5
86223C39B016D862795EA885391BCD2A2110B570B0C2AB37EFA6B83C3114C911
3515D2E583336F5B057E35B450949C007EAE2039F97ACEFB9EA303A402196A51
D83FAEE9C752199AE4CBB5FBAD9F9E9868F8824BD614F286D9B0F5EB38C76D04
A150301FD86639EF9F4C50FC2EB7C44CCF12F844956149D2FE1994E36C0163E1
E23328FB59ED61590E4704C4E42732E99C3D0610D627054F62204FF73DE2E01F
9DD4400E11F144372491D0229FEED9BC681F9812217CA36565148F3FC891B234
FE27628133F56129D931027541E3A6DB29DCD3C45456CB361F3E4D5D13B3B6A7
7E9A5FF354E79C349830735F9B86A86C723553DB38EDE876462AF55A438B9050
3E5156CDD531DDDF6A0126AA5A833B8535A3763BA0E8F70E8773D05073FD447C
37DB455D2FB26B271DD35162FE80CAC9012367E34DC7FD54B18AECE801EDB52C
881153E89C2BD626655C2F12354C6E053D57143E58564CAA8FC603AE317880DA
F0167837A37DF2BB69183F6C1BD869146233B32ADDCFFEC851E3D1FF377A5AD3
7C15076E159D1A934DB59280EA17BBED33EA52C1BF14B6584EB442F77907B71C
4320D6963F7E0B2C5EA798EEDA027EE63245E94F31CA3C2BD454675DACE7A1E2
33F3A9276BC85A76CF1DF76E7084377B467B9A0FA071FC5F6B8C3D4BA9A1A4DF
D4D116D7F42CFBF04F1F0F89759C6D47C20FF7F92E729B903106F7B37C176D6F
8C7EC4D2B0D298A567506911ED7379EA60ABB3E9780631B0E76083832EB26845
257ED66C64662475212F041938D12CE3085007CCC611ED14FB2F017F6DF3EBBB
099B766B62D68642566A4873584CD13F1467AFC9291AACCBAC44E9B037B6EA3E
9A5FB7F8815E3BB3F94339C85FCFEF4387D83FA9CD26D2D64528280D0A8223C8
9D4A1822FCE597CA59ED02E105657CAA3278B3B5955F484D0C7891058C303B01
11B7EC808791A3EECF9A743973E39453CE3589334B0E331C2475691187756FD6
90E185778D31D26495C61EA4BA1679AC37381C425672DA030CB8F4BFE1AE8559
7312274A054B0439866619B508CA84595E232B63FC33504971F9EF3E5585551A
596A1CD08616E67491E9F73FCD100662E1ED97993F3551207AE56BD45699E502
910C9019348D3DC92DE125E61A2ABD99CD66B281276E2F3368E3438AC47A16FC
FB51D3FBC0B10B28C175E736CBBF1652DB0F8093526EDA4D761C1563ABB27AB6
E7467457CFC1C198F482369FFE2CE42C283AC3B77FBC73985D0EBF2C8F288214
12F5691CC4938E4427CD1F58150F06DDB8CDE0A19F1C69BA0CE1BE6349EFBBD3
DA855FE53946E223ECD505EC741138B542F0BF618F3A8D3413D364CD8C451342
F012843223EA24BFC3EE5F03D5D16D87A4834B0F732CB7F8D9B878F9E0779D0B
B763E0C4A2B38AE4152296566A013E4DABA1A2A45D418C65DEDF800F581EEEDD
6C8F062E9B710C5BA670744AF999729BF6C1EFBA504F9F5D7D4915DB11B56D37
602965F8EC17F204FDA7AFCFEEEEA2A8D20DE101EEF564E333504E3B1F67CBFC
A5580447322EDD7231669F79EF6C45271C0DA65B35BB57E090EB04ADAD5FC0B8
D94F681DAF331F2BB9442012F7802C7B8EC361D965B5E0604B7AFBF9C8CBDBCE
4B327CE363B93D5FFD1FEA025276B3DC275C95EE5F6D2AD683D506B293A2D99D
2A65965E2A2D62F0A890ABBBB0E1B1B5F2E98A85B34E3255EE2295D7113F5B14
6A8A72BDC3CF66A15F5C094BA23AC97229D3EA0783B9046E31FCB12DBB5854E8
6879DC493AAEE7342516F22F6BD199FDEAF93FDEE0388E8D4CD746CA07DB3EF9
D8E708A04023976A3996F3FEB1422CADDD6688DC92C8A31133955D036F80CBD1
653CD948B260F7AB7DDB1C2C1383604A5C1836D42AE4FFBB644BBCEE40DDAD08
E6E5C9CC5B04653D1106DBFC5D7662DCBB3BE31785AF651E1B9676F16046B9F0
7D8C92CD035900986B6AB95E7FBDAE5B72FE6D03F28EC6C4262838501822B7A6
3C6DBB9532AC19426DA19BC875DB42C9332E298A36DB465DECE3A2C7C1B19BA8
4AFF01E6C6A1477CCA671720639ECD6666BB2350231579E880B19CECF37FB8B2
E128E25866378E36D4E52CBE2EE2BAACC2BC51A84C0EDFE9081163E211D95C18
D6093FC57282E1477B3411533CA4B6BC56C262B865151EDF8EC70299D6899145
905747FC1DB6A72890DA790C9A8132BE7F66CCA3A76E19D0F061E548FF4CBFE2
9844A2A8F572292EAF9E56D79CDF7BB96961A0E90DC6DD159CE54D544E286F87
3B22DD2DCA75B0261541557D09A118139679D25F02286C1252CA3F64EB98BC02
99ED1EF89EFD2F2373629D9BEED18E2EE277120DF60523A14A0CD56CADD6E998
CDA39DF5BA5C41CB03BEED27DC16AE82626C5F6951511363A47EFAE6A90382CD
D048E4169C4196451B16A61B36193E870378B35425A2AEE2F855C9291BE4E715
E16FB72F847C1ED858EDE40F6A886CF578DF4AA31916893812730623AAF6013A
18590AC8A7FB6FFC4729636E2A6177216B16C5506752
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AN - Analysis/A)
@start /Fa 242[1594 13[{ enclmmathsy ReEncodeFont }1
1594.02 /LMMathSymbols10-Regular rf /Fb 255[732{
 enclmmathsy ReEncodeFont }1 885.568 /LMMathSymbols8-Regular
rf /Fc 177[830 12[830 12[553 2[553 2[307 46[{ enclmec ReEncodeFont }5
1106.96 /LMRoman10-Regular rf /Fd 160[909 45[606 1[606
47[{ enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular
rf /Fe 203[993 1[993 50[{}2 1328.35 /wasy10 rf /Ff 173[959
3[959 78[{}2 1328.35 /MSBM10 rf /Fg 194[1012 3[650 650
650 1[650 650 650 650 650 650 4[1012 1[506 506 2[1084
37[{ enclmrm ReEncodeFont }14 1328.35 /LMRoman12-Regular
rf /Fh 205[886 48[369 1033{ enclmmathsy ReEncodeFont }3
1328.35 /LMMathSymbols10-Regular rf /Fi 204[470 1[470
470 4[732 43[{ enclmrm ReEncodeFont }4 885.568 /LMRoman8-Regular
rf /Fj 145[571 4[320 105[{ enclmmathit ReEncodeFont }2
885.568 /LMMathItalic8-Regular rf /Fk 135[739 5[586 3[776
1138 10[553 683 9[1228 11[1107 14[1012 361 36[783 22[{
 enclmmathit ReEncodeFont }11 1328.35 /LMMathItalic12-Regular
rf /Fl 650 2[723 5[650 17[650 105[578 1[686 939 686 723
506 513 506 1[723 650 723 1084 361 686 397 361 723 650
397 578 723 578 723 650 6[795 2[1336 975 1[939 723 957
1[885 1[975 1192 813 1011 668 469 975 1021 849 885 993
1[921 975 1[614 1[1012 2[361 1[650 650 650 650 650 650
650 650 650 1[361 434 361 2[506 506 2[1084 3[361 3[723
1[759 27[{ enclmec ReEncodeFont }69 1328.35 /LMRoman12-Regular
rf /Fm 3[1196 5[1076 123[956 4[1196 837 849 879 1[1196
1076 1196 1793 598 1136 1[598 1196 1076 658 982 1196
956 1196 1046 9[2223 2[1497 3[1470 1616 1682 2041 1293
1685 1[801 1682 1[1353 1412 1649 1554 1530 1625 9[1076
1076 1076 1076 1076 1076 1076 1076 1076 598 717 15[1196
1[1255 27[{ enclmec ReEncodeFont }51 1912.83 /LMRoman12-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fm(AN)718
b(1.4)f(-)h(1)f(W)-179 b(ac)-60 b(hstum)716 b(-)i(MC)g(-)f(BIFIE)p
0 TeXcolorgray -741 4800 a Fl(1.)p 0 TeXcolorgray 651
w(W)-108 b(ac)-36 b(hstum)572 b(tritt)g(in)h(der)f(Natur)h(fast)g(nie)g
(un)-36 b(b)36 b(egrenzt)571 b(auf,)j(es)f(erreic)-36
b(h)g(t)572 b(einmal)h(eine)921 6792 y(gewisse)450 b(Grenze)e
(\(S\344ttigung\).)h(Diese)h(S\344ttigungsgrenze)f(sei)g
Fk(K)95 b Fl(.)449 b(Der)g(v)-36 b(orhandene)449 b(Be-)921
8784 y(stand)433 b(zum)g(Zeitpunkt)g Fk(n)h Fl(sei)g
Fk(xn)p Fl(.)921 11330 y(Zur)537 b(Besc)-36 b(hreibung)538
b(vieler)h(V)-108 b(org\344nge)539 b(\(W)-108 b(ac)-36
b(hstum)537 b(v)-36 b(on)538 b(P)-36 b(opulationen,)539
b(A)-36 b(usbreitung)887 13322 y(v)g(on)321 b(Krankheiten)g(o)36
b(der)321 b(Informationen,)h(Erw)-36 b(\344rm)g(ung)320
b(etc.\))i(v)-36 b(erw)g(endet)321 b(man)g(folgendes)921
15314 y(mathematisc)-36 b(hes)433 b(Mo)36 b(dell:)921
21499 y Fk(x)1660 21698 y Fj(n)p Fi(+1)3510 21499 y Fh(\000)21
b Fk(x)5303 21698 y Fj(n)6298 21499 y Fg(=)369 b Fk(r)57
b Fh(\001)21 b Fg(\()p Fk(K)116 b Fh(\000)21 b Fk(x)12234
21698 y Fj(n)12860 21499 y Fg(\))299 b Fl(mit)433 b Fk(r)406
b Fh(2)368 b Ff(R)19254 20951 y Fi(+)20042 21499 y Fk(;)521
b Fg(0)369 b Fk(<)g(r)405 b(<)369 b Fg(1)433 b Fl(\()p
Fk(r)470 b Fl(ist)434 b(ein)f(Prop)36 b(ortionalit\344tsfaktor\))921
25693 y(Kreuze)433 b(die)h(auf)g(dieses)f(Mo)36 b(dell)435
b(zutre\033ende\(n\))c(A)-36 b(ussage\(n\))433 b(an.)p
1062 26734 44260 45 v 1062 31822 45 5089 v 1770 28594
a(Diese)i(Gleic)-36 b(h)g(ung)433 b(kann)g(als)h(eine)g(lineare)g
(Di\033erenzengleic)-36 b(h)g(ung)433 b(der)g(F)-108
b(orm)1770 30586 y Fk(x)2509 30785 y Fj(n)p Fi(+1)4707
30586 y Fg(=)369 b Fk(a)295 b Fh(\001)g Fk(x)8469 30785
y Fj(n)9390 30586 y Fg(+)g Fk(b)434 b Fl(gedeutet)f(w)-36
b(erden.)p 42912 31822 V 1 0 0 TeXcolorrgb 43621 29610
a Fe(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45277 31822 V 1062 31866 44260 45 v 1062 34929 45 3064
v 1770 33726 a Fl(Der)325 b(Zu)-36 b(w)g(ac)g(hs)323
b(pro)h(Zeiteinheit)g(ist)g(prop)36 b(ortional)324 b(zum)g(momen)-36
b(tanen)323 b(Bestand.)p 42912 34929 V 45277 34929 V
1062 34973 44260 45 v 1062 40029 45 5056 v 1770 36833
a(Es)434 b(liegt)g(ein)g(k)-36 b(on)g(tin)g(uierlic)g(hes)433
b(W)-108 b(ac)-36 b(hstumsmo)36 b(dell)434 b(v)-36 b(or,)434
b(d.h.,)g(man)f(kann)h(zu)1770 38825 y(jedem)g(b)36 b(eliebigen)434
b(Zeitpunkt)f(die)g(Gr\366\377e)h(des)f(Bestands)g(errec)-36
b(hnen.)p 42912 40029 V 45277 40029 V 1062 40073 44260
45 v 1062 45202 45 5129 v 1770 41933 a(Der)430 b(Zu)-36
b(w)g(ac)g(hs)430 b(b)36 b(ei)430 b(diesem)f(W)-108 b(ac)-36
b(hstum)429 b(ist)h(prop)36 b(ortional)430 b(zur)g(no)36
b(c)-36 b(h)429 b(v)-36 b(erf\374gba-)1770 43925 y(ren)434
b(Restkapazit\344t)g(\(=)f(F)-108 b(reiraum\).)p 42912
45202 V 1 0 0 TeXcolorrgb 43621 42969 a Fe(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 45202
V 1062 45246 44260 45 v 1062 48309 45 3064 v 1770 47106
a Fl(Mit)434 b(zunehmender)e(Zeit)h(wird)h(der)f(Zu)-36
b(w)g(ac)g(hs)433 b(immer)h(geringer.)p 42912 48309 V
1 0 0 TeXcolorrgb 43621 47110 a Fe(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 48309 V 1062 48353
44260 45 v 47992 4800 a Fd(___/1)p 1 0 0 TeXcolorrgb
47998 6792 a Fc(AN)369 b(1.4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 52381 54804 45 v 0 TeXcolorgray
24746 81281 a Fl(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(AN)718 b(1.4)f(-)h(2)f(Wirksto\033e)f(im)i
(K)-60 b(\366rp)60 b(er)716 b(-)h(L)-179 b(T)717 b(-)h(BIFIE)p
0 TeXcolorgray -741 4800 a Fl(2.)p 0 TeXcolorgray 651
w(Ein)590 b(P)-36 b(atien)g(t,)591 b(der)f(an)g(Blutho)36
b(c)-36 b(hdruc)g(k)590 b(leidet,)h(m)-36 b(uss)590 b(auf)h(\344rztlic)
-36 b(he)590 b(Empfehlung)g(ab)921 6792 y(sofort)346
b(t\344glic)-36 b(h)345 b(am)g(Morgen)g(eine)g(T)-108
b(ablette)345 b(mit)g(Wirksto\033gehalt)h(100)217 b(mg)346
b(zur)e(Therapie)921 8784 y(einnehmen.)316 b(Der)h(K)-36
b(\366rp)36 b(er)316 b(sc)-36 b(heidet)316 b(im)h(Laufe)f(eines)h(T)
-108 b(ages)317 b(80)217 b(\045)316 b(des)h(Wirksto\033s)g(wieder)921
10776 y(aus.)380 b(Die)h(Wirksto\033menge)f Fk(W)16399
10975 y Fj(n)17405 10776 y Fl(im)g(K)-36 b(\366rp)36
b(er)380 b(des)f(P)-36 b(atien)g(ten)379 b(nac)-36 b(h)380
b Fk(n)g Fl(T)-108 b(agen)380 b(kann)g(daher)769 12768
y(\(rekursiv\))401 b(aus)g(der)f(Menge)h(des)f(V)-108
b(ortags)401 b Fk(W)23542 12967 y Fj(n)p Fb(\000)p Fi(1)25772
12768 y Fl(nac)-36 b(h)400 b(folgender)h(Bezieh)-36 b(ung)401
b(b)36 b(estimm)-36 b(t)874 14760 y(w)g(erden:)10389
15807 y Fk(W)11617 16006 y Fj(n)12612 15807 y Fg(=)369
b(0)p Fk(;)p Fg(2)296 b Fh(\001)f Fk(W)17842 16006 y
Fj(n)p Fb(\000)p Fi(1)19966 15807 y Fg(+)g(100)p Fk(;)656
b(W)25468 16006 y Fi(0)26363 15807 y Fg(=)368 b(100)435
b Fl(\()p Fk(W)31862 16006 y Fj(i)32671 15807 y Fl(in)e(mg\))921
19245 y(In)527 b(w)-36 b(elc)g(her)528 b(W)-108 b(eise)528
b(wird)f(sic)-36 b(h)528 b(die)f(Wirksto\033menge)h(im)g(K)-36
b(\366rp)36 b(er)527 b(des)h(P)-36 b(atien)g(ten)526
b(lang-)921 21237 y(fristig)435 b(en)-36 b(t)g(wic)g(k)g(eln?)921
23783 y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36
b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357
b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36 b(h)g(tigen)921
25775 y(Satzteile)434 b(so,)g(dass)g(eine)f(mathematisc)-36
b(h)434 b(k)-36 b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36
b(tsteh)g(t!)921 29265 y(Die)550 b(Wirksto\033menge)g(im)f(K)-36
b(\366rp)36 b(er)549 b(des)g(P)-36 b(atien)g(ten)549
b(wird)g(langfristig)p 37273 29265 3150 45 v 40895 29217
a(1)40423 29265 y Fa(\015)p 42017 29265 V 3699 w Fl(,)874
31257 y(w)-36 b(eil)p 3728 31257 V 7350 31209 a(2)6878
31257 y Fa(\015)p 8472 31257 V 3583 w Fl(.)p 0 TeXcolorgray
0 TeXcolorgray 921 32740 16736 45 v 921 35824 45 3085
v 8963 34521 a(1)8491 34569 y Fa(\015)p 17612 35824 V
921 35868 16736 45 v 921 39128 45 3260 v 1629 37924 a
Fl(un)g(b)36 b(esc)-36 b(hr\344nkt)362 b(w)-36 b(ac)g(hsen)p
15247 39128 V 15955 37830 a Fe(2)p 17612 39128 V 921
39172 16736 45 v 921 42431 45 3260 v 1629 41228 a Fl(b)36
b(esc)-36 b(hr\344nkt)433 b(w)-36 b(ac)g(hsen)p 15247
42431 V 1 0 0 TeXcolorrgb 15955 41134 a Fe(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 17612 42431
V 921 42475 16736 45 v 921 45735 45 3260 v 1629 44531
a Fl(wieder)434 b(sink)-36 b(en)p 15247 45735 V 15955
44437 a Fe(2)p 17612 45735 V 921 45779 16736 45 v 0 TeXcolorgray
0 TeXcolorgray 21610 32740 23212 45 v 21610 35824 45
3085 v 32890 34521 a Fl(2)32419 34569 y Fa(\015)p 44777
35824 V 21610 35868 23212 45 v 21610 46899 45 11031 v
22318 37728 a Fl(der)411 b(K)-36 b(\366rp)36 b(er)411
b(des)f(P)-36 b(atien)g(ten)411 b(mit)g(stei-)22318 39720
y(gendem)296 b(Wirksto\033gehalt)h(im)g(K)-36 b(\366rp)36
b(er)22318 41712 y(absolut)665 b(immer)f(mehr)g(abbaut)g(und)22318
43704 y(damit)476 b(der)e(Abbau)h(letztlic)-36 b(h)475
b(die)h(Zu-)22318 45696 y(fuhr)433 b(\374b)36 b(ersteigt)p
42412 46899 V 43120 41716 a Fe(2)p 44777 46899 V 21610
46943 23212 45 v 21610 57974 45 11031 v 22318 48803 a
Fl(dem)886 b(K)-36 b(\366rp)36 b(er)886 b(t\344glic)-36
b(h)887 b(zus\344tzlic)-36 b(her)22318 50795 y(Wirksto\033)707
b(zugef\374hrt)d(wird,)i(dern)-36 b(ur)22318 52787 y(zu)793
b(80)217 b(\045)793 b(abgebaut)f(w)-36 b(erden)792 b(kann,)22318
54779 y(und)401 b(somit)h(die)f(Zufuhr)g(im)h(V)-108
b(ergleic)-36 b(h)22318 56771 y(zum)434 b(Abbau)e(\374b)36
b(erwiegt)p 42412 57974 V 43120 52791 a Fe(2)p 44777
57974 V 21610 58018 23212 45 v 21610 69049 45 11031 v
22318 59878 a Fl(der)411 b(K)-36 b(\366rp)36 b(er)411
b(des)f(P)-36 b(atien)g(ten)411 b(mit)g(stei-)22318 61870
y(gendem)296 b(Wirksto\033gehalt)h(im)g(K)-36 b(\366rp)36
b(er)22318 63862 y(absolut)289 b(immer)h(mehr)e(da)-36
b(v)g(on)289 b(abbaut,)22318 65854 y(auc)-36 b(h)551
b(w)-36 b(enn)552 b(der)f(Prozen)-36 b(tsatz)551 b(gleic)-36
b(h)22318 67846 y(bleibt)p 42412 69049 V 1 0 0 TeXcolorrgb
43120 63866 a Fe(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 44777 69049 V 21610 69094 23212 45 v 47992
4800 a Fd(___/1)p 1 0 0 TeXcolorrgb 47998 6792 a Fc(AN)369
b(1.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 73122 54804 45 v 0 TeXcolorgray 24746 81281 a Fl(2)p
0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(AN)718 b(1.4)f(-)h(3)f(H\366he)g(einer)f
(P\035anze)h(-)h(O)-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray
-741 4800 a Fl(3.)p 0 TeXcolorgray 651 w(Die)361 b(H\366he)g
Fk(x)g Fl(einer)g(P\035anze)f(w)-36 b(\344c)g(hst)361
b(in)f(einem)h(gewissen)g(Zeitraum)g(um)f(4)217 b(\045)361
b(pro)f(W)-108 b(o)36 b(c)-36 b(he.)921 11330 y(Stelle)337
b(eine)f(Di\033erenzengleic)-36 b(h)g(ung)337 b(auf,)g(die)f(die)h(En)
-36 b(t)g(wic)g(klung)337 b(der)f(H\366he)g(dieser)h(P\035anze)921
13322 y(b)36 b(esc)-36 b(hreibt.)433 b(Dab)36 b(ei)434
b(wird)g Fk(n)g Fl(in)f(W)-108 b(o)36 b(c)-36 b(hen)433
b(angegeb)36 b(en.)921 15867 y Fk(x)1660 16066 y Fi(0)2555
15867 y Fg(=)368 b(20)921 18412 y Fk(x)1660 18611 y Fj(n)p
Fi(+1)3784 18412 y Fh(\000)295 b Fk(x)5851 18611 y Fj(n)6846
18412 y Fg(=)p 8292 18412 15749 34 v 1 0 0 TeXcolorrgb
921 20958 a Fk(x)1660 21157 y Fj(n)p Fi(+1)3784 20958
y Fh(\000)g Fk(x)5851 21157 y Fj(n)6846 20958 y Fg(=)369
b(0)p Fk(;)p Fg(04)p Fk(x)11277 21157 y Fj(n)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800
a Fd(___/1)p 1 0 0 TeXcolorrgb 47998 6792 a Fc(AN)g(1.4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
24724 54804 45 v -2331 30026 a Fm(AN)718 b(1.4)f(-)h(4)f(Wirksto\033)f
(-)i(MC)g(-)f(BIFIE)p 0 TeXcolorgray -741 33333 a Fl(4.)p
0 TeXcolorgray 651 w(Eine)480 b(P)-36 b(erson)479 b(b)36
b(eginn)-36 b(t)479 b(mit)g(der)h(Einnahme)f(eines)g(Medikamen)-36
b(ts)480 b(und)e(wiederholt)i(die)921 35325 y(Einnahme)319
b(alle)i(24)g(Stunden.)e(Sie)h(f\374hrt)f(dem)h(K)-36
b(\366rp)36 b(er)320 b(dab)36 b(ei)320 b(jew)-36 b(eils)321
b(125)217 b Fk(\026)p Fl(g)321 b(eines)f(Wirk-)921 37317
y(sto\033s)380 b(zu.)h(Innerhalb)f(eines)g(T)-108 b(ages)382
b(w)-36 b(erden)379 b(jew)-36 b(eils)382 b(70)217 b(\045)381
b(der)f(im)h(K)-36 b(\366rp)36 b(er)380 b(v)-36 b(orhandenen)921
39309 y(Menge)433 b(des)h(Wirksto\033s)g(abgebaut.)921
43846 y(Die)546 b(Wirksto\033menge)h Fk(x)13615 44045
y Fj(n)14787 43846 y Fl(\(in)e Fk(\026)p Fl(g\))g(gibt)h(die)g(v)-36
b(orhandene)545 b(Menge)g(des)h(Wirksto\033s)g(im)921
45838 y(K)-36 b(\366rp)36 b(er)435 b(dieser)f(P)-36 b(erson)435
b(nac)-36 b(h)434 b Fk(n)i Fl(T)-108 b(agen)435 b(unmittelbar)f(nac)-36
b(h)435 b(Einnahme)f(des)g(Wirksto\033s)921 47830 y(an)f(und)g(kann)g
(mo)36 b(dellhaft)435 b(durc)-36 b(h)432 b(eine)i(Di\033erenzengleic)
-36 b(h)g(ung)433 b(b)36 b(esc)-36 b(hrieb)36 b(en)432
b(w)-36 b(erden.)921 49822 y(Kreuze)433 b(die)h(en)-36
b(tsprec)g(hende)431 b(Gleic)-36 b(h)g(ung)433 b(an.)p
14856 50789 16673 45 v 14856 54007 45 3219 v 15564 52730
a Fk(x)16303 52929 y Fj(n)p Fi(+1)18501 52730 y Fg(=)368
b Fk(x)20620 52929 y Fj(n)21542 52730 y Fg(+)295 b(125\))h
Fh(\001)f Fg(0)p Fk(;)p Fg(3)p 29119 54007 V 31484 54007
V 14856 54051 16673 45 v 14856 57069 45 3018 v 15564
55833 a Fk(x)16303 56032 y Fj(n)p Fi(+1)18501 55833 y
Fg(=)368 b(0)p Fk(;)p Fg(3)297 b Fh(\001)e Fk(x)23242
56032 y Fj(n)24163 55833 y Fg(+)g(125)p 29119 57069 V
1 0 0 TeXcolorrgb 29827 55892 a Fe(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 31484 57069 V 14856
57113 16673 45 v 14856 60131 45 3018 v 15564 58894 a
Fk(x)16303 59093 y Fj(n)p Fi(+1)18501 58894 y Fg(=)368
b(1)p Fk(;)p Fg(3)297 b Fh(\001)e Fk(x)23242 59093 y
Fj(n)24163 58894 y Fh(\000)h Fg(125)p 29119 60131 V 31484
60131 V 14856 60175 16673 45 v 14856 63193 45 3018 v
15564 61956 a Fk(x)16303 62155 y Fj(n)p Fi(+1)18501 61956
y Fg(=)368 b Fk(x)20620 62155 y Fj(n)21542 61956 y Fg(+)295
b(125)h Fh(\001)f Fg(0)p Fk(;)p Fg(7)p 29119 63193 V
31484 63193 V 14856 63237 16673 45 v 14856 66455 45 3219
v 15564 65178 a Fk(x)16303 65377 y Fj(n)p Fi(+1)18501
65178 y Fg(=)368 b(\()p Fk(x)21126 65377 y Fj(n)22048
65178 y Fh(\000)295 b Fg(125\))h Fh(\001)f Fg(0)p Fk(;)p
Fg(7)p 29119 66455 V 31484 66455 V 14856 66499 16673
45 v 14856 69717 45 3219 v 15564 68440 a Fk(x)16303 68639
y Fj(n)p Fi(+1)18501 68440 y Fg(=)368 b(\()p Fk(x)21126
68639 y Fj(n)22048 68440 y Fh(\000)295 b Fg(0)p Fk(;)p
Fg(3\))h Fh(\001)f Fg(125)p 29119 69717 V 31484 69717
V 14856 69762 16673 45 v 47992 33333 a Fd(___/1)p 1 0 0
TeXcolorrgb 47998 35325 a Fc(AN)369 b(1.4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 73790 54804 45
v 0 TeXcolorgray 24746 81281 a Fl(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fm(AN)645 b(1.4)f(-)g(5)g(Holzb)60
b(estand)643 b(-)h(O)-60 b(A)645 b(-)f(Matura)g(2014/15)g(-)h(K)-60
b(omp)60 b(en-)-2331 4622 y(sationspr\374fung)p 0 TeXcolorgray
-741 7929 a Fl(5.)p 0 TeXcolorgray 651 w(Der)359 b(Holzb)36
b(estand)358 b(eines)h(W)-108 b(aldes)358 b(wird)h(in)f(Kubikmetern)g
(\()p Fk(m)32065 7447 y Fi(3)32591 7929 y Fl(\))g(angegeb)36
b(en.)359 b(Zu)f(Beginn)921 9921 y(eines)425 b(b)36 b(estimm)-36
b(ten)424 b(Jahres)h(b)36 b(etr\344gt)425 b(der)f(Holzb)36
b(estand)425 b Fg(10)221 b(000)g Fk(m)34324 9439 y Fi(3)34852
9921 y Fl(.)425 b(Jedes)g(Jahr)f(w)-36 b(\344c)g(hst)921
11913 y(der)325 b(Holzb)36 b(estand)326 b(um)g Fg(3)221
b(\045)p Fl(.)328 b(Am)e(Jahresende)f(w)-36 b(erden)326
b(jew)-36 b(eils)327 b Fg(500)221 b Fk(m)35786 11431
y Fi(3)36639 11913 y Fl(Holz)327 b(gesc)-36 b(hl\344gert.)921
13905 y(Dab)36 b(ei)434 b(gibt)g Fk(a)8053 14104 y Fj(n)9113
13905 y Fl(die)f(Holzmenge)h(am)g(Ende)f(des)g(n-ten)f(Jahres)i(an.)921
16450 y(Stelle)g(die)f(En)-36 b(t)g(wic)g(klung)434 b(des)f(Holzb)36
b(estandes)434 b(durc)-36 b(h)432 b(eine)h(Di\033erenezngleic)-36
b(h)g(ung)434 b(dar.)p 1 0 0 TeXcolorrgb 921 20987 a
Fk(a)1604 21186 y Fi(0)2499 20987 y Fg(=)368 b(10)221
b(000)921 22979 y Fk(a)1604 23178 y Fj(n)p Fi(+1)3801
22979 y Fg(=)369 b(1)p Fk(;)p Fg(03)296 b Fh(\001)g Fk(a)9137
23178 y Fj(n)10058 22979 y Fh(\000)f Fg(500)921 27517
y Fk(a)1604 27716 y Fi(0)2563 27517 y Fl(...)435 b(Holzb)36
b(estand)433 b(zu)g(Beginn)921 29509 y Fk(n)h Fl(...)g(Jahre)g(nac)-36
b(h)433 b(Beginn)921 31500 y Fk(a)1604 31699 y Fj(n)p
Fi(+1)3866 31500 y Fl(...)h(Holzb)36 b(estand)434 b(am)g(Ende)e(des)i
Fg(\()p Fk(n)295 b Fg(+)g(1\))p Fl(-ten)433 b(Jahres)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
7929 a Fd(___/1)p 1 0 0 TeXcolorrgb 47998 9921 a Fc(AN)369
b(1.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
-2331 35308 54804 45 v -2331 40736 a Fm(AN)718 b(1.4)f(-)h(6)f(Nik)-60
b(otin)717 b(-)g(O)-60 b(A)718 b(-)f(Matura)h(2013/14)f(Haupttermin)p
0 TeXcolorgray -741 44043 a Fl(6.)p 0 TeXcolorgray 651
w(Die)344 b(Nik)-36 b(otinmenge)344 b Fk(x)f Fl(\(in)g(mg\))g(im)g
(Blut)g(eine)g(b)36 b(estimm)-36 b(ten)343 b(Rauc)-36
b(hers)342 b(kann)i(mo)36 b(dellhaft)921 46035 y(durc)-36
b(h)407 b(die)h(Di\033erenzengleic)-36 b(h)g(ung)409
b Fk(x)19415 46234 y Fj(n)p Fi(+1)21612 46035 y Fg(=)369
b(0)p Fk(;)p Fg(98)245 b Fh(\001)f Fk(x)26901 46234 y
Fj(n)27771 46035 y Fg(+)g(0)p Fk(;)p Fg(03)410 b Fl(\()p
Fk(n)e Fl(in)h(T)-108 b(agen\))408 b(b)36 b(esc)-36 b(hrieb)36
b(en)874 48027 y(w)-36 b(erden.)921 50573 y(Gib)412 b(an,)h(wie)h(viel)
g(Milligramm)g(Nik)-36 b(otin)414 b(t\344glic)-36 b(h)413
b(zugef\374hrt)f(w)-36 b(erden)413 b(und)e(wie)j(viel)g(Pro-)921
52565 y(zen)-36 b(t)433 b(der)g(im)h(K)-36 b(\366rp)36
b(er)433 b(v)-36 b(orhandenen)433 b(Nik)-36 b(otinmenge)434
b(t\344glic)-36 b(h)434 b(abgebaut)g(w)-36 b(erden!)p
1 0 0 TeXcolorrgb 921 55110 a(0,03)p 0 0 0 TeXcolorrgb
217 w(mg)p 1 0 0 TeXcolorrgb 888 57655 a(2)p 0 0 0 TeXcolorrgb
217 w(\045)p 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 44043 a Fd(___/1)p 1 0 0
TeXcolorrgb 47998 46035 a Fc(AN)369 b(1.4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 61205 V 0 TeXcolorgray
24746 81281 a Fl(4)p 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fm(AN)798 b(1.4)f(-)h(7)g(Di\033erenzengleic)
-60 b(h)g(ung)795 b(-)j(O)-60 b(A)798 b(-)g(Matura)f(2016/17)h(-)-2331
4622 y(Haupttermin)p 0 TeXcolorgray -741 7929 a Fl(7.)p
0 TeXcolorgray 651 w(Die)434 b(nac)-36 b(hstehende)432
b(T)-108 b(ab)36 b(elle)435 b(en)-36 b(th\344lt)433 b(W)-108
b(erte)433 b(einer)g(Gr\366\377e)h(zum)f(Zeitpunkt)g
Fk(n)h Fg(\()p Fk(n)369 b Fh(2)f Ff(N)p Fg(\))p 0 TeXcolorgray
0 TeXcolorgray 20509 10409 5799 45 v 20509 12400 45 1992
v 0.8 TeXcolorgray 20554 12400 2539 1992 v 0 TeXcolorgray
21651 11803 a Fk(n)p 23092 12400 45 1992 v 0.8 TeXcolorgray
23136 12400 3128 1992 v 0 TeXcolorgray 1807 w(x)24973
12002 y Fj(n)p 26264 12400 45 1992 v 20509 12445 5799
45 v 20509 14437 45 1992 v 21498 13839 a Fl(0)p 23092
14437 V 1902 w(10)p 26264 14437 V 20509 14481 5799 45
v 20509 16473 45 1992 v 21498 15875 a(1)p 23092 16473
V 1902 w(21)p 26264 16473 V 20509 16517 5799 45 v 20509
18509 45 1992 v 21498 17911 a(2)p 23092 18509 V 1902
w(43)p 26264 18509 V 20509 18553 5799 45 v 20509 20545
45 1992 v 21498 19948 a(3)p 23092 20545 V 1902 w(87)p
26264 20545 V 20509 20589 5799 45 v 921 23608 a(Die)344
b(zeitlic)-36 b(he)344 b(En)-36 b(t)g(wic)g(klung)344
b(dieser)f(Gr\366\377e)h(kann)g(durc)-36 b(h)342 b(eine)h
(Di\033erenzengleic)-36 b(h)g(ung)344 b(der)921 25600
y(F)-108 b(orm)433 b Fk(x)5074 25799 y Fj(n)p Fi(+1)7272
25600 y Fg(=)368 b Fk(a)295 b Fh(\001)g Fk(x)11033 25799
y Fj(n)11955 25600 y Fg(+)g Fk(b)433 b Fl(b)36 b(esc)-36
b(hrieb)36 b(en)433 b(w)-36 b(erden.)921 30137 y(Gib)575
b(die)g(W)-108 b(erte)574 b(der)h(\(reellen\))g(P)-36
b(arameter)575 b Fk(a)g Fl(und)f Fk(b)h Fl(so)h(an,)f(dass)g(damit)g
(das)h(in)f(der)874 32129 y(T)-108 b(ab)36 b(elle)434
b(angegeb)36 b(ene)434 b(zeitlic)-36 b(he)434 b(V)-108
b(erhalten)433 b(b)36 b(esc)-36 b(hrieb)36 b(en)433 b(wird!)921
36666 y Fk(a)369 b Fg(=)p 1 0 0 TeXcolorrgb 433 w Fl(2)p
0 0 0 TeXcolorrgb 921 39212 a Fk(b)g Fg(=)p 1 0 0 TeXcolorrgb
433 w Fl(1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7929
a Fd(___/1)p 1 0 0 TeXcolorrgb 47998 9921 a Fc(AN)g(1.4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
42687 54804 45 v 0 TeXcolorgray 24746 81281 a Fl(5)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
