%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 3.5/AG 3.5 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:32:14 2017
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular
%%+ LMMathSymbols10-Regular LMMathItalic12-Regular
%%+ LMMathExtension10-Regular wasy10 LMRoman10-Regular MSBM10
%%+ LMRoman8-Regular LMMathItalic8-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 3.5/AG 3.5 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0831
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3695D634CA0684474DF6319B365E4A64C90F206C9482
B87592ABCED68E71CF21347EC1299AD5C3E089B07B4D82789221081D1C75F39C
BF89BE5BA6C53DBF61FB3614B78F4A8FCD6AA69212F7C45D50561C28368FC5C8
7A4507A5A16BD33271BB572126735E72BE44078D1F71342A97678A63DBD2B69B
E0D1124BDF8EFE3FF6FF5A943CE835E6FE57C59ED52DF91DF9A97F17108D4EA3
AADA25B85BFD07F9BCA9D7C412F535755FFA6B31BCE8F6DAFDE2CD6CAD4FFFB6
9A018EAF4E1ADEC4489276D46A89226F820B309E311279955EBEA24DADEF30D4
B53885899BDAA0254B708B440525163FD5EC1B97E073026515F10BE924CF9FA5
9FE0FA8765619363B21655F6F293D14230591A731D24C72D595CBA1C1DA945C9
A23B5CB2D2456970CFE1D8A1FE004BE8A0E7FCA182860C639094E35D8E97E518
127E38AA43238FC881601B9EECD1EFE20D2497CCA6E07E9AA46418C80F124DFA
19F7973699586BBF68F033CF74E938D44472C1F018037D8F53E49744DEE55CF2
0D04748E3893178EBCAE7FFCA3C6444B227E3F01E200C2EB3564F1388B65BCE1
32473E7A10FFE8B208A84CDE0706ECE033C701943CB2B69A1737B3BEB1CB11F5
27DDE1D6A365005BCA9970276E2EEEAFCF068A48E2CA4F748ACFB7F98F30C180
F994229EF06212037E74982DEC5E969CC6FE93254B4085EA558D9F2B11B9E5AA
ED9A1C334B39C13490CBD8C41F838425E61BA1653F9D845B6EFB06B781C8735C
EAE7EFD9B7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75B6B271326A2E7B313EB4598DD7FEA
4A5D95437CBA46D85A5EAD76FEA956126B3EEC337FF78D906699CB9CD7B4012C
474EB33D12DFABB3BF569214525DB9B2D4B34136FDF936F96FFC813FE16DA5F7
9B0F2B3110B1F8C90170E014FE8F31A5FD35CB74EF0FA13C6DA74D7264618562
DABD7DB8E7F480D0521581902848649AD3EBE39E618667C59EA499B7081A0844
B6DC10555D27819E6CAA1CE453A7A68EF1A3EB2178BBF9B9BEA9DEC679DC10D9
E3553DE260FFD590BEDC71CA9AD4AC12B09E86D933AF49B4CB901556E63BD639
1B3C3C3C80C46745E1CA7983B9E80168018E04A84AB47C854C73FC58A393974C
1AFF488EBB29B293905951355C4D4A4F65BF1A72956515750DED0B87A8D3282C
72C634347874775B6F29EB873134F6BCC2EBBD3703E9619F762D64128A18C957
22E6C0DA907A17868AACF3229C176FC26BFBE255AD62737D234986AFF04FF03C
1DB4D1F2D9F60CF2E4DC5DAF88EF3517A2D91CCCBBB8753F92B3E0CDA5D26523
B84CEE3A0429655F8F25C89E65074A52CC6047885F4105DD62F1FB8CC7A4CFE3
22EBEEE15E3395B062B933EB55FA589373CE26568F78981B480F688646A5C8C5
63B8FAAF19A1F6166685C3FDC27532C931AC8B86E81FB0223686074ED596FA6A
922B662575F23B53B7C6B245AFE90258E743F284E22E30D2B418CAE285AA38F9
FB436D39371781DF4FAAD1CFF3BFEAA81F5D11DD76BADDD8122A4AA44B9F863A
DF8127F1FC35DB9CD34EBC684818AB259FFC3C7CE34C9DAEE69D70D010C70540
3B359BDAA5B9ADD10F6F7F2C19136157C6D83B33313266F1BA8B9E065A0C831A
47D767D4558876E85ABB0B8396FEE0C3327CFFEE23D0D7C24466E5410DD289DF
78C335D2BE90B5C581D536596D97F1F463EDD0A9C0118790E5780C0AC27A05B6
4DB13A023A3E5225E0377ED38749AE1F7714AE5E1D649A3AFCBBF060F416C0B7
47EC5BA54AA743154084CCBBC2A47037DDA09D9601412F731039746C1224A29D
191D9E221C06A7EF3CAD09AD5ADE65A51B6A915CA708D66C3EA93A0BE63CDF0C
D9A4546C9325291D11D02F4C2284918795A5B6E6CAA4CDA0371D452F65EC9097
657F51E83FCC22A30D649B80CEFD9F6FDD51AD33D3DB732FF26650A90912822F
9E77D8AC13393AA1B04DEDDF6C37B2D1DE50258300B9BB455AA872810C7948B1
EC866883E78F23DC9DFF60701F4F7C66B61198F8066DD493031D1A5EF91231B4
470B5A034CBA00791EE592FB4DAB538C280A8047F6290E265C8A88331305E67B
EEEA9A03950593605886E125446E5CCB325BF943C3D7F32D49651F5744A27DCE
6004208003A95DA1371E2EE456CC692DF7B71EAEFA2ED09E82012484AF7649C3
FA87A3AE44D93FB7A0D1A7A08A419AFFF7DF7065992B084D567645EE4D2FC29A
888E5E51A42920248E4BF77A7876799B1FD856AAB0EA73DCCBF7FB5979EF5F01
2CAF413DABCB3290E29A0CEE18F02BF93ACF5E651F75F1C47F2699BD0DA86F7C
5E18E1895ACE4B125EF346F608ECCD4DCDCD47DD7717EBC78AE3DDEAB5333174
18A8E967F635ADA03D2EFF80D463A521EB069C2B6271FD736442AF38A52EB58A
59D7A62D97171B45D2A6AFFB7E617C9265B466295CF70CB228FB295850D653FC
3FA379FB4FA0AD9F83269A99D550366B880AF05F913C074EEAEBE390144ECA2E
ABD1ED2BB6C54FAA70C9BA6C6794E3AC06D503EE876C915252EA75E6FA113380
E4E2A0CEA310D96BDFD883642BDB55525358ADA70C5ED0923B060EA6EEA5B735
D0D62E41842C07B79C0E8DC56C55084EE590D2BD58FD9784BCDCC3D498B69CD1
D7C24466E5410DD289DF78C335D2BE90B5C581D53AAA27CB98A914D22E25B41F
E35179D5E020790534D6BA1670B6783FA8DBA0D35DABEB8E162D2EA2ABCB6CC8
DF8E44430383881E5ED0F7F184DBAA9A394D0E08138E5B80D224D4E8FD6F8BD3
255103D823B86B712CD58FC2FF2C9B963C235A59BC191B84B9B6A2D87B85F21F
39F33AD118513BBA722CA46E21F697AFBFEE1989A09F9F9F7F29C1E0C0F28E3C
C64BB4933D3AECC99FEC69C3B047482C0D6F22E851DFDF1315C0679C0906D77A
B2144E810FFE3A942963C9B2584CE14922AAA9E3456AD60EAA44317BAA8D81C7
33BA78C0DEB8D1A2C9BF7CFAF3F6C87EFC09B43D790D3E80AE0EA0AEE1984C59
0DB7EE142C2444A3F4DFAB0C651407A58102F825D9534F2C1768DE55DD354014
B4AD13F8F95AB9B462F7A5950046C9C4A8CFF3CC3738D894770AD27F2BAA1A8A
C49D55D311D7B27E77C664BA4DA424125D1735CDCF888572C3D4E2F0230BB1FD
DAD562E249FC2F1392F7F378BB1754A2E80DE0D9FB55FAFEE3CCC1C812E9FAC3
31FD70975E3A0C72D37207D8A6034994F5A338B85C4ADD0A28C7A8FB765C4A04
DDCD6E0E7854CB47132679FBABF1DF31D16F8FA295CB56D75A836ED366963BD5
7A5FDDECE89ACF7D2EAABC3C655C247E6AA58C7B3A65D90C4598DE6DF2AA81DF
1E7AD672C058BC13013E94942CDCF8E20DEC5CD4696759CC337B6514AEED350F
45EB766C4ADF2EBF18F155CF537A97C212FB23022E75D57D24147D284196D0A5
17320294E3C7A3A1A1BE80ED8FF0A9C509420006D2229CC525B2E21332AF97ED
907BC5FAFBAAE31FCE73C77BFD275F6CD038A6DB9EC1FB4AA5AF31A16FC07D58
F6AD35B345BFA1CF7B0E9545795A6E62188B643BE9FFFFF69BF0E7C694E07807
E04F51013AA2E2215C03ADCA175FED41854EBA64EA1BFCA7B9ADFF7F4ACC6DBE
671126FE078F52AB62DB59A9B9AD1018F245F33A42CF224F327CCEB361EF2E2B
DD7DB751EC8C146E17EAAFC942F80C2313118CD80744B1160919C81067D75442
072E34982759C289C8F929334930B4AAC76A132C32DCBECD227134E7F747AEFB
6809685156270A536E5DC0236DA24612993121152E7E72353B4E4A19BC80F638
158DDC1B6DDD5CFAA56386D2232E51B3AA708541C4671738A1E0CC16CC401640
5B0F10C340F24A30B1C3E6AD87C7D4424486F4D2504B044E802A8B30DF26FC38
1D8D871D0D96566F0E4910D17124056A1F0AD7E9C1807ADA0EE65BF63372B918
2E8CE99142953DBEE0C0104B1292A1F83517BC28709D3864CA389D6CD1041740
7AC6A0DDA1E77D37AC83F0991A4EB1258E47A4E04D0DC15BA4F0C1D12F27F5DE
5E37A07F94A89276B909954466C7032C6FD3DE6ADE20EBA3FA90A309230B93A5
B74FF64283F15EAA51DF4C74CBB662283EA2C98CCAA3F64D2E64AB21C48203C6
08CCC92CFF820CBFE005BB5D4B098F3CC567E9DA9952F5F95048B505DD5C1BAD
049517C3A95D471EAE9D83E664D7CEF78D51D427D2A9126B689964B87ECC23E8
3F19351612FB0B1E70D91934375C410CFB8AC6C99D8665CD7E1CF880F99229AF
C16232CEBA6D7B35526797A8C94EA0723B3062409182103B078B6D4120137695
A8BE5DEC8383E556D1067F2D10E43F158978ABC35805453F84CC5EEC991A5CDC
8C33DBF86934B5368C099B59A7114410C608C749D1B7D493E67EBD9DF99EED9A
ABA70EBC005B7E807A854FD70F27639BAF68211DD20AF3D34A3498F21B00999A
CC476DBE2C5E7F404E59340CA51DBFEADFF2D6856FA15A36EEA17FDFF093D02F
B419CDEAA8924DD923B74F252664C67CEF45743658D8D43AF001ACCC0284EE83
D6B900DDC00EEB5E881FFE9B414C45B06FBC491330279C671334298D0621D516
6AC107F3AA081661CB91E004CEE7220A24C71BBAC196A23123BB399318B4D2A8
36F88D24D6FE3898D6D1C76D8F8E2C75D7460CE135C4E1D0349033D576ACDFF8
68AD600D610E32BDC63998EFFBD8BB34D2423CC6282C145F3F0029A07BA8C929
7BF8B0B016EDCAF80B9043EB61A3BA3E78F64ECDDADF68975D97F94EA8A698A5
CA287EBBD5193878AF0D3EE755BD5958FD3632E670306CAC950F8A1F66D4720D
DBEDC0E0857B057D019BB4C3C1C751481ED7C692CF08BD1EA6C5B30BE280953F
B8FFF50082E28A8D951207D7C494A7B2784E050A11FE8B1CC619F387E700EED9
D0956AE651C28A61DEDA9859E01101F5604685676CFFF64C9F2630CABF2F83D1
37D226BD5EF6EE8EE1EDC4194F1012D8BB958B6940681AEA50C7C8964FB0F377
23C0C4BFA4DFE3FD4AE99F5A8595EA873728E2C8B6D05AA6861E3ABED84D6761
ACEDE777F2D3BBF85031E42B976BF76149CEE298FA46B57981087E31FA46D2C1
91A16ED86E07D8E45FB322FD0B3D25692D2A0E7C4DB93BAC55016AE065951347
39401B0D8ACDA770B340277CE3950462318057F893A50B1BE89222348D7F09A7
FB9144E9162A946DFAAD95EE0B346EBBB899F1F37A0F89D4DAC9B7B0F3348A1A
FAAE48BE88E0E16B8E376035D6D75C10FB83D7B0EB9DCE189314BFC6A128924F
34C083E289918FCC37040DD4771C1218921FD978D54413617494E68E34391E25
42903355658BD278E67696161CDE14626D101B4E117C63F2E7A60627DC40CB9A
B1634701AD9AEAF5D11607A783874D716DC73DB1CBA45D33E0076E992C7DACD8
026D7F4C5AC1E5D796C0E5A79C61B5BF586A0FFF6BD2983A840B68D656FC1584
2D694DFBC7D7800CBAA90F3BF0022E66A54BE1059BD5D224B674AB4D2AD930F7
F724A305C4DB7BBE9E3E9D166FE9AF6147A8BC97C6834B365C39F4F5C39DC16D
F38ED4E2751BA59C0E9D7A0546E34F8BF633F656FE32F1FF453232617FCB7419
0A46165FBE654065FEA56AD83B17114EC5A7245AE7D9853223CADF1D781A7E4D
07DB3D4F16AE25026F52A8DDD0C9028D5B251EF32A329A624148C46F02C06DC0
6EDBDF4FC7DE2392905875FC28D07872F48FED6ECF7ADFBA23B66124203536CB
04FCAA433B9C6D4683C6C6B46A36ECA3A2B2AD548B7E6BC11F3404DFB91962B6
7EB0838F0E570E8CF04E85BA16BBB3123ECF3733A72A52F7F904C17DC217C7A9
CA604CF8401B289C1AFE778297F5248A37F2CD354ACE5EFEAE295973F7FA2EC0
8BA400C2BBCF8152ABA14FA9FEC5040D1B278B4D30DECAD8C97075573080E67A
B9F074981BA85FE7B19453C2013BB61AEFC3A15FC3CBB1E614186292D44DCC6A
69F94C1E03F1215872715967549F665E4D31FA89D07F9F7B71AABA6AAE1F3C1C
D65F797C3D02191EA2AA3B8A85038832720291FAAC68BB43B9A09A43832B289E
C07FF27F93B72A12C91CBBDB130C200349628F5956A835CBA540866CB82A2248
4EBB508F45A2D621074C5B93A4B520F1284E1B7C5D8474A5E521E7AD69BCB87C
68F1DF66B627B992C83E67679EA3C924E8517AEC1141FEB78E3658C308139AD4
4F7081DA3E8F839EECED8A0313F0A6DB604D39EE99D02D3FE7C02D0BF476D768
D438A2C24653F345F4642D12EA28AFB297DE661883CC13A06C3620FAD86F61ED
E3925484E3FA45344C7FD3D4D3A68B7BBB2A964AB2BE5A83FBE336D8C2D1325E
033E6CA7B01808D190FFC22AF831712233AA23BA994FB0C2B8AD99539008D50D
C093C9E693265E828A441345EA5C4EECC58BFC3D4AFA6168B74E2261A1B0741D
368D2D66F5AA22A1627640EA969285AD222A233EC61899AD22102AE68685A0E9
78D4C5714622E75955FF3E78C4575D810E7E050508B476A385CEC705A2EB89D7
F32FBD60C08B86A3021A5E482C8AE579801B110C76FD7357B8B0659B1BCD7335
D0A83ABBAC55FD47082DBE00ECB6C5C0F3CB6F2433FA52B2594B85C1F204B650
9D5201534954EAF50FBA122F4899016E04B4623EDD9332FD97D03F0162CC8BDB
0FF69CC3901209AE676967CFC73A878756C67A46AE14E613A8B3A93323427608
2E17993B297043B2F75674AA08FB0BFC904015AA56AE725E5AEE820FFAC05686
3E893BFF7C0C4F83D0D961AFC767E7024AE30751F349735B6CF6543D1067A9AA
939ADE975C80C4626D6BFE9FDA94629DB2CE69239856F03E138D66F8F733E229
271102112617F14FD5C3C6C486658937E811DEC0282EE3D0E3C1A31B94D7F13A
33FE49FED460A102B225FF51C3CAD527A8BF9BF8D495F7B532647689F1F21366
57C025AD24664C9C8191484D5D8E1304268CD4715C7B381ADD4976C0C856986C
FC6730241A41A2AEB1DE5FBA892DFACE7CBA94036E7A98F6B77F65031C7D4F88
38154177B46BFEC2D3481EF9EE5D5BAE73131662CFFF5E427A5F5DBB56FE1FC8
15414798C06E05F9BEF1443CD00570B204F24BA7D6B2F266806E6B3FD434FDE1
329BEFE5A0C84E3977329139F1192DF3F9D6BDE77DD5870ADEC8900D6346957B
84C8C7258B552DF354FC6CEB056DA1B1163C274D54F1350C83A736479DF26E8C
FF16EEEF9346A156B1131100E3AF27DC49B4DA067FDF88CEF019BDDF15F1864F
5406CF60DC00C440EEC436274984B73FD1A0031F824B4379E2E62864039797E5
87FC41E5C04B4690A2F2526D0272FD1B8220A2F5882788FEBDF78B312FF0A732
2C021122E962CD756DE48DA93798FBDD034F46AD3FA9E8C2D786CB4E75B9CED1
03496C03093961B8215359D6875C634D9ACEF68ECA80DEC81A3B612DBBC52B97
CEB83FAEE7B897F107662E8467FAC8D9E2AA0F906E7211622FCCA2C5462EA92B
205DD2FB6D547ED3D559005ED37BEB1ABEED9E395F1F1DD95ECC8B4432266F91
66273B59935B388CF75B423EDFBC4680B3A107EA9167B4A22855C1F6110A42D0
F70DAB4D6B7E2187A3BF218A6457C7CCBC0B06CE3AF4C560DF495B58D53E718D
89741F32C6351F8C78E4B9A0F49AFF1B3302A64232D15AE1B845171FD57FBC1E
6470FBE00FFFF6D3664C5D0355F8BF415C1A47585A4736B1045640800B098489
8282CB81A1D8FD3B8EF85867862B8FFA7167A39E37833AFDB4BBA8D5D855EAE0
0597C351139020D27A614DF27C3A72B169AA4B53EB63496BE00FAAA681420DA7
DC25AFA04AD42EBAA71F635AD4656A8411543FD8B3DB6B7ACB32CA6E4DEC6127
A633D126CD63FDEE48E210E261C16EF1A0236360B2A298C718416514400EB47B
86E2FB3F8777BA26C0DA8D6350B352014576858A26DF969402AB30E0F9C56CAD
A5D9811D78900B7D347046FF9C2A9DA7AEE1F42E318FAC7813157D0F0ADBEC73
9208D41C02C71A920C9DC8CABFF7BABFC41EEF179A9E95A7B2A70E3A9170C482
33DB00A098BA24A0C4A864AD85DF65F71B56A2E8BAC52A17FB2D357BBBFB0E12
CD481F96252AB7402213DF9BB57411622FCCA2C5462EA92B205DD2FB6D547ED3
D55900582DC2A7C10394B4FA2872BB77817D1E2258EB8E4A109699B8A1F921BA
F0ED78D89F33F144043D0FEE36BBF30AFF155EBDF9AB2A053F432A3149B7BA16
8CA488A7CCCFF0B23C07EDE4EA5BEC2AA85224F7C29A671F032195D9DDE7F51D
D5C45AF9CB8A6362CD7F38CC43C354FB4992CA8AA113256A370E02BCEB767B25
5C72846F1570C10ED164D1841B2FE33F3DF5262A92E98F7A5873F70B91A6C6DB
6BA74C7DC0D0D0A183BD254DBFAA7388CF2CBBF3342BE2E7EA49AABA75AEEEC5
DDE1D8BF68483C3D2447F4FFF02D0050E6489C4957F418895E6576FD8A8492C7
E1AB315D335B1A481FE3DB344A5F50DA95EF3F0F93CD2305D67A473BCBE4830A
B55944F07DE38907B58D16FCC2A074E4B55A869C96FCA78117347B9CFA480FF4
A19B9C158291D7F537E66AF56C22A58D8D35E53CEFC1C884F25A63CA278DCC38
682E1BC6D134930242730DFD156C0584682B19C3799784C1394A7F95FA260EA1
3D49E335E7800708D97515CB6CF112C2A89D2D44816E907417BF962CB750BE2E
146ECBDD16A1584F3EA2AB3D9A37867D85840C6AB9269E1FFD3D6432231D47B3
729F7F9F81AEE979C967DC7FC302C4D295E606E3BEB5DD0B068D6EB99F5F10C1
83245F1B733C17D3B854D53BA686CF408A174C4095D3732590B5E767CC184E97
59AEBEA33FBFEF7360758B40E87EFB947F6EF31DCC61CDDFC39A2771827A03FB
E2486B329E785A8113B00497A08154752DCC693ACDBECD3B9F74A6B21D04D33D
8D6867E328F1F84E503918D4F7A808F1DD37AAA08EF4F57EA64B4B227379834B
494CB4FAD1E78E9C6871F23DD7DEA7C7D956560D8BA51ABB82EF2B3AD0DC0EDC
D1DCE78055807A3A8E822A31DEC6D989490ADE623FD53D3DCABB2ABAEF03EE07
C3EDE4F0AF6B7A776C63DADDCDD47EA7CC5A25C793F813C55BE3B470A5800B4F
EDC4A99823CAFF87E567B96574144DFFC8BB0B9B743486E0A343D68682DDD7E1
0A9FB3BCBD8BD4D92DACE0A7B4068772E5278DC12151835699EDADD87DC8C632
5F0460690BE677AA6DB7E0250B5194D04A18A3CDD0D72D52948373E38251C508
E4505E845177AB715C3E6AB79D37E3F452F951612427A24B996F9F170CA2D76D
94BCE9E2F06F49A6F65CFF1A4F8BA05BFF847954D298A39FCDFBCB88AC0EA6AA
CCAB081537DBE4849DE52AF793A4937CFC9E9ACC236CE307310AA50B8A67181C
0DDB2999F26EED9D32C373613F2E788C56EB0FA4ED1F232CACF2867E6F462C04
4BC20DA885EDCD48017EB746DDA8ED86888DDA3065C5091D99EEEAC430924707
3044D4B1F6F9AD92CDAEAB2DAEE928681EF627A2AAD93DD3DA2A47FC87C5E3CF
18CE4227ED29B9A8CF29DB40473AEFA67EEF8FB207ACB013947A866A8ACE63BB
825F4B0F36E5B0018C20AB43FB4C215C95659DD7D7207F8C04C021434CC2FDC3
5A4FDC88E365F40B9D576708B6B6AA87B5EBACB8F10A27E2B97314A9BFED3E11
45BF128BFD65CC057FE1DB587C8B2D7A74FCA897EE756EEF785C969EFCA683A8
3C9AD337F4726906EB3D588F93D2104F2FE63F810E6A3000E8960E71B73E9003
276E22FA42881EF50DFCF371A8C762AF5BD7C49E875699AB0AF95891548445E2
423C73FBF82E9961A7926D1A05FDB243631EFA7025B92E55DD5D5897F13EDBB3
356F9E2B9DE1FBE209F9CA03F6B4CA4588D5430DD9943FA6EE299A4FDAD6B1C6
2ED755C31CBDECBBB7C3FBCA1B459501F78B07E4A73F5DB00C952DEE1F6CE6A0
752411EC61354347A5FD43D296FC220C6416877F7F1995EA262713DA7EC6ABDB
A76084AF0E901B4CB170B03CC44F6B34BC47F3A3226AC68289D2EC32B466D21C
9B802FF1810458E2756AEF02A8FD4A64972D941EC585207C0E0AE908826A5894
9611AD7ACADC778ED2784B3423154B7FC03D43F47C6F5546EDB0EDE9BC6DFFF5
67025D6E00A898F0FA2804E0BDA68B696F299A0821E42C97CC50E6C4D6C1ABDA
A045DF3C2F7F9F8206F24A189E57A0B5C178B7326860AF2A3347D964A134CC09
9A59CC5126F95FA957C3CE225C0FDF7C0B02C3678DF44F20E718545C2F6F7E7E
A4526FBC431FA82095A39C74183F41E46F2C56BCB59CE6AEF7E91331ED5D9A4E
479C21D6A7DA9D6B0B4FF494C2668BB221AB188DC03492775B2B72DAA50008CE
4A663353A1DAB9DA50258300B9BB455AA872810C7948B1EC866883E78A3F4C74
3DCDAD88BEF8B3F7104BCAA6E752EE90D2B38F2DA6707A896EC55D98E82E3417
677CEE755D41C6192B100D56F15192E10DCF5EA55C12219C8AF09C7FEA6FD001
3BC73E02B5065DDE064D64B07C5041BDB97BAB801A993B33CB35844961E68842
CFC30E62F392C5C166ADC35156CB090E79A5CC212295946E98647A6F5903A6BA
EDF01C0D83A41379B0ECFF59CE398BBCF79F56450208CC12BAF282AF59619638
A93EC62A029471B6078CFFD8A93C63A2AE944CDEDB8CB0483DBAE03637CC4C30
DF26D99F628D62581D54A0EADF9DEFFB3DB34A9F052BCE33D0F67FAE47CF016E
3B3AD1A5C090108D4964C7FD5E57B7B839E058C6917D4D2261EF3B27F4F84A27
603543947A1C2DFD3164CE25F9A19F120360F93E7BE38AFBB5932C570E8F1106
F98799495DBB3A05C04BD649053FD29385E9D3822007395A5D78C698C7366C1C
453FD7CC6E94C29F597CE7E75A8F7613805064BA22FE6411CFF2DF50799947D6
5414D629B139C0B3C2BF3D2905CFFAE9EAF0BBF3A22B3EA98F5ADA485A644A34
CD0F70B5ADA7DCC9E4CBB91AE2FAA8D878652A4CAFD1F9EB162702D1F6805D85
A8216B17742ED304B2996DC77BEA528DD00039AA5387ADAC3617AD77C899FE86
E54B8BDB1490AC76FF84E5C3FD68A234C9BECC29AB2EA93D4D4B5A2BCEB8AB14
CF291E7A18859EDE149FF3F07B59EDA5362CDECCBC03A19FCF1125C2B0BA6F14
13D796C008A2ECD55E062CDFDFD9C0C549CEC434910D8AEAA207BEB7A8B22721
7A2570A2487847107009B163709687F03E8904C670CBFF1BC60D1A07473EB703
C2B27847402CA4B685827479170AE5F99FF4C1D98BA42AA91660B2AE39F7BAA5
A9077FB463B8C35CA96A594D27DA3C1237C61DE1A5F5B26FC8966F17D3D545F7
DA471CC77A08633A53B62B760DF589FB2CF3EBA2F6AAC3F6FD242C25F6952AC5
5C24ED123A69E8EEA7221CBBE91BC55A81CC89FDE91EA283543BFC3DB722C5BE
799C9F485827AB10332BFA0505B5EFA4F5C59B381527B753DEDB0BBB7D3F0376
8BAF8691733BF48669EC0B1D817B4DB795BFBCC80F4EFBE3D7E3776948F8D116
96805A94EF9D879BB2E5DF7188DC7DDF4D7C8273211809C8DCFF798F2ABFC4F3
539392985C4CB324B0007E830B78301A03015901FD3A2CD7D5958BC9670F3722
5555B3B50E5204E612A84E61DA20F004DDB1EA743DEAB15756522DE65BA32464
0B70E9B902E9FB32F894C4CF451DD10098E54CE3F758E2C884D6830B00E1FB1F
743CA70F98903806F30AF37522828FD5DE3EC220C719B63A95EE943F25A823A8
8C7E731F647895CECD96CA4A2FB08545662DE0616473D1DD73635F2A6D25FF8F
941042919BC8E49987E0A462594AFB132AF95D2C459ABFECFD7096366E004D43
6C27CC46EEF80FA1A05AB90D788643BDAA80A3358D068EA5038FAC8EDC241DC3
360844AD12B1FF1DA78D51B6F3880C38FB2349BE51D981A08AA153E57F9DCD40
430507B2814046F5F211E16EACD389622F0C6FABF465CD8674717E87E6481701
FD1E1B8705C512C0108055A1BDFD83F4E6FB7C769819702617D08C10F4DC99E8
0028ADA6938F1BBF331D54AF9C627586F74CA84272C6A6AA48D9FF64C0A8959C
2DDC8B5F4F725ED7106CB261CAB582F367CCFEFDEF1C42C612D947DF7BF71424
AABF005BDAB11CB8C655A72354626722C510D6E242E10D29DEF786D7BBDAA2A3
5EB13FD17790793B2B4A9E06A916D8C6A93A6C0E4A2AE7B930B69005A3A2C122
5FF0F5DDA04B584EF886716F299981EC9BEA227BEE986A9A0D47A669C20B732A
AB2589536FA3B43E92840BD29870214BA57E5DDD4315463D662B9274D2E29312
ACAA9B901E3CC8090E857AB029E6C75123998FC42D3E0C3F20960AEF3549801B
F7518806C6D295955BB71395C43390497BB8F03AC4B9254462A42F410D55B6F5
4027C1582963712777AFB86E4FDDC0F31F92595FE56D439417455C5DF15519B9
0355ABACCAB80AFEE37A412B255DD542E77E5FF7E1744D529624024E35566FF0
EF71D60ABD9581F43AFC4A1BD1D7AB84C2DDCF5DA974B2068488AE47A9F07ED5
EB4D391DCD5D08268EAB44BA2650CBFC0CA9B55CBEAF992D7C9F3D4C2CB294E4
4361808DB41180D66B2A43973F90045EC2A8437DF5F02A69E236E3DA43171237
1A1D71BCEF8BAAC89772FBFE65D33E336D9595FD349D0874D0203F8C21D9CC04
E187BE53F8FED4F33633BA03A22DC683B3C8533624EA8841787FEC863F584F1F
FABFAD3A2E6AD0F142653DA546D27C470377E95C9B1336AE10C98008512E1E9E
B36A96421288D8A846DA9F3D3B8DCF710DD336290176B3E0B546698B6A12F524
DC97030DFB981F11116C45649029E8664B1EF5856534B80E1124ABC86D6376AC
6E3F7414E4A017F9FAE43F47C36E5544A0C54A415C5AB2A72BC3F9A63FC847DC
244530BB6D83D8495BCBD805D3FB3054DFF46F83F65741B1017E96CC1AFBF465
C25A312852770DAB7D39E1217619DADD5A529B743B0977263E4EB261F6718EBF
15ABA15B45CE0008CF15222103B3BC5F55E235A90201A826568CF2C21EE1C3E7
45A96B9D1102CB26CBE3E62D0410DA79BAB5DBE07DEC2628A57CD458DF6ED9F8
FAF6B0A70F46877976C12FF9758C0625FAB1DEA0D55F11A0674E11C30C0E964B
009A0D5AE5DADC353EF52CCCCE5A99EDC232F01C9EA889DA4DAA4227182ACF45
5865CA526CD0C3AF1F22BD3E3ED3DF208D3C2EAD0BD5AD97E55CAC100AE56356
4FC1EDA0CDAA94F414ABCA46ECF689BA685F1BD831B4271EE6BF93276CC51C86
FEBB15424B17BAACFAD06CDD337834C067CA415362050ECB9A7C3AB8AB6C697A
D5845D58D9ED8F00ADFC43DF9A0143E2ECED58D83420F4B02BD746BA78DA8CBE
C2E6CF74853B93B427A89089E953E1E2F0364B9E535558146EA08DA0C652BCE0
1A9FA4A9F7E83E5A35ECC699EB8815ABFD76B252DA958829F3C7D61F31822B91
9195B5862C96EA1243561331C2D9EE7B65B82582FF665721196CC9E9DE49E5BC
7F4070BA732D56CE2A0B7759542BA952A714D454416CB94A007509B3DEE24837
AA2077762F4B71862C04384D39621BD0FC52CB938CB2D6250B9B5A29475E6D8C
7941A079B1FD89BA0DF0E23866F7FBAF466136460A8ABDC4FB7A6B0BB95D213C
9E844A30EF07FF70EADB5D360E52B0879E3FF37E86E0541451E2504DC6092E53
F92783E0AF62957C5F79B80DA6F7A9E9B5ED66F92F3918E329298D9F6293E861
4966D4EB74CBB3229F32D00F99B504DD1602FBCC202CC8046D2C6F867D0207BD
48FE8067168C4412FC80CDBA62F8B5EE4799A66A432D5FA8044190358D9A42B0
2D8D79081DFC1266E398C58FF8074C8E860FE132AC46A5AA4DD33561D6864F50
6D98DAFC5178F2888E87D68C0B8C9CF3C303218DDE862922A8F80A0DD8B36675
E83371DDD0804521CD931104741A6C9845338F0D171803EC04C9534EA7560311
2A781CB563378D8C5CB7F8729D436B65B80B3ABBF6F3A7A5FBADAB4FCA85D1E0
E9149E638845279D7D1882C85174FC32A61B787769985079D60CF71131977E01
B98BD4D92DACE0A7B4068772E5278DC1215183569F9F606219F17E801AF5F306
13E7A2C3D32301ADBCFAAE454977605D7A072513C78F710DC9A54F1891759DBC
520CCFB55CA9534511D08883DE4ECD76DFEF5D26165777E3A6AC573D7380FC35
63D88AEDC9A339CF931828B48A786E23104BF1F2120197E9029CCEC265896D74
07CDFEFB4F82C7052CA4B6D9562B4D49DEDAF13B1FAEA97978E66186A98D901B
B47DE5D3C0CB6239FB2D5B4AE3224D98927206B1397E32E2D63C350442E2115B
8D8EEB7C04319771FDCDC0F19C8D0285CBCE07513C22253B9753998B172BB857
A128D43EC71195255DB36DCC13A89DC815DEBD8D82FC9AAF598C88CEF2A15D6B
13B95692C2467A80D01B800831E129F0DBDD7BFBBEB8C1E91EDC4F4ABAE63F91
79E939E8E50F7BE4118ECC2CC40F691AE97489E86F730074CEF8E44EA7FC0D28
FF3E8AD35CF856DCBF0AFB088AEB39EE217541A4C17DF1A012D2896DFBD323C6
1060D30B9407C3D09FFCAD95A1C64FFBC6312A96DFB2B087FD918D3B0ACAB4DD
394F6FA4728AF2CEED07C4C304955D53D70756AFD54C0DF38C3D61071868A4CE
3EE4C9F842EF5F146D57D0287D62D1A34793E173D032F164360D643F1880D27C
0F7D73029F171028FDDF8B55093791EA7C2765D1983BD77CC4F02023B383E397
12D0264CB3CB960EAE6489CD6C8FB1F1FE5D283A981437DA8E17399F86CE048F
4C870A446EB3E06BFDEF95D17AECAA204ECC569F78BD73D380C572E5087A5556
397E485D176692361A09B1D7853518F8522B9D21C93BEA7C0092280431577112
645FA4CD45A4C459D5F7693C618A5993DA8F9F0E434C04CC0B14B0B5818A6680
7B57C9DF5BC56081F75C01250653512530A9EAA3BB232362BBD54993A73001BB
38598B98C22D00E3A9DABC4A0462936E42FA97182259D06005CB78305087DF37
9612E501BD37874E1B97916A78683B9A3AD981AB1D33B3D8C3BF7E8C5A4CFA44
553B25512B68E1F53B4321870D97750385866B1F923D80B19CCF78577C8065C0
08159E38B52F54B227A0C18DA8A43ADB7593E98E5E0C7519713F452774D1DF23
5DE89D464EF44F2C9297ECBF2840EC675E1354B3A8B9591B661400E4F79E0702
2ACDC7705AF6EB8DA3E68A7D3D06321D6DB80CD676DACAB1311AAA28A04F8FA4
3925639BEF4B041AD7722616B477CCFE4F4E19F17749048BE9FE976507B85FA6
4C9620FBB49FD4F24B11E7DF3C07DEA3C6E6CFB4F26A4B2603990736834B84ED
6B5720A8E52BF72DE7D89B9478948503286711952C3D3F4E83A712EE63AA3DAD
FD632A9621D26B4CFF003070037CBDE5793A1BC975B49B183F007E81DA9A798F
7F062708C79884896B537462AB0B27E20C9D3CF8D27B81A55DE3F509791369E2
E54C06B408FEE2918DFD868DC4480DBD82F856D2C05DE5DBADDAE7385F404488
04C7541E751784D52973F89341C7723D718EE15D3117574C43A8A8D075F4FF9D
F5B1BC2E13055CAED61FF851067307FAB0ADB527A5AC8388A0264C6A7AF6071B
2B9AD4A7D4E71CF7EC55A51AB1B4803CC515471D4FB80DF03D2BAF5E8AA097D6
A86EF230A314B3E55EDA5E61D1A1451EDD31135B78B03216A0164552AE036D30
935949DB8929F2E389124EF7F7E67189C32D8598046EF67D9CC27499F821BC24
5B3E266DEFB69FE32FC2649522985C27941C58E4F50B911A6C11B7F5F9B82BCB
01902D82E4EB6BC1D263A3F79FF9AA614BC64F3F70591B8E9107DAECC5D0D487
96C4835D63317559332B34FB651CC92781B4882D36D3C1FE65B2E5512F6B53D0
AF465F7316E568E305EAC163090F36FD0CA143FBA1C9F662A35F3BEB5A529B51
2E85E0C643C2F2B4BA15AD718CC5E605CD6C3C5A46E851536CDDCC32B1BA21DA
AB34F2A1CD801662934D7876C663B79E1B46B00F5554A12B671BB2CA1398F65F
D0A764A54500F0429E0883F53F8CF6F267B35795C7626A32B6E41849E355B252
1787F7A76DD68F7E5D640C87FFA05C0EA432E61552F957C636987F2ED81971E9
FC729AFC1E778A3C012D1B293C733E90B60F0DB14D360264AA4469FD8D653C28
D36EA55892105E54929F64A3C8A01C8DAA5F5DCA27C71ABAAA2524F7D33DE2C3
F202B96AB0C59A00DF442CD1F50796CADE8F0C39DF8F351E153B539BF8237387
D882F998D969E5996187EB83174F748F9F5C6E7C9E45C5DC39EE11FDE0AE7493
6FB0B1B5F204DB89A8805F8D77A933DF13534861328A5E4673A4B180A8AE1BEA
97194BD2AF25F28AD6A30D5AE7013F99DFD464CEA9BF8F1548BA93FADCA29EA1
31D482990CB64C201664D2D13D77711369DD518B9E0DA580DDEBC4B9FC00D132
8949B97B1C65115DF384C3FE28C017EAEB5CA8EC4897901FBAF7C899327A4C80
ED8F1CDA2D49D7672E195B09727629C1A5EFFDACF4DFEE91E68DD6A7471F79E4
C7B4BEA87D0B1D848B21F9B1A024989A6D9109144050CAA7960FE9A98FC87335
2781B18DB090FBB6D3FC3C71E67F46782301F01E3F4891F6E169747D0AEC4026
7FE1D3FD77700AC774EC43DBC0E10C70B7C2F14483E18E99BADDE9FD1364F008
8C1A95CED5A4D2401A80CE247323CCA5752AAF92BFBAC68A88FA66C49E1490EC
01C9401D25CC981E526F1D803C93B2A2A07D4200535F51B9CF26A817DE43146A
E4E04FA79AA91C814B18ABD2C55E639C1F80068C9B0AED83074C6270B177BAA1
8F1975F0E5D759C51EE7A31E4510F5196DF93DC22D53B21CC59EF1AD25F28AD6
A30D5AE7013F99DFD464CEA9BF8F154BDE44B33C06F6E50CD5E02F0313BEEF10
80B8E63CC100145EE1CF2600212964DB2ED1CF81F3E927856884C3C1BB65B5E9
E1260F6699D945A611A7EA348DB3C86BE4B4DB0FCD38B5901221B1DC3066AEFE
92E3FBB7E4176DAB13FDB286FAC18078C9EFE517926FCBB34E12E947B5120A5D
9397D02D7F1A024EF4D18D753C02DBB7AE3EA05189872E57D5B88BB9D233B5E4
7EEF26714A4CC8923A9136F58AE000F3E4E56446467C09F885630C7E96643BE5
3D7E30FF26A1AB03592F9372AF27DDEAEFF8B80E1A4AB3834143055A7ACDAF5C
195B4D4014AE118F07B7C4C930CD757FB28F8FD39312BA79A229868F2C81C2F4
55F4721435DCD24D67DED3C5ADF52EEDE57EF3EAC944D970B725574EFD751A6B
7C9AFE6196B3E2024B31F85CCFDCE8FE66249922A5752F68183CEB0C0D895773
952F4CFF196A41313B2A3FE4B50F3B2D61230D26B72776C9E82A61C7D79481D9
1814C47A0A3BFAF7465542D6822F564EC4B8F282AF59619638A93EC62A029471
B6078CFFD8AB99B3B63D78163F227F1385113B9D2A2F0C56DB55B7349E7CBD9D
F99EED9AABA70EBC005B7E807A854FD70F23244F74336231E9136F61962383C6
5150264A443188410F1CA9AD8CA4892D103A1F8AC88267A1B6600190E9DFA00E
D203C9F199C8D54B46606807DD209828B487303573B0D237AB3A9CE8C36492E9
9AED33256A1A6F3303F7A87BE1741043EB837C589B4CEFAC955BD04F4BCB9D5E
DC100A5DCED9628B01EC6F47232DE5CB73A83C1B82D1CEE1A00BC42B92571D1C
B29505E041FB5D15E78F084A1B9DD9F45F7F5D8BA3FA244C616DE064162ABED4
300BFF344D46262F0331241D87492D92E8936325CF2A102C14A0086A3A824777
3BF93CE143AB03DA13405FD339E7F17DE268E380CE610E6D9D1972AFB8659527
3E193C824705366A2DD32C0F4AC6CE4AAFE63836A1EC53E443C157BFFB7B901E
2D1CE638FD0D280DBDB8E20C47C7832C9671E04C9E37D08F89E84B1DCE7F2A0B
B0078EB6BC83820C06862DAB8EFE4893B9AF7EC84F69B0C95D4FB120530AD2DD
9F52E223FD098660B344B76A7FE3FC83B58C2D1E30248B5410C7C68DC45383A6
470A21648D9F06AA962C29680C0EF7184211C879D1CFA2AD39885649818DEBCD
A7CA7D3C3A6403B9A7675DC69ED861AA0478A60970305CC39BBC3BA6A8099856
FA043E143FA1A5B5F00968A8DA48E5ED3A2BA43BA9064D59C171AE87BB22E474
4FD26EA55892105E54929F64A3C8A01C8DAA5F5DCA24A7B4E52F30E55B902ACC
35DE87E70DE8EDFE7D803CBEB9E428E2E96E73CD01019E64A01054E5E94ABF52
DD9EFF0427EBE3F8C28EC36BA0E331071D9B11BF19F5E6E01322EC7B74F1E8A3
69DAAB3305C440A686E566386C4BC20AE0FE9CF57C6AFB258F73816CC190CAF2
5D9965C88F9594F80315901081B98FF3AC06F5C24B6A33DC92C2261C6222A84D
10CF5EE66EC13A71302C6786D05D4197E95ACE0EC7494D4247243DFA8385DBC5
760B397F0EFC6780ECEC244A1F30330B1C2495DBC7E205C4B0C7F6B19DB9BFD9
6112F27F9B4CDC7DC12D52AE6A36620F4FE5B14CA02F60B14F474E9D6CC7C87B
4FD6EDAD6F6F8AB10983B65326D7E2B9AC32B3983D26857286BAB3202D09F51E
5D893DB3D468C38E8FAEC54B50AAE18B4653555ECF1F6CB580E5E0E90F580B79
54B91AF65067C3C491CFCFC20F9EF9B7CB7F1D174B2E94953F541C3B84D43428
6DD1B5C4C56944521E76439B5DCA7732A29F37A08F1A2A1FB4E7A6CE89EA7C92
E036C703AD5C787C37A4430828C44D874EE1812B3F153E63FE095A87CC113B93
0D6A0A90C45CB9FB0D893F79F3230443D11313D6EBB9369B19CD50EFE1EDDF11
4903155F14A3D27477386B661C6459EF6A8492F020E67407CF321E01EE8F2811
A9C0A800303F0722046046DC94B5017D456E865FB2E416C4EBF62D87CF6CE663
57C4904B79B704C799AE090C2E12AA3667DEB5AE7DFBB73FD1A0039F86E84890
03F84951D87FE955B227F74202FAA42ABCBC4C8F87471310CA26AE9429BDAD98
8E5147C913B2E2A96821ABD9CC0AEA383EC8ABF7DE287FA97D0495E28CB8E2FE
2A4CC0B9DE515F7639622660DBAB749090871FD2316356C3CF06A91C423E8BB5
CCCCD5FD1F4EFDE44CD22214DD1C4B36E9D261249BF3BD8484D4C450FD2CC53E
9D5D933D8D348873F2BC98C00EAB746B3E6A119B0E7CAE91559DC6A5B3BAB60B
7DCD5F96C0B1D41127FA6FD0E462D586D2298E6DB61197605D6577A03DE99BB7
8A0AA1139DF5414824E7D72B4EC7BE92DE482C8FB5537B85222094CC28A53CBD
90FB755F36FB252F0335FB50B3370C94D0AAFC1CEE5C1376F02A37C14EF4FE41
6F8FB3B918C454BD5774AAFB220D5022527EFA589455B7C07547E3BAAA4AA7CD
8A238456094C22BE50AA44C469EADEE3FE6E519F3DF7A42DCD24B818942E5AA2
C99D424B8AB1F5A341530C88F64248086F20B663F5490FF79AC9C6851E779043
D6DDBCE84390CCB304E5A7B771CDAF55815279A3B8306D923FD97B222C97AD9F
6A941E5C554000A47EB5D9E377BBC162A89E871A00B9B346B62199A1AAA40D8B
35AC2F519FA7A9123A70E5B8F42D90434A48E3F4993DDF5FDF93C9E21FA1EC0A
CB4D27E6C934A2155DC2E79631499FB05BB37453FFDCF3EB4BFC854048483532
3410B2CF4626600B1F8E8118662259AB0CCC303901A207C83125D327B2769542
A31B0BE8A05CA56FE842051FE87EC913E4094304B434EE7A5DDFC7AC37A6D9E4
9F46CA0B3AAE98A934A36DFD2240493803D47C96A2745580EDC957AC4291730A
86EC4A4182329F95AB474108A296063BF7B01D5F186B2E093E82F0712F57138F
D0BF4DD5993987EDFB19660637741BE8D98416D772984988C4219051A2214B3B
FD198AC85850B173C7EA7ED2705E70F62B7A1CFAFDEFA9CDDBC45DDDF5DEF3AE
D93DB4833D4DE82386676CAE2D18B84333575A237C9637BC3A58D7BB96AFD1BD
3F1808F701A335B9FA7332AAF569948EC55BAD355BBD85D66D6166F8D6F0929D
5D05E540124D1983CF4E2EC062206BD4502826B180CC4F6E2E9E73D5148A0EA4
3D89ACD8EDEAAD8234457C149A25CE9F8E3F4F73415A620F8F1D9563FE9CD897
B19C6DB033B5C6294AA6F5B93DEACADC3D74931DF11F8F2DA6B617473941A1ED
19DF2F6C55C067882371B36819ED22A9E83B7C851AAC3FB59E4C7FCDCD4BE637
C8597EE5FD1996F8AAE791FF65FB53F78C6F639F55A1790C3635D75B805B4F34
26C6C6E12E081339CDBD461E5CCC80405EF270A816607F248C5C1D5C56035A8F
FDC8F3DE95F1F507FEC112903F2439C1E08D8924BAEFB2D1BECC5EA35F7C4AF0
39C7D12B6BA9169218D70EF879255E6D7B0D4E3F7174153A5D789E88984E0A07
EE0942CC8CBC6DB7433B1B871A62E60353F613EC6187DCBF7967263679C8C367
5A673E6E6554D774D715491E2407EF7840DEBD26DA522BF30ABD1E551A9276EA
210906DC669AB337A41767EDF87245ADDCD1E94D2FEE120C7BA60A464E7A72FE
D312680E7155F6CD439AA96488958D280DE6EE3E50C07073C5F650547746D396
93734B16AB45A183B45857E4B8F9D6695EF332BD3BAA9EE551A4B142D8DE6DE8
9D1BA848F9FDECC6604E7D488ECF152B69493A9A0A8A7BBF8E4801DA35056CA0
0B0CEED0050C709C5F3E7C53FB4FBAEB6078B410935DF7D6D5064271899310B8
7CBA63800A37B6EDB5E58E81BCA267212F3D633FB8598D3F2F175BF705D4F708
9B2EBFFE432B337B76C0863B38A3AF14DD0F6D8741C2E06E6011FC30FDC6532F
CC7F3D2A58DF176667500E58782156ED773734596699171559DFD21DBE1EB344
E7ECCD28B98FBB721C2095CA9DB9DFD4673958D4D4F1CB3CD4D6AE55A5C48AF2
6AC803908EC18704FB8322977A15C8ECDD04BE95BF3724E4764D041D37D1EC32
C188F311A107CC79FE5120FF3149465D40C2834C6D68F3A0B7F152A9EACD5E0E
0D21CD6BEB763CE338A0A9D593462CF91C1DC3D228BCF7E99F93FFCA6A27BB12
FF9B399DB1AF4BA9A5705502F55E4CCF721BDCB9FCF3DD9FEC9D480599090307
21E8CC5D32447BAF3896E4A38C1576C9EE90FE9E0A9F5EC4928A31B813890836
371F7864291A3B3F753DEF98426130A132BE546B05E234E05E9C82777BDE4191
AA254EDA92887905BF33AE9FD2A364E65BAAFD767FC8DAFED6774B61B7E0366B
B5132981E7111A7668EB5E73730A4F8DDEAE362896AD30511AC6077F046C5DC0
D0400E1D29B35CA24FEA1E4C71D8E14AED4F06B3F1FB4AB16280601D4308FB33
E2B90CD3643461C090498AA7064CD84DC256855A3DFCCEC584E60274C80FD891
9AE84F31418152E3EF415F3BEDDD35FBF1B082396A17F0870204E2DD1FB9EBC9
448B8D0AE4D2F2BEBE39239ADB477FBD2B0D86B7025004216F6017E347DE8BD4
C3C7EF12F4BAEEDA8DD594F9FDD3F0341AC33F871D66D40597E4F20CAD0CC21D
2C3A11820C06B89FE882315994E7704F256531E5C82CAECA85AD750840174A99
A2367CDFA06D801B1588A55CD8FBC5B1A74A1F90D104EBADB9DA093211734428
05CF8F8F6BA06F1B6C9373F48144954ABF8991B61F0FB7E95ACCD3BBD200E078
01F2A7157FAA847DA5E22F00136F21273615D1D75B730BF1D7F063A8419830FC
907CDEC4ABDB74182DC5FBDD0536E7C70D3AC58AB2DFA3EDD496C18C8974E85B
94484D5D8E1304268CD4715C7B381ADD4976C0C8525ACF78DC7D453F813638EF
A565CADF3958184CF236FF2FF91DB2687D13CA64138054D591B1C7894E2A0D72
4995EF08F00707EC53E1CF114795631E3B14687B9E35196EA8C1CAF14A0F0128
05FAA4DE2E937E03744732E3FC287CC99ED39EF436CBA30F8EB1A6E543782DAB
E3FF83E5DE856B2386B006A01A109A8C8A833C61B9F1ED687557E2449DD0E8EC
1F8B9ECDD722D466D2D453E1F5D3C9F3C796CF3BEBD5F6E892F91A4B3291F219
0C5E20A58FC99E7B93748B7B0B7D5F050B809C36455121145BD772CC4C3ED8EA
BFF2230567998B58154582EE093FED8E2F79999D0D5FB2D1F10866FB55664AA7
D6B6CA4E3866DF6F25481C94C0C99771491E1E13819CF6A11897CDBFC25ECADA
33E3F6D66E6A404512EA065022CB17E62FEB500C2C5AF1427197EE6637F53912
3745CA88458114AC473001A6EBC721B3AD347F9CC5C2A27C33990101BB5C18BF
8300E8B9ED08ACE959392226C2D9AF99686063A3B951E33C7EF5F1AB73604DFC
C2AAE3C9DAB2C3FDC4982820B11EA1FFAD6406F59A25291292BFF6E9F09C4DCB
F759C9FF16A8E893C28EF549CA3C0F7C816D19F4AD4A5C73718F38A4E67E61CD
7A1713DE7AD5B63B0A7BA50A40B29FC17AA00DB566B2EC94DE5934CE2EF7C23E
C45EA8B7525DAAFF7B70A5414E182FB7D57AEE134DC3F9A71394B4BFA8CED0C4
1664DF7B5BBB015C15E90E9C96373CC7E6BFB2E25C8E5EC1E76C9D065EAED9F8
1E705C8136D99C5BD8C57AFA1EBD9AE6E949DB069E5F8579D27658A448FC502A
8DBF8D959B786221774A27EC6476C296EE579D2F20575F4CA3B9DA9E2DC2EFF4
9CBB4722FA30319B8C68F8F7DCF39E5FF7ECDAE3884DD8E0E9C7A5FEDFE41F81
3357F2002FD7D3BC2795CA29E315E9397ED241D48F5DB2174A712F0A1E33ACFD
F4F850DFBC68836D6598FD8B539BDCA02A0A1C3058ABF1106798FC39BB81EC7A
1CEB5D36BF344354FAA9B291ACBCF9B740335802AB247E9FD612C7762E866A6E
4C83D0AD28B3180DE0FBA6D2813AFFFB6256C6A72975F6E5AB21231E0E136B9A
315700669D9D8A3D985F44DE6070E8E4AF619C8A0463541489F56666025C854B
28533F3D64DEFAD31A1BEFC3A15FC3CBB1E614186292D44DCC6A69F94C1BE958
8697B33CC8C54E71E075F1693EFA5483DB7DEBB520C7BF832196D27869EE01D1
69FC58F743CD16C8F0A30C58416EFD2327DD0406D7E014791771EE369B64E66F
AF661F75F9A9415D03C8D92BA72C28C2C148FF488439DCF5AF83863CDCACA331
175F46778C3202D3D4F36FEDCE60AFAFB39332B22F2C43C3AD99954E96E39B52
434D8FC25A26DF835CF0A83D7BC91AD4E67CCE7B5DCCEE35431B1144E5302C58
4C766900ACEEA1303B6B7283508FD953752DE044C4904C375AACD66DDFDA88D5
3E98FE28B70E43B7C69F2BC1FA11191A2974874205A7DDA96A42B2D492847AE5
7C85675CF04BFD1410B56E616F68C39329AC3301F7E9DD385505F1A5891D6AD0
D0E3EF2F19C66D2509FEA05F456DB473994314820946309081E82621D1B79F8B
534954EAF50FBA1224AA3BF50544122F3662354376F998E255DECD92AEAF57DE
294C3A61A645A681C23966AB83B4D93D4FC5D149AC96A8331BD6A50B93FB0806
43433A0D2F5AEDBBAEA7C0A6D4AC4C90FCAD1A887E071087DECD4DB7E551DF70
32C9C43CD09F534B07AB5996711300B4E28756F69F8B6933F20AC25471C19ED3
B2D16493293F09EA311F4929581D3E2EE1E2B00C53DF9788B45591972391929A
1D45F27E3F89E4F8417201F0D2CDFCAFAC06766BB5ADEA1F62D09802F18C584B
F5F2330AFCE8FF92E2DF9B35F469A1D1AD50C3314D6CF5FABC872BB7CBADDD96
379AAF858D42D31AAC43F4EC19D387D38B78DBDAA0645B2FB1C9E3245ADA5B7C
80281E3B8177E30458C0E8F57E41C25DA1DF67A2DFE5DE21E630125AE03ABBA7
5B3C5272D5BBDCC972845D4664D911B0E64203574E588A6F1143DAF2573A8474
5ABC6D79FEC5A3BE33A9A0285EF5BAE463184E92A24DC07A7026EBE9E2D290B1
EEDFE0322838AAD2FB6F562CF3FACDBC455F5007030A8DC866FAF4CCC70AA1EE
4BD71E5344F2DCAE69E08F1BFE2F05C317E60CD87D8622BCFBF2709E1050E430
19FD6819999E1A5C2FA63A47940F5252385EA3E898611BA9C4C8A5E0A6AD4E40
D9A928D09FF6795A31930D91424572A24EFC245742B434A82034432EF4A7BA26
12F343751A68EA6CC4FD5FC02C703EDCB1F8AF334B793677DC9D0D6B2CF2ED2D
D230066CF987003900359010AD52472E97602424CC86C8245A33F617C5F28A57
87ECF6F5E76A133661B6DA9143D448C59D4A6E1D3A4BD9F0B7E0B28447E74136
4E315E7A1509311548A348C48D19182D79249080AD244A961CCBD0A6C4B22D5C
02D1E02E3603E885A6F4C9949F4D5AD4FA73204A4F206B13B702DC4E76A76885
AF0B09EB7F8774273C9252B73F1E4CDD4912B3995A7DB9B4C56C828F8583A979
A4821E48802F50EAC63D9917C10E24B9304C2B6E99BC9902242F0363BD8FA398
74B38A5773E6797686644768404F6882273FB569F825C8B5CF477E5A66AAC618
CB79AEC21E85BF1B65FC6300B048FCCA5DA7423FBC722485BA50072ED2124E0A
769E95F93F6629DAE30D14F1CB9EF1056093B854BE4DABB07F7BB64332BA41E5
84EEA50F61F4C70D353CFB11A82E401A42DF13634343E4A666C7A27E6AB0968E
0F2BFB2C8381E13CB69A288CFB8408890ECB590527209D19DA50258CFA1F636B
0C9C441A03AD99788F2C055E1A5AB5B114CA693BEB196781C04C0A6EE75D2746
E69AB8C4530A1BE5182B4F95B4988A9F5E686E357923D654FBDC140AE17DE962
63A6CA5338F0545FC28B003F1AFC72A01C5800D5233F46E4D3D830E9CA83BABE
9291E590F24481280A0242E823E22A4E32669BC829EF1B7584A7D1DF64C6AE6F
BCFBD9E9879DE2E51C85B3597B747E2F440D7F364C4030648BC39783FD7AE189
510DB5788EBB13FF9A22A528922308C00CCDEBCE60D893C887B0F2FF4E4A58E1
7059A66A66132D35680501A47FFD3C21C5FFA47F843A6972A781290D136A9B5D
69A31D428F4F003487ABC3D34172433CC652E9B2516AD0EEC9F4521A273F7328
F6F57B13A373A9E0DDCE6E0CB2008467372E0C2077B037B0FBA022555B0FCC14
21A0B660B7381800B7E7FF1754D70709127DE32FE92176B964274E37B45C5844
49B7B4737AD52783C5737C44F9E81FD41745809A37FB996A48A34BDAB4CA6460
6FB209ED35980DF79F5089C10E826801F1DF4E6A66AE2E78797E9880AD30315B
535018417C37FFED36B95995F7771FF6012B974D2061E7418F3B9E0ECE8D06DF
CD70D82772F56C044FFCFFE868A68E84D25B66B5A129C6EB45718D8EEBF746DF
1479C93E4BB317BFC633E3FAEE0C43A403D675816A95031288ABFEBD9868C847
F2EF773B62E31DDDBC2AD2B526C64DF8400A1782A1086F10E614DAB03DAE4B51
0B39F1E3A64CC661DA200D9C48D979929FCFE04D83CF33485A0ED2DDBE19EE90
B055D664E08E4D020527450B43705983772BB89072B23BFC19B9068BA1AD4B50
D9D2E025E00008D3625C1A4A9B9AE2DD4A7E15B5E90E5DFBC1A171A728EE77DE
C4295E388D5777C3D652C5C881935DFC736CF5EAE91652675CED53147A5A50D0
7DD67A01D90307D763884329B91924AA554CF3CB059ABE0DA5EE7AE080F39D46
61D4557C54BEBE502DD1C5907D7426961FA71506FD3C7D8649CA54D9A85449E9
CC3291F73F466C037636DD2F6365BFE35C63978876D8DAB0C23730744A2343B9
BE781702B08251805C0B8A6598E644F5A83218FA43C3D18C068FA8426914708E
4F8A9BDA0BCFC2F517A615D9C6A247BB6C62857312BB017A3FD3BC4A69A375E5
B63D5A2C7562A335345A58B383E3C1E375E92261089DAAA7D8550343C3BB9110
7DF7E3F4EB1F65B37D48932FFC8C217849C0D6EFE49E293AB82742140DC51CE3
BA7314B14B8C7BBED4AB2A74C045E988C6ED47854597
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA853
B843CABA76BDE9582090299F423519EE3AF8F83AE7F7828B314B6E36E9127419
F274E9FBF5622C5E48D7E95664D6C0C1006661038CF2C93BEF1DE34A163A2C86
693A13F4D0F052D2E183F36401F0C29862BC1B36A086524F76C7EE2C6D436A23
7009F146F1756DCADD3F70C51FDCE610E30C0F4AC538A2703423A07976ACA74C
25F4CFD6A92969E206375FB0C672E45948B0E832F2BE688EC22FEEB3E06BBC3A
272F73081A30830AE4214F2F029918FCA40BAEBED6299EDBECA01E08F27E5627
F53BC56F4AE7CE2D6273B27323AB829E2D51672A4990E3AEE84331583A99DA4E
63610AF8F10C50FE6196E3F4C1E4FC9BA6BE0ABDC81A0A7BF6A5792A97BD0A7E
7BBD31C3FDC01D734550843C8D84C6CC0B492CD1A6CCD57428F03A863E959C77
457D401028FD00FFA9BC422FD09D8B8A70446A61CB256A2FA0B59A2646D9C5FE
961894DB8B315C52008B4416AC35439E010BF90E43A05FCB2FBE8E62385E220E
588B7FE5509F1BB71150E159D01D24EE28008D4213227FE9BCAA34364B1039F6
BC142AAB19C8E9B15F0113781DF9C9B3BC145955552A901AEBA588D39D7E87F1
CAF27D315E168807021B0CD1B2CE13B611A7B5FC28DEB4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE27995D78FD99C5784B2B7C7C509E9B93BCC29
35CD2714C50B246A7DC70C99B7DBFADA1E01B81749EE49A70853CD45FC323019
A45BCA3DE39C3E7618C6322D264556FD657D9270933D8B167D2575CF146336BB
1C76735F3B09470E40B0624E52F21809704749F6D81E3B829D163D9F61E070EE
D8CA803E56CF227F71EB8061B83E035C7138A7CFB6D6CBAFB766754C0E8934F9
AB738930EB75A2713CCBE333CC60A6A8F2BFDB043ADC0B94FA3370BBFBC61D7D
25524B08C70599D58E7521F58D26AFECE212309BD7BCF62735379ACF3309DDC5
C3F30DD7D3A37804BB23274D7B30DD69E1B2C3CA70F2F79FA29543F526BB808F
0464C39C582E1945BF8D2039A6BB5F1D9557D5168E1808CB19068F183D547C89
64ED797C384BBABA6B5866E245177DFD2533240E2738FABF864912E8C6290A84
57A0F92F885E21F4CDF14F788BE2E8571BFB07CFF9F577580B8455102604A6F3
355819580C47F5159965B3CE4FA4963EE9342A5A34C3038013501073116B986B
D69FD39E64A06F93F92D2AC495B23EAB87B33931729DDDB4BC61DA2E8D337A77
D60A3BC32695406E599E0F0BA59CCCFB9D08FFC97BBE81F5FF6AF3E403B049B2
449F491D791F5D8481C6BAF0B3DBC36B1AA378E1A78FC7C507BAB3555B265577
9CEAC3F1391D72DB08B0C95A9C0ABF06921828C1D132BF9E45EA683DF15336D0
7AC3B4F744E0A34913ED4CAC7D0BD6760B31870D69C4C15EEA09E1831354F7C4
A21645261A3868D4250A18470A42218EBDF7B90241CFD6FC8D781B7F571EBBDC
53A4272568BDBE227C15BF2128BF4C8FA73EC91D432A15993A4D37BAEF27F403
EBA7BCBFC28D026D6D6CAB0A90A6891CC6A139CEBFDD92309A2D0C7CF7864A73
195645D5071137F882C019B8B853990F0DE6F49D4494A93081D9EDC3E6F33C0C
BDFA4AAB1682A77739C6F3D04C9A8B1801E807227D29389161E7470395445B0C
E59CFD89084011AED6E918BA1FC040AF0730AFB10FD7EC61BF69D36ECE3C13C6
069C64B22F44636DA80AA6E838D5A0C2E786EE6B4293F66525C35B1752D85A43
A0B79F1D5339774D004275C37204346C08317449435A0810307CC13A1050AFDB
5FD2070031BBBFEE5739925B5CA2F739C797029BAA9D1FD7EE9405CB29E40CFC
FC0E55541282EAEE8B95636805412E79E49A826C884BC282598F6790F69D1C98
6A64F25CE29C161D1DFED771FCAE7934D6F3B792A1257B9FF5EB18BB80A6425E
BE560DFCC4FDF3704C77BCEE0DD24EBF066CE4E6A9D2F5E0BD52292E6028414C
7FCAEA0A7E62E4DFD5645313CBA3FDF8224C30B0E7AD46A088E256407A554EDE
8CB0A19DFB40506C64D2F5A6F86FFBA5C6267A2A20B8CC7B4E6DEC8580D8518F
86D5368897BB038CF07FC21678FCBEE2373F01330D556456193A0D75817DCB44
F89EC0FF5CE2A99EF8A294FDDA952D6D1DCB0481C4DBE8A6CC2906CDA110E0D6
D005D4098EA5321DA1FA07CC1B2036139E76F72425A26341AA5AC2DCE2E64092
DCD8A43E34700DBCCB84C7F733D777BDB2B8D701695877B03781F648436533E6
99A4C6E728D678ED7B5E1EA7C9BB3AEBC348B499285B0098EE29708F98ED5EC5
5F183D5B2EE491CACB0529011D003A4D5A6099CFD95353BEBA653AF5EAE9B1A6
B9C56A8FD9FD1DC9F621C157FC555B4D973E2404098C6A5E75668ED3E9929056
DCE30D42439FD75C1D03151F3C9C51D21BC5FB8F14A51C2FD96C5614886C7A67
092A611F0B5815DC0751A926103E662A0348E70A97A46321D638449D1D3D09D2
7EA8C1CDE68F1C2CD728BC91BE4137E8B1362BA3A2DDF29C622FA55D54800823
824AF578982540D9AD3349225E6B8EB758ECEDE8173B87B4ADB915DD61AA4040
4BFD6BD739FEB4B951EEF8BB478549C9037F80AF5E8C93069A3A27AE6AEF989B
BB946F142929B362B9982C571293D7F367FDEE695858694DF4BB1F3577A97811
8AC0AA3361059181C4A4577018E8150702C36612947FD36BB2C736225102573D
21FD0B03969BA2F72C2D2C05B69E55969AE74CD3A31D6E5204F3689196C45F46
008DA36B7D906398A8D445139706F68286959FAD715C57E2346265A9D9B4DDC3
01936A65100FB57B1D252C9C45EBF19CA4E61E4DCE321F25568F03F70E01766C
A632F03D13289DB062EFE9E62D5A3DEC03D1F5A40155914E2F6DD48446BBC06B
FFE286C366E1F387AE1ADD9E8D07C01EE33C0FA51EF3A6487E8F7E09AE2D7E50
8F64DFC815BC25BAA1ABE59A48F46683AE927088B156AB660F523D854B17B86D
C6852159163B527FAC2596297C7328B2F981BFA79544B1A2F756D81ACAE235A5
8C64DFBBA43774870E99EED3D74C0EDC41BDA6D8EB06A20E3F76D1858747EAAE
222B1D550213BEA06364396D279484BA66B2B9A0705095755901A32788188029
8D9DB49E009687F0D2FE43DEBEC8EFE49627213BA42C597D0FE53DDB94C241E6
295881A5A2660D5D253DF6AA998ED75546DFB9500EE02F9B9B8774237EF1899A
326BEAF8EDE7CBF1273804BCD6CF66E574064E2B0AEEF95960D1149906DCE974
435A6FCF0C7E4C041BB3ABCC68CEAEE80B1BD60CD74CAB53C0CEF51B2FD6DBDC
547BD5328E7AC7CF5F0F69057A6822533E61A4C1E2E7B3AB456D19D9769EADD7
1C619A92A04A4332AE7D030564A0EF74AB93B42D625F9400A63BA8118404FB36
227B57069E1A86F4D25373DE8DDBAA54FF0F25A13DAD43232F7EE4D840B43621
77EF37C9A04CDB15B160C3E2B285BBCFE14C06C490185661115F7E539FE1F8A2
832C76C5EEA9805D41C6D9B2304EAA39439D1E570285A7EBEBA0247118996064
991B82126CA02456FD03F4C387BA30F95648B600B3975941C043EA1C1057846B
76616532B79C929723445D51E55F290F7B74C1F3F69F041C7D00EE44CBE17DD1
9F81B2125F9A0C95FD2E3EFC4BC51F799C62A8B86A7DB68B7EDCB0EDDFF82EBA
11D53BEB168DAA474049FA840261F7A8AC972AA144FA7AF1CD28488C1F2033A2
33D91D90392862531F033290635C60280122404A772D9B7C8EBFC881A40734A4
6DAE2CF46DA6CC1D18B00177EB84A53FB40DA7420C372E75AFE418EAF9CD571D
59A09D75F1D53FFE1ED4314EBF29885A69D8D51B47E08C814B5A0C25055F2755
0BD69482F575CF89AEF42714C86EFE0E9DA6FA4E50F02445618882C233355671
AC35DC5B2B886C4663E747D38575E974742B76CE9724465C49DC221DF6D624C6
89F2F181745A7D2C3B8999507C609A2ED663E1D24F985581BD1C99DFE0E40083
8F718712D374D9AED7F0A85A6D7C5B031183C974089DD58B98A57999E34BA067
45AB4541F541E75742241AD41FAE4BB693A50E24F925F3A8DF6BC14808034146
79A145541628F6DEA543171844C4B22CEE152FAF7E1DB701F8E345E74FFEE4F2
237D5BDD9053BE87429FD1D9DA6F6DFE3B7B5B4A1B7CA0542072597C5636F69C
A8A0282200D23FB0EC43EE107184712353F2AAC61681363761D803A945985639
3CE1C1B41B3B7B7F5B7246DFA10483B09CA310083CC6AF9DC18885692593E467
EE46E0FA73157A7D2B86A0885D0DE7B71FA983EACF886ED8DDCA3FA90B6F2958
4276080FFA7C50C69E72163330F0F908DBC35574655C93E13E249C6F1EC310FC
EA6E06C0403F858582A754DCBF8841FE81D39359DC1E7F655AD34292879DFB03
5EF8BA7560EFAD429E5800E3130EE510C1CD4BD3F70BD38D7374A987FEE10268
166C552CF7FEF8C99C29BD310590E1B613AAB89F20B39AF3077F876C1ED130F1
92EBD571DBDEF885B59E018380F607308BD62BA71A8CC282E6E4F865AC8FDF8D
F56A863FFBA0EBCDCED96FF1576600F1389BAC04F9EFA749674EF1A532F194C5
24458044D3C80CB40D65BF919B7FA8EE4D66AE65B5B3D05416E7635B913406E7
DB2B5F5DF084B65772B7E5E398285529758927D5AD6635D241202D32CA74E8F4
E4BDF74C53268E1A7ECA73776BA42DACC533842A938FF436B01AB54EE1CE32BA
926E34A8F8C31B2799420D8EEF6ECA04DF85390E261B43A555BA97B9F931A445
EE4BDB168DBA8E27EB9DA43541D7D09EC9520215114C3BE3EE5DC01A9FA9D361
3E04F4B21AFAB6EDAFB1FDED79EEDD6FD3B6613D855D5E17D6020D27DC30D941
B95DD24513C2B16E59080C7D31ECBCD6563EB1AD0019E8F762FB6ED54CC9E41E
6562CBB4F3DF32AE5633875A962821E726BD4CBA7AE8BF83E11DFBCBC20E2347
7594B3B8B88ED06339E508D2D18157D598E87AB110217F311ECA57AE78AC688E
E28C31D597BC0184963FA54A8D67C4D1571D44ED014CB9CC49C5FDF45FEA58F1
90043BBFBB3DE375C1AB93D839DC4F2D41639E03C463B9D53B1FD0BC5C178361
8B011F86C9490704010EE379908BC78EE8043B7BC1D982E7CAA79328DE04F0F7
A33D4CD50A13FD7A8B2F7B9B62EE1105F37A99A308E7DA80A3018D0F96B02F21
636857941F021E124D24AD513EAA1CCE09EB2C0E13A57B48CC839F5DB46CEB46
F8027B303F4B370C583280E59E14C1F64C508C3C81BC1871607DB02675B10BB4
820157A9D93B6B6511AB4FF1A435EF8D03A4E4761255AABFA3C18EC4503D3F55
A3374474F1D4BE727407357AF910C49850701AA5003DBE757D554390F271204C
001CADB630138C9B03ED2F4592D3D38E10A40C93CDE9E44D391DCD5D08268EAB
44BA2650CBFC0CA9B55CB8F5B1140FA566125E537B0D74451F41D6A821B48CC8
4EC1B5448230C4611B33767D290398B07A09A94DBAE60D02B2C2557C27033737
A162B1C30CBBB59EE0981B0F6B4F95377F048A63FDBFD917BB718E9C44F84195
CC47256FCC10C25035383201CDE43E7D913B7CBE1AE4819EA3C67C97CD03FB8C
B1FA267164742287C9F05BAB96F90859A469C38C48754B5E3D4A3EA489D7DE94
F9BB46AA3F528A71E5B7D8D042CB8C40FAB4644CDDAA91F6F0D714A62FEBD441
8504BD590495999743DC93548B508AF129D178F05D59976EB80A650E2F6951FF
4CBEB193B07080C8B8DED75739A29DDAD519705EC0C3A425F84078E97F74308E
C8AB3867E917C98CE630833A36F018B6309FF10B30DE6E4E027CF555018F191F
3C923F544E8CA05E5F16722531D6C664F8CC76003C390E4C666D8156FAA3F6E0
41482D3A3A1E9C3A426BC7FE406E89FF25FEB234CCD51218FA11E2F7907B9626
CA16609BFEE67DB56CFE2D7C50AE1D80AAA5FC3B713F6ED26A0E7A657DE220EC
3A9BED4967B45D9924D8F14C06021B403C11DCFCC7391B15064B9EEC298FF235
90730BEC61ED49BDEF56662CCCB5FAE3912F700E44577A861C73E2849193A6B1
9EDC4F5EE0B89311C8D330F0AD6E39865395536828DA89CD911357A1ECCCD1B9
30A2439EF269055E7E139BDF6ABC485BA982CD38283E870A8A1B5899BA118329
8C0A256E6D00D53B47E1F7AE890D3803E91CE2738FABBC214C731C49C43FEE22
C049040C5C7CAF309D5C0AD292DE9C9C6F8E9C7EF38084D649289E4600F5A672
56788F406EFD30EC69A11ED9CBB29E514659D45B139AB83B87241B6FE04FDEDE
31676E57E765AC6CB4C052198E87F09476ECDDF48248B4FC5A91FE145FF8C4CA
9DAF7F285A012039391C16B18E726B2F4740839E9FF40CDA511A96571999D41C
2294AD2E091DD7659A4DE4DE812FC920354999BE932904027FA358E88242C2AB
3C7666EB43C9A653D05B89790EDB4DDD3E54A6FC00F6B83D33DAA908377AA57F
A25F2326680D97565FE4D1E216A9C768A454647DB379C4ED87330C36FD60FA01
0DE7B00C68B52F3C006F4CB5E66AB4F312FDFD210D6311CC070987DB17E7D56C
EAD87BA0F2D4C547743FDD7A68BA6EADA8955D5540308E63E3D319D5E9C4588A
A1B9BECEB18D785FF63B4FC19AC486D6F0BEDEDDBA75880CD30B27909CC8C16F
3FD2AD267F897BE7B2EDB14B03A3CE00A6870BB846D7D5CB1E4FF4F13840E6D6
832E5BEB7383E249556A7D03753BA53A78092B78AB3B0BFD0E16918EC3924556
28EA68EA1B38C5BC66461FE03D435D01FFF15E7A613EACE41E72B21E90E9D65D
69FB6BB517B593AE025E7DB76E3B3E083DD36931DAE8E86F1CD55938E4C906DC
4685E758218CFA01979CB63DE375C1AB93D839DC4F2D41639E03C463B9D53B15
EFB34EC2E2AD193F4267384FBD38E55D7951FE1F9C3A11F4E54E99C1DB82AC24
5B5134E71C17177E335A1CDA79CD88A995C71A69F35BD0CA4542824B1F4329D0
546D3E4EBEA72D599A27C0EED6598CEA99A13F6590894312DDCDC225B9025544
1E9155C36D7218EB07D98F1095CE31E4FD96E4063FB23B0C1334231CACE3B876
EACEA91CCC19B26AE1658A5516E42BFC4A9EFC0F71935DED5C54A781D46CF931
4CC3D7E9AECA005DB43AAE1E43E951327A660C06E7682033B4376512D85F65AD
30E430DCA2A3184477569210EB8C4212CEAFBC79B61186AA832CA4C5F247F136
B48D49E89F0F8B0C9801B97D6FAFFF61FE4D5BB9DB36C490D81737976009F608
11385EF294FE53F276BF1CE631C747480C8C7504D585BC4A036D73CCD5321C38
EE7359F27015787BA593BC0C6BA1BC382D228B0143FFCB7392E4EA5BEC2AA852
24F7C29A671F032195DD1877A484D1A7C53172A728BC83D3774B973AEC1EDCF1
284ED126A95DBB4FA2D09EF80D1F2C507DF980D3DA910C24DFBEF21AE3C1183F
CABB2F4E65F5271B585DF4F182C854AA22C689EE739E003209C7960E66BEFD41
F70CFA0D74DE9A17A3153617F07CACE92977B68FB5A1CFB014B764CF1DCE3D95
F87F1ACFC209EA16B2A6A5D0BC75145689B16DD619A90441E2BC41E415CBEC45
468CB48107293A0032D6CF19AD21811FD0A4E11C873E88DFFA64B9ABBAA819EB
8F42657D15542C6068F59745747E0AA030FBF267D24F99D24AC9D5C68EF6AFA2
66D0935A3932C078D8850D009A8B3868F4A84AA68FD6EC4244035686F56EE979
AC3BC155D6E552A5E95D70A7F43A0B52F06AA3A71B9E1F6A47F14E57CF25383A
B2C486B2D793539FE228E0B2301D85F0FC49AD0DA112E199447E0C516A25C87B
DEB2E80D58B526E647AB7936C6997E133DC99F3D2FAF184694442AADDBB4DEAF
6141D460D1FE4D5BA98302428D1D8869EFE48A460C0BFB2499E7ECE43FA2D85F
D456CE9AD3AB8669A69121B16C33CD949DC6E4C614B4B4473137EE9A79EC3F58
8762C66D9860B6D4FA7E3C07BF3AD457EB25B2F7F992188F3C5E9E5A35D543A9
72E76AF2924E49D59702A6B3E394C790FB4FB698F2DE07D4AE01CA1E0C4F2554
BD6F1F4C69E46C9C220B8A66474326CD9C4CB0C0C97CBCBFCC599720FC9CA0A2
B443654E3B3D6E537AD3B43C6F3A905597570A8C6B0B4A5E0FB6DDD131BC23B3
E4DE6BD052FF44DE28535DA5839016FB0AB514829CA3D96CC079464C1D64E302
19493B226DE0168E81068DBF528C83F702F2EDF4E45D0FEB7FD43B1F0EF41E9F
39098B65E43FD1227A26F6FF812CE452F9622DAE5443B5B8E77B8D164B2F1529
0E5272B2C64B10DAFE2459F2E6B90131359A396EF818B1F1A690DFC241EAF2E3
912F700E44577A861C73E2849193A6B19EDC4EAE851B96630F615DD92A73EB8E
89EE80310D61F570C7CD1FAD7A38A2A74670462EA37DA7CAD61670A6E0C0B79C
36D18B1F5F58F4610AF210FB438A5ABF80A50BB8D2369AD70C303D946C141100
367968CFBC2DCF90282DE06E892D91085B4E047C7F92AF7461811CDA6D6215BE
2B09EA48DD1A19A302235DE926D229F878B8A6B915A6826F4B948E9A9A7276C2
49E31F1DB40DF9EBE155667B73C12CBA726B307A8EA9890962512B2DE3CC9598
48E590C7E7E78D2F285EFE30BC461BFB2F0B4E61D62BF54A9ACC7451AC023B35
4CC6B692896971F28513592B2818D3262CD09C3DDB7FC6A25976EC69FFF9B117
C01C390C300A08F9CA03F6B4CA4588D5430DD9943FA6EE299A4FDD6450820D3A
4C2876F092EA5477430693F2C076AB6232C864E0E18B1B22579F08F4E68EDA82
9B4C0F823586C337BAEDD5C13502BF3FA332F028FDA591442B82FBABDEBE998F
660F023AADD86B025FE51B8D9481AA5DD8D1A4D8671EB45ABB32D64FFBE3475A
C402B3DEC385C593398B7E8CD7435C20A34F783A4273244DA0E4AB11C078B2D3
CC1736E18B657D33C2B9836FB5DB6A0D80E2FFF6108B841ABC614DA8C5DE3657
D1A80350032D19862612DDA3B50836388BDC7AECC01062AB86D4EF61EA4CAB23
9D230E14283F6EEB26FD0ADA6AF173221076CFDCEC914EB4B6EE7AF1B21C9104
1D828C72E2878F2F679C3A002EAB240FD0EB827E12F79C9CDFDACCA4E46381A1
B3B7EC561A8484903F26C3D463F77117FCC6C275B3284271793D4265B70E1420
62C5823246B268F1DF66B627B992C9E200417B18667B975BF873F4BEA9022072
655ECB439ACBC07D8AAC4A74715CFC76B176E1104CE528460DD02979B14ACFB1
FE71C614310AFB51163ECE573EAB9DC73672B14F2A3355CA6B6DDDFF3E2CA981
E3997BBFB6AB991A383B12D89F8C6558622D678050C25D4318F96200225DFD7F
A13BFEFF0A5980FBAE2FE3B3F62F20BF5C8B3E37CC4E1A158E799D50610BA45F
2003568AF44E2EE4DE7E90903A7EB7450AA2BCC638BCB6D2318C6E6FB8AABD90
513DE5F6C2250FBD151440F4C5CD454FC67C6D40185A6588E7B23653E0063E0C
15FDB7D763FCFC95483BB418986D6EA49F09EC1A7876E82D02699D346F69FBD1
A20314994238F3B603EA8489EF99E770EED78A968F1DC6274E6FEBFD1A492C41
8E90A879E70C1FE775325A6F557EADE46E91402D5E8C590CF59FDFD8BB1CC5A9
F32DD40FB4BB18317E3AF85EF0E05ADBB822FA6AE823D871F7DAE4938A70378C
087FAE52480AD00934680A5C213BBC9F4B25F58B6C3937F7A3D8165EDF4C74CB
B662283EA3F256777BF90A75073302BBE80809A0E934D63F193DFC2CD15A8FEB
3C0FB8C09606DF50490C7CAFCE844147A1D99C899AA25C2C92C8E401705B8508
609A854BD22827A69158203176FD4C2D16191D8876927CD90FBD295197554DD8
D1ABFDDAE449FE68185327170B046B27F59EF049839A5264EE7B1DBF351FD9F0
74C98C6D159862B0A9826301D3075911DF2C7F74C30A4646D8726DD73FFCC47F
D95FBA0A67BA43D6851AD4CD3BC739AE2E22CCC18786FABC86A69596D8197F07
641811449504B9A774CCD6BAF7778B7E4FB07ECE69B6C047DEBE3E904FF1F6CA
B5A6F5AC228154EC7DBB3A58840236BA90D553D86CF2DF1EA5DBDB198C7D06A5
4BFE71B757772EDCB61AAB312B3E85CD0EC8659948F84008F4624A4F41B8DDA1
12B42DAE675A011A3611548561CE7D6B0FF36D01D3EB5752CE9DFE1497362CC0
36695A3B1BCCFCEDA9577FB496F373E86AA35020B390317A8F1B0971C84FBB39
F5FB23526B3104E71FC3EA50B8009493929890EBB3F0C168479B6E872DB9ED09
B49109257898F180D2EF552359727536948ED09234451BB972B559AC50EE7334
62DC6CDFB7D0D11BCF5051081C696B4BF2005313F6D6D55387C03EED11486DC3
2D638BBDACC51CF22379D24C2A0780333AB3CD3A9E55431072462370676C2560
F4D7BFDAF2A51516325FB9944146B3B7D9CA452453C825B92E606247E509FC8B
9FC0B83559BFF38F41627BD8FB32E62B80EAC98897A255ED1FB15E3D9E752D94
747250D79F3541DFF07C1F50397D2E516520C721520580C863AEB9F26D0EB299
9CF2329DE545B92D3A3FF93A7CDBC0F9B0082FEDFD718AA54A54C9217FB5FA11
2FB98F3053BA620B540FD89803F6C706796451A79F4041BAF2D3BE43FC7E8CE1
4C9FF114020BE9D22618FE9C8A973A4F6FD332AB98AB0BD4E30FD40B221266D5
52DC691C78E23E6FDABD6C8150FB49BE508B48DD49577EF2E015E8D9C0F64025
C76E0550BBAC6B0ED4F0A5D956F69B4B2ECB5B720B5CEA5B78ED3D8376643771
6B282F736AEE1A4F727344CBA04D1A0BDF7EFA215B2B0B1A7C67C3FEA42EB54F
22E9A730AB8D48522F9F38A2D283BF456D5D8BFEEBCB5B69717F22A051E2B5DD
2380CC96B5155C7598D6D71114D161E132C41EFFC74F798B2719D9BAF6807337
B8BBE3F300287451194F491625FF8FD008BD4402918043BEDF77B840B2BE08A4
8DB98DDD8A8691F3FE1D7B96C516DA7DFE48BF6D5A6625B7C261CCEA2B026068
37B57B4F38BF32513D5EA15E3B08EC0A1C9AAD283809A935DE0356C702F538EB
0B7B36121CD9BA70A8C79555892F5D4F4DEFD959E669C7CC15E749165D28DA7E
2AFEAD936AE066ABFFCEEAA68B8F22145DBB7A0CFCECE8AA6845B803651CDE2B
42701BCC0817F41B505FA0B5F906C537EFCDEE4C69AFFEF89DD06BDCAD080F5B
1CCDBA678620BBBDE41CF0C04899E179D0BC8EDEA09CBAC8ED110FE523291E3D
0B916DDB476497448ED2EDD5640F536A5888CD81D75B60865AF7598EB3CF6804
B66C3760BB3AD124FF837C7D4C084DF296EBB388D55B27B994508E77464CAB1E
D5F8C72AD8DED2909E76A9C5EB6A15CDE8D5992255C82749370F2CDA2794404F
4718B5DD3F742689B36830AA72D8C783F410480A7231D0331B736AFB58B5778C
60E4DF1E559AAD015F20F42D357BBBFB0E12CD481F96252AB7402213DF9BB2E1
0B54B8675D83F5D851D392340AED402E9DFC0045FC43A18104021E7720C1A97D
522C07B0F972DB969DB777E73E44B900DA59472981C137D7CA5EEDA4FA305915
1AE811BFFCA244816CB6ECBE72B39A04D306436AE494447B1BDFE23B36D9B12A
032418B9321A056670EEA02CD7150F595074FFD037E05D5CA52882F7204E9DF8
1B2CF71FB6500EE02F9B9B8774237EF1899A326BEAF8EDE7CE00A6F9F7EEE92B
A769DC7E4C5AB3F50FE19F3A3904ED7C5B1992AD7941AE16EF07E5231112BA37
850D2AE4092362EA1A884F4989C120FABD61EE17CCC5F11D52AE8A7A461626B5
EC47DDE14A666942B10E15F853CC86DAC0A532DB8CCAC4361557D938FC4AEAEA
9E88AA0FF61ED177AEB41DBC85B9F5C5D0AA1EF139BE26FD7B9F79EC9490143A
2478F6F6C9DCBD03608C8041F8BDA4312FAD259756788DB113A3E347B57978DB
C344FF1C817A7836AAD47B7EAAB64220A2E61C48BD2B8CFAE86EC0A4FD7D97F2
BEE7C526F472736F2B9B07D0A865656B49A2E46D84D82DF7278597CF20568361
0586A8BEA497E867582A15D95FA2C113C8D2D5BC6FD512165E6A771F180872D1
8A4470C63A4CE668212EFB2D988624EADC18A55422AA20E7232AFCBF54EDE62C
BD809856489B4197F60D3490D9DFC8E5003D5F23F7CC75812D2FCB2475F074A0
D44FB1D95CEC8A788F84093A75F78495F796ECDE2684115E95CED40CD4F27C4A
3FF0D14A8675EC3960AB889AB0DE95280DB07933495A954F676F7DFA49F81BA6
B221FAB4FA6071FEB6FBCFE8F5D07B521EB0F086704D2F749380E867407E3605
DECD9D47E4669B250CCA42F8428E27DB4BFC2E846239EB7928E4FEB7C2BDB973
2C0BF2947543F6B369BCB298D3B571CEC6E771B02211A1768768D62E30E53B2D
3AF00AC044A759C633970514118193C5E291E56274B7337FF348449C01E851C4
736321D6DFCE20133ADED00D7B576B958780A86E89DF637B777B16C0F388D6D3
2CFD37A002015A3CA98EDB8D21E8DCCEEB631E12C3D859FE0005BBBA6A3CBB91
36B2830227D9B5207C1B5C4D51010A60CF896A0CF79EEA2545D85B7AFAA22E83
91C48D5120434FE0179E9020062622DE064EC1424A36558E6FA7146674818722
2315252264773FDAD954D11409D4F1060DD19EF66DA5E780DCCA30F180F8DFB0
CEC466D8E64419A6A18C8B8F25C505F2EA29120E4FD48FA46F251424EBE44199
949AF13E05EA2ECB274ECC3FCCA3E01928D73CD9605748E623594256A1BCC1EF
5D73A717AAAF3638E38676AFCDE9AD568319DC6F85E6AF68ED69950F2F55C42C
CAA23DE753C7B05268ACB4D8529212CD4796DD9F9AAC581DC1F040BAF224FB5C
0FA52C0B89FD7BC34372E5B63CCD257C0314F99E0E0E74769685BD6C67E47B42
467B373760BC57A72FAA1CD068777D347A8B63AD51E2567C7459D83199040AB6
4EEB27424B26CA8C6A9B37FA9E6A3552760C1998BB54FE1DE1ECB51495B56946
AE1598F0BA5A856038C66F720952543DC7BD16845B0ABAADF0D9950A195F64FD
3209C6D47B46B7708F8558ABDEA766EBCF15CA68D755C30E02C012629BB5113F
92012C296FBCB5FEEBABCD6C455A139D565F8CE5847F7365D33480566E36545D
AB1BB0423C34755F88AD248781FDEA4CC1FC6577880BEFBFF5820772B44C171B
4AF5A5A01F3D54B875B02A026097A3A165328322752746417A8E502F529CD5EC
1517FAEA5DD8FE805F33EF3FC77FBFC3AF347896DE4EDB781EC82EA0697653DF
A3919067E1F4A9D920CA5BDF2CC4DEF46FD4A183EB07660D60FE40C3A83DB4E4
F368D5CD221D0EA7E1022CA012CE9760134009598CE6CA39AB81C63C2363FBE9
127A3A47280400726CF6545DD7B4C68A3F79464C1D64E30219493B226B06125D
22650CFC2F3CF73BFD374B620E90B458CB427571ADDC804DFBA4D875BCD1C5A1
60EB35A8EB174221D8005631DEE791C64EA44DE3016231B72467837CF7FBAE18
761991AA8800B6FB0EC0FFB31E6781211DDDB191044DB8D40548A9CC009B8740
4941B1C18BF3AC52BD2CD1D58CC0D2196294FE173EA579ACDCD5CEB4EC0A94C4
8D25B1E839907C48BB13E5227FDA302AC2C6E6E9E4FD1A84525D0754B270FA7C
180D3CE759114D5D58C58CADC5797763ACE221E3BBF2A45CE39B80FB268D543A
28FD46B5BC62DEF89CE32FC2649522985C27941C58E4F50B911CC94406CB8E60
1B345BF60B6462DD7913665633A369E6FA775BEE16B10B7FB0291B68BBC5DD2C
7A5ACB41116C5F3C8409D32BEA2B29BD1A08E9B95F964FF6314E7CD33C819F2D
CB453312073C7EA122F58EA7402EF6A7B7A87623F94CC4DCCFA7D52DEA507E5D
026AAE08682594CE670BA0F8059823BD2AB80BC9DC78BD724DEDA7987CCA17B3
A2FFE0ADCBD3D1F3B66962A7C6579DE0654DF90D89C85174FC32A61B78776998
5079D60CF71131977E031325CE1D16865F3C7ACFF6ED4EA6DFDA17340E96A8E6
CF0FBFBCAA75969712B8F49B644367248FBEF392A4258D87B0FF0AA4C418F45F
2D92CFEA647A6508A8ED9F5D4CE7764362A220AAA68E2CEEE203C7902489D4F4
C2CFC8992D0E2576D9850BC6F08AC6F1709071BF6A734CC0E4856CE3860D1254
AA7843EAD0B3EABF78597793E4B7AC5B3839F3E07B66DE9047BCCE989895127A
F92F2F1B1402C5E8895E20D821636CA7BF79B5B8C0925EC8B976C4B6E3A06E95
7827E12CCBFE3134296141790179050E99E6E9F1316BFAADBA9135D64A7DDEC7
89195D756231188ACDE600EF35D20AE7CEC718C4017ADDC3D3BC7BC64942E099
E6B189D865497EDEECEBCBC1BD6A0E937EB137AFE676E22268D7F0CDA4C121A7
7AF3F5F79161A150401656F8154C88A985B0E0E306B0F9CF07D37C2296B68B75
BB691459DCCCC211E44D10C0CE6B2EEAA9BD1FB367CBA7FBABFD2A446D883D56
1A94793EC689B51258503B3504BDBFA2B4520DD6104F783317388D31B2DAD1B9
9AB68E228E6AC9E51AF57A7B2F22749A53E22583CD243B367B4DD87672765FDB
C026E044AA92004E8D5B1868C015FAA0DF5303BDF4C89757BD860D5479A701BB
E0F78191B1E0C419DB3E99A2E08D6749F21CE313BD5A86E65F5F532805785E2B
732F3079B890C59CDE423533589870CBB069CAE6BC5F117865AF3389F9B24A1D
21A9CCBB11033EC03304518C35E55502546E62683AA3563663FE607F5E9284AF
035C5C9DB4F8EB9844FABE985F922CCA77D1420555ACB4E3E205CBE8D2CD22B1
B00C5F181A411F3C7384EAE2BBF38828EBED58AAA2B1C95D822B1A214FCF34F4
3878F7D76E5B0744A7C12C1F974E42BCB64409CD8A2EEDDC7295EA159C11B1EE
977C88AE260A1C784B7827EB635BFB6D5C8C66C3D184704C86343AC38E2D15A1
2E05C70B6412C4E4378D0EA7DB19BAE8A38B7F63E823C82215284C372A852718
6EAAC064AA1A5B3C70D9FC3B8DF53EE8E41302E597B15C2F640CA86F291743F7
9FD860792433C3DF19EE7B5C27E7BE0538ACEEDA4B48AF00D68BF7A4DAF9253D
A8F8043F300344F32EFC66BAFDD53CDA1FAE1447375F693D07ED4187C7F90629
FA2A036B3D608F4089340F038C4A68DEEF068032B92725B5DF0CD573E9BC4B9F
B3639875028E065F9997AC8862FC5F488F50AA8B62B3ECEFB66FA24814128AD4
338ACE49C0185AB61EEA65500D048E11CB8A8E505E9E31AC0B772B8E6DD1D0D5
A8590FA66FE389609A47A92464C8B07D918EEF25619EAB1340719657BD58BC53
D145E742B959BCA4EBBD75E0C33F398E59546F733274CF2E7E02ADB87A8D7F27
643D015A4423506A9A2A9E1CFFF12053494418E74B4EEADDE0FE0B5D86C9538B
9E3260EB814969E6252D5ECC5686326957B6CDF4492CEC50E13EA42098F71518
E1F8970A1B973B06531F2049D757345A692A4D6C99CC1439AB311604C7573677
EB149C38DB0E2BFEEFFF9C73CFA7ACD6ED9F9174F0C5658D20FB0D8E059A9911
6558CF593E7D9FD8D8EB4A878F5BC097B3DE6C2FDB09310978D58A855769305C
A7D1C8217C09DA820EA35815311E77D92DBB7A781CAAEFA59D3AF4F7C30BC3C4
EA18915E655B159E0E49E226B12AB1957014E9B255DEEFFE52D90F5C5D916565
396BD9AE7F8B875D4F2B90A0332A97BDB56DBE77D930E62DF4C17314515B978B
B982048D63FCC122175CC17D20C634A405055C8658E2DB09658C49FBF52F93DA
CA5C0E343B091E6CE2EB168C64D83C7D15DDD74AC449D9FB324CA6EEEEE7B4FA
88BA66620BB08F65A08BF76E3D05B07BB7E08BFA5CA8C5EEF8386971DE077781
A9E05D20C66518608AC5D90D8ABF8C1492282910DA2DF6544A01CBE9A5935DFD
15F5C181D6853342FD9AAC09E00DE6CBAD0A2D99517A35BC45189DE3CEAACF4F
9348EA4E95A097F26CA7F920D15628C16E679DCF0CB61ABF4F72B6EF21519DA2
560EFE46212572E56B9B52F55D8C98FDF950344C599EA5835913F23D8B8934D1
05C30198400D8B19E3F44C1863115AFCA20E9D439817A3693EAD3D2C725CAD4A
073EAA14943AFB0D4F35E622E2D8DA8F606AD013C79D5397F5CEAA42EDA0E437
5684926013281B4F660C979CD35163A409915D4862F8867C39DBC7608B4550B2
727E8682A7A6649577BC07041B903BF1C98653D90DA82647B305ABCBD6C49ED9
DEE46462D60B69623579C9FF815B7E04662CBF7AA7CFFB1F54474C2D20B18EE7
604FABA742C9E773790AC2F535A6E8BD186E1BFA6DF76A2251C779DBF0649F15
D26FD05EB16A770069E593F5C403C5A91AE20F1A22BBBC1B1166547B30693623
593487BDD4CD96EEEAA809372D0F7C78CACBB5CE493E6318BC86D3EEB72CBECD
423EB147F95B5ACFEF12D8F207915DA2F10E46CF71C05A7C911225D77F402626
BCF42425A26341AA5AC2DCE2E64092DCD8A43E34700977D3A7903F91BC398507
0ED99A5666259191A1A1147A9C44FC6A22380B10AB2CAAA5C81CA7B836A376E0
D29FECB7E8689F2965CCFBCA090FDC33F885179DAE71D903DD79CBB069CAE6BC
5F117865AF3389F9B24A1D21A9CCB7D09D4FE71401EE8488638D7C483D983B49
B04B94C954594C43A33EA29CBE2AB98CD0305DD935D8F0F5EE35998C8C691A46
E94A4BBB826E41AB00E9A4C4D7424DB19AA4AA4B92B0A965BEA31B1EC7035C2A
626853C90F5AD0346172F65BD4D4F1CB3CD4D6AE55A5C48AF26AC8013F0DA78C
0157DB843CC75FCDAA40A5C9A5623B07973E28001692AFE293731EE7455CCC4E
D0ABEF6C73B6DAD740F1775A6D19B68D965BD8D79124D5AFA9BD1B7B08EC417A
53FE85F8C56A14109EC81E903522047C2CD466C855D1F7866486665CEDBCF387
F67EAA68EC3C58323389493CD094863189FA8B4FFCBCD6D275F69EAEF9AA8C57
B6AA0B9A7B70258F993C87F2C75BD72B5278CF84E2AF65C0EF0221B8690A0341
2DBCBC3FEEAE3DC364060DB65F34EA5EA1DB1FAD71C69F5C5C9D103BC2051857
42389BDD2EE4D976BA9A90F152D68E756C29A24A789A87AE0246DC61AB7CE236
3FF6B65CB9752CE148C3C8CBC46260C83970CE84EC6B9433F84D118630A3B223
3A129E3909CD10C384F130769D75D61902FFCB34DA76DED556A52120FBFA2B95
ECCF029A6B18A512D30CEB0B6ADF80FA2A5113560761994A7D47CCAD33572C36
AAF5787B986F0A099F2EB3B549BB128053BC57B5D0FCFEA1117400824080394E
987600DD4D04CC5246DA7AA16DAD7A3EAE29CA3AD439E5109C4256E14813707C
96C369F883A6E09C680AB5113FB87655EC865C3BEAD9DEF9F2F8521C2915B900
5BDAB11CB8C655A72354626722C510D6E242E10F8A62F57F4B04B03D4460F5B8
EAF3E626D7B094035B9EC3AF20DA47748C9A62A9194A43E852C4E3DA30AF3C18
069BCC487B58F4F7247675B2399F0676EADE834B12AD061A77E2AD5C9881BED7
0EEFCBD692B4F18BF69D3307C75D94305D14105539C89BBD9F1922203CB0E854
A7FE3DF46E0B8498016C2ECEE8AC38200F17202B13362E0B5C50A0DDF5F9D27A
AEAD9CEFBE45BB38996BD041721579FA422968D8557733F46E88F55FEEDB6C19
A96D1D48EE4A4DD94D6443467C61CDFECD8D99BFC582EF3A79C9F067B1C1D5C9
E915592F7FABF2AA80EB3A44D8C1AFEAB666552ACE170271D4F4AFF846AD6A31
0AC5152259D7DFADBBFB1295C7175929A360F9226727D7F75790571F65D0A168
4C94BC96A0F39C297F1FC3A9E303A6B9AE1AE673AEFBAB29855FB3D8891C1CC1
173A26FC69AA03ED308F28A23FE7A7DF7F4EE6D26FC50B7EC2A3169AC17909A5
BBAC615E64359C00C372BAA6B5D40691917A0935303EC18238935C39A42B6E55
4890C325FF5D5CAA471C50E86C3A287D213A5FC49234F1C289595676267A8CB2
4770E895FAE7D02B603CA97AE8EE3D949AFDAAD1647DF221591A017A6524D3A9
5080D2F3B22E38E4BE369BECFF1D457A1A7F880409999E6FBE11902FA128D3C0
B2DC97F50E0349A3B1D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86E4FB685
DB55C3ECC1B8B7230CE67686A55FE9B3144EC82CA111C50445F92A42F1323334
6D21A839583F9FCDC1DAAE9A2548177B3196BAA257EDDD055A37FC3D5A6F2FCF
55C62369484B1011EA7C2B87226EE6A4C6526AE5DDD3CEF738AB415B034B567F
367CA2E2A8AB4936EA7B2146EE408B9ED0C6952247BC28B35FFD2683DEAFB722
0C3A213442AD48691C2A47DF05F6A7466E87D3020FB2DA81CCD24FA7770BE606
8F5403ABE805AB2A81CEC34D9CA021A1F6F838A8DE13C337900462F952EABBDC
2EB1FBEA51FF66ADE17A55B76D038FFC64D4CDA9D2C72DF5CEC5B94792BFCC5B
88D2579130A132E47F1F4EE7941C160317E262F020AC43AC01DB8BD67102E132
2FD08D6A1B81AA1C331966C80787F35EAB3A94CCB98CF5733C7DB305067D1883
C61EF0334681CCACC5D024F39309DDAE75BD8F2DC7D4518AA69116755B434C73
4B170675CB21F6FE123414EA231376981947B80419C6552BC98F10E25117A1D9
5DFD4919A4DD41821FD46846D3AB009D9E8F3BA6F7469F71248E271FE38DB3B8
24A78B6761B22CE4D83A484B508A313AB9EB6E4911FC465A7F3884C477F6AB9C
3CEBB6A2FFE379FF40D78826AC5275EE6661C4DE7202172BDEEB2DCCD7C4B742
DC3CF9CAC9D7E3D281E9C1B75D0EBBC4131B9CC9CF26A4C6E034E26D6BBD97BD
E2F051973435D5593A75071F79CF9F58F15C92A6FBF7B9E4E02206E93022A060
9D842ACA6AA03E96F8C117951A2994F7A3EABE996F5E769F84EED158E1720888
47988CF8E2CF437A1A720F87F86BA058AEAB3556E4938C6DF8ABA1F582AD81A1
9F11688A44032481C0698FF9E0E602158002167E6C23C85BE7D3C1625DDFCBB5
9703CCC55937824CBB728B11CF5D824D9BB84846D75651244286A15F77ABE049
F1F25FDED5170BF6156B7946465D1D51CB0FFCC154FC5623575161086BC2003A
C0A9698AE84CBE6136DFE6F45BD57DB169FD3568C8E044865DE7308E8E15F07B
4949B3B5E1DC217E8A1FBD9B828B8E5DDE11719B76FEB47665EED274860C3BF8
80DC2F6C80CEC4A92F3028AA60AD3772159ACAF8967883430B4EC67FA6ECA658
128187979A7C20DDCA027B92FBDB05DDBC14E325FD3D7AD36FB14FF28B55E34D
D28FF9F20C92E257EA85AF79C082598F6790F69D1C986A64F25CE29C161D1DFE
D0AB66CD2C4EB718886E4FF6A9F8F6EFAF9552AD1D7CE46A59C1DE4724906243
97A1A8DCF4530A89DF33968A0D990D6243002C75ABD706FF6272EC8B127F512C
D94B4F50987A9F85A66612CF61FBCCA5D73C7E31E979FE162D08976442BE76CE
28AE3DC8D73A84AF77A1A9B7F8FC80334D0C55550E89FF627653220F144C62A0
39A19FE053ED30FDC93E4F7F38F5287778DD3A5DB8E6475585DDA2F0BCC195EB
E60A0D0CFCD9EA63D68BF541CC8CDB125393B314037556D6E9C3326F8592F1A8
E23E12340D6D91208B85351DA764DB623D1E0A59B9FE47D7D4D67C241EDEDE0D
7C5500A05DBAA0C671065C069B7A80127C68337D1AC74744F93ADF8FE08B4C8B
DE976D18C8F669EFADCB775945415FC06B0EC169287349C52D39779DAAF3AAEB
35A2B4C4C59B2FCEB1291C549BC9ABD6241D2D9C1EF67FACAFC11E3D0B5706C7
14796D160A4B66F25512A6783D367B4DD87672765FDBC026E044AA92004E8D5B
1BFE892B5AA3EF8CBDC06696D3B82063FC20CEB298993B074F199A24E73214CB
9E341785567E831ABB7D7D60BB9C19AD3493874D67FB56FED2C58DD18152F75E
9E3A642B96FF3A9D7F90080AB112BB219A800CAFD8D18CC2BF0F228851C76361
3B3DB11FF0CADCA84441115A0F58509A72310016F5279CC754F3D13AD666CBA8
F8C56E27E389F1DE7B44A58B63AFE598C3EDA15CBB4A7E9B24DE17E64CD41D9F
3FFACA55A9F6FBD5A2798FF873B61D70DA7E8E4E44A16A51FBC10F2F4BD0EB74
75E396C85116AD224ECC255951E05DE00CDDA4763AAFF2692126B4FADB0C1CE7
1B0B7CC7787D549409481AC250F0399CCEB87AB6D2750A21CA7F62345F00D33E
4349F92F92007263B7DBBC11A0A78C455C560DD52D1C26B596C4BF214AEE030F
37D5F2BBCA2C170F3042F22DEB8D151C7135AB91DDB1C9AE3C09162E8A4FC6CD
4741B38836CB599DF98A23B4AAE0D9D68BA661840C4858D1D3E67DEA90A16FF6
900D700AF8705D30042BE7B6F8E6939722382F837F4A4B96D187D25A5AF03BA0
9CDFA6EBDEFBCA00A47E7C02D1B9214BAD874D4FB7581C7082EA167108BEF6F7
E34D91B0219E7D0BBAD6E383CF9E8D0ECE8EC47CB9D61C5F5F603AF1F0435AEF
DC023C0C14112AFA7AE0B52BF90556D39F33BE34A345A80518480DA06DBDCE3E
790522806D1FD1B92CD6BE7B6F60AFD2657A1913E3C0A21FC66712422DE63CC8
75F86A646F1492C18B24E84633052EA5DFBED18472D73AE198962F216A97E1BB
46218720C44A3E508E7A87BCF89071C9EB5BEB228C5A1BDB415F80A4C8F213F3
84E27CF7F81F43138381D177F93F8082CC9D5068B89B46EF5DDF9B3D21432F66
E1F7774D9D4BDBBC993B6E6F1227D0D8FF71335393E9F72BBFCB7462632EB27F
142A1675F9914CE626DA6431204C74CBB662283EA732C916DC8850DE6284BF19
40F241A22A09F10267CD6C461D20145253BD827ADB43D157A1BDFCB3233B9397
EE78426DCCF2D7221490784231EA6CF28982A4470A7152BCEDEB456BEC3497D2
D84B19F6048ADC98C7E0F0AF4FCD82B10FF5B864EFEB148E25FBDF37D16A8C56
124C15F2EA113143C73E1FD1D0F26735ADA820A8A6CFB8F183660804FA86909B
835848461D686F83297FAA9EAA1A41970A138DFD2DCC30CE5814706E47F2DEB9
0600EAE6A556CD20AAC23DBD644F0B3F94722F0A1B4D56F4BEF63F46CF004AF4
D76C8434E66ADB72B6710A1830B635619AC1D22FAB8AF8D51C4A902402B857A5
992B7C4F8F83F135BD8E491D8F710C5F31260C5AD761E6DF3CF96EC69D11F030
50016897C740546BCFBAA9E568F4B4281BE3119BF80D107CDAF7D939FC7D5243
FABF7CABD16E45525002B13BABBE8D07DC3F0C5D4B351948D03668F41D512941
0B1866D7A52B5AF7B22EDF4D13C1A0F8165B4DD141B2DBC25014AA98D3D0A708
EEFB81A2C5F1549F213C6D1E17310B1467D92B1564CBE298FAA7D61503407E24
701EC88E6252EE0010BC0D07FBAE852C0E40A45B759CE463238A36732C3ADACB
0EA238AB8B29F707E61BA06CC8C4A8E8D927ECD3B5E0320C672715B6FCCE5548
E4A25A766C9C67C95A518A4E514DB0410B1E140095EE78200FD0EB827E12F79C
9CDFDACCA4E46381A1B3B7E8156BEDE41F4BC6C5A22531D514910BFC8A7F0350
20F3D22517391003DDCFA7A2678E64396CECE7B96908E28971553AB434161B4C
D9385A5AFA01532296FDA1DBEC190D8EADB63411F870A4523AE8E16F422AB07D
8800C1DEFE8CF8885E335A3E0F3980CE20FB2C68043EBD3CCF97F61EE8DD7CAE
77CBCC9DE13BCD87FF8CC32C4D3183979E4D9200E5F7A3C35D2DAC2AD31A4A8F
E8112B67C5D462253F09AB7709626F52CC421949017016918F0AB2D87FF09FA9
956BC804E6C0432A3149B7BA168CA488A7C8F41F492CB8924E2A7A8B42B02C25
CAFE2EB3E9292F3ED8BD4219A75D70CC55783504075A5F0BFED5601BB398EF61
CD2DCF8C5B352FD4124E80F5B0B25E7CB7D088AD7F7CC029FB2DA7C9803DD7A0
DD88F0C6F1CD390F5DBDF3AE3DEA6BC301B831BC479C0295E4599BFC78C907C0
12C0F9D7E3FA7FCA7E8558FF8EDE9B11BEECA6CEAEAAF4883071E2FC07AC2DE0
A960BFAFC38FBC00863EA9CC1EEEFE36DE5F27AF56018CC111F42CDB35DFA879
4F92878C212728C19C09232F7AE51D6624C8B15D84C4B7B360EED77F4D887AFA
0963BA6A1CBB1FAB162679076CA723E284DAD4004F875E8048DD691A98B1DE92
D88DD7787FD125D581ABB8022E13C0E2E4FB3051B3684E4A333956F2DF894496
F2166F30D5D82D5D017B3EC5E6ACB226157ADE109B52B2FD416E0C5DBDE38490
7789D0FCB3534C792ABD44E7DD2F65C460DE6C53A811C8DD08009B2ECE7E9541
45975B2DD760BC202A2300B50392C923A50BCCF291D509C1CAEF0662683891B4
54D88F5BC45BA81DEC1178CF1665E3FFD09C78FFF428AC27BCF0318D084A401C
C2D80B2772B05DA60F3DC15A815A6BAFEDC399C9643D9E7EC16450E008B9A2A9
C69D704164C36B9E9D404F2062F7BF0A301EC9F7A07DEA1D0391B73F69D03C44
63DDB774ED9A06590378C5F9F1002AF12A15F01E915C1F1016784B01E538A60C
D0507B3A795F0368768AEEFE07C551E1B64DF5D843B0514647A70CB32D9A9EA2
796579EFB4A340040C1C50BA4952CFE767074B3615FDB27F50A66F0208694272
42D783CF0D5CA4661A6578FA0C8AA23A2B03D265783554B035FEC2C91CA3AEE6
F0B71D01500EB2B0A8CDA0B452409C8C765E4F4CC0F2544D7E72C27C15D35FB2
D63518E33F2360022700959A62CACF5AA2A30B34B1FA3CA123BAFFACB6AF7439
8500FB30DEFF261CE626374AF1B2BC118AA1D5CB606555B15713E61667A104C7
DEE0E44D408757AA03FD00D0167C762789DDBA221769E060E6EB754F8E89B075
418D032D7BD972E88B7EC267E0D478FDAADC38FDE58C8251C5D0FAF6B63FC211
AFEDEA5883050D0FB58A0C9925604E5B30C8EB8A46D0F1F7013609DD1A67D6B5
D1A4F0B30901535E7612F98BD0B2102894D7FECB5B225ACBE62F7A7D9611F4BA
30DAAF5976B26B2363262545732285C77EBACA3D7DB3D394A1C113BAB6AC38D8
E043118CF1325D3CDE7E1675FFD1665ED8B8C46ED1B4A763CC46684C252AA2E7
CD036B3F87794AB92226C4DA3F70140428B8B8317E4E50F898EE5502AE9BB54C
ED17DE5CE89D628716BF1E306AAE35818F65593DE423E11AF9099F7586A67B05
DF4C36684825CA3E012CA717EB0FB1FCD5EFE89956C5822207EE2D9A70627367
26F73DE91FEAFD7808499995ABA057692C2A99FBF847E30932EC89D7AE31C152
76590ABC46617AB27DC325BEDF738EB6D550863099C9AE6A1D3DBB5822E97E42
85B758500AC9FBEE678FB6BA165191DD7EF4BE45B0838500B284B3CA2F0D6018
02F984D0565C01035BD2629A91854CFDBB14C33CFC2E66F409935CA7CB8142DB
B003E817265F192A9EC17289B7061E41E35F1C0FA1D9662D44654351CE8F69FF
905AAEF9CAE80C6547EEB8D28BC1B687408F072FA391643405435A09C1257CFE
3B5540A0B956B9C9876181C5BF3BADCFFF53C23B0C35C06F609118F846A805E5
115D72F39A27500D6DC4DC88F471ACD9152362D162698BC6F7535E14CF202C75
FD9A9389A8682674E24838BF99B06FA68C91E1797DB85D94285D918BF295AD63
6946160DBF3082857F0352DBB237B9FEEE5E5EC8E91FA2E4FB940228C74017D2
A82AB7285D867C0C1036B2DD83C5BB5CC6161D7722B3ECAD7CA6F31417800BE4
F9C7E39DEB8A92EE0816009F72EABFCCFAC59BD8E6F48D8F4AEDC9673C880022
A7C09E607A105323765837DE68CA029715A8A1D46C067DEFC27FDCB8CAD40675
F1D60FCFB1B6D26AA24377760FEA6FEE94F7DF6BFC66AFB8F4EE72F16F4A83FD
3B6F7C02C8ED05815F4112626F2BE1339F28FEABCA020520722A4B1FDF7B1A33
D82C3A35416BE740A5410D67AFE52FC469CC03029EC897030D4647E13682290E
FFF7F72EA59BAEC0A47D08995CE265F1145D3B1428B90D09A2EBC928A7F45C26
D883C5F0ECA8E6A0BF1DB857B9B784CB80429F00936901B0BD6F1FD327C47445
4242A8353142474485FD1DE49BB6476BC0F5343D79F05E9DDCC752D90E472F21
BBE055765DAB0DAC8449427E9AE332F468DC22BD4096633DD07FEB9D65A57C28
7DAAF6042D0804480805E17E05FB37A385D6433E59230884274AE5FBFF111883
60AFC84BB2DCD919A160C7AD5BB562CFC963329E77E778CF557909376EFAC08A
9B5DFA2D004EA6570EA460E36E1FCC24D0148C458B745876A5FE591260DFED30
955B9E08D8BD04B6A33FE4897153F85738B47FEBD2F2BEBE39239ADB477FBD2B
0D86B702500421600D0F90A4380917962C18EFFC6774F6DB08B799C59665C8BE
6087B51CE82D5A1DF120D636FBF48D27831269DD7CEC7FC516D836AADAE56546
EB02DB21A73395BCA83FCCB409591782F8A664335F67B9DDE36DBA793EC77E57
EF4CC01C12DF0BB686439960169627640B4ABA46A9CA09E9BAB299B856C408D2
8D6E9C0927AF998EF726477DB20BC44C52914F040EA59ABBA7AAF1FDCC26E18D
CFEF0E1D2F9C0297239DB3C1D1AFB06DD6AFF8A9A814589481EEB95B1A738E62
B64B42242C18F5BCEF3BBC0BBCD32D9016169714AEA697245BC6BE6C302F0411
B5ABF76F64689C482ACB47B78AD526567B3635C2DF2D8A77807AAD9EE3AA75A6
FBAD1E171AE3D8543D886F3885510756A71FA43C8A506723DAE4E0E05584290C
C586105EF0857583D37B081D9AF5108E51851935E165C063768ED394770CF076
75657587CB8A565962AD85CCFA396053909C6A7377F35F082E3976B95DE62B2C
0EC08BC400F4CC30DF20F770307817C09D60F5709F21892B5B970CC74AE8A08E
28A3804934FFA3EF4A169C59F2E9D4902C2219481F2E2E4718FCA2A1DAA2649D
E50B0C37485EF58E37EEF30EAB487B6E7AB230EBC988C888979666FD919D83DF
85BA4F4B14D6A77044767539CBEAF4212EDE3106862F54A3D148BD88425747EB
D84BFF7746FBDB140741D2C8AA4AF19F22592587A05FF0A32F4440D937A6C2DD
7C2320DC37841E76F57069E9178CA0D18776CC5F6B3AA309D9C79B9252299DA1
3DFE684043C084B4D78854124B117B2F35A1E2F724B9928D3272F97D461AFA10
C69AD5034FC9856112429267999EA35484E34B43D9F2881A14C31669CA51B6F3
0B24FBA0A97D310E6167363CC6C277134E2D1FB3A75DE53FEBE1B7B92C132E5C
65499F029D2AA21FAC8A7A04435ADE6E0E23B197ED9D2AFDE7802DB04DF728AF
5D691124FC9806591AF4DB629B123116687E138490CF2F1B900886A20B66A2C9
39190D6AB9269E1FFD3D6432231D47B3729F7F9F8AEF852E26126498DF01A8B4
E7DF01CAE49DE944C25FE94B2B4ED126A95DBB4FA2D09EF80D1F2C507DF980D3
D16B1CFC77CFA6A9CCCC6BBA1DBD5D83EE6AF31BEFB5CC5ED0CD7E601A6BF46D
57B576A3AB64998A45B825449E343C7871FC1E8DA934451F045700730153B106
4BCE12F9E4ADBFC28D6565A29B18C26AEC94C735E5F2BBE25A4B892B172FB00E
3507FA75E7B9CA8DADDABD318D036C1DE0B22A851974DE84D979F0B7CDD81C90
F9737DFAA3880A40DA050BC320C824C26E84E711A68988482898D37A8CACEBFD
70A6CD51D43B46B0EEFE0D9D4E6E44F92097BB6051A1F0E5EFEAA867124E4B49
E59E52633A071685269DB6E1F0B44EE2E26212A073EC154B9706FF95FA9FC423
912BDC5C48752B3864B0ACD1F045DD1734AF77CF48DD9CBB30BC91A49AABF25C
A83B8CE99A16E8665530535EC71B018C7D10D2A3BAFB910F299E407C06F3876B
1DAF8AC4BABAEB5846365C54CE07CD18BECE9F4DBA821F05C375C05A7199FC08
FC8C97B6386BA08C6055EF587F9426239DEC96DABC6E01B1902F23373679E3A4
AC60165B059A0D7FFC20BDBEC5FDD1EB0200C8EEDB7107CD40614484D72FA393
35E3E1843A50469340A1761889A771E2AF6B1C07C75186C6E84C2E1CEF3AA4BB
121C3265DCD868C3EE5985B8A09F22D867A20B89129F4D43E3B8C4CD1E7E5FC6
608B7033F0395339E5F6BC553C5A0F8BE0629A6A6684BCF83BBDF5C3880F393C
65C88905FE04A74E183589C4EF641228A498976EA58A47E016F80FF826C71E5E
71B8E5F16EAA4BCAC6CA3E98076D8887587C8B0B2189898A1AF3F70F6F5C39A6
E22F1B51177A3735586C333E99A9FFA7D5EB97E7113657C907A248691FB8DA87
B8060BB1BDF1C23A58D4FA560CC260BDD7214855B70331BA5F00695A1B287A4F
CD41167FF5DBAD326DE98A17CAE1628AD32D9A4EB84E2B3E56F7DDEF26AB30AC
7CAF73544AD92AA55E7AAEA4403674D3F6A24CFB83BB36894C6253926E73A41F
DD83FFD55C7597206DF48BF6FFD3304E74FD58B81E59465E1FC9F2BE1322EE39
97D81C95ABB90745539DF35CCADD819EEDD555D4AEADBCDE229D64B015C82B2B

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A2255C2C4C4D9E02626F0B4DF1B646DCBC0A6BFF
8EF29877FA968660BE139D8210CEFCD0D24E2C9976490B46BE7CBE8C1C475F88
95C6DDCECED8989E2AF9133ECE53E795B85E6800992BC331A4199A189ACFE5B8
DEB2182D7A5B4CCD3E9946F115492C8F03055C82927FFAFA6E43AB2423BC4874
E464ADB3D3F07FA22542322B7BEE5EF03A34FD5F89F09B25F78633F8D269EB8B
F7FB2277C280DD664B7470201E0B68633EB54DE3215CD1B5C3FC0318D13CF485
B3CAE0E09B8FB8BD66BF548F6A0B8DE645BE6F8F76FC287714FFAC1C08144A12
955053DAD310C9794A50B92550102D37B167BD5E13490703F1F12484B1F15B5F
FB5FEEFA7CF513353CC8D24DAB2DB6C023C62ED0742313EB41B9F622110FBE00
2E5E87966A452BDA7CE29D9E8ACA394EC97EB3C27EACDEC403B28BDE9EA4E24B
548FFF28053D427DA3EC5D297A4D9E94FFD40BA9AD110046684E3A13A3725C8B
585521F374FE8E555CDF8B4425DE8F7F49213908DE06C21233EE9DEE1E3D549E
A6623CCC000A65D71B3820796C75B563D731692ECF7CFB4FEA099E2E91987B4B
E631A5256713482D5A128BA9C1B6AFAF2E533D4FBE01630F1C522EA3BA34E324
5FD6994FDE5D38C9C79BE3BA37021501EF61E34CA864009D965D0FC207305777
139313F4AE886729344A8A462330B120207C069631B99C58827555F398EC2BED
BABADAC9371C59F27E89CA8ECCD67EC32B7B426811C0DAD492FBF4A248FDEA62
0CCAB2DC7767EAD231480F1DCA0CB59B5A6DDD0847117E3E37059ED70F0B0E54
50D3D79745C38C8F88A9E9A53153E122E9EC7CC7CC1718CE240FC1670AEE2063
7D66D307D3F761F76552CA46AAC25483F1AB25D7E8693933BAFE73354A93FD73
07FCCBC371295662816CED327989E8D4D49D679C860B4F5C6C9A7EEA7015AB1C
10E8355E743DD526AC7410B02DC034A1D9B4ADCBBB590E2BEED19D4D910BA11E
B520562E10C0932EE996867CCE2B0B778FD6A0ADF7F65CD68FF6B96A3E41316E
577137B94B2298FB62A7F968D133F383FB03069AFAD0E1D1FEC2928C6040AAD3
293A257CC3C93B0B18351165DA01E1B0DEB0A4BE817B311845A1CD83613B0662
172324ECCCC5B81D6FDF9AF51AC06DB72D337285700BA11198929F50F169E841
D321803E0B609FE38B20709F2431FEA724A03D0F6CAAF186FB2AFD82B5B60629
84363060A3BC180D563B7B87355505805DDDDE727179DEFDB1920815EB8C4702
F89F660AD37925CD47456EE0EB0DBEC56C87A898B2A2C5D6EAD7AC9D2EA2C02C
02F5C0A0405AA2A9E01A40097EF8735C8D53EC97C876B5D9D44D7E2D40A53D30
111752B45EB39C509139B10309C28479F3F49DE3D0E24330115B1FE52FCC2060
FA9B10F48E1709FBF156
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AFD6391E81ACC544000E97C2E4598
BC30968ABFE8C2E76FF1EB04BB78E7BB3975C777E2B2B1896643B51D2D25F3DD
96B454547AA6E39E704842B17E1E8EC5B2286FB19DECBD09D239CBDCECBF8458
FF1AD9E18F9789B2DB9FF2CCC0EEC5007E8D72ACF2D32BBC4DA955E93C086058
929DFFAA13FE99C45BD3E6D13E2003F05703B4ACAB454C6CB74F0D9C95D628A2
62AE0E744AE5D671CDB05E4E8C74D5A790AC0553B856619A14029B25D522EA41
1652D9A54F1D1B22718DFD7CCA5443327F61192D3C6863DF4ACB9C745D059C0C
2180824BAFBDE47BB46F54EDD7D7FBE6BCC41760E7B2BD1AB594E30D797581F5
A0E81AB0F7A6DF463EA4D5F9F6C5D3CD3A1EFE3987BBCDF5458684C134520E0B
2FD3B7606368797241B5BA06E19BE70F4334B48EA578982D5FEB53407BC29192
867A19DBBEAB1696E0E2C1186D0798C1C3A319CBA04421D3BBFF8D46AC997C8E
D678DBBECEC95B1E3EB16DD6D24FD2977DAE76EFB3687808DA0E9B042362B27E
CF0A649BF5B205854F9BF1F07A7DB49C5C9C8318DF97F1C3266753287FAA1AE3
8EB626E9A41CDC6BE62BC7BD4BEE941EBE1E65D96A80F79FDE63FC7D2A4A9E53
638F6962857CE95295B3979711C27FEC43D0CFA62423E3A887063653C1293AAB
F2A0B73E2D277287B0DE8906A1834FDE86D04C3628DA1704EAC540D5161E29D8
F48248F12BC8F71E5D13743E21673B750631B0E76083832E083EF17DE3C42A87
CFE2764E7D35BD18745DE29942902818A35E1689C4D588868A4F4DBE2FBDBB4E
975D99697D88EC5151E72495313A6E550D7779D1096790EB7D8991E2D2BB4E21
A11351A743146106BA16C42008E18377AAB2DF1A89CFF0B8C260D0E3D67FBFF2
08B4187A30472FDA891AC27D8B5D72653D9A62EF76D4422E27F4227102CF7D56
8053D2FCED2628C2FABE2E9DC3B58CB03902239861CDF7B3A3F5A507E82C8FBD
F018B09AD469B396D9EC72DEE0851014EED2E225B5250B8DC675A965AB15DE22
BAF340B62D5A31A3C33EC92BC79127EB92A645A8BB4AC34F523ED82DD7C0F29D
355FF45DCF909037377E3C208071A2363B931547609285DAEB0115E4ADAEC5D0
A78F7357B9C86BB64C2AF0A7CD1F4C8AC461DE1112FB7F1CBCD9F5B8013486E6
3805C702A1CF8DE193CD5E42769D1F86F927B9752A982E8E4105559DC68B52DF
7F950CE1BDB15548CAD879752198F0164826B51CADA6D39CFFDBA38C11C7238C
738370C48FFECAD185DA8A80553F052F97988D4B276110BCA39FC4966C89AFBA
4F271732429D0E7D2F25A4CDA2190A7C4D93983B31DF2790637E4375815EA4AB
E99BE732D6518A5246875E3A7F03DC50F41C4657934151303A0733B90F17548F
0D577DF22473C89EDB9F444EA9DA277A0ABCDA203F740CA2B0C9E933F4163379
B73B74804696B14F0FF5D9D466D23AF71BAE6A930CD0DBB6AEB87F68E2134B52
6E051FA41DB96312F8B3A7B26FBBEFDFBF09F285EEFDA9A67F1485846B76AB69
AC3CF1E3F05F8C6E948A10A79CEB76E224D8040F0F0B9CAEA61576CC7CBCCB3A
A8FDCFFA53984F2C2E5939F7FB2565FCC3317F1081853264A08D943B35983EFE
C99A9E9E4A7793BF6A20B23B7CAD2C81845DE64C387FC99825237C083D5F1123
B34333EDB0DEE3A89E582539DC0F2DECF50026C2CEF2E2F9FD057F49EEFA89D0
33602D3A66EE38027BF500C5BD07AF6032D13BE99BE23D6C9495017704E9F90B
CD8E5E60BEC4D3AF553CE3874702EE51D1A7861FFD841C6AEC94CBD224C356D2
963C4131FCB36482DF85E9BBBB122BA238ADB15F6A75F8109E9C4CDAF00608ED
02B3E24B1C4F7EAFD43D3A111D7AC375945F753981CBADD8939BE7366D1E3226
749B9E23E4C2AE4B9E9BEBB50861CCA95504DD63423BF603B14459B7C691BF6D
FBA02243943EB3E77E6CC38DEDBB2DB8BE7778936B7307A9388D0521522008CC
7E3AB92D3244762ED374AA7B54F0EA9A1804A05B350671BA8D9838EC6FD9269F
C73243DD441D1DF4B16DC2295F06ABE7ACED96009E826E0F3DCF1A942C82E3E0
5B19390A1775D2A5F9EE021B222561C8B58374934CF2F01C5EEFBE63A5C3B6BB
37221F7161690C6FB6BD37D5F03F9314772ADACC6485F217715F3A38F4E2593B
B8E389E9FD4AE99F5A8595EA84A40177BE5E51E570BD135E3CD4C130FFD5EBA5
C7147680DF03796669FAFAE131D0C9EA578796B4888095E725A66DBB2F8DB823
4F076977B2016F185EAEB3B74487CFFDA64CEF6CAC90369FF71A3EB16EFAC41D
22D1BF4B1D5D3DAFE4F1EAFDBE9FA317C2D84655C143C4F74DA06BE8D01A7E78
33FED6D84E6F6554646BD59A3DF0153E0AF3F6EBF79F1EBBFD8FEEC4E60FCDC4
BA9A420DF894BB5C4E79B02B40BA7AD177E43BD16807DC6BD9C961FB6CCB5326
F6045E865EA52BF4398AC092F1A5864F9DD3E99FF86035AB920A75A2102905B8
CCB2F61255AF45BDE940DC77842ED5429450A21C9EA0419C3A9D9E4014CC17E1
7E0CA2B8822A925B3BA29EF6811BA54DBC158618BF04C375EE70D7C0C86D9C66
ED01B85534A1E39BD5C20DE216B3319D7DF35B1E29EA8262E689C525B0B94C21
5C4A9E2FE111CE34CCA25FB27B785ECF6A4514C85B1F12FF227948536FE0B4BF
BE38C79866BCD14C2C92449525BD879F6DB405A73E92348FE74AE5B8CED1F61D
E6B4F56754BB3AE5F194045B6F79C061DF17BFBDBE2FB8BF4BA63A3638F0ECF5
16B4E2977709EDBD3DB7AE516C55E742F598B2DABC3000C9F67679D26D080195
21E472CCDAE5AE3843BC316AEB0DCF37DFE3C79EDBE00878008538C79938E1D9
AD16F69FC8885EAD2CAB2644F1E25DF5F6EF5B5ED1EAEF90FB0BEF17F7C10D58
787200C749BA0DFA1F5945D7C6569E0B58AEEA746AA0E2543FF09378E5799447
F93E2B54E03280E403235E6835ED221EAF81EF6581C6A8567074C3779C8AE4A8
9B2B8ADCAAFC569580B22876B6BC6FFA1560B468313DDD88F2C455E920E05E6A
D03A0A3A08FBEDB4CA29BC51FB2BC0C62CE1B3FEE159A7BD1D4BB753DF3C8BD1
6760A91B02D5E8D679C227DA8E3207EC118150989F4B398FD87BC27EF47166DF
B2C258B6D592A29818EA9DF794371055BF064C172ADA0D306BB9EB42AB72B1BC
18DBE1A9FD79B7370825AC355CD86B964D203C3A3D0F6A0A2483964AA9CEFF0C
08B845AB92F0C60F4F1D5E6B9BC246FD9A961E9FD64DC2A3FAE09F250FC386DB
C76C547464EDFB81F79E5D7A9AF1DD9809395FAC890C4BAE632762C6E7846A02
E9EDBDFDFCAAAA054794FE3D0A62701D18826FEC47F867C4FC966D23A12CD3AC
D5856A628A9B0EA9AF81B6CF75F8109E9C4CDAF0060C2EA82A3B2D14EA94DA77
871E3E5DB662E87168ACEB217EF80902AAFD2B6018DD0680B43A5AE7900B4302
7AFFEA7297EE576202FD04008079F09BB2FB82B1D1E2E2E92497DD6FFE8D8B8E
C081349683FC5E1C323236F7177E24F4413C0DFAAD91E9C3A38989BCA560579F
6436CA69A9C0D4990CC5130EC9F6DE383C674C24816DAE80EE6BD2429450A21C
9EA0419C3A9D9E4014CC17E17E0CA2BB2AC4425B0A4947CE3C4A3EE986616449
FE094A5F949D59D7F8607219A13C7B03257D8CD384F37EF0877323A2277B95D6
93D287C2B543AF840091D69A3C1C428F1B9638653238844F5D1F36E250DCCF75
A58E95F774F78A0CE22E2C049A42A9F1E6A3512C0854EAB18A0ECB0B833BC32E
FAEE34959A0FD994D2DEDE8EBF3F64D09592826FC23D91A39EA1E3B673DC2BF7
9331E978B15B5319DC10A69081F7A1CB7B7BDAC189A0568797D0A56138DE4705
202740D8C45888D4A0CF8AE610E7017E11E78CF5E483E8D246FC0CAC7850013F
B3F1B075D4754A82A584DCCF056FF421E1D03B98C42383BFBB1B6F3A10C6B569
4E9795EDA70E84CD69619E0AF03FAC93C2E1D6548D31E726AB65654709589BAD
7ED0B102A25F54F490B24EB3B18C87BC21D801E702649FBBB3F049FE4E20CBA5
D8C08F62BA17383593E09E377C4C208CF264E9795059F7A9991F6EE897A83CC5
C62020B979EBD844943D7BFF7A328EF957C8FD24314D1A4239B2702AAA0A8F27
EC86192E30A5239A449B6DE94ECB76E959A74DACA2371F0ADDD8BC75281D78F9
DE05C1107C077ECD6D1576A4D235D1B0B89E512B2D3012F3866C79D6AE577A37
84FC94031C64514BE9CE802668954B4798671A94DBC963FB1BA1E642747F4713
19D7C93B4E1DF416055AA3CE8FF2CDEAA9239BADBC6A7C458C7EDA46DF04F130
23AEADC4339C9309BBA8B4A9E88F797B63F8B88D3993DF03455C8EC978A62A61
C1FDB4CEF84137FCC3D18137814A925F1BF8896C4BB18C575A2D7350231FD559
3F3197223C9BC7351798A1A62A0A6F8E820ECB5FE4ACA6A493180E0D38EA51FF
083F9F446B590A71E50901E483119FF0E94BAD11B85B1B6F95770B364CF19DEA
920A1DED65833D902A666BF5E7FD4AD8D5F07BD93BF7D3B878829E0C4DD9D47E
0E0DBF8060AEAD5106824D748D9C085BAC95E034A14524CF9F0BD77C9459D61F
C212A9A03F9BC4CEF9E489F9739A2B43BFA2363CA74FA72668FC761D1A17B9C0
B62AC806E16A8AB4FBBFDA427F0F1101517B2DA3626196B795B23A10008C3CC7
B00759A302D9BA29B36F82EC47D503FB08A630AC4A0EE561BB4F5B83C2E21CCD
543B7A05E8C79FE8C1E98BACC0F699453B9DB59F04031217266279F528320C83
15D01C4D94BB8BC0A27D0FD58B67B454B8D7EDBF8D085F08DCEF888D2AF7C317
4AEAA273A07D17F2B0E37DCD480B48A201BA66A58A84DA57AA4E2C40E3FB3EA3
20DD09E3D5256DE65A1E79784A80175E3EB7EA60A766D51B0A5412C2A277084A
A5BBEC4DF7F4D7DE91A73D608C3879CA50A4F2CE56AEBA0646F87A93C51054B1
7143538D29199F4F9E35E8B46907F061765E91235B0025F5169291029FE697BD
123AA4EF021B951B336B163F4D72FAF2D79EC8F4D4BF3D849D27EBDB2B26B19B
2515829D461CC7AC00155E932FA3F5B34063E50F0BCFB83FAEE7B897F107662E
8467FAC8D9E2AA0F906F3EEA3CB66AE4308FF3FD9BC08AD8AB6423F926F7D562
184EB2C4E569A1AF7B997F72685DAABFE2728E8C8589641519D950E9BACAEFEC
61BCFFCD4E2F3975C5EAFB95B457D0F676F11979C7744E54E5B0088835B64AB5
BD2DA32480DEDBE384E8DAAA2F2AFA130DD7C6471FAC0F1132CA4C9FDF536ABD
FFA429B820A82AEE9A73D7DCF77715F2321C6361D12879D78AC6396BC3936BD4
0FF1476BB55E449A46CC5716E1BDA9EE77AD3E44DB02447082F9821C4E0A769E
95F93F6629DAE30D14F1CB9EF10560995018CE4ABFBFA159B07ED5C93D976CCA
D20691B072DBEDCCA3AA5539707FA4F66CA2DCAD809025D9C1AA2A57A4B3B956
A1444DA414121E2B5DFC77321139C2D9E0760DBEFBF5A18E58BFAECAB83AD863
25CD929D4F12645109C1C632470F3174FF45E3ED18CD9C67F9133502A41B07CA
A621480C6060C5D9EFDB354F6605B75BA1A17BE4069C312C7983F0571972D8D3
EB6F94A50C01C37395CC8219445360C8081081030F8F05464D998B930B8270BF
BC04C0608395A9C2BA9A03945E029527E917F17E502BFA0D7797AF86374130E0
E7C7A57F1A67B6246167D49456820CB89134E4575747438DF6530A3C9B160D22
5C166B70710FA6EC22C046AC5CB2BCC5DC000765FEC64A092F84693C235F1B8C
2881C0B5DE6686F7BB6C0533E114567B0BBB71284EC3CE8741D3F72EE026A51E
6EF714874953C2AE7814156FF57915D38E8C60B6B670544FED596BC92BDCAA8E
A2E49BD9A8EE1FBD1281D25916102BE37BB3E62B8D6C48C87FC9DD73F18DDD36
12BFCA73A8E3CA36B57A2CE68B3C7B143C3488E373FF96A5AB0E8A2D38120B85
1108F27CD126916B983B8A83BF9E6D8822C4AE221AC180CB85FD2D1D509FAEAC
3A4BE570EE206034708F5537923555DA1A156E9D24622012D44A939FC0369445
6F44EDF54D76932130618A289B437E0F537197F419E6722D0CE6D6DF74F0B7E0
3292B4B54E43ABAEC2B7C0571AF6500A26ABC849FFF0E9969FC293CBDF7584CD
B5EE03C5E792589DC8B9172A0752D4E0EF8B8C63299CC1D75CA5AA9DBDFFC35B
8399330235BF13206A3DA1E39216BAC70A04CCB4C093854AC741B5D7BB35B6AE
08F49AD5DE3716C5B0A87BC7ED856A77E3AEEB9912B64A51EA5E777974A0D88A
7F5668837D1D8504766072E48BEFDA82E6DC09DFE6D18BF866903D3C694EB91A
AA50A2EB286F093C2A4F6B9F0BE52D4F1F2758EC48370EAB4E1BD2922F11B702
0A2D36E903F851A54EFE91D6C9987BD2CC61D2DA2A30960687F2DCF03E8EC3B3
355440F8790AA001ADC928DA5182335875E90BB3CA6110F6D46D625F56D0F9BD
7278685C4CC54FE1C1C4332F05F5AF14E70EE5BBF89FEDCA6F80E6E4D69A0DFF
99D86DC88F11FD5FA519EF93D1CBBF29B5725D3B98A08FB30B03D9DF04996903
F66A73B1D3587E029313665143C842566C031A2C608685CA35DA36AB230E3D91
EDC1384F92AEFFB951427ED3847F7B5095BACD95228E1F6EDD85621B96436244
0AFE48BEF99438A2EF8990A519D704A287889135BA6A1B20E5C4F45C6B35F7A2
56EF60CD7D35794F55D34C01A60C89A60B75E13BE96A55B5C8FC60EC19DC0D17
E297BE26924FA11DF82786E17CB220621E0E9C2118A055DB5D7329686A3D22F1
2830D995534A8D82E4B822F07B115F3FEA604CC50026FD0FA59A0D93F91021E7
A2A4339CE68092A01E67F2ADB1429C4D93EEB6C7C34769FC0C6B43C82B0FA5E1
0F441BADC966829374E4CA55CC716EECC58C02FE11A57B1DC67A714A1622BE0B
0386C2CF0929FF099556BA5DB7FCB6081B9F3129D1B5EB155884C30E653DB529
1F6F4BD470436D8B76E381F808EA32F31C59472D6F58C85D379F973BD6FDB5D9
614FFE4770E2D1412FE0B65AACEF937632E8E38364F3FCC08853CDCB028B1A0D
B9031CBD6D78E210D305677B9A4739C67ACF82AAC21A11C97DACB95E7BE0F455
DE58F95069B5B66DF4C58205AC95BDCCEE38F5EC170D3BFB792D2DDA7E57BD2F
B7624C1D59B05C81BE2AD99D3ED86668487ED31BD3A28227912E826C1BB1FB0A
FB847E1B1AD35A5A69F32289DF6887007FF162F64ED65962C52C7A22BF7AF3BC
490D23D45CF0F7878D974AD04A7709855C5CD59F6C2938DEAF61D75DDCE7FDAC
F0F353A56FE4CD66605034790036208E546F0B7A2BCFE2729390C6BB9610D94D
5C27DFBB1F3D0BE971812A7A83450DC0675C45C27A1E5919616751A5A80154B1
8B9919E7E1A053EAF0914A14E4ED9ECEFADAE921575CF4A518C1E51B921FB8BF
6618175BA6AF0587D4E1F7AB4D2E45A95067DCE9D17E2A3A9C58FDBF06F3F324
8B5454ED6DC729CC5070524D1BD06625989E751E23C654F39EB341E94846AC98
A5D88B2692CB93D7D9640B9469F723C84543BEE989037E08EA781E9E66AB7D86
07B409619E79F242CF52E618AC0DAD9B5508C91751C2033CEC54ABEEC9D0227F
23904838D4AC2BE5ABC80AC9D793153E99C4B4F9467A98BB2A1B03BB3EA5E7FD
B9D0A5B7C5A4AAF583DF1E93211411DC75E1878C9B2131051DBED189118B9279
A11243BF04609E8EE4BEA1A77EEF42F50F46D67A4DD781A368E75CCC7B029A49
C73A5021D490B3C706DC93C67FA75D32FE86387FCD86EC72A3F81C7EF1397455
4B395E50287798567E2A1040ED4AEF84057FAC50C227D23DCA95729794727D2D
B89FBA27E2CECCDCBBDDD0281A07C0E8822C8EA86678579818D3B7D3B7A58577
F7D6244DF68CE4F1453DC12F039BD581D96BB1982B3FA546C81C680DDA1973B1
15AA85779C962E6F1494ABDE09A8D7DF149E8E3ECE04FAE2EAE4A5183AD80687
88671631D20EF5FC381131B7C4C90E04DB61386B526B401B0FA00E3C4B798386
E997BB6A8F931D012BC2C902A7B08ABBB932D5E6A03F957B7C64E89BB59C4ADF
0682D55501AA0E604200A17BE95970E062EFACBBE95762AC660329667BDB2B79
A6C97B54B8BFE82A1E6D7F3FECD774C2C7B2486D61BED35C2AE04107B03CE274
EFE7CA50699D7697AEE2265047DBC98A857B183E3D2AACF07BAA48A1B3C5FD57
63CC275434AED1CD23DDF4C43045846F9DC91700EBAF3DE4F3A232CBE21ADC41
89E1493FC65996AC25763FAA13FC126ACC69C399695D26BD337C5CD6C42B18B0
F3594FA089BAFFD2E73396ACDEE7682FAE11780C6574F0D402ACED2B7D635237
57F6AE29273EED5828661F9D677552B91A9CF74F2A195EAEEEDA16C987887C8D
C92C1620641CC75AF1F20897BD0FAB1B2FD026256BB08484D515C0D9BC826EFC
DB25CC23092555066E8A3CF7821E163013D1EEA9166A03C74773CC7E21368BB8
D57FD873378141C0D5E654274F0A884B4E81A586411355CA4B0231B33AA21715
C2DB4C43CBE3080F67CB10F6D1DDDF82939669A03C2A9AFA9544CC0C8E8B145B
CC7D7D5BC024835129BC973464E42088642FACFD91D0DE99ADB65565788B7370
527464C55762EC46306800B7541EBE49BF2C28599EB66F071FFCE3410C547A9B
74D2160146C3E5389AECCEE733A2DFE5343CB6D3F245E3863597DF59A9B9AD10
18F245F33A42CF224F327CCEB361EE63096E62753E97CE1C0B152D66E148E1C5
883A9EA153AF8395771DFFCF89E918F1702F5867DF3636C4F5C223028045D6E7
31C73A266B3165C55791AC67DF9ADFAE72B1CC31156E0315F306643F0BFF06EB
0DA016066AFD3755F1B7E99FF0558F644F2A1A8DB5AEFF0A584F6BCC0F62EE66
8F9B6380CAE5E75DF3B8B749E7052BFF9D02D134D0C432D525376DEB06EC5DD9
32D3A480A00C51EDF738A5E49E61D575195A086DA3B9B30368BC424AFAAAE130
F9A55D4228A5949744FF40B3ED3BB458C2DA5051075064B39D0DC2611FCF8483
2EC7E798349DA14A17A7F814F900C1313C220BFDD7A30DEDE201C51E84D9573C
7B815AF93A2E8625B83749A64A7FFCF96007AFA65AF4FE9CE5D0A573A1FD2E01
CB1197990EDF8444CC83F1AF794A908AF85616C4309919470B2E01F294D6E5AE
F8C5538D62755FA79860C1C2C5C6B21B02CD8195B2DFC7EE6E703BFCBBF060F4
16C0B747EC5BA54AA743154084CCB96E9465A6EEF8A12E6263CE2C7A75806C41
BD8CCC4FBDD9B3C4A28780968331DEEC1A418382059D0ED70285DB6CD3E9DC07
5A7895069C3CACF33CC1FEDA4E030C606A3217535CA6FDE68672554A6F9B04AF
1E6B513BF95DDA47C8ED684F4F0B391CA938B48D2AA2E7021E29FF39F69569E3
E5417D1B42DD280C1FF9A88656A37EC8F5AC94DBF71E96D469B396D9EC72DE12
F979F22DF68BD1A01ED5A722E36F01DF05AB58428703B5F8FCF7156859F1484E
79A39EF4A1D52625DF58319E34C4CC2669A6E598181AFBF0D83E93BF9A910859
4816480C7CF84A535127E09EADC3B473C5EF5EA99AA922FAA53D9D03C54706B5
EC54EFF60F40B1065F435BE8A39EB454D88F5BC45BA819AAB426BC139E5A805C
B3D9FCB29E4B4EF4B4EE155538FA29ED212A9B5E86CB221DBB7DF956A4BE1571
615EEA646F96DFA7F12A43828E3C49616FABA8A748F021AEE38324A481E31A42
902243B83DA90CB0F503589D4D806306A579D00D1ED5E8A86BE9DC1CEE3FCB03
B9A0E4BBBAF2B81A4FCF52F32E017E9EB5E294B9559556A974B88616E7628767
2778A3BE351E58E961E816262EABE2E3D3AEC128E89C5355F29E7EE697BFFECC
AE75C27AEA6C705582AF3851887FDA4D03F83EDC6F2618FCC7298239D4A28F99
9EB5F2F53D263ADE076A5DDB61CB18C2C4F91AD1E2D6E4CF241F15E10AD8E5F6
1C7A0D270B420A6EF655B873C378B8E75F654646CFCE05D5E5B6F035C55B201E
706A7D8FD300019AA3460355CAA25060BA156183BC1882EE552380B3C6580696
9DDE440BC68EE43F280DFBDC42AFAA87D26A57933BB6EC058698FE32291CF611
A5EAB7C4C63057D7B7DE7FF432BBC34345C13693EC4D938551356DE38720E5A7
B75CF7056EA47396E7867482FB5288131E105AD89529EBBCBA731385F8462D0C
DA1D4E3139CA6B0D2576675EA38B6F363DA00B35CEA785C6A475DBA46536EA67
FFF92B4BAD5F8D20AF9AE73DA2EBF73B6321C76934BF679E354989D7F43374E1
5A1242DD639349EF89252E9B298E4FFB6582891F0804758861A2037863F57F4B
04B03D4460F5B8EAF3E626D7B094035B9BB04F4CB67F2E1799CC7AD881CD1277
452731409EE7F2280B08DF7162CFEF07F93366AF7F26F35ECF8D5AA73CD28904
9FC5317E4517E94A9D3E5CC7DBFA30295A87611BF079C79EC2E13B44602369AB
74EF77341BF520553235B3A3FD6B68DB45CA7603221DFC92E5223EA5D9B716F8
FC9A147695843FD9CF8D6BEB3B9A8FDB3333B694B3E0C060E6609DA559E0BC54
632E70F5A484A9C99F97052F6A839C2708CB5A55F4ED91FBA9AC00C0C25D34BB
F104249F8496FFF2FE5D5DD1C32DFC80408D750304E9FDE81FB0969A5E6E9328
85990E7EE6C9F7CCF0EA814873986C40D3C144723F5403453E9B176D8D68FD62
E9FE746ACA9569BAFDBE642C963411707E41DA572B2601547D16C001470254C5
502AB9797B8CD0224FE1EA2AED942EF786EF12C035039A8AA12C719C0339F766
BE6275511F3E8DB980B95A2F77EC3E049D527B3C51560442A175D7BEB1FBAA9E
9875835511AC631D01545CBA6F90B8E9A0F7D9735387938B15A9B4D9AB149FE1
4A7427E3446601A9CA80D0B50FA873765FAC542ACF3BC988693C547BAED3E60E
6EED9D20E96364B1D0C5DB3674314AF80AE4C0BB94F92B4398FA2E1D6CE1F398
ACBABDB5DEEFFFF4DF1FF0E394B2F244857BC11010DF42404EA144611BC1DFE9
C92D6A3326564A6B5DC3297FB49F7AFA80FB695BD5BCC120277639390ACBCB6F
9C5C70E555DFA1D8EF22E5D2654E3722A5EAA0C8F43F36E1A974EA7B96311F8E
FE25D0D49C3B5691C1AC279E11EBA4285BA60DAB3979F825A39727CFB0ECD631
970284C29B441B2ED2FE4D0EE90D94AC6822EA8E529B40F6458AEF4157279C6E
9CA88908F87FD63870B38E4100D67ACF9EB4C072D3196F99F991B23B65DA3AE0
6F801E6C37B04B18441D4497E178FE61A60B7B58072B9652D8E95CFEFCC11141
B290CA0CFA097735C60127CEF02489815A9437C2C93498CB49A2A031C2569D54
081804F5FD98DAB720996E76C827664C56A8784CF0B1B98E14B1CCE43D91B137
EE909680E472B35E724C44A2F33077E631A05A907B488FEB22E3422EBD9FB7ED
D6C586F5C0FC8BCC3D355A4F3C7BB8FF0113F009A44E3B547EDB2806235D9D92
033D0EBCE8B8A67D3F2F9C6D8DC5ED70049138602AEBF6B5E5D5E8459680B83F
818E00E778E246B3B724F0D24BD01A301C9D89D9E2E38CCC2ED3193AB0786C75
301F9941E06B32D9D19990D349D02E83697425E75CD6015C07D1AC0A3728D93B
30003F50F4D99B48E8F29169E04E1631C16076ACF4577278733D5C30D20FD135
8CBB61AA05EF45403C3B8019E9D8C1F3954FDAA2E22CEEF3B0647E26F47A1BE4
D3CA0B3089FD000657D8244CF19E38D28C66D2E466B4E1835C7952897D004C5F
A7A412AD924829C2BF2C24F464D9A4D6F29F79532CB300479063EDF342183754
AE0BA15036D673E8C4A4ACA5ABA29958F36904BA4D3157ADCC99983E800F466B
96EA9E36FFFA2C3875C789CFA650EA7674F5E6E73D4934F65C216EB6C3A6207C
F39EA825E6DD17F4CB6B7D8E377DDB6A4594A569CB008CA30E8977819F6997C0
EAAF3DEE91374116092E029686E4AC0E2699EEA75F7AAB3A6F5F1E07791446F9
E9D18741DD7643D81F7309271BB84AC9AAC072FF6D5AFDC5A833E61CE4EDB9B8
2386BB3061C215420F75A9D089C7BCDEC50559B82FCED174E3357797A5728B46
BACA35D941E9307561A0CD8368C7E6EB24B1CE1E87CAB6B6187D2ED0CC5BB2D0
017DF3554B874AAD2B92245CCA4AFDA80D1C7AA1442233FA303D857D0B604485
3C5346456FD749529EC1FB00BCDEB961FAFE5A91B1576793192678DDD1AAF3AF
63729BE86A70774BFA82C7B080BC0263B2EB7BA006F1E34B5B47161D9E4CB3E6
9641D3795AB67934B16BD1AB63701F84952308234FC559DD1F7D85A7CD3BB804
21FA781D969BD4C6DFB8FFBAAE1AB34DAAFD32AA716301301AF68A5A76586194
56F282EF53958976A09D4D8F15D1416F202067BFE28B1AB973D053D8D3A68592
A56AC054E9AA4F3065526B94316E56A74DE14A0E8AAD7163D6D9B7823849DFDD
D3E0EA1BC88E523099196F039EB567BFB06BB9879F22B5ACF8839490203560EC
53F1F43913282D7DD473B67E5424BFF39434E3F7580B36099A5F4F1D22D2DBED
0F31BFB773789D9E08F493C93A3EC860A40E2BB129267667CD85EF39D00AF0F3
7FA2971CB3884245656DE387258210680952D8626EC38ED66F5BA40968213B2B
C53FA5C0D0B70682EB172AF78530694E35AD2C3F71D52CFAF6B157BEFA0C973A
E6010DE45681B01387078AB900626C7488A61231C7BE4C83A075A76282EA013B
359983AEF8630E66386F7FE09C53EF7312684136F6F25950DC671AF32CB77447
69A4B91682DE98856747F55153715473FA5E181828A4C12A71DAE2B436E98614
DDA4D011E383B876F0E78623F9D64467F115D593C6B5A5CE885D44BEB9BA7782
0093FEAB6790870D2368A8BDAB6FDC5B1D1F36B5276BDCEA39AA118EDA951436
A2E09C012CEF743BE11D57529C07C114D1424B79CFEF152D77D1880741555F4B
089778D5E104CC29E7EA0C6D61251DCF8A9302D6F53ED0F720442A89467CA608
B8B1FB788A08592733067371EEBB2E9F3E4AAA7AA9E9868D03D939B91520C652
F1196EAF1BC975E26F8057F375762F9A8251112452C18F8DFC654DF8532E4A4E
5F61CB0131EE855732DD7DC86ADD2122AC2B78035C26D33CCA32C20C25F67D48
4BEC47720C4798A49CBA00DCE437F3EB84AC125945B02F5E350BA327DF3F4F72
1BB714967EC6C3CDA4FECEAFBAC6248D305562EDBFA9548D54E5D0C5D2FEEC63
5A9F1E67D57FE919DA0F8D433CAEDE92B4D20D79D212AAF2C9C5948B3F7A5E6C
BCB27417EC256A11103C2633B700490B0A80D4017D254DA63E3238A70AB1E7C5
26F472736F2B9B07D0A865656B49A2E46D84DA87BEEB85E4A31E174DA9330491
EE2EAD0AE6BC9EEABA82D1C4809E34A543243B3FF8E215AA7B88AE8FCC4F613D
88A5B43A96A188A32A8DE8478AC3164327BD3CA26A8609BDC71EDF0319985465
CF0EFD71162E83B2074BF3F6FE07FCC8B6307998CC113C1133165FD7105A7A2B
487EED1153E27258D4DD6CE72F4F7A559AB70C07636DF7C31E3B6ADC3289C9EA
EC8444D61025E769799093228AE78BD5EB1B5C29A027399C5B52E2C6B230BD4A
B734E33224782305A91D465116CB20539FB351E2F1AFF697E9F99A065384EA8E
505BD812C41FF4612252D9EEC7DB1A46B9A96FB08FD0F3114A13C2A8CBBE519A
8F57C66E2EEA124D9E4B184A84DBE481D044DFB16043E5DE2157D2420DB58184
D56DEFCA7213829FCEAC430A54AAB1C272E399861F30D092FC6BA87AD98A0BAE
C9D3F17AE9CBA026F03B2A8D7CBAE692581563B7544CA1D9A6C34908F0B47BE3
B6CC37E47155B021056BA8439B496D90431AB7130D8C89B5B0C6A6CD657A082C
1AC7EB70E3AF822380DF98DE63D25BA2C1787867546E485E294A6C6519E56746
C65286FB7DAD0D3DC509F7EA751E49389A7242B5B840D8DF35CE926AC511F4CE
BDDE2344E611E47D44584BD5FFE08D147D7806FD583710AEC22C8235C8B34E09
D169C516677ABDF95A42953B18664D5D18EC948B751EFF3C720112BE6301B162
A2E2B82D04F91647A18B8AE6B043CD95E607891DFE17A7CAC73B25AA25C6BF65
E96F3F3DF9529F70D2124C3BF79C9F720DD748568ADE1B9DCE3F047C0947B949
6EE180254E4C1B76F75DCD86EC05EF712A10633B8135B06296401F69F082B846
72A90AEA006D1A85DD51796BB45B56D86F0016C43182BE945D7677FE74BF0630
847A933223FB89EB5D61B87957CCF2AB643B0362501103DA3567ABFFB1E28CA9
2EC62DC3D4DE085806995968FD8F8E361C617527658DAB5609564062DF1D5EC7
C2F0921BAA40147F7804F42F1EA87C8FB979B037BF652F6A0D85DA791A01B3A5
D6FD68A22E34643461A655DD311E6ABF0AC958EC6A0D4AA5DF3766D304D69173
FAE067B8FC16C3958AFB957EBF7F59869CC9A2D57B4645D42896982FDE90FFEC
E73F11B2FFDA4CDB916E30CBDA23CF017F37AC61B7A2E656C75BCDB01BA1A7FF
0001197F43B19CB906CFFAD0EC914D5C5D299AD7F6164C6988EE8065E600DEAC
B4CD80EDEE08CD40EAD967660DDFFB7C0B932E624CA940459F5A8B254C4D7824
9E3A8908AB486581B9B9FE73B65310B3AC481F00470C8B054865FCFC868428FD
133174758E25392C5AF209B2D926A32D1C65E1D3DEDDFFD807EBB131249C06B7
E91DDC2C741E4988B2C3C23022AD6931811E62EAF7382327A2F9AD203989652E
AAA1C54F2F501AA172055892C47614A9035E7CD753716EA21BF29FE0A023A3DF
FDE181B90C51D7055240609157365E06960DF734AFFD73ADB063855FA80CAEA1
E12A8C3C6E650D2B838597A412DE94C5AE605B7A34B20FD483C508DDCF8787C5
1624390654882466E0469F8E184B33D896CC4A1FBAD1030ABB5FF8D393E73E63
3122D43861DB4EA970211AA785F71FB24E976B2D0B9C2A1C2F1A27D96D839388
CC2BFB24AD4E201FB258A0E01A7A4B4B6DD42402F9B256A6BE8B6060942ACF0E
36417E32CD7EB374E1C4AE3F7E57DD070938618C2EB27C1EA5EE1D7D1E3449EC
AFDE8FFE8553BAB788DC476DAF086435D50DCB5F64A8102C4650CAD6553F300C
633E52389B85761E48DDFE9138040581924BDAD5D873A199E90F8A46E25E8183
9B4EBFFEA4A5D359415DE7D68BB5CB2C89E3F0F60CF954587625F607CED59841
B2953D3A8ADD0BCD2BC7C4A9D054866CD7B632D1E666BD7811E3BAD843C120CC
101A6DB373C699DE69D0D1B2FB15FD7CB366F7F547E15E8A4FF6E0D87FD32B28
83DE186DD9024C72FD3196D5DA6F0710CF82E0ED6FB2C090CBD57372571582BE
1AED26025FB7B374414B09CB3CD37AADC801637A8A6916690772F8DCF83A5238
D538884CAB351579C18EADF1927949D38A3B04F54872DF3C156DB0DB7940205B
9EDA28C9E54BAE4AE0591D9146DD9E343994B8C7273626FBB22E6E73FB0B5AC0
2AB86C9FF298D95996C3205EE539DA286119996B69A06B5FBB89985966656853
FDE85AF4CF53A5E9704E525D9CB036F2EB2E8D51BD7A269FBB930FE055D1399D
22CE5C0DB9502890DCD903A52B4CE3B51664E38FFDB61D7E20933A54F38FA199
4E0926D0DEADEB98C432B9E15AC3DCFEE5B9B1275732AFE9AF1CFC7D80FEF8A1
58434283570DBC57F42859945139CDAEF7E7417850981E2FC2BB60E3AB70FBF2
C15AD41F4A9ABED4C33668C231EFB1233944264B9B1D7B26600F1F90769E984F
EFEAD035FC4689FC9C7562579792F6E0BA23EAEAC9004CD86897735C928E7DB4
AC4D3C4CC9E902511AA3FE0B035049FB886BAE8FF016E6A48BB285FD5C730556
90F484BFFEECF4E3C0D175E5EF37E1131A175EB7130A3ADE390DC599A959C676
9F51E40F08386A72D350DCAE9E346E7588B947D05D3DFE522D24D7331FB56520
C129D094C92E36A4B7A83FCACEF7BB88C2E3C259A890CA5DF9C8E9A039DD940A
DBED627C4E044DD281CAE356499B62DDE916C5C02EC9C205F8A313DB98E02C4B
FE91DA2C06097C249225F8FF8CD6E0C28F93DC8BAAD419B3610A886E8E43E165
403D6964D1DA8BDC2826DE063FD5FD07AE177C885AAF40D6DEB2914D78D4A630
B1DF35759530EC0887E18F705984887B24A22789BB27247BC506A356CE8A2183
1104F1C98CFC3ED5156D12DE4A674B449EF06590F446448C1DADBEF2BCEE271D
2BA5DDB4D713D95425DE9DA289BB60135C7008BFCA32780330E63A8169AFC52C
182BDCD360996564FFC6E3383906248F1DA6C6BE1F33A0DB7564F01C4CD135F9
6CC59DA7959D663DF1DC35098DEA7E69B397DE95D81DF8AB287F2E1AD95E45ED
4E7F4FE29CE4952D5ED05F090A2004719BDA3E15DFE3FDF853E94A32BDD00DF0
958465EFC23DFD726E9C7B270641D5124DA447E4B333CE16A29ED5808A8CA94E
7C6C83625BC66B4C3415CCB58DB1BE15B3272182B3FD1DA67F15B07EFBE20831
554DE8003AEAFD92D677B472E9B4F339D8BCC6750E2EECEC064F4C4BF56B799D
6D4C409BBBDF2C41181AE2851E7D24B704DA1DC584BF3F662B3E1C1D25A06261
78A9ADF851722AAC41B5ABF27FD6F447801DBE77B00FA8121D9D9652BDD053FF
E120C493DFF9FD4972DAE07C62ED83B4BA47A8193D791E95C17C5F0616674950
D54B224174371DBAFD875ABAE3E6DAD71043651A6DDCAD9EFD457D27D7361517
2DCA61FF8B17F2723D87D1276D7E8B1A4B3939E0979AF1CBB49C0AFCA9E3DF51
9BBC6F3D7D66291FA2FFB751F692ABAF8E6EFDFB6E1EC354B83942355BA8EF2C
D91BB37F19F7AC6253FE88C48F8567A7894FC0BF134BF0B2AB08CD29FD28CBC8
16A9AECA52D4FAD36290333E9D198AA55DBC4F8AFB2301A2CEAF23100219B1CF
3A1F09D967E429545A65BB9A15CA4C983C8B9F6DB6228C0105AEDF7B20742450
1BF5C0BFF095CA96AB0145B84A8EBB4120D91DA76FB25C0F698DD6C1B4702E6B
EB7018FD9C54BA2602CBC3B561A8E574A0BE549456D91A663CC9192D06CB71C5
708E4D0A5E2F8F9ADFF36022DE6C38A40D6DA8BC43813202E73E6E530AB33A07
7E2FED694472A60E1C852BE24427DD3DCAB49534A03D7E1F1A85D61EED2312CD
D8FBDFFB5AC7E3749ACEE6C7ACD5B62E97FA9E5079CBF44884A7B111A756D720
A3DE59D0BDD8078FA6E18A3BA0D28057F7072C352D7A6FF8A942FE27F5397D57
882389E244F523B4F0C5009FF4A2D920A37FDFF9B84AC9D32526E12151F286B7
7BAB22AB2E48339DE0F4E9E488ED281983FC6BD72DA1D27C6BA97571C0681659
8772E12C1DF8FD3DDC5FB6D787379E79F168B5DC4D6975B9E3F034471FBFF877
D5C96412A14661F96C3A5912F8A1519A0B50A4B76665C84997D7FF3FB38A623A
C48338C689C92BACE8672500CD9F4094E8FAE723D8CC466B874C27EF9C5CD169
9ED9635CFF107E9137183D4975FD823A4010A5F492C21ADB97C07BA2477256EE
6097919179FCDE51DAEA400AAF8982DD653B0A77903DB79CB84143FBB248AA64
3CDF294849D3C2F1DFE0CDE02F4ED126A95DBB4FA2D09EF80D1F2C507DF980D3
DC0D32A3DA1E51A3282038BBA7F7FC70987A57EC73E5A08873C9CA5E9E71CAAF
5A17D5598D8E8BB772EF73E44C8CC2FB22495D38BC8D05DABA5643B0356EBBF5
032B60838AEA95751442EF56F134AB25DC2D4D2641B4756C59FE6526DE07B851
B2F5FCD60EA433ABFB9E46C99581EF217DCE9ECBDA920D436CF93B340440A410
077C4D98DEF2F10109C755FF614A199F0A559188B5E97A0CF658F0AED4354AAF
1217EE6C6F8A5AFA88CE52756AF45FEF1A0686592ED85B9ABCF8841B691B8DB5
D1E5C9B559B67933F7016598306C58D684C85E661222EBE767BCD2A39806BFAE
FCCDC9DC690F8ECF06FD16B4DC1024540689A1CA5F9CC1FE438DDF900E88F31E
8E3F738FE7DF53C75EF472587A467536AEBC98D7194AB4CBF2CF78CA3F127D65
1FF8902DF08BC3C899F922091C3E8E9A2A724ED854F3DB3B015C6598413487DB
E3DC78A53161CB12D76D11B43D85601ED4EFFB48E83B9BABAFFDF4A50900C054
73A554034710B4A9DA4C7B3F15FECBC036634F64BA7B5ED7E27202F7491040C3
2C039E808AA4C39C704B4667C600F1CBA05E39CB96904A3739345E9E25F8B84D
D6B74AF22290E10C85F79687DC838990F56767D7D5257A177C1AD27A8BADDCDC
87F0B85C14E5DF7CCD9A3205C4888E583E2A52C8D1E757552E8D8C80D44F594F
D5628C4EEA01430BF8AA33D2C7D00283848196030A52D2A5165A9A2EBC4AF5F5
9D073D0ACA1929FC847D82715C3B0FDB1E685F4ECDE4BB0A63FA6BF1269A0059
12B8C3153344CE9A16C6C0B2C487E1392034967A10BF7EFD9830612B1F9D49F9
0FADEFE99BF112A876343207B26BE01674FB504866487822BF0869DAB04DA5DA
1DC8B1827C5718D640FDAC4491E1CD4F33880D630F7B5550CF4F6DA9B7EECD4C
294E2AFDD9CFD89AA9E08EAFB72E249AB2DC31E7A965807EA75DE120EE0A4895
A1C55DC980C41EEF179A9E9527C39B35B0A4D64583CF1A2AF6C5D5BD57DC9D27
8FD686FC696F111C1B81BFB7B34591A066A28A3580AFFE67E69A7CB50C5AA14B
F8A4D8765C263116119D1851FDE8F2B180062D244F12FC9B4FD806FE6FD0C2CF
3076B889223D6230C2430321DD67B6EEB093560B7FE9B3AAEBA88C6662873464
594EBF58A0B38A156331EEAA0D0BC241B381E187DCEFF026052802E70BCB2C63
BC975934FAF8C5A606BF71A39EF59C9E976C5F562F31C628021C634EF3F52DC6
19649FAF3BC7D3F0867D1B8D78B9A9DE9CF5DC65998C53F28426E5E4E2EF7066
5FA751137683D731C7B58FA4A388D48E279B57E7E5D223D544568AF2B1474D08
9212E7CD009AA2C7F4C9897623B52692B023C0B80EFF74C798D0EFD52011E7FE
7D52963D8CADD372D68926A3AC5C7AD5348F07AFB5F7A27C2B8D494E4EA14010
38F1FFB8A486483FB09DA826F677BF6ACC2410A681F04FD4EF013FA41C3213DB
9E576B7AE9AD4F5B979C9B3C7A01080966CD91A3BB5F43BFB1D971F980FF6ACB
75C31AB571397C2AB49C928A7BDEA148B01C8C21A5D261F9F91D971692DFC6D0
B4A6D4F1C83084A8F26CEFCDD79FDF29BF01C31C247BC41629CDE85C3265269E
3E4D1D801353C1B7F611396FFA00D95434FFD2D562FFAB244CD67FF2589B531A
BA40F8CECF61496F87923FE358414D0670E527BC95332D9352219BED660612E7
07E6D5EA1FB9B932CD5805A83C04B158B168C41E740DB348B8A0A1B7D2099DD1
AC1BCD949DA5AA372E76CD341B8CEFAEFC4E1C45C899C210BEF8F9AEED8F91E5
F8A3293A5ED59B29C4B743F4E35DB266692A64E942530CC560BDDF4C0C949CD2
C68AB6F43F7EF7F2E2CE7FF262726BF4A6245426E7E69B01DE5007138D5ED733
211CF0D9C8B7A81833A693AD0B7F915D70E803030267A43B140CC7F60E19B3E8
0A67AD615802063D2E408530C9019EB2D743478455B6AEA59C9644104E93A1DC
A9D9240E9E80153BB36F887799FDD3AA1D8A86D799B8E88C7CC13EDFFEE6B6B6
3114550395F5A21DBE11C89C293AD6CB2415433D3A18C7D9E2660BC1C8B82B6C
0109FDD1870EF50667B44909A0AE9F2ED162199F8317FBC3551CC27F3ADA3B85
429FF528E7B249C8293BBC753C503B784A3EA414A032B2EF40A4204FCAFF0A02
03CDBD84685F915FB9D1E0A3AA3695BE0317AF0ACDFD9C0B72F832B7E494649A
F8F9C74E36A9420418AA68FBE3D774536A5A37EFF572CA73E4E558E2B016B13D
D10CA06A9193091C62F14ACBA679E67E6C71F440755922433351FDDCD7DB668E
2FD3E0CE1CD0054EAFC1AEB24C7276D97C9882CFA93CF69874D4D7057D8ED693
6E0CBD6DC39E5B231E8D563B4168D37271258DACE146C482729F54558DC4351E
EA28765073E1AEEA857364EFD961AD98EB8D7F3D54EBA10E0BEEE647974DED57
3B688AB23AE5DA16D0F49A22811915C453BCFB76D9F06EB28C33C817CB752E4F
34D02E556C8C3E1305B5E7A3E2CD41D513829EF6803A36970D2CDFC0DFD8392F
E6B81060621DB86DFA6855DB157A6154FB8F1731304CD39F9FD2B98B1ED7B781
D2D16E5DC259E3F5083169CEBA08135064785DB25707F42025C8B07931A1929D
D099279FCDE8DB8724D14D4DA2D32BA14558A743800029E80DDA1815E5DD7749
B7585DD908F05303C7D0F5CF01904D1A2DACB4C8516C5BFF3CE587FCAA75F9B1
011C6B15172D6B8965274839A33EDC8FF77B577DBEB319D74B7466D3E04C723A
CF7CED4649DCD6C2395686F4F22FA5546410F5575B56D3A484AF5D02A9E29D93
69C8BEA6BA277694B4AA7C84BFEBC5B85EC104BBD7D8564975D17D8E0A122799
8D4B94FCA8042756FF114FB8DAF50B0D5EF70270B40DCE82A5606AA48E9CB35E
BA19EDB20545D3B333DDDE2446DB016A7EF8C29B1B3D4181B5C2E6193ED8CF55
1A7346A1F233C21AF976B553800E930856EEC3918199BBD9C7C3CC240C4FBCEB
759DD89807873B398D09AA0C3FF6EFBEE0415FD1E89200E4DDC04356ECBF3325
A2494B23F4737D687C4F25BD6581217D977B3592C79197E9EC90D4EB51AFF30B
F5310D575C438B2DFDD132D6121E7EF9808619C5F878EEE00BD6616EA0A4161B
9030CF28D8B9C63B54D26F95FE31EF0F8DEB63E295E8826BF920C8FEAE3B26BB
EFA3BC7AF35466DBE6B6F7FAB390C83DE369C48C9AB5F403AE9BF99917A1902F
53E4D72D5119D76C8F3446DF4B60867A8B6F044723CDD027BC9C6CA18F1D87E3
B551162514996258C014882B4B12D7C3F7CDCB4DD27E28C444D15726CCB874FB
5921E4EA792B1533C4014966F4C86502E995C3ED73EE0AAD14A6148BF1CBE0D1
2EFFB35D69B21794E7D44E60A8EECD93B2AC13543C1AE7364695418B55EB5213
E57EFA0529D0C0D89B4BC03B74C8E80482649276A38AB9928BE2560EC6A550EB
87F0C71D93F7C2B323E5138DA111A14094FF9A979F99AE37EF099A4DAB23CE0B
3B43176BAFB7DF0A157151F7625E63296E325E2C32924A6FE7C3E0366E567ABC
A1560162164DCFBB49873BE115F25CE151BE20B9B4B010B5BFE1F27070C26789
3E0A93A56E7E1C493563016A997C08A332AEA74BC6666604F172B07730C33A6B
CBC0C5A7CE7BA1864A837D8DED0981B72ECBA34B5F5BEA5D4568AB2F5668D9FB
215FAAFFCD09DEC9B740E2A860554865242008B1190E191E921521A4BD6E4A67
8BD8857D176B71E1242C58C6BC26430662D2EA4F4ABD625E32FDAAE595681D82
6635AB339ABB48DD4ECAFF5D944101BC2F3FDFEB5620EC9C3F60ABC2F8FF8B56
4E131DF5AC6EF7F27734F341BECDDD4DDE919B90CD1E89D8465D4D26D61B4C3D
7E0E41EAF61191F453E88C57F322ADA05825004A9E46785B47E27FBFAB622651
4A7752560FE97B8E99A12AFCCC5044D989BCAECCBA2C9619BA020984777DC325
33D1B154381BA3ACDDB9797E3595FB04365CD4B4A5FF216BD8534C4ED6F449E9
69B40F8596FCDCD85BDAB9EDEE5A57CEEDF7D8FFC0B12979EB9554FF0F25A13D
AD43232F7EE4D840B4362173A861219421EB7055EABD746EC148159823E67B18
643FFF854A836044E309C58AF1F3FFF3B351EABB8331CA5E012AEEE41EAC3D35
A3AAF9348E13F1671DB099C4BA112BA51702607E0C03ADE959A33ADAFD30C33E
CEA4ECCBA131D955DD35717FD763D96CB62E5568046435536B09FEEB142C8DB8
4963CE5E0763D0F9923B80CA9EE5A0568BDF3EE98D221C65AB5E4ED272DE4D0A
10B18584ABB3D3E0721037982E27033CD3440D6C8208196013D07F9E88CBAFD3
31911BCAECCB6531BBADEAFEE8ECBB553C90B4F7FB949DD094EFC754BFFC1C0A
B458216C5ACF068911EFD0CFB268307F4CD1C56B3013865D6F86CCB53BE427BD
F9D42B997DDFB57EC2C4396609C72B9A030A92CEC7F3F1B26FF6E2D1797C38DF
30977E484640945275CB4A4692393F561AC3395F6D9B8AE4F9C8EA7FC495ACB6
B6C6D4637CC4682D72A617F8935142C9D102065FA591A3CCBBE97B50FC229646
65BC26EF621A7C8739DB3544C74E73E2FA427B8359F34D058E78A25853C23EB5
536B90A66DA0A76F1E973CF72806117B50A779EE8189A7F7AE452F5067E9E191
1E17264FBA7B318CAA8BCD0727FD059B0005BB595DA2B6A892161AC24E034058
29A0585A3B442E1846E8C85EF5755BD64922C645CB6AA618D8F66D616A989966
FBDE2B55A8B0031DE455BEB83DF8971CCC31A78699C94A7162FA00F6E05E273B
5DB89549315DD15B9768A35020B390317A8F1B0971C84FBB39F5FB23526A0BC5
1FF909D5319865070DD71843404E5407A01A2AB813F1D4977CB26F9A83AF7B4C
5FF11863868BF0E582C959DF306D33971C89F96C58CDAFBD1DA827F84025A2AF
0D0172553EEE8115D704B5EFDDD679B517E0287FC915BF949437FCF84A79BB73
0C48EA3E11017EAC153D9417C228C6BB23F67221C67680D8BF99EFEFE22B0D31
677742ECBBC99375685609670203141E30E441C60A5438CFA2F9D3278AB23F81
BD29E2D1FEEC81D668906DB8A6A007629FAD7A89C4971A01FE5AE193B6637D07
67D9C762E1DA5FE3D477A0FA674DCFC38AB63E6F2FF1D45F6BCEB84693193DD6
A1DD200D31F6BA872ACBEBA94F1FE5920A18A00D0276FA16D597879F762BF7CE
394D18DC76D206301E42557AD94AEC22A936598B5E500CC1A1C83F8BD9A9B1E5
70C8700D10AE5100895A0C5E11A9B941EB1CFAEDE05ABD8B096D7D05AE6A88C9
8436465223B3ED9E26A5D9BE1CD2BC07CAA9595DAF1E8D29A7D573D96880ECE9
4AD2AB5E98C99D2E5C078B5199A8AA5AC678091C4C8B2F30321F4CB91E1B3AC0
BDD21C129B0CA2EA52E4F9C7D108F29E1ADD00FC43BADA9AE6891B755D8BC35C
7F5A2B7968CB0A12CA088220D7CC2B4F8940696EAE0FF8E22DB4ADB1BE645ADA
D672C6BE223D644387BE0F8B9E2871C5FFBF3502C3C88DE518D33CE6A2A1FBC1
1AF637DBE1966FE1E9BB5DF28AFFA8F65401B341D17E6210210DF4CA58EC918C
E4BE3EB768600BFEE219A3597953634A1838FEAE7D390F878368BF418BFC6651
72859FA935BE5487BB0D1F95EF9CAC30822D4AF6E9B50724C67557B49B92B3EA
74E85A09301C445C3D820D538BDEEB99CB270E8599DC0CC7346560F9FE2262BF
5DC57457B48C1D925001FB28173EF23D6EB7B24D6DE308762EE1001EC85E4E51
9B8F99CE6961E7A9F6E54D30B73FC9FB783595BFAF270E5D7EF576DE9EED2398
E0AB443A4F47906A09156C93994992C526DF32E43DA907A0788B783320EB9EA8
A9E4B2BDB0B3CE870481346040BBF8AE8E79C861287E39335277EF22943328C4
6D16E0260FB4045602F7C689AF740105AC3D46198A683620D0AE2009A796D322
E5D0E429760DB81F141B9CF701514017D615ED576CC0A56C98BD025F353124DF
601934F9E75EC3CCADDFC18C036517987D3138F766C19BDD4FC47D438574308F
239051DB08F751F220ECCC239BA4CF5225E537266DF9E2729F08033A0EB87FE3
61481CA37A350492CA1038FEA46B99D05AE5ED8E32080531D0D59C9AE2F6697B
45A72783A12CE2E0CE302B28BD7C005D109AD54CC9341138EBC3B83ECBF5352E
D3E11B688E814CE74BAC97DEF06155E42D88A51BECF6653F3690C6A846F9E6D4
462EF7D04E11D7345014D35EAC9BECE4E62BCDBF60C6047783E14865AE1C8E6A
5F0E3DA61AE13BE6EB8820959E6F28CE29A11E0243FC77E040DCF48571AF921A
9C1C9C9E1A13E7460EBE1ED65D5DE83AAECD043C01C3C67AC69D5052445048E9
9E980533010CC108B716D5DEBA4C430B0CF7FD64C0DBA064ADFCE9115EEDBE11
EBCC79555C5CFAD41D7DD1DB2BF35BE7D728631C53FD3D3D8530AD3661940F58
C810C3D4F0EBE63B748831BCA38E66CE75F6E4E008066622B1182BF7BAE711DA
E2B9FDDF5BE25E2A61E0848C7673B94ACC38F876B880AC5E334D9D374A9C1B6C
0368B6486A3D0662464410829EE00BEBD3E75B1D437F6D3770D5EFE932221CA9
2213BB8F138F1F254A77EA74602C6D2BD4D78057167C412CE4E17B87024BB6B5
20B3FF60907094B45EDA06B6F3B5CF684377AA83EB093F5E47D17ACD365EC358
AF4875D1F11772F6C0AAD05BD6FBDD3E2EB6039EB3433F69A61CF1D585131A8B
A824E53EB2959C5BBC24D015B5CBFB9CBE3C679A820E20864EA8411C6A9ED581
789F90FDDDC8CCD31B88B8999D667EA7FC6104DF1EE8BDF757CDEE4DBE149526
11C12FA01C99BCD1166F7E07F6810F78BFB8CBCF89D1AB872C23ED8013DF5B2E
D1FC87AEAE92E4880BC9C6468F5262055B889245BB6661679F7EF91967AF1886
3B535735FB2F12E8DF9C6EF0F015C8184493FC6CD10BD28E771C7370F75AE8C5
6D148768600D1D237C2476C5D720B6577B8557D5E1D7A28BEE6D16AAF8BB4650
23774D2BBAA861CA8B3583407522AB33411ECA4885030D211E41F348377A602A
2DD6D6FCBFED0F8BC02B892F63DBF7A3D425A64A9FB646C1147502DE0CA3AD19
6926B8CC3FA71D3D5C2256E01ABD2CBCD2407C3047DC79DAC63CB524A147A0E2
2E36D409E7F908A1CB6B4E498A7801EFD4CEC2DB8F0E70853D17814C9C0B8D4D
3415222E244DEF3BB68F3FC3DCEC70597CE938460E736B1DE55289D3A912F5C2
98D34F3811D5DD5BF855F7B233997D197691F92960271FD4DD6399A55D7FA4A0
E91D5A9229E0734FAFC793D0C8DEF84CFD33CAA6DE1E96832C8915D0C0E3A15C
93C6E5E8774CD3E1294314532AB796C5936F1E10445370F4E31B08DA208FE08B
4C8BDE976D18C8F669EFADCFBB9750E11A10720B650E61C2E1D62B535C12F48E
E30FC80672EFA91DA6164FAA374E3C846535939358D67E8BAD2CE3DB0B46E253
92CD6FC3BEFB27A960CC43B18F0A30A3D8654830B33AEFDA5E40556217427240
F04AEE9194847AD80D6109D1EA9594EBE074B67CC562E416FBB234A2C0E1772F
EE127AF073EE31D738AFB62E1D6F427CC2E7F321BE4F05093DB8CAC7C1218540
B0728EB209FB5A0BF3B5B44DBE2772C8AF340F73F4C2837E9134EB36C3E7C8AB
2CE079AD5D384660A2FD198AB6510D8C7148C82B8E60EC0398B70FBFF9271081
CC63026D8847FEBBEC732BBA77A3F888F990BAD4D1810A9046288D9C33E40213
5D7AD884A464DA4611C6F4D6F7526D769E12657A13AA5720BBA48F652EF1C3AF
CB19D0A0AA9B58CE598FFC4CE0610C564183F2641C90D3BC9C9C20473D6FAEBE
75D0E7F0795FAD09FCE908A5BAC001904C1FB4D0A37967AB88AB7B7D5C0C82A2
08F4F8F3C5006DF32D7D09F3E8F5A77555AC3FDCEC8A168071B4F0FD9DD1E04F
6DCF1066BF673E5FFA572F7639F85DC48D88CA31E223DDAA0BC9F784B5A70CA1
B83D37D275C3796ACD6332F9FCF7E09892C1676B6DD876B7F6FEF463AB5D117D
CADD1004C666D8261B12161B09418939E56E5E3096E9F04577143FB2C8D3C1D1
37F8D32D4EC9594F7E01D63151DFE4CC7C911D9DA790DAB33E7A62605E65509A
8ED6790B060CED2F8C036B4867F90D40C114DA6964C3BCE94B324AA7A6D765E2
E00D54375B8E40F24D48F469A66C969E10668F09EB64B48D694619D3B6F77A7D
CDAB8C3F498D0AE331A2DEF9D4E3C06BC4ADF8132F76EA3609B14BBF10E66264
FD1E6EAE175987CC0DE53BA8C5E5D39349BE33448D2F6258DA61AAF47917C66C
7C4E167AD545C10EC243BAE06197E7A600CCB5DE4956F39C8BD0BD7C8B46BB47
E63CED179B0F9340F6C78747E23052AD3B4ABE7679F7D60AB6DD3320CAB2C760
BADB3C5665700B0B84226931235C3B8D4F6F49D2AD74E2E899BD4529C660FED3
C40C68175608BDEB8F577B1C21485F880314E85EE8889289AAB3E33AFAD299FD
E8FFF824456E15DE305CD93CBD46A65803E28FAF33467E83B76AFF8DA1649C3E
5CEFEFE0DFE6CF80ED2AC4FB96EA45D8959C5D6E54655F6B7EA884C1A171A728
0E8FF4AC0D4C8A2199EB6A354EE8BF2AA1DB6AAB259CAC93EA5AFAA00C387273
3A74E3F64B1812B73FEA255CF1EA3B5DE29681EB3B80977E60348AA96E9B5A05
07CA54A84AAD37378B8552DB87DD0D883AF60455753850A6375659B6395C974C
A86C8DFF65A35D63DAC861A6C175B77AE8ED2C2A2D686592D3BCAAA85AB1ECA2
035D6763B648543DD1FEC74910CFB6B3C3C2776D4DDE217ADCB7A430B6945986
48D332020D18F7BCC1C6BFE73CB749B4F20C79A7038E473F435DCC8DFED5B907
1ACAB66769612661F780459D9932AF482B5E2351E3BADBEFF840B6D2CAA7BA22
99074E853FEFA191B438FD0281448B109087C598B1D267D1559B8F2BD0BB75A2
4A23A366698528DD3F751D94A681E01516A9BE748675E49082C5D3B28ABA8298
0EAAC6131940026E3C2297E197FB884A6A559BD4B457703BF4E4998623C743B7
46D0EA5D754A1D90A339268479552A5D4F025C0446A986C64DFFC61DC2067FA0
E5D929236579DAD5A6BC105B8E6211C3F31E4E34A31AD7C1FF486172439C132B
32E829D10EA96C3FE591BF536B65A044403646B0E389C30386A643B906F5756A
7FC778190DD5AEEBEF9B6A034E133314CB5125B288C6180A9400ABC3A06B1CE1
1CAF072C3B40EADF61889F6442CB14BD2C5658C938BC685FADEC8C6514A72D32
2BB1566B3BC263484034C1A9DF71C8538B03CF18877A03FBE2486B329E785A81
13B00497A08154752DCC6C4F8CB5CC1AF7279DE37F1A0A5A6FDFD913164AD228
F1ED104D1C493BCFAD6209703B06B52BD4EBB66F78E2C4149BE9BFFB8819217B
195EC6E47EC227B632457880A2E477F3E48CA099C58C47542D51450E51B17358
C5E18BEC8C7FDD29087B498A56F34EACFD2A76AE9B8871D125317E14B83714D1
8F84E5C4E50BC74E40209BA34DA4D4C40E586B3DE66B95C3C2251EB47AA430DF
83A0B3134990EF215B151F5214A44C79764CC25ACFA962719BAE108F344E5F0C
F9DB294762537A84DE04CFEC8B8F65593DE423E11AF9099F7586A67B05DF4C36
69077229F57CCAEA7D49CFC0A63D50165FB546D16B296D747B8BF15F78C8E8AB
CAEBB05F8735424FC707DCE60CA1B69FEA070E40A41A125112E1B00673046602
94A30EDCEB84DED97E6C129E8DEA5117B3C82C11A247582DF77B5B3049701ACE
4F6E8D02D1B86F6FB8429E2CEF1DE460E92507DB9E1AF76C75BC88E4DB3D178C
D1E4C04A6F49075C6DC1C13773FE58B2717DB9B9ADD4EE197B09C391D9F54DA4
E226B8B932A195CC47C571CE30C649A50FD6810D2D31EF7153CF7C7F278A4B1F
120E6A096B9ED121B959076861D437681B2E850B2C6AF69FB9A656D0136C16C2
109C87627A1CFEA2A6707D6B09AB84D4AC4D1168DC5C66DB2C1ADC28A573914A
C5222C8D9714B24D1E13F4D2BF5379B7F814B3DFA2AA7A69391E04B05A1DE224
5D3418E26531BEB730CEDFCF51F22A37EE6A7D487D619C8907B39791DF3AAC55
B226D50BFDBB888D966E97636661D28B3C7031D0317239FE01C1AF3099A52C50
387FFEB88B7241898DDE993330872F7CDBFB51C1E12EA90E8AFACE809ED700F2
B0B4D2ADF82AEF312534244DC6E3E0745ECDCE77D3DB64BAD551B0166B24CBD5
3F3EB7AB963438B41E7627A779C931A5335EB74DC681A31E97F167B7655B5AF3
13C62012F916ED2887C57FDBAB63E602D113C81A461ED958FE572627420F56A4
4CB2F2A844BD9E19A6ACA8DC227D0269096F4621F4C29048731516E16076F348
2F71DC669C165DF32B47D4836ECC48CCAE1FB7DBBB6ED76DBCB40F9E0D44AA65
B6998158F0137612BC277D7908756A336EABAD04C5FEDECF25ABC9AD80338420
626C339F72BDDCAD17BA94365944CDBFEAAE93514EA2B8723BBC2AEA49108FC9
267D19A8659067F91099471140028BDB77F8E2BBD3EA82FC7A42EC29CEE0176D
C1328C6FF557959B50B7B113588FB2E5D4AF6D1E5D0CD399514C5F4411C142A5
9D8788634ADC3C6AEEA4E8147CCEACE1300FDBD15FDBA7AB5CF67F65F7F908AD
AFAF01BEEFDD808002666AEA8646F51D24E2AE9E28B595E8C3F0E8CAE468994F
D0F93313FBD1B05302F5FE7082DFC0776D805807ED1A6AA55A17080ADA886EDF
F49FFDB283EC049D3A64502C74A265B05614804C9235E27FAA7C318E037ACAA8
7E81960524EB498CAC57FEA5C3B56465EF1D8E0015CE279FB0B28D20F42506A7
399242B4D0A858F8A3B7E315CFAD7954A1FD6A2F4167E754AC965198C965757D
226FEA8B14A64CFECA4BE3B4EA497A91E603F12241E2EB52B5EE286D3582FA02
F77E2291C268A82D5519573814230123CAA9DD0D86FB2ECE4A32250C17C02A84
4CD9F42A31F6710DB8CE763A3922930B62800559760771873D48F813C093D520
26755A841C6F5C00862A548DE99D8304BBE985CB6DC92F990D8FA3AE0EE5062E
73519482F277A77E7DBE5416FE8C7D5A5F41387F50C5E0F59E80EF4B772AFD59
D0135EE293C86E2C522BF8E5FB4531330E02C9A8EBCD6C3AD71A1B3CB9E3D06A
8573ED0BBCF641FDA888EB1B9654C0CD0BFB1A2D45C0D27D21F892B9AE92E848
0F5B8A2AB1B87D51C619EE29BCD29A724AE4024D5B5A6A25612F737870723570
E5B8F42D90434A48E3F4993DDF5FDF93C9E21EFBE3D47ECED72963406AB79426
A14A17B3118E50A9DFBD0824BC680E649AA4B5498ED77F9B215B6865E60E4F6B
37DB7030544555DBC1368881E190724B53196EEB9D5A81CF13D51EE1D8B35EC2
E6B2BB0314FD0E2835FB97FF4DA3BA4817680EFD0BA3A114DB6AABA6C4D0D57B
09EF89DF58E4AD49B5EE0AFE3B6468AA01ABC8EFFD9B0B6F1AA46F74CCDE3F79
C14B02F024EB1D7F7FA885FA00FC23A7902576AEAD0AC01A01B9507E77A6D1DB
A096CD3FC01A4DAD367B21D4B71E5AE2EFB55C725E3CFB3810CF380993B8D52A
6546D692089E4E2D36FEFA77D26C34EDB9F2D1D494941B64CD9E3B54AD3AD70E
E12EA881FBAF0BDC35DA213A632E31094E5AECF50BEE679C2524FA0A016105B1
6D900482E9E56CB6F896B2AB3361814C2CB3960497DBBB6484394AD3BDC999AC
34CD425292C241456649270C02C63012003E8130E33961FE3FF03ED4DAC7A767
10E82CF08A5B98663B44CE1F170FDB61EC748DABA5357012539451764AE35AA1
7151913D7FD946395EB73889A8161EE9ED2646FE5703CF5877205809810CFD08
AE965DAE012540D92315BF3AC6AE8E7F8D7D5CE1C7F23163EA013AF16A010BB3
944222C01F0BAD11B176DF448467B6252BA3AEEEC60550844F5300D7FB6DF401
576E5BF8658DFBBC52B807828E02BB2E6C2BE8679B4FB188A508F31573372865
C8F0CB3866595A8FA97423C5EDA9AB2C35FE57226641149A45B950CF9A276276
2B7F6031109C74607FA741653B6DEF9E373B23BDD5751FD1E0EFF07FC2FB2C41
C4A87F5C1F45E5BEC496373C3FE0F42DD14D3A6EC38928BFBF73E85DA1EF9EB9
34479F0419EF545AEA0E8F93E8BB74CB35738074BCB9FEE4077CC0C49FEDD9B6
1383CB768E1E738FB619BBEFDFBF09F285EEFBC862E4DCA5F681BB7C42AB16F3
3B0A9E1843D7515E0BA656962DD28975FC37DD9E2D42EFE229F8270EEF4FB9E7
BC9FCE09C92A54ACA688D325B8FB6FD35D8B2A9420802B29FF449850AA82A465
3649B7CDCA11A1FF27AFA7FF189A78E8BB6E5849D43DC9D1545A8D74D8A2F961
52638A0848F435DA7B47189AFD58B3DB618F788D9A77FD6B341C74C0C46F63A8
DF81E537B689FE89AD254C935178E836E5F6309C53571086A1EF881109259081
48F724A5D21C50B4A5A87F8147A3419672873E34D817AE1624A14774ADB2296E
AACD7DA7010ADED0D6A83F04F396CE83F0549EA663786E104B9D3B06490D129D
34C2CAAD10F354EA15F9498D55BCC4EE3500EC9AF91790671E766C422B547435
51FE027D7FF581F639942945245D8F3401965C946525A80C2C09CD85A9D4D71E
03BC8B89881DD509E1A62574C94F7E381217DDA94199B106E20B57E4BDF333D0
6BC1B3B38CEDA174CA001B312141BA6CC5B99C850C4A7D78454906BA1E1ADEDD
C9836C789139796AD76F219F2A7510F9C0556D9DEDB9A655EE349F0956DB6D62
68C6C9501C2982BD27F7D36AF358986C5F85EFC3EBB3655EE06CE559A6FD6254
E9EB5D2927F8DD71C97EB8FD9C28D709E709B098D1AB782C8AA31DB9E1DB1E43
5130296CEFC9195CC85A4383F380C770AD1E44970D66A6C473EE1FC24CDD5B7A
C8BECC962105575D61683862D5E4C2CF88146360C3DF99FD8A37EFDA8A3CCF56
AD9EE9F5DC0241F884B402EAF572CA73E4E558E242DC5F061B4BA2D8D6B177E2
75ACB46098BF1E3730605550003EBF30149B32052EF3440DC237836896B585D1
42F943ECF14EC18F94261664D37FC4FB17795C6750D8F202FFCB3B193873D837
EDDC826E13EC9BD0574B05043CEDD70162A3D60475CE7414D96C734A9BADF5BA
05BB96D6C376CB6CB0FF6087C73080747358367F3BA1527DDCD66E0A7FECABD4
180091E3988549DA682BB1865F9170A2F208F2C6303A4F194AE8D5D20A76ABF1
03AC7AFC361DAE2FFE5D3A5A1A22A38C2194EFBBEF8351510761D477BF2E7169
9C0C449977FE4CF6F28C1462794357CFC8647FA8983884D0836A1E08A9B3D7A6
2B97B32CDAFA0C2270679A62DD349CB6F6A20E796E70A1C0ACE04904B1A6F5DB
AD0B70459EFFAFE56EB0324C178A21F45A072A6D5CF9F29154154A7FDD41ACAE
12429D21F4F33AF3E02DFAAFF16DBFCC1F93AFBEA0E6F25450D6337F0779776A
FE85BE8A59526694A0F4EB0567304EF76653DD40C4DF8D976A9561F7A2A4AAA2
7D75E803DB69D4E789466852BDABAADD6B9E6E1B71655C46DE2B18E7471463D4
570D4E89F4CD31A93C312EA46747304719FD9BBEBE2E4AC9E2B9D116034191A1
A804EA935EF131151CBB619C8036F6BE8AE71EDBFAD15C24E79ECBF77776E704
F4293D1D7D5BD0405A163AC9894C524D7ABEA323259226DEE61AEEF98622299B
782C4FA64E726497C7A9197EF148F00618A2B5BFF816F894ADD0EE434AA89CC6
2667BD404A07E1BA0B051AD3EE2DEB7EC8A6ABAB384BCB3721B6370725B23BBE
719810E93F49F57B449F346B5B7DF5C824581DD951452665BD68F6A062FF984F
0205F2B79D66321BFEE99A76A8E790868BC41D1F133E9F49FA2EAC8CCC723D52
91671B1E88BAD79EB2834A366B880F9C466203E0E6CC2D796BA6CA1B937A17C7
8B36F7D9E7B3B42B1FA1444EEAA2F357FBF8A51B6A9BFB97094566E0C0C82590
B19BC1E000B8A2A41B449C411F578DBDCFB9B0588BADF50EEAE27345E08F070F
C8DCCD236CB2867DF0124A51EC2D7DB22CD11134C3D9AD8FFE684C173328D585
BDBF8457657D32053ACEAAEBBCC204E24200ACCC40A157722230610C8D83F4C9
59F3BCEDEE3DEE80DD7ADE77E44374DA3AC846060AEB63283D47C9DD09E9C1B0
ECFFA2FAC884D2AA49FA233FB618A9B5F7944E631E35EC84E68AFEFDDDB6623A
2B2F129C32942B4D8BC5C50EBD2C07EE0600C6EAC3115ED1720EB25BE3A36153
EA88A732A90B218C529BE1ECE2BEFF39FD4F57B7B34D0E791B770020BC6BA1D2
8C0EBF91789EC257C74E1F01C77CE096AAFF75A297749023FCB5B1718D218945
483EC5DBC6517273756811493F0396CEF43BFA6BEA6F0760A261CA05EF40878A
1A5931713E4EDEA74C5518BAFE1862B5D23C260F0F98C2084886C4FC9D09F210
A950037ADE5C9B4BCAF41A2EB9DF47DC568911D8B51DF1DABB7AAF6811A33019
F4D18C1257C01886F529957F8DFD23E9A372D1DB6F926E8CD15339FCC5E5DA99
72A6D8363F0AC0448FF5B205854F9BF1F07AD8C2248E90E1E7B07E65C109188E
8077D1363A5F6085652E7C7F08CBCF31A3240BADE52D95BF0BDF04C685D48C33
6C529F467DC4AB924F985E057049328CE380EFF3C724B068665AD15B8B42DD44
E967D87A270CD3BC6F03C3C0499F86EEAF554ED2E0039F2103859A54C0A99D98
9008013C94803A784577B891A4B722775DB1D43E6A231679B50FEC85E5EEE49E
7DCD3BC53D185FB5EE8DA9E73B29A4F6157282C15B587CC0B29581E0D77CFFE9
1656EBEB0D9B5DAB1CB73A8A1953CD33988CA9E48BE7A4898510C99645C55041
D0FA359701B53A66CDE373AE51EA0D9083CE2F78EA919DA376BF22D179A887A1
5B8604A3C843202F57249094D15656F1534B22633E82966E5E900BA9A1BFBF05
79DA6261D8F263897EC046990FE07E6033EBE821A77D93A721A2978DB49A210F
9264D047FDF691E03A3E2B2B58AB9CF926E4A76AACD1FE405368598288F1605C
EB7402F2307114125CB8B79C6385E429E583C7B113D26ACD664EEC22B0FD71E6
02D9D0C1283CDE6E701E8215BF6F44D693DB1C5B011A5A0B3F823D51020B64D0
02E93DFEA9E53AED6076C15D274B5EB14FC5A4E9BE09F36013010E918EBA58A8
3657FB9901097C15B1A97DFF4F9C50115AA1A29920580974E780C238D6C249C9
291B8F36E98F9AA5B8623B277F3F5A599633A80022078CB283489110877BB371
0BD3C2A6E95E08C424114C20A75C8345127715858C675EA87FC9876A759DCB95
5B60BC3513E73B79B4773273DFCABA21A394C7EE1903B7E7217581860729E94F
32AC1B3264D974ED6AED018D4247FF6215FF1A43FEBCEC298A36A678C845F77E
FA45278DE29DBC0499DB3DFB83CED25A19E2164AFF4AB5AE6C0A0818EA870BCE
63D164517F0C65928B92FBDA7D508191A755BDD83BFDBD4D1B9997140FF1FE57
2B8E6451902029508F3CC4B48D56D6DE0255A12514968541E940E2965D20534E
9CC80CF72E26B27AC1A606DA72C6937B0653E40CF74B2719B7DD018C33C69B76
43201B591213AB0BFB2B5365909E0AE4748648C7E18CDDCBCF11BA65D9686725
1CE9D3F81367178E670B5081405325AD6696B65FD609DA87EC24F66240D3DB6E
CD7F1600C1229BE8DFBA878182CC062C56EA9FF6EF2855B45390CF9FFB0538DD
80B31231FFF81FF29A9396FCC025B8ADE89DDF6064170934ED01FE3F9939095B
C9222E36CBF12DC9A501174B0A37A44896138D8B51904D291DF967703CCC1EA3
57DF571BB60D7656588AB545B85373D12B77414032B639A562216BD7962DF83E
CAF271FF9898605289A494F32D78674BB131E68D074EC220661D2C8A5BA98535
558E4C4469C3303735C1A0E6165E8D34EB46F04E8A213DF7580CFF4F8F308A2C
E554FC3D3DEB196BA3883047AD95C4C7275FBABBF58288D7D0A10FF478117DB4
0E26E61DEC79CDAAFA97EE27E881F994B1C0C40C14093816F86D27426F3F4342
F07A4BBA0EEE3EC2CC15D31A539A98799360A680FF80D373F52A326396D27216
BEB62E343E3E8DB7B8A7686797211C52D5CACBC8BF7AE41005AEA33225EED215
18DF12AC080B0BEE1F4FAD1086C4523CDA1968122EEA8D658BAB5A8DAE6EAC05
FA3A723C212EB77EF1A8838041435E093C77C01CA4FD6E436457616E6969763B
D39D28EA860DC8DE04B0436433B9527BB0FE05B25933027724C25DD29BD3C453
9A7FC8CB028CA6D11849D17BFF29BBA1D4F16FF603D11498C903EAD02A6CF8C5
D1869921454458EC7A47856EDDC2AD33B9979DCE54DA1872F3223C403EF0E63A
67AE2735FB71E7ABE6EFEB2ADFCC10DBA5383A9530D71AAE249960274C1A8EF6
D04E5E82CA53A2CF19DD07C0A1103EFCFCDF5552475EDF7B4D6C00B18B91E9BD
EB8F1020A51AC950E6559FB3948027B87D3EF7BDE2432CA13C37A2E3893F2480
D62F39708738C581D19EA8BF5867249F9AFB3A54FC7207E5B66FC3628F0BF59F
61BA107BD17C259B723F7380D2FC267CB1B21BC13A55856367A6C96968821992
98BBBAC9F93E5EC938F829E8EC40251C5CB8E32A2E8712A3AE0729FBB7A197D2
AFC64FAD534BD1E54D9E6836295524148A524E799D48813C25D4A80F6F0158AD
696ACB5D86FF871B9DAE2047619638BFDD295D9FFA34B70F760CE8E8B5E51D9C
5A8B750880F2197A5002738F50F6E63F4EDB0414F5C5DD2F152FC7F8C48B36B2
7BAC6C9A86149D9630CE7EE444D2C922D4B8A18F0E6AD4526D1CD6F3DDC2B1BB
315465838E78B6ACBD0A5C2D94415461F66A252FB5FE7E722B389AB6999200FE
3EA7EF900D86B8C352AB77B33840224308AACC712015446421AF46A9B8874657
982FA545C7882C8430F9530AA0E6D897928E2678D9AA4F6B8D5787BBB4EA3DAD
741D40C2F9FA15F0F39509ABB1D83DF51F656B908803F91066A8BEEDEA0D33D1
6CEBBC85A0332FA3C359AD014B40674EE66CBABE595E615927890A0E39978476
0EEC502962C8B1190F6495CF6AD470A1839575CEB9B029D69D3185A024D402E4
CA307C0F59D764E1C49A18B3280D71428580241BD68F671971131BE62F111812
6EBA3D42E0CB889874BFF866A4F64F7FFCE7D93BC80A4BB8CA1F114FE3A7B5D4
E11A76810B369858B4FEF43646339304DFC3E742416C6A8EF90750E113662D76
4D2F51B2393A62D2894C4E343FD3B1966D265695B50778A1BAF4A6682C4372B0
0B3CFDD1CBF34AF25400F26298A5FEFDA2296F8E8CFAA71EC039AF5DA58C53EE
3866E8316EAEB863FD77E18C4E61EB4BB877C58182D81B90A9B4CFAF2CA94360
FDFC3AA4CC4EDBF07694FBBF91FEE78CE1C1B2B78EE0CC2FC157F3E019C9C930
76C7A524C8B374AACE6A4DDA6827E41E606D1E17D06EBDFFC57CD81DDB28F4D1
349D61580344FDEDCDF9C62C38818EB8694B0107E00D31BD49B276E87DE07812
DC5CE8358EC6FBFE195F9384A7BC8740398F118BADF63717115334A01E9D22EF
DD92BCD75FDF5C92005ADF6B7E0F9DE10030F3E622511A343626B390DC5D4ABC
FC16C45BD25D51283D153D11A0075BCEB3752B17E9CD7ADC9539AFB589CC9EC1
247924A8FEA1B080C4ADA0854AB79F7C0FDB1919DE642A6AF8EB814CE67E5CB0
86BF1993143EDFAA71B169FDC8B368B5A72A0A1F7010806E25E5CE5A40DD5090
27BA6FBD97766BCC0F529E632D9925904A0B8C4161164C6904A69BFA0FEF62F2
1B310E8D9A0193EC8BE38D6B11B3FDDDB8ACD53FDDE6A5B490374097FA155400
5E828353143925A4B3075D5D9048948A374AD4DEBE4AEC0EB5E90D640B2DC602
C756B547F8B0B3B8E3717556663142511FBCA135BC70894EDD4B1438FF1A39D9
1CBAB55933FA9345EDBD34508110AB483F7290C148691F402B0413E0C04A28B6
7935D9E1A90CA5C73391D26C255F9E2D2000540AA9CD0D3424EC5D019C0CFE61
FD929E5B28CE45E4A1DE2E7CD6C6D7B2976A6EDF80ED36599C34E29574426DBF
AAE4A1CC80AB215962BA7377B4812EBD22BE35F5A7CED678CC31F9959BF25A3E
3AAF76BF9AB3E6351C06DE80F6FC9FF1ECB219FA468D24C3CE0DBAC3886AEADC
B98B7CE1A6CB1994B8B6D5F3B87B324BAA8D98ED9BF2386985C80190AADFD349
105EB0D111B99812E0C73E04F23621298C4425F8D0875E7F1154F25294CE6353
FC67E4D1F6D99BF7FD31D529F85DE65E11A460C6F58934A75BC3548BD0002024
BA198C013CF0C9590026FAD0BCC62DE4B4CEE7970E345419CD5B04BE4FDF16B7
B952416F73226A6EB25502B0D33844B89011A719C4B63E6D8E0239BC3C5A5CE6
8310835C29EEF9973529E93B7C15184900D0E077AA632858D7F4BEE998E8BCEC
0C66E0AF3185D47B1AFFE4FC092EDDCB4106B105B82572879201AAE542416456
9920E88CE590E4481B966C9EAFE3904FFEF935954AFB3CCA9CF895CB36B732CA
ACFAC91B14028C094060E86E5300F7276983D452BA9BF88F232EAD47DCB1A55D
A86415391A609A7E6F9C1E3459679B6CC8841035CB57216B1C52F446C5407CDD
7E1E29BEEDCBE4C0AD61F62FB93D9AB9B73D48B1A3A8C575EB4C002BF88D22F6
DC31D85CEC33313CD0666C139D5EFC4AFB835995437E73E9846155049CC7D28A
56ADACD44291F5D0E6FAE2D2DCE7345AF7C7F8A1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC88F86B07C1097F9C5C5673B88582CEA8CD622F9B0C79
E463DF7F2F4C6640FF3852BEB520F7B23D8A22E7E601EF9CC6D0A2E6E82E6840
65B82C6A3A6692811E2B4F57723AA3A6E27076A2F63D6CE1FBA7ACD844E732FA
02797B386F2EDCE9FF9F84EEAD17B366D678E61C6176FEC09C94B74DFC090CCC
40AE9DA65E5DA02E7A7E8A840B45B752AF11A279BA06F821525DD0F477831176
84C80B29D318260FBC314986223F9EC4DB5B0EF2EF5D424C6DA581B49C709E1E
98149FEAAB15DFE7F94977CD2041DEBCB1FC8F4F3B288515CE43713570027C3A
C603C44D8AEA1F9821E0124F9AE3E5A1EA6D1C6304DD03CD20842B335D7FA068
735311F96609901AE3F5EBF70A777E892F5B7B59DF5377CE8622F82EA3D4BD51
B1C7DDB9F2C31CAC3C31CBD886DA508F4F1B051D110607EFD0914F27AAB77D2A
42103B51739C7CBA24D989635B289E5EB0A087319F567E3C50F98DFC652FAE88
AB78C203C6D210C162942911B3230B8D462CB2090B417B0ACA22B640D87E79D2
BC6EC256BB95AC00C80736108036887D178CAA33E6AD70D7F0ACC12401A36F6D
CE34D7E99BC0F7AC24E1BD2CA63AF299F716B09B512A591D69D954435EAB031B
C8901A89EECE3BB8CA238922035BBEAAE7EF4B85A8EB6E1BFDF2E7A33FCB3A47
DB410145BC8ED4500AA5FAFF31BFDD120C58238D03359A0D83F3A41F332B9367
C37D068073BE54BAC9BFC8663130A39FBD16A5C27D66DCD824909D3234D19B99
3595A1431B8B5AB9534E5E33E0F997C7A26D886F7608E3F972B5AE5C402270AB
0E4205329FEC17C81094E3FB45FBC369BED7C8389E298F554671CAF97994E36E
7F3CB0F128274D559A0304705FE55B6D5BB2D395DD9F3CC8B68DD5F3C451F926
291BB21ABF6914C923D0D60FC580569CF771C0C0E1C49AA98C7F10075CB6EFA1
1BEAB724474EBB2627FFF5F73890B2533C4974A8DA309FFAB448A108F376CB90
FCFFBA0B719C2782BC1EF80C7923C9DFEB1C184DA0C0396BB3AE8446D1FC29DF
B5AEB07D0372ADB519233DD4BB1E32E3308C0660C235D83B848E819175C4E9E5
718AC24980220870510D41FEB04431DCD86F32DD06130AFA2766FDE9E46A2613
0180B89DC4F46FF9216F1C43F4414B7C12B560AEFB08395942723FB853550238
DCB92FBB00A1B482638DA625E36CB1C3D5EC97B9D19604F4CA460E1C2E574D06
2226B47B9CB5B4647CAD084A51EDF2A7B68B18662259AB0CCC303901A207C831
25D327B27691789215CAF26590A7894CA6F9930F8FBFB3686C53014056D9F39F
16026ACEB8E9E9305C72B353FFC1AC7DC39F9F2DE66A661904FD381AADA097C8
E757E0EDED2910C66D6FB986F41290026AB9EB1E58C35E4A2C10DF821DD1B07F
793EB581B70AFFA06545EFC16294A92D4265F06CA23B4308EEA3F224BD7BBA11
2AC085F3858B6ECB0EB8B7AC7EB399A3845B7B55BF47539800B1F6A2A69AFF16
F2BFC1749F35F1AF027A01ED10B0D27866B27C5F0C7DC4DC5B0BDCA78BC5BAA6
13E9512F87AEE0411C1617F5F9C0FFB402DB59108E7F4D9507954F532BF9F91C
7EBE72EA4B1852AD6A2C1BA69F72A561482AAD65C90D8E039062FEC94B498753
9C643FDBB0CFA207F919E8BE859D75A07E8859C3B34A022E75765233853C39BA
13D0DBB7AF032FACA7B0220B454B102C57D4132AE7651F2AF7C8DC711EE32F21
8D521E9536FCEC5D52427506AF57CF572E9DB5C6A3888969412F28986BE6CDCE
A005F6505084E69DD207F92013D7DDC7244D2D82BA25BCAA2A2B18938F52B970
95178F13030AE0D5E71544FDE6EDF5B01E8B366F2CD264355A38A29B87F5D270
32BD985B3F608FF7D2AD2F7A64CAF6867EC4A445A842C79FA850952C6F5B6796
F1A4076573A761C9BCE28713E83B5999AB99C8F28A2900358223A264AF68B356
6C5722C352937FBD38BEB9F5F843E9D40EACA3B61A2E4AB79A5DACD4C434D091
489EBA83A311B76FC79FDC7DF5BB1515D939790282E29BB1E4054D4C1F9E3341
8A74BC21F9D478B1D126B7071F7FEDD4C85069C68DBE4EE237E2A7082DC4CEF4
F47EF476C9F27E081797A9C0717CF70F536F63D6A16B12B04F9F623DF2EFDF46
E3426ECB41C183DF9916876E389118A5DD5CD8408B24EB7B90FD4E4D6ED5804F
93BC992E67B3A5B889B9EF25DDC6D71B8474E0874CA8FF7BF4195E253079886A
A970B90CB1D3ACD92DBF36A960BADA6B12954D339E9C23205928BC5DD432DC74
12A7E4BBF07C7520EB1BF10D6CBFD8754CC9D3472AC9DF92179B2B9854300119
F6EF94447443654B15595C62085F052CEC01B7D3996690EC58146D182A606636
3E8F787AA1E0CD130B867FBA77F0E1DEB4F8DD3362CB67C2C403B31DFCEA1BAA
9E8982F0D85DA40D25607C4D53BB8B76B136F26B631E0BFF856681142662C44A
9ACEEC103E07272B318D5B51BA9716EAFEB6B8AA24E96BEAA96295CD76063133
6D3E3D0934973013ADC02EEF216DC5672127911891364954B2717CCE501AED9D
4850B38F1B9DB5616E2BD03BAD23EEB2D52DE451964D2CA04E1460FD63ECCF21
20670D8390AE7594871CF6F07062C07F0643AE6167321E8BB5415B509FB19A1D
2B5D66B373358350A9AC16CC84825B72B8BDCC91D1DDEB277D094EC214ECAD0D
2A0958BEFE0BBC40FB64720F10B98868F6951F11B56A27CFF42AEF63D85D09D0
46CCD86F8920EC211B291D06B70FAD9BF10C4485C04B398F957364B6F8765BDF
E8942D0DFA7E470F9752A249069925024B863B6B8E6429C416AEBCF49E6BE2A6
CE0E9AFD2D01655BB4FB5191DEA28EADCF73B15AA38C9A9ACE8FE51443E6C16E
2C11A36DC130B1D29973EA1BD8D04E52A74211387207FC282C6E39002E634F54
38C9FCCC21611D5974CFC4C63569738AC8ABB6EBC84D79D0D1B6F81F1116F731
267BF5CB124C01D9173A5AE1E92B36EB48F02F370F49B34E145FF5B684B12E66
0560B08C5D72308D686132D020E394D87F4594CDF00CCA2846ABA09C3890B104
5E8253736FE25262743D36155ECB35692A73A49EDF88BF9390DAFE6485F13B8B
943C39A9707771B6DB60EA73B24104406195EC4407942102C0CEA7C065244B6B
EE2BB7528999C57D32246F324953A13590337D87392BB3F6559D24BC0918A2CF
6EF11D71BE715B11FF28F39171D2C0F6AF4B0887342D8EF24E391380985AD663
C4BDCA38DB60542F88ECBC23FBBE9AF4BC80FE3B9D11650682498895B394B009
36408F8C14021EFF09DE10E3967E3027F456B7E9113EC6EBE067B1F04169734F
1655879DC52E5DA9CA60633C489A2D3980F299A630B2383750BDEE2CCD5D8025
E915F7D23EDD5A0C6D71BC73E551B46B4CA78C50DC0908991ACDDEF8F2E19003
5212D3C45D2F26735A244ADF7B195CFF8847C29BDE04DCF457E4AC7EB13CCE22
85209065B61A9E7CF9361AC00AAAF925C9D18B19F98E410FC7047924E54F73C2
E76B07FD279507A2F3025FD1B766A055823C5807D3C0BAC4F5C59F3F5A9F735C
C82C001FDC11282F7A6E4264FF4E02D97F07B771BB0C70E1EA90F9307BF180A3
A37A29A56F3183F4FF8CC9C029ECDBBDFF171FE61E115D39C37E507FD2908848
5D1C79B75F32E9EF8295A30822E9DDBA65CD21D76C372317CEE1BED10B0BD061
3EE3991EF3F05677EC98F03FCFC15016D1B74BDAB7113F705A9FCA5A3B06DDA1
BC75E51D693A4ABD9D8ADF1720E360B07404F83D31C492B932F99D4950CC01CB
A952BB12F806D3A7E1B357543DD48BE5ABE2506BF831FE47EA4418249EDD4993
C6655CE5DD6CD5E27D887CC25BFA3F38D1D27E9B8242C0FFAD92AD0138C83E14
804FCC62FADF8E1E0D2BB2C463F442A03305CC218AC5E581C974555ACDD1441E
8CDACC054766BF26C03B2986DAEF22342DB0B3A3EC0785B5A444E5B264E06706
C2E9D31926F4D0B397F873C949D68EBAE61CD1DB0E54D7FA6164F4FD4D2F04DE
679BDF7E338FEECF9EAB8B14AEE3D26EE0F453C7D882FB6B23273454CBEB0D44
7A18708A41B051F3A937299267DD2798C7269FB56943523F10F011DDAFB70C87
B8088F4F01FAFB38E2E77A8576EC89D01CED7E8831EFA272B8618778DAD564E3
6836B8EE6106ECC25E12616D25BF6F41422C32193347C18EAF8B54EF79E29056
440E0EF24A6E9BB920295AC0D3B1BAF55AB3C0A0EDFAB0A3858EB751AE6F0362
90B63D714FEB482A9A158C32508C71D208FA2A473249DCC6884DECF1E51D681C
DE08B0E93805B098D04C4351C0826E5DF8231C5B784C8AF35B4CABB2856AB719
0C1F0C4DA4A69D8612740D0E0168B09407E855C633D803A69A87037FA738C22C
DD5BE492811777B78BADCE399F1484DA81A33BD2291C5F52A0AEF5B47AB11129
01BBC2C522A2C1CD71717A32C2A713863E214CD0043B31566AC254D3BE0ABA82
5505E3167A4537EA52B10128186B3E7BE99C31D0EE943790F5D0C1979AE6D22D
CAE6F418F2C74A78112D4E6683D7B4957F9470091F67125D3750E3B0C86412C3
0E463A20C90EA243FD8CEF7AD28C7A3E56AEA23DDCD1CC2F20EE29C9F6C8DB99
ABDC6DFD8DA0AE7DDC02BB54966146873BA82331225AFAA95A191B299BE6C348
6C91421B12F59D9DA15C6D233451DCC9B6ECC2F29C30DEAF812710E9B51504A6
62749F8B78050E27C4F4861FC27B087E4B550E4C3D576150D5D72BD5C4348006
FA0192038677F93F93DF2CC06E5AD62665BF9D26C41FEECED53745747774FD40
EB4F0F7F449C9E1A00D80CC5A65059C731B1965D77B16296A172607D202887EA
59CB974C6DE9E21600B8EC06C9F67D1787480FA1CAA33626DBE3C858CCC54A6E
E7A6169B38137F026528D86787C469AD17E87EA5FAC0B38A9C897DEF02D0877F
AA791FD163C64404D17C4C242F097CA6BFA9F5DE294A544C85D18B24E878D4BE
C1E21DF9974EA8C0E696E1D925D679EF9AB4DDED00089FA60D6A99A6FE6599A2
41EA01F80E78F8A9E51A20A4062DCA69F0E42B5EBE447A5C78457E8930AE3132
A2867D9F9C537B3D29D96F052BA8A9077544502A4A3C16B44667ED468B1763D0
9E19D1665C847A596D73E6FAE5F6CD9570223CBF7A4FC1AEE80191C6406803D7
DBA5EA4BD2A85E7E289D271C4B11173DF337FDF792D197864B71619EB0636EF9
83A2F5D4F84E3A73A9D90BAEB4FD8E7B9CBA0E41C700AE570FBF982622AB4D91
696F2669766BB04142CC81B0FFD6090FC76554BA8446254254DB3CBF847DE6FD
0C9864CE0A177806583BDB770EE143B732992572DF52052A5198AF3FE2A1D462
065AF4FAE26C546CFCB5431B1ABD4392379FB08EF2E40B0321874C10F7CBBB52
B9284CFB35D60F65506D5C2ED7FF50922E77C4DBE1D3AECECF89C80A1A28B6BE
5D1841806B67CCAEF050EC35C66E779D3B3ED5BD4A068C832293746854771B39
D79C5043F07120E234ADA7968290E73174342DE5EF589FEC9D343E97F21A855E
13F66512AC2E3F98DC9418E03D335B9CD67678BF642BC13590EA2DCE2B5B3E52
217EEBC9C139BD1B039DD5F4BFED8C3262238D681C3DEDF4C24ABFDEE6BE838F
F685E060A704860FE080278EA81FEA79E1C786005140F9273B2A9E5EBD4CC264
4F4E16B7B5CA6C99546FD4485D00864863922B6A5D905E1C3D4ADE19ED1A0106
75EE6EFC384A3F5FE490E4C7D47C1C7A1DD0FA55983995958B4A8268DA458C5B
DD73ED4C1B3090334A2B134B5A9BE1B1377C51E351368F5FCF27BBA6F895EB2D
330C8FCC48B3EBDAAAE5494166ACD3D54ED44A6537D9B28F30D6FD375B3A0A6A
92B9998AE37627E7C8DC2F971DD2E13C04B580B8EB105CC02FBCBACA2D80CDC4
C9648491BE0BD9BD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5017EF863393113850793875697709861E50EA63860BCBD
4746CCFF44F0A170A875B6245B17861E28EC28D50FB9B75978D4D7919969931A
416110D7D81BE6B6F0862FE61618E8B5575F5FB13461FB79B473A8EF5C815A19
621A9BC5B1C703AB24CC6AA36A96D66D67F077FD6D0977E8069DD79D487A67EA
1D9A22A508EEA8494F7BD45B8D65D86C58DB747A2455B41E7CB3D8C64769914F
77F5C7C882B7BF79F5205F9E9A1EC74128D2448189FA0AF72A54105E7A572DF2
54355335500897F2123353CD23FAC7E2B86EEE2936DCFD6F0539158D3B883FC9
107AD8C633ECBC2EC7B55F467F12BB61BB5E69BA4A04B118AF10776110E31887
3BED624E3B07B6F315F241825ABD849980EB243937D3DBD4B158DEC281D83070
0BDE3C3A46F0BBACD422F8C2D24A8FCD9B5351F64D0D5C17307DB0D983B2478B
82FBBF99BDCEB4B92BD72F54E3F35A448F9B520EA55BF8D0E39D1EC954B803C1
9DD4F5B58C4D2012E04E630F515E958B699A14BC349FF6B535D1F2F28A9FDBF6
1B31883D9235708F3988B2668540D20345FA57D34BFB75310C38B48C2012E0EA
444924FBC760A5E32C9378F20C4F652DF6A4537FC25299BE55008332B6ABA853
046FF3647FED0AFF1F33FB13863341D127CEA81A0F8D82CA44B3B19D36FF290B
4BD1B807749BBF6077B8F99CCE03F54E22E2B141D5417FC4E56B370A532044B4
4E8770C72E6CDA1458BC8D2C258ABBDAB9638306F1E4C6D8B2386E52CCE80CD2
A5F47EAB3653BB035A95679F52ADC07C1FCD50B0605AB38637ED07E3102DEE7F
67FCEDC487CC1BA684FAD744DFE06470630DD70BA62817A18843C3821806D490
FAEA107416545AC5106B50E0674260A62A03E86241BE8CC3D19649FFDA86260C
21FD2108D74DCA68507FD0943782A49FFA176231A70209782C28C2FABE2E9DC3
B5FF5FBCD73D4CDC35C51C1A6BF36DB06935B7069D631047678177A624F39326
6C1FD8A746248968D67684AA008E584D6F6EFAD0CE1229FA6EACC8F803B1BAE5
50E3DEB059711ACA4063BCC8EE90ACFDE2BEEBBD6699604F3C012B354AE87819
BF154809BBC3CE6504AD10F5B9C5BD3403303EF07D80812772BDE4C1AFB1D023
950AF134BAE3E3C4B11007ABC10394B4FA2872BBBE48D39FBBBCA36A4D7C11D8
068C99EE9726665E86F2EE6166E06C03941A06C823C44689B3052C811A3B7D00
7B43C1294792AB776F76D6762CE8776ACD7FF59D8C2081A7E493662434FC1CB4
1480462E7AAA4A8B632550FEC335F88D0F84B298E4C3AEB8EA0DC73026391451
21F3723873AF986D82256E6040E36D082327E1A9073320A7A6CEEF557FD59D90
62995D7DBCC7E3CB2CCC52FCE120E0C550582728B4B0B61D0A24A434382BAFB6
81C71ED4409759831BE69338AE7B4CDAC828F352D78D090A76E2F5E803BFFB96
B0470EDCAFF4A4578DED5B47B37CD41C35CD583BC57890A52850E1766EA6FEF9
E68672F9B73831560302FCEB9939EB30374BA804734B99DAA3A73996076CE267
0950BCF9B948BEBC55838E909CD3A9D914A50D37BBD208387F1D358370148FFA
67FB9288B8A3EB26B985B62453E34DCCEF9B16F7E415C8F7B710EB417D26
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39829DC8A2ABDFC584BBBC8AB8932CB
FDFB9FB917139ED02FB419CDEAA892CDB606C133DAA908377AA57FA5E2A16FE8
F9DBC207EDEAA72C2F7D4B7B7112BFDD1A5BC950F254FD477654C63037748411
037887C4B65D8E1DBFD8BC7F2661AC6E39CB510EDF4CCABC332ED1A5E5FD49AB
7955B7A0C9770887DA7B5A123239565BB1D04FA90E615D06A805EF2EA704243F
B382621C073D18FEC9D5FFE44F8C791C47B490C8E3D8B586D529D30A9E40FF7B
C1C8059928ABE24544F41569DAEB26F1186A550FAC789DC46BAEA1D028891BCE
072BC4077D5280C8337FA283BB4340DDEBC4D256E13F78F42DDED30EC42990D2
D7674A62EACD13CBBB381247F44161A0539A035AE3749991DEA439FBF139A16A
553429E039046EFE39B6B9B33D252B140142EE927CE5E607C1F2BC03785EE94A
E63B97F0E34213A1B0A55054B02E9C5BCE6B0E9B760FAC62828B9B2C3BAC419B
073E6FCA10420F989127A04BDE01D71D3C32869196A7C486DD1CCB62FEC5AE72
4457E9628C077A0C7218B75BD86AE495A872463510543EFFE5DD50FFC2FCDAB7
133032D62176E87C9CE253A193BFAD2575B7B23BF4B47D1997E6DC26B83665DB
71ADF03DB565CB3278F5B72C3E42823F4F7EDDA13852C3D2523C98C6613FBB7C
5DFB870023C31C1FD013E274504CF62EE88454734AE583D443130A9533C9769D
375E5A0DFE646D603F49A26F9E5F210B120CA7EE5A3EFD38C40BC343C18EE38A
6E5EC1E16F206873FFBAFA03266BF0D28259D561A56EA1DEFC0D6891AFA3D1E6
DE83FBFEE99829CAAAF9FE809C13BE788C42E74A8A162BD9BB26137253BA8B58
1941E759A7CA7AC42EE55AE3ACF0B696E4444DE0BB3491FE84A6315E3725A28A
20C7E32793E2DDA8ED6D90F8041298B7A4C1E2A2D16FF35C3D8F5FD37B1D5760
3AF1ADAD3760CFBDD46FADABA26B5433D34C2AEB076031841EA0296AC711128C
794F77BD223CF144C0FDBF1576BC1C20D6A4CA7FF78D906699CB9C2B43FD2042
ABADEB88D3FB46627EADDC9F2827BAC12E0E45B310AD8C11FEB1DE5440585524
AD00C04BA139245E95B76F3695B0BE5FEDE9A0B810C0D8253B244EE74C47F8B2
0547A2ADFAA6E40432CB09DCCF5C286D5EB04E5A7D952E7167268B30DF26FC38
1D8D871D0D96566F0E4910D1712E7151AFFBF5AB2C8A5AF1CB6DBF0B027ADD1C
2409375ADE1F82292CA07F3948B726E9D3DC6F3AA19E84CDD50D789E56263362
340FBA8CA49B9AD210E2B4D77B4553E8ABE6A6FBD131E1691F749DEBB18A5B5B
90DC695349522715A6B6AF951007027352BC7C9612CFC105C8BDDBDDC8BAD0B8
7F3BA50D36D20926718FD37D86663C2F134BB4B5EEA3039CCD3F02DB45E13804
E3B7B4E4EE45019BA6FF7DF40D9FE58108584C65DAC1D387D9CF2FB4A626EA3E
546717AE6E23981338327681221810546F0009F98531353C9A8EBFE7DB9C9A1F
83F6E3CC814D6844FF1A23AB32B521C1A09010973B310CD03A0ADA22C6863683
473B13FECAED39B923980E1691F99CB068EC99B0F5292E5450773EE1769530D9
051181315AEF884EABB76C5B134E7E0185E7D5929C128293EEFA925E555E77E7
2F0216B34D71875B4FED0EE2874DF99ADFD2E19382CC90DFFB25E67F6FB762DC
D3C3A8C76F4F6F7298116E7FF68A8348389D3052344BC6AD77FA9B4CA05CEA57
E184293362DFBD0B5D90A7909896CBD0A038B6BA98B6078C9FCA1556AEB8E16D
CEE96FF74BE92989C382E8FAC254F543E8D3E7146C9A0600F9A0BE530EDDD8A9
01220A971045A9A8FC9239809D764B6036E658222897A77DC3394593C5B714D1
EF72E72786BDDE985D872823D8DDFFCCCF5ACABF850C801E14FB8153C749EF79
3EE03A1199D0A9EF4C5D26725C6A658DECFF150A9D0FD7AB1F56F507EB972BCF
356EDF826023098738D40D1E2F1976A39CB1DAEB62F9F7729E6E985765D126CB
E7FE55D3E2DFC75C0F145FBECF6A2D130D4840A799889CB9DCCD3FC716139294
FDE93AA5F2D8120ECA4E117C31227384B1C5B443F68FF78E4CACACDB36B7C4BC
FD26A7241379C2955D9BA1921169B16ABD7E4852648FEB205E020B27F5307E54
B6F4A4858CEF9F21FE9A561AF418FD9D6B8576F8DCC579206AA9F21A1C50D38B
556542BD5BC0BB3EBCE2E7C56E180C73756CCDAEAF24840E6C6A01AF6C1A517F
86D2C6190AFE9B31BC89297D17D4564C28040B982EBF82D0914F7C33F549D305
58B5E8ED6D88D23E7530C2BB5B2FADC5B34ADE0644C0F54B03AD9E14CF669C7B
38CB2D16EE53FCC59444A3FDDB80E6632FCB86E990AD1C8A0331513E0B6F2A90
442F6791C4741A0ED35AF47FF40F2DA0B75EA8C8FB72576304008495771DFFCF
89E918F1702F5867DF3636C4F5C221A18AC30E1CC4C35114DEE607734D0910C3
0DE2682CCCDB283F082A7EC77AB52B21BA9B8D4A0B9D7C5926D1B554B27D710B
5690DB1906123D94EAD0FBA00FD369A6D770D5E2564AB454896C4F5A393516CB
0B28F80FBB4E20BE3539E8B0B2053E697EC96B4976567F1CD02EB36342A73775
08BAD0A7CFEAA913B935BA91F1682C8957F314B2841067A0B618D05A149DFA46
587DA67BA7005F57C7693BBA2AA0C064D2781D90569A2444285CD25977A058A6
9A3A2A4B3708E7272F426F700148DD7894AB604C28617B853840CC0A296F5930
60E9CF41D2B8DC10DBEEE34CBCA920BCAD87F68AFC4596DA515B4EBE13E39440
508D865D378F10A4C2EA0A0F2F73418E78E3ADF09CBEE13320F45B230623DD99
4111A1E8B4BFF9EAB5E6E856E9F267F875B4722D0D4A5D123AA93B983AA070D3
45E6465A7217D0F46FDC29D08D6CD71B9E1DE1C50C1C3C80DC0D38D0E173DA61
3908C205F5A3D258C77C98ED17D144501CC2EDFCAABE8E6BE1F2BC739461D428
AC33494079FA9716AF8B554E270A351733DD7D909095F94F9168D5E922D2CFD2
D1F158122A3C4CB47FF5134FDE8B54110074C1BD20C7AC37A6D9E49F46CA0B3A
AE98A934A36A6C6D8FB9A647A4E659A1398396FC2E6B686FBAF266794CCB4682
E15DB5F53ABA109799C10F25FA2E54560FDE359110B43EA1BC0A15AB6F0C136B
BED6E020CA50ECC60F578360B58E240BE1E941CF7170EB90C3EBB3655EE604A0
A8CF68AA2FDB9A09A73FCB008956FDC4CE39D273F47AD369753B77981AD11AC3
15AEB0294B62BAF5C7D6150FB15D2C4098B97C84074D4E50B5C6606BB0F32309
3779848E8C0FB114A5EF5F29051B43DAA627DC0F82C3D801A66535CE0BD22F0A
312EFECCADDC8A013BEBF5823E24C4FF84DD8D86D77F26EC86CC5E3F6753451F
75F38BEE41ED4A22883CC403C4D9B3656E83BF407D06A0FA23BDE600F0EF9A78
F1F8F1AC0A5CA501EAC3EFF381B7164D5E9289E06D03AA72F51E926AE304CFFB
CD37501E5B5E2E798C94717B2F1204BBE9235337E807A7440E2851505E9EE817
24A19ABB7F1A4A2B8B2E30C66C2A1F2B54837EECF01D0A45D2BEE293F0C78F90
5B8661F462F417FC15EE7959F36733A994BE898B59E24FE4A96A8CFF5278368C
84661E8D470C8FCECF87E141E181D826EA02B66B0329667BDB2B79A6C97B54B8
BFE82A1E6D7F3FEEB6E3D604C6018E7285C9712F76BFD82B5151EABE73505A22
EEE4AB04EE89A019EB6E90DD5E9973BAC93A9F5E9254CF9DBFCC96B5155C7598
D6D71114D161E132C41B579C98D41C7F0A4307D118828992AE90242D0F4E94E3
5DA4A0F7F69964439B5FB64A0958C9563D5ED0A486644450120C3F241A96501F
5CD99DE77FB58085D73B58B500AF8A41AB74C992B5C5772CF93C53A1BAC7A6F1
E7B0AFF653300EEA1262851AD5896ACA01B2989993D432EE93A75860E50E304A
87227BA12221EC01667DAF458F8C2F61D829494BFE299ADC5FC343C598976099
5188D878A409AD0AFD194A1FC332D6C13A8A7B92514B6CD803081AD247BD97FF
24E27D8E64D01390E9E92FB6FA21943BA9C3AA45E950AF0AC5DFB99BD8677BB3
AECC0277307A20B641E77FE5F483A0B292DC132DC4ACB1DDC40507219F411B53
860AA33544EA46E23778024A3CBA9DC490FD77F0F3AA902CB69C4EFC52D90EA1
C3CCD41ED86ADAE9C01123EFAC501C952183036CEE800D650FE2CD2E74C03866
5ECA680F68E09A2F7C220FFD0A87F515305602A5C2C297FAA41C83886F346496
C6C69FF37B8CE078CBF61E4F68E0FB30BDE997DB689CE8DFFC81E504E8825EF8
CF218EE3A8200D7E9CE0E39BB063A88EAB6ACAE6375773C2FB5EF2E2C02F432D
79029C1D33CC910A48EAD6C66F4FBC0FDEEF00257025305004426EFCA8800CF4
4C3765B43DB403D579E475E0B2864CA02F2EAD32CADF2FA0F4243D324A598319
8F2A73CDBD54D8633CAB2777B16B4C3933695839961674CE2B5AEF26AFE67BED
48AFA802481ACECEE7243807390B2D12C844193569B1288F148A17EF4A4CD214
B123B2112202761FBF8EDC9B07E1DF1272F75C2009E475FCD3BD7A526CF6AA92
6412DF70F2E2D71D2B5EE0C3F03A603A161713216AF9784ECF1B3B44D9E5F789
B7877ADFBD0F5BF0D86E0DC7B685C96F36E9033E6406E6904C934DDF1025D0C7
DC12541D6277C7E031912478F16B0E889127D5F0571E739289F3085174497638
D4991FD23B742F56E4C380A99E72CDBD199524182A77418DF5E3431EFAEDAA73
8B59D64A9CF3077AB860E131ED9AE9AE5186E222EF53C533AF3B23EF66357E84
3AA41FD2A7DC0244ABB09915FCE4DA65A1A8A975E3345BBA213B3DF67C4111E9
564B59B724BD659833CFE3D41825336318DA007E49C32BA4822F3C035F7EA3B6
85F4F02D20814AD6BBE3C4364BD1C64F9C1F111E604C28FE4D8F7FF429F96D0D
CE41EEC1EA29EA44F05B21510CA886CF7C9901EB57D64512FB64B10B5F14F03A
058DC623E531EA276574CAB6FA3D14EC60A24132770B993A0E69D24DA292AB09
2D52FAA80F47282D973F4A14182C9FFC3941DBA940165BFB828779D087FB176F
E606AD96614FEFF85A48B3A327275F7C9A433ABB0C95B14035DE395189130541
860067282DB0F147D29B449C4AE85903104F0C2DB640246CE903048ACD0C8D96
73FE25E34224CF9F0BD77C9459D61FC212A9A03F9BC4CEF9E489F8A55397E2CC
27E11DCFA24B47253A03A99363DD7ED84D84490025F5169291029FE6675EEED4
9BAA5ADC54B61D31788E382BAAB1A6F637228FEB68807EB097161A36C20BB0E5
E9315B4AFC92C60F5FFAC84B383BB3549277BCB1D1804359FAF3CAC99EDB5D5B
8AA2D56A311120976314C02C4D84CA61D377501F3FB432D886A12EF6332152F0
E30D38E2B0F2F528ED5C68257D75A455702A4E56A3BE26B08264533F21C51DA3
BD92FD6CEA20D0649071442B2916EBCE5F4EE64EA1D4B6294F2A0C317554A76D
ED2743FC862C057CA6CFF840B8607ABC3EBD65B115CB8CC353243684692AC93F
B94B7B4387ABEAB4935BD57F48DFDF2E1D79D468AF606BF5E7FD4AD8D5F07BD9
3BF7D3B878829E0C4DD9D52E661F9D677552B91A9CF74F2A195EAEEEDA16C986
DAFB6EBF727A6A212D64423CD27DCC76148BCD2C4822069F778DB1DD2B545FF4
B9938D2EE9029BD66526CBA33651071A3AEC9EE2CFAD51447F0D660BF7CFF7EB
C4AC5F1A8F295C1CE0B5E19A665BEA628E5C361F4CA0CB898C7DDA5F3469BFC4
1E342FF7CD42F6B821E75DADFFFF1B3BF67B93BE909C4403FE3258790FF1B3FF
67F4C95EE04F26E89E6BA8CDE849B5131E19307559490FD9016E436A37B0E8BA
DA0CDF82AEFBBB68A59896292D0394CA036668487ED31BD3A28222AA123D1899
3CC91FE947C21072039C8206693ECCCDA9E0573B012EA2371452E23091C65D76
AAB3B0B47742BCE71DD7C45456CB361F3E4DFC92F8E22872CF885EE39A4B3C39
56E05DA1D289D470C53FBD6E3F72660ABA559E24E4B72843B9B33FCFED37DA3C
D95CD2497612D381C675D9A9522AB5851F8574AD1CFF3581FBBC1DFC0471FD9D
9965F8BCC18F2DABFE741402AC62ADC049DF79AF344649073B8A3EEB12EFB77E
7AABC37F57BFA2BDD7C2C9BD9FBE6E3E609D282666D71108683107EA60C6A28E
77E04715E42D9D1AFFF7AACCB3BE5EF63B1C4E79B49BEFC4B0D19BC149031115
0931AED3497ABAA74303D3F33196A536A97D54E9EB5D2927F8DD71C97EB8FD9C
28D2071989B454CA8349B2329C5A797F0A3423112E4E503A8C0336F6D2D3789B
69A03FB214ED307DE954A0C17B7ECD8A92B9ADAEC8C69AA2BE70170825BD6129
57547A3094786A8B0306926BEC3DB7FE51F547AE2491020321EFCC75626861C8
6A9C0BA0E70C944B3B21C74ACF98CF87A13A3A9771054905A58B78CAD093CEBA
E2A634118B8C09C04174BAEF8DF1BB4A1E1F848C1A517FB4BBAEE932D20D9A5B
4779DFFAD7B3E5D447023D6430CDE51DED5D856BA0552233328EAF76A6EDB56E
EB10F8B10A05A9D138E72BD9E2665DA9C303BFECC94EEE7BE5AE4670C0B0B61E
3DF78096AFB26CCC42235A2FD44879889C41181A1A43904F9F067ECB8C163606
C3851355ACA79EF5C5033D4E8249E496E97C50334C156FDD2F9219C86854E96B
7BC2F999ED7DA6ABB0D7B1BCAD280AD3A9D3976BA027B720A00DA9C73DF0C7F4
51EFC226CB3BC41B415182F40F523CF0D25D0F0805B0EA04ED10F3D442573A56
648C90B7045990660E66A45DBC1BEE2A6CDC46E94F4A4CC84D6B0061E704A7EC
E39370AF0A1337290A562AF46CE779A6419D0D0B3FA0CA60A2E57AA31C1371F8
C279D4D20917F7D5BF3E28B666F7D0CAE721AC37CD76176902336820FEB770C3
7A73C47B1F9E2579D68D0C189B62E2878E631F5C4DA4DBBD11D9ECAF2A50748D
283FEE7FE3A07D3D31630329D96C037786FDA53FCACCB9944666479515F18D68
DFAEFD8FA77AD87AA1C81AD58DF9B01DA91D7851E4853794787779F7699443E5
6F512E3CE8C856BCD307E367BA98CF908FCD532F97CED47ED2F24D460DB6E438
7C3E59360CBA00608A4B24045FB082AB4FFE58DDE52CEF06BAC99377F4F84DEA
4206B65064934A603EDF9445E252B45925E649AC3F7C555829C9CAF71C5318B5
90F403085AB598810C37376F6DAA620E0018E4F64A28A14FC7110CA8215BE167
083176AABDDD13A6A87466BB5C0B2EE386115A250D2D670BC208A6B182ABF207
C39015F46EF1CE9B3FEFE3946CA837B0FE2E97B6A09C36A90A7C7152C017533B
7CAF2195E89F96FEAB7D91BE5CA1D916A37F3712DB734BFED217033FA60D3867
F4BD9400FB763F4290995A187369C0ACE19F3B608C08812A3F39074B38314D46
262F0331241D87492D92E8936325CF2A1028DAE565C7932B3C509D3B02172583
CE1449920F9A073A595B28634D6A4D485945A5459ADB92E9EE5714245B96CA48
FBC57F1B0A7E8F6FB6C483282DE613E28E0AB1E663F0CE856A4417B9F66703DE
69A65DE65B00A629EF3A9C3B0F06189F3EE6A9AF7CD4F3CE967C1D58574ED104
21548E755BDDF366231814EA2F97D671F42619D5EA566C64D2F5A6F86FFB56BE
A2760817D5ED26453AA83AB1657ABADAE9167959F00EE2F085B06BFE3A6E2602
B80A9AA41F4F241E237B8B95AFE807D313E1EC751F76B0F9D703994024A32148
77736FEBD350E44D903229357D3C3A6403B9A7675DC69ED861AA0478A60D45F4
AB99E8207FFDABC084BCDFC2A202F15B5E590EE0FABA328CD416EC3874534612
967AD795497F72ED1E0EC564B0315A92169AE858D3975C73059DF8D9FCC459BD
DFDEDE3716C5B0A87BC7ED856A77E3AEEB9912B64A51E6196A0A83F333D76A43
C1AB10951F53D733841C6847317770BF24516D1890C856632FA4B6D70B90FF0A
E61962E3E42C2BB3C481C676B3BB029368632768C2988B90A5276DEFB69FE32F
C2649522985C27941C58E4F50B960DDCF9BCF1CCA6A445A75C92ABB4411AB26F
33DF25E345CF48C5C31523B52641B2281242D1E853972236127444936368C955
6F3F88B809C282A76AD6F3347B27755E983869456FD365BAE24F737E9FA5DBC1
CBFBCFBB273C48A5C3B06FDEAF2A75E2CFC5F6D3D16AB9E1B59954F4FC816740
45257BF43591473F853FE3A2A43B7CC317D831443533A897C24862EF358A3719
66561054F7CFB5991EEC5813CB2D7A47FFE389777C340C370CB8C93B08A62F06
CD569E5C6147F75B3A9B3DE7E230CC48F8B901526759FF7E2C638BBDACC51CF2
238AA4063C79E89525A37523694636BECCF3785F834BF8978390F72AB65858B8
59427724D09F8031199797F4CD74B1477B93807D36B8C8B29B24B3EDEBB7657B
53F6284FFFFEB953A66691941FB3973E9829A8FB165849BE95E957EE45E70BB8
21363368D41EF321F1FD66953899835A459BC9E1BC7F215B5237099933140495
831EA69EE88BFB083ED00B07F9A20B71902AACC60C6E686C5DF84D878810964F
F5E53F25285B542F3130B6AC84AFB5097DE8A1575447CCF3BB6A6037A00FF18E
EAC5CB32B7A54B5A860155B96B4CD17D25C1F6918616CE476C10DA7B5172C8C7
D6DD63223EFC56D5FA82C1822A63099023CFC67DAF6DD7825A6CBD56048BE394
3949B1CC8EA78A44F1752C33E6FDC967E75503D554FA90FE87FF6A53EC887E5A
DBDA2E342B4285581F903204BE86B52C36257446F7028F75BA990750461013B1
D19A1D63FD3E991F107EBD930EA8256B796DF56EEB39D30460335D0C09F3F3BF
481462384D0B6BCA5C7794423931DEB499C71ABBE9D6D6EAC709B039F529F615
707BF2D2151A145089EE5E695F38361FB563378D8C5CB7F8729D436B65B80B3C
1466558602238917E270FF6B92A343F440E91D043F813894B63BF8D1E152C850
8D33480C6F64935AD5A9BC3D419DB02C699996D6947840CC115F91F9CBC391AC
7A292F33970B845939275655F39F9C368D414EEC20824BD311DA6C6C20D11266
F7913970C783EF6D587F638339D524293A5DB3AC79055A14E1A2AB1902F879F1
361AF8C67E0815BDE6D5431809F175C7567728FBC797A6FE0A062603A2011422
48276B7E4F8924750C8361FDB1FA3289E4362355320AB4F3E3A84E4B60EC6CF5
7A1A00F90F2375048E3A8D6C39E9D913191CF13B665149EFDCE931C977EDC546
11D9D515EEBB7192C63D22D02BB2A5A2727020F9904785BAF8FC671C636947EE
42F1A0B83CB645BFC4DDA7C6BD6348B96E2B9A86644C798549129F0F2E60FBD0
5A8CE52E360EFB5E0ECF810FFBA9BDE380B680E5FAC2A16877CD65721C6BACB5
F7EFA130EEDBC421CFAE2864DA500C58AD8EE472B30B7BAD8B85CCC2020107EE
A4A7DD44238D0238534D64E7EC67D856934FA7BE4386501BCFD97654CB959F9A
B2CCB8752C341604BF43CC768344BFA42B5EB6D2DC10C1B440B5B316FA8F6565
B7C727701FA0C386F50D2C9FC7F252AD669BB39A194929211E22692E464DE4CD
3E76C93397F7998AFD5A64D6903D4F1F106270C7F476591F47BC406326CD9E79
E7F6B3864704DA68A21ADE7E7A457B95C7BC603CD8D9A6BD6653D34E588D6723
C4036D41DA43164BACC8ECAC6EABDE9AE95793C16412F1D6DCE02BC7B485CC10
8C6321EBF1C4AFCC4B0BFA4B5028811DEAEF9BDD2CBEA2CC1E4056559FAC8F70
3ED627284A783F001789834F51A623C6CE60272F54E33896A851344E2E55ED6C
20C0FEDB79EF058A57FF3900B6DD28F30D56D1DE308C49927AE04C0CA35BF24B
4E3064C94848582E13540E80A9ED419AEAB12423D1D4239C57FE699CD9F0CABE
EAEFA2A97D02C82012C1B06AD2AF20BD41F2F3494B8EFDE6E198E7EDD8922C0F
3C2EFD607249CF57E563E6D21064ACB65D4AE61083648221A3CFB976C9151056
EACA79E2258D77C264076812DA2D9E93B77A0E409B4D5E17600E1E43F5EA1F88
49381029E35D3D9D3E3E559A5B4CA4700A71D0510CEFD31242058A655C5D91AC
7F8E69FFE57EC149A6A210BFDE7970CD30845EE4C7FF49F8DD75F69BE6EB53C0
53EB516EE7F2B9575AB7FE3A531CA0F144C6C508C1D87CA71554883431FEA419
BBA8067C6D0E964143A0906762197B8A44AFAEDF031E76C4DE35D408FACB8510
AABB489BF46C0B1928AC2595BD123E8C062B8D1A9E1E0D8BDAF66CD8553118FF
4A412EB9E00603DA2CDC3B14EE62296357FAB4755D4EABB2794D20E516EFD47A
AF5F4FC227188F0BEC1018E1F8970A1B973B06531F2049D757345A692A4B8B4B
606EFA4CBB077034D588198BBB5D13982D6EB24FC9D1CD7E601A6BF46D57B576
A3AB64998A45B8254495F63ABD094687B76E2D4E16BFBAC62ECA4C3EF29948A0
9A770B0C3F10080C12CC74EB8C5288E168E18C8694A1C1F6243B84ABBD62A8F3
154F6D56C82622C4B85FDC0487AD65D279FB914D02BEE1E5FE8B17B7E640BD4F
01BE6E3E2654AFC64543D4BC320843A4BF30E82A78D0E0AFBDF4CB3EF28D71D6
E3C1C44B3C7B37E03ADFF44DEF32F8BE0836388BDC7AECC01062AB86D4EF61EA
4CAB239D225FCA484AAE98AF60C2AEF608A1119AA13FB6FA40C4294F4B508A31
3AB9EB6E4911FC465A7F3884C477F6AE2425B46608A6BE41828C3BF2FD6FFD34
3AC0B6D43603B50A66D4F9D8446E8BD3500489A6132C0F36D15D428EEC771D6A
52EE169C6D6044F0629A5F980593A1A0EBF53D31855CB73E7A7A981C9CF91743
22CC22362D93433ED148261CB849B07F5777B063247CD0F1D75102D7BEB07D62
9D7C8AFBD8B07C313A040026484B57B4CAD36A5FF35A679809833F1973860F73
6620D1C76A574B199F1594779792949BE7E93EAA719F777413E900138FD04723
6B96A01F5A21C9DDD3781A58EBE5738C446C51F462B877CA3CD3573A884EDEAF
39394589F3372502D683BD02ED11AC0C6105BEA2372072096958431641E18570
C8493C7C0F67F783F02E71203124A14BFC52E9210C8A69273208458C9A4495D2
062DA1D8F6684D096AA1475909C9766B6DC5FCD4062D6C332D20AFF03DC811A8
503601BB254EA1D0FE0D47AD8E7849C5C3EF1EBE917BB0AE076E827EB6AF600C
4DED19E2BDDB4B950A113ECFFA56DB12E0BAECFE3ACCB88E5E52DDE2D9118A17
47917E6A9F23F06A50EF6A2BEC069187F54D15342F45D4F7750EDD284E052F96
C1AB2C7AFBFD69EB36665C7E12F29EC4BB735B0EC5A1CF559D2ED72E787FC95B
7327208EC71CFA4B93CF1219563BADF2CCA50EBB691FE3A66334F85FAFB7D8B3
196A5413A6322059418450F3C51C6F5B8FE3C614ED1E529B6477A04A0A7893B2
E7D3B5EA0E324E24E92BD5B514BDE686BDAF66CFC6B8DAD5611AB11511FC5460
D1B74E8018569F67C865E244FB22B99E4297887C5804E269C7B61BC71CB86A66
D2262E4D10F3FF50620AB8D1B8B674686310F635AE6153D9E18A0514882D4CCF
E9D577EDFCB5F93AAA169C140A332092187F94485C96847C65196222A84D10CF
5EE66EC13A71302C6786D05D419570941EA9FD8FD240463F1A7D0DB3CC639521
7A08454236519E3BA9DCE374762E175DC3DB37DDC78AFD3662E45D7A6609D033
D80A82CC481EAD70AADE0E2676CAC461FF0A0BBCC5FF8C62B894E007770954E9
957E64833D61BE814FD59D491DAAD25CE8A47AED7DFF73B314E40001502CA548
6A550A868D0C17E5861E79939718243DB1F4518D06BBCA66322FD2062E1691B9
BF3AD43C472CC041243854E56C56A2CB0297E6C99E604FFF638C9DB5F9E6E36C
73037ADCD10E8F00818EE88AD2EA98D6B7F1EE7B9121E2AA49C4DE54A05AFB1A
A6C7CCFBD9F72150DE26B9145A430DD247AF32CD1E6FB3E096E405FBA4E1DEBB
11DC4D520D7684646F54CEC76AC98678B54E6E3A103882F8A917DDA7F6DE559E
13D64772A5BF9D2ED8069FB07F129AD1F0A7DBDB89D0EE3B243B5D6552D7189D
4AFC165919329BA90A6860DC939E6D418E4020AFAD9B94D2E93040176D66D31F
4B4F23B1370C6929AEC2009D38FA1C6D924EB918AA5E62E5A3504028501C9323
EDACAF44D84163CE8BFC7E107366EB901113730D86C49854C819C715EC61593E
C32F0C344B0DF25879638250E227FB0860BFF25D592ADB01BF6DD128E980A062
580B9FA11ECA9BC82B1F6DB3AFA1BF4B117E4BF697898780190F13590377BCE8
CEEAFB3D82AA6E3702FC7D5A8BCDA1771DC481C4B7DAB713D2A0DF3A2C50C77A
7594BCCF6F2793AD6EDD0975A2DD250FBD151440F4C5CD454FC67C6D401F20F3
F6D6B2EC17F6A56159ED98B450806EC9100A418DB9AE0C2C09CD85A9D4D71E03
BC8B89881DD509E1A6263D0E960055A88EB090534CD23A881E6D86F82C0A23B8
02D84E131F8CA382D2869FCF0F213036AD02BB07FD43A80B456F2EBF2705ECCE
7B2ED90343D23E006ECB282843AF8B09E25384B0C3A3A15EDC6C87355C5F7C8F
822D172BDA923F93BEBF07575429B6988C81065A6869DD7CFA5DA29406818345
9B1E9CA73B17DD9B8D910E195BC8D397CB6FB74220158EBAAD27211EB43A348E
7E1F8387378CDEC17CF4BD5B6DCC5F7E835C3CE7D4454AAB910C941F0D5DCD70
D140B498BA43863C45D94E6642DD04CE6ADCD6EC46527591BFB94442A0146D8F
93A35D8AA213A4CB71BF23B5C8302500D3F3428D883D166829B22392013967BE
0389CA1678E09D9D2EBD374BD0E2F84C30594FA0013593706076D62F4C407BE2
52B5F31039CFF52E7B88FB99AF0D7FA4DA1316C3C5279767142D132F62ECD036
0F0DBEE5103EF0D1F9C81661BFA5B2216D70B914317B63DC721E0041BB3DDC31
72FEA590380549E139F004BAD8DA99E95316FFF4261FB4AB31058AC27B6BF819
7A9C62C4DDC5ACE95A878698528C4C0E32E2C73CB8FB5BA1560C188EAADF0DF4
49FB9D09F917E5CA703C7E95757EF0231FD18090D6EE761B5AD3510CB3E47EEF
53A54C25C501281A34BBC6A4F3702C5279D4C414D751106FAF2680AC14C29774
6AD019DFB4D758FD83A3B8E481D52F2F25C5E2BBD41E82C1E2B1EA057A0446E0
A67EBAAC0D5D477B14256AEADF217F5E4092D1D03ACD2FADCF15D05FAB004061
DF4EAD87057833F9CF3C9D174083F0654E4536283A37FED454E6314828E3007B
3FD98125E92C589A89847F8EE4A2A279348346C7BC326C4FB78A42CF0523DD7C
44A82B622327EA30ECA42B8CB89314E8AE0CC6BD7A94E27270B41AB70586880A
7EEB24A6834CC1EF20D35C7568464EF04B9C181469011AAE670824824E07500F
DB4E931FC6D4955C5A3FE49EEB6F8D14F2825BB615F3212E6C4E3BB9EB3B83B6
CC6F8AAF0C6F28320573AA060EE983D239A2EEA5C4BD054A6A9EA3698E3F7164
0E12C1E63CD0B7F53872A094C4C437D31470F038E8AA2E99EACCDB5FF5CB13D0
CAA24DBEAE0D1090E753792D3D570C3FE0EB837DBFFFAF3B888134AB38B5B3BD
C9B12F3A32A0A371A51F64CDC4E06F544F2055F67F0ACD48FBFB10A129D41264
A039D4B882FFE5D7E305A01C6201232741AEDF05CA40B85CE365D038C5388226
AF3FBCBD07B29505DCBB0ACE93422A64DEE8A6007303A2EF448ADB072AFA3E5B
EF8D7B942444975C89293EDCE4112DB42A01C5AD3F37F3C0F8C8B4CA4506C340
119CB44204B7F0DE0CD4F27C4A3FF0D14A8675EC3960AB889AB0DE952938F78D
98C0B0F8D853A6AB8D32FEDF1A11073D679758F9980EFA491B29D5154B44B923
80264962BB765357552FF7F66E79D3B2B7687683D34954230DC6E93A7772A403
89B0FEBD0B26DA3B909CE9A4FB204D7735ADC8F1BFD0D217ED437B23DE309A36
0FF60CA82A8251BE56775DEBB6FE7AED268986B789FF758D29DA2A03176C9928
6D6EDA20C9BFB9FF931ECEEE556BCC9C4374EA6B2CCF8EB0F316B59E7BB99EBC
7521DA5BAEF8AED3B848E237235F14B56F8E0190FD4FA2A0A6266B9A9511819D
1F2BE748FC6A6F74FBCA5445D5B4F43726D9BC891653DA61E19C69C84B6C55AE
734229625C964C5B35F141AB733F876B69020CA5542A08A0F20CF0D414B21E92
1D3428973A1FF5D37CAF0A6745E2671BB52F111E83C0424B11F8892F7269E620
CD953D5133D1C98E13B084100B7D9AE860BC8C7FBD82FAC01F1A052E23208E6D
3A4EB103794B8FCD7883777E9EACC193E2695AF1E24C3317A0A8B6CED729630E
DD89FFA4030AB14589EF2B3A7139B5F7C13B0475B92905CBE963FBA4C3522B7B
86E802E6EF9A696B4061A7AC273237F727101B22A9B10FCADA4FC498237B0CC4
D5E3B07E68CD7A79F2ED132BECDCFEF7C5F0858ABE00B6AFFAABD5C4F2E07F50
B303B521BB77826224015BC12E47FAADF40A21039A8C357C7563A352C8452DDF
C7AF8704C6EDBB7B8F9A415BBCF9471A55540E2F67F347B370619420089D3E75
5785915CA903C608E3411EB0F0BB6B5702C11E348E723AFD17D0DF0853AA4725
55A7621CCCBA123B2C56BC241C299032AC80973618C18750D1F53E99C2AEAC44
D55DEF78D9A544853F238E8050B70EFEBD8AD70CEDE51740197975896E365DA8
1E69EB693DA9BC5CF85A9AF13F391A53EBFA1F9FB30A7911EAFD2AFC89C67CE4
3E21557EB46E13C46768932A33E78E07EA11AE62460AD9DB14FDEC137436F390
4AE7A59D15B2EFE1B8C1E1DC8F88B83A7AAB6B5614290F7EB547F71F79DE5E98
F9749939BA747C43B4682F868B604FB505DD5AB4FD554AC669F47F999BF6FF6F
AD942055FE21A99DCCA24815726DCDC9C379CD3300E3B358E406BF235045DE97
8BBB6219C8331FE861731B7FEBEDB8B8576DEFB8DDC9CA514A8B59C3219ADE28
4988B48FA833AD0BB5CB1B7B20F25C4B46008250CB01C2FBEA004B03FFEBB8E4
8454433CBC3AC56100EF0A502503A8CF293EB8A31EC207A0CFC7CEB66AB65226
643944E1C0703D71B4FF24E9A43AF2209EA8B684A00E7C357AD1F8B3DF71D979
E5BAF103F15716428613D0CF64AC5BCC7ECDE32A697F4A8BD9635311108D162F
9B7210012EA35784FB26C6E56BA3356F66D123C08884E9D27DC1FFFC2225508D
3091C99DD2D487D033EE9A75B7ED9E43439B69DD3F60EE977923FCA3E9841912
9D89B413FC97CC45EBB8BBD7B3E4C847805CEF8C1123269E921A37828C15BAB9
888B7533543080BD1EFB3B434B8889200F6BBC4367EB50D31A81CB83EB67CE9E
7406BB9D7B508463DFB309210912810FB9B7C8B3EFC20130227EFB3681CF7686
1C9B7EAF52C79F8856D6A93D743B88DA53FE96B5FCF10725251A3F69EADA068C
065E4F451EAE943FA14C2064D3DC7F1A780ED9C68416CC426DB410DC4C7EDB09
6EE0B099F4C436D7CE5F7C0204669F9181AC287A4E69D81BED82B04FC5E3C0BC
89EAE614DF84D88939FB677FE3C0FAEFF4DDB2C6690E945AE88661AB666F329C
F3D929D1CBD7B767B02D64F2C1E338E66C72D1E164B9DABD5ACB8BF11769DABF
AAE68253CC3609E3464B2049DB66E93F70D3949A378441480FDDE26FFC3E317A
D241A9052F5CEDDD8403B33C1A1376D8CA3993650405C27308ACE02DCB5D4D32
330B5FDE10306F5EEB15401F781F57D303D34A3816D539724F646C6230311A47
22AD661532E6E66ECA93109E631EC85505EACEFB653CACF1A3512B8FBBECDFE1
ABA0F78067D7E7E25E5B826CCCFF32A7372348A2A52EABA3EFE8F029B6A27472
D063E79F9F9DA5D5D655A2D546B3C902ABE758BC9CF01CE3AABCA507528CC973
02813417F903715FAB24D2B59EC668858D9773C24E77422E58617414EB97AEC4
2E6598BFB30222E9543CF5D1783B9135F5CC2B9CFF0AEB77ED7A2F852DAF146E
0E3DF4305BFA340F172B91736BFC0DFD89FE9B624E2302512C82F30EBBB54DEA
F0039BFE4A5C258C6A96EBFA86A669F671B2056B5206CB2889A8E48DC5F70C2E
005213489EA21075A3BAB4C488358201DBF2007D6DCB2A974E04CDD34141696B
AE8F8DE783231C19655ED8657CECEFF08ADDB19E494C72ED471DF049D3805DA8
A26E25089ACB08A44D98960FC7087A57F37AC8EDFA872D89D3CABE40269B90F5
BDF24EFEC8F72F9599F1CBC86517BBD88CC04727DF5EDD352941843D1427F788
CC95FC841BF08B0504B289809782A20FB115E3B82E1A705D5D3CE6B31ECC12FA
FC9855F0EB6321A05D97D4FD34F0555F31014010DA87CAF54BA740F5D7BEBEA6
BEA39EEF2384B98CE96563219F82D9EEAFC6F78AF8033A6885413A14A3C091A0
4B5E38B50709CA21A207D8D609336547E6B0D1D66B10246A5F57151CA106F479
74FBE8689B6366D97CC68B9722879682A8D0D249B99B41BE0E831F386F188A72
49646C976D01348C5603AD89836BD1321997EFC75C880133400821CE772DBC5C
5A43E7BEEFA15409B46A7D92E3C25A08E7B7312949A8DCFC327BBC993884B350
51B74D0B75C69715BEAA2DD27879107F8EF2E8846A2365280CC2DBEC2DAA1373
54EEC97AF70082F0CF5988D1E3E49D0E4E5E2FF1D7867C87614EDB6FFCBA617E
86EF67DE27483063D497C40433CACA00DD750D3070B05FB1D768B1555C02A865
D930633B6D5CBD885DC93B1C8C8E7926F6D8AD95904F0766E857E9E8AC1C2DD5
D792284965F00F59BF602BB2F8AC2302C08791F29A7831480E17EF470AA749FA
5C95128FFA8B1F91DB49F181F0A15E0F04FD0D8236E1A71A2B891F9D1DD122E4
22C56FA420B760CBDD7B2C733729F73CC28A611DC4C2E1BC144A050384BE9F03
41A9D6ABD1D1C3EF8596F7AB33BB012A3C07CB4D025B13F28EA99B91AC671FB1
EAFB497CA1F12D081E367B32E97DC3F9537809B064061C0AF31048313B72024F
17BA4880EDDB3BB2E3E6410AD33B1E67AF4ED42EB2FE7C11602CB8D4C3AFAF72
544CD891E6D191182DECC9EAA9292428B9368284EDCDE7B6926FA86E486168F6
F9E64E2EEBE0E82A93C1D6CA5EEDA4FA3059151B9AE277FF0140A3918609C50C
E3EE3122B527774A74ADAFF7E4385F1669CC593C7BC83E9BC020E8CD317805BC
D8B6BFDD4E679E31924D4E1DFABBEC8565721AC092EC99B2874E64D623A242D3
BB60A2547B6197AD1CD2F10655F252EE0F57794C4048735A142F1F8A056E36BA
825279EF8342D9F143F5FD9A57F118832654F6A9573DA5316E80B7234B05FB87
0EB84DC169853BA79EA9C6F3710F8DB8546FD355FB89BC66D44D8B91B13FDA25
FE08FB15029303526825FC49C16C9A898B3925D4EFC5D8AB5BC6C7221FA6F4B3
32A39D8AB5FAFCA8AFD56C4137EA14AEEE4E7A6AA128E3E5C547B8E549D546C9
A9B4D2808F29169C7BD22056680191F3A1ADB8F1C659114A30BFFF16029661CE
BE99A14E4CDCAC849831848AAF69FD79C9E94442F6AA497FB4578979BAEC8420
B38A045EFF5B643C2AF92BD0992396D37D2ECEA393A19A496844A5035653EEDF
84F0C0E61E6F5E9A57E71C21C15C1F5B601501751DDD670000924D3BAE8E7C7F
8FC7CD159DC7C72517CAE1994A0A790E475C4970E8110926F58BA375285A1ABB
FFD5A0FC0A6DFE97CB69935BF6714E57C8F6AA9362E8A8C69E14731135956DDD
CDBE68EEDE7B8CE4A1877F8905B6510B6F6E1D1301EDEC317519942DBE0D1BC7
AC4FCF1C07174122E4ADF5B4E4FC55BE2F7EC3151F50BB9D5C0D6ACFBAFA134A
EF156FCF5F31DDE304F2498F905D1D74E554B61CC07CBE50364D22308E5AF4F5
EC3AE71C90564DE359480E5EFB6D36F83475C1F2DA4318DB4204677B4C30652D
A10155F9C015C6465320B2FCC6CA510D1697AC1FF0A19C372A97332425425619
F5251850B773B9AEE7DF52272CD37586B127F77B1F35B8C1DF5D27D2ED7271F1
6CE4826618615CF0C9B47B682220859C957D0B8DD0236AFBCCF1DE7752E539E0
5E025879F07A7B91FD0620414860832D64B6B903CF4DF356E07D94B187D72A93
D1657A26287DEE4AEBD025AA43BEB2D5AF919B0F1319F97AC674FAC94B4B4C64
1667C1F3EC28B64DD988B9E0997FF62D541EA5A63FCFB59363E4C0760F844F41
5A1DC5C24BC90F1C2FD7E189206F6568173F5F63FB0900929A29FC28C508A732
16BA87955AD8BFAB06A54F4F90FF43CABCCE04E27E3D9DABF95CE121CA4D90ED
2A3BE29589302773F0C3AF7814937B8131EE6D9DD3DE257BCE8310E10D20CE86
7EBB06F521A3FC67AE07C209D22BE1D9967D97CE7A2A595A44EAAE4B41275DD3
E2533A7478D769E14C997C6E6E1431050FF39E9584860B8A9094AC151A0233BF
7261F71F71AA9BAA2F5A51CD8F00B5EFE24615398E9D3019629F5FFDF25CC4FC
FF427BF7BAD2948665E1E90F39585737DA43809AFACD057F22BF21AC407C9ABA
2DE83627DEC47D428F6853327DCD1642A1A5EA45746205A4646DB9DE0B58B4F1
33F0C681660AEF47D1C3108C52E060A0EEEF6C4A07677D731CDFB525ADEC7C68
153A13BDCD9E7A51017B0C6634FF36CBB78E777FCFB14542B12E665DE6E612A3
67C7F83D9B595DC4936FCC04608887B26DCA26247A2D23E1068AA8DC79108084
80E690BF5AF5C1D8EF063ADA63F3351D5E8B2A5BCCD284480A6EEB733A86B002
5D257624B3EE5AF27821BC5E269E93A593B07E400E4588FC361AC5665380EAD9
81A1496BC7E7B1A481BA05ACE053E8678A6BA3016F44FA9031CDA437B6B7DDAC
EEEC3CEBFAE16E7692E2E1E4C977D348840662204E89AF4C3545401B752E516C
4EE02AC8ECD4A596E8A9BB6FDCF087225EC70E8FBBCF1D7312A044DD445B8413
954EAC0558AE284B31CCA193CCEF339CE7D928D72A21FC9C26F679C06E69FC79
87E3727EE06985E1559ADF6B9881B1380A6BBA324DECB086CB36468EDC8CCF17
E0FD802299AD8D2060A7DBBC7DEE251F5A95836910507C14A2AEE355D5A9C87F
0F05CD794A1D589DF7CB8A34F688C695DC8742DEE43573C577D5325DFF081F93
AFE171C50AFBAD5BBE9857B1C742C776B7CFD08F63692847F62CD4ADB2409AF2
675FC1164ED796F1D4247FAD4FBBDD4340D41ACFA5D033E3C4634AEA50366FCD
79C358BA5B97ECCF01AF04D55946B20A28FB47181F54C06A07455FC54C21C910
14C9D31B5743A9D4FDDEEAA012A9A0D13C8F1577E599E5C74B3FFAA3D8213BBC
E39178719901521285C4A3F84BF908A50694AC1494ED2B83627E52AD3719B56F
9CA8502643A0B368484CE5812DE9E912880503C049CCDD111159FAF24A2B06D4
070F65BEBD55BE68694A6A9CB253EB68F06E4351E6B555A0FC49728867EB1BB8
85A94627CA7332E5039A2AFECED5886360879520CB23C9F38C828F1FF0D6908E
83B70B62818A492D5D6ED415941D11986E79D659E52BDAC411529E9B5589620F
8DBB1879DF2F7295C2C0D86002F508F8812D863C96E56054DE2D89AED7A4B5C3
29365E89AF740105AC3D461ABD278CE57865184F7B0295EA8423C7301B1B5518
CC3311DB3A631D91AD19EB59A53C5FC1BDBA21304D56EE30EE187421E64CB82F
5FBB9F4EF20A7B60C4E02B5F3A7E020B6333375916A6DE480121EE0E2B1FCF7C
47D6D7CA1D2242D76F1B9B57FFF157D5B7341A0409540CD2E6BBF3CC3A553C55
AA3402337C6C9B077A033B01F3B878BF84C539A295D808662B7F771B08E89597
394FC627C1D48D5053E281282382FB1854E231FA57AF898828D406A9B4B730AD
6AA1E6EA6526DC9E6ACAD5C3BF8A710A65C483691DB513C6B8B65ADF2A2B0BC5
6389E2CA7EE086CC4390681BCF11073A52A652C18F38C1E76C9D065EAED9FAF6
9534CA6F37FE91CF21BF71A9FF5BC59DF45EEDA82EF08DB88DC98F1F520601CA
D835C6E2F24738787276FCFFA6BA6210D754CAE0B48A3A5149BD8B149073DBAB
17302607231BA9842180F7CD717CC5926FF60CA73946825157B509D69AE583D6
62485C279FCB165EEFD39764CFF68C6EF2CB22A70A59BC6677CC095B22141D19
2143FAB39DE2D2A4C48E0D8C4E450024909E5601B03FB5F4776280F669E93B30
BCC7B4F999BD126D2F0B0AD9269527D01989A45B5543596F832A953F8F0CF61F
34DFA6C0EAFC795EE82FEC8FEA7C675B171F8128ACF24AAEFF7CC1A15DC14530
341A1CFFEA243FEBAC6BD4F64E7BC30783A8AFEBB8E005813FC0D89420F1930E
183233BCB288D356562508CD79DF49E6640C80FFDDC6DBCCDF4724EBB07B1467
CDB97E2CE6638CC962CE1A408BB8A08636D375D0BD24552244F5628515DD1450
7E77AE90D3E126A87BC59A01D4918B62055B48C1D232C97FAF5D0498C4BE4D04
2DB99CA4F300C8A18E2C22A6A080AA60327F0E0CEAF6ED0A44ED94F49D90A693
FC75678D8395E6964BCF890AF67BFDE7A66E4026318030B9B7B1716E0CE125FA
BC912D3DE349465110F20137DA00686A2B02D07525E676907D8D6DC39D4E02EA
FC79299BB2AC7DDF81364B3BC12F0432AC2E5D24F5DDFB64B9D942E505202AB4
5200693D9EFD2E0110B640E38CB4A7EDCD4CFE74F914003DFAC638272F8363B4
36C5B0F17FCD985EA2B6872C8C9C6213593ED56FEC6D5E9E8C3F5912B8EAD686
FADD7D7ABF910EE4798D537E8542C599D4E6B9B981D190CEAB577C4EF72BDE71
88AEEC3E466AE803B3F782966C3D263538B5C97FBA29571000F99AA9868EAA6A
C9E2A3529B735031ED0B3FF53DE7A8FA45ECD89CC6690C900A54D9B875E95CA8
166B84CCDE9FB92FEF1C83D747CB7D1E2AA63F6ED520966565A91A5E52796975
CBF964EB78BCD800EEF2627BAFE016A3D11FC76133074811CA80D725B3C0CA98
68A1B4B066C40F22F2334343E08F63851AD5896ACA01B2989993D432EE93A758
60E50AFBF0212A6711889B9BDAC517D8BC6677CC095B22141D1B83BDF103CB1D
43978B1B06CCA7F5E45D7A354BFFC7A3D276329F5626E6328EBE3DB5770A4C3E
21341C304BE2628B2B71A0DA0F78DC73FAC34D7FDFE36BEA6C0801F974455321
AEFBA84C9BC4093E2151EA61F538857EE8B8755A187C3737D3D128EE8D437A2A
FB114183DA45B04C00027E6F9C6592605A206046CDABD9D54EA413DE484D92C0
A457F1244C6B5E4238967370A588E43EA78179562FBA7622E2E44E7C65377402
9E709393A4F8DDC886A6B3CB978FA7AE5136969F149CB186E27727E2C39A2F5D
68CC6FB6A7D01150E5B38F3410D8AD65DC3B10A728DDDB6706C5B8623C587885
1829764ECD7CEEE9FFA5CD2A2B160948B4203DB0A98E40A98963B8A729B7DA7A
BEB96EC77C8405F047DCCC2D5253B6694D0B1F8290DFDC0190FD30C6C6C43B17
6EA3136BF7108205BA66B7E7D879E50927E29D4042FE071FEA0094A55A951BBD
A42C7A82E17B8941CC10DE1D4A063CE605C925F1E4E452835781D1407E2D2E39
A8E797DC888B65AA90F6F4BE0F813F424364678789109A668E707C52E55E9A57
38A76E9D4F640E9DFBA962639A22FFD358D8991107D87FBA494F3064E8CFE355
89D16DB912B72E631B4F630CB890898F145025D6C4AF4C83041C849DE7FC26DC
80B32681C47ED69A7F70EB6D5AD742D29945AB53C9C4BDD0F3E0EAC53CFA25ED
64D56A52BB620D29153A1A52CA65303AB420F2B3B99DFB0390AF00C19FAB844F
6F01AAE2BADB3C2BF6C594D6FC7B8B746C4B214A485F9CE57642F42A032DC416
E323C2C363E3D499F3DC7411DCE3D20E2E9F67049766B519B6B0A216CECD233B
141C8302FD0F5B244B373AD47A4051F9985A4C77BD0AEBAC90BB3BF0C993A461
66786826CFB01F22A944EF21FAA6C12D3BAC92E531CBFA9456A104A3ED4DED4B
0752327FAABA1B604C266E68D2A387161444B807727C458C2826A13D38F8908C
BB91EF14AA351598EF607BE11D603F92B2607D41C30290368798E07D09E3658C
6D3BE9945C82EA3ACD90B905875C00BAE88C11746C4C8EBC0A4E6A6A8184AE21
0174DC45A50C9748293C6DFBEBA1AC1539FE04B54A592B07E8C8362F4E206773
49B81DCB9F340244D2CC1EB850CC2463EB75ADF830497C57441350EAB4ACFE9C
A666C46C7DA5A37FE02884F4E26CCDC125E1127CE3BF44B567263D3B5D4C129F
E982D4B29DF4C2488BD8767D1DCA5D48CBBDE116B6714320149241AAD44B2749
661CDE6521332E13AC1D130FBD21BA4CC1F4547D6E3F9351F911D017A769C6E4
491930A1D4B662BC21C5C6FC7B5E1BFF8F5A27D735E5A1CC35B646ACD0A28749
B62599E75F4C6636CD4D031BF8D85907DFF2849E4C3C7B62E653903867AB44E5
FD5B2E0903AF6D630DC6F2532EFBA61D0CE72227D28797A8962DCCDBA5432CFA
52050EF03C0F93AFF4095B5F6B716BDE9F3379CE9878306CD4905832A6D79718
23F2E5411B6E13E8622A3223F8E8A50C2057C054C5476C51F8A5A33EFA63897E
E505D5F76A0892A5BBFE7334CAA01BA456DE5DA6745C0EE667071CA18620541C
BB6B4B657DE23503184AC5C0E91046F1B4E859D8491EFD00C3694410623CE89C
011148DAEEAB45A419D2CFFBFAFDBA6E4F0859AFD74E72167A3D3BD86F381ED2
C3D9BA54926A3B90C568D41F8240D632ED778BA9EA1C30FC403D485AB9858152
E3FA121F9BDD04B7EA8A00B2A6825CE551CC04883568743F501BB40ADB8DEC07
D5975CB9B0857748FF0F41BFD3E96F97B7904BA69776BECADFABBAD9525909DD
9BC82C98B4F7BBF8FE586A4A031D8492E98AE2AC7E11C949A4E853AD4E54905F
25CE3A3D1FE114E2A8A49F428AD81E162B52ECFD19B8D7B4BE9FE8029778E7A9
9644322A7E6C6C5AE9A40F3A7B3ED2AA9386D181ACB0E0F32FF9EC47514E5871
F5FA3820B87317AC222D65C592889FB86C81B1BAAD5553C6C15CFEAF7E0440B8
C375470D916F4498F5D1DB455B9BEA1B742A924A924FD15C5FF806C6E436D8CD
5EEE44FB83532C0A9613F62709C33D3C12A5D63166ADDB5CB5AC7E57BD11C7BD
0161731DAD246E7D854F513DCCA53D00643C9F180BFB8D66CA8CE71CE3E84D7B
77D65D423C5097611DF6016684158051E5C570C0040477F7C9828633A1588FFC
500071536523BE6C5D47159A089F158B0BABCD6F75B1188524DD60E9C1FF7E61
E1F48C102B51B09E7B26511F5AD81B8A835B1B0A7923F0F396E68DDCF923AA95
51FFD58E4931CF9DE79D0FBAAB090E28DB9EEF77F98B569DD93C82004B2B93FB
25593C19C11F6BFCE9E7F13BAC9223CF2E3357CCEF236D63A6B020DF96714614
DD48F7C8499E77C9CC8EE4CE02F96B39DDD811E7CE1C4E2D9B0998C10E0AE054
05DCE844717BDFA58FC99E7B93748B7B0B7D5F050B809C3645507B2B336C627B
ABC4737FC72F8F4F6BB7D73551EE33D7069E863B13F09F0538290332E9684C6E
9B3ED5E27672CAE2F2E31710FB3661D8B5F4D9EE053FBD9CD5D528E369D07B9B
A9F45BBDBAC514405B1A6AD2068552A75725BF480735BC7321DEC56AF01ABBC8
9A1D7FEAAE52BC1DED5C1A601BD2FED84DC327300162402CFE727F36708ECD6D
BEE90DF8C4A39B99A3205601D4DE67E4385920EEF2FAC69CD6BB27378B895994
B3B1045984087AB96F23816A99089C9BA6489E9A969F03D40585C0AB2F5ACE79
2F05368499B19687E501B58FD31F641CA1C99EA71DD72AE6D189C534D9D55541
1D8AD4A3A37081D7529F94493EB4739C267B8C54B3A29ED2895A34B9E6434393
BA92AEEF4724C34EBD9DFDC773EC432452F440BC614981CE23B4D968C5109FF0
36FF535CD8DD9B16D9ADDC30CB7ABA76327DC13E282819CA26B99FEEFEE14143
654B5371340E1067A2A61839FCCD3FC843FD679E3102A6ADCCE7665F36AB8B9B
BDA8C46C4982EB8BAC342210D5B0ED5550C4B54109A1B5D369661C52AF704854
AEECF985EEFAE0521DB38B209A4660C67ADB378691D5B8848F53054E2AD69FAE
9FCC6406FFCB8D5368458A5871C78DAAED58E7B3D456E9361C69022CB5A5768F
142B27B44FA06A22135D07D59F00C044FF1286CFA04302F7BE160996B465BAFC
9BEB325ECE7B525B6B9DDF86E56FCD458FF04D000F7B6C6282209FAA55248F1C
F5D84AC9F54F2017590E6CC234C4F66BF989354341D40434D2C6361B3B70EA24
B9B90708294DBB7D59947EAF6E0A12C492874238820EEA74459BCD5F9170B7A0
9849C0FBC0248CC969E38E4357259257698DDDBF00FE42EB033DFBE2E387A0EA
EFD03A12376C5901B51ECA14818E66FDE710A442C8D20A5A230113328B822D39
445C418739003766FB193DD7B97DF0F9A11121F93F985AE47DF9FBEA97DA04FB
772797921FC7E416D29B1EFAE31ECF5CCA202965C0AB8D6671564F796B070A2B
35A4E8FD7C21C738D1E8782D670A90751192E187E658E3F6ED8F2D21CA333990
05CF458009A6A16EC4C0440DC6EFDC559CA8C1140FFCC3BAF798B72E5B5D6E84
F1F1088A69A2B74058822221B090CCB46C0A8E79FCCDA1BD5C661A4788A75818
1C6C213A2A51EF5CE143A7C6E6EB913B048A51E14C827B5CD6956F4B75F6A8E1
1B71AF3467BBF036C87602A15165F2EA2B5CC851804917E7F21A0E1DAF923239
05D59E85A79E9937AA137F568109E25D2306A9907DF8E60CC92EFEA6D19ABBB2
1273D4C40A207840D6DD0F83382199DF8709D217496E3C3AB9B3DCBE200EEF4E
11B788564461F00F9E298B3BB482BBA0365633ED40BE32D14E29C612F86A496E
7C77173A0CDA0BCC46683C239700CA3C76EED73871579F724D3AE58EDA579444
290618452D6623397B3E63A1C38B55B74C9B0A9A6BD49C275E97C7D54A2B37B3
8D8C72871152671BBA769AF30A79A86F67768C1830A4581AB3426B888F236D57
DB2F5A50B37FDF4165D38265BF356222C354FBF375EC58C2E9FA51041E97B4F1
94CF371C1A07A95681A598232B4F17C90B1F9512D5073F94B81268F3A0B7F152
55A9A78BB776356837418C47FC1846FDDC80610303ED4603E1E48D15B1296985
F919D788D7A9C9A44B329338514B6B26741DC8FF8BCA6575A33B49AF35102458
6761D9ADD60AA8F5B2BE8C21D7344CD8E8A6C73664ABF75C0390762D297CCA60
4ED82233D226855EDF9248E96910F0084249538CED34E669A16214EFF9AC8764
9E8ACEF7C5E47580A51F572D5369AC2D05B48D63B507E96FB0C380EF7154D087
2A267BE069550EC066319191D8B1E41B3BE2BD081CFB9BE4B7FDC76518B70B7A
86FFA7A4E0AB3F6104C8F05A2A16177EA1E09D3D4E636C2645E9A855FD9A287B
38091C67D1D1932F4992BC3BDD904E34A723CB48EEC08D5E63D57C70A113B838
3B904D1B2694EAFAF8467A2D59170E7638E7A9FAD85863CEC1B6C58479A1DDB4
0393AD8FB19F5DD286E57CA1229401BF634D445C93FDC157796BFA52FD6CB5BD
163E58651D2D017D0876F86FEBD25557B85F9CF37502F7987D3B29988CF128FC
9E8B6F106E667F99A30354A50A66A7F0E606D1ED7577FF45529994A69624EAFA
0A96C971445D731DF9B83A7A1136A9CE87477947D974A03CEDE934367F083F65
61C939669E28B55BC33236A4E30AEEB73BF979B76603510EB77DADC3A90F91F0
C2B17B8876F55DF6BA2B3C2A0FC1F120F9D08057C9CC75C5D9EDB93D121B912F
50AB9ED5D4D7857FA703F2862B4AA35CC169AFD69C818410A1E95B3BA4EE2ED5
40C9E4E7F516B4E2977709EDBD3DB7AE516C55E742F598B562AB9050332212CD
062A6B96FB18552EDB51B991870EA1DF3D95C7F57B650581E5A7AB0DAF83F9F5
AE47FD6F2AF570874552C1D53722B06F904153788A60AA13D6F6B4DBA1DA800E
BDB8202AD344BBA3031C1634BCD7089C853824795F928AF04C833497F7C4B1B6
92D0495AB4BD6C8756826B7786F35D21E3098DC9CF8BBE54D707AB84BFC95F99
B731FD69660310783BEE1DD3D04EB580E1E448A669A86933F8B05B9236B04C3C
0C757CA37AFCB903D210DBDA14114FAD3B7507A1F2E69489EF60C9F55CA01945
9BB90886A9D3F3B3D28B3D3272BEB5EB9167E32D84D837A7FE7FBAE9F372C30C
BE0298C7CF0424F68316F55EF475DBBEB205EC6A898F6F7E3E0D97E46E70E1F8
8FC18115E0E968F153DC61DEEB7273697AE8307A0DAA269586AF5FA034769A11
6E2AD25B9F11BD929F39DF3E3F9C205C00D78E6E21B6D3722008F40245D72882
B94694445B5926A7AA84A5E96521F3A544426A80EB40657AE1206E3DBAB84A96
C2D9BC54BCBDCFA14BCBFDD89ECDEB4EE80AD9DC628943981B92C026DC41AFE6
EFF4349E5907563769751AF1D8076E19266EBAAAAF50F3323143EDED17CF6418
C4CA1E6D3F2F99CAB5906B761B5B1FC303CF560A545A7BA4701A203715E313E3
11E51AB29E67C4B104BF708F7D4FDD278975A5CDB708B8F6D04CF9C05867845E
0F94B6985E021B55BD65542A39BC71F4F96C3CABF56EB81FA3F3844CFB23383C
A50C135971F27E862D862C006778E69BB90B0D130A32445972FA44213D14B42B
51D4B31C3B79CC12A12989636404D1AE3271837120F7A8874F05B3A04E3B3771
207627976719AE233197E724487C087370680BF1F01BDFDF7646A6B124102E3E
79FFB5776D7214981A0678BB2138B7FF05556CDD7FAF7FD80A94657427DB7517
02FF8E7DDF6E039E073F472A7B9D67D8F8288C2D95E222EA6F455AC5FBC29978
0DBAA19B8ADAEB4ACA8A2DE0CD63FF09EC639486E6AE747AD18EE9E8542E5A29
91AA890A8B6CB7D3765FAF9D09BA3526F9C75B8B4F48183186A3A250EA003DBC
879D5FFEDC30180CB96A773B1E19920DF95D3CA14CB9EEAEEBB91C50FD3E2EE0
E437297DB82A1C7A85107310A056B151C15F895BCF076E4B6F85A94D62144594
5B89C5FEE98E026BC5B3C5E25DE9E715B77400D600633DA71864BA45043E7AC4
74EED7A3B4294B006D7D75D8C54AD1666090276C020D0983979A82009507CA1C
4B88D56974529CD78CADC41D9815A364DD46D9E3EFF27D7AF74371E704C8F703
7F433A0AB962F52147208D9D2EEC6AFC2B9920385876CE72318686ED9E447F8E
185B03C8B47B682220859C957D0B8DD0236AFBCCF1DE77500A0EA2A5A6416617
A6D6AFDF832B4DBBEE2065A7C308D475ED43D2F179914AEFCABE3F66FCCC49DC
4F86006096D08ABF58438D5EAFA88FAED56846812277FC08AFA90D0D677F15B1
A4491290BFA0567F93A5550CD9DE28467F0743E025D14171FA920BEDF8462A59
235F808BFBFEEF6FCED7EE928D24ADD7FF8D9918C339A8E8B413836201DB7F79
220FFD0A87F51530D69B11D90001545C4F3BEAECB2566A1FF654A9C7C34BECF4
8CD9726CF2A49D4754F1B7E99FF0558F644F2A1A8DB5AEFF0A584F6BCC0B2CDA
819006D1FF3412D504943284C1658B6FF324C0FF38D3BA05672BAFC3B0048647
DDD60A1145D20EE3CAD5F0066A1845EA447BEE4C8F97E42D7CF4F556A632D10F
0E070C3E7CB147CEB89735647EE159434E3AF6588F47FF97242A6004B0285C7A
C913CEC83CF9F300831FD25A9A7CCDA3F8F0AA33B2561867A9E967A54ADA3F4E
C9DBEC4065C9D3E08D41269ED78A655718F13DE2756FE91B306823E540174995
D179680584434D8A5C8A4255456DEAD952FDD7EE4608A524C4F1A64173560116
1669B687EB8F708DBC6C0FADF9A6C05BE3499567E930F710682B895416BE1A95
3BFC6CCA78DB0C094BC82EC4F0BC92833AEBC794966A5F093401A466ADA1F147
BEC36BC942E91F0314F4D3A1372D5D4D2555A2E8E23E29D8C8C5F39807B5A6CE
F38F995B344FDF33B4376512D85F65AD30E430DCA6F9DC6239FC12D3BDAF7171
A45B6434D91BF070E12C4271D6E4F662AA2B647AFF05722E88E6320A422C7025
D26745DC91B35EF73B4C6F230A976E4AC2A3B88548EAE8DEAE5F5C071832A5E5
4E5696CAB5C2BC92E5E80C31CCD786036F8CE4AC5F50D38D686619E2E557C2CF
1FEB1024B58EFFB7DFD4CE43A8DD89C83B89A19414BDC43AA61550E45AFDF8AF
F1FAA17C5B39F4A2F94F7ED69231B38594CA5000EB4519B08080D6601B32D681
8221D4EC5F71C3D5C65C821BEB1019DF7E2DFEDB8F10BE06FED538273CD29074
D82E8292CAD8F848007099ADD8776C15B57643B5BAB4968E287273E8F583461A
B0B92B85B73942EA553AAD6E4BC3F1B1B50BCF16EF9825F6B20090E4D6280C52
83754EBADE89E096398364675257F65B680EECF4703EE34ED500FCCC45C80493
B3ABABB911186600AC62FEFFF4F7754AE0397A4D01199AFC3C88B0E2AB5FE014
A84377451083ADC352D90E472F21BBE055765DAB0DAC8449427E9AEC72F92DCA
C6A4CF31407A555660E2681176CEFB2BCA12C95A1DF41714551C2356DB2D6D0E
EEF7C4406550C1E3C805BB21DAF9EBF112F30C26B597E78976E829981823409A
CDEA1ACC4486C4FEE17290D7535F0BAD8499A55B707EC99ED39EF436CBA30F8E
B1A6E543782DABE3FF83E42FCE44873FF17704C4D368DDE2B930D4CFBEB9FD0A
0C21AA93F5437EBEA5A06488A7CB7074776AC36B43FB1B73C33A4D4F1488C39A
AE61A41BAC6A15727CE914A73A39471900AA09C67102F8E00CF57E10952A3029
B0F1354BEEAD1DA406F344FB4BF0A379B5DC8375014D057DD3DA8E969FB1F684
291242494E52311C02C8A34C0A58AA3FD0AC2ED583FD795AD2FD05E184202239
65EE2FEF287E61BE586195ABB5C1194ECD208CBC99BA03C2C948320BF3392FA1
0B969C3B0550B11B99ACB572EDBB7270A396D01F66D7743E3C1CB6D013DE4A20
1A150213ABBD1364D99CEB46A5C38E81F3C5AA93D24A2FA55862DD7AC4A44455
14804C0D1084597F1E5486FD79F660C4DD1F311D6CF0AD620CAA7868BD54816F
6121D102A8E3C0024C59222138D2BC8E401B5D986ADA9C7B016BD78E48A9E2D2
4EED3455C90F1D36E21D52A210FECA5F50626F270FDDE363237782E3B2AE143E
60069683917D8D87F03501E83AC238288C127BBEA082DE33FA87A83DAB9E2330
65F778EEE00BD6616EA0A4161B9030CF28D8B9C63B56BCE1F6B9BD413D4CC15B
85509750AF485DE8DCE8D6F10AC03FBD9C6FEDA5EF8B6778869A1713C9B0AC67
2EB5E9457C1DCAEC16B343082BEB07651B7F9B6692CC1B26AE6556679FC952BC
9BBDB5A9640EDC451CF9249B2FCF932EDFDEBD49B7F5A4D070D6A1FD6145726D
6F69E009EDC2FD7DE0011C0B72BE3DAD0A021CF308EC1D60FCC0A2B5C25BDDE7
461DA1C9A4B09247C0C8E5BE1B6742AAAD3C9534D1B237EB2247FE42387FA2A7
76C35DE9D78763F580D7134114B90B48F6B6577E30E85C42A843E4F4C6D17CA9
998BE79DBBC7581E41DE855CAF6402D27AB8D5F762A198EF2B7A653CEB9E653F
77B478161C0CA8E4733401B34900AF3A85306B07E1AB2BA7C42C0EF858DB5B22
7F7604DBADF56C73BB315CD8DB4693F21B044623A2B956C0B7B503E667E2D1D1
4B28E009E5ECBF7626A4C6B8664D85D36BF352347290D257EC8C2BA6DCD6465C
2DA634D5A2C865C8CF008765FF49F9F5F8426CF291F9402A2D5B943EE1A91E2D
2D140855459712214BA8305960F5A13E2DFAB0DC737EACBE7B257D8041C6E91C
E215AB8CC3AB2369CC2EB1A7C535943290F6F2ADE176DA3BFB7599B02E5AA81E
43C6A3DBDD7802C894CF5FBCDEDCC55CFBAD9E6040D4AA471CCDB51056B0AE47
30B348FFE40887653D153ACF966E16B33BDDB586A6177B89E35E8105E4CC53BB
25E618DFAB5D752D318EA14810F02AE1776842C84E41F31DD6C6CC76BFC3A18A
7B5DAB613D96F387B9F7243764BA3BF53879490E8F3004B1EA90FEA5233A0D89
DF4CBC3F7289D0D2CF6ECD5D705807A439E2487399EF87589BC83B6021379E0A
4D0B4B8F58E842DE73C97142FEF663394D8D17FD43ABCAE3ED075CAF10E56412
BCE77FF2091B6131084A1221262FCF797DDAC8CCAA00895983DE898B2704CA5F
2E35AC69045C95BA339B2EF4B7047B42916E2F66E8355318EE11AAFA9C17B8BA
5253A61773FD5787C25ED7D281A0DD143E2548C1D139098958762567F732EB54
7A6310304EC4F87003E0BDF0508B15AA00411986ACFC12217A16F6C32C5FF414
6A7FC691745A2E1EE8BB1E27177C3AA823A72FC80A4426372CED1CFE2F3C0C53
13B5988AE71B8CB269F46E7E49714F0F3131F78B7704952154E9B8F0BB27912C
676267E1A4A70613537A1FF73F6FE782E76D23850D497E43F5247E0F6F060961
2C2E6379411D47370FCEE71DC08FFBA8919951BBE1A6B0CD1CE27D4EA6CBBAB9
9FD83789E6C44899633FD2E4A049A4BCF27DBF3436DCE94FAB707BC8921EB8AD
8A29161B8255434AC0C8DB1EC34B70821343103152FCA048A8484D8EC2E8CDA5
2CC9B7F8874552E642C33BB943B50241F4606717D489EAC334E85DC85B5E0B5C
5BA62A3D73931B785DBBD7BD5D2F63B251674035B9957DDABAFE230A2BB09A22
D01E66D56E0684FAF3FD00E5F369363A6BACF0D0E52D7EA19535B2C28693EEC8
61109C40E054811B3EA3F56D455699B643906168831642E24B2100A32AF6B7D1
9244AC1D5FB8AEBC64811791B3BD13BC105BB438E4F34E980449941903E5E802
97680A117084B3A3A0A30DB3E7FBBD526183FE00FFEE2744EB6D096E8C8D5003
C0B2E7000874BCF1F3CEC338951D729FB9BC2C076202363F1CD47F8BE63706EF
62331CE7ABFD1C4A5E9CADF1E05B79F58134DFF7A87E42B3C8108FE02DD00744
4C33D6B7A490CE9594C94127C34BDF4907ADA234C61C252533A0A071D3F6AF91
D8C0D6CA05F4342A330403F0F3C38F09982D6B986234CE5C7E38B0DF7733D18C
358635549B8F444F9F4A12569BB09A57D05D0E7297911626E5CCFD1A5860D2AF
1204F01594C4A83A6264406B36A4CB6C3950C7842340A19D4BE363FDE45BA405
0BCC704408288BDCBAA4349DA58BEB3B46E271D7E1F7222ACB09ACB608C021F8
1D37A8701B329AD725799E64A103F6FA12F4396AFC08A037E5477D46506A6836
2C407E03DD4B3C95ACC033203374760CA64980F3C77735644EFBF7AAA7BE6972
15F2941F96C7B0463FD3A03EF24ECB0739934AB4A2EA9A31551BE1A3162FB91A
4A1520ADE396E77A64BC83860F42E1588F7682B3F4011A322FF65B6F0708DA05
B1EDAD588AA9DCCC3E87166DC3B6CC43AA38BFF060B969D4438A9814483AFD03
6A84DF0DEA77FD83BA4C65EE4B6F85E95AB409CC660A87D2F9940ABF2E142108
90DE6606311A48A99BB3E04EF471022898C6307EAB5B49C3BB674205F7711345
3E0CD6FAF0434A7C59F12DF3699A4B729C36906CECAA89B9E62C26ECBD00BCF2
7E2D2EDBCA64A063C247516CB69D62188D25A054BBA7D280DFAB8B0B3A674640
0EB8B7BBFE0B2564670D45557CEF949D2132C6E6510B223EE414B4006AB9EB1E
58C35E4A9D19F975140C2864DF3BE80EB26897E79AB7D86AD952E6581E20F2A9
B3C1F962ED3D6F9CA6757486FC41F1D1EC6BD197D2FBC30AD545153AFBBC58E3
E8B8956218F50F3DB65096DC7B8CE4A1877F89050805D1E82646DA3D35568E3A
9ACA9D67FCA224A2F2CAE44B817F1EA99828795DA4AE7B7BBCFBA0D7902B1ACA
34CE544502ABC9FAD43520F02B55DD44646D63980AC2CC3C876D8160BC98D3B2
4F1D74E3CDE0CF5FBDE937373E413CA99510B0AF70163E19C9AC612159CA6EC7
729AAD038CCA61E3070D78F3D72F52B32019FE4D410FF89681DA50290DB2A176
38A55F92DEDEFFAC2CE20C427CE744C155B58F60D4093A36B6BC85F2DFFE449A
93FB6B908640F97B6E66D0A2FDC291AD75F50DC552A7AF933806CDEE62390C3E
E41FF0933420DDE3C9A42D8888FBEE8654908A6BFF879D8C4DF67C544C4FB679
788DD87F0BF8A5CA42A8822C70E4BB3292B0C96E0DD4D69816537B7C3B37C306
A9180FAC7BC7DDE2BA5E1A52616ACD1ADC17138BA289DD0EEA540C2EED45417C
1186B895D0CD00A3566A1FF654A9C7C34B50B2E83E8E6F9E4063250DDFD03F7C
FA606BC77BC8C165D47371FC1459DDE5BAD1723996D1EA46DFBF321A05C4ADF8
24A7083049E5E5233F7337479E58D7B412AED68E1501326604D092D33EE2DDDC
3A16DFDF7160EA4FE441D578C667321709AC63773E607A43E39DBA2C850240B3
A12D65DB5E075E8B0D809BFDB9FFC301C9B0167E515207BD2D402715551840FA
F1995E2EE327
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra un)
@start /Fa 150[320 105[{ enclmmathit ReEncodeFont }1
885.568 /LMMathItalic8-Regular rf /Fb 202[470 470 470
470 470 49[{ enclmrm ReEncodeFont }5 885.568 /LMRoman8-Regular
rf /Fc 173[959 82[{}1 1328.35 /MSBM10 rf /Fd 184[869
5[830 11[553 1[553 4[307 46[{ enclmec ReEncodeFont }5
1106.96 /LMRoman10-Regular rf /Fe 160[909 45[606 1[606
47[{ enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular
rf /Ff 203[993 52[{}1 1328.35 /wasy10 rf /Fg 188[969
969 969 969 14[969 969 48[{ enclmmathex ReEncodeFont }6
1106.96 /LMMathExtension10-Regular rf /Fh 194[1012 4[650
1[650 650 650 650 650 650 7[506 506 40[{ enclmrm ReEncodeFont }10
1328.35 /LMRoman12-Regular rf /Fi 135[739 1[629 7[776
2[676 5[603 2[553 683 8[1079 1[758 5[838 4[1107 3[1026
4[988 975 5[361 361 58[{ enclmmathit ReEncodeFont }16
1328.35 /LMMathItalic12-Regular rf /Fj 149[369 55[886
16[1328 31[369 1033{ enclmmathsy ReEncodeFont }5 1328.35
/LMMathSymbols10-Regular rf /Fk 650 2[723 129[578 2[939
686 723 506 513 506 1[723 650 723 1084 361 686 1[361
723 650 397 578 723 578 723 650 9[1336 975 975 939 723
957 1[885 4[1011 1[469 975 1021 1[885 993 1[921 2[614
4[361 3[650 650 650 650 650 650 2[361 434 361 10[361
5[759 27[{ enclmec ReEncodeFont }51 1328.35 /LMRoman12-Regular
rf /Fl 137[1136 1196 837 849 879 1[1196 1076 1196 1793
598 1136 1[598 2[658 982 2[1196 1046 10[1625 6[1616 1682
2041 3[801 1682 1691 1353 1412 1[1554 1530 1625 10[1076
1076 1076 1076 1076 1076 1076 1076 598 717 45[{ enclmec ReEncodeFont }
38 1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fl(A)-60
b(G)718 b(3.5)f(-)h(1)f(Normale)h(V)-179 b(ektoren)716
b(-)h(MC)h(-)g(BIFIE)p 0 TeXcolorgray -741 5244 a Fk(1.)p
0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(ist)h(der)f(V)-108
b(ektor)14521 4672 y Fj(\000)-1033 b(!)14844 5244 y Fi(a)692
b Fh(=)17599 2964 y Fg(0)17599 4956 y(@)19933 4314 y
Fh(1)18900 6306 y Fj(\000)p Fh(4)20916 2964 y Fg(1)20916
4956 y(A)21884 5244 y Fk(.)855 8628 y(W)-108 b(elc)-36
b(he)478 b(der)h(nac)-36 b(hstehend)477 b(angegeb)36
b(enen)478 b(V)-108 b(ektoren)479 b(sind)f(zu)32907 8056
y Fj(\000)-1033 b(!)33230 8628 y Fi(a)801 b Fk(normal?)480
b(Kreuze)e(die)921 10620 y(b)36 b(eiden)433 b(zutre\033enden)e(V)-108
b(ektoren)434 b(an!)p 19158 11328 8067 45 v 19158 18892
45 7564 v 19867 13162 a Fg(0)19867 15154 y(@)21168 14512
y Fj(\000)p Fh(1)21168 16504 y Fj(\000)p Fh(4)23183 13162
y Fg(1)23183 15154 y(A)p 24816 18892 V 27181 18892 V
19158 18936 8067 45 v 19158 26389 45 7453 v 19867 20714
a(0)19867 22707 y(@)22201 22065 y Fh(2)21168 24057 y
Fj(\000)p Fh(8)23183 20714 y Fg(1)23183 22707 y(A)p 24816
26389 V 27181 26389 V 19158 26433 8067 45 v 19158 33886
45 7453 v 19867 28212 a(0)19867 30204 y(@)22201 29562
y Fh(4)21168 31554 y Fj(\000)p Fh(1)23183 28212 y Fg(1)23183
30204 y(A)p 24816 33886 V 27181 33886 V 19158 33931 8067
45 v 19158 41494 45 7564 v 19867 35764 a(0)19867 37757
y(@)21168 37115 y Fj(\000)p Fh(4)21168 39107 y Fj(\000)p
Fh(1)23183 35764 y Fg(1)23183 37757 y(A)p 24816 41494
V 1 0 0 TeXcolorrgb 25524 38045 a Ff(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 27181 41494 V 19158
41539 8067 45 v 19158 48881 45 7343 v 19867 43261 a Fg(0)19867
45254 y(@)21168 44612 y Fh(8)21168 46604 y(2)22150 43261
y Fg(1)22150 45254 y(A)p 24816 48881 V 1 0 0 TeXcolorrgb
25524 45542 a Ff(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 27181 48881 V 19158 48925 8067 45 v 47992
5244 a Fe(___/1)p 1 0 0 TeXcolorrgb 47990 7236 a Fd(A)-31
b(G)369 b(3.5)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 52953 54804 45 v 0 TeXcolorgray 24746
81281 a Fk(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fl(A)-60 b(G)718 b(3.5)f(-)h(2)f(Normalv)-60
b(ektor)717 b(aufstellen)e(-)j(O)-60 b(A)718 b(-)f(BIFIE)p
0 TeXcolorgray -741 4800 a Fk(2.)p 0 TeXcolorgray 651
w(Der)434 b(gegeb)36 b(ene)434 b(Pfeil)g(v)-36 b(eransc)g(haulic)g(h)g
(t)433 b(einen)g(V)-108 b(ektor)28747 4229 y Fj(\000)-1033
b(!)29070 4800 y Fi(a)323 b Fk(.)921 7346 y(Der)434 b(zugrunde)e
(gelegte)j(Raster)e(legt)h(dab)36 b(ei)434 b(die)g(Einheit)f(fest.)921
28741 y
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 222.50066 a add def
/d 0.0 a add neg def /h 184.94283 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 28741 a 14464 28111 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 100.15378 0.0 -122.34688 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -113.81097 0.0 T 8
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 179.25237 0.0 -5.69046   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 56.90549
56.90549 -85.35823 113.81097   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 14464 28111 a
tx@Dict begin  { -15.93346 113.24179 } PutCoor PutBegin  end
 14464 28111 a
487 x Fj(\000)-1033 b(!)14787 29170 y Fi(a)14464 28111
y
tx@Dict begin  PutEnd  end
 14464 28111 a 25551 28741 a
currentpoint initclip moveto
 25551 28741 a 921 31286
a Fk(Gib)534 b(die)h(K)-36 b(o)36 b(ordinaten)535 b(eines)g(V)-108
b(ektors)21502 30364 y Fj(\000)-1033 b(!)21890 31286
y Fi(b)922 b Fk(an,)536 b(der)e(auf)30281 30714 y Fj(\000)-1033
b(!)30604 31286 y Fi(a)858 b Fk(normal)535 b(steh)-36
b(t)534 b(und)g(gleic)-36 b(h)921 33278 y(lang)434 b(ist!)921
37595 y Fj(\000)-1033 b(!)1309 38517 y Fi(b)756 b Fh(=)p
1 0 0 TeXcolorrgb 4064 36237 a Fg(0)4064 38229 y(@)5364
37587 y Fh(2)5364 39579 y(5)6347 36237 y Fg(1)6347 38229
y(A)7749 38517 y Fk(bzw.)10784 37595 y Fj(\000)-1033
b(!)11171 38517 y Fi(b)757 b Fh(=)13862 36237 y Fg(0)13862
38229 y(@)15162 37587 y Fj(\000)p Fh(2)15162 39579 y
Fj(\000)p Fh(5)17178 36237 y Fg(1)17178 38229 y(A)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800
a Fe(___/1)p 1 0 0 TeXcolorrgb 47990 6792 a Fd(A)-31
b(G)369 b(3.5)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 43653 54804 45 v -2331 48954 a Fl(A)-60
b(G)718 b(3.5)f(-)h(3)f(Normalv)-60 b(ektoren)717 b(-)g(O)-60
b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray -741 52705 a Fk(3.)p
0 TeXcolorgray 651 w(Gegeb)36 b(en)523 b(sind)g(die)g(b)36
b(eiden)523 b(V)-108 b(ektoren)21221 52133 y Fj(\000)-1033
b(!)21544 52705 y Fi(a)845 b Fh(=)24605 50425 y Fg(0)24605
52417 y(@)26939 51775 y Fh(6)25906 53767 y Fj(\000)p
Fh(1)27922 50425 y Fg(1)27922 52417 y(A)29414 52705 y
Fk(und)32105 51783 y Fj(\000)-1033 b(!)32493 52705 y
Fi(b)909 b Fh(=)35489 50425 y Fg(0)35489 52417 y(@)37529
51775 y Fh(1)36790 53767 y(2)p Fi(x)38511 50425 y Fg(1)38511
52417 y(A)40003 52705 y Fk(im)524 b Fc(R)42931 52223
y Fb(2)43980 52705 y Fk(mit)921 55391 y Fi(x)369 b Fj(2)g
Fc(R)p Fk(.)921 59929 y(Bestimme)362 b(die)g(Un)-36 b(b)36
b(ekann)-36 b(te)361 b Fi(x)g Fk(so,)i(dass)f(die)g(b)36
b(eiden)361 b(V)-108 b(ektoren)361 b Fi(v)48 b(ek)d(a)361
b Fk(und)g Fi(v)48 b(ek)d(b)361 b Fk(normal)921 61920
y(aufeinander)433 b(stehen!)921 66458 y Fi(x)369 b Fh(=)p
1 0 0 TeXcolorrgb 433 w(3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
921 69003 a Fi(x)g Fh(=)g(3)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 52705 a Fe(___/1)p 1 0 0 TeXcolorrgb 47990 54697
a Fd(A)-31 b(G)369 b(3.5)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 72478 V 0 TeXcolorgray 24746 81281
a Fk(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fl(A)-60 b(G)718 b(3.5)f(-)h(4)f(Normalv)-60
b(ektor)717 b(-)h(O)-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray
-741 4800 a Fk(4.)p 0 TeXcolorgray 651 w(Ein)414 b(Betrieb)g(pro)36
b(duziert)413 b(und)g(v)-36 b(erkauft)415 b(die)f(Pro)36
b(dukte)413 b Fi(P)30507 4999 y Fb(1)31034 4800 y Fi(;)221
b(:::;)g(P)34119 4999 y Fb(5)34647 4800 y Fk(.)414 b(In)g(der)g(v)-36
b(orangegan-)921 6792 y(genen)468 b(W)-108 b(o)36 b(c)-36
b(he)468 b(wurden)f Fi(x)14264 6991 y Fa(i)15107 6792
y Fk(St\374c)-36 b(k)468 b(des)f(Pro)36 b(duktes)468
b Fi(P)28148 6991 y Fa(i)28992 6792 y Fk(pro)36 b(duziert)467
b(und)g(auc)-36 b(h)467 b(v)-36 b(erkauft.)921 8784 y(Das)465
b(Pro)36 b(dukt)465 b Fi(P)9560 8983 y Fa(i)10401 8784
y Fk(wird)f(zu)h(einem)f(St\374c)-36 b(kpreis)464 b Fi(v)25902
8983 y Fa(i)26742 8784 y Fk(v)-36 b(erkauft,)466 b Fi(k)32941
8983 y Fa(i)33782 8784 y Fk(sind)e(die)h(Herstellungs-)921
10776 y(k)-36 b(osten)434 b(pro)f(St\374c)-36 b(k)433
b Fi(P)11738 10975 y Fa(i)12114 10776 y Fk(.)921 13322
y(Die)h(V)-108 b(ektoren)434 b Fi(X)32 b(;)221 b(V)724
b Fk(und)432 b Fi(K)529 b Fk(sind)433 b(folgenderma\377en)h
(festgelegt:)p 0 TeXcolorgray 0 TeXcolorgray 11886 22988
a Fi(X)474 b Fh(=)14820 17719 y Fg(0)14820 19668 y(B)14820
20332 y(B)14820 20996 y(B)14820 21660 y(B)14820 22324
y(B)14820 22988 y(B)14820 23653 y(B)14820 24317 y(B)14820
24981 y(B)14820 25689 y(@)16342 19071 y Fi(x)17081 19270
y Fb(1)16342 21063 y Fi(x)17081 21262 y Fb(2)16342 23055
y Fi(x)17081 23254 y Fb(3)16342 25047 y Fi(x)17081 25246
y Fb(4)16342 27039 y Fi(x)17081 27238 y Fb(5)18160 17719
y Fg(1)18160 19668 y(C)18160 20332 y(C)18160 20996 y(C)18160
21660 y(C)18160 22324 y(C)18160 22988 y(C)18160 23653
y(C)18160 24317 y(C)18160 24981 y(C)18160 25689 y(A)19350
22988 y Fi(;)221 b(V)659 b Fh(=)22730 17719 y Fg(0)22730
19668 y(B)22730 20332 y(B)22730 20996 y(B)22730 21660
y(B)22730 22324 y(B)22730 22988 y(B)22730 23653 y(B)22730
24317 y(B)22730 24981 y(B)22730 25689 y(@)24252 19071
y Fi(v)24881 19270 y Fb(1)24252 21063 y Fi(v)24881 21262
y Fb(2)24252 23055 y Fi(v)24881 23254 y Fb(3)24252 25047
y Fi(v)24881 25246 y Fb(4)24252 27039 y Fi(v)24881 27238
y Fb(5)25960 17719 y Fg(1)25960 19668 y(C)25960 20332
y(C)25960 20996 y(C)25960 21660 y(C)25960 22324 y(C)25960
22988 y(C)25960 23653 y(C)25960 24317 y(C)25960 24981
y(C)25960 25689 y(A)27150 22988 y Fi(;)221 b(K)465 b
Fh(=)30684 17719 y Fg(0)30684 19668 y(B)30684 20332 y(B)30684
20996 y(B)30684 21660 y(B)30684 22324 y(B)30684 22988
y(B)30684 23653 y(B)30684 24317 y(B)30684 24981 y(B)30684
25689 y(@)32206 19071 y Fi(k)32882 19270 y Fb(1)32206
21063 y Fi(k)32882 21262 y Fb(2)32206 23055 y Fi(k)32882
23254 y Fb(3)32206 25047 y Fi(k)32882 25246 y Fb(4)32206
27039 y Fi(k)32882 27238 y Fb(5)33962 17719 y Fg(1)33962
19668 y(C)33962 20332 y(C)33962 20996 y(C)33962 21660
y(C)33962 22324 y(C)33962 22988 y(C)33962 23653 y(C)33962
24317 y(C)33962 24981 y(C)33962 25689 y(A)921 30656 y
Fk(Gib)415 b(mithilfe)h(der)e(gegeb)36 b(enen)415 b(V)-108
b(ektoren)415 b(einen)g(T)-108 b(erm)415 b(an,)h(der)e(f\374r)h(diesen)
g(Betrieb)g(den)921 32648 y(Gewinn)433 b Fi(G)g Fk(der)h(letzten)f(W)
-108 b(o)36 b(c)-36 b(he)433 b(b)36 b(esc)-36 b(hreibt!)921
37185 y Fi(G)369 b Fh(=)p 1 0 0 TeXcolorrgb 433 w Fi(G)g
Fh(=)g Fi(X)400 b Fj(\001)295 b Fi(V)584 b Fj(\000)296
b Fi(X)400 b Fj(\001)295 b Fi(K)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 4800 a Fe(___/1)p 1 0 0
TeXcolorrgb 47990 6792 a Fd(A)-31 b(G)369 b(3.5)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 40771
54804 45 v -2331 46199 a Fl(A)-60 b(G)575 b(3.5)g(-)g(5)f(V)-179
b(ektoren)573 b(-)i(O)-60 b(A)575 b(-)g(Matura)f(2014/15)h(-)g
(Haupttermin)p 0 TeXcolorgray -741 50428 a Fk(5.)p 0
TeXcolorgray 651 w(Gegeb)36 b(en)433 b(sind)g(zw)-36
b(ei)434 b(V)-108 b(ektoren)17376 49857 y Fj(\000)-1033
b(!)17698 50428 y Fi(a)692 b Fh(=)20454 48148 y Fg(0)20454
50141 y(@)21754 49499 y Fh(2)21754 51491 y(3)22737 48148
y Fg(1)22737 50141 y(A)24139 50428 y Fk(und)26740 49506
y Fj(\000)-1033 b(!)27128 50428 y Fi(b)757 b Fh(=)29818
48148 y Fg(0)29818 50141 y(@)31724 49499 y Fi(b)32277
49698 y Fb(1)31119 51491 y Fj(\000)p Fh(4)33134 48148
y Fg(1)33134 50141 y(A)34103 50428 y Fk(.)921 55804 y(Bestimme)525
b(die)h(un)-36 b(b)36 b(ekann)-36 b(te)524 b(K)-36 b(o)36
b(ordinate)525 b Fi(b)23796 56003 y Fb(1)24847 55804
y Fk(so,)i(dass)e(die)g(b)36 b(eiden)525 b(V)-108 b(ektoren)41875
55232 y Fj(\000)-1033 b(!)42198 55804 y Fi(a)847 b Fk(und)921
56874 y Fj(\000)-1033 b(!)1309 57796 y Fi(b)821 b Fk(normal)434
b(aufeinander)f(stehen.)921 62334 y Fi(b)1474 62533 y
Fb(1)2369 62334 y Fh(=)p 1 0 0 TeXcolorrgb 433 w(6)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 921 64879 a Fi(b)1474
65078 y Fb(1)2369 64879 y Fh(=)368 b(6)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 50428 a Fe(___/1)p 1 0 0 TeXcolorrgb
47990 52420 a Fd(A)-31 b(G)369 b(3.5)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 68553 V 0 TeXcolorgray
24746 81281 a Fk(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fl(A)-60 b(G)690 b(3.5)f(-)g(6)g(Normalv)-60
b(ektor)689 b(-)g(O)-60 b(A)689 b(-)h(Matura)e(2014/15)h(-)g(Neb)60
b(en-)-2331 4622 y(termin)717 b(1)p 0 TeXcolorgray -741
7929 a Fk(6.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(sind)g(die)h(b)36 b(eiden)433 b(Punkte)g Fi(A)369 b
Fh(=)f(\()p Fj(\000)p Fh(2)p Fj(j)p Fh(1\))434 b Fk(und)f
Fi(B)j Fh(=)368 b(\(3)p Fj(j)296 b(\000)f Fh(1\))p Fk(.)921
12466 y(Gib)433 b(einen)g(V)-108 b(ektor)11082 11894
y Fj(\000)-1033 b(!)11358 12466 y Fi(n)710 b Fk(an,)434
b(der)f(auf)h(den)e(V)-108 b(ektor)26139 11559 y Fj(\000)-331
b(!)26139 12466 y Fi(AB)501 b Fk(normal)434 b(steh)-36
b(t.)p 1 0 0 TeXcolorrgb 921 15141 a Fj(\000)-1033 b(!)1197
15713 y Fi(n)645 b Fh(=)3999 13433 y Fg(0)3999 15426
y(@)5300 14784 y Fh(2)5300 16776 y(5)6282 13433 y Fg(1)6282
15426 y(A)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7929 a Fe(___/1)p 1 0 0 TeXcolorrgb 47990 9921
a Fd(A)-31 b(G)369 b(3.5)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 20849 54804 45 v 0 TeXcolorgray
24746 81281 a Fk(4)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
