%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 4.1/AG 4.1 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:32:58 2017
%%Pages: 14
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic8-Regular
%%+ LMRoman8-Regular LMMathItalic12-Regular wasy10 LMRoman10-Regular
%%+ LMMathSymbols8-Regular LMMathSymbols10-Regular LMRoman6-Regular
%%+ LMMathItalic10-Regular LMMathExtension10-Regular
%%+ LMMathItalic5-Regular LMRoman5-Regular MSAM10 TeX-feymr10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 4.1/AG 4.1 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0832
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: TeX-feymr10
%!PS-AdobeFont-1.0: TeX-feymr10 001.001
%%Title: TeX-feymr10
%%CreationDate: Sat Jan 5 18:49:54 2002
%%Creator: Thomas Schröder
%%DocumentSuppliedResources: font TeX-feymr10
% converted after April 2001
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /TeX-feymr10 def
/FontBBox [-178 -195 823 877 ]readonly def
/PaintType 0 def
/FontInfo 12 dict dup begin
/version (001.001) readonly def
/Notice (converted after April 2001) readonly def
/FullName (TeX feymr10 Regular) readonly def
/FamilyName (TeX feymr10) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3166449D69AB0542CB99558019EE
97CFE9FA87FAC14B55E860B5663A3D528CD3784FC9647A2EB72CF1AF4E31964A
3073722CB69FA5370CC5D9CDBF105662CA6188C1B3BFA7658F71EA5765A0D152
E60FD5E1DE3B99CE70C03D8CB4F775B5B17CE9573F5046E61444C0DAFD894CFE
E17604820BBE5A8FA11A10565933C0A8320DC5D116C780706E315C54E72426DD
AF1E6786D883AD182ED327CBB03C39C1A2602471C39296B7681215EC4F0E0E0B
264FBAD453DD3B112065828DC04E265255F9FB51F5EEC233C6A752ECA0246E0A
A2BA69049BBF94E6C8F510D29A7735AE4D122DCCA7B22929270D51C3F1E68174
E38AC54D6418690C765264C7897AD12A84B2C5269A6BFBABF05C20A37C94D927
81FD24D7817897529ACEDD9B062949D02FB9B0E1B2D0BF765675BA16EBFC1C7C
DC437BEE4D9FAC437C6B9E5B0C00111499A90E1BD29C52263829FFEF1946619B
1C81623A436D2FBD670D126855C400F38CE0C88122C60EA0D331AA9636B27218
0CC9B0EDE940FFB5EBCF83EDB330F8E83C7166452669E04F2E95A7718ADBDA8F
F99C2DC815F7ED17655111692621430D077DE661F297A8B6A33FECC10B3892A2
4F8E139F3E446CC7D7F5D64E4DBEFDAD72AECAE4D64289A3E2BE0212CF4A91BF
04F60B14E7522795440054CCBC40C49886656B6918198778A498EDBE40AF4536
7F96E77E40A9D65B1D5447D2596B382447AB5549A11BD5B765F9133E1C5C3071
32075009D2AC8147BC53B4C07B14D548E0F914E600CBF320E1639435733D7563
0053CC74AE3E7F5B9741E8CCB3DAFC411B5F846FC583B7771A7088B1C9B9613B
86FBCA1EE9E8263406C1894EE246BE87CDCAD2BA7ACB7030E45B0866062055D9
EBF7F562FAB6190196A7B8AA1B61F407B2BE0F537129E27376C8DDC7C6416358
384B2A676AB3228144586258F2B82A5BD9AE9E5442462DA626088BAB0C29E8A8
0EC75BF6E5E897761B5D095E2A8EDBF2CA742F3BF155B4DF28110FB8B7FB9A6E
9229F9D0B47376BE7AE5CE6A6AD32F50B62023CB32E8E0CBCDE2110AD8251854
5F8934CDC91E522248E019A6DCA06A0C2D005D541C6ADFF72812F474050C709A
5ED08B5F83DA1FD76037AFF77515188E13073B30F9A49A970613659071E0A130
5A4DD21C42ADFC1DF8CEE802CFAB2A75B7460E9F46DAA8CE31D5F287D3163B98
5966C073653074E89114B1B8A097A43E58DC5E49AC1F70F04A922FF9955F9FA7
20A6FCB10A2670BB3F44D959FC897BA487147A0FFDDFD368EB1A41F4CCCB619B
A362730B373EAC754EF5CE2692576DE100E10402670F41FD38F11A1BB43B7F42
B4BD7BB5F4322C4A9D04BBE445358F4B59B1A5C85FAE03B06C950485E5B304E8
BDA4BB926C21E17B3EC2D4DBC9353CFB90DBC6976B566C310DC801A28907CED3
2126B72E26578DF77022D969D09E111BC1C489E88E7B0315E926B0376B085BB5
3CEAF925AEF208D454C49A6B239924FA18001BD1A7D3EA4E7904830A6A948A79
F50CA56EA772D92627A8380A37F3C30845647AB612D5F6B5CB916996A0EE6697
BC62B6266F4314BAAD796EF51EB965F7C30C001F16442E0CB7A6984B78AEFC46
7D6938EFB347E3287600228311BA24326714E77F1932B80334F933C2926274FA
21BAAD0605BBC9A01BDAD6D5ABB885A4E651B8DFAB60487319C1C386CE6A17CF
CE6F1E639526FE52759F1C88A2B52EED4B93C0AEFE101EEEE8C108F389F9D1E3
205904304DCD3F06198594F313F1BFF10CE7F410ABFE3BD5F47CC3D7DB91E197
AE2EFFB9015482D6C79EE33D31EBC91E7797ADADAB7F682F72DFB7B0B0B6AE27
CDA9C0538E1246167FDF86008881E9F917291B498DFD93885C05A1AC6F3A7C11
57128C3D6CA767C80C7AD866074879C24CC063341E85B910ABD13E4BBC7A48B1
53E24D05C43CAC6F3337ED734614EA91EBA620346F23693C7FAA9F488FEEF7DB
E525E547787CCBE1B9824B1CF0B92007A8884194388AE40560BE9D79CD4DE9CB
96359F98E85F2A49F75B7B66C6444DB0ADF62964CF1A47855F8C4688F95EE5A4
50C96A072FB8069A59B20CD2FC703F2F90D3AD1BAA56A93E3D2E2F33C6E2A7AD
258451B1411DD8DBF07CA0246640732F5ABE58B44AC29D9EACBB671334A141D5
FF7CB44C5D629EF4C3E479B76B6A11B47AE63003DE140FB162E88854291E52CD
218D3E70E007E24FEDE321E5814C501169EE40269A4130721A95CB23F48C32AE
DD7B0B4F6320A76DA8A605679B0863982D6B3D4903CD8184B2B829CE9FCBF77D
6CC854455B66AA88CA78910178F748BAD7A4F32521BA7CACB879CFC719BFE2BC
13CF49FDAEE217C53CE31DAB6FDCF81ECAA2E72A2CF15BD84D275BE55251F82D
C8A19F36545C0BDA65AE10E063F5E05A8DB056F7A41D4DB694C98E4246E3B38E
230D155F7ED10F13F00679BCDF5604F46E28FD15B81B55471B8262F8A2F72AF4
E5387E41E401274B350EEFA6C4F03A1E6E4A6B16E528088EA3C7E0299E38DF46
D345559937225879790AF29198B2FDEFE6FC99C66C69959F3FF98F67C07CE90D
F2993F8732E88A77355D4A186BBC8C299C85DB3CFE829BF9F22AA8D3BD63F0D9
CAC57A7CBE25193B289D8A9A614DA9202F69ABA8FFB96F4281592634A7FC4A21
456B69BF77848502657B7B934003418D2BC937720E67D4890E00A199636842D3
DB74B2F004A6E3F3EA6972D62C62E5D4F096AEB2F194E77B656822D9CFF41D2A
7C14F16D7F07E90306AC87B528175244B92D6C10024132A3A1FC2FE78F688904
3568D0BD312C635BF2C024B53B5624F8B17BEEEB424E619CBE804E24E6EE1BE7
3F159A72AB7ACE1C0347278BC542E4525E503DAB0127B4DB6D8538634CC60BB6
7851F14F0753BA3838ABD61E83ECC39C427E62AD4293F672F8E7C2A49B534F60
E877F23EF5EE0E849AEC5F5E12463F6F05D059854D701CE420D546867EE7E6C8
7CD2553F33682A0BF985671C6433700CA8FFB638E7C7BAE78BDFEFAD10DC5846
AFF08F08956041F2912B4D70FD34495C96D3F9B091293B9C738CF5C9563277EC
3C6863C4A69B09E4DDD525D77FD06C322DAE13FCD48A4EA7B1B6C8F0256FC16A
3B47A4BF0DA1C49EF53974B4BF01C9BF194CE7EEC2C3AFA9E4CECD8C4029CC6F
377E4269806EB0FB78AA812F1513C2CEFB8F50CD18615EBAC10976BD12CBC1CE
8CCAD0333D455C3ED1518FD7F80539AE63A5045D34B982ABB471ED8EB18B50D3
1A150C82182B6C31CC9B161A87361A6D96B63CF0D97A286090DA8CB72991B175
EF3D690C64D9CB5EDDFF5B00B7C179825A1794CA054B6F7A8CAF03DFD7E62F10
CE5BB34BB02E50AA4DD4FD704F147DE3DCEBD3B1DEBAF3483E01CA3076EB19A5
FA2A8815CD360568A9A05176CF4111CB27C54BC8B4B991853982BB7307283D8B
93E5A2D6DF853B6E17BEF7C06A182456EB73D4A1B77FD58A853B07B04ACE12EE
D04046A4E977A39963B144EAB63C7D27F2EE65F677B9892C999BC81B3BBDA70B
E7FFF8E673275F9B84D39E641BA990B9AD160BB73CC391B6C36A7C1D68438243
1606D2298D58EA3879D2CAE2D285011E229372F7FA98F55556F0C4007621168A
A3C1F9A9DE81DA70AB287ABC70C4BAE94321D94FAD2DC3754CA39F689C8221E1
6E7E57EA41F552EF612080D82122D5733CC48978F6BC62E40728DCB3134F4536
C33E222D0E79486EBF9A506F92CCE773BBDF3A764B3793E96393DB8EF1FF0FA1
F3801274B7B982FC53258A752D43261486A2A94B321D90C9393EECE5B3CBFAAB
D0BBA6E49ED462B20AFB384AC2D3E290BC8FE7805D5C0B0D37F04586BDC8C812
686C653A47B40A803819C86FB0C8EF10AA1344350972910363FC0E3DB49A5D75
BDBED15C823E1E870E2F0EFB93A856F3A63E28CB7ECBF17E444B271FD92157C5
8727745CE16AA9376735A8B02F2CB426BB91CCC365CEE49AE5C9938B08DB12B1
EEE55B954D3694FA0AEC0836883D86F6EA4E10ACAFB7CE5D16F858F6DFF1246F
B2135837B67DFE58003AF012885480947A19B0F90980366EC245AE6D8D33FD30
E080775680F701952B697FC8FC07A014B78DEC48017E46AD78EF6EE80BF81760
B2ADCBB63D91D25DCFC77F2B8867BC0092BD9DF8EDD0F7DEDF2458F1F938D05D
DD4C3A7D4B3008EE86F787EACD7C687B6BB09D362E814AFBC75209C457A19F37
C9780469DCD173C5E5BB7C88F4A8FF1E664AD95E1F5D005B4F15416A320366E4
41E5CE5C8A53B64D290AC210490EF404D08C7C93531FF8CFB841AFF5A0E5A8DE
1E25EB0D03018A76C701E737D941569CE252FF92E3C0A05798F47B75B501B03C
D92B56739CF0D76A13E06283CB4F55177E3D6B28C265954DE0EC80A4CDFD91AC
A2FEE87917A4C63BCBDB24928F99D4836A62D3793411FFAA4CC7B12C934350E8
0C241E5C83E1BF8BCE56FFB67F9C7970CD00D64E7CF92F0A9CB5E672852960AE
8959AE74D4DE18D69B095F9F83C2D98F5D6D14B13E76E4686B85A3B606479B6D
F3B52D950EBCFE01639F6B0D9C205C947D60F2F0540D0E8B1B78AF3C5376F94E
D5769B92FC21082A872ADC4BE261FE71F0EA2422B17EF9C0338F63F4D4BA4AC9
D6C76169A46B500885E2CFB8671C053163F186C242F539453A72E3CD4F416A30
6C7A154B28FD021A13A11C78D113E65FAE2A6602D55510502603AD648CA7C698
E61A5B8F3689308EF934594FC5EFFDB86BED8324C690350CB92005EA3EBBB9CF
83EF65EA37BB27D684B89F18AB93968DBB6D0BD835EDDBF6F9425AE707A9E732
7418E39DC60A6EB89299E14D62AEA38D7E1ED70829196DB28D4906BF73574AB4
5DCF1FD068BE2B5B597021EC43C0396D5F172A723556BD8937D6800A6CAA33F6
A061415D49DA0ECE5C1959D9AA8513D8E616BEF8C9411F93E9FBCB6D2637AEDB
B0E719D54E5840E6F71109A5BFB26839255C305080216C0FD2477BA7613C8198
8EB16ECFFBB6D745422204786A17705DABE8FC123005E476FECEBE1C3E240E66
9EC0C64922C42D88A87D2D9766DB3E6273110B2F9281D80F004D184E9484EF54
222058917A0DFF5AEDC9213979C8716488573FC308948F839BFADCA37353F9F9
C7FC6FF049F4DD9DBD476228E880E779C7122C3823385F85F86DA752C3E01A8F
8A103A854A8545E4109BE8AD304A60B54F124EF2A6AD3E5E7EBA6AE533E22954
261017699960A1E27D714C2E2D370FB1449ED84B4169EC1057AC8AE70B3962A8
2A16D2F5EC8818734A52C2211FFFB785AC27000B218464AAD820DCAAB31DBD3C
2F0ABE99FB90E8A188E9E95E3320B650E814FA72E425FC6D0B5E245330843CC3
DB6AB767C90E8EDD41E12FA1973E681A7180A3917CACA630FB0BB7A62FAAF292
EE1F836E10730B4797B72E335F6C291A3BFD7F71EE335C3A6233735DB2A379D7
4D1CC655A657023C0B72C819D778F70D9654BDF7C3DD44B733468029F6DBC37E
1D00A80D8D9E7DB37593FE4C2AF5E00949062085BDB51E9448A41DB88FC7401F
725593E1E2281E1F880F829778EEE4197E71F8E59420EAE7964C98BDA67D7224
51A7781696EE91A0E6138EEA37EEA66A29A778841BAED8A196FA2C9DC4DE9BD6
4915CDF114F441422F0FE6F6DFC899C05D171FC0E370C9D27025B9407AFBA04C
19CBF35CBA1E6328BEB3DC8BF3F27EADDDB063543BBE32195A9AB39C791A053B
9D6B918B1E101C98DA8A4EB26FB47BCACE2863C768381DF68C4C8033BB3BBEF5
E93514207A5AA561F78B3F9C70C691B40F4ED7449650276BAF866B77FC16D797
B91398B1797FC8A8CB148D5C234F59A7E4E6F661431598B68DBA780DC8B34A19
AF4EA912CB694B86D5C7672E57EC16F21F87944F7585ACC0847A31E2777D0068
69A9C658B4729A5A2DB08E093EDFF069067F02F93C4495F9F171AB52A1A5BF64
C71D97FA60A71E3E705E51531028D02B1AD3E8E032AC8E599DE4DA19227401AC
F79915BC3230D5D90FA77C29DB133FB7B4ED7B0D7BDD3B018BAB38126626BE19
57BA72362A12E23AB2C4F2C20CE67ADBB39FCC59111A7A0A61ABB82CE1711D0C
193F0D086B49494669F901CA6013B32E0160B72239DB3C2E229535BEF14DD08C
A8E603EF0B6A5D6FD9CE8EB6DEA304E959E394802B82E7C4BC31E75E1CF077A0
6F520EC408B4237E2C5D41DB0B4395D891BCFD008BDE2F5936C9B7D3D7F7F9D9
06FD7B552B784F7814AE16D8351899FC23B6772BB69B5BFB57D118FFFF07511E
8C6E994823E198A79376EF3E24C11B6FA1F6DEA71942741038EB332490625EED
2F92A7EAA26C64B36C180E45C35457FEEF8039855872511C30AE0BD536024FEF
2E0F40D53EB1845EF5EA9E10FD5C63E01D074E58590F0C8112BC26F1969F9C24
6A4027E715AA573228315FBE916274AE6D17F25A21DD9629263D6D83E1C5E6F0
D0A42464C558BDB4FDBF9201F57C808EDE384E12A8235EC30E90CCA8AA3C36CC
C09C6A6D74F9A30B50CF7D4ADDBFC902F6A006AACD90582B29ABAC673E1C6D67
3A70B27EEDD61AD0C422B387CE691F8ED807C137C5841779A540211331282F9C
2997E5A81A6BE710AEC12B347D9238B584F24C63DD4A34D620644424F315D15C
C710ED000B0D28DDB19A4D99AC1E0E5589B7A6F7B2C86F2F7FA4CB217F201436
991656F10224C5AA8341E6658ACFBCD76E73AFAB6E5B0FC14CB8AA60A1E845E7
5AAE0C73DD9F872EE3D28075C27156BB8D803A64E4126866360A54D16EFA11DB
13E7E52C0693982399545875D6ACAEA88BA0A3474783CCEF9A4B65EE64958091
8951AC0C438C2B0413761A253A43579B0B640FDD1497DE8C21A0856E475510E5
142E3842906AA80914CDE9402E4B37D2A6E53BD127D2D3AD5149AEB5ECD8CE0F
A7609D35FB71A5E542B436D5C7D71A4CB29EE71D11E0C2769C4FE6E728D24E56
A0169D3676D3B731B35E37C70B8015A53A9C15AF4F78D0FBDCE03FDD2C3D52C7
5D852346EA02BAE2FD29487245DE75FBAB597E741336005E4A549429A51271D6
5CBCFF634640DB0D056DD5EC6D5A7DB00E37F666CA703105ECCDBC670A47CDB7
48FE6D422825339A8CA5AAB0B1235F8D8BD2F5D6A3515FEFD32540521E20DA01
A0141AA1F8B223BC02156AE4E096FED912A6C33DF4E150052091700123102EAC
E6AE38599BA0A0CB94E1099475C28A540D3EBC4EEB382E906F6B4A1CE6940F16
77D474945B0DFDB54731F85B138577CCA34AD3BF8B7677378DCCF3999EEC8E5B
5BE10FE19D636B006E7D7290A3DDAE1DCFD312C2726B08676AC7B03A9E5BF580
BBD88C779EF23B655F9BBBC31F4D54BCD94E4D1FB85ED55AC4475DE0DF309494
49CF2BC0A9C60D7DE24DA0C0AB8F50953F4DCE4B2FF8E60DFF1EA75F4BAD4B11
3C735758AE622B81CEB5A8F845B2547C6A43812D4ECF9C9E042425176A20004C
2C4A815A38E237DA4ACD903D32B7F9844B2E42AA7F5A5008C4CFBB51F2A20C24
C4EA6D69F6CC5E79CC490EBDB8A9D4AF6103A6CE3906449DCD35B922EFBDE023
3D5ADD67F4F5BCF49D61F67FB313A8E2F92D29A0B15C6792D299B9510A5DFA30
56DF9000191FA35C2999FDD7132B3EB5E95020B032C8EE2BB4543DAAEA0DEC97
3133A99719D7ADBB2678384749B7E1ED994548266CF51E5DA1E7D78283F24197
0EB74E258585FACA9CC47BAFA7AE9E116FC4A042404FDEFC6D20C8510CDE6796
BF13356BC9A3EDF5DF353F6CB8D21EDF5EB9B50AD6BE2804F23B1727C373DC13
E4B7B7F5F1A0333C4BA7842F4E9F3D067DA11B64EC3D1EA2AFD82DAF0087AD2E
0876AFC12C5777A2743F938C01847747CC7525DE041402CBAA4C45F273A75DE8
528FD3BC80427F9E3AA1EAB57E9E2F625484D388DBA06AA511B556E660B7C58C
232E6191D34214218E9C35838F7532579EF7430063A099A176DA59B024B2CE56
FAD58E3E9AB280F49EFE8B13EB67D91B6BF3BBA8BD16CB5EE0B3FB9BEF37503A
F4114D06702D250FD78E921D8ABD0BA3647C711CB3FF3CB1EAB2DD7137A9CA46
4E545382727CD0F1D75102D7BEB5737B3D3009136C2DD9950F1DEC8859F21328
330224F695949BFE58241CABC4D378ED409FBA824D76C2EB94A55575E0B44B99
5F05EC9CCDC503CEA55FA4032192CEB9D7160B024084A468FCE4AB2F876A1B22
2FCE1702E00029F29A50C636A6C59226685F2B7F885CE26FF2D2836BD9C03367
13420C1A8BCFCB324EA9D26744B77B4BD9099611FC2209A53321B737E518950C
751B2F929CFD04EC824A2439E9BE1C56A3A02420C2B86C24BB936C7752DFE88B
A682B788BF0113BC92352E873AFFFC279F2F3ED949F3ECEED537F134E3C8A2C0
13BE80DE36288A86E93DB390E241AC83B926EAE86FFDF45E037CC3794DDFF403
DC64962FAF85B9714D399C221E36A633C0BB26EE127EDE93B54A6C34C1B1F322
7503847E9CA4622FF6CEB1E9828DABB65D66D658349E0404BD3E7871E3952C91
81DA87EC0F40B008BBE4253D7E8E7EF16C916674FCC41131B68BA2A9FDB59917
8206CB366282C90FC91B59C8A0FBBB26408CD0110EA1587A07E4FB09130E5B0B
852C429A88461C2C51F924B919B8C4F98BA8BF058EACE6ED42C208AAC866A1CC
DB9FBF4227F1CCD9FFAF49713AE4B85EC34FFD123CC49EA507D36DD69F0072CF
B01CCFDD0BDEB72A427A0485F0FEC84B315C854A341951CD338D8B4E7A77E3B7
41ADBA8C621DE2AEB91E65A0D3E1BDEBD508A0CB08F4C4E57D8481592C817520
4B6BCB5196CBA074
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSAM10
%!PS-AdobeFont-1.0: MSAM10 003.002
%%Title: MSAM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSAM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSAM10 known{/MSAM10 findfont dup/UniqueID known{dup
/UniqueID get 5031981 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSAM10 def
/FontBBox {8 -463 1331 1003 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSAM10.) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 92 /angle put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE2340939CE40EE9186A0DCC3D3
D661293EC5BB40766B73935EB54125526067D631E1E3D1D6569AB3546CB257C3
4C12CA4AE98C3F99898F1448AC0B416B8E5C3EEF3D74B5FD6A1BE3C23B160E78
79A9E0AC4FC82364F946003C1B2E0EF3CEA944727E7502B65BA1331D36C159E2
1D107580F28A32E04CB876822CEF478BF4464CE4F7AE824FC786E099A1BE2A3C
7D2BFE2A748AB092AEBC2021DBFD5C40E912BC5856F3EF8615147350E75D2BF9
E428D7948E2128053FDB1F90CA9C7D6581E25A6645879F50577FE7F0B32B873F
13F97C524E19F1CFE3883C0DE1DF80FB61111978B0C2D028A99A712D3DC27D8F
C83C4EC335F0DB9912DD2AF009FAA56C5BD5855BA92851629EF6C47E6AC303A6
1A231558746ED8A78C76E476ED71246A2E15C51F465AB21A22ACACB03014B06F
201876D3C6F49E2D38D8C4FE8011F7BB148FC3227E0BFA51C0F9AAD64F0C6095
77B3D875476B666F9FB9A46763C49272FC504CC0E817A1533409D293D6D62CC8
DFDA666BC9DC70C4510BFB0DD2BC94B33D457EACFD754761B696163DB4C547B5
FF8994977A7C9910AF486487CE0320FA1E705BAF4B14FB937229D80F58D01E6E
9D9716EA3EDA84840B5D6BDE216A25814ABC4DE4C6818266C33CD4C3DA4F23BF
DAE6ABDC6D64E7EC7DE918DDB0B05D8413D32D99D15FE112C1D393D21806E0C9
7CE0F0977AA36617B8DD50937C5B0B5698947B0A71A167072FE1B3AD6F274D97
484926DF52CE7D9D2A4928A188E1F867C298E6DB475C0CBE09F0523D8BC6FE24
E1CED78178EE1E9D66A906B72505339E62499C0E4B6B5A2D596C4F8F4312F582
9413DC88D6EDFEAAE0C86BEE44CBDDD79BC02C844B80324B1FE3512E73C213BF
ECD22E7E13F98AB56E4D693B1D6045045E2F01DCC2AA1F70A4699B7D718A743F
D749133029EAD1870DF0B00EDEEDFD33642A88EB10DDF4CBBF8A7D8F7781179F
A91CF398747D52769A054CDACAEDC330FB79ECC96CF43C29515F5895D3A8C1E6
828F776844C88090405F868A872EF54467B72825B001B46F6496817A9B928BEC
ED212D4368368778F2D1B66D005F2D6E3DF4AB9B9791AF2CECCA3AE524781A41
5052FD21CB81D934F0F12CF8C8FFC656BAFBE897C5E86A21D3F42A38F7916693
ADD1DBF48F534DA16099FFCF3E3DBCB254BF49D8F72FAC2F9548477F9AFA414E
65A29F24FA16A9E0955A9A6CCC47198E6332ECD1A791F2E36E6656852179A94C
E3CF4477A9A6CF507B8184ECA5C0304FA15ABD8B0C379EAC19B9D16A630D96DB
A6DA819C2E481AE4870BCAB5963C0F9D837C97E207F7ED58B776799586B9F755
B705AC31C09C3F74AFBCDACF092B05F9E2B072C1B17EE6347523D3D5E1D404AC
636C33DD94121C3711C3D05F48E12DF8489F894E4913263176E81927BF5E3A94
99D124F64D00BCC288F03FD14F89E6352083333EC6C2044E2F81C477DD4CA9A9
55135915C27654B09BC9099FA966AD440417945879399B39C7BF20385456878F
9AAE7343912927476C2C88A445C03E3B77381F3F9A82FEECADCCF8C307144775
144279EB14E0F0443F8200C0FABD54A075EDCB83EAB07A7CAF6EAB17C6CDB239
077DC62173A54E93BE2911F4A45F72B80DD9C41B301B292EFA78D361AD74BD7D
2E94D44A2D79BB7B89708E094A21CCB28D80E0FCA707D742CC02BB81FE4B0E06
4A5E93DF0414BAC27ADDB044A0D444692973994CD028E1C62F1FFA4776554914
2D55B0F81C06A2633A4AE42AD00422A619E339F2E6F0C6FC74F70552974509A0
812F1007FD7055E9ABB8CB39F799F847993DB9593A76C388F9BC883D4A0DE2CD
BFD0F7F2A5F1C50791EB4363104B49088E6EA2C5E61EF256A9FF232357D62D78
0C876D200E4136F7B0570A3B0988F3E23443081591DDB861745B4F6F0FF7D854
8F558F995A283B346E266DB6FFB54E0761046152A864F710113B6BF12967D022
2947517E1CE2079849CF8EB01BB2B96EEC2575AAAD1AA1E019D7E72BCFDF2979
8E2A6EE0C1525389C16411E5DBD416467B9900F07223117A77E0B4C3B0D49A96
C2E3A61AF9C9B1CEB80AC6357FC0CA446FF87BA0CCCD81924F6209198BD6E1A6
9EECEF233B17CC4E9F0654024F7E857EAB409F4B9B9ADE4090F2B715443A80EA
130369A193A32A4DA3730F13E3C9E717CCC9E74611D787277B73EFCE14FCC3B8
6B11AD88F42705F65E9C747B472F379ECDCB7F8F9C3FEA64402972623EA0998F
255892C43CEFD7ED08957C495AAACDA59E9398B43788DF27F7433F72377C8F88
F54F5E3A5564244827EBF92227B94F4FE896FEC6519769AAD567E618DFF61B7D
B93EE0FFA2EA58BE1FDAA0025259789FDB31A1019661C18080567EB5C6306596
F97F039E3C9ABF9E40B4725A96F8170B49B73B68E308786FE99B0C005DE01894
7CC93C196E1F830570D51F0AD29BF27CCE45AD7D3B4332C9D50F1E9C2D04E033
1E197DB9BE1D44566F738CD26A13B8EBC8FD49E999D35F042E8A24F025414F14
D9D11ED702250F1295722F68A022196A0E38B9ADDDBA997283ABAA62898EF32B
C765387E238CA3475ED5C6EF2803CE32B5A90A8287C70386F46B84C332E8C00F
85A8CC2DE78D433A325B7862AD4D93B3EE2CABC4B688833BF263E26879AF213C
934FAFEBE8D804E2BC8433B81ED5DA99F08C2C11B93019D3D9C1C952F20C68A7
E141DEA2CB983DAC5A2B9426A98262FEB13C420EAA315C890F0B907BEA099C1A
10B0AB255AF99694C722166DCDA72FD58CFBA3328FC5EF83A52A750C5E613E74
A8572CB8B78ABDAC27B798E727E3E5AF9451416493FE3F4E95157B4ABDF3A910
64369E34A2B40176A5E0E30F472E33A41B8C7BA4CB1BFB9173783909161370AA
EA40C83C60AAE242358688CE13193C9DDC3544A959A1E6A16FCC4BFAA65A63C7
5AEF208FC201F88DD047B5E6EFBD4BB256F973269BA1B06CCFC186D48BCCB4F6
A0F512B1D6541417BB6045045CBE72B72AA2549C345B1BB466335226A0E76A10
9645C25A0FB4CD8455C7C10C0F4E7E9914D2010BA1C95C6BAE4E62C8B6A8BDB4
92281B366208ABD9C010B3660C5E150D63D6927255CF9081C0898E9B206FAB57
B306669AB87AF405C537CA7D3411DBC41C53EEFD8071C094486158E97BAFE90E
BA29BEB83BA60776D33BF9CAF9C7FEB66D4B93DA27E499B006D243FF59CB33F6
AFC65D10B74CC522BF4AD45E3451B395AD5029B148A1C9B710D5CF02B65F9189
0822C0A33C4D07F2DEFDD5B4F6E063891F0456F1BCA4540F9DCD3B0F9F39696A
52336AFCF0A33A029AEEB448CE120B9D939487EC8274AD4E1D5F5AF4C14EC910
680C5E312735DFA3A5B1835370A76DFA63A05379021A64EE55E25AD5218398A3
6DD66D1B474A2E7C6E236E0E4A9BD0E4F7AD1807C6478225C58327BFE1822000
26713D01CAD6951F456504D79867D523605ECD78F2D5DA05994BA4812BF65E7E
34ACB732150ECB3D212D03387C71677F617D76A9A42C708C89D61614F280A5FB
0BFA84A17CF9DF333C9E13DEE82A5ADC9D2E588338D247889ECFB090CC63CF9B
8D92B1CB784B65BE80E3B57998F9ABEE702E07BC127D272C67B0A97734E405C1
FAA87E6B9DDB8ECAD2B9DCD56D687DFF71BDF29BBDA0A0812695F81C5EBB83F8
0A810D6560F28D7CA1F89A11F253E1B3B4EBAF511454E4BF2C46A333BC186558
8D73374455A32DE993526063AE70EAA647454ECC62BFC5A53357F2955E4A8A02
E20AA64AB6511CEFC5A32874C8F2BC2424C6B85BAE80191216A22D93BF2813EA
18A1A961543D7C58C4F4B263D76AD6C61270F2A77468B3E59BA9D861E5AA6CE1
B7A9C4C2A13E80C4052283DF3529210B3F6E90C2EFF205866865E7E96F34513B
05A45939728619E02FF1410C0D220F6D615718893E7370A0B91675BCF681B2D9
56112D9D37ECB819017472DCD38FE4724834869F82985A69E33BF862DB420DEB
AA1CDF83099114501C037873E86E0D33FC954E12D40038FBDC78E7159B738516
A078AA386D9424B8D4913B7848D8439D2ACAFB7C81C9AB192D77F316D299D11B
24F67141B1E0FDB564B70FE68070BE6BC00F22C11A1291BA6401C722487BFE19
D7869DA874C9059677DBEF958B7AA06EB924A17B3EFE9014493EA1FA8C4C67B2
B5DC483ACFAAE88F2DFF9FAAA7825854671ECFD522540C9F6C3817C11D3B63CA
8ECF710EAC4F27506B67B972633D0821BD15F4511F305A5677F2919DEBF7DE88
4F60E36360A7856B6B6A8A866832534279AF45B4232877F45C92ABDFE0910F7C
F86825A1B6012FF93479BDC9639C01CF2C783356B33127AEC7039D40529EE54A
756D8B7524E069DA60A38AFE592B8B228ABE22B7BC9CD9B23277FBB567B1377C
77E21AE6F55ADF4F8864F4260562F0384165444385D5A8C5966EBF191900B898
85240634EBE8A5DA382E0EE3583B1B5D102B6EBFAD60AB9C335919EFBAA55A6E
36CE4887299E395EB5766080FC0B6F93B1247F28842FB817084C9C090616AA72
25F4ED6996D36CD9675009C615BA26BD4904F3130991023E4116A7E6BCB26C10
7106241DE039BA7F26E137040BAF587AE03A476526F025C70F16EF23474C0EEB
6E27D8562C7C733CF470EA198494A505A8F871E8EBA31D4F0D9F0AEB9D0EF63B
738B582F7BD73DEFD5D83707BBC7854B6FC7FA6E2636F0B68C4858B247F70C4D
F602764B9465975E9AF28C2046EAD743CC350E747D6524B9CD7F325946B9287B
F7D46E4342A71B0409B2BF5FA4D340DD549F6A5B05D2784EC5A248560F4E214B
C5304217B3AF8451C190FE1C312527746E45DE39D8D43CBEED9A19FFE143CA61
3B65344C26E189D790A0211556C609F107C78F55CA120F3449A697D1305DAD2C
D3EAB88E2CBDC022A4E036E232237C1C16ECFA62D6CF8EA3B6610B58C75EEEE9
676201206E4A8B8C7CF5EF409F2C0544DAAC926497B1FBCDEA07DF042ED870D3
9D74709FDB8CD2CAC4726655371EDDAE78A5D9E0811ED4DCE8C23DAE1ED44D06
F4DF09BD9A00C1DE178E766E05CD3CA64301C592BC01EA4F6D1973586547B170
A3338C60FA1148DC5F3F7B7DB5EAC870239BD137CC85AD54380379F5C30B0754
D0A0FD8DDDC7CE725B58F37DE7DF077916C912F2808D0E4CA32808D0439A148E
3B1E18B9C88C8B4DF23FF5C53B2881D7C23D1C239F08137BBD8FEA326E7CD1BC
C80027A40463BD58758F4402D3DCDFED46C2E3C405E1B1E8DD0062E1272AB5C8
91953946FBB4B9EB0A74D0F7F4FAAD798571EEDBF0CD4C92A6916909297F27B7
5135990685B849E8244D2EE73D5C7BEF1D3042CA8353210EB4293A2B2F1BCCEA
7FF2AA91F52D343BFBF5E91F2381AE5B6803C46605D471B7BD122153E87D872D
EBF37727370BB683A194C4C4DE13F54AECB116BEB3E0750E10AF272E0C015641
0F9264A21BA79821B29D8CB78746C314E6893765AB9BB7BB1730D758F687E615
D2AEED695331E99591AFA000AA540ABD36ACA911E91E20912AB819A80D5183A4
CB88E08E0E9911612639C05043942AC8EA0072E9CB7154C415C0FB37DFE3F01E
638D5052C87A8359DD979C44B730F06019191C5BED15E6E79FAF312ED8EB0B02
3E712A0F6C89A6F7C122A561F133FB4D2A98EE09B11ADEA53702C92C210334E6
8D5F3E1BCC0E81CE178ED749B00FF4089C1AC412DC5F6696C9D8B9D2EB24B35C
3C1F8F63EA348A95622AF76CDD5C4DFE06A8C7534A55FAF937777E864C98062C
CEAA3ECB5E518C75FEAA240910646EF782303BF34FBF8162C8650D5A6F0EADB4
FAD9AED7994003F74E09A3CFD8900A33160CD1D49AA1C7BB5E42A2B0AB5A9D20
A5AEE02435D84A2622ED87454A2867E112A9AC72653A7865E2DDB9C236384228
94DE4A396FA798ED1F370AE5247E0E703D4D4225ACC1EF410631555D7DBC814F
F84353CD407284FBEA1D371CA578165B888D771ABEF7C3ADE33DF899E55FB0C6
A99A97A474739D07FF17DDBA267EC6C0A6154094D6E7354FEEF9723F23CA6E86
D8467D66FC5DEA43D700C9712BCDBCB15EDB628F4B840A76D761CC213376A0CF
3F137F399AF2F349C1D7FC9EE28CE88F416F1069D6907C3E917AECDD245A1BBF
4375A03755C145042232F87BD3F097746E41A70FAE7761AB26D1FDBABBFB56FE
D8C80879557D3849CBFC7D25D84D137ADBB5FD4F6FEF8CC9D54824EC85DDF553
FC992F823952FC7591D08F035BDAFC9317F144C94E828F09E29A02F0D6639DF5
08D32902957CF0BE88694AA031FA8BCA9E73D48A60FBEF090FEFF955FEF964DA
F53A9B58D2732F986DD20814A1C11963E4FF24011CB93D616CF4A6DEA6ACC5B5
354626A142D85BFC4F03DBC32F26253B97414C9CFDF3C3EBDD68FE0B7908AF88
1961CDBB6A94155524361C0B95E42AF0DC1542752B2129938BCD020CA19D64E1
0EB5DE254B638D700EF4BA620D924D65E95A329AC2657D2CCA597A4FEF7F1347
05419CFB59A93578682671B9A2910BBAF099C877288C19A4EBEBCB3C64415248
C00D0295332B6388384F27779F0B0A2D05A9F3BBCB3C1F587EAE05AE4D2C5319
478E8D848ED75B368FF45ED8B2D572AAE502493D2A3660F8400E1AAF9B27AB35
99FA7E39E250E91A67101F20FAE8BFC13A07FD2F7FD3A45002C02AD891458739
10D221602C35139358B1F23E0DDEADDF0AC07B1689EE95DB17A3B6888D9BEB65
C7A9BA2CD903B2F8348489A57F5A7191D1627A2C76A856C9E178B17A40293F98
E9CACD819DBAFBD0FFEC6EF5BAA6D8AFF764786470A5B02860DA35A5B3A2BBE7
45E6E4882CCF3A980B0C35F6C170D7269F7263FBBBF4051A51437A218711AA18
A408F16E7C9FD7D61AC4E859A91CA4B18D5BC3B0F6EF0287298B75C11FBD9FA4
1BF203A988C21BC2C550839E432350ECB4471F8553F7B4E42128DCA6B1239DAF
6C9D4A8B8AB7FA8AB013EC3060F02D6DB609F59E0BDE4D05891811A41F7E47EE
7166D88DDCFF5BFE1AB84D873C38009A857DB436100CACD8DEB98548A2FD3770
B44D6194717757468A9C84238E5B83AD19921E31485ACC168C25DA73D95767E2
27EDA7FBEC3FA6C8C58DED3649994CC965F81327D8547181CE06A73A6D696552
6A6EB8009B1C40A46791E8DD0AD66E125F61CA6810BB4B74E266703F9DE0E322
41D93C72DF010EE7DF3B7AF46CAAA9463E68D5C8B792D3197C4EED52CD16D5E4
493C1F8944901537C4E6AC73E5D6621CBD177B50CFD7F86E786D6E6EC176F6C1
3D7E9346C2859A185793A764E960F236A1798FF5E3A740ADDEF422FDA93FE058
53A9989A0A7252337DDCE50B6A040E49421069081644A51C80D37BF73CB30254
BC1D8A551F71FFE93F068070448334307A87526A86A3A7D53AEABC3506E78DD1
849BFF403701D6059D6CC2CCFCBAC8BEBF440B8D3152C63908C6882E56EAAF71
2984E440F40B5F355DAC74EB02738BCB094E40A55A48A26BA9970D09EF48EDB9
C0C6BA95EC2A5E98325594AC418DFF541515964C77B8D2C8E953703063F17F36
D042EFFB97936DA27FC3601DDD601709B71382EC67BB58C8D07254A6BBF7FFF4
EADB3B735D143E4654A5F06ECF67F0305606CD0619022A5DEC8206D4F9B8D3B0
1CB47BCDCCC4F1898958555F5218EBA0BB9F6BDA92E8A8F645C51D69C597141A
DACC7696EC47C399F6BC4CC2760FF9366A7D1F2ADE54B913F1ED476D606ACA25
83D3958E9EE0547A5C54C359AD40D487FEED3555A936A7F9A2098050930339C0
DB023D22CC949331C13287D1108A4F840235AF8E613FD6176485B22A31B165EA
8DE2F2534E57BC3E63D44604D095AAF56667F587FBFB99FACB6315A21101C80A
6029178A3D776FC5A8B1F7A60D69A4170FB87BBE7530ED3CCB47E7EAF353A493
6AE9EEBB8A80C1A54C3AEB974617EB2CCBD6B35CFCA296983E60CF3558861A8F
2A802A66FE6B47462A7730B267D7539D4881614868E9767E3BDEE43F2A3C36A5
F0A47B28ECC791F94D6F7C0EB83A6F07AE2FBA6557B33F051B9F153EE826E697
A2A693573C1CA0652D95499910A28601A69D4910C04A7CCCEB525EE6A2D576B8
C636E2E4309C8987B56F59D98021E60AF004ABED8DD497A29681D763F22048
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman5-Regular
%!PS-AdobeFont-1.0: LMRoman5-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman5-Regular known{/LMRoman5-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman5-Regular)readonly def
/FamilyName(LMRoman5)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -73 def
/UnderlineThickness 28 def
end readonly def
/FontName /LMRoman5-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-566 -303 1772 1126}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D5E366B4567F8B1C71179751D38DE
09EAB552C14DCD4DE0B086BE80D484750E1D728A501EB36DDA2232012EABE46F
4F54C36AA715FC2E594CE94E9690253F9AE872DEF9091E25A9D7FD73512FAD46
941B8C772528E3A80A92F12CA732DE1460CB5FD1DAF819FA9E1CCFC106AA3832
D37573160C919A633327D54A78400F470079B6B1329E9F88AD384999BB626184
99F2C26CDCF35763273F3B6F226E9E54F4706F7F64DA9B9CA122118314131345
7EE1C14F42845F235E6A6157F87FD2B0069A3FFE68094665ADCA2D6F09103F68
59300BE424E5E62D6BA15D1B9FD7F2A4E40CC69D8D827A3E2096706B0D2EC51E
12E43A43F50BC93F45A54F86F4E198A10176F1AB8198B9466006B468AE2ACF69
986BCC22B224520F72BF6F2025D79AFB148408C463D4C05FBE11047FFD978A94
19F22274208AFC00F45E7C4532A936319F63B4448769CAC01E067BAA94B81B3D
E16DB13FF1E0AD85933DC6DC4B1DCEE12252BE0C7FA81D6A188EC2AB50395C52
4CB5EF83F76C36901E73833E2C92CB3020547825353EAE49B08B7BC575A1C765
3F09FB1B8B4432BA7069B1B411319D3B1F369DAA39789F637C2E35775412CB50
97244C92598495506F37518CE9A0EF8A1BB12EBAC2ACDB8234E068B106997D75
C5E7799210C1706AE188F7D8C15F484FD68C83A3BE8EA1B574CD543FE4C87F54
B65B51EAFA28D03D9519786575EB3A201BA07E91114DE53AA4F1E8CB784A0755
D5FA7C3D7AC97EF66D31A130F8EF6A3A6274B93B617C3B82231B0A7B6F06155C
5A3DBBF7E1A189309F8EC19BB343EB5477E85CBBA3A5A10155EC75B281609ABD
4BF1A453BAE8CD9BC976A1CCC27D8374F91FFAFDA216524DECE34673BD763352
73CBB7C1220C5FE36719B55E8FDAE1F65B79D31A52A9D43214248C6E80E61771
00868F32280D4EB09326163E0BE25D1A14100918F605CFE56DA8B9A95E2F71E9
64DFE422D61AD736AE1E163617431E7D63A7AF0E79C67CA665FCF325A4DDEB36
DBD3B89455CA9BFE2FE8ED26203A2B353C3C9835F4A55A241F8CC5DBE1FF101A
0A492961BCB7BA6BFE61D8947254747CF9848901DD600662AA124F2DBFB9F42C
B40A63BBEC54EC63CCB18E93BC17CBB1CA9CE47A0675DBF2E804072C010757B0
47D819B24DAC05EF13006A116C82E1319A636C7D42C6CAA9A4B1EFDF40752BF9
4A98902E608264DED8C3241F0F80D2278C7302A34A4F508E05E8C908C46B9341
9B9A697306B002E46CE2989009F8939A5EC6CF04D1DC824470A8956B7B47FEFF
3A2D6E11BFCACD6149A2018E62F29C46F0D9DE2A36056C5EB91055B4C390D8A6
2D650E014F5544E46BE9C7E0B1997E6DDFE02C0150A31C97C1D450F67B0FFD56
74E4853E4D6EA1976DDBF07CABE678671AD5FDE58A293FEC7BAAF00545A2E200
A4E4923105DF03263EC2C59DACBCBF4F8B6821501BA8A1DCE0E4AA6C193AEA97
0F45D01EFCFBBD18095AB5C0EC2F626498A0F0C355F94E92659245514FB4850D
FC7A0E65BEEC544A2F266CDEC3FB74A0BBEBDC856E1B1A065B1C34F194BEEF04
F6BF76E045E8814A4A25B82718259AD02CDB518BA4C4AD8F261CFEBF43862319
A54DA73A385F9AF86EF6E3F5211BBE23CFA17F1E229F107D0A7754C4C27620D6
CE5925909FD73AD835ADD9C7576B48EC63B4AA06EAF34C55A9DF7A5BB9E508F2
7E984ADFC4099E1610A8F1ACBC0DFE56DEF3943AAC7F81979ECA8231422739C0
C58B4ADD86BF54EAB5872C79685B50CC82ECA758FE32A72DEEE11D46BE981A6E
A85C135F60246D47ECC90571044E7021EED78915100EF59438A73C41D92F0418
3451EFCAE6D761BA36B4A8C4D61A96C406DF4CF3A843159D3BAA56B007DC6C0B
52D99ECCF89764E3718CF5AAD7E22763671F75AC6C8238797C13451EF9C9E21B
9C60F64B2137D498368FE6269F852FB0E950210F2B0AC83BFAF0420A18B40E95
2E098614C2DB3FA57D400530CA6FA9777776B87059684FE70A0D67D92C6DEF17
3E0B552550951FA9C6175486F899AB786591690FFEB4B0BE0AFEEDCBDAF3A9F8
0AF982F9653F2DEFA6365ABB1588662EDA312337BE642A4FE86DCBB069030AC0
A394E920DC04B524A3A442C7E50D342AE0995D1280C93ECB6FA991BED6CD2F0A
EBB87F65D5E67BA200E39A0DCF5BD6564B0C2F3B595C9F8B8A3106AC80DB85CE
6630A7C3E0FE565DDBD45AE467A782725D8B3E30CF0792D0B194A2E03372C07E
C4D6535417772E66F4D60ECE31C458BAEEF21A985298437D8A57AD995C51E6BB
BC2E24B2A954DB76FFBE2AB51344990FFB38A6DBEC4F56E7DD7C1B142979D80D
AF96A3F3517933574B07E505A45CC1BC7652B9E76547827EFD90798F41EFF7AF
CB48DB99EE28143FF17F1683D21DECF4CADB3E3F782619A4CC3B27215BDF4252
C36F8F82234A46B51F8EBF9A806FB807693E837663D92A3DF30AF50B62E4E013
8AC1B7A39CBBE3E75DA003115C7416C29A27BE5BDC940164A8FD9C5EF6BA97D7
5949E232995ECDC83A2BF7254D4E70B69FD185D5DA60AA63051DD7BE711F5E2A
B8585D9C731EB49F2FA5A5A6B5E003D704FC6BBB9D9C2EE4F3D571285E319A78
F909421C31359DDB47B9CE4FA973134372970A35FBF96123FBADF96FBF875E50
23D34DA177B1DD3787D64255F26B3D26D7F229734FD72535354246F33B2E2F7F
4DFCEAC871D469B89A31FC8DA5F4A317E7644446B44BB8012BCCAF8C59F0FE37
AF76EE986ECC5B669132039391A0ED0E7BEF100ABB401A60B1A27DA0BDBE5ABE
D44A6F0B91FE1986DDD520D8A429FCDCA476EDDFE15E63310A8BE05B7B8236D8
2B57FF08D62D1AA14CAC2886F8DF4CA67C11EC057BAEA084D203E197CD501464
60DE396ACE4A0A050A960230095553782491A414555572D81B716084F1F1088A
69A2B74058822221B090CCB46C0A8F2B599BD2303842C303C712B005BB68F991
3CBEFDDA29964AB2BE5A83FBE336D8C2D1325E033E6CA7B01D0B72207FAF08E2
4C5D0A20A385910CF5CC9590B7D2B6047D6A14598F301B6A7E97363ECBB7CDE4
75BB63312BBCC25FED541C36130671C924761C3BAF25E1DA6A7C4308FB3C14CB
6C3C656047FE57B63F1F98B539BF6BF873334EC7AD0F22F694A9B1B605CB5030
0FC162D7F1B78D3C62F09DB17818A5F1AD15C37D3EB3C09EA1702B10B0E40E16
407433FC9A216DC7AFCE1C5A95F61CA6A77D5D31434A09B64F8FD9213B477A70
452E7C3FF2C0B823742B9547BA97B2B014E28D06053051A80CB1353AB59CA4C7
A2FD4490D7A6F79A3B180D240E4D2DDBA4D4E7848A25F2E789C18EB54A63529D
717928A57CB378F900F83D458624EBE6A7D0067E3B1990D104EBADB9DA093211
73442805CF8F8F6BA060207B74316AD3CFA839A3F2726AFF3A2E092658E4E75D
2AB98C19276A104C8770D3E62C7EEA9759D337A1F82365D18733275A1938886D
2DC102825CB3EF2A75A7A3FA69E0FD82A04759D4161521BF6739131AAC99B7FA
D5AC9FBF383B3364B50D5860E9A1646A92A94062BA36B4A8C4D61A96C406DF4C
F3A843159D3BAA5C6A7307318ECE80777A5FA529030B795AA0CE8D74E529B072
BF7CBBA2338FF37B66DBD7046671C2E5DF917E9E31ADCFA7CD5BB810960EC563
F40AF416C079A59E62C55E71761462FE9F1C24F12DA53F9865CCE5434C844F9F
61FB670F5521FE1FEFC260F3E926AE8AE36C3EBBA9E6A7D63C4EFCBBEAF27168
074F3BAC5699002593DF513D3154E07738A2E39D6AC9429F1A359DE8E810DA01
91D78DC4590C6F4A4A6E85662526851682A4C5C968742603F4FDB0B0B6D446B2
9F4A0504DC2EEA5CA10067DB95276F5B0820E139D55D686C7E96E332FD87D55C
C27E5859EA562E211A70BDD212BBF5C833C27277AFF41983B1FA5937DF61E9CC
A3BFE943C25C0005C651E43963ACD7E7868CAA4488EE815D40E28CA5497917B1
25739FAB9FBEF8523676B7509EA7AD0D2111E41F3B274C07D85229BBB2BB2F0F
B1B3C663840413AF776A79A7F7282FBD398422F52DD7D4F199BBD874DD442AD6
D4702CB01A0043201222A5A45EBF34945E21DB85C5E332EF0A5947731C896355
4083117746434DF37B1060A745CB76E959A74DACA2371F0ADDD8BC75281D78F9
DE0D569CBDBB8C1EC91AC0FA666F6A4161E6593F9EF18C387E5BC1A5983732A1
60076864F407F99A68AD7AAE8419F9A6B639498953B52390D8E594B9E7BED1D1
3E534FD2A5E520FB83F50F647650E90E3AB137912FB38808FCE9C99BA997ECFC
11B62612EEEA9E08BB45A93A475EBD501E62221B95FE357BF67271EE6EED93B2
51B11A906347837117D1908D958AD0EFBD5C6CBE684E8993B9C480D2920ECE73
90AFEB6F7F9E6309A71C82A089CD2DF10D9F48FA1C161BAFBF18900D500C4CE3
599A4B186761649CF902FB88A89D4370F728D86F5DDA983EE440207E60C5732A
EF587491B60E2834919F5224AAB13F1E17BB472EF79C9F3591DD4C298417194F
7316068F4BB7DA76AA2BE8C2E140433640B24F4ABE14345D6A3A253C967BD350
0F5F624689BD1D5647A80038419AABAC1F233E8A680AA123A7C4A3AB05918672
D63800D9ED3C7BD0994D5B9697B4E26D499FBE545C804154DD343D0FCCA88D29
92CBFE6656A0ED50B329ED72DFFF1413E660A1ABCBB987BED86F6EA3E0321670
58311ED0AD1ED3B185D5177C15A854D967E8195FC8239B75243B40F957BD5509
1B92B801AC126E5EA0BB33407C56AD63401DD9A62024FE72E8608B0CFB275F54
35F3DD911BE11DB381C01A9C04645630CA24F8CBEFDC81CEFE1E7EF410013281
9EB6177E6B1430D54FA6EE1941A393CA17E459E336B3BB30E515CA2773FA224A
7914720E92784C5E7013ECA0861430BE54C026FD62F7D2C81EF13236C981A084
05EC3AD93FA9CB3DA0F25169B17C27CC63FE88712F554B62FF88E61627ABA5E5
23C17A201E21DB85365DD8B855E4BDA6A34B184D1A89BD614D7DFF502C408B4E
2531D02747F8BE666E6B065872B6C996C44E712F82A71C040CC46914D29D5143
8589883F4B3AA0690A4194719604D655F83392CE847E04B3DAC7E417094DA352
93F6250F7959BA7FE2053FA0B4E0A35453EEC505A64E4AC9B0D19B39BF010C61
449686A23E22A3B0DC696248FABE1876F93CA24CEA8F76E9C466F7BBBB6F47F3
97F59231D0ABD7A2EDE43E477B877582B144E5A0BCAA48A472001B4185D5263A
C2A4728B66AA267A757DADBB5CFE8349C55F794B95622CF985F50763D4FB9036
6A4CD61AC6757F67D7CFCA851396A6FA306EA3D76220182D57FB18DEAE2349F2
7FD72C7ECD04700C6400992BC331A4199A987EE214AEFC6CE2A1DC76424E325B
88AC132D54A5A908B5F2A32F38960F407C8F5ABFD6A52297BE877AFD483B7A2E
45D5CBB01020006C76396B1FB8ACAE10E2EE812C36C1E2B485259EA075F25686
927A0A136D522889627824ED0DA1BFEA292DB4D909B48FA55F73FB9648B66848
EAE89CF668D0E0A1DF7D08F2C5920C97B1584B7E0051107EE778B10EC2C521A5
3FC09A62F2A89E84964B2B68602D92E9EFF00404DFE374F5C40F7C7768A67B86
1D5FC2887F1635AACF2780A2D326CECF8B700CE9C0415271514ACFA19D2B9D2E
2E1EEFD91564F0AC54D70F8EFC63B94F73ACBB4CD279716F62A27CCD39244086
50605BEEDE2A68B5B6105D8761A750AD25750308A8F0348CD1ED0725AD516990
B85B5C80B70D1D5EB1BE26422297188DB7566B42A4B0CB64B3C32F296FBCB5FE
EBABCD6C455A139D565F8CE5847F76F1A7E16FA17CBE3F977509340FF834EA21
0BF0CCD3EBDEB0DE076C213ED883C1B4C6F98256B66E608AEDB1B6703244E990
9CD4A49E4600DBC7FE9A727D18EA999ED2793B5044A04E04279AAA541D26750E
85FA093624E31401C0A139B68C1936059511BE83E22175FD33DE7F72835EA926
00AA098B44C0A422D25FD07EAD975D4C14CBDC69B74E55C113EB226EDBFA60AF
43C7D37311FA695AFA2D120979622DF0B55C12FD923A42A027681EA5DC170DB7
D66FCE28DB743BC92B2EC376370FD355FA08C74EF272F49351B2B7870AE7F577
4ED4172CFC330E0BDE88751CDE48A55F4E0503D39165A53031425C5E1F37426A
DE8D6F00421729DE4DB2F27D9264336152062BF9C1F7C506B1C7D2152683D4FE
7CC6AC4B33741066D8931BA1B8155793703CAD6846D687D10713BB0097BAC6AD
4AD2D77946482FBEAD4031D9AB6265FB6BB647FD9FD95E0A2287A23A0AB26006
B5C0940459D185813D76680ACB091CF8D18B6063159C32943F0F6E73D8A0F7EF
263E1949E4D64E1E0DDA0D4DEDABCEEFBB94D35FD6AA23331BD1EA8D0258AE75
843EEC7B5DA65FC5113028F5CA15C2FF5AA7BA0A0C4DD22B38B62EA22FACE1D1
79CE454DFF93669606BE8C5822318FF299F6967B7B4020B64FF37AE7F91533FD
CC748D4A2A0AE8620FD24CF4C248948E397F8F7E2499453A7829EF715B07B78C
A642D70641EEAD894385C29EBAB74CD0B46A97C588C298F92C73A3CA86D60960
CC465D8B2E2FF21241F38A4966154285C49E1046B824372EE1E2B00C53DF9788
B45591972391929A1D45FBA91E3FDD00FF97794144F0343368A9170BECE87FD5
15F09C81DF5C6F78E428F8061774E99961273EB9E4CEAFBCEE8257076676FBC6
38F830426328CF13180FCF15219F6AAA2577DBBD57648E398F5A052751A5B226
884049AF67AFDC4A9828B04B090643FEAAB5CDCC83BEF6255F7B68BD347BBAE7
EDF985A31A59D1D3A011EA04EBF7DB3B517B3FF2B21C4398EF3C4DAAA73D2E9E
02B7C7F7C14C7805C7908B8334BD4FE842D57B04423FD0DB3A43EF56DFA464B5
7E4332F3DC5D5E4706C542AAAF276BD5E1D3D94EED3455C90F1D36E21D52A210
FECA5F50626F2159CEC144DDEC907CE0F426523EABE4F77143EBD6C7AF0DDCF8
2F3B9D3F19A09784794753076928F9867BDE889FD40BF27D33F234424570C583
27093E1BBFCA3FB51F3756407076291515826E985DE89C5E0D7375B95EC14C73
EC6DFC9CFBED73EBD70DE13443F8CD56E8D3510D3A2DF245B93F5A05EA389DAA
2721AC6E6BFF0015EA347E0F9C13FAA1FBA84BF4FE1A22CFF901CEAD1600AE40
42DD324D471A4D7A6449D75188F3F600D5FE70576EA4200A22D3A9E409045548
E26597DB0D49B84BE1362D29F523654DD31E07BA3954B288CD9232F88633A933
830B43783571ADCDD2D2CD922A19655959CA79B74895C88B769AD1604CB862B7
2FFA7E7B566BCAAAED470B4E2C6091DB70792B1DA8F972FBF7AF89198BE6437E
638FA41916335331DB63246401C56A3FBC11FAEC8EAFF09F46B07FB5EA206920
66C49523AB41242F1D916ED69D1B7FB6EEF9B143AEDD72B66B8DFF757D05048C
CF86D9C2503E2CAD2716C778BE25810FE125B5C289AA53571EA1D80C46D6C4F6
70A309901C67ABBC61FDF2ADD52E1773E48CCA68791BB3EAC35A0F9FEF8D15D2
4510A6AB4A2B8CE67DBFEB7E1DAFDBFC032CCBB03D0964DF8D25F7BDCDE7824B
DBFA90C418428EEA7FE8502D8A61B50F46B5B9122FF4324EEE370AA99FEDD233
0BA2F38CDA9EA0AC1EE47A5C70106AE7DF76703FB9AD2773972A8075F7A95632
AB02B88999EC28EBE10442617829C58627F62C3D658468E5C82631D52BA0C291
71B40E2BC4E567B4DC63A29B08868662A878270D2FBEE37AA230330D81EFC166
DFD5333398E07290CC693374507079698C07A7B9A821AE7CAF850CD09ACABB05
32B101D2206EA79309A7F87B1F8052B4C96280F684DB64D969015B9BF09E2EB2
7D88CE83FAA4C84106CC175280FBE13452439FA35772557A6FB3D646461BA24A
0313720ACE3287858A257253A706922273FDCCC030E18A42C47DD0FA1EE3521C
98714EC451AB5E52F581C706C8AF4739A2E2EF9F27A0019AF30A4F7551E72225
C12B7FAFB9D8C0238645C253E713E1AABDD1CF7E05DA9BEAA7E70B4C0C5CB380
7EFABFDCF9F836D144143C2BB3989D1D51E2322426114024F0B9320664BDD5B4
155AF20453A685A329867D8165CE82B70C6B443BBB8FF6408D1F434E3FF24D03
18007B759391DA5AE8EB340F6EAFD3D36EDE20B10EE93517665826A01E9F0C9B
44544FEE919B881181642CB1F6C34FF817FA8E8118AA593F2CD122E16010687C
CBA357EC5C1C77239733D652E530F6C4CAEFC15D5D7BA5444EB942582DB27E6C
1A5589717A5C551D372AD585BB4189795DC7DADF2A16E3969A424340C5153D72
B41953605C79AD88E7A914FBEEC22AEDADB10FD7EC61BF69D36ECE3C13C6069C
64B22F4460C76A9E6A6A1DB9213C2142AEEA0B692ACA1E819ABF8EC8AF7FE6D6
832E5BEB7383E249556A7D03753BA53A7804273BE0BEC782AE5B29D62ABA4BE9
948E84025FA69167A86D69E941C9AD6125A56234A96C6AD33F56C836BB8B8482
9B757D4563DFA8FDC2A66E45C96C8FFFBC318EF3671FA87B9A81A3249FCD0540
EDBD9496769CD6DF3199C3C549CEC434910D8AEAA207BEB7A8B227217A257659
0FE65BBA5AF39B237C53D32176E0B17A5F655AB09187840857DC14178B61206A
62F645EB9ACC9FE97D51E89156AC916FC29DB487A669486DE827DFA3C487FBAE
BFC1A5715B00D1495B99CBA96ABA9147ECEF29D69BD30BA4D9C5B425EC8BA459
0DD3555C2E4BB60197FBB2324B822D37F3A5EAE6735DE2C4F5B27DCBDC047B34
76CFB6B62D9B60BE3D172E2F03F5649A65663454A8FAACC185639E85C2BD7D5F
C13534168DDBA44083519C586F6BCCC52A931A723A236AEDFF5676ACDE6EE71D
C9EEC113025A8406EAD8E149AD5B28578E554F7DDB26D77984A9B499CEDB8947
4563B87923D523CFF87D0A87D9C2A2B7BBA180467A94555961414D80FDA088CE
A3BCD88B74208DB367C711C5DC5DED743A7ED41E852DC45BCA016BD810E13622
7146D0495CB5F6302C7BF689BC9A13BA20AB4CB602CCC3198BDEFE566CED1878
E813B8B28C88DD46AD99314621CC131F067BE82B7A00167945245303572FCBA0
23C75C6F816E62D99AC232AC9B5F97FE1B129C72780A56E0B832395706406F43
52C3BD0299E2D51F2FD2A838539F106D609D03E27B458B4CED0D370F9E9BEE72
06E909CA5AED88EAE8608354A27DA79FD0F96B3E2A4467FA7FAD83878518DFFB
3EEA998267FB51CF42EEAD7BB0A4926A8E18E1838F4BD242BC436914F8C55BBC
B4275293EB17A88D9339CE85E9CFCA1E8F117A79DFEBA74630564869DD3CEB86
B25B6F4766BB92E0183103728FD912F58DFAA4265535522E2BE0AA2CBD2ED2D8
2126476A1F590B805B347FEB13A0F6C26D3F6A424058F6800DAD2663D54C68D2
F562014FDBD8A4F43B8C4BBE13392C643D94A36B2FC74B53A9E929C04FAFAA99
0BF74A63219727F949FFCFA845B02DA6330AAC8899CD0DDA26DC539BD64CFC75
9E582364830BB77F218FB837E7B6E6298B3217E226202117CFBE3DE2C6DBFB0B
B25BB1396E7AA97F819A6AFE696782CCAA8E8A7216C37FA27D3F3E88307DD211
433C8276293FAEBC789B1F6DF42411B530B3CBC71F9DA6B570B4451375B9EAED
EA1115846E0E9DB15ADDB38514AC894FFC691E00B2E00D3A171F46D659D58E72
7628710490D4EAAFB5AA2AEC52E3A4F818C3BAE1D0A526643E1D0F81D86CB859
5D09B1A874789AEDAD0D84385CF7C56DB4A483D83D7CDB2BA248A366D5E127FF
E769D481F38DD868CD2B4E085BC075BD7242ACD03F878AE3F98DA779BC4F16A0
689AFC47D623761A3ED83828AA9DA08E4CFA1B806DD6309191E9E8A65FBE05F8
80EF13A551E3CC27B40D67939C4B12F7B88D68D27203B22FF45A55EA03A132AA
A54B5AC1B745CA3E8A11FAFF155BBD990108D3846FE48A7B088541F51D307AA4
64B838084AEBC3BF45F83594C8413EC71D41739D3BBC75D526668D9C930DAAF6
848E3A72DFD018BA844429BD3B584BF60FFB2587943DFDB4C6864CF1FC7152CC
208607542DD07EB45DDACBAC1620BCE641230920C23A801345599FFC382CF181
47282729BF9FAE0CE3CDA5671A9D3CB8A4019DA56472498878636226AC34ADA1
597B2B2341668A6052389921BF84B06A7F9D4ACC50C374D88734FBD05B2E232C
E65A88DE5D265331409E9C3FBB2C0883CB5C595A059FC54715439CB365500795
122379B1581BBC719C2B145FF2515C0D4B2AF2D9C3047E5DDC31CB8BEE497A0E
D50DB3F2F775CFFA46A74C3A092A7D5B7274DB58393E1E887182873FD7866F5F
8415EBE92E51E7FF064AC4C7BEAE9A4370CBCC6A3B60E897A2A10ACC9590B7D6
8F2DE5ABC80AC9D793153E99C4B4F9467A98BB2A1B02837AC3593BC4C0F1FEB1
F16E9B05B3980E64E135A4F79442D63AE725242BECD5082219004E8DA71604E6
933533CE9C3C1CD422C605740A8939487E26BB9233D4CDED694B9B4238067509
B89C71E9B881551E150BAE5EAA9E2CB5E83BC884BDAD2E7864F2E521ADC7C069
C46B465FF8B43B65DA3AE06F801E6C37B04B18441D4497E178F9782930826BB2
95C4BCCA4F916835F5683F03CF7C7A4BB50FC7FBCBEE39D1269CF59591E09347
3440FA2276EB5F1B492CB8924E2A7A8B42B02C25CAFE2EB3E9292F3A82FBAF21
BC9EA91B74EC159DA81A275C732DACE2E77C42FF1F8FE0F68B5D42751BD72D5E
24F5809F58BF1F5486C20C0F042FBBB8155EC868D4F208148F4777479529A0C2
345AC37310804965CBA5ACCD58E4C1858E9DCDC493E3D6E482EB873509269108
60A95DE4100D2A9BA91426B63EDA4CAFB3DAE3C39B1E9D5222A83F9E39E4E85A
9C57261400E889701FCADD15C51FA62DAC3031E1E7AF0BFD6F9040E36AA71D41
11CB414AF4C3A1FF1DA06BDBD60C96B78BD1D5A73E157AECB9F3F59C0D736946
734C69B9E0A453BAE8CD9BC976A1491093B30D44F25A2984DE96D8CDFC66887F
F3C563185662EEE213EC8671211A79C33030F3AD8162E7EDE66BE15496CCFC0C
FB4E67C93477068AEDF0FFEB7DD80B2AF0AD023ECB8F8B6686EDDD53283DF5D3
ED82456F5FF014DDA97FDB0804970815478AE6D15B77B6DA54B7C3CDD0823546
BE4329B97EFA4AFEF6EB447EB37A3093F8BC87EC54C4E0C42B085B6461560BDA
E91726125C32B8BEB0D3107CA1AEE073345976BF608179C8BF28994732BCC57D
928BC883B8E7606C3F833C49DC522636D5B7FB6EF764097A17DA725C3AF35525
D079A35B39296D48E85DDBB67BBD21E4FD09D99C07284C686C87AE283E6F3B63
483AD8A2AEB5805C2D42F1ED5428ACD8ADA7B3025203AAB593E649A4BCEDA32E
8DC8339208EBDD9F27C3248B6BA76044B9B6CFABFB2078F670382359AA316232
0D340D735A86A08EADD2C9178F64AA27FB7279FA09966098754F32657FB3C5AB
5CA79EA4CB7E613647A93FAEC7563535886E28292A4222656F3298CF87A13A3A
9771054905A58B78CAD093CEBAE3557C81F072CA0B626D0A5CB1B8254A4EF588
149C84C40F578360B58E240BE1E941CF7170EB90C3EBB3655EE4A7E522012E69
BB0D43A1842C41D9535EEF0550084F4156719E3D9C3668A71EA6E3A508B70E11
3C92688F8ECC6BB2356B628BBE87506B6EFE05DC693810FB0947FF71FD14BDC5
D1E325C4F1739B462F1998B2FAAE8AAF2114BA22F5B849DB16DA76D4B6E47CB8
C03E730F739778BDA381C85174FC32A61B787769985079D60CF71131977869FA
4382E4302DB3EDE6A964FBB99F8AF170A5FD7DC22C5EC4B966A6F5B67AB968DB
5BC1E2390645266166F85B79E4A11A816466C949FCB88A21E889779169F0062E
79A3B325248A35188BDC34A29875564DE45455D0ECE311E964025D7176A1DA12
C5F127C127C759CE5E87C06612803DD3561EBCBF76153BDFB19DA55B3F633542
6B6BD04C2C2B54D5CA04E5DBC61B22BBEBDBA394B908DA2A4E80EA615BF622CB
FC2D1CEF22898F1639376A8639A4679E62C795AF54996144F5F186121F7B3854
FE184DA1EB9D35F71EF07D9740BCE7F7351840EC9E4553B37EFE03062D289A65
3949F11C130F37E27A62B17E62CF33D72A6B4E64AB2F9488EA7B1344329A6DE4
7FD59BF4A29FC704734A510548DE1788FF9C89DFBB823DF700E40C2F4AFE25ED
D7CE0EAF2EC676BF0059B715DD5462BA30DC9A837E45873CD3DD3281D7157437
0C35C4DDAFB83D730CF2F00A0A3C2A83A328B249EBF2C31AEA9D19FABD5214D6
E2B830669F8630FB55709D85C29E7014A84F5926AD21E99D1A8C7C2A6C659F3E
E6D6D5F242F5ED8508E3A1F4C3A70DD76C862830F89D24898E7A9F6E03B6E671
F6B34ACD79560771B58BD38E2D621DD4DFFB6670BDBC48A0EE9ECDDE8DD5AB6A
6510CF16E8CAA48D18DE6EE024E5B34886AF235C0907269FD2CA5D87CDA57D25
01D7F1EBCCE46322236535465088F03DE2881BCECA4E7837A5CD2A3AF2DD6D4E
50A9FA8AF67CE3FE823A4E3F9E30467A7F8FE3160E3A68C5B2F1EA996FE71CF6
D1E942B831536397527506CA0C9A886441FF55ECF8069E82BBC87E3591A8F7BB
ACAF0CDB9B68E1561371E8F78898E720C53FED3FBC4DE9E8AEABC46E892F5C3E
5A85F1CA9C7EFDE1AC5BAFA3332C7E50DC7F4449D54E259BC077A768540F40D5
34E795EF9019F887473996793F6FC92DA11F5A2911220E2AC39A160EC8C9E5E1
AF7D9449E79298C6AE53D5DEE0E6B465BC273668725BFF2B6BF271B4E43FB163
096A39E6210AC25E07669C5BB03EFD1554FB8107FA99016CCCF8AE794B156F8A
765F5298B12F0902609E3D18C14AD4D5221259538F0CA3263BA0B22C5E531A65
22FF382FF6A474BC95D164B029EB8875677A3C0E43DE1F5743DDAA16C8A36548
1D82F1D01F905896F87AE2C38244A4B6470AF1DF4F4EBE911581EA3BE89E4CDA
A3490AD89A4FE8FD49FC9C8914C4A02DCB27989E0752A84E260696B65715DD63
A14FE70BBF7EEA5114584A910488969326BADFAB299EAB77CC0EB53BDCF9FC76
7A18B14A29049E9B2EE00D5D6DCDDE1AE858AB0BD573C2E4B6810C4185DDD5ED
CB6C88A4648A1A40235689929306EA051B4673096C72FF867ADEC79EF58EE77C
C9AEEB43F80546B5479DEB3053E25D96514DE0885D3BA5976E4D90C214782C88
AECC3367A8436F035D79715C69709BD5C0BD53D1831960C3DD7B0774DDACAD3C
E68D323BA915C10D9A437FFAB5064F862222925BD2874AFC1E8D4A6C25AC48F2
6748AF1F586142B2524A8EA76881278EC54549F3A91E172079EF21F73ABC121D
8DB43921FF40006597DDACB2C95869C26EF6419C4C12E7A2941391819066BE36
C72A10C9B7CC36B5F2A08764FEF3B2B548D2379F1F2A85181144E5302C584C76
6900ACEEA1303B6B728350830CEC16013D5C0DD01B294BAB96A50CB449B6497F
A6D9E41F60A6F118E90B180B45D06B34D1A0C76B930E62BB0DA6CC5F97FCD349
F8418B6A01E5791944B2968689F362872760954D2CE0CE474B3A5826DE04B5E8
0FBDF21754442E6044F41E0A37951CF078F09A9616E5E09932EA63EC772D9F40
81BCA683FFECEE5B7BB6173763C2E6DDC9C9D0C05E728F7ED87EA484A596A6A6
2D6E82523051636C5F39B7150B5C009A6DEFC2D6EF53AE48AD7E69590B654771
A58D2FD3034EF423860093D81FFA11EFC863320EFA2C42E085C3F897F0D49D11
61EACCC4DE5819A86EFB44E5D08D7E6119989A58C066AF5354CD183144AE9E55
6D97F1F463EDD0A9C0118790E5780C0AC27A05B33CCB39A7CEF26223D6A85D67
B8E9455FFE82B7E0A6271A773EB2B16202B2F1B9B785E55D27267A083AB75D90
14B95ADC328CC3AC493DE8C2F022EBFA14A2976D8E3052E29EB200D9C0527F95
76C9CA4DCA2FB7C7EBBE81ABB0CD1125C2B0BA6F1413D796C008A2ECD55E062C
DFDFDFFB37CB3303A57193A074A75CD8BB734D2D090457D83DB417E2FB31CA9E
6030B970EEBC3219609CA323FA17202B263F7BC718B343821AD20575B7C1EB18
CEE6EB3C781018E47B8432BD1AD7A9CD912F2BFF83A2C4705A241F077F80FC9B
4384EE6F9A1528F7E58A9CB23E3EDE46DE00EF94D0D2D096B734CE3721C371C2
13B6AFA0E73EE03856853E002ABC509706C00E045DC552B2E5EA0588C923502E
EA90204B4D372CA1B7455D51E1ED8E082C5ADA44110203360F1941FAC5C151BC
B073FF6966BD9327BF0063D7B37ADE87C03A2DD1CE4DCED3C6423C5CF357B67D
CEB15B50C31F5DEDAA18EC159AB6F03107E692DE3BB2EF8CA99B057CAEF9BC50
F0EE6AF1B93250698AA337CCF5E19646935341BD381BCC0919429B21C62F2B7E
99F5A58E88F04C3B65660594E0C6B30B918A0DC8FB6A30340D67F8BEC315412B
A9A18E9744CAC5F1C047BDA802E34025D45A68E6713BE049232B3DF2EE4EF47A
38B35021F5EB442BF47047FF186B26AE1DCC2AA5081B91596BD0429403619BCF
C29B109BE23860C670D5EB5B0EE4515A53E0404213C6A94A7AC4F217E3AB4BBA
8870B2F09DBA9E476E36E9127419F27469DD3BA6A1D82680155B52EEBE77149F
7CDDEFDF6AD4BC9BF80F3188A55927B45975837BD1841D0069FA69EA9F2AC105
D1C9AB15C01691FEBDF96D3DC8C4527837DB241EE7FEDD285F249B262A605224
EDE522641BB0C9DC62EE166334B9919AD6EE65EFB34F4459555FE53578DE1E24
3BA2E58DAC511D9E2BA92DDB65A8FC8069D4D1F6A44841B901C02800247CF19C
835A459BC9E1BC7F215B52370999331404958319BAF1B6F5FF9AD86896ADDA4F
2C0DBFCD1004BE8FC677DC3C3B42A81058C34BC3F8E4098C22E5A050397513C1
8D5FE5567ABD3D9951F55183CA0B9098477F133CEE7642DCB61202F272844DF9
2CC28D8FAD80AD511F464AD61C03080ACE7A8462EA4D0A2E3CE3EDA1EC59EE43
FA5989D786F8E6A28A5AA2A6206FBC132F4ABF5BB7758DA6679E57994F61B328
9BC269D6321696B1D9C4208BDE984002AEFC083CF9EDE0778C2D79BE9FD9DE57
CC35175F28E95D98CAB97B709C0C4FED927C9D39B41E36C19D3D3F3B99F43228
885B0DCBFB9C8A95985A0571E67A52C39FBCD0FDEAAEBB5289568D37943CFE6B
7DE09DD4E8256A295C9710D3594B52234E623A545ADC9B1493D157CA83E72B40
88D4779DF1D884B36A67F024A5C4D4092161E3F6F212FE99477ADC3F69279710
3CBDEDCD86C7C8540AF70437BB056519FF432CEA503118F0A2F57D33E989C7A2
14D7171BAF725B98274C1DF15F81DFD2B70EAE05A1C407827493FFA2A96BE684
835558D9FA31B09CE360CBB7E6EDA99FB82D4F24883185E3C7F6A0EFB2930FE5
4A8797FCABFBDC68C6EB5DA286DA3420805F6205E00EBE73ABE678671AD5FDE5
8A293FEC7BAAF00545A2E205932B49244EB8BE2259642C943BB5E456F818BD72
9B7891F3A9165CAEAD2464D8D80FF6C61F4410BE7699FF1F0E8CAEAB09753291
09C6A52C4D512B80752200BAA22108C99E0A3E879CB5A38461B33987CD0A5FC9
7C0B7763E7026AC50CDCC67FDA475E13240445D46726A6D4518918527601F30C
7FF2B337B41232EC7CC4F97EA37953551C92B639806DAAF3E5F1EC2EAB9EFD60
57BFFF54E7FBB6A2F3041269F715A374FA5F0478D6FBD7F0835871AAA9D1DF5A
F784DA0937C74083746CA9A8557DFC573A25110736371F7864291A3B3F753DEF
98426130A132BE57F38D0AAFE0BFDECA8155EB4B4622944D399427F1230E92CB
2F0DBAA9DC2F6628F61497ADF417AABEAD370626D52E0722A28D29245A4AFD3A
E32BAE8DFD59DD21624FD27F652859FFBE66646D4199A62ED28A30C8932DC4D7
8543E837087FE7179E9020062622DE064EC1424A365581ED6938763DA88DC72F
E6A7DD768B984FEEFE58A20D89DDCD7231B5ACFE00F965ADB89E171134E3BFE6
5434652667A235E58A9B2C1CD3BAFB126607848A6F7FF06CB2008E398980C7C6
DCED448D1588FD8922A47AD1FA0D1E27F4F33AF3E02DFAAFF16DBFCC1F93AFBE
A0E6F257EAD86939A98F9438064838B04146058A2C52D99BBF3C0E19CD3DEE77
F3538ABB1119F13CDF297EBD29C3DD1D8061CBD44517068178925302C10D5F14
CE4CE1D9FB37F786383B908D8923413B4763CB439B326A162FA0CE6FDBE44637
74DEDFC3928949F19EEE06C1A0E5BE179E380FACA2865F8267C8F1756E5F84C7
C95FDAFE8ABD88CFA0CFD0C1DF4B83A1EB775861645239EC6EC6B59F4712FB2A
F9CC772D4890F05058B3311810C6867550C0BDF39E8BAB7E3E61A7F1029FA5E9
FE7BAA6A177DA4CC2B5B3D45EDEC96437250C43D32222BA390DB627D9C246F4F
7E792DFC6FA41F7B4CAE3B0FEB1B59B66F44DE3FAA210319CBB61942B72B6C33
58D293ACEFB6E1E6D586D249A925EFDE2D57D0AC1341F032BCBA162134FC3DAD
B6F9AF2C072D8E552AA4CA3F840ECB11519B06EB4413026985D4073EB0BE646E
41F0E12E0C0729E5F10461A8DDBA35312E1E5D976C33A4C1B9D5384F70ABC8F9
F74EC96506F29BBB484DDA6371DFFA6222F88F0886C7F8848E958C6A6CB2835B
77B564586905D558A3CFAB0F1F342659B3909CC1D133AC282085CAB4EEFFC5F9
433FD42EB6904A8191B0AC082197A1D4DDC9884E140B04A635B81D007AEC307B
9E51498265119F9D2F3F9ADFCF3F625B8731B4C8825A46B6D70EB017FBDE3970
2B4B8B60C24B7833C20EEC9B98B413F0629F86E2A6B742B1E842D5A029776140
AFDAC96839397CAA9C23D0F483D155FB93C2941216BD01611E70ED5E18C5897C
A59F354BD2ECF30C6D9D20929FD06C0E2DC5B99D42C49601D06164CF75F70F6A
F969AD6A19F8F0894C659A61F005C6FCE1A0E9700362C2673A10E2F8C3EA5364
5E2E7FB17FA52F6950C20211C088F4CA0741BBE9B037B6EA815C3D70DAC34AC0
84B257951C81895DAD7D74B8182DB648FC01DE11C0F21F641D8CFF5F7ACFC300
9B39005FE49A79CE949CEDB65B152C39CFE3D41825336318DA007E49C32BA482
2F3C035B3F5096D377219DAFD0E416EEE81AE079D8FB17FDB119D490E0A9944C
09B4037189A2B0D04409CB8446DF8BD146FF2D7827666A8DE5559C813CD54256
1E3AB5F5AB0BA282276116F95A17A9025C1FE808C6FB887E79634236E70EB2B7
658DF687C9A775D9EA3C72674A561939FD225A42718193599D9E987C17802C37
E47BADCC1E0EEBCAF553F590155BF03A84F0DC427C57B71704D2F4FE437D8542
5F579F25F6F6C8B0D9FB1B359EB83E522342753241E784AC125945B02F5E350B
A327DF3F4F721BB7149724C2BDEA52C72153C48DC62B435E2D60435497EFE308
A5B7E465A354B42C8975742F75BCB6C0CCEE1136FC7F55A7A7E8C3BCA79544B1
A2F756D81ACAE235A58C64DB60F70E8416824E45E6541AAC3BC7EDF542EB9866
6B64E44C12312900526B412117FA7BC81CA4B50CBAD741FEAACD987957698B8E
FD8067C4900E70DF9EA4A876EF77761DA6768AFF1C80468551E82593219AB39B
F20402826B8210EE7CCCF06B3FE91D12AE88814DDFAA3503BFA50C6CACCDE129
5B615F37F1395827E29E3A1711FB2B681905DD9A6796BAB8A960D5CE6208150B
07848BC8902E048FFE35DBEE9CAC7E77D79BA760EF4C53A3C983853B07735927
A1468C4192AE8D8799A91A9EB19EA03D488189A820DA94B1438B4AEB72DD3680
CDFCE4008A7DC06ACBFA9BBB3BAF6B285A4CB0057689E72DE1D7D5770F0DAAA5
8962E8A8CB29C6584BD23C0C34D077E4EEED50C7213EC8134939CD28AF21976B
42B06A63719C44432BDD20778E82FBFF5F294B5D0D796A90FB81A5A18E98E97F
3AC41B5470133F24B7EB6B0A4C88BD415FF70F0BF58576F7971101815CEE9018
765F8DF8ECB0A02D9EED1922E8F3B7B8DC087429A3D69116B933F366F7930FEC
7364B1D3E97DF65B0612857F360BA1F06AF09DE5CAFD23D10D08D6913F9101D5
22DA03412A6C4C6B34EEA836994AA5B85E67BF880AB2CBFB7909B93FBE74BEE6
955D3E4E5D870E63F394C4C8430BBD1F3153BB1E66022BCB537FA2F6E9D748B7
24F859C717553B6E62097C0A408651B63BF8DC20C8D6E6B127A3809FF2D5693C
2E7A4517FE0DBC7688431FA1E99468E5BF42ED89315CDAF8B686861D9CEB24FD
04E12BFA3A0B18E836B51A7CF5F297CDEE396A568036B06C33F7273ADF8875EA
0E53899CAA8CCD66DF5E4889141651A5DEA6262FD54F422E7F9553C125FA5B7E
B782F24BF7ED544AE148467180DC2293FA812D817C7A0C37B62D3D1BF8537CFC
E40CA18283494E800D9FA5E36D5E86078B95597C88D44E617C5F530D6C432260
30BB44812DAAEBBB8006F056F294A4A5B77983DF1D189681C1602259E6390F35
9CF18F039F3026354F553B180E590D1526EA8CCD820975F84C242B533C5F2668
82143600AE2D5E87BFE61302B759176098C0CE2464D64364D6B12790D8A7479D
926E7CF5389915DF462574F4AEEA20180383F85FB9B692A0A29241EE13B4F671
4D41A2D3A083030F577C091CE0F82D95D2AB8451DB683159A39410AF614941E5
A2F473A7FB099D3D51EF85BE0B5CB46887830618B6B3407A6E655105235B3419
660D079F71D58F33B3EAE57C27B1DAB7F691529194054B3709508F287F0A1A55
3FF47AEB55E074E0A7EDCEF6F7111078FA6D336BEB786F9F7BB862DE9557DBBA
BF3A9BDFD6C700DF612C1E536F87ADBF1AD9AA04D7DE2096413AB8B3C9EC8AF8
F0ABB488E7045DF33975EC34387F5E4BC4A044FAA50E60DA0196DD4B0E8AEB23
739AF92B579720B119FEDFC04BA51075607335EA30C933E3EEDAD46AAD795273
2CF37272117BD060711010019A97B116AB929E54C97C3C9E07A872672604F139
C499CC23218FBBA2174F6F4573094AD5E004FC3414502FD8BC997C6B5AB50B0F
6062C0B54151EC41CFE9353D29974AD09440EE9307549F89CF5DB5D606A31F7E
EDF4F0298C9AE254619CFD825A533358449A46CC5716E1BDA9EE77AD3E44DB02
447082FE80A5C1AA00C6C757576EA0E4C8F0F14614231A27583759AFA04AF25F
0A82F1114AC09880F80827DBBE528FFA93F6267239F922B9E281B6F00CAE1327
243C3D00DA2B21D97350819D14FE3ED2226B71E37AB4EC84EC4C9C1068294EDF
4D385A5E94F122147F1F00F23B1ECA5D3BEE6A16D6C244D36FB6F2A10673088A
A9391CAD3D4BAC77E3BAEEC8D3C188F08FF2AA1C7D96028198DFD7488D94B054
C8AF27ACFD99EAD434BCC277A4805E6F068CF2030A20533B50EC14A43279E027
60F37E159C9766B5A9413D12F2DCA7F1FFEA417A55A919D4B9734D9FB7982A52
3561133F9C47E58A0E5014E9C2670788FA0F0A5CB37424777C4588851F77B198
EB86053AE110EC3720427617D752F1DE2CBBB2F3B2D3F3B7005E9F83E783452A
7DD7A3CF275AA5105A3A7422823D4A30D7FD19F77BB2CC4FE07BE57AF781BB2F
85B330D0ECD4F969AB2868B391D759AFDEB96E4C3F6F3D70BD587BE7BAFA3EAC
91AFD9F8E97A40BE0B01A33DE66E4A145A65DB755677EDBDA91475929636BA68
231730C7F28137AC3A0D90E781E785ADAA07417A24C0489BE85952A6776CA88C
806DDA31F02D2F65413148C812BD4323EB029D021211373CD1ACCDABCF5B8666
A2CE8BF08E5BC37A6C14DCE265FB34AF4C945AA3DD449577EBDC00412F2189F2
FF6EC30EC7E3EB3F60D3CB265CF381F02FBF83D19176AC10FC9132536136DB83
11C202DC92A263CCF305021C674FC70A8D1E5B9D693EF09EBE614D4BFA8B7DAA
0AEB340D42110B7CBF47CDEEEA6D89BB91F93DEA53A676EB142FADDFD883DC4C
F954286CC46160DE1F11ED73D6DFC7336E49A1AD47FA6A4386646AA14FA38D0D
6B9C0C7CE81C66030F18331707B169AF5703F015A210D9182678AF5F984DEA53
961C2C9F3F451A4DCF54441D2E2D5B38F8D4FF1997C6524996D6C517035EBE97
F26B0B58973EA9B5E0D111D9EACE7A50D4B5C232674A9840F94B9CC170284FA7
1225B2BF13406CEBA4598941E7DB8D7BD4E21E3740A1A27C753AC1DBD8800303
F5093BEA4693F9C765737C0E78E7E83411C6679BADBA2D8D25EE5EC8D9B7AB65
5F1904E8203800E033AC9D3189D2FD1C1902CA2E7BEE15F85A0F62BE3CAECAB7
F3FB4B9D4284CEDB8F2C33B0CEBDE14BED366D2CE36D64EE6AA4C8D0239A29AB
3346E68C33B49D0C265EC2511211833F8C475D7BDC3959C3303E17843429013B
86BE815AB3834445A1BDBE9758D8FB98FB8C3397DF6052EF6435BCC52F1F2789
10A7453E1F3EEED60548FC8B0996B192D9CEEE79A7012A045FF72ACEA0FE7EC4
84B84DD4DDD8BF2C4162E29745A69E77176190E3D854243B2D272CF5C16F0AAD
1815A417E0437093AE98EF4429BF719BF6CBD17B1F1FD9A7C90BBB6B0F73B8A5
CCB1A9DAAF125E79D5AD7DAB05959E694040B2F50B458C9A4495D2062DA1D8F6
684D096AA1475909CC8B251CEA22C286B7F058E8F48EBFC36AAD3511F899AAE7
221DCEDC7551A0B9BD4F15890A30994C0F31EA7BFFE2C133C147849045F8F102
29B9481833A8B971AF90FBA3330FBCB6540E7EB3B2ED0460F81AB38B9240BAE8
41952BA54B223C4F40C139AB891A41C7D5BA5338BFD581468A58458E9BB0B84A
445FE64D0F3CBE0974F6F726BFADFD714FD8C13852D265FBCE184CEC42A03EDD
7A5CC236C5E2DC0CB25E8F7E75D2DD55876480CB3EC443C4F8B269E004F90164
4D3A8A062AA13A9AB0B05CA3B0D56D73C2C3C3F9B01526D9D71A74984522CAFB
AF6CD275B25A7C3638669FD69CF96073C3BB41E21267B2924E293961C57FC15E
725CC5F28BAFD1E94CFD3A29AE7A70CC03D93DBD0CC90695413FDE088379EF22
39E77CD65AE2917015B168927E4925532684A429F690536B79F694C12E279E84
BFE9774C857619F0BD15B6667B8825B774B16FE1145939BB511D14C6F5A1FE46
E885881F02EEE710E35578127746837223316D9B95988E20E1E71BCC60DCB66A
77E8976867475731BFCBF77993B27F23C4B9C00850EEF91ECBE5B796DDF00769
66E3DC90E648C069C9F0A5B00E5E080E8FEFB94BDCA9B0C35BD20B737640F3A2
9B31B88807A874392E443C9867046F4B020955E1D3C7DDA1D2D0ACDC545F5E95
08298692F1D7A25FB8A43CBCBDF9C3BBCF8152ABA14FA9FEC5040D1B278B4D30
DECADC1FA669C6C28E3394A8764C9E185E8609A92942B5CF2E895E9FE3110CEA
BF5CE69F5813A5220097640011752EE9ABF580296EE177A97F5C50FF92FB804C
7EE832FEE764981BCDDAA06C54247BD18B7A124F020F8BC59461A4D3C4A9E04A
EDF9B4CE2928CF3C1223F6FB12A35F89B01EC387768D1F9717B0EA1B5C3769FC
CA065537BC8AB786B7331C62458523B7EAE820C10BC35D42045E5CEEBA8B279E
9140E054811B3EA3F5D23B9220A659E44717F793AC418AA997C16C2988EF7E01
48A1DF74DA038B9477083C695B524A6C07661FE6953BB4C0EEF805F7A0245D88
CFF812AD00A931626533380BECD9A77158110E3D111EAFD6F62578515EC78E18
B045F400D54B000D430631A576CFC7CF7E387414E4A017F9FAE43F47C36E5544
A2AE12F381ABCC821BEFA442C8D20A5A230113328B822D3A70B1F0D710AC7121
0359986F177C33E5032432E7B1C8454B8C49CF740734665C5887D21F219A295E
A233C6DB774223E045D831BB05A5B84D1F2F28F0ED22066814EFDF26CC98ACB4
7E3EF8BB1A0BA110FFD14534C83B56DFFAC19A61D653564D8C789BCBDFC935E0
EA158B8AA5E5DAA52BBF99D226F5829D9A7C2E01FC260CE9AA2781F88AA640F2
33A0F99927AEFDB5E339D315193003BCD9F2377EB35E06463312D48584EA1598
B47E90268D1735C5985DABEE0776B1A98FC2D040C14DD87114A9B084D4A06CEB
AF6E9A2C69F153AE233488B2D41B812A11DD557DAA1DE7E31F9952F450564F06
CAB105AD6F4C749DF90FFCDF5C7834138A16E9F85EC9127530F18DF16ACA8F99
F5EF110A4B6E7DC0D313CEAE3B7066DCDC196EBDA260EBBF8799AD4FC0BE4380
49DD58719392C09593CACF2BB9A04DA6593C846B1FB75433B24AF1F6CE127042
9F6BB855F509788DA6C2B8989DDE361B3E647E74A24385950EDEFCD3D6459B5D
9116FA780FFE181A696FB51772CD8D06BFCF5CAD7E90636DF67FD47B0E4243A9
295C8A6341292AD4367DDC8671EC48E447C84A11C0CD332171A351F7E88BA5AE
501AEB4DD6794AB5B770A14C98A432A67BD44377FA2A33C0EB41B10B64C1425A
DF4234D75CC0A6EF2128C39E8FA4E174E180BBCCB105D64D6003C956678909E3
4F824317E8766999D17EAC8B28132D2BC8C5DF9A1CA05072343C48231F676FAF
E00A584F6BCC0A71CA3C0CE33E16D59F60B06D751039011DB94742CFAF513D35
D1B2EC412E383395F9B9E7C66BCCA21889F03654287C3842551319EC75577D48
4B3AF7B1F129E5AC83629A22E5EE37AB81456EDC2766E58C7E0919F96124E172
08A4FFA1AB0196CF0B21F0851081A26969E75BF026B7929728D6B8C4BB6EFA64
2D9A7F8807674AE8EBCAE86876C9358686071FF45FF489BCA0F4BAA4D5D96556
695BC069239856F03E138D66F8F733E22927110211261280639DA262C5151B94
8E529F0C7A21052F1A28CE3436EEF142DFE14CB390C69AAF35C89B103DF5666E
E9AE01FE5E6E8C43F8279A423942A579EADBAB32006D750363BC4E3C8B820DD0
211E2DD31F75D7CA01CB56E4A8051D5BB6B4E57C3F1E71E49A160E7087EFBF20
3870BD14BD4773AE3C9D7422F45BDB05E87D374629DF7DA64566AA63F6824931
B86167467A90461C51E8047D47B97B51EE60EDB1768407ACA775C88550D3611A
4BC53A3BAB1C479DF26EDD78412BAE2D662770765FF69965C9AAB42948927557
1F6BF6AC832BAE035DD158BF6B441064F1C8D9D5522CEE519304C8308091838F
F08D7A52EF85BE04EDD6BBAF3AA7DCB2FAB4F20745A8C95D5776180371C5B7D1
B63164C822ECDC7AA61B6480E3946135F61AB60DB9EAF74D3073A2F4C12ABFCE
8A5935FC50FD8D207635FCBCC61AA7C08A56410063C58AA7602EEE4FE2636A60
97785085273B68807AA0B891331E06FA096016FEA972657F62CF269DAC161D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic5-Regular
%!PS-AdobeFont-1.0: LMMathItalic5-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 347 97 0
%%EndComments
FontDirectory/LMMathItalic5-Regular known{/LMMathItalic5-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic5-Regular)readonly def
/FamilyName(LMMathItalic5)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -73 def
/UnderlineThickness 28 def
end readonly def
/FontName /LMMathItalic5-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{0 -250 1349 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B30E8028C685C8FFFC0
5F0A4499A4A15881E0A4254902DBF044B321740247EF89269993CE3EEAC6F046
C3156A7B966A757C2FAB51DBC521E8CB43AC92FB270782C9A6A127AF291AB45C
519A619DB010BA31C7DD9AD5DDBEB91D9105095D2F1D77A793546DFB7FC7E139
E04E4F62F509CFF17B1ACD6133B4D1079623275918A4AD510DC95CA2EB7592F0
67B1C9A4B88B6E9C6B876D126257F4801B7A44E056C05888EA82290EB141205F
BE431A688ED9687B4BD5C6B748FA5DA74114CA5720D8E167A98CFBBC95966441
F5048F006E1A236520BC840E6ECCBC4C0FF9C6A881B66C4CF4FF4AFA897B4605
F6830F4F199E0E54BCA4BF0BFBFFDD1B1A34388E5446CFDBA85C54AC8549B3EE
CC2C552783079D3364A3E6FF013E7C3441EEC473E041AAC435E1EB59F223B796
FF30759E1B9B659E122191903EE0BCCC3363178695839EA89B6E503577E3D28E
004C61F64504E88986A1E140FB222792F8F659A00DB6AE62ACF9BC1486FD615D
1A0349A885398DBD4A29F81969278E0F17A5E0B5FBEFF1E85B2228895915A896
78CFD192BB227C2F46E4C6CFD2D456263A4AE810AD5949D9AC668AFDFCF5031A
86EF02969001B5EE10B992A7296E1C887ACC7B11825E76015CA91087E67A29F5
FDA84C0B92960A629C687EE43C22BC6656DA44D87BEEF8272845BACE28FA9F55
C0242DEE0634BAB52AAC75A5FE6A5EDBA60543FB6575B538D7548E70192D72E4
E7F36A9887F078B6A1294DD8455317BD77C09F97D945115C67F1A05CC93EFD3F
B9ED867EC1E18B8025017495C0584E55F963B6587873FA31E91A20F40A513461
CCBF3EB94A2BC4BD52E7B1AF1D56490ACDEF55DA9B515A07191E2A8CC998A1CB
2CD25437B163956666AFE463326AA3DBCCFFB4A51838B938E70D1D2BD1A556C9
D8450DFB9E063CD6F8C83D838CF2E7362979EA7131A527CBA34CD1A36F5C3132
5871F88C22A0450631F38C025D1A649F8BD265BA4464D82C2AD3C9A12B6AB173
585B33697241EA57362B5A76E473EB70BABF3A9BDFD6C700DB3CE03F835838F1
647C94AD9843BAFBD24FC8949895D672D06A1E9711D3BA7C52C08E07E5678B07
87F338415EFA2C253FD6A595DD600436E0BF5E8A00CE3C92AF8E82561930FD2A
920BF2F3B1B0DAC47760E913DEF5708B6E6327E58564B7932E55F11F378C7D9F
CDE60783660C94D95BF664C2FEEA9583AC25DCD899A80BB9E9FB9E1F4A3CBA70
88BB079C588E88F1605CEB7402F26C5B09807E9C91674C6E95141DC7AFCE7313
38B5455B4A502CB3C4C88BC2DA90D66625370E41660F2D57091FD392A272397F
558670DF73596C508C6C491B1803DB43657B2A57D0558AC4B6C2285298BC98B3
D9D237D33DDD293DC1768BF86A8243D460B5689E8EC472F4CCA2A10DB8A1DE94
8887283F18FEFD267CD6B59D3727166F956098E6668188FFEE4C27928944479C
3BF0675CA43CA3B3451B76532111DC7D2374EAEB23970C91DFB15FC308328B5B
308D5123257095E6DD5170F66A9C608761173CFAED4D10C55502220344DE568D
D2636C5812CFCAB9050A17F7EFC0A65775F88CC0F8D4962AE9FDD7E94F823489
90B8F7C1A38E7C6F730CCD44E43D5A3C5A98BF61B9B3C1D0B6F7CC927674D0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A1106511131B431B653CFE8F8B34E3E1AE0C55990E
ECE2D624A0A5EEF705D04543B9227C00B2A126039CDFCC5990A998A720CBA4E2
3C0F133241F0E6E3D34F7B561A25F70102C8091D18161CB9421DE1DD7BC5514E
AE84B30567998B58154582EA2506E7798657A420F4AA92EAC4D3723EED99E362
A2A871DB74BE5191EEEF65F8BE2A2F2E22335F3DFC68DFB13B165AD780E4370A
A99FEDD2330B2881D87A4BBC6A705A9C77B525CA3AA837BF555A0E2E8EA5ECD9
D3FA5353E6703EDD25BDD44BE1EB6F65FBB89E23E9B06A948F465C9358E0CF2D
E67FE22B3327093E1BBFCA3FB515D755943368A9554B60AA09E892F91A4B3291
F217BDDA669AFF1099E3D76D55067C591328E391BA09D5ED615803F7ADC6CEA9
1AB7B45CA7AF8DB57AA513F74A56C76043E1C72403824E78613C8972A98F61A8
E5480CFBD7570E6AB5CC9A07D4E0EFCE364DD002263F70481C50894B3D6961D4
60C98A8F7C911B616DE897CF569C85F742828DBD3A572B5C21DFF08EA7AC1089
3AC143488EB42B699CE80A7F069577F96C329B88C108B4506841CABE171747E2
11861348BFA5BE91BF9F3ADCCF2DAAAD831000E27307D6CB2AA6ECF5F929653C
602D86269470B08D8961C227C63DB2AFF09B42ACBF716407E9F63873237D1523
47D3AA2C575D1C08BDB27DE9E8127325C87E3842D1ED01722E83609867A0981B
A264E7B739C4088A25F551F578189A3285E4CA4E1A158E799D50610BA45F2003
568AF44E2EE4DF2B734FD72535354246F33B2E2F7F4DFCEAC871D46DF7D165C4
D4E6B00BF84FBE6428597412531988959E07A697AF52D0FD3F35390405D6A9D1
6C8682CED47347AB01B45966A9F6C2FDA093CC4A456136B6AD2D6927C2A726CE
25814E308764700D33398DD39A557284FA21FD70B383BE803AE6795B23AF56AC
D69EA28D257E97A14969834F6E51837EB3D497E1CCA4518DD1E541D723ECBF80
FF403565B4A26C6C283C747B980AD33877533510D63350C839F044ED6AF03CA4
415C2A0C0E36307497E0CE91B65B58458047316FDE3CC1595444A479167F214F
9D92A000ABF73738C40C1D18D9E75E5C12A81B73F370431F3842A1B0CAFD4ECE
7F0AA33DB5657C79A4D8CB345C907AD35EB430EF00E0B8448355CFAAB20FCD16
86166EFE07580DB0311AF7E970139A757CA11233A368C666168D45B8D27B5956
59819BB788B1188AA5757A22154C03831CFC91F03AB60496B3D4677A6D2AED73
403C90884F55AF936438B3CE5FD9AB0F7B3A0929E777C5ED85D8B6502C2D4180
CB274748358A86D49F4C14AC5096BC97BBF995895E8A414283FC7AE67D07BFD4
AD7D7C4574F0F051571132B2F6123FCCBD73E709B7DF13E462ED77BA4069E14E
F0E31D8D407BF78624E191DBC2C225A3D3AF1E9CA8D6F03661719C67527EB25C
CD9328283C9F0A17189723DBC6BA6CE88B5BC2A63B18E115B756E125867FC077
FA15398CF620966AE73D22C7312708911CCBAF6785043FC6C757576EA0E4C8F0
F14614231A275836A45912493829A9EF5B253DDAEBC5CE6923ADB7239732CFB0
D90876614B5124089BB90C6DE8FE799CFF1D39C768562B4ED040B050721300E3
A2A43B7CC317DEE621415D8D35C6D0A1B3322114B056BD56EDF5FA0655D351DF
CA7FAFF1EA78D0D6FD12743F6BC29762999FCE93D5063F7D87E6F759A29F32AD
BF5D37B697E6886D2348A62293E5275CCC13243DF7B68E47AC5055D3578C3451
9695EAD030B18D2B1B928D2CB8CAF6B39E18932E563C8827CC340AC4350DD2FF
1A3EA9F8F423C399AAD5D324BCC6F79069690BDE2D5DCAB19AF1ED9F97BBB416
3F5A43A0861A9033ED76B763A8DB62B98BD3EAD4AAE228D4307DEA7BF42C293F
9236AFF717ABF710CB9A49DC6DB5677BDEAA43F119DF86B62F46E2D54105815D
1AAEA50E83DD2A8A5EE4B8F9E859A6136474CA7F5EF59410EEEBF42BA0BED377
010705D1492C30919059143809984AEC82641E34270B7B46933F1EB49D7E7446
7F8D71CB310BBED8C760DE72B50F3E8A04A6D73FD8F2419CA77C367833E44F55
442C4053B30A15AACBDCC8DB585D05EDE10F67CE7B6B5CCD4A00A4866D2F89FB
374260E9C0D543B2A5C1CDE2B37C804F50577B6D1308DD9C414C5FA5EB6D89CE
C580A966AF5D4A79D593015B4C63E38F7CDA8CCBE3F6B306D1B8B98BA21C7367
442C2269BCDC272724858A522B9E47D4B5ED68BDDAFC0E87886861B4F5C0C775
C25AFF4F5099CD3A2FA59ACA73571731EBB1E7A05CF22CE0A8FE40F401BE9611
83024AA833B0D84487B7BBEAD90EE57EEE028900491428174094903A8B55340E
2A24629A3BB1A0D986D709320935CA25DCB7C07A9FD4973CA9936C7CEBD55EB5
6E4256AD92A2C4F2837527124582DBF9B81EB3B2C7642AFEDDE5BF5E03EB7DB6
12716F5C328F337B4B1CBF8F3E48F4A670030B0854D6E51F1B7D279051FAB840
6A090F11F9EC62467E98ECE66B329193EB624E2D0FFB978FC22B31D1F5380283
70500B480E7F4CEFD31FEF6830F06C6BFA4D5E4A384094A12B5F4D42690FB2B3
63316B1338F012EBCEAF5AC28823144649A72A0436050BC73BD53649FDB8AF1C
9E3D3CE95CDC149624D705D78BCD6EF091F5C98F77E5B3DF2DB0E6B1F1470D1B
FD1C6457FBA2673C30B5F05769588A51B7C7DEB9B2DA73C23A6227E1D03B98C4
2383BF31B68F6A6309C9BC0128C13C0CE33E16D59F60B06D751039011DB94742
CFA12DB43440202E2A9DDAC2DEDACD4B602ECB5A4CCCCA68A80E3632772BF865
1FCEF83CDB92F91E71CEBF9F125C994CC1BC277FE4513DC2102D4A6D49F02052
587FD03F7099C4B7D232328E72541B8FFD8A9F88AF4F05FBE2486B329E785A81
13B00497A08154752DCC6250A41ED7303D15E633A518E3E329C40BFA2C5B335D
89DE7713FB795FC468D39CB8730F0622FC9304800784DE2980228C0188F99514
EF8F51B5D7BC7DD0F437F1C1A89AFCBF166B5E882728B3DDBB1CECE415FD5135
3AA3CDF6F1605BF2978F85D4A626666BE886B3315158838DC59AD0A094883C9C
B2C8A40E6CB11C31D9C29C7AA3B71450BDEAC4A6D069895E465C1ABABD4CDC88
310748221F5BDFDC2938B773EEC15EB9CB4C32BF24D23A2C04A02598ADDD5CBE
F2F835DDD975EF68B4705E1C75F856D7C269C042CB7AE4718BE7511AEB1F9970
1455F96A1AEF92A5D766A231BCA667DE864FB25637A073241317A296EB73A709
598D6776830D570699D66AAF19B447457E0C03F7193CAF36832BB25487385CE0
6EEC0A53E66A78511A541A9AAD1BBD869AD3E21312A36C4187CC2385C65246A7
1EE835434FC344A2ACA6D4B8ABDA4D97464C56F3E62B1720EFD4515E05416AEA
04A5D5DE3818E473E0994B2E20DAD9A162A813F50016C372A531176DB59F1053
7A4717637CB95929346E663B723CE5C0151E354118C1BF3D777C5495D02618D3
4C45FC7013862FB6DC5659A4DA9A84C0F3CBB24F54451C352AF582A0C4DDB9D4
D6AF02392A840C03215E4582617C71633B156E8FA0F92AC2155DFDD8B8038313
B90B450C7E20E75C2CC659A7E5C7CFDC98F222CD610262EFF3D64078CCD7E22D
1BC28FBC3F927F47F7773E222F0B231CA8545DB9D187DD8699001A1C74BFDF95
4E1391127278913456C258029E92103BDE93E7DF94564A140D982474F4FBADC4
9CB96AC5AF66FF278D296FB8094DF33E7E3631228391B034A71EC23B34833BD3
B6BF56210B6FFF3953D097D172114C1C0300300B9EF15A312AFFAE9B89C59659
9145A769C15420318F852377C83331457AA47AC07B6223B9E4AC5BAFA3332C7E
50DC7F4449D54E259BC077A76A38D4F0CD0B7217D83F2FAAA790B57BBD732128
3D1CC17934B6B55069644487B786A6AA482D8919918AFF8715311C167CF5BFE1
61C8612D66A783164ECEA734E43C24E951B2D14CCD6F6EEC6B703F4300D55570
19CD90C60E8D33C2D0205570AC830F81D359DCFAD0313003AF5B196AA1BF7692
77F5D4878326B6ACB123477906B1BB4666A5EB2FD0A70FEF47DE1D954392368A
335A42119C3BF761036AF075B51DACD371F986D93732B1190F3DA6ACCD6DC6E4
6AB85A6AE2765EE918D5E46449525A49AC92D64532DAAC1F28BC96B2CAC4598E
3D46E56234C207529ABD29E336099A5F4F1D22D2DE76277A13C6FAB4BAF10C72
A23626BF6849FC82D5608D38A93B6C1DE4531980F54777E37337534BE8EA33D9
93E00B8B2F9C23EAD960F20A6F51490D177E72F543F36EBCF268DF274069AE7A
B410E612F0EA2D31C7B31D6FB22DE0155201A3EFD273A2A0DC843097C71408FD
1E8FD650D38F3A7F53DB8790493D8EC144A3C3B1586B501DC98DEE7D89F6D60C
6E12974DE347D8B3E4C85105D879DFD786A8C8F87AF276E8795C6CE1075574C3
06FDB236042CC266F3B78C18DA0320065A0DB93B732BD6317212EA1192EDDE7C
AB9B111BBC5D7BD04CF2DFB6861BC85CEEC54AC28703DFB713F881EA0F4B81A8
F1FDE4B3C92CE8047E2C3CED02753EC158B65F812144E18AD3C0F8B8148A5A82
E47B9374A8DAF08731634F35CCE0C5425A6F7ADB67E6217C2B3A02A17AF215D9
39FC1CC019EB323438EDB94D25B85BAF935AC6B26E8E4EE05F2F085A20B1D1E7
101C0CC34540AFE142778D00AEB3921E1193A47BEAF0D9AD677703A1ECE6EE3D
E3E8E4AF40F73F7C7BAED2D2F3FFA02D3F4C69964F7E65B086FC994070DFCB82
99304A5AB02D643D8B74EFF2C85692DB1534BB3387633A09B4EFC4B59C3BBD51
1103A6D4BA85BFD7FBE823578AC4CE66BDC424CBD36A884DED09D4F3C596C6F2
8C2EE0009E717CFEFBBFEF27CB02FA36D6DF2322FBF59875757C3637C45159BF
0E1C308638F8E4CACD4206B6511C6118123D57440FD0C45FFEE6414AA91EBD84
A394F47883D04366386D92945935DA09FFEC069B0F155E56DB3DBA9C43AB5420
0A68082FF12ABA00B2AFABE69FF4B9B275C6F1CBEA80629C8B10C7E9464F14D0
F503064F1C78C7A6DE3181A839528F7AFF95869C788CA3D4C45B156302ADF2C0
830A0B009FD432EA9B659EED32E00F276F180B5759BD37EBC37A071080A724FC
EBA21ED5A28A29AD32E35181701F9D3C461722602DBCDAD4522E4E789020B1CC
4A2BC3351FD9B59A9BF59B4AAD5CD477F6E80DEAE0F256B319CD866ED15BCF2F
BA48D153E56EA98C889C84F43CF31571956AE9DC82EAAA0195CEAA1443A1A668
4D8E8B67688A36CFD52E35476EDDFB262C71A697E8B15D380A243B2293FA384A
F0562C85694C7B4469AC5DBF5C2910250D9E92DCDCB3F560C5391ADAFF23611A
4823A1C828D92FE07D3B36F04B49F1D87083A7C56E93C4F789008648C187E542
A45CD9DF121101DE45DD5DFA2963996A30D6DCB88D016D87D3B13107FD38D9A8
6AAA228B9C47E3E78C0B22D2600D5CD55A311F48110E116E1CD6B5888BB4EDE0
EB9190DF3F07E2D6269C2CA54EA6E94CF68DC85C76FD06BA4B0915B9EEBD5C5D
BC01979D3234D19B9935952C99FA46782346BEA5540E1F683DAF8038C03C5741
8377255201AE91F48B7FC401AC383CDDF2C69A19ED006FB09A05CF198DF82D4F
2C20DE56C9DF95B90D45EA22620C2FA7D7521D7D4B3FC2A50F7B9D4E48322788
0E1DA76448326A47FCD6200A4B6DFE23611A4823A1C828D92FE07D3B36F04B49
F1D870801C21A58E2D8B37EB1309FDD725B6FEAACF65D8C8351F3CA8F322DA5D
F130E7FFD197683AA301FACD379DDDB7E12A680B12E95FC462DCC54C44587EC2
97569731F5BC9FA59AEEE2D5BB9B10B58BE90DE3CC9E7ADB6A6C5BD928EE4ABA
3633A9BB597D6161CBB2BEDFDF7850C368C0DABE94C0C332A009D7C51513610F
B670A220DE6571790741ABE84708EBFFC44AD0C6DFAA97EA454B7FA5E394E30A
7A659D9A45853C24DAE4C4384D6A6C0B4E1A3E5C78598BE6C799AC0D70D2DAF5
640777C30476CF9BD0FAE406D67A9A82BE2AA6D7C24DC708CBAD17ABD8F88131
F3DAA45EAD0AD822DC04982DCAD312CE4EBE815CDA6CFCC3D092520DB35768E7
0336C30AF163EF2E273FCB0712FD8754EBF42AB7EF205B52EAB95E8A590966A1
F56FCC2119450CF9056011CF0D1B9910EB4B40F86B92F0128A33DDE269A3E703
626A0F204E36BEB8606041ED5C44880463541489F56666025C854B28533F3D64
DEFAD5F855D4FA336D2EDB9B6D48AFD2AFC82E953903FCA10F255539868F0213
8047E9722F77F39C29EA6F8251D4520AEE06A6EABC6CE4CFAED0E1A07845153B
6D4F7B38E29A26E9982136D215BD19ED2622B094CF9F53E122259C920503261C
60884073554BD0771EAE6A1500B64835A503ACB324F05BD01D36D82EEF86CA96
462CC10A99281E69BCA01770863B5FD1D6CDAC9B9A1DAD5804ADBF5BFCA76DEA
1A7A7FF7F93ABD957389284A9FCB3E8B92F3A6BC03BA781E75C506DFE0FA630F
E721725D8F5B0A803AF7248948DD3AE550B3D8CBD6A090B9572E2881A8D9E2D2
6A3017A57913CDD7960CD3DCE6FDC0579AD9AF1ADAC9C19269C95AC4738876F6
04768A8BDE0AE37AE6B1BD829E8C64D91EC6D5B05686A26E8B9592059F76EF58
5870B22AA631AC2163E04A69A2DFFE85B298AC23152C25C710CF0C8F77445B3C
774A1A6EAE77D7675BDD727265B1247D1728303AEA6B907060041C69E5D25522
11D313FF5D7D565A6DC515C88CCA33661A7DE2E4791C791A0005560E681E46B9
22AA0046FCD4503C12CBFB2DA86E79E49D69AD360A543C781FBB353867BB2275
D8AA11B356943977D6C64C44F44B79E776853BE186DEB0299AD75457E41EABC0
3561CD9EC152BA6AB6A3618EA101BDBEBE827D1D060322B22674593C0970697E
79A5F4F65FDC310F85FADBF2F7E039F6640379470F5503B71479FD9AC22E7818
EF7BA807198072B22F5ECBC9D32FD482C74A5387629E03895C5B946114287F69
04B70062C170FAAF08633A13C303EAE11BC255B07CEC198632CC739EEB8A4075
951B186DF6A9B62E4C5E1682903BE2F3CA2AAC7BC366AEB8855A815E65550557
5774372A39F5BE217A815AE85C56C97C347BE7F597FBDC2380B962EECD87067B
E2EFD71085D0A04140B19AA92F40784356690DDB982F55FEEFFCF946C6DADBC5
FC49DEB7A2BA3F1CC7C41291F359DCC1C25081389125F36FF09A66B64A927F0A
67BB53C3060026ECF2D3BC8D252111E82BCC0699371AFA364EB2AC6F86D82B1A
6D43F9F20C322EFE02904D82B5E21431B04D4C828D7FF50D459F4A7963EC9A3C
69263E1FC98F22F378918DAF8D1BB6A2A658D40F3CCA1BD956A3BD8DA7A3D67D
34429519EACABAD33AC0F7942C1C5F351E76510DA3D1AB1CBC782B05978D992A
44BAB63C2748E0A60E83AFEC718BB2F539FAD6277B8DD67B4724756AC0D3CA9A
8513B88BB7B2E925DB3365C80D5602E7D178B8619DA47DA7550ECAAA8F63C6C2
A74A199E38A9B04516E95531B250C3F352B68B3A44C5A4EFFB389E6147948CA2
E878BEA4BC99CED5B296F1916C4EFAAC651C1C3963E8A9EF7165583B1AE09C3F
12BAA82365202BCB706F5B01CD5715C6432452ECEC048DCD14814E47DDC35C41
6AF8C5C5D1F58D60E519AAD9DC63574D9980B8463E877B819434E200FFF0DD0E
0604021508FD5108031A2624ED65F147D6F231B461AF422355101AC49658B638
A60AD2733BC68DABD124EF2BBA9219D082CE150C382EC1C3C17519E46F829983
24BBD0131B32482D403D225E0EAEFC083CF9EDE0778C2D79BE9FD9DE57CC3517
5975678FECB477010C1E685F759A1F6AF99169AB2D10C79CB82A22773A5148DF
78B33308A3CC55DD30639113DA11A9737EB95CEA5B4B40979C144B11D8A846DA
9F3D3B8DC941D429AC7265E93F600D76FE5FB7667A6C08D7004D0DF124DE5009
E59E3417FED153DBCA288DC767537CFC7233B49F1ADC65ADE10FAB296A939884
449842FE797BA443FC50612695EFAFBC424FC5CFDA2EA2EE5BA19AC90CB01E30
215516C50BE417BEB7108A77DE7108D85BAA9D055E951FA9C6175486F899AB78
6591690FFEB4B0BE0C581F1C0B5BC8F426FC260ED5511ED5ED3EB0D122400B6C
28DB238155870C6B9819E5842664A4049499CAFA735DA28D5671095566DBB3F3
27C441B2392BA948E1EC464281B7E16817CD828E6DB40B86A47A27C033E27BAA
CA907C9E36680ABAEAAD15FCC0DE88213B28CA601D37EB7AD148D0A9794333EE
2324C23E9F051F47C7556B1203B38DD0BC08539BFEA00B80A262A1D45C835CB0
96F1F0485E98FCAADF807C859CD6AE76596420C87D291D12CAD69A79D906CCE3
DD6D2642911FB5137597F9697B34F86A9F9BEDFEE780E040423DDC5E3B4876FC
8A9E07B69FA38D36ED71848D2E7CD6B766D4F3E1751C3B528D02B878AC1AE732
86559F73B1DFBC1D26B5445FF5374BFD89201FE9873BE38030E36C24CE003E22
2F0B231CA8545E6D09E71D7EBF3D9A4DEFC8E67F6FC526DDEA73EB9B1F588655
E1B39E04D2869D59778999DAD55652CF8B3D7D30BE72ECFAAADAFEE78E1D8D2B
9E94AF57AE0A20570A7828FA56928987EB0BBAF4DC72DA6B4EBF8B9D022DE8B1
165FA968D454AC3CD06F4C079ACE1DDCA6F51DC6F1977D79FF3F279C52F72F03
E439B6883552A1F042947C2CE9124781A0DA04F434ADF862A8C4A5173F1212ED
FCF6EC9F87F0EA866D3674BEB9FD8F96E8AEE3982B3CFCEE2BD6BF1F40F6A5AF
973F28406C7E7A39BAF7E6CCA5E6E543778DA248CC8F8937EB84B0D6297FA506
8086236E55E152F268832EACD36F38EA92064DD2E0A01A713F74E1D06805AE85
75EBAB53F758648FB82BC37BE81D825F1372C73DE0BC82A98F151CA288979D90
7126C6A6BCDF7DD623DFB07A201D4AD7D2CAF1775097357A4275DC394324393B
D65E52537DDF27956B459526E5CD19579F3127D1D8CA123B89B6ED615FB1A022
FABF29074FF629E2D24F4B989F15106932087FF4370D1C25711478FD4AC8E03B
E4A1DBFB6C662EA0701460B561C27A38B139D8683694542580389D18E6337C10
744B64E655BE7CD1740656164605AB208CE52AF94EDF33E6CC70BC0E96636EAA
B676E725FF5EDFA30ECD347E1717AA5D4CB03B26C4A34300BFEDB902598D6776
830D570699D66AAF19B447457E0C03FC1FC68EABFF408D5DB3AE15BF6B53A9FA
80CF7323CBD21A2AD123D581F2B19F01E71BDC28D079CE0A3E0E3582748E030C
516E31813AFCA02EC2AB68D12BB1C15565882023D5E788AACACF1B28C8C2396D
5C8CE61D98B0DF38303EF9D8EB2FCE5DF8E873AF92E7A41E0400C3AFC7696AB9
8711E6E10EB8C1FA2BDF08C42D510A67435DB54A44FF1F8FE0F68B5D42751BD7
2D5E24F5809F58BF1F55B237FD93BA956EB6F385D209E678032B4B61C682AFFA
0ADABDE35B9A8D44314BDB7849D0925D546C0A7B151BE4DB6D13AAE036CEFAB4
76721A2E3A65C2C5B0C7A8CE59DBF6A26A5CED53E0EB42B4BA1A423FB723392E
3F9A7E35F068007B7E87BD9D405F2E29BF660674457A70F9D1C9C15AF39CBC57
D2683163FC6FFC1920EEF0051FC6E8E9EB17493F0396CEF43BFA8203807C238B
1116F23731F1D165B73683B97280E3F8CE4547F56244DC6838028A6E50BF9A56
F67AA753BB87FA32AB6D6516C34C54BEE9EC6E0105B8A4443A373C8DE2532330
06178B9A6BC24AF28C88A8CA8C66082082F59CCE0649DC06D314A91BD8CD714C
4A4D49D971261258DF77A2BE87050F8AE8EAF85FA89810A875A453607D8D04B7
B5CA2EC7F97C2795CC1D4226C67CBDA5AA9EA029F95B822519A6D12C958E19F2
651D54A62141A8142C9AEFFF29131EC9B9463386110018417ED7304E2600B349
268DE077F06FFCA77DAB38EA66E305A8046E2428CAFCE7E6EB689A088CE50189
3AA6D9E4B7582ACD74AC46BE3E8161DEF949CF5D59F14F692AB281984EE6A564
10101576B49CE7F1D2367BD29028ED61C58260832E6C4EA037F4A4453F777BCF
FFE63DCCBECA12B839EC2CBFFF7FC9AC13F612CD3D914364C09B4071FAC531D1
CBC64BD28DE9517C0A6FBF1412B93067B327601606A6D5C8C3F294CCCBB0CDA5
8629BF5A471FFC465B8D40FA63BA53CD71AC8A5ED1139DB09F1ADC65ADE10FAB
296A939884449842FE797BA50E9656A740F78CB42DB23A3E6B6DB126AA88856F
AF1AB13606C1E03028539338323F06B3AF9DDF627537F7161DAC022DDE36A1D3
2DC13EF721BD656F5752CFDE45053362CF79A476C78C8EC10044DE5F02941BFB
BAC3E6DB3E3C70F916859A40AD64A8C869C515A0696A8E3E169C9365223E0910
BC6092E488A3488D54C024C9D1D083F08617097B59ECB9ED4D16EFFBCCFF0CF6
48981BB0F88AA9E9A556CD20AAC23DBD644F0B3F94722F0A1B4D56F06656340D
B70968FAAED1226A949C78D176733CA1427957035EBB8C18BE053CEE561076BF
062F476691EDAA182D1C04E6A7CB6FBF65104B93E0C7573C702A48C722ECD30B
17F59CA9090C11E7FB967904D7E857CB98BD6EB94D87CC2B509E9D70AA5F53D9
32C71EA76AC75EE6B68306B0E7C7AB5E8E17519BDFA50EAAEE490C76CD606A0A
B6B17D71F9FE454C48DCAB35CA1FC6E44D19DC4D12D52FCD0A83A7C6104A8983
F9D910D2510DDF5F456F6AA654A4C7A5865A52C5F4D31C49B716E117FFA64282
94A787B75F29999C7A0E3AC55C7435402D28F2E84D2EE641E9B289CC650B5F64
E2C61EBD43DACB4DB6017F175899E66C2AD67487DC8A611FEB52A12D9D030405
FC314ABE407AFD23BC99D34FCB2E6586DE317EE3BC34234AEDFFB06FDB1F1224
7D7E76DFCF5AA39178FE8748FEC78DF28559E1E153939897702531866026F628
9B2C69832C060F2FFEDC60A83E2D201F6F91834F9F1A8646DEB04A2399CB3284
ACDCE0FF6F7ECDB6AB3069E88D09732D3DDC552775ED9ACBD9A9F11070BE452B
7541ABA3802CAA54A74B44A3EEE8ABE0E207824D81AB21C8AFCF5D4BAEA0280B
B09735A0A8003D3C3D8DFD37D8FC6B3FFE84E139FA6A456E34EF002FA928E88D
D50AFD9740758FD5FA9BD35C080E7881848222220A63605F00205C205B35DA90
681D827E3DA29A3A4117DDEEF5925608991F068276AB949357A2A5903A5BA40F
8E6CA80916037DB040BCE16EC7849178718824AB8E417CBBF6433BB9F2BF304D
1D67417B863AC7E6CCD3D272C580211B33A99DC5E168E8BD8F022ADC8E75DD41
3871CAAB11C9262D553D7CB134FF74AE405F3009DE3613D91AEFCD150049C59A
D81287E0D3E36C5AD7B56F4A5D0CF8FE219670A817942121C2C7BFD68D4FC3E8
0AFDD7EEED74F66BE8E8A733E43946E8D7B53FB0BF788FC6CCD3C8503663E537
B72974527AC6F3714F8B84792EF7D0C4E23442D4058D1F27766AE93A430A1AEB
659C973D52B28D6CA92DDED5BE33EEE82684D1D0D8F40C7FA40791289E392A4D
BCF54D19ECD6F04858B42D5A4BB5A14E1217960A56E41FB7F566D32F119BF99F
7D0A9FC87686FC22C8F111F56D53ADC64547BC8A7BD72384082A6ABBC6F62F9D
368D0F93C4E2551F1FC2102DF67CC71FCB5081AF3D51E993949875A1A8632C7B
5187F49909A6399C1AC4D093AE96F31557A70C4540B645D570A744863FD8EA70
5890890AC5BC2F0A068C72BC9AD926F9C979230DF7CDA80DA5853EE294F2BBD7
0DCE97B0F3DD668BDF76A5F474B850CE6400C544CDB702ECE79F90FEF7B4BC08
EC3D1F16089A6C4D67EA0050A1EE4C67812757A1EF9C33F572F221C6167E73E9
B60B23A23ACCD6BBCD792189A12FC9366BA7134EFD67A22B4B89BCA346307E3B
D497D7F1E2F51B557FEB6AA32E84F25EE039D7115B409DDFFEE275FE0A2E0223
31F145758431EA632FCB86E990AD1C8A0331513E0B6F2A90442F6533C5D6B2FF
589643A3620920A5094765F358F9286B8EE406F0F5BD708901000DE64F33B95D
5FA87CFE2F881CA5F99711F44C1487A8A062B0E7D307423CF2852AD056969CF1
96531080B2183AEDD09BDD2CBEA2CC1E4056559D316C5790F6307562481F07F8
9473D24F0B4A8233C70B222AFCBF54EDE62CBD809856489B4197F60D3490DEC7
9102FC7A5CF34A17BA8BB89EC9287B3729137F167238C62D51276F4BB7E88D9B
2556169FE98FF9B3CFDF3863E5C21219B9438692C501C75C62BA84B70334512E
D24B1D658C9609A7A20D9D0C84634A4CA384AAADECE468ECE2A16DB051E930FA
7ECCA082ACB5CB8542AE65A90F075A6E52567706CB28468A9A6AD9F9B873F184
5718FCFBACE523B36A2AB5F41BAF1D6771576B4D367AA58DB31C650989E89F2E
5E5E637D1599298AB3F54B995885FCAC1E15E83D18817B3CAD46646300ABC90A
568A8D9E0FC6DAA9ECBAD801177B0EFA572ABF4EE6F29D00C325FC89DF499932
3D8B4FF8129A8EEC3900A00CCB026E694942F76933B7194FD9F3E4EAF4D145E3
0BD9AF179FD6B98E89696DF1DF9B36FE935AC7ED5FBCC244582511812CF765A6
6C2C3B5E16FDACB9A7F68828EFA0F74BA87F73C4AE6A3BE038A7FE70CE5AA279
EBB065478C5A8B6C55A1548BF9D7A269F9B3891E13DA0344397713B6E0A5C4B4
7E812DF87D9D053A72A11530B36EB96FB5FCCFB1DCB2AF91FA7CA6FFB24BD76E
7DFA3CDAF65FA01E47A506B07AB90CCB8A2C847DBD3E2E9A7EE41620E83C8ED3
A18A4809F7B7B2AC0F915A89AB253EFA653E29CDBE7BEAA5E2638B25282A209E
9D8BBEA3ECFA3ED46C2DBA5CB469AF9FDDDDB86B8F6978F44EAD1E6C3FCCB186
BBE6C20E22B0A20ECC103678173A5E658CE844D4F0DDB7D17D6E80C2149AB536
8FF41481D6B8DE8662E73CAE558AC55332B60456344BDB08C929F9453553452C
97E016C26AAC7CC103FCBDD935769AE28F1BB1EA4029C7C87BD07C1BFE2E8FDC
E9C6539CD8C059894E15261EBFCBF32823DA05B5E169FC53F95B10FBDAFD939D
8FDBC0EBBE739C62C931284BA7C4DA696046756D986278D56C22EE022AD902FA
58CD4C1C3ECDF1B6ABE0190FBB954E10D29A3F13ADD233F3ACED3874214E6075
A658B3CC670D60B0DA465B36F4A5E94C0430A0400E3EDDCCE5BE60B3AEF9BEC9
E48640A8C3F7D97DC5E94894E1E63A7D80600B945B1D8C21F713D83149911CCE
2064C0AFB4D935B09F36A5EC43261A450E360B5B7C5B6AC9F9EEB11ECE055384
3765402ADF6C0B8DC625164B44742676C8A12E7009F4D0851C90DC00FFC27F6A
A52F79225868783A50546B12D016106F2CFE731360E35AD60073525038B0684F
CB2D92EFEAE1436754701F9823D97F39E01DFCD7F73BDC406BC53472669C2E81
4B6F228B8887C064DE2A73519094BC2E3A544B8861F1B9AAF83F3992B724FD0B
C240C421260AFB67F9F68D7637DF0982785DABB8684A5525C6D23BD5289C5A4D
125CBC6CB1C6D73CFC6B370A4759C550CFEAF336D0E30B07361E238FC47EF398
92553D012754A79E535F320357DB771BD7A674D75FB486A911840172E021B46F
B8B5C997DF742A415DAA0CE1B8745736395AE938537E6DFC059ED1B7F70513D9
3F7759CDB6B3F043AAC917226D966A6798BF0B806FDBCCA4518DD1E541D72543
BE4DC2FEEB3B5876F9FA7BB5CCB104813437A0B89252581F7CA26FAFD56023EE
DC6A1D3AC570D6CC1CA8D0C3387D2FD2622C3A6DEE1F9AA4A8C69D6A244B6353
F49BB9CF3B6D89B5E598CEFE581529073A5E8853C554830B163A21012A6EA10D
9C8D741BAD7871776B6A4EE93A28DE073DAC2D5EADE4A84FCD99EB09E131D639
5DBF40BD346D48ABC3F5E23ED8FC35BA33F568888E01A800669CF671F9A24136
31598808E0F91DBA758A23E515E9F411C7F45E0D732902199C52E26368C63124
2A501B1BB8DE1C2C9D78866901235C66B0375A4E531CCE1A08A96ADD7457EFD8
E4E9D8B2A1FB58162DFB145AA8902B8D6219ED0B52E247D95BAD5D9ACED37A7E
9CDA86B3581FE84E7B501B48AFBDD26AF2D989559FDF570FB390CAFF2DD2BD4A
91BA9BDFBFE3B71B65667AE5E27D9AC6340015C506F08A289F9378231D5B159C
63BEDBC8B663A9376E184437BF65889EE9FDFA11A543D6358BAA6FFFF20ABEE2
0112DF902AE802661C9154284A41B7D92BB818F87006B698E71A13607B8DF12A
ABB2F4CCCFD8A87EC7D1C709B7754D51FBD5CD958AC9612B37E2792B04B2F2B9
CCAFAE195DB7EB209E1E665209BF7F436E36EF8FDB117E237EFCCDF6A6A155F4
51AA39165591ACB05A2057792276F73F4D440845869689478C36962BBC653962
5B7920F358DE1E01D0E78EC979866E4CA2F3528521C181533F45CDF45952353E
6ED578ECFAE357393BDAA439A6A4C38527AA93F5437EBEA5A06488A7CB707477
6AC36B43F8F2FA97B554FBCB62F90A0A80260CCF63AAE519616F242AB08A2DA5
2D5BD2F0B2A939C42476B611F1F52A0400C64551CF1F2FFDC112185C67779833
3A695D5AB39E05C578FD821ADA931C653006BF67E0D0918F99342104B33D2057
4D062226B47B9CB5B4647CAD084A51EDF2A7B0E8A76EFF5490E5C45D2E2FF381
528AE3E23D323472F4C0E34FD0A4011808FF1EB140791D557DA31A46FD5F2932
555AD4C8278F0385DA62ACDF1DE9348FBDC32A12AADC18619BC67D712BF7CEC2
7CE0B7ED8D31A29D7F2D8DF271D67B499D0018976CCB04676C0F14DC71F37038
13212CF20906E6873997A3490967DCFBB99FFA480FF4A682BE9A307BB4A1EBC0
863AC06F0BB192C8BB84303FC4CF842D7368420A73984A0BAEACBA4E56BCADAD
9C3D920E0BB15E302C9207A071D513F3D29A2B1CB25103C645FC1B843024282B
3C72DB239FD7073C10219D4D5B7DB65D81A835A408F3A2ABE61D111720266393
5BC91CA74F339697295816C4E27B8AC0687914C658CB7CFAD78719BE29E96C56
9BACF9290478CFDD203BA47E66E3B893228C97A70F6AB8025660CA3EAA7C93B7
524614BE7C953118D5BF69B0E1781EDC78E93F64C1B30E31886B7B339B15193C
CD63701C3C4909B75D5369025324B818204ADDB07D7493E891C5726B66D279E7
2D5BD9FB1507ECD2335879660C06E7682033B4376512D85F65AD30E430DCA5CB
05C8031D505D69DBB5F5AD46B06CB8429E2CEF1DE6C040001A3FC4C5D21126A6
6592F51AB6DEC1CD3393BAA88DE82C2813504CA1EC0B3F467B33A9A1DEFB7346
22949737ADC23BF2E23A462019A6C8D0750307647DCD9AA9BD6CADD1BDED4F25
8F2DAC9F55447F8CC88BD98AF81F7600158978ABC35805453F84CC5EEC991A5C
DC8C35B38B9EB480EB559729BAFB508171FD33CD22FA7701F9890EF66A73B1D3
587E029313665143C842566C031A2A8E941408347A37A4C6AE05D33C0C639094
C9578F8AA42AA36D859BD71981310F02B957C55D77B1D8DBDA6BB71C36229726
DD7C61478DFF4D616CDCEAEC1AD70D9CEAEDFED494848C43DC9560E46BE38BFC
EB0FDA3EE2B1E8C2F3BBA92158C3CD36EE89D88A6AE6A070411208FBC622E946
819FA3CDFD931CCC6900B258DECDC3E77C89E6F5B1EC222D351E9D566EA09113
4A841CD914249FC82B3A7089A702EE7999C2A97A199035EAB7BD49EEFBEB6814
4B0EA3612ED810C22F1915008ADA791282032FBD34F7ACCAD5B9383AB4333598
62DCB30BA53A413B5E9942FC313E23764E9A5DBE640CA98585DA2A4AF9DE5A50
43F9B4B66DBB9F135BB2480E67D7AB86535C7CB519B758027EABE401EDB52C88
1153E8228D33EFB93F057E59658FB97FFEBA7F649AF87AA556523AA6991F6EE8
97A839A9A30DB09562E82863F6C001ABEACCA36DAC81C30C1400F6D3B0D78737
9E79F168B55CBECA8C6249F0739920DB3A241FBF24D742CCF065FA6DAE74E7DB
97A5A756C5B4DAEE5BDA3F3F384215CE8E236E7B83CA8B33865EE6966A820942
3447A8D65255FA160E5A73F58D41D16038367F57BC905B9A03FF4E214C118685
73EF0809580742A1C509D9357C3D53CFF50F60D97926F71A1A704B01E9AB8FCB
87F0B73A502C34012F783BEE1DD3D04EB580E3423D4BD9A0170CC19568A0E08C
E6352CB79629CB55B649D8542DE483E32C6F93DC0D2CBBB8C43CD8AD326F156F
12C69F57FEA489603A9D23D3AC7A75E7CA21A9A525CD52127E8A082E21E9D5B6
91C7BFCFFF851B3DA54CC2AB414468BFD7E0747745A81FDC2505E773E0925B68
3DE530097DDAE8237E4A34D9C413290538C5E297121D57989D03D58682CC9ED1
69B3582C030C9343D404211699A4D82E2AD1967EA896C09692E9057801F243B3
35B5B535392388C1E140DA4004919027257F2186CF716C685494CF3396B200AE
C477909C2A7CFACF4E2DDFA16383B911CBA24DA5F010E6D580C3BA5308F91801
71E06B8DDDC9CC0B5A1957EC8BF8D5D1F781500EDF990F78D69354F9996D3D1E
591AB226407E6C99CFB6F3DFC7D308B5A5D02CB3D3837EF582125213E7FFFE5B
26A1F268AC3841B73D934B4283C233C8744FD5EC84144B2966F72FDA2491C2A4
84DAD8F20A89703DE9CA97EF19DA6FE918E70F875D9F132635E835D2D74CBBB2
59F1F07DC7F74A0D2502AB96610253A72E63479DBFE0FB8041A873898332BFA6
29891E8AF681EEAAB72E5F3A5976316C481FA61C4342E853CBA6C0A0CABBB721
35572EFC8D9D95FBB46A17735416818D99B6F3E211E760F8C31A12F21A8962CC
777B759DDC5C6C5A4AC9E21CE0ACF1C02A9B72F3C264E030D0C8F68939B28C0A
8D519A948A5E54879DD21E46075BD7E72636AE538232C13966FC6E07843E4FC7
A8FB20D4784EC0867AE2471C93412D93033DFB7D2B2F19E5811EB9E55CBA5E62
F16CA4AAD970585C6E338F5F95A83ACBD04FC736141F03DA35D68D91E93E8020
3A62ADA5F460FF52BE18F0CE103B2A5565A54C85367A7519E343CD6FF5750F1A
32DD6B38F76BBFAA9AB9E3FDBE3B65729B7129C5EB2D08CF118382A92B6F946C
CD210E57E5A1DE75AE09F96955DD926DED61EB7DADF737DD4C50E420B57695F2
58D86EC74F15A7EF93BE38E5B23E6A25E5B27AE396F98DE4E145F0F03084A9E2
ADAB197FD5C1B08AD4ADEF012E8CE733D44378969ABEB2DA1169DA1C81FC28C8
5B8D8BBE7D96A7740399A49947498A50A51CD3F1D5CA5B4EA7B6A24CC1D4EA35
1681569564C5FE093CC465B9C838A0D1468A4222A3A8EE3A5597048BCCF6F404
5E377002552E4B26702FF05B6FDAB06041704F4B1ACC30B52EA66BDFAAA6A57D
860712B567BDB683FC1FC716C0D80CB379726231B6D2E368183009E938354A08
13959E1A77BA6FDB0FBE006653DD0314CEEA3C0FBD5958B3AA92026FAB8F7AD6
7ACF169832E3FA17A74AA7B4F5A3104F0922543FB564B87FD836F7B5BBF8017E
F820A8C1E1CE666713472F2AC93C770EF89C73739907F252426C407F219C61D4
6CEFBE0D9434899EB64F475C6FC1BC424CF8EC9626AEE9296C138D87C3D6320E
79BD0CCE120B07BEFFBB4EF7AE33B254A3BE50E7BCA0B995D41A49967E662B03
566F1D5485A198E31200E591FD3B46160A80F38FE3FA9D42C0B10F310578C4B0
F1EB54CB0544364C8E54551D55192AA394F4A7B61843298A8559DD7C5A4A1C9B
6067D2874B8ABB157EE4A927AE2AF8E3798F678C58C9F00E6E824EA89740419B
58026B60959B3FE3852C02249F7E4435B1C10F262D31ACCF45703C1C73DE6FC2
5587BAEB5EEC5C93FBB595927F6A27826097312A539F03C279014BB43302C17D
65E09D5C5A301B3F0DA49266D01D5FCE7383E34FACCE653CBDE77355656AD3DC
5D4F45FD160AFB7A7D919FBFB851CEA604623F3944D14EE63AC4E151FDC6B8B6
886D1876091492FF413E79B9103707A01FC8224CBDE937760053952C320C026C
CC069B3B6FD962819E3C6AB5AC68574D148B5E561FC8B7FEAB73C6F9FFA2CA86
7C2CB50BCF35679E2FFAED18B816F850268C5550019FD00B0495D0DF76563C83
0ACB43B26371195013F74FC07E862198AB55ABCEF48E9D3AAC9798AA82080B0B
3CA0B0F7EC02D7FFCFDD4A29E9B863FB3A21150ECB0269FD505D9D5398CF1F32
D8615DD81ACF85EEF2DD5F3E431AD913401A14BAED44EDCEE78742E92A2B1F63
BF1FD9667878B8DF293877C25F3DD0B8E96FD97995A8C947EFFB2069F4F1F9C0
3DAF75CD070A2FE9F0EE14F7203E29EC622E28DFA60743640795FCE2BDEF64F9
B32967BBC5E94627C3AAD84F3A04E8F3C65FA94A3D6A48456A99C1A5559A7560
A72DB96A37BB15B9F6A21C41E1058B720694A59370CCF7A8016E3E14C20D7AC4
0B7899E42DA9DB1F2B4C1EC7EB8DE6122D79E9E395F5CAB8B4637839E430222C
C6CC290AEE4FA610779DE56FAF0E6E738B7FAC8B9B0E66A12444E619E42DAC2C
2A9E711EE272D387A03A4C1711DB1E4215D754133A2722778B45B63E3700A128
E7BDDFFC2F2A026B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EC7B769E60BB
4E038223B7A6E419ABFC5589937753F78A85665700277EC06FC91C453613AA0D
ADA3095C755E49E36ED662B269929C431F13BDA571E3523E5AF46542813D4D84
4F9F61FB670F5521FE1FEFC260F3E926AE8AEF340658AE75843EEC7B5DA65FC5
113028F5CA15C2FF5EEACE8613DE9300FB2099A0299A8F743D418E1D967FA822
A584B7BFB9623B3D7E59950F479B42B30331EEE94B5FEAAE9D5DBF74CEDC0D5D
35D8B99854C5011191AAA3879FC554688670EAA54F518FF635ED89900FCE0DDB
9754FF29184135878AF3482D61FD2751A9978C304AEA152F36B8A9B14B050273
654668DDB04389AD1C10173EE31EF5B418E0840E53FCE776A85448BDBDC50E45
5BA882C3676D4468672F09B0034491EEF3EA0B5FC47F3D0255E9B67256F38ED9
966971AF26F59269E95F653B3BFAA27A1B6AA5D611BF122733DF9CF8D9A3E6F2
230A77C10C2692938E8B62D0BFDE7F47A6D7C9E547CA8BA44519818BC1F6FCDB
8314C064230E5FBC126CAEBF6B208FB3405C900AA958F922C67A363426C03C53
A0FF16C77F2AE44F800E071214352072B6C56A3840B973191D069CCDEA92277F
66AAED0FCD0BAD1C00C33A4F14E57012C36D478ABDAE83A1CC512F8DD4853A9D
D83330621C616528C14B621035321BDA7CFB837962A31686DF5B2528B13C831D
BEA1900386B134884048F5B7102F66C23C3B39F8D59FC9221FF35221B1B378CC
EFFFD3A4A041869EAFA70CE6A8ABE634D07B0846A4796BBBFD73E0210C1A54B4
468938EB51173E04AA8614C9E0C6A67DF2B651C3A7791556B1DA71AB27885183
DF1AF2060F086B4D3A1CAABB2A29D93DAB8EC44A72154983AD87E57B85D56DA2
07C999CAEC4C445BB1B0B552EEF35A651C251B9EB5A26DEF9EFA45B44CC43775
62BCF82E9BDBA2DD7079F8F2368FD8D8279CD98C44DB6835A58C2CB4374636F2
E5DB8CF80B65E415BDD44B433185E29DA7D26CAC14916C11B1FCA1C171B7B183
EDF89D009F0025692FB97A0DD77737F84F944EE4F182641F0519819ED5698E18
525BEA63320AFC3D76ED738BD5395DCD5165547A0C30571334B5B84BDB265A4A
A6B6DE6EB99679BB399E72BC7821EF6F56DFBE4EAF94B7238EEC78753C9DF37A
BB5D6594F323552450F36547F3FCBB10057BE1C8FD1195ADFF7818C11DA46F93
11DE22E3ED6D554F62F45E64C8FAE7633019CE0C67033442187DD5187A3BDD45
FFF02729AECC6EF2A381AE8DCE06CF0731B05959EBD9842DB651BAC539FDB597
E1CA11033C7BC47A4FA41BBCE3E180D25EB51433BFDABA618A65A9AB1A0323DA
3A5F6B05A1F353A17E1A3496D5EDA9A4BB7B3EC68B932CED8C170C93B6508CF9
AFA3BDE92FB7C6D8EC60A3B5480C9045F9998AA0FF1D6E807958356C26BF3F43
5E6A6E9147BC1B68EA135225157DB808E765911469F5DE55D0282AAAACD9DA3B
1559BBA47E462E38D459A241F1D79D4958D052E0B8752B7DA94D3A7757CC6346
7873B3FD8774AFE554C6929CA9C20B62EB4940F65B4132E17B8C982B8395B172
37973DC6C78F84411235EF81715944B1FFA6BA4A4E01B62DEE3E8B83791A97D0
8AFE22CF4D8F665409AA6B379E63D0DAF1E860F25F8826C53265E4F23BFD5D61
D65EF165347060B355836547626605267814C118A0B9BD286D1CA1D11247E0F3
5D7D2203757A3708049B582DA06BED01E221A863AB63A4288A69ED6EDE26E008
D055996B79C2E6795E23452881DEA6255133A274431778CADE0EE48913BB0C4C
B09F2124ED1AD4B59F7E1B823B8117CCD2784D9E8AA3E3A3C3BC695A2DBE2FEE
4D3584080018FDD4ABB3B329514E0CEEDFF2D982860EFC578AE24B4638BA23F3
EFE8DB7EE4DF231C3E7DE655073EE24EEC0E1407F50CE0D95B9BD02BC172F4D2
E5C96F67052B18D4E84607C18439F938F70345798735A215ED22ABC048715BC4
A26FF1259B992BAD46E7E15E0A32F1291C8C80DCFA59587B468D51C05113E4DF
D5F721F94E9C9CC7BD30C73E7F151C5C6505DECBAAD64CF9408FEFDF96D353F4
51D9A5889BB2A05843B77FCF415A4966F55DA91F052E0A2DAFC98090B3B2980D
2F01B22257B4251577139458648D097C7DF0FAA15FF4A119F6F32E109AA72866
ABCFA4C0DE9C6BE1600E228A23BFBD557195A0DD3A62F5C4D1323B239944FC07
5AF17D8744E4B5F1CC133AF4CCAB0D05D56A13718427995E9AD77AA61C8E87DF
94B7067AF11D35B5089B3755966E3AEB44254D78C674F365C6CFAC8340E67FE3
64B2ACB9C2E6A36497AE191FAEA7950ABF6A46C46526F55D4C70D1011DE356CF
1452998A9D78FB7241BE5EEB8A094030E2F0216F900F99AAFCFAD97B8CA9B4FF
039FE7F0238212592BCBF4E3ADA805FB8CB33C22410F264AEA902A15474F5A48
8D11A7BDDD9CB5905F3B5F28DC6467FC359564DAE9DA6793E4E58D57DF709A55
6760A31D1F7A206F84D54D5955525796E369CA9CD399A4ABCF28F8AC021CDA90
3F1A1C7DD2F7D6535F44958975D2559BF94F9DA7FB2E7B1DFDEEAB9A5D2EB243
B1466847567F31D3C473F542FF54399C3B4C5125CCBE755041E330C068011F9C
D05404BBDD97A82AAFD2C12ADA91D2A6BB2AAFE0C083A91194634597B4CCC3BF
5AE6D6D6C094F89181B9B4EA537E104D8F5EBE021DE0EA071A7A6CC1DAFDA0E7
86857CCBDC5680292E5A01B0CD0E45682139F85FD44F45A013F484BB0C079FBE
A8495A92B363F7868151FE610227A6926E2123BE874F796A061CDD0580E8C3CC
CABEC81D8D642F424FC890C3AA28BEAA14D7E4EA34B5C7A8E7CB19D8F9ADB4AD
EAAC87686720EE48562CE367D96B03C041CDB7518AD6740681626BEA531FF3E1
42539C35BFD6CF6C63109E1834DCAF7E2ABCAE1872FBBCE2E88FF7A709218A95
0587E924243D0A0F2975A68FC9A373D09BEB912E873BCF8E465DA2A7E657A4F7
ECB1CF1480CDFA755BE6AD0DE2514FB118396A7A9C3D50F45DA7B7AC84DC4328
25753B66C370B6EF2393B15EA8BC4D582059B0C4FDD290488CBDC82A51AE32A4
1F185B68FD07C22F29F048D219B56C6E4BC52515C87B5539303F30BA776B0D6F
3A26011EF6036096398D8D10ADD46B3FCFC12980C2EB37616A904300CF179607
A73EEFC602B26191B61BEC3A5CA3BC9645857AFC4009E803348BD23C5B2FD805
839AEB21991477B1D1D365CA8F3F1A0598D989A92BFC5825C57777D3140B4AA2
2256DAACF1B9CFE374403C5DCEF8D87BE59B2AFB843AE2A8B12D3CE3BEE1CF75
96C4CD0C89D1601E88B5ABDAB00E5722E2D705CFA59136BDC0B0D09D0C618944
D95EDC673E7715F65BB160E27B2EB98B40B5BB9444CCB3715EB6C86394057836
E4720E2C04EDA090F9AFCB21113220AAFDC7594484A14A7FB63727EB9F296702
C7CE0221C1F7CB9221317C8B360A8E3F2A171196E3422408601C181C2202889A
0178A3BCF2FDBE0468DA86197D20B0F2DA6D155DD5D039A497E695CE96937B06
D010ECC1C654EE763FA7D9E28D74D97D924AF433A0D8C26811F8875AC2EC399E
A5DD13E0005BB2EFEB035CF0FFF4349F6AA66615F5F90C678579B832A51A372C
BFB7C4F51848BFE70B149770EC0ED49AA31FA3F91F3F32707774DB00EB964E8D
EA693255BA19E2A651B901FB9584FC466D109A4BE8D2DEDC6115BCDB1BB77F61
BA2382F865C665B78E6DF7A464BFFD8C2740605E853A1D91F72019482EAC0571
8F26CA3840084A72CE73FA3098020350BEAD58646C2E1A551E9738B42C4E2964
3EC14B417512BFFF1BFD938020D6F8F873E7A0C607F80A4C94CE11F3E3C7FB4E
F007EBB868DA7F878BDF6355C62305948C93A4D218B0F0BB6B5702C11EB467CA
16D904EEFB83E40415DF0930086731FFFCDA516ECCB82F7BDFC2222D60250361
776EE648BEF29A464F4697D217961E335F83DB65743BF4E017A0E969B0F07363
8D2C1EB0507C9D25D99E43AF6017F31BADA72F9F257D89E3D6A599CC98316C94
70F7E31F232CACF2867E6F462C044BC20DA885EDCD4807255F0F6F6F786A2031
6B992F547DE9372FEEA0BE405782AB7064A6F44AB8719B95C8C26C9CA26BA670
D4EE31D155B146DEFDC83803992132E16A856BF872A9C60237AD36BFA9662838
FD8C9F5EDB1C9D74CC3ED1E66B4F09EA9CD1C99527A1A2359D7DDEAD3C546313
D9E8F84054563EB0E9C3549D275C4B457FEF358E5E0F06BF620089BB3DFBFB82
4D4C921CA69CC6259F13FDDABE67A3458878EF75B3A436BDE5E375BCF53F6AD9
DD8DD4705FF1F152B62BC341084E1B1D3FECD16D2EBCD7AD3050E68B2F5B8794
33A41FCA23CE3A9B77824562A0E86E19FB8D49646A4C3BC15E3719971BA2D29C
3C72EDED884CA9321BDC6EE944C5EE7644A661BCDED75739A29DDAD519705EC0
C3A425F84078E97B3803616C82DF89CFD601A78D58CF2BFBC4B1D57993B4BF06
372BF2B9729D821A95E113828FC83BAAC642E71A45519F1D91512710D7F85D58
35E7435FACB054DBC3EBF162256D31A527EE40BE9CDE2510585F71BC23DF412E
699EB77EE9A9FB725C70A6F16891C108ED054D8A4073409013C16F7C0B78B07E
749F03A6F600309D3C2ED9CF3CC5FE379FA814F6DE5EF68E71C5A53FB3BDB005
D9C93BF9B4BA15AD718CC5E605CD6C3C5A46E851536CDDCF4770B12039C9EDD6
7D7654256DA09EE6ECE41E6AC27760C03FEFA3D9E13FD38FAE1FD869366B61D3
7AD7EE83F7AFA7B9F558375F740346211C7B7E9C88794DAF9F658D25F1147F08
16BB0E2C389CD709E468225532904934ABE1B4ACF7B977B04020976A66774516
464C6FBD414800010026AB90EE57BC17191E745696CAB5C2BC92E5E93649F87B
5D007626E9D2EFFD00C9A0645A8623BAB6B6827C3366C0DB22791619B16F2B69
0F2D5E43CE5900B6A136B4A03A884BEB545B65F59F2D1FEE2E47A30D41BAF5A7
5D1A39A9C8B680CE33BA14FA109C9235A7D553D936309A81BAFB0F0EC72337C8
9968B1E3B1D2770A56A276607378E3C4AF5B2A59F36883269056908BB3DAD23D
9A4BFF59B4AE356D1DB3175DDC2A6AFD06EEE9950D691391660D4A48B117D5D4
B19467429D32609EF1C4A1EA3D658764701CEF19E33CEB900688B76623F07A35
05666193DCF0F7022C4E8DFBF1D77A634F74977E6CD6DD9140CF672A06AFCABE
6B1C61E4BC84249E9D38B9CB72D46475ADE57DF0761F1736E5CB7B4034FA680F
F4C01C07568331C2C107F976F505F02B894B170122220097FC4FDDAB7414D018
CC27BA2E9B04F956576C1727656A7B5562B9EE7E3C2D1EA454E3E5336D2EDB9B
6D48AFD2AFC82E953903FCA1084ACBC84E874B160F4127D1975F2CCF7F0A7270
1A3C85A01D18B7DE8B0627D7319885FBD91D06D1D05E85E4D0253D93536EC760
A644D63654019FE9133F71A6977E95CBD7D401FFC438FF5F0402390EB3601422
AEB9145CF452F46D79616AB6987CCCFF47A21F141FBE230BB97BD35DA951CC34
EED49EAB87152DDE36A1D32DC13EF753D0E9FE152BA797CDB2B4657A9A741DD3
5491F81C58A6920976C992BE7C13A9A3C78E874D680945A8D44A1B8AC2703697
1251BE5AA98C829EA8766E3BF6CB8F5C805FC55E89E449873B438AC76DBDA340
7F35C53DF6B0138A284A29A37284134AB997558528DA60C1D39A78B96EF9DF60
D8ACAD2BD90CF4641D3A1B640DA4FCE9C00A5845D1C7E8F51710B4F1A4DBD8E6
BC21375631533625ED6E1C31222D9A53F0E3789B23C32D4B24C6CAA1E878CCB4
473B0763AF4BEF82DC237A9614956066DDA4031A8E608B103688D2E860B9BDBC
D50DE9EBC008E514026A46682D801AAE769BE7F49BD6526B99A3CBD13AEA4AD9
599669F4EACA96CB516D417B869F6A51033BBCAA723296E000463F8247E55F8E
9CAB0E6782E69B0B9CFB518160625310AF4F5F81EAA90BC4FA26B0ADF3FCE144
9F0E80BDCBCFCF477A2C30A72EC227B20D920E2281BEB2D27D8ED7FB312FC415
A0BA6147E6650199AC331AE204F3A450A0165F894AD136561BF06769FA90DF42
654223C32BBDFDDBA1C764174646AD7CF2249478AD7A9E51EAD2D9A4C9C6B49E
CBA54DD1C476AEB5999C50387DBF7F59869CC9A2D5E699820F4CF92C09C7BFD2
438D68983EB006896E6616DEAF9807C23208ED4C012671D6CAFCB00B7BEF6E47
AC23B920F7B535193DB8F9B12562F4C6D54E6BE4E1CE430372E9EC7FC8D62B62
ECF80218EE3AD0CCDD99E7738567A073DDE782C9E37686C48427B955A73FC841
DAA0770C66A226250F2132DC5C2420D0247FAA4C9EF7BC6220909FF71ABA247A
0AF3051EEEE580ADE7F897DF81CCB6AE7B126C45B8FB860925BE59D28B8B7406
31E360AA6DBA1E54991EC7922725600CA4E9F2E43806FAE98814420EF2C058E8
DEC243D61E036A222D9017C7D614F6EEBAD9BFB9DE999B57BA3FE61D3809C04E
552BF1945CDF51C4E78157DDD16C76A55E029527E917F17E5467ABBD88E1EFC7
ADD58BA85D4FB629D14A2F2603D8D340705927A1468C4192AE8D8799A91A9EB1
9EA03D4882BEC4E9C271DF42EBC4183CC4A9DD463B0EEA1D0323E86F0C5EBF44
34464C47F8DF4DB69281479EF18DA223789D260A3B2A48117BBE9988B61ABF40
DDF4F85653AD94E7D4D7729DBEC548D2C42A9F225184AAD4E80B65440F7CEC31
5C33C2D5487DDBDC27DC59BAFA1DCEC793D17250CBB9F85B92ECB32FED94AB79
27DEB8FB2F7059486DAD8E0A3E47A37B83BE0F806B92CF63459A96A20337B786
BF79495DFFB7586DC46C8813407091DFD854C5AE42B7888DB9FEEBB7BB5138A9
E24821DF6432D376578942C226789972FCD53625BABFE9264F59E3FFEA9ECF43
B02073C51A2E904ABF09B3E6FAB30DA012DE4D5D79D0EB4ED8A280D190F4C953
978D66697174C916B13A95B5A2F9860B20D521F09C89D9B72A0FF54C9A224B61
4FDF98E6F09DDC1E8F1009E3882C46F4AC804B4189CAD4177F901911B4B120C6
CD95C2368EA8F0D42E7A93B474244E0D2BCAA31920271BE74A082ACB55C3009C
DCFD9C31A182E84F87163A97D16C6DE238383AC59698E081514E6D9FAF37BD18
2780389CA0D2755731E21AB3AB4B82C9942BF25519BBA170D5DD3916DD26621A
A4799E6AA683CA426A26A21A803F7B00BC526C5673A5BD6D0F4E81976415A54F
2879BB03C350A0B6C5ECDAD7BAA8CECDD09A316F854CC29B338A5E1BC14C9468
B5528F5B5DC8BB183BA18C531EBE04D392E4419967E0D5695B8E2F53EEA5D5D3
BFFEB9A51236038D4452E44A34F25718B715880932C81E373C26C2B8B8A2A90B
6D6C9B00B56052E8DAF70DA8B7DE075911DF2C7F74C3FBA2E0BD06B9230CAEA3
07FFC93C0DD7481343E1CB40AB473334BD6511BBFDE32D528A717276B2A22F1F
449DA4A07CD5622A67C4F144BC4A62F275692317C3E530C6503C7F8C626CFB12
DF5974CF5EEB182A92F7D67FEAC9FB771D0EF96D19CA67105F2A0122CB11FDD6
5E4B00FD203DAF0DC200B513C5E569A1AF7B997F7298F9A6B53021F50EC1A2E7
717F5022B1F64E787887462E26AA6CE35C5984047396DAD16BB8266A3B55B7C5
453227D0FC89A091DB7DC60ED38306755FF45027146DE12236D22542CBA81DE6
62017A25446984321EA37892C5232D48677DD1DB6622182633C428423544EACF
AF6F4EFFE258C05088A48DF74D54DDF7FBD46D78D457CD1912F93210F9843C4E
FAE24907573C2C7A684F5B33918BCBDC61EB37DAB17CF0F349157850C07ABAB3
8446C399ABA963AC971C24DD84C2BE19FDF1BF03737057D22C125EECC5B6161E
C1BC84E7C159A8AD8558F0498638015C78FFDC310046829066CB058EA61F649B
CFD90E5614597763D2683A5E5AE1A7AD8D402F232034B7BCEDA9C49AB562DC60
CEFEA21778CB5FBB61218034C721F5EF704DABF60091C4311F2DC369DA41DAB8
861155A0B48DB7048568AD276734DC2059CB14E22749372883A262140C4E6714
F5D76BB3E09AE18215311431841DE8187A20D6664348C7A8ADBF4A92EDA35FAD
EE4F56A388398B9E9552A4D0A3D1DA4166A11D310A57E0E2FF1E07A8E5C1A90A
74AE775DABA6B19E853AC021885E5650BEBCAC44621F6D7DACDEA52E0210B984
8E6FB91C81497FC1AA96D6B4817645197A04277C8B701D81BF0951FDC6C23865
7A7D1B2CEBA4BC918A4FFA02DFDE27DD96537D6B45F1FABF4119332240B5912A
1A4087B40585F1CE54AC20A4B455D0612DBEE6B0B60411388FD7F8F95FC7A454
2DD071B9BBAEBE5D4076652020775EC86682E5ED5A50C4FD908EF36694AB65D3
EBAAB524A94577EF32F4EADDE67BBD1DBECB608782C44F3CB27C2CD1F0D1C4D3
6C36859FA9E034B959BAF3744624216F1E5C23929C6D4C7B0CF3DCC7585F8945
78F323885785B81EE909C1C6481A91C6FF749589BB94AD2498B2C86ED84C1228
9E43A5754B47D33E1798D14A9B3FE5664F49031745D86203861EEEC0AA4E3FB3
E64340399F7B2810D439A4CE8FF974BF1C1CB99C68581593A6CEBAFE9A9136C3
AAE071B0085F7C368F8A74776D9E86917785258CCBDB883B1F2DEBE75E8D9B21
44A9749127C0F72AE27F55A17C4D92B288CDDFF6A033669E1D9F459EA1793927
F359319269D09BB44890995A187369C0ACE19F3B608C08812A3F39074E4A60C4
B6AA76761346D2464B67AEA933DC7DC07EC2D4628249AAD50B17254E6D298C52
97546C686EC196567BC5CFE8BD6589B20A16C2E1CE69B430C9E868EBEEAA1C39
AA17D591BA5E7D65FB18BC5BB7642593932C9E0DCE89B98C959DFCD700263CC0
5F4975AF0F945A2563ED5F291420170A3AF187C72B119BE5F19E2D9777719D6D
125FC82149D4841308E2CCD859F64E76E6BD785EB1F60378DADE649F4F521C20
F6B6AF7E151F7AC33A81947FA89A939B1C5F1946460795E0B5295B835DBFF1DB
368810EE0260742A7B748BAD4C7AC5DE779115C57BF3DC3E626D85442D495C24
1BF0CB3F2CD4CFA7805F434DFBD7B3F4E63541A8C0D10C0B97B503F0677601A3
5722C36EB48CC5FCB101A40DC768D5535EEB54678E70AFD52D5B66B739C06ADF
BA741F9A9E0FDDD9189DE5C3F2A05C77B99AC145AEDCE5826302220B185F12F8
DC154E4B79B16167844D3C542F83821C56B4F44B70462F9975A6E314A364F04A
819BD094842D0A31DBD42493D2DF8A406D54E11C672C8CD853C485813E28C402
89360E6C4A9A5C311A1B1C3CC3B80A81973105F3E15BF95307E9D95812294121
CAE501DA60765CC29F3A8130B9B70502F954D1A1F794253207AA4E0E58E6FC51
CFD78A2E31FBCFADD849A16C1B7F3C2F189D1546A0E0EE8FA91F78252EEF3231
6F1A2114DE5DE94DEBD07C120978F4DBD93BE4CB6B8B624CBF8EF507A4D8B506
BD33EF11FD608D4C3BB119D413F23D0484F9E23D1FF320EBF19DB09C71426873
62FC574EB79B143A4BC2515A46A3FCF99346B2A5C1CDE2B37C804F50577B6D13
08DD9C414C5EF14E7ACDDEFCF6B67A066C20F6F3E491E8148E53097C52F9862C
73958676B313F2C3E279F66BDDB570706018B4D4ECACB63331266D46E6D7F7EA
561AB9F7EB03301B980B3290848EF811B4AA5D159A2C5B87CFA09CE0CB795D8F
826AB2BA27088CCF6A8F90D91ACA913F1D146B2C48A6FC2146237C1D110D4A10
112D496250647F37A36E992E0274738CB7DB4E9A14291AF15CE3BBD6B3B90E56
A300E266A8DCB1D744C660C00716A9BE748675E49083F2F3E07CFCCB0F26A827
03271E374CD452BD8D56FC88B655FE2AFB26BD20AD34695F9592E64F99DB624B
9EA96E1DE31EB14BA5BA08543D84F0F27745D950EB67D443394E8BDDF37CC49F
3CBA01251199B2CA567155B85EDE07CFACC9DD470312AF08879F0C0E5695341F
884F6891EE30DAD4017929BF57E22E4A51DBA862F6C42DF889263309D5D84456
6898041893C4512F9ABDBB7EF226F862C9EC8392AB9CBD174CA5E3C982BE50DC
465D3A003CEB00A07240B96F47F1E55E05D9CBCC1E6A51F20F8718629EBBA2BA
E136BD3099FE129A5AF5DDB6B2CE6E15F0C7670274541DB212A8520DB33E42A6
0C5C4C7A725889284D623CD8E5DF6BC4ADF8132E4084282AD5D20002B64F4968
F175ED215CFC24750FB1FB21762E66C8CC7D99C42405595139CC7199A0945BDA
2A8233223BA0FA5DC9DE92DEDFBEAE56F46E7C027EE8383EAD15F41430347963
2E105CB504A8568F31A10AD01DE693BC7B89AAB1E0E69C93A7B937085053C42E
CF7716A360DBE6923069B9D6F6420D7F2AB7752FFACDD5D83C59404449D4AD64
45D23839209C250B26C40B35AC82623D4FE46C9BB1B0730BCBCB20E22D06AD1A
AE225D5125AC09562946C6231A4443617700021F84B9E4440BE5D4A62AF9D135
748915856FE50D442BEB8A77F9298A753B40DEAA42ECC89A0DF5B059DF6AFF23
41463990EEBC4C7EB5946442BE76CE28AE3DC8D73A84AF77A1A9B7F8FC81E708
7833D3A1D24A140CC6F17626CAFD038E882F05C8AA106AA11F1A57B150A5B386
F79FBB6419B3D0414FD7E64C2A76F7090A5B6315BBC8B4647BC8FAF2A217A6A8
A6E1BC7443FFD645E8EB8E1CB7FBAC3D02CAB57B9DC5BF9841F9B66D5C588A11
B39DCB1F2C4941FC19CEBDE71BA4E36603C5A861613D8500CB57D81CFED0DE21
894B96CF035A3B45ED6A55556828362D6B0DC62911CBA5FEDFE41F813357F200
2FD7D3BC2795CA29E315E43DB3EBD99D8110257DD0B832CB4209074A589041EF
309DE52B2BC3CFD181277D371765E3F5FE73B7D1E30B517F4E93EF4D2B88C75F
569346AC2B878782D12F90902AD93D92A76A55B20FBDC8F08B4857C2B99E52AD
0DA92A0D41C9D59948E7D6E5669C0EC13FA59846364CD8EF00F0161C8AF4879C
EAA37352D164013DA9C1D285F15CE9A68E4B46122EDA7F4170C2DE867625FC60
47E741477480046A76A2BE87050F8AE8EA3905691BD007F8BAC8FF2A8B267369
40F70FA83C005F63CA1E6CDB5C9A023B20CE5E35DEE0330C8F87EFD1F5EB5098
AC5930545B63AA9E1FD26F26026BD1B23D738AA4DC8353C95AAE1E7875921684
BB0FA3EB65D1FA0EC2D13092097015E0C4F622C4B5080B76BAA2635F3634168F
055A1D93F6CFAF2AA7EA2DF419AF8DD2D9B46E1D2CF497E1DF44AA50AA5B9B4F
9093BD3FBFD3AF672D501753E892E1E6E683D2545B0EE0343D1FF764ED045DE8
E6B07A909E2842E0AC5D9D07D01A4BABBDE2AC70FE51B9321188D3740805E361
12CA620BE1CB7D9071466ADB505FC23CCF67CA8BF1B1274494E363BF0890FF5C
1FBAE1B57F49393F76BA5CE298C1259BA8F85961B560D8418FD21B83C15777B8
D7DBD5E322DEE7A43F99592091514B5C452810F9349B099A38501F2314DCF085
78A30A650A8FAC8DBFABB91D54CC819680322EAB72E1250A760BD06C4229938E
5C5B2532FC8870AEC17BAAB7BFDEE0CED49CD0EF9CAFE260F9E5F5A40A1AEEB4
0F15246FEAD8DE9F860817882E5018D71033BC87D721008F1FFA5FBFF226D373
9A9150AB31AA85EC4C4EAD7858059FC54715439CB365500795122379B1581BBC
75DE8FB8AE2BEA81F9C2737FFEAD2689AEE3E930BEFF4522B7EC2D19DDBEAE49
3FEDD3FBEE6667EDA6AF0524CFEFDFCF4A70145D467EDCC0085445CA815B0FD7
01A9981701295766162B7BA50B9C4156A24084CECDF954E651BE33F4231C62C5
F3370C9D152978760F1E4491254E63CA43FAE011FE8040A6C037E0080DB96070
BBA2BA84762C8130AF99A43C6B630CF2DEE8B53CEF5FA897BB4B19255BFDF927
5F1908B0453B07B419015F1BD3EFAEE424423D298571204AAAB9118DA7E7DDB9
4E5EB10375B523D1F4AE7F706A40F0BCD6C3905D07EEFCACD74368BDAF6CA205
8B6F18916A6CF891C0EDA30426B3E386723DC91C5D1F7CF09A046115D45493F7
A67587727B64D2D561FD5EBD98809CACF688526394295FC76C248C5EC3CC2919
D3ADD253FE74A224D2F07EB970C525B6BF8E81FB5D86C50C0C3FA72C8A70DC76
B5B36B2EEADDCE7423CF78A445BA502926219E1D01834759C1B53084FFDAB17F
0FCF6018072A9CF3DEE42A9546DE5EAD908F2FC9BABDF6F9470EDA6C8FDE4AB1
158CB6A5DC06B9D56B9DF4CE09FA5A08BD08EBDA2B1CE463423317FE66C4F772
5CDC99096AC0CE9D5B822760954D2CE0CE474B3A5826DE04B5E80FBDF21BAE4B
CED4D33C8E716505830E436210B91D3A2BB25904EAE18F272B6C8ED3039EA780
D3CC26766E159B68A2E6D4DB5CD9FA03668530FAD2A77A5EED85C9303C4F67C1
750AD3CAFE48B040D71A55004B6570C850B55F5AB7C6011E6A779C73E5759487
44853BCF5547A7870E7F619F862DEAF6D102545F537C8C10AA1BCDDC57296986
480588BA364E9B25F1235800DC8E790D62F3EF215E559F8492AC91FA8947D123
82B17FDCEBBC82F61E5EF76E879FE46BCDF1CA131F5338E07126051E2E0D4B64
3A36A44E5B60749198EEE609E483D001294AE722931391214FF9BE3AF7FC4EFD
D53765DEEDA485A3BB770A26FF50A7BE430CF340E13DECAE2CD4E789818F8474
AC97D727B4E0BFED7BF77BE3ABABF7B29BECFD6AFCE0A484A2B59033F31B7D04
C0F41BCBE74EEC946B4412B0398A980FF85A6100CA44D2A2871510FB3661D8B5
F4D9120A155D32DB5C681FB9FEB65F8BE28A41E8243609A986887C7DB8DAF0F4
45EBCAC40E23D43871579F724D3AE52E81AE24F40B89B08305F69A52C2EF7F0D
0253B5AA58F60AA690D5D4A4573705C59C3E3AA4E509E24B79BE0F0804E02412
E913B4B56231EC275BF9F0D7D1C46329D4B0F67C8A8643213B4310280177392F
60E826BC6C58F3065D9E77A3EBFBC9AD896C537B440CFA78A1197FCF102CBDC8
7BBA433D26E278032930976128CF0D4E36F4147CF1BE39E108970DD153850158
CF3C78E858E34B8CFFDC7A128BEC094E76DBA3D23431DE441E0D14ADD66C3B5C
2E9F7BE3D107F07A9CE546547C9B492CF6160BF12036F45D7B3EAF03AA1F3E48
0C41EB8241AB194C0896546D749C97906935AFC584C1C89C0B70F7654DB9EDF8
305228BA8CC8209E1C726824976B790F553FB24087CD6504E6961B63F2078C13
4C391EE9AADC6D26F1D3B0B0E9797836CA0B1D535E92F166C33ADE345C6AB919
21B93E22698328AB9637DD1776101127A16E83FDD2A815D41BE84B17CA417706
4A7A1E1C778CAB39F889A684F409BD672C3E6A26B4F87FCA3E5E666D3DEEB203
D4F868729955E3ED89CDA893969B170BEBC15F22EFE2EE812C36C1E2B485259E
A07C5F279E731333107A831FBE6A6CAF1BB6D934295DDA39BB2EA6AB68DA43E4
B1283ADC302B57BF1CCC37B1F86611B35895B99A796E0574AF3CA81DC6E5BA2C
45BA390D6C5424AA024A24C791748AA7E65CB03DD1D12023943C3F72B37899F9
9EED9AABA70EBCE5166E1762502D6B046C6C6F839D0A12F5BFD7B16C616C1058
C4C506A37A998C561ABE01BCEA8D861E6EA214481C40CB729BDA1BCDE001BBD1
9E7AB862F52883DB9EAA8CBF5BCEC2C2BCEBF870EC12EF096A2BE42692EA401E
2A3A18519DC9FA48D9DA309EC266D02004403382F61847A3C6EDA79693162362
84A571A5A3063CAA9DD92C9048EBAF2ED0AB8488A7787CD10ABB9A367CBA8CED
2BADB20B58D59CFE67E259717847836C58DA3892211F2C244EF9C507DC7C7CA7
4633545ACC6E1B0078A6D40CF7C7D8E43DB73BEC7AF345B1EB3B7E8780F0508F
D81A1EC8D91EA2646401D4C180673C263D09152C2A8C462B846277E28E9CDB2C
81684F0FED04671BECDA8EF1A082C93DDCE47F010BC112D244CF986BF723D7BE
801088DDE675AE408838500535C2C93C66245D8F342B85C6D3C094C30B3B7A6A
2D04DE8D3D0A8DC328E2AE30D06F1519FDDD9FA855E043750849544DA3B0798C
DCA8CA2407495D77D39639E4256570975BA5DA91B80223D8D832DCF3F0190E74
CA44D80BD996572CD7408EA8CDD149E6B6B138D673D7DBBEA4B18CAE59246D85
F522571253A9B72E651BDD24A2FC32CA3F584E85311D317771D48C3E731FA579
935CCF4570066BEC3CF313B736147558960414375834F2E1390FC739FCA366FA
3B66FA8BEAFF5C2413D5C5C20BDC1307D83B0F9F47989C1B92D1D8B5A6856F36
6C4F9F2A7D11FCB46E92B59FBD94B1C50215ACDFCB720B2F11322A97BFB40AA4
F68117B5A7A522A0B3462ADF84EB51186F06C26142F8F369CD49E4A5405625DA
1473AA9CA9BFCCF270115085CCA9161922B13FC0ACDCF4005F1F03576CAAA8F1
31C8C426FEBD7C43AE1DF6E68685E7A1566E25B405F904C7EE9EAFF07DB6D8A0
6DFD70CDDB93930112AC3359DA546E756E750D563F99768B26CC209FEEF1B6A6
BA134F0960218FAE41E0CED13AFFC26FFB82B69ED97BBD3CFE5B3BBAF2384295
51943B9C8B48CEF6B2EAC6DD70330233ABD82E8948F82D65B7CDDC7B75686A62
DCC63F3511D901B6F47E455D293DE8B6E3ECC313FB450EDCEDEB2EA64E63D21E
6BFFA3B0957C1905FECDCEE584EEC3121FA39BA8325ECCBD3FE75D7D0B9CB90A
990520868D9032C34BE24C29A6F90E2AED0C48F9AD7DB86B599E50BB6A034580
C75F9FF8361FF2682E86DE255EFEF62BDD5FA51E3F454EA48400F2160941EF7E
DD4B0E1E2ED5131DBA6FB2988F64CBDB830D6A4C19954984A2A796172A99269A
A07DC4770F247D2E67C4A1234AA8AF98EABA88034AD72BBD4C6A0473E17BBD05
DD4A8F00EA27030624E6B07F30FC4E9EEC8E04CAF07F28E121E4AB6F4D01EFF6
6A377E949EA1E06F21F21D1C7F288A6FBF9406F5FEECC416CD4D53B94ACD475C
1D324ECDFC134B0986D7B6F79973AD584FAD5B5B1A5D7C61490545C9CABEACC1
8B3A7843CFAFCA9E386BB278F89FAAF830493CFB1DD8D554EEE7ABCE4CD00C24
69E4D33196CE5566AC63011B9AB249BC30F8820917020A3F59E19EC0A4EEEB6B
DDC5CBDD4AC54E4B6E5227B4AE35FFB7CB9775F569E5EB680E966156DEA6E2F7
AA2A4F0F955E06B52348D94FC2A7F1C25FD1EE18125A251CE9D3F8182A0C58FD
9F86253ADB37FA47AFC054B6320229AB18C4E0E0749B8FC35CC3B2F1D7BC21B5
C149C6B807C7DD16ED554E03C38A384A9922460001A55B1C635C502B97CEEA5A
0C83CB1E8577E668E0E6ECE5058A926D98343A04C6B70C090CC367225770BCD8
1190A526FC6DABD0989BDBDC4A62F1725B8CB13FE7D023374B958332C2B802A4
DA299F0CE1CFD0F92DCBFF6B164808BBB9E82354ECC65ED961FEA7ABF30CDFF7
192FF91B505FA0B5F906C5E6F49F24BF651A1A5A11253E31D7EF1D4C0C97B43E
8464FFA69B14BBD009A070CDE34D6215F256916D7F0BE2B93A31CE76EB251065
ACE0DF2B83873EBC8C23AF082F2D9177730D498C338F5D4B89F88DBD85454410
AD28F57792DAF2D43D99E9259D0CF35F3C09B40D20E64BD1EEE0751058CBA2C4
E05BA072469823759750BED39FD2A03341888C3D36774B76B8AC1ED4A20A9A96
C21B574397CE3140919848510E74F1337BABFA98D51BB2E6BA51DF3E3A970736
15262CAB16713D66493983C6B6380EEC014CEBC4FB89A86972D1E757907FF90B
DB2D7AE7CE69814F549654D8F258E656C1B42C832A2CF13EAAA8C1E994EC6E89
1EC22187E9AF767CE814E1DAC97E7401BC710337340948277BB3080BBE729E2A
FC16CB499CE32788D6E5B8F982493430E38B12BF817A81C3B860182AB4575807
094BC15EBC4DB8713D85028CA1FE62D85CF7340F4A50B916EF26CEA3EA2367EC
B80720D6D756B6AE1852E9F40C75895E3767148E0A403BD6E4B8D99E2871A695
44CCF04D8C9A842C5567EF2EFDEF0AEA9A47C15D1BCAEAD319C1D94068F9BA30
4F8BCF4450CF62D3C0A4259809EE9F92F7669C671912E7754DB00CDD6FD58818
0A12226D6379E92CE752246939694F1FB3AE9CC49CBE43172EABD8D0C7910403
C98E1B3354E450E223EE5DAFE32F43C306598476ECBE128236BECC128F169893
00AFE403390059F00DFE5C17CE0D9D66752922026ACFFBE3C74B8929331FDA0C
64478360050F7E9D789E8C977F9FD3BF91CF60F68410DC1E67527C937568DC3D
2D13B1C71404B7538962884F47EE959F0DB88579FFBFCC9FD97958FAB3EDEA12
AD355DBD98F29F6B4D9B254F78AF5F8FDCF8D101B2E0905ED404875A6A0674BA
D7A0EE59DCF7E0664790A17223A0F8E5AB022948EAB2235FD716DB6F87EDB0D8
5F5E964BCA93FF5B3BEB9B6AFE092EBE80AF6C1E5362B2BC25BB2A44654351CE
8F69FF5E2E05C3ED0F8C618D3C8885A61B742019B0AD801DF2911A3E6EFECAB6
690DF2555E9E7A9F4266ABB0F5AF20020CAFB0F08CF5C5B8B4C76D00B91BDCD8
A9705BECF8322D326DFC2A455157B174F032A176D7BD60F4A24A62F910231F5E
277E65F1B50FA78ED5CFCAE0D1C27B5342D6FA2D0954B24A942E352C475FA760
5AD431F14D37C75B0B8E8893A383C8D353451D36A6390BE54BAA9B2BBDE01CC1
443F6D25AF7BAED7298B5726F0DDB4EE209181F9390E32B4ABEDCBABE21D9964
1A21B104B487B1F373E18A9DD16830E2247EB288C2913CA1F73AC7C13A4704D6
2877E20FDB5A2A502B26EB53B0D50FE6FC66DD5ACF4BD1AF9BD0699D1B4ED78B
8D5BA0F54BC10A3441C52E0E13AC44AC8584828E617C89711B9CE2A8126DC63C
55FF88BC7AB27DF932D9ACE5DBED38819510063ED6DCC84B82A9477CF6A8CDE3
863E8B609456474606B114203BBD107CC6CCE38A4019D3D67C34F71CB61CEEF7
150317C4EC4BA39D3A0EE2354AA506A06294058698CC219D93F04F832A9A571C
6504821DA7EE8C3695295292CCEEED2CD2EC98CD896414EDE15E0658EA4D3A7F
DE793B41A0CF4658D9F5B0C3E7915280A5F7FF3AA94107B50F8C143ED2895760
43C94B7E3FB8B19FB2082A98312322171DFF316A0E9DE3B2937E088C03AD8DD5
828840A3658BDB430515A5889D40A0CBE2924BD91A8336B0A05381DBED6FF6A0
AE1C69037C566AD130AA1B750AD0340D15981FDB2452B9CFA406204BE293E5BB
592B26435A327A392089AD327ADCFD48067305E979358E83586D4E9D7FD24AAE
AAC8181CF5BA1A9E77F949AEC1A6F39ED0FFBB659C3C77D5AFD3D62748590D39
732400A07F510331E7F5175F1CDD2F5216DEE72644AA634262AEF7EF7C4A5303
8FBD8C3ECAB70CAA3247BE966EB642349B742F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC88F86B07C1097F9C5C5673B88582CEA8CD622F9B0C79
E463DF7F2F4C6640FF3852BEB520F7B23D8A22E7E601EF9CC6D0A2E6E82E6840
65B82C6A3A6692811E2B4F57723AA3A6E27076A2F63D6CE1FBA7ACD844E732FA
02797B386F2EDCE9FF9F84EEAD17B366D678E61C6176FEC09C94B749918950DE
D5B9C221B0CAB9E827E3E8BBEF4018E6B622443A1BE37A58E7D7185675405E6E
483137C610D238CC553011CB35FC4AF557E7D4EFBCAC8760BBF8ADD162DEA267
7D41F7B59C176E41C955A8775E5382DDE5C2CEBD891C3CE7E6799102718D0FC5
7EC5B4CC347CFDC94CCC44A38CACBEDABF3D71003681B4A816B902226219349E
226FC5584B9F4E015CB02DBF4CE1C3C3A708970AE21AACC514DED8C44066C0FC
504468EBAA63BA6D41B43AEF231DDE1C490491513B1E86C3E6B346554C54070E
5B5032BCFC859960F7BD5F22AD67F2A4E7AA7622E34F0EEC64F7657CE0D23028
80DF7B7EF683E90DEAE41E16115DEBA801ADE7B89E0151D6FFEFED41C8F38185
3154B91AF65067C3C49E5546DA4434B7ACFF3C578C635A240A2AEACC7192C37F
CB43D582DB0A6537E38C7EF6B9FDB4A5A24E65AD607E1730DACD19FFCCC49648
1A19F273E353C8D6188DA0B1A33C68BDE5BB648E0B73E79795599DCDED817C73
0B1400DC9C68A9163A3313B66D8FA6DDB653B346D1B35EC86DD63BFE6D80308A
9E584178C02ABD078FB569447D6F0E77C57E563C368ADF7322B6D8D15EBFFC56
73FBD1F0E09303F8F6B664401FC1819D5BCC5C0B83DC566CFF66B023CA9A6F30
E2ED2C44D2CBDEBFE3AA8C99FAE195CD3A736D53A03A34A7AFFADD6C9AB40D7E
9D420EEA99E44ABE260A20648C6AB82C192F68DD1118E79C15B16C94D34A2D6E
714578C971BEA209917709BAF693D668F7AC02F3DEB82BFD6770A247F233A0F9
9927AEFD4546C714FC9B206716BF79EDA5043564A0117778C7428CD3B0304C80
C2028D972B010B8095D2F706F725CDA6574317EA6F0E89A63DFEBB88CCFC87D6
13121F0796E257FDB8D61E033D083625FFC82C397E97F29081A7E0DFCE42AC76
C720757D1018B532ACF5D00FA493C027D46D5817F830B3DDF182C1351857894A
DFD76037021FF0801BA00255C723CA663F9FDA641FBD4D0508C6988F661DBA1C
EDC02E319A37666CB9B2070ABAFFA193286DD7BDCD70DD24E93FBC57DB150C1C
6CD42575FA496B2CB1BC39B515633A2E10AA97668F9C358C14A442E796E1104A
E7719D44399EDD9E9B8938A78A0F3BEE47DC1FAD0A204A7EAC4F75907996C360
E5F191073127BC27EFE81451E4122CCB3F24919488E6EE16A9E9E619357FBFC8
89CDA4EA23EDE4F9015151DB8DDD05ADA032410A8251D25463933E5FDAA127B3
7EF30FCB76BD4CA1E93255DC637775A42E51A11925529FA24B6629EDC77415AB
7F6B199F3AD1DC69B5C9E93D617CA186D413D7FBDE7A1DE16C177B128893D0DE
209E7C65C027592E21EDA406D4CC305323E33871DDE370E30F9F11C5B2BA454F
3398ADAD618DDA3D513BA5B7BE3A2FF341A7DD671349DDC5C24AFB39B3B97852
470402BE339F65C06F84A291CBEA06AAF0263074AF016EB48018F571CFB8302F
85AFAD962664420944A560D72666A5425AC5FE508E98B905F772FC17F851F4C6
221FBA8D84404527B0F3E12D1BEB0E2FA2174D22648AEB3B651CC2D541A1CC6E
C7D44BA1AEA41CE34419D21D4555CF52CF5338F0545FC28B00352D341729B298
8B10841910B46966A115AFDEB2A5A19B54BCBAD1EEC21AC95CF45917B514E48F
662F40FCBB2393A1C90AE7585C67B15A2B0A06DB37A8BE36083562CA8E191019
04A29F936C0C3632772BF8651FCE402C58DA89B20333387C50C4E52D98F702FA
09633D1C8E28D27CC88CD7AD279DA2B8F9966E65A7C94A8BADD311B1422C44EF
C191009697138B9170D8C568BDBE76AB386BA823EACA579847744D2729AAE521
5E8FF4CCF7E375715799125AB112EC887D6608665C54B53EFD090FC4BC35B349
3927E3110A3E1E056F8239952812EF8514C403FE3558E431CF68DA547E723FB4
0B625D741821AD71B27AE2857A23C8496339F087BDC2D19D88A725C2E723A1BC
BAA9F5BA03CEE08AB4E79F6A01A704B45B60BB1B6D62DAFADED30C80A88778DF
ED9A22AE2AD91E2E495EC3E88E766587E96280A8813783C8DBED5C150997AB1E
6E22EE5A58C7B3B5A46A860FA2AF035F57684AA62A6384292A2E1CD061B0F2B6
B898B19C2D82B264E415C1474AF9ECAEAB4BE0914A1693894118E5AA17787725
43759450761E3A8CC48216DD2A8EF14E19B10B32558BF6E11D2FDB5A9FA7CC2A
3183D2EA771388E846015E5F90F398E753ADE69B38794E040C4DBEFA95AEF6B8
BFA8D11F8E3E8A073964347F01B283971E81897BDD528745FC5ED6799FA3427C
D8D21E078676C8BA54FCA7BD01D63766985D5B96097EFCEF87E6DFFFFFB3648C
124EBBEE55B24504F83CB14AE8B45C8A6AD0B195B896EBE18D493F0E9744BAAB
DEB60C43F1700EDD48D5967F50C7DA4150C3340BB4936C577A2E1A7E6E455B6E
6AA29E0827B412066AB9649BD8B977ECE7C145B20109121C352A5EF5B5AA3282
BF7E1CCADECD37F86FFF6A8AFC4147D15E470CD83443A5AEDE562A82CC39A262
A3029D8C133EA47FF9A419F65532D5DA710E83C9A2F6C864E9C811F01893D54E
2B49E1933A356B65D7FD4A44302BA9C0828FA461B7F6359FF16747636618A3BC
AB817CAE402EC73F362E078D218A175EB62FD5E0E86D2A4E33091E8092AA56A6
31A724A37D6B9EE7E8877AA1C0972E0ACCF8DA6C31D96F24E09CFC547C31A32E
ECEDCDF72580B6FB6D74C2FC1A74A172AD98C7A95B15C5BDA7C5E78A422E34A7
9D656CCCA749B91C6E8E82BECFB82064F34979F94B1BD9D6DD5E2C9A54B8D2F7
21D93F491EC798AD695792DD3CEE7761A2850B53D08CA71C58B3558E055931B4
6E4EA47511E05861BD7A6D2F89615578CF08B63914D6C7615F1E2D1D975C9B9E
E8B42DCB0C71D0883EC792045E8A342ED2E69C3244D3CD6FF9CF4758C4F6F2BB
3AA89E7AB1A3A4681B619A255A1A5A08F1DFD41A2022C468131CA023986B9F69
E851696509A22036FB0D6F92E45655F1358FF0220A8134094CE561CB8930395F
15A6082E685B7B9E95B80E7312FAD0074D309AC2ED9E46796421BB3CA804EB37
552BD4FE945A9814963914BB07863E6AA7E4A04FBD8C72A9713D8B8634A2DD9B
EBFCBA2B0060A7BF70F55C19612892ADB64C4AC0F269744C7C9DCAF3B3599E47
D6199887E1FEA93DCCEC0A2384A8D09B009B754760A27C084019C4FA7C74C77A
6DC7BDC9278EABA007E4BCDE4248387F1FC8269D8A6E8EC83BEF34EA61838AAA
3CF02A53E86B1EFEF5896E9AB8C8E78C36FDAA9E87B34E272DC47FEE94DA44F1
E15CE1EEA4CE06CC777524ACAD6CFB4F391FBECD45A5DFCCBA1EC7E85087C975
CB33F8B0F7859B3946A034FFFAD43217FB9A139FC02557924AC9FD7A26D264B9
CE1286D5A5B2BEF3658412C0BAE454CFF84FB88E906CDDE21B5125FCF94925ED
0750107B82A9310E28A24B78CC7EB38186D7F391CD91B6937E83D90563E98074
2FC2566EBFD1AC5454B525363E3CCC3C07E5F1F4C463DC1FF30A9DA22593F3BF
3C4E0B46743F75A442A05FA0AC21778D0CC98F1414F6E0B23D88948DEA36A644
0C47E77EBCA162E8392529B40EC1A9CEEB63AC9ACAA703C7E62AF79588ADBA98
B6E6ADE147F62F64B2F3EA46524EFF692AD38B2837A96563CB38DA8DC23977E1
FBB840F7C71AB5D3D0A9B5E10F8A1042C3A172C35E724C925274B027C8E6AECB
CE5C76D5F0FE8645B302879D40CA1ADD3C6827D03671FE828910C9BC36939880
261EA5778E31D059C697BCEA1E3B3DF1CE90C436C478974DF1DBF8E045ADFAD5
CB4FB37E1F072E937AC1653C8AF82D97646ACF705F3C9C85FBA0500657012519
7A2CADCCDAF7990701A6A7E9A1BD7F267E8B660841F9FBFE9E94AA83E1DA23D3
B4BA8ECA4B07B1AF4547EEAD7711FD6CA43F495FC4C6AC87B43D9351E45FEECD
B484210B7783FA169150EDE09EF9A683B95C7714BB2B6F90492B57F2B66DADF0
C7A8E2DA92CB0CDA0502C30C5675BF37159E667AC5B2986AB0B2EE45CB9B2DEF
728E6284AEDFD48E8DDA13352F5B3A2BB1179B9D7F48CB3710AFE68E5456D1CA
8526D68FA43C4890BC4BCED4E66A74C0405AA090C8FDF9F5DDC44639D31745AC
58BA5BFDD941091F4952914F040EA59ABB10B34D5A16716213D74DDBD50638B6
D9F2F12D43F1B39FCBC882F39D31A1DDE131D44D320CD673D5BDC33F4979EFBB
7A49BEDCC93AC6AF47221DA569F7FFEE729076F3F57164675D772D3B7F4DF7C4
8FD18CF515F59993DD9275C4DF79533998BA19561FF57D5DF44D0FC53764B0B5
35B21A8649BBA11B3057BBA5B57D712B40BD3E2543202E66E8B8855E6C51A2C2
53A8D20B8366CC0ACA1EE95C4BD5CCDDE1720D6E6B1682F99FD53D57E940AF24
7EB910FCCB7E9813D664AA3AA661BB4892268FB19A50D182380F896DF58FE054
F925CC96F331B93C8F71601F79CD22EB0B956139BC6B03A06B6C14FCDACA46F7
94D4205A87C558C89C82F168C5448259EFE386247AA53EBC0A0B85168C2B134C
F2530C8E1D1477D92BAFFE2FBE8D1F2581F248E7672E6DFEAEFCD319C1E8D9DA
F602885DEA3402332850A7E8AA0799CF1BCF068D854F35C11F75BE33D0CED5A7
ED8BC26350A7CA056E1CEC4C7BFFE638529549E9C93444569B6B68D2FAA2F390
3E0CAB1E7F45C15A31F6012B8F8218CBB7C9ED6E3BB13786D43F3E6E98FD17FD
35223393F1C88056117B546F616F873A194A459809492A4C183623D297804035
F7345F87FFBC44113844EA5A4FD71CCD3CAA60118F72B85C1A2B1E79DE88D4C2
18276515BBD77B4D2E9FB755339D2B46394D645767EA2FA66EF0D4EFD92B56C3
AA4FCE800A2C4ADAB19C973614EF9333C663D8A993C69EA05E954647C90D03AD
3F94212AB125C41DD11205FDA021F144BC4FC1AECADA5073AACD55A154EB6D32
56D73202A1F7ED0DF85B4AD81E1C1BF13BBC28D04E13F891F6415AC16A57091C
5D40071241CCC4398C1AC9730E06EE8F3D228A64CDB31E4D5A45BA517FA126BB
DF27DAAD3837180370BC455D8BE97686D3439DC5B3EFFF5B4BF0176C89CFF9A2
E0B67265585161DD460EC190A75D6BED2A303948FD95D18A2F022B78530FF9EA
2ECE38963B1C11086D81EFAB5CACA588C3F178579C7753D01B1A39EB96A3951C
BDAF14A3004066DCAB6A8F8A56ED1BF9100AAE33F0F8430FADE32F3B36BE5AEB
67A1295331D9BFF7D22DD55BB2D9326919BEBD77A13F54778A43E46BE51BE1EE
BD70F42420D8901D1033A0D5B203E7B53263819636683431C0ABD3AB38BC8F58
DB347AB1B63F06BA3F9666A6B7410223037E73B9CC77F08118E41E113819970C
CC725BF821EB1A9F9BE5AC4C5295505B39E526C5C3AF70587FBF56393BE173C1
579DFC13DFFB11489A98D9430C0C0741AB75EB81B4ED23ED42162685C2AA1A0C
7A54F85505445880D45492408790F5A9C5572030668FC456B381B2FF5787D304
2B60D51B9863C4B10BAEC50A62C4C680CD8407E9490D21197DF6DFEB877D9ECD
15D1EC5561F9D4BC554CBFA252C14412D05DBF18D2E2E5A31788BAF898D0186D
AE009015653E2E7489F2250ADA1E645B1B3CA595131F8F8CB2EBECB14C0FFEE9
318F630637779BAB9E69C0273385CB1ACF2C5D03BB08405CE1A5BD9241531871
BA0B103C7BCC2FB2109B7BF90A37EBF97B2C2767485617099AEFC7A0F53B17B8
A889216EC290C57FAE81DBE4D5DEC7B654CAEEA5119042E724C024FED7F4673D
64D1CA04EFE34A3A93B215BCEA453604692153A45C456565BB5EA29E668CD597
C60084695AFA194E4FE58E23CE360CBE87C72379E6A17B1492D9A91E274D0C43
F502D66900A421A1B012007C392165F992F154647041F9C5DCED967A06D5560E
370A23F6C9AFC8C55143CEE5591FB86ADBCF04AA281198B14731AF48977AE2D5
38C52646E54E82488B688FA7F91F519B0669DC850C964C7D2BB294511CBC1D97
25CFC4B482639EDE3190DAF7813393D9EBA42F83FC1E696856DB3526D8368D4B
BB5148BDCC032A7C828B1CBAE745815CE0F0F96F56E0B71CCA6211F031A79802
85E6F02BF0A8580C42E23A2381C381FF04D288629932D38AC5EF763F8508982C
F4F2DC7DF3C1849B590CBE8523FCDF62E152B4ADCD3D812EA89F462FA1D7E447
3C2FE00388B8E156D4BC1E2D31BFBBF43A5CF7CB1B028A0C71E5E06BBCD9BFC0
9397EB65EEFFA64088D999587606127AF5C0F044473683C5905A6024BD320849
7BBC33ACA1AFA1F2CA8957F4173EC8B9D334554AA140BF42A77D37CC7DA30014
FB5519C5119367695B7D265D0876D9F9CF94E6FBF9370B014AC2051FD65C14D1
9710348723C941B66B2DD4E5734D589B698F77BB1858729E47321B8A99BA2538
23E10E2383BBE41EE3A12A339E8FABB75D9EC668506870618488D1BA1CEC5F90
9A78AF3A96A9828525DA6CA29C949DE2776E29DBFCFF7AE94ABD30A07CD0E223
C63DA0FFC5B04F4ACCF8AD01CD6727D0E9C35202E731F76CD9034DA051C87CEE
2F3087537DFA79DFA6B56306010A0C2D0E8771D33997C560F66D218C713E4E50
BBBC7B25CCA76617369A0CBEBD83B55E788FA69AAACC5DB5EFA150CA5EAF113B
4152A48D5106ED480CBE050ABE48B85F159CECA82CEB84115834E95421F79F7A
6E6228EB456904E92C0B24CCFA6D0C3C8C93B000E92A28D740F2C0B5CAF210BC
0E85FE8E3ADB54E2E3F93ADB1379B57D2AC8E9DDC61CBE2661AFA8D0ED4AB59B
88F25EA79B3897292DC7EFD67CF558B581DDC1046630B904B6854F67FEF9F459
0746A2901AC3066CCBBCEDEA91AD91A46C3B3CE5E127CF3A361BBCB584804737
CE5B4551E5E44077AC52353198E99C915184D2DBB55D7785EE5A46A9A4B0DFE4
756C800BCAE87F6F0E09718FD2753BFDFD2E5C0742D882E49DD2675B58B5ADB5
3287965A8CAAB13E0C6223A5080F92CC842EA70DFCBFB2C703F97BCE3C9E5CD5
68FD2D2285DDB1295C216DD6D71FA4403E3118E8313AA71C320CF005A92B2F7A
DCA84E03394E61AD891A0E996DF2664054066B3AB25AC77F8D25B117BC727325
622BA0F51B8BD049527468A9A8F3736070A1BD2F745867D7D8B9D342708F96F0
7E3681A8A1220160F021A5DBB3A10C194B19D77719680391D52A9F40D7177D71
4BE48719B4F90427DA1F7A986C7DD7294F064072AD984A6A8E0B7867AF4FBF63
EDFF7524615CA104DAB53441FE65F028E156B2FA6B07F52C6BDDDCF2B15E6936
8BCA0A1F2C94A8F3B48C13D1390BEC8F04A3775EF4F67A78C7608076AD4936EF
86E675B7D4EB8938996BFC9E7E83242172A3D2A18F80F88B4F2DDFBA4297E746
58B7CF5FAA167828AAC6FAA02416C935B91D7F3D40D8A4809553B283D85F3567
F795E89CBE6ACAFDFB457071202F39EABA6DFA0F6B69E2ABA51842E53CE18A42
C47DD0FA1E56D8CCF4CA840646162AFCE0544D374C26401A51B1DD9FCA33F456
7B9295F3231EBF78E012D866BF814EBEFC0D880720F4FB75342476A242041B2B
D35762FE1B6838F1FD0809CF63700263FD4C3F215A6DF7560B8278D42E2D2163
292BC8B46511FE4C0C608FED6AADD5EBED935A07986BF9F062091BC7E873EB83
0A893B68AADA7D7EF9357262265AA1EF450F862BB49373AF0F58C74093660C17
5B78ECDE7A46BCADDDF717371241BE0E5D48997B57DF3B06D883B6591F2F80B5
CC6912486B33B49EA883F1DD05C62885F96C1B13D99BB4947E54742F7D4445FF
EB9D30EB56C5D1AD7FAD7FA31F87FE604C5A93CA60A8C57C86C016DF42010E60
6204CF7BB5EE8FA4F53E7533F31529CA1178FDF4C32D26FCF4205B3BE9E73362
3857E9303483C477E7F7575E8F924680ED65B07D3E644052DC94F30C57AC0E65
BF969E4B0822E196636BBB396A53D114764BB18A799883F1E70FB862A75C4A01
92D0520247392CE60B3E4267C19FBEA7144CB107D402B415C01E98DF5DF032D7
DFDD300F4D9ECC3E8244BF37E9D294FE086AED1AED00EC11142F5FF5C91D17DA
16FCAF0EABFB95D0A3867F50D079E2531D416AF74659B8C9C3C932F0A1C1367D
D9FA5FAC6CCD6E89CAFBB4A8AB81F5013897DE0A6277493063BBF508BE2730EA
6500944D2B198089D6836E2557C5047FB05025294186C3964A45CC2114CC4984
02ECE0255A941FCAAD4E6EEA2F5735F092D425298CFAD9291829A64F790E76B0
D77E660607BF9FA96D190592DA15A09148EE30FCEA49FFE4D49AF97E7D36F644
97E79F22FD47FB5D7D7EADF71C92148A0750AD8AE9D85B25252F07050E07E49F
5D730BD703C93E8724AED3EFF44970B753BB3484C619645FEBB2921E0F288EDC
1877732463AD4FE21E3B0A27C984FA3FA768958E2D06A8281FC3C46E77153AF3
747F7D3314B2F79FDEFAF1703E3AA0E1EA9F5B49FF019BCDF9D37E562BAC3F15
DB3A77EDFDCD60D2EC05EA40B3FF1D9B730A2B1BF027D27B6F6954AA169E3ED2
03785CFF070069ABD1DEFC0C13DDF17626E8BA094F1430A983463485B635FF61
1EA254E64DE48DD3CB6257C4FF15CACE3F59403B19344DEC37E656079A13B8C8
3C52A49F852FD2EADE2A73F6D06F55973274BAD6E8F7727C2924104AC1C6AA20
4B2EAC012B8FD0D951AB600CC5BD20F49141C330FE6E41ADC8EA22627897AEAC
EA2F49C444B0E0CE020BD0BA7780D7F1B0F8006238EB7FFC7DAA3EACABC76EE8
EC9EB6D0357D357EA578C50B9D60DA2D981F179E9432F785A88F4EF6D7C6E18A
CDC9CFED2495BE6DDF7C7106737AA7A78F88F56690F1DB31D77951974C9E02AC
2365532FD14E75A4D237F1A05F58D53310068046AE80E8C6894F22D406D41A7F
F1532B9F225C940FB1E2ECEBEC518B5308D4EB1BE8996C6EE588681FA2AC420B
0F90DD8E1AD3A22836B13E27ED4A79BB957A6B3307597CC6E15519277E7D49AA
CD01A860B00C0A15EDC5123FA9248E7031B2EFA8F1EC9B72FB5D2E97756326C1
E66769BA9EE403734446D9A42E823328D90BBF2D0E8672BD663663A857E26382
7D09E6D923F5C14EB753D8A52FCD4D041BF80B924266594B63CF7E9A717467F4
14398B6C44BC288B2C2C560653896C82A8C5A9208F5D59976E556BF50E1E7CF5
8BE7A89B953D734DFCB9405B2BA412444513095D746D01B864D989DDDA9619DC
502885A1672D9711068D831126FCDCCEC23DFDB6FA99805AF8EE2E244F90FB5C
DF254DEE34EB49FE568605739FD9E24BC17136707C39D1D7CE778CCC90839EED
4A740D96CA75A4EC43C1F4EA81349A96B67EEE4574680BCD50C2D7C5AFFDF157
EB18A7EBE468D596023F02A8271F46931C660ABCA4BF092943B9666224238DFB
6C7E5F4A8F1AA8424A86F5B9085DF8D75410E198CD26ECFF49FEC809B6D6E98F
6B22604DCDE262DC0A1D66E4868AF934F47DF51603413B844459E9EEF11F8CFF
128EF5E90B911D521CD61F28468CE26953028895DDDFEEAA2E6143E27C4119EE
4BFD171A7D4066303BA6E12DBD0A6708A1C2E809B727DFD6B717673789E9E46A
C954D11D6564E68DF1A7266072F958235996993721016F284D6272B157535569
2B87B9ADBB0CA15AAD074C0FB332F67873DB0D3A6929C870A4CEB4C8F35A64F5
F5CFF5C22028F08C856AD7DC52CC9C69CF5C7CF8B1B15B990C9C01D40E4C5EE9
4893D0FED27A48DEE69373A4BD4452AD6CEEF2F34CD4649B902D85711AA17511
17D9BDCB3FFAE37CDA735AD6AA043D826429513A3752EE89625505BAC4E33A3E
65D9D559DF6A80AF01166DCA7639550475AE20AC9C16F2CA0699C927D7C2B9DD
6A054CD2D2CBE9CCADFEB00903A27204BCBEC7FE781E50B130C57954AC46045F
747E68909D1D3C43EA5464B17F974ABA6C691DCB2950D67527713033887D20B5
935DF2689B47D21AC58C47BFD7C19FFC2CDA31B4D617443716E4A3F5656B569C
C2354D7B725C8330DE2CEC47EF5B9486AE6226A92FEBC6804E87C5B69B1E2663
C9B93384FDFF4D6BFA26EB2EDF89BF3E72B887F0BCC5131CA5D1F583141D07E8
04F500285C5D11D7C96A1F2EC0BE28C21E2A617A1F8F5DB98946CD16D22F8A3C
81A93A757612463904339390E8B625A2EC2D0AFB7E148E4BEACDB978DDBFA299
B6DCE3DF5128DE94089A4655ED7FCC2EC4FA9C7B09E6269EF2B81545208C22FC
136571AB6D3E414D17617A10AEA3F8C8B2153F63C84E06381C1103922B2BB9C8
DD7047E938AEBF9869C6AD31010F88369121330FA07DC41A7A6735E801E097E2
A6D48E03F6781B2599CFD366E530146E1A7A5B3948F9A30754B9B15CA9D8DA13
6CEBFFDFF04DACEE3AD4D31A5718604366C37F34F3DB5BE0BAC28546560DE7D3
C0AA7F1EF8CBF2C5626D3746BC86010E182D54F169A5F4CE0728FFA3D218B1E7
D5EB70707F58D3812A0B7405A426DBD3B89455CA9BFE2F570E7585C312048AC5
2B10EE5F514653BBFEF235EE90BC75BEEEC55FF5C1BAAD1D91367C807E66513E
3F26F3DD4A75CEA54EAE40C6EBCF767EC1D59882B10DF4AE3EF60E003EF263F2
7FC0C36F20276F81B1F05305AEB01D4F137F0B62F72EC903620D4CF6569D3466
34D100A09C7531669F79EF6C45277349E529369F3CC45B5CEAD2AE4A65E90169
B841F7BC50459CF16760BB2A41B4001FF08BAB5D9350485850ACDB713D9FF406
1FD6495A494652E0419D19A22273A7625A2911B5BDFAACA67E5E0CA77014B82B
4CC648A35394270D973D423DD0423D5255BA5ACE93EF4D1D3DAD08BB09F53F50
F902B1F62B3617AFAD5B28069A2E0C569205BA15C27BE9EE5CB06F5281A47B8C
8899C16C5B7103DF849CB5E48945483EC5CBE21B9A40CA7FACD96BDBFC378B4C
4302547FBD1BDFF688150CFB420F4A2E51E905255BC1CB8E162DFFA835DABE0D
5E5802447432D7B30AB64700E39CCB009182FC6E055990322648772607785DA9
0684F2E617F66B1292C364E48C2DACBAF23CD5882F327B927E21D54DCC768D08
021269D64097DA5930BDD2C552EFAEDD3F5417E6062D239E60F53BB15E4C7233
7EDCB19894C4F2AD9F8F56AC30056F8F473DCBD934691AD33294BD71BD5A8326
49C885B8AEC867FC4B2F5EAF3C9EFCAD3F5B06D09F8D601C6CCD7FA59F1CA647
9C1A5B8CF7E3935DABFBAAD8AC330DC81C66E844347CA2F5B9D561C5769B19B3
0A0F47B060BC4F3183750795C56120F3BD57967416CB9F8A6B0E87C464ADCF25
89D17EBD902FEEA2E964E51A9A675EB78F2F993616B304E487D93ADA90413902
3C1392F355E1C7A17C33CFFB5CE4189C3F3A314666863FFE6F870935DB2E3528
347BA0A02595A1960216743E04EAA0C6C57C5EE617C78A614362FAD7FE29AAD5
09110A688562F2E1560F3B9681E52E4247B22FCB8E4C8B7CF4E41FF2A747C71E
7C7B52C2A7216244B6F96B3C719E0967784D39434F3BDD1FCEE8F48A65832480
58103351C764E5389686F552FD91F2D7C573A3C9CBF787CA45CF8AA17604C71F
CCDE69B590DCC9E8F25D19941FD27EBF3C5A86783813292AC706B9E82D96DA45
054261020C41BEC4C5EC0E42A5EE8543893EE3A08BC8151AAF4894FEF76CA96C
63839EB2247168A596B971EFA8508D340818FD08C58616B8B7BC90D968BE7CBE
355C5339A67A8A6F088B39B05462124E6F46A904948882917FF270AF7D936C5F
55FFA7B82FB8647E749834A00EE5FFF0B5640B67B0AB0349F7CAE2A99C137446
CFFB8C38A9231E1D6A16B653793668D463FAFE6280D5270AF3148BAE8FCDE5F3
73923CF38D3B841D7356B102BD641254284A9560D51D944EB5B03116B8283197
AC50CCB2C7CC3477BFA3524AB36D2A654B717B561889EC9F6316E7149C3C6794
991EC33BAD296B01285B3CE9056C99120190EBCD027FCE75148C516079A8DDC7
9F0F1CE773DB6562DDEC599F65BCDF8394C8A75E619305E80E4CF8485045CC8B
9347B59357C9D51920798ED7A68E8CC20BB8ED8EFC22F51A3C4B98F647C288EB
ED25C8D21142CB7E6FD7FDEE45C4033BAA5DE7F111F537E97FA60A711779513D
118CCBD3E42D2AC2F208121D9B8210CAF47BC0E78106AD1AC8A83BE2B1FB7FC6
AF1E4CA5CB0BB3F85A3ED4A65B016532764C76A70422BA56F303937765AD745D
041CFA78474ACC26EB83DD4C409E4DB9AA1871F74CCE208A20C9316859E07AFF
67491F25516D6FDBE1F2172F504DEC33AC46363E2130C0EA0DF4CC2DA6D44FF4
41EE36A4B1FFC6F2CC0DB19DC96297E650CB939FEA551F4BD2B1D9F1B5EF1E9F
AF12346344D3999CF6E5A5AF13C6B2AC982AE6F4F10E27C5FB65DF3B2E64FC7F
25803721DB297A7801EBB7B9A489B6BA8200941422BF9C0BF69494254289BB02
AE0B17889B4BA6B3E33EA4550C5DCE9379313E60363D1F13ED3A222F7A00E2DD
03CEB5209628E988EE728E67EA933271A40FFFFCA735A17E8447CF3242589686
58E1ABC2896C10A336A4804EAC280F0E5203B14715F203A9E66AD2E4E6E06A71
FD899AB25E0AE4299A09495EAFBCA143005488763066306CBDDBF7A2A93AD55F
F7EB95FD943EBBBE9BC8BF3AD14C40C84B1C585A11590CF60B7B1815C0CE0763
21BECBBD7EACEC078B6E868BC8DFE29304908883AAD0F45B3A8B158E05227047
8144362190FE1985E98A77C22ADEF83AC21497CB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A229961ADB1D5023BD93644E4C23176BF787664F
CF245203C8C3E557669BDD382731E334C06F4B6EA145D5DF351211A0511605B2
8C540290A08A304CB1279FEB8FC14062F495A5EF2072B2957D98A1AB2E4B2A21
6F53829103F9CA4A8B6EB5766A44A7EAE4D5967EC3646F54568E9FAB28736D70
AE87CA7F3E445B1F49315332AC4AB47D550126D23CF5C67F32A6A7F50A50AD41
14B3180CB08497E2850B2F402F2ADE388F8E15A51C3472126A4B121532A7EF7D
CA3820F4A15EEDFF2FC1B4E344CBC5C99131B436E3951527C6D2DF80EF22622B
318FF3D95A4008E2D7A861EFD7CC081EEC69ACB66899D0385FA890C135340092
C1B1F85F37B619DC74F29D6CFF3F391BB258F83DA27F0845E3110471B8C71CA8
BC89F90F157E1883E8009A4481DD3F358628C209597687618D2326BA6DD6EF1E
0E695F56B8F3CFA0BD708C0928FE5F801570953A367294DC9F178C7925E77CF3
798EDBCE955FBD5C8602EF1CDE4FEE57ED2185C227FB82154D09C81BA51B5054
ECF728F172D46B6B94412ED864706A8C8BBD9AA5A442CF603B7AB79B3DF952FA
6A97EBFFB8C8035F07E47029B0130877B17C1989173D157C22C163D14D80E051
AE033F0FBA765F699DD3638CA1AA5B0BE888E1A9C5F4CE1B41783965B51D72AD
84B49880ECFD021881EECB26156B8FCE47CB62D34F9986D7D8BE75526EFF7305
834AF21C2B1AC47AD2F172704AC7E35E94C92F3ED7A2EED30995F61EA15DBF11
362AA92DBC0254FBF5D937BA73318575E22946C614C95CEF8EC2FA70FD8437D6
DCFFED9707495225CB1B68D338D54F17565E434E2673FC555BA03A9B06887AF4
A1185EF5C6EFE8D9B789EA10FD1DCE2F58E6C56AB1F8D8B36AE67392A583F928
375B02C8FCA84D68872BE1D67D993BF215F5CA2E65DBFBA53BA6D00B53FF4CC6
D4024D525C7B959BD306A29AA8AE621F414C6FA546C91EF52BE12214
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic10-Regular
%!PS-AdobeFont-1.0: LMMathItalic10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathItalic10-Regular known{/LMMathItalic10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic10-Regular)readonly def
/FamilyName(LMMathItalic10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathItalic10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B30E8028C685C8FFFC2
3C0E2BAF712D9A4BE80B6E38C9F5A449DD2DCD493C0A130001F01DB02EE2BE50
8CF3C1EE0898661980578B4396FB3179F301761100231D260FCA63E74EDCCEC8
08E4BD0AB6545195F32F881C99FE3877DF3BC94657DAE2BD20767AE9DA7D582A
DF256F4A52C57F9D228B3E1CC5DC93FDDE8E791DB1E6FA18E0B9B2423868792A
2BC90B78D9F9640524C758D0FEFB713A9A0D66350CD78C8FC945A63D8C07C8FF
5D66E1D7D963B7567F270FB876D2FF1E76F1FC1AD80246E413D337A718699FE7
EC080448FCCD4B5AD8453287D86BC727C140A6B2C1F62439396AEDC897D546C6
F8241122821F88FE9BA1342B044AE9A33CE496ABD5D7F76B1CBCD331A08C6DD4
37A78E15453AE3B1AB6664CFBD92B9982E6C0F5AAD267804425AEC523A184899
3A2D0259E64F914D353ED128EA5774EA6F87DEFDD1BCA35A413EA5D75E42E3B5
66539B7414AF09F23C1DAEFD913327B6CBEE7B5F6258CFB98B288A2A2019D344
E9335FA5D1887F0A3E6CD430AA65E3A59B396F035C7E84875F5A5E374875FE5F
2B49567A6E8C851A51D8BA4F6AF388BAFFF88D02B166F37F0CE1D4D4201AE26E
047084E2ED3E3662B60089E355AEFEB3964748C5F836C437C042B64BE3AF79DE
75AC4E7255CEC0F20E6D9400D29BC8D9BC2FF1E08D8E020F33BDEA08A38A5E90
CDD238866C66BFEF1B3B61F2564CCDD80BD048586674B94291DB7268CF59686E
D95927FBF8CD3224572B687E01791F40D51A230B9F12EFD86A7F90A0978CF220
FA314AB43197FE6E7C4F22C4BF4C4DF7ACC7EFE7C6B152984BE0FFDD1714ABB9
CE834B59B859F89231021E34E2BEF6C78D5697E25CB5D72D2A5F8093158818EC
60233DE494228ED13DC8AB6685A5332341BC02AB2064AA00FBE26BFD27263C04
461327FBAA2D88B6D1477815F4188980ECF40CD3AD1E29DFA34769ABC993DE8A
AF8A0E27487EA582D55886C3B2F6DED5322AA7F265EF97187DDAE8237E4A34D9
C496BB1C04588AE85FA5B209321554AF2252858B319283FC9468887C282A8537
29BD1E86B7A26AC1D3470F561C13613A73572D79A8CBE1180F4C4E8BEE8EC0B0
14E2B65B5E8054506521227674339C79F366B6CAB4CB030073A615CD431B3DE8
E976AA00381C839090AFFC5C4E0758F64AAAE03C0F7C813814A67AB8F69682F2
563C8FB6A05B1977B6AE44C6E4000F0EAA9978BAA153D1BB824BC3F99425149B
75668E0E69CCF8F290DE91E8114A0C0C7805F0D5637334DAD7EA8D6827DC903B
CA9C657B46365CC342131BEC3788CCAE1E3B42D50AA07FF891D0F6AD0A5E1478
1CE0499B42B5023D7497AA8B761126B0926E6148C39D90C41A2670F102DD260B
C07C6C983FB657F971EDDF0DD0373FE1D6878947B6D6D519C59F3D1B53F502F4
F29A07FA6529688787C1FA0A2C40C255A7DB4463ACB8FEF0DC78EEE0D02B3902
485974DE771D6EE850D7173AC3CB71B7D56087CCFFD583C0C7DCA318A88C2A36
D29A1EA7EA9A7D987B4B983AAA79F745A3BAFAC5B1C111A018020767B5A5C118
448569DDE9F69D63BAFB977645EDF91AB10A957B09B99C824654032A6F99EB9F
3006D9565D222C5C1D656383C2922BC23386CBF5B74EE4C726D1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE20B44A2BE90
C36DA2687DCB7DBA40F6B99E51650B25F4E51941B49774F8273B5E98306C87E5
3A03E6B35B82A143A76D58265254C13E6E1A9D0DB17A1D9294C759AEDDA6D4E5
CB498912E3AC15AF88E6309CB00AA35170DBDDB43739D05EECE15112FADEAFA8
DF7BB6157C5374FE3D6DE742A6980C8C55A9DD737F2069BAABD6F1B8A83AE84F
8ECCECD0CDFA74FD3C4FA486433D06974C660A27F619ABC0E178D15C8C217270
1E6C1493BDCD772A1B9A9CB8C1205F7896343973FBB99481B1A6B865510896B0
133C9D9C98E813E0B142027A215FC75181A42E65C3E1CF5269B00E31FB47B4F7
7FD95A823A176D8387CA420A441980D3E866604325998BF88E4D0A27D4DE5AB3
F44DF52033A1EE28195614165597150B847315C78C3871F7DF0D5B8BBD40BB58
C6F12D16BCB3BE5B4EB51671AE9357176D5AC14505504C43A33EA29CBE2AB98C
D0305DD935D8F0F5EE3205B6BA139A251BCF348F2A19EDEBB709068CE066960D
6D0E7801038F92981250C3BDD77F02C296953F4FE2ADEEEE96C2499E4D5C40DE
EFB9EEC8853BB3E2BAED185D6B4A80C1BFA827E4F15E623A96FA4C467940BECA
B15E072F4D80E6FA1492BDE59F46CA026F44D74B0536463124DFF7ACBDE3E03F
7063896D3B578B229735564F4BD7CF18486E33C6AD14424873AC44919FAAE46F
12CC16254F52A26FE47FE41504D3E851A066522DD56FAD7828E5E203F328AD95
5AB433987B2296EB3B524700CCC455A521EFDAB11378FA57CAB556A4F4B23D7B
C51D926CA86263840FFCC3BAF798B72E5EE24715E42D9D1AFFF7AACCB3BE5EF6
3B1C4E79B49A3CDF145253BD827ADB43D157A1BDFCB3233B9397EA3C8B3217E2
26202117CFBE3DE2C6DBFB0BB25BB138BCB5DEBDD171A3100D4D69D8A56566C0
FA3EAC58EBE319E08383B6A269D928DD94CE748AC1F0E99EB86D800AAC284813
B298DD1D7EF648B69F693C23EA484E5EF04ABA445FF958E4CA098C9D022FF497
44F3F1DD4AEB615ADAD672C6BE223DDDA48E95A221C8EAA6415537EFF572CA73
E4E558E2B016B13DD10CA06A91925B8F035FFA5B7481050ED9EF7A99E3FE103A
B285C96ED14BF085FBF50AF7CF2D153881B994A7A8C7FF2F25AF4EC556835774
B08B04CBF20D471B7C228958E96587810AC9401E1D5ADE97B6CE7BE0CC90B884
3B28FEB56250D8743AAD7F2CAD78D6F32E558B510C0C2730F09ECB07AFDE1428
7A32E1F9046A37CDCD838855DA828AD50EB703E99F0C33737F64E650B2FBCD9B
1B2D63BF87271B5DC4615D281B73F4DA92823A4FD666C4B19E111895943C6CE5
4E4990F54783F3F1233322E5408B2B3F92ECCD384633B1CFBE950D0C420E2AAD
B5AC6F537AA03AB6FD0D5BF4C9BC3213A5BA19D27370EC9913D2BBB6905704CF
35D7BF8C3CB2AFBE3095EC52D65125D8A189FBED43BFD6030926C71F72B7AFBE
A340F4B45490CE22EF906079DDD08FF521506BC85D071A3AEC9EE2CFAD51447F
0D660BF7CFF7EBC4ABAA221687F68326E6C59A9E0A045BB02C811F1ED8DD8DDA
03C5C83BE1137FB6294E5747AF7A96E75454B63BC429AB3DBEABAA2246EAE4A9
A7AE975D99A4FDA955E7DC0912EAC8754AE29EAE5AC87616C0C26855C1EFBEA0
26619E1EBB71D61651F11B54FCE233A82D9A5EDE1A3791CD03E726B1EA1D2A32
F99E21C188C2C18101A3C213C7E1C4187021B798C5434EAAE6541A3DB6A13EAF
F63F215EC34D0BDA6B5DA1359741F4B6F98436A0B7BC32373D8A1F30D092FC6B
A87A53639571B57D06DBA7CCF401899AEABD27291A7AAD14E9459904CED4E2B2
35CBA28CA560DBD3CD5E98B2DFFD004050A50DD561FFF7E3669A392CC6F47981
F4D01BAFF83B8DF53EE8E41302E597B15C2F640CA86F29174061CA415362050E
CB9A7C3AB8AB6C697AD5845D58DA9C28410C34B2DC68CB0F03583DC0C2243A61
56F14A8974F01B52945FC6ABCF3ECD8410335AE6CAAA4F70C697EA0C66A69497
113958A7DD2A69D1C3EB0FD63B509737ED09A882AF74475DB676698CFD9496C0
5FE5A36CA36601AA0C8052945A3865D41F6872019CDDD0902CE55B9EC1DA6680
EC73D7A0FF7A3010CCC1170FDBAB55B916A3E13042CA78F2DDD02D8632B42602
C895F0BE89FEB4B84CC0A3F6BE1B968E6F1750A2379BDC020468EA77EE29E32F
04AA6678579818D3B7D3B2A26EF9A534FC4F81CBC9BC691EDC41EC90A5A70903
38C66497F464C5806D183F4BAF157CA75FB9E0134D6F1295B3EF67AEAD84CC8B
C297009EB5D21EAAD7AD2ACFD7EE20738DE07BF2CB6AB91D17C5793A8F9ED645
8BEC6F031497B782C0B6094FD0AAC0858943DD3B8C3B3A5A3E7D8A11C02F5928
3A035DD6FF0C002B6F5405CF54722827FBC24AEF08F6DD0BC6A79A2DB1F62CF4
17E95A8E1A84BA0C4BD4A6BF0ED7AFB4A1FB5F1C4D10A732F468CF58165296CD
5332C2667B31618FE221F35B725E4ACB5ED51FC702B8385C5CC30EC3F37363D9
3CD82F0E2D84159447E01A8B367877F8B71AF235FF95CBCFBE6CB3C85D2088E9
623DD2E25F1CD3C5AE3BC0A6B7211BCDB9E4BC77E71E1EFB2A13F8B7F1F118EF
3FAA5A3B4643EBC517645EC1167969BCDDEBF9C837634AE662E06B422B2BA7B2
A56B2C172B4E14AD845BE9A914353F9B5AD6B89E58729781A48D0EEA3922A370
428A240E074F4C48144F871C88AD72D8953E25AD5C3EB85B21196CC9E9DE49E5
4F29D09F310CC35C26E8322378369C1F55676AA14FA38D0D6B9CFE114F284D0A
C12FFE680B62304326F7002E83160296D643E1B551EEC3CE13B1FE35573AD2FF
1ABEB58DD82D0426B62642CF23F409D9E336405A69890997C8243C3D58EA4A26
A6CC83A776AFAD14160EFE4E73FE9669F35AA3ED7D8BB9B773AB17B7DB1F3433
1BEB9C65FF7553FCF96007AFA65AF4F4A85778F78610F6A47D8A5A322D01FD42
58D7617C66D74D2CB53F1FA77EA74787017E92DDE4CA70E9A40252BFD726AEF8
C7E481B772A9E7AD7684F4ED86640E1EF2ABCF662690649A6F4D6D25AAD78796
08163AB9DDFCFF3DDBCE4060684BF01E1B6243EB49BC46825B83A7C52025C767
B37870CB666228744DB62F32588C5AA6C52D5E0F62BE3CAECAB7F3FB4B9D4284
CEDB8F2C33B0C9B4A729E1E5D10FD0ACFEF6EFF088F653F113EB1E99D2628249
AAD50B17254E6D298C5297546C686EC196567DA2C358D53D1A83C0538DF2F825
2B6B963B85BB230DFA61726A7D8FD300019AA3460355CAA25060BA156183BEFA
1D07F3C016142C1A8B337A0907F9192DB48AAB64B4C83371D3A53CA653BF2735
125CEB2D1605B65B5550F6CE3368909178D9A544430CFF9BCFB9246472A47BDB
56D8FDBEDD6767403F244060F6227466EF360755DFBF7D99EA46346EC80B6171
119377D458D193B1F81EA3BB75B18D31559C8B61790857547C6FCBB35A796103
67CE47D35D01DA4A94F447A97175E18373A7A108C2925DEC62CB788E20F26CA6
4199D2B76323794E1E12FE6F8C7D415F264DFA1F35FC4E652068FD1DB8B1111D
E5EDEAF225C2DF7BD54514602B2FB30C9A40DACB3A1AA64B9BF3750E166F2347
D9DB0CD7293EADDD2502C915E2823AEAE5A0AB73C72F6ADC5EBE658F1F21B5FD
9DC8599D4CA426D2A0835D4703E2EA572859F28C4A005442D767AA1529E28AA6
198CDE1323C6040FB8F2AF45B505A4EABDF9C395D7D71C009C357C261CACA4E9
533173A2102905B8CCB2F6EE7BB93F7BB853CA975305D42DE9C6B614926973D5
000FCADF613B837969EB3C7303D4653F41FCC2E9AC844B267B7610A6D157EA3A
DA7CF63EAE1CDEBED2ABE5DE7FEEC2446ACE741C2D06CF989858C45A915B4452
120D8CDBF2947CE3218574CDAB399479F824738B6D47231200CCA4C3C1E2E75C
3F360F37CCD87F4959A848F44D9A99071FBA4C4973E7B8D9D291757F1898CE68
0DE98B8F65593DE423E11AF9099F7586A67B05DF4C366E741A21B96CB5E1B241
0664A97DA3865940CA0CBA1309261F5C6F38CE44881BC3306E363E443C146F13
D4D1AB490E99E64B8EBA80F2759D1E9A9979CFB0A877B1055FCB5E5BCC1229AF
428F3F75B728D844E94E773764ACECFFE93AC238288C127BBEA082DE33FA87A8
3DAB9E233607A1997D0EDBD2BA7C8586E942973B8ADC21BA304ABFBE13888B05
3D6CBC34EC86D2CA91E32214DD857E80C15A25A9BEAEDF855CCA6D737976FBB5
E17A4D9F18FE06A43233C87D3DA3F5DB311E5672052E05C3A5CCB847F3F8AEB9
36B5445A26A913FCDF20A0A31DA98BFBB545BCECCD88385900D08491DFB085E6
A13EE6C92B0797073BE3A724989F106D85DEA26E8593730FA3F6156B914FC520
9250C42F6BF7A4521B21554098DCD8F7DA254922350521631F2C05A884542E40
8BFDE756C91AB084E55074DF62C68CB2FBD751726395EEC09F5AF3D6AFB7F965
EB9A73F746F550BF0657B5DC660728C942A87295109A93505C586EC7D6E78D60
8A9127711383F5F3DE2DC36D5685F5EE8E2E5D4D979C3C840C5436938CD7975B
AB77F6C3189160D180D9309F26FC26798343F80F01518636C71721235F2E1A5A
36B8759077826CC325B1E2FC8491C2F32E55C5ADC3F4798C3EF4A56D79AA6C5E
BEB45D3AF149B9D4064C3A65B38641C2ADE78C30BFC3C5B14835769A53DD5639
37FF30565A9C3215318E18B26FE6DB7F1CBBD63127434DAB18D387013C388D38
40182F35ECB41957C806CC4E7CAA58228247DBA2B741188B73332A47C7A8745C
86F0B6262FA6B9121BC44C5A8E284E4873BF20C15EDCC0FC6453406CEE1E199A
2ADF708DDDCAEA17D3C9FAF94A66186C177501453CD3FE3582073DD86F044614
D36342CC3089FBA6492892741FB2E4C9356803CA4A2A48D3F7A924CD93B97B6A
079BBA10E78FFA5A91E9AAD4DAC09EDA896ECFFB9944EB7EEADEC7BD012E823A
3334F9CB38C4494FC7AC2B573C3792E45CEE23C52AA383F0CB5CACA1C98CC87E
8404F41256B3DF22C3C0E1650A12F46B0E7AD9B00B33D1D7071FE6B6100A15BA
246760962C77B6268B7AFB245DE6EE02BF2A97B0542A5CFD6E0DA24A64AE823B
A1F14749B68E2B1CF93711A7442265F768310B38B163A986ED841B89F943386A
45621E129B3E48294E7DC51C69967B97BD1F1DA360C4CF05A5F07D3011994C31
A54DDC94C9A8E8625557BFA0C123C0DBC2E9233D3294BFAB55819D89E6E3F5C3
18A35C09690119AE96BCCA48CF7562D5D69CBBA4F21660E0A95A841DA7138A6C
CB61D2BDEC73EC3B830839AA8430F27D81655D26CF64CEEE66E92FDB34295453
173D7DF58570C729C8B22A24D781EAEFEFB6AAC95A7938EAC0BAF8BDFAA2E6E6
2D3864B4173A304E64EE3ADBF74840AF73913E3561C72800157712E85E97349F
AC7329FEEA6C5E951CF17C8608D035B921C6CA50C4ED50CF8D75C9FF20F9AF8B
DE1A4B71AE3761D67B064583FC15D8903C576D2F3DA3BE87F87ACE26A40B708D
9F5F4CBD9F351C414E63CE8BFC7E107366EB901113730D86C49854C81C55370A
3C14BD10638D8471EF803E01A44F447F6C8295CD18DB3E9530EC6806CEF14BFF
0410C07754EF3D61718260D9A06D9CEE44191BAE136396DBB3F64411CA10D823
464364F6E7523E6288AD18CC1A55BDF8116C297D35A993D0D7A61B06D63389A3
D10D977BDCBCAF0CCF5D22E677FF4BD649053FD29380EA9859051FD85BBC6789
FC44AAFA6D3AE571FB0750BF0431ED6E7DB302E9AC30AE90D2AE24504F2E921D
2557F27AA69283ED3F0C0341FEDDAA7255D53B115D445AE37D7B5F85EB5DD9EC
C1EB5EA612AA0CB1A9B056402EBB9489F3D734E62C1E3E2E2BB873147AE0CC25
5E05EB634484147FFD44C20F4FEF9B7C06072E0398F740D8BBD3F60BE10DF0E9
641DBB70577AE828DD3CAE98FA9E1A765A260FBA35589BACDEAAFEC6E0F31862
296F17D9EB257CDC18247CFE6240C82AAF61A7D3FB6C48487185D7652C3ADCB6
B3E5B2E3A3F114CD151B2B93F439EF6E900ACAF2C6BDDD95BAB691BB29CFEA53
4319E195268F9BAA018C56AE775F614724D9CC2C2BC26930FA961EE73F57EB54
135C3A2E737A9DC43C228782BC17554B290734A84E25DE82D0858691207C805D
468655AD998EBABC0D758D328F227649CC04564F39E3BB8AB5037867C683D88F
1E04B2E1B8F18CC386797D2A9A40DD7EFA8609D2E30A7292EE86B7D69F4D1EAD
F1BEAFD78A6C94B28D4E44AD42DBF9BC3EBCE5D8E8EB108CA188CE10DE7EA7B1
34839D31DD7500238B4EDC669BE3E7B3D64B9BC13B7748AABB4F187085871BCD
D2BC634BC1008DEEB93FC88100692C42F04FF20C785A6F46E7AB1852DA3A667B
138DB0BDC00CEBA7F76CD61AC53096FAA3425090497B7676146F02816AF3B50B
742ADE8264DF57FD7902194490A4C13832ECE507AE4B0E97E8579FDAB2E33635
850266322C526421E710DB3D3C578C86CDBBDC0A2BE5F6D17EDD30D86616A519
1B4D7908FA753D997501EA15183EB324BA33BED75F0A910BAD5709B63FAB599B
648BD3538B5ED209EDED315F4B5E508BA65A489B68544ACD7953AAC7FDD106A3
26019EAF34A2B13634F55E964F8B7C21D93731064373C749CD28214D84AA201E
7A8E6D59B712B2AA3D7EDD3016D059F2BD5F29F98634E432A2E11FD0DEF1577A
94AE70C839176E9F7B3ACC64DBAEF3FDCD3A80C0AB938945485FD907D1505553
F11ACE0A8A97E828255CF22D3D1FA281D9BB7EF6DECF25ABC9AD80337CE433A6
6D08D65385FEDE1B97AEEE12271EFE69C67B6E0BE11C3C74B5883DC7E5A3DDF3
1F4B81B57B53488714188134256A0915F72497B78E4D8500231C111B9BC5FDE7
4FC7BBC3BA126F0B205131195854779590C57441F5BD9CB569CE0BB3E2024B31
F85CCFD891078E88A368DAC5B52DB3BD94FD4886AC34A843E145E4C91BA7E636
8A28207547267FFD6B82DBB8CA978D6AC89C5D7D115D20015326BBB45A5A1459
094DB52D650029AF22167A5DA9F08FCC3727D2412E8E14A9D01E04A412631402
BCB7953E285FD626E103E509E4FB5691ED61BE4D288EF4DAAB5311C545967F31
1A3FCB6B79D745EDF39BD1323695BE8B6060942ACF0E3090551C7D72EFF375CC
4D0754FBD4107B9A801E9D4CCDF0BB36135D9BD2741BD5A40FB00BA9C014DA21
44FBE7E711E043F0AD7D84D027324E1922C12D8E10C3993F74414943DE242E93
C0AAF406FF774C10E1911B156E50676ADB212A8622B08B211AED2DC49144E416
BF8D71825B795DCE25480E81584320C2C68C1A85D18199109C13ED4730130376
A53DA7FAA4597DABE2C3A69EB14F55700B82C4F78C20D80F5BE8ABF8DEFCEBA1
30B694598648D3327F5D2E327673E361BA835456C3F4A31B8C46F44703B645E2
6057C99E0BBF9C71C946EB77ED556CD01675A5D45FC8BECC9BD890BC52B6B5AB
DA37F99A52F410985EDFFA78298A36C5E2345AA680CC0213F630DBB2199A8DC0
8CAA7DE0F6194E4F70FEA9D89B449A816459B14ADFA9FA485D2049BCA920BCAD
87F68AFC4596DA515B4EBE13E39443FD3BB7CCCC686A7B59F013C89DAA233995
62865AAA828D46B8B652223DFFBD5EB57BCB9524341D8C57CC3F2B83382EE1E2
B00C53DF9788B45591972391929A1D45F81539CA85BA749C7CB1687ADFFB0B83
A7838452A6F18783D645DAA7007A733D3F4A203EBD502D6C566B0425509746DB
03B6DC1452701BF67FF30DFFE27926F7BC36D3CDE34C709409A166796ABF2CFF
02A492B25295679DE9ECF7248A37F2CD354ACE5EFEAE295973F7FA2EC08BA40C
93D2303A0E1DD649EE4BCF1E8CF1325D3CDE7E16708B60219727F949FFCFA845
B02DA6330AAC8899CD0DDA25238CE4F7F89B3BD508E371B2A78B89881D1E6F9A
DB84FA55ED7CFFCCC8D6784D8BCD649B72CBBBE9A1FA44E084D871F0227C41DB
7347D16B9C4254267DFA1AE1DB518117AD20006985C0D67462B70C2E2F0EE89D
23F19824F645E87889682AAD14BB82229977168D251CEE05B70BA56CBBC8F894
308FB43806ED8B1541FB65AD27F360BFAC09A0A66B863A816E309BC38BFD11AC
59DFF36CD990521947599F74BAA30A21C0FB58A28BEB6F1FEB404E47901751F0
77A3443B9336946807F1A53C5CA6FA9E91D8A28C719F9348509C0E17D631CB3A
9D4AAD46370C76C3162444F3AA3672C66C81B3B6259B9966FBDE2B55A8B0031D
E455BEB83DF8971CCC3692F80B8A5C89479548766B85438C10412E9C1BB27D80
9D04F0F5BD708901000DE64F33B95D5FA87CFE2F881D6AFE466C28A95C122382
4482D800F7C8894D369A4745886B11B43D85601ED4EFFB48E83B9BABAFFDF4A5
0907A305EA4DBF6D7855B8849431DA4E0D14DE737964EB1D2751180E21C8C226
9AAA8389158A7675E0459FCAFC4B9F6DE3E7B8F62F15899242629F16F6D74D78
150FA93EC87BB457EA8FCE8009D30DFEB19A02D18CA44689E5DB6A457F2B196F
5BA65829D9109E395A486D4AD48D6DB20F7D9E36680ABAEAAD15FCC0DE88213B
28CA601D37EB7871EA108C7F3EAF8CFEF5EC4192EE600E7A0CE5642E35DE3D92
A76A55B20FBDC8F08B4857C2B99E52AD0DACBE52DFADF923F763A8F3E79EACD5
C3AE21E8E0E5DD1673325D551C1BDE7D5E9A26CC8D7CCE79CA02A223ACAAC714
210B2B158F31ADAC46B63CC00BEED35638A2E81600E54419F3E20418C7AA4D49
9D43A8B60D7A0DB9382806070BEE8D7D335B48B374BA8969C0F653FD1F267F5B
9A1F7EADFA49A427A5870234E3E8727B3E0D6495525ADECFD410E02CC61C6E63
2B0032172FCEBC963155762A1019FE6A9467DB7E5464F6C88EBBDF7A5946DB11
FA32359BBB5467C9E82B9A05CCD4D474EACD4E430B6795CF0D93839AE633B5AA
469E3B149F0E450313D8BEE3496EA31276759784A2B656689AFDD90C8CEF6056
EC65CE4A345F755D52E66A4E659F4CBCAC34142F4E33BA61DA1E50699E9F9DCF
252B07D742C3BC581F463B390F50E1D2DDF3FDD7B1ECBD3C8C802A1517D9C6FD
A3474591F19D573EB051F110DFA22E042B00542ABBCC4B8AEB1D08B5EDEF0E0A
E8B23DEA2C9A685A4C4D38AF1752A6547B2F7F77A7191167CE13738E35732216
736F12E3E76D416DE431823061AEE0C093FDBCE1DE0C0838B32F42ABE74D5B3C
D27B43B6E9189D6235A3B3D49A74847FB79C37741078A8800AE691524E965CF4
8A14DA153EB00643F1E7A5F15F63D58104E39C91A040502704E7851BBF2779EA
238CF00FF4BDF62DF5D6AED3AD275A246C1D5BC872FAFA86786391926894C157
FD280B3912BA3AC33D07D6AC582D640F8E394925659FF628FE15469E6953D872
1058B9201CBD764D2EE424E7B4AA3FF49F9BB95144613798CBF687F79D62105B
DE26AA443B6B73E80DF89C43A6015679C1166438E105368499B19687E505F81F
2017959B86DFDD3005F3AEACA2A4F33A6BCB6D0196C651A256C0AC50729A5390
AD5505C1D364D4FAF490734DC0750B3E204D6FF38C1F6ECCDF45529A66FA22D3
8E3EE34254475A1989BFB7A119CF944FDFBD004DD1920351A6A59B6E946FEB8F
2BC224D1E06A2E7F9E0109F63E133F299913389EB6F670BA5FDBFCFDD236D99B
130E3BF1663339F4CE8710E4F3D621652E8C2BDDC2402AD389465862718B6186
BB2CF4B290AF5C65733100C8DA1A4DF6C8B7B019CC31279CD27DDA52E780BDF1
A92E0A0456D103AD819382A9EB1E201AD6F523544449B7B4737AD52783C5737C
44F9E81FD417458090CB2A3753CA82B54735DEBC58CDD279FA9515D92BCFCE0A
3F1A65DE711CEEFD4A6B79611D6A3E572DA1E7CF8B140FD9C7BBA90E20CA49FD
3906B7D32C787DE06908B02E3A89E6301D04E91DD624D25C17C01C6EB24F8BD7
63C6F79BE885E5476FA451BBD9D72C49B6B7A529DA186A6973D7588606F7AB41
B429CBF347632CFE037499C0CA58E1A3E9479F0C48140B475573873B2FA48758
B7E84B614AE0D2A3BB67D048395E96F45F0AD0B7C512232E0CB3A54DC1FB491A
CDD3A0CE09DF3D2AA01AFC9DDFC00905968C96E0C85D0BC622011CFAADD34DCE
A7FA9227569DD1634CB7956956787431C5F75462EEDBC507DD0FF00B23B0A08A
26B00280FE57F6CB0CB72BC26EF0ECDD2C0277A2080A3CF844D40AB9C3A7A165
D6AD0D9482CF1FD0A9C8698AE746147056CCF2A0DCD7035A43FCF36674136A21
AA040297C80939840A8C9C7E6B5A7AE4F07480A763F407CA937D4D90887795B8
4C8A54C899C531EFCC2560E59F545E8653E95751A22DC1F207CAA1D795932F60
0BF388A239D55F0B521B7EA7D5A39787EED0C73F2F2EB1E2FE9BD9207EBAD744
76060B5253C4FC094C977DA803FBBD715C131435EE885780EC50DFD4D90B5681
51609F3162B9C583897864E59CE6F46F213B0EA52186A8A0EDD912F334E3524E
F72D4C5E135C9BD8373D8D01E41E131C730D6B88218EF65CBBEE2562852B0EAD
2A6FF86A47F0CAAFDC0F694290AC030220E1CDB80ADBAB2BFB7CE59ED691A767
8880C0AECFEFE1DBB7B448E92412CDAF449DD0A9C04367A1FA5E5298963C704E
58E7B65C8DEED54AB621BC3AD46EA86FA3C6B5AB30EACEE40AFE2068FC618945
860121C4BF9C536F34455F502234D7275F749AC69C7826A5EF683AD4C7D8726E
089493E3B7C7A3BE9AB31FFD0D9227EABE615295589F2153C07311290983DE2D
68D10F80121551249FFD16D229AF2ACCE51092BF2DBAF4E6124BDED04BFE6696
BB795926204981DC0A45B3ACC18F6865BBEE2C50DB41D4301E3F3A59BC1388AC
F5FAEBC724250CE2D75BFFA4A780EE57A865FEC1A4D1579782B6E455DCC39BA8
6A49474E415DDB8B9B0D8D847664C29F8BB65B115E46DCD6A2B8EB6850D430BD
48CC8A11890D9F5C9C50864C1051E7227284C99F5B28FF8772D7252FAFA67396
87225704EF121D921DD21A2D91C2C88736994B723070FEDE72BC5535EFA673A3
FFB3D478EF32B286D1738E60C074C6C0D95AB8B0A4B09E56B24538CEB6AA2DDD
C988D12BD4E0AC57AE4C8E2478A28257BE4461BF0D5737FEF579DD93DB64820B
BAF867A29A8186E7CF623A14EF467C870B12045CB5B1268A665A68223DF9E80F
AA8933AF4199D0A91F2C7EBA5400A1B90902EFE6792F207136E1E16B417B28EC
6E06B3A2480DA075AA929C4C36BF112678869F99DA91030793B4EC86011CB010
6EC22428ADA49CAFD61DEE23EFDBF7E27A57CE61292AAD6582B3A661F4D48AFC
ACCD99526458B5056F8B4CCC6AB879662DA02D2FC57909D94D5D79D0EB4ED8A2
80D190F4C953978D66697171A070921741A4F2D840D0F744A1470A7A67AA5644
EAF87191EF2A16CF64A53CCB1757BE376972FA537DF301C450D9B929533FB006
5C5DD17075585EA332D2963055952E07AC7583F21FB6E4C8D2975DF55D9CC0AB
C55E08BDB0E7D91564F0AC54D70F8EFC63B94F73ACBB4CD27973C24F990B83F0
1D315100BD6B4ADFE04D153A1E1544328668138F430E8470A2D7137E9A69AAB1
3B8C5C0B2D097FB86A81B76AE4308FF3FD9BC0795BE78347CB07C7738D315347
A11607EC8579E4533C81D37E3D54588330C297834EE3AF5505DB8C31AC63CE05
9A110CC3AD0D6F2A44A2252140A842EFA89546F2AF52C20A9A19C16BD126202B
3AD48021700C5526DFCFEFD087BAFFC6C93AF8FE338E70387B4F1BA2119D400E
8097B778D17B0AA1C672E2020C946F0F8E03A35E7BDAD7729DBEC548D2C42A9F
225184AAD4E80B65440A77F8AABB2AA1DB6AAB259CAC63412153E8B87D7FE417
63E871E08B1B5D45156D9582CA59F8A49846E440FBEBC1EC152108D41E533813
A8D6CE3DF04268CC777DB135786A90C26944439B59CDD0C32A0411F64D448641
380A1F27266E3C05037F1D2545E9FACD008B4ADB50EB9F0541469367406B8CE6
51196D0884211D48DFB521FD15331489214494EEF9B605BC284EE34062E3B392
D2CD315329DE1B8644456D6323286CEB879B3BDB928141D3E5429145B4114D7A
AC6AC5870D0FDB7D9B36163ACF2F277299DA474EA252AF193E5E9B30FD11F04D
70E268F1D4B5C972BCEBD4F8D399E8581EEAFABF5F90EF2EB65FBDDD53AE5F4D
A7743A09AFECA6DC807448B48C85E4612104985B5589B209749CD85963469855
157489CA429749CEC0F00E871C90A6175956C54E9E368CA67F79A9DD91EBD513
28A8BB64EF2EA43D7C1FA208EF44EB316981B1CC9186C525EA450CA2E00F1358
4B0AA7DD92F2646BF7F75D80F558D0EDD67F350C9C4105F867E2AA3F10C3D706
3394C6E5E8774CD3E1294314532AB796C5936F1E1041C2CB52DB45A2E8BB824F
2E0310C59E864A74877AB522D308E624B24D44ED1E3D3F761928CD2D8CA7A1B1
33A69E22AC19C9A5E1CDCD8281564806615E4AAB5EDB62C3AC1CBDC584A6665F
8C59C1A2F11A4F507FADCC056E26BD1AA76B2B182FE2035F15CEACC47B532E2A
0CD7BD29B0A2377508BAD0A7CFEAA913B935BA91F1682C8957F1B1DDA912E47F
C61D09F44A31F7D88B072B10C44A60DDCA6E310AC5152259D7DFADBBFB1295C7
175929A360FC43F6D4C7CCD9314923F532E28EDC1F4EC3D0E698D821EAFBD86C
A8D87CB293347A95C4C462D94D7EE9B486247D809C7BD91FAF70D7420924EE41
D979C33B65E0BD232B01CA88F8E98A4B3C055C01823C4384724518CA93895C5D
5B994DFDDE5C38B305841459D20BCC18C1C11B94104B2E9107BF28D8FA0786B2
8FAFD19C449E201F29133A915CE0E0F9E09AAE0792954A1F2C0AAA8288DEEFFF
0D9E871C5461E2339EC4685617621545E85237B81BCEDC530704D87E3241AB1B
0AE52F898A234931F910D5DFE5C8BDEB8551410ABFC1BAD9D79E03CAE74D6724
924C46AFCAD5B9383AB433359862DCB30BA53A413B5E99450F8C627E97A5D010
C7D7B9EB1919CCEFA5DCCFA45FB5E865217AB44027ACB54EC69FDE35770CCAA6
00831DA43F351396B65C30054793B82E7449725260F4476B1FB41CC75A5662DA
978663984B2C0395E5756C0B3675F3CAEAF46A14AB4C73C82A8D266AE490756A
EBDD463A19AB81A725FF7A5F91AEB765F263B1FD2AD2A0410DB57B4D5DE0EA6F
0EB0525FE1A4F802F0B55F44A7564C18D449D4F92203654730006F3A39B43BFE
E5D80FCB0D3A83798973A36FE626BEA809DC1D7D0AFB52BD7BD06B3C464951AB
5B882DF746F9505BB13D08E34AE233023A69E021CAF3C5282908CA315F95A1A8
2145D774FB3508D01F3C240A2F908641625F5C1C0C6A364E3100A357D1063256
14F10D73DFB2FCC6CA510D1697AC1FF0A19C372A9732793CD677D7394877C88A
417A449A88485A0EF2349E6C016138DA9D24DC1978AFD87934AF5BFEAC00EDE5
DBD930DB382BF19D25C9A835EAE764DBD502ECCA2D785E188E86F58E4FDD4CE2
E2EB14C9C997BE5651DE0F5DDFEC48BAC1946AE90F8F22F5353BBA2FB1EB1795
111596A11A225FC44BB3E7F2D15EED62CC470C7D04CA7F4386D77FA0F94728E4
4D6271121286EF517780172D12AE96F425D10C1AEA9C0ECC5E1787985544273E
CCB27B5D11165C7AAFA5C4A05A721D82217626167E369AC65724E0E7D62FD6DA
9BA0FFB366D19D8C69701D7E8ECBEA885693FB9F605D6577A03DE99BB78A0AA1
139DF5414824E7D5B22C502CB3BA262D22D1BE79A172564F2C36D240C5DF0185
3DD09EB442AEA8A8F2F13427439971B8428AFE5EBE17B6D200AE32705CFBF7A1
2EC415F3FD1B6DCFE6A02FD3E4465C96FBE9F655600B8893EE2C65BB593B873C
D6DA8E969FB1F684291242494E52311C02C8A34C0A5B3ABEA175652189C87A73
4F272ADF580BFA27B0E3F70942B11BA78335CFAFB9E1AB382D2E56E5EFFB1B3D
B7876A0DEC344D217432E9C76E6B590845648531D696EE446463985A4F973A9A
4A0FC3386F7AB0E8775B76CC3B6967B499D8E75DA9854FC3F7AE20B22E72A415
7D31654742A2D623D260F7A8EF5AA2548D5A70F7A701141598F99290D1AEA02C
1033D9793F00C5BD05B748D152049366A1E54D243E279DAD980D7E75C9EFEA2E
5D3A0D46E63A296054A0D16CDDB671CC59BE6D8B935D1A346C5B78CC02CE71BE
A209917709BAF693D668F7AC02F3DEB82BF87F908F931B1BDF59978009022FD5
28D9B213F4A4E1F368EF78D00E351A980FD7926DB858B91872F91CEBFCF682F2
47462A68A28CAFC810C1F1A3A51DAE21CA6F5EB70A7C7191B200D83BB7E25B8B
F03C0D61A47E18CFABC8BD645ABD0F0CEB9B96FE8BF57624B10D14CBF511921E
88C9C67243B29E58C9B86656C5F1C8B98E2250014138F0E6438464845B950140
ADD971D94571113689C1751AA64B63C9D0A6A9BFAA49F87C4FC0A7241808AB8A
493DA6F0895F6D1CD6C2A9FBA36545B9F8FA73BE010D7C4F90125E044D8050BF
7C551651FF922639E5077C139E3A8E1835DD53F99E96005D40B3D072F7F84ACB
436A0113414AAC98660F929FB67086BBF02A521D080237AAB4A2A514FE4F5C20
67E4206F8D4F3AF4B2C7D95E63DA3C2B28431D59B05C81BE2AD99D3ED8666848
7ED31BD3A28498C9F7696F7B08049AA54889D43B95104214B86E9F3A594F14BC
B334503F9F4AD87247E41367FC2CEC2A5A033902271A374CFFD453817EFA6136
9D50682A921BA059720B9C40FFAF612CB8A2CACE0B6688CDBD0567637ED6FE45
E193B5F15C9CAF3AF3BF89D94C253CDCE592272C1CC78DB367464FCC848329BC
BE84245A4B5E96BA220C5AA0AF601CCCF53F7D922007B1DE3B1371305AB9DE7A
A3C0858B0891E10C66EF859E5866B19808EBF05438BA8AA5E856783857077CCD
79A9DE2B73A934084B0429E49ADEF5FEE75FE714FFF3D54D09C9747ACA01CEFD
260C29B60F6A35AA1894A23651DE099389D561B469BE5C033C3082FE98BEC0B5
2B6A1FB25A49DD8BA2F82A8A628C8EFDE2062EDB9B4584D8AE5F131372118C62
4DA5307A95B2DD2CE9FA739A2E6443BDDD8AB8BF4806C61442FEC8A4C1AA4D03
113B2FD8EB1352F664B2BFE42F0A95B13C225C64C813191764C9BA8B47371D20
2C7DBEE60613448576CFA594F3223C22C5045B028700C8710E6F425483CEAD0B
AE965DAE012540D9DF5BDE9F4F5D02D46BE054F4A832A28378D5955C2CE2C8F1
66B7D18498AEAB87CD63B20D9F9AA20F92F1501F9FD6F89FF2652453807C9231
702BFD50EC8C417FAC1D67BE98E348C2215C120A7A849BB77B93F37348E5E9F1
21810229014271364B923516D51A2A9D64B50B488945EE7D39347EAA6B23D447
6BFF98DE2420B3E3A28D735CDC6DAA8E1A598B5A1519F61FA1294A88CACA2481
C23A34DBE22090B97CAAF514F57882D72497EBF96AFA6691D4E5B6A4F40A7C7E
88538E3EFB41EA6562C59C5C28F859D516B562BE6C8DE635BBDE281A3651C7D7
C71639084E0D77352B7963829012EBAABD3A72E0226869496C7C10E6B9410FE7
B69EDCFFCD2F6F38247587B5B9B36B62A41A88A2BCD96FC01F57991A565F1D43
4F1B0B6E1EE0AD2510D6B21D5E44574BCBC986EC72A3F81C7EF13974554B395E
5028779856780580D26A7987D1B6A10A4D6765835DEC4EA0645F47A76A2616C4
72A8514CA08866F5976301EBEF2ACB3D7E941D26CD9E84D94956A1404882E6A2
9731FFADE7B18701D09AD0E8933C0625142C335D2ABB0A692F1CE5062648EDBF
AC6DCE622EBFF358E63D9F6000F11FC2357FA3AE5E971F3DC2668C37105B253D
DAEBC5CE6923ADB723973DF6BA1E6EAE926F436C0800A832B20378D221A48DFA
662720F35B3FE53F0288488FD9DF63FC20CEB29899399BAEBFC44F1D2767BD0D
84ACBEDFDCF3BC90CBA8188D11648505738399691E13A39724DB49888E5D912D
C57830230FD0EB827E12F79C9CDFDACCA4E46381A1B3B7EBA8829978622CDD23
5325B07090D8770796F7E1B4665217FB80B78186D7F391CD91B6222E88C0BCFF
6620881544C51B54BDACAD222C0120DB71D79A7BB66BFE8F5AF7C1163333F6CF
B9EAAE7981DC78C5FC2923DD3B2F199E1B97F5569529861FAEFDC91E823E0A0E
A92E7F1118B96035D8F3EDCF0B1F51A01691E505DA03AB3799AC275DEDDB6DF3
B254084F007745889B9F3983211CF964849DB72E280B4BAA648B722688FF72D4
7CA87D03ADBB9E19C9CE3365B9BA55EA06912BD6A44BE069F990585122CE0FA7
A872D17AFBBC17A93D71F3A3D321500914B57381823BE1E3C2855DC776AE87C7
83986BE301803D8541D7A82C8A7EF6E8F024A221794B75C8B06B4A4BD034E3FF
DEA62AC552A2130F5E79D444A503871F7E128E6F1B410B64E9527227DE9FF961
47F750256CE1DF6441DBCF24C50BE566A60552DBD6A302E6BDFFA20438F01846
47BB9368197BF4D3EDCF0267A48EF271D6AD67DEA1649F544432DACB7BB8E568
2658AC6F300ABDB95B176FE85487669FE48110DC766F03DBCC2EF01DEF4ED73A
8A2F03FDEA35ECC523548E1BED287E8F47E7FE27ACC12DD93E91E111AFEC6810
EB222118B1E2ABED9BB47F7475D676A85546D4EEBFFFE810F076D00710C302B4
E5E8AD40D6C3D7CA1457887F3881C8F1E9A6F048078B9A79E0B93DC4A6BF4CEB
B5FD0F236A17293D2A720C72FC5983C22F4BB9C5EEF8FDBC70A40B5551A06499
BB39794CB9F4EDD0980F453CE6FF552D7BF0BBBB51D104136DF446974C653FCE
ED9A168361D8DE5C06376E070C90FC7F85413A88DBC2A901C3369B93301EEE2C
3475A9F5B96239829EA5717ECCCA10F4DD4657C898C9FE32ADA265685700673F
F523303F279B2D44EEDC14642AB382A9CB0BC3FBF1A93C909EFC192B0A503A8D
8AD8DDD7FDBF80711A37764F9A8AA898B5CC37910B427A110BF440CB913E39C8
59B8C5341548A348C48D19182D79249080AD244A961CCBDD2268FAFA2CB13976
2BA4D2046C23DCF069221A28B3968A0818ECA5436145BF849176EAAF3357F06F
8B6A3446A3ECC18D37F725A61174D35E1220F9C763BB08532298F2F2E203F866
58192FA198348A5849507B6949BCDB99A1AEADE57429E440123D5273FD55A6DA
F28122ECCBCC836996DE26FB54D3FDE40B8DD6233DA59A402050DDC221E35489
FF45E41F46751953C4725CDC99096AC0CE90DCEC1AD94FCD6D373246804BA5F2
171C5C56B6562A17E5DC8160B61716B044E5EB7629141E928065F100485D9ACE
0FEE7DE8CDEF76B79746DF911F556899F819A7FF4CB2939F4758E242256C0546
A502E082179E316C22CB3A3CCE2C4D9BCC3027FB5FDF901190949B4B6A3297C8
D92FFBFA9E8E87EAEF22D1E6879E5B909CAB9ACB87B3AB29A8165D453AEE422E
FF10547CC2E44F566E8880D37D923AAF4578C14C3E4E4F7BCF5173487707F97A
56812EAA7D7BA88D58E2EDD30493564B38F53F50A4B25DC081BF863FCB2BC115
437316194F2583C296668F5541C149D64A2FBDC4EDDACCC1DDB52E196DDE7816
C174146B72724944F1C7CC6E7EE5D312C42CFEC3F503D98CFC04EA6377C42793
B52B6C655084B441198134DFA827D69D79831ABDE24AABF7BF07C8C599F051F8
181FA2DA8EB2F12F563E11FF89377808FAA8E354985E30D5838053A6541AEE90
25E019741485839A1258099CD42CD59748E74BF590B3CE27E0991E7C5F116F35
9685FB82B0187D26BC99851EE71C153CDD19C6B92592675B65EB93B2D1143C7F
5A39034017E33F4489BF3989494BC06884D8FFB14F6AEE63DE67141DFC177BD6
FD8622A21E4448229C76564C57F3DF4B5A1BB828BCC2C53D239C5FBA46299167
38A7CD82D1C469B7831A8133FA7C5CE1D36E94DAB74D3DCF35CE7CACFFEE8253
4F4A6E7EFCB1F3262D98D7B9D72B0CD6A1703F5A8FBD1D9A4A207B4E0B90F571
ABF9B761FAEBAEDDD8B59BE412452247B0D8CDAD32D6982637028A7DB25A3F1B
41C515735F1718E0BB5606C2C61197C0E5F91565347580CFEA3BB3D8D3959AF1
F3B2A61E6A487E4F4F0535CC34D551CD0714C6F6864B55656B271118AFED401F
1C3DDDC4F225C314FF3112995054CD2AF02AB97C55E242BBD72A9ADA5D4FF956
BBC3E50517CED7E60EDC7BE45ED676F562DFF90905366C565F4EAD71F6DCD930
2A5AD78F2EB53C7B17AB62813773256715924EEF346B135D7B87AAE44C6FD20A
A7356B8A44CEBABCBCCB11C446FF213240CA6385FD277BD355E62A6413BD13ED
9DC4FAAFD2F8F4B558C1101A4393ED8CC71AEAF56C24B0E63616CF2DE0456B96
573216CD336AECEC76C43DFE048578D3C5BA050BE03BCACE325F78FC232393DC
E5F52676F167CD6701C04869DA9D77CAEB4DC19B208297DA88848D48A7E98A78
F95DEC58D847DC65E9CB0E316CD3130BEEB425D3760296EE13DF23B383E39712
D0264CB3CB960EAE6489CD6C8FB1F1FE5D283A981437DA8E17399F86CE048F4C
870A446EB3E06BFDEF95D17AECAA204ECC569F78BD73D380C572E5087A555639
7E485D176692361A09B1D7853518F8522B9D21C93BEA7C009228043157711264
5FA4CD45A4C459D5F7693C618A5993DA8F9F0E434C04CC0B14B0B5818A66807B
57C9DF5BC56081F75C01250653512530A9EAA3BB232362BBD54993A73001BB38
598B98C22D00E3A9DABC4A0462936E42FA97182259D06005CB78305087DF3796
12E501BD37874E1B97916A78683B9A3AD981AB1D33B3D8C3BF7E8C5A4CFA4455
3B25512B68E1F53B4321870D97750385866B1F923D80B19CCF78577C8065C008
159E38B52F54B227A0C18DA8A43ADB7593E98E5E0C7519713F452774D1DF235D
E89D464EF44F2C9297ECBF2840EC675E1354B3A8B9591B661400E4F79E07022A
CDC7705AF6EB8DA3E68A7D3D06321D6DB80CD676DACAB1311AAA28A04F8FA439
25639BEF4B041AD7722616B477CCFE4F4E19F17749048BE9FE976507B85FA64C
9620FBB49FD4F24B11E7DF3C07DEA3C6E6CFB4F26A4B2603990736834B84ED6B
5720A8E52BF72DE7D89B9478948503286711952C3D3F4E83A712EE63AA3DADFD
632A9621D26B4CFF003070037CBDE5793A1BC975B49B183F007E81DA9A798F7F
062708C79884896B537462AB0B27E20C9D3CF8D27B81A55DE3F509791369E2E5
4C06B408FEE2918DFD868DC4480DBD82F856D2C05DE5DBADDAE7385F40448804
C7541E751784D52973F89341C7723D718EE15D3117574C43A8A8D075F4FF9DF5
B1BC2E13055CAED61FF851067307FAB0ADB527A5AC8388A0264C6A7AF6071B2B
9AD4A7D4E71CF7EC55A51AB1B4803CC515471D4FB80DF03D2BAF5E8AA097D6A8
6EF230A314B3E55EDA5E61D1A1451EDD31135B78B03216A0164552AE036D3093
5949DB8929F2E389124EF7F7E67189C32D8598046EF67D9CC27499F821BC245B
3E266DEB684DA90BC15F609D33C06C2B58660A37D3B4875E53C5DB52CD45B3CB
9169C8BBE6C85A53FE4B2915773020FD69619DECB2BDC13704CE8C99F298A3C3
6A6B2C575EF11C46CA0A2BE8B8942DE3C3DF2608570442EA613A1265A87A78B3
E49A07D8370AEE7D10FFF969CEB7CE6C430AF55EC03DE88EF55F4AF9D9C04DCB
CD4BE9744096317E770BD0197D861C609E029CEE3623E4667182DEA45A8D2C02
9B1832544A54A56E887E7148911BF9C48FBDA96A501D9E5BC1D858856BA05522
33328E21E9722132F62CBE183899B16447046EEF2AE810351B7FCD69EE2BF546
967022DD0D74789185132C796CC2F653085F9A04968C08091167EEBFB6D3A4A4
2F4B3A79F30A781F87138EDE3BE46FD3453216CDF28C7B9D7B64CC685D7ECB80
C7D8468D725063FD33F2B2116F1904D42E3C308F7BDA2A7A51F42AD1499309C5
27D8C7EE94695A530DCE6226E762E95D290C015AB021EA8D16388E151F477844
8626AA60806A4760DA16D3D24BCAA6EA2C91067837732BCEB2D18AF1D6A34391
B98693FF289DFAB58939469E7839E034505299D81914FB915E7B9F85AAFB4F72
18938CF8C2C20170F4513878EF1826791504CD5BFCCC4F5B43003E6E06B94CC5
3CAF301C6611BC94C5A91C984B875B32B16170C0090690BD0C5DE84FD6216475
C48CCF818DB3F5180738501B8D74812DF87D9D053A72A11530B36EB96FB5FCCF
B1DAD0A126012BBACAB46E5B0A7193901C65197EF81E8C731E8EC94269320A79
C6A1C23A69DAFFC6F6D1CA4BAE5D0CC771E6F9C8E6ED80B649C9E91AAAAAFCD8
F426858724B4222438E99C05F29BB77E1EC75ADF8160C6FE7AACB3DE17920644
00274B8294D425E1FC0AFF099D01B5FF50CE7F646FB43F4C51853099A987EA3A
5D35F09AC718F307E80B29885BD8B971C8670EB6567CB7C800300E4C81D9D739
DF88C655165C148CA55C7A1AE581F22F4D29ECF78540427039371C045B266FF7
17BC7CF4F0D9BFE8B01C6B3DBE65473EE16EC1039ED26277366EB5EFDDDF04A4
D7B4A327D228D4B1121B69777870621A2D46B6AF48AAE86AF2661052C1221378
38B8BA1AAE5D1EEBA36E8B8DC122B1432A6BA9A8A674CA2D5F39AE376C26BF3F
435E6A6E9147BC1B68EA135225157DB8073474BDEA10C3DA37A73F99724821E1
E756D3DE2C1B71C83E5FE8541E6DE3FD3419F9F90F982B5A01ED2CE60859C59D
D39D8D40759EE9B3BED754A63D9D962E225F363F4D5B05FA1A04F498C68D3A49
078A7E2CB48A432386002954AD5D7484716FFDE7B882CADC56552345D690D2C6
8944F1C57869537D67C3B3C4B85388F9F8691FB71E2E8FE33A7357107A40D29E
955C415DC020E894937BAD4F60929CBB867DBAAEA12E29ABB7811046E217F053
657765240B839BB7BC8AB6C10A82EBA94F09141C38B0DDE1E7F3F7BA2215C08E
C8412D5EF8FF8A44731A1C05E8600E632406C8CFC4921B61EED6312C2E1D2AC8
AA4208BE5526FCACD1BCC907868E8C5D9331A63AEE0808D7BAF13C2D56384931
56301A8EB7277801B6E41841E2DE908A2D9F99773D7A789EB1E6F3A07BF70DC3
DED5EAB4D83A55AA90FE66A08D14266F18B6499DAF41C7D860770E6773C0BC11
8948AB4E65BA92CA098CCDE58BF2E4DFD6A2CA4BC9EF48D0730FF86CAD1B5912
0BD060D6DE59B4069A444EA11E072906ADE98CA13F07F5539D57FF0DED6661CA
21F0B23F7C0E45D0EBB8D335F5E84C4C83A1E016DF6698C27D64E77CF58D522F
7C8E2BD7316BAA58EA64499CEC98B4259A02B03655E8DC45CF1C1C86B8FD8EF3
FC186A8EA4C9BE51D592FCDED6F00B23282E63CE45DF7361876A760A4D5A7D58
A4695755645958EBF63E296F9109677915EDEBA3654EAC3D7DB3059E9C2DC8A7
CFC020FDF6FD6D60F4F5A5B281ECA1FF9353C5AF9BB470D331B026911E60AB6D
1140D4C0B94FD8A839641B0CB2CFBEF104187498B83A1EB5FB5E353C1776F19B
C2ECC2D462741B0BA00C6561DF4B4C685274723D5EB445C3B76095A2FD5BFC3E
7A8A2085E55157F8E847FBE4EA1867EFC6BDC20BC853E357D674717EBF2215B9
E35E4E061ED9980FD99D0EC0BCDB65EACFBAE64EE6DB6F1FBF31ABF448C9261B
75BF1EB61260DEF869B24CBD3F39CA0CD61D64CD739628B5803D03FC11E37730
75910A16E50ECC57BD86A7A59BC9F7286AA7AEAB89CAAABF6974C5F951E7B785
8018479781E360F7B3FC839A074D8173445BAD6908C13DF50EA5C9FAD86004B4
48203D3BAF1F48FD225FE90CA37AAB07DDEECA4ACA5980821F51A5941387A78C
1E733A92B5E122FE982A8FB650D640559CCF0A05C5C8B368C2C0464FE1BFF521
ACE707478473CBCF54B828EDBFBAC01D1800CE14CAA0571EEBD646B3B7B29996
A6481FC667E32D4A39AA9638CE6A86FB1EEBFD41AC9DC2B886105ABEA93F45FE
4F434966F4FCB329ADB1A0864F83D3E585AA4D363504BDBFA2B4520DD6104F78
3317388D31B2DAD268CF94A7EEF8762859353E43AF38D0D4E667A80166DB3697
A70D335D41F59317F44A60ED73DAB72A2F1AC1DBD6D908473EC5AF48825E4C87
5F9484343056C8FE000F1E4B9E509DF69555C9B7126CB566741F359B651D485C
478D935FD90668FF86A9BE37F550F087451064170707511466EC0F779EC1A895
514DE0885D3BA5976E4D90C707E2FDAF915B3A8E7D70F350CEB734BDD81A52B5
8237888505EA099C27DC7D40CD72349AE7AF9E8B499D9E1C3D9EA91B2AC1281A
025760BDC1B3B24B1016315B35760D3B2EF8C1E77099FE39DD4DA7E283829329
E11E4EB1620699F436397D450CCE5F7DDE40DDE9C577433F1C3461DA816138BB
C8B8377BE0411AF88BCE768CC72F14589D293BF29C73EB3A2864884D2F250DFC
5608982CE8CFA119B586A83E8FEA614F30383EFD0B5D8575997D6B8A6BF54859
0FECEE8E9A05A0AF32F03D13289DB062EFE9E62D5A3DEC03D1F5A4065F8E1A02
F0EE31E786B24EFF373C9DAC05DD3217C87DF147C6448D322774EC3C021801FC
7A6AEF112861D3A998309282F97AF2292BEEF24F886427E846C0BD15A8009C96
9FA3E2260E0BF7CA0B74449ECD34DB1F1FEFB74FF4F429D33E4116A07568EADD
071850FBB88222EBF0B8342C7D41D04D369B07519A1A51A10B1D6C45B3E65765
919156A47A1D4F89C3686AA1450F23A5EBF94C4754EBC6C21484124644010F3A
D4B83046E8FB8D95467A2293809A7FD542A150832F513E2360F5FB6761DEA090
CC04B38949AB56B74E9D6E459220D22D3C6863DF4ACB9C7A77891470D5B7A090
6CD92658FEFE5A0ADC08552CA632A863A2DC6DDA4604790E97B39ED488B7C39C
5108F0CFB1A3EB431E69667D2D3D4FE0F8A3E9335668D171BF6E3A53B8A23F51
168C45CC85A1A9DAAED24E221AF70B10CB5659F12578E30C2567F91021E7A2A4
339CE249D547FF5C6B8AB3C0920302DECDF87278C13FCFF6B52627432A967E4F
D41CDD60D6E413059A58FA556EF3308596A9F4213D30B583E220F80BA5571A6E
412839A1E28BE36954DA9032B1333396FD545000E364E7E6A79BDCFFD6F188F0
11DB32D5B5240EADD9B21BC2CFB46A86B891A29B4FE833C10CD0854D9C53FDC9
3292517B2135792BEE1779BE5DCE90183592A2C6E2FFB3AFF49BBE499EACD33D
7202F1D8B438DEBAD3C2D45341B2285356FEFAB2F8ADEA375AA5175ABAE6754E
91CB540D475231DC720D9ABBD728D3FDB15075E1A6F45197571530C9B4898168
513C830ACB43B26371195013F74FC07E862198AB5652E5CE6E2B702A7FF9EE61
B06E3C07867D022E4E63EC5F6A8DA6EF533A565FF4FEBA04C154DB0CB353CB2C
E7191EB08A99AF0DC02FF5A8FDB649FC6EB1876A12033F4938660039D6EAD9A6
2D3301D367FCCE0F253FB6800D5D9B8EC2F7C518BD4B1D21E06CABCA5C052EAD
884C25248CFF088E8F33AF7FA6DC00883C663E18167D41BE77BD52C3C3590301
C681D932725BA079B1FD89BA0DF0E10EE9C79C50CC844E607854D32C6D52E83F
24A890B95CB3E47D8C2C8B7EB292D0E4ECEB60C79F9DF0F8E92B8CA670BA600C
DFD4EDBF4044F0E2C7DDFB4DF8868F30AC34B132870E85DA111E1902958FD1A0
91E8AE019014A3D1B274FC2EEC84865A90B61EC3FF6A105004628BF1518FFB25
8781714AEF9680B0E0C7186D318D849C05B43B0281F71A653967E8FC62C76790
020BD6CB0A942BECB4D79F92B25C8A0A6A2D53778DDA78A6A5D734F9325854A5
F1ACBEE119D7B40D7375A1D073B5A7979D64C24541CBCC53B4B0D6A4F10B0419
EC43D1577E82FF229A45F7FAEF5E8C704EABA8A055F8A2E33E28344A7A9EC8F2
CD1FCDE7AC5A7BE7A8356C867794DC13E51E59F5318F40101CDA8DEC200EDB3A
2C7866C977678C571CCC9FFFBCC31269217AB44027ACB54EC69FDE35770CCAA6
00831DA1AC172A46B866F4C7596B3D3867CBE5B6409D4903CF33BEB569AF5703
F015A210D9182678AF5F984DEA53961C2BE910C461E78D92B60DC4BE16360378
24FF1425CD8E6416B08D62077A1D8E3A177CCF8CED7DD03BC1A4E781E590E250
C3029B8B3B49E3411CF4D10F65DAE3EDB83FAD7159BB74CE9AA7E2465DF8BB19
1187D14A7C115A859E4459D4296BC3A584610663AF1C2FF053C1379F4784B8C5
9B5280873E4E6598AA9C9E43322A60E0B185CB7E82A7D65C10357563DFE6085F
AD3790BCC95E85894D28E6054E4D7AA5676C08828D7C453FBA4EAF905FF51EA6
7B25FF2F212C5D2F04102EE8A4EC26139F28418B4ED4E2E3DB8D5A110519BB59
1667729875A73C3F926E1372B5AB78E89AEB73EA824A5E2D5BCFB4F15A942D04
E4C1E4BAA622D31F783FE35D5AEDA6D646ED0B658B1D2ECFE609E1D1F47FB106
5F435BE8A31BC0406E9FD812588136E2BE54E5E1374E17E3916D1BBF57418441
0D02826554A57649283BF7A266E1F1A097C2AA5F487DF644CC73CF76540F0E14
4E32263F5185BC7D15BD044204769DF0CCCFA90E4BFB982531595503CFEBD27B
B0097E64A256E3432A8792E9A8B38DD365252EA6B8B93D885973935C91C9C618
02AEA68A918EF0FEB00E6FE18BFEF6E07D818DDE7902A9B89A0520B4C87D060B
7255EAC8D1463E720EF1A2CA3A3276289CA24C2A6B1B3DA42E5BB743405901B8
63101131838C15C7079E10FEFE5493FBEA5FB1D26743416B6D20BA817AB49ECD
97FE64672D86519A9A42FB036CED1288BBB60D26FFFE09DB17A9961B0BE31212
90479BD34BDE810786C5EF73C8B903977D6FC6B3B55EF0C3D5F3431650D7C6C2
33E46EBE33DF49A031282BFAE7627DF999B09A9740013734F63ACF54AB05DE16
6306664C1402DA3CDB78AED53F98161464DC5DFD2B460B99099899BD2C868EFE
4D48DD2A44E5186DDF87AF8C2F5477BC127E0ADB2442E31F4D770C18220C5D77
607237A69ADEE4902A5FCD732E2811C33A3468D93ED22B08D256D56B72B6A972
67F4C63D4093BEA8A34B315CEE932B40AF0B341E68CCFADBC48C07DF7899C4AF
C426774F1A0BA877631A53BFB72993B36E3217336A50E7120DD85CD393604CA9
6E61ED1E128EEB51D0C09F89B3F755905EC9C3038FFB982E347B5A6E2F52106B
887185FBECFB8364B8BBF7B04888664F82675A3DD3ED0601E5F8D083AF733FEE
469C0589D714E5BC01BEA21F193023D02D897313755A8A26A28904EB2D5986B5
BD875EE980E0393405F62B20E1F43CB223DCAA3F7B016E18B0C7B457A7055B3C
CE2BA679D64952A6D39CFFDBA38C11C7238C738370C48810E5A0B90629040B2B
B97622C5C5D8B3E64238578C1DE3064539B0B98F7001609622A6FEC4DF544A81
A302EC2FAEDF6C1724878BFF7A7084B0859FD5C0D0E719A41C342F63EC110EF4
B8FFD3E82A1F2D18F3F163F77EF39DF7CC09DEEFDA4C340958D49A0C8B4E4459
B7C691BF6A6749C1A94A526B9938774C9F054CE6F54FB243BC6C63C0B35D0FCB
8A5F3E321815C3C7AC714C3DC89D789250CABB73710D3D92EB644A1E863BCEB1
55914D39D71C53869DB8C5D400FAC3275DE7A1CB64B5D1B5FA98029D78BDAEDA
4ADCAD6C3F8A80A011F4D7127CA67B6A9665C8653B26680D97565FE4D1E216A9
C768A454647DB379C15A6EAAF5A11F36EF005402F6DAA9ABE6FAD20E8C5FDD1A
B9B72BD872061B3852B74B006793BC90615DC552B7979814AF3F36DF5FD7E365
9796103F5B013D89DC6BB570D6BAD4BEA1951EEE0ECF5E0BE575C26270EB3CAD
80E6D76BD8681CD2FE5AFDF853E1020D7DCA0782E78353B6D691A3461AA5D145
5A660188741658BA6AB0F43F3A727763D9EF68329D5CAE9EFC75DC15A9494E87
6104FA0F07CE4E649823BAF2248AD54418736F261C0AF534EAD29FD73B030D70
89D9168D57AE71F399E857F81CADD161673D98BB7E070279D4251D560A70946E
757E4DFDCE1FC10245E3A41620868D9032C34BE24CD59ADCD6CCF4D19716EA88
982C1A342CC26D444F54CAFFB3C18BA66F9D093C38BED3D3090901719F072158
DF40AA7C78D128AF38AD30D3DC5C080E7881848222220A63605F00205C205B35
DEED8836023DEDB0CC9AE428714DDD6619AF0785E90C2F7695515FAE8AB259EB
719E1F850331D50EF2E7C281D1815B2AEAC2AC7ADB2BA6B75F4FF3FFA381BA64
7BE52F12F23AF2D7F615C101835560E0047D2A5A0EE1C4826BD21B75F754ACAD
055826616E3AF98906B84974204A324D1A7C7524D34E87E4F457FC7B8E0A12CE
97781A06B58C3EF9FF3E3F44DF1BA5F724BC963D3825F1111C442A7CF163004D
E7F40568FC538A0EA2E76E1F62790DA67887AAFAA95AC49C5FB383963A3220B4
F4CF20328415B220646B1AB0952408D5051FAB8C578E0ED532A99EB95412E908
5CE860DA3747A9F27DFF0240EF3640C9A04D6D535A5E9CB4B669F646C9AC457A
5099067577785520ABFAD0E2678E619CBF092F0394E8B5A163C840E8846EB207
0279ECFDE314BC8E0B6FA41AE1F6DF9F3AE99A6380CCDF76BA83E7EC6781315D
C94689162EB4A741E46AD71C3E2F92EF983C0CFF9C982CA1270E9AF6BDD563F4
39A88E8BDBA73A9BCF436EC7962F156ECC4E82D4CF8E6F87B2A2DAFC69673E1F
B8123850F4D99B48E8F29169E04E1631C16076ACF4577148C7894ECD29C5CBE2
BBD39C85DECB4B3DC971BE5393D7AE9D845A60ADD7C8BCCD30CFBAD4EACBD3A8
F15C5E0FC4144F3BB2D795FEE8FA627019950F812BE4D3A3A63730B0C4D1BF28
953EABB831A7512BFF203590D105D3EE27FC276277140155EAAE420BE838AB71
2D30EBD40C7BECE058645C6876A647C19F9C6C80723EB1E3D547E93C0DEE8FEC
B558A0A60FAEE3885D35B5C36652775E54E7F02FE57D5A2F59B970DC9E566AD4
4454964DAC36DC164E28FBC57D96E17035899FDB03E86EA8DA05386BEACC3228
335BB67811370645D5A389244796CDBE4141F92DB575C1BB3E34E3C41615A138
B1F4A5363D6E537AD3B43C6F3A905597570A8C6B0B4A5E0B784F387ABDF77281
ADF83C3380A5EF6871CC7FF4A8DBE00FC32539CC0EAD16213FCF9E1B9514BCE0
D70993799BEFCCB493A9E4A67EA6C5EC3072D8E15B0306CCC6EFE86E81146E02
71E215FB6C52D696C91C62C88CD8FF88F369618B27E009330ABB76248AF38567
7FB2E15F1D63A09413171A5BF5CD986A74CD161DA9CC585AF0DB968693B16849
2FEC6A122D532233D18D088E387D5D7D631AD8C1CA31CE3807506FF35794D027
CE342A66A4C27C0C2391838B0842DC3A9E96FD7BB5BE41A68148A5E603B09710
E936D310AF8455122F4C6B61307071FBEB6E8DADCE11296D37D0B3F10D8795B3
7F4231A18A53FFE7F6E6E30CFCABD1B9A9D2DFEF1988B2ACA4C132F1F0507C8C
9DA3BCC11AA4157F7CC11191D9DA18C621D859943D71322448C6C6CA77370BA3
C979D11C72BE4807BA88A85FC99776D886295D55E47D1905E2BEB07286F13E92
BEC43F37B4CE52CE308897EEBCBD2461D923E8CCAE9DCA6FC8F10DA12ABDF5C6
3C5B1602823BBFC0C03B7A421A85C98B23C3E632602DA2B5FA880C379F9181D9
B836C80848E737236EE731C53F178A54E7B647E1A0453A31485FF73ACDA06351
D60E3CB036EEE410E1C8DD91E5EEC0D7E25DD35002E9E3B9029AA4C97A4DFC19
486FC0D150D4BE86822C60511FEB022DCA93F961CDFE9446071FE292972177D2
D715B4E0500A872F31A131A36AC602CA5AA04FEDEFDF24B58001909B7B03761F
F2070F769D1615938B81AFA5C99B02AB37CB7492A3032BC29A902FAEF22716A3
472CE2059E67012EEF3E683C292E7856F1114318FB2D3FC699F23A1F6E1C0586
6A5311B05AC2BCFE82D329D50F43842883FE52EE1275B05D19B3F2557AFF00ED
E9063B5221E6782893236CF35A192014D63DAACC5A0138CEAD9DA7903EB69533
3740DB2635D41E71C92C16A6D52C69E7A3B1E1615B0A08E1987E51BD5ABDFF3B
52A186ACD17CA33BEF68FFF121F538C110290C799BAE00A493DE953FA6A61914
2BEBBBE3B003C4C96BBCD4ACFCE875BCA9550E20DEB2AF1470F8F3C628A3AFAB
C5D035D29FA76015C7D88D520181888DC515ACAD894E279D2E37118A1747917E
6A9F273413F74471EAA474C6BFA593D9D8515C6ACAA51EE95A195F1BBB62B8DD
F0CD885A65F27A37E146CD6181C42219CA343A5E7A06C9115395DC2F92EA95E5
ECE5A08EDBB18811CDBBFB04AAAA21C7DA9C8CA81CD3D122FAB352CFC9D0C05E
728F7ED87EA484A596A6A62D6E82523052179E16E47D5CF22101A8097E43949B
798E6418C80F47D2E63AC879E13964049E20BC606DE3024A5DBD396F2A42AC1C
8496869222D13CFDF5995DB1DAD1E8FBAE1D63A066AC3972BDBBE98489535338
468FF5403087E9F2A95589ED5CB86D376C4643295F769C4B52529A054F6B673D
04BEE3BD838F0E570E8CF04E85BA16BBB3123ECF3733A72F5A70201F827CF418
45BE0BF8AFAE8348F559D6AD28E6D1F630C0154C37F8B2D7F674B9D137B168F3
6A6280DA9E3171D22426F200FB8824E27D3B1F736466EF878BC99FA19690102D
E366BDBF007C713A7D9687EFB4149F1E2258ABB230D76693C8E5802D2FBD34AD
BC0D48CE7D35846AE9212C1F00409F1184AE358D6F5C5432DBA9D9E5318681D0
67D7A65C52482D6E2C5740794958D0D12B50570E88F2A4C93CF8428248DD241C
3C1A2DB4C7155F8DE5B3D2C887A3C469F9DC2A96B15D33FE7C565961C2A3B7FF
C0C184A3C6A182563FA8F8F6A0A210405C9B5CD8797C3BD5D837416D3E85CD0D
1AA5F35000BB2C95BA02612EFA530EDC774B5CF4BB6A1F73F9FA72DABD6F0BE5
21EE16B6714320149241AAD44B2749661CDE6521332FCA872518C12DD5F84926
3DA8B6B2C38E4741212395174ED43E54B888E4F1B7FB089DA26F38BC76823F5B
4A01FF072F6043D8C28B243B40EFBC2B0CEA15584AE44B59B36918A54E4358F2
FC35AD5E36E6A1E22554AF326DDD23FA2FE0D3B01D5D350745EDF5C6EE6F804E
789DDA70E8C52050093B5BC70574DCD9B6A0297ADE74569C15466672AE1775AA
3A9C3533DCE8DD9C0D159D5BA8E3675773B6192824E2B751589F162876F9C75B
834BB1284FA0E58F651270763BED0E8E12927C72729B9270289731E6155BE79E
19E90FBC0C5B9AACE5807F35454EB98F9D7F73D5EADA82638A9E377F048A63FD
BFD917BB718E9C44F84195CC47206B82CB84EAA176025BA9473610A41FA2317A
4C2D8A8D131557E3E96F17DE324F9355152CD28C7BC3BB93B0B08EBCBA8A674D
ACBD96367DEE3D90883CB9F1DAB53B333675A5A5A5F88F111054172447AC57A8
B69B4DAAC8FF5DAFE5F1199B3D73FA940D5283A76BF2C44C86E2EFFE79DF74B1
8A99ACABEF284C19F6EC8E9FD3EA9931FFCC385DC44D0FC2F8BD62F497F7F143
A7C19F5296029E5871F043B27FDA41EE93515ABB83E3CA0755E67108085652BA
05177872A46DA310F17C12A979D5A4A1693F287397AF3300D4B1E4CB37D718E3
45A955FD2AC0EB3A7C3D9294946F1ACB88A63ED32F8E5795266D038B3E0E5E88
944720EE44A47E6D5C64DA4CD9766B3A10E2F8C3EA53645E2E7FB17FA52F6950
C2021CFE6F8C0D59356D2B2CD44371D02D3D040D8F121CE316178E26A004A318
26653E500F71B61A28962C501FD7F48863F5AFDBCE03E88F208A05B41A2507A6
E6908560BC103D67DDA456E1B85458CBF0DDB3DA821FD33EE749D08C271843E1
F16F6C67D01B97392F95B302B8CFF733EFC140811F5EB3B83956FB2603C5BB5A
A042CC8FC0A838DED802D40576568262B2289BD805DF76CDB22E1F9841028BE3
7645E63963E93778DFFB58C420EFE7799210D6C38E865D0467C9F8E56A53FE23
7EADB83261DC93DA406B024650C4076AE79DFA39DD5A967671B4D727BE5CA54B
9CCF459FE5AF884491251E9099681293009DFDDBF03E92CB2CDF1DC023BB3042
979D53166F6570B05CA0CFC94ACBE041FC8311E955631DB6480CE2CCADE0F132
943AEE55F1BCA0E3D51594B472EBD68B46C87FFB5A530833A191B41D6B0DFBDA
F84EF1B037F6E88357919FDCE1025DCEE505094B32E8A4F819ED1C5626EF1A1B
598017C01C6EB24F8BD768CC949502DA3268A9830D9F9BA8A9B6D46B9163FEB5
A221983B81D32B76D83C4E4EA79B2A917E0290F38D664A737A396E56294C4ADF
C4F456421C21CE57C3B6D1E218902ED37893BFB424316E1AA4B38746A4ACA9B0
683F07E4E1A4C090854DD806FF8CF8D4707C3B6CBC968560E9226AF8D9DF3E4A
FB32361ACAB13BACD3E465D094B642AA036075AB71CA71ADC08570D5DE3EC220
C719B63A9922A1A26243DACC84C67787EE6AC11E190298C532CB008B0C523259
04149416BC5E7F6CC39A8288A8839839027C0F53165349CA83A68837067805FA
B4B56970CD15676A8906BFBF53684706E5AA0298E44F69FA8A3283B4218A764E
6CA50EC125D66415521C6A77BF1D2DB008DCA0937CD60BC2308C96B3E12970CD
894926D2DBA06CB803B0DC6135DA416D9CA42CC8BD2358E7E6FAF0FBD2AEB54F
C0311C72902A535CC13684530ECEE75B6C6298719600992548A68772C1CAEB0A
3EAB1773982461D8B04CA8D3F2307C0A7BA510A14213AD59C7C7DF164A4ED6BE
F9100800BD0589283623176568E1F016AADC734D4A96D3ECDD79FBCC7A4425ED
DAA7F49257148F05FF52F57F9C2E30019D6E645EA2B73CCF0BC0BF2E27A0174B
368F79AD34FBCF258072F733DA1A1CE873B2A82D62A25DFCB4C556067C6CC6F2
57F75A4AC9BD0087BFA2FCCF60F5A862F2F8A60EA6030C527C471AD99A47825E
45BDBA73D04D8E0E5C2FD23101324F9989DB792F797BFD8645EA53ADE69B3879
4E040C7C85100EE718E289814A5CEBE9B21757F9FDD0A5224E24B23F39D64CC7
6EE8F2F9A7D5DF58FC7AEB53659C2C8779E6FF88BDC632ECCE672D5A6EC11BCD
B8A34001C878C8267C6EF1A61D2B91CCFF1BED30B7C72C4A1C980FE488F8D49D
3A4BB2B27C838A1EE9840839F921F94E9C9CC7BD30C73E7F151C5C6505DECBAA
DBB60AE7E27DEE035EF7522B4AA4BE522FE66353CCF07C0093C16C5F0E3DA61A
E13BE61828CC3175A31BC100D6A318FB4962C239B079518E896FB197EDAB1434
BE0F4198DC7633D312A996791F48BFF3535DFB0D05AEA2DEC44B4D7763A3E714
F7C2A423A6835071464F3057FB80209FB5A0136C9BC16AA4812839EF1745C0D9
E8A74DB6D7196B0FCAC8282CA19A33F4F18794570C0036D413CD4AF9DF0BF634
E2E96A083378107344FDEC2A1324ED781F1A2FFFBCEDB0E2DEF7ACE895397DFA
F366B982B1E79686A5EC478A5E8B6E99DE9C6D140A175FB46282023C5994460D
E511FD6F899938CEE7A965807EA75DE120EE073B5A40A7C633F5B87A0D016B3A
D3ECB123D005D731D6FB5843C41D28599126BD89E173E6EC0AEB6BFE6E579750
012CF2809984881E5A8AB1CB923464C470E1FA471436786B12F464E1F215BFD2
B6DA476B7AA57C881CCFF4AF0C2566A0EE1F106A05FBA0F8AC5EDE69DD41F34C
D83BC38D02E8172FAE44491F6E9E3C60227435EB78B9E3B15BF8CB577A5E4CDD
9D60B086FB2977843CB580B53713C62DDE61E9B43D6C90ED62E08A27CB74DB2C
C26341382E994594823D2480ACAFD02199BEBE7363BCCCB4842BC973827090D4
9D23B1DE82C7B4B6C07972FB1A7AB604D08E76B3424BCBB542BBD17D2FE0B133
0966414BCAF3785F93A44F542A2169A684B197891D54C197AD2B57A35AA33B5B
E84151D25803EF04C68B1F7A7C18FAF7CCBB58C6E7E8577B6CCFE51033887A92
A0F9D06361F2B69E1C978212C7A25D3E9E445D4A78795F94F207C269A395310D
F70452650B58F9594F6C9C42647A6D00F78E1D0252FC5731FF7E0F4C5C5F8529
3A4FB01772DCEE7B9542E969810829645149D3ECB50D30F93BB389BF2A7E4D7A
AB3C747EAA244333E226433DB447EB76ACC5E3282A3F2F8932FCB7ECAE185898
7495A6E3B2CE1745F8609B13458A3FDE9FBEA620D36FAD49BB71AD967C4B8437
E595614AB7738D549DF225BCE7F1D1904E054C06DE9436A4F822B6C93E41DB7B
FD00B460C24A52A6F49D3D2905382F8DCBE16AF4C9E134D4FD0DF99B97D08685
AA1E61E8189C4185EF37633DE556830E06C4D3B03D137CA022F2571124BB6BBE
B5384441ABEAEC4B5BD7F00652DC3FFFF419729F12BB593D3C8A7A1010BEE4D8
DDC76BB02A4BE2FE5D06A3EA7314706E8FB530C915B2071F4BDC9F1A5B2E450E
C0665DD77D59C450D153812FFE64026C8E0D5F379705780FBC7D6A7890AAC798
351115F9F23E81C71B1F75E43CA95E7F465E7F207A2C4C66B6B1705B866F1BE0
DA5C3AAFDDA18CC161932D25026847199A2792A26B930451B6E60B29C952D33C
4342E3E43FBA62D2CAF50F763A9498D1E0CC432E317EB9335F6B149E15BB3BF6
C434DB8D545261594ED6F276069D115A497DDE2E3D521B35069712232C79C591
6250F1AC57E0CACD173F5A11A8D4461D610CEF5407C8082C6B46C98B97B2391A
C187AB95972E675A14601BD6F02C273C8A2C2351AF6FEB57EF8F3995A9E263CB
1C4151B122822A02D2263EC7E9D6B7183EAE03647789279AF0D7F2C0766BB768
34B1C58160ECDD94F8863ACAD75AF523053D267A8C0BCC2784D4C2835EC32FC1
EB458E8535E6CDA535308AA252FCFC89796D956C5C07FCCE7E258B433F1AABFF
5B4B23206DC6AC26C41891DECACE167B4021E80D105816A92BB8BBAADBEAA7C9
D31DA374E4A63CD8DE11C477865B61FF0136868E7E693DE7D7E023127835B7DA
D7472BA4D2DAB43CB10C4BEF20E42679752B8B81EA5513CD7588B7B743B99CA4
8490E1BD4C7CABC1D37D26EC6D2C3D9CD8EAFCEEA56DE4B3281ADC2CD9338EB8
5186E13B466F67AB55D7C86EF134979EED917AFA0CA0F3D7B00E7F6372FF5CE0
6677C4338FAD46B3C40DBAFD3CB559E9D02951A321EB3E58FD3F8CEE377BE4C0
167A84B609C22E47EA927A2EE5901E90FB951FD54F72561AA32E4E4F32EDF68F
14E34F69292BEBAA9D21AE4E1F411F798676E54A95972E45A9235BB4A6F3C850
5976A348CA2CFA77D6C0A70FD4AFF1360B31C6190CA6DAE22502D1BFAA1EA834
839798F5F9D8CD1980A70CB9FC26F5788C78603143D145DC70923098AAEDFEE2
A839FB365DE44B0F4A60B73C6554CFDF2B092E373F357647ECCA5033804E51B1
59E49199D15B1B13D4D011ABE1EC837FDAACFD1D0894FBE0B8056F00A7EFAB4D
833C69870D87E3C0C9CB2ABD86AAA6D0BC2939C4D9A027415BB1C37681D2A0A8
9B8090A207E00AD19079823EDA453E3D9CAC4DEA18366CD02B8330E679AE70C0
01DF32EC12F1396DE55B1B1AC376A2F763D16FBCFD284AA8C9DDB3FC1E52EECA
BC59CD548AB298FF1D04FFB031FABA1A50EBB588E13EFEECDE30D6D0CB740D6A
1EA693C48BDFAA3AE7F5F6D66728DD41D97C69FAF41480B194D3F5A388C9ED84
B36EE7DDDE25EFA6FA8DBB37BCE5F81C61275516A330B7840F3DDDB1BCF4CAF7
0C58F46C08BE0B582D69B0C9C66DAB409E4ACC4D9CC7726FE79E547F338959E9
842C85CDB557852843D993F5F8B45B7C6269D652513FD62BAB8B223AD4217340
EF17D3EDAD4D148E8007940F07536235D6BDBE086FDD56495B9268179B3FAB83
0E1EAA67621D66A3F52287F260BF4547C25035DCD2BD99ED13BBBE3353294EAA
4EB02AAAFEB2A6CD9D1BFAED4BD3D034E8971F182CCE5D2268174ED1B2301144
F5C0A2CFCCDE4F58A51A6C060BF3F092A6BE92F3E54B8868EE578C47563AA874
22A127139F5AC3AC7C5438D539AFC2AE02B3049331A788E64C8983CE67748897
10B3A961A64EC5EDFCF21F026875A6994923E48BEA8E13F1A11DA4340E4FA7E6
5759489A3EB246D4D60595533CCB856898490EAD3A30C20B3680F7A8E9079430
AC01C35D24D8F49217EE7C54377780B0FD1BF62888B90BCC11AEA147F3801D8B
EE3486EC57B308D07636A94BF2BAAD609D438704A8245277DD632C474471FC00
58B8D464AEA4D91330379DD812DF2EA4FAD725CA6697993EA8670C4B8EF94C21
6A4613C8FB30D3C86DD243AAEBCAA2D559DF7FA9466AFDD2E20FF49DFCC03072
529A0B1ED64CA49F4A90D861CF94E55A541D57004DD0410A48BD6E03629DC7F3
FF40164FC21343CBC5302E848D83BA009418DA74F379C798D0EFD52011E76A7A
4E440F50A1739AEB6FE1F42877819484974919F5702D89C3CC5297AB39CABE39
837C3214AA6E5A2F73C6A892F713DC9DDEF5F540985AEC0D4CC27AAF1734A7FA
14A57B48CC839F5DB4D0D394BC0F95BD47CF935C5880A877B41F221568D5CA24
31617803087B999529B569192350BB79116C7899DFC0467E63A2BFED73C7DEC1
9B1763506204CE77C9E0869BBD6E899486F0347F3309F8F8C06C59031A7410C4
D0CFA960D12995838CFBFF6BE4973EA0ADA204222D16371429720B04F9700A02
59B171EDA5FF763CB0EF81FCABE062A9ECF78DC067ABAEF53517EADA431BE3EC
27E3EF63082B3A3FDECFD6FB6F85C97818E42CBDCF31A3341FDEBCE5EEB6E299
D3F95AC76AF3073F3C3AF5794D66CBFB46E98286E815A7C670A46B2545C5AFFB
F19F049D739347FF4BB7701019E6A0525723AB339B1432A906C1889D9C83B86A
903B74CCC81EB3CAC6EE75E7132C33E44DB1B028146D5AC068FC1B8051A25B06
698328AB993DFBDD742B32454174261B90D807108737B0D59069C73E621E1ABC
A2F39C4F2FD3626379D606EF4BAFA6B56937656D3414E3BEAECE2B6B78E02E29
C2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5017EF863393113850793875697709861E50EA63860BCBD
4746CCFF44F0A170A875B6245B17861E28EC28D50FB9B75978D4D7919969931A
416110D7D81BE6B6F0862FE61618E8B5575F5FB13461FB79B473A8EF5C815A19
621A9BC5B1C703AB24CC6AA36A96D66D67F077FD6D0977E8069DD79D487A67EA
1D9A22A508EEA8494F7BD45B8D65D86C58DB747A2455B41E7CB3D8C64769914F
77F5C7C882B7BF79F5205F9E9A1EC74128D2448189FA0AF72A54105E7A572DF2
54355335500897F2123353CD23FAC7E2B86EEE2936DCFD6F0539158D3B883FC9
107AD8C633ECBC2EC7B55F467F12BB61BB5E69BA4A04B118AF10776110E31887
3BED624E3B07B6F315F241825ABD849980EB243937D3DBD4B158DEC281D83070
0BDE3C3A46F0BBACD422F8C2D24A8FCD9B5351F64D0D5C17307DB0D983B2478B
82FBBF99BDCEB4B92BD72F54E3F35A448F9B520EA55BF8D0E39D1EC954B803C1
9DD4F5B58C4D2012E04E630F515E958B699A14BC349FF6B535D1F2F28A9FDBF6
1B31883D9235708F3988B2668540D20345FA57D34BFB75310C2D2810B26906E9
E6BC661CA55D65BC325F2C13A8708665D55BE4D6F30B62DF2C41352021125A4D
AB1222D4AE108BC688B82B188847CA58536EB5DB161DBD13A927892557D96A58
CA946D021BC9F43F89A649676321FFFA0E5FF316731DC3556B48BF53EDCE1499
F3925DACEC43096858618EAA62D3616BC1FB3B7C5F3EE8F027074C78344DFA13
2CF54473AF0AE80410C4FBC3A45FBE3BA440DB5D6BC4F61076183D794D01BAA3
DEF86BAB53D0930764EE3CF33B7EB2871498F77858BE6E3FFA70E0FFB4CB01CF
7EB213E7AC5A3C6243FF6AD2C9659F2B367930CA8A60BED8424DE9731F913912
E09C9BC7BA9DC8878D61CFEC7D90E2042F2635C15547CFF3567586D8B3FD4A41
EB80C03E0AE63E178CE4827CDB9D97238D921D1923A45AD81F6926B6959D4F64
74C47CDE6F0941734A403B1491AD19EB59A53C5FCF0C986814D917B9A7078B7A
E749DB95D61F6EAC90E92FED0EFA1018166A292FBA2916FDBFFB920AC9B88996
F83C4F4C2D62A9547DD679ED8D9A4BEE0C622451D5F35FE235B846C8E1E8D305
61EE670E9F845361A30E97C10D30B6040BB32DCD2D9A98CBE0341DFA69785587
09A6DBAD6CD03C45BAF2577DB183EBC19F52D43F46115B6882B9E36B665E12A2
B1DBF258621405F4DDAA2794BC5E9741FB836126A67A3FC5AF3393B59788D4BF
CBAF31CEDAE539A8682E4B6326C71D0E0DB397EE3D19128C1DD2F6A7A311C837
058F4DAE1B2A2B128368B9E7E3AC03DCF12D5C8F916E49A1D936F0F8CCDF8DD6
0EBDB828C452B583AF6C10CA8BAF7CC6770045CC418E9BAC33FDFBE812757E45
3A951177A7605D6E161D6B8CCAB5C08621DBEFA75081CAEEB7C7442B374AC1CA
6C1F0E4B851B9E1403677636D149214F1BB5DC96B5B927F65B70451029719441
4D186A35CBF16CD7E5025E59FD999F5634988B90B486AF1107F89D9401E59017
D48BF35D37A50E417C09AD90B7150385DFA45BB4ED4039F11A37A86709A16C74
BCA2D621FE4EAFF57A1279886D267F296663E7F5653E40A276132266B89E770C
756D9DE2A2DB15E1EA82CA42BC72C4C98830D82E088C21C437451F6925EFA951
F21648D38967FB01B5DD43D12DDA59A71F7988F1246336D5A28A3A519DD2218B
7F97C469905EF4158E231A371B2A470A2A256906D8EEBB963E93539D291F595D
E7D979FC3823B4A7F4783CBBE21C9A5A15F2D88D6074DC3314707775BB6F3F3C
98B417C3B48415EE6459F525F53720D2ABE4F09BD79687DAE41F056550D460A9
EE6E6EBBECD2A664EF283DF5595793C6F4664D9D0B2242F2A9FE9FECD9D683F3
34BAE25B77BEA7B9EEFF3030A4948B5BEC3155F8513C93C7EB2528CC5477210E
7363B8B3CF5CA6F2038F80A8FD1F1975C479324150F9FA81C2C8426AE29CA666
1CA833FAD69404772AAE9AE85784E74A8F81B2ED107228FF68921BB29CAC8A1C
F2E40D84D5B1E0240988783938FA0BED09A970690C82E08A8BF3731F22EBE019
200011A5EFA72D72E379EA97B2E271EAF1E858156963ACB888266BD69AB52B0B
0B634B8503D2D0DB35D6496AEA7C1BBD66C1490C11CCE9B457669FD2E87A154D
D366C572A227384E21154C756F4E8DB948FD2F401EAD981310F5D352B6649B31
7A8397793BAD3C4DB682C2410BD934F8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E0861476C6BDA40AA30151943B874CFB63DE5620A7A8F2CF6EA77EC
ECDED0887B6C00B24C7A463FC10FD2C2F18D67BFF9FC9E621DB4AEBA91880FDA
C1B255D3EAB46E6243AE85845FB84DC84256134A55488B1A6B00C672C13F4D70
9C289E50F5C1D8EF063ADA63F3351D5E8B2A5BCCD284480B0930FB24143DD785
1B5539E97DAEBC0C57E6CAD4465492780B560D7A64F4AACF00DD611A0D4AA2A5
9BF972145C6A25C355CF276F00AD5F5E4EEA8D2788534B0E643A05643E8A8303
8029E832F016A7F41B9B176926F360586A5C26C99195A6646B1336FDDC2FF0E4
0D5A3A2E5B7AF64A3304B9E86E1BAFC221A8165D453AEE422EFF10547CC2E44F
566E8880D7B62B55E06213C9491954D1A8509555EDD6F3AFA775472B61C784BE
8968101A50626A429AEFCD373482B35575207D2AA2476912EE771037F8D51B80
31B5BA4FA023A643AA617DC3B38D8B3697CECC8AA4F174F5B2C1124A9CC2E373
ED1F6F3EAEBD1C8C533E943977A590361A53953D75312631D6F07794B1D85325
1462B649443CE79BEBA97AE481AD4AB1DC86D8BDB89DADA55F2D1AE640852657
EBDB5BBF685EB2A4606DE426020640D534E795EF9019F887473996793F6FC92D
A11EA37B2EE094302A297311DA3110A873E6F7DF8F113DDE6AB0E182E5162DC7
0CD52C99C5542185168CA1F712BE96EE3F15292DEE4B72E4FDC197E724033F7B
B9128F40DFF15856EC96F5C3BA6E6CD5AA138B168C23814295B0BCA199FDEBF2
CC7849276A1AAA5F1598EC7A9A573A79CCD04CF98E4C6E81DE8EFBBDD3C355E7
3E38FF48F0FC3A3DF5B4891F92369E9379CE45F6CBE7E3178917EF80132FC8FF
0C7E7C01CED707EE67D626949BAA454CCF3DD58FD7DFF7B255BB8D78045C6F33
68050136CEEAB37F705812FB77CE978619015F83689687231C03FEB091AACD0C
096AC82B79642D2AF6CEDCB5190340A318A5F66CBDB3D64C3E9E49ED75D95704
9B85E0F168D4D12950FA8BA9E1FC687A5056FEB861893A67198B49D5704BCBE1
4EA52966BBF2629035D0209A74C21D10B0BABEEAB1C52E626749175FB4B267D0
D6F8C04CD391EFEDE4224FD7CE35E7D5460EF05BD7AA8B7DA39A26DC8F9E6003
B2EC15444EAC35A6E054D213D0A6FE97C994ED2EA14FE6FA12DD0D4E6E52A32B
048D621B04296FE74CC3CC0336E26E4AF4E9A6A0BE3FBE05D453553E147AC46A
2F2F1F5ABF0D0F03D78AE6E30F27C037FF2BB6C0229DD7564D4BDC48715E8499
206DA2C42BC1E19DB531D2A35036D25CAC3FEB287907389CED035FDEB68D4F69
6D170E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81A
9AC387913FCA9209F9142F9CEB88DC7864ACE2139716A8B8BCE22870B2A8AE03
61A40FACAAD0F82B44B4D6E4ECBEF48C6E2F39CBB2B53B18DF7F144E9FD272CE
6A23BADEFC0FC80B646A2FC08C8AA1C44A2A00554667CFAFF8A417D246F28CEE
905824D8C0FB19279F86AE6C8C6B3B5D4AB4CFAC640686BC6FEEB9C1DE214972
4C015A2D62C7ACB01966717F9C4AAE6203DBC7E60275D3E38C7F66058EB798DF
3A42628DF4378C539BAE628054B5C31D23B50C2B33943C5AB05E8304A43319C5
8B569F751361768EF816F30DA12ABDF5C63C5B1602823BBFC0C03B7A421A836A
CD4083FDE377A8E800BF093CC74B3F067CC1DF9F37F37B225D1A63E440A719CD
8CC6D148F1442F1386DBC7309C37D13848552D03C07E06969315884369E30CFB
BD715C131435EE885780EC50DFD4D90B568153D7F09788C8877FF9D119C062EC
9DB71DDBB40357DF31989908E4FB3FDA3303E6BC7EBC8C3F90ECE5DAE3E02206
E93022A0609D842ACA6AA03E96F8C117951E672EC54FCF9A8273B7989D201B16
1E870432822FD897B71CEC0427D5FA06B29F527B6A236CE267095F2193898745
610FFAD3AC143DC9CA8CB1C3931E36AA844248234F51BCA6F444C2905A4E241A
269ED51FF329D5C0C86D9C66ED01B85534A1E39BD5C20DE216B33240C40D188F
4E304C4610FA7CCCF0512FDD24CB36B40AACA15B0FA0098083597E359F090380
51C4BC551BACA6F728980ECFB1E999F4E0E329B15FE526F0C6285E5D05CFB53B
F7212E2933DD050FB0820AFA1B2ABFB2AED5544B06AD48DAD5E377C2F375CAD1
3A904419D9E7F6D38731EF1E8CB0917657EB749149E1D61A1EF50C19E72FC8AE
9D835BE39DF765ADAAA523C72A653D19D310CC10E9080C619F102E6C0EE4F80F
05C1AA36C2027A88763A7F0AF2DD0CCE40F2CEFD4D785A43264BAD874D4FB758
1C7082EA167108BEF6F7E34D958D6105130AE25923E7EB77C0FDF5286780C376
3D9D24E27F7FECB251C07A0CBF632410D7D948427FF6782B8850466A1FE66362
4FC26E88758AC01C1C98B568253442AD48691C2A47DF05F6A7466E87D3020FB2
D824E71394F6605CBE638D9A6B5A0DF28C4D81535BA76F76B16C6815E977CA50
513DA81445E93555250A43815E80B39AC00F7086BCB4B36C35CF2E4A42B114C0
7AC99ED39EF436CBA30F8EB1A6E543782DABE3FF805D54945D6DC2C09A0F32C2
954C689BB04A12A787B88A966DBE3F4C2EC9888B56E96241D345CBE471FFB513
9002DD5225DAD211F5C72F3127A60A33D311387E6DBB2951640D74E59891DDBB
4526022E00B54489023B0FBCB6540E7EB3B2ED0460F81AB38B9240BAE8424443
749F272CA43BE6C9B5CD3E674BCF858A46BB2D1898684401E25CC37C0FF9DB9C
5064E2E468F5906C1338EBF0AB1F2B5C97A5E4D6127212AB225F2857D0014DE7
F40568FC538A0EA2E76E1F62790DA67887A81FED8BABAFE9416AA5E06C7C4C60
0BF38B70C87E5ACE2C713203A64DACD5FD072694C71A3AF841F9E3D07C7B3788
5856BBA23EFEA2AB1902F879F1361AF8C0421A296FEED926836406E96C49A48D
AE1DA613DD54D9C840D4896A183FF4E395EB7A69DCE16AF779DB5DE506A534F2
9DCF33411B194DEE2EC1B99F36FA1A11D14A28C0E938F608AF10E3B31B98C36E
5AAA15FF94A95B38469000FBF31BAE9CE8703754A099D21B3329E0471463D457
0D4E89F4CD31A93C312EA4674730466C3EBE9F8964D358AA76DE110300CC7B89
8FBD8BAA1FEEEF4E78760F8A25C60981E6372E49D71614BB4E6EC7B1ED60BBA0
8F874D9E1B1661393BD85DEB50C29E3DBFD4613BD0DB2A70E57CB73CEEE6A51B
72B52020AB471FA444491570EBF12F70F2863F9CBC2CE3E571F5D8ED5009FB80
9985FBD9A3E99D1D6124A3B4DE50749E55267744E046627E381FF09727EFEBB5
2E59282E0199771B95DB671D4B2AD846EBC0109861075A936D6F2508D429C625
85777EB9E6E9DFCA889F03CBE5A9FB59C55523ACF1E394505886FBE4D6F739C6
6BA65248D16465F0743C602C6E12438E7E9CF6405EEAE7CDC599E8BF2CE72DE9
FEDF547B68A41FC346A14D58EABC55ED2D98DA057A876FB35F46EFA6A949A75C
F1DAD4E176B50DB98341C8D442F31C7CA70CA4411B4511BE399A1EFFE6AA02EB
E529146BB9E0D14D16625D3C830ACB43B26371195013F74FC07E862198AB570F
44DAA7CD767C726E7BF288414284CCC3E6FB3DBC5D11E9807F8B247CB591852F
EC9392079A91D02F4954FF97236F55AF6FBCD9AF0E167742D0BD0E131BE7AA98
E955D662DC9AD78F82C29C3DDC08B6A551B0CE96E180903891204F4EBE911581
EA3BE89E4CDAA342B9E52F30E55B902ACC35DE87E70DE8EDFE7D803CB0770A2B
0B8180E5389A54B85BC69FF37B8CE078CBFF5CC6F11D65E7B61ECADC94491C5F
F034CEA604CDF5412886758D49CE07427C96AEECF83C52A4555178C7AB4DC1FB
491ACDD3A0CE09DF3D2AA01AFC9DDFC002A9863D9382764DC241811B3912F36A
B2CB1440EAF4C36D14A899C877A1F71CF5F205C8FF35460B37921BABF917E5CB
A23CCBA7C46C157E3088F4D1C99603A5AE29019C97D03FA54726D906264C82E8
AED7E4AC8F66E56EDDE14DB1462E4F9859384B15882C6B0E2219186DD528D0DF
17F15FF78FCEB2CA616D526C530E1BF18C3FC7EFAC5BC5F623465E81758FA863
78485C3F65040DD351580824450D62A12078BC053A65AE1FFA91D645A9E26C29
A8311282A2DFA57985CEEF4463E64E0B7DD8D11FB10DC168A704C2C70DAEC483
F6942ACFB86DB9C4EF5E16FD6E2A4523B99D267AA808751385186A779C73E575
948744853BCF5547A7870E7F6196444513F4AA8D5FECEAC8EE88C8830B526ED9
264D4F56562FF445F348D19317A058A4FCC154CEEC13E60A53EE79C07932518C
BCF295C49DD58CF10B322634A4B9ACF5325B842EF91A19C55CCA6ADEB88B59E2
4FE4A96A8CFF57627DD17FCDC5BFFCC5CE9C78BFA2B830328F9A6D45FEEC239A
D76BEED158DB3BE2DC4BA1DC216B2D085F251E56B085F80C7C11DD39ACDF31FF
8D01256B7CED1EDFEEE0376E57B6E45D2F375499F8118EAF5C7F6607DAFC48AC
6FD2258F0314DA293F61D30028BB0FB43F50BFFB3005B677A74AC48E341259FC
DD1E8D932840FCA3727301C942C987A026992772DC2A0B06D5E4AB1186D81001
AE4288BC2EADC60BB6225D9CB6CA887922B117EB0E7F81000CCC4A20522124F8
B7DEACA9E6FB322B9B66DE572DA955FF06BBF51728AE6724360C97CE27BF0DDC
551716E8E06DDDE418B6E3E407307088DF1BF21C09F61DFBD19C30D92CBBEDE0
59D026A5A2D9B65246D93E36A7276E70D11DE1DFC7E967F6DECA7277FCA73E84
1737D9AE81C25EFAB95DC9FD91A124F9F5AE28E844C6C3EAF7DAB0FEED7AF2A9
13FB2CE66241C5102CAEC3992BEEF1999CE2A5574EAC934945ADEA6DB4E4DCB6
4BB074C6094FFB7D2AE0633C33C8E4823681C0A61ED898C571006202CEAFB5C3
E352E7F66C743DEB4EC14A3AE0EF469A2CDB23445830D0F304FD7A9EB6B8AEE7
919322D2FDF6C7D7906EDC7EBCD9E9B6AAF63DB3AFB9D9B87CC743CD66342BC3
BABA111186A0F38F642261843011FB3389DD944969E83C1B8315BF63C3BA9B84
9EDD5F620C7E451943A4E3868D2F9A6B78E6AC615258E663C9D255FBECA07BE6
FB4B14EBF66B06D640012D108ECD3329117185F2DCCD3CFCECB7224FC5E7E437
7C6E1F717DD65F6A274994CC40546439FA5A60BC3719653E525E49FF6F778D8B
ACE4664D86C8FDAD35CA3EA60BE1E28418837CFC7209F4A7357804EDDB05D506
686757C79C2ADE54B913F1ED476E3D86BEEA512B1FC55E137D23FE61B7D69D1E
E48363146DB3EB9914CE42558ABC90B623AFF1FA2CB3EE64202B74F76E195C0E
3F2B12B433D7DA1F634865DA6E5ED7511E1D930D074D76A35F19891E3842733F
8AC91FDEBDF9F8A426019EAF34A2B13634F55E964F8B7C21D937310590871C58
2F30C6DF5FA2097A078ADFACAE547DA592695486DEDA95AD49D2958D1F43A3CC
E7B7B9DB269FBAD050E6082D8DB99454AEF0AD0088753DEB92924B8AACE496E7
45ACE597058C23D84C0FB8BAE6E8B396D944701FDF7FD723D145E93B12A799B9
D0210E411564EF88E75FB2380977263E4EB261F6718EBF15ABA15B45CE0008CB
D8D2B7A1FADD93BD3CC207D8623EB59F6B3FDF302406C8F16686E31B66D8C1D7
E8DAA6804AAE5DE138E8A311A4A1330604D0E557EE03662BD31AF90587A45AE7
42E8CF9E4697F94F59B8AD259D2DDF433930B270C63EEEBF992ADB20C9F233D8
85BD42C04DC9300D4CFA004F89A55999A93B5A3EC2D3098ED38FC4CBC6BE50F1
4FFF4452CB1B96ED0E58AC65EE13077831824210531E56CCF19CDD93E462A12F
35E45673FB121E1AD75F20A8F4E8B29789DD95CA5047CDB13FCDE826D3AAE15B
CC039B1C6A9C21674AD3ADB75770688524E0B4D3151C5E51D640C741C6A05E85
EC79363ACC8A5F234575C256306A3E2B5F6A6ED4C48F6D4440488AE7C9B57B85
DE61CE78FD299609DE1D6795CBFB4CE95D68E3C7CB1D4A8DA1D0AEE7CAD1983D
695AD1DE3E935E231AB657C704B4FAADE3CCBBDC7C31C1FE52D8A57D79602D65
BBA312E072096DC25768434E7B56ABD8AE83CD6836A2A624A32128393B9D463D
FF8B865FBC10316F6EC4806316954E90817A74BFFE390FE7B5348DB0B4782BA6
D48AEE80D379CFEE11E4F1CD9A521023438259A1AFAA427959EE4927606F08F4
255EF756643EB591366950DCA06596B169C9665511507959228D5480C7AA0DC6
1F197A9CB5C80A00332184637C6FD2198C1D859D45F35E20C5554B0D72C262A2
3CCB48B112D5ADD2E056258AA295803C60070F8E89217F14F953CC4015C38151
4C1E1BDF36283AAFF8AD785A49E091119556FED39BC1843053FB2909D78D0CC5
BD0202C8FB9DFE45DC35209300AE63A15A7D983219EB991B300213F2BFD5B477
A7342D64AC059315DDAD1A2FA1F4E8CC6969A0E25CD23969EF9E387BB3BE62A3
51C14DAC4BEA7FB4C8F38C6C51F6431DE0F8FEB6C3091AFBCAEEC0FB3F3992A7
7ACADC778ED2784B3423154B7FC03D43F47C6F505869EC5039310EF1F4ACEA1A
40014BA27BD58490D243E14831C19698C0C0C9683827A13C1735D2C649C0D4A6
BE354B0E303F96F1A7DA6410CC5D3F84EC5C9F615650160747A724AF9C66AE82
CB864AB947E3582308319FF3BA95FAA268D83B462FC0BD10BBBB8DB7B12BB101
1EEA4891546F4AC7FCA094F32499C0F8AA33D2C7D00283804FD75276BF2C4F9B
E9BD77A75D5A1E7BEC988F06F62D50278904F0928D97C2A77894DADB216105AC
441F7544C3EEC8F09A260BFCE7C040D10575084BC081821FB759B9016DBA3AB3
9FC05FA6C191F7A83C324AF0629A269BCC414DDA1570B980F3596906BE0D23A7
1396BA0A0F3335B74FE5BC3367497C95A462341C8707177AF767B83F28AF4C0C
F952EA0D9C4176D5ACFBC48D8A48074357B1B8E5B17C698F2052A9C6410435FF
3D114F67EACD436BEEC8ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A6FDD
7D52F256FFCDF706B456B6886F5FF5F416C079AD248559BBDD2767549450C680
3B603B312979604965F7E8298F454E098DC4EE83D9EE5A229DA5B97FF0861841
31743AFD0DC1CF828D0993C56493FBD38744296B82E3908A1A0CE811E0CA2E52
A0EBB9F4998D40FD7B001C660CCA6AEA8C43CE8FFC9D1AEB97BAF55DA23B2FB4
A868BA0A41CE90D7BB6633CB481DC110FC14AAB8E9264F5EE49798BC49D9D9D4
9B9CB9429CA197321B545625093FAB4BE53BC96D108520D9CE9193DA216221F8
42FD0F3CB18D4D9C66FE5891B484C4F3ECCE8A8CDF069387E4FF4967E9F11717
A630BB0422421290360984C499D5C2F4750008B8107BD17C259B723F956B5B14
7E7C0D6AACEB4C9F0ADEEF68329D5CAE9EFC75DC15A9494E876104FF7675D11D
E1DFC7E967F6DECA7277FCA73E841737D9ADD1D1BAB1961E212D20880069F0F3
B5536CDE53D4A4D5012B54B227A0C18DA8A43ADB7593E98E5E0C75197138FE3F
BB31F876BEE000302935A55EBFE1CE914272A8F50A983AADC0604FD17B2A2F43
06AC9C0E2C687D1D9ACDBB674244037384B36372980DE4F1819DC2B4F825D7F6
AF5769BA3C34DE43B531F84B485EF8F360082659FFD797F6E37B87EAE0447EDA
DEB00764A38DAB429277B77869A70AD62AEA3CFD663916700C95E0023599AD8B
F5E4383BF2D5B1F79DBE83B6B7836E42C2E1AE0093867B0F2F8C4E44A16A51FB
C10F2F4BD0EB7475E396C85116A9D3FDF82014EB00C07DCD76514565D3E6DCBA
5BBF1E7E65EE55B3A8CC8D2229A01DD3EE09EEFA659502F90DEA0CEE99851BA7
2A097446FE8D54CEE9CBC3B88AF70F6D0234ACB6350CB1C56BB44AA5D7005841
0088780E87F8A0D2F6D2FA07D508BF3F6314B934962984C7FE400CC9AB1E5F79
2699F15AE7E181FE3ABC4B4C70E21F3AD9AC49685171C47A257EBC1FA6B40E10
B77C81889061E668B9444D08F3EC366CF071C473CEAF7FA64B863164AA97F309
B76EBD1D860A54D8E656ECEA88768396EFEC282AB93B7CCADBEE9CAC7E77D79B
A760EF4C53A3C983853C30DFA6B0093FC96F298AD1B5807C33A89AB14673D370
619267FFE6A05DCE65C7B986CF466B6A832F1921A6949469ACC2B5EAB9F109C3
6C9122359A60190E6C42C713A9BC911105DDAB231758BD41BEE389B057A1F7D2
5215EB9D0F26C738D1E8782D670AFDCFCBEF6BD68AA64D6CE1D7C82A1E46EF79
FDC5CF1DF72D2275F3857BFBB4FF234B2192EEE72D2CD5E415EA5C1C28F4B537
D15C66B6CA739B8D92F22E3DDFDA20460C55C375A40A34BF6BDB012F333DA135
67389FF89C666BAF1696FEE4BDC1B32589E1427C1749969DAF3B72CFD1F579F4
A62E705B6DD2AEF3D166BA507A1EDB131616EFCF91246FC75DE3D8A915DBC82A
1E46EF79FDC5CF1DF72D2275F3857BFBB4FF2296C19E66F93DBC8E9CA5E86793
FA37889936F823DA9CBA746BDC1BA4A84F7B70846E33CE5F285F32FC4E53A284
1E737ABB84A750A16A4999D5A59AEB5FAE6FA51F6C8CCF447A19D91B8CC30481
B5C49B6ACB4DC451F9C524349EAD4DF1F0DBB3869B74C2373223236E809ABE92
C2630C9A877AE16BC30D56A0B208DA546903B801BE445518F14E701BE121A6E3
C832FDC31C1546BF0855A6767030D9B6B47266B4A1084BE171D03696A026FA7A
544E4D106B9A315700669D9D8A3D985F44DE6070E8E4AF6424F3048173F52CB3
EECA756C4D24FC6054D922F59B105DBB74686310F635AE6153D9E18A0514882D
4CCFE9D44B8952190FB9EC8360698A45EC064FF735101C9B16BC27110FDAE792
2D97BF0BCEDAEBBDA6BE7764CAC582CDFB785921653201A8230C66DEBA105E89
909D76D034C9A5C6A216EE8C2D9C96FF0A04F2EBCCA2467174529C592950326D
E46CC1E57DD4B2A8821A8506BEF79EC524565788A28F5870230E9DA69ABC8078
8F2F72CEE5F5594F71A24092D1CA9BE1635F769E2AC1459B0B3AC1DC117B6296
C31A438AD167AD6C39AA2FE5CCA6028CB3A7EA6A0BB569A91BCF947E682976A4
A993A413FC97F6F1331B12604C28FE4D8F7FF429F96D0DCE41EEC1EA29EA44F3
F8493AB33413FB84F35B3C0016089A6C4D67EA0050A0381699FE2E38BEFB071B
9FFE3D7574FBB32CA8ABAF8CDE383085DFFD5EBEEF83D696C0FA27B86904477A
22C09610E936D310AF8455122F4C6B61307071FBEB6E8DA8C43C5E1C317DD3AF
44E46800FED97CA40252808F6AED21A9D6F3EF87869378858BA7E6E918D5E464
49525A4A5A2932DB6208081585CD9A312B09793B1C1FA05637430A13E5AE3E1A
3D5B471CAD468007C4A6BFEF07D313E1ED2F47BDF624179D8827CA4664F96F70
03D7D0BD14633673BF1A66D0126713294E13C1A4571B8A9E6D98EE5C2084E767
98939F0AEF7E64F621BE09010CB6F43790AC69F122BD9618E23C7FD95CDB02DC
661ACA0D9FA5DA0CEB0D82EC823434BFCFE218A4B5FF0264F1EC9818FC80F9E3
E06FA21B47A2C431ED3DEFC7267AD9DE87E23C2411D06FCABEAAA6D87458CCF2
5F198AA55DBC4F8AFB25E33D6830FF6333593140C974A8B13E94CF0E77EFE6EF
C2F0C2FE513C93C7EB2528CC8B0472B5A579EC88E8BBC1480D4976695D2851AD
FE75F0E8AAEAF174FD8B2D5264FDA6E40432CB09DCCF5C286D5EB04E5A7D952E
716DDE9DD17F51C40339BBD717BA9555F70DBFCE390F10FFC62821D7082423D4
6EB801F8502449684418493C3E014D603933A576C6B0758D49F3155D448D505F
73A5206D1647639FBCAEA8108A2649D23FC552CAD67A60480964C6CB0783A8AF
EBB8E005813FC0D89420F1930E18323460DB56C9DF95B90D45EA22620C2FA7D7
521D7D4B3FC1FDA5061C6F4B994301864942F3C18428C06EF16DAA37D7CAE4F8
5E3CC5AEF1EAA75C658E90F0246C18C21CF073CC1D7732019B86C11D799B79F3
3BB09CB6771F637D534DE9FE49A53A3812D7DBF47D9E8A2D353B48627891CB99
B8C759187CF9112E3619F9ACCAD376725BFF2760B9ED7576B9D9EADFA0D51077
ACDE9DA732031E629834097D62B5D90F48DA5BDB8D01BD0DF36D531892BB3AAC
16F85A63CA278DCC38682E1BC6D134930242730DFD14B49376780164C5A1F030
379CC9E763CF518CF9E2DD410B31012ADDA5B9ABA7F5EB2EAC54DB67BF9CD44C
49474B134D42210504E4254BC7510C4BDFDF53EB3D5F54D0C6A53862B4ED64CD
18471A49B62240FEF22F4D82468E075498FE2FD44122E511E5FB2FDC8CBDF6A6
9012CF9846CE3A9A6DE5C947140AC48B22EFAE3EF8FE12D52CB3A260C7E0FC2D
A6ED47D61F83DBF89585DAB88E81AE9FD0426205126E4CDCC23EB4C431FC6C1D
BBF79938BA64859723C4637574DAA16916B8CC6DC32495D5247D877E4B863070
61E7A19A3AF4137889983657F78257CE77F03D0E9DA4E29707C31DCF1707AA65
83AFB9A309EB1599591812BBB5C8F3CE43DCDA76D261E3F7734DE2DB7D9BFF35
01E5A6D23CF1541ABF3B301F226510EBF89944E4E9C5376A9F2841845CB62FDF
58F84CEF83450F3CF96A040F4C2047DEB00A172677774217ABBFEDC33DF60D1B
D15D023EC0FCBE6548410923051F875718FAC168E4E2720E8D959D339DA26151
5C42555EF75A03385FDF6C7DFA8FD7D02B80E1A845766CDB597CACBFE0700303
409164B5CD1CB0F12CC3632AFDA9076C2B4D0CA7D89ED2FD03763D20BE507F7E
56122CF46DFFFDB6FDF9361520D2E388DBC639CAD5B2E83C049DA71FA49785EC
5565D2B3A261A66C9F2C8501A2E9324D5E6F0F1294E1C0AC67EBF4A840618B23
172EE2D3E6538CD9B1E12B834A6D01EB50C781646E30ABD086CF9C09A6B0FEE7
416646141CCA188014A29CCA5AFD1215D847550DC0F06DD1F83FA50D4F154867
B579F69E34040E2AFF508CE7AF4B0D544E70294FCD49BCCFB65347FD1767DFDB
6F85337F7B399827B860FB08BF9D15DA7739FAB5D8E03BD8F283FB6832C3E10D
341F8D147A88D61C5990E609001B853B273DB140A7DC69895E465C1ABABD4CDC
88310748221F5BDFDC2306912DAE1934E475C3AEB56C96D1978FC7659ABBE845
A08BC6EC9EDABFDB1CAFF5FB8203CE3B25721168DC1E382A5267627FEF41D963
44A05EEE4C43E2AE24657176B6C8D3A0EB5A8C229616709EDD4096C1D4D817E3
96C6A55FFA4D67E59B58C6D9BAD063D247787282EC4820B3C3A8D7EAC66D120A
3911D284DCAE2018F883AA804CCEC457CC6213EEDC75C8890DBECB670000924D
3BAE8E7A8066D804B89BD943B49ABF548E5D92C1D6151D1ED96241CF76510076
26E9D2EFFD007A8E985FEC263E6C90BAE36C27D704E88F1F7BE09A971CABE15B
724B62BB0C1A5263449707BC0ABED19F4F1ABEA27322584D473A1A888AA4DAE7
7864042EF587A6D6C04DCE664BF83492D166B205011A3E283257FA60C5AFAD3B
71CF6D6772E5E77FC5742D4D77F4B9576213835AE7E32A2B401C36C3D58214F6
DEAB86E06EACF7F5DA3BC32030E4E23C5E0E7E82C4D1F9BD7278685C4CC54FE1
C1C4332F05F5AF14E70FADCA465393A7DEB7DA08B3012A99FB2FC7F6FF7AE570
BDBA718AC1E0ACEF9AEAE22E5FA653C2698E05E0E072A7DBA0702C0CBE5EDF6B
D0A5B47D7929F5C9317680A392DE0CD7AAC72A99F351D824F86D33CC89BD70DD
41F435624F598030F2E7121F6A610D640FC7E512A28BF6C12496361A53953D75
312631D6F07794B1D853251462B4D522B6EF8FE6D2DC18EB4C02C6BFCEC3E71E
20E6D98720013BBF6307EAD2720BD9674E2AED09E56CC6D3BF927657BE2D0749
3302A5492BEA01CB223FEA3B6CA4D0A35D6F2C5D17804371F9AEBC100D7A6D14
14C37CBD273EF593B596973EB054344F62115963E3F61A1A2774E6837D2DB796
482A00E2BEFBD6E3758A5A1CE621ACE547811799B1D7893DF52D57BD6C1A6B74
4024CFC65AAF320264BA65EA8FE3B2E77F515CF05968797241B5BA06E190C023
55C664139419373923D5BE1FDD292F80E973E271248B2E3AF05887FD5142811C
2572A1D4B9F9539CC6D9F441AEB22F4E871755911D8FAEA73E35EB7835FA1C6D
A4635171C47A257EBC1FA6B40E10B77C81889061E6696F50954EB8B347918C49
20C7142A2AC68231DD2AF574910705DEF2893D8D4BD1C3ACFA2BC75EB9471489
0422528F5121B7A7D7A973F2EF67F2795E6DD8CF55B98238D6654F8B47476E40
98ED693455F82F098F49FF48762D1C9622E0B64CD190A4AF3020654123563C5D
6ED62F1387AA1BC5F00137C6AF5840026DA68D8DF87CD5567644A09B52124E10
51A715399BBD1A6D3704BCBBE1FFF89BCF8129B98D35736FD2CCBB0E36AEB664
3C283A61B6E8613BC8134939CD28AF21976B42B06A63719C44432BDB419B04C9
19DA628C6A5B0F4F626E8935AE2943365C505CF5C7955AF2EFFD964AB8EECB15
C33CFF111F801E31FA0889D1561CB28638D1D24AA9F358AAFF93B9564AB4CED5
632C12606449ACD326A76B011D9FDD66C24C5342A5575E940A10EF9A7C4E0857
59F390036755C4BFE971F6DFB9FFAC965ED71736140A0D41AD571329C7FE5460
ADECF79C3543E3592283C6770B4087ED9EB76ABFB56774C4A21133E594461685
A92D372D4ED3F9DB786D7E7245B9B5DE70958048F037C56C14FDBCE691048469
BC488E501EB5DBB042B02CFE90432FA7D98B533F89DB0F21A61657E268166431
92F6AB4C4265A5C2599F55E134AC2DF346CD7C05F0C4B63DC1C10E03B9D34C67
27AACF1040ADBF7713E3898334BD99CFBE66C4FDBDD9B9180626E338FA32B67C
16195DE9D59A0F447B8DB69CE8FD6E2ECA90C6B424F1D39D11670BA89B298DE4
0E91D1CBAEDF3D811318D493DC71793E84BBF3E2BEE2EB813B03690C774E6DCC
F2D7221490784231EA6CF28982A4470A7156F1C7312FFAE07D32B62AEA32B58B
8D127C00F3B953C795C84E1A158E799D50610BA45F2003568AF44E2EE4DE711B
A128C91C36EEE43CB41592BD13837B9EC9735996A1376BC209B8D579F6A057A2
7AEF243C4B389CCF9385CE645C882CDB6A03A7921BB9F85B93AC64F9C82C455C
AC60CC9896FD453CF3AF2307B191F79C5C6F070D7E814EFF05F881CD7EF43871
21F72EEB3A9ABF13F7A9C46AABD4D0D976EBE8AE53D3AFDDBB926B54EF0C41B9
8D10342A2BA4F9908402DEF9AACE7BD76B3D4A244E3AC7442DB6A705BCD7E2F9
DD7C73DE15B222ABDF7DC3B76EEF17AE4CBDF387FB03FAA5AD122CB4A90F479A
EB32B0CA993ECF07D050F04D4CA153663EFF8A63016F79C7D0E464A57671FED1
E50936B0CE6E364B62411E6DF77D4A4DDF74455394437C3A7B477AC27F75850C
FED5BDB2F07349EFC5134BBD646BED8080D44243E74485FB82236249FF6726F2
D6775F15948A9D4DC82D6F60D7DC6F714656E89DC882B95552C5215183E5FB51
605BAA7948D6E5102CCC8E7AEE127E914C372C6E2DD84989E78792EC3F50C186
322A81E6A8368780A2E815A7EC49B29EA2F4594EFA2C1C079B0C777ACD0210BD
A4F06EF57BFEFA0FBA572A16A81DD123F8434BE971D9EC8149468CC0F2C45ACC
D61E6DEA7CCE2D711A218FC3953EA7B36F464567F208953F9AEEC1EA50C522B5
A42C4A99B079ED011928C2C8CFA17D95D50A7C1599E62D4FCAB001D5F9DA84FA
530D65FD2738BD6BC724446933E8927F3AACE64BE6623CC4CDCA1DC0B686ACA4
41E316ED0CB3CCB6ECBBD05FB823FD79EEBAD2F9F0891F553381C5E352B4D7C4
C1678904B22D75C8E8D4ADF7A319E9EAC6238093C798878E5D5087FC5390338E
CC499C043E346A4DBA66B7EDE932FFD9780C75301CDA60558F65241DEE49409C
10DB07153317E1A13947E293CC426E38653A16E2A7EDF6D500E9237793DBAF2C
6AB5E2DB571739092A476FF45FA1A1CF898E3FF479C1EF67CE435AD93677B705
BC81144F2E45854E93CA8D00E814009234E2A36EFBD854F868BC9301D33BA670
0EEC06C030DC43B2245F9D24D31A31F06EBC65712C870E62BFDB244441198618
3617BF19EFB5DAF155F0957D038B6FC5BF776DB24668F0F4594572EAE33CFF78
6BFADE79FFCBAA6606E892B2E41A173AA590B6C92E254AE642A2EEF5D51BE02A
C50855B9158840F97FA94CC03CF388C8AF7468EB28FD5E0CBDF9E23D1FF320EB
F19E60F85CB9568AA9C68C085E87B32EDCAFFCED2FA9A1619C3D1065724C6F56
79589C83053D4C8C9B53912E217B51E90F13A589F452936A798BADF461C448C5
480CA1D7A929044CC07FCD6CF9DD7FCE413A0B2CF777529685854F63EC8FB112
3A12157DE158671515E8FA0324852EF95789F16A8421B4FA121305A1AE54DD69
30796B192862AD337BAD6CC06279077389A26E7EF7030CB43C182223AFAAEE62
0EB7E7F02C11C1B52C95B6B66A2DF1FBE1991088128B8B12C2B28A050B50BD46
CC83DDD732C8EA609E2857FE8377112784FC50B3E2940B0D30B506FB4732B2E8
8F32140F3893EFF849FE4E17A69F02E7B4C69CA806A1A347B174992DB8D542BE
C631C8069D0DF3B6F3A5A80891684979154D98437D6BBE4C8EEC74B6D9BB7D6B
C5924BF9AB0BC0438C5F9AB06D6FA688C48C7DCAB3F09B9350C42F6BF7A4521B
21554098DCD8F7DA254922301AC847E5CE09E60F0839874318C8389E298F5546
71CFE508839634A81ECF5A229D2B16EF77A39178507E41DE72C0B30162242B3E
F7756A035C0529533E59108C550FB89650C5B0600791191AE0D2C2D576DBD6A7
3FB4C0722AACB08ABBB932D5E6A03F957B7C64E89BB59C4ADF019950C6276EA6
1AA9465BBB3A56AAC8D14E62B83EF68CDE87804FE10153467FC0AFC951B645E3
0ECCABC655E635DB463BE72AF1223D0690DDB88C7DA9D59148324E7CA0701024
42574818D8E2E330E2FE5102B7F4DF3E4FF521CA5741D8C57CCF85B7887E6A7F
6B6E4F61160966AF27B74B21C9F3D6882E3E909D80E0762C58ECC4E243CCE91A
946487E546C6E433A5C5B9FB7D5B97F2B4B202F94545C8C3A9D70992C1F31DC6
753222850ECF459A7BEA8D8482342AEEC5762713C43E7E94884C06329D340EEC
ED08ED58B05FA74B94FD084CB58F31EBFD5EBC6440498768C234573DAA11A489
B87A3C6A208E9CB0B30F7AC129D5E7217B10FF89AD4A78408DF8ECB0A02D9EED
19239FB927915A02D3D85B0C237669DC17FE1A48D20EA8C5D2A68A4127CA7332
E5039A2A7E32F2389255B0491050D86369ED418F2926916FB309B314347EE3FB
1EA13799ACEB62CB55BE2301E115BF38D18AE8461F466E207613B6C091C7A10F
D77A10F08ADDB19E494C72ED471DF04820F4F3A6713E67E7C08467C617E31DFA
524A30DB697FB4139002DD5225DAD211F5C72F3127A60A33D311387E6018F5BF
F946CE8D7834A3410F5E6EC14CC8E47337898E5E8367724E6A7662499EA3FCC2
78B616531C0CB5BAD1940ECE80B6479023DA0394E3CCA13502D03B122C2218B8
7DC1A0A15DCD491B2BA40939A647E01CA6143950A0D13DCCE128401BAB4E3322
2A22ABB177C6607F014F0310C1E7BD29FDC20E11094E2852779FC5C0D5DB9D39
648317DD0820EFEB02CDE5BF84E5F1E8C8572A5A86DD74D4FB3A9FE077F2E6D4
384BE6BC394E71C5DB81E42B90ADB935FE3468186ECD90E2F15FDBB395191E6C
465F4AA552F9CB59DC4B0FEE8C937A0920796C09CB74B3EA1DA5B74EB358437D
0CEBB9E03109C593BAC09CA9962533B3AB0EE6EF76418EDA7CC6B8795043E5FB
6F899C3CD8486A6DA3E670E6D13BC51C01FAFED3D47621376F2A271728AB7439
3AB3183B6CFFE1D0E2948B24D2A7E6A98712527A7F3FDF0C07D30FB6436D5875
3F6AE969F727C534CE5C9001F9E7A0149021BE5A65DB754E14D890F42F4D23B8
5DB5F2BD66726A544C10942C271713B28F9F33282D2063886DA7006EB5C0F757
82A3C48BD6B7D4DA8C112653B00D7E484A88A248FD17FF0E7A075A554F98C451
C7059F491D1C8BE038ADD1FA4019E1C78B8C7656766444617C98548A8EC0CC14
829F7C67999234D302FD1E40C28703DFB713F881EA0F4B81A8F1FDE4B3C92CED
078A98A433D6F3C4B442E014E3E5A5E82E52DB5332A895046FF12D01742E9AAF
ACF2CFCAF0517858C28A24FAED300D643F1880D27C0F7D73029F171028FDDF8B
55080BBC908D26B5CD10691FB92BC2FA54A04EB649B111671B43973E31253DAD
08488B1C71AA6F08A5FE3F6222ABC942F7B152702F7E48B93155A7DE83B3A6DC
7FAF8C2561841226C56160914266B1D28D74185B0E0FAC89BEC8ADC3FC027EC4
7FB0EDE4D2906CF1B55597831D98B643B81D2FCEBC963155762A1019FE6A9467
DB7E5464F6CEA824787BF86ED78492C31CE4E8AD0913637E245B375AAA5B76D5
95F18A4289312E74FA9C289A53647EB6D776E3BBBC735D9E7226D2B353CC752E
FEC2E91DF8E2DC63650E22804A5B31B13418130BA661F22AFB71F8026DC8F788
188647382BE1B7891A84B9697E22FC61EE575564D48A537CB190E26707CDE0E1
B29B2BB9C4F4716519A4A62A05A7B901F7AB8E77C6FB72D7CB3D6953F1416C40
FE153C7E73D86FD65663DA0E08018ACF34CF9BA5D7A937AEBEEC84B992D45A26
80BAC63497C593C90728B12A42833DA3C710044C03A37A680D1F806296BBF942
428E9FADC28CB5AF48F8947D9BFAF2F57F0F6C4AD7C698D46568068F98C3564F
42D2F7F26014DE37C4DCCB6B3082CD71C69A1E1A3AB1C1298DF12BB54B3EAC9C
3325FDF74E1B6222A84D10CF5EE66EC13A71302C6786D05D419441162EEAD0BC
CA6315D5D70AC07AC571FE97F03509863B9CF7A0E4A8D5214D07B149EABF51C8
5F0C8A7B7BA0AC8B5A90540E5FD5922F512C0A83999C07CEB7A37F71BB8C4C08
F359CB4473250995CB6F5DA6838536F3FE0B38EC7BB696C8285F78C66D154289
455C5FF2D23C1A59A2944DC972F44474CB35738074BCB9FEE4077CC0C49D7185
B623A143311EC892D1BB9554D34547816955434DFF68BFBC34A074CB3BC8C175
4662B5D3FC0462AC4967765A50D653FC3FA379FB4FA0AD9F83269A99D550366F
C8714B92BD48CCF7CFA30A7E92FA628D056602E7EADE6F2B3E168EE1B0AEBB2A
BAC2B90A514D97941B12553B13AE64F9F960EE62E049E6D9BC9858A3ED3CAA1D
77CFB4A424858251438F05B3EA1F686B35F0072DCABF52B26423E8BA630090AF
D344BB225F08F47868D6C4D857CF0A3C6CF4B205301FE5A2F54624315981DB9E
59213A134B651EB7A024989A6D910914C0224A700E1245ADAD0C701A6F5E771B
E54B09E2D6EBFD77645845B7C08389FFD5AA6D6AED2DC26C28A403BBCA3435C3
FB7971E9A56226D46A1174136F0A04A5CEB915B8E21F640745A0AB62F15FA8D6
5B74900DE1EA95B981FBBCE8D846DAE64D91AA7BFBD49CADFF1DC7AD838B897A
D728B35D869CF7874A1F48CA79E025C3D54743A3B0CFA14625FBF274F3794F04
4EDB9552BE2C55747D7AF3101C5F1A2A1BF6C0E2572AA0624592BEBF74CDD683
40D52E137B1DB6FF17B6629B871F0D3AF01E55645C56BFB97243ADC4813F842D
E44CD9352178217879909DFE3C012CF2809984881E57668BFAA1644FA922FC56
B0B93D32362BA966DDE41AE6A21FD20EB82747C47F18DC85145900305F388143
6FF377B1500EE02F9B9B8774237EF1899A326BEAF8EDE7CF319D42D7B7B61296
2A9DC4B8DD8DD87504652967C679E5629FE5449DD1BA7DE9ABEA28C4E2496F87
61C0638E0F7508D281F5762ADE506C2DA47286A8A2312B11DE4B488136EDBEC1
4C5256B9940F0800E6DD26001BE1FD4BF642AF9525279536814044F4AE7DAABC
43A230FDAC3D9FF0B8CCCB4C1E7696D16531A5EED36C30AA15C66D5398C145AE
DCE5826302220B185F12F8DC154E4B79B163C08F53AE78243C52D4E02E82A4A4
310980801A463964F3A0BBB90D85756EBB96B5021481EA4E845488B79682BD09
F8D07481630EC3129072AEA5778A135D164A571B22D1D619980E73841F84F59E
0500496E84FD5E9A7E4A28D9EFBDD34A443F263B41A3B2076595CE2A7DAAA94A
4B95D7E9C281194A84A9ECEFEA5023317F88FB64830A2CDD5277003D6F1D46A6
DDD51B3C62188C66D7D12CE54F29D09DBF020D89506CD1270C0B3EA235BDEFE3
E24373517FF148B2CDA2B90CB5884440F464CD57295728A8AFB1A5C97B6B8F47
63D21E005D89FAEBBD7D8B06F3FCA5D7107E8B918D946E250F561E5E394ACA6E
AD2890CD407F38C53B3E51C9FD432F22202E89A91B046BA4CDDA6E23B0AFB2F7
9CA39D61350D26435EB900ECE26C5AFC283144EA933E003739EA80DD65A63FD2
020938E02C1C72FD8A4A14DB003C5D21197F835B183FDC1269D70A0B14D4F9BE
76C4CAED815AF7DEF664098CF1A167444F32FDE1796595709294CCAA488C37CA
EF08DFEF5DFA13FE0CCA32024C378A87CFE7506B67F7A6FBF8635703C7EFF67B
9F15A7315285D2565D7434FF3C75A20CB3C1B57AF37CA806711890C1AC5997F2
1A14E7523CEDB295474F36E7AB3493706076D62F4C407BE252B5F31039CFF52F
2855C8AF27ACFD99EAD434BCC277A4805E6F068CF203053B151CD82DDFA79D31
F0B4A0485F51334BDF5CD5E855A60000B2D49835C34DE75CAF4932693BCE009A
5801BF822C193040C8E053C3F1EE0BB0AAAB446819939C850C76B37EEC59A516
F15F22949AC658037300F1E113F3BD1B4F3ED7F9F55C21A04F1A6DF8168FA228
6D8C7EB944B03F3907EC73E5B4F9B71156B357F62608909B7E4BA8223442AD48
691C2A47DF05F6A7466E87D3020FB2D9D297F492DC248B55340E2A24629A4571
D7AC9D41CB1CD871395666525A66CED4C7C65E4402789D5449C1EAE25572A971
B89B24C4EA34ED7970566C889F7580291E4ECD8437710CB5ABCBF542F0502075
D90D8D5C92B3A5DB6B82BE461BA06DAA237F43C9519956A524A451083DFC810D
15C13657013193C8D83A659B914A4D5509B9DAD79DADB3E321F7ACF4A5C3757F
7F2F7FB43CE1F03A69148A9AF4418922E61AD0A92C1D2165ABB9F9059EEB9CD9
CC802AEDFADED447518971D17B6C14D5B2A021154D274B753AA96964C14FAF79
7738C1773B9AD2B42BC431C60418D244656DBCACF4FD754ADCB4B3957E1B8A79
5D720A30B7DE482DFA2B2F4EA38E7D327F0F4C117F34AB17610F5D7F76C203B9
C613AC9569CE318E21C11AE858AB0BD573C2E4B6873BC24F7DA45361E9DA0209
FB87B737182BEEB4E4D214B234397772C3DC75D6F4C27F992B1370CADC87C117
FB3C208612F02ABF65DA95B47B8C56930CA76C2B5CEB502575C9764019856433
A5BC9EC9E87FCD37FF357A0F402E4860AA1EF85DA46E6CF1472B62E5B02DCFB7
DC61766C8C32C4C9BE1C2A32798652FE0695FE3D11AA43A7F64CE81A00BB186B
6DB03261532247A8570D8234C82272497284B49FD0B1A273C1EDA6B778AF995C
C50BFE91EA5DFFBCE16BE8F29E054D8AE6823CCE5FCFD2D5B4CF559A079F2FF1
C3615FD8AF94F0747C51AF46854168068B6E7C7CF2E2432A65BA21DBEB0A83FC
660BED9D09AA6A1B7C9AF629B6230BFD81E2AC57A8E54B8671CB0B0C965A76F9
F9E81159520DC4D615A1D77D7254A4D89B675FB0ED7404CD97B5E622D15E9B1E
55400C52776627A77AF980D0DF01AE676F92338B1967197A2AD38DC5B066261B
176F897A2F87CE68E047CB9A5CCF18243A2CCB727487BCFA01B7C01E84C2A482
8F6B01E8D11FC62D903F4011323E059BCD0C4A359A016E04B4623EDD9332FD97
D03F0162CC8BDB0FF0ED90DF66D6F8D2701298CC9FDA7928F99CA135B6980954
BB1659C255392A89742025378CF853F6A8188534F53F3EAC05B84458A1D04167
8A1BC1282DC784E4B54411375A132738D0B295BE2561978B194DAE5297D0F8F7
A4F2544DA06353DDFA9C87125E5C9B69FE0A592390320498C8E8B1362BA3A2DD
F29C622FA55D54800823824AF12B184AED3709422940A8C36962BC1D166C1751
2383CF77436D9CB09895FB773DB25F1A4FBD03CEB58C7EDF144B6CC8D988E06E
1ED02B277AB08FCEBEA6003301365B5BAEA01B3042CB34B1025509BC87450B4F
D9E8A02BF29FC213DF9079FD3A534F666DD35FB36CA0D8264EAA3C15EAAB315D
335B1A481FE3DB344A5F50DA95EF3F0F95AC877A8237F7EBF5AF326230B80CED
913EB6E69DEF0F5D209914290A07373ACE6F9ED34CF5FD1C81292D7ECE889A68
D4F70165A8DB7B3E80326FBBCA7D915592A91900467DDEB103FF247068EF9B9B
43A951DC93BDAEF84469CF817A5078A751676B5DDCEEF6B61E61A0008201F65E
A71DE662017A25446984321EA37892C5232D48677DD6C49EBAB74CD0B46A97C5
88C298F92C73A3CA86D60E5028919298D7E8EC3D47A1B7110B8BE409368684A1
394EC61E87B7D7B3EEDA7B21AB66C93DF06A84B1D55E3D07F4775A6D19B68D96
5BD8D79124D5AFA9BD1B7B08EFD3E3C46E47A7C65EB3AF97E72594C518A00340
38946FBA9CDED35127DA26CFC3AEF7F5FCC28AD59580920609114222F4596B94
1EEE41F2B753588999185585F81C9AFD4A2130E42AF31A2AF987B5EF7FB5D8C7
5ADA3F1A5C5343D35B8E99B6A625861D2DB4119661265B9B784016D46227A57D
F0B4CC9D118666C78DD383D722EC2C9127C2D93F194A67FD599CA9D3364FBE91
3083D58F6096E79084A19407BCDF24BA4B41EED384FC907E25108902BAE0AB57
64195295C87793D5F78FF22EDE240535D6E3DDD018B21204776A715DE0C28F61
B1C5B1B6CDE7CEF52C314A7E84B46119AD70E23350C13A50F6D110323B8E210A
27E66F10354BDAECB0ADC7DC3FA7B24303B3C291BE8F6A362EB4A074C78B92C8
5737D05561DBF873C4459720799C193B119C7021CD1AAC40EB75EC3EFF41C982
859C7A67B4C4F01AC08C0D8B57ABEF9F102344C8FC53A43E6059A1E86D66ABDA
ADAA0A9F430A245B814972CC222CC7DC2B5AAB5D013CE6B3FDB9B1BEDA13E340
864F2D181B83DCAEF214F5FB004EAD6D12DB441DAB9EA47FFE2D1A17D780BD33
8B7A205499FCE67E946C3E8F46B9C2DF790F79269566BF9C9A6E54E34CA934AE
C76C7E9268E3BDDC3449B8D34C34ADB130C39288D0BC08539BFEA00B80A262A1
D45C835CB096F1F48793476870168A1F78B39184438CE528180EB98040FC5000
35A2259A0B74B311F18C11CC63026D8847FEBBEC727A943D300CBCD9C7E58365
8A38EAC821DFF17755D1AE1471C5FA50EF20ECB3E3080FC6D8B395542D5E464E
A9367F909B8B374E4975E93D9FD32DFA0AE84699D1806ED81DAFEC73B8F3419A
F9EFF1090AECA836F7040561115CD0F1C98A2EFCA1A117133DD39BC60F687306
A102318384D36B6D329ABCADAF9CEB29E09A792E33194C402BE9910CD43E2720
F2849E4C3C7B62E653903867AB44E75D8CA090E60C409D96FCFA4637EE0055EB
8288CCBE49D339B928EFDA00F21BDC87DD2D8DE1BBD7947B768B21F4D17B997E
FF71C0B00B951A7570A341DBF602CEDCE8290BE15AFC6D052F79B8FC23A4E6FE
D2DFCBBDCF4F0FE32CA7644DAE010536B0D6D72D3EBD3C54FDC10618D71501E1
EE4498B7F8AEBF68A600694C245667C46D50BE43BE46363E2130C0EA0DF460C5
472E7D58C187468FE4A6CC21E16657398D5DC47EB68012394F7EEB8B381D68C0
EFD108277C1B6C547F34B4092E027CDB9142F800F0066240484A3869FCBBD7D8
7CD089A4E7F9910DFAE5ABA0F17E1A3FAC930A2C3C2BEBA86CD8754FBF01CDF9
7EDCF06157BA1886575C8115796C7219F735AF881482491852CE9D872CD46D53
4EAAFA2CBC4627306C58257F49682DB6CE16E840BD0577CD58A2FC5B7D170AAA
23991D96CA0A13E15C370563EA2DC1F5DC10EB0DD59EB53C467C0C6574F0D402
ACED2B7D63523757F6AE29273EE854EA3B26AE30EDCB46ED7952DD4F10F3A2F4
EA31540AE5E2D16FB3061E4445DD5B88906B59DFE804795EBB8135DA0E5DCC54
84AD230FBC4EB1D310296E53F69B1CF8C231378BD2EF0242021D85C50EF4F0FA
7E8DDAA7E09F428CB620E9F9156627EEF4B4F07CFF943A70AA730E29ECF880E6
43364248898324FE1AB2F1F8E4D0339BA19965187F323F60824D13F79652B119
EE55207B3DC19A5E0BE80F1628BFF1109DA71D85A35F40871DD6EDDB2FE6CF85
871D883DBB1CC9F5BE250F123027EEAC691DE5848724F4F1C298D34F3811D5DD
A7F33DC6E913E04ED66498B056EEE562106998F7FBFAF7313B1FA589C0DD6CAB
16B0D1A16E9E60C07909D06D055FA464D3C8B1E6588A6BF405FEFDBD14B53D54
08091D6039FC4977E525D5BBBD4092B3D6E82E049F4EDC7D7F5B4F3B5F633645
BCB40E03F1EECB35E199B2DB4E75BB08D7E500A2A2B20C4AEE0DB123F26F44A4
4A50D3E4011D097E2C9FCA76EA5D84BF2DA1745E4F1EACB4D6A50538653A4591
C923F2CF256CD50B7F3208C3AAE0F19541EC977DFB9A5ECCECE376BE07D03DAA
4EE95D353CDED25EAEF73162A697698D2B2483BB3238BC779091D87E5D195DBD
7CFB9AD96E12E4AA094338F09076A091CA69B1ACA5AA995EDCA2CD0870D6695D
D214E31A3C16FCC1BAC1C70ECA10FBEBAF327F472C284EC40EC00C947C893595
05A0025D7C70D0C796720A2B0B8180E5389A54B85BC69FF37B8CE078CBF117E0
EBF094D3B7F6541DF57D2C3DD302EF1A852259582F80AC8E76FAF802C174E1A5
0B703B5A9586C03FC968F53BEF74AC6C3DEFAE7CD74C7C03634341123E5CA48A
8C2C31E0D294C0106CFFBED9D2EE977BB30BCE49F1BFB80FD8EFF137E476FE5A
098E607E25ED29F4BF3409377C996389A23EA3F80EBDC8BE3EE5686F6ADA0716
0EB81BB27372105F841A259EF699DB0CD08D81478BA573395C76FCCDF6A6A155
F451AA39165591ACB05A205779209F98E6BA65DBA894F62D4F977DFF168ADAE8
A1716BCFB555479400C1A59CEF4C8770D3E62C7EEA9759D337AF21267F9BCB54
85888E3F74362E408C5F84E3E7781B5C5AE1CDC599E8BF2CE72DE9FEDF547B68
A41FC346A14CA7D780EEFAA50DC64C2AF35A3F9916784B964679C694AC50E0D5
A4F1F9AE8EC65B7182BD48AD311845FB6A555A10FC7DC2F3A0655EA208F98B35
4A29FA9E962DC65E6A374047FD284ECF25B6240F8912E6B8DA8C737FE5761780
45D6E731C73A266B3165C55791AC67DF9ADFAE77B3AD560D9987FC1B454037C7
BB317932882AE82292F84995A7DDD0BA909EC99E655A0385F2CBDEE99868A3CC
17844B10A9C5FDC801B144AF82BBCCC3E63B027A4C33883DC1FCCDC397734E25
B9DC2952C9B101276FF63B66F1BCB3566A526839B597386E852EECBE1E315834
B81735DFC5FBCB5BDED0C269EC967551FAAC019A93A7A16043CF19BC6268B672
E98D6D3A64C4D3C3AFAD0869003ACCD02D3C71B5E645C82E92F057EB5F859BEE
23DAA95BA8027EAD6A5C182C775FD8878D39F160B10D4F5E8E683CA1614941E5
A2F473A7FB099D3D51EF85BE0B5CB46B2544D4BCF8AB4CB14661759C675824F9
4CD151CD192DD60CC024B929FF470796626F0795122379B1581BBC75D6774B62
7AC2C11EF6DA56C96259C9C0F19EFB003531DB813215202A3062F218582C59B4
973E4E9FB1DCAC3BA1129B6475EFF13E12A8EDA3E0ACC243B1073280AAC502D4
BDB24AA42649375B491DC08F6B03DFEB517B2FC4B8665D1C32197132E5B696C4
875661730C15BE7C487F344B0AEF0E5AAEEAA17B394188BAF4F489B019543021
6DA79E1426E53799824AD73C5E8BA4181160906A798E9C722BC018EDE986D00D
3F68C0CBC50521346A87A21FEFC747B40BF4ADAD86EF5BEE825C3F850B6EE405
BD3DDE39B075801F323729C9FF29E681FD7B0C080A5B57E5D523432A48F3FE43
4C00771CF4751D8E85BB97A7F15103D2EB2B2787C65B147FB7AA49FD7B056D8E
1B1611D62F7969EE4429EA78920D62845D12F9A5A74A7F2AD8A7608964B68E84
AB3FCC5AEF37DB709AF088DF32159094E5D4E147DFA6D249F9A5AC91B1ED3896
F2C6874D6C28F384478C4B70F8BAC1FB7FC9191E173820EAB8A5D47C60AB00A0
0D64680648F8DCF47A989C23AA8A00773A6D6846E64B4E57F282A1DE2049B163
A4288A69ED6EDE2408E542C0DB0FF95359E700BE2DC30F248D1BEFA38DF83F24
13CB3A32A712343AA5772845A518108C5548A8E23A6AB4883453C36014EF0664
19924D265AB8A16663ED7EB0CABC5928AE68403AC7D2174BADE4B196DE9E61C6
A86EC8D988E06E1ED02B277AB08FCEBEA60033013659F70687848E6766CC8D70
3B64341ADC30B47F91282ED9C710E1BAB6E7EEEC6CA0A6EE762C39CDFA05F1E4
A7E84C702EA0F236C7462C608A5F169BBC1FDDB8DCDDCE916AEEAB30DC86436F
A1244E6326B40886B1CC02537311A9B0EE79EE107C0BCB9928307ABC049C8004
E21B98FE15A4EB8342C2773CE38E1EC3132A28B15C075DA951FC38C09BAA9B79
53225F7144560DBBB48BCDDAE5E1B2CF695A5C22D9DC361A0FFF2CC6C99969AD
FAB57808479A4EB518C6F57A41FDEA6DC98038A7713C26CBA8DCB4B416555EA8
E8446A880E4E1263408B0DE3C9364C6FD7806B3274EF646B86F3F1CE756EC0C7
8188CFA735658854365B75F7D7C33B34562A5AF707A6DDC41F982FD30A772D2A
6C2FB8ED5906ECCFFACADD71EE0B7C7B67D8C7AC04B962DC733A5D3BC0BE55E5
C3EBDBAA16F46E6C7176327CDCDA9764F56EC19382F2B86AD651CA2B01DB8998
D6F08340AA9A61DED2E1DE62B8ECE240DBD1DC8BE387B7DD9DFE9E7E2ECF47D4
4931E96950E83E418B529E95CBD5E114246049948C187FABF401324F9989DB79
2F76D71EBCE692F4342C634649B5A2CC15CE58596999BAD2B765EED83F7858FA
73ABB05BD003F42980FFC7D49BEDF2C90D6301C4C4F6D85252A14F0370B44FF5
EF5CBA678AA09D3668F7FBE41F4EF6A81C0F9EBF9A4CF024C1D3E6B50D19E633
C26771E2301735A28978B5135B8F280E61A21D130FBD21BA4CC1F4547D6E3F93
51F911D017A6BED86F9D30BF27F857FFFC90C7BF80F1363A04FABAF6CC39A904
3906742D7FB5604173241EE0C7C6A83E5EA2D909873752CAFC5F902D6E00FA1D
BC770FE98B8287A4661808EAD7185675405E6E48BB1722D84194DD4AB3A90E11
097B59ECB9ED4D16EFFBCCFF0CF648981BB0F88EE65906F3C13260328B421507
AC5C428BDE2320F7D4037B167950BDFDEFA7F8098A0F0581B16C51AC3CCB3B69
9447B6C814E2F47D48B84F12297AF2D267279A477BC15D19A366ED709A0C2579
ECFBCFB7E7721E07C9503B49A360A5D9A7F3347CC0D290E551C3AE29362C779A
DB86258CFDD49BC425FD7D7EE5953A40F8BCE27C810BDF96D978114EE100B8B7
8ECC15D393ABCBCEBE9E532FA80D9846D96BA904EF327FB8B6B10274907C8E9A
28945C7652A7F6E419742C9B7B387994DD94EBC3599E7195F5FBC0268AACC1AD
2BD1C98E198476F07F32DEAB29245E731AACA8C1C19267AD441581D7A43EC332
4CFF3DAB7E144BA7896C537B440CFA78A1197FCF102CBDC87BBA433203C2F2B3
D90B1444E654491898A6FA5694ADBA6742841A5F04BA9741C4DF40D44C0C1726
E6D6DAA26CD5D562CEE6D0EA1719ACDE43012A2AAA1F71550220B035B6AA5BDD
F09199F13A726E93DCBB3045733D43880F4D01B9A8485F539B3EB6425D06959A
7011DAAED3FA80BF13020D0CD973D05F42D3E371304227EC703D42B4C1064DD8
AF2BE3528300002FEF053DFECF68261DC400897B7D2EE139AB2303FC215B5B35
3C8B1D386CED0321AA1103F1A43B78C328DE953F3494CB99CB209FA97A20E05E
0279195081E58CE7F78DDB940917756A2D719AE12C53BB3BDA1FB5F20B5D4A48
56E5013EBDE652B37E911AE0E16A56970A742028FB422DF59EE85D2CCF2D8DBB
400361FF183ABE60C5CC7E02E8BA2137CAD04FC9B35F0225CE06E2A5C6438D0F
B1C687604D09B7D0F438904BB943CBEB15E1BD1FA0531017D74B47E173553F77
27CAB5EA16F1DBB69D66F8BE7ECBC8A6F5489B0C17900AF38B219ACE05DCAB68
2381245DC37D8E95406B91B7CB06AF224E948EA12FFC6E88C3FB8B507F85E911
27FCEC4599BB37CACFE9B5847497338CE30CADE1C5BF81ED48361530BFB730B6
F92DB7F7CC7CC9BFA3DC85B19C5EC770C8A621F065331D96D50482017147AEC0
EDF0480A26C76849D33454FF58FE75BAE3363E929515DB75E5E51D982CED26A4
4F19344BA5CC8E4B3FB29F2DDC7EA1B24FF6C382ADA638AA1DE6AF42F220B87F
22913A4347A452235919452D3BFB980B83BD9BA4B465231A80176200E96B85A3
512B94CAAADA19797B2A3AAC758995A7355F79D06964067893AAB1BF50C8401F
3906C0803FDC57940BD422AB9AFC499CE60C6C736077F129F899D9D42D0C2EA7
C77884CA423766152E7DA26D679ED4D87F89B2D3FF1A88AEC6778D3522C0AB58
1D0FEFCECAA1615EE015B4701779D8213F001D364FA41B7577457D6C49DBBAE9
E7843269320AC53D0A55E4B99D27A83093738B60E3F89F806F12DC71682290BB
9D558E1BBF66C0839F5FF759E791EF3D8B421BE87EE665F4E74227B5A328BE08
D81F6EB1A4EF484D5C381B88807B579BB6A0C8F69CD919E311B6ADE903B29FBC
ADF6155C16A31569DDF8C689DA7A3EC6DA1F5C2B36C455B8679004B35D754A18
A615A3D23ACD78645D840780896BE11E54EFFEAF8F40171C316F28FDDF8B5504
C968BBF96E8ACDF42D79E6E714278AB53CE7A124D7FDA13770FA1A112B7CC136
26AD2B27443265B374C4856BE831C12E67C101B71642C2AEC05ACFAC43457B35
DC78E9219550308213597BA3F10B16F3BA05F15AB776E80B231AAD7A38A2A746
70462EA37DA7CAD61670A6E0C0BC8044A71C9E0244FE096571F074F07CC1AAC1
DF294CF5ADDD3218AB9B7BC8F7037F433A0AB962F52147208D920DAFB7F9BEBA
4A9630ED0ABE793BEF39A7931111DAFADE02C8BF13998C676F5633D42863F026
3EDD8FCDF7A7642FE7E635744692A959C7B4919DEC77FA5012A3CB8152F1EB2E
1E458010F9E338AF54166E27780D54AD1162B5B0B051FE6BABAC66007C5B9E2A
C069379392D74A672B8C273642095B1E04CC60718A2DC2BCD99B342028768A9B
7D92D39D5361B2874B19850772C62EE452C200D54A2B854460A9934BCAC76B5E
9D25F7C24968B44D1B413BA9484EA1B609F6A9259F92472E432712990194A6B3
831EA84E1779CADECE0C75A70B6E70154AB80C5A40B09D69943345AB7BDA1DC5
84BF3F662B3E1C1D25A0626DDC4BCBC3A71F2ABFF02BFD572B01F17BBBBA0E10
BB4380513109C189915E0CE863C36799BA1D959BF559D2B4A96A0C9984D8B63A
12D9DC4BE10B98D5CD9EF55CB21EB67002939738C7354E928475B6D270825B0E
F286176D71A547801D8EAFF2CB0EA7EF01BBE4523C5FD5ABF3D19505725D7226
3B2F7FB6E3B7ADE5124B2B60E13211424BE35A9B84DB541D8D299C5C5F56DD69
E7635073B646668F5D7D9F71DAD3322D0A4BD69EB1A4F3B4EB5FCAFB82440531
8C251DDC89D151D76CE55800D3D730F0AA1EE5D53426C00EDFF20384F08EE78F
508778BDDF17752C8EF4657F1748F28CBE526D90398D3840182F35ECB410138B
EF424F2082FAFDED49499FC805AFD18DF56F31BB95F6AB99E8207FFDABC084BC
DFC2A202F15B5E590EEAE0AFC4A8C7BD0E74E4B3142195DD8F5B2A24F02D547A
B9E4F46D76D5CDE0830034E3BDC2EDA5AB4B0FD9F3E08BF8F30A095709F949F4
0490F6751FB0E9271CAAD9EAF78D663237E82970FC0EC032AED2A2FD2D948114
EEA07FD3CE53A79EA6C4A94926DAE28C834DDCD480594D1D86CD1C4F80598937
ECAAD0FE2A9EC2744C84C939845135D382F429B57E1C863719C70EF2C8B862EE
357855A1C05E38C143355AED03337DEDA21A5BB90DAB18D604C65C3D5A5BA3EC
EE5920BBAFFF7CBB603DE772DED3D1A2B22DA8F8E14A7959731A74DC4B215D7E
C095EBE86A368C99608C27E76C984E054CE25800DD25631C8F22059AEC60758E
B6457D12F88119EEE99BE63E39D377C6085A5CEA441E61FC59ECE8FF86E5068E
B1C90211676F6586C951B3CA9B1F3952D101D6CE60D1A0A97C99EDB3FAD64E3E
4D5B05FA1A04F498C68D3A49078A7E2CB48A432EAAD9766F92298023B5A14A5E
E325D1C4CA5023439EC5193BA2E11DB263AB0AC36D1291BB3B71E040BF06E52A
82CDD24D23DF79874EDFFD683599494F1332307F139A005BB8B29B70C0831ADB
61A92C2DB592CF08B3DE2FF51E22E8D5C45AC7D42782421D7028420F0A116296
B888C4F90AC78C389CE68CBF1557B048F8C9E46F213B7896017CF711F7EC2A4A
B0DACF13EB16BC299CD0A4EBDAB8C99965702DBC28DA96447F7F93ED70CB6ADB
4820623F4F70EB9EF20EEDF9BD29F593689F19A5805F2D7547E9A744036A81E1
F30B9EB6863773F44CCDF4A46F9896379EB3A6AC161B4BD1A84282516350B586
2134CB93DA898A0CE4D8EC13C0B542DBD0281CFB93F4245F940FBB774F1B6245
8523B7EAE8206159188C519C58711B13F6C5B10D737EBEA6FEB2308419481FC1
CD96C5A518C517B54DC530EFFAA1D2DBE136F079F75ED2208F2E9034255DC955
3C0C881EBBFD1B03D195FBC5A3D9B6B58A5F0ED9F1ED9F0A5C602752026B1A90
CD650E36F55078CA90F446460EF5C4B66F317200742FB65BAE28B73CB3E2C2C6
91457563BFDFC3D7804663FA604386967F521C8CC4F5E19B7E251061F37880F9
AA8145A1825577526A7EC1A0FB6B2C47EBF59BC693ECA76A6ADB02C88A699928
8B2C0ED04BA3C9D87D870DED6F271AC6D469A80516B36E13FFC49979BBEFF49E
D2D708F091FF667707BCF26BF504D1BAEF96D668A39015F77AEC510566A1F340
E7D8CF7849612A6AD724FA4F52E1554C3D2F701B8846D9BB0D17C38B73596636
623B3D3CDB5476534C6A2290DA9C1134E2ADBDA8C5F7323A112ED99299F68BCB
EE648AF0D4B9E03E01E90AF46AF3C8042BF0A610338846739DCB06FAEDA4073A
C9996DCA039E8602E1675D66FF3130E5381E71C4BAA3C0AF9E17
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA4119883BE0E2CCD156
1113CDC4983460A31A70C6614DA60CBEA3A564539DA028D46BD8A6C8E870451A
F92C3A3D555E94EA81503E0D53C0AE8AF190625DF8F48C433C5CA5E61B61960C
10E340864F2D181B835CC0F9C87C9CC0E95FB3F1824BF5ABE0DA3110FBD87806
4770B0F94B263E2C7A3D9DF14D9BE01BEF9882A1EC2C8DDA5931F895D02E4FF1
CAD0158061CC26D5256590E51541844B9AE3A861D6412B59941B7186BC31AAD8
9CC7F07EF9A36CF5C32F54ABEE8B83306227DF64A1F4E9B350DB04B85024FF0E
6FF4C8FDEECC5DF7106C24975E54928A3679928D4D84C98B3D33843CFCBD8AED
A1A74438EFDB0BD68AB2061EF46D65CA446C190A6BF6E0D8DEFA1E8EDDFB5541
473187ABC3D34172433CC652E9B2516AD0EEC9F452135D6AC8D97A90DD4C972B
69C05585BD438731D0DA714733FABC30765D6775BB68C69704D0BA5D6DE6BC5E
10342040FAE3CA1C359295C7D2967195AFD2D94BADCE1E95F17F0F95B5A683ED
8DA83806CBF2B803C94B5A135004A20823158454E29255E8846AB1AB9E444B82
AC000DE047EE32B5C7659AA3999D8CA1D3941D1FF042DCB7834420A2CB78723F
B40B625D7418A892CFEBFF58AE1CD0F128156868B917147969EF8319C216ED3D
620588A8D3D13C4737BB89F1FE17EA91AD0A119E1754916E4957C40F7642AD75
0E847F04D456B101A89F4E76E6BD785EB1F605D78CC0AB1425CEB017B47C1D40
BE68CE2BB94BFFF5120F91CB493BAD5966F870FFA6AE560AD6A82C3B0AF0C810
C12CA6C41677519886FD5CD163D6FB351E2918F4E5B5D5A27FB8E57A24EDF9D7
42EEFF2C7558A4479E25DBF75353BF0CB3E744B9009BFCB1D37E21EC06E4D7E0
2762A656C0E348FB75DA17FAFCFA53893D1ACEFD8C3EB97C9E7E5C3C5A303193
004DF6B0E2446527C65DDDF917C6C8B730247D89C817FB276D85EB671AD64DB3
4BB09368AB12D82CC4A183ED86D2841E499B785084AA21B81AF837A206A50773
FDDBF92515FD7870D5A35EA64BA957FB2F6990DCDDDF2859681D7B7D5566779F
26081CE1DCF8FCBF985B41005EA0771D928990C0BA6CB7E33875B819AEB1EFE3
7A3656C9B2060A89B3D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86947215D
585BABD246585FD44C7FFBD5B878504A44F08C38AB4A35ED5CC53EE38F810C49
4CDE233ED8AC7E692EDA8CE219D733D37296CEE1118362904F622FC22656FA58
65B5E26CAD7951FBF3D7B27121FF01DEA6F49C7A4498656B8A12ECA7752E0477
CC7F945AA8CA30ECC8B017D3365E4F2C4D6F555DAC9A6D17C263F63D55D6424C
58ACA31C6B17A617B342EC92A2FB13D4FDD77DC3A85B2508B70FEF36DD289991
A16B4097497EEB38F0274AAA1341AD3BB645B0D7F97ACB233FFA576119456D0E
E8D5F85BD47E3C79CDB4AD769ABB374D1B705D61C428B44B213057725969D808
B280BE2A969D2207BDDCAAB6AB26EFDBF7E27A57CE61292AAD6582B3A661F4D4
8AFE06644856C8C9DCCC07407A115D6D45B7DF6929B1C79277F3957EA1805B97
8529CE833B1EECAF947E67DBA704AF3F29618A894235D7DBFC1153A5F74EED26
102EEDB139492E743E82CB61CEFAC99D77B61F60FD9B0C1645E399B20090DBB6
8DFAAF4C6C1919FEFB6E3E8EBF926C2A91C5281153D5B28BEE5E71772C8921D6
9D11ACDDE095D43077D6D8E8EEF114F60F85935BDBDDA3362A11E0BF7854BF4B
BC52EAEB261E696CD413485DF93CADCED318B5FA421EF0BC594EFBA262EB2C41
4E43D8ACC9CB195D12F3B2ADBAA0D95A443F525372BDE229F13C485324C60FD1
D7DFE515B666ED51FB61F69E18AF955D6620C95021DF41F66204845581723BB6
B76B4C3C2E2E5B8584AD015374BE36AC1E08E1C53C079B8BEAA3E0F907086AA2
3BCD6FA9812375C8E8D4ADF7A319E9EAC6238093C798878E5D558B30ADAFC1AC
17B04381C6754327FA7C65AEAC1A2839A9FF799456B6E5B9BF421E82415746B3
63938E88CA325AE4BC6B36475154CACD25A07C74FEAA2928802611B4AAC8DA96
F7CA93B7288B2491380B2F4F87646F6BA42247F5B593A0787ACF533199348D11
730EFF7C25DD5ACD0221075ED47DD6FE8909C387D8F02A88FD24540AD71A0FED
2665CFCF412B99167152D35BC0E671E657EDD876C39BA0ED4E790A79D8AD6723
4A2C9360790E4981671E3F898A1157850F48A5E0F299DD9078866AC4AC771A7E
ECE3275C26835080FD2AC78DE88BF65298A8EB4181F1646B5867D0EA3446F4FA
176517141B75FA51F69D54478E279EC2855938CB532FC260FEF5CF3FE05F4F6B
1A6AC463C1D1A24E7B41EBAD57574D43E06E13690F831AC63F570D466C8DE97C
2E08CC01056475E95FB467E2F3B08917792C1DAFD35FDA10C0E14D125C730ADC
BACC2CBB9BCBB0BB982F75ACF33109F8AE7ADE4954D0B1E1802506DBDA73CFA3
DEC72E83650F240B54E88E51C065039ED16C5B958CF632FAC74FB900E04B0B13
B26BFA8A80D5663FAC4A5C3CC6895C0717E2271C6A3F722B2F6C2CCB04097EAF
EF211683EB8F6FF2306B741C9455B48094D2958B832B76458887F0FD9D971D2C
75AAA237EFCFBE0F14F797E71B0E19D074858D2BB30FEDEF6C34FAC40779F603
770BA127BD4B9E4F5EC52314B25837FD118062685FAF4391CC91AC0ABAE56089
30E599D101B7ECAFC159AC2335D6DFEDAAD93A074010C5626DD9470582E82C12
2DAC32220AEE7C75A5BAC24E9E43AD56BA6B5B915CA1A908C4180B7DDB99E3AF
5C45072D5FDE12DD81276D7304AFF3059366F293191CE257782F236FC2299F6C
60070DD031F172CB2FAA0C0BFDAD40BD3AE7D647B0FFC9298FF9481A19CA03EB
E2F1EEE59A3D6E3FC23B65AED24295DFD94966CBFB46E98286E8AB5BBCC5A8C4
31D8D7BB6D38C459ED7811962AD08A130D7781F378AEA20293910A7716341DA6
4093C33CE11E30603EAD00851CC85FB116890A7C58F795071033711947B65B0C
07BB7FE129E446F1A58F097CC13CA9BC695F782ADBE50737CE43B15AEE7EBCB9
0CE9D7EB1913D307114496116FF0087A48789461E310DE9062984F6951B5AA2E
BC98536501922114CBB2D9698493EEFA925E555E776D6916E68159716FC183FB
83834CA958EF2A4210A873E6F7DF8F113E86D87F7B364763BBA1AA81F9D7B871
D7EAAFDE0578B3E819F2D472E963C4FB539A61127D80FD783E271DBEDD8994F8
A2E9F96F4F81D178EDFD36B63A9E05D8F4BD13318C16396253CDCB9E1EE7A887
8F02E0B498DE9C1A5F110347B7B612146B59530538023BDA6569691729EA004A
3D96F0FBB300F40752DDCE278F26B5D50F9C8BBDC7B3D5D144869BE59F0BE9FB
57853D65DB474E4CEB98EAAAE80FEA3557FC29E982F4E43B182BD85FD6FF9604
20E3B5F8A1C120887EEDD7CEC677E95307847599B02E5AF54BE91F662979D0BE
A1CC2205A8493A22D252AEBA66664B2A0FA2AD5C2BFDC446E8217D3E5D67616F
A9C8D25588F1689221B896E4663DCB2823847EA18AEC15EB3464CD20830192E9
FA76A8D8C8454C7E9ABF6C0F725BC64477D228181C86BA782F4FE02493A70F60
73CE5AC25BF5C0579654DB07E4ACEA3666110AE5DED90584F99E14B24810C5DF
7394EE947676E459D57DCBB3829ECEFC74DC1A1B3482A99DC90EB52844D07B8D
4D86246B30916CF5B9EB30CF2688AD5470018A3F2D47875FBB75E16CFFEB450C
B8BC91FFBE6C83D561EA7819C508DE4AE8DFA21E23DB7E05FECB7CBC4A049B24
336687838F532359D6FBC18512610FC852B07E15D4B247573263395579F2B2D3
3E0A136C429A9D806C2CF8AB15954BFF59B4AE356D1DB3175DDC2A6AFD06EEE9
950911F36A10ADD8ABFBA9D53C42A690A48B179E6725265A12AB4D9865210714
AD7EF694588DD4594813371CF6DF55FC8BCE3B9F209F7A66F4CC713EC85C44E2
C692AAC42C9E5003AA9AC548FF0AC943ED9E898E52F2294B3AF6C494A1A62A0A
6F8E820E383A2F9A9BE2FFB3AFF49BBE499A6E4A6D986438CC0F8950392B6CE6
1423914058FCDDBE245DEBC2441DF1AA6A52716A7EF812A28813BA8D3D655ED2
66551C59852C1BCDFAEE9FCA1B8B7B45FBB5A049FC399C46C1426F4FF72A744B
8EED9375BA41440D24BE8D533BC804C1C8059928ABE24544F41569DAEB218F1A
90A339268479552A5D4F025C0446A986C64DFFC2C0C909AC2835EF3FAF19B53E
44F7EEB341005187115312A76DCABF4133E260320CB39E191970C0F0E81DBEF7
772D6C5F077DE5916A5E4571236CB05E25C0B681EE2902AF18783CA81177E26C
F828FED0D16B16987D62B6E83BF9B59F90EC4E790133AA578C8AF018B06D7B9F
5E162C7BC6381459BB3BD8E8BD8CDF61FEF2585E482EE3E3235E4B3C55CB96C5
D792E2DDFD91D5D62FEA685E885923620FAA16910AA9EB967D0B382CC9929D8D
11C794E55DEC8F51B5D7BC7DD0F437F1C1A89AFCBF166B5E882C1009A9DB4ED1
9128C657C8098ED5BB7691BBF8C1F6EBA75C1C9C1670B8A568F69091BF0FBC9A
D619AF7C314419A4FD057F51ADDF7DC9BEC731AD6040FD9B804FA147488D0E30
F8841589FE146D0525DF5FB31C974FC3B57F01E1D7A2A2E477EFB20457C17812
98694BCB0A51F6AAD0A5B019A8F4C210A4EF832E7D6DF3E913A142458A406870
B3A796EDAB7569B0D96F4665D013427D282B072CFF5FACF67B4ADA7A8FF35840
A4FE3D981216B1214415D55F0490CC2304501060CD4B29E20116F74FEB99A1CC
BD511DF8BC21284CBB01E5147CF95A00E8E775BB357487584644F975CC568F47
3DBDE6278D74ECB3172F5438402E9D77EACBBE3D271C3DD27C28F754521E715B
EF18A179D64952A6D39CFFDBA38C11C7238C738370C48C50E025B66055E56D4A
8FB3ECB4BE8FB8D21D943D3328065A91592BF5454FE871CF4302F1550F56B682
1344308331EBB7B2E684B3B6C374B061AC0CEDB050AFEBD734238E9DDC831883
C93110751B5F8637CF00C7C14D8D087E4AB1D815951E4BEA2690A552606F1EB8
A796E8FA21BB9E5CF8DBBD8D831A0B996FA2E67F9064EC921830EE707FFBD444
DF0A703A999B75EB8351EA2396AE35A6BA0B59619C35B4D329A8522B1EE90448
387DBB0912FED5852BA7AA362087601A47FF693A1CC34AC367036829996120FB
18D883F38EF4131EADDE2C756C2DF9F395FD83FAE697F3A69B0A0D171444B807
727C458C55F973274598E7624305A0F7EBBED6B1E29CDB9B8ED28CF387644D49
A2010C5158CE82BD52FE87C5035DFD9425EEF795DD0B09D4B1C7EA0C98434FAE
393859A98FC0B3EA3A0CAE001DFDA94760FF7862337BB4A2C3A8C8803E49B607
12658E7EDB16D9BEB4252D67C718C2A4595075C1818F6A1EE734956DBFDB57FE
6275D1873E08F3DE5886EACBFF2A132DE63FCE4B2955A9C7950E7043D7750667
94A2DA0D72B3D7E787DD83DBED95F86B97E1E9D80D9E991753E1723983D4DE05
CB5C6CE7C221A2038461896FF0EBC22B776FFC66AFB8F4EE72F16F4A83FD3B6F
7C02C8ED058B4AA23DB4E4F368D5CD221D0EA7E1022CA012CE9760152330C73A
4BCA1399C9CD243FA385624CD426256168309F04A2D2352DE559933C8B4E514D
B0410B1E140095EBEA1B13933221F95DE894A8F0FB390C4649872B940E5AB4EA
A493F99CE2D3DFF0982549271B429927D4775BEB5A12F660844638B9EC5214EB
8B4F3B900C34193E943A90C06ED8D9799646156E1491E5521FC8B9CD9158D756
8229D15D0FFA4E22B5A0CB4FC82C4BB848D07EDE0C11344EB69D0A6F329CF352
2C81BABB8C9BED90F772BF2077526A35E9F2844D17BBDC178AFFB0DEB4493D2B
EED930887D30C9C040B1498E7EAF30501BB2121A750312941839C81400086942
7242D783CF8D51DF73DDD9FE1950DABD3C95E57686BFE5C55E13AC8837A6492B
618815B78E78BA5F281755B0743FBB60F2952D9041F7F6EEDAD2563E236C584A
BD904D7018A00F6017ADF508BF63F64AC406DF45C6C9B90489846E9685287879
2D64A7BEA283E698CD7D8B2DF6A3B6681C63BCFC14135382469123169E3DAFF4
AFDBBBDF75C60D2808EBAD09A641D93EE38D274EBF132E2F1C61F31242729A9E
BE877B546996C6520013AB058EA55E58F59C374DC6AD4AA8B125F40114881ECF
0A7ABE0F5DFBB48002662AF720242D74012508F26D394925F71065BCB57954C4
CB5A9A42C6CF6EA0D80B6A99ACDA48E5ED3A2BA43BA9064D59C171AE87BB22E4
707510F8EF3AAB303ACA4121E9C92051578244155F5D47FDBC558AB5F9CB60A2
B2B7D3726D4D06CAA2CB08BE16E35F416B79718F7C53E34C5057880AB32CF159
42D3673538F51A2646DB93A34C60583DA3CCDBFF4F315D1FBEF4A12AAB726603
8BD7CF8F237D8E9B7D4AB72F83176580F0FE60F48D70FB98C3ED8305C7906E17
50DC71A816B0D510008080A1C3DEFB220D402F3CAFC75D5A1D09F5985687685D
0DEB29A821CB8D0CF788A0F4A87C061D56CE72CB67E59EAE0D87FE8400FACF1F
3E0B024C5FFE6777D6E374B40FC2ADE40888C5DC808B622836891157769C8BEA
7D15C98753C1756AD232C556098B581BBE5842E94DBE3F911FD8DCC3FDBC30EA
F5F569682BFD37A002015A3CA98EDB8D21E8DCCEEB631E12C5B4AE0BC89376D1
7FC6E1CB89FF20F37A9D63DB60BD05648FFECAF31DC72E407853D1AA87FB74FC
58F85457165718FD85433B176D766529787C9576401822E81FBC89D171F58F1E
998F6F6425EAF3DDC27C2DA43A8176620D91D69F2D697F3AC5ADE2961EFCBEB6
37D3149829E56DF297EB4CF762927CFCCCD8863441581E252BDCBB85F9DDC910
4B5B07A82692EA39B64335B1371DC4203744C86A1FE55F5369B12A0585133196
1D8337208BBBBE8FBCA23F602F13B2F4140A0A7DE0827FA8020AF17A438014B5
902A55EE220152C90348CF59095C72D038B3D9F60F63119EC9FA765E6E318CA3
DBEB209BAE4A346B1573B9F02724722B9B749AFD87E637298E20865B23E8DC25
0FEA26AAA18C12EBEB518B524263D2C9A297F3D2EA576DC9E9AB838A0D184D14
E1E112167E7E9A41383D1E637D810E78678F9166FC7E7F6EC4C44D1218401AF3
36B5C26808EED272D50566ACA940200C2A29C34AE6255BC79B73AE14B980A7C3
576AF66C40AD69A0B5EF27684A63D7FB96EA45D8959C5D6BC64273DB8EA36A61
BB73ADE94DFF249763950EC9D477EF37462098578BCD5050EB47A9F4313EDADA
4845CD6C7649564A05519BB0C8190FA1FA8C8A21B412B32B89A8724FCAEED38C
8B1BBC8666F4AB0353218B1EF2EF6FA0945D460346748DF6F2348D53974F36F0
573D00544F9FD5CD4B75CE8BC658734CB89DDB09053B640D5611AE18FD60FFCD
A7ADBF086EA835F99AE0AE421D0B583CE26F2B3E4341BFDD5DED06932D5C8B83
FF8F16ED7860E2AC635184580D8132CCA0AF6111583071A340C757238502B22A
BDA32D12B10ED201A9F192758B996B3B8750FCABE43134590D81873D531DF4FB
838434FC4B7205820501EA10F1F8FAC9AAB39662E6D137560A8363F8D0B481C1
616FBE5FCE6EDADB8A3512329E3473F6983DF6D128262C61AEFB08395942723F
B853550238DCB92FBB00A1B5B355199C17D9C926280C366E3242D2030B576F5B
7898ADD525D581ABB8022E13C0E2E4FB3051B3684E4A333DACB4F23F6BA62413
A6D32AE3655EE53594884ABCD94615C8C45631BF269CC8B89441B674EC0697CB
2FFCE8880D6E88FA8F5B9A516ACA5FB0217CEF8518BFCBA0E1F92B097AB9E1FE
029A8B85F8063CEC788CAAD96571272F2417961D71CC4D1A11BEF388D2B7B077
697FC8F45135A52671A60B1C9951D8A457A4F1CB344477D7A651613279A27B5F
A35C5E30A79F2EF46AF98FF43B1D23ED27CF383E1D949E2E806F56EE5F2956C6
60D58021CDA39295E49FEFFA417DE903CEA643F8ECBE4C52A10C03486C11590A
041A3D43118ED30D3D9000A6AA1F71D6CC6FF0552DE54FAD85C8563C2D5E37C2
92467A90463679A22F07BD45ABA49269C8F547DCD6E7B147D53DB0D8DB88F2B6
25672774B9DE40B505BBA69415BF46169186702A6828A3FB6014FE4EF5676585
5524D5E38F1D85396E7C5D3D5F65B030D96696E6B035E3D0FA6ED6AFAF2E7CD8
1AED5C8C156F496E90AAD8D12B27CD9A0FF9388DC5E45F3BB7BCEF7FB672D76A
531AF2304FF9DD076DDD17E49F3FD8A4278774EF42F36DB75065E8DFA797AEB6
B3D26C3BE81355AF112486CDF5154ECE9458FED3291E6FA8684619451A3D0928
F822846260B9E135F2D1F9DB9473701FB1941A761454F981D212A0F30B03983C
AC63F64DBB5F3770C602E6DDD5BEE6EA025A114951CE9D70C78EC698ADCF1394
7A866A8ACE63BB825551DE199400DB4E7D4AB056669452D995D8DD5BFBE8F5A6
FF5053D505D1698DB2175A63130FCDF172B811315B95F1620CFF75BDFD5B8B63
6585D62441FCD0648C2C588E1A02F0EE31E786B24EFF373C9DAC05DD3217C878
8EAFFCF4E6C0140240A0B3FF8730962B19E76A7776F3E220C994D8AA12E1FDF5
D6FF6726DD3D075DCD056F028BCCBDD5F0AAB6C7A4A26946E9BD79B50A9825D7
1AECDA52F1DE2CBBB2F3B2D3F3B7005E9F83E783452A7DD1F046B4F20C79A703
8E473F435DCC8DFED5B9071ACAB3D2F0D0D1FE3262696586A92E10FB3E8D7353
FBAFA30876ABAAF89F14D3B913E320F9F732DF9D07CDD357005BC7572B9FFDD5
4BDD8C7F84484031FFFC0AE8932A6453D4D1203F8C21D9CC04E187BE53F8FED4
F33633BA03A5B542D1BE7F78CDBCE9F4F539AB466232DD51BDE9E85544E74C71
15B5D8DF47C67E367D2376B73CE5E992441A5882030B5371C2FA2214F61F7C12
4EB9A5AAFB7FB94F98DE796F440720BE08EE3F855A597B65071E7946D81AAB3F
D06444FA5C990EF446A30009A7DEBE36A84A81896D791BE6B07E1C5BB164A336
1765B4356C4E2C8E6EDA26F384740B68AD9FEF4DDB7A1169F5A96C3FD32EB205
561CA8495C2305C7DA7391F7F20453206FC27D3F8F03556B04D3058151285328
89B531170C4B10ECD0C976C5C57C1A5E6D1FF41C00075B1FED387D98CF7EB113
74CF17ED94BDCD8A5E225D29D4532B042E06EF181E6DA2E87ACAA46B2ECFF8E4
01E4DE643F42A229ED49D981E5BB9CAEEB8D2DA4B491536CEF9D1E9F4FD8C000
3E6F232B9C29ED20A96E8F4430344988EB94048545A761892E4EC316366FD9AB
35CEFAE60FC97C6B9EF843CD60CE8C6829DB25B85BFD07F9BCA9D7C412F53575
5FFA6B31BCEC39D7771548F2DA3B490834E7B4CECD9293A5DD581A366F684DBD
F2EB65869969F265341938B2C7D6B979342B322DE808668DF5ABB0728C7DDE3A
5E9F665AF8A5A7AB27ACA281E4E34420D1FDC40E678BC42FB3835475F0982242
0233128BDB6370FA61522B51536AD69F860DA406BED287DE8A6A3C971A03327F
EC53F1F43913282D7DD34E26931ABF77E16D1B0387843CD39A2AF0EC9B516772
5E2685F1F06DBBFE0A4A8A49285594C95F7E8C5822996DB8AD4599C62078A6A0
650913BAAB932E8505934C93832E6DB283E949A747F2B0EBCB16B82465560BD2
55F425959088EDA3A1565DAD1C08E402BD6CF4EC99EC3CF15486218BBA826D08
81E6FB959DCBA34B5F5BEA5D456E4DDA33CC358BA38573B99A02ABE929131575
2D5A8AC1C4119B6475EFF13E12A8EDA3E0ACC243B1073280AAC1C1B2549CD557
CF4DE95399C560D65DD1CD2ECB3FC3588A500AE15B9882BDC14A6567C19ABE55
F8186365B30BEC82610797BDAFFE1E626FCD53EB2EB03400B20F87FAD8A94A35
ED5CC53EE38F810C494CDE233ED8AC7E692C73443AE9B7678F96A4B3894FEA6D
990549345DBD2BFA8C89C793DA7E638388619EBAB9C62CB51FA723C5F229AE2C
09974B99C3A0363AA5CAE125EF0F3B74E35560D0B231205AF784DA0937C74083
746CA9A8557DFC573A22824FB7F6C1FD5174F5EC78D1B2379918C8034B08588B
92D8C9B9D63AB7EEDDA82BEDB23912C45C282783F677E288680B06372211F15B
3ED73705851BBD2AD9D78C61E257ED1A79961C8A15842664D3F1345CD967A08A
9C892B1339C0C1ED728808427CE96611D1F832FA6DB2B87A9EA0936151A76B2D
60E7A7AD55991FE366E1D0CBAEAC7DC7463CE5C32B054A731210DF35A32EB4B6
13956533440D6F4166BE43785529DA66B4E92420257742777F60A996D34837B5
A08E55E6319BE14383542B9F6500CD2EB472035AAC02B40590A2A6EE2542B885
DDD5652727A71F930DD572CD605F5E64FCB19D176C24DBEDD2808DB3D1E8F514
2F182D1D02504BED42472B74E8F6E1B541E44105DBFCD5E9907E38EB02257D7F
32DDC1190AF61B7142FD2DCA1314503CFFFCE5CCF041A02877B76050B070FD54
163C94B93A4C903A65E8C8A0E10F842B11A789F73ADDE81B0A41EBD0CC6D71A2
E4B5528296D8827B8E9EAC20E5DA8ABA2868658526B74727FCB164F21405F989
CF11F66105F277E5B6745FF4A5CB0EE90FA42E1529406CDFFE24BBE088A6DF3E
E50851FEEA89C68E3509FF99EA8958F60B40D0CAF340B83A047FE949BF24C35C
73E756B55B81368A8E087D65343CA790BAF08FF13A5A6B687B37F0684DB47B80
5E2F60779FF767AF2CFFAAA7F2FB1C3EF9D85D052DC85A50080668D9F648ACE5
6F31BE505D1D753806FD5C98BBE16C2686677D05B9AF45EC4441ACDBB7A67363
7429CB45EB3ECFF73283D27F5A78D48AD4A103B9F6640C5758C76C30F308A35B
CA35605815E0FFF7B82A7C3CC82AEDDEF7FBA2546ACAFD43498D6FF77B12E2A0
A7EC414E0B3A1A6C53FC6B951CE935ABC955B8194EE5FD8C8CF539137A54C6C7
87287755650CAF0760C2A10ECDE3811089AFF3E608D224AAB01DCAE309E0AFC3
D9C9CE30362F178F311A8E08E445E0EDA3179A4A5613CC4C7DAD315CAA69F4DB
314DC26ED5B60252DD152E0A10FDA0B5ACA941642067E8F402A0813FD842EE49
8596FEF1DB7D2262EC7AF31ACAC176D11DEB3601A993B66419584DC628286CB4
EB6CA0D55AD7C5A20198F18CEEDED8D6DD8F6897511B2022AE9612796DEB9138
059A4C12D3FC8CA923049847881947ECEBAE94FA366C4D482154A3C59A442E4D
291FC422B5D269C60A513AFBDEDFC1AE74E100425C59964A706B659EBD6AD38A
DBA4247D40287EC80D7AE9249B2FC9743322506B1BBE7BC8CB78B21AD252D73F
E9678ACA19ABFFCD5B59A380CC4084CF47BACF0F9DA6FEDF3B2BE1E54BB8EFB7
75F1BCE8B6B9B0696238FABC51A900ABB51A058888867F82BA02EEA5CAF47A00
8E5CE8183A1B00377476E6A9D87F9685ED49D86A5DC170CFC64E60986F5F5A6A
5DB1C5BD9D255C71D033EB88716B51555E8577D0239698FA963D8E4C13C2C867
45D9A1BF70E39BBAB45A9653B24873E7E9DEF64D7D71D17D9AFAD07338208958
426E81053D0158097CDB6E280AAE05ADC8F4EB97976EF328D6E8C7F6ED33A0C7
77A8F0CFD48B6720D556E3AAE3C6CD20FC30E38AAE46D5DD4BFA164F3E8ABC36
8A1C294852CF5A9E57B5A52F969567980AD5B38E81DF6B37608043C88E4066CE
A814469DA699F2927EA35B8E19688E347F3F9356111575D04F9AABBE7937E205
2A9E884984EC754AD5FFA2A1DAA2649DE946040CC252B957DFC1A97D522C07B0
F972DB969DB777E738AE53445277C899FE86E54B8BDB1490AC76FF84E5C3F860
15408E16E0C392019E33F268CC072F36EF1233EE9A7EF1487F54EB23A1CE0AB8
CB768EDF04DBF511A3B94AB57570D9D15D84CF9F0FA89B2FF059336B57B9B130
383972C73A51C4843802081665BFCDF223FD7B83117E1BE983E8609E02E01CE3
4455B620D37893BFB424316E1AA4B38746A4ACA9B0683F0B250FCEEF52B4AB5A
78768495F4A0B56EE8FD852899BF5BEC35E6FE57C59ED52DF91DF9A97F17108D
4EA3AAD85DB2D27A17455260973FDF394D385E81DCFC02B7C16BF86DE4D85309
3DA735DB67694569E8A3115B94FFCF3EB6DB7A470EB9ED9E667094025A81C470
D33021157B3DDD236884AAD6751AA3C570FE0E4F0239E05BF6E98C9C535DFF65
AA47D59BDE98DFF72C676430AB9A60F28F0B71E2BEA074ECDC73B19566AB4384
7A7DBBB831670BE37943BCA8EDBFB3CC9869F5BEFFCB86768D0C654D71C2BE37
60B99AE719923C6AE3C993B61EB38EF3A1DD23AF9FF4CC4CF3281A312EEEF077
C86C3D5EA3A3A506531B85DA3B5AFEB79E547AEEE4E8F393CCCC75E0E097FA96
B002111524616DDC2B199CF790ED6262043A642D66A156273442FA852F66E1E2
044AEE7A98C72AA0DF2D07B1BE68985818B87ECCE3A0213E77E529C2C074B174
6251231166E217CC46FE08016C3DC5161B74DE04DA7417CB2002C8095E698E69
12C73DA5562FCE42FFD7395CA45A57FC8F6C02E213E218294D1063180597B8C4
27C9B174E74B0EDF20E5332262C12D8255314897422139DD5CB532A6C8621512
1DCF5B0716611CCEFD11F5C5F00FCEA0F9B8BFAF1BCF595125912F12542EFDA8
97594095146E07E9006375460A88979A0D9076C6EB39D3A67A23F7BA355F810D
CC89D66C13F15AB53EBCDB7C6B306423760F8866D419FEE54E891A7F6AE3F09D
899B7393326426FBC626EE1863217D77C9C3A6EE75CA602C116FDA8287229772
2DA7B6FA0924F7D313A331883EB9E88439399D0C352746EE80A1F8F23D89F6FC
CA4B460B87BE11094251FD0AB83BA6DEEFFD99F5A0DA32C159781DDB076B90AC
A2701EC8BAB7A529DFECA58FC9D787CBAA060178004E4F9993233ED1E46AFA67
267429871BBF6CCBEF41837175112C9C04AE30EB43430F3898F09FCAC9F33442
6B3EC19225415B084F754454ACBF44DCF4961F68DBB0644BD385CB351067FCFB
1BACE58B9B77A229FD37C482D58E1AD21E59308A1B71E59EBF508652959BCAA1
813115C18BADBD3501646D2BD05364FE63E80770AFB3F59436883853B0BC5BE9
130F2139796DBE2A5EF4DF6190E86C914CE9D9FFFD31AF49688B64F1A9770860
BA5070EB9F8D219AC9FB6BF5EC41AFDEF166A42FF0F4C9168A01276FD3106984
9D163416773FC4A1A21871B08930B66B178086DA173366BD981D74AB83DA2C4A
735DE114D422839B53DA78FA06E414432C51096DD5762189E8BC405E9B5CCE6F
FD54A41EF225416BAEC7C61A9DD8A587C8E323CEF9004ECC85F78DC9DFECB4DD
48D0EF0AD57703168178C816891D7692DC67B9E5477BC58697D833124BDF93D6
F92BD0D9A077D1228E9B5921A37FB497444E362D5F51DA4135558C462760A787
C15C919E323D047B9FCD998074168D3982826BFE34EB7384028FF3A6EA2A7DAC
748B1928B439DFF2C28A2358798A6F92501B47F2000005ECA0CC9E84FE978C4A
EAAE27AEFD7E2FC7C9F0ED1CBA4E1921FE47804260DFC59FC2343CC5E6653619
DC3870D73B12AE3E5945D1CAC2CB3CC9AE7B07A5FB42303EA6661F56E10923E3
69484A4945CE4F1335DE6957BAF55B076E157727BB039CDCC08F4DBD4EE0CC69
2CFC295C71A33646DA8A348122026E47D689E09722F39F2EADE96373A994FBB1
5A02E88CA3F9EEC48F654EDAEE73792356335E31D9D6954DB7EAB3612D00780D
FD068434A47A4B10EC696277B080482AF39BE7D4DC65828BF449E4774D5E803C
838417586E656D4B8FE9A6CF2ADE83604775ABE3371D638215F349EA2F2FF097
239C1ADF0CD8E6C14FC251F599B83AC2AE2F65C516EEBEF58995DF4FA274125F
6C18580F8A147920F7735BE37D64F2473B3209BA5935B033B1B5B6FB9259764A
87E8BE272AEDD9E8BCFC67C2C33B0C64B100B8F5663A8F97AE8DC81463B676C9
D75E4B2743BDC278BC998C0F2DAE57385DF265D20A627107C0D1927FB2DF8060
67307A2B19BF1F6FE6764419D6024C02E192F43E92196F0B51C290191032BFEC
66C0F3B83D5762C93F803B72B917029CF27868F7B1B6EA5370234B870EB6CF53
D3D188D83A0DD2EDD009640E21AAD3260E3DAA292E2B18451A44CAA44ADA6475
D80A30C45B2800CA87CD890D484552DB75E6E45AD86F2166CE54C32591DAFB98
1F7808C0E7B96C757583A964590C92A4C11877712BE5DE3BCCDC48CD4B1291CD
56879C4BDC972D4BA3F95A52459709268F2A54025572FCD9F64D2A2A053680D9
5A094415358CA9BAFB89AFBEF2079EE97EAD7EBB559B5C4355DCA4A6667BB22C
849A708D0BC79601763C5D86F33B17954F742701550591C4D8A400B49D8A4327
90D52818740CF734F30CFC29E4274FEF54606F169D93622D1E33DFD3505E224A
60D88FEE0EA2EB2F89771154BCEF44C26AA7F5FFC1BFFAA5C5B0E93B52535E88
008C252BD6881C7481C6784169F6A72B24DAD05062206AED4862B895ED447357
9AB4EED1D629B477018D54F5C0B589CB59F78B6F2C46B77A7D2E194489BB4C91
12BE795C0076987399B326D1AA28A2A450C90A63CB7E3544E173916E5408013A
DD16D010319F17E1AD7DC695DAAF89371004CE58B10110FDC0ECB589636BADE0
5E995B44CB5FF0B5FCF56159DB5B58CAB5DC6A6A4651598281B556D4798BF604
7DACEE3E69AC876F138180B7A8CEE23CC45B2D93E4CAA076CE028B0E0CE0A232
FCD1902C402C6348E819BE3BEA451D8BD264F32CF6A7226ED3EA8000978D02FB
A0FA8D9313DCB87DC74A23A12B46E7BDB75C2580C489FE55335242D2754D44E8
19F2D472E963C4FEEE5E332849ECE66F8102383F02F7401C3481B529E3E0E33E
0A6E6B17D0F46FDC29D08D6C4ABE236B1D63D2D666727566D514C8ECE12194E6
E667BC3DE1A3614F44C371F18679A8564A8EC6D2C4EEACD625593F0BDB87F98E
B614C9622867F0487F4D0597962B0A3DD262996CAC1EF75B190764ADFF927BB5
F56AD3A16178E4D728A11025DD90923097F482645332FED6061F02D92F8A9FD3
9E380C4C96936D379A9538BAD834890BD2BEE3485813CA8009442B816D69F60A
456BBB379759AD84FAD221182EBFF49787BD684127ADC0615826D832F22C5CC7
5071683171BFAB13D3B2F8752E36A8EA33F54122CA39339BF3DA423C82A9EF28
E83FDE0C3C995E7B4F90F0B2C4A51816641EDE7B07C21A7F5220B9B1F3B8204E
373708B5DFD0F47EA5224C620812A57C1BBD6C2FBAE809C8AA48266BB6543E35
B860910C1F233806ED514EF26C20EAEDC4579F70884A25D67A0FEDF0AEA5E75F
FAC64C66ECADA8DE36C332A8F8342F144711D41AB57ABEEE7C3B710DFA891DCB
1F5170C93BC5CCA11A9A044BBF5578A361F8A76E4D6BCBAF4D8D22068A0A7C2D
19B84AB4769A0AED35C6A11FDCBEA69278CB0641CE6C1BD72F321419F9DC7144
AAD8CD1F27F3CF378573D3DCFF2CB0F7690FEF079C6234A8AED2E4DAC8905E58
D5F7BDDDB6B9DDBA80D96AC78CD3A70404A3BB6DE1F6A524018563B3210E39DB
CA1ED1C0FC590E730BD359A27ED1F3C7E1EAC098BE824C4A90A32B5D1D616A9E
E35C000D9F479DC22BD946B1854B4B61DD34FCAEE19D0A4570C96396C3E49E71
D086CB98E2D4A3C8003FBF9F8CA8C0EC8B0E3E69D117E9D257421DAC67295BBC
1A9A2021B064295C22677DCCA7E2BA37D6DE0462CA73D02FBE832FF1D45F6BCE
B846926A8C68084D62D6FD6E0F9704235CDB62D70D9A99A6BC8704890465AF9F
BA80F0E24128E0842936C979D896790A0AE5B1CD9EB9EDD7BA1961B24DF91F07
C1B8F94806104A1B4DB57D00B2F80B71A55139C9C0BD9E2F875211FFE26B9C51
586FA9F8DD27F358E96F126663A09E18758B25AA2BEEEE097975F7A26B886893
7A56370B86F49D6101AF61D277BBB4F4DBED59F9FE4C7EE70A2F63A8D9558676
A36E2B338FD613E83E41A8EFAF2C5182A883BD1D1541E27EEB978A8A1AC8EFCE
64C0946EB7EECDF919C1AE5E3AC3E16DF531CE3B4A8C937799A38C850C65296D
A19BD7C7692D9804D9FB5FEB23652AE09C79E0BC6242288D6B9B2E85851CBA75
91DB14BECB0403F85183B509B4419CF6EDA32175B8A78CDC5F39CAFE744D24C0
EDAD5C788B713DF61AC86F0A4BB8D2CD26437DF74D91D29E00D60F314419CE32
19B202C71C59C4697A9D480961838094ABC74380D1C91033CC985E81B0B8C895
F6C324AFF23ED56749F21CE313BD5A8799C17044CC67339B839947E1E27B834F
16A1C663CAFE3827BF4AC03BF9DAD696A79454BCE8D38B60D5A62EE256644BE0
DA1B76AAEEBC6B7B00246939C0E4CFDC8930D2AB233ADF4809DC29C4EFF72673
589F01F13073EB3586AC5D570493A852A918398B6F8476736B9842CF57F23362
67779B69A4C632F7C17B4EF31863F2F8D2EC27B54DDDDB73CD3BAFF397113286
E875773BB43D2C30A95318AE845CCF5EC97CB96B0E3446B6C814E2F47D48B84F
12297AF2D267279A477BC20E25E6680A8084D515C0D9BC826E7C5C3C9127098C
9079A4AED2209E134935611F7FE3871F6522759765385A776FC49A070DE3EB7B
C29FEF3CAD66097167747246E94F2E34F458FCF5A0B6A30BC79BFEF938F53358
C1D7CDE562DEAF62CE9B20561D9B40FB9013523830D3C114A2308E1D9FAE99E5
A29480F71E13B808FAE2DA11A97BCB7E1A4FAF37E62D7C93DA4D83FE32F7EF5B
4A5F1CA9CD67F3BF4F3FC52E1638EBF0AB1F2B5C97A5E4D6127212AB225F2857
D13908120DE30499809A443C00042C980F3E9220AB58087444B417BD8188341D
9FB3A53D2C70F89E9C923D86E33BA7D16BE27219B4318EBEEAAB086CC3D8AD98
E12497D397977DCE3D1B6B6D558DB896A370A8BB4828142BE48DFC596A24E823
2C46B911B6536582EF3E4CBA867497011B7D56754C289D75CA672FBB55C6B6E4
F9E01A652723306BCCF71E45121C5DD24892C6021628068B2C23380A3492F87E
469A8D4A0B9D7C5926D1B11CC5D60994A907C675C287908E15506F75038C2CCE
67425AF9F7E513F2A3796F455CFF0802AF9779F2B71E984F953BDA3857CBAABF
B5DCC99A3F8AFCA0618B88FBB0FC8853E178A79E3597D99FFC9FC266DE73E64C
B1271CA103DE22E11564FD558B1347F3E0615E2EF82715CCCA84706585E9EA02
285BAC3D57585AB9926DBF2CDC78BD724DEDA7987CCBDF520FF0C869975DADE5
8C1A864079C4165CBEE87D4D783CB3582C1C0F50DA024808847EA5D42F8240A0
1AC41CD2E9458F17B23F94BC32FB138AF6327A00722463B8DA2000289D4A7C2A
61D1B18464FF2154CC2E3D0B50D1F797DAA6907D92D47E1ADAF95927B7FB804C
E88BCB14B17A4D6BE5EB08B7FB1D98880B9AA909268B257257EAD4F4F59BE1AD
9366701C81290E44A627017973B3B0C457342FA3D9059F52AD973CB26B129226
5CC674F0B4FDF3089DA1581C4E1D5BF159AADA3275AC54DE0BBC64B0EB201175
B6E810854AEDCA796C3AA750BE6333FD71A37BA14A1ACD6304B2D52A54D941F8
14C61BD23A567BDFD3515764B130628DC19B2CAA4CDE3B1371305AB9DE7B54ED
A49000C283DAF19CCF88634833F3A62F55D62CB5DBEE853071B8B14A6550AA38
2A75AD0CF739EF1B49B299D792373E4B88789736CFBAF1AC7F16BB81496BCCDA
6CF57692F05D4AA381B8581DF3F8D699B598D5A5B7ECB4E665E195D1125B9197
556BC983E5D510BB9CE11509984170902F8FF59ADF3E6643F6C6BC93D672221B
F7F480BE6119C6EB1AF9AD48562F5DFB684C1A690357858B08678288976AC438
3017950D23BDA7FC82E117C2F67D517FFE020F6C7D3316FF4075413649FA6F9E
C564E79E75D134F3F90B2E0D68F46803131603EF1AD7BB91A5A959BD69B14EDE
6AAFB6ABA0A3EB05A9E2A6ACCDF4357FA56BECFF82024F043B8A1F226BDB8446
39C5C1AAB16BE0AD0ABDCE6255E4C48B23738CB884C5FAF9475A2F027E8D2931
68E128A772FA49F6418984694191449938DF63E04B52D143FFDB4F6DED92C9AD
550839867D62E848D7222CC016DA432D8B0BDFF7DB9D14380875916EF80303AA
950594FDF32D245BB5E733803EFBD49662E3C1266E8A0EE7130E81980FF85928
A588A98A38F0D9560C010A1363F7225D55918F3C5B71EBB8954C3A90EE480FC8
546D26886B3023B4226F274BC654930F3231D7029D2BB0C1010D0C2E53BD81CC
F5D3B8EAB0D257952F4C1DA5D262F53AB473A867D896BA7F9A239A1AD7F71023
02812D793209022742E21B263A0DA920A766356F4903DDC93AC6B05EF0F62616
D9CAAC22D5454B2C1EB6CEA84C08AB85EF2F7E4D217C5252A660015A912DA76C
0776D380F8D2453B23B90BF0ABCD09C151AEEF9AC624CA470DC310DC2D89B296
000D94C7FCD7401B82E039DD642FAB80C7E01901EA5946600064DABABED92DC0
366C2AC39C52B327C9C81575A9EA07598A9101A5A084A9B983CB1C83278B36E0
10F068B5ACF732A123DC6B4E50C5FB8E75EA63B67D43421258F65A4197CCB678
AC28FFC359C4ECB73A3C9B5FBA1BD87E0750770213BF6188DC183302136FF6CC
18ED19925372F74BB1C7B42D4AE17CC760CCC38BC5AE6857FC7CC1124B46E931
2364823E2659A305CAD3C969EBBCB86FEBC4EA4072FEE056DA95B0CD5354D4CC
A9ED1F02E2A0FB1545C498215B3F940F256505F0D86F59C0510017CA459ABD50
E98BD6B3099A74DDA06D79BAD43B9AC1FC06451F345BD52758596AD40E704DF4
799517E58909D015C37A6F4891EC226D7528C24C63AD6B68D81DD885F6BC268E
DF5FA49D8709B1FFBD9DA628FE5E10C7A483306D6B83A7C2B5A3CEB5AE992E24
21A0C43CEEC9001ACFDE7FBB4F1108F216E7E63564A655942D6DFC8345B5B4D5
40E7AC9103B3B7F0FF5CFC2A305E49F08A25B6B242E36DAAF1DE150D2674F352
45835BD57C494DD907E1E6DCAE729D19A6F9ED2ED65CE6CD9C4339612A60F888
B1514F7CE67CB2E5ABE3D2DE1BFC9D4198E863848D5086396CC085EF36E5FF48
1D3E84C782ED11B26FE72F1535EE9B87AEB63A5F8A6AC5C3BA0E9D820F6F1CF9
CD6AE4F1BBAAA4DB2733ED9C3B8E459E6B209C8265B26A81AA3D8ABE1CFB0A9D
E45A2B2BB7C4733E6801A8D444C47FB61858775CDE9201566F7B882446FC94C6
8627C61A699982392DC76AB34B477F64833600B8B149B9B055DD697FD4457464
546DE2E032ED86CAF91BE79CD28C7DC324DB2F4709D3F3604CF6175C5CA934C1
DBCFF3AF9A2696233DBA1E8FFEDA13656C4002BB5B4D39DAA5C0E94FEF7A9480
FBA3B3EFB7C7868BA8C2224C728326ACE6F0EA0651A449EC4E1C006ADFE2CCF0
8EE40B2837B09EDB57AE7A1FA4BBD9EA92E3DDCA58F94D3D94C9C81882544686
43EEC0E9A6CC520FF3C45B5D1F4889E4A1C039D6CB6F16953BAEE179797D5517
D20678D92C7CB15ED7A62954817848165C1548740C594BBB157B9A42917B9446
6AE7987FEA9789840A5620C8DD4F4FAEADDF737EBFAA093E038467B212FD6EAD
401F43609B645C4AC9C2082FAFFBD1E84F8CE1B5008B0610610F067E13764D3B
A4C5B5C6C9E12DE337627D11DE288942FCD14F581ECEE19AA52E78A706B083C5
907FA824340E7F1C699EEC00A3752D2E88BB55C30347C75DA91779E287F63859
D68919698715267C8AEA399D38E295341A5EEE215A9235D7BE44C25DD2EFAFC0
791AF1584B86FD1D4E42D1749C64E0D05FD323718C7293FB5B326ECFBD7CBBF0
BF03BE50CD1A1C380FB5050648811A6542FC8D47DF592AE37957D0CC10C16A04
F8C4473F25A00D16C9812FF968812D505C46E419706B5D49A81E7CBBD6D1E727
668847500570848688E1D5201431F499668558FE5702CE5DB9A8B025BBB49633
57D261A57F24711369CEDDA424A96B6DE3CAEE106373BBA694D1B17966E30564
7DECDC4900DC547FB78F8AC941923BD57332FF60B84D67D7EE29108412706973
ED154848A5B4DCD01B2D5F4EACAF29DABB97CB34AAFE40771047CC9E5FD83BB2
E3145A351EC7E708A5F0399C014DF9A9BBD574296A1E3EC534C60B61F1B41490
54D0FD7C78E253AB62BB3819879C7C16328420B9A3A35BCD438E47837F3A53E9
C0A24F6D56ED9E999D4D3F29D09B315BB4C88B593A6CE96D3AF2CDDEF6EBEFF1
97DDBCF039AFC64506C1D76BB043343A39D0DAA4126EAEBA00B584F733DDC502
CD762DA43BDDE9884308AEC7E327FC6D37764DEFFF442DD886BB8C53B28EC2DA
225F83BAE18191EC6D1F3B2F795356EDB511F2F964DA16CCB6514BD1447BFE9F
267915C56E024403D5355BA42B20CC244EB6900F545078619E92DE83347D0565
C12E604D4B29EEB829B99E2DF1CD44C0024E4F360493B80052281D2E9E3E9305
30CBC6AB31A7D75B8AC8EEDDAA98F66B8D3BB8E5CC20DE804C125D97F7149F4C
3F33DCAC5FED08DC51825E3B2FC8E96CAC90369FF71A3E318FEED9B7DA339D46
6699ADA15690CFA0835E7992C35ABB0D14656FA6387D03A32EA80EB108164108
8DAA9AF1EFE41970CFBD6F34ADDC3AFDA658E4BB2923CFF35E4669FADEF9233D
9D70055538FB1A3AC7F42D1767C2A59A6B5313CE4D37F797DD4B69DB1E8B90C4
BBE8F5F6F1D2200FA129814BE883D2D4CFFA721D7D11990750232DC9C3DB6607
50770213BF6188DCE83463D97934EB7FD9BD4C44CB6F2E9797D0CD4440F79709
235A3ACC01BE3F6EA78AD3F6EF020C553C523EE0B6166840DDA4A03AB9165BA7
E78002808B3E31E7B70D77210803F8A5838FE57945146EB46BDEFE67643E4CBC
6A29995904D7FC78F584294508A53A987160E858F76C4FCA34A0868D47812B28
5C06A78206B2ACB895051FAA058464BF1A00133E5ECF0C32E639DBC98F4E442B
E31BD3391F5E57DF3DD7C25DC7C09F178BBF0848C99B6564B94A9B083849E737
19B06AE46F58A97752FBCAAC01A43591161B5B9C01616B6845D9D4835F7F315D
E6F8F66E8C07CC430D70EB815B198890C950FF7901B0F8AF5C8823A4D524A0D8
95536C8D3671A2F129C8A232B3AF40859A91F1BDDC1DA2E66241A3272ECE4446
1D9FA7060770087FF788B93655CBD1584002C92CE28CB094358543A9430B206C
248EF5DE04E9B87F87D07AACBD5202050A47BB582797635AFBAB597422DC2E2B
5202ADE986B4B00DFF04207C0D5E50634A4F346AB9A0770C242394CD61F371B3
FAE0E757B49F463EC94A8D325D3F0029A07BA8C929FB941E31198A082312D378
12DBDF4D8497A8AA6583013E0D00074C8A0B23670F429F024529514FE27664EA
96B036FDEEE0327625DD181292A2AFF76EC039203F32AFBCF50539589E411BB5
ECB4DBDED7542250B2687F865B2AF89C08AF526039C7DC2999A5D1A7DF5B8F97
3C830820AB5D8F66D86DCCF4E1601F890293F7E6E88A44D327CAD5155B168A5B
326CE207062016B5F369C71309EF5D0D94C09EFABE8CA8D7879BD3593D5570A9
4C74D0481308DA713CD652D08B1257FCA25026527B2EF907D3E19DEC4E818B2F
64AA3D78C308C290FEECB6BFDFFBCAE151C26C11D123711C6A2D19F38115D6B3
86C8099A9F21C8A88F06897BD5269E48D840AF44B95165076E6C2E239C6E13A9
C528A198B8EC8654AD69CCB5C209964A2F7ADA402E4FADB6B5ABDA37F99A52F4
10985EDFFA782EF4B04433BDD91BA70E84115929BB08D42023B94C5E0E5FB2D2
35DC9649BD8A846E6BD32FA4AE07E69C6E72F101DC5D3D2911A59836130B7ED8
D8A4426A9026833218F9AB7B88EC6C309DA609CD9BA59E3970CAE5BFEA121FB7
F55202544D200B81AABFED33CAED21222AD7E0721D9B2F5157749990BC531F99
99905301D35A322F1F2C71A32429EBAC9CC291E88989BC06331E3482656CF0CB
97D3279DBAA93E5F5D4CF2833384842D646F4A50B8C7D547A2124E74D277F222
3653555E9E8FEAF36971E1D1B66B2150E93B75E8C4A4ACA5ABA29958F36904BA
4D3157ADCC9999EF3269443B176D766529787C698BAEEAF7AAD1263C9D86D32D
3141B0584D28F6E8A01929991878260511857AA7A4ABC23D405EF3E9A38B0ABA
EB4B7557B4B9D204C7F7415D6714CEC7ABE933C5832D6AF971771C95EE55A459
A8542A374824AF9DB6DE462F5B4EFEEA4E429B99C3D1A59FF91921CFCC821786
A49B654EFD40B5C0041310556883CEC750C615EDCBCCDF38DA2A39A48FECDB30
6F22657987612721007707DA22B581437C6FD6070A86C2FC5D0CF0AC3DE2E833
AE1F6C0F9488C6BD4A88A91C4611ED7F787A143C9DB6B487A9CDE10FB84A4778
2A95E85EEC1959E6F6CBA030B94A3114379F70A12F3D782AE33AB03E24DA0897
BD0FAB1B2FD02008674CFF5899A0884293BDEB690DC928A68EFFBD0C12648EED
964E4F77D062F6AAE9680B85A1770DF054C45C31D4480DDD5A520CEF1203E918
CD555E38699333611FB1EFD59BBF3CA5EE2CF1A1AFA8DCA62F3003F95B0E5A83
0D88C54AC06B8163126A02234492D7F4DBE3C41DB9F9DC99116C1224EE53A754
52387F04D97042A8BD165987D17B30479A2455057467A5B2C02D360678126BC0
86FF6FFF378E0AAA0718A25AE6744F89CDDEF45B406BC66798C5162F46B6BB94
0599BC9C093CF2C222DDCB85D19E179DE6EEE684BE3A7AAA332F71E398A48E57
61D90AC1AE86E40B3070A8741C9888963F669D996A3A3FFB3A907F3A1AD2FFBD
C8828487FE6418BBEABDA877B61551AC2513F418199D8679300F1C0668C4624F
D1A83AF7FCB128EEA482A28A5F2C61D1A9123A32BDCBCD412A7D6A0F93D1FBAB
12B6766BF62B6C39D85EE3A825EF443172FD8A7A42427D4EA6E4ABF71B95C73C
98025CDB90C91D3F46F0E606E0D6D81E962E693F918AC169B7B638FB19056FD7
9B25299613C7C1AF177592C3C2D5EA9BFB84B2857C0C18F033FACE3DEE3B2725
5154BD0091D69A3C1C428F1FEDA3D98D00CEBF2730D812FDDDD016B803C38B89
23866F0F4D05B4096A313C46219AA16E13EDCCF90A4BB9A5A7B30581802EFB8F
BD6FD2D909977882A9A1E80EFBDBB5F9C13BD01C6450DBD0DE1D9CD163520429
734028ADB1AADA05386BEACC3228335BB67811370645D5A389262670FBD42AEA
82D51BF9669126F15AAEB8C95877928096E4E5B6F3740DD98E2AD199D39C56BE
85889670AB5D6953F5608562153DD6A09E462ADBE677E6F550F93922EFD76AE6
68C6EE896EC885B43B6C82422D81761D7E56E220BCBA8735436F56E5F96409C5
E942C25B0EB48077B0DCBC86883D7500EADE57E65A53A913BA987F1ACAFEBC01
C31E9B243F73E542FDEB548269683A2A8811D3604BA9AC10B505F83642B36690
CC61CEF424A54E62107D2ADA1C19405B9CB4C57CDBF09199F13A726E93DCBB30
45733D43880F4D01BB02F8E3AA4828CB103799D5A8121BFD5C984F519BECDD61
7D54D3CC7C8C48CDD889C389D35E4D4BF0BCF9866F421EDD96A7DAAA193CE2C2
71F8A7E2F7706FAD28430E5BE810C4838A45A08EA3FEC1B88AE0F6576384D456
A11C7A335E821E14FB8153C749EF8D65204DAD19BB2C7D44352317B4372ED158
BA9F5ECAB13464716B1CC7D218EB7F17E8BCC86F79AFE70FE4E0188DF7BB2038
9C23A6C86FD4DEBE240B63473C5E2AE544ECF7613CBF23B27B2DF046F394AA93
1F0669FB5801879792470155A0C190DE9ECAA778E382AEBCA05C463E3218A457
AF081B3E9B521BFA948CDD201B26E0EF40C02EA2305326FE66ECCCCC22EE71E8
74FC4A46FBB1FF01C814878F0C177F552BDC9BB25779041939F7243D600CF7EE
179BBD3BA15C58FC4730AFBBA017A625258A6FB58A9FB1A4E6EF85E3F0890B12
43AC98858B6ED81BAB8B76154B88D4AC461AAB6676B73F18E130A56C717EC2CF
99E77E5100352778D3D36113E7710F70924DAFECDD6DF4D9371D0BF0E78CA90C
1557DC0DEE6B94EC8F86DB1DF1EA22739C376CB52D35C98266EC0E498C78A728
904B408DED225574316F2EE82417F283D51F45D03D5D37D781421DC5CCBC4278
2E8F4F5E0CDC172B0A05BEEAB3FE7CE7A912DEDABE0BA57823AF44357B72A590
785DD218DF202ABD403CDB6CCC9DE459C968118CBF9ED3CFF1A110824BACEA9F
F9ADCDABA3A85139790DAC987FB1AC6F537AA03AB6FD0D5BF4C9BC3213A5BA19
D2737875ABE049F1F25FDED5170BF6156B7946465D1D51C8F60CD974B9A396FF
13CC82CF8FB6A6EB57531E2ACD83263BC70FF9DE1CCE3BE1F188F90781F48252
E3B63BCF016F6AB571EA7346FA068A13183A6CB985799781134FDA753697A58E
9A72FD9E3567E35D3A51508B5D2E4B9BAC6BA02456FD03F4C387BA30F95648B6
00B3975941C48DC8463F5E79ED0B4849C417D86F25FE60AE5F5F4F3E9309AA6A
0E93C157AAB6B16829AC95ED97F365864302D8F78A35625C188F950E90B07167
D5413E83AB04BBA6029CEDAFEBECCCBD4343D36AE6B1645DD88957C81EDC41EC
90A5A709027171CBB069CAE6BC5F117865AF3389F9B24A1D21A9CFCA3AD511F1
89389E6B85C43967399F9221D9440FAC9D8A3E4A6C8F1E4855BC78A8CEC63571
33FE6735E4491F29973406144EC883B52EE4ADB29790CAB601943031CEB5E7A7
4A8F8FA814613F35EA64AA88C3C30FD4DAAD0AC6745916FA18BB7F7D0DCCCF62
D091D5276CF62C0250702826C0166B4F587AE41977105175EF74175060658DF8
39B7D55F3F5B546FBE66063A676691C0210C38D3E7419FD02E246015A49306DA
63E60F1E7308568C2781BB126FFE6BE23910E7F181D048F238829D43CDB01ED1
D5903D85F35CBF7640218CBB724E745DA738217A3C7ABB729571384824567D6D
1B2BE5142DEBA280A0B75F281755B0743FBB60F2952D9041F7F6EEDAD252FF7D
75F55315AD3CCA107D2129DF2865142FE8D1300926F5A708E3AE04EC52C52383
F120E70C1AE5CB8CDB077BED55B93B9F37BF0604E3C366ABE64914AA314564F0
9B09CA8A716BC1A66753B8D4764ECAC940EE7D6E0CB9A73C07AEB30F46784FAA
3E4A164D1DCA305FD1D602269C73C8B107D49B98E5E0C7720CB204202FF26EC4
3172D2DB2D9BD5778CE80BE8BEF594BF5E6B4BAA645CA80C746C4D2C7C98BE5B
B3C35ED058BE6A10BECF95ACD7C4DDD240D7D50457832E653510C89822374C27
7BE837B55086E8EE67A19B48948B6A3308B89B8E774A00582A8C164722391D0D
2FF235EBB1A97C98963B952962393F83640F71A94744C34492D7C7151ED5F3D1
DB3A0E0025E16174CC7EB40DEC40A57DC5041B1A13FD28C7B6C4A3EE0E5AAEEA
A17B394174DFD2865EBA852C79709170A39DF735E27207955E6B90FC8219AA94
959716E05C08A6B90348106E18051B1265B1AAF18EC24DCFD7938ABA345524B1
5226FF823955C3AEC7B19CCDB8524EA0501EAEC5D21617E9E56D6801FDCB6687
4524CF52CE85F8A8C30BC2D5148CAA77CF2E2BFA28C677E95DFBFC81EA3A88B4
024CC9D419280530B4EEB5E6F214266F72A690C42699A94C0A53B4CDF90D15D3
0A9E7F1DA52A1250AFD7D6E9DF2D7BC0B182ABF207C39015F02EFA834D0B2251
3C88957309867634B419754B7E2418419E997BC3B14A29F771AB17263551D2F7
60B89A228CCE6A3BE97FD29FB075B5B40B6D4BEA2610D596C1D91A8789E4CF0D
65BA7F2AA1DE45FC97843A434BE646B1873CF71C8F9D65B23E1D5011CAACFE32
2A93B1DDB08817CCD6F7B38DFF1BF749FC839DD765C15A13529EF3EAC4A746E4
64DBEB37311C08074B3CFC4E25E11534E6E6D8E149AD5B28578EA77E166F3533
B7B42853E535DEDFC2B4E03CEF2384CB87BFA8ED954D63B988D9F6346FF2F065
D2A1929A0B5D1CED8B4DE937CD1C356CE0E4787F9014942319C94B6C1106FB84
0B9089E9CABAF3E342A6841B3D52044232F37F02A3ACA687FBB3F42A7704BBD6
90823BB001857331DF13F541869E3AE9CC7B60662981D56C669546CC63A47F38
7FF69364B2DA7CF74C3437260705A84BDE5B4718A2F01359C940F37965A18A0A
FA2C09BA5E093F4AB56D40C512BF9AFB028A5DDE8A662D361F0492007876254E
4A53998F6BB2EF5721EF1A140E92BAF71F4B15B96279217DE1EE8BA032B2C3BD
A7EF671899B0597C5EFF8642D76A759A08D6C227C3182E3AD32BB1121234BBA2
4E6A6313C9A925DD73C4C95C6755EEE893FB52AC82AF7753AE24F990984A4B75
329CC891E9CEA349FC55DB047759C381E5A308BC513A19399F13B93D9B523CDB
7999974BE93A89999F153727432CFA9D0FEB17D7DA7F62E50AD6F378C43DBEE7
A6B9C4D230C61021057128CEFD279764DC32A0463B583633FCD52382548994ED
EB98032FB17331BF61C46E1B69AC340BD0ED029E610CFDBA894A12BAC452BD8B
B544B57ACF2F9FE83E3E68109B18249984C1335904DA22349A847ADE3C060AEC
69C2987EB6FED8CBF708EDDB1B5DEA54A92603EF47888C851EEDED5F772B76A0
5B88DD2148F33DF6F561160A09EAFD6CD02EEB3A9CA1A4FD2C9CF6C898EE6510
A2EC593B475F91142C0C092C97C588A09FDB1464F540A61E9D85B534D52EE9D4
C872798C8C008D85CF46B20ECEE8469C1D266E32929F47223BFF7DA907D4F2B5
9220487C8E280E9077EB001517851CDAC202F133D2A50A962F4464E2E4A8353E
C4D8A7FB91773391E8E08FEE319FB6EEF4340E49FC18CD7BAA24137A60BDA698
7ABB551B8B8F8FBEE99B0E98CCA7E4E0574D5A3B9EC9C9B8F9B20854EAB18A0E
CB0B84E15090615328AAB0231173D3D82A3D0635C98A57B5FFBD593E082B155D
45427E2A28377D1336FBD8CE3FC594A6E37059AC7B9A576B444E00C042B2D6C6
A149347B54B868E541FF4EFD4787A838E43E1E398E83DC4154A140237C73E287
EAE740D39A6C85F8A924E70519534343E3827C0A38FB41EA6562C59C5C28F859
D516B562BE6C8DE6371D861F6A50D7011BCAD9B86BFB6772CA98CA95FFD01098
EBA0DA69525F6F3BCC8BDEDFF8A7670F3B138E49501184ED34C411154A991FE1
73A1C77FF71830B0A6214C89863BC53B7E8DE51020DFC3FC2F1D89722B264305
AC6DDC1C9095EE0320B1B6AF50CCBED4055DCA9D58467BAFD6F453730354B13B
678AE160EC8241B3BEC166F141116BC7B6718A12FED0016BB3C78E4BDD0BB517
0FF7263D998D221C6B672968A5298277594958908F55B623E3839477F4ABB156
5BF009732AFFDD2FF708C1A113DA39DC93E405C045C305C997F50B56EBB8F1C4
C8926026C22FB3893CFAB93EC1960DA77A849FB36055EA2D75A96AE6782208CB
2EAAFED53C1E1E933705EE91B9C549CE3D9E2806607E422732EBC81F6961CE4A
47A9FCC007F910998AA28D18D0C0D347BD4A27ECEB573A80A22D36D08F90A965
C7707608D027B4FB3F9F409A683647271CEAFB8023DE1604FD41C754EA868273
E3F0AF6B7A776C63DADDCDD47EA7CC5A25C793F81668041A56E78A7F3F8BC5E5
8313F0E8F238806B95EEE2B060164704F42F70260ABDA15F57C6AB54BECDAE69
605F82D734DA16D4383962F959D2B6D33250DE8662E73CAE558AC0565988EE0C
D2B4513467DD2E9FC93A3E9C02482CA6B939DDA5BF173B03261E94BFC435ED3C
978CCB165A21E2385933BAC4CB437B921AA1751CF8688C3D53F22AA37563304D
28E009E5ECBF762601A2664FC434D8545C980D4CBE10CF8AC32CAA0E536D91D5
470675EFA3A493A97D029385D7253E52C96F0979FAC302B5A073B8DE4B2E3D9D
00D05FB37D1BD8857EC3B6125A861D73164EC0CAF0220DBD01CBF5D8D8F19B86
5E66B5EBA8A56070E4B446651688FE1B7E4B4C92B02B9CC1307FA0091A90370E
63ECFFE1FA42D3C280EB415FE372630D0E72C3689E90AAE390CF09972B8FED52
CDD52FF420A24B253F197A5AF0C7005F6503160BDBC8CFFB2C3426556F00AD40
A44AC4E9BF26B73B17B66408F5D1C8D598B54BF11E15744AD6836652D627B5D7
74BD67398D47241A363F1061FCCF29736EF484598CB9E6015D6FEFB8D92D0BED
3B47B98CA8948DC1F9EB3A590CA1F1AE0B76FB4DC56F0406CA1669749E13E674
8B25AADC83F188CC3B5147FB15E118A3AB225E75FA5A552B39E47EA77C33C9C4
DA7C3D1502F0437CD8914E0FD87DEFB545C02E89FC52487BD40ECDE4DE796C8B
7268EFE5EE6B0CC0781AED1350BEEDA282A54D69DE18407AB99EEF38F110610C
982A479732DB1145FB9C90FF5C9EF7B504550A98C06A18D3DC68E1353E786DA1
1AAF6409C9BCCEB325B5988BBA50810CFADB776F3B3C75051A6C198C74F39B53
FEEC8C2A4AF378B0DB2B163415AB1F08D85B1BA361CFA80997CA63610EEECB8A
130514697F4444B7D9073E1645B2BCEF62D67401DD4F49A37375DE8209B8474C
E66638DFA44D2D1E5D670EFE6732E74ED760BA502FE1D51D57925ABAA4CB99CA
6B09BA4354AFF8D0B4E2012FE5806735A793AC3A0B33EC688D5480FC928CAD26
E5F020125E2F916BEB25065A81C9009775DA55FC896D091C0A67012881B53CBB
81EC7A1CEB5D36BF344354FAA9B291ACBCF9B69E0FC7F81248FDE0B428EB05FD
D26BEEDF3943D11F3E53939D68F49CA5D52385DE69D0F689E06F986B6E87866C
238DC1748C28585185561D61FCE6BC2295C1DD63AEDC47A0F11DB91A28B5956F
0EAAB791D69DEB705C3F01CDDFED987C8BA8B72D68CA6B490E990800079ECBBE
ABB9AB7AE45221207CEEE97EF66017F71FC724AF4B8F10C50D3B5CC763A1912F
A4115BE17055DA9A6B18D6946A358899374F4A876C701772FAF0BE6B016B644A
A1598B436C0190DB0806D6AB666B48CEBE799717BCEB6E8C68859734B232A7C0
ECFF1216CF4C9108412FF42671365FFD357CDAC1DB2BD7A3962E847291381509
30819B7619DBE08DD2EE3C007463730DBE8260970CC80F22804A5B31B1341813
0BA661F22AFB71F8026DCA538609B5D1B4520FF18D626A206F1F615DF055CFE1
5976EFB5872C79685B50CC82ECA758FE32A72DEEE11D431C71700CF2A0339F93
2107DCF0735034F53154A16BD1BFC961ADEC31440CA22DBF8250DFCCE91FCE3B
061C818BF7D97F98E088951D9C5D771E50B91EFC2C9B856FBAAE9DA0F10BB8A7
9B9B69ABB3746877771FF2AAB0F5106ADF3EEBE554A6C69F8DCB88685B932112
314290995A187369C0ACE19F3B608C08812A3F39074F70A333B758B05DA5C62E
83934C109C058D922349B42DCB9877435193304F8593832C81FA7916D935A5E5
C5213DDF41ABA258D95BA568836ECFD4A813D4F4CD8F5FCF0B4C83111333C0AC
95C724A5FE191DAB3AAD082140BC836C63239F94DB0A27044ABE79ED7A54E944
1C1D598B011AC8A86E2F0774DE305578CCA036AA6F4FB6094907F7F8D58E1763
6710D9ED94A70CFC3E9CF00A2654802FCE2A8E654B0A04B616419E07187443DB
90404099081D552717E487DF1712C9274F718632BE144D0AEF0E5AAEEAA17B39
4188BAF4F489B019543020B6E7046BCB6CAEF80CC2EA9C37AF5AC20E96B00E1F
971E4FB69EC10B0CCD7C0C2478EB2FEEA0C69754128BFBD8ACCE7B9C2D686081
DE6A26FAA3A118C170CA7E61C3888758F60B40D0CAF340B83A047FE949BF24C3
5C73E5F2237F98A0B8B5F8FD83C8F01DD3901A091DFB3E32A3ED1169584BC811
25A56A7C23937FCD56B45669912EFB5EA49D522C2942DA05BD420930E4C6DA82
938A305C82DDF611CE01C093C9E693265E82AB9498CA25529E9299DDDDAFA36A
B3C4484878C8A07741F7CE4D5B8144744D553B4EB2F4BD758B0748B26C907904
C11E312CA0C6A066ABEA6C88AD1557B1147836D8BA808EBD9FB14822E17DAD08
109996D69D469E561E2A2917CF1B3F65EE77029082400E86A84A52A6FDE42BC7
2FAE802CF177B1DC138EB32DAF393D034CB3A5FF2A48ACEF978938A9B6C1E0DB
2831425C5E1F37426AD8D31DEEB960AD3772159ACAF896CA4B3F0074061ADC76
69DDD211F11CC676AAD88A106C2D6179C50A3BA70401E08E647DB2339D25BBA9
8D39EB803F3E57F890B955357AACFEDBEF65396D5E23E31930EEB0B3FFB67CF7
BA5C0D5FE8640A53E00B2F4F87646F6BA4243FB323042BBE56E8D48A62D3F8EB
173456E95222126FF6ECFCB08781760AC9E704E91CE14BB56919F96605E97397
D5A8C6E13138BC84B181F1401416C33BD02A15FF37767409F8D42B73F3E3550E
5775C3B7178C0D169323C87782BA72ECFAAADAFEE78E1D8D2B9E94AF57AE0A20
570F65F68F63D88DA381B78C531EB3A8617F33EB313E70DFFD006D083CCD272E
8A5BC5FED4DFC5301B554BC721F4242635A7D112AA3F39BD94F21DCD05FF8873
30D1BBD1300BA8E687DCEFF026052802E70BCB2C63BC975934F81C687DD7BAD6
C8CF1D70B9CA4381DA2CCE50261937EB072A19747CEC01D9B10A106F17B39A5A
1AFBA562AA90865334BFB49CCE64613E5274D98E4F2B23DC47BC6EEFCB16D90C
2E6ADCEB16B34EE0E57E0CD0B4B58826FFCF40FA281CB7AD124FAD88841498F5
BB3F6CEDADF04FE506DB2E156FE89B568E028273354131A2917935F900BD6747
2496E9C40DF6EE70A9FF46F3727C010509787BB931BEE9502BA5777FE59BC228
1F01ECBE6CC26AE7437664AD1AFE2A84EF98CF8FFC6A54709ACC186A9078502B
3AE58D42D8D3E30A63243E9F7DBE231C3DE32B82A38A9BA9AD5F023DFDF9ED71
D4E41598D5D59389340D67B1EE8BC20F6F41999FC337744781995E7176C453B4
DE86D5E1A3B5C3EE1ACDD6D8966C8F297442187E6465357526F0FD4A3C65E04F
45CFA087734947AA98663DA46206E7A75B1E7AC0247834B4514497A2561D4783
F11B5F18899CE22DC92237B4D55F44F113961D71CC4D1A11BEF388D2B7B07769
7FC8F451316C820C2B46529738A30A70037165C89A05F7AD65FF14D783D19FF0
9ADFD0B27E073DA5A886F3F8E6BDA1AC967A64D0CD952989426BE04FEC25758C
CBE61DD6262486F108053A082A95251D8935436E7948FB881D38D2C295CE2042
2563FFEBB1EDAF452A2C4F8BF3D812A4434532D90559C743C385B4FDE76B58AF
101A0AD64320E0217F90916924BEAA0BC4240A59DC23057B3EC569EB5FA3BE8D
A7CF14F01DE61DAE1A6BF7CD32D914390F23635B33FF9862E3081AFAA60C0326
A9D87C65D63C14BB2F49ED2D369DE7A3DF53CABC2AC19A860AC497B212695555
3D214FA3C5F0785883B43316DBECBB78DE08CBFC9F9D91BCD1581BEC2D1402FF
9859F6F95B0B3458EA84B043639F45D124737C39EB7D148F457D638F22EE690E
FC3058A33A87D0409B34925087CD091B55A617013CA099DEB71A9FFD511549C6
1F9EE36A63E0DAD2C6D8087016FCB998B95F194BC9B6E95BA14850E431CB4EEA
322DE7913C69605359F63001186121ED2904E9328ECE59A563B4BE5B7CE1DED1
3F0047C7A6B6CB384D4B3B77741C1164328D3D72B0DD2BB9B9A96E33E4D948DC
5FFCF0795A4041F562E6CEE34B0F4AD96A015B218CA7FACD41DE474DEB0219B3
4350059E316D8EE8C8572A5A86DE24C9D9BD76B717A8CC0B23758DE3959BA8CA
4E6635A560DC0F05077655A717B4CE1DF474799C7449FA8F574778BC4A91BA9B
DFBFE3B71B65667AE5E27D9AC6340016F174691E1AE571B2C372FD96C8B7E21F
B1441A82533DB8EA5D9B8200B32D7368EC958971F6DD8D5D97E9EFF632C6E50C
6D6F6E313EC2050144AB05DC94FA9F93B6FFC7E1D075E348A8169D782F3416E6
E89E8B884C3DA9CC43657494E68E34391E2542903355658BD278E67696138BA4
8DF74D54DDF7FBD46D78D457CD1912F93210F985EDF237C87BB9F989AC66AD86
B833F24A232CDC0C2163E2D181CD39C7B4AEBDA5D1CFFFAF6EBBE3E5F0B87992
9C341B58302CCC65CB916CBB6C5996C95C98B340BCB2E417DF1E0034DCFE58B4
5A71D4E9FDDFCB897B46D6C535604D0F63DCCFD3D9B0BD93DC13B78CEE8C67EB
4672971773131882FFFEECE9FE525503DF25B27B0B383BD5A71B3D272FF30160
8967581C38905B333CCF344D4252D239BC2F7203EDE66E6557E7BDCC867EF571
98735957EA00E66CCAD46DDBC0090FD2E13698F64444686971D9934D7876C663
B79E19D4E7957D5ECB3BE14010F61DF82876C748C4A12ACA1278FBF16E7B0E57
5DAC7A0324909EF3EF2A4C728BC84A3D69071283CA52467F731C2C1AEF957812
83E70978F53AB3A32754186D5A3C8B16A8D82D1B2FBE0A578C969F6843E383AF
78CDEC59A4699975BDD1A2D759CDCDE93654BB875BDD6E9D2E84E2A318BD19EA
33129CDEEECE64A0CCB979103F10135D6EE1215286E7584A7008AB0D74CA44D8
0BD996574BBB7A303A675E54CAB306046E6B15077CB2E53C3828B429D2A39239
E748FB1F76001207A8D67683542DC17CDF8BA2F73953B2557AA4690B90A735EA
967D4A7AEAFF21A17C5F92C0CAE0749E97B36E6886752223E8519202D572C897
C2273DC7A4AA135FBFBB250799A1AB807A25AE00EB1D16AF8CFE9373FBF31BD5
25D70571F948225DE8A566CD611F999BA08C6048FE2A734D53B271D6B57F53D5
F6B85D40FA4E5913528D05A4F86D736602AF9D374A8D11CB5F883B5FD6AE51F0
1E142F9B3F94BFAB55819D89E6C944C2DA1C25220B2C514BEC554FE71D976F05
73099E722E1ACC21AA586257CB49B2F52BF903711890C1AC5997F2E613DA4AE2
FBFFB0D91ADF1E12223951F9FAFE189279D289A399F92C6A4C8DE841813A505D
5941D6326BFD00F8E2C46B4C975ACACB7A8A5A23D65736F0D4A365FAFC663897
617561EDC4DCD5CB24694E5F6E145897280B76C93876911D9D3885B8D6F23252
7036E2C4C61F6C4A70232F0EF82F448559F8CB85DD9909A74AD69589BF984B32
5D42D1AC4C7D1E0ADEFC6410F46890267C9C4D15C3734157442A161BD5A9818A
95AFBD19A49656532E4D4E104FD0B58642160A0A7BC252745EEB8E97E8EB40C3
FA9956F75531F04161B2C21F34CBE80DE64146F6A2784F874870B8D6F7096E25
1C6B883608352261251288E24919FD9C0F36018BDE9C7D0ED36ABE19A3BBC063
41E5229B266CB622F9F7DD74E1AFF7B92876A00EC7C4D30A65E145D66A213285
A26C04960DFBD85CD02A8C6771364CC604446A77975AA682A1E37C877ABDD6DF
5C4238F1AB7CBAD5433F4C573E06BC4DC7E7667F8B4A0A7E1CBF0467895CFA79
FFED62165066FB117742D0C11C69CFB6B0A0F8301F37BE24A3BE22AB3BE00319
E95440491119900CEA4EAEEB645297D9F07A96B0E22AC1291C12B6C48480EB54
C5D3CC8C652DD6C9608FC5019B61A1DB85ACDD25108F1F6E3BBF4A936F085874
446AF085EE7EC08B2ACAEE0232AF43865A1908E48B2B603B1FAE95DC33AE6B2C
33D8B770706B5FF377BC6F3E1EE13ACB9FF2D27F17067814CCCF4FE7D6DEBC03
2D90FF1692C973462254BC1B15BC2B5D248C4E048FAED5D998FE809875E369BF
D8EB47E5E401AC80FD32492262607A1608267772414F1FDE01F4AF895CF3213F
6D2790D9F62364A436718D4A4470D859D3669837BBB42BAD20F3DCAD2E413FAE
931EAB26458E18FED176A270B32556E97D29D21FAEAFFFF933178CD2E6C7907A
06DA0020F76EE286BBD95EA370C3D687705FA8C33B925B74872241429D624296
CB0E487231B1B06F734BE07D5951E76363CE7EFE3138AA658A16CA14CDD7A5FF
F0F4A63BE2A830AF761753F1719DF715DB12D81A120E293BA4A11308D8F094CA
FC5A3DFEEDD51DEFA1A50D5EAB46B62AFC0D94579CB49BF4579A43C9873F5748
700398DEE0329CCDE450A3F8132D5B76C8E5C3A3C1BF02826BA0707642857023
2EA5942ACE88AE200052342321292893645052793785EB73B7A7BFE9888A2FD3
CC15E72E35E5721ECC6A72170935D4D4C588127656CDA4F5AF26890F4766CCF5
F55EF824882AFC244B76AC12AFD65148ECB4D1A1960284FDDA8D35899CEE7203
1B21C8CB112643C87F46608806F72FFFB1D567B34A7CD3A66ADBA03C9206DBD4
AEC6ACE7601E00E5A95E6129A535EBE2F9A7443FF5BFD919BA1BEC5119306EAC
5277B0480D57B71798BE4740C12DFE41D019829AFE8637F9494A8C00A31094F8
F005C42F5E5659E082D082012C053D427DA3EC5D297A14A19D6D701F555D91D0
8BCF9BD657463BA451E187E44B189B20872E75560023F50559E1373A63E41B7A
E1BE4E50A9F78306CDEDA619912D6E530C28666041A75E2B15EEBF7ACD6DFFDB
41A137F1A2350B27D96B1E7FD78689B3DC41F0DC352EE1E027F334DC3BFDBD39
2EEFF8DB2EB6B26825DEEB5FE0A34346A2F385A84BB64B2765CF024B23F80AC7
BA8D90781EABA333B55ED1833091B57564C41929EA027DDD1D600DF960251441
AB9225D38AAF5A4816547A36088BEA4D4FD7D4AF049B243C67783BA3FAF7EF26
0CF82B3CCD729FE8F626F0EA5EE42683192E6DEE1A7C32FE6E9B2E7991931D2D
39A9370330D258EE6F7187DA217B4EF34E8767559D2A30295DA88F65A4E3EAAB
21DDC1A84CDC0C951C58CB06AD6908475E2A67C2E6A276904EC6CD60BF276EAD
AEA53D421F80A247373822F75EF4B3B9CAA11C84A137664CEC56C018496B9AE8
EDF87704921CCFA1D08CFE3DB5C2E40E76D142023FEC5DB08FF2BA55AE48A35A
9EBA236FABFFB29A8885F351723C0270388863F91105326439EF47A9C30FE7D0
89E02FAABBBB00E8196B627F47EBD0063F7C73C39343BFADF279C3591AC30542
21AABD55919FD359CE2BF06B0C40C188617A818AE8705464E4D03A5A9F59AB1F
B830323F924D2F3E96830841499F9FC7281E10B1391A623FEB41E77003D9791F
04C25E5741A1FB8B7FDEA44F33B1E201F5D2508DE251E8EB0969B55ADF6D9B0F
BDCF1611F2A64259BA87C7D82A72FBB62C75CEA24C5A992C2408861133C99F88
19E48770B5830E38D1575A046B57BF33ADC0202166229C20C6CB928B69CF1288
EB8D1A67867B668F8F29C5DE68D83297E5716754CD4D8F92C33500FA87313AA9
26A5F0344CB275C2A120B1D08277D7F29C3C47DC848713F62BB43A07D958C2AF
42DA4CF1AEE0B143ADAF9B10AE3A6D6316B178799BBDA968BFA3156969DD6904
AD6372D784019C1F9EAD3E8F751E80A364A8CABE35BB388CE5DCB49B0AB32201
E7A8D747010B14929AD1A71E4E33096208C98388E6D4B1284DA9F10F799627EA
EC42B21C0C1DD432FB5237B662043AF190C6F76DDC05E11124C084FC66DFDCFE
82F60A3D38AB1DBD9BFDFA01B3FFE69B0042542EC1AD3A1F23A203530ECC0FAC
A6B32278ABA12080E886C43EC582FEB837AD8EF5F63DE2614ECE658E693D40D5
1141B789F15A6EC9B0EE64B5202E8BFC99AFB6C416C5912885FED6413D2188EC
2DA3DBA4678314C1550DAE1A6958597C1C6832F1065E444A5A27D7D5834D9263
44FA0022EE92E448CE46BB8D600E4DAF587EFE61648E12A396957D9732F9F677
0E3EFF9311C29FEF3BA7804667C2C1ECBC40550DBD4758014E57F4FF848E5BBC
23874D53EA05D63043D36308F048438E24ABDC6DF356C1706558BAD4D13BAB28
882CB8E1FD5E11E4E0DA3CEB3E370AF46D90F733A9D92C3C329EEDBAE2521FE6
0A5CBEC44AD985010269BFE6EA58757AD16BD6D3CEBFB0EE605303B380891614
C9BBFC8C2B7E4BAC7D24F3CAC85A87D92BFF1D9860D19419E50D318682E5348B
933792E3FFECFA1605D272832D732AE5EB554DD3D8EB179412D3822EE663F2C9
8317C63074FAFDD85A9E8282FE2A8EDD9E99704E51793552CF041FF0A6BD0897
5F8158AE2D8221918DB5FA6018E0221B844280382D0E4BC5DF0AD408BD068D3D
7DD45D70A0DB6BC7D12AE13D26464D96551462E92F54D3AFDA8020E8C8FB405E
B8A93AAC590CC694AD7ADAD0922C1BEA378030BE394B31910E9D20D0086DBD83
85E3305D12B222FCB83D29DD6A5035286F25ACB64AB794796D6FEB8CA5426A65
22075A1FE587BA82980EAAC61319FFCACD49F35F84B14713364BCFC8EEB0709B
D421725D3C5214C42F7D6D45D53C1FB4F26D80BE010601831B626271360132C3
B8FADB942A29E751401A32669D996A3A3FFB3A2FC887D21BAA0EF5E71BC0B12A
2A62E3E23758C16B055809EBDC8373B81B66E4A97DCE9AA18E51494416E01479
0F9DE7CC5059796C43723CAE82407719F13E3D613401A96EE1B83E685E88B516
C4D944F24FE295BB8991D104F883777AD11040C3C96C8C95A2BE261B9E88AE54
28F055D722F14B1EA18C92A89139A19306576A54CEBD2DA321AB5AC758277A77
7F33D08DDDDD1FB072EE0457ED2362056235B403D5A7841F5D5EE25C7E2E648E
2286A5CEAE9939592FB6DA0B1AACD2F163B854FF750A7CE0B00A6B4CDE190387
3138A887D66BB7AFAF010C1401F0FF368D1B4CB256A4530D58C8F54FF2056529
C6645991E3E95D79D326D4796C2C422147E20D7EB823C67B651E7EEED85F1385
A90A06D62F998CE70FD0653F1972350A2B3BA946DE2451E0CF76159FC0311D52
0BBD38620DBBC832B464D37F60AF3915F6DA071E5C6FA226B0F6849688C4A366
105CD3BFA0B056763F035227F36460B3526AF466CEF20F4E3D39ACE81E68BA73
235B95A9910AB05F233671057E1B8CF7254C6E6185DB41E81C70AB09C8A69EBB
27523A806AD3C3D0BB9C153C05D5AF0EBB2812415C2BFD7FC6ACC667EA16F6FA
313BAE664BE19D1E1DB05C24154A932551AE8DE3C92CA4B5EDA261865764B3C0
3B0BACDA94CE6CE62DD05D080718590F1EBBB3E059CFF4D799A0D079544EC447
D2C611BB4D4BE2298FFDC93852BC78DD085381E3B197DAB35F56F35A933BD75F
F2CFDD23E376B9EAFAC9DB9F82384D75EEF5FDB7A0AAB3F93B55C1AD1A790752
216575B12368BF8763D56480DCAE218F051AE76B4BF2937F610B037D62FE875D
02E3A8D8603F41BB749BBD05CDFB349687B92D2B28A22FFC0A2ADEDB7EBCE61C
08C18326BF81FFDDFF6EC899C60EE1BDE57545F2D3AEBBA35A2BB67B80F534FD
42DD884BCF1715BDFC9396A853DDF818935AEB31DD28922FBD3BE73FE3406E8C
A1440922EAF024A47B24B119C14378EC97F6A2C713EF83A7002FF10632B01D06
AB372E5D366CAB852A72FC37982AB9FA91BEF7E2C9C9AD0F4E71904E0D81D3BD
CB9806B587294ECEE65520D9F46EE26F647E8B2C2A9C8967796AF5A113D1F79A
2A9D90B174CF1A79EC8CAADFF968412F52B170578575B8E3EF6D44864715EE2A
0AC00F06FB986E2F3DBECFF95F27F417F437CFD8885D87AB46E9E7DA48E15769
9E95EE0AFCF52DCDA9A7B0FE6B860C28C6A0B8CC62047D2FC968313FA75C5FE3
22D772E4A25A25D4863FC875E3B719169E5015458CCC6E0051F7F663394D8D17
FD43FBE3FF477C20C23C9EB8B2379C0D4615FB5EDC8EB529C3EAE9E22B3AD954
973E9F237FD4F5C30A27D5C743329673506094F7A6E20939993FF244C08EE94A
C18C57946B7F0CAF3FC1E63FCD593138650B501DCA22312894FC9AFBCF0E12F9
3BF0DB4DCBBCB369FF858794B58448F741AE40643AF9F1BCD6955279ED84FA86
034BB17B945B664A6CB8CD6063F55EEB9488A0A4EBD1C1EB9DE653D94332249F
5FCA3254A0968C62D23A342C6EA2F371DA8883E0098C484DCF85893042FCF47A
66ADC6F4B8340FCF662FF9DEAD286BF819B057EAE3C5E5E7B29C1DA936EADC00
148B31268396EFC57F189F43681B706EAD0A73E14B1263970A96BC5AF9577DF0
3153C4F59292EA745D70DB553995EDE7B9E586DBF6D368F3266F7B714F47A941
4F656DEC3A003AD97E76990E78B7F0279315A46C9DF8C8DA1797D79F0BC2FFE1
AC526D5C2C2C78301931C22C94A1DD05865D1BF21AA31618FB3161CBC9CA768F
3A1F8E415C04CC1361C58B680D4060C4021B03A70C45618D99CB38CDA2A66C43
F2F3B83D15581E6F8CD338CD11527F47386A45E5EBC92B02C0DF5F5EE0C552AD
261A3A9825BF56A60C360904A44F1DB977896A63E820A6486A3CB2A7C46288DB
E345B1F49924208F864A1A9E5E046F2168B6852B84A760E522CA70AED0B91E09
4C2507D99CB3046430E6808A92953A8DF0CE1C2F3F47E0D4B922B86E4FB5D4B3
19087C2618B0BC2BF91EEFE66C825478DF1350FDC2C593A36158DA16B8B3EB6D
78021B10DD7C64FAD3475C9B56AC0348706DAD0FEF05802188D1964C1727A71F
DCEFC3B327C47CFD4C0BC670865D0BC8ACE6E7972CDD2CC51C4C506CB9BB38B1
E867AEFAB110FAFB2D10A62BCD59125F51C1EAFFEDD247EB47C5BD5FA28D53CB
4DA23CDD345B068AD84002FE3DB1DA0E5ADA3D84A9B36906B7EE0AB99C0B7798
F37C8410B422A5D4FC4FBDB5B336DA1EE6941D0E2E976CF91C300CA1A92F77C7
E4F7850FB5E9147842ABA4054C39AA7B0ADA205289A4740664AC036BFE037475
3B1B369C107068D4B81C682771753B01ACC7C2FF5103A6B0AA5DE8EBD3577900
37F641FD9DE85F1C4CD7EC36A44EFFF481A0F0E3854B28939923D54F4D2B539F
B278CEC1B6C7C7496EEB6B9735A8FFDFC09F3EB71BE5955727FEE842D3D09573
A3CFD76634700FD6586E3A2D629461953F9A4BA451F635621287A6C2A49BACFF
EFC5EE691D56A313FA51B55D4A783BCDB4AA404063D5EA3562E48AB33AFCB97A
A0570CC60348337F183B52DAAC1488AFB5B87E7E7F94E2BC4A44CC265F401C3A
1BE0DB0B0BF58CE30E4649EEA8B965C96427D5BBBE4721A514FD73D70652CF9D
90B811C3AE39A5D9B67A0F5C70BCD5547D9ED293C5DC88C3F29FDCA6C2D823AA
93338DABEB6D84A013CB941D081979881FEE0A0CE86A0150E9BF45812B285C06
A78206D4670C4282DB1458DA43F5B80D3538B570BE2936C68795E67D027B1D2B
EEA5F6D45AAB2C84B7EE3A04DDEE3249460EDB32AA6AB3F3D74B979C65191CA3
EBD7E3DE8EFFEFA81E7FC61BFDD28B9D8ECE3E55B8ADB47C2ACA91F47CBC37DB
DE8D384495A928457D10FDB52B8DA158D8A10DFA23EC0F7BF2BD2FF0D088B6B0
216AA15E66E84F58D7ADAE6FFF9154F95B1C03E44B2FE08BCBE6EA96C9AAB512
3950374A0BF640AB1E779C78D18732C25A3832D27C7372145AD24F7DBF479968
0B6F7E28967B50E6B2459BDEF2605C3CB9A14992C3888E36BF1CAB64C7EFFC39
8E61BBE402E6006DBE374E5F2DD2A36007631826E0926D0410220069EC80A3F1
7D1CE7546947376F09F1797A419A575003A72C07925F8EA3354432DC02A84C0F
6FDB4A484962A697CA30668A8FB6F993E430ED1CC32B09F6CA46E4BDF29347B0
91E3DD790E788E8D122D936AE0E0FF496B8E9DD081C0D71F70D4387C83CC8BEE
76B614D0A6F68E42393FD2DB9F23450AF681C5A2D3C777B8E3B2A771E16CDFDF
67D372A26284C48D9CE76F95A7654B478AFAFEB66B7CA76EFC66E1670F2EE9B9
31586555DD16A25AE05B959F1F80F4A78B9DA9098AC54F9442B6D22E4C45DCCB
FC8EE7D8CE8F8B680DD75BE0633D69000A044B4AEEF3316B5D1E3FBB4663DE44
D9F08C2602C6DEDBCEB6DBB284CBD374CB06D3401F4D8E80497962C3723BF6E6
1E9B2594F07D0A95783DBA3E90D80B97946271A1CD46DF375C4D85BD57A71CAB
8D4394EA18BBA922286C98AC7B5F3874B36BFB69BCB7F9FE8A5109250CDEB673
46EDA2EDD53E8B5FAC7D21F53FD7B83478D5F2C44CF1D2AB8166B548D9037DF1
823B4F428245109A1C6647AA18CC5FA55C353F4A4789CB36BCBE56D89B4557C7
192C6B3D3F29F22AF06174FF7130A278C6B84B261787320916D8DDA3C93EB952
7DF36243787FB5A202609FA72DC55C3B2A2BF6776C750935BA23FA1D834DCC97
791749969DAF3B72CF1B55FFA098CB715931868A355F996E43F62CD27C64F47C
F0E48EB0F0C91F6297AD2A7F1F01DB70541140436A09528BA6278220DDB333FE
A58C2A585B4A8138A9BF7DE218CAFC9C7EC2907790747198AEB0CA0CEE27854B
B151B36C3A27AA89085A034CBA0079BE53557CE541B4C0EAD808A50B6B97FC3E
980168C8623FD1ACCBDEB53C1BEB67E1B05C413323BC8250901DBA18F325FF19
24D7107582A3A33F9B335FF2365B7E4651E297D55E3AC999DCE54F3CCCC0F2F8
1D7ACBBA49097631043DA3663345CAAA07661C20344D236577AB776DC57EA0E7
BA82EC95167B12AAA225AD771F454687CA38F3BF3D31E9020A5D427A8B3D5C89
4AE53656A90053C7B5777B43592047A797AFB5C27CB051DF26EC9F9A342A5A8E
11DF540829F129E13A6C3A226D5C8E70F8BC6308CDA9DF937E8411A42B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D6F6BDD983146333DDA29DB81DA54F44DCF5364857E
A20DB59006F78BA077D29ABE7A537D2358B1DC13AE97ED90F7D1AE27A1CB55C2
F534E2B546BA5531AE88840CAA741A57ED1F4587A72E74AFA15F15C69046ADB1
B3B6C392AFD856716F96B850D6FF61144F6A9E51CC1B8A86A35087D4A78EBC04
40F5934ABBD42963A4072F0F72518AEA4891E6ADF40B908C614E797EDC00F6DF
91C92A1C0D2F93867CDD9B1B1F408BFF7E442B807977D51AC2C2D786D4459F1A
FCF281E1F0E4E8710E44EA188EAF4C6DB95D151E687BAD52197B6D0EF5104EFF
E258C051AD39D3BDE3E416E13D6B23272517D28E9E093AEFBEA5F1741043EB83
7C589B4C666648FB00892ED9076CDE8BB5B9E39E25672908FA83EBC1F42F0990
637C15555148794833C85E2D80678D6A844F8A12F6AC785AFD8106910408C67A
608DDFE409362B7E96F011ABC7C906653A02A4E389C0C17A897FF5D39D7B1391
BFEA9E5525DC311B5D69620C1D5FE90A0016C50C2372E576B0B39D5736EB8911
01032D9E0E2584439BBBC34829EFB4604097EBEAD0EADD41FF95ED801582F00D
17C742914ABDABB89705C70E7C425F65426356844C68F1260162A74561F0CA2D
C0ED3728B14555CF98075DD78A44D9EF4B8BF6427FF94CD189744FECAEAFBEAE
15E2BDA9C7B74C56FB77CE97AC77B38AE5BCD1A6EB7D5EFCDA9560134A75F7EF
428B33602B681CC47DF678B8F5C0C7491CD299989507042B76BC2EB5B888F1B4
846F0A8773EA59368827E1877A6D3C1500D377A3E259BCA2E801D6A41EDE439F
64EDA6CE61D1172ED57AB1203F35A16209ED2C31EA520B73BCDA84EDBBD3AF34
19EA7C78A3CD06998C4463914BFDE9A0A2DC8828C73DE51334FCE519402C0949
0C394CC83886D8B4550D5216AA57E6148B45606BE9A25E02AA66FE8D4E92791F
BED99D2F492AEE0D4962F7B096BBA3CA28B437CE4F8598439220F94E700FCE0F
FDD21D36B5B339580DE24ED52D221D4E61259C607ACF39E6683BD98B0593ED7C
9E2AB4B0879D1FDEDD8C4521B16C40422620A603CB470EAE82DEB69E6D00C53E
48DC5335E174FEDA96A47B0E189328310E606E86B90AB0F74A99ADDE3C2C35BE
9C77E57EFDAB7374603762EAAA72B0B40EAF7DADF832733CAE82407719F13EF3
543E569C4982A2B2204E168F253EE341F61900D9297138EFBBF16161123E15E4
DD09A0DAF93DBFF6F7D18D46849B9E99BD66CEDB6131FD9FF930F063F003357F
52594C21DD93B361C9A44B51C0C7EDE58E43D0F955690F56A1A5E8D974657639
663865EFFF82F01316959FF933BB7A9D6DFCEF2DA767DA69B10DA93939760A4F
A1F80FA19731DA00F62C72C8215855AFF0A53D7FE8021B385BD6E1162CB12105
9BB870B3CEEA0AFF76C07841D2A1A6DAADCE4A94B93BADE4E3CECBE6D0F89BEE
E61F17A9A231F76CF009FC10183FB131FE773DAF259E6D1B25B06D017493ED70
A7144AF30CDBA4F66FDD6193F5530157881B3FBF51CB073946D3C2D5E8E7163D
A8FA19505FED19D6F72BECD582160EAF213C866648B75738A5C8191EE933637A
398B71B949B33F1FC8DC5C4427B7A47FDD147E82179A5B636709E273AD6C7BAC
31BE107570822693D80A603650A7F547D7AE4259CDE5EE4AE0BC827DEAB84054
E7545A736CFF8B5152BE94C63C1F84255758FF27AD0BBB2694CA6709EE19C115
15E6E967043F9162C39D9D48EB4C8FC35C43DE0D5A4F8582D8F11E351FED78F0
5FC4868A90A9F4699F71F0858C172AC3CF406F095670F1E3F4588E2F1A25D33B
4C53ED1A38DA34278CD2EEE9436D2E103DD1439C71D937A551BAAAC94D2798E1
E40C24A9C8169A8A77CEA7C348A7253DA38F8096C24D6676B7E5E44B4EEDAB9B
29B387E6346C552128490611DA5FBD5674D78B2951129FD9930F7E8510B9FC91
A2BC8B51BFDB98AA0F9624D8678DDECAD6B4445547C25D2893E35E599BEED601
861E57FA5D5EAB33993257D1C4EEE6FB8B058165E0F76B139AC20EB4377D2103
E494406B1DC816C0809474D611522E42438EACB09809CF441942491E3A8B82FF
19251B1D3735B67FF464CD57295728AE4086646AA14FA38D0D6B9C0C7CE81C66
030F1833121D1C0C5AD05C2736E54B1C37962B6AFC229BC6F0A60E05AA5C2857
A1A2DF3BAFC60DF22B1C44ED7A7354982E69B83E96B63AFB2BC9B2C2917C80E1
07616E29494369763BCECB75EFC19759B288150ED5BA54D39446B22E0F6A66C7
B0844B02029BA35F0E7FAFE4D673E26E6D9DF05E774AE4B22B4EFA852F66E1E2
044A6EE46EA0610138C9A5741C01244EAAF371E92097BE968B5B231DBCE54B34
090FD52FDD7FFA830F8718306929AD5C4A1BDED59037BF5A7678EEA3FF75005B
F75E65E8AEE970D5D3AB5C667017ACB8215A6DCD61D1126ECEBF3EC7B18AA091
4A5E9C70DBB2AFBF137DBC59310654E436681C30F8A3F439E3D3AA831860FAE6
14305ED4353A1B83E0BCD795551A1A90151F1D821BE8AE7D8B516C9504622E3D
97E8027614A26002F06DBE95E08FC77C6C1D203F97106ABB67810FD0E0E0A318
895C8AD2940575F838784928534C98B51C7F2307F6616F309565EC5A3E0ACD13
B07DE1A9C260D95BE96250CBC3FF5B56D0535CF8C9F4C01AD955CABD424E2A7B
06DFCD2A3E3F5089DF10D2A3596C873AFA7C19A669EC15FF26845D3DF70F11AE
03E42B0346944F191FEED1132AC4DDFF7843213F82203EA2E3367DE5BCA00D65
16508A9C10276839B9A8D076B6B20FB588FEDC5185C2412E20FAB11112C887B6
F1EB4D52BEF2EF2F9B10889FDCA046C3A187B96B6766381B160647624FD4F9E6
38083B79FDCA089B53D7EE69E7C6E51F70A5F5CFEBC2E0E1B0CDC868E5424C73
537D0E2D175E71FC587420BFD7AC427BAF74FB1F5A6CA96A0EB9E336460AD60B
99E39DFD9D8717C7A6D6C11CA3AD55485EC4EA68823BAA7481710E357E069C7B
B395F93F51DAFF48D2F7D08B4E3B22DDB52EA55CADD4DB8EBEEB7299D08108CD
1E885C4F2DA4E94783A2707038DE2BDEC8B9CB424F5DCA0B7119D0C0E452640C
1895F1239510F2FFFB1C16579AD0B8FD4EF2E4D482CE63BC029E7C2FE3F35F8F
E52843B74BF5BC2F50266878CE0438986A04881659D209EA2B8EDC106F0758A5
C0F1C117A33859BF6A637B7EAF0E431C5BA8F48B9394D250AEA3272E28F96FDB
08EA86B2FEBAC8C818F3B0BC1ECB912A775C786A38B40AF2368FD239835BAE30
B812593586C68D4E386DE062171680A621AFC52334602F1387786E1C20F6D492
ADA5E956F352334ACD0AF4C3C95460939ACA77FB2F671D775218CF0652733DB6
25D74230F194BAD1F64F8E1B25ADF3E8981EE3193C099D63EA87DB6E93A63038
492CE12A8E45E9910E4AEDE0DCBD78E8A3B4126262A98FBB59293D5224FB75E4
BA229362325686F2397CC8ECE4D5D7F24EE3B55733FC964F8B44F91B86404ECF
65E0D50D0013DD5F3A496D5E306B8D6FE5A0CC795A5A3723F8C4BBA3D35610F5
B8C334ED030FE2D062F812E1F27EF87AD719F0760050E210378D6C4C9EA93760
CE98772CF56545A54685764BE6668A2BC4B07D1B4387BBB617A74BBA86068EA5
D9FBD80636B0B7F3C78E959F03745282134F42ED94F24994A5637EBF5E7C02C2
357252DC9B56E55C75D4B9009DD1AE1ECAD689B29D9D6A973AF505F9BDE2AC2E
F1F152C6AB0966742685F118EA01FF695C3885A38FE680CBDAC4F5CAA6016CDF
9D72596B1AEB4CC7C230803FC066EFE34B9B22FCDB072AD8222BB02A0D026412
EDC01F4E90EE0661E928A595057E0C4F5CF15BD837D9A7A6A1D6DC69E70D3074
D2779481A8A2CE47A391BBC3942D9902230AC922CA6EDE98B366FE53B54EF4D5
1C6408F1FD9303868D90AB5FF1BD873A205F764A6C3E4F6D11D123711C6A2D19
4BDEC298609CF457757FD20EF91D685171EAD0974E99292CC00BBBC267909716
E78E5507AB938E23B55128E074387B1BD0BFEAF893C0E57D1EAC0B8F7755BD00
65E6E12DE332B2C0E2E28039D7F4861BA8A61D73EAC3A68AEC2BE858FA6F5A9E
288ADAC010B03A9E35BBB9E2940DD9D873F59D503BD3237116E27BFCF2182AA0
5D9BBFB9EA718F08992CB75CAD918C5B92C17F2AE9940AE012D0495838058F04
8348DF311B985AC110328D3A45130559CCD1DFBBE2BCF4760617AD8311449585
4136B0ED501C2195183948C7168699D831B1E7DAB2E2E8A683FB264FDB2CCD76
58B6CE02778C02C9CEC7C052A53C2C5F94BA58520CC93B8A88D2A8C8AE2A8E45
B6737B8AF1F57E75A3D284C3EC51E90B471E8545E01432069020742CAE92247D
36917338891DAF954AA3E40DE04B0E5763C82AA23A8788F65560872E1CC38663
9F271005E0B755C3E454F887DADADE82EF28FCAE9EE7C3C09D9B32B52A03BAAE
AA48530546227CA43A14806422ABEA2D5ABD009E721E6C2C53916E1997B05453
97D9C27D21D03E2BEB095DAD38DCA809B809187197AE9EE155E00C70897CACFE
8772BF4F68573DD76EA27EE0832619E7FF9356ACF8D811EB8EC1682333B4F2E9
10860AE6C3750614B1F6EC705CD0D63023BD49805F8F6963398D30E98CC72A4D
29CF605C5E4632017FDA6EA5ED81143AD5480A4B05263E3109A57ACE734970D6
7F19EF22E5EE9579AA78CDA6CDA820738CB11EB8690231297C28C7278DE085D2
0036F44462376CB9B047613E83AFE3F4DAFD838D782F0A65E39847BD94C184A1
36CBEB0ABDF1240804E17FB2F4A55E7DEC2F65A36E93704904D34F2A57E429D2
69CD7D46EC57360339DF1D83E316AF544EE261442DE64CA77BB0467AB271F0F5
C97423F2807298F6581F03BBB8E74CD51B27993D1E3D64D048CE82F6D9C182CA
4D5BD54E1A47590F5D199F81A14CD6CC570D0866C2471B661CE9D9E9B0D8F56A
7EBDE93ED4093608C304B16625DDBD20F664826F8C649F4185E85809A907A3EC
3ECC4AB043BB6D9DBA9E6C21B0B89C285970D6D6B114CA55F8E2C05FE4067E4C
F2943E5E633E2285AFF020B41937CB759B831D3A76A64B85569CAFFBF7DD157B
B9F0D8BE7F6CAA0F31B2A58B2001A141F43F21774DEFA15BF16B5C98DAEA81B1
F79333C841F5E6D8D95D9A33B3755E969B1D05D4126F3C299FBD21F1F2A2220C
BD4AB4EE540D7A4B9E55B7D247323809F10F4CA5E168E4669B184762F11ABA3C
F8EAAEBB5289568D372385C4E720C754A69A74D30A7833AA49E6E2F119064446
105A93B4E894539085E19F04A13CEED8718CB7334107724E1588A4654E517694
A972A835854A3F12283DEC479C6E7EBB043174784BB0DCB5C8ADD94CE93E1CA9
298A47A16EF3193B3142DEFE1165FAB6D4F2BB2313C9F90A373B2D96E52628AC
4C1C0FDA2AC3A9773EFDF7C9C50D75D11FAC30B698042348B5566E684088D370
A9EF940C10C1B689F54447EE11984AECE7E750A3787BBE66217AD2DC5D4D6716
EAD7606FB3969AAA16D37241096BBCA85E41841BE69C86FFA6D6192BAD1E4D02
C45C6A4B2A16270B905150781AD0CBE2C31761D0C5EF5A83988E4298BE4F53B0
27D1FB7BA3CBDA5175173030FA64BEF76E628269A82C7A8E07AE3426836A5C63
2B003DE22F9399E4A1BA6EEAA96DA7F4EBFF8966811230CAB206292F7CA51838
B4F38DFC6E398EC4FAC420E19C7AB884795CDAF854124DD3408327C363712BF9
35183A534048F693800A361FC43A088A79E37D0539AA59D618E7403471CC046C
03FEFCCD83FE6B893025450AE8FC1BD595A0EA99D3F8656CB1D76746FF94D8A8
D2D4E9D0C872B2F3C1D608857C14F8BDCD3D7CFA5520082E2BD6A2CC9AB0E94C
D9AD90EADD715EAE112C030B02A25681F9CEDF9C3B17959EDC0371EC008F7958
B552A4B5F384DB6BDC1AD18A98C4FE29D6CBECD1E211587F35796293ECC5931E
A11653C88E8AD5BD47DF463A1EEDDEAC23D2ECEF10AA9C3446409001F1940BFB
314E1BCD1759314B63A1097D13A455291FE85F6BA87E5BEB0EFBCD1B19763457
5E9E43E99A890BD8CDAB0211243C69184C5B296744948A5E6A0F01B4B2100897
8FFB79D62DAFFE284E555876DEDBD14BAE6292B6640C67D93F4DDF26BB395C05
9B2F6BB28E18B6EB95A8D8603CBCF21888BBCB745F4CF055221562A16D02C4FC
946894EB8EAC147C800EC14D7631A8F63A574A6526D016716558F62F1A9BF3C9
7A55174CE260870BB64877C40140E4B30D8E64163A5DB42C6ADA93343A2DBCB3
2F439C26A9FB90540A60A2216DE0FB7530E94F916E9F7A327DF43644C69917E0
7AE249A3E3F63B0BBBBD2063F9B9D3B51C456ABC221C502785259064080EF0BB
A863A9907341521D820215352E7A5E51F60C11C9CDED02329A31BB5537E12AC6
0D95F63AF29648CC6CE0838360174509785789047F967ACF6D452EEE66DD97A1
DF003CCA222BA504D5FD9E6F90DC1481EE89C9AA87D8EC26FCEADE09A294C59F
D983CE9CF44CC1939D7814FF63F75E6AFA072711A0926F09FD3E0BC5F1091098
90A9CE354924CB94DF16B94AE150EC524A47D834CDADC2605DE8B8C7C5C71213
85F8250559272F771DB58FC66139C2897A3AC7FA93F7998D6B88646A06F3D078
6DAC54F0C1AA9C5C6F2FC5BEBA9E66499C1C1FD17FD86DBCD50B473D2539C81C
66B8D7516ECFC2CB03B51D7B7B43970D7527E548B81840B1BBCF0E009CC38FCB
E9E8C2BF66A857E92C0CD5D43D3661E4B876AD5AB61B33F676C483DBCDF274BB
761F035E3159C42AD51907BFD2E72E12E418390C8ABD5E604A5F713EB733AA9F
07F2ECA82C53D624114193F084D28D29CDA14F7CAE58991C2B7640AD965EB45E
E548317D13778FED462D45711EC5796ACEC42CABB3BB2D1504D5B2CA0B42A037
AF6C21E0F052DF908D91B3AE5E5F3468F664E8BB9271C29810C03EDCFD2DAB5C
0ECFA1A14DA245BB650D9B8A3567DDE34C3E67EC71CEB8EA5BA49AEE9E948033
5E28B76B60185B5309F89FF6E74C9E993AFD7A699130E59D4833CE3062E7C68C
48A4A72113D2D508F53C665E80A814CB79E0F779A874EA9A7C5F30E320723CEF
5C26B0ADB6B609B57105620BE953B918BC1B5859F408083BB963423055E9DD36
1B88C1BD05D6248A8DEC74A30DFE972651C6EB653E1DE1383C28AAAA459A906D
4108FF8E302F658D62DD474D0E3A31C64148C4B014F2C57C3F1344DFD48C80D0
3EEDF90CC8A382F6A12902133B58F95497BC6367BADBA992CA36C6D06E8D4EED
57EB7870BA3E4DF720614F6A836E18F6E73A4BFC897E01CE81A81D64C9E7FBE3
B38ABE95EF9B7D0C1BED8023901A881C56B9B21E9A23BBBD42953F08C9C0BC2E
C811F1E6B187E939B7F456BEA50EE6ED4290D0078B5C9F2F6F646F7CB5033711
C2804440C0CD5C280FD9E635DDDE209162B4C233CAAD8F80A3FBB47859AA58AA
EFB6070335F65B05427E6D8DA51AE3EDFC89F00ECE8BD7126A9E0644AE1CC4F1
C61F7AD02B62F566FC9C543239676FCBA7A20E1790D9A2CE6D0DFF8FC44EFCE4
2A1BF419AD26BE9FBCA90DC4C8D460234A9CC3F286C2A678AABAAB62D1F20032
704A96A156939026E0C2FAE488FCCEE307AFFC6FB0477741797D13BAA611A1F5
B285B004D4771547273D30828304DADE409A69633BE9AD7FD4969CEF6DDC4E97
1A4B964BEB3845549E539A83493569BCC8DBFA18AC890AF17403762979391CF7
BFE217E63F58CB06CC6E5770E8ACDD0658525E01CA43CC69CD3D713167002ACA
1C42FDDCFE2511E1EB3632910F53EEE0B223FF38913E479BC248E3B375F7EF49
73FD1ABACBEB370E7276F3C56D43616047C69501B5C625001D09601B4061262B
28A20CAF45B086503D63B5EA4EF3DC3A209D74F947188F39B6B73F60E1087045
725AA0C6DE37ED48B3263A1E7900D19E2501B199822E3C6F2151246AE68717E5
FE572602D7596708F77CDFBC983EABB3CF476AC6BBFA609EC02FFE271CECE809
395DA58EDCC743165541A5BBE07FFBDC78B5C8342E0D43673DD10EA6E36C3148
94971F670D722BEB033A440E5BC87A59593D8B2741C8A4CE88818DBDE786A586
72D4A87EA8AC9079720287FC5F823CA9921C3854576B080B059F7A0BDBB25CFB
C22C38E3D53295D04134AC365FFA349E4063CCF762637FCBCA9BCEC22253E006
4B6CB4B3DC72FD2D614A0A8DC452F1618A9593653DD4E98ED58E7A7BEB77E5AF
6D59B4E24888CDE91725E70D8500722D31F669D39775D532216C553F6974E9C5
3AF9404353C017E4C0916B754F3E1E7D37241D1AA0002FD2F71E2F064A477ECA
0FF0427E54D854007FA9676C2EEACA89940E24D7E4900028735753ADB0CAAEF1
3510EA22AA11A489B87AF30C8B86313FE94BDCA257324F94B2773C8F2A260F55
92BBA2CB80757074FC32DAED326E8CAB9D553E5FACC510F92ABDEF1C650C023A
DA4A9B9431451A69CE975329B190B81FDA83B026C672A49D9AA74614F509F8EC
C6141BCF76132F119742E4BA2415C741D529C5C10F6F27AC125F5ACA823AE469
FCC0F849861E095E52A35C8B2712295859D224DDDD9AC4D2A2434238FE7B8B57
D7DB8C45487B574C5E106F00DAEC3F4360D4B035B0C31386AA3E97B938D2765A
89A5B3EBC33E19F59FD08F39FF5B17428FDEFF5F253A2DFAD4EC609A142FB72F
9397E7DB9B67509B31ECCD9F5FE4C0B2D07C12A0CBE1CFCF0A5361D90A74C713
323590B20659B19D3FD1D93EECE27DB7157ED73A74C55F9E94829E5A97DFEAC2
56AD405BF4F490AAEF2FBAFBFB0FED83AB8CB508B767116DA9FD0EBF4739E5B7
31154EF28AE42CFB6C06F8081B01330D97F1083E522F26C74953F5E51BAB74C4
1569A34644C79FAB99D8D14F3336879E0EDA0D06E0218FE06421203B50F0B63E
D53B5CFDD47DD3B201EE074CF43047F1E73D4C586EE8D5FCFCC623DBAE670116
E8971A39994D69832CB5B72DFCF73063A1A4C4C11508352FFF87A0A3FEFCDCDF
C593F77737CAE5F16A552B2084678B5308E0FCFAAFC7189915C1FBDED452C9D4
2F40C548342744B6CC11A299B06D30ED936B723602E5F7DEF09F937900A12807
B148F81846FADA473ABAD1F98BF0512B72CF71F1369F521045ECAC7B57AB1FB6
8E29255076B117FDA0DA8929F152BC554707C0F139180CAB65EB9F1A6FC709F4
2C493AD70F3156E174DBBD4FF78CD94627BF4AE66CEA8B45E1E8C17376A2E7DE
34C8B7604A6BC84A42FB5130EC3E58703F814D3FFC390A9542C96A21B4CE45EA
5AC972ECF5D9A9A343DBC74F00E0BB6B1F0BB2BC78D1CFDDCDA3864BDF32FCE6
E3B2F0129AF80BE3EFB786ACC242A228460940D12507B823BA3ADB51C0D713DB
20D25516551874BE4240150B303D4A8BE1488FDCFFEA517DD24C31B1E7CD2BC7
BEBD5E84112D51ACE6E9024D3C3A4996B5DE86B4492189A4819CFFD487B5B915
079EC726C38509EB46965800C177372CA5788AE73E1C85B8E3103CE51CFB52AA
145C17A8EFE5E1AD33EB2E0533A20564C40DBFE520CD99665872AAB48DC69A93
F1D663D2801E8B42DA00B0FCC1054EF4BE606C629638B706C6F8AF9A848C3ECC
1DECD61DA136902FC58A72585DDAD959C1847E31BCFBED8D337C9BD91AA036D8
E67FF2BC2E4976FD5DCBF875257FD719D2378A25032570ED20CED6A13674D3DB
002F850134904A7214668982393B095EA7C1C2EF7AE409CE7F15367E83D83A2C
4FA8B44168F5C809FB457DE0A5FF53B434D667430A6A38DB6B473D0445436654
E6E1F596535401F646AE43A1B1C65BBDF5757E2B97710ACFC06C5A1B808D3600
C996384F0737CED4743DCC92599EFAE822D4A1D79B21BE7E5AF5C86EA7A28FC5
9FBBED9BA791D7F54BE3E0152FA4C620F4DA56F137A1D3FC5412C931FB4C31CE
7C38343E5748424AA203804E10AE4531E4843E71E28DFA945835ED9C645DC50F
4C318EF16024BEAA80748AA6B9E424AD767D0B78C33245979F447DAD49C85ED4
B5B163B610FFA8D806C2B6AEA2B41A789129C38B8B512C96AA16AC20267345DE
80E185D6F72FC6BA1D0B207F2F81547A69CC6A56C4B5671AAB0C05502C9AF813
42FCBAF43B038906C3DB9D07B1D2FB6B86DE8A93F0F9003A3238C62C62101721
7D91D0E206E7DA4BF68D3F651D6D19B217435286C4BB210C716EC9E25E26B580
C76BF6DF34513720F39A766F63845033622ABD54D9F3953A742F73BF90B522EE
1659863CED684F0F0157FFCD1DC3F6F77637D5D21312E137F269126685A63C0B
CA2D5D0C95B082500474E6BB4E7B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD7C1
CE928A3B7A62E15FF0E53E8441C88EA7EDDB16ACDD26093F27AD276C7EBE9E54
1686DA5E26A4CAEAC39715DEC0AC3226F89606D8EF5ACD55D67B059BF6E8F30E
E359EA6416D91CE21ED908D6F8E0DF883970D349DA85F749026AB7D8CBC93B9C
B12EFD2936C1B63ED2B929C033A7F9759BF94C668AD787FF73B1BC042E3BA32D
6008B89E8E030D46B0E9F0247510E37735D1055E32143E97A11060CF072D7955
9B316AD1B56F342BD5347564C463171E3B2271E4F2B25C44E345854FB204CF96
E9441266931727DBFC72CD872C534A411593D10A734F54D32BC5663D02A3008D
95BE5EC1AE472B75ABCE6A6BB030727318366835FCC219DFFAD9A7F7D2850C50
C01F95F2BC7443FFD645E8EB8863132403F6552F82A6C3CF2AE112F8EE4E7A06
63367535A261D18BB1A26E4C2157472E938C018477D107652BD59E002C56B3DD
423BE925DD0B46BB86D33CD66D069CB847A315262F8F4F114D713DDE8D3C9B37
40FE2E9D8D012D2D358ED89B9258E54CADBBB3CC59D3FBE6A84F1F9521B6E05D
0A0B2E0FCA57280FBA427EBCC9F86882CD96EEB8F3DDC554ECFEC9AAC229C31F
9E8C66735C59EA38E3BCACCC6F85A6E4576CE0D0B850C5F5505B61D785C6568F
D459FA6AB02F16E58ECE66C909B7040538B5E7DE80B6DE055DC28C1B3CD4A50D
077FE7AE2463F40DA89824D1C5D17DC70E135F666D6CBDEF35A8DF7CB22CD7D3
71D2156E4C040D7FFF62F56653DD40C4DF8D976A9561F7A2A4AAA27D75E805BB
F6F2438217BA5121CC668458620DB3D381D5677019CAB09FD5A5ED804CF9A763
367BEC85D9D26CDF0AEAD7D8C7AD70B7102FEF09C25D849D09E261A80C7C0A81
E6A62C2934321262406E81E6D5284196D0A5173202970C50B6914B1A9FA36793
CDAF2C6B0B5B2BCDC3A9A24F32657FB3C5AB5CA53FF04D309BD67200DFF251DB
7C1E872D27108DA3720BA9E0423567DE1FB1A1C7C39A7E38131BBC8107ED4187
C7F90629FE6A0C3A2E91BC1D8766A4FEFD11C3D600607848EA4C75D479FB097A
B43804324D050BF5D846C198468D3B99CF91A25FF02E328B4505CE523493D18F
3F02B9016E3D49C2D5D9A5CEAA57219F11185AE73046838300FF9A722327A7A7
0829405B8057567BF58497ECE9A3914678EE3A7C7BE83587861938BE31028361
9DCD7B2DFDC9DCC814084EDBCA084A7F5BC024835129BC973464E42088642FAC
FD91D0DC3D0BDE2E6DD79A6CBE75AC692FA0725A24BCA26C14569B48443FEDE9
66E1CD647E1807EFDBFA1B2EADB5EC0435EEDAD922BEAE31D1239719766CD650
AF2D9B1753B7F087F228DDAA17B41F60997B611C4676FE94913335C35BA539F1
DFE9775FBAA1495A572719400771332BF013ECA0872AF2B85E7C1C3E750A52C0
70289822BB030286ECF062921A8D17FA331966743BB807BC62ECCE310D8E8082
9BB14C7D4FD2C4E6057BE5F5C51A242002726254FAC61AC139CA000B293D12E5
797D09B504F072B85E8E4F20FBE600F1D9DD0E0ACD84D43E356F2F4279001DF1
05945CE0ED14AFAE4C5E3ECD955E06BB19AB872D8EBACFD538640C60E8146EB4
0F9A01EBFED0DD4DCF5CEA0E750A2A8A15EC363DAEC92DC7E8BCFC67C2C33B0C
612EF2220F55F8342930A75193E883C04AC3D262EFF196C1056F26BDBA4BF29F
957B8682D21CF1CCFCBAC8BEA132D42722ECAEBA773E594003499F0F90FD53C3
0FDFAE6A7ECEE0AAB8449EFD258C8DAA3A6A5732A7CB0A03B0B3B96EF464630E
2E55C20F500DCDE8D0D4050278151B43557DB81EC1A200EC7DE4135733C7EBA8
36A58B084F2D12E5ACBA4C014A2D47DAF56605F718B787A38CD24923F8309743
01B03EADCF209219746A94A779EE401A821E659E84979B100B84152CF6E0E17E
BA2352DE294B834558F1A9B88ED06339E508D2D101C6865EC1B7DEF88C2D8795
F4FB986CFBBDFDDF58734B9E8FA16F33A2455597B54F64CA976AC858EA44141E
00FD01A504D905D1F89C5B497B4533121AC08963B5FA2A312CB07CE13E38C054
00B8F085FC7A58576F23CD19CEF83ED66EABA8CF152F0CD5EDBBA164DC9E9B34
14D00E9F5B712394804BD3881228AEAA7F8175295BE364F4FF90ADDC9DB515FB
D7721D83A1A4DEE85A5AD027261EAF5273A61604934BB5E8037C572BA8BE7D61
36C56B289D8E66A4AD0D7458B8430994CE4CD9AD3349225E6B8E37C4EDAB684F
1C65D2FD7B850EDDD9A2F0E12A7B679CB444F95AEEEE4199F65D8CEBFBC0C2EE
D9573ECCCBB08273A876F7081AF9F3507EB647E3C639BE99D148640D9C316D13
A7204062E3B392D2CD3151B4FDB8C260D0E3D67FBFF208B4187A30472FDA891A
C27B2BC08FBC05291063120165B4379B1A4DC9D967DBF436F7C6B2F1CDBAC5CB
B4AF4E5AB320A83EF5F8EA5481D00AC8DD404ECE7B7EBABB8F8300601476CD50
E2FF84D9B8BEE40DA110ADA3FF7F79157204E37A4CBBCB1EC27C3C1DC46D7041
C10BB06215A25BD1913C7954B5C609CA9D3854C9EA86DA22AB40A3B3886A6C05
42C01CAC627631109089E1016DF8FA12A8A16143D6FA33885C9B9FA07B565BA5
117DB4AAF5E956EC5D20F1C64FE1D7838ED6928D8A747395BE885E484B64A8BB
08918B940AAA49CEE6AA0893F99D4B3778E5027476035F832800BA44DD093338
38E535115F2C43537EDC6CF4402ED75EF443553BAECD57F4EBDA269B81574BEB
564CBE4600F992B6F7CF40123662D2F640D9972A9C5EB504763811FE1F00D622
1AC3D66159F256DF9FA97A20E05E027F321D21B96CB5E1B2410664A97DA38659
40CA0CBA130922CD40F23D12147C0AA2495B30F58881001BCAACD3ECDCF48922
7A85D6480DA41A9D0603EB0FEB09921F1BB83FCD280F51BC2300C56A6A6FA770
0D6F6C131841B0AF2B8AD1960A12E9EC3C63D5CFFD2BC79127EB92A645A8B338
AC05B84458A1D041678A1BC1282DC784E4B5441570FC085F54CD9DD02FBBCB47
FE1A015EFC812D65DFB3B335EFA7F4B85C04D8BBB173F3A1285DEE9D690E225F
7BC25B4B830993FB73790CF101C3BB9BFDF16CE4981DBC209CF5B2584CCCF341
8C6E9D8A2D1481910C957105287BF6333A5C0F5514AEA4CC65C257EC4A6C0F34
41C94A4F5914BD17456E8AEED7CF4C31FDA73EF6DC3734B626ACFAE9FD184FDA
EE2BB532708738312865C1F737A2BB00C4E5E9DC24349F29614784C3339DBF4C
4D4D95274BCFE03B1AAC8C7642DA07EF2F28988112405F80F2BBD632CA84397F
0CABC125351097FD8497D3BB8E9F0454F02BBF294FE3CE1EF37AA659B04631F2
482F244C74A692B4DA4C5DDC0D361A5F467481B87ED7CAB30EC2B8DF68AB4D67
659C31F4F6F7DECB5E57E0C7B6EB1C817BBC4034D54FA6EE1941A393CA17E459
E336B3BB30E515CA2D20AB8ACC2E93B1551E750DB24390D7F0804F28A5DD4DEA
1C4D4A1F2D1CB9276400AFF35CE170D31F2B166B4C527C15455276ED0FCD4F40
7B558A3481CF70EB9B481358180E21C8C2269AAA8389158A7675E0459FCAFC4B
99B7F0B15679BFA992CA2D8945B38A4BF8B7E599354C63813824795F928AF04C
833497F7C4B1B692D0495AB07AD8410396D179DA4C1E7F5C7BE4EFF59D55B381
ED8044E622D09785408DF04F04C9218D31ED24A5AF0600034B63C96B6B8CB995
B03EE89D82E8827E0BF53D4221CD9521C8843743A3DC5962563551E7EEA199D3
9C2CDB47047AEF41364CF8BC46839A433F25A80BF8A5BFDB70F041005A314344
E385D993F4834D1BBB4D7213FED3D871DA6939897330245583FF89394E4B3588
4FF9A965BCFD48D454188A8725EAB31FAE4CBDF387FB03FAA5AD122CB4A90F47
9AEB32B0CB5FD4048C6E2D1B0AC6224CFC85FA9DC019E9DD68465CC87E00F952
DBBB63C0DA21C717E348E0BE63120324C8FC4A1263F02140AEA93FCF1A94F1D9
A4D1598596C6DC9E16E93350914839FE96DE745DFA79F106BB7E6030394F2642
313A0F3177B83C5CC1D9C87E1F988701ADD7ABED9E697E93BC968A3F78C8604F
B03A0AF394E19A0E56F4E6C13999210CD4D7694F73F26D672A7BE20500304E69
9087189DB76123040AAC7E20D1151E8693DA446E9BF045BBB54DC81750CACB6E
1B551D61357F8DDAFA288C26D2E81986BAF8AFAA241DBD42E7FC2458BE65CA61
02F5F59F7E0D39884C8625CB19AC00356E030FFD1FEABAB9B66A82B0F78D75DB
DCE361099400C506759C99FE53B4525D4B8EED9375BA41440D27CA09DA9EFBAD
84B1FF01C814F3384AAC5A071BD9CD9501B18DB9BE2023DB6ADF223A02DC128F
2A2FE66D6852481697CF0694316BA5CB3E7D88CA425C3C048D00C610C3A99B31
25BC4B0F86A034F5C2771B80C6855C94FCC02CC2B21C06BE83AEA88DAF7292EC
4724723A954072436EDF60F30CD8AFF952E9BAC6071911A5EF8237CA9D177321
F9F6B14AF21276B0F2BA2630DF24410EB8C957B60AE08DA639FAD6277B8DD67B
472781E6D0DACBECAFBFEF8E1885081943A757218D16DA8C590FCFF3F25B87B7
5D65CDB23CB54D3C2666ABBD1AEDF849CCF9C181540243E36D59069A6D686DED
51A3C609700292A4CA563E6403B454E1F43DC5C2A092953DCAE43883D55FB60A
1F5284E22685EDCB5AF06EE0CD97141472458363E5A5504D88A31C2EE5CF4421
803E88923E9C74A9AB0C9AF04166E26851EFF3167F964ADA843677D18E3912D9
BBD9393247D435B57D760BACFA908B124958D4F9BB61ACCB6CDFCBAD9EA97501
961BED8EF1CF3516402C20A125F2D34C274C90004F41A1F9C9EB5EFFF31273BD
8C22F12467B61057FC53C3BC05FE1984512672FDA487FC97405BE2A5326F2E6F
6111C5CEE7C84A4D5DDD215780BA71E493103B563BFF48BE11CCDD8781A39D50
B6B39335FD0B631F14AC9D91A3260DF82DE7B1733FCD50FD46178004C1FF0F26
06AE7022A337747F4FF7DF5BE2434118077B908451C4ED8341D28930F8AC92A5
7FEC5BD2E149FD142ECDFE32C2131EF38CD0BCAB7CA78B73494A1C9C8FCDA786
22A85E1767C2C03611FF7B6FFDBB1D1FEBECD150026FADF051ACE28FC10AF28F
2335EF15686C68D4E789466852BDABAADD6B9E6E1B71655C46DE2EAEA3E16F14
8480E3E0A4266097351A03EDAD9D7E84CBF32D04F28E6DD3CAF0134F9E19DF8F
5ABD86CB0F8CDD395B5DB1DE6054E882EE083ACF0B95B9F10B01117606EF1129
33FDFF5F9C602EB47F15219CDD489083E9086E5977D399C546AD2D172C31869B
E10461A0747B9A864EBC9CA1C113BAB6AC38D8E043118CF1325D3CDE7E16708A
B7ADF6155C16A31569DDF8C689DA7A3EC6DA1F5C21C00067AE6499663C88B604
B2A8F947700A630BFD6A5038248E6C50DB4598BCDE50B80BD2824DDDA8CF5C70
01BF7944CCFC66887FF3C563185662EEE213EC8671211B2FD50E5DCC5484AD23
0FBC4EB1D310296E53F69B1CFC053387952E5A701E0F825B35DBBF865F372CC0
51A9D51BD9F85BD47E3C79CDB4AD769ABB374D1B705D61C42BC6E80B89596FC8
F4FEB2C582024503754847E28D80D14A8E100FF516E0C93259F7DE3BF4B2B5FF
C4C87D54488C6EF38A261A3524EA3A004092AFBD59A17235FED8ACF0DCD83B66
9E321E9A9D8D237C0D95B8D5FF033724D76DAB9050332212CD062A6B96FB1855
2EDB51B991870A68BFDB754F373B93EDAF2BD2ACFE90E16155C7F746DEEE3FDA
790FF3BF23A13C2B1B69EEB75950F9106F2BA294E65A846DE436BE650FC8CACE
55B67C8626FF3381288E936E1228CF4ABE44BB355FF00A1105C0C78E420FA8FD
0450E43A1EC101E5DAF2E7182728B38441B5B6FE9AEF855814CBD0A6EA1306BA
16CFC5D47C6DE264B0935A6170FA224A7914720E92784C5E7013ECA0861430BE
57698BAA04386B24BDEF8257F92AE1869430C6DE57F0218CBCC92D1FD382151C
A37EA407BC8C9B9034EB7994D97B10CA53A9034999638C65F45B0F57D7600215
E8FC23FA064DB1835826E276E14DD0C69117C6D60A211DA571C7F8B28772F04B
F1B180B3604056843FC5FCFEBAF81EBB3939B2C34958FA56CE6044AA1958EC64
FBF9B4DA2442E16E1E63B6E133B694005186A2BAF2158187792D7DBF6792235C
7AE95BFF0D17C742914ABDABBFFE3037802F265DDD1043F71FE8179FA6618A09
DA561FAFE270E9035F12399AE9E99E066688884DBEA2F777C71DC0B686ACA441
E316ED0CB3CCB6ECBBD05FB82552AEC0D51AB943797023065C805B19DBEBE4C9
A81AC25D795C54299607C439FAA1E16B9860765031E331E891870E0326A9D87C
65D63C14BB2F49ED2D369DE7A3DF565D441EBC1FADD0B0AFCEBECA917E174E7C
D4A7D383F302B81D4D4963B96902F3A84599D73EB3303D7B74883A7E4DE885C4
A4C8998AA0AD6282D8DCA42149633DF4B0865D75F01AB676E600823FEC28C30D
2208A868EC0D0082DFBDB3CCEC3EE3C80AD06EE105AA7D96542F152AA29BFB68
DEA6D43A6C9B262C5BAF4AD6E854F5D7A6DB6B531C1679BF791A6809164532D7
CE3126709FF083B86840C29AE1DC90307A59EF912E6F92A414183F977187DD64
DBF829FFDAF5E74341B83BE025EE14F3FD8F77D0AD0DA85AC49C5FB383963A32
20B4F4CF20328415B22061D7465917829F413DBF6B1AF5A3923521AF702F2FB7
3FFAA283511770EAC39ED55DADB32778CAE943CE6E928C99646E9A2FD208B928
8D26172F6A32D3C5E85739E3F5903BC42E6678C5048808436A6975645A8D0668
BD402797AF8F7820450727D615EDB0E898ACD0DD0202E1870DEEE60E02CA72E2
EFD7EF3F4D547EE8021B385BD6E116AB4C51D88BB4064EAEF6BB78DCA5905642
65135BF508B4CBAA3F01A38780E5BA1934E72C290E08134D763B15BB6B2B3B7C
1EA96FA422BABEE2F21ECD8FA6935F9367B7EE0E503AE7505C3FABC3BFE6B6F2
583055770EFF67496C00AFD0E4B4C9307B651A311AE3ED3B060EA6EEA5B735D0
D62E41842C07B53F30A6BAF8FAD751BF26B2493DFEE44FAC4B028833908B74A1
136BFFA3B0957C1905348ACEA2471AB4CA590DE315E6810E04C1EE107555A6B9
B15BFD37418CA33E3460D1C9B8E295CAFE8CB6024D40E18F1FCC7BAC5F8731AC
B329EC531D24870365A38AA8C5EEDD3B47482510597BC40FECF8939B041A8223
FBBC9371D1D672EB3B04B8A941583C00360A382EF21A8DD920396F7F52B7D55F
150680D62EBF48C20DCB99FD2BAE6853877991059EA433DB5485BFE8588C946F
09DABCCD5FE74AC5D873DD41494FA24B8B49C81270862B8528051C67824D505E
BA49C4FA76E65EF1CB0057CA9DE3F2BC26501D087C8982D6B4F80AEA1CFB78F6
9F2F4C1262A94F8E3D2ACB0A383AF5119B11CE71D9034EE8704CED9534746FB3
1E330BE53DE599E9B960E68E541F9694971041765C625BDE769F8BF4DA03AB7A
F9961F0943FF5F02016DD6F0563A26851CA387C2FBCE0E01F764EC4EDBF1A7E6
0ECE54CB38A727F74330192EDFDFC2778F1D8E17FE4348663C76B4E51BF13F52
C076E13A8D1AAFF5A9FBFB8AD210C285C6EF49CE374C3DD6C02669F517D7458E
AA898572455534CD88DCA90C2D7D25073BF52A79FE5CFEBD81172C3E68D48527
11B3A1FC467F98A7E2F4511DEB9FBAB2FEDC321C77C8B37D7667FB385C61FFD2
5725C9AC23F19267358C03807E6E37DD6D1B9DE5FAB1CDA68C7673B94ACC38F8
732C343CA190E6D1C023C9E3386A3E035B5D86EECFCA7701144DE33DCEB8DC36
446FB24D63F66122E702CD92AF1CAE9A5457C0CC70B58A5018F201304D0437CF
C4AA06048EE6A04A0110DE316A16B9A8A6E831396813D3F55351D4345014D35E
AC9BECE4E62BCDBF60C6047783E14D6F83E76617954E98B783439F6756AB0D1D
5EF596474A9E234E0D2BCAA31920271BE74A082ACB55C3009CDCF89116CA53F7
8E8F619A6D4BE86F4F67B2BC065A56AB28C9C4C2E8772A73892309E2F12284A4
CAC143C758C695D7AAC940D3EDD5D675EE14CA60D33D1C57855BBEF5F04AE442
78C4114201E0396101556500F4B20639EFBA29D2885DB06F99CF1DEE3F583DC7
8DFB234DF3FF6950333AC92AAC280B543D226AA9DC216153D0783F979E9B4660
3F14F884E46AADAEABB8EE6140B32015EEEB978E51957475B5717AC1BB4AEDD8
7AD40DD35C36268573F8FF592DEB0FCD0DEB372BA8828992F5FD19DD13DE0E31
E5E08B89B0E3941460CCB0AA4CE5F70833B40472F160B9DB1B4A2301F1EA27DD
7817A5C161B0ED588148701570D9563168F06C40EAE2C3813033A5D31E29D453
16EA9E34A9EA03A6C950682BD7E72A81DC48E8DDC9BF12FD6EAD401F43601BCC
7F39E89FD7D5E9EC17F6ECB0658FF099EE65B791C63EC6AF40656D93D61FBB0B
74DF45A0B3BCD6478ED664774225E83D3E036A9B424848525DD37049D7EDF4B3
170188BA06228CF9255F6F8D7F0FC79D2860EE1031DF1081E83957FE43600504
2097B4B22B32C391633A9B6B41ADC8D0D1A65AE6675CBAFD7FA6F55790E477C7
1A2F7CAA6DF3E02D22CDDC894B22FB149EF13F0515DA2ED0E3A18FB2EF64FAEF
DDE3B7861226C56160914266B1D28D74185B0E0FAC89BECF0FF0A1C98BFF1C73
259669E3AE2639BE0ACE6D50AFE89C2563E9DB55C198934FF5A56D8648FA85E6
58D4128465EE5813CB2D7A47FFE389777C340C370CB8C93B08A7D154E586BCF8
9071C9EB5BEB228C5A1BDB415F80A4CCC9BC7125B8324EC8C93B7A9900A0BE17
6BE30B16AC9710A4E85C6B452AFF11328F2850865F3F667F1F0B59E21C15AA34
217BC77B1E075A4BB99145EA55CFD1D12CB02EDDFB590080B9F865D19D39B03D
577C85C3A6B25CBF3630FDC9F0ACBCF6E45B59E95CAA975F9D6597FD4A96D946
B03FC0FD52500E8D21D81154899B9DF267A46260BD878D2C21604A3D4B856D87
09ED4FB4DD697B9DD918AD46C409EEB53974A69D2FC7B2005207EE7676D8ABC0
413F1E3EB92D3CF24F6243BC42E7B1F1F575D4877A13FCCE432CC9CCAF37A490
46BD2DC413BEF2621DEFC6E1400F9B6E24A3E27A49CE8CE993FF1F3520F40D36
C8A67486D95EC08325BB6A68D73736EE2874EBD426E37B28DEBA57C0260490AC
60C0AC71C775FF45AFC56539492C36E244FAB2E17F6874422629C08443F8B24A
C016B8E4AD6E163ECCC630DA0C8D6E8F9F0ACA31743AA916DD21B6377AF9C22A
2B3DDB491260E067DD767367DAE1B68791AE484865626A8F6A5D715DB8F3F4E0
91D61A550A2B38E9007BEC5BA79B849449A58453935004FFFC8F5B1F84294254
223A15094E872127FED1F5D38300AA6806CCEFDC940D0780E8B6ABDBB695031B
40EA1AEE0B67BC4E1D147A1B7ECE2D245D29A9A0A522F695F0C4CC62A0CBFE9C
CF2556E28A2DEFB6371422CDD07263005CD57098D6585610C7969FFAE73E095B
F64D523EA5C09FE173C101B0FE0B75E3C5D851094CE50D476DBE3061CD16B6AC
C944547F698E0DC00CC722B65CBD277C5DF3B4B1275149EAE4F39F192B2A2CD3
C1D603EE3527EF55A97594DD55EEEB110DEBD28BCCD7B42E245579D29D18D7BC
EC02DE98260ED0FD35F425F0F8F0992FF91099C74E1A0AB169A86FA65A1084DC
7B4B8770D3E62C7EEA9759D337AA29BF42049539E501BE09CD83E8DEF82C70CD
016F470BF81F92592AD968CB3E74C7CE0C692A00E53F59B1F52B7319B7CA98A8
70C13DBCE520C20E6591B1F9A12B73D66C9CE0CCBC968754048C01EC7E5C529A
F8688CBB543D34230CA7DA81F744079461180436BC926F08D69F8EC396505AD1
447A7FE4282BA1294BCEEA64B7B3BFDC1BCB64A3CDB492B2E6977DB02BD25B13
6FB202B9A33D47AB634408CC4D9788C0E3CB5664C60D8E524A15FD6DA781E066
7C2FD31E9717FE5EC1A550EF9E2FDEB0F43558C6E59D0E9FB252D7C7806F1AA5
9FE77425FE62C24ACF7517F38BA98A706E2A30A8D04F8F9869AE0635F14888F9
67059E9FE66E7E93F104E59979F5E3892618A1D6D5332E1F557EE7668528DB21
6195143E8CF31C5D103CA1E66EBE8EB5E7A6939C43ECF80EC567B562F79E35A4
828201F39D51D17FA7017754C7B13E4890D453802BE679D62CC494A4355AA673
AA61555EE91D01EFAB45F6927C79AFC28165EF09AFDA587B09E521D96E58A9E2
F58E923CA03210944053DAAB56B1075A0C3832220752D104FA120EEAECB91EC6
7FB176F2ED906086FB7518C7167965800A948748DFF2C4A2EC29E036A55D98AE
4F2F7798E4461FD6D3DF632A9B2B3308C641EFC16613B8AD5D886B7819716DAC
4F88799EB9D0B6E11CE72C7DCE7A7831613180D6337DCFA27576320CCD85B077
DA331A705CE078FF5CFA9DF6679D980EAAC6131940026E3C2297E197FB8A2811
89E9ECDE57FB0FA418C674FED3C768549F666DE2A90FAD69A42D29B4D95429C7
651244276269FA385532ECC358EB60286FC8CBB7109522E57F5448092DECCB98
2D3316A0164552AE036D30935949DB8929F2E389124FBE50D80F35173EB83FD2
23EC7B62C2AA656388145B780B6445F773517B790FFB540FC1AB69BA768310F5
37D6521E52CBA6B2046A89887F2C60A24A1694517F78471A0BA585AD457EB21E
A14C919CE9F13C2BFED1652493DCB1023BBEE29BBB9093FDB99991507C71753E
E604A02EEAD2766C8D058CEB08DBC89FDCFE829432331073236BB0A23BCDFF0B
42D24F3975F60379C9726EDE3632635794954EF4301E78AB084A8CF09712165E
A27FED98C426668294F6E5A32EEEF36AB9ED7C85223DDD32EB0138177F7BAA9F
7B6D47FD3DC952FE14918B12FB8A07A7593334F5596600AFA61B697507FE0753
D58924A121D2D3EA73BAB53FFD35C67AC9C3B91DF9A4D4CBB3561EBACC669C0E
434C8D1FBB1EB0E9F429E9DBA98D5CEF86B63BDB575DAE9F7E1E55AD308CD97C
A63AC88C80A1AADD820F993EB7ABA18FCB0937095FE4487256A303C02772E22C
605E9F3240A1971AB1F757694CB3A8E16C788EB48D83E3B14A73CEF43B6B84C4
5C949192375885FCFD9F1B3523CFC02DD50D55C0575EAF4EBEA0BABC1074BAE8
EB31E9DE3C11E0011F85024F749A571A325F926F7493DD611F3CE69BCAD8410D
C9787A8C558FF9C7175F653A26842C9832772C15EB82E86734FF9C269DC58F79
7F629FA6B66BFC686A71E401C3D7EFA3F6906CE753C5CF9AD095E0BD9530D515
129F59FC510A6ED78322A1013593706076D62F4C407BE252B5F31039CFF52E7C
BFEF5D5AB3BABDCD98A63B8F3650F86AE90725D1E6E89E5E8DD698B46FB83704
ECCFD2A6E34496A866D0CF8748FBC7B676CB4CCA7B5AE871BE31318865A20F22
14E2B7B663D03AB336534CE24C80F654A39D2C5D50CA53100D2F362FC1C2780E
963028ED2ECA0B7A027A91E51976DC269E8D4CDB7F92E030156C7AB18411EC87
45F5A0F2EB766957C4B309FA76BC36084200592A259BC950CD6111C7F689EA11
19ED5923656F6B65295F00A4A4F6B903532617F9A50E224F50A0E9F15BC58735
B72F30CF764EB91F645AD8CBABFBB903B090ABC8D0222F3F3AB09281FC778878
790722A0D712FD2FDC3A784CB8008AB9107BFA4B49E4F7DFCBEA9150C9149C13
DA7E57E3A9D00BC88F043311EF45E6EF1F6C389CABC69B231B03313260F2F2A4
D826FAE37C80417451475C92C2FD4006211442C06793AEE59662497B7E1272D6
209DA616F6D521685BF54FE4C2EBC40CD2A6D1A85E6AD5B785B9125351B6CB48
60EC40C54F399F517533F5EF81B91C58967629EDDFD33475FBC1BDC734342EDA
77140BDBAD48D1DDE0E54E7D0AA3C8F86500ADCB8C1E42A8910EEBE522D09785
408DF04F04C9218D31ED24A5AF0600052D625C8E686F3F263BC002C8884F38F3
BB6E09768DA503FE95AEE3DFC6405AD73520B4A78AEEB96AB6B0BC32B8F881C5
8222CF1C4DC905B343BB72416574240E31C0AC76A5A5A5F88F111054172447AC
57A8B69B4DAAC8F3F68CDDB2FB1F77DF9779C16B2A621D818752BE3E059086CC
7D5B5D62A97BCD03931315E78D198FB6DD459C43D3A99428D8731ABCF5D2C83F
AAC1AA920326C75F62F22E6C1FDB76EAD40D9798E28E803BBDDE19EB95FB1407
91391034AE5A4971F5EA766B6EE55A0255EAFBD3CB9CE5B872ED2E95E26467CC
F181287B99E2D2DC1EFB2795FD0F5F92D50162CC8BF51020AB411A3A0AB79B9C
073319705A1FEC0452DB032189B0081F505C6BAE09E9DE09E2C08885C1042A6C
201B874841B2E405E8C77151BFFD667F44C211331156DC39DACA22420A2B9ED2
7C588AC717D7345014D35EAC9BECE4E62BCDBF60C6047783E14AC63A8E9E176E
41C955A8775EA01738B40E635AC2EE54B5ACC25C72216D96C9CB51264A9DF525
C7577F2777C5E162FC6D24A091A75B5745DFEEF5C1162900B5F1EF5F7B7C5AE9
9A990B727C6C7020F14175225EFEA39202B723BAE199A76734AEC487BBB103A8
547A0090F0342D4EF7FB6DF76A2251C779DBF0649F15D26FD05EB16A77011768
8F1B02C9134BA366936CDFD7FCD6257906262C8DFE0FF4EDC6C3611ED38BD648
301224DD7BF58E565C9981C744008F7B2B756528F96C21EE5D4D358A267105EF
47E82142A1B4DC97D164780529938A4FA7BA0BACA85669DA32EB0138177F7BAA
9F7B6D47FD3DC952FE14918B1891EF116CB33B1DDA74A819B97ABFBFCC722F8F
89314597308FA87312B9DB8D9242047477E49B3CBA00E555304729C36C797505
90E17D38097FEC4D2C4FF363A7B991B0DF068EEFCD36E2EA92908F0E80436471
8A41021EEF752D7FADBA5DF5095214B34362653C96C654A68A7224DF46000A62
AFA8A708D16F718A67D0F9C861175C8B950C2B99D7E418097A6283A679EA7FC2
CC059A0288FBA7FFD8FCBA92B250FE22D31323F641CD1B35B5A42DD3B33B7F1C
169945B7D7ECB46F45611BB4FF1222A09DF38B3FC60F78AF509D7B448A0DA42C
5E456918B5594B85C1F204B6509D5201534954EAF50FBA1228EBD6D94EB0D02D
0B1804227B1F1799E7DC2ABC7B6B87F4408B4C6B7B42651EF1A1506CC823E1B3
F8AF022920303317C78D157148A32E7EB9D6EF24AB0380691646A560F5177265
1AD8C5EFFFF4989C745D335A3D3E4C27E1F42C7A1B8E9052524513CF28BCC88B
DB085C2D2BE100530D97F1B8C004C38E5D0CEC4F6C9705A056A7D833976918C1
18A3158A79AAFDB5F55682B60974223434DAA8EC8FC416BB43174F2FF0AAF9A2
96FFA024D08E50A589B1AB9D18E3124289FE516C1D7DB9BB690920672A1484DA
74FCB9B97DA3C9B0BAEE79EEF4FC9F34CC3CE62918B3A27B48F540A697FA7FC1
1429EB19D919D7DBC518F407FD97CA74778A7F84E6B158EAC1AA298B077EF2B0
0F9809D6CECFEC0E8467C2BD980FEEBD369F2EF477D5817B04E7889D96F98E14
987970D8F8F13DA79DF4C197FFFC34D080C9D5352AD81E5644741F4B60E07024
6B45A2F750538BE39DF059F174A0E4D4D018798D392966ACD612A271B458BE2B
13D13E36D8081D6450834BF02B4DECAB17607E38807DE6BF09ABF862A40C0143
7B07B249F7B549473E9D8A3688EA894A10E88B09919D14AC0CAF719CC0D54CF7
686ABB1E3887D88431B413B95BC7B28987CF1D2FC793DB87181092987B5966C3
C0101F6E1A1230A212D2B3A73996227548081B113A6A1BE050FFC58BFBAFAB94
882B390DFCBAE523F294702B66D9770FCBF140AE1CEC83A595DB29F83D9A3EA8
EAA29E90E7089FF25F1EC05035B8C095BB8756C67A46AE14E6145F74D14573D0
A97910BAA4B9435F04D0B55C4BE5387D2839418ACDB2FDB3E51F4C9819203968
B3CC9A4A3EE8E9EFC3E095DDDCEDF548670425E514F0D2E671B1B980949AB215
8A837BF6D65CF2B5AA6B9464BBAE6366B333BFE71CD3A534016854E006D97D12
198F6B236CA20704E89739C4736309824416A286CD89C3816CB2B5C28485074C
B8465FDD0A4040E8580A07553D2958FE6D4B6AB4A3CEA741CCFBBBE438BF44F9
A39F651546500D38AE78328CDD31F9F7B521CC7E894F7C84EA67F561C76BE3A8
9E633A312F576C47353FBFF8A8E11747F7E33662A718F590A30C4D016D89BFAC
DF4042ADED5317152B3DD7F038DC11DA6AC4889EBC77C3F0096BEDAA29B50878
B837DB00E4E103A7460DF0A497DAD69E24D554BA5F3414A33B19B4E227ABB905
40D7082FE0A637A1D90E60EA51E2AEAEEA34915019488566769B5566E9CF42E7
459E3B3BAF213AF0891E513AFEB402DC38B374B688E35B16C183FBC6F05982F2
6F1597F410EB779A66278742B7F1A89EC27314AF6B56B2EF0DAF16B6EC93A97C
F7B7719DFABA4E010D219F4013A0DC7E2E93731B4DEC2F9EA66E8AB516C9FD38
46E540D8F39F442BDCC0353E22F493A53C3C1B37341F96F2F8FB4CD2BE21F982
5640A56A9D09821BD121F361A03533FEA65AF4E8AE3647590217ED21F091BEC4
8187FA6ABCFC2B9DCDA8A4F79EE8632D96C391E8AD901C94F7E9506A4CBB425E
FFEEFC8D661C109015BB842C560328DF8E4E2B7B121DA8EC580BEFD59C8C14E1
092A10018A46DCF3D8D2B5FEF97119FC63317DE1F4B4E20D4148FB922B4457BD
231C1E6FE60BC681F8C0F89C74FA01BC8B85ADF234936DBE82FE508CF3B6A5B2
7EAA295981C7CAB86BA6D173E045FC2392526716456CA944B1E291CD89FDD70B
67991EA494B6A2544BCF19040B8171AAF8F5AED832EE84BB9CCDFD13ED7461AE
A5FCB5653373DF42DE21664869A97CD458DF6ED9F8FA76DC41B14445FCFEA9E5
2FD219EFA3403A76D2D19261D442F6DF054696E9893957665D09318C1D02FC70
FA38C9C62F6A217136503039F2BFE31593DAAC577C9A892CC0177026B5191D24
20A0DF8BCCA477954232F8CC7F8C515F32D4806D3A90CDB3E6C5150D6F7AC214
CCAB7DA3CA55D4057949BB0DD7C423010C112B5B07B79B87015A90D186EED7AA
C6A91C08D9C48CBADB12927E11F9202F1708AF6A7D01B0F6CA88FE508A894375
D87356994662971B9B33833AF3470FD63C602011D8F014066B6CC7759EBC581E
42DA6692DBF585146B4FB0508F1A6C22C3A141C56FE3178E99108087B6BD2639
89A2DDC5D350BED88DF701DAAF2802DD77C1020724D417AA46BDF37D649CE343
8701F2DC63A2414FE9D65A6B971C164A0124BBD2D4042E32532BE628A73DDC80
0C45740A543AB3F5D165D628AF8BF48E493F89E3FAA8AD725CFCC84AA3BB820A
654E2172ADD9D7DC3426C00EDFF20384F08EE78F508778BDDF177521EEBAEC4D
BE7679F7D60AB6DDC04938A42C948093629B024E2E64AF60A04652AF6CDC7F00
D1321BACC1A23727BBF17F952DD37F237539F31B13E36D001F27BF4213D9BF24
601570BDB016BBED055EAD1B0A0467E33C05EE1A4BD09976958B9614B33BDD8D
EF064819B3430F2EA8769BA5563C7F827D62C524D4ABAC8800DFC71D43CC0071
C099DE1BD05CA0AFC72FBD8D56F88162E007FBAE852C0E40A4599A76D8B086F8
C5DD092FA058C822181427D0C65B19AEAB654DBDF2EB65869969F265341938B2
C7D6B979342D91D960E2A8E037290EACAB5FC3D90C30A01449D0F3EB83B0F7EE
5F89491E0A306ABA070C5EB0EE9CFF956E2EFE766A5B747F84BE1DB0E3543B67
1F8E82B7F4A6B953F397C30660AF36399FFE52871C3DB1778A6C7C93C0E98650
7CFE4F97C25B442BD919CD9C7FE6EC74A7B63BD4A3EC437D2B50649AF0C2E3FC
A166A58558207F54B24D45F9466CD8AC595D3080DF5C5078B6EC1CA916F57132
C8F852BFACFFFB11717E910CBC62E25FBAC5BD77A29FF54C1E31D98DBDF4BF23
0D87AF33C94EF58E1F6192942F5DDA51F4A3453C91E18A4D3C542F83821C56B4
F44B70462F9975A6E314A18959A0F474722C2C0261EBADEF3B9CC4DA476FA014
6532CC188AF98414ADA57B34316D07DC570EDF6AB622BD87012EBFB8D8D035A9
EAD4C689D1C554BC73218607863DA3779C8E74C5140E3851D25DAA8FB8B0114E
1B61394072E6F812DA7DBC296815020BF7B8C1A095A4A5471E292245AFD587A3
760C1E5CC9C359632CF59A775C2CA4912F97F4E9F0239E77ED2A4133B870754A
4172C6D6A6E20B301EECC069D9EEF4AEED9AFA2AB649CC397E82DEC420494639
3AB1B9A792961904637DE627F8C0925E38CBE6CCA89706B6372ECD3FFCDD6C36
4498C624A6C900D7760967AF460F1572DBF61E93571942845F997440EFEDEAC1
073EE2D9A57B782689EF3E945219DA5CCE06800868D9997FA2CC2651AA56E87F
3C7B4E14F72E75FBB151AD4832AF13B4889E2637D2E982AC66C2652C4373F82E
A539ABEE23CB7D4159BB4AE5DA04ED84F824A7B41B575F07D5B37FB8BC02575B
7D701FEE6FE6282787A7F448D78A5C13036F83FAC1B4C12ADE6F249A333A1F83
E14DFB0019C6C06D21CD197B4C7B75948DE075B321B73A951B83D028795FA517
BCD14F2BC5B745A39B9BF94363EE966113804D9DE7F43FF60993FF317E2A0B71
D337DE2F7E9802FD3D0FC88F519148EC8E8B05285B8E4EEEB175401084DFBA51
AE478DE047F11434D5E9DB9C48D3E2D801A8D30BC0E1647FCDEB71CBB663184F
E48D547BFDB54CC740B548215CA3FDBE5EA0DF1C071A17E1CF383C63018F10B3
33571A01CB83F225DE61EF218457A3223032F771FD5E820D62F91884E2C08957
5A5D3C4DF240FE7A40D36B902E868FCB2429E8DA3F9CB69F6ED0E6D692762D4A
17ECEC481B0A88D623E83EC18C1D7112E1BC3F3E5E4E0E5B1DE965B895D22276
3795E70401ABF28E40391D02B5788D40EFD5BF6AF35C043505451DBA0CE5E53D
E8908035959AD59F750A3A55809757F4796F06FBB89D980DAE8C1A8064AE5987
8016C62AD854AB3D18181EB87CDE0211B9AF1CF7F6B36956F7E274DC252C7801
A92185C8E8D535E549ABC24BF088AABBE5968AA560F24E8FFE9EFE5DF8131379
A057266485F0159E7E503FA019456ACEC1AFCA4981FB8F2AFF13C7EDA2F2CEA4
A9D57FD18327376981A3A3BF17D1597D57679FD5F6EB883E5F9836C7C8EDF07B
998DF1D411DEF6DB1F5A0918CB4EF430F1A378A9CCA88BA7F695AE30A6E7AD8B
6ED64C509DBEBC9B13370C88925E0A7959AD9EE930FCC9191615C40A790867F7
0326548D735F396AB618FDA6525D2F354533B0FA2DB2B49146F1A6FE3EAEDC5A
EBF4DDB6B2CE6E15F0C7670274541DB212A8520DB33CEB943FF21F34FB970F7B
110873733638181BDC3A6579676F30B196F696895372D9D524542D1885DA031D
FD6A31BF2E31D4AA84C139D19DC411958F3DE2FFAB37603DCEE8428981568B93
11812907A6A0870BBE93E55EEC31B0A985E5E2477D69688158B80931E02D48F6
0A2AC758489EEB81A087CCBC0FF2E710146CB192DCB494A11BF22CCBCFF84751
9FDD0233939F289D72CD6FA991BED6CD2F0AEBB87F65D5E67BA200E39A0DCE93
B7CE712D285882C14E68234B605493EF2D2F1DA1B2831CF387E700EED9D0956A
E651C28A61DEDA9859E0160E75302A12B76E4F0859AFD74E72E549D6322DD988
330340F9A8A938736BB11FCDDDF0DA36CBB2325C1A930F4338751684BB83269D
5DA30688183AC68C7C15EB0C610653D5B6820423ED16CBFBBD6F751D1479BCD9
94E54CFFDAE30E8DF83BBB1BE6777C425CBAA79C0E7A0D8D5DC9484C363220AD
656D4A73A87C36442EC9F0D66A3AF2B61E56B3BDC4D3026F19A2F1C3406EEC3E
AE8386E9FA937A0093127A715FA8CBD9B0CC8D4DD5ECCE6D7DB100632A4C173F
4DE74A32CA1514B3EE8E3C60C652BA18F2C930241C04D30EA749F0B581E94F5A
992B725781B5BA5A2403C1F415A29DAD3AA46C3898625E0F7E694B0742C0A3A9
62B20D62F0208EB2F4F744F576390321BE083089BAFE5B62AD63521319C9D98F
C42188502B59D4D92C9E78000DE2F2AC2B228CAAAF7BF3CF980657CCE5506A7A
C923DC5E300B27F327C68C51F061DCC9970506D4A778672A022D1935DC9685B8
2E3E14091FB92373C71F3F9B1649C5F3C80FF3CBC40AF7F9E5322188343B56FC
7A0D806F3AF263EC3BDAC914B2178CBA9801BE9DC2435EE6F35C219198C1FB25
9A191AD7834B7036EB4B5725B89DCDC457E16298A22308917FC1D0528AD2B05E
288AB395ABBE9EE028DDF29D2328AEC2B7534AE0805A5305F43B6F3349E6BA39
D97566B97EEB6B6CCF6FB4EAB00E6B58B250C7AE40730F282B4B89FC08A6E468
C0BAFC28B0C6C482312EC0C5E55CDD5C54468F327D683CB95FFDE7CA0E0E8599
1E9FE13AAE174D98DB0E87D19E837CD4F9A048B6845851FD32041C6E9869C3E6
07FEE1169483883F48FDACD87155B5882242022ECC0DFF7D19314583700796B3
D4677A6D2AED73403C90884F55AF936438B5A592EA78FD6596BA53690A7BE8A0
4551A48493E7C0FE2AC54C9AC9266A186FAA1576FB93B7E01EE16E5DD62866B4
1D1BD4ABD8D0ED9723E1E8DC9CEB4B363130B51E0DD7DB61E43E22E0081D95FB
0AD023C50E3AF164725A839031DD94FDAF62B292D12EB07EAF77EB14CF1AED9B
F3F37E6786216F69F0959D8D90CD5F09A87442E717DE9CD918910A1BC4CCD59F
96601A126886F2E4F6E03E2B0EC0F93374D7542B187A5F31EF2BD66AB7F4903E
31FD4565D781E79CBEE9D1A5E50890A5E2A7D25F376BADF444250182C60AAB70
EA5339A32BCD02D946E0193D3488F9BA2715F6BD98ADC39D122D16D58E13A6D6
79622B88481FCE48DD301002AA83244ACBB2704961EF579E230151ADF735C6B7
B6400188FFC83E4168467A22AE09E5C7F478ADCEDDDBC3A699CD1766AB7EEC2F
C100F1265B5CA097EA1FF72BF492E991C7C6C56D14AA6BD1C8601A43D345082A
831C1C838F9569A0795A1CEA8D1E2868724631641AC82DCD3714C42BEEC61DBB
5FD3B98055D36D39338973C7B7764276C9671F2A48AD62F2B37E4106946BCB9E
CC32FF3059BCA165CE166B2121ED6639F9EC0AA0850D66BA070C4E59918B67E1
499CF7D9088417879AA73D184B6DC404D71A50C243CCD683C85EE77CC4C708C4
65D990EC76226732AB74C8AC0CDC71E1409F19C554DA114351D24A2D5E210C0D
F9791CB333B2AE3FD5579F65FAA8161978AE86EE5663A3BAF4551B8B61B50C68
0EEEB658CA7AD364445E210831338B689AF6978D929610EB3B5B3F86179CB516
D72AD3F0A532F194C524458044D3C80CB40D65BF919B7FAFB5880183FA16E59C
55091C22CCF313C333CBF22FD744337C565E0EC2122C7A472C610CFAFCB487EF
442EBBF2A9B17AF640366E4C2C71A4C18953A2F108BD43B4E2E201DD453902C8
C2E3BA78BC2F4CF3CB1D2BB2BED5B898195B85F2976340CEDEA8F71D78BBD60E
8ECE51AC04A9A77BA7612E35C9BCE3CF7051C82F577B8B09A9318D2A38614210
BD832406A8BC38C574D71A43ED4906BC6DC19203559700CD83DCF3EF58FE488B
276F69554DB1DB82B8242EDE8DA67F0C9E04E47BC8565E91070E2166DDB756F6
5D259B8776C41E0613087C014EBE0844A5CBB454D9369869B2F7776E5DFA6CD9
479DF49115A3D87A95AFD339F1F6EF48C6666902333F0D7E23C59D2CE7BBF123
D9A76555E1C70E553FE1CD5E497389E1E4A7E3DD17F94B7432CAC3EFF49C119E
39B791BAACDC9B6B8C3EE0A1B91B874D66750A87CD172AF34129A3053802C846
D7995E00724D906B35A20843F253DC52ADBB1B931168DE5DECF9148BD4CF4839
3E530139BE17DB6A1EDE43613759B68D114146CD12550D7684646F54CEC7EA99
26D7D86F4117BFACCD6A7F50122D90A04C051027FDBC3C8C99440D4FBAACC351
F89F6C4BCF6223E7AEF7D1BF061950D57F95D79AD0AC9029B97E5BCD8731EE3F
2F295558FA475FCDEBB657FD4B6B468223DC50D59B0D423613708F967186E66A
65133F9C47E58A0E5014E9C2670788FA0F0A5CB374284DC7BF7CF1B0E73FD3C2
544DBE5EF019419BCDD80F70134A2C44CD38E663FA683E73DD548D879D006EED
985BD7C2D35E46D48D16608E6627161B9D05A7D81BE5332161458AEEB5647860
958904EEBC297FF21649EFA533331E4A008B3ED3DE2EFAD93BC4967FF861E0FF
DD170E3409BE8321430B4EB6B72238B57AAB07DDEECA4ACA5AB538E8D5FDD0B0
1EC6A7CF522CDD013164E4C2CE6E1B83DBFEE51B38ABEC21AE4C6F04AE1DD8E0
F43C73BACBB0221D7BFA2B88807C085ACE03C7910DDFB50D1F8AF637F24474BB
D9ABA3C92D885FD8BA47A9AFB16F310778F612B7561D298749C81270862B8528
71B00BD3F14A958CA4D71261A8F20872A4D72BBE987F4FFD757511F1ED020E33
8464B01DFD298C131DD656F159AF2447FCA6CDD30218E3ABFA3AC32A218C98EA
56F9F0B24818707EC8E97DA5531EBF737AF97F653671554AA26284FC07B37C9E
23A3B801984AE395F92D7B37514E8E77CFB600845E80B39AC00F7086BCB4B36C
35CF2E4A42B114C128525EABEE5A3EFD38C40BC3B14D9504DDBD0985505D6264
4E3722A5EAA0C8F43F36E1A974EA7B96311F8EFFD1129AA669A78FDC06810D5E
546CD334D3DA9FE95DA460B854629AA70CEC4B9A451A119943E2ECB4304977D9
11269B95AA032A9D64B50B488945964EE9CF13A6FF88DBE1D2484F2FF1F9EA6E
85001BCEFC58A38DFA91FD9FD7B678F26799A3C040A0A7DB3F7CD73D26E587D8
CFDBED78B69CC64DD6C0C7767D2FDCE4CBF50B94DF544D7269B594DEA201B287
2974F92D47307E44970A55606553849A630F5E60B7F6CFEBA9822CC2838DE146
70B744177D01FA8D6754CAF3D09AB4E6C371BD538C6A197F581A6F1ED4409ED2
CEE2DBA28CAA251ADF8293221157BC55078531D35E1E8392BF39717DCEDA07D3
42AEC08E2C600E1CDF7D42F66A5841198EEF63AA8CCDBF06D4FD5459F5CEFCBA
7605BFD9587D0D023275A4130B81E97C2A15E975594DA2F3A4B3870C214CDEC1
B8A6A1A8F34160C9719F79063237578A62E0C7DFDD51E77C24D925C7DEE314CD
190D21DD20AFFC9FD4E4BA741FCEEDB2621E0278EEE4D89C1E0A85B0FBC684F9
E8C5476E85B205B8F961AFA63AE766D25DA0F0BF187360F7F1D3AC6A0C4F1D2B
A57F515C4274980E7F675A7B7D4DED551FEA37D1194A97EABB75E62FBF30074B
701B39665F4BF412EBE8D4C2937A154FD01A8619131F6C724A435B99617461EB
83B53BF3E745C7C96F9B7010371E9BD19A712449C51B74773B6175E00D6236F1
13677A591DA6992A60910EA350C078B8B4264912189A99FFEBA48F693D280FCA
DF36B2419148A456405A6BDEBB44025A835D94E3FE7ED3DF496B27DDAEBF19F4
11F46AF98FF43B1D23ED27C9044F089C38E9AF5FF1C1BC9FC1012473AD2958D3
1E7A6BEC8B2DAFA0FCCCE51FEC7022B189DBD6A5BD42CF2CB2F0E09E31F4390B
DF44F003A08441DD4D34AF5BDEDC9DCAFE9114A903C84430D8B60167E8C9AAA8
0699309B01F1D02451DB722AADA6DB873276480F37AE332022B997F022EDD90C
D23378F9FD3F10F718F95D359103B190E2F324EC58B047D5703E9176D3473A72
EA8F847B7220B071C881940D1006E3B598E3BC4FDC8304E8A049B8BADD510C82
263FEDD03B3E6AE916B06A00D1C123BA1476C89AE2557822590FF52D27A6D375
B17AE94E486126604BB3082C40A65639E91B97483486C42A689153EBA5E4A91E
A73477B75333510D419E477E7CBF11AE8ABD71ACBA23B26E3D17D41DEB9F5AD6
FFA109673686B770A532801E9DA5E812EF756E96EE74ED62A6E85CE8311964CE
351D3EA13DB52AC6F6A1C3F8D55189DA1AB499545814BC2B3B2ED508A5547C4B
8B182CBE28D6D26895BD3EA938DE26B6844B3C83CC4049B8C28C85E72780D82D
E4420F29C0EC1F76DA6C55089AF3D95E3D7712F2AFDD734A558594466D19327F
4BB5A9B8E0C475200D0F7D8913B4E954FB295B5ED5498C4A68B73340A5EACCF9
D262CBC3906971E3B38D22EEB889C9C1E8CABD8BE3E0CDA0ED92FA1D5AF1A3F1
D9D8198F2F79927E5E0333A7860C20874BB2D716572D5A7BCA8922233F4A099D
CE2047959B83E604B15ACE59F935387F7A568AB4C2B2317D3C80B1A70B71AA53
7516A6AE93BCBD8AF397729222F3B7FE28FA141151082AB1027A7FB6D3514D0A
7E7D1DA3C645402CF1FBD742BCAA36262886D4F370591CF5565A0DCA7826F98B
50E8C6B31AF6BFA3ED1BD95F90B8B2E9814EC3ED27E9470F22BADCCD1ED1F872
BE30F7AC930EFD047796E9339C61BEF630F3FCE7952DA6E561735F25E7413D12
E8EFE2E4BF1C1853879EB79905E783A1D3F1AA6B7AC4296BCDC0A4F5CBA057E2
9D42C2E6A04520B18113D48C8F01AD2E708C7F8F38E38223903116D43D15598B
D4F57B4EBBD59017E817D6771D39FEC2A82A7BECABAF8DB98DDD8A8691F3FE1D
7B96C516DA7DFE48BF6D5B1B04DBF81D603AA8E1C41CE5D48D0DE181A612268E
F7551A226FCEB33E58A669E704123CC218A3E114BDEA990D7333588CC643C225
13C6F69FDE343CE33E17013D49C2847F0E455510C6AB9398D0660C89E1685C61
048665473182F20A6ACE54B7E7A9CF3D1FE6827BC9001F22A418A7E6B2B8D3C6
CC13F70E6860FB204A88A342940F8D655605B5256E190B633B9866031EECFFF7
D17B997EFF71C0B00B951A7570A341DBF602CEDCEBB9389BF0BA95B2A29E90BB
4820B6AEF318B1F51BA56338ED8EE2895A696AAEF0EB67902FA53D9E8BCF2B5A
7E7C684570CF6C8FDB960B9CC6E9435D6577D1CFB719FA810CE4C75047935225
91E00507F3BE3429F7F95BB5C3D6236A66ED188BFA6A2D0E780A0FFD28D07F84
984AA7971D6A094331ACAEFFD953475DEBA9B67B96D3E8777A88CBE48D15E816
1F327C4ED12888FF26D3263B0945F5091F25A923EA9D4730372E32CA0817B426
39F596DF7A725846606A8D52B84515E85BC8750AD3866456566D9D276CD2EAE7
2FB04C6D2B441334A7551D520299D99F2F7B3116CD75C97AF6298127ACCC9063
3E29661453F7A1C52E45448CCDFBE6CED607C21B60C8858C5707C3D6030926C7
1F72B7AC123A75C071DD47CBDB273AA380990F4230DDDD0AEB348B5C4C4D4EFC
5ED60AF6B27671CE2F0AB6396DAB35AD0F1BE44A6547812EB214F07FF830D824
5B0A726E4AB0F75C091043186EE291DD9A0E8E682E65C09E14B422484EBB508F
45A2D2D181212139CEBB6F132F0875DFCE9FCF90586E27924B27825841D72969
8CCA8E164C0B4F019F2DC10AEC6FD4E2A6BE1CE72DCE5CDDEEC7E3113C9510F1
8204616B94561BBF427E51D901EE474FC82EAF8FDCC119B80A5EC07FC42D80E8
3E0BC1242EF89D7602F38FCD0A3C36F5D90746D9357B43DC069BA92CDBE974C0
42FCD9A99E7109777C58FE343DAF92B397772B2D68FBC45D20302BF8C946B494
65A0587A81EE118B332B7B3B42882AACD6BE745BCA2104F0A28816B184277891
B9231F2833A112AB2936FB2FC5B96B4DBD2887DFAFFDC16ACC0183BD56F40291
0C9019348D3DC98C095C782F79B396A22D647140B8DFD3BBAA7BCC1FC72B4AAD
CB141166DBFCBBA28173E9EE55F8FFA6A78D38E4360FDD030107FFFE76CD0FB0
FE3330780B18913BE78B2373E0E96BC0FF6BE1358D69793D2CA0F53F0390D36B
F31ECF83D795D880A41CF3AFE48F30906003D98F0F6A1CEE4A6444BFF43C8B73
F4BCA5BBB3B240A8362813974AAA2B36D9F33649133EEEE8EB26006C2B49AAF9
959FD1BF8907E306D8D0A8D8EFD846AA5D5530FEF40198B16091B3FB2C085ECE
0127202E863523346BD5A991D0FBCC1C278F651AD8C7C956480334022E655542
91F6B5289082DA0DF0C6C223E5E377524A874AD0B8007E0C19A802A795C1187B
332F0EECFCE6876E4E770C81921FFF6F853B4D7FE479F349F1D09E5E6EBAFCC8
C79D0A30D1B2B88007D268A0A06DED6BFA307ECDDAA4AD53B3C2B0CF144E6440
0A0357EA85848AFE126C6497960F6331BD98105B719F3EB8704B933EF47A3885
068FCA8396A30A2E76058489FFA89D30DEE742311FE4BE262660F33321AECF78
62664A1ED3CACD122E040A0F8D3ECD1B056A35C37842C492D9FDBA3E75E14D43
59CD47A000603154FFC7DC2A103B7A7FE911C25591A8FB0D82B89F63FF2A6D51
D546031ABCB7B0DEF32C12F9EF5877DBF830D0D74499FD2C94FAB48BBF95B334
2044FBBE123751ECA5691664E373B5C24BB0431B5D15B5017816EEB6C6DF3A21
510A5B7D76075033DDD178B408EFF6629087A5876A17E553459D99BE3F7326A3
62834606D93CA8594725A4297C06E71DCDCDF1C92EECD88D1EF399EDA8CB0FC7
A9533FAF5164332F12D8ECD0B9218787715C8DEDF1B8AC4D4759120AAA689193
0C984A6DBC0975EA6AD0CFF8956368BCB4152454BD9D5DE9D002DEDF2FF6342E
A0130BD336290176B3E0B546698B6A12F524DC97030DF9378E971379458F91CD
3F83B840B2E72336283EB997E4B1EFD16A0A44CF77E73B7B02A4FD574FCE0B82
98B91A09B2EA4B2EC04FB6F10EA9B2EF431D73F3F2192200F9B2D3245B79FB2A
1CF6C47049430DB58184D56DEFCA7213829FCEAC430A54AAB1C09B86DD1FC732
DE74EC422D7CBA15CCE98A74D8738D3751413EEFCF3C656710843181F11D4EC5
AD39890E188D4845C35945753F8A3920FBFF92A7444313C171B4CD9037FA9E6A
3552760C1998BB54FE1DE1ECB51495B56B28A2C9438B74A118064460F8A6CB73
12AB9DC7B899600ADD858747EAAE222B1D550213BEA06364396D2794838BE07C
C61B32DC0FA9B000C5E6346C5D732DF9726C22340BA9DA1A144B6457B085F2B9
EC116092166C90766D576BA993F67F9880F0F845A2D4495714783E9CB13DA407
FF75D29464F7A66AC0787218F676D60FD5560B7E85C93C888CF7A26CE3D3B527
4739044883A4CC6C9D85241E18B46911D35870C88509B392E1B931F0E402CF17
A395375661954DF160077B16CB4AFC85B4C391418EC9A08DAEF945F0281B5A24
CC391AE3E1616B5B5E4B670FA5C2CEE42F98C06C7B364E6040B53C7C6207945B
1003FE55D3BA528BCA669D6E4C1CA5B9D94C7C633CB3E23DD4BB1E32E3308C02
2CB3B80E3328B666F7D0CAE7215C4B361B7E4695CC9613CC7F1210435F402185
00D4A8BB17CA10DCC04C09F4A3F1BB8B66D23136C74DC0475CE59C679F2F4D6D
D0447518D1E754A315DB854C03325CCFED1FE6FD1D9C25A863E348053702F575
C951D2404FC4B0AE30DE13C957A88EA4ABD3236982543BA9F60B3B52A72EF304
80BD30F59B2EBA3B7CFAA89CE01362BE0A22014FC7DA1A9AB3C09DD309289044
94416E3DF1D7FCDE66239A69C3DEF3E720A9E3607924D100D3CE0DD1B7884D62
2C39534F12614E0DF155D72F1EB250827963D281C493691CA69CA1A46C02C5BC
7E68BB5FBC64336AEF0928C0DF0A0B26AB9BB8BF1CB3ECCB044EAE0599FDEC07
34E129C3707CF076B754936AF4DDCE489529A848BDE122CB3EA31323944C1259
2AA78C52507EF104130515A28DBFE7F9A83A6854EE28FD1B2F52B2942FFAED18
B816F850268C5550019FD00B0495D0DCEC85581580839ED8D858AD4C77C1D234
747A1E2FE91EFA54BFF235444B08F7C3469ADBF7D45BB8074B1EFBE9EEB9D8E6
4FCBBA8DF494B83DF4DE5946B20A28FB47181CC398669E39517D4C7214E2BEDF
1740F55F8059AE072CF1FE298D9BC02F979A7105D887694C475EBB4B80A32E1D
225C1E85036A72001B247A6B330083FAC01F1A052E23200E94DCDA8807FC3021
A1E8B96A859DEE2E0336DF3CE8EFDFCF82B6294A4C68207B133F0F5AD372CD4F
290E84611217ECA70B2B6B8180A34EB4464ACF6BB7EB6DC648DD591585A08F81
174FFC885A4B3C55CB96C5D792E2DDFD91D5D62FEA685E885D7D7AE5C9E739BE
FBDA9EC9C8F800F862999D20CD6BB97B7CE62DAB23AEC8325874680134F035A0
44609A75A8C9A07E581F5025D9BD7DEBAD6F120F8723E9DAE4102AC74820DCBB
4B0BA47348D5D479ED20C4EDB676BC9C8A569B3E9E6F95C41DEA2C9767F0FE0E
D9B64F9EED0F48C9CE0F760604F8356DC0D7B89A083526C79010E937DF2CE903
A7C4D6C1C00C6454FBAA6D44F41E0A37951CF084DA9C378509B9F2CADC35147D
3D8F5CFAA930486B3EF25EAA479E80EF030A049A18F5D480878EA65EAFB3C3FC
36A64F79091E373D27C0B88AB5F039A24FD0F31D09B008667AC6B70F3C41E627
B1DB9876EE658C50AB297C87AEC434427B24FADC2B172D329D0064066026BA36
9BEAED96682BAC2D53944F47E4222A3F08E9A611B6E6CA254921B87278F4E10C
66A22E48B24DB4F41A38E6333FC85041782B25B9AEE1D47A23E5BD03AE612624
714E9347EB76B1AFBF0CEFA4548D31127A6FF5F873691F403EB1351CA800EF63
567A535AA731ADC5E20D30F30CF0625DCA254C16904F748048F40059E4C22CDA
8CF8B83BFC68C6C61B7606A35A42076521A318D369E3FB6100A37BE4C58D8364
93698B509481BC32E9C8DC4B3B1236DA3DFD04797A8DD688A07510BC1D6A10EA
C63EA4B4E55BAA92BE152FE8233BBB060AFC953C2158D476D0FE0725DEE6886B
DE038E2728613B962A0E74F946EA19C26B2B56BBAF1D727BEA6D69C774BE511A
90A773A97D8956A65CF6BF8D3F29A8376D9138E669628898FAE6DAF369C50781
157E739C254AD0ED3C0CA363E13729C17C71597FA2E546CF55536EA2BB37B3A5
CFB7BFAEE46118DD5939E7E12A4DDBA73D4ADD55E503C55A3A395AFB4692EEC3
5807668B6E1F5151D3D616A39182F77754CFF68E1DAD714EF0EE4F9F1687F748
B1F1C411E18FFE4860F33482293044719077552FCDF78E7BF9C10EDE96B37089
A1D702D5541B68C59A14614606ACA6C99A0C9920CE6B42AAFBC28BF1A25BB7E7
6BE7340C05EA73EE0AAD14A6148B94D8ACDB8D16650B2564CEECBF35843AA329
51359528E5BB6426A755DD90DF9F0ADAEA3372171FD26DC9C4A2DFC815E36687
F76BBF1A2983F1E3EF18481EAF1EFEDA0068BCBDB28A7FC073F6100D708C06A3
4D2E1D514FCB4FB9A4D6BDB195A9075A528E6E2C07E9AD472351050F942D4323
A5ED11DB95966742BCBFA2C222B3D112C7E51C107F52B7D55F11CD8E75BF20C6
3B321F0584F9623A71F05B694C7382FE2D69166895E5231E496914D0CF7F8A01
4EB7CBAF0817B5643FCE3568D247A4BACE1966464FCCACFF7460399F1F08F98C
E06CD4E4D1FF377A5AD37C15A6173CCBB15CFD2FD662C7ED97E956F2BEC8DA74
1392C241057A119BDFBDC3A5A0ED360B3511F823E75AD49BA7AE63B192382AFE
8FAA46CA23576A523D336C8523AACC8882547AC619B7153CAC0ECCC0A15C2DEE
572BDA14D8BDDFCF2743A15F8A95967E1D6E09587C4C0799B8DF9651B5B2A9B7
0EC43DD0689F9FA673F04A08E9A86C68ECE4670408FF6F998E1EDF6E11C471DB
ADE837EFB152FB148AC5342A93321816C9926B4E53BF077361DE9BF2D7E5C0A5
3D49E72D7728CBFD7B4105F597D9EDF534831D51265DD59CF4A57B60AD4FE2C7
A802F123A58715D6017F27C6AC66C0B04F4FED067304142248276B7E4F89A40D
F477CAF0ACA47B2E070027F7F3EB8A637D4CD25F99E61FD0CD611F999BA08C60
48F9201FB0E2487E6B157525363E1ED15520097495048EAF430EAECFE4448F77
D161F6228107C92BBA3269401AC08D9FDB5CBF741CFA9D1CA3196622B3800D5F
7DD5111BFB2971348449AEA380A8A82B78783162D280559166A2C5C06D21CD19
7B4C7B75948DE075B321B73A951B8175B0866ED9AA11865B538D351174CA94DA
51B8108E59C4AAD342F765C725ADD7B0D3769CA55C5BBF59EA72018C1A0EE48F
5529487A198EAF6D255658FC52EE48924ECD5D2ECF3E3E820C3CBF690D5A6D42
99765578EB49D196FE245D9E8ED8DA31BAEEBE736C1372F6B68BA070A8C209EB
85BB2279883146536FC853FE5F9BFECE99051D50A91C2AEB076031841EA02960
E45F039B09D77B795FAA9C987C3A1B4BC2D791D852F812B6D381A70475738163
88541ED991DC598699A434DFE659A1E3141EC96BDBB7F712320AC0945398FBDF
677058F9C6FE393B4ED5C7C3FB2E2E7615988EF6A5FB53A14B32250C17C02A84
4CD9F42A31F6710DB8CE763A39203944BEFB1931DD7E2CE0E540A398AA83F571
643D6095974664A09B9CAB51C523CED1EC41A8A8F3EFDF581F5EDD458C3CA4B6
A382EAB7585BFCB2813747EE570941072B7E61BB265B0BCE4285A33BC2A8FD83
B4D503F271A9E25CDBDE8F162EFFD0DC69628212D672B4541D859901766C1A7C
547E8B477BFAB8AF86E4EFDBA8527344CFA7C3D3D73B19D16D7A3E483E599493
3C00C985C1D700FBA7880EECE2D624A0A5EEF780CEABD8C958BE3A49E63AC509
DF23057B3EC569EB5F5F530EDD047A53B5B590517E753893D29C3D8BE4F0C4C1
6B48D4B7FB7FA7152E405E9E89D8AC1890E5580074E9FA4B87601FEC1A6E5D0E
9E9A59989A73512C3580CCAD46643456AA60531142CB2DA3CD41B29EE521879E
4FE07A9BE5700C1367B3DD05EE51FE87B31B6B7BB613ED01CA4D65F79C7CE47D
A8C943F5C8CEE96180578B8F937B8A29891AEAB0DA74214ADFB64DFD240A5272
64178991EBBB9338766F05519CEAB1CBC71F9DA6B570B4451375B9EAEDEA1115
846E0B0E5574C9C43AFCFCF697DCC8807A6AB03DC4CF36CFE2E6532E05ED5091
A015FAD40E784FDC453F4C8B22DB6903CBA08C02619FCA686B5792D720974ED9
249ECE9FE8FCC569A79673CBF0FD4C582927E6F48151E720E33CA846C5D0AD29
2D2063886DA7006EB5C0F75782A3C48BD6B7D4D9D991513F0911504B583015DA
807673416491068203CDEDD39F3430FD313C4E64190E98B0FE3A2FED197C64A1
CF08D06A7A6CF2401C8E0965B02D39CCDEE8A4F5B8B9FD7C18B2B8DE41915E54
DF679F12079DF942D87F704D6865CC6E424FE0A4F7233DF9A6BD4EE76B603B08
F34C87628678C9FEEE3FAF4B4ABC91988432BF3E266C7E751EBDBCCD3C64C08E
32974EE6F6CFAA3CB2DB259B0E212091A98ACDB7722E297692FC187C000A9E64
BDFB0C5928EF4C91B9FFB9528ABB5CF9781082DB56810D7BA76E6ED63BF15181
829CC565A712B55153AFCDBB3BB0AFC9CEC8C1F37209A144A085F310E1BF8BB7
2527903CED36060BBA2543BDF5B4BFDE7A4DDF482B946E7D764776EBE4BF932D
DA64CEA74026A9BFD68B3DB463B23440457B886315CDC41157A034CDF2A2ACCA
E8776EDAFB0DB7DF84489541432006ED1753548771EDD91B6B00D6BA9431B97A
5FFF84A6E42E9D35020965A0312C0A930453868E6AB868C7EEEC11EB668CA801
875F246817C2047AA02E88BFAF58A3A9554E4F789CFE39605C20D709C036188A
F869E8D791FE3DCFC3E1A07E4F5BBD6FECFB33D497038A1F42082A5AED5538D4
60D3DA1455C620B1E6D5B8288CA707E7FA2C69204A4608398B3F9695D080DF8A
78969FF3C08562DE4012BAEF33DC753F4FE61D8C79F8DA266F89F3A0DC02BC6D
A849100D414F220C71E9EFA7845A3A760A507B3D3ABC525B359308E0ABB028B2
2F3B9C80D003E0ABED6CF45ECEA90E68E7B199EAC3F1391D72DB08B0C95A9C0A
BF06921828C1D7E04C43DAF614AAEE0D8590A3A26854ED51C4A9A1C13CE19CDD
4E92B61AC064BF43F064D1A2FE49A02A2E0B7728F2C76518B70B7A86FFA7A4E0
AB3F6104C8F05A2A17D9766DA1E06DE0CCD39F4F6C393C39A8EB2A7B29AC71E4
6160C25E80658F0CD842A0503F8EF5442C290FABA7E7DF30633B6D5CBD885DC9
3B1C8C8E7926F6D8AD95922C0960D8BC35987EC5FCFCE1B41FC1324F0F306941
A1835FC0E53963712A6EAD0F218DAD2781926594A4119A58405B9555F4D928F6
6027A666C181ABD0A690B29535D61C41D6DF64FC316040BDF344BC219000419C
8FCB2DEFD9DF59F46A636EEEE6A62B6E1214CE593C8E6A44DF11FACFF4D9FA02
FDA142C52EDBA3D3FC938D8375A4F45D4CCE7C0A7C16D9FD8FF5149EDFFF0128
C29E7F9F523B1A0C7E8E4506AF80B17E082BC82917D167A542ED28ACCF4DF2E8
2AF19552D766E652B80E10105FEC8DBF22247A483DD8451FE4FF72E37B03CEF0
E2DA4C842ACF7DED497E817E23CEF2A923C8DF147D5AD2E86744AF3121372358
D01155020EC83B7A464BA7AA1E55B9ECFB39FFF3B9D1A4F1198D1C09F4F974B9
84F2CCE516A901673E93FFA0BA0AB57A17600467ADC64D600AD4CB66D8C6486C
75114F628CA13DE8B7EB82B83641730867405783AF699C608F9FBFDF25D67799
711048DD8CCE339CB2A614D91BB82D58C6BC26430662D2EA4F4ABD625E32FDAA
E7073BE7F560EB1E2B2930DA1463FA7AF089F3D419E9A2672908DD4FED70D495
1AA92A351645C0F7C7B35AAE92F7E371DB0875E368521C0D91F0ADDD4571D93C
D82F0E2D841594B7F7C7D95E96ABBEA0F90BB45FD331ADCFCBF055A062B19B5C
686FB67384E848FC6CDC6085CF2D85B1CE6FB5EC972D40388F0F4376A504D618
615309E37FDF77E946893E71C6007D613F23E810E27C4E21372D5BB7FEEDE3A4
F9832D772123E97C95FD3EEA2EA368A1B412F00CF1D9733F60663159CC4A1402
2424B04D606BA66289E7D1BAECCD78E8E772275C4B3799E553438CB4941D5E02
B092A4626A937BB877A9B5B9F62E3A3E9519357D6DA8121D0074AFFC5117BFE6
0A73D0F7BDD47F29D2E3EEBC76B56508FF1186915EF3E7E854D2160D41033F7D
61372851EE7FE6EBF34E77A05F33A7346D3712557003D0903A90DDD21812DC38
9FEE97284C452AD02996E791CE3FA4E6B1E8E4CDE540114BF14107027C1C7DA6
22977CD0C9C2FE76B83BDDB26B356014EB834A584DDF46909B6B4864C097A777
6CC8F0658CDEDF079A48B1E9805F5233AB9FDBE9514A99EFCFB21D0E5D01E6C7
E4E7A2E4C5DB6731927462A77AFCFB790136C1BBF8E2904BEDA0D641A983CA3B
CD93CB2E6BC18647DA98758A4870B11259104678C08E0A686DC3949FF9CB1231
8E9AA85FAA54C50A48901B0BD2B7C1CC8FF188AC0C591F66241E704AD5EF5945
730081C04297BC57A3799A89BD1EC1A5F6371CC1F33591F2A8A49DB13A050817
F805174EC4F5274CD189F02442539C6B58772B74B04DA08205293C48DDEC6576
D746C1AE7FA22FD67355D1C7C137B68592D25F11B7247A97D550F517BD932777
54CA0499684DB51F923EB30148BB8515DC4624A4E8744E94A1D7CFA0A0B83560
C8D3B72B49778090C74DB2E43B8037A10D16EFD30567CA3A45D7E71FCDA8AAD2
EC5D33EA5C7BB025003F7253B0851D0ADEA6873212E2AA4F00B57A01B8FEDEA9
95F2A4266A1FDB3A4EC6F989CB0F912A136C4FF3503F6178619A68BE2F69C8B4
07336C4B5844F684A6AE20B23A55AFD7F28769D0E4408FB8B578FE203F16E690
2714CC06BFC736557ABBBE9D90BE94F6B6856F82DCB872B6BE7EBD30F2CD24E3
E0653CA980E5062E5ACB3776F20C8DEA07DD5DA18A0F9447DEAC39B6D9A1EE73
D0DE2D91F1BFC86F469AE2F1A41133DD4066AAD7D583A452B6EBE4AA5CC919D1
62DD88FA514CFEF5CEDB87309385BBE8002D6A2DC710CB429CDDC02EC559A817
20E0C5187B153C2F3EE82ED5D0BA4C133C2DD1CD525F498B035ACD9FCB10AC6B
554102AC0A2F6F41CB0475E194A355301259B2D6BB3E9B1C4E2ED6902566CEEE
016668D577786ABDE78450A642CCD73B182DF672177B0204EF4B9E1551E4CEDF
1F29199A26234DAB5EAE53F4AB975963674B13A4E86AD845C624310BB5522FC9
1EF68C8C0F3DC32DF5542F87DB02501B5E6AC1313056666F371695D33497697E
2D7A8185EB91514A4214596205A4D885E3AF6401115BD59119126F97988D9732
91DB55A5B046B0EBF2A908463473CB57BD38783E1945357AC2B532DA297603AE
48F0FE9B19A8B05134B35783EA420FA01E91E311532DF41C077692D5825AF756
298C6579CD0DA1D24C3E247995C514D50B2772B05DA60F3D7B5393B86A912108
8E570AE4AC126B9EEC96764E5A44979BD4C929C8A038011DBDB337E7316DF4F9
1D66D2FB1545584D2FAD4D7BF9CB4F61308110F53B5BE8837EA00B305C0EE482
1F1A841057D2EE1BB88C23953118499582A93468F2944F37135D7270FF56406E
B8EEE656B20DD9A6A38BB39CA02A90B4180FEEC5CA96D42D103588389CEE4196
304537E9DFDBF69DD06DE927C16E0AB52C3740666CC4B3E52D28598A4C064479
056B1416AA868BB562D78B03709CD3463CB12A0FFE37E568803F7C939DF65564
F56508DFCE5B3F71E3CBE8483FF168860949391DEB5DDB7379E9F76130B9B24C
2C7C41B1410816784F25A6DCDBE78D78997F6D0F9E54FF5E4740BA1E51372FD9
CC31DA1D2D32CB4FB9BDD0F9D51BF73E00025416ADB35B19104AFF441A644E36
A7D8DEA809E522DBDC14BB684E22964EFE32BB28E28993DB34A532D0B6D105BD
A00C8187749973076939CA571E0BD225BF9EAF57081F57DB436F3F34D5A12A4D
74C51431873347E6B210FAF8767043F3987FBFC0689BE47E0ECB36C4AD823F0B
8EE0BA21BF96201B417DD3980E19093AD5E395527484D5231446488C2FC5C5C4
4D02E98274A9896BE05ADEE11A782579FD22A6CB27F65E34B582EF355E29A08F
96266915E85CD024EE8C5CF2E0D02D1F6B1D90B34D2EC70F87E83CEB41F11B60
4ACA1C6928D445F6D7556317EE3FD0549F314E2979F0271D7323BC09D46399DF
92F05CA2B9F3541A199D1F600041322A29DD1F5950DA35873BABC71206D28454
3B6B877368EF9BD735E9E0C433D20951B592FBA2EC6D8FC7EB2D879A8220E48D
FDBC73A556AE54F5CFFC4EACB9B7E3A426C099ABA085FA9BC3B0015F16F8E6C1
E59C86FBAE92AF75E1B97B73FD875B9711D2DF6C31242BC98C5AC00603DF3019
081BA7101BC41F40F0D5DCC3BE563435B56F14C5FC4558DC9EE58ED77BAD54D8
2350F8D5FEC74C550E228417C41E62FC3B889E4F22C5BCA14492D6CA4CE04678
3F0475472F986121045AE4B8F9D6695EF332183BA63103B3F1251E54829A84D5
AD10E164D3E0A2DF81A016CD9938353417E268C9583A048A83F6808BD43B94B4
C710B61DBBCAFA7DAA74478CD8039D07BDF69F6A0F37AC092FBECF40EC39A4C4
EA54037B35A0E41D29AABE8C68DE3DEDEE81F75D8B5CEBE22BE4E80D48C39EB7
14FF9093F83A4991BFE872E57FBF8F6C497935F4F3FE7ED773FF8492643F5771
DDB5DCB2EB3EB654F71A7481D911371DB94FD198C6807B6805524A6DE6BF2CB6
CDC54CBA3B95F7F8C8C1A8C3E2B385D041CC966D14ADFE8A1C6D9CE9867E501F
8CAEFAA915F86987CE65D35E0AA34F786AF9BC4B938948AEFFF2A0ABF4EA5076
4B9B5EAF924E6FEF3C8C3C33990515F5B418877256CDC518DED7B26B1FACC945
7FBCECFAAAC8485112A1E25E9DBE61822CD70E067475D61FDEB9645BE565BC78
FC4FC645FE75B8ABE0FB6847145BE7DE7FEFD7E1E779F2B1719FBA7192B9AC7B
142A94FB098917A7F48A3B24ECD1FCC93D63A6BEE952AFC58393363039BD08C2
B73ECD53D4863CEB7EC77B3FDBF561F770B4556E70B3405E4D540D9DCDDD2053
0112059FFBB3823FA6ABB6DB63EA1F4DB2B689DC734847D95EB90ED2D7B801BE
2B192A3927C0972D1F872789B4DB12990BBA0632E01F5808BDF21BFFB63A8B9F
E9E058C3D458BAE5E131CFCD68A00C5614A0B78653FEA603695EAEDC935FFCB8
293C9E7A457F5E0DAE670D7E08A7759957F0FE644C59E1D285454D6499FBB700
C9353DC8EE94BE11F120ADD4306F9C7EEC0B02B5FB0F26A08F37EC2E999EF859
CE40FDE431647381931E55D56B86A993A10CA26A6A8E4A9D5239C2A270530780
EEA08AECEDF311F243DC0045030D0C3F0C56ADC28AD9B7A0120B4BBD285DE469
C58AD1D10BE9DC235565B3FE598F1E11E9891BA4B6FA12590C8C5A147E3434BF
648A1237A097FF9D4FCD32C89128F1810DC8D6D92DDE4B0DA61C030373E73DE7
1B4DAB1FFD78BADEC1814F7990EDAE54FDD2DFB87F229186100A20ECC64C10BC
149729855289D9BB03ECC4D219CF4D6BC44481EDA75F72A5117E96C47147AFE9
B4024FB780EB559729BAFB50227911781138A329855583A76E2276B1B98A39AE
0F0FD06664C42C991578A00D838E388CEB9993A560181A670F6B3A5A1FF8D844
BB4719549E80673BA8144BB17DFB4A00857F86D29B5EFECF1809A402A70F4594
E3FAB8E6AF2C389CB2FD76A0AB0539291B9B8004F2214111B487C77A025E02D2
773BB8133A6EED9034DC8C2AA04CBD9FC04EDE98606520A6BDC11064F48234BE
3CBE38C92817DD2FEEE2E4945C2991979E723ED9800B00814A27DC96828E898C
85D7D617072DC4BF126FC3393E362D84DD1DF642C7E2AC2B5B2D0B3311A2D3E7
79647A9353979E6B597F1A9A0504F3A189014E774531D6492141
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra un)
@start /Fa 154[644 101[{}1 885.568 /TeX-feymr10 rf /Fb
163[959 92[{}1 1328.35 /MSAM10 rf /Fc 205[377 50[{
 enclmrm ReEncodeFont }1 553.48 /LMRoman5-Regular rf
/Fd 244[506 11[{ enclmmathit ReEncodeFont }1 553.48
/LMMathItalic5-Regular rf /Fe 136[578 1[449 320 324 320
1[449 406 449 664 234 427 255 234 449 406 1[363 449 363
449 406 3[234 1[234 7[449 1[621 1[621 7[625 4[565 7[234
4[406 1[406 406 406 406 406 234 4[320 320 40[{ enclmec ReEncodeFont }37
664.176 /LMRoman6-Regular rf /Ff 151[898 2[723 32[1296
1117 1186 1170 52[881 993 11[{ enclmmathit ReEncodeFont }8
1594.02 /LMMathItalic12-Regular rf /Fg 157[615 80[661
661 16[{ enclmmathex ReEncodeFont }3 1106.96 /LMMathExtension10-Regular
rf /Fh 216[793 39[{ enclmmathit ReEncodeFont }1 1212.12
/LMMathItalic10-Regular rf /Fi 205[406 406 49[{ enclmrm ReEncodeFont }2
664.176 /LMRoman6-Regular rf /Fj 141[367 497 523 470
523 4[261 3[418 523 2[470 13[523 692 732 640 2[862 7[640
24[261 44[{ enclmec ReEncodeFont }16 885.568 /LMRoman8-Regular
rf /Fk 143[1107 61[886 8[1328 7[1328 7[1033 23[369 1033{
 enclmmathsy ReEncodeFont }7 1328.35 /LMMathSymbols10-Regular
rf /Fl 241[470 13[732{ enclmmathsy ReEncodeFont }2 885.568
/LMMathSymbols8-Regular rf /Fm 184[869 5[830 12[553 2[553
2[307 46[{ enclmec ReEncodeFont }5 1106.96 /LMRoman10-Regular
rf /Fn 160[909 45[606 1[606 47[{ enclmec ReEncodeFont }3
1212.12 /LMRoman10-Regular rf /Fo 203[993 52[{}1 1328.35
/wasy10 rf /Fp 139[506 513 506 2[650 723 4[361 5[578
1[650 3[361 1[361 29[1012 1[361 1[650 650 650 650 650
650 650 650 650 650 4[1012 1[506 506 2[1084 37[{ enclmrm ReEncodeFont }
26 1328.35 /LMRoman12-Regular rf /Fq 135[739 930 629
740 470 613 586 2[625 776 1138 1[676 1[444 749 623 641
603 676 560 553 683 13[800 990 1030 838 2[1258 1[1107
5[963 1080 931 988 975 5[361 19[852 6[846 1[770 4[738
11[675 734 827 11[{ enclmmathit ReEncodeFont }39 1328.35
/LMMathItalic12-Regular rf /Fr 139[366 5[523 12[470 35[732
3[470 470 470 470 470 470 470 470 470 470 6[366 366 40[{
 enclmrm ReEncodeFont }16 885.568 /LMRoman8-Regular rf
/Fs 135[530 1[458 545 2[425 420 474 7[542 448 452 436
484 408 403 500 19[904 1[793 2[773 733 595 690 772 671
710 705 5[261 19[613 13[540 11[485 528 604 11[{
 enclmmathit ReEncodeFont }30 885.568 /LMMathItalic8-Regular
rf /Ft 650 2[723 5[650 17[650 13[1012 91[578 686 1[939
686 723 506 513 506 1[723 650 723 1084 361 686 397 361
723 650 397 578 723 578 723 650 6[795 2[1336 975 975
939 723 957 1[885 1012 975 1192 813 1011 1[469 975 1021
849 885 993 1[921 975 1[614 4[361 650 650 650 650 650
650 650 650 650 650 650 361 434 361 2[506 506 6[361 3[723
723 759 8[613 1[613 16[{ enclmec ReEncodeFont }74 1328.35
/LMRoman12-Regular rf /Fu 3[1196 5[1076 17[1046 105[956
2[1554 1[1196 837 849 879 1[1196 1076 1196 1793 598 1136
1[598 1196 1076 658 982 1196 956 1196 1046 9[2223 1625
1[1497 1196 1605 2[1616 1682 2041 3[801 1682 1691 1353
1412 1649 1554 1530 1625 7[1076 1076 1076 1076 1076 1076
1076 1076 1076 1076 1076 598 717 16[1196 28[{ enclmec ReEncodeFont }55
1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fu(A)-60
b(G)718 b(4.1)f(-)h(1)f(Rec)-60 b(h)g(t)g(winkliges)716
b(Dreiec)-60 b(k)718 b(-)g(MC)f(-)h(BIFIE)p 0 TeXcolorgray
-741 4800 a Ft(1.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(ist)h(ein)f(rec)-36 b(h)g(t)g(winkliges)434 b(Dreiec)-36
b(k)435 b(wie)f(in)g(nac)-36 b(hstehender)432 b(Skizze.)p
0 TeXcolorgray 0 TeXcolorgray 13771 36761 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 174.12593 a add def
/d 0.0 a add neg def /h 270.3907 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 13771 36761
a 17778 31754 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  [ 83.30832 195.41037
83.30832 -9.44618 -2.04857 -9.44618  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0.6 0.2 0  setrgbcolor  0.1 .setopacityalpha  fill
 grestore gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 83.30832 -9.44618 -2.04857 -9.44618
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 83.30832 195.41037 -2.04857 -9.44618
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 83.30832 -9.44618 83.30832 195.41037
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 83.30832 -9.44618 -2.04857
-9.44618   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 83.30832 195.41037 83.30832
-9.44618   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.6 0.2 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -2.04857 -9.44618 83.30832
195.41037   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.6 0.2 0  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0.39215 0  setrgbcolor   0.8
SLW 0 0.39215 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto
} if } def /ArrowB { } def /ArrowInside { } def   /t 0.0 def /t1 1.1760052070951352
def /dt t1 t sub 49 div def /F@pstplot (3.7316615617935818*cos(t)+-0.36|3.7316615617935818*sin(t)+-1.66)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 5.69046 mul exch
5.69046 mul exch } def  /ps@Exit false def xy /lineto load stopped
{ moveto } if  49 1 sub { /t t dt add def xy  dup 1.e30 5.69046 mul
gt { moveto } { dup -1.e30 5.69046 mul lt { moveto } { L } ifelse }
ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy  dup
1.e30 5.69046 mul gt { moveto } { dup -1.e30 5.69046 mul lt { moveto
} { L } ifelse } ifelse  } if     -2.04857 -9.44618 lineto closepath
gsave 0 0.39215 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0 0.39215 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0.39215 0  setrgbcolor   0.8
SLW 0 0.39215 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto
} if } def /ArrowB { } def /ArrowInside { } def   /t 1.5707963267948966
def /t1 3.141592653589793 def /dt t1 t sub 49 div def /F@pstplot (3.7316615617935818*cos(t)+14.64|3.7316615617935818*sin(t)+-1.66)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 5.69046 mul exch
5.69046 mul exch } def  /ps@Exit false def xy /lineto load stopped
{ moveto } if  49 1 sub { /t t dt add def xy  dup 1.e30 5.69046 mul
gt { moveto } { dup -1.e30 5.69046 mul lt { moveto } { L } ifelse }
ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy  dup
1.e30 5.69046 mul gt { moveto } { dup -1.e30 5.69046 mul lt { moveto
} { L } ifelse } ifelse  } if     83.30832 -9.44618 lineto closepath
gsave 0 0.39215 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0 0.39215 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.39215 0  setrgbcolor   0 360 1.41566
1.41566 74.47577 -0.61362  0 true Ellipse  closepath  gsave 0 0.39215
0  setrgbcolor  1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0.39215 0  setrgbcolor   0.8
SLW 0 0.39215 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto
} if } def /ArrowB { } def /ArrowInside { } def   /t -1.965587446494658
def /t1 -1.5707963267948966 def /dt t1 t sub 49 div def /F@pstplot
(6.219435936322636*cos(t)+14.64|6.219435936322636*sin(t)+34.34)  tx@AlgToPs
begin AlgToPs end cvx def /xy { F@pstplot 5.69046 mul exch 5.69046
mul exch } def  /ps@Exit false def xy /lineto load stopped { moveto
} if  49 1 sub { /t t dt add def xy  dup 1.e30 5.69046 mul gt { moveto
} { dup -1.e30 5.69046 mul lt { moveto } { L } ifelse } ifelse  ps@Exit
{ exit } if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 5.69046
mul gt { moveto } { dup -1.e30 5.69046 mul lt { moveto } { L } ifelse
} ifelse  } if     83.30832 195.41037 lineto closepath gsave 0 0.39215
0  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 0.8 SLW
0 0.39215 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ -2.04857 -9.44618
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 17778 31754 a
tx@Dict begin  { -10.00536 -23.99377 } PutCoor PutBegin  end
 17778 31754 a
0.25 TeXcolorgray Fs(A)p 0 TeXcolorgray 17778 31754 a
tx@Dict begin  PutEnd  end

17778 31754 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 83.30832 -9.44618
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
17778 31754 a
tx@Dict begin  { 86.2594 -23.99377 } PutCoor PutBegin  end
 17778 31754 a 0.25 TeXcolorgray Fs(B)p
0 TeXcolorgray 17778 31754 a
tx@Dict begin  PutEnd  end
 17778 31754 a 17778 31754
a
tx@Dict begin  { 31.04875 -23.99377 } PutCoor PutBegin  end
 17778 31754 a Fs(c)261 b Fr(=)g(15)17778 31754 y
tx@Dict begin  PutEnd  end
 17778
31754 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 83.30832 -214.30275
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 83.30832 195.41037
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 17778 31754 a
tx@Dict begin  { 86.2594 199.68013 } PutCoor PutBegin  end
 17778 31754 a
0.25 TeXcolorgray Fs(C)p 0 TeXcolorgray 17778 31754 a
tx@Dict begin  PutEnd  end

17778 31754 a 17778 31754 a
tx@Dict begin  { 0.61206 87.13535 } PutCoor PutBegin  end
 17778 31754 a Fs(b)g Fr(=)g(39)17778
31754 y
tx@Dict begin  PutEnd  end
 17778 31754 a 17778 31754 a
tx@Dict begin  { 91.92207 90.67451 } PutCoor PutBegin  end
 17778 31754 a Fs(a)g
Fr(=)g(36)17778 31754 y
tx@Dict begin  PutEnd  end
 17778 31754 a 17778 31754 a
tx@Dict begin  { 5.5669 -5.59026 } PutCoor PutBegin  end
 17778
31754 a 0 0.39215 0 TeXcolorrgb Fs(\013)p 0 TeXcolorgray
17778 31754 a
tx@Dict begin  PutEnd  end
 17778 31754 a 17778 31754 a
tx@Dict begin  { 75.64197 166.41217 } PutCoor PutBegin  end
 17778 31754
a 0 0.39215 0 TeXcolorrgb -172 x Fs(\015)p 0 TeXcolorgray
17778 31754 a
tx@Dict begin  PutEnd  end
 17778 31754 a 33046 36761 a
currentpoint initclip moveto
 33046 36761
a 855 40413 a Ft(W)-108 b(elc)-36 b(he)360 b(der)g(nac)-36
b(hfolgenden)360 b(A)-36 b(ussagen)360 b(sind)g(f\374r)h(das)f
(abgebildete)h(Dreiec)-36 b(k)361 b(zutre\033end?)921
42959 y(Kreuz)433 b(die)h(b)36 b(eiden)433 b(zutre\033enden)e(A)-36
b(ussagen)434 b(an!)p 17935 43926 10515 45 v 17935 47367
45 3442 v 18643 45964 a Fq(tan)p Fp(\()p Fq(\013)8 b
Fp(\))369 b(=)24537 45441 y Fr(5)p 24302 45654 941 45
v 24302 46422 a(13)p 26040 47367 45 3442 v 28405 47367
V 17935 47411 10515 45 v 17935 50853 45 3442 v 18643
49450 a Fq(cos)p Fp(\()p Fq(\013)8 b Fp(\))369 b(=)24171
48927 y Fr(13)p 24171 49140 941 45 v 24171 49908 a(12)p
26040 50853 45 3442 v 28405 50853 V 17935 50897 10515
45 v 17935 54339 45 3442 v 18643 52936 a Fq(sin)p Fp(\()p
Fq(\015)72 b Fp(\))368 b(=)24352 52413 y Fr(5)p 24117
52626 941 45 v 24117 53394 a(13)p 26040 54339 45 3442
v 1 0 0 TeXcolorrgb 26748 52950 a Fo(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 28405 54339 V 17935
54383 10515 45 v 17935 57825 45 3442 v 18643 56422 a
Fq(cos)p Fp(\()p Fq(\015)72 b Fp(\))368 b(=)24082 55899
y Fr(12)p 24082 56112 941 45 v 24082 56880 a(13)p 26040
57825 45 3442 v 1 0 0 TeXcolorrgb 26748 56436 a Fo(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 28405
57825 V 17935 57869 10515 45 v 17935 61310 45 3442 v
18643 59907 a Fq(tan)p Fp(\()p Fq(\015)72 b Fp(\))368
b(=)24213 59384 y Fr(12)p 24213 59597 941 45 v 24448
60365 a(5)p 26040 61310 45 3442 v 28405 61310 V 17935
61355 10515 45 v 47992 4800 a Fn(___/1)p 1 0 0 TeXcolorrgb
47990 6792 a Fm(A)-31 b(G)369 b(4.1)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 65383 54804 45
v 0 TeXcolorgray 24746 81281 a Ft(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fu(A)-60 b(G)718 b(4.1)f(-)h(2)f(Wink)-60
b(elfunktion)713 b(-)718 b(O)-60 b(A)718 b(-)f(BIFIE)p
0 TeXcolorgray -741 4800 a Ft(2.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)433 b(ist)h(ein)f(rec)-36 b(h)g(t)g(winkliges)434
b(Dreiec)-36 b(k:)921 25880 y
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 228.76028 a add def
/d 0.0 a add neg def /h 182.09781 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 25880 a 14464 25565
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -28.45274 28.45274 -85.35823 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 142.26372 -85.35823 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 142.26372 -28.45274 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
14464 25565 a
tx@Dict begin  { -33.57402 47.23164 } PutCoor PutBegin  end
 14464 25565 a 887 x Ft(90)15764 25970 y
Fl(\016)14464 25565 y
tx@Dict begin  PutEnd  end
 14464 25565 a 14464 25565 a
tx@Dict begin  { -18.20973 120.63979 } PutCoor PutBegin  end
 14464
25565 a 572 x Ft(w)14464 25565 y
tx@Dict begin  PutEnd  end
 14464 25565 a 14464
25565 a
tx@Dict begin  { 25.60728 73.40813 } PutCoor PutBegin  end
 14464 25565 a 572 x Ft(u)14464 25565 y
tx@Dict begin  PutEnd  end
 14464
25565 a 14464 25565 a
tx@Dict begin  { -68.85558 58.61258 } PutCoor PutBegin  end
 14464 25565 a 572 x Ft(v)14464
25565 y
tx@Dict begin  PutEnd  end
 14464 25565 a 14464 25565 a
tx@Dict begin  { -68.85558 82.51277 } PutCoor PutBegin  end
 14464 25565 a 572
x Fq(')14464 25565 y
tx@Dict begin  PutEnd  end
 14464 25565 a 14464 25565 a
tx@Dict begin  { 52.92212 129.17526 } PutCoor PutBegin  end
 14464
25565 a 923 x Fq( )14464 25565 y
tx@Dict begin  PutEnd  end
 14464 25565 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -85.35823 85.35823
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -28.45274 28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 85.35823 142.26372
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 26244 25880 a
currentpoint initclip moveto

26244 25880 a 921 28426 a Ft(Gib)433 b Fp(tan)6 b(\()p
Fq( )48 b Fp(\))432 b Ft(in)i(Abh\344ngigk)-36 b(eit)434
b(v)-36 b(on)434 b(den)f(Seitenl\344ngen)g Fq(u;)221
b(v)482 b Ft(und)433 b Fq(w)469 b Ft(an!)921 32963 y
Fq(tan)p Fp(\()p Fq( )48 b Fp(\))368 b(=)p 1 0 0 TeXcolorrgb
6729 32440 a Fs(v)p 6702 32653 545 45 v 6702 33421 a(u)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
4800 a Fn(___/1)p 1 0 0 TeXcolorrgb 47990 6792 a Fm(A)-31
b(G)369 b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 36896 54804 45 v 0 TeXcolorgray 24746
81281 a Ft(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fu(A)-60 b(G)718 b(4.1)f(-)h(3)f(Rec)-60
b(h)g(t)g(wink)g(eliges)716 b(Dreiec)-60 b(k)718 b(-)g(O)-60
b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray -741 4800 a Ft(3.)p
0 TeXcolorgray 651 w(V)-108 b(on)595 b(einem)g(rec)-36
b(h)g(t)g(winkligen)595 b(Dreiec)-36 b(k)596 b Fq(AB)67
b(C)691 b Ft(sind)594 b(die)i(L\344ngen)e(der)h(Seiten)g
Fq(a)g Ft(und)f Fq(c)921 6792 y Ft(gegeb)36 b(en.)p 0
TeXcolorgray 0 TeXcolorgray 12164 25644 a
 currentpoint currentpoint translate 0.67003 0.67003 scale neg exch
neg exch translate
 12164 25644
a 12598 25644 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 299.2865 a add def
/d 0.0 a add neg def /h 222.32698 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 12598 25644 a 21037 20028 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 -28.45274 -56.90549 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 -28.45274 -28.79268 154.96098
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -56.90549 28.45274 -28.79268 154.96098
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0.39215 0  setrgbcolor   0.8
SLW 0 0.39215 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto
} if } def /ArrowB { } def /ArrowInside { } def   /t -0.21866894587394195
def /t1 1.3521273809209546 def /dt t1 t sub 49 div def /F@pstplot (0.5303561070053724*cos(t)+-2.|0.5303561070053724*sin(t)+1.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy /lineto load stopped
{ moveto } if  49 1 sub { /t t dt add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if     -56.90549 28.45274 lineto
closepath gsave 0 0.39215 0  setrgbcolor  0.1 .setopacityalpha  fill
 grestore gsave 0.8 SLW 0 0.39215 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.39215 0  setrgbcolor   0 360 1.00594
1.00594 -49.41675 33.21844  0 true Ellipse  closepath  gsave 0 0.39215
0  setrgbcolor  0.8 .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0.39215 0  setrgbcolor   0.8
SLW 0 0.39215 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto
} if } def /ArrowB { } def /ArrowInside { } def   /t 2.4640644264507188
def /t1 2.9229237077158516 def /dt t1 t sub 49 div def /F@pstplot (1.0607122140107448*cos(t)+7.|1.0607122140107448*sin(t)+-1.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy /lineto load stopped
{ moveto } if  49 1 sub { /t t dt add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if     199.1692 -28.45274 lineto
closepath gsave 0 0.39215 0  setrgbcolor  0.1 .setopacityalpha  fill
 grestore gsave 0.8 SLW 0 0.39215 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -56.90549 28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 21037 20028 a
tx@Dict begin  { -65.67018 16.67065 } PutCoor PutBegin  end
 21037 20028 a
Fq(B)21037 20028 y
tx@Dict begin  PutEnd  end
 21037 20028 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 199.1692 -28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 21037 20028 a
tx@Dict begin  { 202.93332 -35.64189 } PutCoor PutBegin  end
 21037 20028 a Fq(A)21037 20028
y
tx@Dict begin  PutEnd  end
 21037 20028 a 21037 20028 a
tx@Dict begin  { 48.00835 -5.96484 } PutCoor PutBegin  end
 21037 20028 a Fq(c)21037
20028 y
tx@Dict begin  PutEnd  end
 21037 20028 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -28.79268 154.96098
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
21037 20028 a
tx@Dict begin  { -29.78429 163.70486 } PutCoor PutBegin  end
 21037 20028 a Fq(C)21037 20028 y
tx@Dict begin  PutEnd  end
 21037
20028 a 21037 20028 a
tx@Dict begin  { 83.2187 74.51566 } PutCoor PutBegin  end
 21037 20028 a Fq(b)21037 20028
y
tx@Dict begin  PutEnd  end
 21037 20028 a 21037 20028 a
tx@Dict begin  { -51.08304 93.62973 } PutCoor PutBegin  end
 21037 20028 a Fq(a)21037
20028 y
tx@Dict begin  PutEnd  end
 21037 20028 a 21037 20028 a
tx@Dict begin  { 175.26813 -20.55156 } PutCoor PutBegin  end
 21037 20028 a 0 0.39215 0
TeXcolorrgb Fq(\013)p 0 TeXcolorgray 21037 20028 a
tx@Dict begin  PutEnd  end
 21037
20028 a 45728 25644 a
currentpoint initclip moveto
 45728 25644 a 12164 25644 a
 currentpoint currentpoint translate 1 0.67003 div 1 0.67003 div scale
neg exch neg exch translate
 12164
25644 a 921 29628 a Ft(Gib)433 b(eine)h(F)-108 b(ormel)433
b(f\374r)g(die)h(Berec)-36 b(hn)g(ung)432 b(des)h(Wink)-36
b(els)435 b Fq(\013)442 b Ft(an!)p 1 0 0 TeXcolorrgb
921 34166 a Fq(\013)378 b Fp(=)368 b Fq(tan)5435 33683
y Fl(\000)p Fr(1)6693 34166 y Fp(\()7332 33642 y Fs(a)p
7332 33856 500 45 v 7378 34624 a(c)7964 34166 y Fp(\))433
b Ft(o)36 b(der)434 b Fq(\013)378 b Fp(=)368 b Fq(ar)36
b(ctan)p Fp(\()18848 33642 y Fs(a)p 18848 33856 V 18894
34624 a(c)19480 34166 y Fp(\))434 b Ft(o)36 b(der)433
b Fq(tan)p Fp(\()p Fq(\013)8 b Fp(\))369 b(=)29005 33642
y Fs(a)p 29005 33856 V 29051 34624 a(c)921 38703 y Ft(L\366sungssc)-36
b(hl\374ssel:)873 41248 y(Als)384 b(nic)-36 b(h)g(t)384
b(ric)-36 b(h)g(tig)384 b(zu)g(w)-36 b(erten)384 b(sind)f(Umform)-36
b(ungsk)g(etten,)385 b(die)f(die)g(Gleic)-36 b(hheit)384
b(v)-36 b(erletzen,)874 43240 y(wie)434 b(z.B.:)h Fq(\013)378
b Fp(=)368 b Fq(tan)p Fp(\()p Fq(\013)8 b Fp(\))370 b(=)14447
42717 y Fs(a)p 14447 42930 V 14493 43698 a(c)15449 43240
y Fp(=)e Fq(tan)18758 42758 y Fl(\000)p Fr(1)20016 43240
y Fp(\()20655 42717 y Fs(a)p 20655 42930 V 20701 43698
a(c)21287 43240 y Fp(\))p Ft(.)921 45786 y(F)-108 b(ormeln,)394
b(b)36 b(ei)395 b(denen)e Fq(b)h Ft(durc)-36 b(h)393
b Fq(a)i Ft(und)e Fq(c)h Ft(ausgedr\374c)-36 b(kt)394
b(wird,)h(sind)f(eb)36 b(enso)394 b(als)h(ric)-36 b(h)g(tig)395
b(zu)874 47777 y(w)-36 b(erten,)434 b(wie)g(z.B.:)g Fq(sin)p
Fp(\()p Fq(\013)8 b Fp(\))370 b(=)18514 46879 y Fq(a)p
16354 47467 5004 45 v 16354 47707 a Fk(p)p 17461 47707
3897 54 v 1091 x Fq(a)18144 48414 y Fr(2)18965 48798
y Fp(+)295 b Fq(c)20832 48414 y Fr(2)21490 47777 y Ft(.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
4800 a Fn(___/1)p 1 0 0 TeXcolorrgb 47990 6792 a Fm(A)-31
b(G)369 b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 52457 54804 45 v 0 TeXcolorgray 24746
81281 a Ft(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fu(A)-60 b(G)718 b(4.1)f(-)h(4)f(Dennis)f
(Tito)h(-)g(O)-60 b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray
-741 4800 a Ft(4.)p 0 TeXcolorgray 651 w(Dennis)531 b(Tito,)h(der)f
(2001)h(als)g(erster)e(W)-108 b(eltraum)-36 b(tourist)530
b(un)-36 b(terw)g(egs)531 b(w)-36 b(ar,)532 b(sah)f(die)g(Erd-)921
6792 y(ob)36 b(er\035\344c)-36 b(he)433 b(un)-36 b(ter)432
b(einem)i(Seh)-36 b(wink)g(el)434 b(v)-36 b(on)433 b
Fp(142)24693 6310 y Fl(\016)25220 6792 y Ft(.)p 0 TeXcolorgray
0 TeXcolorgray 12441 28089 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 198.15761 a add def
/d 0.0 a add neg def /h 173.3878 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 12441 28089 a 20506 28036
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 28.45274 28.45274 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0.39215 0  setrgbcolor   0.8
SLW 0 0.39215 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto
} if } def /ArrowB { } def /ArrowInside { } def   /t -1.5707963267948966
def /t1 -0.6806784082777886 def /dt t1 t sub 49 div def /F@pstplot
(0.46636861226503457*cos(t)+1.|0.46636861226503457*sin(t)+5.)  tx@AlgToPs
begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul exch 28.45274
mul exch } def  /ps@Exit false def xy /lineto load stopped { moveto
} if  49 1 sub { /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto
} { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit
{ exit } if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } if     28.45274 142.26372 lineto closepath gsave 0 0.39215
0  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 0.8 SLW
0 0.39215 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 116.9004 70.63995 28.45274 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -59.99492 70.63995 28.45274 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 50.98969 150.7931 32.85463 133.54285
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 142.26372 28.45274 116.92603
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.7698 95.84914 28.45274 28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 28.45274 28.45274 -27.20932 97.18936
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t 0.3945323246430148 def /t1 2.6865242036312766
def /dt t1 t sub 49 div def /F@pstplot (1.*3.109485010682683*cos(t)+0.*3.109485010682683*sin(t)+1.|0.*3.109485010682683*cos(t)+1.*3.109485010682683*sin(t)+1.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy moveto  49 1 sub
{ /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0.39215 0  setrgbcolor   0.8
SLW 0 0.39215 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto
} if } def /ArrowB { } def /ArrowInside { } def   /t 2.4609142453120048
def /t1 4.031710572106901 def /dt t1 t sub 49 div def /F@pstplot (0.46636861226503457*cos(t)+3.0144696775797484|0.46636861226503457*sin(t)+3.368714619740426)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy /lineto load stopped
{ moveto } if  49 1 sub { /t t dt add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if     85.7698 95.84914 lineto closepath
gsave 0 0.39215 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0 0.39215 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.39215 0  setrgbcolor   0 360 0.8848
0.8848 78.00713 95.03336  0 true Ellipse  closepath  gsave 0 0.39215
0  setrgbcolor  1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0.39215 0  setrgbcolor   0.8
SLW 0 0.39215 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto
} if } def /ArrowB { } def /ArrowInside { } def   /t -0.890117918517108
def /t1 0.6806784082777886 def /dt t1 t sub 49 div def /F@pstplot (0.46636861226503457*cos(t)+-0.9562952014676114|0.46636861226503457*sin(t)+3.4158233816355184)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy /lineto load stopped
{ moveto } if  49 1 sub { /t t dt add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if     -27.20932 97.18936 lineto
closepath gsave 0 0.39215 0  setrgbcolor  0.1 .setopacityalpha  fill
 grestore gsave 0.8 SLW 0 0.39215 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.39215 0  setrgbcolor   0 360 0.8848
0.8848 -19.4462 96.3736  0 true Ellipse  closepath  gsave 0 0.39215
0  setrgbcolor  1. .setopacityalpha  fill  grestore end
 
@endspecial 20506 28036 a
tx@Dict begin  { 54.08565 164.9474 } PutCoor PutBegin  end

20506 28036 a 886 x Fp(71)21806 28440 y Fl(\016)20506
28036 y
tx@Dict begin  PutEnd  end
 20506 28036 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.2 0 0  setrgbcolor  [ 28.45274
142.26372   false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.2 0 0  setrgbcolor  [ 28.45274
28.45274   false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 20506 28036 a
tx@Dict begin  { 25.77748 17.65619 } PutCoor PutBegin  end

20506 28036 a 0.2 0 0 TeXcolorrgb Fs(M)p 0 TeXcolorgray
20506 28036 a
tx@Dict begin  PutEnd  end
 20506 28036 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 28.45274 116.92603
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 20506 28036 a
tx@Dict begin  { 22.23912 123.36975 } PutCoor PutBegin  end
 20506 28036 a Fs(h)20506 28036
y
tx@Dict begin  PutEnd  end
 20506 28036 a 20506 28036 a
tx@Dict begin  { 62.48958 57.90707 } PutCoor PutBegin  end
 20506 28036 a Fs(r)20506
28036 y
tx@Dict begin  PutEnd  end
 20506 28036 a 34376 28089 a
currentpoint initclip moveto
 34376 28089 a 921
32073 a Ft(Berec)-36 b(hne,)486 b(wie)i(ho)36 b(c)-36
b(h)486 b Fp(\()p Fq(h)p Fp(\))h Ft(\374b)36 b(er)486
b(der)g(Erdob)36 b(er\035\344c)-36 b(he)486 b(sic)-36
b(h)486 b(Dennis)h(Tito)h(b)36 b(efand,)487 b(w)-36 b(enn)887
34065 y(v)g(ereinfac)g(h)g(t)580 b(die)f(Erde)g(als)h(Kugel)f(mit)h
(einem)f(Radius)g Fq(r)654 b Fp(=)616 b(6)221 b(370)g
Fq(k)45 b(m)581 b Ft(angenommen)874 36057 y(wird.)434
b(Gib)f(das)h(Ergebnis)f(auf)h(ganze)g(Kilometer)g(gerundet)f(an!)p
1 0 0 TeXcolorrgb 921 40595 a Fq(sin)p Fp(\(71)4560 40112
y Fl(\016)5086 40595 y Fp(\))369 b(=)8650 39696 y Fq(r)p
7474 40285 2974 45 v 7474 41506 a(r)332 b Fp(+)295 b
Fq(h)921 43743 y(r)331 b Fp(+)295 b Fq(h)369 b Fp(=)7801
42844 y Fq(r)p 5776 43433 4671 45 v 5776 44654 a(sin)p
Fp(\(71)9415 44270 y Fl(\016)9942 44654 y Fp(\))921 47121
y Fq(h)g Fp(=)5576 46222 y Fq(r)p 3552 46811 V 3552 48032
a(sin)p Fp(\(71)7191 47648 y Fl(\016)7717 48032 y Fp(\))8651
47121 y Fk(\000)295 b Fq(r)921 49951 y(h)369 b Fp(=)f(6)221
b(737)p Fq(;)p Fp(004)299 b Fk(\000)c Fp(6)221 b(370)371
b(=)d(367)p Fq(;)p Fp(044)921 52496 y Ft(Dennis)462 b(Tito)h(b)36
b(efand)462 b(sic)-36 b(h)462 b(\(in)g(diesem)g(A)-36
b(ugen)g(blic)g(k)462 b(rund)f Fp(367)221 b Fq(k)45 b(m)463
b Ft(\374b)36 b(er)461 b(der)h(Erdob)36 b(er-)921 54488
y(\035\344c)-36 b(he.)921 57033 y(L\366sungsin)g(terv)-72
b(all:)434 b Fp([)8 b(367;)221 b(368])p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800 a Fn(___/1)p
1 0 0 TeXcolorrgb 47990 6792 a Fm(A)-31 b(G)369 b(4.1)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
60841 54804 45 v 0 TeXcolorgray 24746 81281 a Ft(4)p
0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fu(A)-60 b(G)718 b(4.1)f(-)h(5)f
(Raumdiagonale)f(b)60 b(eim)717 b(W)-60 b(\374rfel)715
b(-)j(O)-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray -741
4800 a Ft(5.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(ist)h(ein)f(W)-36 b(\374rfel)434 b(mit)g(der)f(Seitenl\344nge)g
Fq(a)p Ft(.)921 38710 y
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 382.52432 a add def
/d 0.0 a add neg def /h 297.99446 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 38710 a 11764 30321 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 -56.90549 -56.90549 -56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 142.26372 142.26372 -56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -56.90549 142.26372 142.26372 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -56.90549 -56.90549 -56.90549 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -56.90549 142.26372 56.90549 199.1692
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07469 199.1692 142.26372 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07469 199.1692 56.90549 199.1692
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07469 0.0 142.26372 -56.90549 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07469 199.1692 256.07469 0.0  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07469 0.0 56.90549 0.0   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 1.6 SLW 0  setgray
 1. .setopacityalpha   0  setlinecap [  2.0  2.0 ] 0 0 add  DashLine
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 0.0 56.90549 199.1692   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 1.6 SLW 0  setgray
 1. .setopacityalpha   0  setlinecap [  2.0  2.0 ] 0 0 add  DashLine
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 0.0 -56.90549 -56.90549  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07469 199.1692 -56.90549 -56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07469 0.0 -56.90549 -56.90549 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0.39215 0  setrgbcolor   0.8
SLW 0 0.39215 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto
} if } def /ArrowB { } def /ArrowInside { } def   /t 1.5707963267948966
def /t1 3.141592653589793 def /dt t1 t sub 49 div def /F@pstplot (0.5640923395956432*cos(t)+9.|0.5640923395956432*sin(t)+0.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy /lineto load stopped
{ moveto } if  49 1 sub { /t t dt add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if     256.07469 0.0 lineto closepath
gsave 0 0.39215 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0 0.39215 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.39215 0  setrgbcolor   0 360 1.07019
1.07019 249.3987 6.67598  0 true Ellipse  closepath  gsave 0 0.39215
0  setrgbcolor  1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0.39215 0  setrgbcolor   0.8
SLW 0 0.39215 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto
} if } def /ArrowB { } def /ArrowInside { } def   /t 1.5707963267948966
def /t1 3.3214461533822712 def /dt t1 t sub 49 div def /F@pstplot (0.5640923395956432*cos(t)+9.|0.5640923395956432*sin(t)+0.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy /lineto load stopped
{ moveto } if  49 1 sub { /t t dt add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if     256.07469 0.0 lineto closepath
gsave 0 0.39215 0  setrgbcolor  0.1 .setopacityalpha  fill  grestore
gsave 0.8 SLW 0 0.39215 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0.39215 0  setrgbcolor   0.8
SLW 0 0.39215 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto
} if } def /ArrowB { } def /ArrowInside { } def   /t 0.17985349979247828
def /t1 0.6857295109062862 def /dt t1 t sub 49 div def /F@pstplot (1.6922770187869296*cos(t)+-2.|1.6922770187869296*sin(t)+-2.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy /lineto load stopped
{ moveto } if  49 1 sub { /t t dt add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if     -56.90549 -56.90549 lineto
closepath gsave 0 0.39215 0  setrgbcolor  0.1 .setopacityalpha  fill
 grestore gsave 0.8 SLW 0 0.39215 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -56.90549 -56.90549
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 11764 30321 a
tx@Dict begin  { -61.0382 -69.3605 } PutCoor PutBegin  end
 11764 30321 a
Fs(A)11764 30321 y
tx@Dict begin  PutEnd  end
 11764 30321 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 142.26372 -56.90549
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 11764 30321 a
tx@Dict begin  { 142.26111 -68.29074 } PutCoor PutBegin  end
 11764 30321 a Fs(B)11764 30321
y
tx@Dict begin  PutEnd  end
 11764 30321 a 11764 30321 a
tx@Dict begin  { 41.14655 -66.68567 } PutCoor PutBegin  end
 11764 30321 a Fs(a)11764
30321 y
tx@Dict begin  PutEnd  end
 11764 30321 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 142.26372 142.26372
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
11764 30321 a
tx@Dict begin  { 144.40149 145.70915 } PutCoor PutBegin  end
 11764 30321 a Fs(F)11764 30321 y
tx@Dict begin  PutEnd  end
 11764
30321 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -56.90549 142.26372
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 11764
30321 a
tx@Dict begin  { -67.45847 142.49902 } PutCoor PutBegin  end
 11764 30321 a Fs(E)11764 30321 y
tx@Dict begin  PutEnd  end
 11764 30321
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 56.90549 199.1692
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 11764 30321
a
tx@Dict begin  { 58.80144 202.41884 } PutCoor PutBegin  end
 11764 30321 a Fs(H)11764 30321 y
tx@Dict begin  PutEnd  end
 11764 30321 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 256.07469 199.1692
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 11764 30321 a
tx@Dict begin  { 260.49611 201.34909 } PutCoor PutBegin  end
 11764 30321 a
Fs(G)11764 30321 y
tx@Dict begin  PutEnd  end
 11764 30321 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 256.07469 0.0   false
NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 11764 30321 a
tx@Dict begin  { 261.56587 -5.16078 } PutCoor PutBegin  end
 11764 30321 a Fs(C)11764 30321
y
tx@Dict begin  PutEnd  end
 11764 30321 a 11764 30321 a
tx@Dict begin  { 202.71623 -35.65579 } PutCoor PutBegin  end
 11764 30321 a Fj(a)11764
30321 y
tx@Dict begin  PutEnd  end
 11764 30321 a 11764 30321 a
tx@Dict begin  { 264.24113 99.69922 } PutCoor PutBegin  end
 11764 30321 a Fj(a)11764
30321 y
tx@Dict begin  PutEnd  end
 11764 30321 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 56.90549 0.0   false
NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
11764 30321 a
tx@Dict begin  { 45.96132 3.39941 } PutCoor PutBegin  end
 11764 30321 a Fs(D)11764 30321 y
tx@Dict begin  PutEnd  end
 11764
30321 a 11764 30321 a
tx@Dict begin  { 104.81139 62.24905 } PutCoor PutBegin  end
 11764 30321 a -123 x Fs(d)12248
30321 y Fi(2)11764 30321 y
tx@Dict begin  PutEnd  end
 11764 30321 a 11764 30321
a
tx@Dict begin  { 112.3014 -36.72556 } PutCoor PutBegin  end
 11764 30321 a -123 x Fs(d)12248 30321 y Fi(1)11764
30321 y
tx@Dict begin  PutEnd  end
 11764 30321 a 11764 30321 a
tx@Dict begin  { -20.37833 -44.75089 } PutCoor PutBegin  end
 11764 30321 a 0 0.39215 0
TeXcolorrgb -172 x Fs(')p 0 TeXcolorgray 11764 30321
a
tx@Dict begin  PutEnd  end
 11764 30321 a 43265 38710 a
currentpoint initclip moveto
 43265 38710 a 921 41255
a Ft(Berec)-36 b(hne)549 b(die)g(Gr\366\377e)h(des)f(Wink)-36
b(els)551 b Fq(')e Ft(zwisc)-36 b(hen)550 b(einer)f(Raumdiagonalen)i
(und)d(einer)921 43247 y(Seiten\035\344c)-36 b(hendiagonalen)433
b(eines)h(W)-36 b(\374rfels!)p 1 0 0 TeXcolorrgb 921
48250 a Fq(tan)p Fp(\()p Fq(')p Fp(\))368 b(=)6855 47351
y Fq(a)p 6596 47940 1202 45 v 6596 49161 a(d)7272 49360
y Fr(1)8299 48250 y Fp(=)10692 47351 y Fq(a)p 9813 47940
2441 45 v 9813 49263 a(a)10496 48179 y Fk(p)p 11603 48179
651 54 v 1084 x Fp(2)12755 48250 y(=)14268 46268 y Fk(p)p
15375 46268 V 1083 x Fp(2)p 14268 47940 1758 45 v 14822
49161 a(2)16527 48250 y Fk(!)i Fq(')f Fk(\031)g Fp(35)22148
47768 y Fl(\016)921 51115 y Ft(L\366sungsin)-36 b(terv)-72
b(all:)434 b Fp([)8 b(35)12594 50633 y Fl(\016)13121
51115 y Fp(;)221 b(36)15003 50633 y Fl(\016)15530 51115
y Fp(])p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4800 a Fn(___/1)p 1 0 0 TeXcolorrgb 47990 6792
a Fm(A)-31 b(G)369 b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 54922 54804 45 v 0 TeXcolorgray
24746 81281 a Ft(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fu(A)-60 b(G)718 b(4.1)f(-)h(6)f
(Sonnenradius)d(-)k(O)-60 b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray
-741 4800 a Ft(6.)p 0 TeXcolorgray 651 w(Die)381 b(Sonne)e(ersc)-36
b(hein)g(t)379 b(v)-36 b(on)381 b(der)e(Erde)h(aus)g(un)-36
b(ter)378 b(einem)i(Seh)-36 b(wink)g(el)381 b(v)-36 b(on)380
b Fq(\013)e Fk(\031)369 b Fp(0)p Fq(;)p Fp(52)42695 4318
y Fl(\016)43222 4800 y Ft(.)381 b(Die)921 6792 y(En)-36
b(tfern)g(ung)432 b(der)h(Erde)g(v)-36 b(om)434 b(Mittelpunkt)f(der)g
(Sonne)g(b)36 b(etr\344gt)433 b(ca.)i Fp(150)296 b Fk(\001)f
Fp(10)40068 6310 y Fr(6)40816 6792 y Fq(k)45 b(m)p Ft(.)921
27179 y
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 406.87387 a add def
/d 0.0 a add neg def /h 175.83817 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 27179 a 9362 26864 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07469 85.35823 -56.90549 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray   256.07469 85.35823 2 copy
moveto 63.62228 0 CLW mul sub dup 0 rmoveto 0 360 arc closepath  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 243.14166 147.652 256.07469 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -56.90549 85.35823 243.14166 147.652
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 243.14166 23.06445 -56.90549 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07469 85.35823 243.14166 23.06445
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0.39215 0  setrgbcolor   0.8
SLW 0 0.39215 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto
} if } def /ArrowB { } def /ArrowInside { } def   /t -2.9368870622587355
def /t1 -1.3660907354638387 def /dt t1 t sub 49 div def /F@pstplot
(0.6*cos(t)+8.545454545454545|0.6*sin(t)+5.18938083250769)  tx@AlgToPs
begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul exch 28.45274
mul exch } def  /ps@Exit false def xy /lineto load stopped { moveto
} if  49 1 sub { /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto
} { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit
{ exit } if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } if     243.14166 147.652 lineto closepath gsave 0 0.39215
0  setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 0.8 SLW
0 0.39215 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.39215 0  setrgbcolor   0 360 1.13791
1.13791 237.63268 139.25589  0 true Ellipse  closepath  gsave 0 0.39215
0  setrgbcolor  0.9 .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0.39215 0  setrgbcolor   0.8
SLW 0 0.39215 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto
} if } def /ArrowB { } def /ArrowInside { } def   /t 1.3660907354638387
def /t1 2.9368870622587355 def /dt t1 t sub 49 div def /F@pstplot (0.6*cos(t)+8.545454545454545|0.6*sin(t)+0.8106191674923098)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy /lineto load stopped
{ moveto } if  49 1 sub { /t t dt add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if     243.14166 23.06445 lineto
closepath gsave 0 0.39215 0  setrgbcolor  0.1 .setopacityalpha  fill
 grestore gsave 0.8 SLW 0 0.39215 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.39215 0  setrgbcolor   0 360 1.13791
1.13791 237.63268 31.46056  0 true Ellipse  closepath  gsave 0 0.39215
0  setrgbcolor  0.9 .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -56.90549 85.35823
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 9362 26864 a
tx@Dict begin  { -65.44139 94.4633 } PutCoor PutBegin  end
 9362
26864 a Fj(Erde)9362 26864 y
tx@Dict begin  PutEnd  end
 9362 26864 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 256.07469 85.35823
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 9362 26864 a
tx@Dict begin  { 258.35095 88.77242 } PutCoor PutBegin  end
 9362 26864 a Fj(Sonne)9362
26864 y
tx@Dict begin  PutEnd  end
 9362 26864 a 45960 27179 a
currentpoint initclip moveto
 45960 27179 a 921
29725 a Ft(Gib)369 b(eine)g(F)-108 b(ormel)370 b(zur)f(Berec)-36
b(hn)g(ung)368 b(des)h(Sonnenradius)f(an)i(und)e(b)36
b(erec)-36 b(hne)369 b(den)f(Radius!)921 36254 y Fq(r)405
b Fp(=)p 1 0 0 TeXcolorrgb 433 w(150)297 b Fk(\001)e
Fp(10)7568 35772 y Fr(6)8389 36254 y Fk(\001)h Fq(sin)p
Fp(\(0)p Fq(;)p Fp(26)13704 35772 y Fl(\016)14230 36254
y Fp(\))p 0 0 0 TeXcolorrgb 921 40791 a Fq(r)405 b Fp(=)p
1 0 0 TeXcolorrgb 433 w(6)p Fq(;)p Fp(8)297 b Fk(\001)e
Fp(10)7279 40309 y Fr(5)8027 40791 y Fq(k)45 b(m)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 921 43337 a Ft(Die)434
b(Ma\377zahl)h(f\374r)e(den)g(Radius)h(m)-36 b(uss)433
b(aus)g(dem)g(In)-36 b(terv)-72 b(all)435 b Fp([)8 b(6)295
b Fk(\001)g Fp(10)34215 42855 y Fr(5)34742 43337 y Fp(;)221
b(7)296 b Fk(\001)f Fp(10)38234 42855 y Fr(5)38761 43337
y Fp(])433 b Ft(sein.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800 a Fn(___/1)p
1 0 0 TeXcolorrgb 47990 6792 a Fm(A)-31 b(G)369 b(4.1)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
47144 54804 45 v 0 TeXcolorgray 24746 81281 a Ft(6)p
0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fu(A)-60 b(G)1137 b(4.1)g(-)g(7)g(A)-60
b(ufw)g(\366lbung)1135 b(des)h(Bo)60 b(densees)1135 b(-)i(O)-60
b(A)1136 b(-)i(Matura)-2385 4515 y(2015/16)718 b(-)f(Neb)60
b(en)-60 b(termin)716 b(1)p 0 TeXcolorgray -741 7823
a Ft(7.)p 0 TeXcolorgray 651 w(A)-36 b(ufgrund)569 b(der)h(Erdkr\374mm)
-36 b(ung)569 b(ist)h(die)g(Ob)36 b(er\035\344c)-36 b(he)569
b(des)h(Bo)36 b(densees)570 b(gew)-36 b(\366lbt.)572
b(Wird)921 9815 y(die)492 b(Erde)f(mo)36 b(dellhaft)493
b(als)f(Kugel)g(mit)g(dem)f(Radius)h Fq(R)479 b Fp(=)468
b(6)221 b(370)c Ft(km)494 b(und)c(dem)i(Mittel-)921 11806
y(punkt)581 b Fq(M)721 b Ft(angenommen)582 b(und)f(aus)h(der)g
(L\344nge)g(der)f(S\374dost-Nordw)-36 b(est-A)g(usdehn)g(ung)921
13798 y(des)500 b(Bo)36 b(densees)500 b(der)f(Wink)-36
b(el)501 b Fq(\036)482 b Fp(=)g(0)p Fq(;)p Fp(5846)22721
13316 y Fl(\016)23749 13798 y Ft(ermittelt,)500 b(so)h(l\344sst)f(sic)
-36 b(h)500 b(die)g(A)-36 b(ufw)g(\366lbung)921 15790
y(des)433 b(Bo)36 b(densees)434 b(n\344herungsw)-36 b(eise)433
b(b)36 b(erec)-36 b(hnen.)p 0 TeXcolorgray 0 TeXcolorgray
3168 41851 a
 currentpoint currentpoint translate 1.0498 1.0498 scale neg exch neg
exch translate
 3168 41851 a 3602 41851 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 344.42685 a add def
/d 0.0 a add neg def /h 186.79492 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 3602 41851 a 22831
40403 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 0.0 -56.90549 142.26372   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 56.90549 142.26372 -56.90549 142.26372
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 0.0 56.90549 142.26372   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t 1.1902899496825317 def /t1 1.9513027039072617
def /dt t1 t sub 49 div def /F@pstplot (1.*5.385164807134505*cos(t)+0.*5.385164807134505*sin(t)+0.|0.*5.385164807134505*cos(t)+1.*5.385164807134505*sin(t)+0.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy moveto  49 1 sub
{ /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 3.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 0  setrgbcolor   0.8 SLW 0
0 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def /ArrowInside { } def   /t 1.1902899496825317 def /t1
1.9513027039072615 def /dt t1 t sub 49 div def /F@pstplot (1.1936525409285728*cos(t)+0.|1.1936525409285728*sin(t)+0.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy /lineto load stopped
{ moveto } if  49 1 sub { /t t dt add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if     0.0 0.0 lineto closepath gsave
0 0 0  setrgbcolor  0. .setopacityalpha  fill  grestore gsave 0.8 SLW
0 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 0.0 0.0 153.22264   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
22831 40403 a
tx@Dict begin  { -5.69046 31.29819 } PutCoor PutBegin  end
 22831 40403 a 1 1 1 TeXcolorrgb 1 1 1 TeXcolorrgb
22831 41824 1458 1422 v 1 1 1 TeXcolorrgb 0 TeXcolorgray
23163 41257 a Fh(')p 1 1 1 TeXcolorrgb 0 TeXcolorgray
22831 40403 a
tx@Dict begin  PutEnd  end
 22831 40403 a 22831 40403 a
tx@Dict begin  { 29.58891 74.24821 } PutCoor PutBegin  end
 22831 40403
a 907 x Fq(R)22831 40403 y
tx@Dict begin  PutEnd  end
 22831 40403 a 22831 40403
a
tx@Dict begin  { -40.27736 74.73317 } PutCoor PutBegin  end
 22831 40403 a 907 x Fq(R)22831 40403 y
tx@Dict begin  PutEnd  end
 22831 40403
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  3.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 142.26372 0.0 153.22264   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 3.2 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.96295
147.51047 62.58118 158.66954   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 22831 40403 a
tx@Dict begin  { 65.97757 162.55087 } PutCoor PutBegin  end
 22831 40403 a
915 x Ft(A)g(ufw)g(\366lbung)22831 40403 y
tx@Dict begin  PutEnd  end
 22831 40403
a 22831 40403 a
tx@Dict begin  { -27.17719 169.34366 } PutCoor PutBegin  end
 22831 40403 a 915 x Ft(Bo)36 b(densee)22831
40403 y
tx@Dict begin  PutEnd  end
 22831 40403 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 0  setrgbcolor   0.8 SLW 0
0 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def /ArrowInside { } def   /t 3.141592653589793 def /t1
4.71238898038469 def /dt t1 t sub 49 div def /F@pstplot (0.4263044789030617*cos(t)+0.|0.4263044789030617*sin(t)+5.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy /lineto load stopped
{ moveto } if  49 1 sub { /t t dt add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if     0.0 142.26372 lineto closepath
gsave 0 0 0  setrgbcolor  0.2 .setopacityalpha  fill  grestore gsave
0.8 SLW 0 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0 0  setrgbcolor   0 360 0.97032 0.97032
-5.0453 137.2184  0 true Ellipse  closepath  gsave 0 0 0  setrgbcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 0.0 0.0   false
NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 22831 40403 a
tx@Dict begin  { -1.94804 -9.2032 } PutCoor PutBegin  end
 22831 40403 a
453 x Fq(M)22831 40403 y
tx@Dict begin  PutEnd  end
 22831 40403 a 41729 41851 a
currentpoint initclip moveto

41729 41851 a 3168 41851 a
 currentpoint currentpoint translate 1 1.0498 div 1 1.0498 div scale
neg exch neg exch translate
 3168 41851 a 921 45835 a Ft(Berec)-36
b(hne)433 b(die)g(A)-36 b(ufw)g(\366lbung)434 b(des)f(Bo)36
b(densees)434 b(\(siehe)f(obige)h(Abbildung\))f(in)g(Metern.)873
50373 y(A)-36 b(ufw)g(\366lbung:)p 8460 50373 12599 34
v 13466 w(Meter)p 1 0 0 TeXcolorrgb 921 52918 a(M\366glic)g(he)434
b(Berec)-36 b(hn)g(ung:)921 57455 y Fp(6)221 b(370)297
b Fk(\000)e Fp(6370)i Fk(\001)e Fp(cos)10891 56171 y
Fg(\020)11685 56885 y Fr(0)p Fs(;)p Fr(5846)p 11685 57146
2614 45 v 12756 57914 a(2)14431 56171 y Fg(\021)15461
57455 y Fk(\031)369 b Fp(0)p Fq(;)p Fp(083)221 b Fq(k)45
b(m)22538 57431 y Fg(b)22340 57455 y Fp(=)433 b(83)221
b Fq(m)874 60001 y Ft(T)-108 b(oleranzin)-36 b(terv)-72
b(all:)435 b Fp([)8 b(82)221 b Fq(m)p Fp(;)656 b(84)221
b Fq(m)p Fp(])p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 47992 7823 a Fn(___/1)p 1 0 0 TeXcolorrgb
47990 9815 a Fm(A)-31 b(G)369 b(4.1)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 63808 54804 45
v 0 TeXcolorgray 24746 81281 a Ft(7)p 0 TeXcolorgray
eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fu(A)-60 b(G)903 b(4.1)g(-)f(8)h(V)-179
b(ermessung)901 b(einer)g(unzug\344nglic)-60 b(hen)901
b(Steilw)-60 b(and)901 b(-)-2331 4515 y(O)-60 b(A)718
b(-)g(Matura)f(2015/16)g(-)g(Haupttermin)p 0 TeXcolorgray
-741 7823 a Ft(8.)p 0 TeXcolorgray 651 w(Ein)454 b(Steilw)-36
b(andst\374c)g(k)454 b Fq(C)95 b(D)491 b Ft(mit)454 b(der)g(H\366he)h
Fq(h)404 b Fp(=)p 25509 6782 2143 45 v 404 w Fq(C)95
b(D)490 b Ft(ist)455 b(unzug\344nglic)-36 b(h.)455 b(Um)f
Fq(h)g Ft(b)36 b(estim-)921 9815 y(men)474 b(zu)g(k)-36
b(\366nnen,)474 b(w)-36 b(erden)474 b(die)h(En)-36 b(tfern)g(ung)473
b Fq(e)438 b Fp(=)g(6)475 b Ft(Meter)f(und)f(zw)-36 b(ei)475
b(Wink)-36 b(el)475 b Fq(\013)448 b Fp(=)438 b(24)45370
9333 y Fl(\016)921 11806 y Ft(und)596 b Fq(\014)723 b
Fp(=)648 b(38)8103 11324 y Fl(\016)9227 11806 y Ft(gemessen.)599
b(Der)f(Sac)-36 b(h)g(v)g(erhalt)597 b(wird)h(durc)-36
b(h)596 b(die)h(nac)-36 b(hstehende)596 b(\(nic)-36 b(h)g(t)921
13798 y(ma\377stabgetreue\))433 b(Abbildung)g(v)-36 b(eransc)g(haulic)g
(h)g(t.)p 0 TeXcolorgray 0 TeXcolorgray 12165 30620 a
 currentpoint currentpoint translate 0.71593 0.71593 scale neg exch
neg exch translate

12165 30620 a 13465 30620 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 272.00813 a add def
/d 0.0 a add neg def /h 181.52818 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 13465 30620 a 24993 21486
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 -56.90549 -85.35823 -56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 85.35823 142.26372 -56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 -85.35823 -56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 85.35823 -85.35823 -56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 142.26372 28.45274 142.26372 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  /ArrowA { /lineto load
stopped { moveto } if } def /ArrowB { } def /ArrowInside { } def  
/t 0.0 def /t1 0.3587706702705722 def /dt t1 t sub 49 div def /F@pstplot
(1.1*cos(t)+-3.|1.1*sin(t)+-2.)  tx@AlgToPs begin AlgToPs end cvx def
/xy { F@pstplot 28.45274 mul exch 28.45274 mul exch } def  /ps@Exit
false def xy /lineto load stopped { moveto } if  49 1 sub { /t t dt
add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit } if } repeat
ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
   -85.35823 -56.90549 lineto closepath gsave 0.12549 0.12549 0.12549
 setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 0.8 SLW 0.12549
0.12549 0.12549  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.37647 0.37647 0.37647  setrgbcolor
  0.8 SLW 0.37647 0.37647 0.37647  setrgbcolor  /ArrowA { /lineto load
stopped { moveto } if } def /ArrowB { } def /ArrowInside { } def  
/t 0.0 def /t1 0.5585993153435624 def /dt t1 t sub 49 div def /F@pstplot
(1.6*cos(t)+-3.|1.6*sin(t)+-2.)  tx@AlgToPs begin AlgToPs end cvx def
/xy { F@pstplot 28.45274 mul exch 28.45274 mul exch } def  /ps@Exit
false def xy /lineto load stopped { moveto } if  49 1 sub { /t t dt
add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit } if } repeat
ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
   -85.35823 -56.90549 lineto closepath gsave 0.37647 0.37647 0.37647
 setrgbcolor  0.1 .setopacityalpha  fill  grestore gsave 0.8 SLW 0.37647
0.37647 0.37647  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t 7.853981633974483 def /t1 9.42477796076938
def /dt t1 t sub 49 div def /F@pstplot (0.6*cos(t)+5.|0.6*sin(t)+-2.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy moveto  49 1 sub
{ /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0 360 1.13791 1.13791 135.16267
-49.80444  0 true Ellipse  closepath  gsave 0  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.5  setgray  [ -85.35823 -56.90549
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 24993 21486 a
tx@Dict begin  { -98.16187 -71.13185 } PutCoor PutBegin  end

24993 21486 a Ff(A)24993 21486 y
tx@Dict begin  PutEnd  end
 24993 21486 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.5  setgray  [ 142.26372 -56.90549
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 24993 21486 a
tx@Dict begin  { 144.53998 -71.13185 } PutCoor PutBegin  end
 24993 21486 a
Ff(B)24993 21486 y
tx@Dict begin  PutEnd  end
 24993 21486 a 24993 21486 a
tx@Dict begin  { 27.88356 -66.01056 } PutCoor PutBegin  end
 24993
21486 a Ff(e)24993 21486 y
tx@Dict begin  PutEnd  end
 24993 21486 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.5  setgray  [ 142.26372 85.35823
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 24993 21486 a
tx@Dict begin  { 148.52335 84.2203 } PutCoor PutBegin  end
 24993 21486 a
Ff(D)24993 21486 y
tx@Dict begin  PutEnd  end
 24993 21486 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.5  setgray  [ 142.26372 28.45274
  false NArray  /DS 5.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 24993 21486 a
tx@Dict begin  { 149.66127 25.03854 } PutCoor PutBegin  end
 24993 21486 a Ff(C)24993 21486
y
tx@Dict begin  PutEnd  end
 24993 21486 a 24993 21486 a
tx@Dict begin  { 147.385 51.21501 } PutCoor PutBegin  end
 24993 21486 a Ff(h)24993
21486 y
tx@Dict begin  PutEnd  end
 24993 21486 a 24993 21486 a
tx@Dict begin  { -65.44139 -55.48276 } PutCoor PutBegin  end
 24993 21486 a Ff(\013)24993
21486 y
tx@Dict begin  PutEnd  end
 24993 21486 a 24993 21486 a
tx@Dict begin  { -51.21501 -56.3363 } PutCoor PutBegin  end
 24993 21486 a -310
x Ff(\014)24993 21486 y
tx@Dict begin  PutEnd  end
 24993 21486 a 43576 30620 a
currentpoint initclip moveto
 43576
30620 a 12165 30620 a
 currentpoint currentpoint translate 1 0.71593 div 1 0.71593 div scale
neg exch neg exch translate
 12165 30620 a 921 34604 a Ft(Berec)g(hne)433
b(die)g(H\366he)h Fq(h)f Ft(des)g(des)h(unzug\344nglic)-36
b(hen)433 b(Steilw)-36 b(andst\374c)g(ks)433 b(in)g(Metern.)p
1 0 0 TeXcolorrgb 921 39142 a(M\366glic)-36 b(he)434
b(V)-108 b(orgehensw)-36 b(eise:)921 41538 y Fp(tan)6
b(\()p Fq(\013)i Fp(\))369 b(=)p 6536 39599 2082 45 v
6536 40640 a Fq(B)67 b(C)p 6536 41228 V 7275 42450 a(e)9119
41538 y Fk(\))p 10816 40498 V 369 w Fq(B)g(C)464 b Fk(\031)369
b Fp(2)p Fq(;)p Fp(67)221 b Fq(m)921 45141 y Fp(tan)6
b(\()p Fq(\014)74 b Fp(\))369 b(=)p 6508 43202 2172 45
v 6508 44243 a Fq(B)67 b(D)p 6508 44831 V 7292 46053
a(e)9181 45141 y Fk(\))p 10878 44101 V 369 w Fq(B)g(D)406
b Fk(\031)369 b Fp(4)p Fq(;)p Fp(69)221 b Fq(m)921 47846
y(h)369 b Fp(=)p 3419 46805 V 368 w Fq(B)67 b(D)332 b
Fk(\000)p 7214 46805 2082 45 v 295 w Fq(B)67 b(C)464
b Fk(\031)369 b Fp(2)p Fq(;)p Fp(02)221 b Fq(m)921 52383
y Ft(L\366sungssc)-36 b(hl\374ssel:)921 54929 y(Ein)444
b(Punkt)g(f\374r)g(die)g(ric)-36 b(h)g(tige)444 b(L\366sung,)g(w)-36
b(ob)36 b(ei)445 b(die)f(Einheit)f(\022m\020)i(nic)-36
b(h)g(t)443 b(angegeb)36 b(en)444 b(sein)921 56920 y(m)-36
b(uss.)318 b(Die)h(A)-36 b(ufgab)36 b(e)318 b(ist)g(auc)-36
b(h)317 b(dann)g(als)h(ric)-36 b(h)g(tig)318 b(gel\366st)h(zu)e(w)-36
b(erten,)318 b(w)-36 b(enn)317 b(b)36 b(ei)318 b(k)-36
b(orrektem)873 58912 y(Ansatz)477 b(das)h(Ergebnis)f(aufgrund)h(eines)f
(Rec)-36 b(henfehlers)478 b(nic)-36 b(h)g(t)477 b(ric)-36
b(h)g(tig)477 b(ist.)i(T)-108 b(oleranzin-)921 60904
y(terv)-72 b(all:)435 b Fp([)8 b(2)221 b Fq(m)p Fp(;)655
b(2)p Fq(;)p Fp(1)221 b Fq(m)p Fp(])p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7823 a Fn(___/1)p
1 0 0 TeXcolorrgb 47990 9815 a Fm(A)-31 b(G)369 b(4.1)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
64712 54804 45 v 0 TeXcolorgray 24746 81281 a Ft(8)p
0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fu(A)-60 b(G)504 b(4.1)f(-)h(9)f(Seh)-60
b(wink)g(el)502 b(-)i(O)-60 b(A)503 b(-)h(Matura)f(2014/15)g(-)h
(Haupttermin)p 0 TeXcolorgray -741 4907 a Ft(9.)p 0 TeXcolorgray
651 w(Der)346 b(Seh)-36 b(wink)g(el)346 b(ist)g(derjenige)h(Wink)-36
b(el,)347 b(un)-36 b(ter)345 b(dem)g(ein)h(Ob)36 b(jekt)346
b(v)-36 b(on)347 b(einem)f(Beobac)-36 b(h)g(ter)874 6899
y(w)g(ahrgenommen)388 b(wird.)h(Die)g(nac)-36 b(hstehende)387
b(Abbildung)g(v)-36 b(erdeutlic)g(h)g(t)388 b(den)g(Zusammen-)921
8891 y(hang)532 b(zwisc)-36 b(hen)532 b(dem)g(Seh)-36
b(wink)g(el)533 b Fq(\013)8 b Ft(,)533 b(der)f(En)-36
b(tfern)g(ung)530 b Fq(r)569 b Ft(und)531 b(der)h(realen)g(\(\022)-72
b(w)-36 b(ahren\020\))873 10882 y(A)g(usdehn)g(ung)431
b Fq(g)481 b Ft(eines)434 b(Ob)36 b(jekts)434 b(in)f(zw)-36
b(ei)434 b(Dimensionen.)p 0 TeXcolorgray 0 TeXcolorgray
5418 43939 a
 currentpoint currentpoint translate 1.7141 1.7141 scale neg exch neg
exch translate
 5418 43939 a 5852 43939 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 185.71129 a add def
/d 0.0 a add neg def /h 151.27066 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 5852 43939 a -2981
43460 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.5  setgray  [ 227.62195 14.22636 241.84831
14.22636 241.84831 128.03734 227.62195 128.03734  /Lineto /lineto load
def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt {
n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0
ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add
2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.5  setgray  0.5 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.5  setgray  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 71.13185 113.81097 85.35823
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 56.90549 85.35823 71.13185
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t -1.051650212548374 def /t1 0.896055384571344
def /dt t1 t sub 49 div def /F@pstplot (1.*0.8062257748298549*cos(t)+0.*0.8062257748298549*sin(t)+3.|0.*0.8062257748298549*cos(t)+1.*0.8062257748298549*sin(t)+2.5)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy moveto  49 1 sub
{ /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t 2.556543767907307 def /t1 3.730340846977759
def /dt t1 t sub 49 div def /F@pstplot (1.*0.5412441528494601*cos(t)+0.*0.5412441528494601*sin(t)+4.2|0.*0.5412441528494601*cos(t)+1.*0.5412441528494601*sin(t)+2.5)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy moveto  49 1 sub
{ /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t 2.8032685141037055 def /t1 3.4831451519557395
def /dt t1 t sub 49 div def /F@pstplot (1.*0.43099917287242917*cos(t)+0.*0.43099917287242917*sin(t)+4.2|0.*0.43099917287242917*cos(t)+1.*0.43099917287242917*sin(t)+2.5)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy moveto  49 1 sub
{ /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 0  setgray  1.0 .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t -0.1803677864212867 def /t1 0.17837802046432993
def /dt t1 t sub 49 div def /F@pstplot (1.*0.806225774829855*cos(t)+0.*0.806225774829855*sin(t)+3.|0.*0.806225774829855*cos(t)+1.*0.806225774829855*sin(t)+2.5)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy moveto  49 1 sub
{ /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 0  setgray  1.0 .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 227.62195 71.13185 108.26247 71.13185
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 227.62195 128.03734 227.62195 14.22636
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 241.84831 128.03734 227.62195 128.03734
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 241.84831 14.22636 241.84831 128.03734
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 227.62195 14.22636 241.84831 14.22636
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 253.22923 14.25241 253.22923 128.03734
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 253.22923 128.03734 241.84831 128.03734
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 253.22923 14.25241 241.84831 14.22636
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
-2981 43460 a
tx@Dict begin  { 229.75581 41.6024 } PutCoor PutBegin  end
 -2981 43460 a 458 x Fe(Ob)22 b(jekt)-2981
43460 y
tx@Dict begin  PutEnd  end
 -2981 43460 a -2981 43460 a
tx@Dict begin  { 82.51277 48.36957 } PutCoor PutBegin  end
 -2981 43460 a 458
x Fe(Beobac)-22 b(h)g(ter)-2981 43460 y
tx@Dict begin  PutEnd  end
 -2981 43460 a
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07469 142.26372 108.26247 71.13185
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 256.07469 0.0 108.26247 71.13185  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t 1.5707963267948966 def /t1 3.141592653589793
def /dt t1 t sub 49 div def /F@pstplot (0.356019128979754*cos(t)+8.|0.356019128979754*sin(t)+2.5)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy moveto  49 1 sub
{ /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0 360 0.67511 0.67511 223.40848
75.34532  0 true Ellipse  closepath  gsave 0  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t -0.44488176595303497 def /t1 0.44488176595303497
def /dt t1 t sub 49 div def /F@pstplot (0.712038257959508*cos(t)+3.805|0.712038257959508*sin(t)+2.5)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy moveto  49 1 sub
{ /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t 0.0 def /t1 0.44488176595303497 def
/dt t1 t sub 49 div def /F@pstplot (1.1867304299325134*cos(t)+3.805|1.1867304299325134*sin(t)+2.5)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy moveto  49 1 sub
{ /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
-2981 43460 a
tx@Dict begin  { 132.13185 81.09048 } PutCoor PutBegin  end
 -2981 43460 a -2848 43699 a Fd(\013)p -2848
43816 506 45 v -2784 44244 a Fc(2)-2981 43460 y
tx@Dict begin  PutEnd  end
 -2981
43460 a -2981 43460 a
tx@Dict begin  { 177.03992 74.69278 } PutCoor PutBegin  end
 -2981 43460 a Fs(r)-2981 43460
y
tx@Dict begin  PutEnd  end
 -2981 43460 a -2981 43460 a
tx@Dict begin  { 255.71434 68.2864 } PutCoor PutBegin  end
 -2981 43460 a -172 x Fs(g)-2981
43460 y
tx@Dict begin  PutEnd  end
 -2981 43460 a -2981 43460 a
tx@Dict begin  { 118.0787 67.71767 } PutCoor PutBegin  end
 -2981 43460 a -2981
43195 a
 currentpoint currentpoint translate 0.8 0.8 scale neg exch neg exch
translate
 -2981 43195 a 1 1 1 TeXcolorrgb 1 1 1 TeXcolorrgb
-2981 43527 1269 1046 v 1 1 1 TeXcolorrgb 0 TeXcolorgray
332 w Fs(\013)p 1 1 1 TeXcolorrgb 0 TeXcolorgray -2981
43195 a
 currentpoint currentpoint translate 1 0.8 div 1 0.8 div scale neg
exch neg exch translate
 -2981 43195 a -2981 43460 a
tx@Dict begin  PutEnd  end
 -2981 43460 a 26409
43939 a
currentpoint initclip moveto
 26409 43939 a 5418 43939 a
 currentpoint currentpoint translate 1 1.7141 div 1 1.7141 div scale
neg exch neg exch translate
 5418 43939 a 921 46893
a Fe(Quelle:)275 b(h)-22 b(ttp://upload.wikimedia.org/wikip)22
b(edia/commons/d/d3/Sc)-22 b(hein)g(bareGro)22 b(esse.png)270
b([22.01.2015])275 b(\(adaptiert\))921 50400 y Ft(Gib)393
b(eine)h(F)-108 b(ormel)394 b(an,)g(mit)g(der)g(die)g(reale)g(A)-36
b(usdehn)g(ung)392 b Fq(g)441 b Ft(dieses)394 b(Ob)36
b(jekts)394 b(mithilfe)h(v)-36 b(on)921 52392 y Fq(\013)442
b Ft(und)433 b Fq(r)469 b Ft(b)36 b(erec)-36 b(hnet)433
b(w)-36 b(erden)433 b(kann.)921 56929 y Fq(g)416 b Fp(=)p
1 0 0 TeXcolorrgb 434 w(2)295 b Fk(\001)g Fq(r)332 b
Fk(\001)295 b Fp(tan)8703 55645 y Fg(\020)9497 56406
y Fs(\013)p 9497 56619 605 45 v 9564 57387 a Fr(2)10235
55645 y Fg(\021)11329 56929 y Ft(mit)434 b Fq(\013)378
b Fk(2)368 b Fp(\(0;)221 b(180)19861 56447 y Fl(\016)20389
56929 y Fp(\))433 b Ft(bzw.)h Fq(\013)378 b Fk(2)368
b Fp(\(0;)221 b Fq(\031)48 b Fp(\))p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4907 a Fn(___/1)p
1 0 0 TeXcolorrgb 47990 6899 a Fm(A)-31 b(G)369 b(4.1)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
61068 54804 45 v 0 TeXcolorgray 24746 81281 a Ft(9)p
0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fu(A)-60 b(G)753 b(4.1)f(-)g(10)g
(Sonnenh\366he)e(-)i(O)-60 b(A)753 b(-)f(Matura)g(2014/15)g(-)g(Neb)60
b(en-)-2331 4622 y(termin)717 b(1)p 0 TeXcolorgray -1391
7929 a Ft(10.)p 0 TeXcolorgray 651 w(Un)-36 b(ter)485
b(der)g(Sonnenh\366he)f Fq(')i Ft(v)-36 b(ersteh)g(t)485
b(man)h(denjenigen)f(spitzen)g(Wink)-36 b(el,)487 b(den)e(die)h(ein-)
921 9921 y(fallenden)458 b(Sonnenstrahlen)f(mit)h(einer)g(horizon)-36
b(talen)458 b(Eb)36 b(ene)458 b(einsc)-36 b(hlie\377en.)459
b(Die)g(Sc)-36 b(hat-)921 11913 y(tenl\344nge)429 b Fq(s)g
Ft(eines)h(Geb\344udes)e(der)h(H\366he)g Fq(h)g Ft(h\344ngt)g(v)-36
b(on)430 b(der)f(Sonnenh\366he)f Fq(')h Ft(ab)g(\()p
Fq(s)p Ft(,)g Fq(h)g Ft(in)921 13905 y(Metern\).)921
18442 y(Gib)560 b(eine)h(F)-108 b(ormel)561 b(an,)g(mit)g(der)f(die)h
(Sc)-36 b(hattenl\344nge)560 b Fq(s)g Ft(eines)h(Geb\344udes)f(der)g
(H\366he)h Fq(h)921 20434 y Ft(mithilfe)434 b(der)f(Sonnenh\366he)f
Fq(')i Ft(b)36 b(erec)-36 b(hnet)432 b(w)-36 b(erden)433
b(kann.)921 24971 y Fq(s)369 b Fp(=)p 1 0 0 TeXcolorrgb
4562 24448 a Fs(h)p 3481 24661 2705 45 v 3481 25429 a
Fr(tan\()p Fs(')p Fr(\))6751 24971 y Ft(mit)434 b Fq(')369
b Fk(2)f Fp(\(0)12767 24489 y Fl(\016)13293 24971 y Fq(;)221
b Fp(90)15175 24489 y Fl(\016)15702 24971 y Fp(\))434
b Ft(bzw.)g Fq(')369 b Fk(2)22152 23687 y Fg(\020)22813
24971 y Fp(0;)24179 24448 y Fs(\031)p 24179 24661 573
45 v 24230 25429 a Fr(2)24884 23687 y Fg(\021)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7929
a Fn(___/1)p 1 0 0 TeXcolorrgb 47990 9921 a Fm(A)-31
b(G)369 b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 29126 54804 45 v -2331 34554 a Fu(A)-60
b(G)587 b(4.1)e(-)h(11)g(F)-179 b(estungsbahn)582 b(Salzburg)j(-)h(O)
-60 b(A)586 b(-)g(Matura)f(2014/15)-2617 37576 y(-)718
b(Neb)60 b(en)-60 b(termin)716 b(2)p 0 TeXcolorgray -1391
40884 a Ft(11.)p 0 TeXcolorgray 651 w(Die)597 b(F)-108
b(estungsbahn)594 b(Salzburg)i(ist)g(eine)g(Standseilbahn)g(in)g(der)f
(Stadt)h(Salzburg)f(mit)921 42876 y(k)-36 b(onstan)g(ter)457
b(Steigung.)h(Die)g(Bahn)g(auf)g(den)f(dortigen)g(F)-108
b(estungsb)36 b(erg)457 b(ist)h(die)f(\344lteste)h(in)921
44868 y(Betrieb)315 b(b)36 b(e\034ndlic)-36 b(he)314
b(Seilbahn)h(dieser)g(Art)f(in)h(\326sterreic)-36 b(h.)316
b(Die)g(Standseilbahn)e(legt)h(eine)855 46860 y(W)-108
b(egstrec)-36 b(k)g(e)495 b(v)-36 b(on)496 b Fp(198)p
Fq(;)p Fp(5)221 b Fq(m)497 b Ft(zur\374c)-36 b(k)495
b(und)f(\374b)36 b(erwindet)494 b(dab)36 b(ei)496 b(einen)e(H\366hen)
-36 b(un)g(tersc)g(hied)887 48851 y(v)g(on)434 b Fp(96)p
Fq(;)p Fp(6)221 b Fq(m)p Ft(.)921 51397 y(Berec)-36 b(hne)497
b(den)g(Wink)-36 b(el)498 b Fq(\013)8 b Ft(,)499 b(un)-36
b(ter)497 b(dem)g(die)g(Gleise)h(der)f(Bahn)h(gegen)g(die)f(Horizon)-36
b(tale)921 53389 y(geneigt)434 b(sind.)p 1 0 0 TeXcolorrgb
921 57926 a Fp(sin)6 b(\()p Fq(\013)i Fp(\))370 b(=)6489
57355 y Fr(96)p Fs(;)p Fr(6)p 6254 57616 2144 45 v 6254
58384 a(198)p Fs(;)p Fr(5)8899 57926 y Fk(\))f Fq(\013)378
b Fk(\031)369 b Fp(29)p Fq(;)p Fp(12)16164 57444 y Fl(\016)874
60471 y Ft(T)-108 b(oleranzin)-36 b(terv)-72 b(all:)435
b Fp([)8 b(29)12840 59989 y Fl(\016)13367 60471 y Fp(;)221
b(30)15249 59989 y Fl(\016)15776 60471 y Fp(])p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 40884
a Fn(___/1)p 1 0 0 TeXcolorrgb 47990 42876 a Fm(A)-31
b(G)369 b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 64279 54804 45 v 0 TeXcolorgray 24421
81281 a Ft(10)p 0 TeXcolorgray eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fu(A)-60 b(G)718 b(4.1)f(-)h(12)f(Rhom)-60
b(bus)716 b(-)i(O)-60 b(A)718 b(-)f(Matura)g(NT)h(2)f(15/16)p
0 TeXcolorgray -1391 4907 a Ft(12.)p 0 TeXcolorgray 651
w(In)292 b(einem)g(Rhom)-36 b(bus)292 b(mit)g(der)g(Seite)g
Fq(a)g Ft(halbieren)g(die)g(Diagonalen)i Fq(e)369 b Fp(=)f
Fq(AC)387 b Ft(und)292 b Fq(f)511 b Fp(=)368 b Fq(B)67
b(D)921 6899 y Ft(einander.)486 b(Die)h(Diagonale)h Fq(e)e
Ft(halbiert)g(den)f(Wink)-36 b(el)487 b Fq(\013)467 b
Fp(=)458 b Fb(\\)p Fq(D)36 b(AB)553 b Ft(und)485 b(die)h(Diagonale)921
8891 y Fq(f)575 b Ft(halbiert)434 b(den)f(Wink)-36 b(el)434
b Fq(\014)443 b Fp(=)369 b Fb(\\)p Fq(AB)67 b(C)95 b
Ft(.)921 32177 y
 currentpoint currentpoint translate 0.8413 0.8413 scale neg exch neg
exch translate
 921 32177 a 5690 32177 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 439.87915 a add def
/d 0.0 a add neg def /h 240.1412 a add def a neg d moveto a neg h L
w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 5690 32177
a 15076 24933 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 170.71646 -28.45274 -56.90549 -28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.12941 0.12941 0.12941  setrgbcolor
  0.8 SLW 0.12941 0.12941 0.12941  setrgbcolor  /ArrowA { /lineto load
stopped { moveto } if } def /ArrowB { } def /ArrowInside { } def  
/t 0.0 def /t1 0.7853981633974483 def /dt t1 t sub 49 div def /F@pstplot
(1.*cos(t)+-2.|1.*sin(t)+-1.)  tx@AlgToPs begin AlgToPs end cvx def
/xy { F@pstplot 28.45274 mul exch 28.45274 mul exch } def  /ps@Exit
false def xy /lineto load stopped { moveto } if  49 1 sub { /t t dt
add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit } if } repeat
ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt { moveto } {
dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse  } if 
   -56.90549 -28.45274 lineto closepath gsave 0.12941 0.12941 0.12941
 setrgbcolor  0.2 .setopacityalpha  fill  grestore gsave 0.8 SLW 0.12941
0.12941 0.12941  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 104.0477 132.50044 -56.90549 -28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 331.66965 132.50044 170.71646 -28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 104.0477 132.50044 331.66965 132.50044
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 331.66965 132.50044 -56.90549 -28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 104.0477 132.50044 170.71646 -28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.12941 0.12941 0.12941  setrgbcolor
  0.8 SLW 0.12941 0.12941 0.12941  setrgbcolor  /ArrowA { /lineto load
stopped { moveto } if } def /ArrowB { } def /ArrowInside { } def  
/t 0.3926990816987241 def /t1 1.963495408493621 def /dt t1 t sub 49
div def /F@pstplot (0.6*cos(t)+4.828427124746191|0.6*sin(t)+1.8284271247461896)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy /lineto load stopped
{ moveto } if  49 1 sub { /t t dt add def xy  dup 1.e30 28.45274 mul
gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  ps@Exit { exit } if } repeat ps@Exit not { /t t1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if     137.38208 52.02385 lineto
closepath gsave 0.12941 0.12941 0.12941  setrgbcolor  0.1 .setopacityalpha
 fill  grestore gsave 0.8 SLW 0.12941 0.12941 0.12941  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.12941 0.12941 0.12941  setrgbcolor
  0 360 1.13791 1.13791 141.22478 61.3013  0 true Ellipse  closepath
 gsave 0.12941 0.12941 0.12941  setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.12941 0.12941 0.12941  setrgbcolor
  0.8 SLW 0.12941 0.12941 0.12941  setrgbcolor  /ArrowA { /lineto load
stopped { moveto } if } def /ArrowB { } def /ArrowInside { } def  
/t 0.7853981633974482 def /t1 3.141592653589793 def /dt t1 t sub 49
div def /F@pstplot (1.*cos(t)+6.|1.*sin(t)+-1.)  tx@AlgToPs begin AlgToPs
end cvx def /xy { F@pstplot 28.45274 mul exch 28.45274 mul exch } def
 /ps@Exit false def xy /lineto load stopped { moveto } if  49 1 sub
{ /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if     170.71646 -28.45274 lineto closepath gsave 0.12941 0.12941
0.12941  setrgbcolor  0.2 .setopacityalpha  fill  grestore gsave 0.8
SLW 0.12941 0.12941 0.12941  setrgbcolor  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ -56.90549 -28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 15076 24933 a
tx@Dict begin  { -62.59595 -44.95538 } PutCoor PutBegin  end

15076 24933 a 0.25 TeXcolorgray Fs(A)p 0 TeXcolorgray
15076 24933 a
tx@Dict begin  PutEnd  end
 15076 24933 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 170.71646 -28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 15076 24933 a
tx@Dict begin  { 175.83774 -40.40283 } PutCoor PutBegin  end
 15076 24933 a 0.25 TeXcolorgray
Fs(B)p 0 TeXcolorgray 15076 24933 a
tx@Dict begin  PutEnd  end
 15076 24933 a 15076
24933 a
tx@Dict begin  { 56.90549 -37.55782 } PutCoor PutBegin  end
 15076 24933 a Fs(a)15076 24933 y
tx@Dict begin  PutEnd  end
 15076 24933
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 104.0477 132.50044
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 15076 24933
a
tx@Dict begin  { 106.4134 136.00407 } PutCoor PutBegin  end
 15076 24933 a 0.25 TeXcolorgray Fs(D)p 0 TeXcolorgray
15076 24933 a
tx@Dict begin  PutEnd  end
 15076 24933 a 15076 24933 a
tx@Dict begin  { -42.10992 -23.33145 } PutCoor PutBegin  end
 15076 24933
a 0.12941 0.12941 0.12941 TeXcolorrgb Fs(\013)p 0 TeXcolorgray
15076 24933 a
tx@Dict begin  PutEnd  end
 15076 24933 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 331.66965 132.50044
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 15076 24933 a
tx@Dict begin  { 334.03535 136.00407 } PutCoor PutBegin  end
 15076 24933 a 0.25 TeXcolorgray
Fs(C)p 0 TeXcolorgray 15076 24933 a
tx@Dict begin  PutEnd  end
 15076 24933 a 15076
24933 a
tx@Dict begin  { 183.8049 58.61258 } PutCoor PutBegin  end
 15076 24933 a Fs(e)15076 24933 y
tx@Dict begin  PutEnd  end
 15076 24933
a 15076 24933 a
tx@Dict begin  { 123.4848 95.60123 } PutCoor PutBegin  end
 15076 24933 a -172 x Fs(f)15076 24933
y
tx@Dict begin  PutEnd  end
 15076 24933 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 137.38208 52.02385
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
15076 24933 a
tx@Dict begin  { 158.76636 -21.62392 } PutCoor PutBegin  end
 15076 24933 a 0.12941 0.12941 0.12941 TeXcolorrgb
-172 x Fs(\014)p 0 TeXcolorgray 15076 24933 a
tx@Dict begin  PutEnd  end
 15076 24933
a 54383 32177 a
currentpoint initclip moveto
 54383 32177 a 921 32177 a
 currentpoint currentpoint translate 1 0.8413 div 1 0.8413 div scale
neg exch neg exch translate
 921 32177 a
2545 x Ft(Gegeb)36 b(en)436 b(sind)g(die)g(Seitenl\344nge)g
Fq(a)g Ft(und)g(der)f(Wink)-36 b(el)438 b Fq(\014)74
b Ft(.)436 b(Gib)g(eine)g(F)-108 b(ormel)437 b(an,)f(mit)h(der)921
36714 y Fq(f)575 b Ft(mithilfe)435 b(v)-36 b(on)434 b
Fq(a)f Ft(und)f Fq(\014)508 b Ft(b)36 b(erec)-36 b(hnet)432
b(w)-36 b(erden)433 b(kann.)921 39260 y Fq(f)511 b Fp(=)p
1 0 0 TeXcolorrgb 433 w(2)296 b Fk(\001)f Fq(a)g Fk(\001)g
Fp(cos\()9150 38689 y Fs(\014)p 9150 38950 574 45 v 9202
39718 a Fr(2)9856 39260 y Fp(\))p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 4907 a Fn(___/1)p 1 0 0
TeXcolorrgb 47990 6899 a Fm(A)-31 b(G)369 b(4.1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 43193
54804 45 v 0 TeXcolorgray 24421 81281 a Ft(11)p 0 TeXcolorgray
eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fu(A)-60 b(G)718 b(4.1)f(-)h(13)f(Rhom)-60
b(bus)716 b(-)i(O)-60 b(A)718 b(-)f(Matura)g(NT)h(2)f(15/16)p
0 TeXcolorgray -1391 4907 a Ft(13.)p 0 TeXcolorgray 651
w(Die)324 b(F)-108 b(unktion)322 b Fq(E)401 b Ft(gibt)323
b(den)f(Erl\366s)i Fq(E)78 b Fp(\()p Fq(x)p Fp(\))323
b Ft(und)f(die)h(F)-108 b(unktion)322 b Fq(K)418 b Ft(die)323
b(K)-36 b(osten)323 b Fq(K)95 b Fp(\()p Fq(x)p Fp(\))323
b Ft(jew)-36 b(eils)921 6899 y(in)396 b(Euro)f(b)36 b(ezogen)396
b(auf)h(die)e(Pro)36 b(duktionsmenge)396 b Fq(x)g Ft(an.)h(Die)f(Pro)36
b(duktionsmenge)396 b Fq(x)g Ft(wird)921 8891 y(in)387
b(Mengeneinheiten)g(\(ME\))f(angegeb)36 b(en.)388 b(Im)g(folgenden)g(K)
-36 b(o)36 b(ordinatensystem)387 b(sind)g(die)921 10882
y(Graphen)432 b(b)36 b(eider)433 b(F)-108 b(unktion)433
b(dargestellt:)p 0 TeXcolorgray 0 TeXcolorgray 12165
31302 a
 currentpoint currentpoint translate 0.89026 0.89026 scale neg exch
neg exch translate
 12165 31302 a 12165 31302 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 228.1911 a add def
/d 0.0 a add neg def /h 183.23573 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 12165 31302 a 14055
29916 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 211.1193  0 0.0  0 ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa 0.0
 211.1193  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 170.71646  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { xStart } def /MaxValue { xEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline  moveto x maxTickline
 lineto } { x tickstart STsize mul  moveto x tickend STsize mul  lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul  moveto cntsubTick maxTickline
STsize mul  lineto } { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline  moveto cntTick
maxTickline  lineto } { cntTick tickstart  moveto cntTick tickend 
lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore
} dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1
sub { cntsubTick abs MinValue abs le { cntsubTick tickstart STsize
mul  moveto cntsubTick tickend STsize mul  lineto }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave cntTick tickstart  moveto
cntTick tickend  lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 170.71646
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 211.1193
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 170.71646  0 0.0  ArrowA CP 4 2 roll
ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa 0.0
 170.71646  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
0.0  def /maxTickline 211.1193  def /dT 1864679 abs 65536 div viceversa
{ neg } if def /DT 1. abs viceversa { neg } if def /subTNo 2 def subTNo
0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse -2.0 0.0 /tickend
exch def /tickstart exch def /Twidth 0.4  def /subTwidth 0.2  def /STsize
0.75 def /TColor { 0  setgray  } def /subTColor { 0.5  setgray  } def
/MinValue { yStart } def /MaxValue { yEnd 3.0 2.  CLW mul add 1.4 
mul viceversa { add epsilon sub }{ sub epsilon add } ifelse } def /logLines
{ false } def /LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke}
def /subLSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def
0 dT MaxValue 1 add { /cntTick exch def logLines { gsave 1 1 DT { 1
sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MaxValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for subTwidth SLW subTColor
subLSstroke grestore stroke /dsubT 0 def } if dsubT abs 0 gt { gsave
/cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick abs MaxValue
abs le { false { cntsubTick minTickline STsize mul exch moveto cntsubTick
maxTickline STsize mul exch lineto } { cntsubTick tickstart STsize
mul exch moveto cntsubTick tickend STsize mul exch lineto } ifelse
}{ exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline exch moveto cntTick maxTickline exch lineto } {
cntTick tickstart exch moveto cntTick tickend exch lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MinValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for /dsubT 0 def subTwidth SLW subTColor subLSstroke grestore } dsubT
abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul exch moveto cntsubTick
tickend STsize mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart exch moveto cntTick tickend
exch lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true
def } ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 170.71646
0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul
add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 211.1193
0.0 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
14055 29916 a
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 14055 29916 a 14055 29916 a
tx@Dict begin  { 211.1193 170.71646 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 14055 29916
a 14055 29916 a
tx@Dict begin  { 5.0 0.0 0.0 0.0 140.  Uput UUput } PutCoor PutBegin
 end
 14055 29916 a 14055 29916 a
tx@Dict begin  PutEnd  end
 14055 29916
a 14055 29916 a
tx@Dict begin  PutEnd  end
 14055 29916 a 14055 29916 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 14055 29916
a 14055 29916 a
tx@Dict begin  { 0.0 0.0 pop 211.1193 170.71646 exch pop } PutCoor
PutBegin  end
 14055 29916 a 14055 29916 a
tx@Dict begin  { 5.0 0.0 0.0 0.0 -40.  Uput UUput } PutCoor PutBegin
 end
 14055 29916
a 14055 29916 a
tx@Dict begin  PutEnd  end
 14055 29916 a 14055 29916 a
tx@Dict begin  PutEnd  end
 14055 29916
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -0.5999999999999998 def /x1 7.420000000000003
def /dx x1 x sub 199 div def /F@pstplot (x)  tx@AlgToPs begin AlgToPs
end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def  /ps@Exit
false def xy moveto  199 1 sub { /x x dx add def xy  dup 1.e30 28.45274
mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse
} ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x x1 def xy 
dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt {
moveto } { L } ifelse } ifelse  } if  gsave 1.6 SLW 0  setgray  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -0.5999999999999998 def /x1 7.420000000000003
def /dx x1 x sub 199 div def /F@pstplot (0.5*x+2.0)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 1.6 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 14055 29916 a
tx@Dict begin  { 180.39029 140.55661 } PutCoor PutBegin  end
 14055 29916 a
915 x Ft(K)14055 29916 y
tx@Dict begin  PutEnd  end
 14055 29916 a 14055 29916 a
tx@Dict begin  { 139.41826 163.3189 } PutCoor PutBegin  end

14055 29916 a 915 x Ft(E)14055 29916 y
tx@Dict begin  PutEnd  end
 14055 29916 a
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 113.81097 113.81097
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 14055 29916 a
tx@Dict begin  { 107.55133 117.79433 } PutCoor PutBegin  end

14055 29916 a 0.25 TeXcolorgray Fj(S)p 0 TeXcolorgray
14055 29916 a
tx@Dict begin  PutEnd  end
 14055 29916 a 14055 29916 a
tx@Dict begin  { 184.94283 5.69046 } PutCoor PutBegin  end
 14055 29916
a Fs(x)313 b Fj(in)h(ME)14055 29916 y
tx@Dict begin  PutEnd  end
 14055 29916 a 14055
29916 a
tx@Dict begin  { 5.69046 162.18054 } PutCoor PutBegin  end
 14055 29916 a -222 x Fs(E)50 b Fr(\()p Fs(x)p
Fr(\))p Fj(,)312 b Fs(K)63 b Fr(\()p Fs(x)p Fr(\))313
b Fj(in)h Fa(e)14055 29916 y
tx@Dict begin  PutEnd  end
 14055 29916 a 37425 31302
a
currentpoint initclip moveto
 37425 31302 a 12165 31302 a
 currentpoint currentpoint translate 1 0.89026 div 1 0.89026 div scale
neg exch neg exch translate
 12165 31302 a 921 35286
a Ft(In)-36 b(terpretiere)378 b(die)h(b)36 b(eiden)379
b(K)-36 b(o)36 b(ordinaten)379 b(des)g(Sc)-36 b(hnittpunkts)378
b Fq(S)456 b Ft(der)379 b(b)36 b(eiden)379 b(F)-108 b(unktions-)921
37278 y(graphen)433 b(im)h(gegeb)36 b(enen)433 b(Zusammenhang!)p
1 0 0 TeXcolorrgb 921 39823 a(Die)615 b(erste)f(K)-36
b(o)36 b(ordinate)615 b(des)f(Sc)-36 b(hnittpunkts)613
b(gibt)h(diejenige)h(Pro)36 b(duktionsmenge)615 b(an,)921
41815 y(b)36 b(ei)475 b(der)f(k)-36 b(osten-dec)g(k)g(end)474
b(pro)36 b(duziert)474 b(wird)h(\(d.)g(h.,)g(b)36 b(ei)475
b(der)g(Erl\366s)g(und)f(K)-36 b(osten)475 b(gleic)-36
b(h)921 43807 y(ho)36 b(c)-36 b(h)577 b(sind\),)h(die)g(zw)-36
b(eite)578 b(K)-36 b(o)36 b(ordinate)578 b(gibt)g(dab)36
b(ei)578 b(den)f(zugeh\366rigen)h(Erl\366s)g(bzw.)h(die)921
45799 y(zugeh\366rigen)434 b(K)-36 b(osten)433 b(an.)921
48344 y(o)36 b(der:)921 50890 y(Die)338 b(erste)f(K)-36
b(o)36 b(ordinate)338 b(des)f(Sc)-36 b(hnittpunkts)335
b(gibt)j(diejenige)g(Pro)36 b(duktionsmenge)337 b(an,)h(b)36
b(ei)921 52882 y(der)398 b(w)-36 b(eder)399 b(Gewinn)f(no)36
b(c)-36 b(h)398 b(V)-108 b(erlust)398 b(gemac)-36 b(h)g(t)399
b(wird,)g(die)g(zw)-36 b(eite)399 b(K)-36 b(o)36 b(ordinate)399
b(gibt)g(dab)36 b(ei)921 54874 y(den)433 b(zugeh\366rigen)h(Erl\366s)g
(bzw.)f(die)h(zugeh\366rigen)g(K)-36 b(osten)433 b(an.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
4907 a Fn(___/1)p 1 0 0 TeXcolorrgb 47990 6899 a Fm(A)-31
b(G)369 b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 58607 54804 45 v 0 TeXcolorgray 24421
81281 a Ft(12)p 0 TeXcolorgray eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fu(A)-60 b(G)692 b(4.1)e(-)h(14)g
(De\034nition)e(der)h(Wink)-60 b(elfunktion)687 b(-)k(MC)h(-)f(Matura)
-2385 4515 y(2013/14)718 b(Haupttermin)p 0 TeXcolorgray
-1391 7823 a Ft(14.)p 0 TeXcolorgray 651 w(Die)434 b(nac)-36
b(hstehende)432 b(Abbildung)h(zeigt)h(ein)f(rec)-36 b(h)g(t)g(wink)g
(eliges)435 b(Dreiec)-36 b(k)434 b Fq(P)181 b(QR)11 b
Ft(.)p 0 TeXcolorgray 0 TeXcolorgray 9916 29199 a
 currentpoint currentpoint translate 1.31818 1.31818 scale neg exch
neg exch translate
 9916
29199 a 9916 29199 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 184.94284 a add def
/d 0.0 a add neg def /h 130.31361 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 9916 29199 a 43679 49672 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -227.62195 284.52744 -284.52744 227.62195
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -142.26372 199.1692 -284.52744 227.62195
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -142.26372 199.1692 -227.62195 284.52744
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t -2.356194490192345 def /t1 -0.7853981633974483
def /dt t1 t sub 49 div def /F@pstplot (0.6*cos(t)+-8.|0.6*sin(t)+10.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy moveto  49 1 sub
{ /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0 360 1.13791 1.13791 -227.62195
274.48544  0 true Ellipse  closepath  gsave 0  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t -0.19739555984988078 def /t1 0.7853981633974483
def /dt t1 t sub 49 div def /F@pstplot (0.8*cos(t)+-10.|0.8*sin(t)+8.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy moveto  49 1 sub
{ /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def   /t 2.356194490192345 def /t1 2.9441970937399122
def /dt t1 t sub 49 div def /F@pstplot (0.8*cos(t)+-5.|0.8*sin(t)+7.)
 tx@AlgToPs begin AlgToPs end cvx def /xy { F@pstplot 28.45274 mul
exch 28.45274 mul exch } def  /ps@Exit false def xy moveto  49 1 sub
{ /t t dt add def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30
28.45274 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 28.45274 mul gt {
moveto } { dup -1.e30 28.45274 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 43679 49672 a
tx@Dict begin  { -230.46739 293.06334 } PutCoor PutBegin  end
 43679 49672 a
610 x Fj(R)43679 49672 y
tx@Dict begin  PutEnd  end
 43679 49672 a 43679 49672 a
tx@Dict begin  { -293.06334 229.89821 } PutCoor PutBegin  end

43679 49672 a 610 x Fj(P)43679 49672 y
tx@Dict begin  PutEnd  end
 43679 49672 a
43679 49672 a
tx@Dict begin  { -136.57324 196.89293 } PutCoor PutBegin  end
 43679 49672 a 610 x Fj(Q)43679 49672 y
tx@Dict begin  PutEnd  end

43679 49672 a 43679 49672 a
tx@Dict begin  { -184.94283 256.07469 } PutCoor PutBegin  end
 43679 49672 a 381 x Fj(p)43679
49672 y
tx@Dict begin  PutEnd  end
 43679 49672 a 43679 49672 a
tx@Dict begin  { -223.0694 210.55013 } PutCoor PutBegin  end
 43679 49672 a 381
x Fj(r)43679 49672 y
tx@Dict begin  PutEnd  end
 43679 49672 a 43679 49672 a
tx@Dict begin  { -264.6106 261.76515 } PutCoor PutBegin  end
 43679
49672 a 381 x Fj(q)43679 49672 y
tx@Dict begin  PutEnd  end
 43679 49672 a 43679
49672 a
tx@Dict begin  { -272.57733 229.32904 } PutCoor PutBegin  end
 43679 49672 a Fs(\013)43679 49672 y
tx@Dict begin  PutEnd  end
 43679 49672
a 43679 49672 a
tx@Dict begin  { -159.33553 202.01465 } PutCoor PutBegin  end
 43679 49672 a -172 x Fs(\014)43679 49672
y
tx@Dict begin  PutEnd  end
 43679 49672 a 30388 29199 a
currentpoint initclip moveto
 30388 29199 a 9916 29199
a
 currentpoint currentpoint translate 1 1.31818 div 1 1.31818 div scale
neg exch neg exch translate
 9916 29199 a 921 33184 a Ft(Kreuze)433 b(jene)h(b)36
b(eiden)433 b(Gleic)-36 b(h)g(ungen)432 b(an,)i(die)g(f\374r)f(das)h
(dargestellte)g(Dreiec)-36 b(k)434 b(gelten!)p 18585
36142 9214 45 v 18585 39442 45 3300 v 19294 38039 a Fp(sin)227
b Fq(\013)378 b Fp(=)23837 37468 y Fs(p)p 23837 37729
474 45 v 23848 38497 a(r)p 25389 39442 45 3300 v 1 0 0
TeXcolorrgb 26097 38124 a Fo(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 27754 39442 V 18585 39486
9214 45 v 18585 42786 45 3300 v 19294 41383 a Fp(sin)227
b Fq(\013)378 b Fp(=)23837 40812 y Fs(q)p 23837 41073
452 45 v 23838 41841 a(r)p 25389 42786 45 3300 v 27754
42786 V 18585 42830 9214 45 v 18585 46302 45 3473 v 19294
44727 a Fp(tan)227 b Fq(\014)443 b Fp(=)24091 44157 y
Fs(p)p 24091 44417 474 45 v 24102 45185 a(q)p 25389 46302
45 3473 v 27754 46302 V 18585 46347 9214 45 v 18585 49771
45 3425 v 19294 48196 a Fp(tan)227 b Fq(\013)378 b Fp(=)24130
47673 y Fs(r)p 24118 47886 474 45 v 24118 48654 a(p)p
25389 49771 45 3425 v 27754 49771 V 18585 49815 9214
45 v 18585 53115 45 3300 v 19294 51712 a Fp(cos)221 b
Fq(\014)443 b Fp(=)23947 51141 y Fs(p)p 23947 51402 474
45 v 23958 52170 a(r)p 25389 53115 45 3300 v 1 0 0 TeXcolorrgb
26097 51797 a Fo(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 27754 53115 V 18585 53159 9214 45 v 47992
7823 a Fn(___/1)p 1 0 0 TeXcolorrgb 47990 9815 a Fm(A)-31
b(G)369 b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 57187 54804 45 v 0 TeXcolorgray 24421
81281 a Ft(13)p 0 TeXcolorgray eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fu(A)-60 b(G)1048 b(4.1)f(-)g(15)h
(Steigungswink)-60 b(el)1044 b(-)j(O)-60 b(A)1048 b(-)f(Matura)g
(2013/14)g(1.)-2331 4622 y(Neb)60 b(en)-60 b(termin)p
0 TeXcolorgray -1391 7929 a Ft(15.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)411 b(ist)g(eine)h(Stra\377e)f(mit)g(einer)h
Fp(7)221 b(\045)p Ft(-igen)412 b(Steigung,)f(d.h.)g(auf)h(einer)f
(horizon)-36 b(talen)921 9921 y(En)g(tfern)g(ung)432
b(v)-36 b(on)434 b(100)217 b(m)434 b(gewinn)-36 b(t)434
b(die)f(Stra\377e)h(um)f(7)217 b(m)434 b(an)f(H\366he.)921
12466 y(Gib)464 b(eine)h(F)-108 b(ormel)465 b(zur)g(Berec)-36
b(hn)g(ung)463 b(des)i(Gradma\377es)g(des)g(Steigungswink)-36
b(els)465 b Fq(\013)474 b Ft(dieser)921 14458 y(Stra\377e)433
b(an!)p 1 0 0 TeXcolorrgb 921 17004 a Fp(tan)6 b(\()p
Fq(\013)i Fp(\))369 b(=)7006 16481 y Fr(7)p 6536 16694
1412 45 v 6536 17462 a(100)921 19549 y Ft(o)36 b(der)921
22094 y Fq(\013)378 b Fp(=)368 b(arctan)7 b(\()8235 21571
y Fr(7)p 7765 21784 V 7765 22552 a(100)9308 22094 y Fp(\))921
24640 y Ft(o)36 b(der)921 27185 y Fq(\013)378 b Fp(=)368
b(tan)5391 26699 y Fl(\000)p Fr(1)6649 27185 y Fp(\()7758
26662 y Fr(7)p 7288 26875 V 7288 27643 a(100)8832 27185
y Fp(\))p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7929 a Fn(___/1)p 1 0 0 TeXcolorrgb 47990 9921
a Fm(A)-31 b(G)369 b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 31118 54804 45 v -2331 36547 a Fu(A)-60
b(G)543 b(4.1)f(-)h(16)g(Sinkgesc)-60 b(h)g(windigk)g(eit)539
b(-)k(O)-60 b(A)542 b(-)h(Matura)f(NT)h(1)f(16/17)p 0
TeXcolorgray -1391 39854 a Ft(16.)p 0 TeXcolorgray 651
w(Ein)583 b(Klein\035ugzeug)g(b)36 b(e\034ndet)582 b(sic)-36
b(h)583 b(im)g(Landean\035ug)f(mit)h(einer)g(Neigung)g(v)-36
b(on)584 b Fq(\013)592 b Ft(\(in)921 41846 y(Grad\))433
b(zur)g(Horizon)-36 b(talen.)434 b(Es)g(hat)f(eine)g(Eigengesc)-36
b(h)g(windigk)g(eit)435 b(v)-36 b(on)434 b Fq(v)481 b
Ft(\(in)433 b(m/s\).)921 44391 y(Gib)428 b(eine)h(F)-108
b(ormel)429 b(f\374r)g(den)f(H\366hen)-36 b(v)g(erlust)429
b Fq(x)g Ft(\(in)g(m\))f(an,)i(den)e(das)h(Flugzeug)g(b)36
b(ei)429 b(dieser)921 46383 y(Neigung)434 b(und)e(dieser)i(Eigengesc)
-36 b(h)g(windigk)g(eit)434 b(in)g(einer)f(Sekunde)g(erf\344hrt!)p
1 0 0 TeXcolorrgb 921 48929 a Fq(x)369 b Fp(=)g Fq(v)342
b Fk(\001)296 b Fp(sin)6 b(\()p Fq(\013)i Fp(\))p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 39854
a Fn(___/1)p 1 0 0 TeXcolorrgb 47990 41846 a Fm(A)-31
b(G)369 b(4.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 52736 V 0 TeXcolorgray 24421 81281
a Ft(14)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
