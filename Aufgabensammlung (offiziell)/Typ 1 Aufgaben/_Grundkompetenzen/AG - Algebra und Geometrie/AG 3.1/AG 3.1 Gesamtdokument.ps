%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 3.1/AG 3.1 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:28:41 2017
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular
%%+ LMMathSymbols10-Regular LMMathItalic12-Regular LMRoman8-Regular
%%+ LMRoman10-Regular MSBM10 TeX-feymr10 LMMathItalic8-Regular
%%+ LMMathExtension10-Regular wasy10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 3.1/AG 3.1 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0828
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A2255C2C4C4D9E02626F0B4DF1B646DCBC0A6BFF
8EF29877FA968660BE139D8210CEFCD0D24E2C9976490B46BE7CBE8C1C475F88
95C6DDCECED8989E2AF9133ECE53E795B85E6800992BC331A4199A189ACFE5B8
DEB2182D7A5B4CCD3E9946F115492C8F03055C82927FFAFA6E43AB2423BC4874
E464ADB3D3F07FA22542322B7BEE5EF03A34FD5F89F09B25F78633F8D269EB8B
F7FB2277C280DD664B7470201E0B68633EB54DE3215CD1B5C3FC0318D13CF485
B3CAE0E09B8FB8BD66BF548F6A0B8DE645BE6F8F76FC287714FFAC1C08144A12
955053DAD310C9794A50B92550102D37B167BD5E13490703F1F12484B1F15B5F
FB5FEEFA7CF513353CC8D24DAB2DB6C023C62ED0742313EB41B9F622110FBE00
2E5E87966A452BDA7CE29D9E8ACA394EC97EB3C27EACDEC403B28BDE9EA4E24B
548FFF28053D427DA3EC5D297A4D9E94FFD40BA9AD110046684E3A13A3725C8B
585521F374FE8E555CDF8B4425DE8F7F49213908DE06C21233EE9DEE1E3D549E
A6623CCC000A65D71B3820796C75B563D731692ECF7CFB4FEA099E2E91987B4B
E631A5256713482D5A128BA9C1B6AFAF2E533D4FBE01630F1C522EA3BA34E324
5FD6994FDE5D38C9C79BE3BA37021501EF61E34CA864009D965D0FC207305777
139313F4AE886729344A8A462330B120207C069631B99C58827555F398EC2BED
BABADAC9371C59F27E89CA8ECCD67EC32B7B426811C0DAD492FBF4A248FDEA62
0CCAB2DC7767EAD231480F1DCA0CB59B5A6DDD0847117E3E37059ED70F0B0E54
50D3D79745C38C8F88A9E9A53153E122E9EC7CC7CC1718CE240FC1670AEE2063
7D66D307D3F761F76552CA46AAC25483F1AB25D7E8693933BAFE73354A93FD73
07FCCBC371295662816CED327989E8D4D49D679C860B4F5C6C9A7EEA7015AB1C
10E8355E743DD526AC7410B02DC034A1D9B4ADCBBB590E2BEED19D4D910BA11E
B520562E10C0932EE996867CCE2B0B778FD6A0ADF7F65CD68FF6B96A3E41316E
577137B94B2298FB62A7F968D133F383FB03069AFAD0E1D1FEC2928C6040AAD3
293A257CC3C93B0B18351165DA01E1B0DEB0A4BE817B311845A1CD83613B0662
172324ECCCC5B81D6FDF9AF51AC06DB72D337285700BA11198929F50F169E841
D321803E0B609FE38B20709F2431FEA724A03D0F6CAAF186FB2AFD82B5B60629
84363060A3BC180D563B7B87355505805DDDDE727179DEFDB1920815EB8C4702
F89F660AD37925CD47456EE0EB0DBEC56C87A898B2A2C5D6EAD7AC9D2EA2C02C
02F5C0A0405AA2A9E01A40097EF8735C8D53EC97C876B5D9D44D7E2D40A53D30
111752B45EB39C509139B10309C28479F3F49DE3D0E24330115B1FE52FCC2060
FA9B10F48E1709FBF156
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3CBE44D2B1851367FE26D2A5AFF28D45C42DE6FFF8AC
8683DDE71CF967C027C7635B92A9C88423F82D718BC9D78191FC3EE3CD9F5BA7
1173006EF728A61649AA1E4BA1237DDE1DC91B90C11A6D6512C25C55EB08E549
9AE2072E8471EE8C27B1E7BED385BA0DCD0C6ACE9FE03A28780D3462817731F3
0F60B22B808E0102F0F13104AD668E1A0DDCB63267A9A7701DD5EB7677649A26
D94F03E6F49D4494A93081D9EDC3E6F33C0CBDFA4AAB10F9C5D0152A71F27988
7A4F86ED88A0ADD8E92356C6A2145870F939C834482D733707D8D87E931E4F03
A1A5B478F7E6DFC6A1622AAA4FC757FDD1D1A396B95E2FB39D899F3454900DB5
012068F48FED67B6FDBC440D8CC527E3E9B45052DFDD0D86E5982E2AAA00FB0F
F23F8841B0D5A7BACAFFCF04689511D3DE0F829480AA3F3D6650D0E4B4C93070
565A241B9F91FB0604DD8A6746D4B6E7DC9B82F9E43B182BD85FD6FF960420E3
B5F8A1C120887EEDDE800F7362CFA24BB2F3D4EF7D39E1902C53053C202C8460
B4921D3608C16D646A7B27917D3DBFF4EE7F0D9E9DAEC1E9643545D179D97E71
59C9710FD0AEA911A393136BFE88AA9BEB654AAD267CE6E1EED89B3D4594DE0B
FF0BBBED988DD510F0D9BFACE5CD4F75FA5C88B01515EA4FDFFB697AAB5D3442
E3488C0C23DA1315FD6A95C3F4629CD1A268FBDC29D062680850C89A114E40E5
F892C24E1D32742C999FEDEDE251233CEAB48CE4B641AEF6E844A7CCEB8E15D5
1A3643A14FE21C41889F7C9EFF2C0F4AFF237D7A61B3E01707BB65BF856CC55D
2B72AC6766790C81ECE3210433FD37F81075FB9C13F2418FA6F805C3413C81B0
51C445861BC06936B979A3C1B854317B64E8D558F15D8B8F658757F643A8A9C8
FAF9254DE306B5516027A9F3DB3C3A699AF66413EC719F805176D2A4D2B2C32C
494B1D4568BE386A4DC43CFEF39B65672F9CD4FDFA838B68C29BE22F99A39A82
09B0E19365C6C3BBD518E58761F5AC62C7103B9DB2E308508A82530DB3914B4B
C8D8B9FD75BB548E4988A580586486CB75E1C4E4C7A2D9A07088C7F70BCD0AEE
3C4C3C806E37A0A483E051EB40E6EF3812119D4CD0D430C271CCD5EB2A56F226
EEA72A38358F3B291857F44BF046BF0B37E29FDB95FA80688795204F235F12DB
61AD466BCCDD3C767D28A2BF550ADCB742FD75CE0BC821D0B6D8F7D957E5EB77
672447D4E75DA9854FC3F7AEA00E220AAA4C59B34557C80835A0F2E13CDA7952
FD2A0DD7C21B5F5B47CB16137300B4FD43591AEBB973AB73106095ADA1E1D91F
25CA6D73BBB69DC7592D29B6B0D08CC55AEDEFC7228BE3DAA47B50E895610ED9
1658FA8AD656D61C220408CB01EE43736A905B479161ECE60B2645207DC7E09A
866503667CE39E27ABAF8FE25361528ECD76CEC310E09B4368DA2C1AF5CA9799
6466E8C80A70841DA24D8409FD77AA4818CE40BA3502B308041CD60F596C808F
A33D72231877E2176F41246B00C684371EBCE5030690F834E34824AF458C2EB6
C51A3759BF158D6A52566AE9BC9DD924F16B213953BCAD009DBF7060DE0C0106
8C9EA73E1517DC15C0DE37DF63D9EBCAE78FE4611469E3A4087875820DE2C9A0
4C50285CC6F2E4650E5E20C2557425963BA6FA0C3A015C357360B21322F0CF6E
67907F5A5D62FAFA97007DA9748742DB01E4B23C186B2B6ACD388D667F6B6206
0AA1CFA86443286A1075A81520F6257AFA4A9C12A54FECA6BE866F417D547AB3
E8D0F286851BF88F39FB62D7CB7CF05F9ADED86D4208FBC8DF8E933CA8E6445C
98E55A238C8D717C5C91243F31F67B84367736867546DBABA7D8F85460E7798E
E7DB3DEED68A60821F1BBF3B6AA55C989E403F65C7EB09393FDEC443C402623C
B16F99C1BA3097EBE956163F8CB8AF49DA177610D8FF17A54952A89309FED7BA
FA971977D3349EDA2EE909836AC409437D49AE4A7AE1863EF9B4583B091FD1AF
FD89DEE3784803088CDC5AED88EAE8608354A2DF8DBC63083926BAC89A5CA374
CAC016DDDA558F61B1FA25C065C38E724344BDF11A90A12A94A2405528DCABA5
A1496E353599A702966EE269477E54E413FD1BE19EEFC6E6EB158B0B019D64DC
10A203D883B34C9ED5013AB0A97F5F3351287C94F3084A69E7564B545D44217E
7749A70678D29CD4F27505B9AF3A89D31165B58DC5F5CAEC3FC6DB4BB5134B4B
15E299FEB2C0465DA989F4074C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: TeX-feymr10
%!PS-AdobeFont-1.0: TeX-feymr10 001.001
%%Title: TeX-feymr10
%%CreationDate: Sat Jan 5 18:49:54 2002
%%Creator: Thomas Schröder
%%DocumentSuppliedResources: font TeX-feymr10
% converted after April 2001
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /TeX-feymr10 def
/FontBBox [-178 -195 823 877 ]readonly def
/PaintType 0 def
/FontInfo 12 dict dup begin
/version (001.001) readonly def
/Notice (converted after April 2001) readonly def
/FullName (TeX feymr10 Regular) readonly def
/FamilyName (TeX feymr10) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3166449D69AB0542CB99558019EE
97CFE9FA87FAC14B55E860B5663A3D528CD3784FC9647A2EB72CF1AF4E31964A
3073722CB69FA5370CC5D9CDBF105662CA6188C1B3BFA7658F71EA5765A0D152
E60FD5E1DE3B99CE70C03D8CB4F775B5B17CE9573F5046E61444C0DAFD894CFE
E17604820BBE5A8FA11A10565933C0A8320DC5D116C780706E315C54E72426DD
AF1E6786D883AD182ED327CBB03C39C1A2602471C39296B7681215EC4F0E0E0B
264FBAD453DD3B112065828DC04E265255F9FB51F5EEC233C6A752ECA0246E0A
A2BA69049BBF94E6C8F510D29A7735AE4D122DCCA7B22929270D51C3F1E68174
E38AC54D6418690C765264C7897AD12A84B2C5269A6BFBABF05C20A37C94D927
81FD24D7817897529ACEDD9B062949D02FB9B0E1B2D0BF765675BA16EBFC1C7C
DC437BEE4D9FAC437C6B9E5B0C00111499A90E1BD29C52263829FFEF1946619B
1C81623A436D2FBD670D126855C400F38CE0C88122C60EA0D331AA9636B27218
0CC9B0EDE940FFB5EBCF83EDB330F8E83C7166452669E04F2E95A7718ADBDA8F
F99C2DC815F7ED17655111692621430D077DE661F297A8B6A33FECC10B3892A2
4F8E139F3E446CC7D7F5D64E4DBEFDAD72AECAE4D64289A3E2BE0212CF4A91BF
04F60B14E7522795440054CCBC40C49886656B6918198778A498EDBE40AF4536
7F96E77E40A9D65B1D5447D2596B382447AB5549A11BD5B765F9133E1C5C3071
32075009D2AC8147BC53B4C07B14D548E0F914E600CBF320E1639435733D7563
0053CC74AE3E7F5B9741E8CCB3DAFC411B5F846FC583B7771A7088B1C9B9613B
86FBCA1EE9E8263406C1894EE246BE87CDCAD2BA7ACB7030E45B0866062055D9
EBF7F562FAB6190196A7B8AA1B61F407B2BE0F537129E27376C8DDC7C6416358
384B2A676AB3228144586258F2B82A5BD9AE9E5442462DA626088BAB0C29E8A8
0EC75BF6E5E897761B5D095E2A8EDBF2CA742F3BF155B4DF28110FB8B7FB9A6E
9229F9D0B47376BE7AE5CE6A6AD32F50B62023CB32E8E0CBCDE2110AD8251854
5F8934CDC91E522248E019A6DCA06A0C2D005D541C6ADFF72812F474050C709A
5ED08B5F83DA1FD76037AFF77515188E13073B30F9A49A970613659071E0A130
5A4DD21C42ADFC1DF8CEE802CFAB2A75B7460E9F46DAA8CE31D5F287D3163B98
5966C073653074E89114B1B8A097A43E58DC5E49AC1F70F04A922FF9955F9FA7
20A6FCB10A2670BB3F44D959FC897BA487147A0FFDDFD368EB1A41F4CCCB619B
A362730B373EAC754EF5CE2692576DE100E10402670F41FD38F11A1BB43B7F42
B4BD7BB5F4322C4A9D04BBE445358F4B59B1A5C85FAE03B06C950485E5B304E8
BDA4BB926C21E17B3EC2D4DBC9353CFB90DBC6976B566C310DC801A28907CED3
2126B72E26578DF77022D969D09E111BC1C489E88E7B0315E926B0376B085BB5
3CEAF925AEF208D454C49A6B239924FA18001BD1A7D3EA4E7904830A6A948A79
F50CA56EA772D92627A8380A37F3C30845647AB612D5F6B5CB916996A0EE6697
BC62B6266F4314BAAD796EF51EB965F7C30C001F16442E0CB7A6984B78AEFC46
7D6938EFB347E3287600228311BA24326714E77F1932B80334F933C2926274FA
21BAAD0605BBC9A01BDAD6D5ABB885A4E651B8DFAB60487319C1C386CE6A17CF
CE6F1E639526FE52759F1C88A2B52EED4B93C0AEFE101EEEE8C108F389F9D1E3
205904304DCD3F06198594F313F1BFF10CE7F410ABFE3BD5F47CC3D7DB91E197
AE2EFFB9015482D6C79EE33D31EBC91E7797ADADAB7F682F72DFB7B0B0B6AE27
CDA9C0538E1246167FDF86008881E9F917291B498DFD93885C05A1AC6F3A7C11
57128C3D6CA767C80C7AD866074879C24CC063341E85B910ABD13E4BBC7A48B1
53E24D05C43CAC6F3337ED734614EA91EBA620346F23693C7FAA9F488FEEF7DB
E525E547787CCBE1B9824B1CF0B92007A8884194388AE40560BE9D79CD4DE9CB
96359F98E85F2A49F75B7B66C6444DB0ADF62964CF1A47855F8C4688F95EE5A4
50C96A072FB8069A59B20CD2FC703F2F90D3AD1BAA56A93E3D2E2F33C6E2A7AD
258451B1411DD8DBF07CA0246640732F5ABE58B44AC29D9EACBB671334A141D5
FF7CB44C5D629EF4C3E479B76B6A11B47AE63003DE140FB162E88854291E52CD
218D3E70E007E24FEDE321E5814C501169EE40269A4130721A95CB23F48C32AE
DD7B0B4F6320A76DA8A605679B0863982D6B3D4903CD8184B2B829CE9FCBF77D
6CC854455B66AA88CA78910178F748BAD7A4F32521BA7CACB879CFC719BFE2BC
13CF49FDAEE217C53CE31DAB6FDCF81ECAA2E72A2CF15BD84D275BE55251F82D
C8A19F36545C0BDA65AE10E063F5E05A8DB056F7A41D4DB694C98E4246E3B38E
230D155F7ED10F13F00679BCDF5604F46E28FD15B81B55471B8262F8A2F72AF4
E5387E41E401274B350EEFA6C4F03A1E6E4A6B16E528088EA3C7E0299E38DF46
D345559937225879790AF29198B2FDEFE6FC99C66C69959F3FF98F67C07CE90D
F2993F8732E88A77355D4A186BBC8C299C85DB3CFE829BF9F22AA8D3BD63F0D9
CAC57A7CBE25193B289D8A9A614DA9202F69ABA8FFB96F4281592634A7FC4A21
456B69BF77848502657B7B934003418D2BC937720E67D4890E00A199636842D3
DB74B2F004A6E3F3EA6972D62C62E5D4F096AEB2F194E77B656822D9CFF41D2A
7C14F16D7F07E90306AC87B528175244B92D6C10024132A3A1FC2FE78F688904
3568D0BD312C635BF2C024B53B5624F8B17BEEEB424E619CBE804E24E6EE1BE7
3F159A72AB7ACE1C0347278BC542E4525E503DAB0127B4DB6D8538634CC60BB6
7851F14F0753BA3838ABD61E83ECC39C427E62AD4293F672F8E7C2A49B534F60
E877F23EF5EE0E849AEC5F5E12463F6F05D059854D701CE420D546867EE7E6C8
7CD2553F33682A0BF985671C6433700CA8FFB638E7C7BAE78BDFEFAD10DC5846
AFF08F08956041F2912B4D70FD34495C96D3F9B091293B9C738CF5C9563277EC
3C6863C4A69B09E4DDD525D77FD06C322DAE13FCD48A4EA7B1B6C8F0256FC16A
3B47A4BF0DA1C49EF53974B4BF01C9BF194CE7EEC2C3AFA9E4CECD8C4029CC6F
377E4269806EB0FB78AA812F1513C2CEFB8F50CD18615EBAC10976BD12CBC1CE
8CCAD0333D455C3ED1518FD7F80539AE63A5045D34B982ABB471ED8EB18B50D3
1A150C82182B6C31CC9B161A87361A6D96B63CF0D97A286090DA8CB72991B175
EF3D690C64D9CB5EDDFF5B00B7C179825A1794CA054B6F7A8CAF03DFD7E62F10
CE5BB34BB02E50AA4DD4FD704F147DE3DCEBD3B1DEBAF3483E01CA3076EB19A5
FA2A8815CD360568A9A05176CF4111CB27C54BC8B4B991853982BB7307283D8B
93E5A2D6DF853B6E17BEF7C06A182456EB73D4A1B77FD58A853B07B04ACE12EE
D04046A4E977A39963B144EAB63C7D27F2EE65F677B9892C999BC81B3BBDA70B
E7FFF8E673275F9B84D39E641BA990B9AD160BB73CC391B6C36A7C1D68438243
1606D2298D58EA3879D2CAE2D285011E229372F7FA98F55556F0C4007621168A
A3C1F9A9DE81DA70AB287ABC70C4BAE94321D94FAD2DC3754CA39F689C8221E1
6E7E57EA41F552EF612080D82122D5733CC48978F6BC62E40728DCB3134F4536
C33E222D0E79486EBF9A506F92CCE773BBDF3A764B3793E96393DB8EF1FF0FA1
F3801274B7B982FC53258A752D43261486A2A94B321D90C9393EECE5B3CBFAAB
D0BBA6E49ED462B20AFB384AC2D3E290BC8FE7805D5C0B0D37F04586BDC8C812
686C653A47B40A803819C86FB0C8EF10AA1344350972910363FC0E3DB49A5D75
BDBED15C823E1E870E2F0EFB93A856F3A63E28CB7ECBF17E444B271FD92157C5
8727745CE16AA9376735A8B02F2CB426BB91CCC365CEE49AE5C9938B08DB12B1
EEE55B954D3694FA0AEC0836883D86F6EA4E10ACAFB7CE5D16F858F6DFF1246F
B2135837B67DFE58003AF012885480947A19B0F90980366EC245AE6D8D33FD30
E080775680F701952B697FC8FC07A014B78DEC48017E46AD78EF6EE80BF81760
B2ADCBB63D91D25DCFC77F2B8867BC0092BD9DF8EDD0F7DEDF2458F1F938D05D
DD4C3A7D4B3008EE86F787EACD7C687B6BB09D362E814AFBC75209C457A19F37
C9780469DCD173C5E5BB7C88F4A8FF1E664AD95E1F5D005B4F15416A320366E4
41E5CE5C8A53B64D290AC210490EF404D08C7C93531FF8CFB841AFF5A0E5A8DE
1E25EB0D03018A76C701E737D941569CE252FF92E3C0A05798F47B75B501B03C
D92B56739CF0D76A13E06283CB4F55177E3D6B28C265954DE0EC80A4CDFD91AC
A2FEE87917A4C63BCBDB24928F99D4836A62D3793411FFAA4CC7B12C934350E8
0C241E5C83E1BF8BCE56FFB67F9C7970CD00D64E7CF92F0A9CB5E672852960AE
8959AE74D4DE18D69B095F9F83C2D98F5D6D14B13E76E4686B85A3B606479B6D
F3B52D950EBCFE01639F6B0D9C205C947D60F2F0540D0E8B1B78AF3C5376F94E
D5769B92FC21082A872ADC4BE261FE71F0EA2422B17EF9C0338F63F4D4BA4AC9
D6C76169A46B500885E2CFB8671C053163F186C242F539453A72E3CD4F416A30
6C7A154B28FD021A13A11C78D113E65FAE2A6602D55510502603AD648CA7C698
E61A5B8F3689308EF934594FC5EFFDB86BED8324C690350CB92005EA3EBBB9CF
83EF65EA37BB27D684B89F18AB93968DBB6D0BD835EDDBF6F9425AE707A9E732
7418E39DC60A6EB89299E14D62AEA38D7E1ED70829196DB28D4906BF73574AB4
5DCF1FD068BE2B5B597021EC43C0396D5F172A723556BD8937D6800A6CAA33F6
A061415D49DA0ECE5C1959D9AA8513D8E616BEF8C9411F93E9FBCB6D2637AEDB
B0E719D54E5840E6F71109A5BFB26839255C305080216C0FD2477BA7613C8198
8EB16ECFFBB6D745422204786A17705DABE8FC123005E476FECEBE1C3E240E66
9EC0C64922C42D88A87D2D9766DB3E6273110B2F9281D80F004D184E9484EF54
222058917A0DFF5AEDC9213979C8716488573FC308948F839BFADCA37353F9F9
C7FC6FF049F4DD9DBD476228E880E779C7122C3823385F85F86DA752C3E01A8F
8A103A854A8545E4109BE8AD304A60B54F124EF2A6AD3E5E7EBA6AE533E22954
261017699960A1E27D714C2E2D370FB1449ED84B4169EC1057AC8AE70B3962A8
2A16D2F5EC8818734A52C2211FFFB785AC27000B218464AAD820DCAAB31DBD3C
2F0ABE99FB90E8A188E9E95E3320B650E814FA72E425FC6D0B5E245330843CC3
DB6AB767C90E8EDD41E12FA1973E681A7180A3917CACA630FB0BB7A62FAAF292
EE1F836E10730B4797B72E335F6C291A3BFD7F71EE335C3A6233735DB2A379D7
4D1CC655A657023C0B72C819D778F70D9654BDF7C3DD44B733468029F6DBC37E
1D00A80D8D9E7DB37593FE4C2AF5E00949062085BDB51E9448A41DB88FC7401F
725593E1E2281E1F880F829778EEE4197E71F8E59420EAE7964C98BDA67D7224
51A7781696EE91A0E6138EEA37EEA66A29A778841BAED8A196FA2C9DC4DE9BD6
4915CDF114F441422F0FE6F6DFC899C05D171FC0E370C9D27025B9407AFBA04C
19CBF35CBA1E6328BEB3DC8BF3F27EADDDB063543BBE32195A9AB39C791A053B
9D6B918B1E101C98DA8A4EB26FB47BCACE2863C768381DF68C4C8033BB3BBEF5
E93514207A5AA561F78B3F9C70C691B40F4ED7449650276BAF866B77FC16D797
B91398B1797FC8A8CB148D5C234F59A7E4E6F661431598B68DBA780DC8B34A19
AF4EA912CB694B86D5C7672E57EC16F21F87944F7585ACC0847A31E2777D0068
69A9C658B4729A5A2DB08E093EDFF069067F02F93C4495F9F171AB52A1A5BF64
C71D97FA60A71E3E705E51531028D02B1AD3E8E032AC8E599DE4DA19227401AC
F79915BC3230D5D90FA77C29DB133FB7B4ED7B0D7BDD3B018BAB38126626BE19
57BA72362A12E23AB2C4F2C20CE67ADBB39FCC59111A7A0A61ABB82CE1711D0C
193F0D086B49494669F901CA6013B32E0160B72239DB3C2E229535BEF14DD08C
A8E603EF0B6A5D6FD9CE8EB6DEA304E959E394802B82E7C4BC31E75E1CF077A0
6F520EC408B4237E2C5D41DB0B4395D891BCFD008BDE2F5936C9B7D3D7F7F9D9
06FD7B552B784F7814AE16D8351899FC23B6772BB69B5BFB57D118FFFF07511E
8C6E994823E198A79376EF3E24C11B6FA1F6DEA71942741038EB332490625EED
2F92A7EAA26C64B36C180E45C35457FEEF8039855872511C30AE0BD536024FEF
2E0F40D53EB1845EF5EA9E10FD5C63E01D074E58590F0C8112BC26F1969F9C24
6A4027E715AA573228315FBE916274AE6D17F25A21DD9629263D6D83E1C5E6F0
D0A42464C558BDB4FDBF9201F57C808EDE384E12A8235EC30E90CCA8AA3C36CC
C09C6A6D74F9A30B50CF7D4ADDBFC902F6A006AACD90582B29ABAC673E1C6D67
3A70B27EEDD61AD0C422B387CE691F8ED807C137C5841779A540211331282F9C
2997E5A81A6BE710AEC12B347D9238B584F24C63DD4A34D620644424F315D15C
C710ED000B0D28DDB19A4D99AC1E0E5589B7A6F7B2C86F2F7FA4CB217F201436
991656F10224C5AA8341E6658ACFBCD76E73AFAB6E5B0FC14CB8AA60A1E845E7
5AAE0C73DD9F872EE3D28075C27156BB8D803A64E4126866360A54D16EFA11DB
13E7E52C0693982399545875D6ACAEA88BA0A3474783CCEF9A4B65EE64958091
8951AC0C438C2B0413761A253A43579B0B640FDD1497DE8C21A0856E475510E5
142E3842906AA80914CDE9402E4B37D2A6E53BD127D2D3AD5149AEB5ECD8CE0F
A7609D35FB71A5E542B436D5C7D71A4CB29EE71D11E0C2769C4FE6E728D24E56
A0169D3676D3B731B35E37C70B8015A53A9C15AF4F78D0FBDCE03FDD2C3D52C7
5D852346EA02BAE2FD29487245DE75FBAB597E741336005E4A549429A51271D6
5CBCFF634640DB0D056DD5EC6D5A7DB00E37F666CA703105ECCDBC670A47CDB7
48FE6D422825339A8CA5AAB0B1235F8D8BD2F5D6A3515FEFD32540521E20DA01
A0141AA1F8B223BC02156AE4E096FED912A6C33DF4E150052091700123102EAC
E6AE38599BA0A0CB94E1099475C28A540D3EBC4EEB382E906F6B4A1CE6940F16
77D474945B0DFDB54731F85B138577CCA34AD3BF8B7677378DCCF3999EEC8E5B
5BE10FE19D636B006E7D7290A3DDAE1DCFD312C2726B08676AC7B03A9E5BF580
BBD88C779EF23B655F9BBBC31F4D54BCD94E4D1FB85ED55AC4475DE0DF309494
49CF2BC0A9C60D7DE24DA0C0AB8F50953F4DCE4B2FF8E60DFF1EA75F4BAD4B11
3C735758AE622B81CEB5A8F845B2547C6A43812D4ECF9C9E042425176A20004C
2C4A815A38E237DA4ACD903D32B7F9844B2E42AA7F5A5008C4CFBB51F2A20C24
C4EA6D69F6CC5E79CC490EBDB8A9D4AF6103A6CE3906449DCD35B922EFBDE023
3D5ADD67F4F5BCF49D61F67FB313A8E2F92D29A0B15C6792D299B9510A5DFA30
56DF9000191FA35C2999FDD7132B3EB5E95020B032C8EE2BB4543DAAEA0DEC97
3133A99719D7ADBB2678384749B7E1ED994548266CF51E5DA1E7D78283F24197
0EB74E258585FACA9CC47BAFA7AE9E116FC4A042404FDEFC6D20C8510CDE6796
BF13356BC9A3EDF5DF353F6CB8D21EDF5EB9B50AD6BE2804F23B1727C373DC13
E4B7B7F5F1A0333C4BA7842F4E9F3D067DA11B64EC3D1EA2AFD82DAF0087AD2E
0876AFC12C5777A2743F938C01847747CC7525DE041402CBAA4C45F273A75DE8
528FD3BC80427F9E3AA1EAB57E9E2F625484D388DBA06AA511B556E660B7C58C
232E6191D34214218E9C35838F7532579EF7430063A099A176DA59B024B2CE56
FAD58E3E9AB280F49EFE8B13EB67D91B6BF3BBA8BD16CB5EE0B3FB9BEF37503A
F4114D06702D250FD78E921D8ABD0BA3647C711CB3FF3CB1EAB2DD7137A9CA46
4E545382727CD0F1D75102D7BEB5737B3D3009136C2DD9950F1DEC8859F21328
330224F695949BFE58241CABC4D378ED409FBA824D76C2EB94A55575E0B44B99
5F05EC9CCDC503CEA55FA4032192CEB9D7160B024084A468FCE4AB2F876A1B22
2FCE1702E00029F29A50C636A6C59226685F2B7F885CE26FF2D2836BD9C03367
13420C1A8BCFCB324EA9D26744B77B4BD9099611FC2209A53321B737E518950C
751B2F929CFD04EC824A2439E9BE1C56A3A02420C2B86C24BB936C7752DFE88B
A682B788BF0113BC92352E873AFFFC279F2F3ED949F3ECEED537F134E3C8A2C0
13BE80DE36288A86E93DB390E241AC83B926EAE86FFDF45E037CC3794DDFF403
DC64962FAF85B9714D399C221E36A633C0BB26EE127EDE93B54A6C34C1B1F322
7503847E9CA4622FF6CEB1E9828DABB65D66D658349E0404BD3E7871E3952C91
81DA87EC0F40B008BBE4253D7E8E7EF16C916674FCC41131B68BA2A9FDB59917
8206CB366282C90FC91B59C8A0FBBB26408CD0110EA1587A07E4FB09130E5B0B
852C429A88461C2C51F924B919B8C4F98BA8BF058EACE6ED42C208AAC866A1CC
DB9FBF4227F1CCD9FFAF49713AE4B85EC34FFD123CC49EA507D36DD69F0072CF
B01CCFDD0BDEB72A427A0485F0FEC84B315C854A341951CD338D8B4E7A77E3B7
41ADBA8C621DE2AEB91E65A0D3E1BDEBD508A0CB08F4C4E57D8481592C817520
4B6BCB5196CBA074
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA853
B843CABA76BDE9582090299F423519EE3AF8F83AE7F7828B314B6E36E9127419
F274E9FBF5622C5E48D7E95664D6C0C1006661038CF2C93BEF1DE34A163A2C86
693A13F4D0F052D2E183F36401F0C29862BC1B36A086524F76C7EE2C6D436A23
7009F146F1756DCADD3F70C51FDCE610E30C0F4AC538A2703423A07976ACA74C
25F4CFD6A92969E206375FB0C672E45948B0E832F2BE688EC22FEEB3E06BBC3A
272F73081A30830AE4214F2F029918FCA40BAEBED6299EDBECA01E08F27E5627
F53BC56F4AE7CE2D6273B27323AB829E2D51672A4990E3AEE84331583A99DA4E
63610AF8F10C50FE6196E3F4C1E4FC9BA6BE0ABDC81A0A7BF6A5792A97BD0A7E
7BBD31C3FDC01D734550843C8D84C6CC0B492CD1A6CCD57428F03A863E959C77
457D401028FD00FFA9BC422FD09D8B8A70446A61CB256A2FA0B59A2646D9C5FE
961894DB8B315C52008B4416AC35439E010BF90E43A05FCB2FBE8E62385E220E
588B7FE5509F1BB71150E159D01D24EE28008D4213227FE9BCAA34364B1039F6
BC142AAB19C8E9B15F0113781DF9C9B3BC145955552A901AEBA588D39D7E87F1
CAF27D315E168807021B0CD1B2CE13B611A7B5FC28DEB4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81A
9AC387913FCA9209F9142F9CEB88DC7864ACE2139716A8B8BCE22870B2A8AE03
61A40FACAAD0F82B44B4D6E4ECBEF48C6E2F39CBB2B53B18DF7F144E9FD272CE
6A23BADEFC0FC80B646A2FC08C8AA1C44A2A00554667CFAFF8A417D246F28CEE
905824D8C0FB19279F86AE6C8C6B3B5D4AB4CFAC640686BC6FEEB9C1DE214972
4C015A2D62C7ACB01966717F9C4AAE6203DBC7E60275D3E38C7F66058EB798DF
3A42628DF4378C539BAE628054B5C31D23B50C2B33943C5AB05E8304A43319C5
8B569F751361768EF816F30DA12ABDF5C63C5B1602823BBFC0C03B7A421A836A
CD4083FDE377A8E800BF093CC74B3F067CC1DF9F37F37B225D1A63E440A719CD
8CC6D148F1442F1386DBC7309C37D13848552D03C07E06969315884369E30CFB
BD715C131435EE885780EC50DFD4D90B568153D7F09788C8877FF9D119C062EC
9DB71DDBB40357DF31989908E4FB3FDA3303E6BC7EBC8C3F90ECE5DAE3E02206
E93022A0609D842ACA6AA03E96F8C117951E672EC54FCF9A8273B7989D201B16
1E870432822FD897B71CEC0427D5FA06B29F527B6A236CE267095F2193898745
610FFAD3AC143DC9CA8CB1C3931E36AA844248234F51BCA6F444C2905A4E241A
269ED51FF329D5C0C86D9C66ED01B85534A1E39BD5C20DE216B33240C40D188F
4E304C4610FA7CCCF0512FDD24CB36B40AACA15B0FA0098083597E359F090380
51C4BC551BACA6F728980ECFB1E999F4E0E329B15FE526F0C6285E5D05CFB53B
F7212E2933DD050FB0820AFA1B2ABFB2AED5544B06AD48DAD5E377C2F375CAD1
3A904419D9E7F6D38731EF1E8CB0917657EB749149E1D61A1EF50C19E72FC8AE
9D835BE39DF765ADAAA523C72A653D19D310CC10E9080C619F102E6C0EE4F80F
05C1AA36C2027A88763A7F0AF2DD0CCE40F2CEFD4D785A43264BAD874D4FB758
1C7082EA167108BEF6F7E34D958D6105130AE25923E7EB77C0FDF5286780C376
3D9D24E27F7FECB251C07A0CBF632410D7D948427FF6782B8850466A1FE66362
4FC26E88758AC01C1C98B568253442AD48691C2A47DF05F6A7466E87D3020FB2
D824E71394F6605CBE638D9A6B5A0DF28C4D81535BA76F76B16C6815E977CA50
513DA81445E93555250A43815E80B39AC00F7086BCB4B36C35CF2E4A42B114C0
7AC99ED39EF436CBA30F8EB1A6E543782DABE3FF805D54945D6DC2C09A0F32C2
954C689BB04A12A787B88A966DBE3F4C2EC9888B56E96241D345CBE471FFB513
9002DD5225DAD211F5C72F3127A60A33D311387E6DBB2951640D74E59891DDBB
4526022E00B54489023B0FBCB6540E7EB3B2ED0460F81AB38B9240BAE8424443
749F272CA43BE6C9B5CD3E674BCF858A46BB2D1898684401E25CC37C0FF9DB9C
5064E2E468F5906C1338EBF0AB1F2B5C97A5E4D6127212AB225F2857D0014DE7
F40568FC538A0EA2E76E1F62790DA67887A81FED8BABAFE9416AA5E06C7C4C60
0BF38B70C87E5ACE2C713203A64DACD5FD072694C71A3AF841F9E3D07C7B3788
5856BBA23EFEA2AB1902F879F1361AF8C0421A296FEED926836406E96C49A48D
AE1DA613DD54D9C840D4896A183FF4E395EB7A69DCE16AF779DB5DE506A534F2
9DCF33411B194DEE2EC1B99F36FA1A11D14A28C0E938F608AF10E3B31B98C36E
5AAA15FF94A95B38469000FBF31BAE9CE8703754A099D21B3329E0471463D457
0D4E89F4CD31A93C312EA4674730466C3EBE9F8964D358AA76DE110300CC7B89
8FBD8BAA1FEEEF4E78760F8A25C60981E6372E49D71614BB4E6EC7B1ED60BBA0
8F874D9E1B1661393BD85DEB50C29E3DBFD4613BD0DB2A70E57CB73CEEE6A51B
72B52020AB471FA444491570EBF12F70F2863F9CBC2CE3E571F5D8ED5009FB80
9985FBD9A3E99D1D6124A3B4DE50749E55267744E046627E381FF09727EFEBB5
2E59282E0199771B95DB671D4B2AD846EBC0109861075A936D6F2508D429C625
85777EB9E6E9DFCA889F03CBE5A9FB59C55523ACF1E394505886FBE4D6F739C6
6BA65248D16465F0743C602C6E12438E7E9CF6405EEAE7CDC599E8BF2CE72DE9
FEDF547B68A41FC346A14D58EABC55ED2D98DA057A876FB35F46EFA6A949A75C
F1DAD4E176B50DB98341C8D442F31C7CA70CA4411B4511BE399A1EFFE6AA02EB
E529146BB9E0D14D16625D3C830ACB43B26371195013F74FC07E862198AB570F
44DAA7CD767C726E7BF288414284CCC3E6FB3DBC5D11E9807F8B247CB591852F
EC9392079A91D02F4954FF97236F55AF6FBCD9AF0E167742D0BD0E131BE7AA98
E955D662DC9AD78F82C29C3DDC08B6A551B0CE96E180903891204F4EBE911581
EA3BE89E4CDAA342B9E52F30E55B902ACC35DE87E70DE8EDFE7D803CB0770A2B
0B8180E5389A54B85BC69FF37B8CE078CBFF5CC6F11D65E7B61ECADC94491C5F
F034CEA604CDF5412886758D49CE07427C96AEECF83C52A4555178C7AB4DC1FB
491ACDD3A0CE09DF3D2AA01AFC9DDFC002A9863D9382764DC241811B3912F36A
B2CB1440EAF4C36D14A899C877A1F71CF5F205C8FF35460B37921BABF917E5CB
A23CCBA7C46C157E3088F4D1C99603A5AE29019C97D03FA54726D906264C82E8
AED7E4AC8F66E56EDDE14DB1462E4F9859384B15882C6B0E2219186DD528D0DF
17F15FF78FCEB2CA616D526C530E1BF18C3FC7EFAC5BC5F623465E81758FA863
78485C3F65040DD351580824450D62A12078BC053A65AE1FFA91D645A9E26C29
A8311282A2DFA57985CEEF4463E64E0B7DD8D11FB10DC168A704C2C70DAEC483
F6942ACFB86DB9C4EF5E16FD6E2A4523B99D267AA808751385186A779C73E575
948744853BCF5547A7870E7F6196444513F4AA8D5FECEAC8EE88C8830B526ED9
264D4F56562FF445F348D19317A058A4FCC154CEEC13E60A53EE79C07932518C
BCF295C49DD58CF10B322634A4B9ACF5325B842EF91A19C55CCA6ADEB88B59E2
4FE4A96A8CFF57627DD17FCDC5BFFCC5CE9C78BFA2B830328F9A6D45FEEC239A
D76BEED158DB3BE2DC4BA1DC216B2D085F251E56B085F80C7C11DD39ACDF31FF
8D01256B7CED1EDFEEE0376E57B6E45D2F375499F8118EAF5C7F6607DAFC48AC
6FD2258F0314DA293F61D30028BB0FB43F50BFFB3005B677A74AC48E341259FC
DD1E8D932840FCA3727301C942C987A026992772DC2A0B06D5E4AB1186D81001
AE4288BC2EADC60BB6225D9CB6CA887922B117EB0E7F81000CCC4A20522124F8
B7DEACA9E6FB322B9B66DE572DA955FF06BBF51728AE6724360C97CE27BF0DDC
551716E8E06DDDE418B6E3E407307088DF1BF21C09F61DFBD19C30D92CBBEDE0
59D026A5A2D9B65246D93E36A7276E70D11DE1DFC7E967F6DECA7277FCA73E84
1737D9AE81C25EFAB95DC9FD91A124F9F5AE28E844C6C3EAF7DAB0FEED7AF2A9
13FB2CE66241C5102CAEC3992BEEF1999CE2A5574EAC934945ADEA6DB4E4DCB6
4BB074C6094FFB7D2AE0633C33C8E4823681C0A61ED898C571006202CEAFB5C3
E352E7F66C743DEB4EC14A3AE0EF469A2CDB23445830D0F304FD7A9EB6B8AEE7
919322D2FDF6C7D7906EDC7EBCD9E9B6AAF63DB3AFB9D9B87CC743CD66342BC3
BABA111186A0F38F642261843011FB3389DD944969E83C1B8315BF63C3BA9B84
9EDD5F620C7E451943A4E3868D2F9A6B78E6AC615258E663C9D255FBECA07BE6
FB4B14EBF66B06D640012D108ECD3329117185F2DCCD3CFCECB7224FC5E7E437
7C6E1F717DD65F6A274994CC40546439FA5A60BC3719653E525E49FF6F778D8B
ACE4664D86C8FDAD35CA3EA60BE1E28418837CFC7209F4A7357804EDDB05D506
686757C79C2ADE54B913F1ED476E3D86BEEA512B1FC55E137D23FE61B7D69D1E
E48363146DB3EB9914CE42558ABC90B623AFF1FA2CB3EE64202B74F76E195C0E
3F2B12B433D7DA1F634865DA6E5ED7511E1D930D074D76A35F19891E3842733F
8AC91FDEBDF9F8A426019EAF34A2B13634F55E964F8B7C21D937310590871C58
2F30C6DF5FA2097A078ADFACAE547DA592695486DEDA95AD49D2958D1F43A3CC
E7B7B9DB269FBAD050E6082D8DB99454AEF0AD0088753DEB92924B8AACE496E7
45ACE597058C23D84C0FB8BAE6E8B396D944701FDF7FD723D145E93B12A799B9
D0210E411564EF88E75FB2380977263E4EB261F6718EBF15ABA15B45CE0008CB
D8D2B7A1FADD93BD3CC207D8623EB59F6B3FDF302406C8F16686E31B66D8C1D7
E8DAA6804AAE5DE138E8A311A4A1330604D0E557EE03662BD31AF90587A45AE7
42E8CF9E4697F94F59B8AD259D2DDF433930B270C63EEEBF992ADB20C9F233D8
85BD42C04DC9300D4CFA004F89A55999A93B5A3EC2D3098ED38FC4CBC6BE50F1
4FFF4452CB1B96ED0E58AC65EE13077831824210531E56CCF19CDD93E462A12F
35E45673FB121E1AD75F20A8F4E8B29789DD95CA5047CDB13FCDE826D3AAE15B
CC039B1C6A9C21674AD3ADB75770688524E0B4D3151C5E51D640C741C6A05E85
EC79363ACC8A5F234575C256306A3E2B5F6A6ED4C48F6D4440488AE7C9B57B85
DE61CE78FD299609DE1D6795CBFB4CE95D68E3C7CB1D4A8DA1D0AEE7CAD1983D
695AD1DE3E935E231AB657C704B4FAADE3CCBBDC7C31C1FE52D8A57D79602D65
BBA312E072096DC25768434E7B56ABD8AE83CD6836A2A624A32128393B9D463D
FF8B865FBC10316F6EC4806316954E90817A74BFFE390FE7B5348DB0B4782BA6
D48AEE80D379CFEE11E4F1CD9A521023438259A1AFAA427959EE4927606F08F4
255EF756643EB591366950DCA06596B169C9665511507959228D5480C7AA0DC6
1F197A9CB5C80A00332184637C6FD2198C1D859D45F35E20C5554B0D72C262A2
3CCB48B112D5ADD2E056258AA295803C60070F8E89217F14F953CC4015C38151
4C1E1BDF36283AAFF8AD785A49E091119556FED39BC1843053FB2909D78D0CC5
BD0202C8FB9DFE45DC35209300AE63A15A7D983219EB991B300213F2BFD5B477
A7342D64AC059315DDAD1A2FA1F4E8CC6969A0E25CD23969EF9E387BB3BE62A3
51C14DAC4BEA7FB4C8F38C6C51F6431DE0F8FEB6C3091AFBCAEEC0FB3F3992A7
7ACADC778ED2784B3423154B7FC03D43F47C6F505869EC5039310EF1F4ACEA1A
40014BA27BD58490D243E14831C19698C0C0C9683827A13C1735D2C649C0D4A6
BE354B0E303F96F1A7DA6410CC5D3F84EC5C9F615650160747A724AF9C66AE82
CB864AB947E3582308319FF3BA95FAA268D83B462FC0BD10BBBB8DB7B12BB101
1EEA4891546F4AC7FCA094F32499C0F8AA33D2C7D00283804FD75276BF2C4F9B
E9BD77A75D5A1E7BEC988F06F62D50278904F0928D97C2A77894DADB216105AC
441F7544C3EEC8F09A260BFCE7C040D10575084BC081821FB759B9016DBA3AB3
9FC05FA6C191F7A83C324AF0629A269BCC414DDA1570B980F3596906BE0D23A7
1396BA0A0F3335B74FE5BC3367497C95A462341C8707177AF767B83F28AF4C0C
F952EA0D9C4176D5ACFBC48D8A48074357B1B8E5B17C698F2052A9C6410435FF
3D114F67EACD436BEEC8ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A6FDD
7D52F256FFCDF706B456B6886F5FF5F416C079AD248559BBDD2767549450C680
3B603B312979604965F7E8298F454E098DC4EE83D9EE5A229DA5B97FF0861841
31743AFD0DC1CF828D0993C56493FBD38744296B82E3908A1A0CE811E0CA2E52
A0EBB9F4998D40FD7B001C660CCA6AEA8C43CE8FFC9D1AEB97BAF55DA23B2FB4
A868BA0A41CE90D7BB6633CB481DC110FC14AAB8E9264F5EE49798BC49D9D9D4
9B9CB9429CA197321B545625093FAB4BE53BC96D108520D9CE9193DA216221F8
42FD0F3CB18D4D9C66FE5891B484C4F3ECCE8A8CDF069387E4FF4967E9F11717
A630BB0422421290360984C499D5C2F4750008B8107BD17C259B723F956B5B14
7E7C0D6AACEB4C9F0ADEEF68329D5CAE9EFC75DC15A9494E876104FF7675D11D
E1DFC7E967F6DECA7277FCA73E841737D9ADD1D1BAB1961E212D20880069F0F3
B5536CDE53D4A4D5012B54B227A0C18DA8A43ADB7593E98E5E0C75197138FE3F
BB31F876BEE000302935A55EBFE1CE914272A8F50A983AADC0604FD17B2A2F43
06AC9C0E2C687D1D9ACDBB674244037384B36372980DE4F1819DC2B4F825D7F6
AF5769BA3C34DE43B531F84B485EF8F360082659FFD797F6E37B87EAE0447EDA
DEB00764A38DAB429277B77869A70AD62AEA3CFD663916700C95E0023599AD8B
F5E4383BF2D5B1F79DBE83B6B7836E42C2E1AE0093867B0F2F8C4E44A16A51FB
C10F2F4BD0EB7475E396C85116A9D3FDF82014EB00C07DCD76514565D3E6DCBA
5BBF1E7E65EE55B3A8CC8D2229A01DD3EE09EEFA659502F90DEA0CEE99851BA7
2A097446FE8D54CEE9CBC3B88AF70F6D0234ACB6350CB1C56BB44AA5D7005841
0088780E87F8A0D2F6D2FA07D508BF3F6314B934962984C7FE400CC9AB1E5F79
2699F15AE7E181FE3ABC4B4C70E21F3AD9AC49685171C47A257EBC1FA6B40E10
B77C81889061E668B9444D08F3EC366CF071C473CEAF7FA64B863164AA97F309
B76EBD1D860A54D8E656ECEA88768396EFEC282AB93B7CCADBEE9CAC7E77D79B
A760EF4C53A3C983853C30DFA6B0093FC96F298AD1B5807C33A89AB14673D370
619267FFE6A05DCE65C7B986CF466B6A832F1921A6949469ACC2B5EAB9F109C3
6C9122359A60190E6C42C713A9BC911105DDAB231758BD41BEE389B057A1F7D2
5215EB9D0F26C738D1E8782D670AFDCFCBEF6BD68AA64D6CE1D7C82A1E46EF79
FDC5CF1DF72D2275F3857BFBB4FF234B2192EEE72D2CD5E415EA5C1C28F4B537
D15C66B6CA739B8D92F22E3DDFDA20460C55C375A40A34BF6BDB012F333DA135
67389FF89C666BAF1696FEE4BDC1B32589E1427C1749969DAF3B72CFD1F579F4
A62E705B6DD2AEF3D166BA507A1EDB131616EFCF91246FC75DE3D8A915DBC82A
1E46EF79FDC5CF1DF72D2275F3857BFBB4FF2296C19E66F93DBC8E9CA5E86793
FA37889936F823DA9CBA746BDC1BA4A84F7B70846E33CE5F285F32FC4E53A284
1E737ABB84A750A16A4999D5A59AEB5FAE6FA51F6C8CCF447A19D91B8CC30481
B5C49B6ACB4DC451F9C524349EAD4DF1F0DBB3869B74C2373223236E809ABE92
C2630C9A877AE16BC30D56A0B208DA546903B801BE445518F14E701BE121A6E3
C832FDC31C1546BF0855A6767030D9B6B47266B4A1084BE171D03696A026FA7A
544E4D106B9A315700669D9D8A3D985F44DE6070E8E4AF6424F3048173F52CB3
EECA756C4D24FC6054D922F59B105DBB74686310F635AE6153D9E18A0514882D
4CCFE9D44B8952190FB9EC8360698A45EC064FF735101C9B16BC27110FDAE792
2D97BF0BCEDAEBBDA6BE7764CAC582CDFB785921653201A8230C66DEBA105E89
909D76D034C9A5C6A216EE8C2D9C96FF0A04F2EBCCA2467174529C592950326D
E46CC1E57DD4B2A8821A8506BEF79EC524565788A28F5870230E9DA69ABC8078
8F2F72CEE5F5594F71A24092D1CA9BE1635F769E2AC1459B0B3AC1DC117B6296
C31A438AD167AD6C39AA2FE5CCA6028CB3A7EA6A0BB569A91BCF947E682976A4
A993A413FC97F6F1331B12604C28FE4D8F7FF429F96D0DCE41EEC1EA29EA44F3
F8493AB33413FB84F35B3C0016089A6C4D67EA0050A0381699FE2E38BEFB071B
9FFE3D7574FBB32CA8ABAF8CDE383085DFFD5EBEEF83D696C0FA27B86904477A
22C09610E936D310AF8455122F4C6B61307071FBEB6E8DA8C43C5E1C317DD3AF
44E46800FED97CA40252808F6AED21A9D6F3EF87869378858BA7E6E918D5E464
49525A4A5A2932DB6208081585CD9A312B09793B1C1FA05637430A13E5AE3E1A
3D5B471CAD468007C4A6BFEF07D313E1ED2F47BDF624179D8827CA4664F96F70
03D7D0BD14633673BF1A66D0126713294E13C1A4571B8A9E6D98EE5C2084E767
98939F0AEF7E64F621BE09010CB6F43790AC69F122BD9618E23C7FD95CDB02DC
661ACA0D9FA5DA0CEB0D82EC823434BFCFE218A4B5FF0264F1EC9818FC80F9E3
E06FA21B47A2C431ED3DEFC7267AD9DE87E23C2411D06FCABEAAA6D87458CCF2
5F198AA55DBC4F8AFB25E33D6830FF6333593140C974A8B13E94CF0E77EFE6EF
C2F0C2FE513C93C7EB2528CC8B0472B5A579EC88E8BBC1480D4976695D2851AD
FE75F0E8AAEAF174FD8B2D5264FDA6E40432CB09DCCF5C286D5EB04E5A7D952E
716DDE9DD17F51C40339BBD717BA9555F70DBFCE390F10FFC62821D7082423D4
6EB801F8502449684418493C3E014D603933A576C6B0758D49F3155D448D505F
73A5206D1647639FBCAEA8108A2649D23FC552CAD67A60480964C6CB0783A8AF
EBB8E005813FC0D89420F1930E18323460DB56C9DF95B90D45EA22620C2FA7D7
521D7D4B3FC1FDA5061C6F4B994301864942F3C18428C06EF16DAA37D7CAE4F8
5E3CC5AEF1EAA75C658E90F0246C18C21CF073CC1D7732019B86C11D799B79F3
3BB09CB6771F637D534DE9FE49A53A3812D7DBF47D9E8A2D353B48627891CB99
B8C759187CF9112E3619F9ACCAD376725BFF2760B9ED7576B9D9EADFA0D51077
ACDE9DA732031E629834097D62B5D90F48DA5BDB8D01BD0DF36D531892BB3AAC
16F85A63CA278DCC38682E1BC6D134930242730DFD14B49376780164C5A1F030
379CC9E763CF518CF9E2DD410B31012ADDA5B9ABA7F5EB2EAC54DB67BF9CD44C
49474B134D42210504E4254BC7510C4BDFDF53EB3D5F54D0C6A53862B4ED64CD
18471A49B62240FEF22F4D82468E075498FE2FD44122E511E5FB2FDC8CBDF6A6
9012CF9846CE3A9A6DE5C947140AC48B22EFAE3EF8FE12D52CB3A260C7E0FC2D
A6ED47D61F83DBF89585DAB88E81AE9FD0426205126E4CDCC23EB4C431FC6C1D
BBF79938BA64859723C4637574DAA16916B8CC6DC32495D5247D877E4B863070
61E7A19A3AF4137889983657F78257CE77F03D0E9DA4E29707C31DCF1707AA65
83AFB9A309EB1599591812BBB5C8F3CE43DCDA76D261E3F7734DE2DB7D9BFF35
01E5A6D23CF1541ABF3B301F226510EBF89944E4E9C5376A9F2841845CB62FDF
58F84CEF83450F3CF96A040F4C2047DEB00A172677774217ABBFEDC33DF60D1B
D15D023EC0FCBE6548410923051F875718FAC168E4E2720E8D959D339DA26151
5C42555EF75A03385FDF6C7DFA8FD7D02B80E1A845766CDB597CACBFE0700303
409164B5CD1CB0F12CC3632AFDA9076C2B4D0CA7D89ED2FD03763D20BE507F7E
56122CF46DFFFDB6FDF9361520D2E388DBC639CAD5B2E83C049DA71FA49785EC
5565D2B3A261A66C9F2C8501A2E9324D5E6F0F1294E1C0AC67EBF4A840618B23
172EE2D3E6538CD9B1E12B834A6D01EB50C781646E30ABD086CF9C09A6B0FEE7
416646141CCA188014A29CCA5AFD1215D847550DC0F06DD1F83FA50D4F154867
B579F69E34040E2AFF508CE7AF4B0D544E70294FCD49BCCFB65347FD1767DFDB
6F85337F7B399827B860FB08BF9D15DA7739FAB5D8E03BD8F283FB6832C3E10D
341F8D147A88D61C5990E609001B853B273DB140A7DC69895E465C1ABABD4CDC
88310748221F5BDFDC2306912DAE1934E475C3AEB56C96D1978FC7659ABBE845
A08BC6EC9EDABFDB1CAFF5FB8203CE3B25721168DC1E382A5267627FEF41D963
44A05EEE4C43E2AE24657176B6C8D3A0EB5A8C229616709EDD4096C1D4D817E3
96C6A55FFA4D67E59B58C6D9BAD063D247787282EC4820B3C3A8D7EAC66D120A
3911D284DCAE2018F883AA804CCEC457CC6213EEDC75C8890DBECB670000924D
3BAE8E7A8066D804B89BD943B49ABF548E5D92C1D6151D1ED96241CF76510076
26E9D2EFFD007A8E985FEC263E6C90BAE36C27D704E88F1F7BE09A971CABE15B
724B62BB0C1A5263449707BC0ABED19F4F1ABEA27322584D473A1A888AA4DAE7
7864042EF587A6D6C04DCE664BF83492D166B205011A3E283257FA60C5AFAD3B
71CF6D6772E5E77FC5742D4D77F4B9576213835AE7E32A2B401C36C3D58214F6
DEAB86E06EACF7F5DA3BC32030E4E23C5E0E7E82C4D1F9BD7278685C4CC54FE1
C1C4332F05F5AF14E70FADCA465393A7DEB7DA08B3012A99FB2FC7F6FF7AE570
BDBA718AC1E0ACEF9AEAE22E5FA653C2698E05E0E072A7DBA0702C0CBE5EDF6B
D0A5B47D7929F5C9317680A392DE0CD7AAC72A99F351D824F86D33CC89BD70DD
41F435624F598030F2E7121F6A610D640FC7E512A28BF6C12496361A53953D75
312631D6F07794B1D853251462B4D522B6EF8FE6D2DC18EB4C02C6BFCEC3E71E
20E6D98720013BBF6307EAD2720BD9674E2AED09E56CC6D3BF927657BE2D0749
3302A5492BEA01CB223FEA3B6CA4D0A35D6F2C5D17804371F9AEBC100D7A6D14
14C37CBD273EF593B596973EB054344F62115963E3F61A1A2774E6837D2DB796
482A00E2BEFBD6E3758A5A1CE621ACE547811799B1D7893DF52D57BD6C1A6B74
4024CFC65AAF320264BA65EA8FE3B2E77F515CF05968797241B5BA06E190C023
55C664139419373923D5BE1FDD292F80E973E271248B2E3AF05887FD5142811C
2572A1D4B9F9539CC6D9F441AEB22F4E871755911D8FAEA73E35EB7835FA1C6D
A4635171C47A257EBC1FA6B40E10B77C81889061E6696F50954EB8B347918C49
20C7142A2AC68231DD2AF574910705DEF2893D8D4BD1C3ACFA2BC75EB9471489
0422528F5121B7A7D7A973F2EF67F2795E6DD8CF55B98238D6654F8B47476E40
98ED693455F82F098F49FF48762D1C9622E0B64CD190A4AF3020654123563C5D
6ED62F1387AA1BC5F00137C6AF5840026DA68D8DF87CD5567644A09B52124E10
51A715399BBD1A6D3704BCBBE1FFF89BCF8129B98D35736FD2CCBB0E36AEB664
3C283A61B6E8613BC8134939CD28AF21976B42B06A63719C44432BDB419B04C9
19DA628C6A5B0F4F626E8935AE2943365C505CF5C7955AF2EFFD964AB8EECB15
C33CFF111F801E31FA0889D1561CB28638D1D24AA9F358AAFF93B9564AB4CED5
632C12606449ACD326A76B011D9FDD66C24C5342A5575E940A10EF9A7C4E0857
59F390036755C4BFE971F6DFB9FFAC965ED71736140A0D41AD571329C7FE5460
ADECF79C3543E3592283C6770B4087ED9EB76ABFB56774C4A21133E594461685
A92D372D4ED3F9DB786D7E7245B9B5DE70958048F037C56C14FDBCE691048469
BC488E501EB5DBB042B02CFE90432FA7D98B533F89DB0F21A61657E268166431
92F6AB4C4265A5C2599F55E134AC2DF346CD7C05F0C4B63DC1C10E03B9D34C67
27AACF1040ADBF7713E3898334BD99CFBE66C4FDBDD9B9180626E338FA32B67C
16195DE9D59A0F447B8DB69CE8FD6E2ECA90C6B424F1D39D11670BA89B298DE4
0E91D1CBAEDF3D811318D493DC71793E84BBF3E2BEE2EB813B03690C774E6DCC
F2D7221490784231EA6CF28982A4470A7156F1C7312FFAE07D32B62AEA32B58B
8D127C00F3B953C795C84E1A158E799D50610BA45F2003568AF44E2EE4DE711B
A128C91C36EEE43CB41592BD13837B9EC9735996A1376BC209B8D579F6A057A2
7AEF243C4B389CCF9385CE645C882CDB6A03A7921BB9F85B93AC64F9C82C455C
AC60CC9896FD453CF3AF2307B191F79C5C6F070D7E814EFF05F881CD7EF43871
21F72EEB3A9ABF13F7A9C46AABD4D0D976EBE8AE53D3AFDDBB926B54EF0C41B9
8D10342A2BA4F9908402DEF9AACE7BD76B3D4A244E3AC7442DB6A705BCD7E2F9
DD7C73DE15B222ABDF7DC3B76EEF17AE4CBDF387FB03FAA5AD122CB4A90F479A
EB32B0CA993ECF07D050F04D4CA153663EFF8A63016F79C7D0E464A57671FED1
E50936B0CE6E364B62411E6DF77D4A4DDF74455394437C3A7B477AC27F75850C
FED5BDB2F07349EFC5134BBD646BED8080D44243E74485FB82236249FF6726F2
D6775F15948A9D4DC82D6F60D7DC6F714656E89DC882B95552C5215183E5FB51
605BAA7948D6E5102CCC8E7AEE127E914C372C6E2DD84989E78792EC3F50C186
322A81E6A8368780A2E815A7EC49B29EA2F4594EFA2C1C079B0C777ACD0210BD
A4F06EF57BFEFA0FBA572A16A81DD123F8434BE971D9EC8149468CC0F2C45ACC
D61E6DEA7CCE2D711A218FC3953EA7B36F464567F208953F9AEEC1EA50C522B5
A42C4A99B079ED011928C2C8CFA17D95D50A7C1599E62D4FCAB001D5F9DA84FA
530D65FD2738BD6BC724446933E8927F3AACE64BE6623CC4CDCA1DC0B686ACA4
41E316ED0CB3CCB6ECBBD05FB823FD79EEBAD2F9F0891F553381C5E352B4D7C4
C1678904B22D75C8E8D4ADF7A319E9EAC6238093C798878E5D5087FC5390338E
CC499C043E346A4DBA66B7EDE932FFD9780C75301CDA60558F65241DEE49409C
10DB07153317E1A13947E293CC426E38653A16E2A7EDF6D500E9237793DBAF2C
6AB5E2DB571739092A476FF45FA1A1CF898E3FF479C1EF67CE435AD93677B705
BC81144F2E45854E93CA8D00E814009234E2A36EFBD854F868BC9301D33BA670
0EEC06C030DC43B2245F9D24D31A31F06EBC65712C870E62BFDB244441198618
3617BF19EFB5DAF155F0957D038B6FC5BF776DB24668F0F4594572EAE33CFF78
6BFADE79FFCBAA6606E892B2E41A173AA590B6C92E254AE642A2EEF5D51BE02A
C50855B9158840F97FA94CC03CF388C8AF7468EB28FD5E0CBDF9E23D1FF320EB
F19E60F85CB9568AA9C68C085E87B32EDCAFFCED2FA9A1619C3D1065724C6F56
79589C83053D4C8C9B53912E217B51E90F13A589F452936A798BADF461C448C5
480CA1D7A929044CC07FCD6CF9DD7FCE413A0B2CF777529685854F63EC8FB112
3A12157DE158671515E8FA0324852EF95789F16A8421B4FA121305A1AE54DD69
30796B192862AD337BAD6CC06279077389A26E7EF7030CB43C182223AFAAEE62
0EB7E7F02C11C1B52C95B6B66A2DF1FBE1991088128B8B12C2B28A050B50BD46
CC83DDD732C8EA609E2857FE8377112784FC50B3E2940B0D30B506FB4732B2E8
8F32140F3893EFF849FE4E17A69F02E7B4C69CA806A1A347B174992DB8D542BE
C631C8069D0DF3B6F3A5A80891684979154D98437D6BBE4C8EEC74B6D9BB7D6B
C5924BF9AB0BC0438C5F9AB06D6FA688C48C7DCAB3F09B9350C42F6BF7A4521B
21554098DCD8F7DA254922301AC847E5CE09E60F0839874318C8389E298F5546
71CFE508839634A81ECF5A229D2B16EF77A39178507E41DE72C0B30162242B3E
F7756A035C0529533E59108C550FB89650C5B0600791191AE0D2C2D576DBD6A7
3FB4C0722AACB08ABBB932D5E6A03F957B7C64E89BB59C4ADF019950C6276EA6
1AA9465BBB3A56AAC8D14E62B83EF68CDE87804FE10153467FC0AFC951B645E3
0ECCABC655E635DB463BE72AF1223D0690DDB88C7DA9D59148324E7CA0701024
42574818D8E2E330E2FE5102B7F4DF3E4FF521CA5741D8C57CCF85B7887E6A7F
6B6E4F61160966AF27B74B21C9F3D6882E3E909D80E0762C58ECC4E243CCE91A
946487E546C6E433A5C5B9FB7D5B97F2B4B202F94545C8C3A9D70992C1F31DC6
753222850ECF459A7BEA8D8482342AEEC5762713C43E7E94884C06329D340EEC
ED08ED58B05FA74B94FD084CB58F31EBFD5EBC6440498768C234573DAA11A489
B87A3C6A208E9CB0B30F7AC129D5E7217B10FF89AD4A78408DF8ECB0A02D9EED
19239FB927915A02D3D85B0C237669DC17FE1A48D20EA8C5D2A68A4127CA7332
E5039A2A7E32F2389255B0491050D86369ED418F2926916FB309B314347EE3FB
1EA13799ACEB62CB55BE2301E115BF38D18AE8461F466E207613B6C091C7A10F
D77A10F08ADDB19E494C72ED471DF04820F4F3A6713E67E7C08467C617E31DFA
524A30DB697FB4139002DD5225DAD211F5C72F3127A60A33D311387E6018F5BF
F946CE8D7834A3410F5E6EC14CC8E47337898E5E8367724E6A7662499EA3FCC2
78B616531C0CB5BAD1940ECE80B6479023DA0394E3CCA13502D03B122C2218B8
7DC1A0A15DCD491B2BA40939A647E01CA6143950A0D13DCCE128401BAB4E3322
2A22ABB177C6607F014F0310C1E7BD29FDC20E11094E2852779FC5C0D5DB9D39
648317DD0820EFEB02CDE5BF84E5F1E8C8572A5A86DD74D4FB3A9FE077F2E6D4
384BE6BC394E71C5DB81E42B90ADB935FE3468186ECD90E2F15FDBB395191E6C
465F4AA552F9CB59DC4B0FEE8C937A0920796C09CB74B3EA1DA5B74EB358437D
0CEBB9E03109C593BAC09CA9962533B3AB0EE6EF76418EDA7CC6B8795043E5FB
6F899C3CD8486A6DA3E670E6D13BC51C01FAFED3D47621376F2A271728AB7439
3AB3183B6CFFE1D0E2948B24D2A7E6A98712527A7F3FDF0C07D30FB6436D5875
3F6AE969F727C534CE5C9001F9E7A0149021BE5A65DB754E14D890F42F4D23B8
5DB5F2BD66726A544C10942C271713B28F9F33282D2063886DA7006EB5C0F757
82A3C48BD6B7D4DA8C112653B00D7E484A88A248FD17FF0E7A075A554F98C451
C7059F491D1C8BE038ADD1FA4019E1C78B8C7656766444617C98548A8EC0CC14
829F7C67999234D302FD1E40C28703DFB713F881EA0F4B81A8F1FDE4B3C92CED
078A98A433D6F3C4B442E014E3E5A5E82E52DB5332A895046FF12D01742E9AAF
ACF2CFCAF0517858C28A24FAED300D643F1880D27C0F7D73029F171028FDDF8B
55080BBC908D26B5CD10691FB92BC2FA54A04EB649B111671B43973E31253DAD
08488B1C71AA6F08A5FE3F6222ABC942F7B152702F7E48B93155A7DE83B3A6DC
7FAF8C2561841226C56160914266B1D28D74185B0E0FAC89BEC8ADC3FC027EC4
7FB0EDE4D2906CF1B55597831D98B643B81D2FCEBC963155762A1019FE6A9467
DB7E5464F6CEA824787BF86ED78492C31CE4E8AD0913637E245B375AAA5B76D5
95F18A4289312E74FA9C289A53647EB6D776E3BBBC735D9E7226D2B353CC752E
FEC2E91DF8E2DC63650E22804A5B31B13418130BA661F22AFB71F8026DC8F788
188647382BE1B7891A84B9697E22FC61EE575564D48A537CB190E26707CDE0E1
B29B2BB9C4F4716519A4A62A05A7B901F7AB8E77C6FB72D7CB3D6953F1416C40
FE153C7E73D86FD65663DA0E08018ACF34CF9BA5D7A937AEBEEC84B992D45A26
80BAC63497C593C90728B12A42833DA3C710044C03A37A680D1F806296BBF942
428E9FADC28CB5AF48F8947D9BFAF2F57F0F6C4AD7C698D46568068F98C3564F
42D2F7F26014DE37C4DCCB6B3082CD71C69A1E1A3AB1C1298DF12BB54B3EAC9C
3325FDF74E1B6222A84D10CF5EE66EC13A71302C6786D05D419441162EEAD0BC
CA6315D5D70AC07AC571FE97F03509863B9CF7A0E4A8D5214D07B149EABF51C8
5F0C8A7B7BA0AC8B5A90540E5FD5922F512C0A83999C07CEB7A37F71BB8C4C08
F359CB4473250995CB6F5DA6838536F3FE0B38EC7BB696C8285F78C66D154289
455C5FF2D23C1A59A2944DC972F44474CB35738074BCB9FEE4077CC0C49D7185
B623A143311EC892D1BB9554D34547816955434DFF68BFBC34A074CB3BC8C175
4662B5D3FC0462AC4967765A50D653FC3FA379FB4FA0AD9F83269A99D550366F
C8714B92BD48CCF7CFA30A7E92FA628D056602E7EADE6F2B3E168EE1B0AEBB2A
BAC2B90A514D97941B12553B13AE64F9F960EE62E049E6D9BC9858A3ED3CAA1D
77CFB4A424858251438F05B3EA1F686B35F0072DCABF52B26423E8BA630090AF
D344BB225F08F47868D6C4D857CF0A3C6CF4B205301FE5A2F54624315981DB9E
59213A134B651EB7A024989A6D910914C0224A700E1245ADAD0C701A6F5E771B
E54B09E2D6EBFD77645845B7C08389FFD5AA6D6AED2DC26C28A403BBCA3435C3
FB7971E9A56226D46A1174136F0A04A5CEB915B8E21F640745A0AB62F15FA8D6
5B74900DE1EA95B981FBBCE8D846DAE64D91AA7BFBD49CADFF1DC7AD838B897A
D728B35D869CF7874A1F48CA79E025C3D54743A3B0CFA14625FBF274F3794F04
4EDB9552BE2C55747D7AF3101C5F1A2A1BF6C0E2572AA0624592BEBF74CDD683
40D52E137B1DB6FF17B6629B871F0D3AF01E55645C56BFB97243ADC4813F842D
E44CD9352178217879909DFE3C012CF2809984881E57668BFAA1644FA922FC56
B0B93D32362BA966DDE41AE6A21FD20EB82747C47F18DC85145900305F388143
6FF377B1500EE02F9B9B8774237EF1899A326BEAF8EDE7CF319D42D7B7B61296
2A9DC4B8DD8DD87504652967C679E5629FE5449DD1BA7DE9ABEA28C4E2496F87
61C0638E0F7508D281F5762ADE506C2DA47286A8A2312B11DE4B488136EDBEC1
4C5256B9940F0800E6DD26001BE1FD4BF642AF9525279536814044F4AE7DAABC
43A230FDAC3D9FF0B8CCCB4C1E7696D16531A5EED36C30AA15C66D5398C145AE
DCE5826302220B185F12F8DC154E4B79B163C08F53AE78243C52D4E02E82A4A4
310980801A463964F3A0BBB90D85756EBB96B5021481EA4E845488B79682BD09
F8D07481630EC3129072AEA5778A135D164A571B22D1D619980E73841F84F59E
0500496E84FD5E9A7E4A28D9EFBDD34A443F263B41A3B2076595CE2A7DAAA94A
4B95D7E9C281194A84A9ECEFEA5023317F88FB64830A2CDD5277003D6F1D46A6
DDD51B3C62188C66D7D12CE54F29D09DBF020D89506CD1270C0B3EA235BDEFE3
E24373517FF148B2CDA2B90CB5884440F464CD57295728A8AFB1A5C97B6B8F47
63D21E005D89FAEBBD7D8B06F3FCA5D7107E8B918D946E250F561E5E394ACA6E
AD2890CD407F38C53B3E51C9FD432F22202E89A91B046BA4CDDA6E23B0AFB2F7
9CA39D61350D26435EB900ECE26C5AFC283144EA933E003739EA80DD65A63FD2
020938E02C1C72FD8A4A14DB003C5D21197F835B183FDC1269D70A0B14D4F9BE
76C4CAED815AF7DEF664098CF1A167444F32FDE1796595709294CCAA488C37CA
EF08DFEF5DFA13FE0CCA32024C378A87CFE7506B67F7A6FBF8635703C7EFF67B
9F15A7315285D2565D7434FF3C75A20CB3C1B57AF37CA806711890C1AC5997F2
1A14E7523CEDB295474F36E7AB3493706076D62F4C407BE252B5F31039CFF52F
2855C8AF27ACFD99EAD434BCC277A4805E6F068CF203053B151CD82DDFA79D31
F0B4A0485F51334BDF5CD5E855A60000B2D49835C34DE75CAF4932693BCE009A
5801BF822C193040C8E053C3F1EE0BB0AAAB446819939C850C76B37EEC59A516
F15F22949AC658037300F1E113F3BD1B4F3ED7F9F55C21A04F1A6DF8168FA228
6D8C7EB944B03F3907EC73E5B4F9B71156B357F62608909B7E4BA8223442AD48
691C2A47DF05F6A7466E87D3020FB2D9D297F492DC248B55340E2A24629A4571
D7AC9D41CB1CD871395666525A66CED4C7C65E4402789D5449C1EAE25572A971
B89B24C4EA34ED7970566C889F7580291E4ECD8437710CB5ABCBF542F0502075
D90D8D5C92B3A5DB6B82BE461BA06DAA237F43C9519956A524A451083DFC810D
15C13657013193C8D83A659B914A4D5509B9DAD79DADB3E321F7ACF4A5C3757F
7F2F7FB43CE1F03A69148A9AF4418922E61AD0A92C1D2165ABB9F9059EEB9CD9
CC802AEDFADED447518971D17B6C14D5B2A021154D274B753AA96964C14FAF79
7738C1773B9AD2B42BC431C60418D244656DBCACF4FD754ADCB4B3957E1B8A79
5D720A30B7DE482DFA2B2F4EA38E7D327F0F4C117F34AB17610F5D7F76C203B9
C613AC9569CE318E21C11AE858AB0BD573C2E4B6873BC24F7DA45361E9DA0209
FB87B737182BEEB4E4D214B234397772C3DC75D6F4C27F992B1370CADC87C117
FB3C208612F02ABF65DA95B47B8C56930CA76C2B5CEB502575C9764019856433
A5BC9EC9E87FCD37FF357A0F402E4860AA1EF85DA46E6CF1472B62E5B02DCFB7
DC61766C8C32C4C9BE1C2A32798652FE0695FE3D11AA43A7F64CE81A00BB186B
6DB03261532247A8570D8234C82272497284B49FD0B1A273C1EDA6B778AF995C
C50BFE91EA5DFFBCE16BE8F29E054D8AE6823CCE5FCFD2D5B4CF559A079F2FF1
C3615FD8AF94F0747C51AF46854168068B6E7C7CF2E2432A65BA21DBEB0A83FC
660BED9D09AA6A1B7C9AF629B6230BFD81E2AC57A8E54B8671CB0B0C92106267
78ED2352CD5E55393D0D97ABBE2E2E919071234506BEF22737891913D14DB366
F3BECEB340174B5075BD1BF8DF1D951426BA4EB4992B5A523877A0D38D0DAF51
0C5EF83D1C082F1869429B0A2626B6321C7BB92529610091D8A9F09161A41BAC
6A15727CE914A54817D54BA0959261F9098B70D161B2E281A539F8903CE68F70
83194DC83C7784B7734022650FBDC39FE0CA077981D31EE3902D9683ADA479FE
08929D2CEF858CDA96B276C02DB29FED2749139BF0A51A5A9E0B6B832255876E
EC28E36BC5BAA44BB4F42B537DE4174FD68DA8D6B5D961BCB298D3B571CEC6E7
71B02211A1768768D62E319BC0C6ACBDEF8BA575387DD0D73162CDDD96166F79
5D7473C654F93676CD7156CC449C1204FFDA4D2FC79A2DD9070FAC9792851F1C
C40481634C777018C2E5F8ECF2D2873E36999482BF45A003B819B9240E0346C8
43AF01A8431626B5EC47DDE14A666942B10E15F853CC86DAC167A9E7CCDD1760
2B9DDA972CF72053ED0681C5482954794CA0FD6CF1BAC22B20AAF0F9C2771DB1
46D3D081B9E5E2BC3BA66933054518026CA3C35805BA4101E5B57DFE360D9A79
B8AB56EA0BFB2AC47F2E423410C34A1D841C3745CD7CF6EA2746B4240DC02A35
64071F527443F534C4E334E0EDC575DEEA0C73666D12F2D112B93EF7E2B3F6F6
07C8D81FAC551B3FCB526BCDB745ABA11C62B5D0F388ABC36137C2137DE0D7EB
BF2323C750C674154CB73FEEE0F45A6CEC462468AD09E6EBBCD1EB55B342D8AF
E712FC23069DF8D162A2B400EDE05DF412F5D3AF84C24E3EA6496A486815A615
0C8063B5D2D0C03EFB23D0346B6DC488FD13E33323F969C14BB2980F7880873F
E0D8C5FDCAF439138776E7DBABC3145199DF6DB27C986E2ECE566F492BE91D3E
606E4A83B0F6AADB39F36AC8B75F5AF5608562153DD6A09E462ADBE677E6F550
F9392138F5FDBBEF4498694C0884FBE6911B1ED7148B9DBEA829DFFDC4FCD4B1
697443A99FFA4491F2B85D31FA193D2A423ED09D98769F099C8FF9B12A99BB88
B018D3A3FA2570D142F7D6039F6115845E21FB2D04A6E73B21EF6C43C1F84EDF
F3ADFDE37CC5A8BFA27004F390A9E7BC95A6425CFBD042F61A533698803D7B49
B793B3AE361752E44EBF16EF3C433E3B1CE1D4F04E229750408081A183BBBACC
01394A174BEF5457BBD5BC6E1546F63B15C0E95C4016CA528EFD65A0362B6049
575644DF499E000AC0DD66D5035F4F4BA4A66901948A2B1EAD65E327533BC1A3
EEF5BB2106F16DD0043E90AFCAD0D0DD2D55D65A53AC7D013C3C685371FE4ECD
63538030115B4AF2D9DF46E1E5B36E223885BB7E1E8B28BFAECC3D34152E7A95
0505550B8420A45DB0FDF9B94F0EEB86576319AE8FD72E288AB89F4ABD066FFA
0C1E746C7B89C30C25057A23DF1469CAA260ED4AD93BC9534EA4C863878D79CA
F427454F554B6B6182B53B81600AB819FB02988E9727FE6F8AEF5969EFF87EA4
00501A3B3236EBCDF84D69BD5B50DB0379832507E2D44391785BDA34FFA7A954
D8B5A461462F841C697CA38AD65C2A9B6E6F0794B78456A5C731C81BE1EAA683
02091E5C94635386A95F6FA9E9A4FB99FEE4188424A1C4BBAD6AB6D894316E0D
D2875727CCDEC5327FCB7A2C9A509864D67E82E305DF8551143EB41BB6F2DF38
A3BF8A308E89347B8454CF7E3A9737ABF94C6914A674BE9E9540028000B909A4
34F417B4808AF41D9964639CAB6B5D5F88E93AAA4F12C642D0F5B9E942A2D8F6
F358A5ECDB8D62A82BEA336E043FF1EB660F261482EA4A2A2643579E252A64F0
71A7ABB75A726F1EC0AA65DDC25283DFD37A7C28A3A5C25871D190E4758A89DC
70366AD98D5AEF0690A7F07D6FA3435DBF76FF8A70E8E030DBAA42C157E03DAB
7E352BE200322BBAF6DDD2628694612A7794213A139737C8CBC667F0052EEF61
ECAD138AD5B484A510670C8526BEDF26F171C5F4C80871ACD7CD327CB2140CEA
EB45541CB32FF7D147CB85CD34424CE13529BC0316A8CD1A2FF5BAFF93EB96F0
A79F34E2BE615A70822E964E4DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF7
CB0BF72EBB0DDC10C55C02FB02663AA47E2BDC5A51A5204ED1DDE0E54E7D0AA3
C8F86500ADCB8C1E42A8910C7677643246468572F84A6C7DFD02A58EB57540F4
BD855E19C7F5D385379D5EF73C32A46CC6418D742FDE62968972B6D9C1403EA9
4C9B96CC5168ABAD8FDEA9A92B42CCDE045D6052894C5915607E3BD7DCA54D8D
3A8018F4B3D918247CFE6240C82AAF61A7D3FB6C48487185D7629E1E557A7D64
B43EAF4ACBAC482D06AFD458F0DC3F463C13A51C9F3EE6A9AF7CD4F34009615C
025BFD7D46F4D3774E90371976C5FAE1625D62879E4B5A7F10378A9D5FA168BC
BE2C4F28F49F023763109ABA63C19FE12603C3630C9A877AE16BC30D56A0B208
DA546903B801BE401DA923A4FEC8948DC1EF163019E604B15ACE59F9353B87B4
E558B560043129C527722B4E3302256A98811185A964289B557663D53DE4C578
F6993FC10789AC6FA67E0FE9BB9646A156B1131100E35CFB1CC7432A5967F4F7
B12EF69C367F0DD4D73689183798A4A2605095672AF08993B871697F1DB6E55F
2EBB231F88BFE9882F3847AD19A58AF79CA8A0282200D23FB0EC43EE10718471
2357C9CD77FAC71FD55A5490C89142F2844CB7E6352B01A57928821321C28792
5BF53DB2C28B55AAF8797624292CF4FF2BF2869A9A97398E0C20F5F017CA9DB7
BAB3BAB60A4A135AC78F06F126D2F0B140C4EDF6BB63C31D8694ECDD4D2CB53F
1FA77EA74787017E92DDE4CA70E9A40D7C2C6AD7AE02AA5AA6382253CB2BA6EB
CCFBC26B35B847969664852D66255D2A28B0EA534319E195268F9BAD924F519D
57A88C79B55D644CAB29554F2E31FD6843F89FE5AFF614A0A2B1B15A1041800B
B72CEEA17CF4A93E4A45D937196ABFC771853ADFBECB7AC623150AAB3E83B839
9A040A96BD14A374280F97B486E04FE58DB7996163D1A0A06FB5E7EE151EE99A
61A68FC2FB7A553605C1C178C1B0BD37D5F03F931477AA59235FC33C523F93DD
B154CAE4648BBD1EBF369E7696C8B79441C929EE3F22A8D2433B35637CF0AB9D
FC59F00E558297BCD6CD33D34A39917EA3055C85D171C0378299712D1177AA74
69F6D3289DBE70F640BEB821AD49E34383E63C474FB5CE992AD09ED3258C6DA4
AD3060787B31EABA5D487A53150496CA0FEC05242DBFF4BC8B67AEFD8E69441F
E11F56E548CD6C53D90433C03F373B8956556A2AC81C1A18951D0D0301E8E446
7605FB8B7A5143E0EA721DAE16CB509CA5BC1566250CDE486DD72554B45330B3
EEF2AE90BAB0BA3584794B06B2827C2455060A8B4F2DA480577C0B4FC164B2BC
961B806063B735900768E75D440300F0BB48990015EE2C13567B53E2CD413C8F
E45D47E1D403E1937F41DEECE7E5FC166ECC5C25B81723F35B6E2C376C48E13B
FD6CA218A1CB03FCB945FC24376A45F2DE0C21302961C32FE86D15E6D7C8B374
DD4AC964B2D7E5430E4819975096240AD78AD226ED88CB897914239C1FB71611
08D3C8461070445E6F16A2C5B87A779636760C9A55D76EDF0FB44C63EAACAD82
CB34C3725DA52A528B5F2D46595E0F9CABA13C6DE8A64BC21FA255C664192E8B
8D050CA8FF5186A7AB03ECCC79A923BBBD362B788F5C9DD0A21678CE95F86EB0
E0B34512888B67CE482A44888AD47FA1E523C17A201E21DB85365DD8B855E4BD
A6A34B1F1A75D038B3D9F60F63119EC9FA765E6E318CA3DBEB24E584016D0028
6C69375E9E0B1B272B51BB1829FEDEA7A3D13A932AAE28816D999955116FB5B0
15C6D1321FD3A8564300DCB79BF86028FA508EA08521B0DEE85037F5D40DEDF9
8CE5BA1AB235E1190BA23732E42841B2BF6E2FF9AD07EFF1919E9BA90194E24A
69649F0DFD0046D2E3204890487B10BB0D95FCA6A5DE809558C5ED205EA35EC5
8EAA7D1909D5833FAB8D6671564F796B070A2B34F218D3C00F8CC890179E563F
D9E79C9FBB0F67B045A72E87355AC254508F6207BA17A89280FE34639833E298
DD429E5E03218E29844B569E2EBD6271DBA6A5B619FFB1D5441C2957D3FFA255
A16DCC32BB7BB54CE2DC59D6B5903F25A823A88C7E731F647895CECD96CA4A2F
B086715F0F6F21CC05DA1CE1392F29895BE53E4212079FB40AA52765CED0D79F
987D963CC392365BB3DDF7350A2BA1432525A147759BBB495C5D5B99EA24A21A
41A2E09B42D5D461FD91C88AD7CE0DFB5E45C649F44580845F0B7AFFB286FAC1
8078C9EFE517926FCBB34E12E947B51338114629439E6B8AB2B752FBF5AD056E
F2A9AC6BEAF5E450B1FE7D0D6EE6721F4F33BA41B670AF286F43223FF5EDD4C2
937A154FD01A8619131F6C724A435B996176C587EBF5CDB65E8DFA20E2077404
B83803AA3A4643B1A0FC052E929369E76CD017089645873DC47E51E1E4CB83C7
C6ACBDEF8BA575387DD0D73162CDDD96166F795FDBB33B64E6957AEEF5C17D83
2383CC11E5D6419158E31FFA9105DE3F3CE50081BC034F92EFC99C0E85370EE0
A0A93C2D221DD2FD3ED1A35B28385846EB372D926895B7B8A57F831F6379060E
3650CDB2C87FA552F5999A1FACE9CCB15D6826F49C36CAFD8B32FFFBEF97A93A
E4A3E58A6C7D8D18BD2AD151059F1A220E400E7F38B995AD9A5CDFC3B366F7A7
F361F9470E8C548EDB3CA0CF7B4AB632A511312DB573060A7E73001ABA76E395
D789B19AED0DA8E04B88C9EEEB2DB80D4D07B52CE914D9DADF84393D28D1C70A
CA3396BB25213A0F8087A08EFE3C136A19BD219A656D83139769F56B466B95CF
4D412DF23AB31EAA4548B4769A0AED35C6A162A2F8042E0762A936094AC463E7
526A427499AFAF4ACD6C6A475373979424F3A2E497487AA4432468CF994F92CB
D51443ED5564F721621D94678DFB09463FE15EF2DAF9BB3C19BE207736A8A25C
7AAFF1AAB5EB6BBB58BE6AD339C572D0B9CB60F17836462098578BCD5050EB47
A9F4313EDADA4845CD683F833C49DC522636D5B7FB6EF764097A17DA725C3AF7
934DAA4C9145042A3AAC758995A7355F79D0696406789946AD5E325197F08B2E
D6DAF07474FCDF67A10B68E6603A71D05FB29B08D5DE5830B2D48BF66CF1EDD5
3C5873765AEC1EF988F9221374D8509B9985D992DBC6439B33A20F5F03741B47
E291575E3BDB0305B7E996AC870C048681A32BEE7006163F27C153000E975E75
13D0156ED6FF55EF678A9F13829F5C336597F0A2025CD5AD78D6FBBAA8A9D5FA
08DD485C3B1D952361F75B6CA0D9B4B2177EC8A4F76C9B6DD93C12E49D04DC07
1AD33B118361CA862E5654A33560BDEE0EFA73596387C452421EC870435E9B5C
CE6FFD54A41EF225416BAEC7C61A9DD8A584A75FD5AD5AA0468323052D1205BB
E6E794D7FC7861CE26BBD7B1080089A09EF7487C5B23731B3E3C83CA192A5F5B
CEBB0A6708A1C2E809B78A6F7C3C88C96916978713CE5052FE6AC212A20E02B8
6BE559E9AB16B32D0DF2464BE167293ABBAE194FA860BF629EABFCEFAB8D28B0
DC8D6633B8E67BB0EAB7E9CB648FB756B08F3A9EEE2AA9151C0B5BC8F426FC26
0ED5511ED5ED3EB0D122400EFF5A8D8743FC64B26BF9E44921A707C2CF3EDBA6
861322B03197426A1A86E9150D3A1EC4F892A2F092A3E45F5E98B04F46C2A763
DAFF6642ADC1ADB069D7BEB4251E00095DE4570C8DB66373ECF7838754B13556
18B870681B3ACCA62C7535209C546D9201261AA71B05F2E629B32A53476531B3
6AC6458551956CA08156AF9C33D3F192E19D445B0CE59CFD89084011AED6E918
BA1FC040AF011A728FE7ADDEE2A72866497FBBF49B8FDA5FF5956B77E26288E4
F97D9C29E03AE381D34ACDBB00E3CE315A4B8A69682FC8663358A8B205832879
EEEBA63035395B711D887D314BBF92D3F1CABDC48E9156123182A8C9355BFFEA
19B66F88C2E08549559AE4BEE134388BB171D094B892243D05DBADA8AF7B5557
4CC26F4B1DABBD0AA237447854D3CC7C8C48CDD889C389D35E4D4BF0BCF9866D
E8E798AEE276B5FF364A289222E6D4251DF41E0518AFB4B041209BF77FCCB5AB
DC05E978BFAE410EAD0B667BD22674A4D2FBF20E45EBA5D846EF69573C5C757A
1F12F37795F73AA2A50EA7671125D3AB854DDD7DC1FFFC217A60BC0F8284D412
4E5A355BB7F9168E861CDBFEE4C98770C9340589046D29896E8D1807150C2282
F11907184A43E192338977159D77AC6BF76682B29B82D49241BE743F44B94E41
23F330E87EE1DF050E94B96E0E045830EFA7A23D6D7EA98B4262F9F5C1186772
E4BB26D59398A63538135BC312D0784932BE8D96BF2009528DDF1BC203377C67
CA2A599F1F4BA039BBB26179F2A72599892A0016821EDC6BE3FD98C5EF08ADDD
F69890FB2039F35F223F154C1A9FA36793CDAF2C98FBA727B8BCDBC1AC8C3EC2
D1569BE951DF9250770DB3C4996836EB36CCA89B5ECB87C67462CE46FB1F6012
45917A88EF37239AE1E64620ACEBB94FF5664A8B29A07AF0C8BA954FF5FAD579
F5AB59E3E886BC531628CD9FDA87188135B3D6CE0F29B3D5E39C9D5C62A298B8
BE48AAF79E7C22E2D14BDE2E5D9942D17B627CF1C749FE8F1D3581BBDFDA99DA
9966795B0AB5D098057BB2FFC2399D9F67A7A4381C92831862B1C4A68B8F974B
CC432016F24F184298438154B603E4AF54350CB8CB8E904E7535440A06549348
0FDA1C5553EB7D3841B9FD401A469962DF6BE268D3CEC78F0CDD5C4E98E05D53
13AA0122DF71AB6B4097497EEB38F0219B7ACEB0DA2442304FF353060D432603
4A5CD9EC8F710303A3372CA1DAC1ECB83AEF8ACB06C7977F5BFC46DE9A856EB4
0233E8396ED168B99909F4774CB9E46474D1A0C405B5D3394AFC2E2FC73EC0D8
693A9561AD2C3F9E2368199E9CA3CF34E140D7DBDF0CD2C2808BF33DBF1DDBF3
09EFC2864447914DF3ED2C719753BB1EED9C435A286F422A96281CB22A04A78E
F3F2DC126FF7A05EAE5E13FCA6E1CE59D2E0E0A1A24075AA9F2EB2A871F588D6
AE9A8293FEF7E667094888C4727B20698DA61FCA9506DA63A051A3404D96334D
AFF3A84B4AA0E78957C95F4757BE7B5E2246AA9E837F39F113D935DB9E74C2E9
4E865092A8903EF51E091BEACB8ED266CB65288944A5351E6CE205497C7CD0CF
1764834C8E19FC6FEE6D053776150D5B340DB70968FAAED1226A949C78D17673
3CA14272F11D8FFE42C9877EDD26B9DCE4C271C33EDB0C544D105F72949C4199
9FA96E8674AEF974C204054B3D7DDAC5DAAD49D3AE53F560771D493F83C8EAD6
D875F8B1D7AA945126E46BB5B788713FB8009CCFE62C17E001C9663FD0AE8351
CA80AB4E920481716E9E5301A9C483A41C4F88EA7BB624069C9C4288D7C77278
5564E019F13CA5B5076065298DBBC12087570F4CB1612BEFA1CB71BC1CF1E1E4
2CA7644DAE010536B0D6D72D3EBD3C54FDC10616768487E3FA1A4B633CB6598F
3F77F3F0723B3CED8B0436C6090F06E79A8BE6B9EC347BED7AC15B9A3B0CAF76
A10B60AB33B369EBFA1BABC1CA2D5134F45D29A6B3466696347DCFF0347BA427
3054B8062D3DF6FF094944A7EB1508D679FE6C78EA43F8CBB8763319637257BF
B4D343104C891292AFECF8A055EAE81C7D2B8D845D3F92F70C173FA2444334FB
5421F839B7FE61A3E58CC805DEEFAA3AA60BB3CE6D39B62E74D162022753ECFC
F0A21A7A4DFEF217E907C79DB9CF3744EB03FEBA08935FE07797623F8880D5E2
B1D9C87CDF16AE86047B3D6CB83D9A71FFCA7C6312BCBDB6C2DD778AC3CB9698
5BDA63F16670B196300B47BD67CC8C0C1792CEF900D2AB0171C483242574D42C
3CBEE053515E87D6C4094BBE3F2AA63EF2C4585BFB7318D42CFE278CA6866BF8
1718901D53F6E6BFA4E63CB1AFA9A96D3518E5AD9ED32CDFF084D1C0E48BC191
1D4BC8F03084DBC222062695EBC2322303F2F233DE2163EC110EF4B8FFD3E82A
1F2D18F3F163F77EF3938D434215081269F715A374FA5F84623E10A2BA408EC9
E58416E4E063B6038E188C8600586723E2BC939E5DE156685493BDE54C0F85CC
0EC17EF505AB4D120472AC822B3514D3C73DBF1486A8CBBAEA93E17A8FE6B6F2
BECFE199946D22396E06DA8FCA17A058A976C72E9D95AA2B96376A3B83379B8B
8ACBACD4C14CAE49D3AE53F560771D493F83C8EAD6D875F8B1D7AA97E0046812
CE43B02B9A8F4A127E7C98CF0C0887861FCB647E6544A4F7393C18B2E5098B1E
6B0D879A638AA3B43FB9FBF4083B75C000F0A56FFE04BAEE21591AEE7E8A5E77
78F334C4E5AD44BF7FB5BCC56F8A2A99AF8702B6D030938BB82D3A6C8A7A5067
A7C564BF22F7B8870889F3FC139EF250FC2A6B8179F719AC6B30787677BDB2AB
4971538878B4522D1AEE2980FC421B2977AF4C08D2E2444E3F0CC46869343243
748527080265184BBFB937DD2108E0681778521870E80CEA2A87AAD5CC5FB7E9
D98C7C8D7F27643D015A4423506A9A2A9E1CFFF12053445D7A9181F685FFAC78
6ABEAB809427D3C924672E418A82BA95EBDC70B433B74131B5C935D70CE9DE75
407AE7A8AA3CF719981FD9E8EBE567A6010D7D07A8BDB9FF4DF6D881CCB85B91
B03BBB90B546A8132BE0FCF7FF5E396BBD869E1C46E86FE01EB1933E3D0E464E
5C2954470D1D1B46F239D6F7BC4BDEAB3579B57030F0E4B1F2BB0827598CAD34
1C90FE154344F677A4930BEF4F9CDE56B5EEB3AA469E3B149F0E450313D8BEE3
496EA31276759DBFFB7C70799C8989072BEBB498D8C5E2CB31137B0D89B90345
3F5F150324F5348BEEBAF5BE5B3848DC05D38764669DAA35E748AE0594653E8B
CC03F4311C6D23DA238771D8272321CF91BFA1122D03C70C03D0DC795CE5DDB4
4C56D106B4FDE566BE0703C2CA5B82FD992F05643EBF6ADC535A4E3B2318EC04
17C39FCEE440DE615D0003C4E7F4E753A713F08859C89CC99C4ACF6D86C36FC9
3EDF1522F954D38FBDE3BC728192FCBD000AA0BAA310D533AB727B9F4266ABB0
F5AF2002152CF5437211001F065F8222E6DBDC90F2FA469D52624D138C3F9934
52076B780A4D5849C6C3C8F27C4B20D056F0ACCCB56F4F02676C1613AE8B600E
9FC07E413EA2A6BDD10AA838C77449646501B29DB4188D9E619562425934FC8C
45980DE8A8D8AB6B8AC894D3DE5A078C90AC489D62F4FC83B0F4F6E65505372E
E0448D27205DA3A7F139CE79722EC5C5699DFB6B9FA15D6B77C790607BAD5062
594504125C535951E74E8B96CE47DD0FF3C58CDB16178901C940AB6C845D0691
E788130039346F91568267EEC9CAE1C6719B896BD42190C967766BF4A055C142
3A62636FBD5674C959430E6CC43600F320F3FF621A525D787900FC731383F8CC
9EA8CE84962157A6C3D4B1957D602180678D9C6EC42B5E75F6056BCD4BABF9D9
2397704D38E49F5FD9A7244024B98045BA9718C8831C7C76F763EE8D2F3A5395
7EE280C693528EB0A092D2ADD7D2FD467897CD938C737B8153B58FF3225F0605
55352FA984F54C412B76E4B425C8D87D356FAD187FBC167A6ACBA71C7E4AEB73
E06FF57AC002
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AFD6391E81ACC544000E97C2E4598
BC30968ABFE8C2E76FF1EB04BB78E7BB3975C777E2B2B1896643B51D2D25F3DD
96B454547AA6E39E704842B17E1E8EC5B2286FB19DECBD09D239CBDCECBF8458
FF1AD9E18F9789B2DB9FF2CCC0EEC5007E8D72ACF2D32BBC4DA955E93C086058
929DFFAA13FE99C45BD3E6D13E2003F05703B4ACAB454C6CB74F0D9C95D628A2
62AE0E744AE5D671CDB05E4E8C74D5A790AC0553B856619A14029B25D522EA41
1652D9A54F1D1B22718DFD7CCA5443327F61192D3C6863DF4ACB9C745D059C0C
2180824BAFBDE47BB46F54EDD7D7FBE6BCC41760E7B2BD1AB594E30D797581F5
A0E81AB0F7A6DF463EA4D5F9F6C5D3CD3A1EFE3987BBCDF5458684C134520E0B
2FD3B7606368797241B5BA06E19BE70F4334B48EA578982D5FEB53407BC29192
867A19DBBEAB1696E0E2C1186D0798C1C3A319CBA04421D3BBFF8D46AC997C8E
D678DBBECEC95B1E3EB16DD6D24FD2977DAE76EFB3687808DA0E9B042362B27E
CF0A649BF5B205854F9BF1F07A7DB49C5C9C8318DF97F1C3266753287FAA1AE3
8EB626E9A41CDC6BE62BC7BD4BEE941EBE1E65D96A80F79FDE63FC7D2A4A9E53
638F6962857CE95295B3979711C27FEC43D0CFA62423E3A887063653C1293AAB
F2A0B73E2D277287B0DE8906A1834FDE86D04C3628DA1704EAC540D5161E29D8
F48248F12BC8F71E5D13743E21673B750631B0E76083832E083EF17DE3C42A87
CFE2764E7D35BD18745DE29942902818A35E1689C4D588868A4F4DBE2FBDBB4E
975D99697D88EC5151E72495313A6E550D7779D1096790EB7D8991E2D2BB4E21
A11351A743146106BA16C42008E18377AAB2DF1A89CFF0B8C260D0E3D67FBFF2
08B4187A30472FDA891AC27D8B5D72653D9A62EF76D4422E27F4227102CF7D56
8053D2FCED2628C2FABE2E9DC3B58CB03902239861CDF7B3A3F5A507E82C8FBD
F018B09AD469B396D9EC72DEE0851014EED2E225B5250B8DC675A965AB15DE22
BAF340B62D5A31A3C33EC92BC79127EB92A645A8BB4AC34F523ED82DD7C0F29D
355FF45DCF909037377E3C208071A2363B931547609285DAEB0115E4ADAEC5D0
A78F7357B9C86BB64C2AF0A7CD1F4C8AC461DE1112FB7F1CBCD9F5B8013486E6
3805C702A1CF8DE193CD5E42769D1F86F927B9752A982E8E4105559DC68B52DF
7F950CE1BDB15548CAD879752198F0164826B51CADA6D39CFFDBA38C11C7238C
738370C48FFECAD185DA8A80553F052F97988D4B276110BCA39FC4966C89AFBA
4F271732429D0E7D2F25A4CDA2190A7C4D93983B31DF2790637E4375815EA4AB
E99BE732D6518A5246875E3A7F03DC50F41C4657934151303A0733B90F17548F
0D577DF22473C89EDB9F444EA9DA277A0ABCDA203F740CA2B0C9E933F4163379
B73B74804696B14F0FF5D9D466D23AF71BAE6A930CD0DBB6AEB87F68E2134B52
6E051FA41DB96312F8B3A7B26FBBEFDFBF09F285EEFDA9A67F1485846B76AB69
AC3CF1E3F05F8C6E948A10A79CEB76E224D8040F0F0B9CAEA61576CC7CBCCB3A
A8FDCFFA53984F2C2E5939F7FB2565FCC3317F1081853264A08D943B35983EFE
C99A9E9E4A7793BF6A20B23B7CAD2C81845DE64C387FC99825237C083D5F1123
B34333EDB0DEE3A89E582539DC0F2DECF50026C2CEF2E2F9FD057F49EEFA89D0
33602D3A66EE38027BF500C5BD07AF6032D13BE99BE23D6C9495017704E9F90B
CD8E5E60BEC4D3AF553CE3874702EE51D1A7861FFD841C6AEC94CBD224C356D2
963C4131FCB36482DF85E9BBBB122BA238ADB15F6A75F8109E9C4CDAF00608ED
02B3E24B1C4F7EAFD43D3A111D7AC375945F753981CBADD8939BE7366D1E3226
749B9E23E4C2AE4B9E9BEBB50861CCA95504DD63423BF603B14459B7C691BF6D
FBA02243943EB3E77E6CC38DEDBB2DB8BE7778936B7307A9388D0521522008CC
7E3AB92D3244762ED374AA7B54F0EA9A1804A05B350671BA8D9838EC6FD9269F
C73243DD441D1DF4B16DC2295F06ABE7ACED96009E826E0F3DCF1A942C82E3E0
5B19390A1775D2A5F9EE021B222561C8B58374934CF2F01C5EEFBE63A5C3B6BB
37221F7161690C6FB6BD37D5F03F9314772ADACC6485F217715F3A38F4E2593B
B8E389E9FD4AE99F5A8595EA84A40177BE5E51E570BD135E3CD4C130FFD5EBA5
C7147680DF03796669FAFAE131D0C9EA578796B4888095E725A66DBB2F8DB823
4F076977B2016F185EAEB3B74487CFFDA64CEF6CAC90369FF71A3EB16EFAC41D
22D1BF4B1D5D3DAFE4F1EAFDBE9FA317C2D84655C143C4F74DA06BE8D01A7E78
33FED6D84E6F6554646BD59A3DF0153E0AF3F6EBF79F1EBBFD8FEEC4E60FCDC4
BA9A420DF894BB5C4E79B02B40BA7AD177E43BD16807DC6BD9C961FB6CCB5326
F6045E865EA52BF4398AC092F1A5864F9DD3E99FF86035AB920A75A2102905B8
CCB2F61255AF45BDE940DC77842ED5429450A21C9EA0419C3A9D9E4014CC17E1
7E0CA2B8822A925B3BA29EF6811BA54DBC158618BF04C375EE70D7C0C86D9C66
ED01B85534A1E39BD5C20DE216B3319D7DF35B1E29EA8262E689C525B0B94C21
5C4A9E2FE111CE34CCA25FB27B785ECF6A4514C85B1F12FF227948536FE0B4BF
BE38C79866BCD14C2C92449525BD879F6DB405A73E92348FE74AE5B8CED1F61D
E6B4F56754BB3AE5F194045B6F79C061DF17BFBDBE2FB8BF4BA63A3638F0ECF5
16B4E2977709EDBD3DB7AE516C55E742F598B2DABC3000C9F67679D26D080195
21E472CCDAE5AE3843BC316AEB0DCF37DFE3C79EDBE00878008538C79938E1D9
AD16F69FC8885EAD2CAB2644F1E25DF5F6EF5B5ED1EAEF90FB0BEF17F7C10D58
787200C749BA0DFA1F5945D7C6569E0B58AEEA746AA0E2543FF09378E5799447
F93E2B54E03280E403235E6835ED221EAF81EF6581C6A8567074C3779C8AE4A8
9B2B8ADCAAFC569580B22876B6BC6FFA1560B468313DDD88F2C455E920E05E6A
D03A0A3A08FBEDB4CA29BC51FB2BC0C62CE1B3FEE159A7BD1D4BB753DF3C8BD1
6760A91B02D5E8D679C227DA8E3207EC118150989F4B398FD87BC27EF47166DF
B2C258B6D592A29818EA9DF794371055BF064C172ADA0D306BB9EB42AB72B1BC
18DBE1A9FD79B7370825AC355CD86B964D203C3A3D0F6A0A2483964AA9CEFF0C
08B845AB92F0C60F4F1D5E6B9BC246FD9A961E9FD64DC2A3FAE09F250FC386DB
C76C547464EDFB81F79E5D7A9AF1DD9809395FAC890C4BAE632762C6E7846A02
E9EDBDFDFCAAAA054794FE3D0A62701D18826FEC47F867C4FC966D23A12CD3AC
D5856A628A9B0EA9AF81B6CF75F8109E9C4CDAF0060C2EA82A3B2D14EA94DA77
871E3E5DB662E87168ACEB217EF80902AAFD2B6018DD0680B43A5AE7900B4302
7AFFEA7297EE576202FD04008079F09BB2FB82B1D1E2E2E92497DD6FFE8D8B8E
C081349683FC5E1C323236F7177E24F4413C0DFAAD91E9C3A38989BCA560579F
6436CA69A9C0D4990CC5130EC9F6DE383C674C24816DAE80EE6BD2429450A21C
9EA0419C3A9D9E4014CC17E17E0CA2BB2AC4425B0A4947CE3C4A3EE986616449
FE094A5F949D59D7F8607219A13C7B03257D8CD384F37EF0877323A2277B95D6
93D287C2B543AF840091D69A3C1C428F1B9638653238844F5D1F36E250DCCF75
A58E95F774F78A0CE22E2C049A42A9F1E6A3512C0854EAB18A0ECB0B833BC32E
FAEE34959A0FD994D2DEDE8EBF3F64D09592826FC23D91A39EA1E3B673DC2BF7
9331E978B15B5319DC10A69081F7A1CB7B7BDAC189A0568797D0A56138DE4705
202740D8C45888D4A0CF8AE610E7017E11E78CF5E483E8D246FC0CAC7850013F
B3F1B075D4754A82A584DCCF056FF421E1D03B98C42383BFBB1B6F3A10C6B569
4E9795EDA70E84CD69619E0AF03FAC93C2E1D6548D31E726AB65654709589BAD
7ED0B102A25F54F490B24EB3B18C87BC21D801E702649FBBB3F049FE4E20CBA5
D8C08F62BA17383593E09E377C4C208CF264E9795059F7A9991F6EE897A83CC5
C62020B979EBD844943D7BFF7A328EF957C8FD24314D1A4239B2702AAA0A8F27
EC86192E30A5239A449B6DE94ECB76E959A74DACA2371F0ADDD8BC75281D78F9
DE05C1107C077ECD6D1576A4D235D1B0B89E512B2D3012F3866C79D6AE577A37
84FC94031C64514BE9CE802668954B4798671A94DBC963FB1BA1E642747F4713
19D7C93B4E1DF416055AA3CE8FF2CDEAA9239BADBC6A7C458C7EDA46DF04F130
23AEADC4339C9309BBA8B4A9E88F797B63F8B88D3993DF03455C8EC978A62A61
C1FDB4CEF84137FCC3D18137814A925F1BF8896C4BB18C575A2D7350231FD559
3F3197223C9BC7351798A1A62A0A6F8E820ECB5FE4ACA6A493180E0D38EA51FF
083F9F446B590A71E50901E483119FF0E94BAD11B85B1B6F95770B364CF19DEA
920A1DED65833D902A666BF5E7FD4AD8D5F07BD93BF7D3B878829E0C4DD9D47E
0E0DBF8060AEAD5106824D748D9C085BAC95E034A14524CF9F0BD77C9459D61F
C212A9A03F9BC4CEF9E489F9739A2B43BFA2363CA74FA72668FC761D1A17B9C0
B62AC806E16A8AB4FBBFDA427F0F1101517B2DA3626196B795B23A10008C3CC7
B00759A302D9BA29B36F82EC47D503FB08A630AC4A0EE561BB4F5B83C2E21CCD
543B7A05E8C79FE8C1E98BACC0F699453B9DB59F04031217266279F528320C83
15D01C4D94BB8BC0A27D0FD58B67B454B8D7EDBF8D085F08DCEF888D2AF7C317
4AEAA273A07D17F2B0E37DCD480B48A201BA66A58A84DA57AA4E2C40E3FB3EA3
20DD09E3D5256DE65A1E79784A80175E3EB7EA60A766D51B0A5412C2A277084A
A5BBEC4DF7F4D7DE91A73D608C3879CA50A4F2CE56AEBA0646F87A93C51054B1
7143538D29199F4F9E35E8B46907F061765E91235B0025F5169291029FE697BD
123AA4EF021B951B336B163F4D72FAF2D79EC8F4D4BF3D849D27EBDB2B26B19B
2515829D461CC7AC00155E932FA3F5B34063E50F0BCFB83FAEE7B897F107662E
8467FAC8D9E2AA0F906F3EEA3CB66AE4308FF3FD9BC08AD8AB6423F926F7D562
184EB2C4E569A1AF7B997F72685DAABFE2728E8C8589641519D950E9BACAEFEC
61BCFFCD4E2F3975C5EAFB95B457D0F676F11979C7744E54E5B0088835B64AB5
BD2DA32480DEDBE384E8DAAA2F2AFA130DD7C6471FAC0F1132CA4C9FDF536ABD
FFA429B820A82AEE9A73D7DCF77715F2321C6361D12879D78AC6396BC3936BD4
0FF1476BB55E449A46CC5716E1BDA9EE77AD3E44DB02447082F9821C4E0A769E
95F93F6629DAE30D14F1CB9EF10560995018CE4ABFBFA159B07ED5C93D976CCA
D20691B072DBEDCCA3AA5539707FA4F66CA2DCAD809025D9C1AA2A57A4B3B956
A1444DA414121E2B5DFC77321139C2D9E0760DBEFBF5A18E58BFAECAB83AD863
25CD929D4F12645109C1C632470F3174FF45E3ED18CD9C67F9133502A41B07CA
A621480C6060C5D9EFDB354F6605B75BA1A17BE4069C312C7983F0571972D8D3
EB6F94A50C01C37395CC8219445360C8081081030F8F05464D998B930B8270BF
BC04C0608395A9C2BA9A03945E029527E917F17E502BFA0D7797AF86374130E0
E7C7A57F1A67B6246167D49456820CB89134E4575747438DF6530A3C9B160D22
5C166B70710FA6EC22C046AC5CB2BCC5DC000765FEC64A092F84693C235F1B8C
2881C0B5DE6686F7BB6C0533E114567B0BBB71284EC3CE8741D3F72EE026A51E
6EF714874953C2AE7814156FF57915D38E8C60B6B670544FED596BC92BDCAA8E
A2E49BD9A8EE1FBD1281D25916102BE37BB3E62B8D6C48C87FC9DD73F18DDD36
12BFCA73A8E3CA36B57A2CE68B3C7B143C3488E373FF96A5AB0E8A2D38120B85
1108F27CD126916B983B8A83BF9E6D8822C4AE221AC180CB85FD2D1D509FAEAC
3A4BE570EE206034708F5537923555DA1A156E9D24622012D44A939FC0369445
6F44EDF54D76932130618A289B437E0F537197F419E6722D0CE6D6DF74F0B7E0
3292B4B54E43ABAEC2B7C0571AF6500A26ABC849FFF0E9969FC293CBDF7584CD
B5EE03C5E792589DC8B9172A0752D4E0EF8B8C63299CC1D75CA5AA9DBDFFC35B
8399330235BF13206A3DA1E39216BAC70A04CCB4C093854AC741B5D7BB35B6AE
08F49AD5DE3716C5B0A87BC7ED856A77E3AEEB9912B64A51EA5E777974A0D88A
7F5668837D1D8504766072E48BEFDA82E6DC09DFE6D18BF866903D3C694EB91A
AA50A2EB286F093C2A4F6B9F0BE52D4F1F2758EC48370EAB4E1BD2922F11B702
0A2D36E903F851A54EFE91D6C9987BD2CC61D2DA2A30960687F2DCF03E8EC3B3
355440F8790AA001ADC928DA5182335875E90BB3CA6110F6D46D625F56D0F9BD
7278685C4CC54FE1C1C4332F05F5AF14E70EE5BBF89FEDCA6F80E6E4D69A0DFF
99D86DC88F11FD5FA519EF93D1CBBF29B5725D3B98A08FB30B03D9DF04996903
F66A73B1D3587E029313665143C842566C031A2C608685CA35DA36AB230E3D91
EDC1384F92AEFFB951427ED3847F7B5095BACD95228E1F6EDD85621B96436244
0AFE48BEF99438A2EF8990A519D704A287889135BA6A1B20E5C4F45C6B35F7A2
56EF60CD7D35794F55D34C01A60C89A60B75E13BE96A55B5C8FC60EC19DC0D17
E297BE26924FA11DF82786E17CB220621E0E9C2118A055DB5D7329686A3D22F1
2830D995534A8D82E4B822F07B115F3FEA604CC50026FD0FA59A0D93F91021E7
A2A4339CE68092A01E67F2ADB1429C4D93EEB6C7C34769FC0C6B43C82B0FA5E1
0F441BADC966829374E4CA55CC716EECC58C02FE11A57B1DC67A714A1622BE0B
0386C2CF0929FF099556BA5DB7FCB6081B9F3129D1B5EB155884C30E653DB529
1F6F4BD470436D8B76E381F808EA32F31C59472D6F58C85D379F973BD6FDB5D9
614FFE4770E2D1412FE0B65AACEF937632E8E38364F3FCC08853CDCB028B1A0D
B9031CBD6D78E210D305677B9A4739C67ACF82AAC21A11C97DACB95E7BE0F455
DE58F95069B5B66DF4C58205AC95BDCCEE38F5EC170D3BFB792D2DDA7E57BD2F
B7624C1D59B05C81BE2AD99D3ED86668487ED31BD3A28227912E826C1BB1FB0A
FB847E1B1AD35A5A69F32289DF6887007FF162F64ED65962C52C7A22BF7AF3BC
490D23D45CF0F7878D974AD04A7709855C5CD59F6C2938DEAF61D75DDCE7FDAC
F0F353A56FE4CD66605034790036208E546F0B7A2BCFE2729390C6BB9610D94D
5C27DFBB1F3D0BE971812A7A83450DC0675C45C27A1E5919616751A5A80154B1
8B9919E7E1A053EAF0914A14E4ED9ECEFADAE921575CF4A518C1E51B921FB8BF
6618175BA6AF0587D4E1F7AB4D2E45A95067DCE9D17E2A3A9C58FDBF06F3F324
8B5454ED6DC729CC5070524D1BD06625989E751E23C654F39EB341E94846AC98
A5D88B2692CB93D7D9640B9469F723C84543BEE989037E08EA781E9E626396D8
0FBDE4CD2AFFA87A07989342FCFFE6F2006EB0C32DF297E3C109D8279247B1EC
843A51C17F94F36D133A18082828A7B9A709172FB03C68D6DF11540C3907E789
5F3C8D5E18DB981078A9A3703D7A6C226BC423F665E5B7E7721E07C9503B4C3B
78FAF1B1BE5B9FD0D277D5AFB48E827DD0B979E7FB21BD57C7E351F9925FB963
49F8D9786D8E6FF03E9C4DC3DDF6A1B47F35DCB2708820CD830CB91013D63E53
F9A491D7B9804A7F49654F2B9CC5E6F2006EB0C32DF297E21FCEE556A76F3259
898B56A46537F645070F1AB8B51FC2AE9E13D35F87E6E91140E84EA48A09618D
EEDE0B04BD7B8DF1AD6320CBFD44AEDF73B875695A5A95B582AF269190CD7B60
E99661637070DA6B60528565F061978FF3C3ED33A6A8811F310D35319E2C674C
07B0C87EA3885BC505BB0A5E9A34DD15456438FED1B333FC882FEA17CE5ECA50
FE1EA1FBC06952599448EA77982CDE7F785031558DD0ABF07BD76D395248E914
A6496CD9BE43DA79080CE4579CC90EE3E478D05B769292B48547DC3D2CCB95E0
9A092BB032235D12CFF265C212EFD14EC183298277594958908F504AC85C7C1E
25C98E92979341A8857C6032426D3A136C52372966D0E55F48B46ACF927F4718
34B4AF7F49B9EC21180663525D6DB5D83E17A2EF9D954C1DAAD9BDC21AA4FD50
63AB7EEC2FC100F126DBD977068AC186C94D6BD8EFD4C88684059A8E655208D3
1F95A44F8808F069DA55BCF9F07E996E67B1730C0D64D471BDD24DCEA030ADAF
41FA1C161BAFBF18900D500C4CE3599A4B186761667B6A458A1ABAAA7CE8CAA4
5A9CF32034CD2106773B45681960A6F118E90B180B45D06B34D1A0C76B930E62
BC3A479367406B8CE651196D0884211D48DFB521FD153313C5E8EEAB50A68488
2F5AFA6776BEB4765C6ED70B6ACD056B627687D3EE4AB64AA66E7C7B7FE2E7C8
25292AE921701C915003C885E577E9097CE4186BE217A2F3DD405592B2E24B4F
C8353951C0A335B53F68A8F8286A92FA471230A8942C6B0834FB86AD04CBD023
03654E4D1CE1ED239961D451D10743B0521AE48DC71EF5FF7BC09D52D37FD873
378141C0D5E654274F0A884B4E81A5864110306533B99DE6891224A5614BF4EF
1DD2FD31DDEFFE80471EB99B4C0C0FE29E6DD239D2F234D71DABD43C43AD3A96
15ACDAAF2CF94A6DFE0713DB9B8CBDC0D146C731787B3503F6B4CA4588D5430D
D9943FA6EE299A4FDD63A0AA4B92B0A965BEA31B1EC7035C2A626853C90F5CB4
9026B9DC09081469223AA0219763C2B44F42600428EEA725439266F3EF69C2CE
9BE14383542B9F6500CD2EBF10E0161CDFBF8BBE8490F57E53C78E97517EF7FB
7EFD699BF7EA521607C9807ABD8B5F2A41D9D60E8E244DF48EB59E0F97561179
C2C0F08E832E2DDBE7C66ADCEC018DB5C885FD668F97C05F88DAA3CD94680F00
F80DD1515973C92BAC49BFBA00A10BF490D04A70AB71DE0DF3C612B186A0B1D7
C64DC5ED7008E21ECF5CCA202965C0AB8D6671564F796B070A2B30BAA2A0FBEC
B0B08026E3115CDBB71E7FE4EDD914479131DA5E46339FC63A949259C275415C
6553AB46244851A08753D90DA82647B305ABCBD6C49ED9DEE46462D60DC81D18
E5FC8203F851BF811AAE848B8F7F77D5075DEE3E677A0ADE9BF8F8AC548AFDFF
12971C763213CD78183833D377D8864D6728D3C22DB8C50BEB32934270702D4E
2B9EC1CF784E07AE3970495F000C428D6BBE99009E7BAF7BFDBA7D2F9B0C79E4
635A10CFB39EE250AD0FE6F995FC58CCE729816CB5CAC247DDC93659FDCEEB82
CB4FE56719EEDE81E652B0347C8D04A059F61FB93A48865418753F044D70B536
6304116296EDC47A40EA032F223BAAB9872AF546AB78693C639B5AAB5D013CE6
B3FDBCDF580F63F2F8A60EA6030C5280EFF0AB91AE4F207B82CEE5D4CDFFD54B
90CF0768E577C0CB33BE59FE62006DBEE6FE85CEF7B9E5F653AD3FD76A70C5B3
5A2390E5D223AA7FE6D6832E5BEB7383E249556A7D03753BA53A79CB1250FC50
06E25BA750372C86A036185BFC21BF840D007B753A182B0BAC8AB381658DF108
14D8C2A0F73A00CE6386A98D901BB47DE5D3C0CB6239FB2D5B4AE3224B3AAB6F
A65A1084DC7B4B8770D3E62C7EEA9759D337AA244A26E91F97298F2523123F4F
6B60F5114D530140C3ACCAA210B279F0F086050DD553553B3F87AC2CACF43758
678A62E78DCDA3D406E10B619A2FF165209606EDBAE29AE2E6389542AAEC2E38
9E9C3790ED94CB2CA47D3F8CC1550B19A610AC87D4D4B0A80797BE2BC7CA32B4
5418AD2822EBB381ABBB5AFC1D04E64C363AC76F86496A5F09F4423FE21D4D26
25E646CE72588478BF941F1F7641FC1B9920AE84C085461C1F5C08F425117300
1AC87A59110059AB6528318A5DC7648A46AFE9EAA17E79A2B125EA7294E8419F
8391DE31E840A11C866CC356BFB3FC77CD894C96F3C7F54DE88F3B2346FD3ED5
406B68B436B63A38B3362BDE4FC9E600BD41E30B56D88F2DB4AAA3A157C174C6
FCB236E69C3851B68CC160A319BF4831B80978654682C61FCB9E7659E2B0A319
D5E77A57BA9C9BC5BC773657737DB17709D3A6913793DE0357BDEA11DC22EBCA
7E622D460701760E7495135D6EE1215286E75C82E51911DA542E1CB8C3EE8569
817F00EACC5F0A8449DF02728011A4E0F2D07A01A0C7B27C86A5A58A0F460C71
8F7692B21D5348E3F6FBFAF7313B1FA589C0DD6CAEB9F210D26FFFA12CFD0E92
47BD4F2CE894D6189EA604B284D95B8A5DAC624EFFE6B1E94F1DB5B3628E247C
F97089938379CAB93ABE05747491570EDB80902B818F38BAF0C16ADFC9E6BBF6
35DFD8CA407A41CBA205AC0B546981C0AF8782C30F4FBCD5010D94DDA30568C7
5286BA459A1DB7A1C0A3AA55193D4601EC0BE3CB303E06CB7497C53A35978D6A
C89C5D7D115D20015326BBB45A5A15029C9965F8BCC18F2DABFE741402AC62AD
C049DF79AE018F6630C0E0ADCBD3D1F3B66962A7C6579DE0654DFF2A817EF500
183246F0377048C48AB0D05E92A03FCD2968871D1F7D822A57E0BA52FD682234
4E2682F728CC98F613423AB5921DE8EAC56ADB58FB18C27A41CE503CA9785D0D
14F2BBAF0F6F5FC3292A906CBC0E02FB4F43002D13C33CCE480B3B81118510A0
6852EBDFC8B36B510415BE6C0D76839FA5D28C5890E78A09AB656294A1B17AC1
7A8D78B7E1AE73774429620B2B32459D993861B7C566FFCB8EE7E0A553ED1C16
7611B98529389D46C775EF128E963F669D996A3A3FFB3A907F3A1AD2FFBDC882
822DCC10C607E79A7EC498DBBA04171F8B340312939F630EB41658415CF70234
6306E88069A03FB214ED307DE8A070E7B0B568F3EBAD15B1E0E2853C4A1A9EEF
8CA372E13339C772AB771A74EB93E3DAC78B1A952BCB3C63A9CB52EEADE83466
DDB87EEE621F8683716ADD7B571EF1F2F629D2BDD5E78B2833CE36458A686858
7A364E5DE2E20670B8B42D8C0FDBBC83D0067A8069A068E7AF13A3ED7E95F73A
A2A50EA7671125D3AB854DDD7DC1FFFC222C379DB50233BD33443FEED6598CEA
99A13F65908944C1958981092DBEC6563E7F0586F5E3892618A1D6D5332E1DF9
61F6E6BED4A1655EDC31C235D20B206326C7E16D16953BAEE179797D5517D206
78D92C7CB15ED7A628A8E3ECBA619FA6C38D9D27307FAC14429AB8FA9A5FA48A
F972A150148B79B16726D5BD1B6985E26BD50A3E7189AEAC860B567466240E3A
598E0D31B4BBA740CAD470DD95316F6A01DA7224B06AAD1687DBC419EFE2BDAA
09977DCD58675E2578A9CD6E1CECC57FEACEC6454D27ED733CAF14D447E9492F
907BD5AD2F14BA35BB6E9431F1DD1DC05640C1DE5509B5BCC20BBBB289486F6C
7E23899E25ACE8B379456632E7FD1AA490E97EF1BD458DF084F55A915AE1A7B2
1172D02E3D78E253519DC09411034D9E983245AFA24A920699BB1897AB7BDEC1
18119B191AEB9193537EA6ABB0D7B1BCAD28F9C18123A1C395DACFB7C53CD27D
32D83A216241DC8DA1AC3617AD77C899FE86E54B8BDB1490AC76FF84E5C60E7F
84B345CC06DBE98FE9E52BDF3CF8FEC118F0F9984A6D92C536995B673E238559
E26F468737E17BAD7FDD8DFB987B713930C957C632FC8F5816F21F6926B6C321
D2ED31C914BE552C85978977212EF17AE578C0B40041C3FA356BA823EACA5798
470B9FE2E3D5E8082CD99E877D20ECE6C9A7CEA474FA9151DA64C5A488EFD0D6
F5AE89D64FA5F2126CCA7E93636A7CCA2158B99A15CD45447D0D298520C2D069
8C337BF594D24900FECB672876B1927817BF9B0F2BE120B0C0F663659BBD1094
20C6899817462E3E70E24BD8D345F58AC350B5FD8ED73B010C1436113B251001
F008DE01DF02DAEDAE3EE928160342A97986A80C9B8B11A0C4F01B34DE02BBF4
A5BD6DD4517E81F30696D7EA238A39BCAB3E4F74E31F649B3D501F882982412C
22EC0C64A7150D6C43B9A09A43832B289811BE85DB55C3ECC1B8B7230CE67686
A55FE9B3144ECA89FAA6E5850BCF12BF60093FF7751C9283B62DCCC0AC6773B4
80BD24A600EFAAD1B220F9934FBCB5253548324C77455321AEFBA84C9BC4093E
2151EA61F538857EE97D7F11EC057BAEA084D203E197CD50146460DE396ACCE6
8A2519425956BA861357256AE824214183D73D7948AF179C594986C30DCAB511
686A2C699385B3CD763CA62DAF5B38469000FBF31BAE9CE8703754A099D21B33
2B5C132EBBC1F3A1419789198116202901B611D9294AA21C0F734A9E46C0D94B
3911FFA435B4560DB12A7687AA5698349CF23D26B47B9CB5B4647CAD084A51ED
F2A7B0E8A6A0B4C5524FC0BE438049DD58719392C09593CACD4B2A2594DF545E
359F2932DB2764780688C794121E4B01B74DAD86E4A3D0F951A9357BEC561940
7EEF700390854AB5B95E50C1281EFFF3160CF4420027766875008718F86EED30
1E9D0A5EA944300E794BAF7859558C7980A72D90BC9B72C3D7C59B116F163295
C36BFA0E83CCBF4AD413750FA4B723142BB074DCC9B55E3A49B384006D8F5ABA
6F66ED71BD85AC96EFC1974886A54D04BB1AABB29A4861C6EFF8E37363330572
B7437B5426761F4D258EAAC34ECAD9AC58CA06A6C90646790625A4E70B6860AA
9ABE07CE203B29AD861D4243441F8125409C3FA734449C3B34DADF947075BE99
F21E472F12D7A68B20551C36E556EE217DEE75884EF4B9C3F57CE4A450C722AF
53D42EECD5FC0D9343070BC392C418E2C2E237091723377A30F50EE2D9C8C41F
CF68538918F3FC1662493942C21F78C831ADAF4E40611505FAEC26467DD9F6C4
238A71C1F3511F227119F68C6EE14455FAA315C9B362B32A001779973DEAB1CF
F05FE0BED47B30B530014A62A5BBB1FB0CD99C8D4C0D16D50CB7FFF7FFD7CE27
DC637479D3849AF18E820B538AF606A1E5B1535AFA4F5EA4FF63763A313D3363
8C065EF056061AFBC8BC26B02365A1B2AEB8ACA51B5C0CD59F19CAAE0B2DCE53
3626FFDC2E306F95939384F0997DFB2891C651227B133F0F5AD372CD4F290E84
611217ECA70B2B6B818207D1B885F3D4D1A0DF6DD22A6A57ED89C7614DF9530E
47E8F9EF398C700948FADE7A6E4B2335E903D3CCD64E5FD86D10A492BAC74F57
4E5AF7CF7F368502B037399FE2150CAAA63C6A4A24A808A932650890ADBEF2B2
3765A19E316DE508679B11650697901D5FCF5FADC38FFCD6C57B12A0A690BEBE
EB3ED8F7DC2D8CC6A1FD45E073C76A419B2DFFD98E311BF3DB0D2F8103C51CB9
F50407BA5F9AB4B57628D66DF5DBE2E04E25E21781EDB7B1348458FD244321D1
260783F62056F07F1CA91581B42DCA574587501F14F9896DF0846412E34C00ED
449BCD4EA871649D063E2CE5B696BC0DDB859F4AFB10709362A39B325313ADE1
C864861B525C31591FE0FB24CB2989120951A73108C64D7BEBB8B281A82181DE
25FF1BAF042058A9ED80C1FD7E6B3E9BB484C9F9DF3B7FA1F7EE1D7EAB0A591B
DB6DFED09FC184A0D8511CB38A5977FB738EF528E5A5C68270349D8B0AD3FDBD
87AEC37D2CCA662CFC6116E1A16C2F5B0BE0C63F352919EE8FA91F78252EEF31
039ACB639583BB7E9903ECAEC93D5E9D3E18F4A0727068B7A3F92618ACB750D9
8062B2D208B691A65C8A8F44B35E5203FB6BAFDE6C3212E3535786D9B83BE18C
1C304C519E3682C48A375FD2B04168B39AD3C53C8654E8E23C953200D866EA0A
01185A6E4C231D51CD3FF3F50476FDA3B4CA9EFBC64E7B602C70D63468A1BB4F
6640122F83DF3E501FD71376E0D57AF79FEFB24172087C51A5C15F3584FB2457
ADE1921AB10FDD36B5EBFD974244CF174721BE5651B6B9423DCBFA1829849987
36F71D9106F8FEC2CFE2F9771E7E48547D6A39C314F2E83B02E10784A852A329
89A63805EEEA8B14A64CFECA4BE02E35CD7EFB03AB25E770BCFC5B83A68B6218
F15C4945C09AA312E383DBC1FEE81F766EDF045650F2F740390CC6B05FBDB770
B3B8BC9B9BFFDEB6CC6EC816065439467AA66FBE0C4DA99115B566140A887F38
B905A2F05A7AE3B33ECEA93C48BEF14F004BC775937ECD5534581C30D545D044
E19049F6DDD3CCFD01619A9CE19BD06FDBF6335E8F2E9EBB4EE891EA43DBFBE4
21AF8BAEDBF3A6A72FC10B61B8BE77FE6F60B65284B5E57FA8F0DF1FE16611C9
64996021E6774FCD7FEA8943C2A2A3B11B1BA68D18F63A33E9387545A76032DF
5CFADB42D19E38339E950BC5C68153E7DC46ACF5BDDAFFE3B087CB9C42F195C6
11E4DD283D11D259D577245386EFD9D0A31D91BD3B810458036D1B0F3871604C
6B604B5A0FE43EAA8378AB9732957A9D5CFDB89EFE3BF0F81E3A6809AEAB3311
F7470D938741B0EF76828A59881A7C09EE6142863FB8A05C72683FA9F81390FB
04F9F1882BFECBF131428B17336244F880D73981AE467A7A4E0E2C19DCFEFA01
A4BF8A64B9972360BF1EEC326A2F4FF0DF74A4B25A71864FBEE6718D0EB494BF
2003C94399703199963BA1EE58F0BB95BDFC275351E342AF20D2F2C51592BC43
2E2D6CE84CF079A5DE65EB83800347D8FAC5D87A8871D0640D0ACC035008EC12
CB9FDEA3FC15E6531177833CD472420469A9908E3D13BC0FE5218E2CA81D5CF1
791DEE521892F6DA7AE63D811DF893D8B060A2ED21960413597466576BDC1741
4982E9465AF9F45BA08F9DB39B512AE50CD296348E7881205E7655A303B0CD60
39D5FDB51DD00766E7FC52937702274F5FEF3E08B4EC390D21A1C68FC5BCFE62
7209583E2C585FA00757FC95D1247797D82988B3725CB0FE2C3B29D39E4FEE22
03E4F20C21DB41D40C94D362C3C9896CCA0D11F450F368AC86B3F1DC2C21DC0F
3BB8B3BBDDA2300A5557C1E0913B055F591F8F2E8A74B365795F732BC8AE6ED0
37138B3294CD515DB323465DEA95A929C49C7F0A4AEA93A029F7CFAEC61194B9
0CE52E33C66FAEC3FE198C9656271B51222505C46F8EC2BB57FD8BD0D7426FCC
7CEE6BABEB4F22FA7E254CF30C25F8A398B66DA3935ECEBAD09CF127DF1E09BD
B718F16AF035B972FEBB044822A8A0EDB7285AF69D4419D5E1E1B6B46C4ED462
47E81898B73D750AA5F623B883D1534F17B0C80470391FA12C3D44BF89B31FF2
93AF80ADE6403ED442B1E016B737EBD38DAFA3F67195843C87D7A51F4B2E6D02
7097ECDA4B22313056E0ED9926407A51B6A1BA0E60A9787868F19EA075D93423
1F45EDCA77F1AE63AF8A747084489595B2EC613FC07DD0D67B6386C860C30ADB
5C743068850DB6B53A4036BAAB66EBB8CE6D3027F8F94E0135A4DC41F12B9ABA
E41ACDAAA070CEBCB9620882390446A08346380216EAF8496D942C502FF33804
F232AAEC8A1245D8AE2853489CD08BFB3A4E4F905362966872041A3050E71149
B089FB05C5D1C3AD7F015BA54DFFF01862FEFA5C8D77F1CECB3998D31E350C36
E0E9313F4B67AB000632416E2316A739A2703A399BACCB0A38FF9D679EC0EB1D
E7DA920DABD2DE584E5A38A5ACBBDE34499D619FBA38E1783293775D676087A2
77C384D69105CDDBE2B44E7155527CE1D2D1DC4A206339BCD0CE3BA1CB8D4146
14736BD074EC4DFE6FE4E6B1CBDC63EB9F46FA5B45A9B8944D29AE74B213EDB7
05CA2208DDE8CB2407F1FBCE67D72E63DFFDB8B0D242C9F22227E19961FAF82B
13003F6AEFA1F24C6F16A2C4F7D85D05AFE575E76F234C82198AEDE37032507F
D50C3A76395B0D44EC2994453F55D8F726737EFF099FD5ECB33C71ED9BFDF32F
8D995CCD0C02E411E410261430AD895A1750A32B88257C320A48A3655FAF340B
4244BADD57DA590449F825E4FF45D9326985DC273B247C1D89B8659D7FD674B3
86897560B9D49F58B146A910071820E48DC87242C124F0B8C4A4CE0227DE1461
0208470D168398B1F06E596BE66D4C8E2572F70A60A55509F3A37594A3A202DD
D2CA7111EA65E00087BAA3ADFC4ADC9E048A29F4B1B09D13F3DDBCC2B6F36905
8F2AAE81CD4E910F182A28DE5C7B9448B26BB6DBBC8AECB140BDDAC083FB9F7B
3541DF251006BF7EBE0891363E81C5CBDE69A2F634A2020F84DED3B3567C0FC6
514DF78D92802B96A626A946B7B381598823C54D19B9A8EBC53BE9D24EDC935D
B764C52737615F659E190A629AB8451742F86825572C135F239343ED2831075C
3CAC46A052BDB8A09A39EDAF5A2FA919391412C77D05B380FC16CFDD9A85B968
082A1A98CABDDD3D2FA80484EA879A30722F6BA29781F12EE808618D6DA9837A
6481BA7DDC97225FF3A3757AB28D6A6235824DDCA7BA9792C7A013C8F18B2F59
A440D1EB1FCA7CE575BC447E717245DCF1ADAF0BF7CCD4D9AB50206EEE37FDFB
C868CBBCF1F660E8262CD10AA45C67562303483314B5B16D8FBAE5DEAE4A2FE1
EFEC2DCFA57BB0D6E3DD6C027518251E56317EB57D2AC8E9DDC61C7385855114
9E0168179FAF286E1C4328FA7A22D836536D1C7C75E9C623706DC3670E5619AF
D2E83D82909E5959EBE4DCA9981E6698F19121429BA983308CDF085E9E02C372
F9BA7564827AD7AFC1E8F3EDC56AB2AE612AE170DA785362066E1835DA8C8E46
EDF53285BDF7D992B6ED658114524D1AFB71DEC2C1346F5416D9762A8D4F015E
51503C2FCDA193F6C581F2676C84F17DAD95A2B26A3DFBB06BD3CA034C956129
1B060315EDF0033DF3A9129FDD04F9A014F46CF4EA49DBECA6237AE306693C68
32D545047931F3B93C34602FCC1F70425380B166AC407B53DC394E60B41D122D
A8E1EE2983D3FA71634197A3236C738E6BADC6E6745DA44FA3205A928ED87CDD
2230561ED03226435615DA80EAB974BC72ADC0CDC1723B3D2FA825E76795C2F5
0DC2F3ACFC609477568B2F7CB639939924D123B55BA9ACD4B6A4E9846B9D8B82
E5C7FB106DF36061E565C063768ED394770CF07675657587CB8A56596E725736
2291439F81B25C8B73BE5E5F56BED01408940005484E6DC6E6DBB7C79D42E029
3DEA56235699FE5C7F015B3F53D44119CAB674D16CD23E55F1B7167C79786214
CF6EA8CD41E425BD048DB525BF1D7EA0C8A11BA3326685AFD46C3ACBF5046DAF
5C42846D12AB0C92533378BCD6F28ACECDBCCF6F231DF286CC85B79D051174EE
9D11E42D6BEF936A5A349F9FFA23A1E04EEEAD3E17895F81828655204096BFAD
4121F47D4750A5501018DB4BDD5B64DF6A6F8AAC80A4C2543C64C94848582E13
54FEDABBB9B5697BF8E56910C1620FCEE55132F66B9E5A35342810E52E459E27
B70E9A09C30A72A6BE38F377A69A6514F077B28208522EBEBD541FE91AF471DB
995D88C35B712BF29A6EFD589C34C63852F0F64B42B74A05A61F8E49CAA8C92F
B0B6EF30CB09BD255AA05FBD2684DFB5B8B737D966F584E936CE02F0F5AEABD4
E85705EA9242C6A433B13D89860528B5728B7942163227EE715A2BE6464A95E9
1DEED8D4FADEA06F18A44AFE0A267C43F2300178A4E72223A93F0FE9EF2AAACD
652C5700A9F848281679A64AFE0E977D85068475026A419B5F1F496A32B4382D
056F46E3BB3583945CDFCE3AC886722BF4BC01056366C34F118D83B768C560B2
9C379DEA028552D6F29DC03E9BD966794453E766B519EF35CA50F3D29670A8D8
EFB1FA857840E6C6DB9939279A093CEA32F30D8B9715C091CAF8D0B985B5A783
54C0EEAACA4ACE065E9060380F6305FEB407B0ED9C402AF5E8297626B9BE8EBE
84D0C6A1DD490C16EB96358E279A31ED8856173029BCB74E4009BDE4AF87A401
CED57846DE108DD068007AA5E29FEA8FD7DCF95151F74888115FF62F5AA971A1
E07FDD6EDDBB345DB0DE6BCE496227A0019AF30A4F7556EC2F94C26690CAC1B1
13237AB5CC03FC2402D6310419298AF52F4B16916E28A58257322FC8F59A6B5E
670355F99F518C38ED00FC5C77003D22C3A1E82B87DC2C2C523BA7D7B47F2FF8
2DE2060102D12C16BE43A0786A9DEC6BAADD2B3791D3E11B88FA8C6A73EA0539
CBFEFF0B6592FF248BB93568177386BD88E7939404D2232734DD9FB0F8AD4E84
F53C86FA9BF1093DE1C2D95713479D4429611332C9EDF3705A7E29A55D22B0D3
7834385A59EF5D1B1DF9E9FE1FCDBE9349D8A7BB6F274FBE063115938B8FC0FA
340889E1C30E5FE5759928AE6479790DCB93C93ADD183304DB1F5E2D51EC5594
960B239F624E754461D6C9E40403D4336E18B1E1E420BBF3FE6B1F9BB54D2054
4DABFFD1BA960DB9BE5B922280BC552ECD04E24950D1845EB76B68246AC14015
70E4FBAFBE10FC01DC8EF3414D6FD8AF6F96E0B67BAE2F89624EDD4BE067B0AC
DAE3A29C6EEFA57416264ADABBC5F37F792A3BABB32916E8D88BF4A5B0878AE2
0CBB60229C01CE1F5FDE162CA6F5B648DC93CB55C670FD9D474AF99490B2A943
B84661F45D2FCB811357F69CCACA4F359135809E08E530628A8B50AE9D2845AB
40B2045E56A05A96A8234E6CB6456A484AFFAB1EC5124636FA16CFBC7D9BE74D
8743D14337F520BC22930B0090704C8482689A19CD4433923F2E314E0F9AE6E0
19C5371B0296E5444FD2C5B31C36C123495F76C98766E62CB04CC0F2E8301B0D
5C5F261E1CD34E63108DF52AC737A85FCCE3CBC19774379820D9718732BC5854
B981DA72BFFB7C8E37A821C28E4BCB80DD25CAF8C992AB1C10461221D187C2E2
B447412F3D2ED6796427E04E09F2A92213EE901BDA45F1F12F4D0491F710455F
04D61916F2B23406507F41217682A8CF17C4A6B8DE0656DD4FB4AFA789BAC0AD
D370192F71499DDBBFD5FD05ACE65FB91E04254A0011B5BF0EF685DCD9AD2CFF
73F3B39FC50D396F950A4857A3BD41A7AD83B227CDF2DF57AC9DAEC677846373
5B05E07A92B8DC97EC63F67809A432E13E6DE471A0D547C646B72617B73468FD
34DE5E0609AC14A2DEF1B534E748E5DDA34925417DE619C159EF66B40AD24E99
4A96C3BFB748280809D7E7A5763E07CD1685E7D238AAF2E1722E382CDD254C83
9625D4E9AE3C91030D7E1AC115C39AA10546522A5801B677CA9C8D91D6D1EFD4
3C45FFDB982FA0550F396293486D554EC6F79A73E7AC4FCB078B31C9B8744962
509A4A3461794222AD7F21B01130ADD534DE713710226AF163407B8073EB5403
00A8158BB33E73856BE8B9B6623F3EAE8A4941B5E25E889720CF6667B47FC40A
C178B53A54D99C83755AA306E18E2F230151ADF735C6B7B642EED8890454754B
C800985A57648BD940AAFC2E3E2228254F937730A23E2F1A5FA9DF6771D310E8
A8FF576DBB9482EA15B818BA0EA1B7C868BCF8BDCF7E42C2AC51D098E1A07BAA
2B603503FBF4889A40DE7451002ED6961B759C2EC033D41487039E518DE9C21A
7683F48B20476F4129D1D2510DDF5F456F6AA0BE57746F94E090DEEA37CAABBE
DF919F519EC7B7BED97096F9FB61694AEA08DA49E20BC42CB63AAD25E7467D5A
B9BB19653B9CE7A86A6666E25BAB5DB46CD7200BA3A37012A0A690BEBEEB3ED8
F7DC2D8CC6A1FD45E073C6BCC613AC9569CE318E21C11AE858AB0BD573C2E4B6
873E5608A8714BCA85FE11E8B61E2D46440A38083B9CB4900EF059E24087AACE
885BE6FD88F53ADA6A0E01056CAEDD5D33106EAC65E305DBCA56B049ABBADCE7
D7173D21B1A9C63B9E71BCB5E6A2AEF9C4A3D0964C70EA20ABEC604F73789377
77904018BA6AE4061543F8FABE08C666B8AC32DEA40D2743E6EC5BBA42AB3938
C394E20279CB9075072D6EB4369DCC4BAECA006ADE2E85759254DC87A9C81E9D
AB08CBC030E18A42C47DD0FA1EE3521C98714EC451AB596A22E716CA34CE5445
02ABC9526DF48B0762B57F8AABD05BED4B3C59B2A879FE85E298C8D278574953
1EAD8FE5E1A0BD50A81D243612B70B601DA7D9566F741AB15D2482D98B927FF3
C5B759565629FF75DC9CBD3FD2B0178CCFFA1994F3DD8EB75BF03CCE4239E534
F58CC3DBDFD232B6479B2F00747BEF3B7A9753832C4FF04860B15CB7FE69BB28
7B2F6C6D166D7CEB21A90DEC226769429CF499D9DF08A9A7D00F8D37D43EC2C2
75EA6B26EC73244932BCD87E29AAA3D45A264336B06FFBDD825057535AB148F8
EE2694AF98611B24D1BA98AE3B4707080E9A584EE54DA9A790E2C6C2FBF00E02
71CB39158F52C77D76806CE6EC021F66F8862C88C61BD47CBE58DD05BB4C534F
D043A115B3D126BD401AC2AA92B696284A5BDFF94E1D2C375C0371FAF14E7D75
423B96BA658C91A4E3CAB20910503691C9A27C0E944BAB9B30F9BC97C2B6D5CA
5BC0CFF1B4A483449D9A4E78255758AE9BB8DD9404E6622F326DA420FDFCDF5A
11154EF62046543A671B4443DD29EE313CDBFBCA01E0A20B481E7497EE18EDCB
1ADE6C49ED9A781FC84D1D4FD86EE84C47AF37E871AB5D23605AE3E7EA1EA3A2
7AB7F970E1E19B8478BDE1715B13E1499B6D429C3E4C9366A0324D5B3777EF01
C3DD42BF964EF97FD0F31E5821456CAB705C7AA161510A0445BE5419EDB12A26
1A5F35FD0F9689426BB12AC65C8C7F3C9534E55095B6018B95857E8C4D6B0EF0
152A31B99B8959EF5956064CEEC693C16B04980D598137A6DBDCA5FC2604AE70
DAE50451FC90F481B8FA2FB0900BAEB2AA27813C1EC2319A6B3AA2D5AAECAA61
247996D2E4BA1BAE2EAA530F22E66B1545C777097D5F9924AC7386916FE51A1E
C8BB32F14979DFFF1B4C70722B86EA301C267CDB1C7A31B96C114EC567C04C6E
58E5E3638DB2AB3B78C606515DA76A0386A34D966B14D236CC125C7BF4FFBFD3
27C91A2220A49A75B1BA401B7C66DE659436405B1F8692E1E8CBCE068D88CB6E
3071F631A523CDEFC3D9A9A9C9556038A2580A56A0861D4D269996E0ABBA0B23
30969CB8B613445CB03A1805C237D333A18CFDCA0045412BD31D312DB22BC3B1
FAFE3D622F809559D9BDF67322A1DBF8C4E62D9FD78966998EE364D827B4DB73
3D85690889D3DBE624E72E3AD8F47C1D8468D4237442FE1C009534C103B89487
53E873822F02C74A963F20423D72B616BE66A10BADA25AF5949F89F784862059
23F03E97C1514E0855C21928C560E2F7EB0564B4107684F3FB4FAB19D85CC5AC
2E35FB49125B35B8BA1C34EC5DDE1EF43256E23467F4AA7585F9B7FAFA718A1A
9DE48110DC766F03DBCC2EF01DEF4ED73A8A2F03FDEF3FC0982AA51F2D946ECE
C0CEE91162DA66C9C1C9B5038EB263386A68E4D42CDD24844FAB72A2E081F823
0589FBAF8887DEE2850B25135280B7B1EE153B0BC17FDD1E18686AD37B903A71
8192B7278C4ACF5C0E5F5C367F6F2395E345CFE266D2B820EA0516536EDD849E
D4D623D01AB8D92B1D088B66386F7FE09C53EF726D2A2960DFE87FC499FF9DED
0EEC773DF6EB49B90EFB16BB707849FD0E77E59E3C01FB775124FAABF07A59F8
0D71F668A0D4D32643E22AB96D3694709CFDCC27589F4FCCAADD8798539C73D0
9DCB28A3595944C83D4D97816A5AB11D5D27AFF14C94F2C72E10C5C87E78E343
66CF3F566E604571D161E1A2A60512975B1614BC02F544269DAEB43889C7D20B
7EEBEBF6977DFA32A236F03E39BD49697D30B8BCE8B9341D2DAA72F7FDE7ABD9
9BA26352397C3DC55A0FCD95276517788B57C332C371A6C80746117F7A46FA31
2C0BF7140BEE573BDBE15D46ABD7DABA77FF818154A0B50ECB2AEEA335B5BDE4
4E62DF08DC04340CB71315D89AF6C1AB428DC5803A3B2C9BCE577D5A6A7CF744
8544669C3DD9D41B92376A229624DFE81269E50465EEB36CBC2FC06F64419649
8091C3C538BDEB2DECAFE0BA4D4128A9901B1AE84831F8AF1605E09A5A7A1709
AFC847156F96D9289B8855A1C3980C9244EB75ACAC8BFDC3A12EF6844BCD5867
4B6F65E94A2D09E3CBDA2C7D42DF30FC5F8108312D126372B13BFAFC9F453C02
8057AA75C1D338AD3F9A3620E6874F82FFA0929D04E433C4CB22B633B70F38D5
63819330DD52912F3D169A98DAEFEF7F6A91A1028E46D76289EB1BC15D3597CE
13F45A6CA27617A27763AE22850C8E1BF20348480D517EBC49EDDCEEB43D0422
EA810EB8548B02C06FD1D959BDDDB7A51951AE71B16FB71F2F8DE4056678A0E3
6911016F8544E11F5E615A56E0D2AD3ECE158056FA03629C54DF744245E4A55A
D2EAD722B1B287E85A38F4D4F39348B96E5AFC3E8C5493E8FE4A623B532DE684
A94A759A52DABC55642B29860C659B6670C3E38DD5A06958EA4077D16E51A66F
D1E6DEEBB2371AE3EC7BA447079237E95F11DFBB8B6F1308F234DB9E4F660555
F6B6628F74D5A145C9B33BEF0B1CBED1FF9C5D67E25FAC7B7796B2DBB7B7025E
B75AAF421D466FA1708A1AC58B986A4A800FDD3858D5F37D82BC4A7ED4D48EBE
C29EA7D37E5506E6A03C7A805CD054905F726A28A19DAB2296586CDDAFE3CB4B
DE23934C2F1C196F6D081E0E019B9B616440744E753D20408A2C18F870D570C1
818FE42033D55934F684959A1BE4119973AB763E3B857A6D32903A4124E22640
00233E32601A02C87F60FDCD5C26A477D10A511BF3BF9324B0CF112441BB2A5F
77E281FF269C4EECE035BB6FFA57D013257FEA86B3B7FFD2698EB665811A41E7
AB20C7135C3F5BED5199C717C8C05CC48AD62E125FC003D7BFABB565DF08737F
41AD8DE10D42B7A8910606700D1AB8E1710D613C40802E0D32EF0DF8FE6F2D4E
2880EB4A142A6061EED980DAB291E194DBB881FC4337FDA72418906145095D40
05049C9BF95FF0FA981A8AF789E1DA1A78536172326227A86498FDD8109322DF
78291B870B9D0D665906F8C5D9AD24DDD30F102F828C3377A4DBFC8F7A48BAF4
87FFD2C8DBBEA9ACE21BFA0F1BD78AE8A5D407387CAA532EE9AA883610B92324
9D745487AFE127EE9F4D8EAED4994DAAC14B65FA3A90683C62A624E1A99C83F4
D2733B86B516787A4693E254921B8DEE79D752928AEEA1E61BC9AE1093546EED
14DFE8D59FE440948E27E1F2FA81FE54BE6C57EF8C2B2E460F0863137CC5DA8D
D50867B4A0CACD2F2DE3B6429FB7EB712FA2F9CD74B1477B93807D36B8C8B29B
24B3EDEBB7657D37524071AAE50D5ACDCB2163996299FA25E75395AAA118C891
AA7CB06D15F07AD79D6C0ED1A722A10690EA3081B4FAB486FE7BC2E431EE3F61
86F857B2FB2F403BECFA1D0668C4624FD1A83AF7FCB128EEA482A28A5F2C61D1
A0D0E56545EF87E654F8A53BC0525E828A494F85681A4074A801C20540935372
377F3E37F35D4B6BFF285999691226BAD13840BC3C1292BE9A82A650F02E4495
167835CD51003A6FCB7993A2CDAE3C9F84D1DE2A8D97B0603286C219BBF030BC
E79E0FF6310EBD4306E2D9D1D13E303C932EDEC2896B4B82BC9F306B44A7BDD3
5F637D616C7003024B08E5252C66BC0CBC2D312B443B447DF41125FA6BCC772A
6A6637FDCB3CBB56BF05CEA7C5200B5A292B432D0E5F16CD73F4D9FFDC44787F
71D921C758A6201DC0CCA60576B87AA77158471CDE2C3225FA6E393C673988CA
F0598155C897319E12D96BEDA842C9B8070D923A3890CA8642E6421CF30EFAD5
F311EABF35DA720A7F23D76F821AD2E8FD4DE061D16AB2E27204D19BF9B9CC7A
A87ABA2688D61252E9BB91138F528B037CD15F8CAD893187863FF2526FF4A8F3
D863750E5E52F51EDD53574F8E2C8E0A05C2803855608A98C0338DE90E4A9718
6C1FAC5754039B93E83734783D26D78365C31FCE4E4E99EDF6BD746FEAFF2AF0
451B4482C1C965993AE8B5E671B1A3163757FEF67C6D1C38476062D88DDEAEF9
72E7B7FD99889CB9DCCD3FC712D0AF0300CD44D049E9EDA64605EA778ED1CA98
A88DDBE24975FC4E7B2A6EA5E03E280165BC4A0A999AE85FD20FC37D0674F40A
D869674195AB6F058199B31DFD60862D81560BEA5AFD00A134F3C357A40BEA69
BFA2366D6527FF4F2482B41199947002FF1748FE470084CE59E2343A1F61E560
D7F2F616A7FB913229EFA6AE947F58A30DC4CB152013534861328A5E4673A4B1
80A8AE1BEA97194BD2A90F5E8199D0EEB9742EB0F6BE1DA71827BC04AEB161D5
940F8B3BB3E8C7295B779748273C485A5F88DC1F9DEEF84776DCA0196F32A8D2
85C54D6897937C921210F387A0BECA1F984E972E628C183D0255AF2C4681A57F
23D24412A1CF0C11BA08CA4B1FBD5A82F75C734DAD9FB1B4E3AF63A84A69463C
676676A8203A1E064F4B90FD318DD22EF7F568305E6566992B1676A70056DED9
C4CE032E036A4B32B3491B7D4E0731012EF40527BF0AA0FCF2846D211148FEFC
69658175AB69C72C13AC5E8C97D46F8CFCFC0BDE98DA5E4D2BC78E24266CBEDD
6BED31977920CD4EE85C6F72AC9E144BD95BD6413D4A2E44AB54FA3040A33612
DE2CCE751AA0AFAAC1FD8A6F31969460259D44CE01645CF2CA6B7E45476FE9A4
DA66E7ED5B79615A168A1A4DA729A15DD2052D3D96A3CE36F0B7AE718B11CFC6
01DC8BF3E5A2349B94A8EA2B41EBF0BB4F573D5780DD4212191A8FC2D2A56454
D0A65ADBF895FD88723539C9D85BDF40081C9B268937D73D24651664E84B70EA
161842383009136CC91A8E901BFAE877E4EB59F3F56BB81289E93AF80E182633
300AB8BD06D067F53E41FBE1A9E28F3111EDBB246DF8911317DE4C75D695826A
465BEDD1A55A8DFC7CD8388B36341CDE1B35D1DFC9E58F7D87F5EACAE865636E
5CFA757AA5E0CEAB244A45B28177D51B683DAF8038C03C57418377255201AE91
F48B7FC3581D265D1BDC9AD9DF4202E2704E2D855D46F32DE17B6B20AE24F3FB
BBD9947BC5A800F9DA6B7BAF861C673A9656AA5986F04D17BE7FF0A4839E595B
9C517AA0A832AA634B36BBDCAE4B0B3A76793F3A3CA1D96A9DB73227615E4482
9CAF3E15EB262D30E176C2A6AAACF3C417A702CB0DF1366DDAB24B097A84CEBC
FB3E1A2A067C4FEF25585D5EA092DCC4D49B113729D37ECFF305D8C59C900CAD
DA2B06E8C69D2C5A0062F9BA186C93147E40F3C56318A5519E9E4DCB543F1F7E
92EE6FF72FDFB0E26D7520F51F4E24917F83207840459C860A0867DC81FC6B88
54E8585969EA04ECAD62D7EFC6607FD0D879B23EF39FD99184AEB035036354C6
BF79126C436F4C14079CD216A6C58ED00E89F19B2ECCA2C5462EA92B20A16136
10FBC0935E08080BE5374BFEA3F812FBD0DB23BA74916E81E282DCD74895A030
0C35E96110ED59C2830F0382164A21BBCC9FD8167B7FB1C974259FF842E91C82
E428DFEF051C6F35820FDCD315337BEE01107C02C8ED058F88CF9F6E21CCB017
46D41D1EC44BE55DF5BBD8D6B0FDEC01571B532C47F2DDC9632F3EBF1AD0387D
75DE3C739C1B63F5FF19664E0241A2D8E72904AA2725A1F062B5196346FE9C64
35722A1DB91E150DBD77AC6F4922CC21BD95A7CC9707114DD547128F3C4A4A24
28B51852D4DA802B39EBAB347CC3394593C5B714D1B651D7DBDE5FFF09D179A6
5507FE392EDB6315E0F9CCB0576BF0D631C4E4F0F5491784A1744126ED0202D4
166BE79595DE316A7A09033444B49D8EFAE7428D3B01E470F123404A2512B16B
203007F4E55790838BFA452BE5AB2A72D439F5E59E948BFAEA88F5BE9406C6D6
DB65B7EFCDA3DCA3F85C2221CF644330D3E830D49D53C2B258461659D51E0459
24E18F072559D2741193D80A5D6A6D2E1E26746A94A779EE401A85A532E2718B
446C08CF8E15487FFEA1EBC887F047AB40FC088798CAE33228E1E6E20346B3C9
2C08011A6D93475434B31D33680923229117CD4159AE4EEDFD552FCE72A5E149
D1653CBE70D23A10B77C81889061E66CF7E9F24AA8D81969BB7B6E75FE86B233
F2B7B8EE7A95FE898D413CD8514318528BD4427B552200DF92F2F85B557ACB7E
8A34E94D20A24FA20E27E7716FC9B7CED8E8D3458D797AA3821B284B1B7E82C3
396CB89BA225013F5D4F8DCAA2E3F7EF76DFE5D49BF4133F3CD75C59F2E2D27D
B0438F7D8DB936188E989A8B21ED3366B471E9103FD5E5DFB028BD81AA5B018C
D425BD33474212954A9926694F6B2056997F2D35C37EF36DEC95AF26E9BB0E08
E4B31E918B699A14BC349FF6498D818FC3D8EED1CCEEAEF324EE605FF4455173
F3FB2B767157BDFB0871385838BCB2BCB4E8D09A3F640A9E1B49DEA4B8DA5FDA
66747870C57A464B6C6C497F5FFF1FE0ACA49F9FF46C7B4D722457BC064FB794
5535F2F9C287D971BE65A9828EEDB4ECA19B0A09C9002478AA31E4240F13D731
82F04410A11D191E4B652F0EBFBB4BAA62641F852A26CBFC6A61A482A24D0EAF
501057E3A9FF7B3D1A0671ADF319AA50F05306B1C4A28EA5581957F2D884061E
D730EB7120B9821341DEB0A72ED7167817B16C777DC17B9CF4021E6D4E09A991
C2370F24BB6B6F4D72EDAB1BD1008017DE24EB95E4B765D0ECF0ADD93E7E4BF0
5AA3D6D49C22FB9F870174F4D1BFACCBEC50BB8E69E8D8C0A5FAF85EE703821D
2281ED437D3A86763DED281E99A08CFFF0343D5DF4387556D7CBC684F3633269
FE9D24B7D5B8A3F2044DBD4B9241AF465D187AB30CE153914AF924F674813266
AF9200C942206B65780C56418B79CD715603DE5C207FC70D370207CC69220704
D212B6E7A84CC76409E74A2DAE2E4309236B9351367E0DF8768F5F653DDDE6B7
4E31B2628E4857E07087AD875DA7D94EBEC24B9D5491D872B1DB3B7EE4135C40
6BF0FB5A606F7A211F72225DB3DB146BDB01C7EA620C23282E63CE45DF736187
6A760A4D5A7D58A46957512B397DE3A06F7E9383DDE95FDE3DEC601203022BB6
67C4DA4116B2529BA2245385D8A14D6E98D0725357BEB226D9E6EC1F97FD7A80
04B4EBAD9EE6D6F681E580716AB9B88BD8767D1DCA5D48CBB9AF5B3E60468F2E
F9010C645A7E9B56A39A7300AC2EF3B0C7013FA7609D43DFB7E298BD1FD4474C
D081342AB42B1203D01C8F63565E7A06EFF319C22612F347CDCF28BAE94FE49C
ACBC235297A4BA42AC9083F142DDEA2183744D33C42E579C7B809E7101DE9DB6
0CAD2D551F373A255240ECE81AC68C655A9AF79B0596E2D7FCD4BD3054E514DE
64C58BADEC1E179C4A70B7B2AE12CA40CE4880703BD1D3D9675E23EBEE347835
2EAA05DEC5A6772EB9944C06B895687A3F0DEA8B7F4F8013345CDBA402ECFD36
FFEB7E81904730359D72FB1F64E3B041A69B2444CBEDE6ABC85888DC059DBE81
F40B65934AD2E4DF3C2A2D7FD20B41AE6B28880F9C43CDBEF790281699E31C3D
2C4227AC613CFB5DF462A15DB5F4CC19DCFC5AB22294727352547F30612E15AC
E9B6505AB9387B688CE58CF3529B8024CDC74A4EF77B993FCA05ECD29B9F954A
D5CFBF3A49284FDB63F220E21F6FA83A84FB5EF3C2665BDC7095A2E5E9E86F5A
E962F5E17624A8B00736280B35200A986638B60540553EE4CA205A0A2652A984
5302F716DECFF7BE7E98241577CDBF8AA7BB7B1925AC2931C2D35985F8213DED
3D54E2366C1ED10FF2C19FD362B8572C0B4293F75B4975FC9F7873120130D7E1
31D5F48FA40D0F4EA24452EF2EEF1EF5C318A35C0969011E948616FA124B9350
A1BCC97148E15D2353EEE2BE859E6072DA3ED36EB1ACC0E90B264F3E1BBA78DB
0F78B22AB4048A86E98D3282EEFE0FF1D86725820FDDDE08A4A2310CC3F6FECA
2E817F00EACC5F0A844C6659141BD9C57340228B575AFF7F1DDACD9319FCF53C
EACADF2EDF2C3F52D34947E0964D0E8E89F6043C0D2BE9AC4E3B547EDB280623
5D9D92033D0EBCE8B8A67D3DB713434E014FEBF025DEFF64DDADA9C41C9CAB1B
44DBBA03F35EB2D979730B17AA5C67E31088C1F4C52AD7955730AC8608EBCCBF
D3FE4C6CEF2AE08263950FE6C80EE5679AAAAC1804C8AB2084CBBB299ED351CD
CCFD3489E82E1FD21984D255DAAB15D2530F5004F063AD71E4379C53571086A1
EF88110925908148F724A5D21C5178FDA944A72ABF81EF85D81B878A24E96D6E
16583FAC9F27B22B69289D1D80F71A7138C28292B9684AF30E7387C15A20305A
A1A087B1CC97528D5088D1E07DE9A232A9319EA996076E3AD1F6363E18CEF871
5CB464AA16053C3B48AE8D913FFC1CE6705530F9CC1E3766FC6E7598E50750FA
1DB1CAB70F0E305D7EDE7EF63F825A8C956A81C9A49EF4F7070D60E3EF038472
302B58EDB8556D049D942DA9EC80733ECA11FCDE896424CAF89E9455860CA162
98F739D55E1AB926E5F1230538D96AB2484EA11E26ADBD58118E046DFC0B5CB2
A4054EDC8C7A27E45794FFAA388C64541489F56666025C01CD66733B01FF13AD
24A04C1D2A24FD9175042B4A0780647F3DA0229BC41842E96CA45625E28A5077
6DED50AB8AEAD0DE438F54353D1245ED78D1614CC69764EA424047A4AE425B6F
39E58816C7A84839C069CFBB069C10AF0036B491AAEC6CE3913A5A406A455C4A
E0BC827DEAB84050AE2CFA839E86087FAD63292B44A10179A5ECA3F81567DCAE
221CBBE91BC55A81CC89FDE91EA283543BFC3DB542BDDEEAB4147211DF02F563
B1B0E65B1286946DDCEA95DEFA65ADE7B824DCB6753DCD8534FB2CB20A8A656E
9ADAAC4E15F520450DD45CD8A347BBF3D26BE7AD8EA1208330DDE420CFCDC65E
D602F729B35F40CE459B572E7C7BED110BD00B18235356314F81AA06B640C281
51E25C12314BA787EC6CB0DF0957587158729F6B5245C355A80D87986CCF6E14
D41BD9CC986A005086494D4A3573913480A694BED1A2323DAB4560500EB0EEC5
DED3D4B18F54C9FB1FB6A1D105BBC602A90AA3D5259906A54970C6B5CFA5845B
B30648E6A55BB508B65424217B12A01938185F1DEE52D5F739D1CFDD9459D56F
74399B61ECA0BE81C9C8D7B6938CAD55A5115A0DBDF30963CC91D9067805470C
F8FD960309B36EFD791497A1A00564F6FF3A6F450E4593CAAF0ACC441DA2EF64
5C28015AAD3952555A74921698B3536CF6FC0B6457D49F342314EEA06C4D3BE4
D8BA5567E6C651189FA33DC49C199A24A734DE011045772B31D5278D9F3564DB
EDA1C2B4FF9171CB8FCC9366D78917917B4F6060AAF40EB540CD55D6AEEE63CD
A277DB7ABA077B0A50969DCC8614D81EDB28CA41375F9A2E765762A335DC6C31
140E49518A4557E48EA01588D4D15D82E557B5534C3B11297BC5A6641770F5E9
F75C572675AE6E69E7AE3761407620199365941F774F8CB1F07D5498B68A5803
66A9868856DC42009DF9CD5B6E99AB623487EF308B4437F8A860F57F4B04B03D
4460F5B8EAF3E626D7B094035B9ECB398DB9A763F1BA3386E051BBC1C7FB8B5C
BE3D295D540DF7F8049D13B81C3904DF76A8B09D2B890D47DECC204BA90BE3EB
9D1FDA4D3C9B4F7A6838E6CB828F856CEEFB833B14A29B7F53AA34E8B6125A71
70E748B5BE0C0C7F7ADA86F6D1E19F8548D3FF36CA278FC686030CBD7562B748
EA394AF50D375B9912F73B362464E79499F90140CA936E23FCEEB2667DCB40BC
D565334F393E530139BE17DBFFAA7EF5C1E8EBDA334EA0BB028ABC9FA04FE96D
19C0F8571EE753434BE55DF5BBD8D6B0FC3E60C234573DAA11A489B87A3C6A20
8E9CB0B30F7AC2DA0BC4484EEAA2F357FBF8A5BD6DA67637FABD1965E0D8CEF1
2A2B9415114EB2F3FC4E0B14EB001084AC98EBD8B0CF3F9913AA747246396AB9
81277624EED8693D572A1C405E1F8664D5B2A41D923542C8532923E20968052A
44A5744FC18E88402A92C791F43F456CFF2295D4DB620C2A709C44F011D0819A
10EB06135D9789ED82968EE23E725CABF73E2B95F92364C3DC2A325932A4EABB
89DCEDFF4E028F3583AA2733BFF1F4A94CB02B67C9EFE3A2930C444B7792A462
4B84A612E7D275AA4EE5B6493B7A5CD7B1BB36A193F47B4B9FB381D71265DBE5
375B06FFCD490B11631704A600BDC56857B06B212C00A1CC66C5F98D99E6A83B
FE4868E6EA6D89BB91F93DEA53A676EB142FADDFD883DC4DA6239220A27CBD23
A3057371330B4041566CF5A666F7858AC58A33C57BF883777AD1B0FFD5C8C14C
34C3638F12604E97A63FBB1D5283638A1D4611412ECF92AD5337F88CADB0F8AE
1F2AF3BC364351E1FDB12AB959E9C940BC498D3C0DADC361309B09C897726DC6
16466250AF1F0D13B5FE7A5EFD43BAA7D48BCB87B1BBECEB0B630D69CA4014E9
3C517FF93411F08B5FDAF534E93E6071CC3651FA4DA4650CAD4FB238FF3955BF
B8EEC46463DA19BD085BE4A6A9F799FACB6315A2110148ACF5E1BC35CAB95FED
3B427F14C359AFC59257053072FF49817CFD5784B250C403456F2EBF2705ECCE
7B2ED90343D23E006ECB282BE97BB3C928411430C42A3D136606222F83ACAD23
1FD6C7942427C4A6C4D38DE5479C17252C30F1790597FE7946D773DF1959595A
44F4F57A3AC7E84A84BCB670611520F82B54B156921AAAC923CEF1BC56E92FDE
53A26F9395671BD1653E8DF6C77EBEF28D9B618529F7CD8EA038A4EE4DC836F3
1EDEEC9DCBD5FE01EC001E45AE4B4DF40CEEAC88418E3C2B62ACA46F7D706CDD
B1ACEEDE0D493F2F471820581467B504828A150CEEB2A5F85AFA549BEE28D568
3015AB07A0CDFC782280B825468857765BB2F93045A19EAC0903B56D948FCAE1
2DE34C9B4342C72A76F0F6EE68C1425006706434FFEF6D6B541A94C6DEE3FA74
31267CB6EC7A96C590EBC1CC73301734487590DF513D3154E077385E181852BD
301C18E79A472CCEF75A7079EB821FF77679197360213A13F987E89CDAEE6E66
D20397C46FEA9B6EF288668FF3ED3831DAC8E5003D5F23F7CC75812D2FCB2475
F074A0D44FB28EBD23D7F3864B176AE297116DE6B2C08469861F86D3850E9CA5
6C7BD860BEF6A2FA3205099FECEE48A61FA12A5C83C65E512C37A6BAF8FAD751
BF26B2493DFEE44FAC4B02883394C60AB12271168AD208A98540BBAAF61C73D2
254EFA2E81380661CE60F1B9188CB4EECCCB957E5260D4EA5FFFD93CC9776C9C
34508263844E00D8209A0D7CDED19AF7038AB10B1FB50C503E5130983C68A424
1BEE082E1020A1213CDF702B178AD1EDC212E71B8FA33A604C67B7D83D503206
12C2D97236D44D1CE419887BE226650D38258FE2EAD9B8B334C4CA07A8866B21
B9D984325E72EC2A7EFF72EF9F2A21D1192D110D083804EDAB0BDB4E39C6C5BE
8ED9B1F861BE5406E7BC10B8386B25AB4CF85048789BE20EDFCBC2BE23B43458
474D510E94FCE182C53165413E1CBCAB30A7619E3D729125DEBF7A3EBC7340D1
A093ACFBBB24184CCB17539CAF6DB91BF6FA48E94D48C1EC30A76DB220A30ECD
347E1717AA5D4CB03B26C4A34300BFE8B2BE88EAF0AB4A3166F740E482F0965F
920B26577B79D9F0714E57C8F6AA9362E8A8C69E14731135956DDDCF1CD664A4
B74F21DBCC8F96697ACAC75B1E69BE9B7715641E46FFEAFF4A66DCCA05B42F9B
762FF8905BAA1B6FF18AAE9526C39853101B9461F4C1862A4534F300477AFE70
75577DDDEA8FB03F750A52C070289822BB0302803D3C0334C3F081F0E15D5D26
A72F48979F8C3C01E7D0A192C47877168E8977CDA919CA86D82794F04E7E9861
3DDFC814493C6D26742E16DC57FFF25B29C3CD32B8140EC36F63F51819C4206C
B45D52E88EB1C042E28A6DF8D96421909AF3D5F4DA9A0824C95DE4669CFB5665
D839C84878B5C470A823404B8FD6502116CF1378D2396911FBC28BF1A25BB7E7
6A3AD110AB98D922C364410F36D3C2D229D803EC618F4366875451F815FF783C
DE0A5A0B345E8350B8F483C8F8F964163ECCC630DA0C8D6E8F9F0ACA31743AA9
16DD258D6D3D449AFDF559CE627D14BDF05616FC958B62CA3C00E57FA30538BB
100E2332B026BE72BBD35BF3EE0EE7D0EAE3466AD938202F4FA85EBA46C63169
9BEBDE43C59E2F387C30EF43239532903B05A54B2D506B56D427F21541DB1F08
43CF1E1B5748117D2A14E48A0599F552552CDC9E1F786FBFB48163E7A7D6CEBA
67D895240C213875F5C4A4095877FF3D4A45F6DE20D850C8ACB46CDEB74BB9E5
0D9A56CA2DB4588099412BBBC86A1FE55FF13CB1902453BB289EBCD0CA75D11A
A2E35DAF65CF791B1A5624BF0D2EA02771C259CFCCD4D9D8EA663BB0FCA9AF70
97C516281508CD1AA45B0F04C1A064624C89D2B6ACFC55655633F02E65070AF1
8760DE738F9AA02A86EF23D5F28C1F1C53B4158ADBC7BAC0AB21DF14947CFA3D
FEBEB43427D4B8A51DBC4482E314D1348D8C871D5F0F5BDB7F2A35EA7D79DCA8
E6D74B6A4FBFAF7245D8F075ED7497FA4DC7720BDDF14A819BD094842D0A31DB
D42493D2DF8A406D54E119D87BEBA7169F949B08254A985398CF9DE6AF787594
995953B62DB57C978E6350831D98BA1EB061AB58683C9F770D8863375993CB44
7759CC506C2FE22FE5659ECF593B54190E9D909671965AC8849B3B885B7DAA70
ADDA67B5AA11E1DD8A770D7E3CCB5524F6275E2E37512DF10B51942419C67A9E
B8EB3D1F5B0524B381B6236164715C637DD4C2D071F1C8E049E657F5F14377D7
5506A96959E60672543CE73BE753625DD6366B8257CBD45A6E99A18E53A0FD83
C6A6EE3385A140C19312CEB834DA634D38019F7DAA35E82F47CA081C407C6385
71B816264A182FB53F1FA77EA747877F189785B41EE15BF6256160C144AF1106
965A3B1656D18B81F253E784B1095EABE60C35E7E991815FB912EE2EE5E27FA2
8F53FEE0CA22A791E5AE02B14BE8659BADC55C5578EB4984E81EFE3B1931D6ED
537DA9834A0EBB7F2EE55BABE1C5C966493A9324DF109386E576FBB7A1120EEB
299C276199F197FB4EDF2FE76F62012BB094EDF1A8CAC28E3394A8764C9EBE9F
0EDD2EDA7721B8E2E0B9480A2CE28EF731CB16BB65B8FF9FC9712BE14730649D
4CF9507DEAB187D6132728C0F838AD7ED83035DA7C52346B398854CE4DA6FF11
35BE3D8CF8FD4447D94DC18BB2A83FC0EC38723B08402F0957FC48685E12A4AE
E7349FAFFC77013F4B768948FEC13502E90DC405C4B2A10C6B1DC182A460210F
FA04075755AA9FEA53FE9957B6EB580B15FAE0B9B4FD191905728CF194BC47BE
CDCFF441D17D2116F461A2A254535DACC1E5490FE5B6B980E76D5632CBA681F1
7245262AEBC91457BD80F5D49FF2CD24619F4880A365CA470C6EDE95B149FFE1
42E9887BE4D81223AA8CA8CDAAC39FE83379579764DE33A6228EBDCD2EB41F4E
B5A1E8CB4FEAE7147A3D06E33394047E6C9380959B468E2B8DBCA356F21F98DC
E5ADA95C115803E213A5DB9D10B3C3FA38EF064CB073AE6006C4BE20340E47A6
A33903FA554E59CE242C4B34BBD3652E2A137D12E5D07CEA2AAB67A636372EDA
F2134EF5D1B7536F05D371752E08D7F1BD45F60C1074ADE503EFBE1DA2779645
ED90B6035BADC6A7E3258695C88234B45962FDCD175BB3BA70303F2C00CBBE6E
7A75D484CE388B808FDC1C30D7A0ED7BEF649458315E7F4024B7B842F4C1B7F9
32F728B34F0F904936B96B3C8FA3DD4728D49F9A4531B8C572BBE517FCD0B9B1
C707741CE5C6CF8E6F3512A71505E643D52B1C06099AE7D940DB949586638CFE
8191ADB74A219CA3503D42F6AC741CCA63F95F9A1E30AE85C8563C2D5E37C22D
1A99F8ADA9EEB8834D35BFA1C80426933416C3AA5EF931A0C13B86983A0B2D61
F03C8676AE6D2DB4B3F760679EE315626BC14D27E7F34E6DD82CFF9CFFF2E917
2812972E806CAC1C50270F3CCA069CF7381E8970F64003753BB903A32BDAE31A
5EA1E35DB463F3F3C628A3AFABC5D07810D9E3E32A153203B3CAB290C511D5B6
66166BBAC435A9D20A881C235505CDDC60CD504662C5E4B41B8E6C0369C288B1
585EAF79BDEC8FE257B23CCF12A0C710D9DE413E1D98F2DA42B4C59703AE93C8
A08608236432D89F52E223FD0986600C521A09DB987DE830E585440D8C72D427
9998FD4AD91491F9B29A09796B511C0EF257BE90A02F55418AA0464A756DB458
84C73396203B97F53CAC64FE925B1CFC39C069C469174D5042093167A3FA7F8A
DA4443A954B0718801C3346C18FFF9D1E0768F69FC62D47406D51381D592E2BB
71A066DA7DBA9FE65656E968EDD31317E42CCFB6922C2DF37A3EFA7B87C09EC8
0772F19C76E7F088D02EE2149F782D3F8F051834DB5BCCE67B166F9F099AD7E2
AF4EEF3C7B0C9632D94F7DF974373F0498609AA4EF005CD4E9F6AF963C2349BB
70E1FAE9EC1F63600BE2BCA240CC9B1495D770C995163A7CDB89787112742FCD
5D918D6B4A44F9413442297F5B7B32EDE05F49721D1AFC1F021F4C27F11F6EA0
8F806621A7860C587CCF08D933AAA914D503CECE6030397861E477B69E5FE329
D0A415B49BCA4660D37B048FBB9B8B867BEFAE2765D2257ACE29056C0EEB6E6B
C2CF9026B10DAE55BC7025DC8BCC67FD6D090495543264858AB52F036640C320
3EDB7C0C9175F285AC08F39C1CFDC0AE00E27264C0F2E4531AA28228B10893DB
86CF4D4B29A5D8BC7D163C42C5FEB387027EA2AB90E63864E62F2F9B055B3338
74C9550B761BE64F11749324C153496FD41AB39C8AC5E4828E1EEE69E4C879BA
1E9FC0F166F2616FC43482D75DAE31D1A6025DE1E4D9B3360C2AA617F66AF15F
FCDB5DBB47DD98B07C564D5498F2DBBFFFC6DED9AE23587FCE63AAA45FB0077B
D547A190B778D17B0AA1C6724E1DF89215152DC12C7BA6751F7549BE4AA8B1A1
248D9EEB7749401C603CA66EF02F9D57A51B7EF8C3F44F1DCE9DC4794097E168
0012BB428227A6A5070841EA3F0BE14BC49304C9BBC965E192FC59AA3DCA5EC8
F3130998E0734D4E8CC502E155C2704CE62786F6C2243475C5B55402C023814F
71D44A44F108ACDA4EFFF95A5BE3B8D8C84A00402D9B20A1E541BE7679F7D60A
B6DD609A29D3B472417059D7DF8662313524977E98A42C31C8A14CB0B7D6616F
2A78A166ABBC2EEE2AD60344D5453963AA92511F24DBAFAE6C9DF187E4635A64
B2BD20D4F672549C4DB0CF5C73A98FF6766E908B551129D4267F761096557663
D53DE4C57849D61F32D26717E444CA9BD1647AE477D1BD49DC7441C32E9EF3DE
510D05F0B7576CF58E7585463DC0526CA2018232835B2AD311C36800A409D7BE
E60B4EBFC23908C4EE86EA09417D30732F7959A976C1DE4EDF0115DE5AFEA879
0948FC8B0996B192D969C0229C5EC0DBACB9C6140634B91E9E510AF6CAA9D213
AC1D215B6637907005661B9F594A3CA07131E98A38002D54FABDD2FC41B212E7
A99C9A937DE11BA97BF3E1EA019466715DE0CD19E5DD39D50AC2C9EF0D7AA2D9
AAB494B610FD1B99361CB8D39F743E30A6EA721D8BE3C44AD05EE7D0DB2F86FF
C978EAB6C04CE9709088ACD9C60F9561922B334878983AFCB36482DF85E9BBF8
513D80564828CBBE6333CBC9ED60E7E944D9297600E86C03DB4F9975DBD6CD73
F1713580C577F73C3E02F187C60D2B5602F5C3B269BEED88C4BFAA296A47CAED
33EB29A87D51CD233C7E227D48D55567930C44686CEA129B8FC87B571B2F9186
7FA9BC6CC3C1D2B93C57ED32BA646167313C5613526AFC8EE6E2EE987687D8A8
0F66B55E5B205A18BC598BE6DB0FF6C85F24B8579528E20DCE7AD6C997B38BE4
1B95B170B2679D4CC7AA385B59587564F08CF4E8E50B0673ABD6DF6D1281CC3C
6F330649C326A71DD0E625DC9DAEF9879C45AC04558406D5BC6C4E530B86B2F4
292CFC9AA70BEF4FC76EA8C177740D99707921EED0991381BBF10243B81B3CE5
2BCB302E5F573698E6435AD7BFF094E114968B26097853BD5C169D92380F9D9B
498674206FA7962FFD1355A8CA99C535F082299261E953D839A5C0A66A9F853B
05D96523E18F267636DAF35A218F876D908589311861364E8AE9245E5CCE26E8
F7A584F2D897E5E2D9E4189E09DBA6176A9DB8EE63F51E58627D5E26221BD780
37A1A873179F9ADB13088B56381F8A69496453CD319DDE76E6BE5D50BE7B8E96
355A30FD8F62D3C78691D2842AADFE3BA543F24D9BD0D3209A14EA4F806961D7
CA9006AB050DFDE5E87FC5250A190168F9357F8AF5B2BAB68F5FB0E94DFDC496
3747F82290F5BD1AF5D90CC6A9D3337360B532E7A726B77B817ADBF1E54F53F2
A1BE1B12E4D0B9DF8AFBB6A41A9F4F49424EF2F993C0743B40633EB0FF18A376
FF6F14D3566FD2ED6B9205D4862CD1812F07E1415F53F2EBF9A8B9833F56DC70
2D393AB3DE1CAA82A329C8A6BB8D1A7C8E06CBB3838CBC1D0F44EEAAC0E18680
10EB045E530B411827D559BB4C78CD3B26C607EFA14C3C3E348EA49BF9F73FB4
B86412C74BDB56CF9DDA429B8236ABC86F02595FD38B5200802900DCA6B8188E
4B4A7102DEA93FFCFF039819FD450E2E1B3A81837514F1477E02BAA5B666EC99
F7FDB6EC3161B4A2BB9A274E27A7DB5EFEA5A48CC761A7973CD92A8E412F0552
F3A0CF148C50BA732761F5D398D7A1F81364AA196F763EC89E5ECEB36CCFA1C4
62C7769AE1102503E65D11F162C719B1DF07135A251D4661B278B3B7D0AF8462
16191026A9BEE27825AC9D70707068A206E681023CABD5A003FB761177687122
0D301B31E3B79D22563569522F31CECD86E65ED210B17AF2AF8C777EB8E4BC89
CE5267616743BB48E06E7D5D36D6C7B7B7185C60F5D6D0D4E4AF8928252A9611
667966E1105B33CF7D6EE22EE5A3F31632565B7FEAB616ADFE2758F8E5072149
FDFD0F9E298B3BB482BB072343A9F35F7CCF6FC4E296E22B542DC76DD3C705B1
644A11447F41FB72715838A2704513A55CB5250C1A33682959AFD3CF225BEC7F
5CDF1D820D28BA16A354D87393CE3B634A45E481028D1AAAD94FDCFB45F25495
41A4B03FD66413689E2867FA488961BF6CEC6F9A7CCE2074C06A7D0F8D287EC0
BA805FAB74EAB1D2FD349984937572B821F6975F2C027F43BD462224A510343A
A8B832447E2F967E4FD41CDD60D67298EC6C4D6107ED7F78D6337204DDD5AD8B
1AA345A75DFD0E68B6624F24FED3422862D9B3FD8AB797B52EFC6FF37D677B58
0610905847A6495B0172DC5982D347A209B84E530A91541B90B780DB03A3E8C5
CBA33AA21A503E2F69D3FFBBAE386954F9D1DC84BFBB1BF1ACFEE06FD36F279B
2D48C9771F781C59738DAFACA1F5150357CBA1664978C9CF314E86EEAC33E4D2
760C149B07CEA30C8AD26FEB2B1100DF3FC7130B1F18E101977B2B4183239807
9F7C8E09908C68A283E2851F2E09ABAC4527D3A0894B076A0A764BAF9085F3C7
B8FDF13CF08EEA9E593E38FD57768B8124EE2618E890BF019129072EBE06BA90
92C5355CFFF638D008D4F01F5042CE04525DB58D7FE715319E88CC2162963812
6B6517A052C518F8C58004DE0848E1D470F4174C81AA812F5A8766E6B3183B82
5B8E5C59FECA7030837EB5FB9572CFFA99BE10F884596E81C418F2A1E753299E
EC7647A44D2449C1B255D6448C0E42F4BA8AECF2933CFA43C9A600146BB9AE18
8ED10E786A9C03FADC216B13E698040B784F1DAEDEE8C05D9DC84512CCABA43B
FB8F2A6660554AA975230C1D0093FBEBC52B2F2B852D22D42F451155BC9414A0
9AD3351D07BA03F1F6F5B7F4F389F41143B7DA811612F9870305DBCFC56E4DE3
2B95C38CC9FB6B49EB9423F59B0FB7A55978F3F070C11F386DDAF3F89CED75BC
4FBDE5E74F96C8277438BBA9582CAFF2962533C60F2FA145A8B32A10B0317E21
1D0D2DFF25F226A6177E1FAF994E846F5770EC631692B539D6AB5C51E5FFC0F5
27537738C7BBDC3812A060A59DB18DD9BCEB93337A5F7967A89CB7F8AFD87F57
13CC32BB1A3AE49609EA47B6D15DED91B467373ED9DF42F34F4F47FAC184FCF1
3B8B3E0E96B87F400B1FCE74B95CB0B82F6A5576EAFB346A9DF4B7B0F0AD46C1
ECD2484704F0A8420C7A6865E47AC261254CB31B4CE518DC8998AC0E556F1664
8FD962538A8E36C777A500B3CAA5264C547602F56773C5A1A8A411A59733F9DA
92705ADE61289962DE10AB225F4AA25E5D73DEE977204CD3304E95CD9776348F
E2E2B1218ACB2B8E9ED0C6952247BC2815D10F2D11EF1D05200BE50F762342B1
EE288FA2B51119F5C95B49853991CCC666531F8B87795D3AB3863751BB751D9E
086BAB4E694E98732EBABA38E7071728B9B2F2962813506017E4BC58EFA8120F
4FC51A675BE1438836D5855C70B136D098209ED43C910A95BB18DE6B90B6EC87
B1ABD9EA5958819F5CE09BA20034FAB393BAC11690CF4B737645FBFD957FB1C0
DB2D0AE7144A1B5693848E355E8EC005A649D57FA7B82EC62BB262721E0F2C77
11B2B04D886540A8A3A2C0E659FD71DB8014C078DACE28A0B45725C1F757B651
18D639F159B12DD5B952883CE94CBEDDFA86A4A4FAED
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75B6B271326A2E7B313EB4598DD7FEA
4A5D95437CBA46D85A5EAD76FEA956126B3EEC337FF78D906699CB9CD7B4012C
474EB33D12DFABB3BF569214525DB9B2D4B34136FDF936F96FFC813FE16DA5F7
9B0F2B3110B1F8C90170E014FE8F31A5FD35CB74EF0FA13C6DA74D7264618562
DABD7DB8E7F480D0521581902848649AD3EBE39E618667C59EA499B7081A0844
B6DC10555D27819E6CAA1CE453A7A68EF1A3EB2178BBF9B9BEA9DEC679DC10D9
E3553DE260FFD590BEDC71CA9AD4AC12B09E86D933AF49B4CB901556E63BD639
1B3C3C3C80C46745E1CA7983B9E80168018E04A84AB47C854C73FC58A393974C
1AFF488EBB29B293905951355C4D4A4F65BF1A72956515750DED0B87A8D3282C
72C634347874775B6F29EB873134F6BCC2EBBD3703E9619F762D64128A18C957
22E6C0DA907A17868AACF3229C176FC26BFBE255AD62737D234986AFF04FF03C
1DB4D1F2D9F60CF2E4DC5DAF88EF3517A2D91CCCBBB8753F92B3E0CDA5D26523
B84CEE3A0429655F8F25C89E65074A52CC6047885F4105DD62F1FB8CC7A4CFE3
22EBEEE15E3395B062B933EB55FA589373CE26568F78981B480F688646A5C8C5
63B8FAAF19A1F6166685C3FDC27532C931AC8B86E81FB0223686074ED596FA6A
922B662575F23B53B7C6B245AFE90258E743F284E22E30D2B418CAE285AA38F9
FB436D39371781DF4FAAD1CFF3BFEAA81F5D11DD76BADDD8122A4AA44B9F863A
DF8127F1FC35DB9CD34EBC684818AB259FFC3C7CE34C9DAEE69D70D010C70540
3B359BDAA5B9ADD10F6F7F2C19136157C6D83B33313266F1BA8B9E065A0C831A
47D767D4558876E85ABB0B8396FEE0C3327CFFEE23D0D7C24466E5410DD289DF
78C335D2BE90B5C581D536596D97F1F463EDD0A9C0118790E5780C0AC27A05B6
4DB13A023A3E5225E0377ED38749AE1F7714AE5E1D649A3AFCBBF060F416C0B7
47EC5BA54AA743154084CCBBC2A47037DDA09D9601412F731039746C1224A29D
191D9E221C06A7EF3CAD09AD5ADE65A51B6A915CA708D66C3EA93A0BE63CDF0C
D9A4546C9325291D11D02F4C2284918795A5B6E6CAA4CDA0371D452F65EC9097
657F51E83FCC22A30D649B80CEFD9F6FDD51AD33D3DB732FF26650A90912822F
9E77D8AC13393AA1B04DEDDF6C37B2D1DE50258300B9BB455AA872810C7948B1
EC866883E78F23DC9DFF60701F4F7C66B61198F8066DD493031D1A5EF91231B4
470B5A034CBA00791EE592FB4DAB538C280A8047F6290E265C8A88331305E67B
EEEA9A03950593605886E125446E5CCB325BF943C3D7F32D49651F5744A27DCE
6004208003A95DA1371E2EE456CC692DF7B71EAEFA2ED09E82012484AF7649C3
FA87A3AE44D93FB7A0D1A7A08A419AFFF7DF7065992B084D567645EE4D2FC29A
888E5E51A42920248E4BF77A7876799B1FD856AAB0EA73DCCBF7FB5979EF5F01
2CAF413DABCB3290E29A0CEE18F02BF93ACF5E651F75F1C47F2699BD0DA86F7C
5E18E1895ACE4B125EF346F608ECCD4DCDCD47DD7717EBC78AE3DDEAB5333174
18A8E967F635ADA03D2EFF80D463A521EB069C2B6271FD736442AF38A52EB58A
59D7A62D97171B45D2A6AFFB7E617C9265B466295CF70CB228FB295850D653FC
3FA379FB4FA0AD9F83269A99D550366B880AF05F913C074EEAEBE390144ECA2E
ABD1ED2BB6C54FAA70C9BA6C6794E3AC06D503EE876C915252EA75E6FA113380
E4E2A0CEA310D96BDFD883642BDB55525358ADA70C5ED0923B060EA6EEA5B735
D0D62E41842C07B79C0E8DC56C55084EE590D2BD58FD9784BCDCC3D498B69CD1
D7C24466E5410DD289DF78C335D2BE90B5C581D53AAA27CB98A914D22E25B41F
E35179D5E020790534D6BA1670B6783FA8DBA0D35DABEB8E162D2EA2ABCB6CC8
DF8E44430383881E5ED0F7F184DBAA9A394D0E08138E5B80D224D4E8FD6F8BD3
255103D823B86B712CD58FC2FF2C9B963C235A59BC191B84B9B6A2D87B85F21F
39F33AD118513BBA722CA46E21F697AFBFEE1989A09F9F9F7F29C1E0C0F28E3C
C64BB4933D3AECC99FEC69C3B047482C0D6F22E851DFDF1315C0679C0906D77A
B2144E810FFE3A942963C9B2584CE14922AAA9E3456AD60EAA44317BAA8D81C7
33BA78C0DEB8D1A2C9BF7CFAF3F6C87EFC09B43D790D3E80AE0EA0AEE1984C59
0DB7EE142C2444A3F4DFAB0C651407A58102F825D9534F2C1768DE55DD354014
B4AD13F8F95AB9B462F7A5950046C9C4A8CFF3CC3738D894770AD27F2BAA1A8A
C49D55D311D7B27E77C664BA4DA424125D1735CDCF888572C3D4E2F0230BB1FD
DAD562E249FC2F1392F7F378BB1754A2E80DE0D9FB55FAFEE3CCC1C812E9FAC3
31FD70975E3A0C72D37207D8A6034994F5A338B85C4ADD0A28C7A8FB765C4A04
DDCD6E0E7854CB47132679FBABF1DF31D16F8FA295CB56D75A836ED366963BD5
7A5FDDECE89ACF7D2EAABC3C655C247E6AA58C7B3A65D90C4598DE6DF2AA81DF
1E7AD672C058BC13013E94942CDCF8E20DEC5CD4696759CC337B6514AEED350F
45EB766C4ADF2EBF18F155CF537A97C212FB23022E75D57D24147D284196D0A5
17320294E3C7A3A1A1BE80ED8FF0A9C509420006D2229CC525B2E21332AF97ED
907BC5FAFBAAE31FCE73C77BFD275F6CD038A6DB9EC1FB4AA5AF31A16FC07D58
F6AD35B345BFA1CF7B0E9545795A6E62188B643BE9FFFFF69BF0E7C694E07807
E04F51013AA2E2215C03ADCA175FED41854EBA64EA1BFCA7B9ADFF7F4ACC6DBE
671126FE078F52AB62DB59A9B9AD1018F245F33A42CF224F327CCEB361EF2E2B
DD7DB751EC8C146E17EAAFC942F80C2313118CD80744B1160919C81067D75442
072E34982759C289C8F929334930B4AAC76A132C32DCBECD227134E7F747AEFB
6809685156270A536E5DC0236DA24612993121152E7E72353B4E4A19BC80F638
158DDC1B6DDD5CFAA56386D2232E51B3AA708541C4671738A1E0CC16CC401640
5B0F10C340F24A30B1C3E6AD87C7D4424486F4D2504B044E802A8B30DF26FC38
1D8D871D0D96566F0E4910D17124056A1F0AD7E9C1807ADA0EE65BF63372B918
2E8CE99142953DBEE0C0104B1292A1F83517BC28709D3864CA389D6CD1041740
7AC6A0DDA1E77D37AC83F0991A4EB1258E47A4E04D0DC15BA4F0C1D12F27F5DE
5E37A07F94A89276B909954466C7032C6FD3DE6ADE20EBA3FA90A309230B93A5
B74FF64283F15EAA51DF4C74CBB662283EA2C98CCAA3F64D2E64AB21C48203C6
08CCC92CFF820CBFE005BB5D4B098F3CC567E9DA9952F5F95048B505DD5C1BAD
049517C3A95D471EAE9D83E664D7CEF78D51D427D2A9126B689964B87ECC23E8
3F19351612FB0B1E70D91934375C410CFB8AC6C99D8665CD7E1CF880F99229AF
C16232CEBA6D7B35526797A8C94EA0723B3062409182103B078B6D4120137695
A8BE5DEC8383E556D1067F2D10E43F158978ABC35805453F84CC5EEC991A5CDC
8C33DBF86934B5368C099B59A7114410C608C749D1B7D493E67EBD9DF99EED9A
ABA70EBC005B7E807A854FD70F27639BAF68211DD20AF3D34A3498F21B00999A
CC476DBE2C5E7F404E59340CA51DBFEADFF2D6856FA15A36EEA17FDFF093D02F
B419CDEAA8924DD923B74F252664C67CEF45743658D8D43AF001ACCC0284EE83
D6B900DDC00EEB5E881FFE9B414C45B06FBC491330279C671334298D0621D516
6AC107F3AA081661CB91E004CEE7220A24C71BBAC196A23123BB399318B4D2A8
36F88D24D6FE3898D6D1C76D8F8E2C75D7460CE135C4E1D0349033D576ACDFF8
68AD600D610E32BDC63998EFFBD8BB34D2423CC6282C145F3F0029A07BA8C929
7BF8B0B016EDCAF80B9043EB61A3BA3E78F64ECDDADF68975D97F94EA8A698A5
CA287EBBD5193878AF0D3EE755BD5958FD3632E670306CAC950F8A1F66D4720D
DBEDC0E0857B057D019BB4C3C1C751481ED7C692CF08BD1EA6C5B30BE280953F
B8FFF50082E28A8D951207D7C494A7B2784E050A11FE8B1CC619F387E700EED9
D0956AE651C28A61DEDA9859E01101F5604685676CFFF64C9F2630CABF2F83D1
37D226BD5EF6EE8EE1EDC4194F1012D8BB958B6940681AEA50C7C8964FB0F377
23C0C4BFA4DFE3FD4AE99F5A8595EA873728E2C8B6D05AA6861E3ABED84D6761
ACEDE777F2D3BBF85031E42B976BF76149CEE298FA46B57981087E31FA46D2C1
91A16ED86E07D8E45FB322FD0B3D25692D2A0E7C4DB93BAC55016AE065951347
39401B0D8ACDA770B340277CE3950462318057F893A50B1BE89222348D7F09A7
FB9144E9162A946DFAAD95EE0B346EBBB899F1F37A0F89D4DAC9B7B0F3348A1A
FAAE48BE88E0E16B8E376035D6D75C10FB83D7B0EB9DCE189314BFC6A128924F
34C083E289918FCC37040DD4771C1218921FD978D54413617494E68E34391E25
42903355658BD278E67696161CDE14626D101B4E117C63F2E7A60627DC40CB9A
B1634701AD9AEAF5D11607A783874D716DC73DB1CBA45D33E0076E992C7DACD8
026D7F4C5AC1E5D796C0E5A79C61B5BF586A0FFF6BD2983A840B68D656FC1584
2D694DFBC7D7800CBAA90F3BF0022E66A54BE1059BD5D224B674AB4D2AD930F7
F724A305C4DB7BBE9E3E9D166FE9AF6147A8BC97C6834B365C39F4F5C39DC16D
F38ED4E2751BA59C0E9D7A0546E34F8BF633F656FE32F1FF453232617FCB7419
0A46165FBE654065FEA56AD83B17114EC5A7245AE7D9853223CADF1D781A7E4D
07DB3D4F16AE25026F52A8DDD0C9028D5B251EF32A329A624148C46F02C06DC0
6EDBDF4FC7DE2392905875FC28D07872F48FED6ECF7ADFBA23B66124203536CB
04FCAA433B9C6D4683C6C6B46A36ECA3A2B2AD548B7E6BC11F3404DFB91962B6
7EB0838F0E570E8CF04E85BA16BBB3123ECF3733A72A52F7F904C17DC217C7A9
CA604CF8401B289C1AFE778297F5248A37F2CD354ACE5EFEAE295973F7FA2EC0
8BA400C2BBCF8152ABA14FA9FEC5040D1B278B4D30DECAD8C97075573080E67A
B9F074981BA85FE7B19453C2013BB61AEFC3A15FC3CBB1E614186292D44DCC6A
69F94C1E03F1215872715967549F665E4D31FA89D07F9F7B71AABA6AAE1F3C1C
D65F797C3D02191EA2AA3B8A85038832720291FAAC68BB43B9A09A43832B289E
C07FF27F93B72A12C91CBBDB130C200349628F5956A835CBA540866CB82A2248
4EBB508F45A2D621074C5B93A4B520F1284E1B7C5D8474A5E521E7AD69BCB87C
68F1DF66B627B992C83E67679EA3C924E8517AEC1141FEB78E3658C308139AD4
4F7081DA3E8F839EECED8A0313F0A6DB604D39EE99D02D3FE7C02D0BF476D768
D438A2C24653F345F4642D12EA28AFB297DE661883CC13A06C3620FAD86F61ED
E3925484E3FA45344C7FD3D4D3A68B7BBB2A964AB2BE5A83FBE336D8C2D1325E
033E6CA7B01808D190FFC22AF831712233AA23BA994FB0C2B8AD99539008D50D
C093C9E693265E828A441345EA5C4EECC58BFC3D4AFA6168B74E2261A1B0741D
368D2D66F5AA22A1627640EA969285AD222A233EC61899AD22102AE68685A0E9
78D4C5714622E75955FF3E78C4575D810E7E050508B476A385CEC705A2EB89D7
F32FBD60C08B86A3021A5E482C8AE579801B110C76FD7357B8B0659B1BCD7335
D0A83ABBAC55FD47082DBE00ECB6C5C0F3CB6F2433FA52B2594B85C1F204B650
9D5201534954EAF50FBA122F4899016E04B4623EDD9332FD97D03F0162CC8BDB
0FF69CC3901209AE676967CFC73A878756C67A46AE14E613A8B3A93323427608
2E17993B297043B2F75674AA08FB0BFC904015AA56AE725E5AEE820FFAC05686
3E893BFF7C0C4F83D0D961AFC767E7024AE30751F349735B6CF6543D1067A9AA
939ADE975C80C4626D6BFE9FDA94629DB2CE69239856F03E138D66F8F733E229
271102112617F14FD5C3C6C486658937E811DEC0282EE3D0E3C1A31B94D7F13A
33FE49FED460A102B225FF51C3CAD527A8BF9BF8D495F7B532647689F1F21366
57C025AD24664C9C8191484D5D8E1304268CD4715C7B381ADD4976C0C856986C
FC6730241A41A2AEB1DE5FBA892DFACE7CBA94036E7A98F6B77F65031C7D4F88
38154177B46BFEC2D3481EF9EE5D5BAE73131662CFFF5E427A5F5DBB56FE1FC8
15414798C06E05F9BEF1443CD00570B204F24BA7D6B2F266806E6B3FD434FDE1
329BEFE5A0C84E3977329139F1192DF3F9D6BDE77DD5870ADEC8900D6346957B
84C8C7258B552DF354FC6CEB056DA1B1163C274D54F1350C83A736479DF26E8C
FF16EEEF9346A156B1131100E3AF27DC49B4DA067FDF88CEF019BDDF15F1864F
5406CF60DC00C440EEC436274984B73FD1A0031F824B4379E2E62864039797E5
87FC41E5C04B4690A2F2526D0272FD1B8220A2F5882788FEBDF78B312FF0A732
2C021122E962CD756DE48DA93798FBDD034F46AD3FA9E8C2D786CB4E75B9CED1
03496C03093961B8215359D6875C634D9ACEF68ECA80DEC81A3B612DBBC52B97
CEB83FAEE7B897F107662E8467FAC8D9E2AA0F906E7211622FCCA2C5462EA92B
205DD2FB6D547ED3D559005ED37BEB1ABEED9E395F1F1DD95ECC8B4432266F91
66273B59935B388CF75B423EDFBC4680B3A107EA9167B4A22855C1F6110A42D0
F70DAB4D6B7E2187A3BF218A6457C7CCBC0B06CE3AF4C560DF495B58D53E718D
89741F32C6351F8C78E4B9A0F49AFF1B3302A64232D15AE1B845171FD57FBC1E
6470FBE00FFFF6D3664C5D0355F8BF415C1A47585A4736B1045640800B098489
8282CB81A1D8FD3B8EF85867862B8FFA7167A39E37833AFDB4BBA8D5D855EAE0
0597C351139020D27A614DF27C3A72B169AA4B53EB63496BE00FAAA681420DA7
DC25AFA04AD42EBAA71F635AD4656A8411543FD8B3DB6B7ACB32CA6E4DEC6127
A633D126CD63FDEE48E210E261C16EF1A0236360B2A298C718416514400EB47B
86E2FB3F8777BA26C0DA8D6350B352014576858A26DF969402AB30E0F9C56CAD
A5D9811D78900B7D347046FF9C2A9DA7AEE1F42E318FAC7813157D0F0ADBEC73
9208D41C02C71A920C9DC8CABFF7BABFC41EEF179A9E95A7B2A70E3A9170C482
33DB00A098BA24A0C4A864AD85DF65F71B56A2E8BAC52A17FB2D357BBBFB0E12
CD481F96252AB7402213DF9BB57411622FCCA2C5462EA92B205DD2FB6D547ED3
D55900582DC2A7C10394B4FA2872BB77817D1E2258EB8E4A109699B8A1F921BA
F0ED78D89F33F144043D0FEE36BBF30AFF155EBDF9AB2A053F432A3149B7BA16
8CA488A7CCCFF0B23C07EDE4EA5BEC2AA85224F7C29A671F032195D9DDE7F51D
D5C45AF9CB8A6362CD7F38CC43C354FB4992CA8AA113256A370E02BCEB767B25
5C72846F1570C10ED164D1841B2FE33F3DF5262A92E98F7A5873F70B91A6C6DB
6BA74C7DC0D0D0A183BD254DBFAA7388CF2CBBF3342BE2E7EA49AABA75AEEEC5
DDE1D8BF68483C3D2447F4FFF02D0050E6489C4957F418895E6576FD8A8492C7
E1AB315D335B1A481FE3DB344A5F50DA95EF3F0F93CD2305D67A473BCBE4830A
B55944F07DE38907B58D16FCC2A074E4B55A869C96FCA78117347B9CFA480FF4
A19B9C158291D7F537E66AF56C22A58D8D35E53CEFC1C884F25A63CA278DCC38
682E1BC6D134930242730DFD156C0584682B19C3799784C1394A7F95FA260EA1
3D49E335E7800708D97515CB6CF112C2A89D2D44816E907417BF962CB750BE2E
146ECBDD16A1584F3EA2AB3D9A37867D85840C6AB9269E1FFD3D6432231D47B3
729F7F9F81AEE979C967DC7FC302C4D295E606E3BEB5DD0B068D6EB99F5F10C1
83245F1B733C17D3B854D53BA686CF408A174C4095D3732590B5E767CC184E97
59AEBEA33FBFEF7360758B40E87EFB947F6EF31DCC61CDDFC39A2771827A03FB
E2486B329E785A8113B00497A08154752DCC693ACDBECD3B9F74A6B21D04D33D
8D6867E328F1F84E503918D4F7A808F1DD37AAA08EF4F57EA64B4B227379834B
494CB4FAD1E78E9C6871F23DD7DEA7C7D956560D8BA51ABB82EF2B3AD0DC0EDC
D1DCE78055807A3A8E822A31DEC6D989490ADE623FD53D3DCABB2ABAEF03EE07
C3EDE4F0AF6B7A776C63DADDCDD47EA7CC5A25C793F813C55BE3B470A5800B4F
EDC4A99823CAFF87E567B96574144DFFC8BB0B9B743486E0A343D68682DDD7E1
0A9FB3BCBD8BD4D92DACE0A7B4068772E5278DC12151835699EDADD87DC8C632
5F0460690BE677AA6DB7E0250B5194D04A18A3CDD0D72D52948373E38251C508
E4505E845177AB715C3E6AB79D37E3F452F951612427A24B996F9F170CA2D76D
94BCE9E2F06F49A6F65CFF1A4F8BA05BFF847954D298A39FCDFBCB88AC0EA6AA
CCAB081537DBE4849DE52AF793A4937CFC9E9ACC236CE307310AA50B8A67181C
0DDB2999F26EED9D32C373613F2E788C56EB0FA4ED1F232CACF2867E6F462C04
4BC20DA885EDCD48017EB746DDA8ED86888DDA3065C5091D99EEEAC430924707
3044D4B1F6F9AD92CDAEAB2DAEE928681EF627A2AAD93DD3DA2A47FC87C5E3CF
18CE4227ED29B9A8CF29DB40473AEFA67EEF8FB207ACB013947A866A8ACE63BB
825F4B0F36E5B0018C20AB43FB4C215C95659DD7D7207F8C04C021434CC2FDC3
5A4FDC88E365F40B9D576708B6B6AA87B5EBACB8F10A27E2B97314A9BFED3E11
45BF128BFD65CC057FE1DB587C8B2D7A74FCA897EE756EEF785C969EFCA683A8
3C9AD337F4726906EB3D588F93D2104F2FE63F810E6A3000E8960E71B73E9003
276E22FA42881EF50DFCF371A8C762AF5BD7C49E875699AB0AF95891548445E2
423C73FBF82E9961A7926D1A05FDB243631EFA7025B92E55DD5D5897F13EDBB3
356F9E2B9DE1FBE209F9CA03F6B4CA4588D5430DD9943FA6EE299A4FDAD6B1C6
2ED755C31CBDECBBB7C3FBCA1B459501F78B07E4A73F5DB00C952DEE1F6CE6A0
752411EC61354347A5FD43D296FC220C6416877F7F1995EA262713DA7EC6ABDB
A76084AF0E901B4CB170B03CC44F6B34BC47F3A3226AC68289D2EC32B466D21C
9B802FF1810458E2756AEF02A8FD4A64972D941EC585207C0E0AE908826A5894
9611AD7ACADC778ED2784B3423154B7FC03D43F47C6F5546EDB0EDE9BC6DFFF5
67025D6E00A898F0FA2804E0BDA68B696F299A0821E42C97CC50E6C4D6C1ABDA
A045DF3C2F7F9F8206F24A189E57A0B5C178B7326860AF2A3347D964A134CC09
9A59CC5126F95FA957C3CE225C0FDF7C0B02C3678DF44F20E718545C2F6F7E7E
A4526FBC431FA82095A39C74183F41E46F2C56BCB59CE6AEF7E91331ED5D9A4E
479C21D6A7DA9D6B0B4FF494C2668BB221AB188DC03492775B2B72DAA50008CE
4A663353A1DAB9DA50258300B9BB455AA872810C7948B1EC866883E78A3F4C74
3DCDAD88BEF8B3F7104BCAA6E752EE90D2B38F2DA6707A896EC55D98E82E3417
677CEE755D41C6192B100D56F15192E10DCF5EA55C12219C8AF09C7FEA6FD001
3BC73E02B5065DDE064D64B07C5041BDB97BAB801A993B33CB35844961E68842
CFC30E62F392C5C166ADC35156CB090E79A5CC212295946E98647A6F5903A6BA
EDF01C0D83A41379B0ECFF59CE398BBCF79F56450208CC12BAF282AF59619638
A93EC62A029471B6078CFFD8A93C63A2AE944CDEDB8CB0483DBAE03637CC4C30
DF26D99F628D62581D54A0EADF9DEFFB3DB34A9F052BCE33D0F67FAE47CF016E
3B3AD1A5C090108D4964C7FD5E57B7B839E058C6917D4D2261EF3B27F4F84A27
603543947A1C2DFD3164CE25F9A19F120360F93E7BE38AFBB5932C570E8F1106
F98799495DBB3A05C04BD649053FD29385E9D3822007395A5D78C698C7366C1C
453FD7CC6E94C29F597CE7E75A8F7613805064BA22FE6411CFF2DF50799947D6
5414D629B139C0B3C2BF3D2905CFFAE9EAF0BBF3A22B3EA98F5ADA485A644A34
CD0F70B5ADA7DCC9E4CBB91AE2FAA8D878652A4CAFD1F9EB162702D1F6805D85
A8216B17742ED304B2996DC77BEA528DD00039AA5387ADAC3617AD77C899FE86
E54B8BDB1490AC76FF84E5C3FD68A234C9BECC29AB2EA93D4D4B5A2BCEB8AB14
CF291E7A18859EDE149FF3F07B59EDA5362CDECCBC03A19FCF1125C2B0BA6F14
13D796C008A2ECD55E062CDFDFD9C0C549CEC434910D8AEAA207BEB7A8B22721
7A2570A2487847107009B163709687F03E8904C670CBFF1BC60D1A07473EB703
C2B27847402CA4B685827479170AE5F99FF4C1D98BA42AA91660B2AE39F7BAA5
A9077FB463B8C35CA96A594D27DA3C1237C61DE1A5F5B26FC8966F17D3D545F7
DA471CC77A08633A53B62B760DF589FB2CF3EBA2F6AAC3F6FD242C25F6952AC5
5C24ED123A69E8EEA7221CBBE91BC55A81CC89FDE91EA283543BFC3DB722C5BE
799C9F485827AB10332BFA0505B5EFA4F5C59B381527B753DEDB0BBB7D3F0376
8BAF8691733BF48669EC0B1D817B4DB795BFBCC80F4EFBE3D7E3776948F8D116
96805A94EF9D879BB2E5DF7188DC7DDF4D7C8273211809C8DCFF798F2ABFC4F3
539392985C4CB324B0007E830B78301A03015901FD3A2CD7D5958BC9670F3722
5555B3B50E5204E612A84E61DA20F004DDB1EA743DEAB15756522DE65BA32464
0B70E9B902E9FB32F894C4CF451DD10098E54CE3F758E2C884D6830B00E1FB1F
743CA70F98903806F30AF37522828FD5DE3EC220C719B63A95EE943F25A823A8
8C7E731F647895CECD96CA4A2FB08545662DE0616473D1DD73635F2A6D25FF8F
941042919BC8E49987E0A462594AFB132AF95D2C459ABFECFD7096366E004D43
6C27CC46EEF80FA1A05AB90D788643BDAA80A3358D068EA5038FAC8EDC241DC3
360844AD12B1FF1DA78D51B6F3880C38FB2349BE51D981A08AA153E57F9DCD40
430507B2814046F5F211E16EACD389622F0C6FABF465CD8674717E87E6481701
FD1E1B8705C512C0108055A1BDFD83F4E6FB7C769819702617D08C10F4DC99E8
0028ADA6938F1BBF331D54AF9C627586F74CA84272C6A6AA48D9FF64C0A8959C
2DDC8B5F4F725ED7106CB261CAB582F367CCFEFDEF1C42C612D947DF7BF71424
AABF005BDAB11CB8C655A72354626722C510D6E242E10D29DEF786D7BBDAA2A3
5EB13FD17790793B2B4A9E06A916D8C6A93A6C0E4A2AE7B930B69005A3A2C122
5FF0F5DDA04B584EF886716F299981EC9BEA227BEE986A9A0D47A669C20B732A
AB2589536FA3B43E92840BD29870214BA57E5DDD4315463D662B9274D2E29312
ACAA9B901E3CC8090E857AB029E6C75123998FC42D3E0C3F20960AEF3549801B
F7518806C6D295955BB71395C43390497BB8F03AC4B9254462A42F410D55B6F5
4027C1582963712777AFB86E4FDDC0F31F92595FE56D439417455C5DF15519B9
0355ABACCAB80AFEE37A412B255DD542E77E5FF7E1744D529624024E35566FF0
EF71D60ABD9581F43AFC4A1BD1D7AB84C2DDCF5DA974B2068488AE47A9F07ED5
EB4D391DCD5D08268EAB44BA2650CBFC0CA9B55CBEAF992D7C9F3D4C2CB294E4
4361808DB41180D66B2A43973F90045EC2A8437DF5F02A69E236E3DA43171237
1A1D71BCEF8BAAC89772FBFE65D33E336D9595FD349D0874D0203F8C21D9CC04
E187BE53F8FED4F33633BA03A22DC683B3C8533624EA8841787FEC863F584F1F
FABFAD3A2E6AD0F142653DA546D27C470377E95C9B1336AE10C98008512E1E9E
B36A96421288D8A846DA9F3D3B8DCF710DD336290176B3E0B546698B6A12F524
DC97030DFB981F11116C45649029E8664B1EF5856534B80E1124ABC86D6376AC
6E3F7414E4A017F9FAE43F47C36E5544A0C54A415C5AB2A72BC3F9A63FC847DC
244530BB6D83D8495BCBD805D3FB3054DFF46F83F65741B1017E96CC1AFBF465
C25A312852770DAB7D39E1217619DADD5A529B743B0977263E4EB261F6718EBF
15ABA15B45CE0008CF15222103B3BC5F55E235A90201A826568CF2C21EE1C3E7
45A96B9D1102CB26CBE3E62D0410DA79BAB5DBE07DEC2628A57CD458DF6ED9F8
FAF6B0A70F46877976C12FF9758C0625FAB1DEA0D55F11A0674E11C30C0E964B
009A0D5AE5DADC353EF52CCCCE5A99EDC232F01C9EA889DA4DAA4227182ACF45
5865CA526CD0C3AF1F22BD3E3ED3DF208D3C2EAD0BD5AD97E55CAC100AE56356
4FC1EDA0CDAA94F414ABCA46ECF689BA685F1BD831B4271EE6BF93276CC51C86
FEBB15424B17BAACFAD06CDD337834C067CA415362050ECB9A7C3AB8AB6C697A
D5845D58D9ED8F00ADFC43DF9A0143E2ECED58D83420F4B02BD746BA78DA8CBE
C2E6CF74853B93B427A89089E953E1E2F0364B9E535558146EA08DA0C652BCE0
1A9FA4A9F7E83E5A35ECC699EB8815ABFD76B252DA958829F3C7D61F31822B91
9195B5862C96EA1243561331C2D9EE7B65B82582FF665721196CC9E9DE49E5BC
7F4070BA732D56CE2A0B7759542BA952A714D454416CB94A007509B3DEE24837
AA2077762F4B71862C04384D39621BD0FC52CB938CB2D6250B9B5A29475E6D8C
7941A079B1FD89BA0DF0E23866F7FBAF466136460A8ABDC4FB7A6B0BB95D213C
9E844A30EF07FF70EADB5D360E52B0879E3FF37E86E0541451E2504DC6092E53
F92783E0AF62957C5F79B80DA6F7A9E9B5ED66F92F3918E329298D9F6293E861
4966D4EB74CBB3229F32D00F99B504DD1602FBCC202CC8046D2C6F867D0207BD
48FE8067168C4412FC80CDBA62F8B5EE4799A66A432D5FA8044190358D9A42B0
2D8D79081DFC1266E398C58FF8074C8E860FE132AC46A5AA4DD33561D6864F50
6D98DAFC5178F2888E87D68C0B8C9CF3C303218DDE862922A8F80A0DD8B36675
E83371DDD0804521CD931104741A6C9845338F0D171803EC04C9534EA7560311
2A781CB563378D8C5CB7F8729D436B65B80B3ABBF6F3A7A5FBADAB4FCA85D1E0
E9149E638845279D7D1882C85174FC32A61B787769985079D60CF71131977E01
B98BD4D92DACE0A7B4068772E5278DC1215183569F9F606219F17E801AF5F306
13E7A2C3D32301ADBCFAAE454977605D7A072513C78F710DC9A54F1891759DBC
520CCFB55CA9534511D08883DE4ECD76DFEF5D26165777E3A6AC573D7380FC35
63D88AEDC9A339CF931828B48A786E23104BF1F2120197E9029CCEC265896D74
07CDFEFB4F82C7052CA4B6D9562B4D49DEDAF13B1FAEA97978E66186A98D901B
B47DE5D3C0CB6239FB2D5B4AE3224D98927206B1397E32E2D63C350442E2115B
8D8EEB7C04319771FDCDC0F19C8D0285CBCE07513C22253B9753998B172BB857
A128D43EC71195255DB36DCC13A89DC815DEBD8D82FC9AAF598C88CEF2A15D6B
13B95692C2467A80D01B800831E129F0DBDD7BFBBEB8C1E91EDC4F4ABAE63F91
79E939E8E50F7BE4118ECC2CC40F691AE97489E86F730074CEF8E44EA7FC0D28
FF3E8AD35CF856DCBF0AFB088AEB39EE217541A4C17DF1A012D2896DFBD323C6
1060D30B9407C3D09FFCAD95A1C64FFBC6312A96DFB2B087FD918D3B0ACAB4DD
394F6FA4728AF2CEED07C4C304955D53D70756AFD54C0DF38C3D61071868A4CE
3EE4C9F842EF5F146D57D0287D62D1A34793E173D032F164360D643F1880D27C
0F7D73029F171028FDDF8B55093791EA7C2765D1983BD77CC4F02023B383E397
12D0264CB3CB960EAE6489CD6C8FB1F1FE5D283A981437DA8E17399F86CE048F
4C870A446EB3E06BFDEF95D17AECAA204ECC569F78BD73D380C572E5087A5556
397E485D176692361A09B1D7853518F8522B9D21C93BEA7C0092280431577112
645FA4CD45A4C459D5F7693C618A5993DA8F9F0E434C04CC0B14B0B5818A6680
7B57C9DF5BC56081F75C01250653512530A9EAA3BB232362BBD54993A73001BB
38598B98C22D00E3A9DABC4A0462936E42FA97182259D06005CB78305087DF37
9612E501BD37874E1B97916A78683B9A3AD981AB1D33B3D8C3BF7E8C5A4CFA44
553B25512B68E1F53B4321870D97750385866B1F923D80B19CCF78577C8065C0
08159E38B52F54B227A0C18DA8A43ADB7593E98E5E0C7519713F452774D1DF23
5DE89D464EF44F2C9297ECBF2840EC675E1354B3A8B9591B661400E4F79E0702
2ACDC7705AF6EB8DA3E68A7D3D06321D6DB80CD676DACAB1311AAA28A04F8FA4
3925639BEF4B041AD7722616B477CCFE4F4E19F17749048BE9FE976507B85FA6
4C9620FBB49FD4F24B11E7DF3C07DEA3C6E6CFB4F26A4B2603990736834B84ED
6B5720A8E52BF72DE7D89B9478948503286711952C3D3F4E83A712EE63AA3DAD
FD632A9621D26B4CFF003070037CBDE5793A1BC975B49B183F007E81DA9A798F
7F062708C79884896B537462AB0B27E20C9D3CF8D27B81A55DE3F509791369E2
E54C06B408FEE2918DFD868DC4480DBD82F856D2C05DE5DBADDAE7385F404488
04C7541E751784D52973F89341C7723D718EE15D3117574C43A8A8D075F4FF9D
F5B1BC2E13055CAED61FF851067307FAB0ADB527A5AC8388A0264C6A7AF6071B
2B9AD4A7D4E71CF7EC55A51AB1B4803CC515471D4FB80DF03D2BAF5E8AA097D6
A86EF230A314B3E55EDA5E61D1A1451EDD31135B78B03216A0164552AE036D30
935949DB8929F2E389124EF7F7E67189C32D8598046EF67D9CC27499F821BC24
5B3E266DEFB69FE32FC2649522985C27941C58E4F50B911A6C11B7F5F9B82BCB
01902D82E4EB6BC1D263A3F79FF9AA614BC64F3F70591B8E9107DAECC5D0D487
96C4835D63317559332B34FB651CC92781B4882D36D3C1FE65B2E5512F6B53D0
AF465F7316E568E305EAC163090F36FD0CA143FBA1C9F662A35F3BEB5A529B51
2E85E0C643C2F2B4BA15AD718CC5E605CD6C3C5A46E851536CDDCC32B1BA21DA
AB34F2A1CD801662934D7876C663B79E1B46B00F5554A12B671BB2CA1398F65F
D0A764A54500F0429E0883F53F8CF6F267B35795C7626A32B6E41849E355B252
1787F7A76DD68F7E5D640C87FFA05C0EA432E61552F957C636987F2ED81971E9
FC729AFC1E778A3C012D1B293C733E90B60F0DB14D360264AA4469FD8D653C28
D36EA55892105E54929F64A3C8A01C8DAA5F5DCA27C71ABAAA2524F7D33DE2C3
F202B96AB0C59A00DF442CD1F50796CADE8F0C39DF8F351E153B539BF8237387
D882F998D969E5996187EB83174F748F9F5C6E7C9E45C5DC39EE11FDE0AE7493
6FB0B1B5F204DB89A8805F8D77A933DF13534861328A5E4673A4B180A8AE1BEA
97194BD2AF25F28AD6A30D5AE7013F99DFD464CEA9BF8F1548BA93FADCA29EA1
31D482990CB64C201664D2D13D77711369DD518B9E0DA580DDEBC4B9FC00D132
8949B97B1C65115DF384C3FE28C017EAEB5CA8EC4897901FBAF7C899327A4C80
ED8F1CDA2D49D7672E195B09727629C1A5EFFDACF4DFEE91E68DD6A7471F79E4
C7B4BEA87D0B1D848B21F9B1A024989A6D9109144050CAA7960FE9A98FC87335
2781B18DB090FBB6D3FC3C71E67F46782301F01E3F4891F6E169747D0AEC4026
7FE1D3FD77700AC774EC43DBC0E10C70B7C2F14483E18E99BADDE9FD1364F008
8C1A95CED5A4D2401A80CE247323CCA5752AAF92BFBAC68A88FA66C49E1490EC
01C9401D25CC981E526F1D803C93B2A2A07D4200535F51B9CF26A817DE43146A
E4E04FA79AA91C814B18ABD2C55E639C1F80068C9B0AED83074C6270B177BAA1
8F1975F0E5D759C51EE7A31E4510F5196DF93DC22D53B21CC59EF1AD25F28AD6
A30D5AE7013F99DFD464CEA9BF8F154BDE44B33C06F6E50CD5E02F0313BEEF10
80B8E63CC100145EE1CF2600212964DB2ED1CF81F3E927856884C3C1BB65B5E9
E1260F6699D945A611A7EA348DB3C86BE4B4DB0FCD38B5901221B1DC3066AEFE
92E3FBB7E4176DAB13FDB286FAC18078C9EFE517926FCBB34E12E947B5120A5D
9397D02D7F1A024EF4D18D753C02DBB7AE3EA05189872E57D5B88BB9D233B5E4
7EEF26714A4CC8923A9136F58AE000F3E4E56446467C09F885630C7E96643BE5
3D7E30FF26A1AB03592F9372AF27DDEAEFF8B80E1A4AB3834143055A7ACDAF5C
195B4D4014AE118F07B7C4C930CD757FB28F8FD39312BA79A229868F2C81C2F4
55F4721435DCD24D67DED3C5ADF52EEDE57EF3EAC944D970B725574EFD751A6B
7C9AFE6196B3E2024B31F85CCFDCE8FE66249922A5752F68183CEB0C0D895773
952F4CFF196A41313B2A3FE4B50F3B2D61230D26B72776C9E82A61C7D79481D9
1814C47A0A3BFAF7465542D6822F564EC4B8F282AF59619638A93EC62A029471
B6078CFFD8AB99B3B63D78163F227F1385113B9D2A2F0C56DB55B7349E7CBD9D
F99EED9AABA70EBC005B7E807A854FD70F23244F74336231E9136F61962383C6
5150264A443188410F1CA9AD8CA4892D103A1F8AC88267A1B6600190E9DFA00E
D203C9F199C8D54B46606807DD209828B487303573B0D237AB3A9CE8C36492E9
9AED33256A1A6F3303F7A87BE1741043EB837C589B4CEFAC955BD04F4BCB9D5E
DC100A5DCED9628B01EC6F47232DE5CB73A83C1B82D1CEE1A00BC42B92571D1C
B29505E041FB5D15E78F084A1B9DD9F45F7F5D8BA3FA244C616DE064162ABED4
300BFF344D46262F0331241D87492D92E8936325CF2A102C14A0086A3A824777
3BF93CE143AB03DA13405FD339E7F17DE268E380CE610E6D9D1972AFB8659527
3E193C824705366A2DD32C0F4AC6CE4AAFE63836A1EC53E443C157BFFB7B901E
2D1CE638FD0D280DBDB8E20C47C7832C9671E04C9E37D08F89E84B1DCE7F2A0B
B0078EB6BC83820C06862DAB8EFE4893B9AF7EC84F69B0C95D4FB120530AD2DD
9F52E223FD098660B344B76A7FE3FC83B58C2D1E30248B5410C7C68DC45383A6
470A21648D9F06AA962C29680C0EF7184211C879D1CFA2AD39885649818DEBCD
A7CA7D3C3A6403B9A7675DC69ED861AA0478A60970305CC39BBC3BA6A8099856
FA043E143FA1A5B5F00968A8DA48E5ED3A2BA43BA9064D59C171AE87BB22E474
4FD26EA55892105E54929F64A3C8A01C8DAA5F5DCA24A7B4E52F30E55B902ACC
35DE87E70DE8EDFE7D803CBEB9E428E2E96E73CD01019E64A01054E5E94ABF52
DD9EFF0427EBE3F8C28EC36BA0E331071D9B11BF19F5E6E01322EC7B74F1E8A3
69DAAB3305C440A686E566386C4BC20AE0FE9CF57C6AFB258F73816CC190CAF2
5D9965C88F9594F80315901081B98FF3AC06F5C24B6A33DC92C2261C6222A84D
10CF5EE66EC13A71302C6786D05D4197E95ACE0EC7494D4247243DFA8385DBC5
760B397F0EFC6780ECEC244A1F30330B1C2495DBC7E205C4B0C7F6B19DB9BFD9
6112F27F9B4CDC7DC12D52AE6A36620F4FE5B14CA02F60B14F474E9D6CC7C87B
4FD6EDAD6F6F8AB10983B65326D7E2B9AC32B3983D26857286BAB3202D09F51E
5D893DB3D468C38E8FAEC54B50AAE18B4653555ECF1F6CB580E5E0E90F580B79
54B91AF65067C3C491CFCFC20F9EF9B7CB7F1D174B2E94953F541C3B84D43428
6DD1B5C4C56944521E76439B5DCA7732A29F37A08F1A2A1FB4E7A6CE89EA7C92
E036C703AD5C787C37A4430828C44D874EE1812B3F153E63FE095A87CC113B93
0D6A0A90C45CB9FB0D893F79F3230443D11313D6EBB9369B19CD50EFE1EDDF11
4903155F14A3D27477386B661C6459EF6A8492F020E67407CF321E01EE8F2811
A9C0A800303F0722046046DC94B5017D456E865FB2E416C4EBF62D87CF6CE663
57C4904B79B704C799AE090C2E12AA3667DEB5AE7DFBB73FD1A0039F86E84890
03F84951D87FE955B227F74202FAA42ABCBC4C8F87471310CA26AE9429BDAD98
8E5147C913B2E2A96821ABD9CC0AEA383EC8ABF7DE287FA97D0495E28CB8E2FE
2A4CC0B9DE515F7639622660DBAB749090871FD2316356C3CF06A91C423E8BB5
CCCCD5FD1F4EFDE44CD22214DD1C4B36E9D261249BF3BD8484D4C450FD2CC53E
9D5D933D8D348873F2BC98C00EAB746B3E6A119B0E7CAE91559DC6A5B3BAB60B
7DCD5F96C0B1D41127FA6FD0E462D586D2298E6DB61197605D6577A03DE99BB7
8A0AA1139DF5414824E7D72B4EC7BE92DE482C8FB5537B85222094CC28A53CBD
90FB755F36FB252F0335FB50B3370C94D0AAFC1CEE5C1376F02A37C14EF4FE41
6F8FB3B918C454BD5774AAFB220D5022527EFA589455B7C07547E3BAAA4AA7CD
8A238456094C22BE50AA44C469EADEE3FE6E519F3DF7A42DCD24B818942E5AA2
C99D424B8AB1F5A341530C88F64248086F20B663F5490FF79AC9C6851E779043
D6DDBCE84390CCB304E5A7B771CDAF55815279A3B8306D923FD97B222C97AD9F
6A941E5C554000A47EB5D9E377BBC162A89E871A00B9B346B62199A1AAA40D8B
35AC2F519FA7A9123A70E5B8F42D90434A48E3F4993DDF5FDF93C9E21FA1EC0A
CB4D27E6C934A2155DC2E79631499FB05BB37453FFDCF3EB4BFC854048483532
3410B2CF4626600B1F8E8118662259AB0CCC303901A207C83125D327B2769542
A31B0BE8A05CA56FE842051FE87EC913E4094304B434EE7A5DDFC7AC37A6D9E4
9F46CA0B3AAE98A934A36DFD2240493803D47C96A2745580EDC957AC4291730A
86EC4A4182329F95AB474108A296063BF7B01D5F186B2E093E82F0712F57138F
D0BF4DD5993987EDFB19660637741BE8D98416D772984988C4219051A2214B3B
FD198AC85850B173C7EA7ED2705E70F62B7A1CFAFDEFA9CDDBC45DDDF5DEF3AE
D93DB4833D4DE82386676CAE2D18B84333575A237C9637BC3A58D7BB96AFD1BD
3F1808F701A335B9FA7332AAF569948EC55BAD355BBD85D66D6166F8D6F0929D
5D05E540124D1983CF4E2EC062206BD4502826B180CC4F6E2E9E73D5148A0EA4
3D89ACD8EDEAAD8234457C149A25CE9F8E3F4F73415A620F8F1D9563FE9CD897
B19C6DB033B5C6294AA6F5B93DEACADC3D74931DF11F8F2DA6B617473941A1ED
19DF2F6C55C067882371B36819ED22A9E83B7C851AAC3FB59E4C7FCDCD4BE637
C8597EE5FD1996F8AAE791FF65FB53F78C6F639F55A1790C3635D75B805B4F34
26C6C6E12E081339CDBD461E5CCC80405EF270A816607F248C5C1D5C56035A8F
FDC8F3DE95F1F507FEC112903F2439C1E08D8924BAEFB2D1BECC5EA35F7C4AF0
39C7D12B6BA9169218D70EF879255E6D7B0D4E3F7174153A5D789E88984E0A07
EE0942CC8CBC6DB7433B1B871A62E60353F613EC6187DCBF7967263679C8C367
5A673E6E6554D774D715491E2407EF7840DEBD26DA522BF30ABD1E551A9276EA
210906DC669AB337A41767EDF87245ADDCD1E94D2FEE120C7BA60A464E7A72FE
D312680E7155F6CD439AA96488958D280DE6EE3E50C07073C5F650547746D396
93734B16AB45A183B45857E4B8F9D6695EF332BD3BAA9EE551A4B142D8DE6DE8
9D1BA848F9FDECC6604E7D488ECF152B69493A9A0A8A7BBF8E4801DA35056CA0
0B0CEED0050C709C5F3E7C53FB4FBAEB6078B410935DF7D6D5064271899310B8
7CBA63800A37B6EDB5E58E81BCA267212F3D633FB8598D3F2F175BF705D4F708
9B2EBFFE432B337B76C0863B38A3AF14DD0F6D8741C2E06E6011FC30FDC6532F
CC7F3D2A58DF176667500E58782156ED773734596699171559DFD21DBE1EB344
E7ECCD28B98FBB721C2095CA9DB9DFD4673958D4D4F1CB3CD4D6AE55A5C48AF2
6AC803908EC18704FB8322977A15C8ECDD04BE95BF3724E4764D041D37D1EC32
C188F311A107CC79FE5120FF3149465D40C2834C6D68F3A0B7F152A9EACD5E0E
0D21CD6BEB763CE338A0A9D593462CF91C1DC3D228BCF7E99F93FFCA6A27BB12
FF9B399DB1AF4BA9A5705502F55E4CCF721BDCB9FCF3DD9FEC9D480599090307
21E8CC5D32447BAF3896E4A38C1576C9EE90FE9E0A9F5EC4928A31B813890836
371F7864291A3B3F753DEF98426130A132BE546B05E234E05E9C82777BDE4191
AA254EDA92887905BF33AE9FD2A364E65BAAFD767FC8DAFED6774B61B7E0366B
B5132981E7111A7668EB5E73730A4F8DDEAE362896AD30511AC6077F046C5DC0
D0400E1D29B35CA24FEA1E4C71D8E14AED4F06B3F1FB4AB16280601D4308FB33
E2B90CD3643461C090498AA7064CD84DC256855A3DFCCEC584E60274C80FD891
9AE84F31418152E3EF415F3BEDDD35FBF1B082396A17F0870204E2DD1FB9EBC9
448B8D0AE4D2F2BEBE39239ADB477FBD2B0D86B7025004216F6017E347DE8BD4
C3C7EF12F4BAEEDA8DD594F9FDD3F0341AC33F871D66D40597E4F20CAD0CC21D
2C3A11820C06B89FE882315994E7704F256531E5C82CAECA85AD750840174A99
A2367CDFA06D801B1588A55CD8FBC5B1A74A1F90D104EBADB9DA093211734428
05CF8F8F6BA06F1B6C9373F48144954ABF8991B61F0FB7E95ACCD3BBD200E078
01F2A7157FAA847DA5E22F00136F21273615D1D75B730BF1D7F063A8419830FC
907CDEC4ABDB74182DC5FBDD0536E7C70D3AC58AB2DFA3EDD496C18C8974E85B
94484D5D8E1304268CD4715C7B381ADD4976C0C8525ACF78DC7D453F813638EF
A565CADF3958184CF236FF2FF91DB2687D13CA64138054D591B1C7894E2A0D72
4995EF08F00707EC53E1CF114795631E3B14687B9E35196EA8C1CAF14A0F0128
05FAA4DE2E937E03744732E3FC287CC99ED39EF436CBA30F8EB1A6E543782DAB
E3FF83E5DE856B2386B006A01A109A8C8A833C61B9F1ED687557E2449DD0E8EC
1F8B9ECDD722D466D2D453E1F5D3C9F3C796CF3BEBD5F6E892F91A4B3291F219
0C5E20A58FC99E7B93748B7B0B7D5F050B809C36455121145BD772CC4C3ED8EA
BFF2230567998B58154582EE093FED8E2F79999D0D5FB2D1F10866FB55664AA7
D6B6CA4E3866DF6F25481C94C0C99771491E1E13819CF6A11897CDBFC25ECADA
33E3F6D66E6A404512EA065022CB17E62FEB500C2C5AF1427197EE6637F53912
3745CA88458114AC473001A6EBC721B3AD347F9CC5C2A27C33990101BB5C18BF
8300E8B9ED08ACE959392226C2D9AF99686063A3B951E33C7EF5F1AB73604DFC
C2AAE3C9DAB2C3FDC4982820B11EA1FFAD6406F59A25291292BFF6E9F09C4DCB
F759C9FF16A8E893C28EF549CA3C0F7C816D19F4AD4A5C73718F38A4E67E61CD
7A1713DE7AD5B63B0A7BA50A40B29FC17AA00DB566B2EC94DE5934CE2EF7C23E
C45EA8B7525DAAFF7B70A5414E182FB7D57AEE134DC3F9A71394B4BFA8CED0C4
1664DF7B5BBB015C15E90E9C96373CC7E6BFB2E25C8E5EC1E76C9D065EAED9F8
1E705C8136D99C5BD8C57AFA1EBD9AE6E949DB069E5F8579D27658A448FC502A
8DBF8D959B786221774A27EC6476C296EE579D2F20575F4CA3B9DA9E2DC2EFF4
9CBB4722FA30319B8C68F8F7DCF39E5FF7ECDAE3884DD8E0E9C7A5FEDFE41F81
3357F2002FD7D3BC2795CA29E315E9397ED241D48F5DB2174A712F0A1E33ACFD
F4F850DFBC68836D6598FD8B539BDCA02A0A1C3058ABF1106798FC39BB81EC7A
1CEB5D36BF344354FAA9B291ACBCF9B740335802AB247E9FD612C7762E866A6E
4C83D0AD28B3180DE0FBA6D2813AFFFB6256C6A72975F6E5AB21231E0E136B9A
315700669D9D8A3D985F44DE6070E8E4AF619C8A0463541489F56666025C854B
28533F3D64DEFAD31A1BEFC3A15FC3CBB1E614186292D44DCC6A69F94C1BE958
8697B33CC8C54E71E075F1693EFA5483DB7DEBB520C7BF832196D27869EE01D1
69FC58F743CD16C8F0A30C58416EFD2327DD0406D7E014791771EE369B64E66F
AF661F75F9A9415D03C8D92BA72C28C2C148FF488439DCF5AF83863CDCACA331
175F46778C3202D3D4F36FEDCE60AFAFB39332B22F2C43C3AD99954E96E39B52
434D8FC25A26DF835CF0A83D7BC91AD4E67CCE7B5DCCEE35431B1144E5302C58
4C766900ACEEA1303B6B7283508FD953752DE044C4904C375AACD66DDFDA88D5
3E98FE28B70E43B7C69F2BC1FA11191A2974874205A7DDA96A42B2D492847AE5
7C85675CF04BFD1410B56E616F68C39329AC3301F7E9DD385505F1A5891D6AD0
D0E3EF2F19C66D2509FEA05F456DB473994314820946309081E82621D1B79F8B
534954EAF50FBA1224AA3BF50544122F3662354376F998E255DECD92AEAF57DE
294C3A61A645A681C23966AB83B4D93D4FC5D149AC96A8331BD6A50B93FB0806
43433A0D2F5AEDBBAEA7C0A6D4AC4C90FCAD1A887E071087DECD4DB7E551DF70
32C9C43CD09F534B07AB5996711300B4E28756F69F8B6933F20AC25471C19ED3
B2D16493293F09EA311F4929581D3E2EE1E2B00C53DF9788B45591972391929A
1D45F27E3F89E4F8417201F0D2CDFCAFAC06766BB5ADEA1F62D09802F18C584B
F5F2330AFCE8FF92E2DF9B35F469A1D1AD50C3314D6CF5FABC872BB7CBADDD96
379AAF858D42D31AAC43F4EC19D387D38B78DBDAA0645B2FB1C9E3245ADA5B7C
80281E3B8177E30458C0E8F57E41C25DA1DF67A2DFE5DE21E630125AE03ABBA7
5B3C5272D5BBDCC972845D4664D911B0E64203574E588A6F1143DAF2573A8474
5ABC6D79FEC5A3BE33A9A0285EF5BAE463184E92A24DC07A7026EBE9E2D290B1
EEDFE0322838AAD2FB6F562CF3FACDBC455F5007030A8DC866FAF4CCC70AA1EE
4BD71E5344F2DCAE69E08F1BFE2F05C317E60CD87D8622BCFBF2709E1050E430
19FD6819999E1A5C2FA63A47940F5252385EA3E898611BA9C4C8A5E0A6AD4E40
D9A928D09FF6795A31930D91424572A24EFC245742B434A82034432EF4A7BA26
12F343751A68EA6CC4FD5FC02C703EDCB1F8AF334B793677DC9D0D6B2CF2ED2D
D230066CF987003900359010AD52472E97602424CC86C8245A33F617C5F28A57
87ECF6F5E76A133661B6DA9143D448C59D4A6E1D3A4BD9F0B7E0B28447E74136
4E315E7A1509311548A348C48D19182D79249080AD244A961CCBD0A6C4B22D5C
02D1E02E3603E885A6F4C9949F4D5AD4FA73204A4F206B13B702DC4E76A76885
AF0B09EB7F8774273C9252B73F1E4CDD4912B3995A7DB9B4C56C828F8583A979
A4821E48802F50EAC63D9917C10E24B9304C2B6E99BC9902242F0363BD8FA398
74B38A5773E6797686644768404F6882273FB569F825C8B5CF477E5A66AAC618
CB79AEC21E85BF1B65FC6300B048FCCA5DA7423FBC722485BA50072ED2124E0A
769E95F93F6629DAE30D14F1CB9EF1056093B854BE4DABB07F7BB64332BA41E5
84EEA50F61F4C70D353CFB11A82E401A42DF13634343E4A666C7A27E6AB0968E
0F2BFB2C8381E13CB69A288CFB8408890ECB590527209D19DA50258CFA1F636B
0C9C441A03AD99788F2C055E1A5AB5B114CA693BEB196781C04C0A6EE75D2746
E69AB8C4530A1BE5182B4F95B4988A9F5E686E357923D654FBDC140AE17DE962
63A6CA5338F0545FC28B003F1AFC72A01C5800D5233F46E4D3D830E9CA83BABE
9291E590F24481280A0242E823E22A4E32669BC829EF1B7584A7D1DF64C6AE6F
BCFBD9E9879DE2E51C85B3597B747E2F440D7F364C4030648BC39783FD7AE189
510DB5788EBB13FF9A22A528922308C00CCDEBCE60D893C887B0F2FF4E4A58E1
7059A66A66132D35680501A47FFD3C21C5FFA47F843A6972A781290D136A9B5D
69A31D428F4F003487ABC3D34172433CC652E9B2516AD0EEC9F4521A273F7328
F6F57B13A373A9E0DDCE6E0CB2008467372E0C2077B037B0FBA022555B0FCC14
21A0B660B7381800B7E7FF1754D70709127DE32FE92176B964274E37B45C5844
49B7B4737AD52783C5737C44F9E81FD41745809A37FB996A48A34BDAB4CA6460
6FB209ED35980DF79F5089C10E826801F1DF4E6A66AE2E78797E9880AD30315B
535018417C37FFED36B95995F7771FF6012B974D2061E7418F3B9E0ECE8D06DF
CD70D82772F56C044FFCFFE868A68E84D25B66B5A129C6EB45718D8EEBF746DF
1479C93E4BB317BFC633E3FAEE0C43A403D675816A95031288ABFEBD9868C847
F2EF773B62E31DDDBC2AD2B526C64DF8400A1782A1086F10E614DAB03DAE4B51
0B39F1E3A64CC661DA200D9C48D979929FCFE04D83CF33485A0ED2DDBE19EE90
B055D664E08E4D020527450B43705983772BB89072B23BFC19B9068BA1AD4B50
D9D2E025E00008D3625C1A4A9B9AE2DD4A7E15B5E90E5DFBC1A171A728EE77DE
C4295E388D5777C3D652C5C881935DFC736CF5EAE91652675CED53147A5A50D0
7DD67A01D90307D763884329B91924AA554CF3CB059ABE0DA5EE7AE080F39D46
61D4557C54BEBE502DD1C5907D7426961FA71506FD3C7D8649CA54D9A85449E9
CC3291F73F466C037636DD2F6365BFE35C63978876D8DAB0C23730744A2343B9
BE781702B08251805C0B8A6598E644F5A83218FA43C3D18C068FA8426914708E
4F8A9BDA0BCFC2F517A615D9C6A247BB6C62857312BB017A3FD3BC4A69A375E5
B63D5A2C7562A335345A58B383E3C1E375E92261089DAAA7D8550343C3BB9110
7DF7E3F4EB1F65B37D48932FFC8C217849C0D6EFE49E293AB82742140DC51CE3
BA7314B14B8C7BBED4AB2A74C045E988C6ED47854597
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC8B64E3DB194682A30A31E9D23ADA7D5C0259E2410A72
D9504CAEF21597965D669100E95B8C450A3845A54352DFA15984693F8721BE6B
C8436111546A70C5B35A2390E5D3C43E8295CF922FF601D611725D0D5D9EB2DE
CAE11F3A66BA22F94DE028A8861FBCE564DCF89B36A5F1C621F0088A5E41311E
9B82067883EDC8BCDDDFCB6A87C2BCF37B79B1F65339265C3BDC27CD99AC7D74
8CF26DF4B25B62F3A47B378A341378AB1E9AAA88112469298B36645A69B98423
DDA04A18DF5410EEECE859A081B2D1D4CEB9E40FFAC6BD2F8303F58AD7686B3B
2D3EFDA6667CFD49D2238D55D45C48100D476045270887C0AC4B0630AAD1FC0B
5E43AC491292ED829A2DF9D4F2669AF6310773829A90024806F5F20E5C30D804
C575A65416FE521B9FFF6FB1005422A031002633BB99116B1BE6FE34DA153504
03110D8A03FF32442C84B244388B0BD94226009EA88C191854FC5CE6CFD0099B
972EC5B389955A931A37C06AD33548F4F4AC18875A81F978462C08C8815468D5
6B73576634C30DFF297D298B5348C035AF13EE678DA27948E76219462A6F6E7F
ED0769CBBB6ADC755D19F12DF33472B961D2BAA3707F23BC0884B40161092DB8
C5BFD39EF98F57FD30FD1357949201CAF5917E441B2C76C89C04F575D6322DCA
A951FD101A3075533FA18A6CDD78377F0FB3CEFB52AD0139F79A9F303F4D5803
E89997C3EF22B15D0076B8BA10D03696A026FA7A544D9C1C573AFE467E6FD1B5
291E46CABA85E11394626B59A5F8BCAC6D1D33F578FD612AC00D46591F814E56
C1006F7F17A8CF41696D5BD6F204E0BC4D5D9CCBFF875032E159EA0B9DBB3994
AD63D63C43278C28FD1A4F07B8B0680B9B6CC51B2C05A884542E408B7A91C71B
D27F711ECAD165C968494093F25FB9D00F2A8B0561E3DC6BFD46BB9F2AFF670F
35D9BA58BE41F4D8F747D577D35F2D3BF4689476B50EC78AB75D63C8632FEC26
4785E63C14B5AF665F51D5DEE0E6B465BC273668725BFF2B6BF271B4E43E8A63
536C67F00F622D32DD9A0656EE7273EC391D3C002341AD01037918C9F3EB2C7C
7F9216C4300437D00FAF01EC92DB7A664A2AE626D0C06569A707831E14A367EA
D9A11645C1E4CF533954D844E6497BFBDCFE76E6FEB489CCCF88FFD8A27F1B9E
A01458B99C93D2DFF1B27A0F0168650B305A96BA9D08C35EBBBC89F567531827
0524349511B5CCE01924B7063139C64AF7DDFC6BC03450C1E03D23C5DCB218C8
6349D5135EEACD2239B7C05E940DCCB80D1B409613E0BDA33FCCCC4ADA4F15A7
36793F0C6BEED9FCD9CF230F4B050409962F11B7020A2D36E903F851A54EFE91
D6C9987BD2CECFEF045F51E61AA764392A75D832F9338F9912E1E406A534F29D
CF33411B194DEE2EC1B99F36FA1A1523A54E135ED051D38CDE37A91EBFDA01CA
85D3D7FDC831D53F56D3F53C697146233EF345FCC0087A49CAC75B1E4362DA91
4C8F04CCD51BB6E1D25C9017DAA0F030C385E20649E13388056E3CAA0CB4C0EA
C4A01883F6A68FC9E54A77B42EDEA537641A68A0EF3B9E26B165DC1E35FB1CD3
FC970F9B5DD79AAE8E0A1C778CAB39F889A6841DB1D0F56FD1D16A31AC45222A
E5C43F2300D630453F9971BEA525CCAB03D517970CB5B7C88894EF242271D397
34D72303402156F9C47C060982F2756FC0B88DB32851DE202293CD8E97E2EEF2
83C0700A70DD7A499D94B603D1C55688BA7053A8041E66287BC3D32E58EDD9E9
6F79C0423123B2033C52D9978810E80D023B630B24A26B6351128033450FD223
735EE7B42722F1F9C0DEAC5D1E253A4C8425E8038116DCD6B4EC83FB11881AD2
1D33E42703C7F06FDD9B2C73347C600AADFE1F4F38D47A57BA77CE1947BAC85C
30D14D424064D4DF063D8CAF1ACA221AFE0B03B5A7541151A4DB45C5DDE0C202
71A1CC2BDB4FEC1F58CE1ADC78463797221F2A0D85F3A15BA76A334C3A6D85AA
0C86A706F43B255E7170059063D79A6397C44F4BE98BC4CFB9B8D23772AE6827
8ED121CEC7D912741A13F55901F5D1855886D4C077FCE052E2961195F6E63978
B96CDCF87DD534DB138A6B4792FC225AEB67EB2B7A873AA16AF6DA3152881105
24D4D8C672030A7C059740F68C9BBBD5C6DAA3F5C2F61B8ECD2A8567F15026E9
684FA0CD5446B2ECF20359C2108581F8B7A4D8C567EBCC4FE6D6EC6A04B97554
AF366754BFCFB9C11A1BE4D5E89B79C71381B19D761AAEE7E0F577696582B4C9
899C3821BCC9100EBD1790BDA61FAADE42EE438A28FBA7DF3B6CE3AA29252F4D
41820E6A977B0BBDA50B8197990B9269CEC75152B08F809E0CF6CB0834C9276D
9AE09B0A480CC15A4F33F4AB405D52A53BA935CCA30ED45A669E4C3D8F8F2F4F
AA61B1D9B903165B0A354AAF9680BF85CB454A275D34F18D0FD89A4BC75093DE
7BD95C08C14190AB855B11269CCFF8B76AC5039B57FC3EA935F9496657D15709
7253EBF65B260C4A3CA22A5B5D59A964A28470A648325114662BE2A175EF1F34
90ABE02F0DA020A715BF34679EB9F1DD3BA1D2D165D1F792602ABE06882D2404
2130ABD58C1D92FA702D9C062240AA4F57BBE808D75EF1C184E795B5E02BC6F4
53AADC2C46F85840D6A8914E67061D754D1F01E5A052D6B37248F848D4D5E2D3
012FA892AEEED8BC062F4F1C0164F9E75703C9C9F4534933BA4CE50A1F5474F4
AFC714288CA619DA6E6EC456A8A2E7F0BAF54E739DE8C200F17922A7A7E96137
D2C92966C81C579831CE71E90D49130BBBFF03F3BEC2CF8E19B2E57E64E00719
7FC8E192134B230F5AF3A28FB9F7BA79BF76AC8F4F09BC6766B946A230C13DDA
C7FA6B763B0B0D3B33425239D88D62418FC6383AC512A4058813E230216C3BD0
5DEC8E258EEC54EAF495D34ED4F9F8D83B31E24E377BABF676F13A4DE28C59B0
A870C5102780E2C9528B5378E8BD7DDF9072881D4E153C39DD3AF628D183AD64
6359A9BE9996A56F7D2880A4ED2C0C2C635490A6FBC948EA5AAD456E36E91274
19F274DE2E4B5A28B755C47E3639396E53DB7AB16B0788D06F80653C63CDD72A
3CBB2FD4FBC0BDA9E2DCA1D7573A7BCCB011414654275C714EE380F583B9E594
2D898E93F531FB2AA50F3AED1C0C707BCFB01AA40CC84C11162D241BB7F4D5E7
7FAB2921B4F28500EAB8A48EEBCDEC75216EA02FBA736F633F58257E35F8414A
6173EF9E78BB0A57FED16DFDA91E7B4EC921F73E8AE5E32DDBB436A4835526D9
515822149FFE0408F59FB6F391CAE83FFE803A8D6B420BBFB29D9024072C50A2
5456C166793E41F22081CF4FD863277A28B6891DDCE30D62BA05096A513F711B
2AC2AE5F5EE3E067A938AFE1DDD677D4772913E7AAC1177095F121CB34775893
4D6E1FB11502401D8F344B4CF680BED103C2034FF7BD1BB07694D6141301F5EA
68F966AA25D89A5474FAF91DC77B8AAB9365C09E55C128E88019CF0CBCDB688D
A22780B3B6531ADDA73BC0D56FE6CE1CDBA0E640E7F653990411DB0CEC548207
14BBD375D865C9369BFE2D1E924E8571795286C09A506B25897754B3F6844E20
F29A0E9F8945467DD93D65A7909B6E690E2CBA3778A6091914A40B7BA999B539
001BC78DBBBE325B7E05901B1F7CCADD659E02363275458E7E59677EEEF858DE
CC14798FF658A259D446D8DF5ED689172B1BFF89D887968CC72CF5E8C23AC8C2
0310BEDCE4DDF61C26160A44756F4124430388F13634A37967B0B46DA0D40B99
C276DBB239F5A1EE8F6E3FD57A8101CCC7DD37616F8469531B62DEA2D619559D
A3253EB4E0403774EEAACBF9D18B4F8E467A7A3DCE727354BF359AED04DA92E1
5423DA02570483222F4262A259EB4EF1F7884E74ACFFD70B2969E795C174CA0B
6F5477688775B34C98C96F6F3C5FE12A53D32FE42102C45131432134B6748E5A
9E70CCDE0C47D9C80245C465F7CFD361F9DD5ACA9EFE2A71C7567A35D88ED5F6
6A9DF2917F9F37F00506C2F7B003AEDA554D76DB6F8BCFD0D552E202FBB08F9E
E758D6C3BE9104F0DBC7978157FDFDD90A18306E7FA786F767CCEE4055736E33
F7CE2D2F7B696E36981B8994F4B1072FB52F9D429654B0F55D5516A6A4768A7E
0BCA51AEDB39D72DA87646817BE29ED687CA1A8EC4F1F7C898A6F70A97031296
1C38E2E387DE21FE521F399838983EEEDF8056FC9ABD8892CEB3096341CAFC29
38C2C6C4C2FE6BB5E78BD7208D0D57D68E2F5C02D1E02E3603E84E234B26DDC3
2E5A2A0B32862109ECC5F61869215C8AAB93997C0D40D0E7F493170126E3B9BB
31360D082F3DBD804CAFEE8B857C261DC23BE16713E6D176D324942A96ACC0DF
5801D0CBC2516376310F259BFA019867738694F9024D402BA8D2E262FFB33F8A
73495BC76D6F32B9ABE2190C2143314289F2CBDE304248C3EACE40EC2B2B55DF
85E54360610853FAECBC92D11963C336263E8A7DBD45737EC87BB20A2F9EFDD1
5C9C7426A6B9676FCA688F23D62E267303A0D10830962770852FCB3A37DA0FEA
8C7CBDA55702FE9B71618797C257861A3CD53ACB0AC57CD0DEC444E0F1C7A93B
2E070B6FBE6E9EB25E445746C1089F3395B43320B96DFB36110D0E0907B45F10
31586AF1689FE77C7CD84CAD505E9D4649E780099A8E92CD14A24A086FEE82FE
774E1AFEFE2183E6897DEBA041B9E177DE4B9D809FA54AF4EDC8C3A8C562E9F7
F8B7CF5BA88D33AA065BC81A0D7156CC50192F0D071AC34E4212CCAFC76A867F
8AE181CB9EA0591394961E9B9F3866C19FD15DE8E3B0EEFD6426B1E2F8AC4F1A
52D2CDDDE8270CA51FD0942A897E43BCC790E6108AAB4FC0F21EDF5FE09AB9AF
9F7DB50A557E777BF8DFBDA09CFD28186D70186C6E6134CE9A8B28902346068E
2CA7B038BF797D86E868F5057F70AC0E6C1ACD7E072CB0C5DFF619F49D667CBB
5DD0F439B3273753FC26BD64CD1D1020FAA37C89AE8BBFAAAEC95405D4157307
4E9B9343EA4A228FC92F73D166A4E050B94E81AA1AEBF1D6D6B78C479DE70B7B
F4111CC8FCC0CE043FF3BC85DE6257B90D1CD89E66F4208849CF740734665C58
3F1357D1BE591EF95FAFC608FABF021AB0C4A347C7A46C737FA96CBA81BE8A5E
43DA675C6D92810CEC9D1F60945328C3BB643F059F9C58954B9223410C9AB062
667F209B42AA97E9270953241D9BD932033B1F56E1525CE7F767D4C06A3660B8
4C68833BA0D64D1D337A3FEB08CEE56722EC1A7A014684561A033F5A05FB6E43
2537B4190A20F4358BE6AA80F7B37DE38EDE1BE858FDDB14753BEFA9C557DCE0
6C307C4744710B6CF77DB363B6FA25EC2CF08DF5F83F4423CE2F45187D81F702
8F0B79D3576DEE0E7FDFBF701FED4086FEF293B51E98410FEE1D3E7699173424
31AA37650BB3313ED045436EFF6805B3A91CB3A8AC2416BE20CD3F952A265435
653F2B82BC79C0112106497A8AE577F2EE3164D6B294A1BDE892B4FF835769B1
B60411388FD7F8F996EDB0795CE683B389494CD4BB18B716780E4390706B4088
539AD6C8D7A18E6403F3E28CC3DDDF62F66EFC1A7199DB408381B4AB933AAA68
466A1010FF9957F824ED35E8EF9B591556689895DE4D69DB56BC5526746E1C19
8E664ABE8A222611C17A6DAB86155932CA23FD2D199B14F719542D96D5B6D3EA
DA0C301EF0181A5ECFCDFA3BAB457C766835FE6D6EE9F5A2E8F14CCDC9A0D4DD
4B2DB89B69E919EA997905863B830BF69F0FF2E5A8C1ACA1987FE3FB19139B19
A77DB415B54C25703B060ADEAA342C2AC738B1356A568CA889F36D25C59ACA99
D47D63C408DF6134AED22DDB26A5F921F59D19BDDEEF39942DC372CB1983B983
E12AB8DB2FF545CEACE832FD394179F444597370E3AB9BDFA35D0439675C17B9
B7CE36ED2A34C5240687CC7A8E074F117801A0CDDF668470B48E0A82AB523AF4
811DEF4D792C198480A3B6D7FF807F444E4296749FA911D0F95AA75ABD1EA2D2
E4467881AD8144BE57827EA610A70672500552411FB2584F23E25B33B1D5338C
37B3FCAB23A0413690C03B3C00543B0BDE040A681BBF73D23166D9E9183B3F48
D6885016865C3DB26D3B19352ECB04CCA27A345FF644B6F2088E7EE8C7C77BEA
EE35594A38B207138976E41FCC5D48C8FFBBD918FB92A1B600F54E88E093648D
20478C60EF5C63DFEB83B7FF10B7EF1DAC6FBBB45A3C63071105B20699EDED28
316BB06D7E7DF7CF1B5826744CF5A49F1EA91A8DAB238C9B409F8BA67B70045B
1C668ED9DDF95BEA7F9E71C7B2F488813448DA54BB26D5DFFC0EA444F8F0929E
2E2669433670590946A9FF73386D2D4A33B35FAD02212C4D60AB292F81D3DF9C
75EDFA8C46AEDE3DC46E4D43416611051AFEDB6F9592935557AF4358D959F971
03F98FE01BFED790500C3A82C69C71239721482921AB5C847E3DDB9365B9B0B9
01C33742E3F81EE5E17203CAA2C6C9A99A54443FFC21A17DE40F753756AA4920
03E01A4A149550526B7FD5F306D547ACA41D576B3B5DA307CF048EE6C383
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE505B8A69335E25F98573BFAC64A02542D3B835ABC68EE4F
0A1436DD48E963348F6F5650666F6BFF72D385A5FB67448213B032991B4970C5
79925CEFA92DDED5BE33EEE8275EEE83829329E11E4EB1E2E16669B21C3D36F1
FCA9535233B0BB982F75ACF33109F8AE7ADE4954D0B1E1802008B39E90FD6AD3
2DFBD4E8C89A9FA5772BD7C4CEA7C8F8272B4C34FD26058AA9E35E6DE5D8F2B1
B78BB131F06294B45300705B786BC0D0653933C657D716DCDE61AEAC6DBB9F5F
26C309EC6AA6E4BDF86680F4004C27DB20FEF95B0BE467B5B7F436B45DA8033A
3F755FBB8515426BB432CB6210B93F60C98D1DBC60E48CCFD9E1AC3BDDF3FB69
A81F2D36111B48751795F38F735C17DF38AD4FDD0C5FFB68595C9DA26DF72CCE
2D9DE1746CD44B3EBA803DD8B2F2E32BA01DF06CE7D42C9212B2B01EE474FC6E
4B7F47342D876423543604DDC5C2895A1C304D5FD05859F9D22F04286271B0B0
47E7337B66EB39E4F675D2E9820162D471EF229009DB3D390DA87529CA619E31
43BA13FC942C261D738A72D9EDF590013F0B471586972004FF7E9A8751D10054
867B96D565268B60A93844BB45B58D5B9BAC0B2865D54AA511982CB8071B2584
632DE0616473D1DD73635F2A6D25FF8F941042919E52A05B12F842F1D6B9FD26
377E37FECC26324BACBEF8C91D33E6F388E1C1C7839B309F0421354ED4AF83E7
2EFB01220706DC806409EFEA6AF162F0CDA852F6C2F6D03BEFFA448620E2B165
D805F3D38FD25271970060C270EE7CD123372D9200C16AEFE3A6FB08FBDAB8C7
18B7BFD8E914BE8BC9661C65F3AC99B44674BF9B284B0B1184C46B2458B341AF
1813A27004F390A9E7BC916F912529FD8391F01E14F3DE67BED8655873A59297
163D50C16C7ADA4B3A932692615492C046257CAC1D6CDB4B5C3DDA2A8BF0D987
8CB87C82F9B1263614F820AA96C05E737066229312A0EB520CB441C4FAB82863
5695F22CA1BAF21DB5A75AB19CBB23E87D004DC406CB53A08E39EE883EAC4B18
67AA06F893F188E68871208A74C74A3F0E7FD97A91D3EEB15E13C4F051C328A7
6DE307D1A9B20025D14EF20DE12B75E2802BE7BC864ABEB97DA9539B3511AF76
9216D3864E9A5B2B808890A4E84748F90DB65333B3DC072C0D767D681A4BA7AF
E9EE3C9898D78A7C66B7A25315E980D52C815F0E099B2EA23AC28F0AB4D8CB29
2727AC27BF9244B2F110CC5B254E3740523AFA37F17CD74F6E534B64631B3929
3DE4FB14D6F6B43E2386E3AD057AAF2BCC8F33C12779314778767901E6794379
2FBBAA0794F3312DD0F222FE728564705A6826C5E4FD3F90A935361C97C925E5
15EBF07A8CD6BD2B82E017E4876FEA546CDED7608C6F48A8B92FED94838F927D
01CD7CB4C2BF7093E2B34E267C94FF60FB482BF3AE05DA3355DAB9A49B9D682D
971034E21A323473BE119318626CFF13790820E1EBC601571760A1AF2E999BEC
5277CA4FDB981720FFB764F691BBD5E9E84728868FBE1397462B7EAAF4461735
A373B3A7CF56644E8DEB26C79B735F7D91C8F65DBEBE0D5FBD6F108D39F78DCC
B16CBBC8F735DE52E67E59EAECE1CA51678340AA617E5BC758B97CE8AAAE7F30
EA592188B6CEC9B339ED14816270786A83086374864F1399430DA077E9B8AC6B
2140FD20E49287C7D083704D1628744284B2D5DA4C4DDED3FCABCC723885EEED
D2D7F8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39829DC8A2ABDFC584BBBC8AB8932CB
FDFB9FB917139ED02FB419CDEAA892CDB606C133DAA908377AA57FA5E2A16FE8
F9DBC207EDEAA72C2F7D4B7B7112BFDD1A5BC950F254FD477654C63037748411
037887C4B65D8E1DBFD8BC7F2661AC6E39CB510EDF4CCABC332ED1A5E5FD49AB
7955B7A0C9770887DA7B5A123239565BB1D04FA90E615D06A805EF2EA704243F
B382621C073D18FEC9D5FFE44F8C791C47B490C8E3D8B586D529D30A9E40FF7B
C1C8059928ABE24544F41569DAEB26F1186A550FAC789DC46BAEA1D028891BCE
072BC4077D5280C8337FA283BB4340DDEBC4D256E13F78F42DDED30EC42990D2
D7674A62EACD13CBBB381247F44161A0539A035AE3749991DEA439FBF139A16A
553429E039046EFE39B6B9B33D252B140142EE927CE5E607C1F2BC03785EE94A
E63B97F0E34213A1B0A55054B02E9C5BCE6B0E9B760FAC62828B9B2C3BAC419B
073E6FCA10420F989127A04BDE01D71D3C32869196A7C486DD1CCB62FEC5AE72
4457E9628C077A0C7218B75BD86AE495A872463510543EFFE5DD50FFC2FCDAB7
133032D62176E87C9CE253A193BFAD2575B7B23BF4B47D1997E6DC26B83665DB
71ADF03DB565CB3278F5B72C3E42823F4F7EDDA13852C3D2523C98C6613FBB7C
5DFB870023C31C1FD013E274504CF62EE88454734AE583D443130A9533C9769D
375E5A0DFE646D603F49A26F9E5F210B120CA7EE5A3EFD38C40BC343C18EE38A
6E5EC1E16F206873FFBAFA03266BF0D28259D561A56EA1DEFC0D6891AFA3D1E6
DE83FBFEE99829CAAAF9FE809C13BE788C42E74A8A162BD9BB26137253BA8B58
1941E759A7CA7AC42EE55AE3ACF0B696E4444DE0BB3491FE84A6315E3725A28A
20C7E32793E2DDA8ED6D90F8041298B7A4C1E2A2D16FF35C3D8F5FD37B1D5760
3AF1ADAD3760CFBDD46FADABA26B5433D34C2AEB076031841EA0296AC711128C
794F77BD223CF144C0FDBF1576BC1C20D6A4CA7FF78D906699CB9C2B43FD2042
ABADEB88D3FB46627EADDC9F2827BAC12E0E45B310AD8C11FEB1DE5440585524
AD00C04BA139245E95B76F3695B0BE5FEDE9A0B810C0D8253B244EE74C47F8B2
0547A2ADFAA6E40432CB09DCCF5C286D5EB04E5A7D952E7167268B30DF26FC38
1D8D871D0D96566F0E4910D1712E7151AFFBF5AB2C8A5AF1CB6DBF0B027ADD1C
2409375ADE1F82292CA07F3948B726E9D3DC6F3AA19E84CDD50D789E56263362
340FBA8CA49B9AD210E2B4D77B4553E8ABE6A6FBD131E1691F749DEBB18A5B5B
90DC695349522715A6B6AF951007027352BC7C9612CFC105C8BDDBDDC8BAD0B8
7F3BA50D36D20926718FD37D86663C2F134BB4B5EEA3039CCD3F02DB45E13804
E3B7B4E4EE45019BA6FF7DF40D9FE58108584C65DAC1D387D9CF2FB4A626EA3E
546717AE6E23981338327681221810546F0009F98531353C9A8EBFE7DB9C9A1F
83F6E3CC814D6844FF1A23AB32B521C1A09010973B310CD03A0ADA22C6863683
473B13FECAED39B923980E1691F99CB068EC99B0F5292E5450773EE1769530D9
051181315AEF884EABB76C5B134E7E0185E7D5929C128293EEFA925E555E77E7
2F0216B34D71875B4FED0EE2874DF99ADFD2E19382CC90DFFB25E67F6FB762DC
D3C3A8C76F4F6F7298116E7FF68A8348389D3052344BC6AD77FA9B4CA05CEA57
E184293362DFBD0B5D90A7909896CBD0A038B6BA98B6078C9FCA1556AEB8E16D
CEE96FF74BE92989C382E8FAC254F543E8D3E7146C9A0600F9A0BE530EDDD8A9
01220A971045A9A8FC9239809D764B6036E658222897A77DC3394593C5B714D1
EF72E72786BDDE985D872823D8DDFFCCCF5ACABF850C801E14FB8153C749EF79
3EE03A1199D0A9EF4C5D26725C6A658DECFF150A9D0FD7AB1F56F507EB972BCF
356EDF826023098738D40D1E2F1976A39CB1DAEB62F9F7729E6E985765D126CB
E7FE55D3E2DFC75C0F145FBECF6A2D130D4840A799889CB9DCCD3FC716139294
FDE93AA5F2D8120ECA4E117C31227384B1C5B443F68FF78E4CACACDB36B7C4BC
FD26A7241379C2955D9BA1921169B16ABD7E4852648FEB205E020B27F5307E54
B6F4A4858CEF9F21FE9A561AF418FD9D6B8576F8DCC579206AA9F21A1C50D38B
556542BD5BC0BB3EBCE2E7C56E180C73756CCDAEAF24840E6C6A01AF6C1A517F
86D2C6190AFE9B31BC89297D17D4564C28040B982EBF82D0914F7C33F549D305
58B5E8ED6D88D23E7530C2BB5B2FADC5B34ADE0644C0F54B03AD9E14CF669C7B
38CB2D16EE53FCC59444A3FDDB80E6632FCB86E990AD1C8A0331513E0B6F2A90
442F6791C4741A0ED35AF47FF40F2DA0B75EA8C8FB72576304008495771DFFCF
89E918F1702F5867DF3636C4F5C221A18AC30E1CC4C35114DEE607734D0910C3
0DE2682CCCDB283F082A7EC77AB52B21BA9B8D4A0B9D7C5926D1B554B27D710B
5690DB1906123D94EAD0FBA00FD369A6D770D5E2564AB454896C4F5A393516CB
0B28F80FBB4E20BE353D30CD025624C7B916A97812E37E5EFAD3FC3E46711774
FEC1F7738A2AD81197D1CBBF29B5725D3B132DF3984E59D8877CCE2558DF1E30
A5A6DDD8C614B2FFAFCD4B6D9F237ADA30D3C0E24D416DEED9635FFFB23654B0
877663453EB7FF454D41369C4D069E6D1762AE662D19514D98A4606942FC3D76
5F00D47B7AF675CA22BCE830482F7347227AA1DBFAD15C24E79ECBF158880C14
F356FEF1BE1FA788335EF0647D47D0E9415E00F0963CADC84DA9CE87D81D4F23
06F0F4CD8882D55D5220A6D9197FBA488EAB0EBFB50FEF925BA6DF2F7ECBCA5D
B4FD78D89E2167E977EB8C0475E6BF7B0A6468833A730FC3D22EC26F9B276146
9B0EDEE8BA22F029985EC5CF4298C38E32B95D790323B4A5713E69521D8E8AA0
1CB34C18DF8A379C22193172318686ED9E447F8E185DFEA44B45241AFBBFB78B
D03562DD6EE838D77DDBFB30BCA82A782AD53550CFF43B4DAC2BD3A84C1A663B
BF1D4F15CFDCADC40A08553B2815A915DC33558C496994773E172D45C0D27D21
F892B9AE92E8480F5B8A2AB1B87BF7A95DA47617A27763AE228559558798FF83
A81BF4085B5542FFEC6044F952A4EF7713EFC7017A63899555D5DA52BCA32E0E
B863C256F65A8F40EE3AC0C9F6154C4975D6DB87269D8C8640A757736309AB56
8DD976F3356398E4FE6449EB80A9B134C0D4478C5ABCA26796BB61D2839669B9
C11CB98612D45C4BFBFED2C841F42B1FDCE3A56B4EE8FCB5924E01F73A956FCA
977A5793953E253F649790106065F2F956E07BB110F1D7FF4A5199B53F26D310
D9E3553DE260FFD590BEDC71CA9AD4AC12B09E8031DDD811E7CE1C4E2D9B0998
C10E0AE05405DCE8434015D5E8434335D76E0707C36ED5E5C2EC7E59783CA099
F4BC31F75A62F4C02608C28329316045535EB9203076E59D45EB0453370647B6
15E56986C8D5E2480661F7148175EA2A55A5187666E9D9BD19EC0057F585DA96
CF1F91B38E71825486F2C563C52C7A22BF7AF3BC490D2042E8CE8832B38E2566
82C68F3D27FF9DC1CF763E3582052D32457998548EC65BF412065C6FC34B8522
9B3E5A5EC0BCC2B701FB1F62CD6C9CA9E9D43D8526A42660FA0D8A24F2D50765
9172AA7390EA9540B43955D033876B75A414D45FB1BDCB0EE4A8E1C6763117EE
D34F871C1D692C4BA0644E95818D08106F5905F67C15DECBBD1CF81D6489ACC1
1E82553D3DF4A5BFF200843BEF3B3DB3C6FCA2F0D737557A1B3BFFF929DA5799
3BF9D3E0878EAF2EC43C023951C59F3E09157F87CA9762F00A7EE36053FA6D32
6A9F5285DFDCA777CE739D7A77BA7CDD6D7A4568B29EE071294F9C0AAB7236EF
94196DD7E222146343ADA94C02350974E95307847599B02E5A9200C5BBD80FB3
451D6927B5C23ED718C9BD409F696B3DA41751DF6E19A3D52FDFD919A52E983E
07BFCD447294B1F96ED4AC5B1BAF7B88865069F26CF6367091BD71D7EA1069F4
8D987D3E76BC13E662D8D4E2DFC75C0F145FBEBB48466ADB7CE834363CB68E30
A0F1A91C4A87084317B0021AAD5B1ACB2EBBF8AEDFBA01D0E1E9DACA45F94EFC
91D568C63F0DF551344A4ABCDAB4F38A44C189BFBB5CBA860F9CC900EBA7EB2E
CFB83086D6AED4460D71BFB257752C5AEE42439A707FAE585CA35C2C450B5929
783DA0ACF374733D7447001CA710E20DBD21C85CCC6C44715E1D1185646D9432
1F4A4260985B376D7905F7302C36F97F5F502F2F1C38C7E2B365E99CDA8999D5
04B49BD38BF0B6962E6DD44C43D3608287CC308CA3A6B72B91DCC5B8AE77AC31
C8469E35D6BD1F33ADAFA68EAC99D4AA3B5C0CB97432A4654AEA3D07EEFCACD7
4368BDA94989537D321DB5621BE2BB042A97301D2FE70F5091641C7FB54AFC5B
7A19E38845B4769E212509817638845B53F1C76496D80FBDE4CD2AFF544E59A6
33B5520AD35E51290A3B2A48117BBE9988B61ABF40DDF4F85653AD933BA79330
8D8D8B1A8028B073456088F14B0E5EA826618EFB78BD5AC554C7A94BFD3A91B3
FFD4F252EC70527AE589427561EAC1CF4EC54D29A0B9DBBAF10B53AAAE674482
8F64D74606B0E9201EF0CA8F67CCB7CC009C8F3EA0338C40A487ED95860B9805
0A8C53A75BB461D32E372BB979032814BBABA742ECE84EC3C70C8281FEEDE827
F394AD4E14D9CBAADF8EF93A933795C0CBFB7204DC6234198B8B045489489D68
0E10D295F544E3FCF67EA5E3C901A2D7205BB77DD35458B6E29392025926B94F
3EE4EDC49569BAFDBE642C963411707E41DA572B2601547FF2A3CA041B9C5206
5ED9868BD921AE2E19E59DD6207CAE408A3858BB337F0E6842EC5D9C0D5D2596
ACBE7E49DCA378FF00A40E236B7BCA3A83192D97B128519E4CCF28EB25012C51
60BFD7AD66A2DE7D9CAFBA0562AB6D291F1C21BBA4C2DFB31D17A60124EE8DA6
CBDA94196D7EDC4E8964DB820841B614C43F5ACD9126970121B0F16C9F17495B
0944DAB553727A204C65A18A0AFA2C09BA590AE264BCCEA1DD5D81A295CDEA55
0A848F335B390108BECF41D4B25FA514BAB9F71497FB0B5F6FE0FB86C51C5D53
A33B5E7B1A6A403CC958FB840024382EF8F0841ABC2CA091D1C8991C348E7186
369A6F39DEAE8D919C80FC20274D7B30DD69E1B2C3CA70F2F79FA29543F526B8
76EE206FCFAEF68CA01BECA56517AF0ACDFD9C0B72FF95BC0C5915CA0DE369A0
D7112BFF6CAE56CB9BF699D9CBFEFF41E8E1BF7E9CB02F2E46976B514E496BB4
EC0463AC3D1C45B6AC7F41EEDA416BF3799E7A55C4BE3FE3F293154CF974930E
EE6DB4D383269056908BB3DAD67503428937472D2381DEA09B8BC800123D0BB5
4A24596BA7A6C770D4F7E864FCEE58A5C111311744B77AEBA5674EF5FCA77072
9FEF0AF2D2965E568474C617900CEFCFD0FFA610B1CCA391B8FEDA3D73843902
BCCCB3580B83DC0102166269AB6A4A6B1EE986BA77EC41DBACE2826B07DD73D3
36E5B30DA46CD98193FF92366AB94B406DC87770A2258EDAF9CC898F593BA315
FF9A90DEC4F7AEDF1C70BCB7143D09AD2A509C25E46C51D541D23F9D2633D0AD
DAF128E4E336E7A5B52C2F0B84531D5B7072A70AEDFC73D7697FD45E397A8B93
82F85EA515D665F6BEFD477FC3D2D0497A8FF4B27D82058278B09BFF9FEF74B0
2066AA5A0148B1C3DAC9CD5746930017297841A20A8A19FB0824C590DC62DD0C
0A05D937E15529BFC43EA631B1A410AEFEEB515FAF5DD565CE89251F14C55ED9
5BBE35ECCC3FE3684393D7A69A8957032A6D45BD084D6678957DF6391153F939
FB1E9C7CB9524FBB56170E9ADEF02464A57D0CC0A75083E187DC3952A5684CAA
59C47C33F7B3E17AB8FE9F861ECBAF6993D3B94AC84E717DC761DE92602F6934
C3376ECBB0796C113D22152BCBABEFDB3D586B9579B002548840847A2B333E5E
409CFA62208D0FDDE3FB4F9CD60DE04863F47F7A3607969ED4E62FF115B3C55C
7FBDB7F09EB38F7C8CA86C9C89D9BAD9DDD8248221B5D57C11305FF53A443EA9
334659FB187B912153C07311290983DE2D68D10F80121551249FFC67A2D34476
8EB7DC6A46178EC6035FC8F3399F07B6C87F3692837AE695F08C12A56EF81F36
DE3C68165796E83DEF8AEF27E536BD4963C694A57B12AF3CEE45979BA0E4D920
83040BF71A9A9B369976055E2BD80245F249EFE2CEE8B36D06B51FDFD86A22BE
594113A00F62F7A578CD8B164C19E3380ACC2FE5A47F2B2F394BCF99217F88E2
A33CF3A2456A8712556956C5A48721B1B1E140ABFA0C516C01077017D8F2FF9F
6F88AD245098A9CFAE5B44C952E9460C34003BF52A79FE5CFEBD81172C3E68D4
8475489C01D265CE34E1F3D37687AA3B2A80FEE259DC090F222F7B9F4D5097FA
F3D63176BAF1588BCE485A83A59254749B1FE01EA77F8B138F5317730A33951F
BC2E58FC164C8891612605ED32F136F8837D1CFA83953E0F9243ED0B2D8BE6DC
D49E7B623D69370F66DEDE8735D67C03C49B929EE22F99A39A8209B06FFBCBCB
945E15224C19B734093ED3A1E4EDA0C0E69FAC766C48AD6FD48DDCE9C6539CD8
C059FD15F3BE67C59302E15B7F08A593118B91A352BE082CCF213C09AD0E674C
1D486D4F59FC3F155A19D63A97CA8326A6D9A6D7D8FDCD2B2D8D8EEB1F5D86EF
B76DD813C169CEEB9A2E83824A18D289046A60F63C71833EA6953B47C988AB19
E90AFCF255DD7C80245D9E8D139FD4378AF0F9B4879A99BCAF708E326D070B8A
72B4B3BE25BA7CD9B56EBE39D3DE9B6F1F6205F3D166F2445E020BABDE7CACAE
40009D0682CAF5DB88E408B799859A65C144F9DB2A53AD5E8DEEA70B9D144D3E
1EE72343AD613C0CA792C55DF251222F772D668981CD337C68CB9F4DBFB0C81D
994C31A54DDC94C9A8E8625557BFA0C123C0DBC12541F9885E41864E311EA0F3
0D2DFC8DEE83F6A664BA36B19B17E090FCC1137C613AC61B6452571F9A33E04A
B232C970FC1930C18A3C23D649EE2C8CBE0C05C80DD94D6D8FEA5FB6D820FE9E
6F5613F30B43AB82895F7B7AABF9E6A68654E1695F8958AE4D69E5076CE43001
37B8961416783E6083A9639E040D0976F90B757C56EA77691E9DC0086F205415
C83F3223178394A917C85BCF3DA070819A5264EE7B1DBF351FD9F074C98C6D15
9862B0A8DB4F52F7909571CD4F5B063685528C3842B0C5AEEFECB2DB2CAF9B29
35E66E18A7830B7502FF8B5171D26A88F0C1BC2058C407F125EE256A951D8CF8
95A44E006FB3657BAE15086037107F01113E6543EB9CF74C273062133808694B
66190041E8CDFD55B70A87E0F22F9EEC3DECAD603C6CCF19C49E038F56DB0698
B5AD852CBD82C786DA5E21CE1F9B6C312058DEE9D48BF0C5989BA03AE862227A
3D2D21616E454FAFB8D45CC84833870E3626DA56821938BE310283619DCD7B2D
FDC9DCC814084EDBCA0BD3A734A8D815FAA4FE47E401B22682269B7D393B8B44
3BB4F316B59E7BB99EBC7521DA5BAEF8AED3B848E2310A9450C42F6BF7A4521B
21554098DCD8F7DA25492236C8DCC811A974EEDEF932341845E25003B083C6F8
C5A5D58F3F1A1B10B4C0C21F46955BCD54FA232BBF88A04D6A54765B2C56A6AD
A138A698C6AAD6F5A747CA803C4FC45050F99726EA27FC6950333AC92AAC2885
EB3709DE6C66830C448BBF1B6250DD77B44844920F807FBF8D3AC972C91E47BB
642A01E0C4E0DE1F5F54E069368D0593ED7C9E2AB4B0184BC89A05CD2D29851F
5A5416331DA3205E8F38383299755769C94370B4E3C2D3D4BA009C25F0C7568C
71846E413E504BEAA3F4594FA96C199F1D2F43F92DC94F908F67F7AD292E4437
C8A7FC6782A51D243612B70B601D2DE189B29EE33528A11DC26CCDF281A3C0B2
8B692C979B4525E8416562C7BC6B7F6F7794E521E1447DF673F327C0031F4156
62B8F9B082CA17645EC1167969BCDDEBF9C837634AE662E06B49F8A630D1B50C
8AD964B732576A4881AE9CEE27DEB4075D5EB2D14CCD6F6EEC6B703F4300D555
7019CD90C60DD677A2D9A98A03177A2A2EC28AD732EC6B65547C0CA716504C4E
5EA79D4611AAEEA72B791C22A1822E686F3E7935BFF1F4A94CB02B67C9EFE3A2
930C444B7792A467BA73D4FEEB470DCB239EF9D2771EDD2A4BDD22F82ECDA480
8F61C48714CB01B1D8CA5519EF15D8BB64F49AAC157E53CB186BBCB369B984A2
BACB0E5ACA2F056563BA0B495254451C352AF582A0C7616A0B0ACCF1CA0A25AB
10E00E4D5A8D0C3299FD377031D0932E15D629638EDE89741C64AB1DFFDAD747
649966332680D19EB442AEA8A8F2F1C793E3A0AD9F8DD19FA55C51B37937F9DF
00DDEFD7B94DFC5FBFA569DB2DEE9C6F9B59FE8E849CF8FC29C2CE88A8F9A12D
46B8FCA50DF4433B0B8AED6A63B9E0AA63852F2DB69C1C1CE080F69090CE2308
9253F14C06E8BAE2DC26FF4CFFB4C707B8CCEF0694F57A327C433C6B33F0EF84
E03C60BE701384D766CA8CACDEFCAF9BD0157922B29CC828ADD9B2582CF6C317
8700E56D15B1CC2196F8015D26518F63510488252D55642E3F3B8CEC5A676602
0E7CC501E807504FA9A2A4625E490C819629A098B04C8D0972A9E22915D6453A
0C46FCF77C04DB04CFAAAA1ED3F498EB33F599A9B377084AA5BBEC4DF7F584A1
8E183D32A58D3C67AD87A413F6D9746B6BCFE2EBDF320337C9C6321199E4567C
6CC54599761B9B052F23A1E069841C42B4988F48BEE08EDEC618A6BD6E4674A8
FAFECAAA3A6EBB0C27F6B3D45356DFBEB0F12864B22E28A69A56DCAA101DAA6B
E705FF575048CC768BB8F138C44118AF3DB235C5B5A7046D3B734AB72279B090
B19690958C63DA36A3577710E1BF34F0A215736C4C7662509DA80838734E691B
C16C50353B2441985488F0E70615F3687E98132DE2FD992965837E604A8B2C51
E4FA23D4BA4E6DC208D3347920F1AA1B90E7771655549E925A384EA930D1B50C
8AD964B732576A4881AE9CEE27DEB406A74E3173D9F296B3DD186F8C3F8658C9
1B59C58B51B35C3055D9FF7B893CC31F7949ADAFA7FD22C8F9537DE6D21551D1
978A1D3ECDBFA157EFA291F7837CF697A1829E06BF172780B141F2E169D2E94B
D6E749162099864EE4A73D046B0ABFCA115414EB4652911C21C71EF12B8200A4
D1746157123FEBE6D71C653AC219CF2559CA67118EE18EDFF965C6BC89419523
301937AB8A80B7AF64057F2697D9B7C2B7126F601786EC4B09DE2F5F30772931
39169AD2F4308068FA72E47E611ACD8A387FD8136A7E7EC6ECC16CEAA06FED50
5EC60F7460026CB419574319DE25DE57B91032986423BE1A589D2ED43BA77A22
5D1A46065AE5681A99559451496988B1682D6B23ACE310EB8FE74CC0880D07E4
2434B2ACCEFD44AF65D2D6786866CB57F266C34948AFDF91CEA5FD433B460F57
BF6F0A5A2D064AD7651D44FE76DBF369706318E0C38215CE3248073B71A3D5AB
85DEB10D66DFA6700C73551F9B07B445B7EF75A48483E04D117BE1577B35111A
C7B52C4C22316E30A43C5D42182A2087CC39A4D9B855AA0BC6B2582E6C6F5834
8859690E918B1F43F4B7B7AD9AB673C87D60A26E3FCF588EECDACD25533064A5
1A4ECDB83B64C9DD4846C95AEEA4C65E463AC3961D2D195C1560E30A519BEF66
E56E90A48FDBEA688E80FA438D78057EA80AF98AACDEF061090E46E0AED83063
FDF0E57BACE8CA49A14A53952A7D629C80E8D82ECB79DE3D2D5E0BAD4BE96382
C579BB44B4956AFF8512D795E77ACBDE9908C3FD76A6F785A238E6F8C0097D66
B792A30501E6045018B639B6075B485C0819C85E12381B4DF22BCA0CD3745599
B7A10BBD87412982ED98260DB84337892A232A3A1E688B87CA147AB718101083
E94631B8295834C8C3BAF1CCD314049235F62A539E5B69070B528273A685278C
5988DB3DA0BC132974C601B6FA29471DC34814FC81A1E1A5155BC812041DF12E
948905E2D850D697BE04E8C724C13AA5E7B40D1CDCDA2DD829CE36C293C763F3
9D565A6412B048799A7CD9CC027EE23F3B3BC61A40EA57044322C2336980D7DC
1ACABDF29591D77ACE1D4FE00E935D2858323E1E5FC80B4FA1AA8473D0572495
EB8FB49019AAD64D5FDF9D4F594DBCACC60041E039B805BAE98B8E3A5A1A4350
83332BDA82C4109E89E7CFD5C7E6C184E7BB763094C8E802732D4B23AD08E64C
D0EA508DB893617833CD87122FC29AD6067C60D1CC7AB83FEC19C5ABD83BED14
4BE6149E2D19C21EF5F5DD745F323D016D893B519883A9BEEDA43DD2ECA72702
A4357D241AA942314ED22A785910977271074F78E59A64D710D418B800EDC6B8
980835910F2D7B6D9575F45562C3A9DE6D4EBF59482D7A73C0A7F4A92DBDEB1B
E5D3E4EEB3B977638CCE98A000C11FCCF15F9000E546E4D972CAA80BDB3B8DE0
E5509ADB557560A9FBF7B5252C0274C581A2005CB515170BEC2EE165E4740E88
95169607D57C89956B526A664B28A2AB571AD115B700DDCE8BF6642AE971DB80
9A152552F2DB5D8F1A0FA12A092840A740F3C75A30C1B241A0DFA7D6521D9C28
86DEEBED572A5B787381CCDFF42AB3879F9A58F40E84A37A7B2C720348F83ACE
FFA78929F4CFB5CA67D06C6B6F759FDB452EFA0029231EE1E3133136F8BC0C15
39C0C1ED728808427CE96611D1F832FA6DB2B87A907821C0F9B128B9B12D53E2
62E7B26B484955D1156A6C72643246468572F84A6C7DFD02A58EB57540F4BD80
55D0FA9138E7C6E4B118CC665F4B861D3766A241400563D0EBFA9023144D99A7
1EDBB90FB84380ACDDA68AD3A6F14052A3424F1B7995A97253C8F822C11204E3
40647BC99177AD0A23CFB7F631E00CC979AD410F813119C1053C154FD33D8E79
B4C628C92AF3A011B67DDB6DCD3AC5A3DBDB198C7D06A54BFE71B757772EDCB6
1AAB312B3FB1222A66756A22485E8EED2EF67049EFDBC5A3974D9730E803A7E9
43672A1CD5715F3392920484887065343A7D9180758CB5E40FAD2BD0E4A563D1
C5E94BAC3B203D78E0E28FE4D056969AB8C04466F6B2323849E5A874B6A210E0
D6D005D4098EA5321DA1FA07CC1B2036139C9DC80BFAF40BD9C5A8652C95246A
640E9625BCB3CB6D4425B58A6BDC7D7E585A9C849CE54A33D63B69215176025C
D990BBB61011C47808B516BED05C8D05C1DADAE8FDB27091B33FEE92536D6EAC
29F1F7D265EA9CBFF54648594AC441B7F6830D6771F150299030DC7F996D7AE0
496ADFDE3F79C14B02F024EBEE5C1E79A408C9BD1DD7F549B81B39046A34DCDB
D02621AC20ACFAB65C54852C4947F29AC54033E2AEA70CE57180265F10B9458B
6B78B75749ECC45E7B733CDB34A1BC3CB136751300AB9F91FD4A1BD1D7AB84C2
DDCF5DA974B2068488AE47A9F079DC482770B43776BF34BBC2FC5095D9BEBCA4
30AE206AA05BBFD46D9557B93C7270D113DDA77D46B69C49C35204033FC6EDE3
E969EC9A32AF0768E75D440300F0BB4D90CD64B8164E6CF77E91BEED3C5DE8E5
621FEED17F073A56D96331C25A10BAE939C2E533478ECE6CEB9EB612E4074B7E
3BC175C3A3BB199137C3DCBAF784D79C2F0824702938BB507902E7235609BDFB
AD62ACEC039D378653D0D2166C4A311A0C52ED00D2305C70A416567F5EEFC427
D8406F63B2CED073C5F6916F9AF0C5F519C9B8A8B2A9D9518E4DFEAB5DA33984
7235425AC5056E7AD9D725AD3916DE4271273CF39110B40FEEF6B961452F14E6
A52AFE2AB22E277B1AF591127CA8A28EB491FD849174B775E622317120AE3971
3EEC28B51D1A2970F7C8A643E7A79B1E248D02EA353EA834E1F86079F3BBC478
D2E2152294AD2E091DD7659A4DE4DE812FC920354999BE959FA141F6F4AE1AC9
1793F0254037EAC872D5998FCA85D652CEBAD63471EBF5739689B9658F75B474
6F0788B19CE2CCE364DA954F895436AD8E34AB6B32B5003F5D18F1E310779597
A25E678DB4EE7B616DD99080BF7936644DC21AC139CA000B293D12E5797D09B5
04F072B85E8B211AAFB3AFA8C0D2EFBEF207CBA3018A2E8F6AA87BB1A70971C3
7957E885E308D4A9414FDF10EBD25557B85D398661D57DE5ACECFAE9F3CD33E1
55543275D8C75FFACF0A259DD7D8F3B3D6F433B5D663ACB77850F858A12AE1B3
E495E6C242EA7B5C525587613D335148791C6FB0E20AD69482F575CF89AEF427
14C86EFE0E9DA6FA4E56A50821AEFC90350EFC42DA44F23139CA45625EC8E371
77C76D141B2164031D611A41DC693B0B1E461C5432AF361AEB0D0FC5BC972131
7E21378E75D88DEDAE45EBD1F7558447675AB6621AFD3E68C14C591584F1896B
5F95C56EF8DD24262D80A1DDA1396947FBE8692B77E9A6F48794F0BC5151B2FB
0997E30E10B11C2ED407DBF4E83A2B9BB63BF8D1E152C8508D33480C6F64935A
D5A9BC3A37FFF85D0762327E1353649873CACAF6F08C1C16A1ED89279C8ADDD4
BC7CB4C9ADA51ADAA643EB311F9C71D6122CDF4854AA899ECE4676D80F8AAA53
05D162D03F2769438758FEB44D814C92864D76CA7DE4DABDBB8391759028235D
AA4CAE0221E2C18D9ACEC0622533CD5D4DE100A52C1DE8BA3457FE240A987AF9
575F5BBDD275855C7AA367895E3044180DB5BA5DA3D02BA761290D59655E98C0
42C853E4936F420867903CBBD57FB065E3B9EE839E49E9FD460B957D4B195219
8B7F6F1309B1DA0F7072D692DC5543674EA5327A63F01ED14BB1ED9A0BAF084C
704EB9781F115B15915E5E2A33809D8394DDBC9ED83A4C0B223692EA461238FF
F855A95BBDAEF679177325A31F2EC36FC9583A048A83F68049C707E5FC1473E7
DF93A9CB39A1DFFB501C223F493D0FA587209565FAEEC1C8CB95CCF401E0111D
A90614FC43AEA3A6DC2FF687757D9C711FA0C386F50D2C9FC7F252AD669BB39A
1949292601831224409FDD3819C98C395DD7C3AD05DC5ED1B388FCDBFCBD7193
4F0597C65122BD563F761BA4732E96D3C644D290CD8F7AF8845CF78D4BE9C7F2
E4DC00372535CECA26621B61ACD5AF2E7C680A199277F14EA2931D0840553644
2C20E14598F0BFA3B6C2011B842784111022A13163B7102FEF09C25D849D7DAE
91025A4C6D38DB17F29E53D88C3FF60A8C9D26CE00F152DEC98F89AF22A4A728
7C39C3521EBE7C549741B627A823F2B82A16026EE06B985A9D0245D994C854FE
52CA748C5AC92CA48A1A62AB49A3DEDE60059F4E919D802DC6F42C4CC353E040
772A928BF1FE17EA91AD0A116EC10060344872DBFC291F9142015EDF22C12D9B
C0CEBF5B09B91DDA2DC1E85BAC1399FF62F4B6004A6F2F81BA6E4B03157AF42F
DB1936FF5424EC1C28487B7D93628E039E14526B19E4EC10680BD72504493CDF
B35659392681091E8BA271A63DA86E558693FB00F24C2F914C7E2FF56DEB89BA
6E42C5DEFC0427EBE3F8C28EC36BA0E331071D9B11BF19F5E6E2F5B3A1D5E9BB
CF46FA3AE7DDF8E169FA4E0EA83347D882518A848CE3BC9F4B77EBF56B7A4ECA
286953C83430B546E3E872BD8F6DAD70F1143917DB990826700ED998F35C6D7A
8CDD807B3CE00CC05F6CA1D87A1C83530D8ED33ECF03191454F3BA5CE1AE7C91
3A4018FD77C17145A16B5F6F364524C88D6E6491D7EBA73AE972393DC265BEA3
A40FB98C1F251CB49EAE29A3AE0601DB63F00AEDC1E7C07887EB84556F43AEDE
A439FBF139A16A55342B59436DCE772F4B24C9343E42C3D897DE532796B42E88
C5721EFDC10CA164F462CA22DDA16EDFD6DB7692A30D87CD0CDF22BCACAC6B28
46EE200539F53F833F07277E99C5480803414679A145541628F6DEA543171844
C4B48E24C8E0AEF59CA261835523E983C166979C9357FA3BB8F795DE7334E31E
8BAEF4799FF68EDBBA8148EA7FE7F2C9DC109C4EB9D23AB50403B8CFBA0B318A
206241AFFA80635C555B6473652776F685FEDEF296CE3177297B6ADC1D0EDDAF
6E7780F00DA62502C94A10EC87F2DBA7B41FD6A220A3B1458EA90D68B2B13A5D
4A79B827C93FC8EC80D5A156E3EF0EEA375E66905D49892B70588D726F1393ED
1013818E5121FABE4DCE1B5AE35D7122F1EADEA8914AC32F028980AA50C18C5C
8C44EE90A42542155A89BEBAC1F28D2011FC1FFE6726AE7DE624006CE68D9382
FE31F62C9F0D08C4C68BC2EE7B1CBA76497DD7C405221BDD215FF86E0ADF92A2
7720987480EEEC7F3BEBE3D4702A7476F0F76FF09B3EBC39F114F67390736965
4D87C922C3560A5C2FE058396E5F7B58534CF0427F51B7333A7362606D382EDF
77F3C17EAA73BA9A5A278B68767BF91ADA7BA8BEBD00AE7A0C59890C780FD9CC
8EEAB0247DCA0DD4EE931127EBD9DF621124F91BAC406B8E1648A8EA0AE6582F
D75C74B5E04B4E89FE1EC9DF8E79390A5F2A6C5830E9B354D8D8A6BA18F7EF8D
B554C32DE35EBEA2C0396510E19C70F988C08B0117154DD5C63D07B8B577D80F
66EACA440D77A9179EFA65E22F137A8437C97401626DF593F477A0F179C4069C
04E3458270C52FF6A50F4B45AFECD368C7EC8D9A51C1AA0DC563B79CC51197C6
B66B642CE6ED0E06968642525169C5F91C9488015A91BB78E8504F337369EF0B
E48CDC9FDCC640BAF951454F3C050A6F8CAD560AA0373F56908E62B95BE455D0
11A256E289B5786D5855D2755BB3BCE04767519AC9A1745C828DDAD6C8BD1225
32813926DDE557C8DB204FF7DAE508095B1A947F357220FCCA54BEF4C5D4FCF5
FF1DA9CDD72D44424346800E8CDA544B7A170EE21F52F25CA45F0901419E5B08
ED32C29158608C09E1B766F6B41E595F24356F8D6E6EC6D147692731E96797F7
7AEB83A2927423DDC0DE4A91156AA4201B8D7332E2A02DE729DF56CCC594B5AF
193DDCA689F08B970552337321D82B49DE32AE60EB35A8EB174221D9C745803B
A4E509E24B79BE0F631C4878708061DFD5804BE81E98C3AC571CB1AAFF7D4975
E45FAD4416DAF25D64A0B1F558B9680B1F14675C57E47048BEF9403DDA93BAE6
5129CF59968E61E34957E9ECE4A634CBFA33D1B94902192FFDF86E3DFA1A6FA2
80A0902609E447C2BF621B052EC6051AB3039A85E890FF3EC2C5AF83F69127E5
ADECC6D92ADE8EF2154FD534596012C5FBA5AAEFF003C4EFAAF2AAD64E788BD6
D0AF35464675055513F99753D93E4F07E1FD8630949EC199458A4F27696CD712
298401E6D06214E108B12DE59E11DED3845E18C76168EB227D82697B78447999
28B4DA778221B66C0FFA3AA93A437BD5C68850DC71A816B0D51006B6ECB6FC97
E7479993795ECA68071B374054113138002D0414857EC0B8888D37C3C97D0AB2
88C747DAE89474C07194E8DEF55ECB8A043204F2C6EE4FCF4778224008359B27
209982A12209246A522DC3CC2012628B616A39E4CF62D50EB26EFA4ECB3D634B
5B0A77EAEFAAB80C22ED2BE3886916A1A32C94E4114C29F7ED710B3F624E4D6E
A4A45357897B98485424B855AAFFFBB34935814632D9B1676110F9C89A37B196
0E6F8DC94EB6FD6C182A4A3F512F7D600976E0EC65D74997E06E1B4B8648FF74
2E5D90CEF06AE1D471027738E4F3D6F0827FB3674F318349C3B08283790E1805
D1F2203BE4B7D03339513DEF39B097E8A719A1DC349B13C8A4FF13B3FD09EBBF
2D2D2A2932E974E646CC166331C715D1DB06C96C0BD6DD41E23B80272664FA56
7B1E21832C094D44A6D9533331A6A29F030772112A25AF16F68150C378455FDD
227E64AF9AD04A70AB71DE0DF3C612B186A0B1D7C64DC5ED76225B5E78A5DEBC
78F81C2CA7776CD74CA613A35EAE29F7388E9E176E41C955A8775EA01738B40E
635AC2EE556144B8070D31E6FC60F8C7961BA96362CA771E3DB9DFFF11625CE3
7D8AC7115190CB24C6C0D49BA6630E748000C7D60C7E1AA2761AF25BD01C5014
09DC094980FE3E45853F5B2F33E47951985B4BB8105F1286FD595F4DE6905101
C038D63C7FBCC8DCBC80971915BE896EA5915BA3B2C097667FEAE696D3ECAD02
BF1AA7DF5BFFD9896AE7761130C7AF1838C3833DCE8B843889A566AACD2EC647
AFBE6775C7B31532CECAA8B1683B970EA9131CAAD3E6EAECC08F3174843E1768
02AE980CA1B7AF6EB11DB2EE88DF2D7FDF55E563BBA91C38F06EF8AF9BD8A0D2
A932A232EF1551C2DD5299804F0241B35FAFD6D98DEB6449B5280C3414E156ED
0A4BE4E451F756C0E714B91D9B5399EB66829AB49A41523B0E2C08646BE73DF7
66E216FCC9E0D3B13991A136BC51DD25F3F8A5335C37216FBFCB7BE125558378
2E127D214566363B820D857B334F26D55DD2E97AB66BE0F33F40AAFEDC471ED6
488AA685D04243BF460051DA59D6118204994447A33F0BC008036EA389D66D2A
56AEA2825406E0962EE7F0BB81CD8C09FF8515B6CB1EDCF0D77D90FCD7AF595F
12933C4773CADA054406FB72D5CE1D54A60BF82805AF63BAE40E36AC681243E4
B710F4C0AFF4F73598C84923AB189FD6D5F5F0717F741B803B6433E46C01E797
67E8A558650D61D9EAA60387349A638017555F046176A9298786AEAB1BF32B56
ACB29330B4D46578E8E438FFC49B7A776F5D96AF40F878656AB810A1D84AEF15
8343A623514BE16490E5417AE44FB1066DEA496C00E5AAF7727A7842C29C6AA8
CF3C4F3290862BFC1C7EAC490C7D4D8183D4122AEF006157BBE3B708C26C8B8B
9B5198A9BD4A8310D78D005DCDF6378D02AB0836F166B7D18498AEAB861DE1E7
8CFC2B6D4481AA22D69BD9E88E5FE0464CBD7E49BE14D3A0C5FB48201578146A
0398875225D8B82A8561084709857AE3A36CBA05359BAA2136415FDE786348EE
9FC1993C01A7598180C7599FDC0EE114B099D9C148BF130ECC88C1A400797230
32E6B4CBF3D96540C374997EBEB3CD06B12468DB21ED545085C2A645EADF0667
114516D1CF80590DC15B080C245F3AD599134B7DD285EB572E44B810ACF43F09
03D91A08D27C6CA203AE3FC5EBE22FE46F0405FC1528CB4A1C57E119241E648E
5240DB269DC97F8F71CBFAB6E52C63DBED21DD0856D4644AA33B28231B6ACDEF
FA3D7FF30D313029DC1AA9D74DF0491899540B30F28B0437BE2A8BEA625605BF
AC36EE71EE5BE65837A8347C77CA57DEF44558C4754D9A167EF77220D440992F
B347F0012942B8514F64B18C4A107567470EFA0999A7B23FDF0977AFD6A96D8C
398FD0F40C638E9074328C0161F5B3684D79C3150580C7B0440664DB0641D5E4
84C4261A30A907961AE358210879B261D4EDC793095E39371EE40A46E231BB39
4FCCA8483943FEFD671409BBB2769C8ABD0E1D297F3816A6529971CBCB061660
30EEF983EF33249751128EE159A081B2D1D4CEB9E40FFAC6BD2F8303F58AD764
23A4776B8D06259F68B9877CA7D618C9740E92018503127B90A8F857C2F54BA0
1FAAC221D701C67236E08C7DE2F8AECCAC87E118B957A9E69DF5E8274DA59750
A14569049912F6012B974D2061E7E1BDAAF50B9DA03EA416FF705048D2036F18
6F32D75E105B6DA98E8A1B13FE0F3C04F72F3CB90B285FC2AC725EB17A717495
A6ACDFF1C535F6795B119EC6803BD53A8882D82929177263931A60DC0C08A407
17C38B23D7CA543DABB9EF9233C549FCC9063A45573CFF6CECEB4FB95501BE9F
9E262A18152910F8053256756E2ECC883EB42CA46E3F1260EEDAED8E4DAF67D3
B956EFDE3A0F777A9D15777FCB12FC1D7BC0DD9C7BFD87E435423EE3A3C0572F
13A5A2B0AD5FF382082B46F42D4E1672B2076DD7714172F7898056A2C113C8D2
D5BC6FD512165E6A771F180872D18B0C89A4C5C968742603F4FDB0B0B6D446B2
9F4A0504D8D78527337394FBBF91FEE78CE18BEF581362F78E21E05D45A44348
93E88AA5796248C0B4ED3F3134E3FC9FB45390D5F3C838EF5C19813C94A18DBA
9726B34CFB0D9B699670D146D38F2BDE33187946635C2B90D52081FFF324BAB8
30E6BE1DC8FA082B0D59409D923BB6994C53D2FD184E97804AF37882282AD5D2
0002B64F4968F175ED215CFC24750FB35F49D8738CD4AC2ABC213F81757FB92D
A0783C663F19721CFC966AEA5DB6D484422524547E1C2C2AE3447A41F2551EE2
E2BBF9BA9866A6C7F0409526730FE58A98904B8A271A74A639502BACF2518F6F
527E1837D31C52182F5C55C6346943BBFF1D84B323FFD20E2B7A7623DB5646C4
DDF81485E72229FD7902194490A4C13F942F039C9DDF06CD872EADAA457F1F77
91BE16F0F9B9246E1B63AC9AC2A9C391EA9BC8B26708B22D367AED097E342ACF
55EF490B205B12B22D91FBC19C407522E72F526E4B525CAB424F06F3FDE6A572
351A291AA95859CFAC3AC8AB607DE0754192C9060E1AD601EC3924632FDCB347
9301FF22472EF6B1B4B291FEAC55B9A6A4B8A569C92A1B931168DE5DECF9148C
824BE1C7AF9702CA13B36325FDD90110F1B8A03CE73E8B9F0A3EDA5BBEBF135F
BDDE4099314E3452D1C304B99B36EB3FD38729F6E87567247A57B89115DB90A7
C353B0D1D07C190A30D72F4DC185613B31DF5DDE27133C82305714CB9D2D3330
ADFD7241F285D511A410A3CDC58D3E8AD84CADB08638040D27911D5CD1C2DC65
75563147831AB90B9F1C46E86FE01EB193B0356BDEAEF74DF88908CD734BB23B
82550F1942DA7A89F80414614392F5BF03643C31B048047F66345B57CBB82192
A574C94E9D1E067B2E3C7DE22C384A1B105DA20C8E35485D1CC4BDB7339F1839
A8A478B4EDC3E79FCD4A6BA2AC73CE41BBC08C67D2FF90E05A28234C71C2ECF9
2A9B0662335A2DB9C80EB7BF67101B1F500FEBCA4E207EA40EF91F7087EE721F
643AB067763FA32BFEBC4E29DB5EB3B67F816C8F555488985F90BA9EA40F2830
403191285718057EA57109069B78BF32A117B548732ADDBC8C4CDA57872F5937
666F66BCFF2F41F9554958ED898A4B67731DC73233B242F84888CA17948C9FB3
9C886A68B2047FD8D8A76D5749D7B610765DF592C38EE488B19DBD5CB5B0CA74
699E6F3122A0DEE1DF02C3FD21F1C7FB5C95935F6ED89EE7B5BDBDC76249E4C1
75E07F7B71AE405700317A06B3722A5B312A51BF9AE51F8017ACA1F189103FEE
E7B9BA528C49041B568597A4B520F1284E1B7CA0AFAE23CFB8A305BBBB7D5657
EEF792B1D2A1CA9DFD6EE89ECA8E4C1186EA6CAE47D80A8FE78292116FD09CB8
90DA61EC2C5251E494A16F54717186B0C5E96BF0BAFDADD55266CBFFF4FF149D
3BEBA5FB52DAAF7EA501A1D8E1DB5CFB4C451D37C4732EA22AF269313CF93D62
BE9F3F102122C52BBFB25CEEBDEE72C95360CE30E125073062D08F983D061A79
5D1DE60BB8CFA7754AE22DED6F9CAB71FC9D57406331B2BA0C96D1E6F07647BF
4E3D3BD22F3260864E426DD2A3115CC4B327B1019B10EEF089742E37B7836B2B
4CF909F7F778DA38E54F972D6A17B932EFECCDDE3DE2B355A6E68007FB852E0A
92ED6D704F15FF0F863528DB72EBEF223D3E78A87D55C524317DEB5A2D285C14
C3848A2809C178F21DA62983A33A9AA43F181CD8E1765BCC167B186090C6A871
5BB97BAA45F3E26CE01859BBA0600FEBCD2BA6EFBF331D87A1BE0CB21133A1BB
FA3E1FF9624DFB461DC6936745358526E6669DEAA748A386E73F27E40AF89E99
66FBDE2B55A8B0031DE455BEB83DF8971CCC31AA154AE34CA73B1499B395127B
F2453FB7F04A266A9715B9EB85B639AECCCEE6D0DBD0696846364345641200D9
4BBBE0575CF97D126E1669A54A08243D46A59ACBF71E4DC01E4A64DF3F74F36E
773AE887DDE805528C272A753BFD98E979B3ABDBD904B66EEC18C62F5994E029
46FDE208621168576268AAAC7877FEC7CB6BCF60E25E7D50D325B9C736F080B8
BBDE8D57342C0C531581B9F722DA5F5E96DC0860CF718F93878A2682AB610667
F8F9DCD9D9933A7B8CBE2E3264D7FF35BF33E8A333B1B6FA749F50FB8565F2F1
242DE7A649C67CFAA02E26CCD1364A34C35443A12D12B10ED201A9F16EE85035
95826A0247CE8EA1D2A3340C87F30D4867DB09742301BE34A2FA9E91079C19C9
9D07929B8D75DD23D8F8763051589A3489227FDC12CC373A6C1A4A2D54BFAFBA
86514F6C66E222EF53C533AF3B2739CCA18B0F1BA82B278A73BCD04429325943
752F8D2545C6C51CCE827EC3401FFDB805ED2B38315904FD3A799A38C703A1A8
5AB2E9536043165AAA3A14E8FEC1FA5D001FB60BB7166095F03689A8E381CDAC
758B5C4418C8B3703B513AE17BD8B977C0286FA814B7FF6EA6D73EF077929C0F
5FBFF0300C0F868CE4C6D6CD198B29532908C44B42DA92FEAB15171D2675980C
1170D43551EB9F0C85FA334F1E1229C67D5BBC9B3698CF87A13A3A9771054905
A58B78CAD093CEBAE5C808CE1DE39663F2876B13FFA5B6BDE7BC6408A9C820B9
B5B5DDBAB7FA350C8593FB3FFB4653C903853993098B841EC7256EE3FB416D8D
4D75C7DB51C8299B1400E2E564B390E97E52B81F3057209621E7A2F40B50A4BC
27DF51F10EC2A5B36B8A1F0C6CADA9B905F3246AEC0CFC3060A1B4C5E0A1295D
FA75CC2C2899BCE11AEB19C10EBD6F7C42D48B75DF9890529FBB3D24651664E8
4B70E9600FA67A4AB8B9C17DCEF9C77F2520250E5F37B5BBAF0AE5AC471E8868
944268B357434FDE7449E8E87C75613724CB1347610D835EFECA02E3020C4114
F3764154D4DB7E86D89B13B8AA5F1D41FA62396D75D56EFA3BE865047BCC9557
ADE417810A48AAAD3EAE66BBEE79E19BFBBE29B13159F6F0DA988C6FF06B7DEF
84FD26D37942625873FAFDE14EE8DC4F4D6AA70536BD8E66FEAAA8CE3C74B5FA
018A0355BA8777786C48E71D0A4EC6220EE0DD97B637A05F4A962CF1C22D8331
6A517000F1073FEBD819132C9E7B202917DFD3124DA727C1064E9644F4CD12DD
AC712979396A4CA810A650915DCE8EE5BA9CE7675B4B3B0334C3F081F0E15D5D
26A72F48979F8C3C01E7D209706461D2BFEEF8BFD513B0380993B8D52A6546D6
90A5391677441EDA83014D7534582A02C675ECB0DE30DC7BEB6639F4A9962D95
3AF02C2F9C336BCEC532B3FFFFC76E04FE862023793A6B33DA20BDEAE687120A
D28C79BF7D18C36D5F449AEA91D556400B8B732F6AC6A3709C0E84AEADD85BDA
0D660BF7CFF7EBC4ABA7AE170473D18BE8365338117FAE90B9F3164E2A29FD18
AEE7CC6A62999A6D5E428B4FA636A6A3152DEA46738423440E42355BC95CCC21
6485429D48A4A0586058D250675C3B03D1492C30919059141B29D6F35A59A6D0
E8FACA1B92ABE8F6D87E63FF73CE30DA9EC8B80427B8BFCF11DA5B5D290300F0
D9631AB4F95537F727150EA65470D065E5147382BFF84629EF76F9574234A6DA
3EB108F3896967A6F587933E276F5D3160BB73DB27D81C0D979929606476128F
A82F2C045B99E3BEC5162A07B6C86C0CF0E8C21E04848736487B8D3465182C62
52ABC7EBB0224AF28E55765856F9C191DBE0504EAFEC90D0AE1BB20B633D3129
0E01C2CADD28B4476C753826C5EB56EC4F80A76BBF5EA6DDAA46864083212728
C19C09232F7AE51D6624C8B15D84C4B7B1817248336E1BB09FBB191A0280B789
2F7EB1599CB53998DE0CD7AAC72A99F351D824F86D33CC89BD70DD41F2536E9B
24C73E424480138614EBA261D18BB1A26E4C265E2F3CAF4493204C69E3BA836D
7EF5018BA0B9143D164AA276710B6ADA6BC835A0095FAC132843FCD3BDC6D0CE
5F66C50E41E94B66B5CE1ED0AD1ED3B185D5177C121F1683AFCBA8006CDEE4B2
BA27DB49DBC6B0F3E4A591E6724DEB7E43B29E58C9B866566CA71AA222B3449D
584CAC19B00DFD60C6BBDFBD8EA513C0828CBF99F5AC9349EF9F71BC9264EC1F
E3BFFB9FF594A84498E76D7F61F49D147FAD57D62886079782C715F1CABAA2BB
9F711FECF8F43667B79E809F5F38468C15B44107090BF34F061C647BA03560E0
6391BDE9A02514DB9B144641A5B1A3F9A8306BA583EC24398D56F651C57BA87A
22D823DA008BE124C3E2D81F48F04CB32D17A0451E63FFF6B99EC79A32F7AD63
F5716194F5E321DB16C380C5220FFBD8F86EC29ED8F6CA090AB1E40AD29DA80A
7C096C415EA6698344221D19D368C7CF287C86989AEE0486F7D845B1EC2F20F2
C2A7ACD6ED9F9174F04586F09657A99DB0C8BE696C1550E419BD7CB15AE3A19E
C8BDED2101E08F086260382545D24A2514474A83D7652D463005147761BC48D7
5E4BB6D0402E35CF4E057863A2CB3801592D910C5BEF6F915697207FAE53F8EC
98A3E66366CF2D712AC5EF97A6A5012BF840FD6A283417353EFDFBE812757E45
3AAC99BFFD6826F379C0D6CDF905C8EB36C0B6AF47182C4F645E954A20D4A5B9
1CAF09EC06DBF53F5AFFF324BAB830E6BE1EF82B4EA38E7D327F0F4C117F34AB
17610F5D7F76C200124AE538113E5BC6BCCBCE4D0F09A5DC24D41FDD14AD2C12
FEFC1C4A2C31FA7F4F89D337209EC858B9FFC476D75D6FE345B5E929CB01DFC6
E4AE406203A42C91FF48397BACDF043A43A294F4A7F0FAC599672AC5FD5FB3C5
1F1D2016898E28BDBB4E975D99697D88EC5151E7249A3CCF7291EB81A89AE892
8FD7CC1ACD00FE1B5948C9FBCD4C484B94BB291F6C6DA44A23586A94AC32F792
09B3DBF96D89A21B587863FA51682ACBF252CDCB54E798E430593F56C127E366
6DF8B745E31A99A30F5C8BD4138519EA5EAFB80985A287B87F42F7BF0601F258
CF47D7B3F683D9FA2C00E745415462F2538DA12A3AC1FF3A12DA3C5EE8952BD9
1EE0129F811B5AD24585B6BC3A2D88E1B0D2C838921AF0FC5113A71C6EDA6A60
93D4E99CCA7569FC88FAF890399D7A69739E363B5C36DD3B1D0F1B0080A43B7A
1CC18E6272CD38C921577A046694E6E9F1316BFAADBA9135D64A7DDEC789195D
756106ED1E9FCDDFA1761BD627D86E69BDF08C1356CE769069C6825A46B6D70E
B017FBDE39702B4B8B60C24B7830B5CB853B04F748014CD294E91FA7818AC6E3
614C13343E0B6D88D1BD6B14B6512E1297D364A3D75A66A592E3C384C2B76730
E58B92467C7AD46C00D53EA1D538BF70019E1685D4F8227777FEDB80E92B8F4C
D9081D31AA562EA1337B548C520DFA3C7F0A0486148006AAABCD9489409B3019
EAE49086C3C984116E1FBFF31CBF679C41EE37A234774578A996A44D8DE9C349
D8A91CDE88C3656A7D9095905AE89E0904AC946EFC2DA21035C73BCCC0F2F81D
7ACBBAA1B71056D018CA5CDFEF01F19AF7370231D9EF10CE8BC3CBC469876377
0EDBD2387D7EAAB64220A2E61C48BD2B8CFAE86EC0A4FD7D95196C6CEBF5123C
2E2DF0AB9B20DDFC478F4B2E8C7DB2A3C22A76A5D515752F036D7D4CF449DCB4
6A43CF6C10C7D533D3F6BFA0FB13B42B9EA807C4D6DAFE88B2B5507573D039C6
EB48E1D6A862ED1FBF43D79BC538502D18ECA43881BF72E11F6A513F4FB503D7
BD8EF4C87DA3E2EB0620CA8517499927DF87481418856F88732899B2DBB39733
3B743C7AF418C534D9DA73CFA3DEC72E83650F240B54E88E51C0650399EC2398
81A50C3765942F2321EB09ED414AA9861BFEDEB1DC1D0E9012C6B763746FC0A2
B42143BC174C525BD731BECC8DE278EE68F3CE739731BF1BA47AF05D47396622
A61E75AD0820BB68EDCC2143F284391BBA9910455BEAF4B56C48432AC33288E5
2F38272DE73F258D2B99BFE0E3F2E125D61FB011C8BF9A79F4DF0F83D532C9C5
8970193C714D8CBE776E96125014FB2360FFDC5659ED890F91A8962DCCDBA543
2CFA52050EF03C0F93AFF4095B5A611CA9FEAAD87981D6DA72961783F252E49C
55747686F067B5886008F1F2634C3706C594349F1E95F04ACC11E1BAE4AA770E
51AE71C71E6B1C0BB7FDC8EABD60B73F619015028A250C536276BC104229AEAF
8344BF46720081C49801814C61398E78C4B5356A9CD88C2616B3A7258029DC14
ED4E9ADCA78AFD1651B5DE63228236B66C4099EE470620EBC2E8B6ED7BAAA66B
457B4C32A0162FCF3D02609755B814D2F9B7D52EFDA805A84FA271A8A8C2C57E
58F83C85CC39E9D715ACEEFA264993D724ABC4955C7691B72AD442BDDAD18F30
DB190E4D00443072DD996474504545DD2C1B775E4CAEAC1DA45C79254E889FD9
D7A6AC1A896380F2762679E60FA6E763176CA5178B55BCB1BA6EF9ACBAAA54A7
A9E5DEF03CDB67F1726814E6A79A319D14ED56EDB030599B042F660F30B6B552
B1D06665D3735B89302D0BF70038428238D1FA71C5C3C846B89B4A55ECEF6CF9
7A9DD839C25A63658B21DA28065552A4F0977045201E64134B68AFF7C7358859
3FD61E5A0DC97EA2E4AA2D6C07BC2973CB4A5305B0CDD5AE2CFCAF3AF145B9BF
FE54694EEB73A6A94E8D3DA7F88EE867F55C827A6BEB8B082BE7B0F17C79012F
0F3E97D821D57C20A48135F3634B5553DFFFC4F680383EC98F8367ECA2839872
01BFD2FC1051E592D42311903407023C9720B7878BB7AEEAE9CF1701F6DF625D
B40083C9FDB651061985A127003A0A5CB77A33C0E2B00E5F7579AEF49A3D4F26
29E06EB04AA53AEAF4DBDBF6F0800EBEF9EA787C014BA33FB0D84487B7BBEAD9
0EE57EEE028900491428174145A17B2C1B97F807E5AB84C0E6378D4022A99E04
D656B5D20C0508DFE61EFB83EABD0A4E7C207A140B2DE644A6C25A21641634CA
6C9B6C1CEFBE4CE4B59F9895ECDA46C17B0E9545795A6E62188B643BE9FFFFF6
9BF0E7C25C7606279C91938C746FFB2F9BB1859B9E19B54C00F6B78CD56D1033
E6F388E1C1C783678536581B6C5CBF44DEB0E9EBF8E03A32A62D77814D898591
927A60F24CA1EFB9DCEF8DA67E650EB7B1DC82CFFD7909FC251378DEC6CAC167
0457E00E1DB0091CAE97F00E10311791747231C40A3885F028D80A83C90E34E2
5FB00E1622E84621E7187CA47E7FE18D5C5D1848B767BD913A21D4ECA36B55B2
7012CD3B9E06613E8E610CD3569902230B8ADF92627010225A2F0EFB1D192539
BED25E07ACF5190AB5EF8AA1653959BD6F18A593F7F2F727BAE27D7A66202E20
BE0A0C0091B3AAB0710DC00D013BFB23ADD7E587167B0AA1FE2265A1FF6BB0F2
511C6947BCA4D4E4C32BF7A5B75E372FC69FE9FD47150A0CC019FB7BF22A3B97
9C95A2386E569A88B18A0488879A1FD4F01B8FB3F8FA0773FDE0CB6F56A0476B
5B0CF6361BE28DE2D87B5599FFCD7A5F372F14E95B0822D8FDE1D15B9F63FA5C
12788E6703BB5C18BF8300E8B9ED08ACE959392226C2D9AF98A86766DC230AD0
73B3113F6A4435539795135E468F1E1C4BC01FCB7D76FE663A99E64655311B95
2AD69AF7362316E80E156920B7AD241AB7309430CC88DA52512681E816DCEFEE
96974374BB6E9D392B51363C384BBCDAA7A4A2E13C19B474AE0A92A80ED24D98
F32BEF868FB88EF475B549067212058FADC299CF292FE789840D2BC040AA29AF
184694442AADDBB4DEAF6141D460D1FE4D5BAC25092BADA50A28342A2B7093A3
F7314F4F656E97438B5600529CD6732467BF89E8EAC7A4865824BD356EA9DFE0
3C8B3217E226202117CFBE3DE2C6DBFB0BB25BB13DA9734DEE5054A24CC597B3
95DF0F79DC42FDF29817A1437E959BF8C5293CFAA7C2716D2A51B83AEB1553E2
5ADAF673A91F6451F6CA0AF3C9D75F66C83E885A167F78C74969F073BEE1699F
55E90CB69B74A7E9FD538C4D25B68F0AE2AD2EAEC84A3320B7ADF8AFA0646A40
31E88EA2E8503CE425C1502DC3E14A5993ACB13E773416359F97EC1983C73211
2C6ED490BE8FCCBC2CEB4D2B531F06539A677C996F8FD91BD40FA7E07F57E8BD
5D23814246AA3DEA6BC301B831BC479C0295E4599BFC78C907C016022EBFC628
F3181385AB916E2703E48117AD5948375B10CE1437906A0FFAC7846E4F1AC654
0FBCB40BCF85012510352FC66C6F7741A542E9CDE296B257752B47C278D7B0BD
195F64242395E6C807B7D00E12CC9CA7119C41E7A5230738463CF24B1E359CAD
430142AFE54BD3365EF4C19A61D653564D8C789BCBDFC935E0EA158B8AA434AE
2B8EFE9F154411D1ECA405E3414FB628EC0E4A74C1A40F6FDDDB691333E51ED3
9144CE810C78D8CA0CAA2B505BF7D84597813143C60D3D1A515D52CB8732BF9F
B8C929A89DBF371F08DDF47A25F389DE2C91C9E45770E59EB9B49FECBE25FD43
EED0CB337CBA10469159C7EB05EBA4B9DB10DC587D1D16777D6928E602945C22
5D66FBE5D47E7CBFC6FF66560AD92480B3057EECE68CE511975D6CC8706F5B01
CD5715C6432452ECEC048DCD14814E47D8D8679B264BC4DD2BAA7B849854C392
E05AFDC82F9829202E879C2455A1A1A35DCFFBC0466A81247D0D69510F688A87
B0FF0AA4C418F45F2D92CFEA647A6508A8ED9DE36130126DB67AA65CEE2C6093
79CF16CC165EF655F725A1F221277A52C894A2762C1233B77692A278BCC9B157
C93E8A3F98100A686ADB740C45D0CB167BEB8857F5229AF25A57BD3B18556087
D7A042518C43DC9DC3A194F02D2FA859E8F5D1A42D40CCFB58F65CE08B7CFDC0
BD72A3E0CE9483B4A32DF6FF13BF4DD3EBBCD72FD79972C99A137204E37A4CBB
CB1EC4D5CFCE5DA3EAC9A54A0DA59DF3F1F99D6581F6ACD39D2EA944E0CEEBCD
19091FDB604FDC83BCEC4B5EBCBB0DE4E617C520EE3600BC5A5579C61FFE4F5C
2067E4206F8D4F3AF4B2C7D95E63DA3C28833F115844FDA9A2D92ECBCC9770D0
132628D7CAE1883D473612A411101DCE3F5B17D6B9B461BD66472D6748C87005
63EF452773B02908CF3851C1233E6D4DF600BC103C89E67D5EFCDA9560134AF2
2DF5DA92FDADFD2B6BC99C437B17993C173D78CA380FA824540B79150E4DABB9
E78C24AB9157BBA1DA686CF52E982FDA7C9EFCDC6C12C26926CE94C3A3D64F1F
B81A7057D9E4D48B2911B4361552CA25B42AEEE769A1B59D15D30B7292FD83B6
E1D08AFF2DB3BB3A4EA8DE8EB3C6469D98A8D4937DF8B471961EDF7B8CA9B4FF
039FE7704B8D86E980962317F059490AE8519A5898A31DA1739C01711DBD2801
8ABA77AF86CC2A1CC2C5D6ADB354B0D2F8C6C5D809F919A8D19B60B158F34E42
6E865DC8BAA0362B0DFA26DF487B9F38A7650E7E15D5EB486CD83D388C14987D
638DEDB574851C4AB640AE74B8D924E48E8EEA7BAB1F7EF9D23EC19ED3E72532
C2593550EB0DF54DF41CB97FA4ACCE1DBEBC4AD41C1DF757C4DA702C490ACF62
B8ADEFBD2DFF904F39925269B08B19376CE9DDF854810CAEC564B8FD098D152C
9A037362CFA24BB2F3D41F02F8BB293A2D46C24ACA0F80F5B011AF0AF9320183
6DFD5335E9500B7B90A4C13D3EB863605242F5BCBA9C0E5A09B0AB344AF75788
6F3FEE98543E871C435AAFA50BE006DE128A8A183E58E8DF72F236D0E30B0736
1E238FC47EF39892553D012754A477163330F0F908DBC35574655C93E13E249C
6F1EC315E12C20FD53A6555556089ADAB4DAF9B826BC53D97B45A46A70710FA6
EC22C046AC5CB2BCC5DC000765FEC64F7639822DF741724E8D187C522D898821
B44C90F115949E072DFEF409AC79B9EFF2FD4A5C7FCDDEEF5C791A36E22B1098
F3DB66448653E536A3D89386E1431C515236A31CBB8DDBF3A89D699C1FA84E70
4B02BC85D61ADA58BEB55CFABB1475EC41C9E6F20D2E8071551896F2BFDC6A98
6A5258F82A3189C68BE10D4A38A30051FE14DE4BA6BAC8CEE3EFD29ABDCA3774
848114EAC61532ED2C5FAA2AD3B07E2CA13A949052CB1ABE100AD765D3B860EC
40872F3E7AD37F2112B178BA064C258397CD009D9D2B05B426C9A6E4174A849B
D21708C0ABD0640A934223A46C18142DCBE5D561DF6D1B4F7AEBAFD4FBDB29B0
8FC7F63E378EDF067F1D2E2D0F1BEF4D4ABCD0F2542EBDB13E4174F27F5AC1B7
4625C8E7D769E9DD9EDE9AC14EBC4FA2B5A3EB0E6EC0F25703BBC456C9ECB91E
46EC5249DF901B8C67B447FDCAC65FD5EC37B9331CD57E3C2B42F2B5A96FFBB9
4B086C78474005E495D62B49EF8453EABC2064828A2254F5568A8D9E0B8E6991
269F30FED66BD929918A29501B77161586A6D21D7A553154D22FEF718ECDBFD7
503A0750027042AE2ED144E88443AFB83F96DECD5E0B32C5EA329CB34200235B
241A9E9B87F2B03692C75CF5492D88F2CBBB332B74072F0CC4867949264F207E
DCEB6F5EC0C552439FC2E8C772E1718C632C3971F552867AA386060985CEC6E0
C30B25557041F8215E8ED4A289CC7ED928B3E2A2253042C293291BB7FDB904D1
49467FBA73927F2CC982DF1C269C1996196C978D942161A04F980337A295BDC8
69ACED50FA2B291DA84FC40DFB85321175A3684F32D311455BA729FE149C3EE0
6D1BB6833EE4517BD765EE9BA2772D918B8401BCD1AC9DD88DA85E2BEFCEF4CF
D74F365927AEAF53A6C102F1713208C99AB6CCB0BB3E50A70B6A3E6B79492BC5
8C366F903F717C1A9A37719070DB1E340E857E15D19B545847359558542A2DFA
AA0E5D72898D3308A1619C99FD763DDE0C8AB27CFB7A6B0BB95D213C9C2D2A6F
8F48D39838647F35B6059CF7286586D1DE7A3163E28C573E3603D6B370E688A5
AF454507D1D245CB4ACAFAD17269C3B81EB4AB6C59FF62EB461C609C8D47E7BC
3BB2178B4192782402D4F78C39F044ED6AF03CA44591089ECA3DAD6839B59738
6E852EECBE1E315834B81609EE17AB457A7E88D94943A49C2FFA892D362C124A
746CE2E45D3CE6524CBF56223468C987C1883B80126A378B9E48E095AAAFF80B
DE1F354A42DDB04462598DF20220BD57C7E351F9925FB96349F8D9786D8E6FF0
3E9C48C9F214C13D06A414BB9D434502EFAD841F0DDAC1AB979CB3C7D348B097
477DF8C6C324CCCF965C397AF1B7F67F1F2AE7219BFE341207F12B03968966A3
4F5891EA33ECC2E788036B4867F90D40C1E4FF7460399F1F08F98CE8E579612F
E5BD03AE61262471275EE26BA9C567524E851BE5CAD6902F8B7C561E6714F008
FEF7C3FA6F8E1818DF1EE1B82C9E1D604056A768D50DDD339A656D83139769F5
6BB6635FC36248BC951947F61DFF1198B7E96F25B78A8EEED0E860537BE05CBD
A76276185E62A860C77CDFC3237F7023866E8F866F2A53415590181D74FC979F
2039CAD4454E94EE7E91E86684176109F4E159287C0817245326322B4B2415B0
79E2E8DFCDA8D0B2F55CDA6B521FAEBC9249F364B2CEFAA8506043A456360D31
5791D30E84F369EE9C74A5BD09A2A42033AD3E8183BAD0EED55C6125AAFE9308
EAF1C86299085911926F07D9654A6D855DAFB716379C2911136A7BBE47AD79B8
8BD1B6D5E2010F76466590AEC32236BED0AFB87147B4ABEFB7DC50592B708EB4
1E3EA269DA879FC33A7A3DB7B0110C6C4B63F6287A975E4F587DE2EB4A6CB08E
80C4653E80F2437E4C78157A8F2342160FDE182A537FC62E1E513E0ED65E524B
0071B5582DB3ED69E9326F0E0B0C8AB1296F20E9BE45DF620FBDA47D771F5BF6
220C31187BDED4E6C9023B34F5E37271D8941851280CA005D544A622717312ED
A892EE52448B7A5F6362F2A15080D7C5B7D3D775CA9A030ADD671B74592B515F
54AD2B94816C4AC7C85950AD2773902CCAB30CE65DAAE1DF4E6B29E7C2C0FC3B
42713380084AEDD35329C631C542E49414CB1DB3CCA2CC2E829A1B865019E23C
31650A256AFC92C4B2CD8AEB3188DFC97D37A6E405D6F45030DA0CA3AA41CA66
4018B5DD3F742689B3D2D3211A81591671C0125D2F3CD84110AE0F2DBC8D9AD5
45A21A0238994729E8AFA2DFC5546DA2BCF36EE6425B94C06F93ADB80B7830A7
172797074F7C263119F8464BD45329540CC4E7DDBDBA0C34B540571E0A93C654
9B7DAEB4AC334B63B158E93E90E6C524B86A3E83C8FC696E28A633B7641DB2CF
E4BC31945CA8F8AA76624B8FB845E3E678AFAF75F05FB346D7C40E13F0DE429B
52CDB670EB58CA27BF755632A99B6C46F3C5F64B3768687BEFCC7C66CE387A6C
BE292359B5ACBB72D1931970F45463989F1025A92F95C87197470E9296AED89D
51E4A99FBA80F0E24128E0A52301AB6D754D9671457DDB9D026697BDF6C16BAD
40F1C39ADF1F36F47A549FCB914A7A1478E795631EEDA9B97434BD6BA6D79D4B
06FF7B2EBAAA80881D2272C1B9C8B4B953E7F156894DCA72D011BD189E4A7782
11D19CAA1A2CF82D59939C0B1D8C65C00CC614FC2167BD22DDA36AB314C19817
B178558940656C83E908A72EEF9E18C426F6F84DB84A542CD76968DDAF3A0EA6
70A31ABA8D5D667729727F0B1C2CCAFF03D683C7486C57E52DD412FBFADC4437
EE355D42696852E057FA7C0BCE6B189C305C68E2466139F44BF9200FF84650FA
DE6ED9933467A88F5A6753BB9B85DEE8032D5C475BD39EBFAB8F5EE872217F14
2A10F8D105EE5BC0B039F7284BC2145D83163CAC078D2824539F5154280F2C5D
8BD801E53C9E7AA2A95D1265F475F6B5350A14D606657556A339B24EA5494C60
318F20665F97457F10BC7A036D8AED5459AEA02BC4E819C703F16C8E19D41F4C
DE6AA6FDC10488B743695C9E8FF436B01AB54EE171FA7638EE3DA78461B3E4DB
8E289D0F868BA0898D1C151E9729DDD097218CF63218845E39545AAC758A2AC4
90FEA1721494B3B9155F3EC184308F2BC3A97E5C43B831E5A6500A970E604950
3A4924DF46BF5338EB457ADDEBAB0C68A74C7DC0D0D0A183032CAC81636A4947
CB97219ED806906978D017AA07381A1D9324E7869F7857A5105A3A7422823D88
C3CDDB61058CE83A5304B3B34EE4A8114619069F1775A49597413D95EA04C245
15C8F902CCE695A24433792494129B48E1D04AFB3DBCAB07A8F9A07F59D961AC
3280022A9D82650D35DF834239BFD53B234074823A4A275C80B7BACADBD0C6E3
450B41D2AD5C3F9ED074414C7ABD20A434FDAA2229EEC0DD6447FC67F7B8B0ED
5B5CA0568B6DC15A57A7D35AB2D376DE92DE9EBBFCA82DFA363E66C46DDFEE01
61919FAB0B13363099D1F44CBBBCA5E8C723DB958130FF57827606EE540CCECA
FA515AB00931F22600629451258BDE736006B7EFB78B5FA8E83B3F6CE0D68177
4212166D85D2F9D085DE85DD13E2F7A4020AE8C79FE8C1E98BAC18DB5983B1CB
280979D5A5E13F44CDD5A8E35CB87D768AD6A8EB3B15AF1D1322654DB47B805E
2F6077252DD354A2F4AAA5DA72D8E89F8051D82C336189AB8593270AD661DCC7
CF1F0321116C09F0D0FEDD620BE71B7E983993E85577686A55601C71E2428CAF
D2791991E22DEFCCD1CCDD30F0232A88EADDA36FB049AFDBE58428C6CB29BE67
334A41156A070819589608EE783D7FD89EA98E92CA61F95FEFE5444295BF2C70
155CC2617BDE6A6665ED1D4D28A331EA2DA9AC98809CACF688526394E106B5C1
832EAF1F8512928C46E026947C05BBF9FDBF163B51D3916717428232629BCDA3
BF8FD99D4A08D41CAC35EA94D17559C6E7B7664E17C8B8907C92BCE61BB25D29
31128430141B4BBE3E2ED77846E9FC389E390096691E05F644A886E68A0CD9B6
D0398275175375BA5B9A11C600922F8F4FB1FFCCD39407036CA8B303A8E4908D
8751A798AB7C034EDB15FC592079046F195469C7D0026228ADDD373F7757D366
05631566C43465DEBB26C67D85392ABE747805AA7FAF889CCA81F6C84781EF98
56861569A51C79263F62D3E6D262F92918A53B93E0AE4BF9F6923051DEE44DC6
D1EF2820BE3D8C274AA862B9369483C8A41FD1247165C35F1F53BA552A068C63
41C85A09BB7147C7ABC18330E864FA0A570545ECE65C6F7F9A53C44DF445C9F8
01D701F5E18CC61B35AE489C60982D6BEACB4854331204CD10817B1D8B6BCC3D
E53BDB52D5AD68820EB2D6120F9F7F3BDD66F6694241B859C56698C5437914BA
E200946BBBDD7480E840500FDE4E68C62FA6428571E533E5CD4D5B4660453F97
FCB2BB973115E1B0050D9AC684
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra un)
@start /Fa 203[993 52[{}1 1328.35 /wasy10 rf /Fb 188[969
969 969 969 14[969 969 48[{ enclmmathex ReEncodeFont }6
1106.96 /LMMathExtension10-Regular rf /Fc 150[320 21[572
3[714 1[904 77[{ enclmmathit ReEncodeFont }4 885.568
/LMMathItalic8-Regular rf /Fd 154[966 101[{}1 1328.35
/TeX-feymr10 rf /Fe 173[959 82[{}1 1328.35 /MSBM10 rf
/Ff 184[869 5[830 13[553 1[553 2[307 46[{ enclmec ReEncodeFont }5
1106.96 /LMRoman10-Regular rf /Fg 160[909 45[606 1[606
47[{ enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular
rf /Fh 194[1012 3[650 650 1[650 650 650 650 650 650 650
4[1012 1[506 506 40[{ enclmrm ReEncodeFont }13 1328.35
/LMRoman12-Regular rf /Fi 202[470 470 470 470 470 49[{
 enclmrm ReEncodeFont }5 885.568 /LMRoman8-Regular rf
/Fj 135[739 1[629 10[676 8[553 683 8[1079 1228 758 2[800
2[838 994 1[1258 885 1107 3[1026 4[988 6[361 361 58[{
 enclmmathit ReEncodeFont }18 1328.35 /LMMathItalic12-Regular
rf /Fk 205[886 16[1328 17[664 13[369 1033{ enclmmathsy ReEncodeFont }5
1328.35 /LMMathSymbols10-Regular rf /Fl 650 2[723 5[650
17[650 105[578 686 1[939 686 723 506 513 506 1[723 650
723 1084 361 686 1[361 723 650 397 578 723 578 723 650
6[795 2[1336 975 1[939 723 957 1[885 1012 1[1192 813
1011 1[469 975 1021 849 885 993 1[921 975 1[614 4[361
650 650 650 650 650 650 650 650 650 650 1[361 434 361
2[506 506 6[361 5[759 27[{ enclmec ReEncodeFont }65 1328.35
/LMRoman12-Regular rf /Fm 136[1554 1[1196 837 849 879
1[1196 1076 1196 1793 598 1136 1[598 1196 1076 1[982
2[1196 1046 6[1315 3[1625 1[1497 3[1470 1616 1[2041 3[801
1[1691 1353 1412 1[1554 1530 1625 11[1076 1076 1076 1076
1076 2[598 717 45[{ enclmec ReEncodeFont }37 1912.83
/LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fm(A)-60
b(G)718 b(3.1)f(-)h(1)f(Energiesparlamp)60 b(en)715 b(-)j(O)-60
b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray -741 4800 a Fl(1.)p
0 TeXcolorgray 651 w(Ein)401 b(H\344ndler)h(handelt)f(mit)g(7)h(v)-36
b(ersc)g(hiedenen)401 b(T)-36 b(yp)36 b(en)401 b(v)-36
b(on)402 b(Energiesparlamp)36 b(en.)402 b(In)g(der)921
6792 y(Buc)-36 b(hhaltung)453 b(v)-36 b(erw)g(endet)454
b(er)g(folgende)h(7-dimensionale)g(V)-108 b(ektoren)454
b(\(die)g(W)-108 b(erte)454 b(in)g(den)873 8784 y(V)-108
b(ektoren)433 b(b)36 b(eziehen)433 b(sic)-36 b(h)434
b(auf)g(einen)f(b)36 b(estimm)-36 b(ten)433 b(T)-108
b(ag\):)p 0 TeXcolorgray 2468 11883 a Fk(\017)p 0 TeXcolorgray
650 w Fl(Lagerhaltungsv)-36 b(ektor)435 b Fj(L)16724
12082 y Fi(1)17683 11883 y Fl(f\374r)e(Lager)h(1)g(zu)f(Beginn)h(des)f
(T)-108 b(ages)p 0 TeXcolorgray 2468 14429 a Fk(\017)p
0 TeXcolorgray 650 w Fl(Lagerhaltungsv)-36 b(ektor)435
b Fj(L)16724 14628 y Fi(2)17683 14429 y Fl(f\374r)e(Lager)h(2)g(zu)f
(Beginn)h(des)f(T)-108 b(ages)p 0 TeXcolorgray 2468 16974
a Fk(\017)p 0 TeXcolorgray 650 w Fl(V)g(ektor)434 b Fj(P)615
b Fl(der)433 b(V)-108 b(erkaufspreise)p 0 TeXcolorgray
2468 19519 a Fk(\017)p 0 TeXcolorgray 650 w Fl(V)g(ektor)400
b Fj(B)67 b Fl(,)399 b(der)g(die)g(Anzahl)g(der)g(an)g(diesem)g(T)-108
b(ag)400 b(ausgelieferten)g(Lamp)36 b(en)398 b(angibt)921
22618 y(Gib)435 b(die)h(Bedeutung)f(des)g(A)-36 b(usdruc)g(ks)435
b Fh(\()p Fj(L)22062 22817 y Fi(1)22884 22618 y Fh(+)297
b Fj(L)25078 22817 y Fi(2)25900 22618 y Fk(\000)g Fj(B)67
b Fh(\))297 b Fk(\001)g Fj(P)616 b Fl(in)436 b(diesem)g(Zusammenhang)
921 24610 y(an!)p 1 0 0 TeXcolorrgb 921 27156 a(Die)476
b(Zahl)g Fh(\()p Fj(L)7725 27355 y Fi(1)8574 27156 y
Fh(+)323 b Fj(L)10794 27355 y Fi(2)11643 27156 y Fk(\000)h
Fj(B)67 b Fh(\))324 b Fk(\001)g Fj(P)656 b Fl(gibt)475
b(den)g(Lagerw)-36 b(ert)475 b(der)g(am)h(Ende)f(des)g(T)-108
b(ages)476 b(in)f(den)921 29147 y(b)36 b(eiden)433 b(Lagern)g(no)36
b(c)-36 b(h)433 b(v)-36 b(orhandenen)433 b(Lamp)36 b(en)433
b(an.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4800 a Fg(___/1)p 1 0 0 TeXcolorrgb 47990 6792
a Ff(A)-31 b(G)369 b(3.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 32881 54804 45 v 0 TeXcolorgray
24746 81281 a Fl(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(A)-60 b(G)718 b(3.1)f(-)h(2)f(P)-60
b(erlensterne)716 b(-)h(O)-60 b(A)718 b(-)g(BIFIE)p 0
TeXcolorgray -741 4800 a Fl(2.)p 0 TeXcolorgray 651 w(F)-27
b(\374r)440 b(einen)g(A)-36 b(dv)g(en)g(tmarkt)440 b(sollen)h(P)-36
b(erlensteine)440 b(hergestellt)h(w)-36 b(erden.)440
b(Den)g(Materialb)36 b(e-)921 6792 y(darf)370 b(f\374r)g(die)g(v)-36
b(ersc)g(hiedenen)370 b(Mo)36 b(delle)370 b(kann)h(man)f(der)f(nac)-36
b(hstehenden)368 b(T)-108 b(ab)36 b(elle)371 b(en)-36
b(tneh-)921 8784 y(men.)433 b(Den)h(Spalten)f(der)g(T)-108
b(ab)36 b(elle)434 b(en)-36 b(tsprec)g(hen)432 b(V)-108
b(ektoren)433 b(im)h Fe(R)33771 8302 y Fi(4)p 0 TeXcolorgray
2468 11883 a Fk(\017)p 0 TeXcolorgray 650 w Fl(Materialb)36
b(edarfsv)-36 b(ektor)436 b Fj(S)17524 12082 y Fi(1)18483
11883 y Fl(f\374r)d(den)g(Stern)g(1)p 0 TeXcolorgray
2468 14429 a Fk(\017)p 0 TeXcolorgray 650 w Fl(Materialb)36
b(edarfsv)-36 b(ektor)436 b Fj(S)17524 14628 y Fi(2)18483
14429 y Fl(f\374r)d(den)g(Stern)g(2)p 0 TeXcolorgray
2468 16974 a Fk(\017)p 0 TeXcolorgray 650 w Fl(K)-36
b(osten)g(v)g(ektor)435 b(K)e(pro)h(P)-36 b(ac)g(kung)433
b(zu)h(10)g(St\374c)-36 b(k)p 0 TeXcolorgray 2468 19519
a Fk(\017)p 0 TeXcolorgray 650 w Fl(Lagerb)36 b(estand)433
b(L)p 9410 27635 45 5976 v 11653 24050 a(Material)11996
26042 y(Stern)f(1)p 18657 27635 V 20900 24050 a(Material)21243
26042 y(Stern)g(2)p 27903 27635 V 30207 24050 a(K)-36
b(osten)434 b(pro)28910 26042 y(P)-36 b(ac)g(kung)434
b(P)-36 b(erlen)p 38725 27635 V 40333 23054 a(Lagerb)36
b(estand)41132 25046 y(der)433 b(P)-36 b(erlen-)41096
27038 y(P)g(ac)g(kungen)p 49546 27635 V -2331 27679 51922
45 v -2331 27679 V -1667 29074 a(W)-108 b(ac)-36 b(hsp)36
b(erlen)433 b(6mm)p 9410 29738 45 2059 v 13730 29140
a(1)p 18657 29738 V 8597 w(0)p 27903 29738 V 7745 w Fd(e)650
b Fh(0)p Fj(;)p Fh(20)p 38725 29738 V 8533 w Fl(8)p 49546
29738 V -2331 29782 51922 45 v -2331 29782 V -1667 31176
a(W)-108 b(ac)-36 b(hsp)36 b(erlen)433 b(3mm)p 9410 31840
45 2059 v 13405 31242 a(72)p 18657 31840 V 7947 w(84)p
27903 31840 V 7420 w Fd(e)650 b Fh(0)p Fj(;)p Fh(04)p
38725 31840 V 7883 w Fl(100)p 49546 31840 V -2331 31884
51922 45 v -2331 31884 V -1667 33279 a(Glasp)36 b(erlen)434
b(6mm)p 9410 33943 45 2059 v 13730 33345 a(0)p 18657
33943 V 8597 w(6)p 27903 33943 V 7745 w Fd(e)650 b Fh(0)p
Fj(;)p Fh(90)p 38725 33943 V 8208 w Fl(12)p 49546 33943
V -2331 33987 51922 45 v -2331 33987 V -1667 35381 a(Glasp)36
b(erlen)434 b(o)-36 b(v)-72 b(al)p 9410 36045 45 2059
v 13730 35447 a(8)p 18657 36045 V 8597 w(0)p 27903 36045
V 7745 w Fd(e)650 b Fh(1)p Fj(;)p Fh(50)p 38725 36045
V 8533 w Fl(9)p 49546 36045 V -2331 36089 51922 45 v
-2331 36089 V 921 39705 a(Gib)323 b(die)g(Bedeutung)f(des)h(A)-36
b(usdruc)g(ks)323 b Fh(10)70 b Fk(\001)g Fj(L)g Fk(\000)g
Fh(\(5)g Fk(\001)g Fj(S)26441 39904 y Fi(1)27037 39705
y Fh(+)g(8)g Fk(\001)g Fj(S)30078 39904 y Fi(2)30604
39705 y Fh(\))323 b Fl(in)h(diesem)f(Zusammenhang)921
41697 y(an!)p 1 0 0 TeXcolorrgb 856 44242 a Fh(10)297
b Fk(\001)g Fj(L)f Fk(\000)h Fh(\(5)f Fk(\001)h Fj(S)8548
44441 y Fi(1)9370 44242 y Fh(+)f(8)h Fk(\001)g Fj(S)13091
44441 y Fi(2)13616 44242 y Fh(\))436 b Fl(gibt)f(die)h(v)-36
b(ersc)g(hiedenen)434 b(no)36 b(c)-36 b(h)436 b(v)-36
b(orhanden)434 b(P)-36 b(erlen)436 b(nac)-36 b(h)435
b(der)921 46234 y(F)-108 b(ertigung)433 b(v)-36 b(on)434
b(5)g(Sternen)e(nac)-36 b(h)433 b(Mo)36 b(dell)434 b(1)g(und)e(8)i
(Sternen)e(nac)-36 b(h)433 b(Mo)36 b(dell)435 b(2)e(an.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
4800 a Fg(___/1)p 1 0 0 TeXcolorrgb 47990 6792 a Ff(A)-31
b(G)369 b(3.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 49968 54804 45 v 0 TeXcolorgray 24746
81281 a Fl(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(A)-60 b(G)718 b(3.1)f(-)h(3)f(T)-179
b(orten)716 b(-)i(O)-60 b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray
-741 4800 a Fl(3.)p 0 TeXcolorgray 651 w(Eine)447 b(K)-36
b(onditorei)447 b(stellt)g(3)g(v)-36 b(ersc)g(hiedene)446
b(T)-108 b(orten)447 b(her:)f(Malak)-36 b(o\033torte)448
b Fj(M)139 b Fl(,)447 b(Sac)-36 b(hertorte)921 6792 y
Fj(S)511 b Fl(und)432 b(Obsttorte)h Fj(O)36 b Fl(.)434
b(Die)g(K)-36 b(onditorei)434 b(b)36 b(eliefert)434 b(damit)g(5)f
(Wiederv)-36 b(erk\344ufer.)921 9338 y(Die)646 b(Liefermengen)f(pro)f
(T)-108 b(ortenst\374c)-36 b(k)645 b(an)g(die)g(Wiederv)-36
b(erk\344ufer)646 b Fj(W)825 b Fl(w)-36 b(erden)645 b(durc)-36
b(h)921 11330 y(die)501 b(V)-108 b(ektoren)502 b Fj(L)9565
11529 y Fc(M)11120 11330 y Fl(f\374r)f(die)g(Malak)-36
b(o\033torte,)503 b Fj(L)24817 11529 y Fc(S)25996 11330
y Fl(f\374r)e(die)h(Sac)-36 b(hertorte)501 b(und)f Fj(L)40810
11529 y Fc(O)42107 11330 y Fl(f\374r)h(die)921 13322
y(Obsttorte)432 b(ausgedr\374c)-36 b(kt.)6493 20653 y
Fj(W)549 b Fh(=)9651 15383 y Fb(0)9651 17332 y(B)9651
17996 y(B)9651 18660 y(B)9651 19324 y(B)9651 19988 y(B)9651
20653 y(B)9651 21317 y(B)9651 21981 y(B)9651 22645 y(B)9651
23354 y(@)11173 16735 y Fj(W)12401 16934 y Fi(1)11173
18727 y Fj(W)12401 18926 y Fi(2)11173 20719 y Fj(W)12401
20918 y Fi(3)11173 22711 y Fj(W)12401 22910 y Fi(4)11173
24703 y Fj(W)12401 24902 y Fi(5)13480 15383 y Fb(1)13480
17332 y(C)13480 17996 y(C)13480 18660 y(C)13480 19324
y(C)13480 19988 y(C)13480 20653 y(C)13480 21317 y(C)13480
21981 y(C)13480 22645 y(C)13480 23354 y(A)14670 20653
y Fj(;)221 b(L)16137 20852 y Fc(M)17560 20653 y Fh(=)18941
15383 y Fb(0)18941 17332 y(B)18941 17996 y(B)18941 18660
y(B)18941 19324 y(B)18941 19988 y(B)18941 20653 y(B)18941
21317 y(B)18941 21981 y(B)18941 22645 y(B)18941 23354
y(@)20463 16735 y Fh(20)20463 18727 y(45)20463 20719
y(60)20463 22711 y(30)20463 24703 y(10)22317 15383 y
Fb(1)22317 17332 y(C)22317 17996 y(C)22317 18660 y(C)22317
19324 y(C)22317 19988 y(C)22317 20653 y(C)22317 21317
y(C)22317 21981 y(C)22317 22645 y(C)22317 23354 y(A)23507
20653 y Fj(;)g(L)24974 20852 y Fc(S)26020 20653 y Fh(=)27401
15383 y Fb(0)27401 17332 y(B)27401 17996 y(B)27401 18660
y(B)27401 19324 y(B)27401 19988 y(B)27401 20653 y(B)27401
21317 y(B)27401 21981 y(B)27401 22645 y(B)27401 23354
y(@)28923 16735 y Fh(15)28923 18727 y(20)28923 20719
y(30)29574 22711 y(0)28923 24703 y(20)30777 15383 y Fb(1)30777
17332 y(C)30777 17996 y(C)30777 18660 y(C)30777 19324
y(C)30777 19988 y(C)30777 20653 y(C)30777 21317 y(C)30777
21981 y(C)30777 22645 y(C)30777 23354 y(A)31967 20653
y Fj(;)g(L)33434 20852 y Fc(O)34599 20653 y Fh(=)35980
15383 y Fb(0)35980 17332 y(B)35980 17996 y(B)35980 18660
y(B)35980 19324 y(B)35980 19988 y(B)35980 20653 y(B)35980
21317 y(B)35980 21981 y(B)35980 22645 y(B)35980 23354
y(@)37502 16735 y Fh(10)37502 18727 y(35)37502 20719
y(40)37502 22711 y(10)37502 24703 y(25)39356 15383 y
Fb(1)39356 17332 y(C)39356 17996 y(C)39356 18660 y(C)39356
19324 y(C)39356 19988 y(C)39356 20653 y(C)39356 21317
y(C)39356 21981 y(C)39356 22645 y(C)39356 23354 y(A)921
28540 y Fl(Ein)432 b(St\374c)-36 b(k)432 b(Malak)-36
b(o\033torte)434 b(k)-36 b(ostet)433 b(b)36 b(eim)432
b(K)-36 b(onditor)433 b Fd(e)649 b Fh(1)p Fj(;)p Fh(80)p
Fl(,)434 b(ein)f(St\374c)-36 b(k)432 b(Sac)-36 b(hertorte)431
b Fd(e)888 30532 y Fh(2)p Fj(;)p Fh(10)k Fl(und)e(ein)g(St\374c)-36
b(k)433 b(Obsttorte)g Fd(e)650 b Fh(1)p Fj(;)p Fh(50)p
Fl(.)921 33078 y(Gib)545 b(an,)h(wie)g(viele)h(T)-108
b(ortenst\374c)-36 b(k)g(e)545 b(der)g(K)-36 b(onditor)546
b(insgesam)-36 b(t)546 b(an)f(den)g(Wiederv)-36 b(erk\344u-)921
35070 y(fer)609 b Fj(W)4239 35269 y Fi(3)5373 35070 y
Fl(liefert!)h(Berec)-36 b(hne,)608 b(wie)h(viele)g(St\374c)-36
b(k)608 b(Sac)-36 b(hertorte)607 b(der)h(K)-36 b(onditor)608
b(insgesam)-36 b(t)921 37061 y(ausgeliefert)435 b(hat!)p
1 0 0 TeXcolorrgb 873 39607 a(An)290 b(den)f(dritten)h(Wiederv)-36
b(erk\344ufer)291 b(hat)f(der)g(K)-36 b(onditor)290 b
Fh(60)s(+)s(30)s(+)s(40)369 b(=)g(130)291 b Fl(T)-108
b(ortenst\374c)-36 b(k)g(e)921 41599 y(geliefert.)329
b(Der)e(K)-36 b(onditor)327 b(hat)g(insgesam)-36 b(t)327
b Fh(15)77 b(+)g(20)g(+)g(30)g(+)g(0)g(+)g(20)374 b(=)369
b(85)328 b Fl(St\374c)-36 b(k)326 b(Sac)-36 b(hertorte)921
43591 y(ausgeliefert.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 4800 a Fg(___/1)p 1 0 0 TeXcolorrgb
47990 6792 a Ff(A)-31 b(G)369 b(3.1)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 47324 54804 45
v 0 TeXcolorgray 24746 81281 a Fl(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(A)-60 b(G)718 b(3.1)f(-)h(4)f(V)-179
b(ektoren)716 b(als)h(Zahlen)-60 b(tup)60 b(el)715 b(-)i(MC)h(-)g
(BIFIE)p 0 TeXcolorgray -741 4800 a Fl(4.)p 0 TeXcolorgray
651 w(Gegeb)36 b(en)433 b(sind)g(zw)-36 b(ei)434 b(V)-108
b(ektoren:)17737 4229 y Fk(\000)-1033 b(!)18060 4800
y Fj(a)322 b(;)19647 3878 y Fk(\000)-1032 b(!)20036 4800
y Fj(b)756 b Fk(2)369 b Fe(R)23559 4318 y Fi(2)24085
4800 y Fl(.)855 7346 y(W)-108 b(elc)-36 b(he)593 b(der)g(nac)-36
b(hstehenden)592 b(A)-36 b(ussagen)594 b(\374b)36 b(er)593
b(V)-108 b(ektoren)593 b(sind)g(k)-36 b(orrekt?)596 b(Kreuze)d(die)921
9338 y(b)36 b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434
b(an!)p 1062 10305 44260 45 v 1062 13512 45 3208 v 1770
12309 a(Der)g(V)-108 b(ektor)434 b Fh(3)295 b Fk(\001)10118
11737 y(\000)-1033 b(!)10440 12309 y Fj(a)757 b Fl(ist)433
b(dreimal)h(so)g(lang)g(wie)h(der)e(V)-108 b(ektor)31584
11737 y Fk(\000)-1033 b(!)31907 12309 y Fj(a)323 b Fl(.)p
42912 13512 V 1 0 0 TeXcolorrgb 43621 12240 a Fa(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
13512 V 1062 13556 44260 45 v 1062 17114 45 3558 v 1770
15911 a Fl(Das)435 b(Pro)36 b(dukt)9509 15339 y Fk(\000)-1033
b(!)9832 15911 y Fj(a)618 b Fk(\001)11797 14988 y(\000)-1033
b(!)12185 15911 y Fj(b)821 b Fl(ergibt)433 b(einen)g(V)-108
b(ektor.)p 42912 17114 V 45277 17114 V 1062 17158 44260
45 v 1062 22357 45 5200 v 1770 19162 a(Die)435 b(V)-108
b(ektoren)9664 18590 y Fk(\000)-1033 b(!)9987 19162 y
Fj(a)756 b Fl(und)432 b Fk(\000)p Fh(0)p Fj(;)p Fh(5)297
b Fk(\001)17682 18590 y(\000)-1033 b(!)18005 19162 y
Fj(a)756 b Fl(b)36 b(esitzen)433 b(die)h(gleic)-36 b(he)434
b(Ric)-36 b(h)g(tung)433 b(und)f(sind)1770 21154 y(gleic)-36
b(h)435 b(orien)-36 b(tiert.)p 42912 22357 V 45277 22357
V 1062 22402 44260 45 v 1062 25609 45 3208 v 1770 24406
a(Die)435 b(V)-108 b(ektoren)9664 23834 y Fk(\000)-1033
b(!)9987 24406 y Fj(a)756 b Fl(und)432 b Fk(\000)p Fh(2)296
b Fk(\001)16670 23834 y(\000)-1033 b(!)16993 24406 y
Fj(a)756 b Fl(sind)433 b(parallel.)p 42912 25609 V 1 0 0
TeXcolorrgb 43621 24337 a Fa(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45277 25609 V 1062 25653 44260
45 v 1062 31203 45 5550 v 1770 28008 a Fl(W)-108 b(enn)5440
27436 y Fk(\000)-1033 b(!)5762 28008 y Fj(a)741 b Fl(und)9772
27086 y Fk(\000)-1033 b(!)10159 28008 y Fj(b)806 b Fl(einen)417
b(rec)-36 b(h)g(ten)417 b(Wink)-36 b(el)419 b(einsc)-36
b(hlie\377en,)418 b(so)h(ist)f(deren)f(Skalar-)1770 30000
y(pro)36 b(dukt)433 b(gr\366\377er)i(als)f(n)-36 b(ull.)p
42912 31203 V 45277 31203 V 1062 31247 44260 45 v 47992
4800 a Fg(___/1)p 1 0 0 TeXcolorrgb 47990 6792 a Ff(A)-31
b(G)369 b(3.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 35275 54804 45 v -2331 40577 a Fm(A)-60
b(G)718 b(3.1)f(-)h(5)f(Betriebsgewinn)e(-)i(O)-60 b(A)718
b(-)g(BIFIE)p 0 TeXcolorgray -741 43884 a Fl(5.)p 0 TeXcolorgray
651 w(Ein)414 b(Betrieb)g(pro)36 b(duziert)413 b(und)g(v)-36
b(erkauft)415 b(die)f(Pro)36 b(dukte)413 b Fj(P)30507
44083 y Fi(1)31034 43884 y Fj(;)221 b(:::;)g(P)34119
44083 y Fi(5)34647 43884 y Fl(.)414 b(In)g(der)g(v)-36
b(orangegan-)921 45876 y(genen)468 b(W)-108 b(o)36 b(c)-36
b(he)468 b(wurden)f Fj(x)14264 46075 y Fc(i)15107 45876
y Fl(St\374c)-36 b(k)468 b(des)f(Pro)36 b(duktes)468
b Fj(P)28148 46075 y Fc(i)28992 45876 y Fl(pro)36 b(duziert)467
b(und)g(auc)-36 b(h)467 b(v)-36 b(erkauft.)921 47868
y(Das)465 b(Pro)36 b(dukt)465 b Fj(P)9560 48067 y Fc(i)10401
47868 y Fl(wird)f(zu)h(einem)f(St\374c)-36 b(kpreis)464
b Fj(v)25902 48067 y Fc(i)26742 47868 y Fl(v)-36 b(erkauft,)466
b Fj(k)32941 48067 y Fc(i)33782 47868 y Fl(sind)e(die)h(Herstellungs-)
921 49860 y(k)-36 b(osten)434 b(pro)f(St\374c)-36 b(k)433
b Fj(P)11738 50059 y Fc(i)12114 49860 y Fl(.)921 52405
y(Die)h(V)-108 b(ektoren)434 b Fj(X)32 b(;)221 b(V)724
b Fl(und)432 b Fj(K)529 b Fl(sind)433 b(folgenderma\377en)h
(festgelegt:)p 0 TeXcolorgray 0 TeXcolorgray 11886 62072
a Fj(X)474 b Fh(=)14820 56803 y Fb(0)14820 58751 y(B)14820
59416 y(B)14820 60080 y(B)14820 60744 y(B)14820 61408
y(B)14820 62072 y(B)14820 62737 y(B)14820 63401 y(B)14820
64065 y(B)14820 64773 y(@)16342 58155 y Fj(x)17081 58354
y Fi(1)16342 60147 y Fj(x)17081 60346 y Fi(2)16342 62139
y Fj(x)17081 62338 y Fi(3)16342 64131 y Fj(x)17081 64330
y Fi(4)16342 66122 y Fj(x)17081 66321 y Fi(5)18160 56803
y Fb(1)18160 58751 y(C)18160 59416 y(C)18160 60080 y(C)18160
60744 y(C)18160 61408 y(C)18160 62072 y(C)18160 62737
y(C)18160 63401 y(C)18160 64065 y(C)18160 64773 y(A)19350
62072 y Fj(;)221 b(V)659 b Fh(=)22730 56803 y Fb(0)22730
58751 y(B)22730 59416 y(B)22730 60080 y(B)22730 60744
y(B)22730 61408 y(B)22730 62072 y(B)22730 62737 y(B)22730
63401 y(B)22730 64065 y(B)22730 64773 y(@)24252 58155
y Fj(v)24881 58354 y Fi(1)24252 60147 y Fj(v)24881 60346
y Fi(2)24252 62139 y Fj(v)24881 62338 y Fi(3)24252 64131
y Fj(v)24881 64330 y Fi(4)24252 66122 y Fj(v)24881 66321
y Fi(5)25960 56803 y Fb(1)25960 58751 y(C)25960 59416
y(C)25960 60080 y(C)25960 60744 y(C)25960 61408 y(C)25960
62072 y(C)25960 62737 y(C)25960 63401 y(C)25960 64065
y(C)25960 64773 y(A)27150 62072 y Fj(;)221 b(K)465 b
Fh(=)30684 56803 y Fb(0)30684 58751 y(B)30684 59416 y(B)30684
60080 y(B)30684 60744 y(B)30684 61408 y(B)30684 62072
y(B)30684 62737 y(B)30684 63401 y(B)30684 64065 y(B)30684
64773 y(@)32206 58155 y Fj(k)32882 58354 y Fi(1)32206
60147 y Fj(k)32882 60346 y Fi(2)32206 62139 y Fj(k)32882
62338 y Fi(3)32206 64131 y Fj(k)32882 64330 y Fi(4)32206
66122 y Fj(k)32882 66321 y Fi(5)33962 56803 y Fb(1)33962
58751 y(C)33962 59416 y(C)33962 60080 y(C)33962 60744
y(C)33962 61408 y(C)33962 62072 y(C)33962 62737 y(C)33962
63401 y(C)33962 64065 y(C)33962 64773 y(A)921 69740 y
Fl(Gib)415 b(mithilfe)h(der)e(gegeb)36 b(enen)415 b(V)-108
b(ektoren)415 b(einen)g(T)-108 b(erm)415 b(an,)h(der)e(f\374r)h(diesen)
g(Betrieb)g(den)921 71732 y(Gewinn)433 b Fj(G)g Fl(der)h(letzten)f(W)
-108 b(o)36 b(c)-36 b(he)433 b(b)36 b(esc)-36 b(hreibt!)921
76269 y Fj(G)369 b Fh(=)p 1 0 0 TeXcolorrgb 433 w Fj(X)400
b Fk(\001)295 b Fj(V)585 b Fk(\000)295 b Fj(X)400 b Fk(\001)295
b Fj(K)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 43884 a Fg(___/1)p 1 0 0 TeXcolorrgb 47990 45876
a Ff(A)-31 b(G)369 b(3.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 24746 81281 a Fl(4)p 0
TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 24746 81281 a Fl(5)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
