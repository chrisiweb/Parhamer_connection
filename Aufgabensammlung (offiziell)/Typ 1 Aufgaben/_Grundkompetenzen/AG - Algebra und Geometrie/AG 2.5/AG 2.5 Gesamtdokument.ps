%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 2.5/AG 2.5 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:27:42 2017
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMMathSymbols10-Regular MSBM10 LMRoman10-Regular wasy10
%%+ LMRoman8-Regular LMMathSymbols8-Regular LMMathItalic8-Regular
%%+ LMRoman6-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 2.5/AG 2.5 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0827
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
9DC141B7F6830D6771F1A3CAE655CA173FA57D400530CA6FABDCCB4325478D0C
93AC7EAA9DF7605213DEAF94C7281D9AC68D884E15ACA3BA68034F897A2FFC1E
F76FA2A69CEE7F1E9543904F1773969F65553C3469FD85B2F2F89F0E547BFBFD
F62A3E47DAA4EAD6D47F0305CCDB297C320A48A3655FAFC810CEC6F6D68ADA4F
AB5DD7F61DB94072B0AB8F1ABF62A78E43E1578DEBD2D05109DEBBCEC64AC700
4C28C4F0A5E3A003423B9958C73D306B2B4A7C67A95F8B4E737992642BD3701D
39FFAD94524A7752560FE97B8E99A12AFCCC5044D989BCAEC863BD15CAB7CE63
0194962E4183C3838D9401260A743447DF953444B29D7CB004560D0685F73E87
72FDDAB87125F419F90D165EF1C2A06A9B7500C6AD185B4115777C6BF9C24D88
653589B431FB84E4DDB650C2F783594DE6123D3142FC5C99973AF211F2A2A05F
5A756073B85FEADA4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3580C547C2
54FBBBDC95998DEF2EA825E3BB2AEEACC0F30841835121B7A7D7A973F2EF67F2
795E6DD8CF55B9823AB2B15ADC328CC3AC493DE8C2F022EBFA14A2976D8E3559
B5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E9A716737B6BA413F846A887B
D1B3B89EEF73565F3D0D2D1E40E4C2811D37C9029692DF8E94F6FE39474EE13A
EEE65EC0E099C29064CBC0503FA4C89D845F91A107C8414C1648F6EBF6C8B1AA
7B2F72302AC2C6E6E9E4FD1EDCFCB8C648B2BDC18FE07B44B7E886DAB96F8B4A
BC3C584457B1565FE02E26EFAADB605C5CFE109AC7A355E2283555E10CA9070F
BB98E2337281FDEE7EC20EA060A062235F8848946BD058A0C86C794697BB0674
C1DA26CAC3FCFFE73689E2CCCAD5DE725AF6C7DE282CAA214D69B6793520439F
2991BEE6E427D4E82FADAC6C3829AFE1196FFD8D1D0F6BFAFF4F9062FDD08665
FFBDE33DB3EBD99D8110257DD0B832CB4209074A589041E903F6D89E22D34EBD
2B3C90EF5D9AF0A0DBD5145F0FAD88EB09D1BD84D00D951D4CF9252A4443EECC
AF1E56E5FF02B9070C1A92470E3AD7F1CD944E91ADBD1EFF555FF3EC5664191F
1C11943BB76D70D356FE5D145C73670D1A8F71E5C4FEE96C8D4DF87FF05432B5
165C8DDEF25DC98CBEA51FA99398860E1C252C17EE576B7ED658ABFD497DD5D4
E49663A5CA73CA347E27BC49C7DBD28DDB3AC7A78020551168A47ED789C2AD9A
B8C8FB7EA2F8C7D4D9FAB4B8DD91CB69558534CCE31AE7E157D0B060877AAEE5
14CFF0AD50200A157151F7625E63296E325E2C36D5DC45C5129C2D342CA7541A
75675EB2F1A5BF25461BB38C84D0651F4644CF51DAA8608BC3B698A22BAE29AE
3FE5C543DB648AB544E8212B3B2F97B5844022274F5EA46CF4E9D49CADFF1DC7
AD838B09A2CB6136CAE6AEA52ABA90745D527188599641549149217DF6B36367
A67BA60DB09562E82863F6C001ABEACCA36DAC81C30C11F98A77F4D100499847
E1102CC075FA1210881D95D6ECDD37B0B820176667500E58782156ED77373459
6699116573EB74FC1C83B091EA1700BD5B069BB7DEEE2BB45E7757F7BC00D85F
75BF5F32B350E2CF46BA0E8D0120BDB3E742C15DE5A8340318F907D7DB5591A7
08C83C63D6D457915A2F41B21629926169F4AEFD81BA2A880F4799EAE1C0C57C
FBC28FFFC956640872B49219FA101B88EBFA3E47EA4515043C418049903E3F36
885AD45509FC3CF7A376A608FC51751104BB96EAF8314E2322C457EC6683D385
525F118C799C34B50840604E7C248CA5BAE81E8C76C29FA3779933221D8A612A
2DFF00179C41CDD34E7015DD7198AD6EBD2BC01221F7E35F8662AEF8B6203C54
59E883141A505B275EE1333E6958254B6D96C9E54D47A12F4D299F67168AF7E6
1F19056BD1DEB7FE32A4F4E62D202CE86DDB34598B8CAED5B6DA81A6C816C747
568DD57D21AC8F8B1CD8B2BE97272017FC8176FB0988076E76EC6E8B4CA921C1
AAFC0EC3E24C38BF6D64E9C259ACF279C3272383D7526CEE1C178B1C6988F963
BB0D7534D41E675EF1BA59AA153AEFA7AA88C44F92801FAC61A4EFA2911B55BD
7DF444571A774CFABE590CD7C75BBE8B58EDC3A2C53FE35CC6B22EDC09857DBE
3019A7C60107821040CB0824EE588C4973D9A0D51FAE6E5FC9F82277403C5DCE
FC2C316D499F60E7C6C04DE9C117345C4E51748D3A5C5167780590DD9E188017
79FBC3307C0BB8A5784518676D62FF024E380036EC605313952366F3C351EFC4
33256002C59C39260DF18DDAB0BA5A40946D550B7831A2EE2670B2FC5DF8A50E
6F0C48860C52FEEFAA70B5953345568F1DA030BEF5C410DCA1D11F770EBC2E64
1196A40F44A2BD2529610091D8A9F09161A41BAC6A15727CE914A1009B2517FA
41ACD230B1E0CE76E289C42EAB07B0F60452B537A69B9EB54A68FDED4456122D
483AE830BE0C173A0D256118B0867DA2ACFA39F9F6EF1D81C607DDC242707D6B
53ED198367C7D54AC750A007498FA31E27B0F86C6D3AA81060727EDD60506506
EDE0AF44190FD947C4B9D41C4A6A03DF807F98C68F883721E6E7E6383207B054
006A409855639AB72C071CA7DBDEC1EB29885A11D100A9D443EC282E485CBCC4
8CA8861B0BAC0B3574ECAB561760E687C3BF7B72600494F60D3490DC63F40B39
F2C388F118806FAEF0361E5A30DA786E599D9055059C0C2180824BAFBDE47BB4
6F54EDD7D7FBE6B569AD9CA1AC51B9CAA30D805089E1E96AA5F1C7D8579C4D83
3DDC80D805CFE4868E62C90C06533AE6C9A73E86D96C6E3919B677C2599BAA26
96DDF00B27D9E1AA2D9A1986D83626E0D8D0C105CB6FC5F610237BB3C6E242EC
52D4D247307FDF5269B44DAAA80E7B4DAD286C0B4469A6264647AC1D5FB8AEBC
6481A94C6ED5EAD255050003F03E16A6529971CBCB06166030EEF983EF332497
5116CEE2F516B4E2977709EDBD3DB7AE516C55E742F598B2D718232DDAFB2043
F674EA73C9F043EB73E6A0511F1E28762342120515EF4AB7CD1C0D977AD77AA3
B19AADA40A0586A02109B864FE34566E17B4A1A09F9BA10DED06056B51C42FB9
B6A9C4362429C2FBCD39A24463D3E0AB8FCC9F3FD3A30F4F015CDE9893D5D66C
804F030B04D85B48DC345FC8249F699D5364BBA3E4FC59D1F7378FB3FA254230
B9826E6322C4D6231EFE10719E907FECF478FEF51DB2687D13CA64138054D591
B1C7894E2A0D724F4369326D31DC3FED9625DDBBEEADB867DDB7FF0678F202EF
8252CED93785F720E4DE92960A101294ECE75FFB72E6043F33FD3778024A3CBA
9DC490FD77F0F3AA902CB872E59AA81C0B0A6BC9DD687A18BA25D37CED0CD4E4
F0736A7C0EDA3E239C23A9BC94D2BB2581629D0C9CEDA46E01A5443002CFE126
DF21A740D9791D4FD8CFD7A635837144E85014CE922B9801C1C1939D2FCDDA6D
CCDC6E7B4B622D86519A9A42FB03DD17290E01444DE0216C35C52F0C3950222F
A43EFF75AEA3FA058494B0BCEE5A20AF99C473D1241DDDA5FDA97A2888AF5FCF
BB88F51495E5B2EECC7F07816F1CDFD16F7B82AE7FA98BF363EDEB32B1544C9B
7F8041AAC5EF16801613FCB3273DC62300B0AB0281C7CD4FBCE2B5356A2ECEE5
118D86CD0DC85A9A53BE7E1C06835390A532F3F6B1F8FF071E03D1BB27C6A591
AAF6BEBA1976526BFC9D408297302124C1A7A32D8F5976F7CA9EB64367E3161A
5B20A7DEA7A985D1C34836249AEF8ADE9F56E298AC1D7181D637A568C615AC37
91D8E50942287BC59CCADFB67B23FD0CC520310B3EF0414CB723B3506AFA56D0
24D45A9A51D740B3A96E7AB386AB4E1154350EA81C5DF203CAB41F0E6C48E170
4F311F51451DD607ACE85F8B4F4C828D7FF50D459FB6C913BB52FEF3A6D478FB
BCE3D06A8573ED0BBCF641FDA888EB1B9654C0CD0E070A900A54D9B875E95CA8
166B84CCDE9FB92FEF1C849E210276F72734DB97A902EAF9C9DBE267C618E342
EE8B5C4DA157F0B3F4ADE8D0DC6B9E205C7C32C2724172E4E8FC4B58E6CD01B5
9C73A14DBFB287B7017F6AE0F5CB1F557E34D6F3B792A1257B9FF5EB18BB80A6
425EBDA44D6753DCA4A6667BB22C841A91A8AC118812C9BB0FB860D2DFF11716
82E86970679952012FB4D39CADBCA6419979CFB0A877B1055CBFC4E8EEAB50A6
84882F5AFA6776BEB4765C6ED70B6BF84F03FB878D974AD04A770977FBB2C31C
4F8FF8BB1E7F5262B2649200FC5C77003D22C3A1E82B87DC2C2C554495B74DAF
CC33DADDC64D2A8C99DF087027EC2EC8DE518F1F6A50D7011BCAD9B86BFB6772
CA98CA95FFD014D72924ED65F147D6F231B461AF422355101AC49658B6396F4B
551044BB5A01FD8F30E96A773B1E19920DF95835D87D2262EC7AF31ACAC176D1
1DEB3601A993B6641F73D01D09636D8DFE49F75A1FEA7FB038BD30EB76410ECD
5062BD50BAEA04E96DC81F6F9F742A10CFFDABEB16062CA90F69D361C3182674
3EB62C444271924C89E11F2F498E401646F45EA63BA74EBBC62EB7903268006A
98C1CAD6065BC69698A27F3A9CA142E39598151578C3C118D40E9E8419C1A968
F1DF66B627B992C83529FB4BE67A1833D36D09829FA03EE7D559D5AA9875885B
96A2B47E4C81BA6C9E6FDA99321F57F6794E4F864073CAFF73E3C7106DE30A0B
E3EFD47261CBE2F070C5A57E223A0565DE2352C00C1694F3526F0BBE8E4F5D2F
E9D3A7C041B06172198B32F99D58E21B0A78302026FBE7A6BE1CE72DCE5CDDEE
C7E3113C9510F18204616B9019BDA26A143C18825686F9ED9506C080D968E979
B03376184591951FB17F3F4D690B31E8F6E329F88598FC36B36F9968B5CF9FAF
82BD496839A32EBCF1D18C6905B4FFB0432DF191F6023D154D4E5B3692276D84
35C2A3E01214CC90D74A9E2EDAA794F62C8E955CDB8AC8BC34C602D0F73A09CE
AA55A74E243D08DDBCB12F26FBBB8F9C43DD7BF7665D5F14CA4BD5E05B7DA8C4
35A28EF529B15DCFE08B3574C576E3AAD2E26E78E543F2B250A4B6BCCBE8D90E
DACEC433E0E45CBB75B7341F06D8E37285BEAA9AB71AABE3C85554A5A06B2AC8
B13D844A44C61135C81F9D586E0FBDB5221FE1F3BFE28ADE72E1F7E45D55CA20
34552666D5F1DD367C3FCF5311083B89C86D81AF27BDCBDABC57530B1AA9A74C
DEE023FEA051AEFEE5DCB52CF065EE27C9D3F453CCA5959665E40FE323256A36
6A45877CF940CA779E14D9530E8A6887BD14D5580C88C5871E9038CC62498A89
898025EA873936EB69BC17539AFB4E5E6E11F46E976EE6BC32FE658EDF088337
1DAAD3E660F09D520D471E487B130E254DF39B4DE5BAFA5B9682D05205EEC186
F876671BD65F869D2D389DB0D75797A8D577CAC542265A9064D7950B82F1DE12
E1EBB53F8D738E0ECEECB503FCA3D467865B963C6CB6C2BAC0238F0A2AB3DA27
6B209B473961A55E2618F1D8B444719E07C6768FF004AB0BAB8FC26A6302FE92
867358E2F5C27C016B20B867FEE8ACCF82672026B3122E379A0012322A325BEF
16B1FA0D85B65C1BDFB873D1B8AA2084BE9D840DA0D79520355177AD6F525F9A
017A34A18AABBDEC20E7700686FE88CEC8A3A326B77B817ADBF1E5A669A87C38
86435AD5198F5ED2CC8C4AA2D7E81DC82DC43051457907950717495F62AD860B
E59DD9C26FA72639FB421C3457FDC09D3B8D5255384A2C0EF7347C378B111AD7
92A90E38E1552D1936410B0E8ECB71ACDB08D469FA914C1ED1B237EB729260D9
7F3F1DDF55DBD314B20F9215B085F4E2BAC9E70578002E221E3878624A015FE7
5322A710B0E857532B41154D4588FA10A67EC13828136E1E719A52A0F2135609
B0BA01181B1E0CB73B74804696B14F0C6E77EB72E933CC0AF6A8C1095C726856
4ABCC720B69D111D278B122D39F103536F07E4B5325EDB72234C4966A716489A
F56E781AC3C53098D0B721C751699D83E8826D4AD3607A91673A3DF62988DE97
DA96C5C43CC63FBB7EBB8A678026968855B88283552DD3CD9831BE0D702AEFD5
278ACEC4A55F1A082D537B3C1EE890A6FD2ECE0FA115CB387A35DF5272A9AC76
5A0BBD8CEA4AD8DA18756756F9C9D4DB5C342277749E85C7BE53D7191ED68390
5AD80C2F016A43350F0034B1CFEC671B7F820C3863C1C59177AD0A23CFB7F631
E00CC979AD410F813119C05BF6F3A624E2167F7BDD45A9C222FBC9ABD8D3F08C
926AF66356A2A5C3B4C1F7A671760EED5D95F602687628A7F687B76F89E628D7
5CB834F24C4ABF95BF80FBAC642A003D8B8116D143E653C64F79B9B48DF5E401
CBEB5F0E7939858CAD24FFB5D675000565199BC15C451E1A1358E0CAAA3A6EBB
0C27F6B3D45356DFBEB0F12864B22FD1458FA08F195038907F9EB5901BC33833
2AF14A0CC7AAC1D3D2B2EE4CF591CF933BD8B554D763E0F9026E2A9EB717E9F8
F68C52EF8D76F50188274F566C5B2A338425938C1BA49A25E227C139495A4F80
88E006FF95E07F1CC14DC82CB3D7C5BAC359A256E7F30905CAAAB4FFD115846B
F98CD6DD8CC10E1237149141FEB9433AF21E8D84C50F750434191ECF16684BFC
ACA28701B13895988AD2D1F42F8CB2A04C1F8D0F7A88154D1DF0103E0A79EF11
310CA67DE648AF6035431A46F6DFAFF04D85C839AB59576702556FB320785FA7
CD00924DC4B86318921169C7F112991FDA63181543D680A549DF505817CF5FCB
EB7DD5871EDA1C1A74828619679823AB775EF86375D6BBA2CE1180857992FE87
22AA896CBD342E796FF285F008E8815DC181F7BCB30C27750705D1FB6A9C3687
7D0B777EEF59B03F19BC6B8FDA93079E50A84B49A45525603F5B0384EFBF7485
9197831815E2A247B213A287F8D31AC4AC1788A4E78E365F57B1586D9D705B1A
A8697A500C943F702F820CCE6181B61643B6058172DED8AB858A3708405E2A42
E5C47B6FB43375D66AB1CF0D1A2BEE1E1B87180B5989F1706873C9750266AD24
F497D993A4B132A6E7DE5D7F3998678417975004BDABA46A56DB059C3FE58F0E
A76E839F5BF88B01814A418D1EA445A5651759AC87FACBE49C158A1BA933D61B
32AD120B4BBD285DE4696CB03F7E3687C5F746098FA003BC18A2DD5FD92C7422
C4911428468FF6A49FC6C6AB66353911FD032BE7E564473F851F794504BF7C72
425E2B925A1CE2ED8AC7DF3E7562A5B1264DB87298983C55D4B4413564585246
569BCE190845D2E8BA2A1A259DB009591782F8A664335F67B9DDE36DBA793EC7
7E5CD486AC2C6C39954AD292E79A639E800958B0297376239A26B60263C26A3F
863C255B50B20037BB29949C5D39CCB462089EFBECCA2B2664527B384EB259A7
B19DC09A144C415C5AB2A72BC3F9A63FC847DC244530BB6D83DF2700919A108C
CF28ADD9B2582CF6C3178700E56D15B1CE8174F19CAB46BEE6168EAED2B0EC96
06F6300D6B10D9FFCD776A189D0C954FF3EE09787595D81BC7EEB5701D0ABC1B
E9E1BF3011EE34B526EA480EE2879F3C8454BBE24C7115B5D8DF47C67E367D23
76B73CE5E992441A5F6CBE5E4D11753CE4F2239662ACFCE740832014D11E9E66
4A70232F0EF82F448559F8CB85DD9909A74AD691B65551CBA7A97B8B09755D3D
61875115365E93E4896AE59EEFF97D0C4B6DCB63FE35B8FC0063D502AEF1F6F4
07161A331B3E883E490A8B71BAD600D899D91052FD81AE9F657427DB751702FF
8E7DDF6E039E073F472A7B992882ADE2BFE27697FF9C6A98C0F94E2411023F22
CD2B601C42387EB4A72707B9A2573E1AADF374AD12C745D0C2DA2B4BF81C5349
1FC19E2A7D7C95AA320141BA36D19A1266E217CC46FE08016C3DC5161B74DE04
DA7417CCD6B88C7C6F4F0FF1F348C9D3F1FA454D98E25393738AF0F88BC4EDE0
996427EDA0CAE0F19C2B1D5B917C508CB1BBF6F2B78F3EE8713C62E48F5C8F62
344E371AF8C67854FF97719A22BFF5D31C9C6C0FF56F9B3DF1963737126508C6
5A376E555E91177C25C29D6E749326DE674B1F5AA2C6CDA1A2B095AFDF0D7EE6
9B65E0181D69369805AEA7ECBA85BAD11E560633221700A5D79FD0452BA9D181
122739CF2CC73F89825E2087C5BB61C6C9FD252F2C0138023BDA6569691729EA
004A3D96F0FBB300F405FB37A9043906742D7FB5604173241EE0C7C6A83E5EA6
13C6B3B1285D1EDA04B7D11568CC271208DE70870D953455157FFCA9F2D5BFD0
073C9671F7F951F199375ED4802FC678755F62A3B464A0300513DB48355B3D18
70DC2C5D43A6A69628B40736B1AAFBADA2DE6F39CD5991317DA4E9E4AEA452AA
B51A81874FA8B3B9BA33E5B0AD0042A3ABDF05D656E52E3959574B0B4BCFA0B9
C7B2590AADD6506F9AF778B4A8AC4B74D356F94193EE7169D5E3E1326D1B9400
16CE245180FF271DC349A4A095E93E7A05D4A22BCE7616FA610E4B920460316C
88FF71B1043637D227236DDB0942D1DC868DAEF62BF2829B0317676E459F3527
41C980265570A42113C83ED727B5BFC009FC476379100E7045B930267F0EEA9B
E820E13291132AECBA7486A859D490BD6B1BFE492563525B99F0A8D519F66EF8
C0763ED425A255FAA7F439CDABD9D54EA413DE4E7DC57F72AE76A679EA447B94
DB5CB272D0E55C2C138BB8CC7BDF34460CF00663EBAEC8C9E8D33BA0C2BE8925
4EB6841067A0B618D05A149DFA46587DA67BA7005F556E6C7F2FD146D7607274
35015213CFB157A1414B1330DB79A5B8821C138163957573B49DD5B4BD182D35
35C2C968EC51BA0E3B73895A45C136704094A97F5F335EDA452494ADE1597254
80EAB33FDF27CC3291F8C09608478E5E785D6EEAA6ABA1B58D3A468B71836658
7D0F331912556E5D82BB9E05390DEEC769C63967F79359D1B29351E3A7AC0C4A
498C6121EDD820F2CFEF6999F99AA0A791D5DF44958A1F7695ECE82296DF0D27
2C713BA3B6130E6CE4D853093DA735DB67694569E8A3115B94FFCF394C412DEF
09B69CD09D14DCD518446435CF22A8AC8BC4017DD11336046B5DD23AF13B2040
8F7DE2E0C6BB79901353684CB30A51FE61DE94D66C33CF7BFC8FCB5C2010E55A
AFC7ECC4FF008A8123FAD0B30DFAF717211AC59A1520C8B15FECBDA4BB89EDFA
E2D6A52C31C01B3AD72A49A0A5903F42AFB4E19A95C7D9B71C7D637420B70C18
9CFA06BD4AFA8323B32617FE09DDABB4DA5C9565A5FD208DD31335BF56C3BFA9
A6819731D70E62616DE4997BA9611A5C35F6D03C056620C2307D2F7F407656EE
331DD85DAC65E4C2104C0E8B6A328A596D18D361E0B0A9F7997EE342E543D607
556CBE5A9089B86D1DE768F27D76167F5BC21B42B5F41E8F864AC5FCD0977D31
EFCD46C932019C4D63AE6E85DDBE826FD8145968FC237F12812D799C5F16F031
7449079864D54B26A575D9DA9B920B24F7277DFC37AD7469C554F21DA9C2007F
FA851430CBB5A64BF1A1B79C7F709E8893FD04E9ECD497A5D340C634A9DD3A93
2AAE28816D999955116FB5B015C6D1321FD6C5A2C003B01CB922571B8E5E7DDA
3913705D4DE85889CC2F7622B3655D2AD5151CD72A5836CA448E139EF8FFD8A8
213F8B058DC741C12B1EC9BF6BFB6BC306585A148061A66D60F7565B29F58249
DAE03DDA74A59A2E8C0A624B1BA24A0313720ACE3287858A257253A706922272
3963E0B13BCC0C763CDD3627A3737DD41477A8BCF7C83F1B6C426CC298540C14
41477B022F220DC7C268E27E41208CE57865184F7B0295EA8423C7301B1B5518
CC35F85B92EE14A93D432EA7262F80AA8B87F7B0E297ACFAE060F74AB56C3016
72A0BE31E078D0A011258412B97686CA80D136B87307C25B821828F53A261608
FFD5E07866727F25D576445C5771F654CF59FB94240B438B67BA2E84D7D262FE
5B24916FFEE93A68A5C016172C6715E7800876FA16D597879F762BF7CE394D18
DC76D206301F7A1C48346D2C00518ABADDEA6ECD7A1713DE7AD5B638E29F3E91
A2E23D6B622779FC97D1C263411D2BB7F9B79D97874A165F2B6E7741D3809383
4D9D811F3A0088BDEDAB773913A2AD866D6929DD941BC4516EDA1AA0D911EA12
5322B97803DF839374F073EC88745B54FAC04CA49E5FE70F2469172097ABD94A
B45C10AF3F3FE34DF9CAB87B946206E88D274DD8EEED230B27E0DF64F4D76A5D
0EA2C6121734E6AD6B29C94491A94CFA9B4380D32A7FF67E0870B7575D67832B
87E025992C81E31E226BD21BEB971C53706C4E12C6F43EB57222842B63433141
C027DC419FB13CE8590A7BEBAF2770DFB333EA66621A5610ABBF4A933F9098F1
73D8BFFFD3DB50BE815438A3C46976FF58FE825BC54EA5B184716D9B3136AC2E
7C2B34D41F5A70AACC410555B525925D9BEED7A3B4294B006D7E279C94F97602
A69B85F86AEC6253DA395A55DED9117E6CE8DAB83C34AC97C66C21F4CE4812FA
0F007C12820EB1C95508A0084305994178AD6CF3CE058A3D5FC2F135D927A09D
010E11E6D49C77FC969D1EC519EE0EEA3AB8B46DD664AD3BAB3751E9579C82EA
985C0046617D8B28D9AF7227D7D1B280A85DED082F6CB340AFE2161A04A7A5AD
31E3EEB2452F7A2E643F42D818DB4F07BF8035C973E5CAD59E4B00A05C45E7A9
BB9C9300048370534CA562A06A98ADFCAF9D29989D23066909099EA62939188C
01706215B1223128DFF2F1BECFDC5F524F4DD8DDB484F625BEB57E28405D014E
912B80B4953027FB482E06C093E9EBE22F3B9FD5B28AB8931F1C91E7F14414B2
28B69FBCB0E5DDA96EE11F66013629BBF8FE3121E9AFEF36B98DB6D4EF3853B4
2822FAC82C374BE36B839DA8011D6928A19FC811A283EBB5CEDEA451FA911236
6FD9AB35CEFAE60FC97C6B9EF843CD60CE8C6FF772646DF47F999BF6FF6FAD14
50F5FB9B42ACAD3608F12D0803D87B91B4892171B39C9410EEEBF42BA0BED2B3
DCE1E7BA8E5424C8D0A899F621CB490A6823BF82336BFFF374AAEBFE99BCDFD3
2EB647D987E1423804454CCC667C2C1AF8F72103F1A7415F526A2CF3C16B8007
83108075BB691459DCCCC211E44D10C0CE6B2EEAA9BD1E815E6489EE5F1548A1
1C21562D863C371D8202AE3123CDD1766F92298023B5A14A5EE325D1C4CA5023
439EC953018CEC212A30D4391FF1229E4F84AB4DF31358F02770C02FDF69EA76
92DA01A508C2FF7096E17D78E2F616CC4249B6401B0A31F3DBDA75E9AC62446C
06129640297B5CF32A144AFFD8EF0F4FEE2DF1F839B2A5D900EC8BED1C1750C8
C86BC7604D84382347522297D1EF900E8C541DE293B4D500F009C2ED820B75D4
FACAEFA4489F21CE7C20EF5F67871FAD992447F76CF16F85D0A04140B7B6F587
EA3E36D8081D645083CB8C992985DB99D9BD2C6D3457F84723738E1B94C30295
20C1F8D787F99305E2001BE4E8BF0C3E801B7169500510B895BC38114416C15D
1C1B2BA61BF7FF7AA0BBC9A98DE40C3424FF349C148F3B9C568D564C1EADCB68
0887270B731AC3D9191E1ABCD7B64F35E0B30FCDE41CE1882A74B0D383A20886
345894A1A2A5F44B948ACF6C46F5357CFE54802EBC92CC90A98EEB200BBBC5CA
508A4D744580C7795F7B3D063ABE52DD26F745E1D1897D334FD59840C5A257D0
8497074A8C7CDDFBEF79999598E57464E82D184CF76BE6CC528C81804DAA2B51
B443839D49DE5CE537DF8352F46116FDE2FE8684D472BD8D065D836983265DE8
EC9081A485FE1C3118ACB750D98062B2D28844E50E7E44723EB4268F6EF4EEC9
B0E81E871C39B9606FABFBFEA20AEFCF51AA3D9E7C89DC19215FA388179DE4D2
24F19182BA7A390768D509FB645CCFCEE8A7AE31D22483C53080C6ECEDE566B5
1E71CE4F9FA406446C3F30BDB2FCE712EB0B9A38408728BB0FDE9646FB43EC0B
B1B1B13D8AD0FB57C1E2BE5131565720F61FF5AC827C2A085375313DCF0515C2
A5BE1EDEEC9794CDC1DA7C9208B2FBF7164DD4B02E053BEBE0F523F174D1B87F
8E5A06CB2F03B396D8F52497F175037804AC7C59F192653317BA26FFB09FD38C
60C2DED55B8CC6FE268840400BDEC78CB30A2F939E9170E7E6D6B47F9998114B
F92E9A4D8796FB9DBBA8CDF19856855D7C1D09FC3085B4B3468B6FCE2EFBA1C6
F5C0ECF501991377B26AC761B1A938DB70C841821BEFA38DFB4D02D087A0DA04
F434ADF86222060AEFFF5EBFBDB92406BEEC4DBE7679F7D60AB6DDC04938A42C
948093629A530421D8101ED47F36A3678F407275464DFBE5AA7D8F2567CA4C02
34D36FF51BACC428CC989ADD61913D31D7E78C99CB81ACDD096869581E002A8C
C83AD69B466009BA1D4BC5C1902A3A3C1935CE66C4007EDE6965BA42DDEFBD50
A258E9EFC4E9DA426F9E7F8D2811727965C75DE868BD64BDF181EFC6631175E7
7D6B6FA4121E1ED7F936EF30C9C000F6505A7C5AE95D9E3450E72C99406ECD98
0C24DFBEF21AE3C1183FCABB2F4E65F5271B585DF3C9EF5050124D8D0972A9E2
2915D6C5D7615D0ADA8D3B230372D7E528AC65EA92EB92A173438F773F7F1F16
DCA14E777631AE243B0D8C87510E6309FC6F517F19E4E2847DF0A4698828EEE8
71E308A5BCDF98B4A5A05AED656D6C65AADB9422FECA6DB0848492BC38CEA309
94FD5C2F9EA9AC45A4F0C3A6A6AF211A1AE17358921035F14FF976C8A1278D63
3CC373DF557FB496323671E546008AEE8518BE12FEFB1074254FE41FE91903C3
5DA815E7DD0B67510AFC5382818924EA89BA1CCA966E3FDE3A654B68AB7E1F3B
2B1417459D8A69F0A86BC1847B36788A4B1EA0C0579E25ECBDE2555EC6F7E7B0
7B4BBBFC182CD45A66A880EA99BFE6359BC60FC04E41B5DB0AEEF18540A689B3
9922628DB5E1A18D6F1EC4B3902771F339D7DBF409DDAFAFFC32BF0D9C191A23
09B190B6B134274828DDB6FD338E3502EE08A87A5F8E0B14B6B38C3940416072
D0AE2474661760A68BA526C920A73A9294E82429E06C96BA8FBF13A50B061F45
ECDE75B5287469861E3CB0B71E60CCC50CDD5D1FBC156521A0939E9A444E468D
F4A833DD510EA6B70D83C8A2E355DAA659FF0ADB3E256D563F1029C4A51B6FC1
A682982CDA197FBA488EAB0EBF252D7E5E233BA4EA738129D9BB17F74B89B880
D69375129ACBA437C0BCF5D3E735575CB0D42E74B3C9FDF7650CD685D08FFA19
CD097C0A162CC8FF01FE8C310FF529F22B454BAE8BD8454A3003A818296E0DE1
A5C554C655D601D144CE7F59FAA158EE13F1D761A96ACDC7C8BA49856815FFDC
E4BF88AFBC9F958066B4481C7FD3D39AE2C5BF24BCAD6CF806CA95B51CC7B5EC
2A2EB383FF1AE06CEB9EB4C95496B9B7D2BC0320441570000FE9AF8A5CD10A34
7EC73076287E4B6A7DB302E9AC30AE9052DE84F2276115FB7304FAEFCF2CC198
3EDCF2A81DBA500E65BF17B5D6E5982ECE92F18FB4EBD5ADD980609FB968D563
92BD703FC9A95A54AAF4461AE3358399EDC72B4CA3847A2890C58E5FA221A375
9F21A1785503A7B775E6D03C99548B3DDEBD8CEC90F01D70B11DF2EEEA3BAF40
62164FE4F6F996976940355CF5AF99B1F0369FE9222A77DC15E5456657079B0D
E215342CE322E4119A1FA915C43C6679820CBC68A1E7F6E763CF518CF9E2DD47
3046EE97EE3FB1552C248BEC00A12A75972851E489003810C42456A9FE6A7B18
0AD208DCDD8EFCE06AC9FF2BC0C1ED6B4C036EEAA416A7DC7434A2F59C1D1784
B8A2BFA21C3DDC68A7782C4620A9BC2FE8E6913C845C771FD3B5AE638D2046FA
735C265EE578D8C4B67E876F0A2BCE933FD75945F56103730137BFA098265F46
69776989352E2199383FB6E268DBF5C8514D6D97CC28FD26A0BE5472DA1E2F11
C7AC68B19F23A679D30019F32B408DEE8E586FB93E358F1C8F1CE20E6B33C6DB
B0DE7B20F88814A39186DC61697CD2796D26045AAEA7E60ECE54CB38A7201909
9B6FA5B8477E9788C5245492BAF032951F69E71058B3407E9C9CAA758C3C211F
663C3DAD02F2E55D2981DEB78413DF7821859BB191D53398A26D610D53AE6A1D
E8D8A3D7BBC5747F40513D3A73835901F5C61802258ED6A34E9221ED375C0B53
A3C214171211EF8CFA3AB414D739787C25582FB9B8EEFD9939B5E038BBFEA93F
93CAC46D65AD15986C772AE72819123BB89CBD79AD094C7C41F33F39BC37B9B7
7A4CAD201B427C3644AA4AE4FDEC754AC2F575ADA431C71B05EB3F13E520C07E
8B145E584619E2A8D399ACFFE96DA30B5E427B512B3FAD4E1D72B9FBB5D8E0F2
F8D858B311FDE82D2B06EEF43EB9BDD3F558C38A40624232E29C223826DA97EF
DEDBFC23AA9668A4AC7A4C82181C70A2A97C941E4E35845B44538A8917FFC77B
69D538E9731D8ACFEE6C79AA5251094F5810B772FE3752C0BB2E6459B42B0B5B
2095484D3CA2C3B80678594C6EAB7134CE8BEE4954CAFB92E22169F3F5C259A1
895C42DB077FBCA00265290DF292201932650E747A199CCA32C46951ABDFC109
EA644971C7F5D144073C6F9D3963EF7FA7F2A896E1D50F03CBF03F305CE888C5
6159195C7E4F32EEC41AE17217EEE857E0F969D18FB500D860BEFB092F47CEEE
4A559EBA9599BC1C52B00932FAA9B83972E788BEFEE22EDC9E4072E390030868
D011A99536592777A2A04896353A1A9FB9E44EBCB494F3E72114818DE64A0D08
9EC05951E5AE95CF24908BC2EE192769417DF2D8C2051DFA554B8A7D65B62F9E
86038C9B9C8F985C4F0EC42805C320686A9B00F837537371F5F34476716EF8C0
3CB2A4D377E837D2200A86B7303D3F76E2E8A4C235EDB1DCC2D866C26188B5EB
E3EBA0C7901A362981D05A5AA406400381D7AFA1DFE6FA7EA168F4DDC5FA86CA
DAD2636F675A2F9A4E00193CAA4E377B44F94D1004F87FCA06FB32150365E17B
E6FD376851D7C637B282BB05CF9CB1D93F717609285B285EA0719B560CE56237
6F1E4510AAF36623F082189ACC6516D425F84709538B9D42214F42B1FA752851
6265329FD65EC04C173477D9FFEEE7C98824E98EE581850EBC204FCA2C94D753
BF7645FEF027432C816A11869D63FBFEB333D212E8F3F13BEED769FBBA9653A3
ED671B4E52B57ECA371C33E7388AF455961D1ABCEB4F8C59B81A5F11ABA3DC29
32E9D0E7C90FDCA6942344B4EC4FDE36ED952B6A49F239036A6EB7344D5A8449
DAB2B2402C3AC9CB6505023D8B93CFE545C732BFB654B8EC5201F17A7C3397C6
BF0D4B077C4A2E6E523D1582AAB6BE26151101B7F40270B16ABFBC5689124F8B
53250D92E719C3F1298202541ED72D534A1FDD67AFCDAB4ABDBF021320E2DEF9
ED2DBD2B2135FF39E29AB08E92B2F39104DC69A57BE5A82CD02A6F6880131D21
7DDE4D2BCAC50AEE2C1702E853CF4B2A26634E6D083BB7A54B9C91919A9233EB
EB6053FBEFC01BBC6771863A39BC7EA1425AC5B279910BF3D49D54D0A7238555
FAA622959F50AF6BFE46F41CD2FB9B1BBEAB10C3A8588513BD5FFD3CB8EA3605
7EF0673A2BA02F3B33C85FE269F266F532276D140BAB6F04FF612A041E7568C2
9D7AF825DBC0AFD1897503506224C8E8A534B14E0AE19BD446BDBA34F56634DF
DFBE5923C41453CD81CE62B5E1F74FC9EDB050C6ADF63DDCC22E5E00B9A7438A
1766F07DFB0145AC7E60B976F6E28E468ABD4D925F2A13C58C5313325EA21478
8FD70AA4D1C570C0B61632B75AC232BE12BE09B3CA6110F6D46D62588EE3699B
C069A8BE8F827227EFB37969C2356F938866B073B4216C3C354877EC108D8DE8
FDDF058F61DA3D0ECA4E12626F2BE1339F28FEABCA020520722A4B1FDF76136B
97677D66B683C75C0023B71D456F5039788CDFF2CBF89C98E51D750B87D2A920
F3A7B4332BD42E8681591C8571D09698D7514D40D901651B4514504C297D2CDE
1DB04CC9F02A8AB2E682D4C08222B2CCA222A527A220630A3B7DA3E202679D72
D7E9E54645258BCCB6A60E9CD5841A2F9567F6D9B613BCF50645B82AF0315BF9
A797A8846174687A58F61800FB46DF8E7BFAF5FF0CB66C62B4BE8E235D6C1720
213A5C3275971B989F8BB0BAAD57A0749DE061A2D0EBA148355856AC5AB6CAB6
328A383566DDC76A000B14505C51D140D8C330288926CB4A851513528E2ECA23
2B1EE2290518FEF5CB4C16BC54784A4A3B52CCB0FE5DD81515AEE95E42970BDA
7142CE8D225E9CB079D7BF42CC27FE295FB95E2BDCCD22BAECDEF0823D3AB537
19BCC1A9DBCD3AC72B8B0745855BE88DFF74875D837DCC1DC4B26952EF296F93
9F20BDCC225F7F4406263DDAAEF6302E8FBA48D5725CC8E0EBFE048EED7C3E5F
FA28AEA587CEEB2C2F76067D71758EE7C4E87A7B4E78A0FD33AD32208433C055
A6974AF52E1B11769105E9EC2A51926AC2B1D75BCDAC31207E4943B479C5149E
1A8EA633400974F01E41B18BD682234879B244052792269E14A11BA6A5BC7DEC
E20029034C8869677336644DBDF2EB65869969F265341938B2C7D6B979342D90
2B77066012F35BD4B32289F7FE8C66A6A82D7D75668A69110297FA115235BB33
54BCDE89C08AEC9F1CA13C75A6E1B9F66D93F040A4800717DB923DD53401679A
794F6C32CA26539796881B898710AA2B80CAC39154CEAAC09C5AB716BF2BAC31
028AAEBB09365AE0D60ACFFEE7B8DD04A9274579D3616C4CE0F7B7965E13BFE0
B659867E0669631A55CE33E28A2CD9D94C85A1FE3D9B3873B31DA31E599DCEE7
E1456444873131B515A954666272A03E89304D20390ED1FA7A4A3BAB2D9FED3D
ACB065B36EED40845D9AFB544A94CE1F262DF8745E4948206E9B35997CCF5D7D
493E9954E9B30A76125B011A7693A7B194223FEE3662BDE89331EEFB13CEDE4C
9CC5AB42E538246CF8652F61753D16998BEC8923499901410537280F9AEB8C46
11D667F4309FE9B26E338E3342B10157B25098F15B464BA9B34719DF4BBD5C48
3B0680CDDD63A582CB38E406ECA7D35A79B6D613F722B4329FFC5A50CCEF0A26
AEFD72F489FACDE4C71C6F6BACBFAD58AC372878A25392D002FF59CC452C688C
7207B85BFC08F389467F44B8F14175C5053D7CC9D2AF720B7A086ACC34A098AB
791105FB766A0A2B857A96FE707611A4EBA801DD833EC3E79FD7E98F64C0F8AB
D6507391BAE0E85E664CF275408A278197A04AD9B9C3BBBB6DA766FFC52E49AE
A9667766D72655C78D8B2C6BBB0764118508206A64A0577ABD20656EE99E9FF5
470C355EDDA3394F93EE512C27FE6F61D8ACFA6F3D493DCE5F821E9DF4A30682
892C8314CEC9BD005A5B0610214F0A6CB8D143B2A5C1CDE2B37C804F50577B6D
1308DD9C414C5C142496E416D4F3B55BFBF76FD52217FB7A494737C74C112C5C
7A2BF30C27280DB9C56C4F649456956B7852735ABF9FED6F57FEB79E547AEEE4
E800CCFB249C4061874741B372461A055A6D3C1D663D594585DD550A792E6DA8
F68C31C6D091B03BCED1486955BD44242DE0BE982B0FEC23E98896739DCA8E03
521AD6405DF647E69386C01F29D09FBE775C999019518E6E6F75C0BC4635EA75
9B3CDFD56C466E34B5E40616F45BF033DE16C1DAC697CBDCCB805707E1F61023
7BB3C6E242E802C329C31F9E8C66735C59EA38E3BCACCC6F85A6E453162DE8BA
630090AFD344BB225F08F47868D6C4D857CF0904A9D651CA82B54735DEBC584D
3A1C54813C965462D0ECD576A2FCDF934AEE5C55A4A50997C80F5AE01EF93455
5FAD0257FF82103C427EC98A405DA203785C7268E0DD2F3CAC4771EF3E274EC1
B4AA9B813A605FDB3C6E62735F0AF9F625ADAD4F28DD5B022349F90DA988D84D
3A6457369A57F0B9ECE37C79DEF7342F8704D797E3A3DCBC2A1FE5409E7AF513
C214141E02C64781FDE6DA899EDC907556CB0EB4C766A2D241AD2F9E6BF8F72C
0016EE7F6ADE7E2D63CE115EA7FA4D5C4C51BD2EB704BBBCB7FF760E4AE71296
24261A9250A0C557E46661FC61DD9CDCBF2CECCC3605CDA1635AFF9AC6418E9F
0EB0B802E4A5ADFF58B16829B0B92EFEC6C7BFFBB9392E0A1BFABCCD590A2C81
F9126AC063E2B8EEA19E4D5BD1A1E107552DE368EBB0F15B43D01DE2AD440918
4EF7138004604F4D7C2CE5713E82C356B964C7A124A9D80CF41F510A9A1AB84E
902A32ABC277F620648056F2C90C2FBE2413433DAF9861D7C7A3665A33C8EED3
7CFE48A1DEAA09E0D8145359CC5EEBBC424AC4AB915E0AF04759AABD6DFF1411
692A72FF4263AA24F57CFA5CCB8485932F527838C9E2F1889D16B8AE59E73197
1FE01EA77F8B138F275B3FD0395FA349DC92C3746A37178B3BC85879003A01DA
AEC02D6FC4E5C7D152750413D03316AFC6920F7CFDA2038781C29FCE412382C3
20EC6DEAC4B661A9CCE1133989C573C95D6BBCA12DBFBF3198B5275B0BF982F3
6C5DE3BB1588249D5767560D0CD605A8C4A16A8764526105E28A988D1EC53134
C050E3F02A9636E8EAFF36DF884B2435B23B02191E856C7AF33C8147866EA804
DC45D883CA4A13224800BE5709CA83A70C24011E634EAE7DBD85DF879EFE9626
0242CFA806CE34CC339B8B45A58EBEFE6F0DBBFA9C43213FE379F00C5E90D1C5
888A28EE2C3D99D3EA7EB0966448BEE6E327FED81EA6C7DC083B87BD7D262662
A1542B74D7A7D21A05B60550E5BB14A0F359C4C172951461E884747D6E5D2E1B
BECABCC7CF893B0D3DA4B73DE6023B85F93CD29F961FCD7F3563DE18F369F256
DCFC55B9FC5270A524497E94542F5B2E667D3CF7DE5CBFF14FA1F856C1BEAAB7
CA817C94CD2208BC9ED1F2BD44665D89BB0069E77E0DE30C228FCB62821B1C04
1E90C9A453019DF489FBFE42151CBDC768DF6D1B4F7AEBAFD422F27F689FE34F
3AB0D7355BBDA67B24F0314BC2BD87C05DCB3EC25CEB4073D0507B34875EE7D2
E52433D6B5500C80116EC153796F73E1397040A94DAFA11E3B52F23E135184AB
7F27B1508F371F56A9507181F381C40548646A3F5598E26FB011FD512899653F
165A7414D4DCC5FDA5AF3252F50C93C6BA151717DEB69B17E090FCC1137C613A
C61B6452571F9A33E04DC6C7F4392E853E397DC111E36130DCAED0AA9A795BEC
C4A19448121A5B20A7DEA7A9852144B6E8F6F47E49381B37B3DACFE9C6F1CF5D
814D22F629F1FA9426AEA8615BBB8D38796689A725954FC152F1CA81C6EE926A
066CFC033873CADB2256ADDEF3FD72854BE3EEAD2658E7E81BB90887F6D54703
A106C60944970D66A6C473EE1D6EB05B3315479B9B156B1E15A51D865EBCAF74
A165D19954B15B0C6FC43F2195DD70C6B9CD8FF57D7818EFCD2D38A570E293B4
6D3639875A0394FE7CD5BC98DCAA97E2373EA9351856B8EE4DB455EC261AA792
23D996C5460AB123151C5096DA27CB83D66FDB2C3807FFC48C0B443D230C9D4A
C00C32E36E1E0F632BECEA63DE4D8AAC6484D208FA185432C09B97FD98059997
D40B4F271BC85F7BA746B32C33E6EDA70F87105F88ACF7D2CA81297FE38521E8
E28D011EFFCC00B9C27273E6A6F7C23C168AFA27A4CC00B1E9159A1EB6DABDF6
A99D20502525E4984162A7A63B8D352A6DEA9CB2E9C907B8468C530A52F6B418
C3826480273F47C2A67F809A6F38CBA886E006B897B80E68D28C3F48F53DE7FA
E6AA711CB3057E20E8B0C06E9F3CC2003815EFC61C3BAB00EABCB89FD5DCE9BB
DCDC08CB2EC2765CD76F76A252A0D4A31D0231D55B37A237066A5C16922F97CB
79720246673BF3BC51B6185221DE66692FB4B96FA9B8C5516B4205E2411BCE66
6FB1457162BC5CB0BEA1447D38C9B38FEF869E4BB1665F402576D59CDB3B12B1
FE7364D0E20F26C427EA33C1B0663E1B88EC026AE67FB37B309ABC653BB69957
00250595D0CC1D1878A1129841C0C36808BDB07E9167AD50B7ACCDDA8AFE8729
B3DE532DB252A1D404FFB4CF7BBA5875B35594813C19968D1B2276A8499EE0AF
3CCA74FCF39B018ACDABAC3D75A4B95529A4EB4D87F219808DAAF32D03E0FCE1
364243F9CD6784459F8A03F4A4A3193EC28271DF43379E11CD062370A8C3599C
2D0F69D225520F54A7C9AC8B7C0B2122A1CD492158A05F6656D146F8BC7C1CE4
061FF812B7B2B4603E15B1BA8BC4A67AB22CADF3F80B40EF50B39CA5BED1F6D6
A7A70024547B68A41FC346A14F3FE4379CA20D99EC2E8AA14636074CD8C3E69F
5AFD5598D76A10F3E75C36E9CAA4AD5418193E66786659050AC5B443DCC1A011
CE9FCB1A8CD9472F3EFBD0D1DAFCF1760C90422F4EDBFC6B15B03F93D1F3A45B
7A8FF6DC0B9313B3EB8464E95C686F94E76930ACF58E0302B2B5291F09BED179
9873214149E6A610A312A9A03F9BC4CEF9E3DE892CBB9DA501AD98606C248E44
279F8B946384E678E23381442080FB029A4DD1844C4DE44011AF1E75C53F6D29
11CD19904A25406E5387497E87B83F7F0204D04D2E7F7AD9D5E35158BE59BE22
926E9F076E34709802251379DFA6676AA6C6AB3873259B9C1FBA8472F5CC1A63
E114E3E0D1901627E5620BB08F65A08BF76E3FE4B615F6F492F8D3AA12B7E292
8E87443D6FE06971B5C0BABAC4A17EB9CE2C7E3E02F715161E7C7DBCCC1352FD
30C60447FBB0C3A3A15EDC6C87355C5F7C8F822C63F11D006ABF646D25C4A9B9
37FAD5CC305A0836C5C0E5694AA3DD235D36BBD540E737EAE242036E4AA12206
FF118C4F90C3256F54531F9515FA02D72F03B572D298202B3C0717314AC0EFE9
E7B0358E6D76DACDE62F44271CD217A4D3B6262A78DCB33B43D50CB1429C7058
08E252AAC1C582759AA11411727ACEC2DA8A990B716821260782171BB35115C8
9103E8E59847F27831A52C9011C7048E907718E2670CB25FFD77631626107492
42714C6D0EE20456D3D92C3B9B65D6D70A8376BDB2B3D0E4A344665BFBFE7A18
62DA1EB1E2251EDA30DED54D19B5B876ECBC34D8D6386DE487FD64D8A76901B8
3BE516763718DC51DE2FFBF2879769C24561E335FB4427A813383DFB02E49524
B86A2A9B02C2A9D715746D6794B5EAEB79065F59878A531110EA588B0B756D4E
3C08DB33CC54B48E006D6863C328E4C194F846E079CF10B1F560B400F8B9712E
F776960A28EED33CACB49C387F39C017F9C76F08F337A8E71860677A51E10CC3
BBF81CD3E059BD79AA8593CC557F3E1262799ECF5C3A9E3FCCD9AE705FEB116D
E8A806A98D112379C8DE23C75AF530BBACF60059C23264C8E7977C4C06D2A398
200DE19882B5A301D107890DE811B5C40572093246905931BBFB2A882A3A2915
64944B4BD1211EFAB8C3A4E98B15C2992A6DF7255B5EAD8ABE6C65104B2BC60D
CD97EE7D38869D666EC725647198A802B68AF5A81208471F43D82DEEA1724651
4C04846A63A6F73A85D559518B65CA4B327F296E6259088A720CF1DB67EDD3D6
CDFE2221396F2D15F5D60F20CF033634A6C3F19DA92D2CBB229D225F1D15AD5A
F118E5F86014FE4EF56765855524D5E38F1D85396E7C5D3BE7FD8F6C4F3FB28A
F32DFCD79B8B834EF8E02A818F8BE37C201D3D31032AC8A1BB77DD481E807EF8
25F48413C8A81A4A96CFBDEFF4DE11AB022E33B2765DF15FC2ACA88144FD672D
F548C439A883086F14F419820F312F356EEB708B430846E137E6CA0B5436653A
968FE24DF8D7F3E5B9592241DD136479A65905FD0062C91DFF73498379BC0476
F65EA74CB0A90A62A05E0E6853A89537F382B653C26E96BB76E360801E608E05
496BE7619B8C69F0E5D4AB54453E6A4C7B7F667C14A284047744C14EDA3BC058
2AB98C19276A104C8770D3E62C7EEA9759D337AC9694CD1BB0F246FCF1A109CC
D37C2993F63B6A23D413FF1CFD540B6C1366F6AD6AFD1AB243502A86FB184B38
339FB0FFFF2646E94179D30EBDF73A25B991A8B720370D3FF3C9512D50FAA648
A9822FEE5B4BB37010E988D855E319E49CEB3053E25D96514DAD4D0F036AB9EB
66ED092EBC615FA07816BFA6E2E41421BA817E22EE3DEC09F430456518C17DBB
A0A12D499F546ACD3AEFE3F24D40FAC75B6BAAAB6FE809E3CA5CF0DF52B16BEC
2A6E3A800AC4C443525D0FA14085EA1A862537B6A3B7E2FE9BD9207EBAD74476
060B5253C4FC094C977BC5534185E66A3A161EED1F99B8496A9FCFAC13492DFA
F6156B9BCD5790DBCCD67F29252DC3357D40B663481B8EF0371702B728AB0F74
D7C15B264A73D606FA8A214291B5C2A4CF887AA3316DAA524C7861AF87EF02F0
75CAD97131E0034B6FE73BA753A87F0EC6A4E852DE750086910D16FD2862F5AC
F33375A4130B81E97C2A1B2D6FB58233B3412E0FDBA374360268110CA65C7B51
6AA0946E94E2ED41FCEF4B9B856AB80EC439734736FD9CEFBEB51F027D242163
94F39CB858A9FECDA71F649EB3C250BFF809D81E427E3BF24E8180E05CD0C136
9B201B4DA7CE2B7194624D33B42527A19FD747FF5C6B8AB3C0920302DECDF872
78C13FCFF6B6D935C129FA319840AEFB73F686C22F55B71CCA5EA4581031580D
97CC9E7A0AD30AA62480636B595CCD064AA9C915F0259FE315D58092F7B8EB74
7A364AF6733B6249A643DEED68118F3352659297CEA9BF5FE7C0220D844E38A8
EB334EDEE61F171B62E7EF2085C8D7EC43C53CFC751FD2BC07CAA9595DAF1E8D
29A7D573D96880ECE9492C17EA45078C9A2ED39DF9D18B3ED95BB7437C84AAD9
5BFC53C29CB90DA35A18C332D337829BEC4022B3DD0E3089003CA65C9E6603E9
7B94BF4B159156D96E2316B6633BF7DDE201DFA1B9DF556DC9B5CE9B2653437E
788B9CD9A6291B51426B140E70FC894D2C4E3C2722BB28BA0D31BE367A364877
B96A40346172CE44FF83A7FC486A38DDA950A1FA9F8DD16F806D40EAAF454254
02EC8B0E3B5BBF46B92CDE3C52068336290D74705098D4582F6FFEEB2C994C0D
B80E2A3617825070AAADF3FC71121F544100055D90094EB79BF159A65B012A2E
ACFC2FD63E7B7247D8218353614511C94D025DFD9425EEF795DD0F46484CB67F
2E1799CC7AD881CD1277452731409EE7F7168FCCFEE85AE3ACF0B696E444CD7E
FF3C116CAF3E98FC103A7288A5438537840899BA505010136976FA6BE1039E64
643AAF20612F3B1D6023CE5413C0D05D17491995C53199F23717B33AC6AA74C7
4C039D6C2D64ABED52F0A005B15A39141AAF77BAD9A3D0AF39AA1445BCB4FC25
289CD86001319CBEA90513A1581F9C4A05055899D6AB3593A628F95F5C7BB2F9
073CF062601B2D326DF2DAB79B0538879262DB88D51450D94EFDF3E0554F7348
62517F6503AD5F77C340F23D12147C0AA2495B30F58881001BCAACD3EB2D219A
BC3A605343DF722DCBF1C27AB8A8026A725FAFDBADB967780F749B4F38ACDF82
AA399585EDFCD485CEA9C8DA715A523A8B2E7812E32551FD66D790E931639EFF
3F04D056EBDB9501136586FBBCDF35CC9D706E42574AF4A513FDF3E67EEF4A9E
7E0DEC9AF7607A1F49CA66CB12833877EEE12722F9712F9A88DBA8330981646E
985FA7F2F5E3C576E45B9145C6614172A38A90C448FDC45A9D68B74E52A7254B
32756000AF0369A53D6A9DC39973D341383F86603D614DFB0A873F8C8936A70B
484FB750DCC01A3A74A1E7C8236BD6A5F6CC3571D1011B0D030764CE6970C3B0
F9F47FFE4E0928F9465F3084799187F1197CE916E4FD5C5F5C98D7B3FCE5E500
5084E62AF51CFA90B054068A811315E9068C032EA11D457AE1C6F0B77C153EF2
4C817D651A62C62F42A557867514A401C1BC72D4A680FC3B9E97A326AE818954
28DF75A0BE9474AEE766DD45C04B7EC0D0A7A3EA80C8083AE69FD354C2AAAB23
BF5F6A8875C71ADF2E41205A1E1B0B1C41FEA162CAB0A75F1B5C1763C66D4528
536DD4FA01EC94C6E4677E7B9C335167EF7528F38861F2C51F5CF00B496EF769
0605C2B63BDF895123A258E8EFF35D7DB7D8EBF18326F497D993A4B132A659A4
00154DFAABDD1406F520E03D351890A5738C6B05F399188AA6C58AC95CF601B3
8B08FE05AA51F448F7985E6D9DCECA09F0310F9CAE44964C974F08DF853DACB7
7D9BE6B7C56C9816AD97029D7B90BC52A839086E6BD3E18316419580A3068BC0
0CA963C4DF6A457AC61E1D52F3DA4D5DB6BBF4FF6ECEDEAEB8C98E20862F2CA6
E02585061155C620B1E6D5B8288CA707E7FA2C69204A4608398A09B369AED696
735480B8BA5F68FED42DD602A9644C876FF223C12C1BCD7239AD483C23383B1B
F965219C662159703BD09F1D6E4B8F925E543869180F1374F8B233A3DE0C3683
26056475519E205047DDE425A3C59942BAE71A3025D7E21F8E4847A8304AC8B3
0FF0278AA61E4FEE05A3DC11A417D465D56802CB9AB8C5D400FAC3275DE7A1CB
64B5D1B5FA98029D79689B80FA8359DDF19EC5D9BD28932279F4BAF1340419D3
C948C0CAB97311E93A0FA654B00D155ECABC8968814715DD6723F17311431C34
EBD62683C5C6FB8B9C8FA8DD10AECE1F7B9FD3B35074D85BDA9A615D5C324306
37D87A23326CD8E2332276F32283CF0F7169EE52BD722763BA85A4C0A125CFC2
2F5BF18F89D806B3E19297ECCE70483CE4272074EBD88C9DCBDD1E51AC1353F7
C1C4135262E39BB855E9BD68C4C0728A5B37F88F7B480E18A6196B9F691ED368
9A3E5A0B81E55E5AC7723762274155E8B7DDB9983A97A95C1D97479ECC18F736
83CED56B0A5618B92C2A5B63978E50C74C43E30C3627ABE7BBB1DE93D89200DD
B63772D73C36E0280F8ACDDBDE5CD4F70F63105F0258CE2084F898D7571091B1
8B212D48B43E1CCBF459E0DF961A5281ACE5534744D5DCA956F1D0FF36601B01
01A5D43B48D40D3DE3D2103F811E623E41637DDCC884842DDEB93C11D18F7F82
76C1BA978D7CD5AD69086905342286106151C0572F41B2162992616904D664C9
1F1C4CEA57F0CD45821CEAC1F3A953358994C548CF5ACD0402D0F9FE56D6EE60
2DCBF09A3BCBD32CF0DC5E7C35A0A6691BB4CC99E63AABCF092CB18B54178317
AB1DA5B8E470965CBF311A14435A689F28EF0212A215DFE3E63D6AEE0AA21F77
E53A4B20129777C73A03C04689162EB4A741E46AD71C3E2F92EF983C0CFF9D4C
55D636279C43814EDB24820781B0830A94E5D19387F11DEAFA448258460E3954
9BC1781B89BDB53A9752A6CFC1D9EDB93D121B912F50AB9ED5D4D7857FA703F2
862774D8B20BF06930D39D4AAEF7F72881909BF65CB097DBF298098BA8FFE730
2D3B2FA951A59466425D12B9FA5C953A1E03C37A7073AF9D2A223CCE2CF16B2A
971D5D771CCF54DDEF000BA5DAFD4DCA68502BCF4DB81AB7A9DE66411EC11874
E8F570E04190A05363DA142292EDCBD09E0FA9529732824413A72119D2484E79
33375F5EFCE11000D9D00C7BC309B1A4528BAA1544220E2B0D0B622376124C6C
95E598E618847B2648C238D676C7F2678F0D001888EE7E937E8C051241E301C7
E139DCA14B42DE3B200AE21D0404DC03243989AE1D6DC91B159381B85683C845
0A053BC3C3AA57C4835682D700B2F45AC2352A120FF02FF54C187BEA08FDAADC
E219D41E2FAF4E6B6393343A1ADD11CDB5F71F8EAC3A9319C5612F3D365D1C76
077A53626EC2C4B3B3338F446210484C1AF9ECCA460F09EA1C8257F0BC262D5F
4DC3E857BACF340C8C4E164007A384477ABB9D8743C98684CA1AC7ABCCE6CF63
DE924E16D4177B3E5F47CF66C86D11E1B064A2B59B90EA972CB8CA3E59886D03
00F3123E5BB8ACC107D8B722419A9C1F8EBE330923493530EFC2F6FE5FD80496
B61CEF4FF35625C5F6E0F81DF78B17C4CEA5EBC76C94D6DB8098AFEEDB9891A0
9ABF65BCCD8580E3B39391DA58096830FB6A44FBDC6AE66F7EC964DB7C35DB96
45617A02541F40EED61486204B5FBCD12E5952C2C1362A636F1B8307146F3B1F
123E9B5CDF19270A4455D81D673A6E4C9D99F833D72AE088F54DC0BDD441EA5E
B5A1FB82307495F73AA2A50EA7671125D3AB854DDD7DC1FFFC204852CC608E91
3EE027C4A7E177C396385BFF862ACED7B6C702ECAD03D419801615D6C38B95DD
4016E8E1011243CBC5D5CBC3B1138B0F89E3C81299E7CEB7D7F8CBAE570CD83C
74E62BB9A291D2B312035B1E6BACD7B080BE77DB2F1D8B7F9C0DCC5D40945E57
6DCE2F0AB9A32B63A95CC91EF41B8178DB26ACC3E17FC27032E69A65588CD611
15FC966FCFE51DA21181544F49D54A45AE6D370441DE9711BA3E39071ADE8190
58AB6414905BF4E95500D0B80890B00376917B380332CDB7BC5DD0E9B0DA3088
D62C10DA3AD6350EBC0912B88E20F71C865A3C7B1B589C0B5BA0C811390F9294
FBE48987D716DCFB6FAFBEAA28B0A27F096F99C846C3D40675F1D60FCFB1B6D2
6AA24377760FEA6FEE94F9B4D254FD825E9053438601E832AC8A3D146E3FAEDD
BDD6531A411C06A05C51319B0B1F5603D01750BC683CDA008032F8B46BCDD7C3
52F3D0516198DF7C495B95A558FBBE5C299A658F47D0487584B1F9E7DEF39AAD
DD212139B76A54D9F5E37DBB6D1EFFFF10EF913F89FE8C0754AB71924602E53D
D9BFD2DAC29A0339A42F6A342FAFA0C1F134CB42F82042DA49406B00B1E3EC7B
94785F492EDEC19865F8697ADC8391728B5D0DAEC2FFBDF432F8A70D0ECBBC0B
F0A4DD2CB038B8843685BFEAE15514C340A8D59F63B1BD379B921472ECF627B1
CE7489525FE8AA98D046EB4B7AA24F80243319FF3FA6A71FC346A14CA620566A
104408EAC417BDB461014FA86C383A1C9AC9A75AA059DA3C196B7DFE837D30F0
A10FF0AA866D296C09F588655D2AD8A06DCF95A040605BC8FCD3E696539B903E
B881EE328FEB0692AA733A3822D3CB26ED9010D9C10CADC928DA5182335875E9
0BB3CA6110F6D46D625A6BE01B9E9AE8E9D60E06A3E169A1A02B17E1E5A321FE
BE1E05DE8AD1F6A4DB15BDC0264AE518D94A4B4A0F79054751C47199C81362CD
3EACC3970F850E40468AB1C1C5BB7A3BB1CDEC74AE271326689E007EF544C232
4DD24A7CC42B1828FA51D772077788797A24886E2B4C9795FF0B0F83AC418BEC
6F031497B782C0B6094FD0AAC0858943DD34280AB37B68ECA8E317C53791E197
D7688AC4FA0BFEA7A6FBF6EB91BB729EEB88138D8A2F5F6F5CEC17F4DE059F69
F346F8F023272CD1DF9F8358F8A4D59C24055ECEFE5AD381C16412F1D6DCE02B
C734E99EEF46E2D5C0FDCC78698D4B915AEA540983115E183E675CCAB1279867
461591F94EF054A7FEFBAC66BB7BB9B715C44B89D322A5AA4BDFCD19886D6B2B
421F7C057DB10F0445DCD2944D9BF6B5FA6D56A8B182BA094D5712E7D033481A
578DF206B9FB648FF1F57DAC9EFB5AD6AB16A1C93713D47010CF71A8F378927F
13C1E3F8370F330F89AE583C5305D7D0184168422812B050DAE9D1E1121A5E88
0CFD73B51A92E059DA18F65193851FAE3061F98204A78FD15712A4278C0144E6
4B4E57F282A1DE2049B163A4288A69ED6EDE2408EB1883C36E7B448B7C4E0655
C8FA2515B0381184459BF5F24D6DF96C7906DC4D3F814370CD3B1ACEE58FAF9F
DBC9A578996AAF957B963C159EDAD2B14BBA98940251D07D51EECA6EA4ACCCEA
FD45E534FECF04734C1CA2FD3E21B2AB6FA1AE122A3004B41BC98501FD21BEA8
32DA9CD2515DE5565495A5978375331897993A2C3638F35794010D115CCD8892
ABC4AD96B4C901A317D3106D66DD92296BABAB0A3073E0D176EC7D6AC772D42A
52909D4EDE35F2D52C57DBF5127F8E945ECACE7C9236ADC003124EEFC91CD02C
97573FEC45B2FC99BDA302A7C5CB636C5860AD2907D82BA5229E9F8D232BA28D
8F7C27EE929235B308FEE00F75614F4E1E7C566992724B1420BBB25F1B1B4978
8D710FA0AD8571707CF62FBEA8E019C64CF746CDF16D41BA5511424603EABE54
2D35B51730CB8CC9D279BCC92ED58214B16128298249B942C3780BD59AF90023
7534E2543ECE021E45E6D60B1DD6F4C4423D10F8A11F813DA257DE7C661ED5D3
477AFF323942DD039C524B7AC10774FEC10F790A3CAC559E9A6F987BC3F6F312
1922B4D1E1B902983454A37FAC420C7F75C947136403B67CB88DD20DD1970CA4
6E058A2DCC6D75CC7981412461A5CB5799C8151E4BA86E75B44ABB21A7E91F20
265E06C2E2E8DF9532840F5737838DE90776AC1F946740BE4BF01A7ACD72330A
BC9E413D1DC2AC8C8AA7454EF08A25B6B242E36DAAF1DE150D2674F352477CC9
C84E874B160F4127D1975F2CCF7F0A72701A3C84F024C14DD642C3C97AC15E48
64F7A7979AA05D3952853BF7B347CCE0D73E5DEF603D68C3984D89641875C81E
4E99252A64F071A7ABB75A726F1EC0AA65DDC25283DE211069122B6CE52DFCF8
2F1ADDA9AB38F68816536777E59FB999038DB847C0A7A69FFD3DE16FEC30880B
8BE28803D48817C5E2C69174395C9FAA22504E4A4F014CE1FAF0100ADC05862F
674A3E6BFEF620A8E3E12ED91A9BD215570E050F7B1F144239A68582F3342D5E
758C290A579C2DF28616FB934023F37DAB1F5EA886D58A31ACE631E93B79BADE
D7098DBC3F9859D49ABABF30149B32052EF3440FB81C68CE8D7F8AEF58EC303E
62B84EA810FCEBB293DC12C8EA1D6D890713607A2C117C07604B899D0465B424
EC9C366993193033D9926EA4B86477CFEFB8533660CD7A6C18DC6ACF5CDC8A22
2C25D7D7F48A0A94D2B6388ED861A143A594F2323043C65EE7E84BE6501F47A6
660511EEEE1ABCE3E5328D3F8111610DB32C86FF6F9DBF02A9DAB47D14324923
42364879CBBD2CE2FE7DD34459E96DA5DD1E06D19E0E44804AB992686370EB8B
D3975B623E1B5D69C1D5C2AADF0E960552D2FE27E75213E3B6D83B5F7D502EEA
7777133601A5FFBAAF6FBF42389215438C5A9A3584ACDCE0FF6F7ECD898E7AA7
D5697B6674711A0118870ED6D18896E0810330E08C90B9A85A8D62FABB241DF4
0F4C0D96B035D28585B6D59163ED5E42303F12484A025558119EF8DF352D6DBF
EDCFA6E4BD0ED071182BD800EF67309B1F747F1354E70EB3C9436B5AD427E7A2
0FCC41DC6312FAB8BC4074CA9E504741F76D511840510271C3A7D4EABA936AB3
6D0478ECBFB339E93F137C19F4A460E581E5DAB525D3222BF113EA0901CFD637
5B2412EAD71325D69BF3460B76A98021D66F223A6ED2EAE1534A139466F7F62E
FEBC5D67EEA931F9FDD3391E0E2353DC2EA171E90DE5650F7320139431FA1691
75574A1DCFC08C659BC8DF77FB438207955D53D70756AFD54C0DF38C3D610718
68A4CE3C02BBE47B86CFDA4AEF92A3CFC7C91EA6FD21F1AADFF3D4337C30CAFC
E21C74ED943A4EED0C1B3BD32479CB4E886FF10B8C676090F93D6A7C13ECA74C
793B3917C4EA93349C5D4F9B7E17AF42BB22A0CBC0D1FBA7D7963CEC82313664
36E58A4DA1ED8D66C2509F2756BEC93C6434B66D0B77250373D8383DF96225FE
FDC9FAD48952E0421BF2B04A0D7F1783EAAB80313773E1AEEA857364EFDBD9B4
17B03410E59E6C7C4ACBD209E5F18DF65430114C1332B3EAE57C27B1DAB7F691
529194054B3709508F2AD26A0C9E3106C682E0D9A3BBAFDA592A6F36610CF1C3
AF2A9F6A6966DE25D75B644AE2C16B463727A8AE10C7F68F5F48BBD28B37BD51
EAC7264D45CD2BB8B613752F6A118DA4007920F8422F3E911F9535885430DDC9
4E2B301380BA6DD5E0C7D30C2768B714FBF9548C48E8086AB77A9B568E4D4348
5B8EC35101546D1C427FC2343D5E9A18991B84015B182F1811D0009D0165B210
CE464F6DCAAC6C2798D13D73237F6CB007FA2245364CCA16643C9C88267D653D
D50F1BBBDA92833A987A95FC1F275B95A31AE7E4B07C12A28AE03BE53CEF9894
EEBBD3459DA46A776E859A3B1664A2B40A16962B16BF6F1B477E9E7DFD67F650
58FE9B3AB95CE02D75BD2FCC775E27EA97885B82AF3851887FDA4D03F83EDC6F
2618FCC7298239D063B54AC341B307C9106E1820F9F1844DD2EC4C5C58A83927
D0C888082F3DDEF6558D68EEE57DD7DE2478A2B4F4093296C0C2490644338916
6F7F9B34EFBCC86A88244DE7A2F6AAC3F6FD242C25F6952AC55C24ED123A69EB
7E206EC733F5EBF4B339B9233DB80680CC93187A2D8B66F2A4AE74220F28E45A
84B0FF5C48A025C80489FBD94C5E9603BBE470612B1C0D84BB6A0F9A472A55C8
F80E95DE291390CAB98FCB242CB738812045613B4D4C76A47A1335CAEA5430F0
161B73DD3F7441DFEDAB5E4218CBD7D71648F4B1118179748A77CF7FCB0669F9
515090CBF63F376DB8D1EB70FB9377780178530583F3B17F1CF74F23EA4F7C06
2CA8910606700D1AB8E3DDB576DA458FC765D3EA63E5EE65B18B54B15C9E6EC4
FCBA451742002275A1F6CF98E535DDA3DB557120ABF60D8629AA8DDFA5EFEB3B
B3017EA0CE531184DB824EF99B489E54142E2270684BA59F008D3EC824C5F88D
C830599502D7744D6B5E6C7FCC1C073E4365B12B4C61A041375A2F3581801ACC
5F2B149703A3F2FC197BC3AE0B6C5302B14BDA30D4013B609FAC8FC19AFBCB84
BB4B86EA56E9D2E130C88FEA95D50F5CE23276076A41C6B14E5EBA5C3565C224
048663A413A854A2518C7397683754B818DD3AA0078BDB85BD78993FA94BB7CA
C4AA651652EC88C44D86077E8C40EB744F732C600C7EE728ECDA6904F34AD511
9848ACD7B5E308DBDA79A19F8E9DDA77A937C9E6393E41A713479A027201B15A
853EFB6DE1539A495AA02BE879DCE693729D362EF1C6102A87D6A24F46072A8E
4EFF3D1DFF91C08051B3C694FAEAEE9495FDFBA62DA3C6A3DB273F98990E0F0E
35024F8FFCB981AAD6751AA3C570FEB4168FD337E2AB3AEFEE82778F9D42EEFD
19E45ED5D2191054B5F113D114415C69F90374CA44D80BD996575C10323D9006
DBDB6F657ACC1DCED0C17DDC1597E0B69BCC3895CB58CE05FBDB873E037B5091
20874B00FBBF355FF87D56977FBEFAAB438307D5F4A77F0ED1B3DF468F526B16
6FB152270A5F80A39279C5FA6C7629C22F9A8EC05AEF4D81E82DBA1E33B279B9
4DABA9BC0A35CC61C16A72FEFDCA7616E3251304BD7D1ED014AABDDE1FB8E29D
7EF2F367AEEB8ADCA26AA845F265AE5142E80C9C69AD5220E2F2A6E76494C2E3
4AF401C497743C20B93881227D835BAE107A840152EAE06B63BEFE3037AB66C0
1296750A3AF6639E9EA370B8590695EBF753873809E39D1CB5659788CF6430CA
9F3FB2BBEA39A2524FC636D1112574E41CE5B56DC6E4F83225B421409B9CEB6C
1871D876035E24D09CB71D74CCA257DE608089990E75407B60BF383E3F1378C7
D7A73FC85ECFA3F89C6E9806911937197C91F8CA60D492B5453F75B2C90C6E40
1A62800559760771873DE9C58E5FC3E282996A68152CE6C66DD2745F98810836
BF68E7F1BFA4502E063F0A757788ED9AEF9331490871D6DA78D82DA207D11912
0854AA5A151E7BE06A82A19466080190AEC22D2152681AE4107B2AEA6BA36A4E
A0B16695D2716DF2FD75869AAEDEBB7B460150E89DFB9D4A95AC2B2A09460EC6
1895ACC7DA75085FE1BEA4450B90A9E94130708A745E4B7240C8E3DCE4279F2E
B8852B1C7286B87BF11CBF8BF417CABAFE34C9159F7C9052074BE0092445DC15
9CB5DD26A79E2F281BFD2328158043BEB6A68205C76EB93864DD734E3EEA0250
77778FE7378595CD5A86495241A73680CB359C81C399A4C75693A19A460AAF4F
A12200F4A76DA1ADF692B8DACB7428E05AB83D5872456933A6B682958F984ED0
CE78B4C77F70A9E4FC916725BFD50CA4F85C2ED6EAF24119901216367C5B9DD2
EF6EBEA69062DD938E237EC06C33A96D22EC2305C26FA471423DDBEA51B25BA4
72019418621D6070C6D02EBA1FD4BF947FBA8977586D6D98CE11225675FDDF48
B624A66575C0E031912478F16B0E344D219808324F2BF69F90258F914BAD2902
006D97DE638DCA75AE5701BB16F608B914474D590E72085D4CBF0CC0DA0BD684
AF63800E4DF1B54D9B25F1235800DC8EC732092ABA65F0544F3B3367738B91B6
39A6A24BD51F3E7F881195FE17DCC3BA1DD448B62C3D889A1DD69D8A9FFEA443
9A7D50D90F9439FC9E23EEC9CB03AB653316994DE49902DC65E04CE9599BC357
EF1DF2F4B1BA5F157F4F618C8D9572760FFA00053C7D6B07C73423058B73D0EC
00B02950B1B09908A1EBDE04E45ADE3E1820E52B80D5E2DE23DE3DB7D9AC1EE2
37B86C8786BC364CF2DFFEBAE53EDA82E8C6877B0787050293B757296C5EC48F
D5DB2CB06725D0575A4EA7ECAF4734F2D9C5F891404AD6765D3CC32A38D61343
3DBD22FDA5AC6402ADD909581FB7229D54013BA36AF602BE444A7FD867AA5466
D55515A5A5339BAC03AC3E847DFF0FCF7583B152F8147A5505F87BDCC0210115
FFEDABE7EC32507CD4F7979685DAD1DE2BF123A8B98F50F885151F0383F5BD8D
C74EC141E781433A79CE7500A9268AE68ADEA428A4A48953209AAEBC6B2C0293
8ED805C2D6CA9A69A5B263C4EE9CFD7828F28F3AC66D60874DB73998588BF863
4BF7D4BCDFE46041412740C423A456A8042E6E10D55055223358D0AB29A5CA2D
08A566A67D6E1E86E60227BCEE50793E6C7644DFE726C80DD436C579733D7270
249920774D2927DB8BF4F5D1F3C0FB97794E67D6076787348AF7432EE0A4EACB
80ECED0BAB636582D1034029F999DE55FF7ED867F1E63BCB05F09FAFE293731E
E7455C764FEF34E75C5F9DF75085A4F0C51000029CDD448B502C966B7D047D2D
FF37B269FAFD5A254710980A5C68E80923D3CC124D23BD3A13FBA755DCA4D16C
84E03F2278C172D9061CCFAD4070CB17778EADE310C04F7558ED949E6D787CDB
ADE10E30233066FCBA83EEAE5644EC93C5792854B5B206557DAD25752577F504
328677667A26772FAEA81C3496488E98458A5123E661A15246F5A418886FA795
369F6F9F3F67C1593EF74D08128B49FF01E6354698AEF721D0B0C29D33A8EB0B
B4F2C8AE029B6E8C51752FD102CAF001612A4E9D35F57C5CF56DECC91B3E2C76
D4ADB2D5A02115C98C3F9A43469B6C1C4A7BE116A6CEF9BC1634FC284BCAE64D
35CFAE5EA6335EA80DA1C53C4BED1F1326DAFBBB4EE5A8098CEB2F4AF152C94C
92B59AFDBA2A04D203300F44ECC4AE3C4B28231A7863E8C28C48A736FA024F8C
4C26AD9621E9E247AAB0FD256D892AFD9D8AB2AB644C8B88EAAED6A17C3EA7BD
997277845D0FAA4DF5C61155948CA76812D1871BA72A097446FE8DEAC4CBD24D
EFB2FF47FFD48656BE6AA03640CA8F92FE9B81145509037A0BFDB9EFDDE1CC02
468CF8463162461F32B8A683D9B08677A02CDAB0DB2B645D9D8F52AF6638AE78
F0C8315515188ACE4CFC939A8B44D7D72A83C7EDEE394EE4807E311F321E066D
9E9FCE5A41816ECDDF97DCEED6284D4AB36B243D94504059E7AB5EF7562CE75F
5D8E8D0ED026D9C6AE5C75AA37A215135C37DED7017B2A7EF58FD45AD73EE9A3
5E243BD18BC400F4CC30DF20F7CC8741ED13E0C3A6D4E9F5DFEDEAB16B4E9D05
F42AAD96247A394D75017CF5DB91D72C4FD3D6EBE839D84A1AF2690B6BA57F2E
DF5B0E0FEC7E32CACCA3EEAA114A07DC96A66E8520A4E7FCBED9D7E420980849
ED91E369FB0DBE07516F64BFC5065DCB61DA9484F8EAF30D981B1D5CF92F2800
5D2261A987048B8D0D7232D3EEC064D20C8E2481B032045E075FAE47AD517BBE
7480EEBAB65CAEAD49EFCF28366290E6D8ED9057178C4B65B1A87173FF22A0DF
EC551EF5BAEF79F75380FFA30F43FE5A1F272E4955B6DA9F93FBB01187B27472
C4F5B6F118D8862A66933A24AA10444A49EC37F711E6A784A416BB81
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245AC583FE784CD69B918457FC63ACB5FA24E41
CAE39AA9386736476F5C0BD3D01ACFCABB35BD346B884B97EB5F467C93A2FC7F
82A0B3682C1D7B0CAE0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7CC4EFE6
1F9F8E88832737186037F9E5AB161B8A2090F5569529861FAEFDC91E823E0A0E
A92E7F1118BCF413BD355CD844D0F88C47B267EAFA1585B4ABAAAB9BF885D233
DE4656E4CCC1AC1A5762BE48F5FA88A0020AF17A438014B5902A55EE220152C9
0348CF590A07761415D2F53A866C95D4A6848E2BB7970D176670F90765843635
9C2461BEA57F9CC512BDC51EF25496B2C2253AE85AB38889B26761BA509C7F63
8C6CBC4BBDEA74FD3B43A178C86F9A97423815F5FA2C09BA590B8371D5B7758A
43F98F4DC4792308CDFE2779CA6F20ACEF23FD8FC11F483C0CDAFE837D984A76
1286C4DC5088F5DC4B8D59F781ED48736CDB2D0B9B51340F6218CDD622544552
9BAB6B88481D111091C2CAE5E19903BE5F2C90E79E2469EFE314329B4653D49A
0C4443075770A917F06A12C87149D1FEFB4F1F549765E12B1D91A12DED1EEA49
F0377BC1D982E7CAA793A8F2EA6EB9D565F0DAF6A86B086D77535618BF74C3D3
095B2DB5C5781AD681ED97E25054517EDC17A3D489E348EFEFE9B47772DE42F1
6CF203D5F0214AE736A5EAF9B6910A10304723A557C4C0F1F3F4C640666F6762
A11636A168A3533611EACEE4BA4C7364F360B3068C741341DE9053506D8BD37F
40C8BC3387E318548212386677BC7BA6D2F4CE497223A5ED58757AD16BD6D3CE
DB219988E782B85247AB61D267658781B7050E10C10F244B4DB1A6D0AB061BE9
A193EC1676397DEA477DD3CC220965134D3223F100161AFE73FB6F0133C7FA42
BF3E0926A2ECB930E57F3EB4C6A5E082A886E2ED6CFC00357E6FA766BB67244B
17197DE50B87AE4ECAD34D4DA9CF455B86CE210CD10AF81C83B9097C0E3FC30F
9D6B31F6C281FF23B583E98DB7A59562FEE01EEC83AD3AFAE44BA6E941851980
44800A71F2030F08136AB01BF677BDEA6C2C243A07C4F653E5E1CBE50843739D
F34621D481CCC93D8B3E72C53A08B9E8D2AF9133DAD898B8E4BB7165128EEFFF
05A83E56BAD22DDD09D6E029B5EF645F1ECDCF4D36224B25BEFEC5D010BE4EFE
4F095E6C596E8FCA1144ED13BB82315F55918B2BF764892A80A082B7D7706196
803E8120274819D7827833F70623E6F5A87317F71C3CA3198575FC2D2540BCFF
797354DDBEBD784727021E226124941E7CAEF59B96C4405294B7B2347ACEC34F
55805D2CCCC46330E169652397C4C6581EA594FBFF4CE380D369EC8381620CDC
FD0DCC83ABB75CA7A034EA4B59FCAAF07AA8E3183F2F7E81AB8B731ECEA858E0
40C75D80E40EF10C68AAB32B2C5A95A9F0338A06C26376CE7357A475FDB35AA3
7F70E291C7BCA510FE3F3DA0F6E923F14E98D56A249F095ADB0B2B7ED9CF9996
575AD103DF7D37ACD491A4BA9649718EB7B35FA7ED902BD2382C441287F90549
F12FB8465BF8C44F3DFE118DEBEF719B612F22A4A837C9CE72F59DFC927FD592
F900BB84F00E90A62A89E8AD5D6233C2A9B8171EF18C89CF0489A6A30F898629
44B5C9A1865B1264E9C3DA00008C4968C204CF5007D530FBE8EE5ECBDE4DF7B9
B32D684FDD1972AFD1285E25993F8624FD1EA2600531F74A36CEDE3F4502E5F0
495F54931E7414CBAFF0BC2B4F33F2E6398564910FA393D34879F383E9903D83
7A76ADE723B794BFF55B4842C7B42D05D17F33E4EBAB8B19A6F44F471CB15872
5E5358D6C4674BB86560E3587D70AA2F34938F5431F2C7E8DD970AC39E161982
70F7BEC2B4F38850C1C3EF923FA20092A32BE03BDD73043A90B52E572B79A194
22E50A56E3A56919942C34A42AD42E007724B3B908DEF2A9C0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651C32F7372F56D5E845643350BBF6D0A6EAAC
D2586F3D71442DBEB5B1B049B691CF910A78299B8A9C0B39ED96503D55AF7610
48D41BF8E781511338BAF3A2E79B98DB9E6748C1FE829C1E574F41ED7A56E8DA
4EA2023CFC69FBCDEA39CB00C8BC5AC4B184E13F3ABA4A18487B10878E9D800F
8064BC68223CA5F86E7A9AB9BAC72FFF9546B6BB94F4426E5D273581A6D28444
44D82093FB03482F71774ADEB638DB46DCCB0C6BD2192A98CC4896B52E643BDD
07F61D79F78746C5238C5504416B1E2F271280ABB91D54CC819680322EAB72E1
250A760531BD7F2AA1DE45FC978490BB69153DA6D6161F7AFD7BEC1ABD547CBD
B6BCC20BBBB289486F6C7E238C2A7AE02B2539F6DACD88AD99A2B686FBEC34A6
F9EE29616642225A5AD8C4FBEB07FE262D75AA093A73E9E0B89695B5862C96EA
1243561331C2D9EE7B65B8214E519D57A88C79B55D644CAB29554F2E31FD6843
FF7B259AD5538BD0836F18ED0DE7F01D9BD148F8279585467B15C17D2D0C33C8
24A507CB2FB6E384BA8BAC55FAF929178B7AACAE1D371228606B58787EBCCA93
4E4F469709A6476CBF11C97862C34607A7DC2871810B501018824C0E0CFD58F9
7A957FF98D5BDA3E3E034C52405A6C2908EBEBE3E29F7C6A759857EEF72F2EC4
3A8642C108D34C4CED6F7DBE80F25D75116BBDA7CB4BBB73A61F7C685A3A9A51
8734F9E4D7E801AC7DE2E73CC759AC64F3CB8EBF8B5EB56F41B247F3F19315EF
7C24C48C184E2BC4350D72B6956D0C2F54961B34FFB476B8B54F5F249AD4F434
87F61D3712FACEC07D010DD43EF4D36C3C6BFC310B412ABDC95F0615C5BC5180
C92F0640CE6A8AF3AE7EB181C2E4C11086C530DF109AB7631B321258281DAADA
221C4D03BAA1CB2A3368AB891AA0006AFDE458F28C88624B7CD1FEC6CB09AFE1
5B7C4C75C0C00F4549D250A8D8D0B82FBBF52438CCC1953B78E7D9D431A1B5A0
4A73AF4A83C1332449D33F89196645962942DEBDD82A0C4A86F0317F943CAF80
38C03C57418377255201AE91F48B7FC6E0BEA32C7762AC27D37041D63165EB3B
E7A22843BBBC2A76EEB0E1C3F1A5DED8CBC163A406C10DEEF8375D51CA265048
A748D61C4B7C040606D6661334764F75102442574818D8E2E330E2FE5102B7F4
DF3E4FF29268D62FDDDC616ADC7E9F13E6B8A5628C9C333261C279378974A281
B8F074456303CAE324705BE0751EA813402C3D640582C972655ECB16686869E6
DA64131BED44D2F499C69EA518C750370797B96D672132C82296E416D4F3B55B
FBF76FD52217FB7A494737C74DC1BEAE9A4370CBCC6A3B60E897A2A10ACC9590
B7D182BB0BCBDA4B8FD30EBFD8E947926A7AD4A39C3E3BCC457B16FD9FA2606C
C3C0740F437DF5F1B361E2AB0102CED6B56AB56737158CF03B694FC508079D3A
31ACCEAF23100219B1CF3A1F09D967E429545A65BB9BCC05055A705CC4D79163
209A2105EAC6577EA6EB40D70A6D3A73572D79A8CBE198C9F63FFD1470AEB473
2DA147B30FA99C4C8C7BD336D401F5DBFDE3DB313266068F252FBF712D4F6AA9
CA51714523FC48BFBA1E33E36A67FD71C4DCEDF3CFB6AA5BAFC7DCCAEAA40FAA
E6D4925126349DE06E101868BED82BB51E91185394F31E2C049463AE81F753E2
F863AAF5E286731902E47CC79D75EC3262338CD13F13C659D762DB6199452CC0
3F88EA12757D52C10FF38B44A09610AFDCC3E9E0EA6D89BB91F93DEA53A676EB
142FADDFD883DC4F0C38023BDA6569691729EA004A3D96F0FBB300F4030B6606
13071727F3BA34DD98CFE4972844FBA68280761E4D48476D645F86023FE852EB
25C98058B68C3F7DE5C9E739BEFBDA9EC9C8F800F862999D20CD6BB97FA50A40
B29FC17AA00DB566B2EC94DE5934CE2EF61401B1AC09C515B31676917D11D6AA
C4F958DB61B11DAC0032A4A9BD935683E85A26C1F42BEEAD417F837272445BF8
5B73660BC2B57C89B3CFF6C85E86E42A9550DA129DC0FDC4BE50D5A5CD8DAB41
09CD47BC05EC9E0CBF809328C5737D7917AABD0AD9A87F485E0843606F7BF8F2
C0F92CCA49C489AC56BB4FAEB441E713B499545814BC2B3B2ED508A5547C4B8B
182CBE2ABB754E07D88DD634787FE1DF52B38F3EED60778915269E71DB74E889
71C070FBAE2C25A7104589EF38806E811726E41351E349B6167CA5058EE84D12
58EFC050B428623FD1E621555BBCA26C986ACA69714EE285E4183ECA0F278461
1B128DDFD3B8061FEAB76A85459C6339FB76BD776FFBE44A0D870B50D5C08E42
C27D4F909B92A16E8AE2275E83777297529C5ED2573FDF8BD7D6DAC8936854A0
E9B5873E0C43A98002905B1F09DFBD253E4F8EBA8FA68830E6BD9979FD51C835
5A7EC5C1747D467FB498E88120CCCAF6A701DAC4FE774492035D2304EC4F9083
716CA7906B80486BB5C79930F2D085E30DEBE15A07B6A046946D1BAEC088EEF1
31BE9C77E57EFDAB7374603762EAAA72B0B40EAF746A43B2DA7552C98FEA1ADB
BB93C025B00E2203899B2C287724BBB8E65FE1141502C1218C55773CA3C6DAB9
681EA8787E7960CFCAF502B7A3066310BE7A115570201F827CF41845BE0BF8AF
AE8348F559D6AD28E96669BF76C5EE35D36E883E3362E8151A38AD6FA6AEADF5
82AD81A19F11688A44032481C0698FF9E0E60C0930F7AEC84C4D7EE11BFC90EA
C5CF755173A99C3D0BF412FD30352B46B6FB6D0B977BF34FB3EA2C40A1ADAA19
182C7E3FE4F4251B1887A2C605FE1895D3045D915E59246A382A2EF44013126E
974503017108146FCA11C477865B61FF0136346A52E994D5242B0EDBF68D120B
D216209890529FBB3D24651664E84B70E52B35750A4D746C647119A3C81D1CE9
54F4F359CEE99946657FE87EFB947F6EF31DCC61CDDFC39A27718813E2CDEE9B
EE0507016F7651418558D452E73137413161CDD6645A9C7DB42FDD905FF9EE5F
A98B2F04DD744B336C400DCE97D3384AFA5C0BCEF133DD294C2AA330081B6EA8
216653BA182F7FB05BFD80CDF441BB594FE01CF3180D3C3C1F0B13A98CC0339E
144825766BC7D4CA384FCD2E9256B4C11C354D3ADB93059FC37FDDAD6C78C8A7
FD6219FC44CD0E30CF5FE94C5F95054EB0CAB8CB0BFB75B710119768A161F8C2
76614552655D1037F82FE0218C4D4CD7BEBA74BED51AFB08EB16469390FB9807
1BFB9020766AFFE943870234F365EB6EF863A8103CA6089A8A29528E45C47F09
C56AD5389C3EE8DFE85E6127D09DBF020D89506CD1270C0B3EA235BDEFE3E247
B0C655D9FF7B893CC31F7949ADAFA7FD22C8F9537DE472B6C31FC9AABE7ECAA5
701B0D2575AF8A8596254E937C142B0AC9512BCF447499C2005348B848036DC6
131C1F05FE139D653820FB3EEA998267FB51CF42EEAD7BB3CF28571C437ACDBC
56D765E2C7F61226CFC5613463DCE571BF49F20E7ADF22AE9612796DEB913805
9A4C12D608FD1228018A6DF526D5C66A9F11AEC07A100C7CCF020413C69C51E8
D0541100E3DF71D501F4BFA0AE8260E23761F29F3EF6B7AAFFB00FD028B380A7
31A931CCA7A1CD78F9CEFB9B43D1AB67E0C1B90B74C62FF8FD0FCC210E26E80E
A2C146A040FB4729A47526A644743B53CF0CD6CE4EEBB414C741759F68C2C929
2B509FC3F79A0124BA95F9FBAEAAC3B3A5CC1C9744253567A78303623728AA44
9365090D58BB4E0B099DA528E5BB6426A755DD97B90D0DF4AEC960EE3BCDED36
FEC31EAABE44B4E65AC2358864B4567F289298A69F79F6981B190F26774B50E0
D246A2676F9821158D56882769E3AF7B6C0F8F856AB15E34B7AFAD9FBEDC388D
8DDEEF29E5BA5830B9E88A403649AD203CBCAB5465F18682746D4C6A28F9D30C
71556F7C9822962D39A30A3D5D4331979C914CDACD8E52AB927C4F57377C6E95
AC3B74863596FA34250C38904577CB39ADAFC1AC17B04381C6754327FA7C65AE
AC1A2839AF94903A7EB7450AA2BCC638BCB6D2318C6E6FB8AABF70FC0CEC089B
5B2A64DC911A05B7D0FBD3BC15657FCC9D561808E50151C166892AA2415303D2
ABD61EAD6A46E042F2988E6A31D07C0EFBD835CD0C526CDF34968DEA783AAB27
AD15B45820BA2C8942FB131136588242112EA1F17FD3C2604EF52210F343C793
DEDEFB0A2B195538D4B0C6FF837473C372E70836D4C5747C4EEB85DCCE969D9A
7F061B9FA20CF2EFB32200703EF58C425B9A7D27CE0BA78897210D30DA8F7CD8
5D47409E582BDD2EB2D8D505FF764C914B4C11AEA7B23988D184F29AAC5C274F
5694862641C8ED8ADC2A7166E893618F4E1CE1CEF3D26E28BDA32D12B10ED201
A9F192758B996B3B8750FCA90CACA049EEF3CF6CF84697FEEEF16F2290BF3094
539F0406AF0030ED0D0769FFA19112C97076BFF950438DC37E9700A7BCA663C4
328967C977B430B63CE6CDFE50A651EC13D52174ED5C933E8C8525F88E6CE482
66186158BE0A5592691CD1E265DB2F523B702D4D0DBA35BE10A4F542DBD3E173
15E1E0A224FADE62569408F6ED842CA727BF331033E4F074D29DF85080F06956
1019E04A19756A102E1A32153D5C6216D9C9385A18202E78D9E7ABA944D21851
498AD5DFBBDFD2AD3A45C0FC93D273C16FDC07C095C8183E89A7FA85A0C12A52
763634899F898B819309587CAE703571A817E2A7D1FE8496B76E5248A3CC57AE
914AC32F028980AA50C18C5C8C44EE90A42542106F909E4F59803685F804B0C6
A98E5D37F963A15B1C0B736ACA11C477865B61FF0136346A52E994D5242B0ED3
7AEB62353B9A1D56DABD05371F9479BFA4CAEC5CBAAC32E2DFF165186D73C527
5BC9638D8A733D3E5905EB634982BBDBE878E238A3AD7D54A0F8D49FFBBEEA2A
08DE64815E836B7C7D1B6B6FE2F8CE38A96655B073C606ECCD8C3F2C5FF185A7
2F8B21D6486CD41A80EC051E875EAA89D64FA5F2126CCA7E93636A7CCA2158B9
9A15CD40585926E5ECB3811D95422BE5D90F0E736BB7657CF2A0A5233E11D3AA
E27591284292FB1BF22EA7654C2797659EB876A0CC35E0BD79F4A14F56FE1C18
E6232BC798A227D8F8F92AFC1924FF85BF0BD5547FBF0ACD890470AA5CB2E0D6
1ACEF149B0A7B73F2EE0136A9C23EF64210422CEE9C62889C3FB5D8D1371EDB8
5EFAE402433ED36B610862F00EE394976F0A2F4870DB0C0FCBEB6D1699049BDE
AE9A5B364AC04F853C9612C58189EBF3334336824F029CF3315CDAC8483406A1
AC1DF70188977249C809CC821BC0B7A2F8AAF27E7E115BE85D71C3003914643D
2327692E464DE4CD3E76C93397F7998AFD5A64D6903F2EF571F9A24136315988
08E0F91DBA758A23E515E9F18329599819EDBDA44E136B801A216AAE5168BF1D
DF74179AE8478DFF4DB502DBCCDBD61CA5B5E20E1CFC04C7B74A171F41A35364
E573321A926C7C3DE13338F52F2C91531C92ABA181B7CF0FF955A8DA29F11753
6ED7582733A6C86215121DCF5B0716611CCEFD11F5C5F00FCEA5EE9D46AA63FF
7D4278CC27249B1329305788A6AFBF6CAE00AA6B9DA46C51F1EFB3D014219FFB
966E070D8BE5B5CD57458FB78C6ECB6460A281A80F502523BC02292E16AA3B9C
A089F7320D1B9BA214E43E83C1FCBECD57341217FA2783DCEA90AC383E444674
6FC85E9B1D817C988AE526DA4338FB27A18C3E1F59CD6063225001812694472F
7AE07866B1F040B42849BB161F8C5058DA20F5AA785DC0E77188C18435A2E7FF
BA595F0C054E96CC44F56932D8FD589EC2438A167DD3799972464CE75AAB769D
CB32014BC32FD730F22927CBA09B8CD2167352E6BA2E96F35F1E67BC40979F9B
86E0222012DCA626F8A2147F672557FC3E08A242B2514C24CD74D2A6056E9B89
886CCCCBAE6F51A33757FD8DCEA2488E7B130462CAC1C61DDD7BD36BFA9D85C9
CB0414FA7B15EC02E8C08C8A4F789EA1A232F44B216B0A7C6B898EEEEA2EAE31
DBAA343678B35948BF6E9180221EDD0ACCA578928815D319AF73A7E10B5F523A
8B2E7812E325EA858A25C26ABBC4C25E327DFCCEAC871356DAF0CB205917DFD1
A8F1216EB4301EA62211CCB8909E9C8DEC28A6FA8042B461FB6C3A5425419977
1B7A614E53D6E49EAF8E8C75650D5793750C61F2D28FD6296AE76BEC4B0044AC
2984337F2EA913D381318ECB6383C6EBBFB2B61FE04B0B13B26BFA8A80D62E48
64239BF65B841617AD96D9D7F89ED64975DC69CF20F88E081FBADA15B871D8EE
AC0EAB134DD682DCBC9C187AD9788F635D7C1D238E43779FC2850256D81DD960
1364534E0C331CAAD340B7375427190D9ED5D06C044AC61F885A346AD0BCB540
FF5D3D13C722603FD1A9BAB8481D5ED4B852061899B5682BD0A153C50E9529CC
B01112EE116B684BA5B21D162765BF1FDA0BC109AB896DE24B0A0D57D9F4CFDC
4C1FFEF87FD2B0CA2E1A287BED88AF473AECEE97ABE431A8D1B05BCBE69CF10E
B696F21934226B6174010EE3696D11291F2E3F06359FB2DF0AD948D5F373AAE4
A4752F9BDE24042B95B58726FCFA82AF11ABD26D2D81FB0531381F8800FC7ABC
5436137CB6ECF73403915F269B7B231F5D9B1F61DF7CB03421C5F46040744911
2BDFD986A3F7EE975F79735FBDBB333D136FD72B54BDA112352814FB6FAB9134
72DAB4547A50C2C293458B1D854EB79608E52F06734E2CE9B3962B4FBFB2CED0
CD7D1C12433ED9CE0AF54C73172253EFC739D7552C51C4BBEB0896586854605D
658D8C7681595D0492047E97CECDC3FAB63FC92DE5F64B6FA36C08DA3B7FC06C
7D40B03E7F03EF36CE0390DB45EA1F0B6AA0630DCBC43B1E3BE9B7BA5722421E
932D83657C904434F3CD7B4C5C7CDE111CDFEA91C7326AC7FFC2A65A633FD028
806459C9CE8EE40DBFB9338561B425E7FB8A486E8BBD8925F744645C55EE47DE
4AA52ABD988594A7EC882C32556517E396269C90FFA27C5A51513DF558A8B499
C7B6158DA671139A282357F5CFD4CEE0BB8C7C8ED352E0A1E6DF242BC75F285A
7C4D903A367CDCB74C56BF8356F94810910AB18CEE5DD843B5FE4096F520222A
20FE01B307960B1F1030F6CC9B504E1FFFCCA352431A0D5BFCFCFAD30F97D9F6
2493B0CB7FEAFC9BAF90B7025D2E35ECC22A152A63EC110EF4B8FFD3E82A1F2D
18F3F163F77EF399A73A1B5FED7935DEC964AEDB4721F177FC89A5AB13A06261
BD660253A72E63479DBFE0FB8041A873898332B8C24FA875D3E200A018C78BE2
E930457BC33AD2FE3614781E71AB4D0073D71DC38239BC688D3F5F61CB43AE2A
53FADAA5926EA5679791D474BC0B7939D43C0AA387BDC9184255A3335FD10380
3857B8046544BF2723FF4B4331E2BC38EE8787EFC7FAF8A4D10DF88C738EBDF0
4155D92D9EC67D91F7299AAC56823CD4BE926D0EE4E8CD015DD85E4004694D39
E05F5E2AEE30F76D51A3CF5FD0316410BAC452BD8BB544B57ACF2F9FE83E3E68
109B182044F27CA200B432D886A12EF6332152F0E30D38E2B0F2F1E30D973B04
68FD4F84E83950B76B1A05B4DC730087F385C524B689F96E3FEA51EF125D16E9
073543865055A37AFD20C49BF08EF65CBC703EF6ADD2DB56EAA02A6C8649E61D
7F5B5320DB4E6C7F70B76CB486438D247D0100689A73A26C5E0137C208DCF1A7
143359F8EE27AB1E0B8333DD55B109F616080F5BF29107A418F686DD27656D1E
EBDFFF78EBD97F40F1B3C7C78221B0081DCEE066E353DCCC2B78551535EE5DA5
2B7AF5030F8AE1482313610CBFB4CADB3DB95CE2C74DB09F6C18D083A389BF57
68AD942959FF0302B3225CC885CFFC8807635C4262456DD0C12D6542D9EBA6F1
12F55563444FC3D79F4B3A2E9432F8E1948F77146199CC80880EA23BF76211CD
865BF221AF4EC556835774B08B04CBF20D471B7C228958EF19C9A18ED7B135C3
300D4E6C8B686A49D427CCD0DA4E7B07C8D2140B854F2E7C3CCABAAE3D2A8083
7BF7F8C88D26D37C4A69365579571DE66F500A75420DCB24BFEBE3ADB38A6CA5
8290D557AFA6B2F76D3C2C0D7C2FEF36D9A72D75E95EC194042007DB1738809D
C388263F3562D6BAB6320CB7B552FFB89F11EA22D02AE6333848C966B1B1E30D
A2B09FB2012717AC3CCA0F72FD3DD6E6E24621FEC52CE047DAB64EBA1EEF23FD
D6D15A5E4B14C74D3856E17C875B7531CD1BC116AC4F21FDF43764C2E9BBC3FD
8F6C02E213E218294D1063180597B8C427C9B17202A03F53B88544455AA87281
0C7948B1EC866883E78C9C909A89DB039C9E9960E315CC0D5A741134B101D1B9
61CCDDA1D8C89CF7B69B3CAC447A2D2CBE22433B7494A12D6898FB52E8D60EB8
F100DC970A6F6FF1EC5403388B6EF347797DF580DA0E0A4F13FBF20B25DFF786
1AC70BF7F778DA38E54F972D6A17B932EFECCDDE3DE2B3521F190FD862092C5D
24CE3B8037AC8FDD3EA687834689DE2FE4B7759C944FF72ECE869A601FD89830
4C6EAEF3D52B31B6CBA3D9E7EA775BBA2EC97CC91D926CC76EB3300E9B6FA5B8
477E9788C5245492BAF032951F69E716001DE419883FF01BB562BF7A8CD1C6CD
40BBB35A5685BF03CA5AA04FEDEFDF24B58001909B7B03761FF2070A0FA2CEAF
23100219B1CF3A1F09D967E429545A65BB9DA9111A6D08A31D0797C7D0DF1D6D
88ADC4FF697C5CC0F670731EC605C2C85F79D5C6DD740FA2EAE0C2119F4AEDB9
BD5451F2BAC4AF89052666E690F8ACD132C6B29910190FD862092C5D24CE3B80
37AC8FDD3EA687834689D1ABC946C2E4E79D4F3AAE440A1F525EEC2713C0767B
327F5AE99A990B727C6C7020F14175225EFEA39202B10588CB9B4E44FEFEEDCE
7B6160978ED7FF4A5199B53C9F904FB174E3C63454AFB214A8944B2299D75F55
E0414E65AD6A19F8F0894C659A61F005C6FCE1A0E970036566CBD52B4A8B1AA2
57C2DEB9689E200925D85FA23439452A82E6421B44C297B1935A3A5DE94E8681
FC6842809C1CD755943368A9554B60AA09E892F91A4B3291F21C9C651669E0D2
71F30024C0488C71FB30791F330A89ADF521505BF7D84597813143C60D3D1A51
5D52CB8732BA9FB066CFFD1C50E9BCD1885D95B60048D2EFAC8D2CC435BC0F25
C44B4AE7D581455520DA75F0AA2AD71C12CA16B7AA13D89CEE02664EA934E077
7BD01EEC83BB5674DE327954754A34A9A04FE68A437B8306B8463247F1E54DFF
D17B997EFF71C0B00B951A7570A341DBF602CED898087B72FD370FCBF53C18F7
6B79AB072E704173D21582B641515FE91E1433A56A4B1C717A38CF9C88CB71E3
781E9DD1EFDE5652E31772561D5A448F9B520EA55BFA4FC1C8FA49F5377E1680
6EDACCB60F0D8085FA97FE6D2E960552337321D82B49DE32AE60EB35A8EB1742
21DE36BBA0146AB08A3DFE98951927F9C3A83202250796C33F156EAB4EE9BB26
12B1FD223DC6C8A48B36B81681FCADD2C6095F052CEC01B7D399D097BACCF6C9
E10E5C114D067892630923CD601E96E722DB1BE432987A61FC0FC6820AA22F96
7BCB97046EA3C4A9A3A97D7C031F9E8AA24C0A18B40E952E098614C2DB3FA57D
400530CA6FA97ECC263187BFD652DC36561D27A9335BBCA18349AEF42BB9A57F
831F6379060E3650CDB2C87FA552F5999A1B5575D6CAFCB00B7BEF6E47AC23B9
20F7B535193DB8FCC1FB0DA6E544394563D24D8C87FE0F2722FBAC78768C4A89
FB6E27C2FB99B97F2312B6455CB547B771F0F0E66A2A9A030A92CEC7F3F1B26F
F6E2D1797C38DF3097789861DA2382708D050BC6A2263B7F797BD4F9FD0EF0E4
68AE9691921512F7DE93337F31701157FF310056D421E594F949B0E4980653F0
1704F8963B8BF87DC9CA5CEDEBE5D0088AAD263602357ED1BE61FD58DFA0317F
A126A715D3C293274ED2C5CAD0C162EBF98632D63BC149DC1379327ACED1EA72
9FBBF3D9C2829B9FA5A211732448B8F3125AC8AB538565E06699AE5D68759A52
096B795F2DFD666A3ED9C1AECFBC3AD200383477D05545B04A54FEA1159BA81D
2F515C46229D50F7DB0820570898CE57EB2DC4F2D4F37A3B26398A1D5AD2F84F
0E1339008A3DFF0A65F140E43A7EA149580132082317DD4A19E976C084A28CCD
E5BBCAB3731366C3B74072044D3EF2EBC1CD905BDBE9C01C812B0C32F4F09AE5
4B9C67CDBCE3F58B2E4658532D7DA349A085E560FA3A13FFD612BE78D9014A90
8651C8C8391C12719AC3EB6A7652B3689830029B200A417E9CD3E5580A9B0D04
F36C41B2F672218763100EA3EE9ECDDE8DD5AB6A6510CF16E8CAA48D18DE6EE0
20AEF0B89AE754BF7F8203F0C857CFAE8A868BC658413CB9D65DFF018B979021
09935414D50E1375DC1FA058A26A17105A2469DC27876F4035544028390706CF
1ADBB96A74355655EB64342E5FB6E18F2149FCF4C0F743AA1A1A120843D3681F
9DCB79A8474270CE46F97DD10CF6C8941D49919570F2E5F06D721403053F2058
E88858EDEE096C4034B5A2C6FEA57D50A9ECF4529BF907C09445B3E47801F2A7
157FAA847DA5E22F00136F21273615D5288ABEBB427E01E60CCE30B0F2B691E3
A8C1DD510CAC176665F9F845E184CC0594188DC4771B8904EEEBCC26570D5C83
6D34EF4DEC34F23A4282E1448187B3AA4BB9002792269E14A11BA6A5BC7DECE2
0029034C88696775902DF6CDFAE2AB99ABA68FADE90898D7F48AED17DBE9CC3F
44BB85BC31F795942D5D77E3AD79EB3B6CF717E5CD434CE1C6B388B901F937A2
99F65C3217180D4BBDAAD2E96F91B4DBF12F6C352FA5F0492B73CCD90086FDAD
B941A35FC77F7364BB75AE2083C7C66E6C13CF17915C99F16A44ED8B88CB1B25
44153A1AA8D2DAAD95397883491CB46911D35870C88509B392E1B931F0E402CF
17A63993FEC0044612E8EB5CA65ED931CC5E0FE1F28D6565F3C195C8183E89A7
FA85A0C12A52763634899F898B83763908EC0A1C9AAD283809A935DE0356C702
F538EB0C2D835A9CD11BC6D7C87ADA05A734DEE08CB62CF82CFB0166F0F1C54F
38D882DDE8DEE28A07A9E0A42143E0FC979F53C42E821C769735FB865860424E
A7F5CD9AC21C7B10986B3D714BFD49F6DBF0306CED94DE945B5A67DDD8EC188F
7FDBE2A9AD81F7002A27F2EDE3459E49C27632009CFD9CFBB246A971A093D8E5
027D67A89EB217A0AD71E56421A3B1386C8878EBDFF132070DF8A4E24787A29C
5AC9DD10D3BB974C0C92B89BF728B6BD03C5A92A87A52243943EB3E77E6CC38D
EDBB2DB8BE7778936B71AE27A5FA67289DAAF80C0F5EA7D9E67929CF4142CD52
DC6214105CFC9E95B7334F9BB9C94C9D81ACD2DA6F0CD9653A11636472F5845A
F507C8EBA6518215D75034119AF139B07DA441ED1B5D45704665D5E85622B48B
EC700AF8F765FD970E1F82C2659A38F8F63251495D697C3E0E8E7CDEB23ECBA6
03CE654F0B4CB297E3AA3E9EF091E6F7D0D07D34102A25E12F04FC9F4B80562B
21C6D0B8BE94778C7E73746B4845C1ADD96ADA56EDD51EAE4683113F66F87650
90E7AAE59D8053AE0BA8DB3BCB2AC0442D6E7DA7789B74A83724CB18C0203180
8CECB597CFFE81423BC0B3D05BCF9C2F8EA64AC3C5F7CE2DD08FA2E5253C21BF
1C0C1DD432FB523701060720730E9F51B7626597A17CCED52E42690F9808BF40
C0FF302E4E863FE458E0DDE830AE5FF2FD1A26930E14FADD837552972E4375BC
3F6F857EF419616A0D2E3D646143431C318824FC3BC21E55EF5123584D5A3508
FE86CC6FD9A1DBD506B027308CF215ECA53E73C0C347A0C47DE886A1E1F78EE1
8F3B7924E56DE4D18CDC352314CAEBF065F610B00B529D079F2291FAA610FE8C
4CCD57A7A8C9F5071193E20C5358A7495DDE0FBC9B11349A03CB50C3C6E5F571
A5469121D122E16010687CCBA357EC5C1C77239733D652E40DC6F755919054DC
900685CE73A8D5738C2BC3A5CAAFD59260886FCA15CD098A1B0611374A7A0A02
E4EB602399853AA05DC6ECC02F16174606AB2770299A4EAE74166D0EC9965C87
B89B8C1DB7526B19F7F0C20B11FDB0F0656E7ECADAF295574EBED60685F10EAE
1ED416C4346753181147EB065D30A883FD14933F4B11CC112DE73301F7F888CB
67DF1D266655E2FF6B267ACD8E1FD4B60843C4A4DEB96E4C3F6F3D70BD587BE7
BAFA3EAC91AFD9FDD8AA23A57F745E383FF8BB6DC0C752C8AE387F1D4C15E4B3
D2C887A3C469F9DC2A96B15D33FE7C565961C2A7F1CD5D80B4B11525BD2B8C3F
6F760C8245A1AD9F508AF0EABE76207E935CF4233C2614BB02993C18F5228D99
AC686A7ADBD6EA7163DD1362A8CE7A17C1064CB861BFA9277E75B0A8C76AA6C9
98C9AD482CED7C243C9688305E326F5741E280311FB6537C611BA2451F461DD5
2B51651F15E9BE11CB03C9FDCFDE3700BDDAAED61CD52A7DBF4395E223ACFF1E
E359821663C771DF990F78D69355A8C1D072E20D0E000DBE4A0656BE7F021DB8
63F63DE07FBB104CAA97C01188ABA1F0AC094030E2F0216F900EEF6D6E69E994
902A4C425BA976EABF2B11775929B1296FF602F903C70BB29D852EFCF3751A5D
80A8849721E155F887EAF14699937EC5E60FFB3A13AC9FCE3CC664E6C09D19F7
D23F8A75F6D1464A7A8025262B1C95F281E0164473AE82AA9B11484D9D6F8B66
D150591E00FCA26EC8CFB1C926563979CAD433B91341797AC8D4E9842A26D6B3
3DE375C1AB93D839DC4F2D41639E03C463B9D53DF9D649C8017386EB0C9E4399
A7AFD8703D384864AF49F4EA3FE72CC66F826A3A692434D4D3BE6ED6DABA6016
F812E8D85184C463B9F9044091F80D435E1366EDBD597C5085B9AC04EDAE551C
BE68E84519D138C233FED4D6CD32DE3F8DDD32A240FD49AEE908C7972AB2A420
AA567E0BA6781213329980CFCFB18CF7CBE6C7FA3C27329FE9A10D03889EDCDD
324E112D5BEB28766C0B807B8FF1FB8B81D0B4103EBB92A3F801177BDE9BDD61
E288E9C68A020BB9427C07939EB5649DED6075ECFF58FBACC2E7AE26BB9A0546
118C9BB6E9CA78AFB3C7D87A1C043EA301C3006F857EF419616A0D2E3D646143
431C318824FB0C49362FF7408933501D25922724867F1084DDAF1D0BF513B767
87E4A2F56EEF9FB845A2F7E97795A15160D23DE3668AA3D7DA417C906CBA8079
93A9162700BC9A16725D6510F607A4139FF20EAA6FAD50724816D76FE683810E
63BA4E40BA8E5C0A6D51ED6EBCD11B5068CACB85ABF6D9FC648CD35B1E038274
11BA7AD177E43BD16802D27FC2972286F2B152BE1F52E47D6BDD0DCD828F689C
74CE0750AD5FA10FC0E6B5F36EB62D69D698EEB767B4E9FFE73FCDAF8BD20876
DF126296187D1364EB31556C2401B79B8A2E285ACE63FCB0B137685611FDDAB2
E8FD8784FAA7132BE44229304ADC8A686D6732B0207BF2EB32EF468462CCE9D0
CEB6AFFC1DB954D41CE677D750AB42C1067EDFC2807B3CE00CC05F6CA1D87A1C
83530D8ED64611BEEC2A214EED19C0949910584F7FE49B03F896E7FCFD087089
E5CCD4368BEF556A281D166D457F08E37D782E7467A552F704EBEAF9F9AF6A64
9DD0F7E5D01633F0D869255EB21B016AFD3655F66750D3FAD23810392FFC09EF
C2864447914DF3ED2C719753BB1EED9C4359774194896CAB73A2F2ACED52AF9D
066794BEAF0EB7F06C1D428B9D34331BFA9C9A08BD09FD5054C8388DA82C3566
624F6F7CAD4242AE6C63D047AAC8EF82134EC418EA69430C0CFA1EFB2B4F9BEC
48808524500F3A6571A6EA4D65079538C1F9087E6FC665136B7ABFFE8DBF1184
D3C3AA9575819DDF023FF06A5F3B1A51AE4850C6FDD082AAF6FBB07DFB6A6227
A73AA255113DF4821BC5FB991DC6B178B121D38CE79E3AD729E30028E43296A0
548A7C64326F696544F6B1F129A854A81ED65184618E121FCB80CD031A30A0F8
7D7BAF534E49D13772304484CE3BD2A9C4955C7691B72AD442BDDAD18F30DB19
0E4D004697B5BD861801D55698E3D6ECE62CE5CC9FE34A8AAB8E3CB9409F8206
F24A189E57A0B5C178B7326860AF2A334383A1C7028DB9A3509F974F409FA0B9
5E779F2E9093E016D90FE788F6D726A04A5D06B0C05E69A239F52F5EA889627F
19006CC52D9E451DC21450FD3DBB18715AF6BAA336E150E02FB2831359FDB957
92B2E6431DD24BFFF2DB62693EDC9C5A4FA4A71EA0848A9364BA6446D5BD93EE
9AFA29111A71BCFDDA20BCD6006B0309EF0926199A60E28CFF48B79840BCB88B
39475A7E1C6815544584C34DF0E22A5EB61F0C232B03C08B27866537A9CA5F4A
B3D997E3153548794D9232AA20C29B6CF38FC8562EEA94D43B47E1F7AE890D38
03E91CE2738FABBC214C731AD70893D5FAF5B4BBEC5416501276491B79153F8D
F73808CA8940A65E5F0D1CD06A704E946B53768B5F92C841F47646E5CF24EC08
A8FA2348D271D2A84CAFAB1A979AA7E43DAAFD896177F1F70EADCF7E077FF92C
EEE279D1CD8F9B064103EEDACBDC40EB2EF6C28E91A0A1B0D7A7B0ECECEB25B1
8BCBACFAF313AC51BA6360C4F0BC34696FFE3C105348362C617D60BA3678C821
5B9F542D81152BD47EB69563510C525D05E195960D0EAEFB771050039A2F1CEB
A3DB1E042443B665E915991D932209B3F4C86295911FACB51BDAD45965CB3E4C
D451B5A1D6149A66BA1CA971CDE9629C0B16424CF3609285DAEB0115E4A8A145
939599F77990E19358425614D41218CD20852B1969CE91DB3F7B7E87BD9D405F
2E29BF660674457A70FF888A59085E68EB262A88EC25462A4A9EAFE20A956D43
50D8C90F998103A821C35734F0153950E5F72FF6A8AA6940836AB19ECB89B9DA
9A93D028D28EFCB73500DFC2F30D6C47A485B062196657C6B0CA8422DC11C6CE
AAD52991D1A9E5969D76BDE4FC976074F2D623721D38E3F361A941457847C5EC
09C01622C089AB3CB216A5C27D634731F3CA55BE5D1F91FFBA4A232B68F80792
19AA89F699A8C22C30EA308E6A5C8EEB5921F493C8F5B7691CD5C39E936ABF65
80C629A7592A909A4F89FBE2E3EEFC8BB99DF3B9CCE8FA93A71128B87293E690
C242ECD53B604B30AE8D7172F3E47139FEF1D23D2F930AF1B361E2AB0F5B11BA
428CD87225C7FF28FDCD4FB898A052A0B1A3C494AAB27E0C853EBD237F5FDBB5
82FBE603D54C4AA4887AB453337003BE0392AF8359E416849A0B2DEBEF46E3AB
2B8DE7532BD19CFDD69285BF725FB229FAC5B04008CA381E09AB94F1A9224922
B4A5C23593F8765E8124AB49FBC57F1B0A7E8F6FB6C483282DE613E28E0AB1E0
441517818CFD111E32142FFB160DB6422A5884151A4054D6076EF2F506E3DB3D
67A2D10FA038561B4D714B08BEC08EAA7D1909D5833FAB8D6671564F796B070A
2B3717577FF24B2CB8D87BFCCC85B1F91277DF1E391ED325F8383B11D57D9AF5
0EBCF7152E3715510FBF60F16750CF58F347797DF580DA0E0A4F13FBF20B25DF
F7861AC15FDBA1372D5D4D2555A2E8E23E29D8C8C5F39807B5A46FC1B70A9ACD
B172BAB4BC144943B3D3FE06E95C6B69FB006A083E8592BC01483D8DE50B9A6A
C86F872ACFC9489546968514D49014716D5975AEC37D2CCA662CFC60637C65FA
FBE78109CAB35AC2730A761CAAED96AFDADFC1FAE977B6BE8BB8B73909AA1117
B78A5506192B150BFCA046A36DFDA767967A43B3D1F3FC4F591BFE0EA1D77EFF
0602581EEEDD6C8F062E3E6783AD762482408DC1A5E5C900A43B0115F76BDB75
E9FAF644E1879C37A1E08DB03EDBCDA51187777E14F63F0C62F40BC85D30FFDA
81640FC9C58E6C4A95E1027273D38482DCFC5F6F6E64E4D57EB716ECD75C6A6C
AF0F0FB5F6A73A47FFFB9D63648979AD6DFC8C619CE8FE1EEE3B9FE2203DC6C7
5B27035ECC31BF4368E12CED705A5823BF6AC2348B46BB50393DD2B0D8A303AD
186A5DDB0595138C0E3D757E8DB9B67D98219241C0DA67E5BEC040A958B14BB3
D782151402720D5B4C77D25AE31C4A75BD8C7EB02722DA8D89430EC74AF0B255
2C97BFBD1C6C0062488763FDB07939C52A5D0D17AB4CAD27D6776A05245E5663
DB78466EFF0F8E67FEBFA63628520A97B48285DA87CED8A9520D6679CBA61BAF
3ADE6EF9B4205BC43BA3CDA488E512ED42BD142526394C5103BA4718D58F167C
B6741E06D4CE5E269D3AFCBBF060F416C0B747EC5BA54AA743154084CCBF021C
EAFA448258460E39549BC1781B89BDB53A9752A519A9BBB3CC59D3FBE6A84F1F
9521B6E05D0A0B2E0FCEADD4932A5E64E2E417C6B64D84B19F7C2D7C143E287A
BDB12AA1761639E638CE9D89C4CF0AAE1B38A2837E19E5AD8A4551A971DCF562
769FC5E4767C4CE91F8896FD3FE37FA5F235AE1BA3C6F3547FF24606651E5887
FE8CD61F46FFEAFF4A66DCCA05B42F9B762FF8905BAA1B6D15269F38A2D283BF
456D5D8BFEEBCB5B69717F22A0503101F9953D8EA3833BE27127E1C489198821
227C1ACA75B845E5D0C0F7D8416730AF4BE4FC931E965594E03272CE6647F502
4D51CD78D79C802EEABBCA93CBF968187FFA00C2E8D8E14D1017DC8428791C90
0E377B78459F629FB32E5FF3872C95854381F1D0D070EE364ED35377E1DCF455
DFB59E53117FB961AD0BDD708C34E6B895AEF03EA76FE4BDD1BECB4F085845D3
9491FEB49ACAAB78D15ECF938729214C68FFEFCAC997EC286F30AD0245F229D3
687ADCBF4D6FA08D7289D923565955106A2FFAFA8C9F636D647F334B648E11C3
659BA4FA71AB8342608C30E42BA95277382833BB9C14C6EEF11BFCEAE9139B89
256D5E8FE9B80F6DB3179657983AF5CC8F3C7EAEE084A74558304627D0C03A01
2B6CB42DBC8EEF10FC8E83696D58F0CAFCCAFABB836E9C1C7887C42265DD4193
C8618501A7FFCE13919D15CF5F00684B37087F633AB4C7B25FF2D7D54B31D2D6
96DC1E52C828A7A1155E6471DA39E1D47F152AF583CAE41F7F7FE0AA3F1F7DD9
175A2945C257765C4801FB768C6188F02FF2328F7D5B493D274CFA840BDE34CA
C6B57A04D9EAE9B90595D133E0CA2A3AF2DD6D4E50A9FA8AF67CE3FE823A4E3F
9E367C4D358692A287F5074A8C01BA5518911789F7767BD01F00D086DF326D7C
A50C1EFBB3AD48F21DC7670F524682E7CE6FB4EF66525E8F15F63E8A9F64DB78
90533FDF90C51ACDDB5CD7B1CBFAF76EE833E519C3715CFF2AC7C25F0EB8FFEA
273601D1E82984B8AE31AE343F37D03920CFB83E2DEE7642AA85B1615F9CBA1C
3C3197223C9F0D4AC9F585ACD311E1BA537EE424CCE1F22EBA8031443AC094A0
7EE8CC94D559627274D5026EA0DFDE5F67ABF5E84CC6B6717E8B794AB2DBFDDF
3A89648C906439A91CFB1AA195D9F12E03463930D05A3D71E1E9830AC1A31C2E
35BA7B396815CECCA18146C96709CFF862E8552E4FDEB7767292AAD81E5B4186
180C7D70697B73BFADE926163A5780E71276C60EAB7E25C124964778296D06C9
02559B89DA648B919EB362176B83298EE2D8B405DC67F2F888ABC36137C2137D
E0D7EBBF2323C750C674154FC6CA853B13A2D88CB67CECA9A1D3498D569DE012
062C1B959357A2A5903A5BA40F8E6CA80916037DB040BCE705D91E61D6FBF089
4C659A61F005C6FCE1A0E9700362C58C9FABCC46D24DB46E33983DE9AAEAA7DA
FD44C991F74087597F21C39DB6A2CA7C80E5410BFF7EA073A18DC2F6999DB161
EF7DB88DA4B0C592385D35F705BC2A9B1075F1B1568CE34A4F7FC812BF766372
E6F0277D8604E72E2594DF545E359F2932DB2764780688C794121E4A50AA7CD6
479A34E1B75657B41FFDB8AF1C9E3D3CE95EB410E74A1A29DC16D7FC12AA69BB
C23F9C6C4B24E6F0331C3747E378ED0C634370C3BAFFA2F1F9A03CCD801C4E1C
6911750F761F9907A438DDF4506C6ADBAE868F8E3D97C83E366A89B60E01C8D8
AAABC217C07193F92A25135331AAC542A41BAA9D9B246CDCDE58236DC29CD0BD
4C7842713E95F5CBAF73AB6456DF36FF580B2F42E21C6902705307EB16D94092
A85D8BF6BD657788322EA6A7F874F53F5EC3D5A4DFBE35B5911AC6E218ED62EA
FE23AC78C1FD52C0591102D74D3C6FDD1935694B7002E61FC34AA828BDB14CF6
B81946BBAE9D2B044B3F72DD84699E5735D7A8A57091D3709FA9D5314AD7FEBF
0797C5693895A99F6E03BF0F19D8246951FA87CA9FE08235526B59964E529D71
4203D3849619EB4D842660AEDFC5430F81C552C6AEA6BB170154C777A63D6404
15B9729D98238DF0E36467F8AE46C4A0A633D4B3F8CFBD1194BA8E3B5F981868
3EA2F04EE0AFC3AE4DFA747A1706F7FB6FCB5378D992B8498043D00CFC47D2AC
1081F1A0B01B07A92A8282B3EC6B7AB485F98415
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D688629145C12242C6951438E3E6CF1B83239570640
6F435246C135BE54FDDB47DFB318A7885941AD2293441971A713762B780529E8
CD5867D3111E875E03774474BD86F6AB95AE1170DBDA9AC3B3376F9E5CC26905
718DDD07C6D4A010ED791CB407A7959F6668F66D3D48597A0D1D29BB25924706
B0BC0F896A006470C97F9C400CA7E283E58B1EFDF083A5E8E4B299607534E588
FF88BBE199A76734AEC487BBB103A8547A0090F0342D4DD266B9B4E40E5BCC6F
9D38A98AEC711A55C6C0D1727985D1D1F0CF0362D02534F7BD45AFFEE4A23EA1
5D91EEFBEDFFC59EDA04A147FB51227A5AB0C13DBB37343980D51CDD3524F0B1
46BB99BAB1D6B99D6CD383E6B58BC879DC734DED754FE99DED43C5EF4A2A2877
24BBB8E65FE1141502C1218C55773CA3C6D3D4F54BEAB6227878AB001472B32B
D540B24672F7383D02DD3E4310B29A262C08F61713E439B6E14230F12883D91F
721ABD116A40698F26610853E7FD07547B399E7C89DC19215FA388179DE4D224
F19182BA7A3CAB49A2EAB9CCE57B8B14C53BA2265A495C28D22DAF05587DE20C
6A2FB7BFB3FB3ABF1671EF09909A6349E72679AD57294AB13E45AEEB8C6EA105
696E341E48CBDFFD0665DDC72FE8375C91FBD9035841767258B8213D6FD47324
B47C81CE0D182168ACDF7CEF71ACE336CE5ED04FA21C2C7A8B147379A417629B
F2B72408A48EB92A45A18D9938F36020AC57EFF11019A0D416AE378F523A3A0D
CC57BEDD2898E32175A0D741E384B09E507BC1668D127A59D1C07943A5C720C4
BE1B5AA05819329BA90A6860DC939E6D418E4020AFAD9B94D440D41D9F3FFACA
55A9F6FBD5A2798FF873B61D70DEB73E750342AC615286E4AC04B289D3EDBE86
B8052EC8D21C1F8EAE49BE6FD22C33BF48AC15CCE2A38F34BC43A962C6AF4BF5
E2E6B7FA20F1781BA4CD3A2F9C9D927274A732813A49A473EDB7E9886B6C4560
56830493D081A46611D41A85C25DE6C3BCD88795EE88DAE4E78A09737FFC9078
36765AFEB1156668168BECCC7772E47CF6BF7190253496D113338E6BD7CFE073
77238B9451BFAC9E5812B88070143D1E0941C8060C4236DBD4A40907963920EF
ECE9563561E742EF2EC8FC88ECAF45DF04E975EF2D26AD69BAAEA8AA9C694FB5
C708241118BBA58CC9DB76E1753A23E0BE85BD9A4913F440E35EFA2330353149
B7B4B29E726B4B8AA1B37E2965DBF1035407F8EDC67667F3D29945A3756C466E
26F9CC66F9C72FE9EB37D874127EF0ADD2B140C0A416D1BF66375A9F0C24B9A7
7A04B69F3A3D26364107BC508D7E1F190B85622DBAF4D124E30A044493606B0A
346EF75D3B05DF78845982069EF274E2C8444E2087CD4E01113382BF31F6547E
A3F688E340ABAD99ED254B27CBB7168DD0F0CD71700B0AF1333627E9ABEBF912
8629D85586F1E197DDA251319C1D8B6EE3880D8F000CB2A54D7A3A8838BED578
ED34AEE6E13F2921E9215A3857E43A00575CD528223E7C197D86A9D71F49C307
CEE079E09E72C26B85E407864D095B874A66564AB03E11257FCF2E2A4B29733D
C67AEC898B5BCDC1F62F49BC9EDF1C133728B2B11D78E5C8AF509B44C905E6EC
730260B5D2C0B084C39F62EE2B52A31EC8B2CBFEFF4EEF4E5D3EF3B6F6226A4F
21B849C48DAC14FA6A62864440E7A447059402A036286BFD89C328CB6EE3F9F3
374FDCFCD5E59E96F896351BE6EFA981DF891DF490B9AD161774CEB23EAC9739
910D45272F59DC6A6016F3F96D09BA70B5CC465A2594B2A6987BD0AC524D0529
1842EE69A70AD7E5F0C96AAF44CD768C23DCF7E48B9A0511CF7B921B19A429B9
BD1AB0CF865E950BA568E3AA73C7DA22778E39625B23AC3E7360F6335DC87B11
353132266B5BCEF09F3AD995391354547C36C3D499CAE7DA524C835121C792FF
55D4D76E176BAB680146744A962788D5A780E1EE19994C46E2FD49D914A86266
789ECB40F5A686DABCB3EC885F74B9F468CB4E04DB61BFD9EF2B5AE32F6E1AF5
810F372C9E6EEF7CB68ED9E6329A0D07889AE540DFCEF82AB603F22A73FF4ED0
492D0BFC40D8DFC989DDD489285CB3C2705BD50ED17B36A9C42FD66805C7E698
5DF0724AF8DE40DAEDD7289CF0B91838001206FEC51AFFC11F382170213E9767
E5EA894F5318949742273747F12EBFEB323ACD02816B11AA438050DD87ABEFA7
D37C34C5D8C779DC2F3863B8FC176CD5CE76C7A0E3DE5B6D9FD6E80FD55F94B4
E0A9D97869E4061BF8760B7A63CC8A74364A37E1C15E215D64B9C33150DC2594
F097A36B12D6D26A065E4EE1C4410E0BDB2FD02B40B20CB1ABDAB14FA3D40D51
23E277AB621BBDD218FE0093CF17486EC09AD0E72D5B41D4268C99B234CBFFB8
FC84E5798ADF2911826DD767F68BB8313EC62F7A058DCCA49ECC9C86E7A3B705
4B4F68B9BFBACD88EC30F7D1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E08614769C017F6D4F14C52D7189D4AF8CDA367D8B04CA8D3F2307C
0A7A179419A80695912F456637F539123745CA8E696E250E0BA6B7C6277394E5
98A8799C29B6272613C152B0CAB05F3C7795791EC9AF2BDD416861A3D13FA858
BCB6ACF5BDE40E5DFBC1A171A7280E8FF4AC0D4C8A2199E9E2BAB5CB9131A76D
EAC166A7C449A549EA5111F1750CA2C6E1EC6F00CB6C62BA52D17FC66E06ACC9
1E6B858F9393AF9AA5E69F799E01D301B647DA57225C2920E3BCEE9D09CA5C60
F22B07F24A26DD8F4D6F9C78BFAA8D12A21531E713B80CD03A5FF4F3BBA2AD82
3BEF7DA8C97C30F1452006AA3B1A168483F6EDC4089ED02E567923AE6DBBCCA4
8C246A080448200C2A29C34AE6255BC79B73AE14B980A7C357681BB0962894CB
DA32FF2B70B21AF4D158E0F74652684A7150D0967F83E13EBBAB33588541AEEC
0DE8C53851845A44FFB46A93CEE3E8A0263882542F7F103D13C367EA8E1ABFAF
6486A9DBF6668550BE7858F5790BC87C66492C0FD34DB08EDF842E1AF58A09B0
85A9B7FA402029FE2439769D67DEBDC8AD8C861E90E5322951A2904FD702766B
36916DBA8F9C96141BBF4788FA435556B2B4E1B37DE4506ACC4224CFC00A8F83
33941A050B51B9508758F4EB2DC074D799F5116296B8822ADD743A043F9A6426
88D10767A9F99A072BD4C88CB579B34687BA4953B96DBA29F33211B12A0215F7
5F2F873E5074A7D593DAD0EDD97270FB9A87BE870321A49958B10E32850F0148
68E0A1D795937E61D4556BCDFB7F4DA63A884F9B4B07801D30B1357C3432D6D4
7B72B7D6040410C194EE5124ADFD7A40914BF569EA1F9CA8C8897E839D262395
5EDB3E97C591A3A5927DAC229EEE864B8C0F79ADBF88C0E6C41CC70D9010F07C
1CF9C05960E34FABB6C5DA4D789E39F35FE01F0B22BD9C63B3098457716D6B22
5EFCD0A960F3A2319252C7A0F73A4770E056209C14D721A714D713D5F2BFAB32
EBF815DDDE792B2556A87C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75B6B271326A2E7B313EB4598DD7FEA
4A5D95437CBA46D85A5EAD76FEA956126B3EEC337FF78D906699CB9CD7B4012C
474EB33D12DFABB3BF569214525DB9B2D4B34136FDF936F96FFC813FE16DA5F7
9B0F2B3110B1F8C90170E014FE8F31A5FD35CB74EF0FA13C6DA74D7264618562
DABD7DB8E7F480D0521581902848649AD3EBE39E618667C59EA499B7081A0844
B6DC10555D27819E6CAA1CE453A7A68EF1A3EB2178BBF9B9BEA9DEC679DC10D9
E3553DE260FFD590BEDC71CA9AD4AC12B09E86D933AF49B4CB901556E63BD639
1B3C3C3C80C46745E1CA7983B9E80168018E04A84AB47C854C73FC58A393974C
1AFF488EBB29B293905951355C4D4A4F65BF1A72956515750DED0B87A8D3282C
72C634347874775B6F29EB873134F6BCC2EBBD3703E9619F762D64128A18C957
22E6C0DA907A17868AACF3229C176FC26BFBE255AD62737D234986AFF04FF03C
1DB4D1F2D9F60CF2E4DC5DAF88EF3517A2D91CCCBBB8753F92B3E0CDA5D26523
B84CEE3A0429655F8F25C89E65074A52CC6047885F4105DD62F1FB8CC7A4CFE3
22EBEEE15E3395B062B933EB55FA589373CE26568F78981B480F688646A5C8C5
63B8FAAF19A1F6166685C3FDC27532C931AC8B86E81FB0223686074ED596FA6A
922B662575F23B53B7C6B245AFE90258E743F284E22E30D2B418CAE285AA38F9
FB436D39371781DF4FAAD1CFF3BFEAA81F5D11DD76BADDD8122A4AA44B9F863A
DF8127F1FC35DB9CD34EBC684818AB259FFC3C7CE34C9DAEE69D70D010C70540
3B359BDAA5B9ADD10F6F7F2C19136157C6D83B33313266F1BA8B9E065A0C831A
47D767D4558876E85ABB0B8396FEE0C3327CFFEE23D0D7C24466E5410DD289DF
78C335D2BE90B5C581D536596D97F1F463EDD0A9C0118790E5780C0AC27A05B6
4DB13A023A3E5225E0377ED38749AE1F7714AE5E1D649A3AFCBBF060F416C0B7
47EC5BA54AA743154084CCBBC2A47037DDA09D9601412F731039746C1224A29D
191D9E221C06A7EF3CAD09AD5ADE65A51B6A915CA708D66C3EA93A0BE63CDF0C
D9A4546C9325291D11D02F4C2284918795A5B6E6CAA4CDA0371D452F65EC9097
657F51E83FCC22A30D649B80CEFD9F6FDD51AD33D3DB732FF26650A90912822F
9E77D8AC13393AA1B04DEDDF6C37B2D1DE50258300B9BB455AA872810C7948B1
EC866883E78F23DC9DFF60701F4F7C66B61198F8066DD493031D1A5EF91231B4
470B5A034CBA00791EE592FB4DAB538C280A8047F6290E265C8A88331305E67B
EEEA9A03950593605886E125446E5CCB325BF943C3D7F32D49651F5744A27DCE
6004208003A95DA1371E2EE456CC692DF7B71EAEFA2ED09E82012484AF7649C3
FA87A3AE44D93FB7A0D1A7A08A419AFFF7DF7065992B084D567645EE4D2FC29A
888E5E51A42920248E4BF77A7876799B1FD856AAB0EA73DCCBF7FB5979EF5F01
2CAF413DABCB3290E29A0CEE18F02BF93ACF5E651F75F1C47F2699BD0DA86F7C
5E18E1895ACE4B125EF346F608ECCD4DCDCD47DD7717EBC78AE3DDEAB5333174
18A8E967F635ADA03D2EFF80D463A521EB069C2B6271FD736442AF38A52EB58A
59D7A62D97171B45D2A6AFFB7E617C9265B466295CF70CB228FB295850D653FC
3FA379FB4FA0AD9F83269A99D550366B880AF05F913C074EEAEBE390144ECA2E
ABD1ED2BB6C54FAA70C9BA6C6794E3AC06D503EE876C915252EA75E6FA113380
E4E2A0CEA310D96BDFD883642BDB55525358ADA70C5ED0923B060EA6EEA5B735
D0D62E41842C07B79C0E8DC2D36639668C6CD6A238A166CD71EB78B443C9348A
21381CA53438D5305C70A416567F5EEADBA2F6F78371D3C4FEA5ABADD0268BCA
CE4E2E123AC89F962A94719AAC882E5F4F1DB0BB2D0B68AB58A2971B86A2F1DD
C8503FA9B4C5CB1FDE6F0DEEDAA2FE214955FAA891C7AEC18EF33485035BD4C4
7A61421FC2EC1724DBCF6E42D06B418F7CC6D43D43344D0242F5647C4B7D10A1
2937EA59229885DE2FF1F9AAE227FC7C70799C8989072BEBB498D8C5E2CB3113
7B0D8072BCBC73EBA052FAA5311407ADDD4BDB10613A860B136B85BFC9439A37
411A466AF67E5372FE007CDC6DD09BA49569AB9FB5659AF715D308A82D99CCFD
E7136C97A6F58A17DE0C8DEE0F0311BDB0253716CA92256CBFC731566966025B
B984A519FCED4498E4A4CD61BDDA5F6528C1A803B3E1AC0B42621E9410044946
69BCBCDE44BE8806D9BDB3CCEC3EE3C80AD06EE105AA7D96542F152AA1ED7554
DEBB52B79035787CA842053C119ECEE2F49FEE58257EA6F673ED5F34F1C1D20B
609A152EDECFA2687687FD75DD0D1B7A8652B30AC3BEBBF1041466A7C86EB124
857D6C7BF995035406C64054DED8BC381236C47E40D5C3CCBFC37A265AF506B7
5CB8F498914E17C88A9317DB23DE81CD6B0FF6176C13E0534B375CDE3CA6DD71
4546D5CCE9171FE3C81517DB81CA5A9C55306AED6DC20E8725CCDBFDF1767ACE
6635BE8ADDF24026ED1D06839C1347D10F3A4FCE7A438E9129F4DB2867A9FC6F
3B6DA51F9188DD862CFDC0F7B123089A4524CC7CB3DA0D395ED4410A1AEB659C
973D52B28D6CA92DDED5BE33EEE8274EC370F6E70DBE10E747E1984A1C41D701
E6220B001C5FC668C84C08EB2BD4FE16949794F0A487F9B4CD388E45AFF917E5
CBA23CCBA7C46C157E3088F4D1C99603AEEE24C8E12F61C371D29A74A310287E
56CD446FA24B18FB162042A1661D656C27C4864FF69822883FD8A04666526EE0
B13BCC0C763CDD3627A3737DD41477A8BCF7C9E4ED438464845B950140ADD971
D94571113689C1751C1E337AF9C22A2B3DDB491260E067DD767367DAE1B686E9
C748C5C31523B52641B2281242D1E85397223612744C25432992925546D047F2
BB9EBA43ABBBA8202D430AC56793DD7163B09607810A06BA0464A9EF6D1A9940
2E8CE168702079C5036C5C41344CC7081E8B778B0AAFAE9A96E183960EC2B89D
57EEB4E8BF20057979A98A4A171FE140F776F1EE9F81371ACB9AF0819EEEEFF1
853D61C53A0EFEAA6C8CE3B066A7C6A2626635CD202D499073369925415B084F
754454ACBF44DCF4961F68DBB0644DB142FC399C46C1426F4FF72A744B8EED93
75BA41440D27C8AC115252D468CCF773F3D5F482480A69070C62EC32EC68C6C3
AA0F4A29839430F1998DBC99F4E035A4449586122746ED4917BC8493FA539B98
E93F5B9CC9E1F2E48203BB19E97A02E63F8B30EBEE9FCA1B8B7B45FBB5A3D203
A9F5E0CE1DD74F1C6081D61317763D0C226C1B003F4F90367DD0CFAA01DAB7A5
752742E65D77FEA9864843B27572914CA4189749A74DBB0EA1CFAFCDD853C30D
AE8F7DEFFFFA76B640FC05A08046169186702A68296C34F9D85D052DC85A5008
0668D9F648ACE56F31BE567026596AC1DDC11E23572F8A2F5CAB5CA87E7A6693
1F8C27992A0CBC0E82213C70F8FAB28C4E998ABFC56EB3670631EC013F696F06
BBA6E69C74E351C19D61778A0C26187408EA2A22AA7C602BE0B0A43D9D5C6F50
C479A81EDA7EB59197AD64F2E723E14E152D46F20EB109482768DB89F9D80B15
A0764CB951D16524B621E0A4FA9D650CA87BFDBA7D2F9B0C79E4635A10CFB39E
E250AD0FE7AFA3E00B71FB9FF3F957634501ED2FAB2017C34B786183FAE20181
ECEBFD26A758579D770399E200761F62011E20C1121A5493374B3357EF1E884D
9AE0CA20D592749784164E51081B57847EB7A96CF69DC3B99D7E681A98A334B3
EBD99D8110257DD0B832CB4209074A589041EACAE6769B1E1BDD616AAA66BF5B
6754EE7CE90EE8C3B6EC620359A8B6BF01600E4A11FDBAA2689E99E8FA8D877E
D4864A177B0724F860C76601359426E7A7D188067BCDC4B53CF7EA2CCE9B98E1
386A4B21E08EE3469CB1623C5B26B49B21BD4DD5741495206082B647B69C9C0A
95A8E81B3DC5D54F473D67AA4E0B001530F5C1B8AEF5E26425A121D2D3EA73BA
B53FFD35C67AC9C3B91DF9A4D26971897589C1F0806C014F8B9B511C2B3420A7
A62D9F2561458A1ABAAA7CE8CAA45A9CF32034CD2106773B44BF8641403FE386
DFAC2247BE094A885352C70B1CECF3A803D037ACD19E72E02132283C34E1C1C2
771321F8DF446835CEB85520A70B252F935F7CDFB69A1F8A67E100DE4ED26442
237EE2121C14F116A1114838B333EF11ACB00673B7AB13AFD20D5219A7156212
A7B57DD9965B1658336AEFC575FAEE1B5EC42CDDC027C7AAC514A42B45AD641B
B166A82EFE254436F63898712D63BCE010820E28FAB0056987A9C8301084AE87
065001A8E03F79D063A005EBA683342B306C3691BF4510C724AB326DD8B68F8D
89E3A21E12FD05D033B7BB01DD0B9469C910B7A7DCBDEF0035946C6E3002646F
CD01738AACB9AD52BCD0D01E058DC7A4E23C0F133241F066096999887AD4D12D
DE20E8116EEC3497D2D84B19F68EBF7125FB02920466AD9D3E2059F46A636EEE
E6A62B6E1214CE593C8E6A44DA28605224EDE522641BB0C9DC62EE166334B991
9AD6E84C26DFE46FF64199038C006B74DD8D060CE5FE0B0EAAF85F92E22567DD
C967BF400AF513EDEDEBF50C61D9A387F5A1CA41DD1A493A88B3E8BDB15D32C5
B35103B8B35AF058F9C71DCA9348746900FE665375E9C805A494EFAA0254B867
5D83F5D851D392340AED402E9DFC0045FAEC9110B7F695DD49F678A39E12B39B
2397D00BB653C4EACE2D6FF88CE4A78816E7F6D993A7C95B2B951AE2CB6E9653
DE7703EAC3383DC1074B6145F773517B790FFB540FC1AB69BA768310F537D0BA
579783B1614D7DFF502C408BBD0BFCCD6BD8E3AA1FDCA7352E89E662013FD103
33512A41B8045A1774C2CD4D57CDD31B28A52A90545B8A2B4822B3F8318E59D8
99C05E423C089EF4C750437A96608C10F7370D67F8BEC315412BA9A18E9744CA
C5F1C047BDAE3F9336053E2BD0287A3C313E1F43F07D3DDDDE40C2AA820F55CC
1665B0458EDC336CB029F5DC16A771552DF16350026D4C49D6F39100C86650A8
1C81847C0A16ABBA26A43AA596A5D16B68355F68A29263C5559C5E7E303FD797
0ECFF4E95A64E1AF8D8885891E6C7ACA5E857BB91EE4F1526DCF6D389B34C824
538EC663458C94BCA7D9D30679F550F56411D44C9DA21565B233EB79DC69A1F0
5F14D6AE10D4FFE56A86A59FFCC90A00E691EEBC3E6B27AB7DCC7A333B83B6D1
CD3D562EDF30C28F1C48009D974C40A619E69C215DB07F7726C499CC48943A08
149103FBDF1B4DA7CED8DB164288E97B5D84C2DDE0501AF37420BF81ED483615
30BFB2C774A5D1BBA070830EA0C3BC5EF00B55D5EE9AE38A356B67C741AB0311
071E652BD6980DC63513D2D967EB9B7F6B38E3C04873B4B58574AD0763F6842C
F58F4356196C1202C8C54BADF3B48BD6A3C0EA6FCB062F85188250B9E9257304
114EDCCAF87401373886FF9BFE508C3A751057316CFDCC19A5EF7511324A8C31
2CBD99F9FC9ED41C012CDEFDE74E68E517BD56B44630B1A6BFA438FDA7772A04
51CB8140DB0DAFB6ED302977E6E628C7B107212B363F9AC88DA9841B57D1C7F0
962611EB3ADAAA4802F999D739FCF0016FF0ABAA9271C886886F29CF39B45B12
328C9EDD8D08A8B17C7BED0D9F20225C3C204A716744D3D19D52B24934A12225
592CEA5B55AD65B8D966406A86A7FE84048B3E64564ED0B6A26E6EAD15D1FA72
7896365ABF44587E1A890283897AAEF7BAEB688CB5025D9994541D9B29D7208C
BBBD76524B4084D5DBE1934628528987ED9D64EEB23B07EE7D9EBB4B4121CE79
3F3E7941CCEBD1DF1B9B2C4BF760EF7ED4B9FC5330FBF72C20FD2D8D13A63EA2
CDB0DBC05574F7670085AE08BFBD0425E1C1A5537DE2B860C90893FC6E41DBC5
4EBC143D45C196E894130E18BF417B376266C585B6F3B17B1E23C26B4279C37C
49BF3A0773D0F7BDD47F29D25A92DBA2AF88984C142D44D9E7F49CA94439534E
E75D8B82DBC7BE9BFE27105AFCCF5D836C1893A1463C96AF729C75B5BA3DFD65
E2AFB9CEB1CEE17957997FFB4B64B2B3B6619FDC7541557940D1A22BCE7616FA
610E4B920460316C88FF71B10436339A5541D8B6827760CEF6C16DD338296787
7BFA0B92F7A38021D66F223A6ED2EAE1534A139466F7F62EFEB81E14CEE46206
D78D05B296152A7B9819D4C64D1888EFC097D8C3C443D24E1D49BEAEE01747C2
5241C75A3E4E61D4A58B5196251D74EE1703612D0E3E69521D8E8AA2FD1F655F
5AC07D7CD353D9A69D62C98039BCA169B6BBA9445ECE48BF9CBE57898D2E641D
9DE2223F4CBCDD02C92C6B662E6DFEAEFCD319C14ECC81D86640D7799254D7F0
1D05370B995E8562B37C851B8D6041CADE1FBBB29A08EF49D8CDE067C05A7E6B
BC0D85756EBB96B502E72B23A023E4DA02D77D03BA99ED9DDF7D13499797B79D
0F03B898E5104FC7DA1A9AB3C09DD389D389167E9C304DCE2F78E002604AE05D
ACE3CA9D30E803A7E943672A1CD5715F339292048488706534300D7958346BF4
C4B8B877F6850C5D13503F892E2AD1CC1405A76CC4A6F6FABD063ACE8A01DC45
383306CED44D6EB5BECCE84F57DEB5F09D18EC72724D2DBC00F282412CFF09F1
D5F611E8AC05D2A5D0599EF54054B02E8DD02FC1121A5493374B3357EF1E884D
9AE0CA20D592754008DC03B613D3BCB3784407905226AC4AA63AFB2152710598
5F89A459C6EB24A9BD700BECF6B88D1F1B777A08B4DE076C213ED883C1B4C6F9
8256B66E608AEDB1B49A8005261AA96C0193B195DEA33659D1723F744EE404C1
B2E5880522F4837C25D4A33FD6693CDCA2BDBDBB7BEAA2FEAF88BE6DC191A3FB
5ADEF3FD6B2286FC177246AAB7603248CA1D44B3B6A5E08DDA52F4ACD3B9C99B
013850A7F8E26656DD8A36663CDDF2D7A130D2E088EA3DB0202AF28647D31AC1
9E694472A215D2F495D9F2B2AF4BD8634047AE9AE65BEA57AF286EC64014FCE7
13643E1C88016D00286C69375E9E0B1B272B51BB1829FEDEA2A17AAFBAA5AA9E
A029F95B828F816484772203F3CE77D71D13937F62712B8A590ECC217E6BDCE1
3F09BDF1895EE87C95D6264824385F1E9C6AD73172B8777A6A9C8E7BCAC785BB
DD2D86B42FF91FCE7E06435BB2940232816AAC12322CF101D2820C4B916D2585
181D54F1F36A85EEA336E6FDB83CCE8849508AB9653D3002D39B438090B839D4
3EA0AF466FA5B60AC4490AA5DB18A649C442A105A2F615AF7AD898C9CCA5105A
687B74DAC1CE89B91646657774408CD94DB0AA8DD8DA1FAEBC9263DBB3C52D6A
5654A83BF518CDD4370AFF9D077D74D8C7DCD2F7AA6305E32874C1AB219251F6
AAE4D6D281AD503BF9EA7275BB9C0EF79AAA866A8A7C28275E5901FE36E3E005
23AE09C5ACBE8B292816772463F644C7D257C583A30090535D340DB70968FAAE
D1226A949C78D176733CA1427953C99DE05A3217938C17FCC2A7EF4A404D94DF
CE0A74281FD5E8909C07B0E83CB291B89B4852A379E8315596AE5D99D376580F
E5BFE1A7FCCE35DAA893E5CB7EAFFDF1020026AB90EE57BC17191E745696CAB5
C2BC92E5EC473332D0327FDD1B8EBE6504EA7C1337060BF4040640FD9A93842B
429B1AFB33D68BC88143F92B5D64DA3F8C8E5C4C4D5B05FC33F83790ECFD7641
DF3FB94289E2A539E568702079C5036C5C41344CC7081E8B778B0AAFAF4C6989
A98BD9FFE2CA8484122405699CDF6369ABDDBE922F62589EE9832FC6295AF61B
462F8DDAEE658222AFC11186BC2F48160E257BEE60576DF6C006B65A81BD00E4
CD5741D8C57CCF85B7887E6A7F6B6E4F61160966A858F89A147695843FD9CF8D
6BEB3B9A8FDB3333B694B3EE0AD149B91B48826675A0963BB33C5D84B1413822
53408D10BF6E72FEAA21C559B945A22203FAF11FD52ACF3E7E0A2E8F726DCF29
7BECFB7A93B4B422089200AAF810C16233C87A1B4699D58D1C7E4B5CC4377968
1336223D5A4764B007330E8B09C04F7D75830A646B007A9AEEFEEBA5F6A8082C
5D91442EA1B50E761A116748EF16F0DEFA91EA5DFFBCE16BE8F29E054D8AE682
3CCE5FCFD44835D469741F1ADE900657709B4DAD35578DD3E41C39A5C1FB2F3A
34AD00EA828769273159D4123E00A6BBC6A7AA8651C8C8391C12719AC3EB6A76
52B3689830029B2443E19638E7C6E4B118CC665F4B861D3766A241400563D1B9
2C897D83ABBA76105BFF7E7929B8B36A0F3C383A0F181F4087071ED8B4A37A8A
4DBE6BE96708A6B5322754E1C3F70C7D6D2D4D97AF75553E5C2D06D80F724DA8
C53670D05CAC62BB742CF9959C79CD89BDCD75208D0066A5D91A1BD801EFAB50
C26895953E493CD5E3519C588AF301DB98A91C6F34AA573BDF47829A0BD0C1FF
5FCC3BFF05318CC3F90635CEE5E03D4910567FB7EF2CE1E413792333087E98A8
C64083C6E51F0E0BF508297838F2BB57935C81CF7CC61260CF2B227DED699ADD
E69F0A8CBC99AEE15A580584441A47E10D155AEF007043D73C5B4C1592B0997E
15984F42D4B724DDEB44FBFE435F99BA81B3F0D55900D5F58F37B8866DE8F305
2007F9104A985EBCA7E545DC35A60B9C93D1A9DBDF00700FD1893020294530B7
CBC274729C142A06D14003C671AF4B2C820886CD0DC5CBD97109E9E4E462E58A
293CD1BC4E240BA6984A686E5E182D930A2DC3691654340BE93B8E8306066CE0
04F901644D3A8A062AA13A9AB0B05CA3B0D56801301784108F18DB3ECC698A6A
7443C25C291BF7DC9F22EFA525871922575245D78CB42F10621429142CD2A890
9A6EE08ECE7455EDEA610D0FB69A58D32F41B39AF179DD4FDB94B618898A7BCE
7591566B1881971217CBD804F9D1AAE8467481D16E8AF6539E38E8A367B56133
980A0640D534E795EF9019F887473996793F6FC92DA1188DCF06C2E49CD8D7CF
9FB27D90834AFF6D3AF0118FBDBA369BCE04909D84FBB1F2A480255E94AB7949
5771AB8A1AB6D14A48816915A6E62D71C1BCE41C8561C0B04C23A686825B401F
34F07D2CFE68211086CE3F6D27219484D3D462C1C68CA7FD651AF167894B9743
045EAF35E6A157EC57A9011C0DD80E0C07A42DCC0E1BE4BB40B799F0D6738EB7
D296FDFB736747800773AF74ED5B7B4E0FEDE32098E130FC9EC2ACB05B8F7F51
7BDF4F3414C6224B77809C75D22373802023DD465F60E5E5492F17615E9E8DF3
0291FED98B2CF78378088636FC9AD91DF5364D359B62C51134B7EF26D10EE056
85EA4B31E5396C4284C6B27C1C7C3A820EA12732D95E3C21CAA8F9B9C27FE8D4
0CF388A239D55F0B521B7EA7D5A39787EED0C73F284B82908FAA63F7A90AC16B
AD16D41CCFCB9F98E7642F0667F1E8DC707AD40BD7C35EBF67E940285E59CE23
C197E8BAB299B856C408D28D6E9C0927AF998EF7264771E283E3728E345F81A6
863581C22A349B8AB7B3BDBC505F51E4AE3F360A382EF21A8DD920396F7F52B7
D55F12FA9A439402454FC951E4319A04CEF2E45C67D82B8117651021B8EB085B
AB7D12B3B5F1AF9C403D65CAC4A7A1FE98C3D5CC60F3F1A0E8B2BC9AFD506731
5E4118D72A7F8B10BF6E72FEAA21C559B945A22203FAF11FD52AC8516D62ED93
230AE24A159DC8106EDFDA3F4AE4ACB34E7A6557D249AFBCF651BE1ED1687A01
278F81AED807A837CF2CC29C5B7F2DDD6DD5104E04E810338E7B485BDF25053E
194AD04DA05B8585940B8B01DB390A6D1415DFC91BBF417B376266C585B6F3B1
7B1E23C26B4279C37B9895865704B3CC39DA6270DFACA8C3611EDBB6DA7679C2
494139B2226BA59807A4E5B3CC008C51C13560F147958F7CD9F7E078D1DA94B7
D89BD873CFBC936787F84DA5C60EF766E7D0E4EA7556A9277736B514E7BE15A7
F9A3330FBCB6540E7EB3B2ED0460F81AB38B9240BAE843704A8C75794C620B23
30FD5BB8F5BC59A60F63CB797C0FF629A27AAFD876E1D5EB11DEB30BF7A3CC1F
C21E7394B2EA71794E9FBD38B14F7FC7DFABB3BF5692145258B00E393417537F
7F723DB71C80C8EBF1D239416C879C84FF64EB110B540C82CE4A83C0A4567FE8
59EBDFE7609DEB468462CCE9D0CEB6AFFC1DB954D41CE677D750AB42CDF39605
3B668EA3FC26B184488B73E32595B2F9E70F7004EC5A0C83CB1E8577E6A96552
ED07652914BF002A3960E85B250CD253802AF02306DC582AEBFCD0C91057A8AC
86FE1D6BA10A3CDA7A1E5726FCED59380E334C03682923DE34A7C05AFECC8786
8D475C5F8015B05CB9F09F7CB9E01100944BD59BB75A46BDF6734EC628DD8263
C023830270E7AB53D1AD5876C07901A071501004D71EF8BDF96D3DC8C4527837
DB241EE7FEDD285F249B262A622F386BF7342CD03BC49A6759C877321D70FBC7
D7595E5589B209749CD85963469855157489CA429749C9DBBC79BD59294184EF
54172447AC57A8B69B4DAAC8F3F4181E26638EDEAF429CFBA86FFC5C0E993FCF
12ACC0F66417F29A21BEA925881F93F8A29AAD2016384F65402C72D06977F200
F881FC5238ED936026B990B444882E09BC2F2259E3ADCCCFCABCF05D964D764F
CB9026A99CCA21A09EF714E4BFE0D7A1352D7D4274677B103477A30A58E0EEB0
88B60F3DA6B9A3AA97EA25CE5DEB8FF37B7A9F67F242B92F71193D204C1179E7
E5120F911D26FBDA60DA22017B7DAC52EDDEC46158F508D7AB7F99ADD773D29E
D3258C6DA4AD3060787B31EABA5D487A5315060B24D733F00FED1C052FA2DD6E
D929F2336F1994F81446D6D790BD49B512DE1EFB3DF0C2A85DB7429BC242A763
95377E831E4FD8D7385C115E229FFA8A794F67112CBD73CEEDCDBFE9250FC166
EF726FC65FDA29EDFB3AD7FD67BE5A9574D5351815A959020591659CF35B170D
10B6232D8CD7B7A6CC203EC601F9A7E2A4395ABA340655223F25714419B8C988
456CCC24B81FAD59AD71A3EA6E5663105C4987B4DB7095DA38628E622CADD9CB
BB97E4DEEE2D99809C71C946EB77ED556CD01675A5D45FC8B81E8AC3027ADFF7
DBE2AD88CA3261C59CFC1EC0418A940B758E20F26CA64199D2B76323794E1E12
FE6F8C7D44EFC4457991E4D6922ACD09F2EE5497E8C0A748426DBBDFB8866ED9
AA11865B538D351174CA94DA51B8108E5AF4D0E751BDAFFEF696F87CC193C807
E4D0D17C59E6571FE9870932F6D281F0F9C45F9969A88E05652EA1297602A5FA
BBF23B1FF76EBD2DBA3976EB3E88CF2D274E67A6A43495FC23F52CCEAF5249F7
6BED95E5B204745C71EA20C4FCCC7A4BAC3D34E426D7D9D908236037C83A7097
BFEB9F5002AE1230C4BC5F76AD2134CC4DDB0863C815A7944601CEE9D1574453
12EE9EB81873DD63A1BF35ED165C6F38CE44881BC3306E363E443C146F13D4D1
AED2BAE302764D00203C21F1D051AEDD11F65FE0F14DAE37D9F8290D5915969A
F272C2205E542ED8737891E67D1D7EA1E588A8C8499A8917CAB23F00BC124FD9
3096D7653CC8E3B4CAFE23E8BEF99C8D9B8645A54B519859AA3A4DE86AD607D2
F962729B4543399424634FB484508218714ABEAA80881D2272C1B9691FB5D527
4499BC1302ED15B071BB90419EFA4512B1227E6D1174CC7D3D57B3EB86313173
3D7FFFE2E60835E8E570EE206034708F535F9BDEA30FE832C4FB773F52E37A9B
385E8A28F90649909FF4C058B2A02018ED03A84DBA6AB0884C5D19951E836F23
109832853C664B53C4ECDF81B0004DBE82B86F5265FEEB32602DA2B5FA880C53
7F60E1394571392C3ABDEE834B9A083C4CC2401ED331A25863D89A01934A2FD3
C8E5DD8BF0420343CD71129BB02C719BC5709E9534F076DC754E1BEE6C8EE443
D62AE6A2C9A48EFCB71AD70A7F57BD11C7BD0161731DAD246E7D854F513DCCA5
3FF6D6C3A949C547B8A5CF52D9334892D6D548E3AEE8B60EA1CC2DD0A8B7216F
71B74689EB186742A76CD75A7A4B8ADC8F75DF47CCF6216626AAAFA4DFC47FF9
D123C4CC13C382CAC59FE7782CE421AFEF19004F3B4CB98AB646AF2243943EB3
E77E6CC38DEDBB2DB8BE7778936B775E1F1D61D7971649DC9608442D234E87B1
C39D7B723473581C9C1670B8A568F69091BF0FBC9AD619AF7C31436D863A7252
E1C1D2EE59202CD319D55DF84D7A0176E96317AA34217BC77B1E075A4BB99145
EA55CFD1D12CB6DF72E2982572E4CDF1C6E5BA5CBBAAF733DF941BF1D36EAFEF
4608F8E37A48E9739040BB737D1B0B0B2D33F7BCCA05E8E2DD8A29811E6DB9E8
BC8392B8940C458A64CBAB2E6D34B3695DD4022853D716B6EFD789B22311B2DA
54E1C30441451E00D5A30B240DD1FB8177DF56958A7F0936371F7864291A3B3F
753DEF98426130A132BE56C4043C9070F96241E324DBE45F66E1F2593276B50E
84078983F96A9DC950870C1B21E2186D8C4CA15E8E1CEF0A903F247467259BAD
F061BF5F70E4BA0CD7D2227F5E31769DDB5E76905BDA40053AC0682B3DA7C3FE
91CE83F8AB12322CF101D2820C4B916D2585181D54F1F36A830C130FDAE7922D
97BF0BCEDAEBBDA6BE7764CAC582CA55A0C3E6EDA91ECFEC0ECF0B5340E0DDD1
7A6381B58979C466F3B78C18DA0320065A0DB93B732BD6317212EE6AF5629116
2167E3044463FEA836F9BE6691B79CE692211A1EF01103DCF36D894D9FB2FFD4
2D850BD31A8B4ED9BEB72A57757B2CBFC6F5D915C260859C43D16849F479E7CF
107F0A4307D118828912D14C9792317664F116A483A555CA7345C7004C20C9DC
F02CDDCE250F72D212A657452810F9349B099A38501F2314DCF08578A30A67E8
D9B89EFFEF7EF9EF46CD604D79D4F83161C24A1CA3D97232656D15736C339C5B
FB43AF47577453FF94AE6547816FA917B3D0F963892C7A014A3AF8DD342F6BD1
F3124B69D9EB2C285965F4DCF207F6BE5A1C3C4AEB59E1A2D9DAAE0D6034B01C
FD3FE9C85FB68823B9F944BACBD8707DB2DEB164817616BA7B199767AC8C8E50
8E6004331487636BECAFED14399A3C13196138C2D5C101C315DE8CE3C03E3D69
212E49DF05A42ED088BEDCC2539F884506B18D6FC9F3CD27317AE5C8EFEDCCED
86BA6FF9730ABA850BB70534647A4C09D8B5EA9DB838A16A02EDEC8568EB7F2C
5F4813B3473BB57651FCAE9AB59F82BC234E97C220C0086EE913D280C698BCDB
B8CED18AA5245DBA8187E3FA1A4B633CB6598F3F77F3F0723B3CED8B093CFB94
1A711F25E4FBAEBDE4CC1F74F1000A12E26A6AFC0A86A2193A1BF363855450A1
7C8992099875EB2CE1F0FECB3BBC4F26EE89E4F31CCC0872C502A1C8B0CDD1D4
2C661C25AEF923E6760935EB5E9618CBE11F8DAE3F1BD2ED6390ABE1CBB68FA8
0D3BE4430E9C9FFF5747D0E3D11B30140CE83AF772E98E8CB3158C0C324C6C76
2D8B0D1C72FA946AC005A24A5FCF05D552D01A318468C9D934F694CC96CF93B8
17463535EC7FE247A0CB0AF5CB93ABC3B426882927FADEFEBD6F10986596BA56
AC348D139347382DE885B0C370FB1049461E4F38E19D26A744BDF888CFDEFF94
9914C4B69F50F6628F9EEC6842B799461EEEE8DEF5E7410B896BB3E651A8C015
BE75966171E735F5041056A43F90D0E6A47C2521C1058E8C66894B837B35AA5C
7691B72AD442BDDAD18F30DB190E4D00474400F72EC8D2A2347451F3EFA021D0
2B02DB6D083254D860E6F39D416B32570E543C37DF2901B611D9294AA3C8B1CF
9B3F22F0CC0EB2656F49D9F37E59BE7A2B30166447EEC1DDC7AE6E801DED2899
8CA418C4D0FAA36EB3164BC173C7282DBC800772F15E98CBAF92057BC238246C
A72DA4AA9C9A46A036505D0E6D9CF486DEFFCBF435A916CE166F39C68C8F2596
99950CF68B05604EFD0DBCA2B80861CCA95504DD63423BF603B14459B7C691BF
69A5ED671BB43BDDF2C69A19ED006FCDBA486654F111AA1C8E36AF6C4C1BF3D3
27115FB306F8D61FE1C0F54C56A6210151F90EEDC38BBB1978AAB97D4D04D87B
7EA37B5DCA4B86ED4542FF185720F18E949985A02355AAD9E6C78177672E6EA1
B6CB7046CE1AE19BCE97B872A00066E2D81F779ED80FA262C7B9A685F76C12C5
66034CF9666D854DDF2EEA264370B4D9928C7E98354F635FF2F3F8242939C880
8CE96C0BA0F331F23AEB27F54F15425AD9E902CBDCAC4CD6AA4A8651177CB857
FE26DD7F3CAE82407719F13E819159309FAEFEE5BEEE1F900B9E3222121B24B9
7DB7866E8CE52B81CF44DA540712B88E20F71C865A3C7B1B589C0B5BA0C81139
0F91EB678A3D44DD192024F7346872E84795059D0A12F0E40B6A05CA1C8B082E
81EE08E8D3D565E42987DDAD2504747CA08170936F0D6F0DACAB0DB8DEDB44F0
D2A1A33968FC95A08310FE02092E8069EB5701DCCA463B43D017EC46545D4013
8C539DC8A9E04D702BB3C7ED5A2802744ACA8E503A2E5FEC067ED62AB9D519FC
2C47E7E60191B995169E7F4196614CDC749AB31948571757ACA3A735ED0119A0
5A86098677C2F7E4E231A76E88F3034C88DF0082E6A8CCA6B60B9392171DBF99
64BBEC03013F324BD4B1E3053894C1987957698B8EFD8067C4900E70DF9EA4A8
76EF777384E54F076F82EC251D595E38D5151BE1944222C1D1B55EBB113B7C6C
1047358896DFCA5854311C92BDBF36A64A8A8FAEBFCEDB510A80A179EC5417CE
43C28028EB42D69DFE9E7E2ECF47D44931E96950E83E418B529E97AB7FB51ABA
1CEDC02E319A37EB5CEFDBF36492D265A37CD41B331A026E3D72A9FC0E15EE51
F97141125A74C5BCF61770D3FF36D19AB569AD0865E26C9F0048B1100D67AA25
4D7DC8EF0FD5AF6AFFE3075776440B9864E74188CECCB2A074C78B92C8573750
B91386CECD4A1243D269AA55596FD630BF9FA4967FAD0D848DE7F7DC36D8B11F
A96D8651341B0180318EA6F8F74453C82F5F25F7B759F03603BEEAB3FE7CE7A9
122E39AED7A194BE43CCCD09DC5A83BB6C66B998AFDD35BEEFE05CE8ED74EE7E
52E947AFAA87D26A57933BB6EC058698FE32291CF611A3077CCCCB91CDD1A857
949EE410BA7DCF000BA5716D4B7B66332209F3BB6C732E191427FC63A7A675AE
7AAC05A08965DF291829A64F790E760888FE23E05C921096AC073619B3EBFF84
387DC0AE4856109095A7780A665FC480744ABEF7DD9C5953ABFA381D0F9F5B27
9256E801340A8E3229BEE3DFB670B5C4CFA70C155B0BAF00D0B10D878298A4E6
66860414F5C000CFB1279FEB8FC14062F3DEEE578FEC854A89C03B61AD69B877
64A81AF067B6BC8D2E964FEB500B32ED3ED63FBFDC0E43AEE3EE3CAE154F2A78
AABA9E78D9E4275F04E2BF5463C5A1C471B6B549A569C60F7E720947950F2AFE
CF78C15AF1FB203F7E69A6FF809510749440EDA8415DCEB4F266BA674CC7F80B
402DBE459C3CC79AE1D2AF03ADBF5D625AFA29921A6B27A205CC15503BC31EF6
605F4FCBC99AD58058728F20C8D3A71BA2D3F48A9951FD6B2822789384F7D9EE
86AE7B2D4E2DD52B5848B220B04AABD14C5092F60F1C355420C8B79B20990536
E070A58988992B1EBC6837AFBB5CF335FEA295910569FE6DD5995512562359CC
821E8219575EA64BCEB453B81ECB10C3F48ACF10CCD9BD206F82D6B8A1738A1C
0FA311EDE0B84DBA6A611455BADE197C00EC3015D4507D2B764FE012876D31B2
2B3D0F991D394AE97E0156BB2593BC9B4C60462336F374D939F313C46A1D55F0
3E2E9FAB9ACB87B01DF32D9744EEB176A33F6190EF3A270698F6B9230D2E489E
31303F61A695B20B65DB5CC404B62D98C1FA97522131CE29175A0E7D978742CE
E7D5CE5A41AD7F4A2235D46399EF4332B8606F8473AABE20673348F59F48E71E
1CB49A6383A5CDAB2CFB5B30B3566EB48440D16A80ADDAF2284E7EE1686F079F
72EEEE0C0E225B9E736C6772AE15848511AB3AE96BBA04B42C23B10E30E7A4A7
569502E8B9F47CC51D45AFB01CB6558FEC2D3770FC075318CA298DDE790812C4
251449DFEC70677B8B3BDD77FCA6F8DC7CCC0E927EF7D853D4E937E83A49AC57
D38A894E893C7BA6F80A3B750DB063E962E26A130BB340B62D64869137AF4730
B348FFE40887C4D1357C69AFE24A19C130A16334B97295BFA4099D149EE93FBC
C6272AF549B8D8041CDF7D441B7AE1D7BE2A34836ADD027CDF5266E187CF7B0F
16F6B88A82F3433A0D6F1609D293B2C2905AEB576B5BDF0B915E39263AA9F03B
5CD2D80DC35165D8E2044D69D984BA8EB544379669883D32D4283E3B0EBEFB19
464AEF265075282AA7F9C33736CBD6992FBD9BDE71BDB2C7BA8FDF27A56E63FE
F8180A28413BA3D416E8C7C15FC6A86F7431096355265CE367633B481D80CFD4
A0D2BD2E38ED6F9272A3B524CC9B104AAEB3B047C9AC1869DAF2B4B6D9669DD6
CB1D746D54B15827A262D846549BAEB53987787AC9AF72F866C0A2790C3635D7
5B805B4F3426C6C6E12E081339CDBD47CC67DA518D51F7562DEA3B9974CD9A9C
05CC49DC251643AED4B981D3DE3CD424E81DA209444867A5E1A79AF82D91C83D
3FB66F981FF9642CBE065FC6CBFFCAE54060F7EAA855C8CF4E76AE27517A9B3A
CEEE42F3101F449B7F09BE521E7C994D1D49ECEC8ACD83D9DC1A32DA0DB848F4
D28FD6296AE76BEC4B0044AC2984337F2EA913D7D9682EA9EBE4DD2E4ACA345B
B401A7B127F68F2914E0735418DE0B91E73A2AFD5F8DC4CDF14C1A9D0B93E9AC
00BE69ADD20A7DBEA685E12400706DB5ADE9F91C08CA36AD857F7AB477C002C3
9ED83FB470FE038D94BB4C7C03A1A6267D28A0C175462DBF1CA25228D7B6683B
6B56C8BF54669F9CA83ED2AA40A2D74F451FEACD30A472C2C3F958FE75BAE336
3E929515DB75E5E51D982CED26A5760801E965F2ADFE1F47E8AFB7E2430FF5C2
9D2907B15C7D42F60131BC8969A7E52BFC97C3C1CC59ED40A975E92574D29500
15F2EACCA793E7888C26EE723E78F3CA73B3FF6D21CD197B4C7B75948DE075B3
21B73A951B804501794409472BDCB4B9267588A641F087BC3DE74A67CA0A7533
D40EB0EB6973E8BA5BB736538520EC2DEDB75364E56963A758EBCD38F5755244
2400959A62CACF5B5782AF3851887FDA4D03F83EDC6F2618FCC7298239D11D9D
34910363D0CE8E5689A870F7DE1140DE6AB73E6AB2827B160390167BE5425BEB
FCAB782C9A5BAF036B269C2FE68AC340C1EAA807F3489A117AE393412C10F6F3
A485374BA9B1C212E48E38082228DE358D6EA6BF1812F73E4782E97036C4B670
054DA278F747692877823A2D595F3A3E6DB94D42D2EF8BFB8514BF6888BF5032
B49B46EF5DDF9B3D21432F66E1F7774D9D4BDBBC980F7F1D6E09587C4C0799B8
DF9651B5B2A9B70EC43DD1138098A66A0CF1DBB35482658BB9D32B03BE83E191
E4E7B7165DB9A392D09E79AF518630C4F063E876A35D66DEA379A6F9939A298F
B39CD6BB24A6903F8AD3E1BBEF24DB7BEB1ABEED9E395F1F1DD95ECC8B443226
6F91639FC728B9DB6DEAC8754AE29EAE5AC87616C0C26855C2915FA41DD3A4AC
1A5BA0B78D6A72C65D92D917E2BBBDF972D14CF0881BBD1006BC9B62A95FE764
579DE0CC5C799AE3ACC9258CA206AB5A10743AADCF4829603BBDC23D4983682C
351FF9A5635B535146BE6FAABB489BF469E6C03396FF5DB218AE2CA8EE74F547
200678D6AA9626B2D00813F722DD86A572F602F36E083DFC32E5B188A84267E4
D9D40638251FE20A5C8EFD39DA710A4716E17E9CD994B1CB78BE25810FE125B5
429F1105E460224C2E708882A3157CAD2917B581FF88FAB16897B9977770BED7
F7C7F231C36F1E854167BB363FD72AE60390C453888E3ABD55EDAC59BAB0FB26
6A2AC55C24ED123A69EA4EF75B5A2BE776E4CA9D43CA2664EC224057661C8E0E
15DCC5E78F39185669397EE862C4AC87F742B545104E9945D0569D59E7C87C40
FC789187739BCDD8975EA492EE926C41B256B8F1DC2DF91D14F0DB046011239E
D7D6C47FF174419F816A5CCE657A26E927CAB2BFFBF4CC1A24AC944F872DF421
458EEDDF98DFDC51AC170E4C758D5055223A426240BB2AECAF921477FCD299B2
E5EA7AE1997F53998F941A6294B15AC6950D97B64E595CA37FF9328D6BB5DFA8
CD622F9B0C79E4635A10CFB39EE250AD0FE354FD5D6191313D14CA076DA2DD79
2B97B32ADF930A9BA65D88EEA830BE0E622CB3CE8347E2A199E9F45B099A439A
CECEC614B8199852C68127403E5156C9C207F4D290E739BBAD71C9160C4F9791
0CDEFE67643E4CBC6A2A4F6043EFCDCCACE4627CFE80E82179579BFE305B9AA5
4DF67EFF3C879DDEB99535E53084DEB4536386594E768D10498DE210C064F955
04C55BBB0918D14B27031E56CB44C80272E438A7CB220612713AEC079E8FCB89
540294D965D36CB0498F53AFB5500EFC074FD4FC2FC5D0E02E24665A3B415F89
320921E7EF1B186C23BFD0F22C779623A0C640D47AF86948448DD00039DB41E9
C5BE1A7E6FF16774669C7D9712D975674948A0C76CEBDC6D0CEE976B19F8BD73
148E885B22C95FA78B9E9B4E4483DD252942A8484EA1B609F6A9259F92472E43
2712990194A6BDF52CD452957EFA5E03C8ABED884854242913773A08A21E8FEE
684E50997A09BCF819BDA0F556460AA7F620A0F47C04EEDF96D353F451D9A502
7FB887045C3BF765EDDDFD1B985F869B5ED92BF513ADD2A34677D5EEDE8D2D80
68C2CEA84B0A20C8CD27783C6CE8F4217C2A536AA5973FECA8FEAA0B463EFDF2
93CB7104E3B4F73F14B336C632C03711927D4E8BCF6DC82DF9608B80D8E86E8D
D19042519FDC326FB44EB81C69A18DEBB469D40D39A72257F061EE965DD76312
76D51652A77823CAA8C4DFF3B1915965E61C972A38E423874D699CA4A0EF3803
FDBD24F15A0F62BE3CAECAB7F3FB4B9D4284CEDB8F2C33B0CEB4AF8CC26BC8DA
4C262467AA66CAC0D20720013D660C4BC6EBED1987D64A444A48361E1417EB9B
E565358E5EAA8C21F58EC322B1D86E58CE46F9982113791C051AE664D73DC236
11FF7B6FFDBB1D6B72C77967AA05FA6E16B2F6F16FFC043540E044AF9386759E
047307A965F5E8C0944FB174E3C63454AFB214A8944B2299D75F55E045896E78
3F019E874F2C339E74CEAFAAAC6085F994AE347596BD5C16E7C3081360CCA5AA
4930D43C04A454C2DBDAE20E39F00BA99FBF0F58790DB69856591230B56C9096
7CC8A7FD6219FC44CD0E30CF5FE94C5F95054EB0CDCA6AA5097D8FF96CE8A5C8
F9FCE901131D575196D4936E4156B528409B1A8EBDE3691D3DB7823F2C72C23D
DE0D340081834EB15A74B25E1E5E8D234DB91B8EBCAF22882FC804AA0C667096
7F6C3C2A7310CCC64AB48219EBDB7F8A6F0B10BCD386D19E8EEB424D3152712B
846F6F2DBDFAD5AC9FBF383B3364B50D5860E9A1646A92A94EAC83BEA49E3CA9
36874EAA3662DC4A2057235CEF0B9CF3B4BD81EBED69E888FBA1E2544DE0BB15
2A0901F7BF0ECB0BE5124AFF65FA70E2F9AB3F0406D1C9E5F430B07AADF95A52
459709268F2A54025572FCD9F64D2A2A06EC3494A9775E4D26BE10DA6E3DF700
D4D23CA5874C9C1F953B371BEE01DA1A65D57E0DB229D3CE861D48CFA25B38CF
03191454F3BA5CE1AE7C913A4018FD77C1714654EECC4ABF6976AA4D80E4FB2C
64C79C4E7B77F70EC138F21E96C6D133AC282085CAB452D8DC27CBFBF3FC78D7
3E8BD882C9EB8245C5FE62EFC7489FFD0CF8CFAEA1229C4CB76B95A2D6F0594B
0364968FA3F1EA8587A63FB77C9BCF8C5DAA2F25BCDC92F98CFF9F3D5881095B
96FBB30E85AE73363E157B01E8B11BB02FB00762A522A3DF2BD02014C897D5F7
0632336D1C7F5AB2BDE984AF511EC5FE37D4C4F79B368EC29ED24D1FB73E374E
602D71EEF218C207163CAC7E399A667E12B07C65D79172DF1A3287C67F1A764F
3AD2D60BC9BBE9368949B47A82F8DDFBC7E90EABDBB0BD195F64242395E6C807
B7D00E12CC9CA7119C435E612D95316D7B5C4F86F1DB7BD35DA951CC34EED549
9256D7837D8F9A6060FBCBB8298ECBDB5E6259038D592C46280FDDDFC1EE8102
8E13027F26BABF3AE38AF5E0C7F159E1A4617EFF11145DC25ACEB048DD2379BA
DE5743028000B909A434F417B4808AF41D9964639CAB6A92BC40CD8D67922DEB
40A3DD61EAA5378501DF9DF82D4D28A518272C9F9FB2DF0780C957CF1B9734E9
F49C08B1C1ECA1BA3C7EE4290F0D898BB3E404CCAA91FEA4EAB053A8D01F20F1
26F94694A52779B387B62E677AB9480FEBDDD5D3DC32A37C5BD00DD016072EEE
A098A86BA199BBF9F337522D515DAAC75380EEECD1F690AFF5B2ADC0112E1A32
153D5C6216D9C9385A18202E78D9E7ABAF7BE97D8FE529599D9A44FD882E692E
EB4A6CBD4832C337423530EFC2F6FE5FD80496B61CEF4FF35625C5F6E1AE27A2
1A60DDB2317D3C80B1A70B71AA537516A6AE91DB6D41313B2A3FE4B50F3B2D61
230D26B72776C9E82B12ED12427DAE21DCA9039DA02BE1F024C725B5A45AE2CC
17271D6EDEE7CBDFB225A3BBB64384CA7B0DBCEEA42883C9DDC3A528ED939C67
97D5F47B000BBAB0B84DC6868B5EAD8846A82AF91F44923F25BAC6773C8AD0A8
1076AA4C1EB99B4C0C0FE29E6DD239D2F234D71DABD43C47EB4FDEBCA5AED237
FF2B19138C46AECED0CFB8AA39A760DE39DCD0C86F718C6C635A02048DEB6A82
E53214FAAD522C2064A4B9ACC3A1EAB8E54A9709BAB270C0C77E9D9CF22A1434
E7D661083C7F8D02F91CCD580EA19FC1BD96D4D926FB86BF48CD0CCC200A001A
7915E263C75D5F189302DB9BF961F09CCE062B17EF20E492C02A138DF27189A4
4A0757EFFC671FCFE41CDF60A34B00B0F3D6CDE41B699D16DFE9901520D089C7
9230D2C11C8B774AE0459B22937E48C950802CC7B24EE992477BDAE884495E24
795E241E6A95AA4017DC05940F32250DC3AC668B2860621C746CFEAF186B9198
AC674D0A76D7A11670C6C3067251032597B9AFA1B3FF320C672715B6FCCE5548
E2C490E226CCB41B71BF28FE6AA68AEFC449D6F2C585027B73ED2DFE552E96EA
E73E7AD80E3341EF23D94DCA8E13CCD9786F929BFAF65B9F093F66AE0198DB15
A1ED32A22E697DC1D8A79CCD7AAC81C7C46CEAF94CF4BA25ACCA49336D7CAFB9
D8C0238645C253E713E1AABDD1CA70DE74B1BB7C4564FB54FC6C71558E4C1A9D
0B93E9AD35E90AC894127775162D0438F882845B8A24DD727263D91192286716
650CFDA57CEF6889E6449AB834ECB4ECD507EED34039982ED5E5664949215B7B
7C699903F93C1F82A476D9F0942E0AEBE6BD0EFD1F37687B723EB425DD9BCDB8
524EA0501EAEC5D21617E9E56D6801FDCB67B3BA023A0885C659DC3B9150EFA6
A6B4C4F7D0676DBF5DA7BC91CB0CDBA01C3098332F76F9A462D47F8D0C512492
43D8705487641FC3863FF7A8F2C0F002363EB56F6CF25EA480C3B13CC0FBB35F
E44DC25B2269745408A1249F3175E659640825731A12F98C3C20EE55D17BD7C9
8F0548193391BEAA9B5D9564B980FA031E0C8DE18A8C0973844C950B9BDA8995
9372A2D1D83ADEBAF345B8BE29FCE6F56F93CC01814CE35C353A7EE33EE2AB78
FDC8E849A8639D82520AC5332EF9745D6349263CA2FB93BCAD415AAFD831E404
573C5860E877242A02122887CC67C268BA8DB757B85BB9E137D94D7E59E41B72
D5FDC27CF78E392506AAF7A5C8A21E06037F6984604B3AC6965E0B6396387678
6B6FD9FBBBC704C1DB36E9B5419B22937E48C950802CC7B24EE992477BDAE884
495D7A37E0CE583FD73A055ED8A33A9DAE4C1EBF4A6852E823BB57599BA20E77
F7249C753F46700B475E00D41C128F4B17D84CF28A3938EDEE01BC88437393D6
04FB7564F38707F6AD871143714300F6AAE7286BFCDAB3C435A6F1674BB56DCB
53F9792361238817BA3548735C48C90AC81ACD68ABC3B289208E41AEB71171EA
F17A4FA9A8364DF95F8B28BE162717CB6215DF222A20FE01B30793F4707472C2
F082CB4CFAAEB7BDD167573E5F212D91279E0E3B02390230B01950FC6AFAE6B3
F4AB7E650489941EECB59A09821BD121F361A0BB39E02217B34E09C285BE1611
4334CBF42718BFC37F4346B36438B94D02F567424B7763160F3F2AF7CD403529
82F402E135F41F3D49AD2F44DC287DAE5C2DBBCA73CAF31025A3FD47B8B31679
6CAAF5A11F36EF005402F6DAA9ABE6FAD20E8C5FDD1223F08079CB5D0CE2CEAF
2D85E987DD9FBA00895D838A163963E8A9EF7165583B1AE09C3F12BAA8236520
2E5CA1B5ACA941642067E8F402A0813FD842EE498596FDCC4866AE65B5B3D054
16E7635B913406E7DB2B5F5DF587C175797678988274CE2AE002639D314CFFE0
80800F811D3FA2444334FB5421F839B7FE61A3E58CC805DEE0466F430CFE7756
8235A193F57FD51F202DE6294C2049A9F61490796CF35B02E38BFB36CBF2E6D0
D7304344C7E998DD1994F22CC5E79354065CF6357433878A4512DCD9E521FCD1
1E65FA0356054FC5F9B0C2A769D94B8CB39466491F52FC3FF1E48BC9621717E6
C707FFA2102DB63F3ABC44C1C9AE6AC470F8D8794991CF4E6F6D3229F8F7A59F
0F2932CC6014BC40095A70E3535A76A7B6CB64AFAE1BAF3ADE6EF9B4205BC43B
A3CDA488E512ED42B09B2B15B043C9873052644138467F77261BED14BB657ED6
76949DC2969A27784051AB9E62CBD50ABE89F5DA4ED42B7C3A4549B3B5E1DC21
7E8ACF17B1F50B27FE531C925A5CC50A8E81EA0AAC67875CEFA080A1025C91E8
CA69C7D7CAFE0300932030C47C025D2CB558A488D16644FD19EC72BFD6966A21
D64DA4F0FEA8094040F2B528CD48CD2F8B92CAB744D01CD4CF2D89B0F316B59E
7BB99EBC7521DA5BAEF8AED3B848E23B7D5B16329C363E6F3E54098A24746892
2D2DB38A404E34E7AB860C7241C3425690CE87022DED7F3A5A05E9F6EFC075AF
0249835F399A5539D63AF043C136465C5C64E5F4BBAF1D70EEBA68EC4D84AD05
EEAA7189D3E1C9F18C3D5419C1D2AF7F8A14A61F8D65CD6998E813BAF9B99E6B
2642104D9BB6DABACC4AA136286FC74158421FB12396B35BAB672AB65D7701BE
2C4206934FBFF484233B886B3C3222A6031E68910DA373B32837B34FFDC5B574
367B570FCFC6600196DE9ED27F8DF650516F54C844FE4A5C3C87C1077A71E5C9
5228114053B0DE93BCDA243E3D6196DE26FB54D3FDE40B8DD6233DA59A402050
DDCFBF282D5ECC5686326957B6CDF4492CEC50E13EA4209564F8C24F0C307E46
33954DE17FBFA6BC4F5AAE6D6DBC4CE3D6B1093F9F3749B84F64B1FD5992C1EF
09AE2E4E0C35F5B742D04B207A6ABCD3C09C3A3E78D8E158C2A6AB540BD933A5
4CB39EEB6372778ECF5B6C0C2F014F4E5217C8D447982AE814685DDA19B52F6C
77733CF3FAB99C5B648DA50996583B43EBE59F7AA29B4339C799EA8AB4F397E1
DF44AA50AA5B9B4F9093BD3FBFD3AF672D5F0AC54CC973934DCE0AEFBE747888
AA5472E4EAE94513534C5F2359E372DF28BB7DB86376BC7F7708D9DCA3411656
247C321C91DA2EF7558D272A4646327AFCA6D3D9284170A91697FBE8DAAA2F2A
FA130DD7C6471FAC0F1B23D8297ED9CF20980B148F6000C565F75E3F384644D7
2F3FBAACA5F6565B966BF65083A9120FC2606A9025DAA2B845FB3276FD3F0B75
5A375F5C9D4F03D038DAFC263F784E92BBB0A7298CD32219A490BBEC86A7F781
42761C29830F708F56A8327BB7FA5CC1E56949F31D5077DCBD5EFC35DC8A32BC
FEBFDB16A0642E5CC69E5A25A66E47FC2844F8EC635A9F1E67D57F6C7C7641C0
E9DA556D8F6D88AB007C27FFAACFCDC5A5237A6E9075A46B9406DA16A1BD6B4F
C7DA7344CC09BAD7FE89D6A84BAAA892BF31443C40E102BFDBC6086BE4372789
A5E4A8BBE7C909E080E70BFD1F31C736C3BC468BDCD6D69D3C10A0DBB28EFC16
DB6E1A9FB02D03D19CEBA6DAE2E0F7E40FC15759128D6CCA8F27BB2ECCB6D78A
82D9D6D5493255C427D48CCAA85BD167D40F1019C69C7258D2627C432BDBBACA
43B960217C0193F91D9D898C2117FE5849011BD76FF8489964A7848FC6F3CFA4
4B7F5A131BBB82EF2B3AD0DC0EDCD1DCE78055807A3A8E8221F04B4F14D0F503
064F1C78C7A6DE3181A839528F7AF66B4250A50DD561FFF7E3669A392CC6F479
81F4D01BA1B777B378B00586F8A890443897F479F5C27BAC9201223C585A06D4
EF01D9FECD5C795DAA94A1ACAB3F519B3B669E62C795AF54996144F5F186121F
7B3854FE184DAA2B79419D3C3C569CD3B0EC812FEF7F33E5D03042688FB00B7F
572991AA890A8B6CB720A8FF751E0626BAED76CBE1ECEAA3DA7A33AE9217CF89
BE38E4310670F1187AF8967DCC5B62AAE47E6B8FB0144A861E53B3DFC6938470
4863CC5357F755C48E49F4F1034A8645A68D436C4B3E925A7B6014F9498AE848
C5C03733DF08E018AB315DCB1F756CDB62510D4E57FC1B814A0385443EF623E7
DAE0E8B473F04A08E9A86C68EC648A214D6F84B5DA778EF092D89644FB11B984
41AC98E8BBEC4E94F7D4DC3B2073FCF253A983490DCD915536EFD56D22C21574
816FC156F701CF1AB4DDF4392238CFCA36CE4E62D5E268088D4715EA49D7347A
AF59E2D00C0A01503B92733020CA3962EA03A2D45B64B7DD73FECF101E8A01F8
BF3E6C8A107C8F2EA3CEBE8F01D29F739958338BF1AE3D9D97E7F16696F715A9
2F9244602CFB2466E5519B7C209007D9B8031A6B5E7A3A1B2F67A82EDE4FCF84
EA810270E7AB53D1AD58BD2FB92F3DFD14EADE541A8F77B8A96BB280C1719D75
5876CFE840122B3CB00F88AAFEFF2DB5FE38FA10AD3E08FB8A840D893F79F381
F04682E85E8E6F334CB3C830085F8C579607E2A959A9D9412FC309009C30F1C3
56591667664D1DBBEB155632B7397B539252CD2BBA4524B7132793FD32C96D3B
499C4ABAAA54E3DD9F65B1DC63D14AA340563222F7133792FA609E660A7C71E6
9FD80D2C19EE68A586F70D82C20D2957340590BA0FED23AF9D42E7E92E353E88
9E5B15523EB06108BF05489CE75758928766E8F31FFEE30CFC99B5AB9497B33C
C8C54E71E0754DB6F0C9B880B883D60606DE018700642F52689046D1412B4788
FC78344867DDCA8591D7F537E66AF56C9E3C889E3D44C631C86ABAA82C3E019A
D43693682D3A4921124093FA85FBBD992459ED9D7448E5D519239F340176DA78
EE40415AB7AB07E88BF74718290C26CF8783AB90C2A945456DD77E7FA415E12A
386A56D84D9398CB6531C22F0A9189488F5F4AA820D2ADF1D5885F88918449D7
F0E2075F160C3A2335B0C3BCDF6BF56E70B90FE5EF260D02DDEBD792611E40B5
AAF5F3AB482CBF1E3E97C3D5EC7E17128BBD72D9CCB948B665F423DF4C2C7334
741695462AD7AFB4A1F484AAF88FED9C0E3DF7E71EA1D42E142AAC9BF49CEEB0
56D3D4B79D21B075F3B9C0703F06370A46DD89552D17FE525B7AEDE357C7730B
4BAD858BC17D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /Box put
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890B0BBF10075D53739F7E84CEE95B40C3DB68D5
6E9847E37B7920412068C3DE2065A77281345980956AFAD312499818890B454F
5DD8C92695818BA4DAFEBCDD4D268763515CE077A64C5F3AB384A6DFD7DD9641
FCDA0A3344B3A14F82D478B4BE7BFC2822A4D67AD3FD07B11589B93842066528
1E51D954D7E6019F6921DB9B00ED303B4B8F557EAC7A0B0340A268B0DDB25B3E
BE0982129B0D3416CA5D07ADC689CAA181270B8141F9D0F60C60F156CB305E5B
E71D9A5D5FB3216BFB66284FCABF6D74564D1288EA99D3FCF6F29C3AA690A596
02C0AD2BB29A2D457C66031E5571A1454758212EB4D053F4C28FF629FA94DBF2
9677AC4B92C4DF5C7FFDE31A8F2D6F9477896C11CBA890DD464C9231B1C350E8
E8CEE17F2E0F5D10416F7D7FBC6085E9BE09E692951EA7B93A9F49CD458476E0
A380E1D122F275093ECFD398FCA6D714187CC12A2B16318F9E1D2B0E9EC134A2
C4D2674AA68D2E7EDBCCA383
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE27995D78FD99C5784B2B7C7C509E9B93BCC29
35CD2714C50B246A7DC70C99B7DBFADA1E01B81749EE49A70853CD45FC323019
A45BCA3DE39C3E7618C6322D264556FD657D9270933D8B167D2575CF146336BB
1C76735F3B09470E40B0624E52F21809704749F6D81E3B829D163D9F61E070EE
D8CA803E56CF227F71EB8061B83E035C7138A7CFB6D6CBAFB766754C0E8934F9
AB738930EB75A2713CCBE333CC60A6A8F2BFDB043ADC0B94FA3370BBFBC61D7D
25524B08C70599D58E7521F58D26AFECE212309BD7BCF62735379ACF3309DDC5
C3F30DD7D3A37804BB23274D7B30DD69E1B2C3CA70F2F79FA29543F526BB808F
0464C39C582E1945BF8D2039A6BB5F1D9557D5168E1808CB19068F183D547C89
64ED797C384BBABA6B5866E245177DFD2533240E2738FABF864912E8C6290A84
57A0F92F885E21F4CDF14F788BE2E8571BFB07CFF9F577580B8455102604A6F3
355819580C47F5159965B3CE4FA4963EE9342A5A34C3038013501073116B986B
D69FD39E64A06F93F92D2AC495B23EAB87B33931729DDDB4BC61DA2E8D337A77
D60A3BC32695406E599E0F0BA59CCCFB9D08FFC97BBE81F5FF6AF3E403B049B2
449F491D791F5D8481C6BAF0B3DBC36B1AA378E1A78FC7C507BAB3555B265577
9CEAC3F1391D72DB08B0C95A9C0ABF06921828C1D132BF9E45EA683DF15336D0
7AC3B4F744E0A34913ED4CAC7D0BD6760B31870D69C4C15EEA09E1831354F7C4
A21645261A3868D4250A18470A42218EBDF7B90241CFD6FC8D781B7F571EBBDC
53A4272568BDBE227C15BF2128BF4C8FA73EC91D432A15993A4D37BAEF27F403
EBA7BCBFC28D026D6D6CAB0A90A6891CC6A139CEBFDD92309A2D0C7CF7864A73
195645D5071137F882C019B8B853990F0DE6F49D4494A93081D9EDC3E6F33C0C
BDFA4AAB1682A77739C6F3D04C9A8B1801E807227D29389161E7470395445B0C
E59CFD89084011AED6E918BA1FC040AF0730AFB10FD7EC61BF69D36ECE3C13C6
069C64B22F44636DA80AA6E838D5A0C2E786EE6B4293F66525C35B1752D85A43
A0B79F1D5339774D004275C37204346C08317449435A0810307CC13A1050AFDB
5FD2070031BBBFEE5739925B5CA2F739C797029BAA9D1FD7EE9405CB29E40CFC
FC0E55541282EAEE8B95636805412E79E49A826C884BC282598F6790F69D1C98
6A64F25CE29C161D1DFED771FCAE7934D6F3B792A1257B9FF5EB18BB80A6425E
BE560DFCC4FDF3704C77BCEE0DD24EBF066CE4E6A9D2F5E0BD52292E6028414C
7FCAEA0A7E62E4DFD5645313CBA3FDF8224C30B0E7AD46A088E256407A554EDE
8CB0A19DFB40506C64D2F5A6F86FFBA5C6267A2A20B8CC7B4E6DEC8580D8518F
86D5368897BB038CF07FC21678FCBEE2373F01330D556456193A0D75817DCB44
F89EC0FF5CE2A99EF8A294FDDA952D6D1DCB0481C4DBE8A6CC2906CDA110E0D6
D005D4098EA5321DA1FA07CC1B2036139E76F72425A26341AA5AC2DCE2E64092
DCD8A43E34700DBCCB84C7F733D777BDB2B8D701695877B03781F648436533E6
99A4C6E728D678ED7B5E1EA7C9BB3AEBC348B499285B0098EE29708F98ED5EC5
5F183D5B2EE491CACB0529011D003A4D5A6099CFD95353BEBA653AF5EAE9B1A6
B9C56A8FD9FD1DC9F621C157FC555B4D973E2404098C6A5E75668ED3E9929056
DCE30D42439FD75C1D03151F3C9C51D21BC5FB8F14A51C2FD96C5614886C7A67
092A611F0B5815DC0751A926103E662A0348E70A97A46321D638449D1D3D09D2
7EA8C1CDE68F1C2CD728BC91BE4137E8B1362BA3A2DDF29C622FA55D54800823
824AF578982540D9AD3349225E6B8EB758ECEDE8173B87B4ADB915DD61AA4040
4BFD6BD739FEB4B951EEF8BB478549C9037F80AF5E8C93069A3A27AE6AEF989B
BB946F142929B362B9982C571293D7F367FDEE695858694DF4BB1F3577A97811
8AC0AA3361059181C4A4577018E8150702C36612947FD36BB2C736225102573D
21FD0B03969BA2F72C2D2C05B69E55969AE74CD3A31D6E5204F3689196C45F46
008DA36B7D906398A8D445139706F68286959FAD715C57E2346265A9D9B4DDC3
01936A65100FB57B1D252C9C45EBF19CA4E61E4DCE321F25568F03F70E01766C
A632F03D13289DB062EFE9E62D5A3DEC03D1F5A40155914E2F6DD48446BBC06B
FFE286C366E1F387AE1ADD9E8D07C01EE33C0FA51EF3A6487E8F7E09AE2D7E50
8F64DFC815BC25BAA1ABE59A48F46683AE927088B156AB660F523D854B17B86D
C6852159163B527FAC2596297C7328B2F981BFA79544B1A2F756D81ACAE235A5
8C64DFBBA43774870E99EED3D74C0EDC41BDA6D8EB06A20E3F76D1858747EAAE
222B1D550213BEA06364396D279484BA66B2B9A0705095755901A32788188029
8D9DB49E009687F0D2FE43DEBEC8EFE49627213BA42C597D0FE53DDB94C241E6
295881A5A2660D5D253DF6AA998ED75546DFB9500EE02F9B9B8774237EF1899A
326BEAF8EDE7CBF1273804BCD6CF66E574064E2B0AEEF95960D1149906DCE974
435A6FCF0C7E4C041BB3ABCC68CEAEE80B1BD60CD74CAB53C0CEF51B2FD6DBDC
547BD5328E7AC7CF5F0F69057A6822533E61A4C1E2E7B3AB456D19D9769EADD7
1C619A92A04A4332AE7D030564A0EF74AB93B42D625F9400A63BA8118404FB36
227B57069E1A86F4D25373DE8DDBAA54FF0F25A13DAD43232F7EE4D840B43621
77EF37C9A04CDB15B160C3E2B285BBCFE14C06C490185661115F7E539FE1F8A2
832C76C5EEA9805D41C6D9B2304EAA39439D1E570285A7EBEBA0247118996064
991B82126CA02456FD03F4C387BA30F95648B600B3975941C043EA1C1057846B
76616532B79C929723445D51E55F290F7B74C1F3F69F041C7D00EE44CBE17DD1
9F81B2125F9A0C95FD2E3EFC4BC51F799C62A8B86A7DB68B7EDCB0EDDFF82EBA
11D53BEB168DAA474049FA840261F7A8AC972AA144FA7AF1CD28488C1F2033A2
33D91D90392862531F033290635C60280122404A772D9B7C8EBFC881A40734A4
6DAE2CF46DA6CC1D18B00177EB84A53FB40DA7420C372E75AFE418EAF9CD571D
59A09D75F1D53FFE1ED4314EBF29885A69D8D51B47E08C814B5A0C25055F2755
0BD69482F575CF89AEF42714C86EFE0E9DA6FA4E50F02445618882C233355671
AC35DC5B2B886C4663E747D38575E974742B76CE9724465C49DC221DF6D624C6
89F2F181745A7D2C3B8999507C609A2ED663E1D24F985581BD1C99DFE0E40083
8F718712D374D9AED7F0A85A6D7C5B031183C974089DD58B98A57999E34BA067
45AB4541F541E75742241AD41FAE4BB693A50E24F925F3A8DF6BC14808034146
79A145541628F6DEA543171844C4B22CEE152FAF7E1DB701F8E345E74FFEE4F2
237D5BDD9053BE87429FD1D9DA6F6DFE3B7B5B4A1B7CA0542072597C5636F69C
A8A0282200D23FB0EC43EE107184712353F2AAC61681363761D803A945985639
3CE1C1B41B3B7B7F5B7246DFA10483B09CA310083CC6AF9DC18885692593E467
EE46E0FA73157A7D2B86A0885D0DE7B71FA983EACF886ED8DDCA3FA90B6F2958
4276080FFA7C50C69E72163330F0F908DBC35574655C93E13E249C6F1EC310FC
EA6E06C0403F858582A754DCBF8841FE81D39359DC1E7F655AD34292879DFB03
5EF8BA7560EFAD429E5800E3130EE510C1CD4BD3F70BD38D7374A987FEE10268
166C552CF7FEF8C99C29BD310590E1B613AAB89F20B39AF3077F876C1ED130F1
92EBD571DBDEF885B59E018380F607308BD62BA71A8CC282E6E4F865AC8FDF8D
F56A863FFBA0EBCDCED96FF1576600F1389BAC04F9EFA749674EF1A532F194C5
24458044D3C80CB40D65BF919B7FA8EE4D66AE65B5B3D05416E7635B913406E7
DB2B5F5DF084B65772B7E5E398285529758927D5AD6635D241202D32CA74E8F4
E4BDF74C53268E1A7ECA73776BA42DACC533842A938FF436B01AB54EE1CE32BA
926E34A8F8C31B2799420D8EEF6ECA04DF85390E261B43A555BA97B9F931A445
EE4BDB168DBA8E27EB9DA43541D7D09EC9520215114C3BE3EE5DC01A9FA9D361
3E04F4B21AFAB6EDAFB1FDED79EEDD6FD3B6613D855D5E17D6020D27DC30D941
B95DD24513C2B16E59080C7D31ECBCD6563EB1AD0019E8F762FB6ED54CC9E41E
6562CBB4F3DF32AE5633875A962821E726BD4CBA7AE8BF83E11DFBCBC20E2347
7594B3B8B88ED06339E508D2D18157D598E87AB110217F311ECA57AE78AC688E
E28C31D597BC0184963FA54A8D67C4D1571D44ED014CB9CC49C5FDF45FEA58F1
90043BBFBB3DE375C1AB93D839DC4F2D41639E03C463B9D53B1FD0BC5C178361
8B011F86C9490704010EE379908BC78EE8043B7BC1D982E7CAA79328DE04F0F7
A33D4CD50A13FD7A8B2F7B9B62EE1105F37A99A308E7DA80A3018D0F96B02F21
636857941F021E124D24AD513EAA1CCE09EB2C0E13A57B48CC839F5DB46CEB46
F8027B303F4B370C583280E59E14C1F64C508C3C81BC1871607DB02675B10BB4
820157A9D93B6B6511AB4FF1A435EF8D03A4E4761255AABFA3C18EC4503D3F55
A3374474F1D4BE727407357AF910C49850701AA5003DBE757D554390F271204C
001CADB630138C9B03ED2F4592D3D38E10A40C93CDE9E44D391DCD5D08268EAB
44BA2650CBFC0CA9B55CB8F5B1140FA566125E537B0D74451F41D6A821B48CC8
4EC1B5448230C4611B33767D290398B07A09A94DBAE60D02B2C2557C27033737
A162B1C30CBBB59EE0981B0F6B4F95377F048A63FDBFD917BB718E9C44F84195
CC47256FCC10C25035383201CDE43E7D913B7CBE1AE4819EA3C67C97CD03FB8C
B1FA267164742287C9F05BAB96F90859A469C38C48754B5E3D4A3EA489D7DE94
F9BB46AA3F528A71E5B7D8D042CB8C40FAB4644CDDAA91F6F0D714A62FEBD441
8504BD590495999743DC93548B508AF129D178F05D59976EB80A650E2F6951FF
4CBEB193B07080C8B8DED75739A29DDAD519705EC0C3A425F84078E97F74308E
C8AB3867E917C98CE630833A36F018B6309FF10B30DE6E4E027CF555018F191F
3C923F544E8CA05E5F16722531D6C664F8CC76003C390E4C666D8156FAA3F6E0
41482D3A3A1E9C3A426BC7FE406E89FF25FEB234CCD51218FA11E2F7907B9626
CA16609BFEE67DB56CFE2D7C50AE1D80AAA5FC3B713F6ED26A0E7A657DE220EC
3A9BED4967B45D9924D8F14C06021B403C11DCFCC7391B15064B9EEC298FF235
90730BEC61ED49BDEF56662CCCB5FAE3912F700E44577A861C73E2849193A6B1
9EDC4F5EE0B89311C8D330F0AD6E39865395536828DA89CD911357A1ECCCD1B9
30A2439EF269055E7E139BDF6ABC485BA982CD38283E870A8A1B5899BA118329
8C0A256E6D00D53B47E1F7AE890D3803E91CE2738FABBC214C731C49C43FEE22
C049040C5C7CAF309D5C0AD292DE9C9C6F8E9C7EF38084D649289E4600F5A672
56788F406EFD30EC69A11ED9CBB29E514659D45B139AB83B87241B6FE04FDEDE
31676E57E765AC6CB4C052198E87F09476ECDDF48248B4FC5A91FE145FF8C4CA
9DAF7F285A012039391C16B18E726B2F4740839E9FF40CDA511A96571999D41C
2294AD2E091DD7659A4DE4DE812FC920354999BE932904027FA358E88242C2AB
3C7666EB43C9A653D05B89790EDB4DDD3E54A6FC00F6B83D33DAA908377AA57F
A25F2326680D97565FE4D1E216A9C768A454647DB379C4ED87330C36FD60FA01
0DE7B00C68B52F3C006F4CB5E66AB4F312FDFD210D6311CC070987DB17E7D56C
EAD87BA0F2D4C547743FDD7A68BA6EADA8955D5540308E63E3D319D5E9C4588A
A1B9BECEB18D785FF63B4FC19AC486D6F0BEDEDDBA75880CD30B27909CC8C16F
3FD2AD267F897BE7B2EDB14B03A3CE00A6870BB846D7D5CB1E4FF4F13840E6D6
832E5BEB7383E249556A7D03753BA53A78092B78AB3B0BFD0E16918EC3924556
28EA68EA1B38C5BC66461FE03D435D01FFF15E7A613EACE41E72B21E90E9D65D
69FB6BB517B593AE025E7DB76E3B3E083DD36931DAE8E86F1CD55938E4C906DC
4685E758218CFA01979CB63DE375C1AB93D839DC4F2D41639E03C463B9D53B15
EFB34EC2E2AD193F4267384FBD38E55D7951FE1F9C3A11F4E54E99C1DB82AC24
5B5134E71C17177E335A1CDA79CD88A995C71A69F35BD0CA4542824B1F4329D0
546D3E4EBEA72D599A27C0EED6598CEA99A13F6590894312DDCDC225B9025544
1E9155C36D7218EB07D98F1095CE31E4FD96E4063FB23B0C1334231CACE3B876
EACEA91CCC19B26AE1658A5516E42BFC4A9EFC0F71935DED5C54A781D46CF931
4CC3D7E9AECA005DB43AAE1E43E951327A660C06E7682033B4376512D85F65AD
30E430DCA2A3184477569210EB8C4212CEAFBC79B61186AA832CA4C5F247F136
B48D49E89F0F8B0C9801B97D6FAFFF61FE4D5BB9DB36C490D81737976009F608
11385EF294FE53F276BF1CE631C747480C8C7504D585BC4A036D73CCD5321C38
EE7359F27015787BA593BC0C6BA1BC382D228B0143FFCFB4B3368DB2A746A4C4
5D836CEFFAAD1395B9808E8AA083FC87F601DADCC81385E905D515F50C4ADD4F
4245DCD8BEBCDB91638410A0C1CB3A286C7059F595DE66EE7699B505E6559BB8
E9664CFA5CB68AA71040D5DC50A1A5DF9DDA78F22714FB9DE80D3833DEEC7848
D7C0BEDD15C72131764337AAD0A5DFE27C4513A64DD33E517537E7237B3467B1
A26791BB653B865750745817CA28E3D01301B3E3676963F37DFCC943CF236B07
4DBCCA06BDB67F286684443EA619FD6C53B2CFEF57A40DA8E0AD12690C43E098
CA65841533DE0242731B79A1A82CFCE9E49A59F62786B324FADE614137AF0355
7647E96D18D1ED3A37925DE2302E8F26BAFA9C8B162D982EF5902192B294C777
FB49FA8CB2158D398E7ECCF381570E909DB6148C29F818A0E08266A2B60C9C09
02AE64276F7A1C6D7FFEBD325F4AA2ED4E09E32A482026D3180EBE8F03A388E0
729DD8E5D98795FB0A08C894BAF2BF8E26A9102AD3339F117F0C50FB1669230E
D4C68F9A415BBCF9471A5233E6BEAC16954E2670695108D4D6B920B84E040C63
CAE5BC9BE7CBEB6ECC8848D17A70BA8DB8DD6E5B41F5D79F95B04F46C2A763DA
FF6642ADC1ADB069D7BEB4251ACEC8EEFBC3160A42630263A36ACF465ED120C5
D9C0BF2C86663FE8B623E1EA738390CEFBC818F1F770E2089DFBF31AD30FD009
9419E94B1EAAB833E4E31084024D0C94EBA3B904112140552E1280DD31317A23
9486A2278E5BB75D0FBEE47DE21300E086B6B72A4A6C75B51E4E991423701D12
DC75C643BD36443DC1E1D1AD087B2E4304E3752D4980EFC41B863696FEEF72E3
5112E7BADE4F01C7C3BAA5AFF4F8032A501D346059981EBF2BBDD152146B48F1
C45F6C5921F3B67F8C92ED932589114E28A4E3394F7C4A3E100967B3BC7F3D19
501005C1DAF88B9DE63042945DE1ABF68E25229084437FC43831FD101E68475A
3648798F2DC5C97E84D644F4B693E52269A32FE00208F8551EBBE8B2E16CCC5E
FD174057C781DFD270EE443905FBB38725EE7FF097F769C017F16598B835A0B9
3CC58FB10A9E09D504E360902F0680AC09575B8AD8AD44957D9F5A4BE90AFB9F
680FE4954701718F0AE43962FDCFCB2D24DB44795B8A0E1BEFD383D8280DFB56
5176F46F4B73AF03D62447E25F5FABE8882822BC80A55EFFA67D226F3B9D7CF2
256FC14BA225044236D63991615A2DA4A0FF5186A7AB03ECCC79A923BBBD362B
788F5C9DD59774918082AD45111EE91BAEBEDD15FB65955F91EC0F7BE3119BAB
F0145D6824F051CD6391BC93472F780F0B819D445C0BCCE07CCF4C82B318494F
42C776D9482C8714682000FCF17756073A09ABFA792C31C37AC9C62DC5EC5538
73D49AB0B965BEC1A8B100500554145125FB0DC07C3CCBE333CC60A6A8F2BFDB
043ADC0B94FA3370B91882237D67F4E6D9031F874AC47BEB4E84870290E8B304
5A93C45A356CCF29ADE5DC1E7327317D53FADC5E8A10A8CD1A2FF5BAFF93EB96
F0A79F34E2BE615A70822B0FF4048578D3C5BA050BE03BCACE325F78FC232393
DA06F965AF59870F969EB6B887FDEBC9069C29AF8A992A26986D3C9D2C4B706A
00CC6FC0C6FDC412D1B1E0A599070BBACF824EB1E7AC6127A68E47E30ABD9364
4E4C20FAA4CDB74B479EA63CCC96F4E35B7DB8A8D7F3E1C568A69011A91258DC
4B7C64E3174050B7C8FAD56DBEECD1A64C33496F8D1A112381C573C14103789F
6FAA26FA12598B472097BB7656081ED5206F2827191B4CDE8CFD7E49C2233691
CE6A5D66A866BFADE0CAC16C59006D0F71E9078D77B0FEAC00EBE6A890D66A70
1899357EFD3BCE19A37D78EFF8A0D27FEF34B60223FC6170F5DD66C1462AB4B9
63CE62F33F0C59263FA14E1C9A0A271B585DF4F7BD3AD68F33395EB773DDACFE
E7878C8F61A5425FCBF09EE1217FAC6ABF3636ED201011F687AA6A1FA145D9DE
4815C0BBFED0EAFDFAE2C502881246F7254CB4F3A1996EAE4EC64D8234BEB4BB
DDCEEBD9A89D932E55F14E0F30C9A67B49C13096B923BB84E70ACA874D9A0C4A
792465B9DD6A877DE6AEA9C3179677B7C0726022D0F92D37642C8E5DABD16A1F
78C77DCA1277328B7AD72AF9304FCDBECE3E39354BABBC6606B1DFDF91D07622
8D148321D493FFB34D445FF8B74EE25981C24E8C36BFA67F71C722D6DE9FAFF8
C6C8D5B42D387575441A9A97AC7A54488FCDD07FCC210033B0316FC13A50F6D1
10323B8E249E09B078B1921F6DE29913D2B6F1AE4F6DB85E249AC52B0295599C
65393BE11269C8DD7247C96D632523256DE9FB5756B198949FE7C59B1F798BCB
0576672A693BE302DC78B8619DA47DA7550ECAAA8F63C6C2A74A199E3952C6C5
49CEC434910D8AEAA207BEB7A8B227217A25770349C86112A2D9E80690D779E5
A9A4B01B3C370E48F652E06E02FCF0530E683A96AEDBA01D6FCBBC224F848E7E
679373F48144954ABF8991B61F0FB7E95ACCD3BBD6575C74CFA6B0CF986FD924
816C0C55830CCD8D5B8249D055FA482F221D218FE10A5CD04F1526CCE72033B3
78CCAE92A2C4F2837527124582DBF9B81EB3B2C7642AFA8DEB0D95C41FA4A5AF
7A016D3C773E040312AA0240DC4DE38F3D4072572E95531C63E1E76AA34EE0AC
723691021715072D732D073F4FCF983F6E922F751B981FCBAA898A72DF46095F
63990A29877ED1DB307A71C06148C4F5B1DBA591729E1267D8D7B831C8203FD5
4703BE1ECCD89DFDB2F7C0EFA1E5377DEF19C99195A6646B1336F71C9249749B
EB8FADCFBBBBC2B889DC7CB30AEAFDDFC8535F7DB8D0273C53F08C11B87F7F34
DF5BD6232B0B76DA331E3B43704BFDB66CCE11234FDDDA3EA1A434F74157D2AC
F9D3677B4963D4005838679F44F925F924FC93D8DE435854CF9F5595B56A9038
0C329B741FD07F83BB9C0344751FB70ED5F1CCBF4A75C9541CE2EC94D8F61804
E8F07D174E63681C9719E498C62A7FF00B01DF37718D613DF1DC35098DEA7E69
B397DE95D81DF8AB287F2E1373262B58167617019BED0DD554AD31AB998F5821
BA85C1FD642AD61CD0776567E48DD8D9094FDBA1613FA58348AAFEDC471ED648
8AA685D04243BF460051DA59D7DEA2F5535FEB1867A1526B2BD122E7A2BA6063
9A27F26D1EE8A2CDD3F5477B7C100C82E82FAEC0BBEA7AEF0B76205FC094C156
4E2626692F1C248D54C82E7BD92516690117247D9A803AB26BFC62208105C791
CD5CB09CCFC3207401F42B3FE39A158F61EC52ED7A9A81F39EADA787E9E3CDED
FCE5AB551ABCE205DAEDE1A49769F27E55E28923C22FB5722C120367FF9292C7
1C6D5901EE08383723931BF330814434F81A3EB16EFAC41D22D1BF4B185718CB
197A7DF573B91E5481522C7E5449ED049CDF2B27B7CF3F71B4C23DC40447A2D2
1270DD055EA707AD53803EC085CDDB6DE033212209872667423B22D9891D72BE
41EDEC23AEFA3FDB17EE7A70C7AAEEBCCA32CB4A83BF66DB4ADBB1652A3583AB
E38CE55C584D2618007F44EA68C65C70BCBADAB10AE54A0DD44C28DC4763D04D
640D8E079D7F7DE95179875F217C0D6726098092EB2469CCC9011408B69C1EBC
55A5AAF402D6CECA4A60E4285EDDDA2CAF9B2935E66E18A7830B7502FF8B5171
D26A8EAF1F139CA93C9B8C01EDEEE3271B46771A3374FD4E5420E32F060655DE
D219AE758B5A5537E8AD1DA5DD739FA0440018C8DF726B18D5D53200D554A759
A938C2A64F35A8353D5FC78666A5E3766646BC493742465F8229CC28F805FB86
9188C14C268C3BD17A7F6557EEE167D206E03C35D1B2EC412E383395F9B9E7C6
6BCCA21889F034E30190A73E1FDB511D4BA37126A7B9F4F83D869F56CE1369EF
32CAFEED23FBC0F7AC58195BBA28B11394FCE83E6BC1BA6CCA1752015D12C8EF
9631E7302185E4751C2057D27F511B1F01835DCA3FA88A475ED04DCCE94CB31B
63F7B741344010B345394F22199DE571B5E71F57DB9CBFAD4121F47D4750A550
1018DB4BDD5B64DF6A6F8AA6D9895A415FC06B0EC169287349C52D39779DAAF3
A80C3FB7AD283A44C701B0C5803D57FAFACDC9F059CFDFD4FACC12C6089DF415
22A1772D82F92392B9224C232ACC4271831856CA6D1296CA1A89FA67E062AFE6
4E646D5B2887C2BC9484005A11A8D4F968E95FDE6C8C6BA0910AFAE395E68FC8
91329882A2639575674B2A47C068A60684C6180A9400ABC3A06B1CE11CAF072C
3B40EADF636ED648D12AE567FF26A95D677617CAEE4CA4B282C8E4CD4EEDB2E9
7541FE068644845F964F7992A0A0FCD1A5661DEB0F94AEB1E311381ACC86D085
6C90A91D904C968E2B541C44C3092FBC68C718702C35B6334C7A025222CB97AD
13D61857519977DD5BBD317B3402D11CD481BEC9689154EA8C28BC52DFF62714
BBB110A4121E1ED7F93BD46ED52734D447A5DF73FC46E9A9704144D16D600123
6D58C9DE0CDA9071928549DA53556B4C8D253EDBE6BC10860EED4BF3E929DF28
8E1BB1BCCE88D89ADE52E5D2E9F5E41A104221C9323CDC0D03B79E4C0CD14763
A4CB0B2C8522639BD02BF782F79CD875F2D2745418BEFD64C9A18F596C2A638D
FA3A2A0E4088072A3C9E36431A09D02FB989F9DFBA0CB091D4575F9D4EAA135F
C788C5DF7CCEE2E19700ACFF7ECBBD5285BAA56335DCACBC39A9F53468AAED85
1F1CC40481634C777018C2E5F8ECF38F772AEDD4A948F8C10EDBEEAD8F91EB13
E7BB5FDB2F2BB3B0507D12F94D4695BDEC556DF7A96D1319C3784B0A4E9A6FF3
90554547263F60381EED4B36B3D0F2C4A26FE1D2201CB19819C28263893057FE
FFABA2CF401E5B2253A7FEDE1FDE7BD992B55356055A26A1870924A2AFB4B243
AF5EFE9FF1743C357A09FA4DDD599A38B3E39077A00F8F92CC6F6F0883C1386E
0668FF164EFBF2FAB6A662F8DE9A74CA226BAD0E6EC5046011239ED7D6C47D1C
77F962F957C199FC3EEB1B2CAF8C3E319E894B54B92050951FA9C6175486F899
AB786591690FFEB4B0BE0AF9F4BF63BD012080A4BD18DE1AB6353B8AD4446929
68E82A7D1243257B02B8CAFF2AC2FB7868A7FC61E6AD29558636EDBEC14C5256
B9940F0800E6DD26001BE1FD4AC12E1A6F8D053F2EB3FA8BF2C5D6EFE5B2BCDF
18517AF21DDA362429CFBAD19DF81D066A62F8B68E9063DE5C892905D403CD56
EC5D3671C9CE091995D384491B65E2DC294EA156D467EE3C32114DA6F3F143C0
53205C1117BF61D69D6D5BF8B24AF382484337EDE6D846886EF1FB1A85ABCBAF
770E42D324E8CA78613F35EA64AA88C3C195871DBCD2AE271493A54F1EFAACCC
687DB7121310F3E2A20B34FF668EBB8778FBC25403DF78F5FCAF62167429F477
8878790722A0D712FD2FDC3A784CB8008AB91076F0778AFDC33C0B57B8121AD8
6C5620623B98752E1CC04115720B646962D8037B07FE87D0E97CF4FA509B30F9
070BEB09B05DB3F8DEE176DD49221B4CF6C04902CDB5507FF0C6D7FB2EAF256C
EAEC65106F666E66BF18385970837A508EBF531591F1A56E7D1E22A65FB87F27
4D90C0DE9BE82279CF5415640D5F1DCE22B7229605912DF5EFA77CCA98D62B1B
218C8B371843DDF5DCBACC2CBE215707EAD837166627BCFFAD92E81D09228398
FCDA104913293C733E90B60F0DB14D360264AA4469FD8D653DE7B67DC0DF9E4A
DEA85D9F8C77DFB4AC7ED4A60011B992E67BE02A09ED1D6E9ED11DF0B9CEC7A3
29460CF59B8B7E4B336C400DCE97D3384AFA5C0BCEF133DD294C2FA202854C98
77E9E4121D68FB545124ABDD73C8F7319436FC6EEFB5E0949674C34768F00182
7F12F1BA77AE83CD972F167258DF2BA832668CE0CFDE1AD430251A144A547628
90D8FA0E198FA27CECC7A2DE2DE9462DF47218925CE4A9445C27FBF7E0E27A27
48A6B019310EFC5E36B770CBD3460F9E803E409065E158DA49560DBF90604CD5
096ADE17A52A09061F578841058F3FAE9DDA4237FA4B0553435F46538BA5C30C
185DDB06A284AA5034CA2EC5AE5E6B7F441AD12126999FA71ECFDD70607C4FFA
2DA691412994A5A0298BEF561152F82FF64CD3298D1125D2FD9BB8427F252D90
ABB66D7154EA5AF4A165DF6411682334432EF4A7BA2612F343751A68EA6CC4FD
5FC0215333236B15BCBC0DB53FC2C548880DE426AD26EBF2264475A27455F796
B03D84F85809FE454AFB961F688B8117174289A675DFE39DF546A3BFF3244C90
733BA17E4295F5E12C7A87D05A5163DFCB0DECDBA90B15BBA561DC655BC95173
C09068553725ABA9423F4B268C5807224788EC0DAB99A669F70EBC4901DF9C54
69C868EFD4927265EF59C7E2B55BE2EB8B973B283C9FE104E141F00F8587A613
4263186E4E2F93B1170A6F1725A65DE0BF2FB6DDF62C0C48FA5185D3BA7EBB12
FF64DF3199AEC1CD0ED9D98887461DF29B23AF194E8F983AEEE17A046E6D039A
B2FF6D21CD197B4C7B75948DE075B321B73A951B83D02AD6A9E271DF33205912
1864C93A9F8678BC7F77BCCB36D07B9A1A1DBD41DB89C4200F685FA4011468DF
B5BFAEFD185CFA65DF3DB858BCF75E95321A7131547E08456B5C8EDB00FEBBFE
F051806B0984B004F3D2E932239931928FAAB6BE26151101B7807B2F2EE631BD
20B060BB1E61980DDF168A4659E4B9705BFC0D0DFCFDF130BD524E4E8DC80DEB
9A7AD2B328153B21B81883962192FA69600D2D7C092B45D9330265B56B5C8E29
F71C9EF54CFB7AF4B50BA78292EC4A87C2AFD19F1F2B77AECBBC3CE14E3AED6F
03D917F0C8BB0CB3120C3CD743789E435E8230B77FDD0B44AB789CE23D4F6C04
E7278720165613DF02CE1EE6302C0AC1C7CA421B81B6DDFEA56902F019669C9C
7719F6BF954D1E7C03B05F4F4BA4A6690194897F7BD8B47E300E3F5F6B8B7506
0C761A63AC861E5E798A2497DCEE72A404199E546857DBBB84B62F0E5DDFBE88
FF56C2AB5B6E22B801EF92E483A2B5ED9F2404353638616C1C21120E490E3CD9
7683EEEFCF837941C0D95A1AFF7B1DB0A04FA4A80796D144BC1875A846990DF6
FF7BDEA6B3C25DE35B795BD2C5F093CCBAA801761FD57DD90786D064B69A9D0C
7BE6E9DDBB45E069C587FA522B76F6A1CA41DD1A493A88B3E8BDB15D32C5B351
03B8B4087BC7FCBCE1A31F600A210F389D595CB86D1556BC1362EC2B42C07DC2
A43FAAC36B2BE303195268BE490C9D685E1687C92D7BF00C6F8129E347C6489F
D4FC798ADAC4D8727985D1D1F0CF0362D02534F7BD45AFFEE4A232E0CA9D16AB
4F43972FF957469563D0C9922640E5FAE9E91AB82E0E27702BF83306A0C3A89D
9AD2A517E03610F0E824236EA0E4FA2A6A4DBD7A3F1530F5C1B8AEF5E58FBB3B
C878C5ECFD97E10345761C1536F888C3C39EE04DA17768D5BC79376ABF5FE201
1EFEF3B181EE01AEB23BFECB3945F586BFB542B229FECFCD917788FCB6F16C17
01B3AA7759222A9F55EA7712BB03B500BC04C5AC8C2AE631238C83DBB5E47AC0
EA6DC98916E823C45690DD61022950A86415391A609A7ECF4FF731353DCBDBE2
4A081CFA8B150CEF52C48C478EADF2E58D3CB1CA23A3307B21B58BECD547D0B2
CEE72323E53142FF6442DD52B0E7EEF24B393985E8DA7768801D9A6515ED7BFA
D3CAB9C06A9DC307E128A76B25716388C24A39C5E1B3C64C0A6D100F0845EA7D
E0DB3C13B8C18440DA54557DA4B62A4D528445E2423C73FBF82E9961A7926D1A
05FDB243626A4E1984C107C8FD9285F08FC3C879AE6D42023BE0EDEEA1330777
D907055650B89F5EA54F9A330B972958351CD0BE94C0C332A009D7C51513610F
B670A220DE6575BE70BD7CD3F9F720E758D344A4CFB4F15A942D04E4C2973DA5
15E869D196B6D0B8B8AF6825E252BFAF0D5B6184074AD7651D44FE76DBF36970
6318E0C38215CE324E3C59C6F11D65E7B61ECADC94491C5FF034CEA604CDF8D7
FF6108525A437F4391E79987A4CCDAD31438FDA621D9C416BFDCF80180EE6DC7
1C01AC6AD353810CA7938A66631A53BFB72993B36E3217336A50E7120DD85CD3
90DA3B94A9775E4D26BE10DA6E3DF700D4D23CA5874C9EFA400285ED50081C69
6B4BF200536DB86F610CAB158E860CC11A9F0123AD0AB289BF4D315869949F21
8062C29FFCECC36CF1901B8397C3F1EB9C7ADBE39D4E968846D92CBBF9343A82
24AFBDD2E3725D81D4B7B7CDD3F36FEFD6EA2AC2B618EA250759CD4244584AC2
CE68C926D2D7274ADBBCEECE2D224E898D201F216DA9E17BFBC92B38CBC6F4B5
D9308C5B1EFC203D882D491767C248352D5B9405A5CC2D1FFADA3CCCFDC9AF0C
9AABBE24F3D913A9FF9C2E54953BB8FA4E14D191A136FAD0C22A1771AF31FA95
258B6F33724F3C3EC44F38665C27D52670DF05EBE263002D39831BD82FBE3627
6FCC5A538CB4A58590A3D15A7909F012E8698FEE1661A8D1A476FC1744FF5990
9EB59D1EF235AA0E9B3CAAA89039F2494B3B4406C2A477CBD1EF75B3E574D06F
26D12F8FB7690832F900AA6ADF82AC2100287BA3EA1849BE28F519A97FD771C9
658609C4C9A340DB09000AC537864658694FD47AFD8E91C045240A9C685E5F7E
C9C9D063B5F3517F34BE931CB3A3928D29CCB526CB5382D24D9233DC5F927FFB
6E936737D0B438D29A40F06B94F259BFBECCE5ED8EED4AD7124FEBDBCFA99213
06E3D2C39FF0564C91DFF25FD48046DC78E5A5026521A318D369E3FB6100A37B
E4C58D8364936988CB323695FA6890A620DD863BD5364A28DE4283D96979CFC6
A0775CE1A0809D5C2979D409E4D68BB6DFCA013199E2AAAFC3D114E7F327220D
C330236F7133F753DEF6847732C88BFF4EDE18EC80DF2A54210D9739022860C6
0D9C9CC588E29BEA16B3FD22EBFB9D13E7D7EB59D75652870C2B0A3844C5C96C
3FBDFD4730D55851D0844A43EADF55A7419322834327A3FF23A23FD48660178B
7B0C46D0D94ADD48BCAF67335C61B7F2B2B654C70F5370E6A3A8A048BA368135
DB440925CABA05B8A13B2D30D14FB08153A83C906F22B71C52C912A550242A39
3A1BBEF361AFA562347DD12AFE72E2FA971F0B7F498FA3DA42D3AB52D80EB4EB
2331FB631B71F69D6310046C1F5388F50149E837087FE7179E9020062622DE06
4EC1424A3654D2AD6CA06033F543ED44CA2702A5374368C306ABE140B6747471
0C0678EEF70A0C57A8D87EFAFB4289EC577A37B293CF8AC1F7D725BCFE2C8B95
9976E9C8560FED03BD71D06977F200F881FC5238ED936026B990B444882F3335
E69B29DFA844C6B2085D6A445D1F877635AD15209EB2EA71794E9FBD38B14F7F
C7DFABB3BF569214525968F2E15F7597803B1B466B77EAAE2FDDCE250F72D212
AD3F6348FF0F41BFD3E96F9737FF3C885E083C382D1F753056378F4AA09F400E
F49715BDCDABD4EFA0BD65C243EFE1F02829CC670224DEBE914998A327FBA3E1
DBDA8E7B564646B0910BA9E173FD2222DDED8C4BB4813D95408B12F52CD52BE6
6F7C48F312E43FBF677426C6D0EE8AD7AF29347797F3FE7F4D056A5EB03C786F
5F980813B9F9D4ABDA2C3ABF2B3E925512732946A34CF8BB86F38ABE1AED2602
5FB7B374414B09CB3CD37AADC80163782583E90CDDAD63AFC6D0AA517B395597
AAD7F22D53EFCB5A07EB59A046D1AEC79030AE60BDA3395B9FCF935F9C48DCCA
F87401373886FF9BFE508C3A751057316CF98B621A53BFB72993B36E3217336A
50E7120DD85CD39368D683EC8118D800F3B2A7B5EA03E16B204962BC68AE3F64
81146E0271E215FB6C52D696C91C62C88CD8FF89A473C7F853AF6E2A79BD5B4D
33EED294DE7EBF5DF56CEBDFB4EB5D01570EA284E0B6BD99F8C1E7F6DD93320A
DFE801EB34489F683F40FA1537CF4C0E96FF80F95234A12195B725355E844309
FCA07E9ABA0E3904509FDE283EEECB954DB4420DF411793C0AD0A972E2882855
976EF2D9B037517B25373A881D210044B6EE67818FA476F5DBA665F885113CD2
E239B65D0E985B783590A9BFA97738923689F96FA3FA86AA4C503C7CA2D05701
B26BB88508B137772858D1A89AD21A4DAD367B21D4B71F0684B65EE0DCF0830C
02BEA2CAE21DFAAFB537D8D9F706EBF48029DB6BACF364CFE0BA0B773753BB57
7FEC78D8417C47808BC64C513BBF688C6EF2340F7FEF026A40491A38CCAFAB01
2B176E71D3753FA76C60ADAA0354E24F763627F9ECE7F6A0CC17FC4E7D1D85F3
695D2DB9DB7CF86C885B3AD7DB413CB03A47442F759595D0FC27B2001B72DDC7
DE1FBF2AD98445A86BA41C3EC88A2E0976C2C2C711F0E82BBC208850A78676B6
C474B75AFEA18EA3B3E1CCAE874D2C37B6AD9F94D3F3657327D41340F9D2987C
F9462B74259F19F9A26DF68F9278B440F45FC2E6073239EF68BB926C483E82D7
8567C04C5536562FFF26C1CB5FD8E91869E0A83A5564B58F7CD242F34F4F47FA
C184362866F8B534249B0DCC856D9A963DDFB35C8A0EECF092834CE115EBFF29
95F9B99582927DF994271B1F39BB29575F0D72916AF4B3800A8F32F9E827505B
27AD12B9AA2BD0774AB3D74F9B3EBE35498361603F8825518160640698D86D9D
81B4497F62D9402D4C33567EF3C4E04F3775A8D9D46A50C126DD7F92EDADE9D0
697AF1F8426A6927D11568D3145B52CDDC3E6EA3D76220182D57FB18DEAE2349
F27FD72C7ECAF6ACEF4789F1350905881AD6417E215513F8A8224D0C167F231F
80A434F30A29E7CA7AE699D0E5085DA46C34A74DB66F3FA5F7EBD0A7DEDA931A
3F3AB2A52ADDF6ED2AF703AC7AFC361DAE2FFE5D3A5A1A22A38C2194EFBA396D
91269F30FED66BD929918A29501B77161586A6D3CA500D103B7F02C07B858697
BB50311E352962F28E152085C5F68BBDC9066AE3BB0516F7FE82C45D3F4EFD8F
628D5D72B3A9D95383171187CD0E33C8CD308C436B61BBE6B31E73863967A4FF
7FCCCD04CFD61476B4495F908DFD189B19204232F30EC774AB6AEB948CBA6F16
99DEFB072954AD5D7484716FFDE7B882CADC56552345D693624C5241DB6573D0
A1958374CFE21C11D4C3E93796E8762D4BC1FCD6B3EFF627203630AF2BD897DB
3C7DD9D719C8EA39425AE8849A4C0ADB6473D0A480A00C51EDF237F162C25CC8
EB574B11C5F168849F68876CE40626197D761B1DFA5DBD6CA4827C23FFE2BCAD
EB2F949DC6AADC4C500A28A6B2126EC9DB90BA60D4F0CEFF050A2D0DE5EC6E01
05B8A4443A373C8DE253233006178B9A6BC698210399D7689ECC934028FF5686
8E7DE3C42A87CFED169122E5EE37AB81456EDC2766E58C7E0919F96124E17ED8
59ABF1FAA17C5B39F4A20A3DEC19163D7C748C41D89813B7F4DD63E3011779EA
F2101F7D6096E31DD04493FF3E3EC35332DFE2B00CEA54EC340C270BF01EDE1E
0C5D948BA3817DE8E54F71FAC584426F531F4A3F9C4891C704206DDBDEE99048
E6D8D3238AB7B166C4CD509F85D509D574766075BA04259AAC658551DA940B46
55CFDA8EAF3FC198A131023228625D17C0CA52B7166BBE87593C7C8537A5FCD0
9950C59D0B79467CED736D9EE1F9DD60C5A94732BE0FCB9BFF90C4C783DD9835
79A30AA98DC0D484E59CDF6ED7F482F6056F4864EAC69C58860EAE84195B37D9
93CCC2992E4434D1B356BD56EDF5FA05A0E36BD22862FBB603738B2776D1C11C
1CA08BC250C82B4E23BF1A75C78A77CE2BB4368A7C8F48639FC3A0B1D2BCC7A6
7CD65AA53D6253DACDEA33953718948E036ED8C71DA249BA44E0D0D3F6724561
ACB8D1BB8CC8938D0F390E2C08646BE73DF766E216FCC9E0D3B13991A1358B7A
624A37B48C6DAFB92FC1F21A4EC7894E2A0D7248E31D824E1ED5C40D3C40923D
A150C493699F0E68263CC6780FC3D22EC26F9B2761469B0EDEE8BA22F0299859
D8702D42FEC131372A2D75A4AB18ADF4ED2688529F88F31885293D57AB5E34F0
5EA975E6CA108E6E69FC2DA2140F8CB65E040980BB5098946A6A5FAD931AADA4
A4CE182C8919CFB897E834D81079750511F5260974E84B5A462C8F2B21B0F1F1
EE8F3F3021152941DBD1298F498FE1AC872AF2B85E7C1C3E750A52C070289822
BB030281E1D32D633CFAF4907DDE965A3959752BED492B8DC2BFDE6E0FCAC828
2CA19A33F4F18794570C0036D413CD44C2C4ED843368A40C23317C6AD3EDF0AC
BDE1C823F1EB50369E7F4291275639C6DE6964F3607C90166D11C29F1BB50887
AD84C2E2099F73A2E468110AAB2BC836716024308E7EF2198C005568E9DB85B2
A0D87AA2DC2639310D349F33E30EA714B955D213A1E7DFE51ABED171CB2F109B
7CBBD7D11FFECA4C326D9D8B30A01DDE65747AFDF7CBAF4296A237E570D6EB12
BBBAE986D79303CA403FBAE995905F74956D7C9B33DF636E35011FF6D197C9BB
157C5567D2BDEC73EC3B8308B94DAE1C20EC756F18E29EFBC49BE014D25D83EB
3302EF6DC77C07A991FEF25E7F81CF5A5C4187AA81C5BA8892EF2FA9F87A6A97
405CF04289AA414C90ECCE1DC3EEA985CE1201024931731D2FC2BCF1F660E826
2CD10AA45C67562303483314B5B3C912E6808D98937A7AF5F2E15801E0708687
B0522040AEE5A24176DF46F0BD3A5958376B794F2043A295E20B3B18DB2B39A9
370330D258EE8515E8CBC0DA34E79D826951AA5A7DBE1AAD4FCBD9DB2E128930
8A60706034F1BDF0DF8EF298786806E9159B3578C98AE81C073AD4F05CFFEBFC
C4E3F3D8112A7E8FF270331D2FB475491A56991B0C7E8E4506AF80B17E082BC8
2917D167A542ED295055EC20A9D8AED089AF77F0C5D896228A3AF8A96328F146
45117BCFC22442209592A67F5BCCB859F8A683E7ACFA3D76FA47E1D2A4777FE0
F2A4F6CD518EB67C27FF41BA9144CBC59F5951625C55D35947AD320756156AC9
B648E7A1CBAC44E9B037B6EA815C3D70DAC34AC084B0F93C96E71C2A75FD1E62
9A7FAB889C48A47680E82D087AB3294E30885DC5F1A7C010EC1B86BFE8B4E0C2
804ADE48ED0D0F1B79AA194C275E02F4F59BE1AD9366701E7ED1702D31876A1C
FCE58D619A66DF8CCC31163198511A5D03468042550ED9739076EB30477D455C
7DF225899E4DA1D0B1F0BBDE4C21E3DC108365BEE27362B2B952979106065D20
34DDAE9C7B38F502A82A0D35F24B66D79A4A8EFD7FB7442E6955E3B3610101E9
6B6074B8A221E8D4D25A5ADD22C031A2171426881BBE4090D1CBFC4FA7A534AB
912E238315325F66DDE461BC6B773D779AD7140F7ECD8F3E0397E9EE664F5D6A
F7AADA2681AE19E69BD63815DCDC675CEC58EEB5D5AE5274C223DF459A7763CC
15FAA0DF5303BDF4C89757BD860D5479A701BBE25071A9AA42E6298B3B7A30E8
7F179327830859475235FE16008D336D03467C27E26A6AF4B4435A3B05D0A9C6
548683910ABFB39DDDCB5102D8317B25A8A3F1CB42929FB2EAB74963AB5A8A74
7916551AC63C78F5037B95F0BC5151B2FB0997E30E10B11C2ED407DBF4E8397A
8B39ECEE402AC2178EB9AC1FC6A01EB4A52E159CBE870914F59D363D13AE5C18
DAD1EB75118D4690A28A18646AD446AD3B7B58E928AF7F0DB257A40AC29D2907
B09337C085CDDB6DE033212209872667423B22D9891D718FC14E01FCA305E069
9ED2002033D0851E28921CBC75AA14504CD72A82F621FA0F11B18744A22B3766
4686A263113B05EEDB36ABF690B6551DE830F76DD45C1F88BD18B679BF9176D2
E877C9D142237E9933716EC92EBD3698EC6F64A790E8A8404E0245B8A16885E3
4E0B8426612D406E2110AC585882832B7312BEEE75B0C6F18FECC458F7481AA6
A33920FAD9A7F7A6CC1703EE06340147C9B9399C5D4F9B7E17AF42BB22A0CBC0
D1FBA7D7963CEC86789FF7E73259966B461435FF38987CDD4CD5F214B14C2D60
DDF6CA62288E4E780F8614C7749C9406325C84D575B908144FD6A49D62B4AA48
7C72F456899AB09021DFA0C89898662200C64E39E2DE83D6930685127D91CCE8
444B5C07B02C711B0608180D273CDA746BA5AEA5F75C8D15577ABD8222985FAE
D7B6A1CC891D07185666E2AFD775C429AABA86C5E24DD1A399C71785CB889E27
F4F05A1326C4450B4AFA8AFB0FAE8E8F1399304DEFA7BD47ED7EE2609E8397C2
DA3E0F382A4C8057DC8128494CD07035973291DF8304FAB487AA4B4CA279CA5C
CDC91DC8F5A55397E2CC27E11DCFA24B47253A03A99363DD7B496A2F3C22A1B5
3C2AFD10D395E36081D1ED265E96E1AD21E66E8F8981AF7707EEC32DFC80408D
750304E9F9A27D108E10DBD043E7B7EB3031418152E3EF415F3BEDDD30F378DC
BC7DA169D8A9CD4C32816A189FC1FBF3E3606C8EF5155DFF6BCEC22ED954560F
F7A1971E39FD53A529E5A810D6F9F78F44E6284817A248BC4766A7C2E1CF9A34
92FABBDDF1E9B492DA597DB0392AD630F185A7EC9ADAEFEF7F6A91A1028E46D7
6289EB1BC15D3597CCBD9AD8C2434A8886D583181CFE693F96F674A02769B03C
177EA9B3ED2A3C733FB9D45F81757CFC8ED6BAB560E679B6AF600C4DED19E2BD
DB4B950A113ECFFA56DB16278E8EA73FE41BC9A94C7C4AE6CBCD9414E45E92C7
6EFEAC451D1D0B2A6BD7F2CF2AB594187E3FDF4536A08DE947803A7028C2BD74
CBD41DFF5CB88D0BDCBB4DB843C97AB6A37EEBE2BAD7DDD63A967148637DB317
EA3222BA6ED022E21F6FA83A84FB5E1BD1465E84EC54E446A01AAE27CA175059
B26DC2CC164A385FBCA376332D27B857FAD941EF5C3B1C10287CB787EFF59E86
B4A72A199A287278572EC9BA14A0944E37480AD3FF9C10590C070BBDFBD3E3D2
947353648C62BCFD951918E3C38FC1840E02D9AB6A1BB3D5D9A85A491CE45642
7CEE991160A5E6F7E20B8F95A399DFD3C62C04AAB48F6BD8C8BD63D842DA9F7B
163CCA056BA39D1151A17BE5E15126B33BF5A990F1C88BB20B7662677D7CABA2
D572D5EDEF408B689DCAE8312258C750110A03208A81CC2FE254863CB2898E45
7A7E6410E86C95AE03AF069A47EC3367E8743EC5C79E5B68403768D472C7A3BF
07DDC78A7E0B1B67BB5D637858718C421391BC4E0BDBECE4A7FC58DCC2F00B5F
26227B1500BCD0885539794E5745D369EA6FDA1B21A50A4E0E181F4087071ED8
B4A37A8A4DBE6BE96708A6B5367D00F80DFA38AE1A5A09EC405C9B9770ABF579
FC9115F2F90FFE1C981EB0122C3515BF2776B5B833FA120AE2A09C58F0CF991A
F88820F1237A88AD72D8953E25AD52CB71EFCBD838E6AA380A9857E732A234E5
0243714D445E4572141881665D08232C5A14A7EF671899B0597C5FAC687ECE91
BC646C0919C9FF009F156D3D059948E68888276F6BDFBB08490E8968CD02762C
E02CB727B8B6F6CD8076CD217D78472D45D88F12CD081ACF2464284F590C1CF7
8B17C4CEA5EBC76C94D6DB8098AFEEDB9891A14C7D1E4F80ECEB0AFB5B8AAF6F
AA30BC7DDFE923EF6EFA238E6D8497C8889F77AA9337C267FB5482E70985D4DC
2336C87B6AEB753E58DE961F654E12385D1EC21D1C07B38BB131F06294B45300
705B786BC0D0653933C657CF9C16E47D5CF22101A8097E43949B798E6418C80F
47DD86739DE018177CDBDC528E02E2DB1D249256E80136F7333E22F493A53C3C
1B37341F96F2F8FB4CD2BE21FAB287346338B9DB6F83FE557134C14144A554C6
246126618520CD1D15987A7716BBFC20EB3DB805CAC99BDB86FAEEE068E55B71
86855063934C5716EDC3F5056BDA900DACC4DA8EF1641407D8477DF5922A707E
00F2E580F2D68DB0E039B398A8725A856FD9955EFF184CDF0D4ACB0663D81A9A
C387913FCA9209F9142F9CEB88DC7864AE671EFFA358EE448BBB24E1B44CE0BB
474DFA01B0F4CAB526D3A9E409045548E26597DB0D49B84BE1362D29F03374DC
A40F5946D9266E07CBF681164FEAF332C19BB330E55D64C777FBCB70707F4F0F
088114534F6D36E4D3205773D416B3A6CEA55846C3FD406C74CE152AE8FD1BA3
263BE0BEC782AE5B29D62ABA4BE9948E84025FA6948656B75C1A20FC3A54B30B
97E23CD3030B8255F7C5991A259F3A272B7A987888C1E9D50C054CE99B9F7530
9581C17D24E2CDE66BC6BA989EBB3EC8E44363ED0054779559FE027D7FF581F6
39942945245D8F3401965C946A283550F7DFE9C41CA2E176B812C0B6AA347A4D
E13D0BBB53DC7DB84DEB6DA73092F21F04F718009DBA58BF4FEAC4B178FE624B
1AED5AA201D467D1E213B2A0E953AD5E92BBD7756CFD54770E2A8D81BD4618D9
16A30EC701E6F1E9A1CAB183E05EF9F3644BF2530CB119078ABB914A514FFF57
3016B657372252EE24C8A9AFFEE819C26F329A513E88E545EAABCCED3515E2A2
CC45D37C587DEAD4AB39432B543C870CD2885E71EF296FC66D1201EC86B2DBF8
FDE6DC70B433B74131B53A4B975E430FC405D095CBC23047347A5A3A9ABCDF86
69F350AED88996803F90449676907A475918032005D9AFA92577843CB580B537
134693F8E10D744176653B1496A70F6AB8025660CA3EAA7C93B7524614BE7C95
3DEB713AFF92AB12E18F4E797053166FB0DB325F71E1100599BF781BD5C69282
459F75ADA02D7ED5D348F7CB99CE649F28845A536EB340FEDCC1BDD57D885BC7
418CE0376428CA16B43BF85D8CDF4190293C6BB60E204B169B7F1D3BE836BC05
E2A1757FFF4462045A81539DFD46D03D98B985A5FCC35A8891C300CCF87A6C60
2AE0AA7A22F7854CDB963B1104272310678F74491DA1572344FA54544DBBB54D
C81750CACB6E1B551D61357F8DDAFA288673552253C08645F0BE1E25404BF813
1379A0572664881E941283141A95222394672BD2981221E491ECE4FEA0955AD8
0C2F016A43350F0034B1CFEC671B7F820C3869E218A5E2D1FBF36AD4440D61C4
D899C01A1023D0FA02A6883434A89A6247F6776FC13D29ABDF15BE7596617C80
96A8903EF51E091BEACB8ED266CB65288944A5351E6E59C1DE472490624397A1
A8DCF4530A89DF33968A03AD75EF9F001245BEE77B40CEE6E191449727385DBF
1F78E317A9C1AC42B75BFC767EECE17C65560A0EE40867CFFC09B21CFFC872CA
0212753643FACFE8DF1F7B0A66A10231EE855732DD7DC86ADD2122AC2B78035C
26D3307CEDE7504AA1542D7B23D36C6BAA8338AC2D98DE543170CAA9B6369510
0CBFC23DA2F68B499386161B4BD1F2E0DA26925DBC56B562DB11A93A95D033B6
AA4DB98BA6EA32B77FDD0B44AB789CE23D4F6C04E727872016561EF83301FA08
4FA32F9CF94CB93E36ABBD6939CCD80520B24F028181B75AD590B3989A7F340F
D59C3B75CC4A8E2CF32202318BADBD95D136728FDC1F3B174E3596DB8CFD41CF
34014D72EC10A79838D648B565458243578245A39446C749095EFA75F3205EB2
BA1A79554E8CF3E583B6E8910CD43E2720F2849E4C3C7B62E653903867AB4A9E
1F327DD059D1774E270C1F4AE58375113402DEDAE10C3834FF23F23A74A5B940
06A962328555D68A530693B0768B23F9CBB656BB32CB7B55EC602E20FC9A8BFF
BD2EBD9FE882315994E7704F256531E5C82CAECA85AD7A7116FD34E749426FA2
09CB1FB124D9546B7812BA06D15AB7D63FDF71131FFF47E4533DA66CD9916403
1767651AB6AF9270FB6C7A21D6F979EEDCAE9E346E7588B94B16E1705848382A
85282F79E181EFF14733E3B857A5E2133CAE53445277C899FE86E54B8BDB1490
AC76FF84E9040282EEF9893042350E8125A6FC1CC6271EB7B2024776CED85EC1
BE70A479FCCE5C4093F4AA8854274B18E2252C60D28A6887CEEE576D4111DBFD
CFE9B3458F27265ABBBE18E2F7ADADF3654EF0034947F21F3C35894F722BD455
06A4AAD2312A280F0C07F0B99EDD3715E922E69809CA218CAEE0B6F284D12DE1
E077C857E5F46A097C660E19D4B63342173544BFF9755357D2C880AFFE09BC41
A3354429BF56983D37539CFA05C729DF5DFA05CA7A3A5CB03219CECFCCA1D341
7DFBEA3B8494BC281E7E041CE0E31F9952F450564FA674BB89968A501C4E3F3D
9B38682E843B0659362FDF2E74519F043C7C6ECB224282149069E8EF44F3F880
04304563712463BA78A9CAE6005CE049612F67DC6050F8FE9DBBFD35E9851DE5
3AD5785D9A05A3B7CCC7DD07DA45BE0548E0A71C5E5854180DB5C24F99251BB5
4FF8F809234E7AB74157EA5462514A93D17E8D852580B574B22AF2A80A80321B
80CE9EA343762FD48CCAEB508DC528BF2F3B53500DA95245639239CD255A10AE
1EA4B817FEDAED5B5888CAD5D0B0E4576F63A6444A311CED27528FC9F64E0FC7
8FCBA2BB6FF4841D3F89AFE2A654B2E3644BC9E155CC435AB4648194DD8DE169
E81EF4CDFB48DB5669F1D14E72000FE4701381F8D59D9CD0E73638CE45B8F982
E1A0682178AEF0BAB3025E4A1867E202FC535B20D55D5E0AC9C0333802E9BE49
B3C0A7EB4988A9CA058E3213C38640EC8C67E82E719C50FA71A50624B9FA8B58
7710D7C20A15B20E11BE5F785712A016C61382C028EA90204B4D372CA1010943
E0D86E136ACC4E6ABBCD32511BCB5C84269257DB9A0E6E337B88ADDB5A4B48DF
32A22DA2E892ED698A9777EE4FA979DE8854B1E90DDE8530F6EB1DD826579241
47CB84CEE04EBD894F7E9660703A2CF41455101241AB173124B712EEC0807053
7FCE6EF8112904499A33C614C13195B619FA101B874DA1D13EB6AB2CABFD8AF3
2382EB6C75A0A0F616D149146D61E0CD6054581674725E8D59C320283468429B
09F0120774333480C4084CF6C7C921A052
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 78 /N put
dup 82 /R put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F48833E9E
B7BFE6134591C923F2C91D77A132347F5F471F1139B9938E880CC5B3409B3385
9FE870D53EC343C11C946BB9B5FF1454AC7D547539FCBD3D77D83180BB4741A6
90189230B9B61C6C54309B61623636F98871724F9A85088E44779264257FFA0A
FA05C2842C534A411593D10A76CB09C8FB45E6E44703FC7A51D81D3C1E8F27F0
3AAA9F00AA3A998A0C661B72E46589CC08EA87EECFDF36B819B07306C38AD155
60CE44A39581BD6B555165091C5D4107149E976E2488EBD830CCB0A350C695E3
ABC1069A94F16744A6F2D97BFD4E208EB2BFECD6B74C35310CC3567F94414FB8
334C42FEAB58B02F67E9CBC1855FE7DD7C1B142979D80DAF96A3F3517933574B
07E1CAD5FEEB9AD584935A58676976DDD2B6E118FD1D46453894775B2DF1F871
924CE2C0479EA8C8C337504C1F456B77CD97DDCF704455215B860BD0241DDAC2
F375DD996474504545DD2C1B775E4CAEAC1DA45C79223AECA9329513ECA625CC
1C5FC3AFB291A6B75A593BA8B9CA4954AD9069797717CC0B929BABA88F67E4E3
691AF74A94E95E6AF67C7B550FE44C63FAA5B404457CADEA896C69E5262430E9
787D1CB2FE11612EB29CC828ADD9B2585FB30DA75565D2D87C4AFBAEBA55678A
4E32C9C491BC85622463D65C0E9723DA72D45C6893928AC636427894C0E9F152
2EB691A2A5801D5A81640C764F9A566B08ED4A961E3BFCB36482DF85E9BBC7F3
5247FDF3399AFA35B53FB77245F078106D54A33F9750D97EDCC08D9B9F2ED1CD
BF03FB8DCEFD50625819EA67CF3CD416A288B64803F7812C8098AA640AD515FA
8DCA20A4D4C737499EEF3679764FD4A04E5228B1AD544A8895FE9041B84059DF
8838BE0BF67B63ECCEA2C818E780A376155506DEAE8EFAC53CFA081E1E3AAED5
48503118A8638431E939D9E13BE594932C814BE6698D6FE3F0A15F05D783EFC0
F61B5669446FD2E920C181ADFE551ABF15D225BC65D7D42768BA1EBBC19F64A2
B184B211D5470F81BF381EB20360544635CA4D3854C52FF691A36F65B8FC21FE
C40FD027D6674118CC6AE144B22580218E792D66C0A78B247F176C5DC2354D7B
D7C057D61D96D58A77B1D185B846C03C5E1EABA4E10AE611F9F6101BB688F315
A960C17110CC78977A7E4E7192134CA69E81694F4B9C95F55AA0E0993D1AA57F
1B79A6329C4CA5AAA7C11D2ADAAC75F205A46B98AD7B55C3E2C848B7199BB7D3
1FC47D6B8B5763F072395B0290F3852D907316BD2EFF8DC8F0C56D1270CC0240
FC4E984DE027548467A1AB533FCC30AE9474B0C7FFEE3613B07F31CE784BFEE0
D1082C6EA416F1C9168C61FD6AD9D85529CC3E6524756E85FE5F3EAB6872587A
ADDC45FCCD96D682A7955721B85FFC8A38719A69DFC85DAFF614E4C2FDD72AEE
FD4AA3A0A1313F7F8572D560C6083C9E631710C6B2A3EFD47ABCEF65271557AE
21E0C130E70A8B764150022F6E697BCAAC6986BC9E53751FA783E0C060228A6E
A40AD3F2BFB7606DC0F40AE7B8E82FB9A7F88FB3BA8CD0BF99C91FDE78ACD0F7
610091B3F0CC1BA054F52269EB58A332EFDF0E03AA4EAFE33E3CCE1C24A0A7A8

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA411984C107C8FD9285
F08FC3C879AE6D42023BE0E114B374F049F75FC09E974E64A63E36F76D0DCE3B
3E57F4A1C80AE684E56726F52F4A49A022808893BADF86ECD0EFEACC9F5B7E84
1DBC5A753D3803C89C438B0FB99CAF607B7B16433C977215E7F78D80C54177E7
D853C4EB05C108B4859A21AFADEEDBAB163F8C1C822C4DA3FB1A29EC3ACE79A8
C5A00293FCA8CAD6BD2A94098E88D45175D4D9A88D0F77DFD5C14FD6081321C7
AEE0F7914B79B9ED057E292AC7A96CEE551D96F4D85369D2B4167C0A622AFC28
80C6D6FCF36412F8EEC622F2783C9F1A0403E9A5D876942803F08147525ECF7E
0304D3BD24256912A2ED3C59B32CB4091040E21EA8F9253E6CB7433656B87E1B
0A17BA09B89DA54E89C36AC72560140421800FFBFCF4372B123AB0EAA5A28063
EA72DB6C8E32FA349461C1A8946B78E05C110976E5B4B81BD89C82D81AEC14F6
8511ECD14AC322A438BDBC4262A26D679ED4D87F89B2D3FF1A88AEC671EC30FB
4DDA9E1BD3A55C4D59BBFB7F5EFB232FCBE3C721D8D181B02711EE2C105FBB16
BAAF98F469068B96F7ADA96E4C628D450E7E1B4025089EDF05D020C458C7F3C0
A9E5F676EB11E606954B3A3613D4E1DE3727C04BAD9177A42914B371F4FECE62
5C47EC539B20F4FCFB72DD0EF45CC71FFA185F653F299CF0858E25008D1538FD
4D2748FD791113395323560E169AC68D884E15ACA3BA6934ACB18CFB0869D655
CC9E8B7B2A883E868B7D9AB5F1966D7364A38F999D57EA93937C58C1343F917C
4B77C3751BE6F455B48BB452D8EAB1CE63B736201B598CC9484A18CBF2788133
19FAAF6C66177F200389C0A6667DD18C92268958F56A3CDB6D7D866B6DECEFD6
F0A675F2A8ACE261620AA95755D6941EB85166FB6E723C0E0B8B5F6B4565ECB9
73DA53376E96B94176576F807AC241A8A79A363F9834B3B51D6F2E1265B5B05C
531CBCF02590E866E9DFD5B99028D0E71DB7D816A29191433F7D9CAEA7484F17
687D2F3900B9524B578BCF2CA6C2E6624714195463EDFAF7DF63DEBEBF603B63
1AB2F750D81E537B3FF2B21C4398EF3C4DAAA73D2E9E02B7C7F7C1477ED8B108
56C476FBFA10D11E87A61DFE3103AF0DAC08C4A82DF0EAFE9AD88A24905F7DB7
DC8097C0D9B0FB9650B81D6C955061B4CF384887BA2A9A504B2A0A92D4EF6EA9
60ADE0663431603335A8DD49D99E769BD7385458EA8BC86B3E8F0B8C9F796139
AF50631A0D4832346AEEB1988BA51832A8F28166A3DF8A725E6339ACD102D12B
4C0FCCAFE83B30690ED44E2A51E74C0DBF0DAD86CB36885B74D5CAF5BFA609EA
2FAC998F9E08DF927EF4B23C07EDE4EA5BEC2AA85224F7C29A671F032197BBC5
EEF8FDBC70A40B5551A06499BB39794CB9F4EDD4D1AF9D34E4295AF83BA1604D
89E7D7C3A2511C0DDEB5233387AE473351ABD014CD380CEF7BFBB68CDB7C90D1
C34B6BF4F19CFBB246A971A0935816DF89DDCA89B23C9B25E0470A880E6B7E2E
D47E8E182F3BC9D9E7EF4900C327E20248F7D1F709489567B329290C22246FD3
51549B2FE9F545F713BDE7A2897E69408B6925AC50729A5390AD5506F3E47F77
E7D5423DBE0776FA1387D7DF0DCCFBDA67F6A8A740628F8FC7B19054CF4917BC
54655EBA7CAAA852861A25CC981E526F1D803C93B2A2A07D4200535F51BE3379
AD85E97DEA7A05593012814617BCA0F49043B90BE671C8E7997167E57DEB055B
D5830ECF6D6772E5E77D6D2AF4447273969913AD25DD44676FBD2AECD4004E6A
3546718DC369D9C0F1A3DC5248567195DA50C4BDB1A8ABECF4637E52C0CE5330
16DDEEA851DE7E5567C549912D4A5AB957A6864A7656C8B578CD64BB9C55B200
F32B0763BB2B8842FA5714AFF9E5F519ADF4936D2D0C1BD6D2D64EE1C52A29C6
D3CEBD747AFF17A6AFF908C79C7F06A14D933DD82E32144FAC0F0E34F1D0ECA4
23C805F09220A9BF2F4841144E5B06E3583F5C997211E5081EB8307EDCC5357E
6ADF9AD8C35E6A43B6823C4E3D2E01A09CCFDE6A24BF40246A18A8D921257BE9
AC6BF7CB0799464311BCB49DE285E7CCA8EA2BBD321844409FC9537DA077CD8B
62AE6FE12DD1DC46B921D8BAF03715FC56E9BD6BF2CC880FBCDAE2DFCF164BB9
44C5F227B5BB9656B4E4DB32DF74EEB735CD1C98201F895AB94234C55AC6F42A
2A420EC9F149FD6A55F1A51A895E285885972113C678A08DD533DC0E8D85F9DA
FC5FD842F417265427E0F5E3318CD532395FD31FDC369BA91DBC1F1553A8769C
89B69FEAFAFA01CFE20B5876AAE7AF8BB5042264B6E88BA8C86C0D95192C772C
129F71427E98CC2ECABE772CF6B6F6F3383B80D637D761A7A992CF58188FB0A0
4FD6C30AD69475D7C8CEE1255CCB36DDAC9B974D3E6419A084C637858D49BA7B
27E4904BF8D855940AF0DF3BEEA121BB82DA620B2E22056DCEDF1081E83957FE
436005068444516D156D282BB7BDFC55B4522C394B3A544159893A41D33AE8B2
BDCC9705D1EC8848293ECD9599CAADB5A4AF32F03D13289DB062EFE9E62D5A3D
EC03D1F5A40154E8DA0E65975F32FEC44D28C440AFED971B846D770231C30451
308337E1B50D361D971B735BF61EC499EBFF292FF20F423A30C79C5CFA483AF9
9DC1251FA8EDFCF139A86A88DC3E1A94A0EE0C23525B292A271029E3285A34D3
0201E5F48DDC07E52E850772EB210276CDB3B1DCAA06E10F28A51822A85F5258
2848C432424122267304EC5799A02E0F53322EEE450F6DC39A4F03032CCA7A83
2255D2C3154FD5480E88E9BEEB2499BF34A46C864A443EBAC31D44C06BCC58D7
37F7D239EBE3EEE1A4F981B35F821F57267142DCC4079C915A4D01807FDC883E
15A2016CE4D853093DA735DB67694569E8A3115B94FFCF3B201FB213854CB511
75B088CCFBF6EEB46D7BC3B3B23956CA9AB504CB4FE1C4F7A53B8EC2FDC7614E
23F7D328DB309EDF140514463E4AF6F8203B584572BFE5E7A4BBE15B794A4DC9
2BF186068C71B851A7F85B6333C19C91E780BD40FB1344156DE7712A41673F44
DA2E1E7D41DA6D12CB1A7EC957174A99C231C0BB58BE9A12C1C5D7D6F13250F5
5A041447594422EEFFACCE6AF7CC9768F7220E293CD94A9A2BC49A12087BE0B8
F1077BB54623DF0CB4305992D95DB9B45BFA74F9361A0D65BD272128AC7611EA
60F9FBE554BD27786B870B25727E7084BEA8B5301F2CB76606EF122451DD2380
303854FC141326A5EA6B9EC4A24F299EFE32DBF5035ABCB18BD682234879B240
C22502A3C381186F39ABF5F90E52A284053108EEA896B6638781570A540DBEAC
2A6E2F100DD95B678B6F190CC708CE1DE39663F2876B13FFA5B6BDE7BC6408A9
C824F068BEF5AD61EB798D2240D716C6A657C2EADEBEDE7A58DCA83ADAAE5427
689ED559EBE5BEE0A331DE6080DD9FC3B6E3A06E957827E12CCBFE3134296141
79017902E016399D2282BEDAE14864E48C57D0F833DEB0CF20679C406FB576B9
49B96DC704307340B671CB454C2C618DC18900AEB3921E1193A47BEAF0D9AD67
7703A1ECE6ED7054DFD21DBE1EB344E7ECCD28B98FBB721C2095CA98B2702BC0
18EDE986D00D3F68C0CBC50521346A87A21AE7BE023A0885C659DC3B9150EFA6
A6B4C4F7D0676DBA53B76B152BDDAC3B6286D645D0EFB8F2B182C37521E8E9CD
D070AAE46948ED4831B915B8E21F640745A0AB651E200D6EEEB97C9509C9294C
6FDD6D4FDB75FB0AE3EA1138F6AC4490E2C94CCC44A38CAC60B1A5AFA8D13253
D0A84FF84BF59399EFB8B4FEEB4867FDE6F40B8EF94270AF28550DA95EE6E953
B4697B73BEB525E37CB661EF5B428B8AEBC502C6D41A9C6001ED16B0E92B66D6
6C81576C90A5A37C5AD57E9AEB2A8717F653103DCAFA819F96CBD0A038B6BA98
B6078C9FCA1556AEB8E16DCD3B46B8011F695455576CBFDB9A0801E5AF54218E
BF26CE2D11FDA4C818B0A3812B714D9025814369FE71C3906DFF16ECF45791C0
B02D2423BE598C47327A49AAB8603031E7FCC667A5B810B665519E7E1450E00B
B9D0279F2435AE81027650945A5FD5CD86CFE17B5C184328F41F46D753999F11
01EFED7759E39C831DA47BD4A044943248BD9117411197AA294D99144EF52364
BBEF00969C9C1963730CA3AF44EAAC3063B0E652019DA8C9A7838F8E97B7193A
12D4FDAEB0748EE2F49AC021F4F38BEE8DF2F8AC69C7433BCBF6334A59D6DEDB
23B6D652E67D3144EC253C0A636C246DB228EA31C9AB898456287492A5438EDC
EA8442C6E5F1B697672D9BC06AABB13F6BA87C93949ACADE34330BA317B27B4E
249F1A8C5DABF4E62D726C4A6A65B26A2B905FB8E060588FEF6D5E4D0FAA5292
F033D145A2563F3B0588601C9DC9772237DEE71988963976CAD0463DFA4613E1
C7CCE314026A46682D801AD3857467B393F0E394D5125DC95F0CAE42CC19377C
FD4893E36CE80FD8350722FB39D0B1B9645A3C1F25E449B0BADFDD1614952001
528AEB8EF999DC291B0F002A09D5F939B7EC4AD830805823B738044BA1025DCE
099BF4D3A534A95AF0B24B801710B398D9E9A95138859A8197F8EB7389FDC187
4319631E4C662C9C68868890B42D92F1D9D6BE7CDBB243090FB70F146C442F98
915291EEF2B30022335CA4F819DEF0C6103AAA90690F834C207BCC78F38C3B9A
2AA51F2D946ECEC03D548BD650D45FEEF554FB1961F675BC0693A324D5BC9499
B5C5418216D136C4B20B968C7A5E01014C82059C7CF51B0D0645A6201DC0CCA6
0576BFD4641C793536F1B526B5A4CF3A2E61EAF100CFDFC3D8CF58BF211CDC52
6582E08EC302B4E5E8AD40D6C480415E7B5C60AE3D43E04691EA49573ADA3956
7738CA27AB4568009AC0D046E2F724B9928D3272F3477DB51640D7AED32A610F
E0B50E082471B5872E01B20C5E3CC453B37C1BEE40ED1A5A247FA60AF46315B3
6EC0F51B611DB3BB548FD2D8337553BD470898C2113755D38F0B959D2FAC2C5B
9763CD5A1D59EEEF6DDDC9E7C61763F483F2A858182EFCF99114F384B2D69C75
A42B747C9D6B5313CE4D37F797DD4B69DB1E8B90C4BBE8F5F6F6DDCF3D645765
24BE0B1B9D79A76536DA7036198FE44E75A25FFE7179D2096AE48F387E2523C3
9EDAF5CD7F08767EC9843929D1039829938E915BB220A5C653EB9FDAA5CB2415
83B84C15688C6165A8BEF156F6AF0D737D2C3C9B1F817AE48BF7E9B86B137CA8
D14ED5380FCCB5C8789FEAC0EB2BC5CD3AB101473EC3D862D62A64720208B3F9
D7C4C4305B192D25B4CCB9A9D05281EED29F7F78AC8D39ED703F7B55B6097E73
553EED34DF8DA712C29AE26CA6337200742FB65BAE285D806F3273A4A2B6C88E
204920DE3F79C14B02F024EBEE5C1E79A408C9BD1DD6CB35C6C62E9CF1599E25
A83C693812B2CC6054CD1C5CA3CCF3AAE36FE01A3E5E6CC49C79CA23DC10ED80
71EDF035E668E11F681017F794EDE4A6D89064841BC9B7B26769612661F78045
9D9932AF482B5E2351E3BADBEFFC86525B7B1FDDB27FE8CCA96BA7BFCBFA6279
4496BF39361B48CA8686071FF45FF489BCA0F4BAA4D5D965566DAD4C08630464
3B80ABAE1CB6A67ABFAD25F281D32B546D8D8B72D925D939C03B73F2C6C244AD
40797386BF466E372CA9F7239FD0DF10526377258B0275495A5FDA5515EE4FED
B3DD9AE5B2B077C4245513CE965D1C9B09EB62F0EDA9F8E0AF2AF7C74DB79A2B
45A47D4119D363B0AB3D08DE223E7620AD1E77F2C9F7045257D254633BBD952E
9553773FBDFFC20DFA02DCA07F57B5F1164FAB22A07618EBBB56D89B4557C719
2CCD21A5252638E44CE1AA3697605CE4CA8FF7ECE554F84179D60D0A12F52649
4FDE9DE0CCBC968754048C01EC7E5C529AF8688CBB543C09FA7E4EF5E27BC07F
49CFE7A8E40CCF6CFE964A70EF4C6D6B5E87EC197F07C4D1914A61CC4F481013
B1B34070797F8B9FCCCCDB9F327097EFE73DBA9E508070C5EB09882426A59D0E
BE014A3FF2F87FEAE21C865A3CE1C164C96B7FC65CCDB5FB0D4143818B992AA1
F74850D45186D6D77C48E43DDADBFE12AA24BD66895CD2EE2EC7B10432045AAB
661615810AF7ED7C6593BEDB64F65C63D69A6F613B409DD33F766E798D2137E6
B0AC10F2D31DFDAEDA30930DDCC564D440B4FF77F738C287B0C7C703843BB4FD
BCA6E3663EFEBEB9631776656663023245F04A9591899E121FF8BC2E9E121729
E403E4EA6C788EB48D83E3B14A73CEF43B6B84C45C94919231AD90B38E718254
86F2C563C52C7A22BF7AF3BC490D23DB39F06E7C2AA3A3F99E9E9848994EEE65
2E3CE38E4C0C22B2FA8508290E2C6D80A6AE0478021E111AC732FF012E2BA7B2
A56B2C172B4E14AD845BE9A914353F9B519D024AD18CE964FAFD82E425B6DDCD
8A03489F2465CFD40FCEEC3884C22C3F07A2A21D43EBD5A189FF223A3B323D69
2C4C908EE66282FDF5A5C5DC3E422C039E0670B3D870EEB5E2353A0A02F59799
8D9399C277EC2FAB34A272B3AF40672A042A6C6A5258CA8E2306A23E2EE0AB3A
DCE76F1C8756C67A46AE14E612F0CB348E473FE21D4D2625E6463E9F45386231
151569CB60E7B2720C581A69860E393C9CBBCDEDF77334D4FF67A04277EE7E0E
B69D76392B84CF41109E0322621DEACC953EB5D4EE5C195C81DEFFBE1E3A1E4C
38EF0BDA5CD019A73B7944C9C20553244EEF2BB5B9DD58DF73BF7D5EE5FBAF3C
F3E7189AB59B814D50658FC8559828D6CEDCBECA38F7FAE8C1363A6CBD8AF8B8
B9DBD149C8017386EB0C9E4399A7AFD8703D384864AF4FA260EF386E484241A8
D61FAFCC42F7F0A7438B7032D8128E3752762CA023919FF4C482071BCB3FA827
8069E889117B5FCBCEC4C1E744F80DD47373B2F1E420465B0A2DBDEA1DD7A748
FBDF3886107AF158F4FD1E7412A19A316267E1B0C1452F196D8B206ED266C2A2
BBE0BAE8CF73F5D60BD9C4958040D3EC1CEBE50FBA252C350087FF394717EFD4
8403E301699E50BB542741370F711A388C23E494DEC64AD151AD39923670FF40
FFA7FAE0A9FA65A75E27349DDAEA619E52650F8D44A7B98EAADFEE2AA44362A1
0F1795E0780C412A606D33C073991174CEEDCDBFE9250FC166EF726FC65FDA29
EDFB3AD016EF6A4F6A047A230D44CE6210E275C4AAC7931329F0B8787EC06BC9
FE94C5B89747B85F1D107E7FBEE52ADD01F432E256F125A70D6D9C9806549F77
5AA2861FC7EEECA3B2C2646D3F2500142328D8D3B40136F3CF6DB792A5F18703
F2A6716EB8694B38E75BAD5F49513CF89141FCC3934C4287B17F5613AF6A0821
CF81AA3BD93F1BE08B8B36BCAEDDFB9AD52B22BD4A1681F1E4627DCF4A8620CA
B6B41CAC835A14B1FA3C5919589CC2B5DC72244F4D6DC1A68E635E5768203B73
69DEDEF65254488F91AC9A97D562C02AFA682C65C411D784E143285DB6A5B531
BE0C07E515398CF620966AE73D22C7312708911CCBA89C1008EAD7185675405E
6E48BB1722D84194DD4AB3AD442D62F53AA09B150479161D8B2F5FDCEA0020FD
C7A7F7A95C1DB4324935F474EDCB620ADD71ABF4845AF9970F0628736C2D25F4
CA2B2F44E2127FD415185CDEC3EF527001BE51E7B3C0453409A7BE6F53829103
F9CA4A8B7CF9BDFBF15591B27312E42848A40A6098BB95D07FB2D26A921E77DD
BBD2391EBD6625AEEDB22442CCEB8403855819331CDA93CF358AB9FC23F12BA3
BAD27A85825FB49F99AA29639EAC0FB9701025D55BD054E058D3E91D4B890919
E9E6D97837356B4B1F29D4B0F67C8A86432A7ED733C013CBF06EDF7DF34EAFE3
6D3104DADE5D30F0B618A2BEC0D54AB4B6D20E345CE6C281F4630A7BA2B274D0
24F359BB33327123B24688B757F4AD4411072FF209003728391BA228211C06AA
1096232D7603A06ADE507193BF939D9D5FB2A75DD37A906C39C625DDDE0730D2
E4A1FAD58D0B219B706394AB17C7B86FF022AEC92E52EF848CC7C269868F4967
109CC6A887FADDB367620BC0E94534D0AC7160F00F0A9973545C0952E32CFA64
906B285C38647F8E221462479F25B2F1248BB93568177386BD88E7939404D223
2734DD999A52222D68E2F8F0544CE29F3929A98A589D9CEE75E780577540E1F1
3D801C5535585729C06A53A8E6819D45D43E816BE62078A5225891318D12E8CD
0B2F9045587E546D8A808785ED46B2205D9BCAEA85DAF9DFB14F50FCB85FE915
C6FEE8103DA73B5D782BFFAD7F7C029E12E377ED3B272FBD24A46D9F5365A783
EBD5BC945C595C99E595AC6822EA8E529B40F6458AEF4157279C6E9CA88E74D2
2FB808E047BF014BBEAFCC7772F7F63D27EE53760DC0B86C38CF5F8E1554E4B6
108B1BCFB5C7E9E70F89BAAC55F9CAF03077B9202B54B097E587FC41E5C04B46
9650716CDDE73E441BAC714E8769A512D05CF9D7D560F4CB435D8DE1064D3D38
BCFD0A94DA868981A99E2443A2E79E0DF35C6B43C7C81B91358CF6517C9C418D
A093397DE342E543D607556CBE5A9089B86D1DE768F27D761B623C9C5F76C2F9
071A4BF4FFF2AFD7A0B06B3F26F9B6B13239EA4B42BD9BDF1CFE6774250E0262
64EA6B1BADB9B4FB04FDC4FE2F15947DE72BDE539DC79E2EDC7A4F7FB2E861B6
A448F6772028DB8B2E7A2F78DE222F6875A772E34330032BE44DBDADF927533B
040E698C7B0AA15F88EEF54D2F40E408D52ABC831EDE8F5F1DDDA31814E34BEE
398F16E09681886CD627610737CB42966EA1139D582D55A655089910B4B7C4FF
BEE8D95937061EB914CE5416042628EDCD86876B9AD32BF87142F762E106C161
86AE482F58808AA83A8A330F84DEF708A7F73C59768D2A66828C4CAB067E6F73
AC20C8ACF206EF6A6160BAA6A3452C92C1BD752F6AC664DF18166F27FBFA72E8
0DF3EF1341A126980C7890794A85EF6CE32D227A953537A27FE02884F4E26CCD
C125E1127CE3BF44B567263835A4FEAF88BE6DC191A3FB5ADEF3FD6B2286FC17
7246AFBD3A046DC29FEB61EAFAC41DDD746500C460609C227FECE7808CFC7D34
3A7FDA08068966D47877D7DE7C0DF8CE40F3BE68537E823DA67C5F9FDB1FB810
916A7AE6D46229FDF3DD6C73C55A1E990A07F8B008FCFEF55C2E2717756E12CF
347E45D9579C59352A120FF02FF54C1D628681A39D50B6B39335FD0B631F14AC
9D91A3260DF9DFCAE990AA8B26441324A228BF89C162EB68EA6DB1524034E5A6
87703DE8A0E2FBE6DE800B015E80DB2C9CEFCB8FCF595927081BC5306B48BC1B
97A9612FC1D0DED8A08DDE74CBD7F84D47F95E5CC1E4C9F8E80CF68C59C4EE80
74416319D720E3C79EDBE00878008538C79938E3BE39FD92399C24EE8AC85E4D
8C211613CE4DDA344F51B9316B92C7CEAB400829E6F649EABAF8BAFA31DA0FF5
1CFCF240C9426E90F57925E6B90462A69B5B7B8D3A9D26CA51B4AA746B4C7A1B
45353771645C01C2E1A15A828876AE44172D12B6548A0EF59C6710A1C0E5BB40
6AC3B70E31BD7F2AA1DE45FC978490BB69153DA6D6161F780955AF7684E8E036
205B149DA99B2CD2F337147B5D3CD3DD8B61E413EDA36A71E7B6110CAFAC612E
3E67F97829442F2792469D4BC8FF30DF62EC6EF7FF5542CE8F9D77861B9D9865
887D4EF8AA7AE6AB234B252A506EA2E9F52B3E14091FB92373C71F3F9B1649C5
F3C80FF3CBC2A48577F7D6244DF68CE4F1453DC12F039BD581D96BB0EAAED981
1D78900B7D347046FF9C2A9DA7AEE1F42E31821301E1EE4498B7F8AEBF68A600
694C245667C46D55ACC5E661EAD3B9310B9F706A8642CD6EBCB1ED62EB02DEC9
0FEFFEE1167C08592B4FCCE767F408BF16665982C60A01EBEA544FAFC0C37261
12DAD8BEBC692D09C8962E6336524AA186982F47DA47525569C373B4B066BA75
50F36BBCBCAB0832EF073E3505C3EBA20AC324DEB563EDECDFF165186D73C527
5BC9638D8A733D3E5905EB61E617ACBDA9EADBAD6D7267995C72ACC0658E69A5
2A687AF7512BB3B7862EAE8E10393D1987095FCA5160EB00DC4CD02ACCBFEA01
48283EAD2E621FD650A01D433803D9B92ECAC588F37BDF9FEAB7F85B65DA6E20
4268BC4836203368F8CA936A6B93DE729493EDC6FFEE039CDB84E845A8770A4C
835ED0BE381CA8423F9E792CB7C220CC5E259ABC3A605343DF722DCBF1C27AB8
A8026A725FAD7DA0D26FB26AF884F5A45A2CA827AA2574D36EF0070C12D40511
81315AEF884EABB76C5B134E7E0185E7D59F10109E66AB7D8607B409619E79F2
42CF52E618AC0DAB36F1AD1ACC1A2DACB18A8108B8CBCB5FDBD2B0B197103677
068AEDF0FFEB7DD80B2AF0AD023ECB8F8B6686EAB4B5BD269418B1FAEF148615
D78265BF0E0150053C6A5E05428D1D8869EFE48A460C0BFB2499E7ECE43FA2DF
23F5AB99E8207FFDABC084BCDFC2A202F15B5E590EE6A839241CB9D6C81C4D96
5F85EA14F4839C4D3ADAFAD20C044C2D37475078B1996A964DD7A632B0741C67
B0A3817944C9122FA950228EFD70BF416176DA8E5A5764C30BF3E950E9238163
713290DA63D69BA1AD4D40E8251B828BDBA6087CA9889B31AA8DDF31F3C8D0A1
D3F3212BD35164A1D77AE9CD36B33600A9992C1B68E83A7B0134FE419D23CF80
3DF01FD60553A53AF2D1075EEF8C1225F96B9660E087FEBEEBFE490FD14CD38A
9C18114D2952D05A84180BD1D23E7D4743E695E9C6A58776AEF1D0799F33FEC6
EDF59F573E7EE6684192E827694FD82DFF58B3F2848D455ADAFA8F7470FB3A99
835A459BC9E1BC7F215B52370999331404958319BC5521C9A52A0E0884479EF4
ECCE39B566F1E1069738BAC3934012F72CB5255DE620C0D7F00FE39A5A221338
83CAE0F562A8FE056259BFC7302C7B37A24544943A9209F3CB698730F542F14B
0140956714F9E17000CA4111996C79100E7045B930267F0EEA9BE820E1329113
2AEBF2E3910D55AA3BC51183D7173C50197D128087D8117F4B4C0283F97B956C
132DB5322FC30E5BF06D0F86AD75DC8DB0E039B398A8725A856FD9955EFF184C
DF0D4AC8E7C0D6BD784FBCAD2F5C3385BCEFB2B89FFAFFC5B4D7C6980E9FB252
D7C7806F1AA59FE77425FE62C24ACF72F1F6FE69DDE14DB1462E4F9859384B15
882C6B0E221410E215524EFC3A90BBF54D37F9043C12A5F4383312A134FF7991
60EF194087E7CB8D3BBD6FE1DC8600DA60584184CD0EC8659948F84008F4624A
4F41B8DDA112B42A1F76BCEA52B0C480AA4A7B456EED703C27AECEDCFF88ECFD
A86D1E81944C5799AA78626137F8D985DDAE015ECB56D045FA7B95DE5A47A7CA
EF9406DA16A1BD6B4FCB17471EBC1FADD0B0AFCEBECA917E174E7CD4A7D383F5
E31E1FBE56DE145488C0306C6EE589C2E71F0433B9BF837193757530AF7AD352
563063A1A6B764F66CE61D11C3A0C165A9ABB7228B1DB6D1FFAB59AC26558DC3
FDD20F3C36AB8F171E28BDFA57F4575B2B2CB9C7874C114A5BFB520E9F943106
625A3ED64B25818D960C6F4A305AD1654E60F47D9F89D1C1D46AF5304326F700
2E83160F2A802A9612E5908DDE75628CE253F50B77A9DAA1A0B86C18F410E196
40224A518BF3784606F4D7093A2FA92508CEA629B4FAFF9436A7F0E0D2019B22
E137F808DCFF33D406320583193B6201E1F9F6CA2A58A6FE193719A5BFEF3EC9
C9E9CE600B868A53313A12EBB91EB3CB214F4F214DFD130D697972BB11E9F691
6EB5BF4D15A945E047E5D444BA9F89D55B5133EFC93BC5AB3C586AF1689FE77C
7C772DDD390EF466D40B6FAB2D54EDE3A9BF589E24299FD34BD13605ED1672C9
A0E4FBB3E522663B82E2544A6FECEFD3D8A2B222301FD174D5B28B3B0E1CFA30
BAF3D8E649F28EA66D111E69BB0DF778E92560FB682B0123147E9E8CD09DAFD0
54A066FA00924C43A2BFEC536592EA879CDE6B7972F4C158F6E89927CF4F1BED
103FEFA84322FC61A52D6F66BE3CE76C40814E1FF110E5BA8697379A27707AB7
4F4D4C6C14D97EE1C4F6C1838BFDFEBA9DDBFCD9023C35EC78BC15294E945D54
F35C9EE6DF9F54D7C9E69E38DA2ADF2D7D77101E27E4872057819EDDD0F3409F
4C6081A106519E188EC5455C976C40C6E24D239FCFE9CAA763CD150D472CEA6D
FC9CFBED73EBD70DE13443F8CD56E8D3510D3C8CA358882E5CA9866BEE012493
E404604BC4A0A97D3DD1F96EBCBA9042FA4AD9530EE7A9A7E11D9BD9AE3FB5A4
6B5F551CAE397EA2AD7D021875710C654D9E97727A386B7B9A991C24883E1225
FD310ABA9BFD87333B8F0681A7BC9645857AFC4009E803348BD23C5B2FD80583
9B9567A8BCBB577591419E8DD0EDE51C86BB452B932DD061ADC6E69F883DE749
CB18BCDA0C4C7D8EAF1FF844170B4CDB2D793A3473A165E21000F9A6F1E0EA7F
4D73A9E7807A13B776773197AA09E144B18C639487FC212ED2EC5B4C075483D7
B15A2EE6229FE957D8BCA176A9C79D6D6E9F815F16FF1EEB735BBA292928C387
FDA56351DB04EACB434C7B1F9C0B4D1BF9E9CF38E904DFA59488C6D10359CA16
ABBB632EFB4AB7413A7AEA5076B9D5F1F67495B74AB8F9D4B2F3D7B0C08F3A78
A397E95820907F6440AEB3B047C9AC1869DAF2B4B6D9669DD6CB1D746F36BF03
EFA1554980E13B37FEC33DF3B23FC7BFEDA3E4EE650873FA77B3191FF2B7FC8B
F32EECD6EF9DFB1228B7C1B5E9AD6412BDB116E391CF94E69B66D38E00799D1D
752FADAD800712AF27734EF7B48AA3CD1456CD60649FC042313B2FD181C0C0C5
9D348C582499482AC3E653796D5D4CE1E7FF3BA3A6F749CEEA4C6BE8014B902F
1DB2E5EA44986221CC2CD73CC72B10DC6446A530ADE52E34696306E60164F3BC
4514E0A19DEF95850ED43A372C1CA65AA8076F1B114A35F2BD46831BA33453C7
9843C5A93644C64EB580452826553EBA84AC04C92522A599A2B2F592AAFA87A5
D2351E00F3470C278AC43B0C377878682492469D4BC8FF30DFE29BF67CA5FC7E
94697BEDB26BBF36CF2030F962FA640BBEF63EF0CA3FF507E934DDB968763F1E
DAE8397D1A101DE2A65949438391844FA0A3B0FD4C7198521DB8A533F147B16C
94505A1876321742192DDCD5E3BD8EBE33BCAE3AB57C6E0C319435396AC2098E
A5F06E3F0CFF972885DCC99D5EC3BA2A5DC5FA0F90B7565789F373870363E96D
6D76807C2FB07A444E3F947094967294A46547D70E87761B3D8B161BAA02682B
3C043064A63F0A1F0495EAA517F11BC1827C53E554FBB8B2D7A53D9D03C54706
B5EBA5A4DBDC36EFE7E7FE9B2134E3EFCD54EFEA29A0B8B9E90E627736CC9CEA
F2623D1CA5612A602BADB782AA6C686B2820C3DE5D47857DCC4BEDC382448D6F
5B33820B6CA5FC0FE8529B99D6DEACF02EE7D8C61EB35537DCAFA2BF4F7DF3EE
CD53E626557BB573E4254580D669F9E34DE823188E853FEA5DF0DF1048F27BBE
3FA32E79DA5F82F43BF1A3CC8ABE9ECDD751F2C3D423B916B26EFC6A44D161AA
5AF839CBF6D9A8997CC3B5400E404AD746B2AE89A97D7E3460C5BCBFBEB759AC
7100A626938D596D6BA321F64ED0DE5DDC8C1ABB8CA742052061AE3199CC8F58
638E3519E95194C3143345EB926F0EB5B7DBB360CA7518709FE9C33E1359F92B
E79E1956F42937FCCA7A0D7D05469E0E702A7EA2C43BE020652464A17B3CAC33
FFE45D214B0A250C4AF3AA1C44DBE11234EDCF4ECA080FF78227E58A51EF8C32
62B90EBFB8EDA6AF1EF51A1CBC61EFDCF76D8995543EA851AE0EEF88F2BE31E8
BC1D87217F724BE342634B2A3719058DBBAC941FECF9FB2F57CDB3F47DC7FF7C
098E0B9AF86E29695DFBE75605D7FED4A5C8D1BAC97F61B4D9BCA6A181839624
05731A5126BCC27709B0CAF5EEB7D659839BD6611BC3A98936C69A80416EDE87
26605E55984E69BF65497EDD146516938637D1DDF0F7255926BE87465683D5BE
3BDE0D93A7B31C60E4EDD9144796328E206472F6257A53249617F3F45906BD65
623D96D50715314D1851FE8357BC2D0BCC71CCB1761747AD09DEDF96FD015E35
E37C67ED141615180D2CA87E8F0272CF1FBCE7FAC683A9F5C4796D966C652336
D055DC08772B33CE4708F26A0097CF44043BB8E4909768D1AABF91A9755CFB92
A25670E7AD0A36F33E00591BC106E17E75D26B6E03DC92D024A7A22142BC09CF
1FCC9E7E83A456B68A54DBE153010BF94890633F916BEA8BD3FC7E56F3E042B7
24E12488BFA3A332D9ED35A3ED6D04C3F585525E3A482A6DE7F07D93A486CAAC
BFA11F569CD92F3761F843590E88A2F65C749E47E8C71C90D9CC54D56212BB3F
1794C1CF52E481E64FDD8A4A457D7B8A7B8ABB8421D31B6B502F4A7875E42F83
74F19EB132F14E8670FDEF484CFC663214C3FFE8AD3B615FC2A9212600EAE25D
5771D1D13BBD42D432B947D52A9F6CE0891EDB1FD069FD3B4566ED2F90050E5D
987D2ECE61218B90DBA7BEDBCA227EE61B3253A357D476ABCF16841235DCAE82
C5414102F13AC53A51C4843802081696785BF15D76F5457863F7FD8F680CC832
6461EA7F206C39E59EFEC05BC600B28069D7EBC6BF0024919D4E51CC0A54D86E
CE7E2C5120EC02F56D2B571193922AD1A2FBB0916193CFB13A80E382A45C5D5D
1CBC237038D5D8DBAC9D878FEAEBC753D7226460796F496C1EAB752018C20B31
30CA1381F88C1E9F3FF73299F87A92A47D5EE76CB6B4CF7E1D6204E172C22716
9D029E0EE5230C3A7FBE79CEBB7D38A26617F63505D3C37711AD6C062CED8B0B
BF56764D0EDEF48F31C8E178F0F6257438BDD7BA05EB9A53A50168948DB83281
347F7F7614C4098D3B9049E054532E43ECD00A0FA54A7F5E9B7AB69DC77FE9A2
83B3A8C6A5CC5B40C3B2FD371C96EDEC11B2338A4AE3E33EC7457FEE0DB9918D
2D9026D43CCC21FA1241CD16FDFF0E179F54FBDE5385BCD13A68BE84F307B6CA
794583468B3C00A0684E98483414E58CCC5C309B451174FDB9DDB047D92AB235
D12E0DE14988364698597F38027B3A9BF9040262BB288F4A281EBEDFFC58CD0E
664BDFC5B3E41367406052136E84ECB1AAAB0B14C732C935CCDB83EAA9956867
475731BFCBF704FCBA384BA8D3CC59E37ECF7618A80F3EF2D8CEE9C47CCCD036
DBD8AB6728886008EC33886B307D185A493FE5C10B45FE9D4004B7E26EF4E054
07628290B5D5F51A4576D0D81D208FF1BABCD14065424F15C123FE6B21D1DECB
E1BB95807FB8463795475D375D41789399EA6C70E1CA301015A386F02CAFE65A
536C410616F44A483D4A853D40E6E4272E1E747A655251FB9D193AB6ABB97689
C62A980AD837C94F00657C5DDE3331323D5F2EC70755E67108085652BA051778
72A46DA310F17C1E7ED967BD00D973962527EB0411450F1C4796ABBF09B29BF9
35F272C5E80621E49487F304500201A506926FCA3D9698B01A786024211AB367
61C70E58AD2500BD03739917CE1169ACB8C4E8075D423F4080141C1D3A8B8B49
A14E96D79A7B0936C71D432C652AC811AC5F7F9ADAFEFA3E9C81264C5139A832
76AD92C832196A4A3137E5FC2DD2A3C40695F1EA8B3CF35A40D70F5621D4DC7B
C0C6797C98D1BE1940C858E5954BD8FA6D572B5C830A01CD71E1A396830FCDEA
422173E7862224C4FFD8192D12AF7DB25350F90BE30CD8E37B90932F56739440
5A2FEF35C74FCE09621E3EE0CD673BA3BB7AC313ED5A19C771FF38A45647D2F8
9F8BD7D40C48FB75CD72BAD1176F20B3FD6888896DBAE98A2724BD2CA19D111C
BF8A48FE3A5B14A5F5B2D5443B1D0E7FA5094E234B9F8BC9CC06BDCCBB6324C3
7D6E39C3A244943634705E6FB73093777EB030EFB254C9E683F46F8A2FB92D8D
05B65E90FC3ED60DAF65D59E634F3C40FD4BBC2A9C4BAF5FE89E174835FEEB7E
E9EFD9986BCE51FDE3A2543F9793BA3C1094338DABEB6D84A0136B85A552A80A
E3E64519EA1431B73F09457859EDAFD61E7768236FC0A430494682D8402906B7
7751AB5F9D5F7E68DC03748245DE2A31BBEC43253182C7D1693874D54D593F68
A2544492E366E53DDB10CBCA7002214921C0B559D333FA8B08432D339086FF38
9768628812820DF8F58088F4F58200C1706069CF495419C2063692EDB9274E5A
AECB9F960AAD65CC32886F74A6BE8C6F082AD630185ECFC24A6705779D99BCB5
1E3709B5BFF0BD6BC76700D667398CE5F6A7C2465106CEACD604A03E52CD273D
67E589DE38FFAD26376939CC85C4B8AB1B797B648680F539137A54C6C787D8BE
04BE25E89133BAEDF6331A2E8D376AD834EF99DFDB62B2625080AB285CA28628
B15BB7DF08E5689FAF75988869A358B86D169BFF793AC96B51B72FCD3FB5677D
72582E249ED6450405D8EC1210CC64668F78A1749B6E287E0D7B6065498C8D88
D09E793010F96A5C359737F8B7EB7F72A25AE6C98FE4D2446D5512EFB8F2B182
C37521EE89128B38579FE7E7B9A29DF26B7CCBDC5680292E5A01B793829726DB
99425D869F75A82E910AB6928431746EE32272221037BF3D4FC2521B2C443D58
FFCC1DDD6FC7DADEF3F61CD6DD29A8ABB5837842F1DB6BB1F40F2E0D0A69419C
FD2BC9AD975ED1B963B5E1AB7C65F5B1B8B65A4B2276D28B224A4D89E66D27C1
1A8529F29B0F7122D7D71C39B0A6889F959BED4DE7A71790A5E8A6FEB3FD3E1D
20E73582CAAE8FC6B1EFD06CDE91DCFC11A6A7D84FB10C22A344D4E55C8A4A4C
AEFE20D06E3E1B93CF1E7456C11B013288236F0579FDBACEBC43C96E2D56A3AA
E8543F6235C6998CB4D7F81C39710E19ABE39088A9D1C91D1A465EB4EDA0277C
D30C5AB9DC236024C4FCAC5EF0532A273AE235924203AFA5C20A1E8BE7DC8D8F
721C2516C08330D5B1CF5DE536B34845B32A34EBED6B7589AABF106156AA2D5B
798A8C4569447CD75D3B26B6C6C0075A4074D82066E0ED3B6D7CD4CF6E70F36E
F37564C7CF4B5A5F379227A97786CD0A3532A2901037C04A9A7187463F66E20E
45527F49B89A289C0507D4B8AEAAA444FEC7952D08CA7BA655F585D4369A80ED
A540D7481313E78CE43C221BB176D39D2EB451EFDFA251E9C4B888392C07F151
CABAE684C3E8BF5DBA1C7EEE0BF66C206D543D9F4C412CB129F5B138CB32649C
98597DDCDE8DDFBDD70EF02E74535116C8244B0A88652F5A1EC5546FD4DEAA2A
82A209E2454A9FE186CC4C1D1A0777414CA0B3EC93B33505DF478C89FE1F8F2D
A6B617473941A1ED19DF2F6C55C067882194B676A59603732F55DC22ACC319DE
7F7F6144D0628492F08933BD7624F263E9B086A50BE73907A606DD8ED9FDDCD5
9B42405917B85E7BF51053B3CA96DDBDDEFD691A854AEF9103094B57B80F5DC1
AF044CEC215774F925D43DFC0818D2304AB3F2F2B04B17605772D0E5ADB9C94E
A24650E271B65F9ED7155EFA0A8C51C2D37CD6BD770E15BE2901A19C1C789B8A
E0C1EE5A64B3ED6EC50C0AF58579690C1312BA5A8E8A016A77186B1FA2EBBF6E
71ED632F876C839F749B069501D15B79DBBB7F4757332FADBD3EEB22E45575E0
ED8320F56091723417E7B891C8637CFA4F86A6F83BBA199E1B52507214176E29
8F4B0214335A1E9F0F21263C2EDC08F635A6259AE5B83F83DE745A92213B2A86
44DAD971DA1C5A8BA09C098BC4C635DC24C015011624038FBD797318D96E0221
D460508D945EF9B6E8734A0A3319115F9EA50BBB489E40BE5A6C87691122204D
8A67578CC8C0BD5B0A30C41844C7D0FF694D46E85B83137BA08576777127DB03
E6DC935BB4426DBF97ABB2759C79EAD3B71D43393AF95469302CC38B9FD1E45A
37F2D83DD0A6639479606A21020C99A03AB54F670B84052E921A400A050A9602
30095553782491A414555572D81B7216A0D34620758FD6A0ADF7F65CD6A23FA8
C76B6456AEC8EDFEBBE8CC80173963508653881565EDDFBE137D959D52F33D50
E24BD64D523D1D2329FD8457A0B2C7906966424264031924869CA6872FC30618
CCC6E5ADE709583A515E1C2A2F16F10901383B0EB2D6C3EA741FE474072FA302
996055C77FE9A283B3A8C6A417D4A86727DF2E74519F043C7C583C0594EA7CE7
A037354BE0299ADD86F611C708C011B6B7677DE56227586F08AC00E8126E2CAE
75BF87E3927627EAF46E61C17B8B161E2B52BA09284DF5269D4D4EC4FEB4112E
B74360DD225E34A25B2002CF8AED2BAE8DFD59DD21624E2A09AD9F95C4F6ADC6
01C09CDCC0262C6E8C4C3F2D13FE689A963DDFB35C8A0EECF092834CE115EBFF
2995FA68DC64ABEEDB0AA29186BCC07826161B66C51F18AECE83281053915BB0
428A9F61D4B3078694DEBFA73FDB3CDB7E1E0ED72FF146344B2B5EED7FE7E1E5
EC3C83AB3457DD31BAE66BB0F0F47BCCE43F3C9D2A21330BD7577A034B89881A
BB332DA9F3E6124BDED04BFE669082951F86352211F2BBBF036255E83C9F847E
C2351997F77ABE20572943FB64EF33B2776180606E79F42F69D3EAE43F17C181
EFCD9C2EBA72B51F0DB554C056A1DDD44020B462508AB5353B6428ABB42BBE9C
1F6C104A56F0C2D8BF3CA3B929414B1B29EDB53F00CFCEF86DB4F0C70A457E36
05DECD9D47E4669B250CCA42F8428E27DB4AC96BF4EEC9B0E81E871C39B9606F
ABFBFEA20AEFCF50FCA1B967861F6101C28B72DAD6AA1128F196627E24134219
464E754B01E538A60CD050FB16B15E93A50DCD7C592932A1355DF333866546DC
526A4C0CB758ECAA8D12C40B39B0D1D0EDCEA49E3D9016398D2D8880195C9DA7
0084876EA8DB55DBEDB65C861BF4395B5C12D16E83BFF513B6F0A47534483BF4
71F7363BFCE7D52B275660580AD6FAA5A61A0CDB9C68348CC174A091791FA745
20C8614D4FB1125ADA44C4D2168F1C926D8C31F6EA95FD665B591E12E4DF0268
2AB1A2FECFD8B025C2CD224195F91A18B8B8E035707BB9DA2415F21548D17AC5
E874E92A73848F2B4E4114D0CE411F6FF1A0759E84016703E7C2221E2F81666E
60B04622A4955021A71C779E7CD5088861384365BC0B578EDC818D8F5DC5CA2E
E07C1D7DF7A7BE9BE138C308733BFCED069CAC557FAD3025AB4C7364AE433D1D
3D524F8286E52D856264D3026F19A2F1C3406EEDE68009E84D5E5795A34E6569
C4D426C48BDA0CB51779311EE5531FC90D8671DE3233293B9ECFBD5BAB58CE37
888C2E236269573D612BD81E8EEFA32A4386C0BF98F581C5051E6122A2A62DD7
3E7A2173D5056847DE4E4FDF5553B13332F5E79BC985C975D10A68C4A9775030
0F7E06669A90BF936FCCB7CE630194962E41097B948B61B382DCBCF567C1C287
E5ABD5D3AD3A2F10787F22F74AA396F5BE270FA2AFD02F8A7970E2C3F35BD3E1
C8F602AA8320FB2E27B9145300B4191DD043CC0509CB185A839C038E6E0E4BB3
A95705077BE9A7B678C9688DE6255A52A6C9D2C510BC21E7873C7463C78942F5
B6CCA6F90D80BBC9816768591BD979D642FD47D7677CAD5B82B4548BCFEC5867
C0F0C705623C29DD9D1690CAE1C8B6C5872857DFB6E9E6ADF56EA52D3D664269
4B4096CCDBA16AEB91757883F3F9AD3F8E7477ACA567377063CE0E59E11C4163
45F8188E5AA87053B822643AC62297314AC08ECCE0C98E6A9A40A26FFA9F8750
20231CD408DD9A6796BAB8A960D5CE6208150B07848BC8902E0480E5FE4C18CA
96E889C36DAF2D9A65E1FCF4A6659107F77A5875AFC3266A10FED5AFF0A53844
BCBD3FF41B7C6E32FD5A86B695CECBBEC83EF25DABB1BF0FD7899D2F9932845C
FC020001A5F627258CB86CCF275616A0836626F2EF18BE066C66516AAEE55CAB
EA410B6F92FC62EAEAA1B46E19E6C9F7CCF0EA8148750E70F711F7EC2A4AB0DA
CF13EB16BC299CD0A4EBDAB5A253B753D5E05B7DA8C435A28E057CD9C523F6B1
3490DDAC26A42646BEE98B85B8F80D5D71ACA8E6949F1B3D4BC3B200C278FF24
9C206D28BEF251F3ECAC48661A7809EB71CC6E47FC552E965A56CBD844ED46A8
5D8920450FAFD891DEE41868EC97A9100D2130F0152579AE7237F67B313D5DCB
98F39379F918E62243807A688723C5B62994AF67FFB984E25B0D9A3DAC840A26
607EBD0CF1505D6272C80DCFFB8484DD9A3AA29600513654B42AE3CF323E594E
506A30DA8BFD12A873D8CB43DF0598FD7A80F159BCF77421B95100431D8EDE67
F285AD387EDAD2E34E39143E5676CA988399AF55B7ED5A627CC7EA4CDE0CD5E0
EEB0FA4D0BBFAA6EC65DA4791C5CAD5D6C7128962A81910C6EC8950A4509BFBA
3A91A9E69E6B18A95A1D4B9E4F44300B13F6B9724360F4EC038B64F133671BB7
C308F7E1D230BDAE088375A31A8BF2D714E59021F7EA0C4199D58E6FA59AD903
4B4EF4B4E637740480E56141A5E8274C0E680624ADC0E0ED56AC09D3EABAF8BA
FA31DA0FF3BACDE02A31A7FA88FA8B82A318629A2ECE8A48B0944DFD5D52246D
AD7E35075CDBD028A3ECA7EAD00969673A0B419153046B3295BF6FF538D588D5
1AEF8B1DFE49E149CBF665633029B6E6AC92DBA390AA51EC0D9929D9C3444AF4
E9E6B752191EEE8E5518B94CAC12B35308A2C0A24EC521CC6C63EE16D0C2DD5E
D0582E4CD2EE45050BF63E41824B1622CB29A88C8843A60DC51271BCB88B7D3C
2AF94919F4B9EA6669666A2E0C19576345110D6F907F841D095F090BFDEFAB9C
E81135532B715C89C0361768A3432BA668F5301555CB7F97E4D8AF9A17C50AA3
FECF8A05B094AF75E2869314AA2F33B09E07B527C569299ABB918FF662A51266
E4EDB0BC76BBABD53355E6E4CE0DA23AB83D5319C210CD9357B1BEE9A880F981
54EFFF569BE97CC521ADC3AC28DC44284A3A8E3D9D9109BA0A1B42AE29FDB2B9
CF00BDBF3850A455A4BF878CB764F7BD728B86D3BBE1E37BC2104E7974740236
15C83C7BA2015057767BD78B47B45FFF2804A3D613BE2C933F18FC918C2004F0
D54E717F3EBE75C50C5F7E311DF011459A383275F46B0E17949612B89374A914
45818B1F017ABBD9E82CCD3229B5836092A7444313C171B4CE4785D477D8D553
0779A13D11C1A61E854163E286B22D49C7D9B0860E6FC31462CE7D19968ED81A
A3D7E7FF501375812C6FE25A8AA3F115026A508D74941434EF2891C05C96E66A
37ADF752374F8F1B7F31C05A9092CDF55A79FC81DB498E01AEDDC82B4D755BD3
49EFBDBC01B7A7FFD018BA844429BD3B5F212F2C99CEF50C236C604749911875
5EE07CD09E65981DBE4A9046A350839CC7A06F95CC4A98B9DE4976D3C65D502F
835F9D0AC73865D83810A3A6B72B91DCC5B8AA30DB118698B1F3280F90A2FAF8
2D4125EA3FA457A2B28672752435B04A2885E1BF5F7660FCBD590ABBA7581DA0
11731194F7C92D83695EDEB559F0D4A8F736C915576C9288A21763A97B8040F5
41FF2DF0E7AD1E993050B4BCCF320F3DEFED7E037FD3F259D95A32C4DF2AC088
76696B0234115C10B5CDC5920699437B7A1A31096F341635CFB07157E225D61F
B011C8BF9A0D93F721E852E788257D46D61EA0E3DF86B1DEBB5E901877BA2723
39E2A924415186DFED02322C2D7C630A9229995C374C1C00A44CB03166767667
D91D388897BDB5409738AFE2692CBC1CDEE541766417D4B466AEC745923E1F42
CAFFAF76FA6928B9C6FC00B172E2F22DC62C98580F98DED35127DA26CFC3AEF7
F5FCC28AD5958092060AD8B7BEFBA37CBCC7A0DE20F697627A5CB22BB3868496
24F6D3B390599F630C25FEAA3359A90834F4A5C6383BCA7E6E865018CFA9A68F
C5D652D383688537E7372AEDC37360ADB2A13755A5048E47B03087A55E15E6BB
75DDD7B3291F6F4BD470436D8B76E381F808EA32F31C594042231200CCA4C3C1
E2E75C3F360F37CCD87F4959A84CC85C1BEBA4F76A0AD5DFDBA6EC952A4F3794
8B632638DC1501035BC20901F88098B1C88D6278F61B470FB2E3D11E79D50521
FE174A4BE571821491C0DF3E218D3EB53F998F677F309ACAADC36CFF63A918F5
92C559DCB60C782DF7D2BE022E999C2FA44F4CBCC28671DF48BE01E203948347
1E0CCB5A9342C4D154A42E429FA89752322D7FDFB40191270EE3BD70DE9BC70E
96B31C3CE4C4F64DF379F6E9B6BE0BBBB79DAF3F20707869C5FD40D940A88531
0CD6D5CA9C351B7A1260D3FD11B81BD02950A753F3C460F00B5229B48BF522E0
22439DD1C79F8A66F62E5E27255EFC2423976D6908EDFE39D0B1B9645A3C1F58
4C7BDA1A1CF019F96A69DC698E327FF14E72129ACE0510135AD42A480AF1D0B7
8DF58F5A41EA34C7E08FED3B51188E9FC04008F1BD8157D58DFDBF20E3A55F3A
A5ED7FE232379E219597983B11C3AC7F4AC251E82C6F8DACE73EADAC4512F72C
B5255DE6204058D3AA9DB1911E68B6554E7058C26B80F5081E274EE7CF2032B4
F96D87CF326BBADB36EA2E9AD990304A9174662514B30EC6769ED6E7B3323C65
C3D953D33B60365BE9F44D54A2CAB96E83FF24A58FB06B0CDE19AC94EB532220
B7A63C6DBB9532ACA7C461BF0BA086CED7A17362A8E8AD1D77C07385C9C27970
071EC99F0544E21B3CAC22E6CA87CDD1FD5F5DFBAF5CFF71DD90D90C4D9C2492
3B5422497ABACCE6C264F48C8C76D2502BDB72A4CD0D3570C8C8834BE9EC41F4
8E80D7B4D2442B40598802DABC088B580283DF15916523D9D6CEEA073F227E07
22ED96487905D1CBE636C6ED9D4F47FB3B37634F7C1439462EE1D422DC5B6D26
29ED8A93225B7A50361D743D9AC73A2A5F8F2965D7D4CF9DB0F75C8A380F1514
E68064C0846BD00809AAA87288DEAD789942AADF50254CC2DBDD5C8E11F6B2D6
59156F6A28E76D0D5174EDFFF208D6D731C47D6040773B077234ECED88FFA5ED
8C04A3775C1BFC36618161C72CA2782B418578622E6A3313CB79B6746E856EDB
C6C20A327F01B283971E8189C319B82232F548517D162231C738C6F23CF4F34A
9CED84942968B40D4D871D7D3CB4D404C73D283DDD92B0432BECAE3F51B3DCC1
AF690C976FDA48393E530139BE17DB9A358B4C69233AC26E73BBDD58C34BDB97
7B259D00AE4F36D0D52CACE4EDC7950B67104D3276519CED54B0426583D497BE
0B76A4233D51BD214B17880D924E5E7C8191F05CD57F6E1CB8B076420CD68214
33C2C0DB6902A3ACA687FBB3F42AD9417504781C8E175FEE243E515BB691E9AC
AF10D32AABEEB0DED065116B286A2DE624D9C98A45AC847F579C7CDB7A751D23
A4881DAF2A48E207006055E97DAEBC0C57E6CAD7E11E7B7EE08A4211AD764B9A
8D9CAA0D1DE3106460BE70AE1195B48B8568FD9FD11EDC99325102F07E88656F
3B00CC70AD584FAD5B5B1A5DCE841235DCAE82C54143E7AB627071F647D5D737
08274E5718EF450F84B5A7C65972262BE5CE7D28E72B129E947AD593B48B3DD0
5D09D425931ABF77E16D1B0387843CD39A2AF0EC9B516777418D442351D5CBAD
32CCCAF251A9F2C4CF3C022BC1A7D1BC6A81259C4C1043A3869292E5FDC173B6
8826B15B0E7460AFEACE72D47D75003B5DD518CA905BCE5758C63CFCF132D0C8
22B75C8DBB2F8FA997F0DB95179606417F9E774F63DBAD64DE83168825F6C80A
49C5A094B6D55266DD5039707E05CC5130A285AB71F446E14BBB480CFC450725
AD516990B85B5BD67646FAB11805152716480C0984BA13A8433ADBD6292BCE0F
EF70C729960E1E1AFC71457CFD442BD09793CAC2A7EF1B9E19D8C29DD5FD4985
2B3755DF54F5F415642F8382A9BD3121A51F0CAE32347532AE25A848B54BBAE1
E3C6B28D94267A009BD0A11514B7B758FA4D67E59B58C6D9BAD063D247787282
EC4820B66D26DACC6D76D4296225700B5B0A725E9321739AA43F0D295D4BBBE8
BD7C08114A7ACC5DC31FCEBAE3AC9AB3C7025156C74CDCD874E6D3A4B1431B65
ADDEB3BD094CE150CB8D9A87950BAA79EA27CDA4EE20E41EF666B3F4FD6493CA
2A307B3D99A7E2A0E8BC3DC6A8276F6A5EA2F0320C361E061DAF254B3AEF3ABB
186D9A0FE9556437D6F1401CC1CF6E84B2FB0B15CDC67DF619D942CE1F435388
50F5400C7142209BD853BBC1FA3FACAA18D5C28000E866A158C0C0BE849D96E5
720E9ED02B5E37BE1564ED71BD85AC96EFC164226B9C2EEA6B96662DA842B36B
2E2B8DB08399673F0D6DEC7131B7C1313BC5ED15DC9A494380A20209357E82D2
82383DF8EE3A47E3598238E8FA6E1AEA409C2494C1939B4EE68292E03B9D2BA9
803E1394365988EF1671A0A8219AF0DFB760E01D4CDDFC2E9B16C4CB0F1C133F
CD9E4A4119DF43FF311DAC8252634A5B8171D173078B76FC6214449FC9260B57
45F0CA6B1E17E8376EA4A0DFEC8503BCFE742FA96456E1317A354CD639E35970
1CF821383BB92C2F382C0FFB9E1B55345F869765B17F7A9B49860D3EDED3CA0B
29DC5BFA89D4E7BAEFCF2E2FECF757FE7DF4BEB60E867BA604BB20C5CE8B1184
2A41376141C1A66B8978F698165F3DE994AB9010A538C49694F937BD91FE9228
C8E58E19E60649FD73D738B40DBAE7620FAD084B7313B71E420DB11BCAE4F937
93D20E7E257E1199894FFA0D454AE4C8320C6ACBC5C83CA9A9EBD97541099BAE
067420B208068E4FE2EB48DD1A19A302235DE926D229F878B8A6B915A6875171
501B36E5B0018C20AB43FBD97D6068A870C734B46FF88522CC4A266BEB71F66E
659B2D25F7FAE473ADCC17B17587E706BB0E6AB15AF066F6B87A2BE3E2198FA0
B00D7BD3B300915D50ADA73C3356E66B4C65F21D2EFD327672ECDD4FCACAEF0B
F14BDD37C9E531A8DF1FAA181613E19B9195AB1187FB43D2B16058AEE6E3BFD8
6F9B60C59527453A8289BD50956D2F83D78F19C717FB2DA30DE9360B3511F823
E75AD49BA7AE63B192382AFE8FAB772D15B6727F4289C6C81A102A7E38178ED3
6221E23AB02A9556DFCACD3A22A7881910197E470E7277AAFACE95C2A0775CE1
A0809D5C2979D409E4D68BB6DFCA01324FFDC9E0ADD940B62166FB7C4C085B8D
0F10DFE6507232C9A54E60DE714E59438AD9806AB5FE3C67454B0D164C9BA485
0369E59D0F9B8A91AAF22F7DAB357AA6B35C5BC878DEE8331D6040DAD382954C
AAD4ECA8E4CF80389585F652D00934680A5C213BB908DB7809692DF4DFBFA3ED
A081AA379231DB5D3C332DB95B63ABE36CC2C0C7204BF83B4F7349ECC5BFEEBE
E0F1C2AAAB0BFE5251972EBF4F499020E0D842308DFA9A9858752D3E3B77C555
D4AF6D3740E0DC8BFF1AC7222F18D93FF6C96D657643064856CFEC479B871F4F
20DF346239D215F40338168B80B841B3959771EE0B7C7B67D8C7AD31435DEA9C
E0C63338837ABF0EFB575EE2A90BF14430061D8FFCFD6FE8447932BEB150E3A4
00CF8B83ECE855BD41973812ECFAAC501BCF19DE47990580D03138B62A50BB39
EAD9D093317973F69AAC699D91228C32363B2706F248C7BAD39CC4C69A340207
DC4EAE11ADBB6F325AFF0076A2B36A2F1374341666FB3B5A4598AC5930545B63
AA9E6137A6F8EED3830C72CF9AF1FE22772BA3B66E76EB3E9178FDED01E05D78
7B2C6794DF5CCF30C5AFB2B8D8481F406983AE10C3E917CF65F7F4A9C54355E9
2038CF6194AF036EB3090451311D2E0315E7E13D96A2A920E306B69D795DB3D6
A4E94C70E09019CB1831DF533A63920BAECF32476651C0931E5AE7F3BA075383
CDFEA1F6871CB142632FADD1D6C3D6332594ADE159725480EAB33FDF27CC3291
F8C09608428466B4F6C45013A9E58A478D12CF305CDBDC1A514D4106CFBDD727
37EA6DA8147E273879B9C1E83A892B9733FD498FD0D154340F46D0F308B7D198
2AA68D1BC452B7C10321D991171DCCBA54503EAC4692D81CE4088F3E2D037C85
B763E81E3594AC3AF577E84E36DCF8921D08F023778A2E3B03ADAB1749053F09
EAE2E6490827A4D49A86D9F182ECDFF5F85A23E9312B3BD6DD1BC2A85DB7429B
C242A58D7CEAB1222CAD95C87793D5F7674E5C6C8AA0FF65A6E44659B24CEAD5
4C34AC34AD86C1B02701FF7B1676EAEEF71BDB28EC4F5EB9C9BB972664A40494
99CAFA7796C121B5AD9421173210852FF2532E4D5C443A8DA6D6A046F018B4D0
28528F61F0B77F969F6EFA063A876664F10880144618F0DB5A96A6FE2D1CE5C5
ED8EB5949426512CCC0181740D9EA02154A8F56390343D07F541869E3AE9CC7B
6087C9F370E2431E28C32E2724D8420B4996F7292D36D4B64D58BD10476B17A6
D7D847771C02209E36A0562AE9E35A401B5374C0B0BA79D0F5C2C8F783843DF3
B23FC7BFEDA3E64394445B5926A7AA84A5E96521F3A544426A80EB4064498349
A9D1BECB8C59A9F4763F2566A7A513A6C11F5582FDAB99E8207FFDABC084BCDF
C2A202F15B5E590EE4CA7046E66E063E85E7BE4B10FDA18EF5B22A30601DA8FD
A3FDBAA7C9136BDA87E0C5110C438D060EACDAB1CED118D71A44C9414AB5B19D
4DA07346171F817A47D768D8EB39DC6D4F4CA355ECB144B568E536EC77A07B94
541E1A0480E9DFA13A54480898D17FBDF12A3CF27D5C8EA89EA4C7FB495CF367
60D1CA5A56CB7EB397CB2786F9D3B48E76DC5386F7163541D0C4B93E527C3FDB
E73CD43C194BCC54B5D0B529CBAE4AD98688183FD9E2B78A3DD2E19B6A5BF6B6
67F721032A8FE68032B72C34E9E6DFD463427256D2922D6FD4BAA439460EAE7E
C87A8407DFE9A2CD6663718F996C6DDF899795F71DE1CD974566B384E0040F2B
3660BABBC1DFFB65AA474FCF20136D99AEDDE4BECA5D5ADBA455ED9DA3119948
D4B63E570F95181D902520B3564A2BC6BAA3EF49264453597E2FC76E18529B64
77A04A0A7893B2E7D3B5EA0E324E24E92E60C451B7AF1B248BDF58FDD0FE2A25
155E5E9AFA5547AC89B10A42A65DC61852339A38531A698E9437776A70A038AC
FBD52E68920FF022425A21CED7A028CFDB1B1458BE7E261B20F87F7523B721B2
B9C0C3B88FF55F8E9FF435AFF83A7BFEF9BEEC854EC912ABBD4615852A0184FC
1A299434634D772D2EE66CC0C4FAA4225FA1BF427D1B34CD1E4536CEDA111378
3F70F630B32C00EA4E821067927EC46753645F880BD138BCBADAA4FB07E2CA3A
0D84229C2226465DBD27291A7AAD14E945924F1C354D26C28195A1F4C4CC623B
30B076D4861E87C48487E28622CCBB3CC1853E3791C09476E6A12533FE767CDA
8354E5B65B92A6310EB3C3F577F2A16188D24D00DEE693B16645D354E54ED6C9
7ED4F591623645C99596CBB0BB982F75ACF33109F8AE7ADE4954D0B1E18022FD
7F30FC6DECADB54BDAD2FD90E92171E48432BBAB91BC09B2075FF97C68768B44
35372423C4BAF6A443C80A74A4FF805BF78932BA792454335E88F6C55371A1EF
8D121EDFC4FAE8D06389D3F87370830C3793C4A692F2D6346DB917D965504EB3
1059712DFECD2A64805E85BFE8588C946F09DABCCD5FE74AC5D873DD414CD10A
DA85877AE16BC30D56A0B208DA546903B801BE4011DA698C5543B6D1D2491E61
E684BD6DD5FFFD350188B78CDA76E3DF781E3C62DDFC2093719EDB40EAD7CF83
E55362D48E63199BC12F039BD581D96BB5E3C739A2865136253ADE278AB7DA9C
E43868D256A012867B44D87F45D447DEA935A48E090DD843D86EFA1F2E0580F6
73C65EBF240FE486A05F12D7C35E2D3FE8C1C4A90327065B4889B4EBA2554CA4
065043D5B3F89CA42F13A163508B4EE745C06B3191408194151AF8810C0A4D4C
B8A5911CF26DF6F172CAACCF0690464B7E4954C40A4F824E914915376A127DBE
3085A3C56EF423357B1841A1009452BF086EA835F99AE0AE421D0B583CE26A2A
0149F2371FE7807F8382AD9D1E7E446E73FB596F2F70463DFEC10FF237E38BC8
E19B81502A19E0BD113AF8B68E4C0BAC128B7D4D61C2AA87093F0D9188350856
B6EF1B6E7B4143A2BFEC536592EAFFB4C848DCC2E424EC780877D40EFD5A0A11
26DC1980B172509D34AD10D9359515CAEDC92632E14F2F807274C0319C92357D
FA5DDE597C96EC2EE7774D2E36B7DC67BFD9EC124699E42CBFBF054B3FFB95DB
D650B1F0525B33475AAAA33742724238347030E1C28495B0064C2A1A1E5920A2
A3B34666168BDBB207A961BFFDEDF088DDFE4841546D952908E09199F6A0863E
67F64E79A6C3702604ACF56C510144C6E66618B19A9E2827E94DBD4BE8F8EC47
04BD05FC703A0970697E79A5F4F65FDC310F85FADBF2F7E039F3D98C8D45EA83
9D4500138EBAE2F78B030EB5096BAE1733AEF0793E938412A434D55C74D056E0
0E171098DBEEC6496DE182F8FD6C69E000D49A8A1C950D8D205796DCA6E56ED8
170F62A8F2C40644E9257493590BAE2E3115A50D1D6D582C7A94DC5A8553D90D
A82647B305ABCBD6C49ED9DEE46462D609F2AF75E2C0CCCF6E0F27E1B5E783A5
5301CF59F9E7D83B5204A7BA3D11006B763ED08B3EABCA1644E74824BD7F4849
B1860F032E844EAC0E22D4B4002ACD8A06F29A7B224A1D19B8A8F7A282AD667D
D1AA4D27665BF4CF688F76BE26937D6218C0064DB768E00FEF4EA54403637BD7
F3D258D6E0B6EB6A57B74E63A3518EC7667E07BA5F6725DFB42C4810D2FE7BF2
78B215DB9A61885A88D88CB71980C34F1EB9246FC0C8D903EC0A1ACD5AC6C11B
C2D7782865CE66370F16927135F55194B9F6A1679797BE368EEDC71AAA864703
D23D07B54DC25FC77760FD5A71486DEA1A884F4989C120FABD61EE17CCC5F11D
52AE89B050BB43C2E61C6F69E97493F3EBCD5EBDBBE63A7C5C54DB3DCBCB028C
A6D11849D17BDD2720DE9B8456C4661DFEC67BE4901FF6F2645E0F13C778811B
1078CDB36CFA5424CA7A4589A0257051C54716D2440C2CF4262663EA221585F8
3B637F19FFB7511DE223A0A261324189EDB3889D747887BEB3F685B182706F5D
B4C7C4BC2FB81A7D0A26ECCE8407114DD547128F3C4AB90F6C27908FFBEF6F0B
009A4FBC024F5B50F58CE8242EA45EB461DEEA8CB145F31AFB60F72DE3E5C916
B3A1FC467F98A7E2F4511DEB9FBAB2FEDC321C73F3FD26C12A409AF1057E6EF2
31EC7AC1950D41B8B1DD046D58348859690E918B1F43F4B7B7AD9AB673C87D64
F9D140293394A28699B8E8E73C41FCEF79E755A363ED865D343D775C1CAA1D6C
617F36EAF1C912C54FE888ECB4453BD8C50605F090D8E6ED3CB1437D4B7B26CB
0EEC76414116026BA064AB4227CA91A757778F9AD798BC79883D7BE8D77767DF
89A1F3A1D5BA248AFC6587EE83EF6D587F638339D1EEA846AF0FEA6F7664923C
F9E8C2DAB8CFB4A81105C9E1F501222A9B012DCADFEB8FE96CE96ECF5B4FFC4A
EADD92FB8815B6F8AAE2D4ADC77564AEB8D6502956CCACD50BEE005D206688D0
DC863AE9D671BBAA034E8C3200E3C25D337817A000ED62612265337EE24775C2
952BE525E96DF8587C733B68DF793BC4135C84004DA3640807B7E4AD68E86A67
B2D6D75B9AE0A4BB0F1ABAC4C697647502CDF96CDEAFDD44E1185B218228603A
4BE4454CA625FF4A75F5B47721F1173793087399AE2CD42EA3950E8C685E1633
15D4776E33664DAD98E133A61B4182FFB00C635B437AEA2C4BB69C89E3BED625
BB7CE43E2711F05FACEF493B0E52359A058BEF688E70AC347A16289031F88B22
3896EAA163E28BF30C29AB8B417E2D6075412C49B0CB4C589850F14F630B2BEE
87299D5A778D27E34C62A5897566669DBC158C70DBED620E6066CE322A34927B
8BCD0708A1B45270B1B1C82A3A3F8D082AC5C1C0427AD24E2C9976490B46B8B1
94790BA05E28DCB5D0BBF13B545BF86C23FC4AFC975F08CCC69D751F3FBA44B3
ABE5564318882206C9671440578F0FDCC7AF4AD93658D416C86E3048847925F2
9C345E615DD74CF3E5DAA82DA417E864D58667CF9C38F8EAD2A8F5A3D6C7EF7A
7BDCDDF2A9935AB711DE647B7518660265D5C2215753A9F8B236D84456689804
1893C456283A2379EE0E65314F93025CF98030242B346868876F4CF01FB0F15F
7D3786FE1AF77CE0C06AE18F8C86E1B8F71ECA64BE4C153AC91451F122BDD5C7
24CB802331A4EC5CA6AE6961E7DE6E547211BB0160372E4C019A9875661295B3
EF67AEAD84CC8BC297009EB5D21EAAD7AD268749D8203A174028CBB2A2717C97
FF0F700841CB1DCC582945C257765C4801FB768C6188F02FF2328F7D59D58A36
0D69D0102F4ACA897F0502C545F92404F6B14925CC44074C3B78058725777666
DE7703EAC3383DC10246713871E39BB855E9BD68C4C003178B906ED7FB4FE420
BB6B43AC6BFD027E2E6AB2131703F83489154714BB2D2C1A74C7969784706F60
357E843AA41FD2A7DC0244ABB09915FCE4DA65A752D9B6FCF5943BF5BEEFF1F9
BF99301CB61CB5FD95E9276D624F6F7CAD4242AE6C63D047AAC8EF82134EC41B
7FD21AA87E3A80D75383603152011530B8ABD2294D01F2E2FCFDEBEF8DC018E3
88F3C904DFD7FB1CD0FC0E904742880417F7858BC75EF69EB5FBAFAE9B9B0B09
749ADB136A37504483539653C3EC0EE8DDC954C072FBCA7EED7628F0AD1B5470
82A76F42C1CA3F0DD82AE8694C53BEEBDD17A77C92FD2ADD1E3BD852A01713B2
4DC5BEE9A5B1EB549753B1DC80927393C05F4ACF8BCBBB605F7BB4923EEE9B65
CBBD081D8326F737D807E2CB59BD2333DF285B9BD98A171EEB42255469927C6E
33AEE18F0ECB2AEEA335B5BDE62E82D92842300CBA463409FA76943A912816EA
4DA67AF98CF6B38A4AA3400DD106694E2A18A232D38AA3EDCCA5D1738248D163
39B87792FD045C0498165673ABD3E9FB9B5E6C7EAC6B9A8134C4E8F4969C9268
F7A2C3061A056427BADE8C69ED7F226EBFFB0FC609E366B12B8A33E6D94AFF5A
50CCEF0A26AEFD0620414860832D64B6BBFA6DFC607364D550859170B4CA391D
713F3A00A368715E2216748B45D59A752A5E328658FD97C5928BB2B1D9483118
2971A143737D515EC7EBDAB4AF1ECBA1C6E90D2E175FA968D454AC3CD06F4C07
9ACE1DDCA6F51DC6F43A284D4F92B73D7AE87B13F108F2C4611CD948F30F56B8
E0463774DEDFC3928949F19EEE06C1A0E5BE179E3B967EAE178DCA3133DBF682
F6B0F87163888A053067CF7533986CEF5A3DE144D44BB68F1FBD1166D8ED27FA
166B3F70FCBB8471D2E993F52957F85E4066DB4A2E0E48CEBBC8187D2F9940B2
EDF135A35A8E10E17BF97DD807BDBE8E13952104D6EE0726B4A298F819F4B0E2
E6D07311AF8517FF58B5DDE770C26BF3FB25585162FD243B0D6C80F27070570E
ABBB37281ACFC781C2C197B3871AD6019E7F444B549234C8F953B6EDFAFA0A74
E5ACB7720A4492CC488C6073B31799FF4CEF2C9097675A4A3D916F062555745F
F7432C918BBBC317C645296377A5AFBC0F9A5F8C68A06FFBE814FC15FDF323A7
899ABAD1406E99B06E448A6F4AC9EA51BF161832CFFE928E921321320576AFC1
B2A6E8B29139901C2D6B45418B0ACCE2B377C94FB6528554E0F5A13CA8EDC75F
9FF83639E9FEFB124B9350A1BCC971F5CC33B9267639D30C6CD23E61C8BE4723
127BECC1F723745A7D8D03E987F0A12D642F210E9362031A5652877C55E6F86A
348DE5BC5F443EC0C6BBF73D8E4A1685CB4E79C291B3845A67ACB9075025D50E
155C9BF4BDCD0D6EE7EC9891C3FD2FE1B691E6964A75C0FC09309119265F1526
806D2A762C7AB9EF12589539D242A92371713E26BD359A92CB67270EFBF84F83
2201C0F9502D20F4415A6AA330B97BFB4A6AA6A2113E3305F41EF9D98665B6F5
31298D9397AAB0E8359DA977B2E0D198AD4529C0EC7949F0F8AA67948D8523DD
88ECC9D3E8DABC5362690230D33675E50F512E8CBF10D330BD0ACE901DC70386
4EE76E1BD38C0D8333437495A5440024545D9A4CDBB26FBF629368A18F9E93C4
2A264B47D54240CFC7F7F2350C62489C838EE964C35E0411EF7B2A16C1A054DC
DC4B45F45F422A171CD69CD29EBA124168667ACA98D62B1B218C8BDE93A898DB
515B4B7B90AE088126D87AA30893CAE2D7C1C93D572B4A2DD0C30B80776E46AC
C8363DD975298D4DA6C289F720673EEB406D81E1186E1C51533C63681D57C322
906C96B3D8D7698908FD4BF09E1A6FE0CB96974602CFA5EAE2D3119383D5C4FB
245438D1EB522629422FE9159C7F0C23064EE0641A8704FC0B84C7910469C5BF
2E7CC42B37D00CE629A02554CC743F9F6F87802A28CEE1D1656882BAF0EF49F5
D6EF192410C3B961106E6E3E5FC4B589DB92B21A025A663AA0A51A0679057F5F
0F84908A650FF1FF0AA18B4862A624D51147591DF650AE604BFCB720EF21B1AC
FAAA41677CD79E73EC136CAFEC78B8F491EBE344CF016E3B3AD1A5C02F16401A
BB7D6FF3333F83E3BF7078621259454B080240F72A77D4E89102997042E72658
AE9987F51D3FDA52278AC886D639207031634EC80E8F00CA9089860202C18629
813E8C17B407287F928F4153B5CB7129A6E0DAEF077137343156F4F1BDB6904C
4F93B2C413CB237B187A7B541EAA42612228A431D3DC3C5EFD2F5C371D72AA5B
CD06D71128BF36AD0B4334D53251D410E3987D7DC978ED0612E06929588420CA
FF5AD9AC184C598423251B432F53CBEAE23F723610394B58C23BFDFEDEAB08DB
454EB46F61EE0592365D4A0163CC2B0BB2D3519B2EC77F58612B6E8A0E21696C
8786701786CC4705938B75C84295FB4DCF654CFC88B1A24C8341E98DB348EE83
301854930D8E3D2E30DACBB1DCE65C2FE2764FB35860A5A70D8D0E622F28D09E
E1B1FAEC9A588567F814B76B2E0C810759593A10A0BA2BDECCE95F6DC150834D
C5FE04AE3CAF11B133AE8F79629C80E8D82ECB7970531E401AAE565BF692AD45
C00722990BC698CA094E850DC22C10EA7EBA8B34E826899932BFB7444CD72318
AF86D02F5E6A06012C50212203086DFF41EA57A02E516478CDB70CDA1D379A8E
8EAAE16E77D02D65FA396E13CFF2B38A5BAC77B7F90F9E3131A0D1B8736E1481
8D9380ABA519C26A24924BB72A79D671F05376415E254D8906D53D6894A7713F
519E76FBBC3B86332128153FF91422D93B91B5A29DC2769E322F03436388BB42
ABCD6BC1189D99B2F244857BC1101068166C83CA02E217EE6DC74B0FCED71397
562B2B66481B77CC776FE2C77AA80F819DE7A9799F56C46AB99A0C32E12464DE
BEEC00D4851417A6035DD3615F02FA992C29EA211F984BF85DDA60D5C9C58BAD
5B6516DE9644488D58DBD6987F07A0909F7E85C9F3F1BFC130251B7A9A0855F0
CAB995DEFDA49A37473D197909D84EA8B70282230EF779478B4DC39B7FF7DB34
660575453320DCE8EDE7EDB4916BA05B978CB9E18B1AA33B54AF32A4900A47C4
EBBE21609A2C7A155BAD0DADE691E97701294AF10B82B076BB4B3F82782A76CD
6BF34DABBD083B3F422DDAEEFA454D76A471A403B042E524AE2CB9B672184CBF
A9CBDCD8FFD621D429E1B3B6252805592E46B2195CBF6619FADFF828D9D54310
C7A61F22E45BD898E4F453B4D38F8CF6E5F94DF278DA98338CA7B9A3FD288360
44613254BEB5D37E3AF9B142A1741AE695A5F35D061495326840677816E27916
4BF0CAC5AD7DFF0A2EAA549F95ADF9FD02C14CA858E82DA35191D843C69950CF
F4C85B1A0F4FE03F24B4FAC8DA264BCC9CC5A4CE9EE09D376242DB2233B50B98
C2DA79CD609DB00FE7FF584FDF4CE81371146436317179E5038E74DD52223252
9996BFFF6C5C59CBED8D75DCDA360962B71B9E3962D39059607E74887779EDEE
AC5E74B7B491E08190DA91E55C96FA2004943FEC338B354CF9989F9C09C9D012
207A6F0A62429E4364FC47534FF556162094D73F58B2074F71CDA251C809D65D
CD27D3FA97021BDA9F0FB3B86E63DED098A028116C707A99943F119A3C77EE13
80464CB1CA8C67893838618F791A5C45AE186A2F9E362CCC244C16DF4C0D163A
C5EF684F00F03DA122A8D1066DBE472F83389D746192FF1472CEB96ABB0BAB36
3FF01E655886C80B8D8EC5B3BCACFA385D9CAC57568CAFF8C070E9E465F41AEC
5CCAF64033ECDD7F84C214033632772BF8651FCE46B4FC139E3D6EE89030BA11
578795DCCE8DA63DFF59F47F5DD4D3E43538F46BFFA69B14BBD009A026C31178
FB3EBCE1999894532E42C5AD3A0A1996FBA7F77BD21E691A336B115AE1725AA6
51D5DC040FD4E80F119125C77A5EEDEA88E6C1B4D30E8292F85D7533591B073B
95E985D665A43F9BFB9116CA33E68CC95307784D102B4D9A3EA8EC5E078C7229
850EE3D97D54CD5060ED3B550D3E04C8B63780CF118A219307C670A0EC3CC919
A56E35849FB526B2D32651E1A7440911B0E72FD325413BC39AAD679BF15902CF
96EE4A88F5AA89AAC676462861F4DA6823541638078391DD4F2027566DD82C9D
467BF01E97DD0C37068F39AD6C0057633D352036C6D5AFDC84D0C42C966AE3FE
41B84E27DA820D71EADCD01A0BB0DA5D6ADB5443E5997DF9C7A1817250E7630C
818C23D5751C3A0D8F5CFA1CA2B9E46B5EA4C36A3F07450DADFE4B7134EDC9C2
975B4A160F2096D2122F4765F432B26DF8BB35CF94FE7E545F8757E69E715DC7
8AD7BBC846F53BCED69CFF73C1FB617EA1453A218299FDE3354133DEB19C797A
262E90D622E14A90FEDAE6CE190B65AF28D12049DD5EDB04E83DEB1FEE8E0A56
801DE5327EA3E808275B9B81CEEAA908FFD43936D6DBA7B11AF8D844BB471954
9EEB160770C02BAAF7E865E5BE849D520FFA2CD410E0959D3CAD78BAEC95DC11
FE7C5AC9D95A4F9A83FC85E9A3F9E0E3F25728A225458C1EF8EA1CFECA85E778
20A6004EC3AD240D5A0BA910595AD7C848F47C776FF2830C88BD42923B54D57E
D377A0CD550786B7928D528B5EBFF57ED14429708DA12888FFAD35F528B2BE4D
7B9EC0E5B85E797DDCC32141405B7E4AF3C9A65B405B0F57FA78F7FBBFD71535
34F43089FEED5E5BF74EAEF6C494EE344A325F4AEED47D9D5E46610E9F323CD7
F2168B613AF96C9ACA46E981C7C637D1F1BA6065E5FC31F266151192504BB279
041A9C5B576A960C37604F7CA535267DEA9A856BA154B187E8804210303ABEF1
809376BD502728AD63130AB0EDFFDB14218A310FCB4BA42C7E7D5FCAF715A5FE
4EFF0F190145137A8A2C8FF3F81115D5E8DCF5CD2B1721302119AD1BF462300A
A0E7258ED8A614AEEA4D348A31A25D3A0C363F4A7C361F6831643A631A478D5C
2A0D08CB9CFFA787D0B8E468FB5EDD8C7D4D38E8A747FAD1BEB0A8874D4FB758
1C70827C5BA231DC91DE55D33B2CF150523C616EE32C224F56B8E6B1E6CC1F2C
E8EE5626DB3C4156E1F7BB4A481B3B426827FF45E379817760012E138E298DB2
FC4F036F4F132DF07599358C8D9FE7A47E9EFEC2EFEC9C20695C28D48356E461
7ACA78ABF982836720008D623E9CF72A6BFCF896CF0E4562D0BB487CF99D9D83
08FAF12DB1E850BE6C52985B17DA07D0741C6CE072264A748B2E89FF4F06DD26
9A5BEF1E51494EBEE3BD3804B1D00EBD710012B8E925B0A0217B02768B6A54CF
97DF1E20F24AA836136E8845A4D5DF1451CB00F7D7056D70C5F48052FCD8724F
78331CC80DCDB247CFE8AC2F2FF4FBCBE3075DA5CDAFD9F5766BDD8812A3CDB8
22C9A950E7CE74A6A2C0CBD95B025F78DBA3EFE67E75B4A95E3B75D9A3CE1051
D28DE87D246ED6C7E6BEFDEA59BA9506E857B59D7BDAF09D08CE24844C7D3874
FF607214BE6E47721DB7760C35A5F1C6116213B34BF60D87230BA3EEB21274C8
464F13D78422E050F6DF9A2080C6839F45640EA6C9A9DB2E30B734D2B0961FC4
9DBA6673C791F49B9180DEFC7285C1C54C9A51C47CC8245AF59B2960E698941E
7D194C159A008A022F1B34E08D5CFF31672B512358A9CBA6B88703E4FEE6EF08
11AB976B97FB4465E1F5C48A30C397780145EA16C40E1119545FB49211B76BDE
0A097342B6077D064BD64F4B20E2B9CF0EEF7EE1B2737349DBD3BDBA47C99A11
718422909051A9BEB0F7A3C63C262250223F360ABEFB00EAE008406671D302A5
C77C9987180A00844C69341DD02AA491F5C77C6C4286DCAF523787DB4EF4ABF5
F6F82C3EC02CD0DA43399E6A6918A88738EB7FA2BB9C9143FB63AB77D692F7B6
3F2E295F4498EE33476A873542BC1F36B90DA6A568B6E20120A47EA9B1726033
0EC4806F090B5C2413C6688BA375F478C88A765A41554B3696C20B5EDD04A13E
7ABF025C080431BA31D92804959B8BF8D4FBB28A8E2BE056D2FC7F893F2F8229
9EAD2EF1B0D768475022C8BA1BEF5A52359FD9CEBD79AFEE273E65419FD98FB5
8DBE47F4CA3D848A59C7C116E8DF82238002E748277E73FB33D20DB443AA349E
A718A92432A875162D826701ED5FB1DDAEB0C123BD6738E0A07417B55AA78C25
5E91895ADE44C5C651F773DE26FD1456F4EA590AC5BFB01165894BD92191912D
2E1CBB7A66569D5CF73C3D9B2170E1A5FDA4264427EEA59C1C6E63FEDF21D316
96A52CCB92052D0974BE27060866F3E56EC70C3535CF0334B151E96334A3CAF9
C9102AD2944A675413A63220594184FDF703E89EFDED7E40B13F8A647D461357
C0C610603B34E3E5AE8B8E2EF94ED05EFF35575A85F34363A45F34F7AFA811FA
4B931D9DCBFF2289192393C682B739EBE4208BA143359C277DCEF445AD29820A
893BD414FE36236A1FE753BA07422A52339BFC4EF75EA4F294EAE6D994AEAC35
4EACFB93329631FD4F5BF25B2182D85D92CBBA3C65268AB4E7FBE531FA77D8EB
3145485758CF97FE3C11DDE933EDE16FC7FE07670F204A1E140788BD5CBDF5A3
CA9E338C2729B445571336E204EE168BD3126DCE6667DCD7A590B87761DF1858
2182322572D9107B51E80BE1BCE9A8D872EDE33AF58B9D9B84B5E46C0064F969
9B1F5DD8FE7654C24DABAD6C03DA2D86B4B071D47E59ECFE8D7A64E0924B03B0
49C8CD8293AE98EAF0B1C98442513BDD3878184700FCDCACAA99ED62B0F874AE
6F7F5CBE4A783198354DC5617B4EB7BB5D5F606AD8624BCC48EF866E063183C2
2E25D4CCC93FCFBC954A4AFCBAB917E4C8DB64542B24F1254FBAEA980627DCAE
6807AD53925B957EB7BC44BBAB31C31DD0F7D3B2767CEF800360E406EFF98BEA
C90D698848D84DE3AD610143D4713A65B4CD9600A18669
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4ADBFECA756A185E977BFF8C37BE1840CF90BED14A3164D
A8B20DFD9728E6BAC7EF9A114A217DEE75884EF4B9C60C040E8FEFB94BDCA9B0
43F8F6EFC1F52768B6086C41EBDACF46445AEEC02EFF10D4FE13601C3FB16EBB
96A0A60B69DE009F15549E0A5D45A0357FA8A5AC12E289CF2D907A6EC2FF53F9
8821703295813331DA7761B1A0D1337F0779776AFE85BE8A59526694A0F4EB05
67316863FA73E29895CBABEF51AFE1EB024F24F6FB79332C017A9411BF924DE0
E40A24B0E1B797094DD456CE9AD3AB8669A69121B16C33CD949DC6E4C61EB730
176DA74C7DC0D0D0A18384F44D6DFB8677161B8174BE74D7309B15320537D3C6
8392988141F31EE4BED3833D341B2ED787102912117E89C1762D1D58C522E991
CF63E027CDC6072975BBA855964ECF98B21C50DDD5F5BDCF9DF9A815A47BDB3D
FD957F7E5F58E9F0233288E360BA518797DF10D86BE9888BC2427FF8F9282B5D
2B115E8947123C8464BC5F4243F63B1C1767A866F1F9B4B27B64CB3D44108486
E4550EC5C68153E7DC46ACFFC6C3CA7EDF84E81C7704100482EC15E4BF7FA46C
8D7CDB53136660494D2E9949A49AAE6BCC2E319ED9D5E2D6D224D301DE616EF4
75FADF08E27FF18CFA86C9A98FB9DB608D0760FCBF45DD8C31559C8B61790857
547C6FCBB35A79610367CE47D1EC0E12B5AF108B0A14AC3F8338E1910099477D
1CE91DB81A77C19C9BDB4426F2E6E52F6410BD76E446CB16D2C86996B95C59BA
14D36EEC6BE9DA05496091895880E3964BD3201977FE9C4724F18937391C3E47
F5E0B28AF6259E183CE31B0AB03A0FFF290FB10359EF6B59B669723240EF474A
AAC6D3B450D864B6B348DDBD788C4AD71CF90F39E1D225BC2CCD303A5DF0182B
DAAB61673AF9EFCF4289AD9BC9BB2ABD70E577990193AA89D277C341427D0A41
07DD5D6B4AA14C7EE68BF805D039CAED3E67C5554AF6DFCA625D5253D4AD8C12
397770CE7ED0967E6AECDE8EFC332AFDCA6E9481C2FF9BAE09B0455F73F94825
20AAA4AE05FA237BDBAAB9696E57429E6BD74FFC6257A2E0CE1910FF41A7B709
0DE957AB8ABC04D5DB02C0BEBDB9FEABA272A94E19D50364E00E5B42D56879A4
D461CEE46945F3B3B44F99718108584E49675BC76EB74E8E6D70007F0BA7F58A
D7FABB3E6FA6923C4EDFA26A428A1997AA8D6373B736D7596B2D41C54C50D263
F6BE4E847828EF874F28F29A4E1AFEC71D982895820AB47D0BEB5D5BBE6577DA
7C065BD87A2668C28A6FBB81E9A15B54807B1EDAC16B85466532AF71DBDA671C
CABE69652A7A0E48CD62CECC2B1941E8E3BA1E4E2F9D8E5598C4DF89BF7AE7A5
5CC9FCC714C1088F179CCB73138BFAAD057EB368B09BCB331C141A1418BAC662
E6A1571C8CE9CD8AF7F74273E31B308B22D42456FBD8A7C61D311CC902F23663
8E309D5C60811BF6F63E3E4FD92E589F0855DC9A70014620B0B51518406D50F1
843D2A3FDB8C2903867E8CB0B554648DE5128413C0C57065E601DF7852853141
A0C74E32EF2C9C767E47FE020665FD58FED0E803DA4864A244E9BA01262FE163
51AEAFADAC5D1693B1F9D096A98F7CB2B8B0FECB21E1539954F48B0915325341
4AEEA7BE39222202946505438946C89460DCCF26D4DFBE54640619BD6DDABD41
A43813FC1854CEAA1C3BCE1A61B971E94FFD34134C975C6B0F2C0ECD9369ABA5
41ECAF2334B450BBAA5FA349A429FEE932F509F19D38D392F376378A15E7D690
080B50958C0D4C4B34D93CB15FAFF280AD9DBA9C320CC1AF7EC0F43CB3BEF0B1
5C0D0481B98752FEC836101779320892C0E88D0103CA6ABF8919D432F4096566
388B0E820743094A16BEB20EF379E3E5C61274D66381ED7D3BB2FBA15D02DDF0
8C067293E5AC1DC466ECA36F517C6ED6C073855E3485B02EA8FBEE209B900697
C9ECA2F78B64F04D835D18F01FE3C10AB00297A1018D4833F4A4ED662BDF7AF1
7F3F2187576B0D8F3179155FC0E8A711D2DBEC2AD443358FC25CC83B4D76C71C
9C29C5D2A5FC4F59D713C7A68D3BD19BA184F3394CC160FB8B8A20886DC83DC4
E6943A62B61C2825D2CCB4C04692EC7536B6915B89A1CBC87AFE9CB14F5CE713
9DBF8EE4739F603EDE5944656B8923E1E74E36EA045F4AE79C581DE155AACDA3
96D2303842C303C712015A029C442321D291BE5125F4BFFA22C2AEBE0A263A87
C8A29282B63D4032E637EF761BABFC66F68974EFF01250F04061E4A9FE2D1DA1
356C6B747137A5C2E26DAFFC3910FCE077773EE27EAD3BDAAAF32DB1E2E855AA
8943208B43BB59C7A16CEF747A7BB59D3CE2B61BC02C13D71823BBE9691CC193
04561E28D31FABB9681E65213FB75EEA0624A4F42B66C803241C52DFC08A2CDA
2BA7EDDF1D41326C861C68977462A6967C965F29C264F30E2E4E58C856CD14E9
5FA97E3BEB46C5A0483791A684710DA29B203669690BF3B030A11A8C97CA10EC
6D1396B235FF13AC59B3AC6E85935F0E7AF6D49CB96F21DAA5235EF20652D4E4
7418E54CD24B9A86BE2E17C48E81324EF769B9098D4142C7571BA3A098CD4FFD
22DA2D58D1EE2D59636E153F6668AE40612EBEDBB75D0312D5D9EA88990CD95D
2EE488FC4E3AC9ABC72ABCA4BB6482961F2AC2A245763925B75668AA2AE4D0AC
8EF0B6325A179CFFAFE89CBEC161F6E7046603A7971C78C24D8EBEC96A9347F5
13E1EC74EDF143E655B79DBE6B5F65B0F22B8E7FF08FFA908C3FFEE4F70AB956
2E7E33F4592007733BE7A39C37A541ECFFC41F3D6BF6C644B9D62883B6FDA1FC
44625A252F2F60F8B45FC5E5623C9FFC10AC3BF3E6D9D326CB1A24F45F6406EE
DBF4122085EF2A3CA8DC5B8AB0A227BCDC3108243B4145DD5009A2C28E1F3156
71C8ACC36ACEF982BE67D2D07A3CADA9A75AE6E47C92652A8B08790E3F476DC6
889067C2715703CBBD284907660D2A632CCE6FEA312C488E31958225A9DD9501
2913031421A369A51F52032955561A58E83DF0DAE737D83B05A2AB65485AAFA1
7A308721C3D6DEBAE9033F23071B5AA8020009910CE2F66B1336B6DEF9EAEC8E
B69B89F7DA551696EE95D50B2AFFEB48164FCA8C9B5E14B07904181728CCF87C
A0949322CF63C13B40CE2165F881FC652986FAA1EA9D8362516F7BC60D6735C0
A2B156F898134B171ED4817F85923A7CE02828874B2EBDFEDCC7A41E0FA467E9
05FB15B69B6657E483E164A964B47F580689C4AE81D2554BD59187E66DD0552B
D5AE09BA8692354EE9CC1A42B9410F631AAC766D4FE42030B1E50AC678C028C2
24A25908900CC196E3D48C728D678653AD6355F438BD25E988C0E19EBD1B1BDB
406B5250A88CEBA461A1285A8C25A4E2FD3052079DBFCB787797945A96D5D016
46203F0BD90754DB90BAE4D271C40B69A356F0293FE27E698D4B53F0CE552445
F098E4652DEB7ED998DB296F8CFD8474080BD41C6361BE44EC0C4246BAA7A055
0D01D1C0093CD52EB499761B1461175460F65786EE403764637A0DC3E85FC214
873B86E0D195621189BC9630C5BBF34BA5CAE50322911DB465A58834D223E892
C563352FF22E29E510943DF5F49CA94439534EE75D27D63A6A83BF67261A942C
60F540299DD3F766B9E07085D148B266692B3534BF9EEB42472F73FD7431FB92
1CF9297F90FCA243E066C9A2ED016EB15C5A05FBF05E4F2F0348BE126AF97126
661F8B7F6EDA6C096A68671099FF27D077A9475E3B1F6A943C7E32B22B8002A9
F6C05E1BF884291198893F23CDD96124D78AB6AE0F0AF834A38FAAB8193783B6
DF7936C8A1E909087D6B80F4D30DCC6EA736393E4435C58ACD2826B9A884343F
88219062248B5FA00BF7988218E8D1FB68F6C66D0C30154528B4C1FE8E5D25B8
85FB0E6612904E7C47C2204F15BEA421990EF3630E1A237794A98E7CFFCBAA66
06E892B2499BFD480183848C255C5EB0E0E8017640EB48A1C66F7FD9C7F25BF2
6FD10C14FF46E5A535146961C078A4B8A95F3212A3024D3A8039342BD25EF816
E1237DB415868B9155245E1923C638F9DCC7988D7CA722B8632B447FBAC4BE53
AE2075FA2DD80FD84EB215C66B556A12C62372B86682056BC9FFE570F46FC3A4
B6054037A4675C05485D8E75D946BFFB047CB809AC13D1F5210F89E763033F89
C344E55CA0F3312B67868F909676CAE0EF65B382551673C943C256152111643B
603C00D274062BA3385B67794A7817425D3D633ED5A0D337C07BE69CDFE57ACD
BA4E82F7666A890CAC3928A8EA6466B2ADAF430D4CA163AE668E68D1181838BC
6ACCD95653A5E3CAA59A7AD5965D0D7084217C5E8763B010977069AF35EC6EB2
919B0F4CB9413C3C253FFE2B512B708B7E48A56663FC38CFA1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra un)
@start /Fa 145[830 4[415 3[682 830 1[830 98[{ enclmec ReEncodeFont }5
1328.35 /LMRoman12-Bold rf /Fb 242[1594 13[{ enclmmathsy ReEncodeFont }
1 1594.02 /LMMathSymbols10-Regular rf /Fc 205[406 406
49[{ enclmrm ReEncodeFont }2 664.176 /LMRoman6-Regular
rf /Fd 134[465 530 16[448 22[597 80[{ enclmmathit ReEncodeFont }4
885.568 /LMMathItalic8-Regular rf /Fe 255[732{
 enclmmathsy ReEncodeFont }1 885.568 /LMMathSymbols8-Regular
rf /Ff 198[470 1[470 470 470 470 470 470 470 49[{ enclmrm ReEncodeFont }
8 885.568 /LMRoman8-Regular rf /Fg 203[993 1[993 50[{}2
1328.35 /wasy10 rf /Fh 184[869 5[830 11[553 2[553 3[307
46[{ enclmec ReEncodeFont }5 1106.96 /LMRoman10-Regular
rf /Fi 160[909 45[606 1[606 47[{ enclmec ReEncodeFont }3
1212.12 /LMRoman10-Regular rf /Fj 173[959 3[959 78[{}2
1328.35 /MSBM10 rf /Fk 149[369 2[664 664 51[886 48[369
1033{ enclmmathsy ReEncodeFont }6 1328.35 /LMMathSymbols10-Regular
rf /Fl 194[1012 1[361 361 650 650 650 650 650 650 650
650 650 650 4[1012 1[506 506 40[{ enclmrm ReEncodeFont }16
1328.35 /LMRoman12-Regular rf /Fm 134[634 739 10[1138
5[623 2[676 560 553 683 16[838 3[885 2[574 13[361 59[{
 enclmmathit ReEncodeFont }12 1328.35 /LMMathItalic12-Regular
rf /Fn 3[723 5[650 17[650 105[578 686 686 939 686 723
506 513 506 2[650 723 1084 361 686 397 361 723 650 397
578 723 578 723 650 4[664 1[795 2[1336 975 975 939 723
2[885 2[1192 813 1011 1[469 975 1021 849 885 993 1[921
975 6[361 650 650 650 650 650 650 650 650 650 1[650 361
434 361 2[506 506 6[361 5[759 27[{ enclmec ReEncodeFont }64
1328.35 /LMRoman12-Regular rf /Fo 9[1076 123[956 1136
1[1554 1[1196 837 849 879 1[1196 1076 1196 1793 598 1136
658 598 1196 1076 1[982 1196 956 1196 1046 6[1315 4[1654
1497 1196 2[1470 1616 1682 2041 1293 1685 1[801 1[1691
1353 1412 1[1554 1530 1625 7[1076 1076 1076 1076 1076
1076 1076 1076 1076 1076 1076 598 717 45[{ enclmec ReEncodeFont }53
1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fo(A)-60
b(G)718 b(2.5)f(-)h(1)f(Gleic)-60 b(h)g(ungssystem)716
b(ohne)g(L\366sung)g(-)i(O)-60 b(A)717 b(-)h(BIFIE)p
0 TeXcolorgray -741 4800 a Fn(1.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)433 b(ist)h(ein)f(Gleic)-36 b(h)g(ungssystem)433
b(mit)h(den)f(Un)-36 b(b)36 b(ekann)-36 b(ten)432 b Fm(a)h
Fn(und)g Fm(b)p Fn(:)18537 9338 y(I:)h Fl(5)296 b Fk(\001)f
Fm(a)g Fk(\000)g Fl(4)h Fk(\001)f Fm(b)369 b Fl(=)g(9)18328
12223 y Fn(I)36 b(I:)434 b Fm(c)295 b Fk(\001)g Fm(a)g
Fl(+)g(8)h Fk(\001)f Fm(b)369 b Fl(=)g Fm(d)921 17653
y Fn(Bestimme)346 b(alle)g(W)-108 b(erte)346 b(der)f(P)-36
b(arameter)346 b Fm(c)f Fn(und)f Fm(d)i Fn(so,)g(dass)g(das)g(Gleic)-36
b(h)g(ungssystem)345 b(k)-36 b(eine)921 19645 y(L\366sung)433
b(b)36 b(esitzt!)p 1 0 0 TeXcolorrgb 921 22190 a Fm(c)369
b Fl(=)f Fk(\000)p Fl(10;)656 b Fm(d)369 b Fk(2)g Fj(R)p
Fn(\\)p Fk(f\000)p Fl(18)p Fk(g)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 4800 a Fi(___/1)p 1 0 0
TeXcolorrgb 47990 6792 a Fh(A)-31 b(G)369 b(2.5)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 25997
54804 45 v 0 TeXcolorgray 24746 81281 a Fn(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fo(A)-60 b(G)718 b(2.5)f(-)h(2)f(Gleic)-60
b(h)g(ungssysteme)716 b(-)h(MC)h(-)g(BIFIE)p 0 TeXcolorgray
-741 4800 a Fn(2.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)609
b(sind)g(A)-36 b(ussagen)610 b(\374b)36 b(er)609 b(die)g(L\366sbark)-36
b(eit)610 b(v)-36 b(on)610 b(v)-36 b(ersc)g(hiedenen)609
b(linearen)h(Glei-)921 6792 y(c)-36 b(h)g(ungssystemen)433
b(mit)g(zw)-36 b(ei)434 b(Un)-36 b(b)36 b(ekann)-36 b(ten)433
b Fm(x)g Fn(und)g Fm(y)48 b Fn(.)921 11330 y(Kreuze)433
b(die)h(zutre\033ende\(n\))d(A)-36 b(ussage\(n\))433
b(an!)p 1062 12370 44260 45 v 1062 20386 45 8016 v 2435
16777 a(Das)h(Gleic)-36 b(h)g(ungssystem)16981 15781
y(I:)434 b Fm(x)295 b Fl(+)g Fm(y)417 b Fl(=)368 b(2)25585
16777 y Fn(hat)433 b(genau)g(eine)h(L\366sung.)16392
17773 y(I)36 b(I:)434 b Fm(x)296 b Fk(\000)f Fl(4)p Fm(y)417
b Fl(=)369 b(2)p 42912 20386 V 1 0 0 TeXcolorrgb 43621
16710 a Fg(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45277 20386 V 1062 20430 44260 45 v 1062
28446 45 8016 v 2435 24837 a Fn(Das)434 b(Gleic)-36 b(h)g(ungssystem)
16392 23841 y(I:)434 b Fk(\000)p Fm(x)295 b Fl(+)g(4)p
Fm(y)417 b Fl(=)369 b Fk(\000)p Fl(2)1329 b Fn(hat)433
b(unendlic)-36 b(h)433 b(viele)16392 25833 y(I)36 b(I:)434
b Fm(x)296 b Fk(\000)f Fl(4)p Fm(y)417 b Fl(=)369 b(2)7901
b Fn(L\366sungen.)p 42912 28446 V 1 0 0 TeXcolorrgb 43621
24771 a Fg(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45277 28446 V 1062 28491 44260 45 v 1062
36507 45 8016 v 2435 32897 a Fn(Das)434 b(Gleic)-36 b(h)g(ungssystem)
16392 31901 y(I:)434 b Fm(x)295 b Fl(+)g Fm(y)417 b Fl(=)369
b(62)27268 32897 y Fn(hat)433 b(genau)h(zw)-36 b(ei)434
b(L\366sungen.)16392 33893 y(I)36 b(I:)434 b Fm(x)296
b Fk(\000)f Fl(4)p Fm(y)417 b Fl(=)369 b Fk(\000)p Fl(43)p
42912 36507 V 45277 36507 V 1062 36551 44260 45 v 1062
44567 45 8016 v 2435 40957 a Fn(Das)434 b(Gleic)-36 b(h)g(ungssystem)
16392 39961 y(I:)434 b Fm(x)295 b Fk(\000)h Fm(y)416
b Fl(=)369 b(1)25946 40957 y Fn(hat)433 b(genau)h(eine)f(L\366sung.)
16392 41953 y(I)36 b(I:)434 b Fk(\000)p Fm(x)296 b Fl(+)f
Fm(y)417 b Fl(=)368 b(2)p 42912 44567 V 45277 44567 V
1062 44611 44260 45 v 1062 52627 45 8016 v 2435 49018
a Fn(Das)434 b(Gleic)-36 b(h)g(ungssystem)16392 48022
y(I:)434 b Fm(x)295 b Fl(+)g Fm(y)417 b Fl(=)369 b(62)26596
49018 y Fn(hat)433 b(k)-36 b(eine)434 b(L\366sung.)16392
50014 y(I)36 b(I:)434 b Fm(x)296 b Fl(+)f Fm(y)416 b
Fl(=)369 b Fk(\000)p Fl(43)p 42912 52627 V 1 0 0 TeXcolorrgb
43621 48951 a Fg(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 52627 V 1062 52672 44260 45 v 47992
4800 a Fi(___/1)p 1 0 0 TeXcolorrgb 47990 6792 a Fh(A)-31
b(G)369 b(2.5)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 56700 54804 45 v 0 TeXcolorgray 24746
81281 a Fn(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fo(A)-60 b(G)665 b(2.5)g(-)g(3)f(Lo)60
b(esung)663 b(eines)h(Gleic)-60 b(h)g(ungssystems)663
b(-)i(O)-60 b(A)665 b(-)g(BIFIE)p 0 TeXcolorgray -741
4800 a Fn(3.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(ist)h(ein)f(Gleic)-36 b(h)g(ungssystem)433 b(mit)h(den)f(Un)-36
b(b)36 b(ekann)-36 b(ten)432 b Fm(a)h Fn(und)g Fm(b)p
Fn(:)18915 9338 y Fm(I)473 b Fl(:)369 b(8)p Fm(a)295
b Fk(\000)h Fl(3)p Fm(b)369 b Fl(=)g(10)19226 12223 y
Fm(I)104 b(I)473 b Fl(:)370 b Fm(b)f Fl(=)f(2)p Fm(a)295
b Fk(\000)h Fl(1)921 17653 y Fn(L\366se)434 b(das)f(angegeb)36
b(ene)434 b(Gleic)-36 b(h)g(ungssystem!)921 22190 y Fm(a)369
b Fl(=)p 1 0 0 TeXcolorrgb 433 w(3)p Fm(;)p Fl(5)p 0 0 0
TeXcolorrgb 921 26727 a Fm(b)g Fl(=)p 1 0 0 TeXcolorrgb
433 w(6)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800 a Fi(___/1)p
1 0 0 TeXcolorrgb 47990 6792 a Fh(A)-31 b(G)369 b(2.5)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
30203 54804 45 v -2331 35504 a Fo(A)-60 b(G)849 b(2.5)f(-)g(4)g
(Unendlic)-60 b(he)846 b(L\366sungen)h(-)h(O)-60 b(A)848
b(-)h(BIFIE)g(-)f(K)-60 b(omp)60 b(e-)-2331 38526 y(tenzc)-60
b(hec)g(k)718 b(2016)p 0 TeXcolorgray -741 41834 a Fn(4.)p
0 TeXcolorgray 651 w(Gegeb)36 b(en)907 b(ist)h(ein)f(Gleic)-36
b(h)g(ungssystem)907 b(aus)h(zw)-36 b(ei)908 b(linearen)g(Gleic)-36
b(h)g(ungen)906 b(in)i(den)873 43826 y(V)-108 b(ariablen)433
b Fm(x;)221 b(y)418 b Fk(2)369 b Fj(R)p Fn(.)16544 52003
y Fl(2)p Fm(x)295 b Fl(+)g(3)p Fm(y)417 b Fl(=)369 b(7)20967
b Fn(\(1\))16641 54327 y Fl(3)p Fm(x)296 b Fl(+)f Fm(by)416
b Fl(=)369 b Fm(c)433 b Fn(mit)h Fm(b;)221 b(c)370 b
Fk(2)e Fj(R)13961 b Fn(\(2\))921 58521 y(Ermittle)471
b(diejenigen)h(W)-108 b(erte)471 b(f\374r)g Fm(b)g Fn(und)g
Fm(c)p Fn(,)g(f\374r)g(die)g(das)h(Gleic)-36 b(h)g(ungssystem)471
b(unendlic)-36 b(h)887 60513 y(viele)435 b(L\366sungen)e(hat.)921
65050 y Fm(b)369 b Fl(=)p 1 0 0 TeXcolorrgb 3421 64527
a Ff(9)p 3421 64741 471 45 v 3421 65509 a(2)p 0 0 0 TeXcolorrgb
921 69588 a Fm(c)g Fl(=)p 1 0 0 TeXcolorrgb 3428 69065
a Ff(21)p 3428 69278 941 45 v 3663 70046 a(2)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 41834 a Fi(___/1)p 1 0 0
TeXcolorrgb 47990 43826 a Fh(A)-31 b(G)369 b(2.5)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 73521
54804 45 v 0 TeXcolorgray 24746 81281 a Fn(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fo(A)-60 b(G)726 b(2.5)f(-)h(5)g(Gleic)-60
b(h)g(ungssystem)724 b(-)h(L)-179 b(T)725 b(-)h(Matura)f(2014/15)g(-)h
(Ne-)-2331 4622 y(b)60 b(en)-60 b(termin)716 b(1)p 0
TeXcolorgray -741 7929 a Fn(5.)p 0 TeXcolorgray 651 w(Eine)355
b(T)-108 b(eilmenge)355 b(der)f(L\366sungsmenge)h(einer)g(linearen)f
(Gleic)-36 b(h)g(ung)354 b(wird)h(durc)-36 b(h)354 b(die)g(nac)-36
b(h-)921 9921 y(stehende)510 b(Abbildung)h(dargestellt.)h(Die)h(durc)
-36 b(h)510 b(die)h(Gleic)-36 b(h)g(ung)511 b(b)36 b(esc)-36
b(hrieb)36 b(ene)510 b(Gerade)921 11913 y Fm(g)583 b
Fn(v)-36 b(erl\344uft)536 b(durc)-36 b(h)535 b(die)g(Punkte)g
Fm(P)18457 12112 y Ff(1)19519 11913 y Fn(und)f Fm(P)23060
12112 y Ff(2)23587 11913 y Fn(,)i(deren)e(K)-36 b(o)36
b(ordinaten)536 b(jew)-36 b(eils)537 b(ganzzahlig)921
13905 y(sind.)p 0 TeXcolorgray 0 TeXcolorgray 9915 37368
a
 currentpoint currentpoint translate 0.87068 0.87068 scale neg exch
neg exch translate
 9915 37368 a 9915 37368 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 279.99832 a add def
/d 0.0 a add neg def /h 221.61801 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 9915 37368 a 17427 33368
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -28.45274 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 212.13652 0.0 -67.8618 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -56.90549 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 185.48335 0.0 -36.13466   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 212.13652  0 -67.8618  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -67.8618
 212.13652  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-36.13466  def /maxTickline 185.48335  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 185.48335
0.0 -36.13466   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 212.13652
0.0 -67.8618 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 185.48335  0 -36.13466  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -36.13466
 185.48335  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-67.8618  def /maxTickline 212.13652  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 185.48335
0.0 -36.13466   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 212.13652
0.0 -67.8618 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 16182 30503 a Ff(1)16182 27354
y(2)16182 24204 y(3)16182 21055 y(4)16182 17905 y(5)16182
14755 y(6)15450 36757 y Fe(\000)p Ff(1)20342 34713 y(1)2679
b(2)h(3)g(4)f(5)h(6)f(7)-26032 b Fe(\000)p Ff(1)-4352
b Fe(\000)p Ff(2)17427 33368 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 17427 33368 a 17427 33368
a
tx@Dict begin  { 212.13652 185.48335 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 17427 33368 a 17427 33368 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 17427 33368 a 17084 33654
a Fn(x)17427 33368 y
tx@Dict begin  PutEnd  end
 17427 33368 a 17427 33368 a
tx@Dict begin  PutEnd  end
 17427
33368 a 17427 33368 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 17427 33368 a 17427 33368 a
tx@Dict begin  { 0.0 0.0 pop 212.13652 185.48335 exch pop } PutCoor
PutBegin  end
 17427
33368 a 17427 33368 a
tx@Dict begin  { 5.0 6.2015 5.16667 2.33331 -40.  Uput UUput } PutCoor
PutBegin  end
 17427 33368 a 17084 33525 a Fn(y)17427
33368 y
tx@Dict begin  PutEnd  end
 17427 33368 a 17427 33368 a
tx@Dict begin  PutEnd  end
 17427 33368 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -2.3850686959188705 def /x1 7.4557535471398175
def /dx x1 x sub 199 div def /F@pstplot (-0.5*x+3.0)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  199 1 sub { /x x dx add def xy  dup
1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto
} { L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not {
/x x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 1.2 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 17427 33368 a
tx@Dict begin  { -53.69186 120.86858 } PutCoor PutBegin  end
 17427 33368 a
-172 x Fd(g)17427 33368 y
tx@Dict begin  PutEnd  end
 17427 33368 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 0.0 85.35823 
 false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 17427 33368 a
tx@Dict begin  { 2.42126 88.56097 } PutCoor PutBegin  end
 17427 33368 a
0.25 TeXcolorgray -123 x Fd(P)18024 33368 y Fc(1)p 0
TeXcolorgray 17427 33368 a
tx@Dict begin  PutEnd  end
 17427 33368 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 170.71646 0.0
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 17427 33368 a
tx@Dict begin  { 171.89388 6.37512 } PutCoor PutBegin  end
 17427 33368 a
0.25 TeXcolorgray -123 x Fd(P)18024 33368 y Fc(2)p 0
TeXcolorgray 17427 33368 a
tx@Dict begin  PutEnd  end
 17427 33368 a 40910 37368
a
currentpoint initclip moveto
 40910 37368 a 9915 37368 a
 currentpoint currentpoint translate 1 0.87068 div 1 0.87068 div scale
neg exch neg exch translate
 9915 37368 a 921 43344 a
Fn(Die)431 b(lineare)h(Gleic)-36 b(h)g(ung)429 b(und)h(eine)h(zw)-36
b(eite)431 b(Gleic)-36 b(h)g(ung)430 b(bilden)g(ein)h(lineares)g(Gleic)
-36 b(h)g(ungs-)921 45336 y(system.)921 47881 y(Erg\344nze)358
b(die)h(T)-108 b(extl\374c)-36 b(k)g(en)358 b(im)g(folgenden)h(Satz)f
(durc)-36 b(h)357 b(Ankreuzen)g(der)h(jew)-36 b(eils)360
b(ric)-36 b(h)g(tigen)921 49873 y(Satzteile)434 b(so,)g(dass)g(eine)f
(mathematisc)-36 b(h)434 b(k)-36 b(orrekte)434 b(A)-36
b(ussage)434 b(en)-36 b(tsteh)g(t!)921 53364 y(Hat)525
b(die)h(zw)-36 b(eite)526 b(lineare)f(Gleic)-36 b(h)g(ung)525
b(die)g(F)-108 b(orm)p 26158 53364 3150 45 v 29779 53316
a(1)29308 53364 y Fb(\015)p 30902 53364 V 3675 w Fn(,)525
b(so)p 37369 53364 V 40990 53316 a(2)40518 53364 y Fb(\015)p
42112 53364 V 3675 w Fn(.)p 0 TeXcolorgray 0 TeXcolorgray
10871 56728 10289 45 v 10871 59812 45 3085 v 15690 58509
a(1)15218 58557 y Fb(\015)p 21115 59812 V 10871 59856
10289 45 v 10871 63116 45 3260 v 11579 61912 a Fl(2)p
Fm(x)296 b Fl(+)f Fm(y)417 b Fl(=)368 b(1)p 18750 63116
V 19459 61818 a Fg(2)p 21115 63116 V 10871 63160 10289
45 v 10871 66419 45 3260 v 11579 65216 a Fm(x)296 b Fl(+)e(2)p
Fm(y)418 b Fl(=)368 b(8)p 18750 66419 V 1 0 0 TeXcolorrgb
19459 65121 a Fg(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 21115 66419 V 10871 66463 10289 45 v 10871
69722 45 3260 v 11579 68519 a Fm(y)417 b Fl(=)369 b(5)p
18750 69722 V 19459 68425 a Fg(2)p 21115 69722 V 10871
69767 10289 45 v 0 TeXcolorgray 0 TeXcolorgray 25658
56838 18453 45 v 25658 59923 45 3085 v 34559 58620 a
Fn(2)34087 58668 y Fb(\015)p 44066 59923 V 25658 59967
18453 45 v 25658 65022 45 5056 v 26366 61827 a Fn(hat)433
b(das)h(Gleic)-36 b(h)g(ungssystem)26366 63819 y(unendlic)g(h)432
b(viele)j(L\366sungen)p 41701 65022 V 42409 62827 a Fg(2)p
44066 65022 V 25658 65066 18453 45 v 25658 72187 45 7121
v 26366 66926 a Fn(ist)523 b(die)g(L\366sungsmenge)26366
68918 y(des)433 b(Gleic)-36 b(h)g(ungssystem)26366 70910
y Fm(L)369 b Fl(=)g Fk(f)p Fl(\()p Fk(\000)p Fl(2)p Fk(j)p
Fl(4\))p Fk(g)p 41701 72187 V 42409 68959 a Fg(2)p 44066
72187 V 25658 72231 18453 45 v 25658 77286 45 5056 v
26366 74091 a Fn(hat)433 b(das)h(Gleic)-36 b(h)g(ungssystem)26366
76083 y(k)g(eine)434 b(L\366sung)p 41701 77286 V 1 0 0
TeXcolorrgb 42409 75091 a Fg(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 44066 77286 V 25658 77331
18453 45 v 47992 7929 a Fi(___/1)p 1 0 0 TeXcolorrgb
47990 9921 a Fh(A)-31 b(G)369 b(2.5)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 24746
81281 a Fn(4)p 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 54804 45 v -2331 6921 a Fo(A)-60
b(G)674 b(2.5)g(-)f(6)h(Gleic)-60 b(h)g(ungssystem)672
b(-)i(O)-60 b(A)674 b(-)g(Matura)f(2014/15)g(-)h(Ne-)-2331
9944 y(b)60 b(en)-60 b(termin)716 b(2)p 0 TeXcolorgray
-741 13251 a Fn(6.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)491
b(ist)h(ein)g(Gleic)-36 b(h)g(ungssystem)491 b(aus)h(zw)-36
b(ei)492 b(linearen)g(Gleic)-36 b(h)g(ungen)491 b(in)h(den)f(V)-108
b(aria-)921 15243 y(blen)433 b Fm(x;)221 b(y)418 b Fk(2)368
b Fj(R)p Fn(.)16544 18883 y Fl(2)p Fm(x)295 b Fl(+)g(3)p
Fm(y)417 b Fl(=)369 b(7)16641 21207 y(3)p Fm(x)296 b
Fl(+)f Fm(by)416 b Fl(=)369 b Fm(c)433 b Fn(mit)h Fm(b;)221
b(c)370 b Fk(2)e Fj(R)921 24848 y Fn(Ermittle)471 b(diejenigen)h(W)-108
b(erte)471 b(f\374r)g Fm(b)g Fn(und)g Fm(c)p Fn(,)g(f\374r)g(die)g(das)
h(Gleic)-36 b(h)g(ungssystem)471 b(unendlic)-36 b(h)887
26840 y(viele)435 b(L\366sungen)e(hat!)921 31377 y Fm(b)369
b Fl(=)p 1 0 0 TeXcolorrgb 433 w(4)p Fm(;)p Fl(5)p 0 0 0
TeXcolorrgb 921 35914 a Fm(c)g Fl(=)p 1 0 0 TeXcolorrgb
433 w(10)p Fm(;)p Fl(5)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
13251 a Fi(___/1)p 1 0 0 TeXcolorrgb 47990 15243 a Fh(A)-31
b(G)369 b(2.5)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 39648 V 0 TeXcolorgray 24746 81281
a Fn(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fo(A)-60 b(G)674 b(2.5)g(-)f(7)h(Gleic)-60
b(h)g(ungssystem)672 b(-)i(O)-60 b(A)674 b(-)g(Matura)f(2015/16)g(-)h
(Ne-)-2331 4622 y(b)60 b(en)-60 b(termin)716 b(1)p 0
TeXcolorgray -741 7929 a Fn(7.)p 0 TeXcolorgray 651 w(Gegeb)36
b(en)491 b(ist)h(ein)g(Gleic)-36 b(h)g(ungssystem)491
b(aus)h(zw)-36 b(ei)492 b(linearen)g(Gleic)-36 b(h)g(ungen)491
b(in)h(den)f(V)-108 b(aria-)921 9921 y(blen)433 b Fm(x;)221
b(y)418 b Fk(2)368 b Fj(R)p Fn(:)14211 16107 y Fm(I)473
b Fl(:)1670 b Fm(x)296 b Fl(+)f(4)g Fk(\001)g Fm(y)417
b Fl(=)369 b Fk(\000)p Fl(8)13192 18431 y Fm(I)104 b(I)473
b Fl(:)369 b Fm(a)295 b Fk(\001)g Fm(x)h Fl(+)f(6)g Fk(\001)g
Fm(y)417 b Fl(=)369 b Fm(c)2601 b Fn(mit)433 b Fm(a;)221
b(c)370 b Fk(2)e Fj(R)921 24949 y Fn(Ermittle)459 b(diejenigen)h(W)-108
b(erte)460 b(f\374r)f Fm(a)g Fn(und)g Fm(c)p Fn(,)g(f\374r)h(die)f(das)
h(Gleic)-36 b(h)g(ungssystem)459 b(unendlic)-36 b(h)887
26940 y(viele)435 b(L\366sungen)e(hat.)921 31478 y Fm(a)369
b Fl(=)p 1 0 0 TeXcolorrgb 433 w(1)p Fm(;)p Fl(5)p 0 0 0
TeXcolorrgb 921 36015 a Fm(c)g Fl(=)p 1 0 0 TeXcolorrgb
433 w Fk(\000)p Fl(12)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
7929 a Fi(___/1)p 1 0 0 TeXcolorrgb 47990 9921 a Fh(A)-31
b(G)369 b(2.5)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 39601 54804 45 v 0 TeXcolorgray 24746
81281 a Fn(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fo(A)-60 b(G)1107 b(2.5)f(-)g(8)h
(Zusammensetzung)d(einer)i(Sc)-60 b(h)g(ulklasse)1104
b(-)j(MC)g(-)-2331 4515 y(Puehringer)p 0 TeXcolorgray
-741 7823 a Fn(8.)p 0 TeXcolorgray 651 w(In)568 b(einer)f(Sc)-36
b(h)g(ulklasse)568 b(sind)g Fm(m)f Fn(M\344dc)-36 b(hen)567
b(und)g Fm(b)h Fn(Bursc)-36 b(hen.)568 b(Es)g(gilt)g(folgendes)h(Glei-)
921 9815 y(c)-36 b(h)g(ungssystem)433 b(mit)h Fm(c)368
b Fk(2)h Fj(N)p Fn(:)22130 13455 y Fl(2)p Fm(b)g Fl(=)g
Fm(m)20597 15779 y(m)295 b Fk(\000)g Fm(c)369 b Fl(=)f
Fm(b)921 21411 y Fn(Kreuze)433 b(die)h Fa(b)42 b(eiden)437
b Fn(zutre\033enden)432 b(A)-36 b(ussagen)433 b(an!)p
5423 24112 35539 45 v 5423 27175 45 3064 v 6131 25972
a(In)g(der)g(Klasse)i(sind)e(insgesam)-36 b(t)434 b Fm(c)f
Fn(Kinder.)p 38552 27175 V 40917 27175 V 5423 27219 35539
45 v 5423 30282 45 3064 v 6131 29079 a(In)g(der)g(Klasse)i(sind)e(um)g
Fm(c)h Fn(M\344dc)-36 b(hen)432 b(w)-36 b(eniger)434
b(als)g(Bursc)-36 b(hen.)p 38552 30282 V 40917 30282
V 5423 30326 35539 45 v 5423 33131 45 2805 v 6131 32186
a(In)433 b(der)g(Klasse)i(sind)e(mehr)g(M\344dc)-36 b(hen)433
b(als)h(Bursc)-36 b(hen.)p 38552 33131 V 1 0 0 TeXcolorrgb
39260 32061 a Fg(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 40917 33131 V 5423 33176 35539 45 v 5423
36239 45 3064 v 6131 35035 a Fn(Die)434 b(Anzahl)g(der)f(M\344dc)-36
b(hen)432 b(ist)i(sic)-36 b(her)433 b(ungerade.)p 38552
36239 V 40917 36239 V 5423 36283 35539 45 v 5423 39346
45 3064 v 6131 38143 a(Die)h(Anzahl)g(der)f(M\344dc)-36
b(hen)432 b(ist)i(sic)-36 b(her)433 b(gerade.)p 38552
39346 V 1 0 0 TeXcolorrgb 39260 38147 a Fg(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 40917 39346
V 5423 39390 35539 45 v 47992 7823 a Fi(___/1)p 1 0 0
TeXcolorrgb 47990 9815 a Fh(A)-31 b(G)369 b(2.5)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 43418
54804 45 v 0 TeXcolorgray 24746 81281 a Fn(7)p 0 TeXcolorgray
eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fo(A)-60 b(G)718 b(2.5)f(-)h(9)f(Pro)60
b(jekt)-60 b(w)g(o)60 b(c)-60 b(he)717 b(-)g(MC)h(-)g(Matura)f(NT)g(1)g
(16/17)p 0 TeXcolorgray -741 4907 a Fn(9.)p 0 TeXcolorgray
651 w(An)387 b(einer)g(Pro)36 b(jekt)-36 b(w)g(o)36 b(c)-36
b(he)388 b(nehmen)e(insgesam)-36 b(t)387 b(25)h(Sc)-36
b(h)g(\374ler/innen)386 b(teil.)i(Die)g(Anzahl)f(der)921
6899 y(M\344dc)-36 b(hen)464 b(wird)g(mit)h Fm(x)g Fn(b)36
b(ezeic)-36 b(hnet,)464 b(die)h(Anzahl)g(der)f(Bursc)-36
b(hen)463 b(mit)i Fm(y)48 b Fn(.)465 b(Die)g(M\344dc)-36
b(hen)874 8891 y(w)g(erden)407 b(in)h(3-Bett-Zimmern)e(un)-36
b(tergebrac)g(h)g(t,)406 b(die)i(Bursc)-36 b(hen)406
b(in)h(4-Bett-Zimmern,)g(ins-)921 10882 y(gesam)-36 b(t)333
b(stehen)f(7)g(Zimmer)h(zur)f(V)-108 b(erf\374gung.)333
b(Die)g(Betten)f(alle)h(7)g(Zimmer)g(w)-36 b(erden)331
b(b)36 b(elegt,)921 12874 y(es)434 b(bleib)36 b(en)433
b(k)-36 b(eine)434 b(leeren)f(Betten)g(\374brig.)921
15420 y(Mithilfe)384 b(eines)g(Gleic)-36 b(h)g(ungssystems)383
b(aus)h(zw)-36 b(ei)384 b(der)f(nac)-36 b(hstehenden)382
b(Gleic)-36 b(h)g(ungen)382 b(kann)921 17412 y(die)332
b(Anzahl)g(der)g(M\344dc)-36 b(hen)332 b(und)f(die)h(Anzahl)g(der)g
(Bursc)-36 b(hen)331 b(b)36 b(erec)-36 b(hnet)331 b(w)-36
b(erden.)333 b(Kreuze)921 19404 y(die)433 b(b)36 b(eiden)433
b(zutre\033enden)f(Gleic)-36 b(h)g(ungen)432 b(an!)p
16980 20370 12425 45 v 16980 23355 45 2985 v 17688 22152
a Fm(x)295 b Fl(+)g Fm(y)417 b Fl(=)369 b(7)p 26995 23355
V 29360 23355 V 16980 23399 12425 45 v 16980 26384 45
2985 v 17688 25181 a Fm(x)295 b Fl(+)g Fm(y)417 b Fl(=)369
b(25)p 26995 26384 V 1 0 0 TeXcolorrgb 27703 25224 a
Fg(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
29360 26384 V 16980 26428 12425 45 v 16980 29413 45 2985
v 17688 28209 a Fl(3)296 b Fk(\001)f Fm(x)g Fl(+)g(4)g
Fk(\001)h Fm(y)416 b Fl(=)369 b(7)p 26995 29413 V 29360
29413 V 16980 29457 12425 45 v 16980 32757 45 3300 v
17821 30831 a Fd(x)p 17821 31044 530 45 v 17851 31812
a Ff(3)18779 31354 y Fl(+)20218 30783 y Fd(y)p 20218
31044 497 45 v 20231 31812 a Ff(4)21217 31354 y Fl(=)g(7)p
26995 32757 45 3300 v 1 0 0 TeXcolorrgb 27703 31439 a
Fg(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
29360 32757 V 16980 32801 12425 45 v 16980 36101 45 3300
v 17821 34175 a Fd(x)p 17821 34388 530 45 v 17851 35156
a Ff(3)18779 34698 y Fl(+)20218 34127 y Fd(y)p 20218
34388 497 45 v 20231 35156 a Ff(4)21217 34698 y Fl(=)g(25)p
26995 36101 45 3300 v 29360 36101 V 16980 36145 12425
45 v 47992 4907 a Fi(___/1)p 1 0 0 TeXcolorrgb 47990
6899 a Fh(A)-31 b(G)369 b(2.5)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 40173 54804 45 v 0 TeXcolorgray
24746 81281 a Fn(8)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
