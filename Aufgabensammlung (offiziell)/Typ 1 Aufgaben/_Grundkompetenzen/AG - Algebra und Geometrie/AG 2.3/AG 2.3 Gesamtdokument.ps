%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 2.3/AG 2.3 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:24:16 2017
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMMathSymbols10-Regular LMRoman8-Regular LMMathItalic8-Regular
%%+ LMRoman10-Regular MSBM10 wasy10 LMRoman6-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 2.3/AG 2.3 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0823
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651C31C7E8B693D1749B15C418E45E80E48284
2B429B1AFB33D68B4D63B8AE33380F0FA4A426F4A8E0F7466729AAF35F157381
6C9D25F988B9FAE475C9BC21222AD7E0721D9B289F29BF3D41D92425E94C50FB
3D4BAA7574FBB32CA8ABAF8D9AF332256FCB3EA78A9EB74B4B091BB5B674B009
7587802F6C66C3BC6E9DF45A22A24877E4A44991BBD0B8ACA80F6E7A468EFFDD
A0F44FB32709CC57D353A47EE953FE22B755CA1B83024E916430F66BCC9C0013
59DF6DF52D943BC285B007D1135D873B6709CF1783C386AC2358F315677479DB
92989DF17B1C7CE7AF4D7985886E4D9610EDCFDFC77C8DBC0F35778E3BB1B1ED
E4A453F3188709A85504074B869A7D9CCB045E0AAAC45C73496026CFC1B35259
5ED325A37D4D89E34BD8A09FC863DBD2D14764D82C2AD229D1219D78BE4FEC35
74D5AE3388DDE9AE21AFE51F5205CF54722827FBC24AEF08F6DD0BC6A79A2DB1
FF55716866C7406275A3206C0B981EB6DC945854759B8A4E469825F31A982083
0FB63D5BB4E8414211B972FEDAA71766C9B0D3440CE049E4FD8F1183360FA328
5D8CD3D8330D96CD8F687E8947B12E123AC89F962A9530DE5AEA07A6EC2C6585
47487FC2B6844308370AEDF60F40B1065F435BE8A39EB454D88F5BC45BA818E0
576B43654C207F12B1FE9D0800C9DA440F8F4DF34BCF34F43878F7D76E5B0744
A7C12C1F974E42BCB15BE6E4B11B1B3C178225B2108D94089E6544907FDC1CD4
24D2D1E8ED86030B6F0F045A27CDFAEFA66D2E563E091E4820C12FE47E315478
9E02FE363C3191393B266A453C68C647CE8EA12552AB0F918E093F58668BE6A0
988C56A71701327F3123ED0ECDF2560422F393437B17993C173D78CA380FA824
540B79150E4DAECEBD1A67CC197C6775A117B7B607BEAA7CF9812FD8C2C90C93
B34EE07C1F1B354CC7B6A68856A2E0FEA9E06345800DD13C04021FC924C88B19
890571C60826E10376A9CE8E4B6C4211CBFCF9709AA29144F3A402FF8311E955
631DB6480CE2CCADE0F132943AEE55FAE4610C564183F2641C90D3BC9C9C2047
3D6FAEBE70E9DB326C4323F499565020467A2F2E305D6C518ACB1F8602BEEAEE
EB033229E3646B97042C0403FA6A577BBCBEBA936014055D10434972C003AF6B
F7798E9858286E4979DACD3F5A953BD9E918D5E46449525A4B02E0FF1D61A339
2B13C2BAA4F2EBC705FD27CD6D2025DA9E2137BBB050747E7D512F9C67296CB7
35C413373B421BB8AF0E7365683A159EAC40D59B99666C590B9C40B2123936DB
F7D6E0C043CD6D918C8C67320A7A144E5291FA4017E674E4E3F6B8002890F8CC
8043EBAE66593FE6A8B43430B87B8469A3FE856445ACA7820214079A40712874
93CF60835B57D688D8741902B245E6D36223AB972791081FE59397EF9D69415C
6C250EFDA6808BB06DC14D79B44B1D65CF8C2EB97FD192DC5543674EA5327A63
F01ED14BB1ED9A0BAF084C7AA806BE5556CA1B25F2298D1B77928B2565A93B23
689A9246F1420227229158747B235AF81D9C07C40D09E4BD687C783B27501C60
3CD989F14A2A0A56807349E490FA6577D5C87A08B6F333E1C2EEABC20A07088B
CD029984DEC1EE34F30E77F7C3174AEAA273A07A8F9639778A72914EB3707E9E
24D51CCB52F85814F0E7B70E525A10C58FE7994621A9801A93F1D2EA5B39AC70
CABD8E491D8F710C5F31260C5AD761E6DF3CFBCEB55C1CFB942952C5F2D227B7
A94085C657D1C6E4AC560C188EAADF0DF449FB9D09F917E5CA703C7E944A2193
6F13388CE0AC08ADC3134D1F38F37B0253074A1AF90C7A388469A4AFE99F2BE5
CCE86EF8B6EFE3C0D55955EBF49DAC8DDF427DD8BCEDFD5D15F53B6627729B60
3B6CCEC05220CD184DF3A8F645825C9F5C0ACFA0EDDF6A0122789BF66501B146
80A3B9650D68D467E0DF4748B39BBE76D32933BFB3185C3972FFB69050956E25
AC33EA5F2DB7978E8581B39E56E5A0F9FF6C603FA96532FA00F88FCC7A95AB5E
44EB877C6E9B75042A9C413C838DBAE11B315A3B6B5FC1351BECE9D1CF451FFD
EF67FA97D58086B1BB39BB1AF6C0BC2386BB3061C215420F75A9D089C7BCDEC5
0559B82CA1E9E633BD1AACE6F06A397B5D75289ED307C730A1DD3B5B7F23CD96
597C5D225B4C7A3FD940B5B7DAD66F4CFF5899A0884293BDEB690DC928A68EFF
BD0C108505F7C6D5F9A8BB59A813C66373E8E10B6C92AD0119E10939525FA2CD
9E35988FD5B8584B58D2A96BA21E71A915FB663A04001D43A504ABC776456B69
DDCC93254749D04EBC0F1106F62A30D3F714A33E4F65F6B6CE70F9F9E8115952
0DC45679D35E06C8A1C712F41EB5FFFC86409023DA0394E3CCA13502D03B122C
2166F38A261A3524EA3A004092AFBD59A17235FED8A6C0BBC9925B98CC9178F1
C644D40CE07A4E70B37A678F66822BEDDEAA3E177C5141A9845302F716DECFF9
1A64657D64B43EAF4ACBAC482D06AFD458F0DC3F4896CB93D7D9640B9469F723
C84543BEE989037E08E004B46EBFD5E6625286B9FAAFADFF8458994798F6A07D
58935BE5A9105C3164B47223A893DC58A24D65FB154BC4409B9A97CCAB9DA5C7
6148888F30AE04C7E2CD9F6CEA624002296A1EFE646E370390407746B9D96181
11EA22AA11A489B87A3C6A208E9CB0B30F7ACDF0B926969D1F898B5F9A7DE36F
F3A32F6B29B0EB5364E310DE9062984F6951B5AA2EBC9853650192211C56DFA3
0ECD347E1717AA5D4CB03B26C4A34300BFE6DB438E60940A1A7B10FF68354C04
3DFE6F770C56475E713DCF6434AE97F67BDD87E81163E68BDD4B8FEE35C725E9
A9EE151663032EE1B2834670BC9A18AEE36074AAC9214825540B01B34472A56C
5AB4179BA79BFEF0DA75C9221E3F45BC7A8F8AF3361EE4B989D3AF06335785DF
8F0B1D342FA414E3499C15F3C1C75BFD2390BC9B72C3D7C59B116F163295C36B
FA0E83CCB23BD376578942C226789972FCD53625BABFE9264F5EEDD2992597BE
968B5B231DBC59328B0F92E1CC7C2EE68241C590B09ECBD676D2E3EB556E9B5A
0507CA54A84D3343C409A009674D3973F49E02479CFCBCC6F3F444867A98605E
DCF4CDE45EFB46A7FBFCAE9A895D47D5DDFDC73D350147C2A6074B263DFB6FE5
8624564DABAC8AED352C574D062226B47B9CB5B4647CAD084A51EDF2A7B5D44D
FBC57F1B0A7E8F6FB6C483282DE613E28E0AB1E5B62028A52F9B53B3FA27F000
DD189ECC42864A1D5AA1AF966FDA5D5AF706F0A30AB0EF438151C7D39682CE21
0D8FAC8DBFABB91D54CC819680322EAB72E1250A760DB5FC904651FE75CB3AE3
44D9DDD6D66B643350BBF6D1653A9614781EB7E8CA56445DFAF3B11CEB70BC12
15DD9D1109CB4D90B6068A5235A94489F21B514032F3FBAC42EDC07887EB8455
6F43AEDEA439FBF139A16A55342EE8A56971A05AF4F329B3BF197F1CE08A4D86
35BC8BADD2AF776E11669B81EAA99EF9150B8D39695D096825DF2E102C6CC2FC
BD09F82ECF0716F5378A8C51C139D72BA8445DEA9CE0C63338837ABF0EFB575E
E2A90BF14437E63C54B529297E4E8AEB9E349683FC5E1C323236F7177878D14C
F0881BBD1006BC9B62A95FE764579DE0CC5B4CFAEBFCC4E3F3D8112A7E8FF270
331D2FB475491A51AAEF10C504360FCB236B33EA5BA6233B2973A1A4A64CB156
1CCCE5676F5FEC5AD00CF74808248E7CA6304838B953DC7DB84DEB6DA73092F2
1F04F718009DBA58BF46AAD3CD7C9BE6B7C56C9816AD1985FB7624F5E48CF6C0
C7E019E37CF0B527D14F008E134FA0711FE40BC8A926EF8BB980B95A2F77EC3E
049D527B3C51560442A175D5D8758E82FBFF5F294B5D0D796A90FB81A5A18E98
E97BE601EA4F039C49B39B0B7A38F24A31CF2BBE8A4A77DA9ABDE0A3E10B009E
48968EC723C6DECDFDE76C4A7E76FBC1463CE5C32B054A731210DF35A32EB4B6
13956531D3652BAB2409BEA0B2194F8237AB16453B9349050643D5B98B056F47
97583A5F1CC5DB3DFA665A46AD11556A9DE4D19C3D69EC4B6AC687A6FFB98191
9CAAA657A12F1BB1A7B638AD6B9A54234FE345E1F0CE798DC546A5079757062C
0D09191F8E0EEA8B2AAB1BB852FF9A88ACE76802717FB43013DA06FF41184DEF
3526C06FD5BAB6F19684B7B126D8255F1A0F1BD08158F94077D191F62DD4AF06
B5E6243B2801FE685033C7E1D82DD51B28CDD8CCEEDF97BC4AF5366221DF88F3
A15D9619D717EBCD44473B8C0B519F7B53237A6BF0906A6DFF38E77DCACD3AC5
7B34E7FE4B7CB450A9C45FCC1397C6B0A86284D5B1047CE4A5267D952A379B66
0FE3A9671DD13E01433F2F6C208E32496F7EA8624C034C349973AC1227D16964
F9AB8BFD27680D2ACC6987BE974B04232D56DDA60AD2549A0BA63F83FAC01F1A
052E23200E94DCDA8807FC3021A6D2E4C13E06F1086EA20848A8E5E5D3DFB242
4B7CC458238CAB79438F28BD4D270F57A959F26997929BD1F884756B97919179
FCDE51DAEA400AAF8982DD653B0A7794729014DE0E4409134DC478749FF92F08
63167264EFAFFBE1F3DA733618F0317DB8FEA73BA241AD8A569A91A52E003357
85DF8F0B1D342FA414E3499C15F3C1C75BF59D0F150CECE0D45E10BD736B633C
8ABF3817168828BA1ADDB86B39E7C589EF576D93988FC7CBCE8F8EEAD343E055
6CB04C7CABC1D37D26ECC85EC180EB8EED1A6E86C7054A06B962B7E28A73BE0B
2713DFD32DEABA293EEC35CA74E8F4E4BDF74C53268E1A7ECA73776BA42DACC6
FAF2215872715967549F665E4D31FA89D07F9F7B71A981F6F30B8AAC02EFBF02
3FB3ACB3EB8D30CE573EBB102DC6774E0673364D2F5F08BD9F392CA41047466A
036F13A73B9E9748CBE052AC7C80C0A7253DA38F8096C24E1B46EEC4A0102A61
086064FB56D54FC54129B7DF0DBAD470D9C53731DDDBFA0A0B019593BF22319C
02486B37F961B03210F3BF96D6BF08F38611A67040608203A5C3D09D6059AE84
C186BA3DDF8A3D03A6269D7BB2137246B7C44A4D5DDD215780BA71E493103B56
3BFF48BE11CF626EDEE4BD2E4A16523198B2E05EC8749D3D46AA1886DE2A843D
955A35B70900EAD57E09228E923A91B2F77E5DB154631BD38C0D833343743003
D9EBF5AF03297DD2D683CF58D8BBDA154BFC9348A604AD1CD1644512270E45BB
ECF09337AC26BBB0E45CAEC8BE479279364FB843554834A226B66760F4607752
DF8677C0397AF9D0BAFA292F4D4F92B73D7AE87B13F108F2C4611CD948F30F50
8E6A5E75668ED3E9929056DCE30D42439FD75C1D03151D5FE0EEFDC575B41DE4
0FC8E52F0331B58CD9A51ECAF5ACC9F1CDC63772C2FA28877F526F1F3D0ABD28
289F98A3ED752F5393470DD641BB173B202FB9C5CFBABEDB73CE2FD3EC6A3ECE
8816AA5C60500DA5759D88CA15505F73ACA804CD809616BE4342A5047C07E768
89E53BC8BFCAF67124B5CF48327FBA645C9485D04E301A710BFCEE5BE0EEFDC5
75B41DE40FC8E52F0331B58CD9A51ECAFA907A695410551EA8F0912E1D19CE24
488F510E909A96C87572C1D4B56E2EB23BBF72415D00225EAF9E7326259D3C28
E90BB62A03F77E45BE54A5F49E7C5BFEBE1C71A3B572BBED5F359EC5BC402442
BBA33B2663D564461D57DFAC85CB745676F87833CC5803627C6DD6BE703FCEFB
D941EF5C3B1C10287CB787EFF59E86B4A72A199C8226F1477A18C5FA931ACAE3
1CE6B70C0C19FF70E8B577759A7C8CB34B040C29B9DF8963000217458FABB580
220574A252291322ACF12EE7FE8A738607329268F442A400BDDBE793C16F9C0C
FA569344FE06F0B093B14CDA8AB813F95EEF8F1D23575A3C84CD3760AAE7D688
5413557D3BA5484CC6C201DF87F0F105C79882D616159780F65C4243F63B1C17
67A866F1F9B4B27B64CB3D4410848E03E71CFD33CB08A071A6A7923A63E3B2BE
941FAD5DA8002F633C08A3EBDF22FEFA476B92D1B071F54300226864F320A5D2
8216384F61DB0CD008AB7A26A46FF9C8241F9F8FC68B9043740852B4CCBDD37B
F728E5648212726C12C5F614AAEE0D8590A3A26854ED51C4A9A1C13A034DC924
6699909AC060DCC4606454904FB9E7BC9FCBFE9F1D1880A7048295A277AD1D40
22BBBEA0A9483EE8EFD959ABF1FAA17C5B39F4A20A3DEC19163D7C748C451741
B5D481AAA4E0464F52F36DC07ABAD3F725A77089EE2518409CB64E9E89BF1483
8CC8E9BDA2CDF3424644937C761909AAF09F2E35801FD76EB4956C28D804A744
68E8A493F99CE2D3DFF0982549271B429927D4775BEB5F1B3CC2370D8619DB10
C162B96E490193208D7CE9CCFB889CC948BEF8AC77069D64A294FC4B927E16F3
C2229EB5B9918C0626FBF8C4B10DFE83AF257544C70A57A8021D8B6A1ED33D19
A1FBA979FF7BAB06B1AB21AC051521CCB9177819D9A8E4A57914BF755FF8BFA6
BF246BF26D4E85A7529ECEB3758E9DFD534CAC1AAF06A06E4D4B1A20E66F1035
4BDAECB0ADC7DC3FA7B24303B3C291BAB5A582CE3CB43CD00D5017219264F47E
5F287393BDE47B047F83B5AC7829017B484553D7C7E5685138A0638CE5D37C7F
601B0E36197BFA431548DC233902D54DA503AB022BDDE741CAD677367993F1B4
E7756DBC96D8A861F3882FEE876EC79521622318BB6960F7588E6392FC187987
36023DEDB0CC9AE428714DDD6619AF0785E90C2A0EF5CFF30014FE1DC8921C0E
A428E4809029FF9F7965597AB420EBB0B19C1AD3D1F5B8685D1874C7454D9ADC
7CBB39FD5C68F4C39DBEC8BEEDA86F09129C65CF38892DA4941732B8C31799B4
E67102E1628592D5D67BC817676C3705F05C752E2CD594D05B15173D5A85A7C5
8E01C97CEBC71B33F0B065EBCC731CB2F06F856541DAF4948EC2D4875DCB885E
AD2CAB2644F1E25DF5F6EF5B5ED29CA7F252DFC48E9DD4953A244E5AE73B98F8
203B2AE4F894FB61F519825659E854A83D4E6F02B610E5B65F18E4F6A88D839E
ADD20F9A893744085F176E43E1878F88D41A08D7FAF7B601661B2E2B92D08E15
1289F0E62B8EF8D94EB3FA60EED514882C79251115EB490BFB9C96586141E225
36AD74B6819A058C9DD483677E091DCE521F60B2C866CD45B80656513B6871E5
258B4F80702ADB029F18A4891A65E0AC01235E81F308949FA133943BAF0F1E43
430A8B4B4675E598639F1E9D877F10F7C8C0EC193A59A1BDFD83F4E6FB7C7698
19702617D08C10F4DC9F85CC1D7082661851B3D94D71719C73B320DC91F4F64A
EC6BB9A6B340F5BB512DC333468FB500D860BEFB0929944A4377E4668760649B
816EFE129661D5D17037A6CB3C58556EC8BFBADBAD045C00A6C3887E0A00795C
3712A58274F19CAB46BEE6168EAED2B0EC9606F6300D6B118D2C0F7796B3FF18
1058A150426089EC7071143F5177610D4C2683129C912ACDB47AECE3F9786E47
398891C3990700F3123E5BB8ACC107D8B722419A9C1F8EBE330D7A360FBCB654
0E7EB3B2ED0460F81AB38B9240BAE845D47A0BD6760B31870D69C4C15EEA09E1
831354F7C4A16212A067BDF0ED84C9A5735368A09CE46A5C17CCAC557BB69FD4
2494D5D2B9C1ED812F3CCEEC1BC079E837DCF4EB4E495547C25D2893E35E2443
5F55A2D66CE9FDEC1A5F81FA219E49C2F4D2C8EC80D9E187F9E15825F57826DD
B17A35CF2E4C380E50E1797F855826EAB926A051DDBBD93F907D31D6709284C8
6F0542486710BCF518C1B5D1E6CF23E0D97980F20EFD24A6644AA26EBAF342B3
6AEFAAAC0AB3727E59F1642789A1765F02944B8E689BF03404F5426F7148BB8F
A709AF1344271173529372AF6DA383511770EAC39ED55DADB32778CAE943CE6E
928C9521FE45A04F184800733B13440F514AF796BCDD85974E0AEC9A164C369C
237DD28FC4BE2843036E872B2A03163F0CAD1BCD5F7FBC20299D5C6FC1EDDFCE
777B796FAD72EEA5713D78F437DAE50160FAC28C1C21FCF83DE1B5516CB04C7C
ABC1D37D26ECC85EC180EB8EED1A6E85129293842B429B1AFB33D68BC88143F9
2B5D64DA3F8DBFB0D329C7450A21E4F97C8FF528ADC2F97F87C592935C07955C
1F1B0F125261DA0D2F7312CE5B3F3A1DF65DD60AA679945BCA6A71E4329DB73E
7F29098787D96D89D74796C6908AEFCAFC2C9DDFDD855116AFD66EA16F96AA4B
9F040771F86CE98994E113749F2047C28A0906100EF57663A483AA7375C850A3
1668037014979D53F051CBE5D246FC0CAC7850013FB3F1B075D4754A82A584DF
54EDC7C8DB59B77CB7A8592B7CFA7D097BB4BF8EECC6634A8112ED925C55E4B0
DF0E5BEE4B29E5DA8177D46930E3E90AEA7B324350D5926BF3AAB7CF462B8C46
CCC43F2AAB8ABEDEF76AD7F14CB416CC957E016A4C72A6A2FC3DA24AF084E754
4D8A76154942ACCED03A7785D88FEE716F2A7D77A990393CA5CBCA996BE2E518
6292AE634456B428623FD1E621555BBCA26C986ACA69714EE280FFCC692113CC
15C94DDD294049748B473FD5F4AE9C321F8D3A7609539BB1E313BACC161E4DFD
3BBD84E1216F1446F95F7E0B679C0D5FE02E0CF9AA45628844A54275C0E58946
55E7B06095437FEF27B81EB14663E3073EA68F60F1D5B1A01C9D57853580E6F1
80343DA29EB6D4908FC8959EC5474049A693CBEBA4E07CB9B5D8DE5E0B1C2257
A8DC4E816B78B9EE734118C991282B1240D3E464E928369FA93FB92613967677
4399E370879B537E40FD383EFEF02E3CF25222317FA36FFFFDC8DEB8DE95405E
C7DE4C780BB7B6AD8195784DE96BECF95B625F9BE81E96E51EC9602D4654DEB3
8E8E94225D8F864E791EA66CE3A7B80CCCA6788AEF25264822AB4D94FD51449F
12FDD58B76CFA594F3223C22C5045B028700C8710E6F425220C975AF0249835F
399A5539D63AF043C136465C5C6EDD6AC0425D8F374CC51FCB15600FF7A49A41
04BC29A0D7D3B555652AD4E14D4104669F132B4584E73C21F2C83078F5D96EDC
72B7B9B4BCC12F4209B1951AF23FF685C14584FF171362B3551FF7356C84CF0F
2434A53A3873E1326AEFC575FAEE1B5EC42CDDC027C7AAC514A42B45A1905906
63C03DB348ABE792DB5E7DB73311A007ACCC65F1BE0CBB445E9DC99DE3BF32B9
5CA40F19FE0EEEAD46783F79B52E24284B8FB0941BF71DE5A8C04AC209B2BC10
57E1B23131263F844B18EA91B95602F465D1AD4EB85656E66D39C6D94C1DFC73
2A196B89AF8000D828F0B96CD1B5C4C56944521E76439B5DCA7732A29F37A08A
140F8C0036E35125E11CFB8F1E397508BCB97A2A87578E15D147311B7C07C177
37878305488298DEF3FCFB79A08C1884C223247C65FA99AC139A69ACDE989B3F
D5A2D5C0A6D3663AFF2DE36A2249BFD2DF460161D3EA5C1B998A83F2F595DEA5
468CAAC2B78E5A1993F2B6373BD0E80C86A751E25B22ED67B8950124818EB258
558D55DEB25473A60B53D4B46DC4CE9B9FF1A7480F80EC4A178CF4CE94A7EEF8
762859353E43AF38D0D4E667A80166DE5FBCEE3580C618C1814F112E445F32C0
970817BC4050803AAE80CE06895EACC815D11C5043C96E89E9C036E84F31BECD
3B9F74A6B21D04D33D8D6867E328F1F84E503F30CC012322BF86C75D542DF2E2
EC862783E843F9628CD09328D96F2191AEB4D4ED70395961900B71104E33D18C
699CB21CBF1E702A43C212F7FDBB168337708E78CDE23E82878404BE7530ED3C
037A517E7F4D92C7AB7DB46166D3F9D51BF73E000254A8671C3523CAB620C1D5
6647B6CB1AF0CDE7B27ED2707252504B6C74D1B1215C450ECE4FF7677CEE2603
269D5F288AB410ACA8C41E7649B66330C265A5B7F41D915514AA0FAF252C2D47
0BE8E487B5C8A276C074A1F51A8FAEF46319AB90126937F49345B442931D89A2
D64E9CEFFBF0E3792A219D478D9159272C789B363F4B77BB6F513F2D1CF82BE3
64B0469874C6EB4C3D782F2BB7EFF536480AA43F0D960075B6036943E3EC779A
517C4D6040629FA35ECF5F72BC11EC5003D3A2FBEB95AA878584A8ABDF1E8CF7
8EBE55ABDB3BE9C60DC252CCFB36274DC69EF2D60CFF2873563D5F829FAAE46F
12CC16254F52A26FE47FE41504D3E851A0670AA04A36A3BD6DFED9BC3104B7D3
1460E3FA77DE5FE016DB36DE56AE7E663E81752C1539A5613325DCF159B32F71
199029B3C52A85E3A069D5265B78DF1E8A68FD35569FF3BD8484D4C450FD2CC5
3E9D5D933D8D348873F7A02DC5A4062A9DAC0FEC368B11CD07341EAB622A7559
CD4601AF33637D19547C8D92E24C1190A50E8DCED4C7B578B8FA81CC95598564
04124F851CDAC202F133D2A0021D5BA5ABB98A5D4359E63E7B5982A26F1ABC0F
7843685481E40BEEAE93DB98DE236DEF8BA32A536C00BA8999080930FB24143D
D7851B5539E97DAEBC0C57E6CAD2FA699ACC80B728B77A07EF96201F5BC9187B
8716270EB91BC97E629FD0ED9D4987C1C3F19BB1DF75F985EB18BCA8844B267B
7610A6D157EA3ADA7CF63EAE1CDEBED0C8CF6560508A7BD68F0D6896FA97C1DE
35DD2DC448E17A060D578CBBC23C7B47CFE6CFD6EBAE3E24A85D002445BF81B4
BB62B6863A4CFAE37F715EDF3EA5A33679FEB21AD1156AC74542B942B0A4F70B
64F7A89EB8D38652FB57A729387C6E48EFC3641A1DC59A816C933FF531910AFD
36D4E7369C37B8761341D2763A1FF764ED045DEC3F74111957D7B00FCF5F246C
5AFD97D7F7DAEBF8092DFD40519CD63CE8E38A742078EF5DF4BCEFC85437AD3B
3AED02EF14AE8BD323700B083E6FB9B54FF40B63FFE88BD7FA6074CD669B124A
8333FC4173EDC8861F00421BDA29947272ECDD4FCACAEF0B0D408990758FE706
25209BE1245C285B171DAA6BE705FF575048CC768BB8F138C00B63BA4E40BA8E
5C0A6D51ED6EBCD11B5068CACB821BE08A1B06587ED0BFCD31833B1EECAF947E
67DBA7060CF90D715B1B4C7A6B386466E51305470160FFA5A9FCD721692FB97A
0DD77737F84F944EE4F182641F051987B79A1615938B81AFA5C99B02AB37CB74
92A3032BC29ED513ABFE8E6F085C4FA6A856A3B0FAE27B20E1DF3B80BF4B5911
464BA2D6CD239CAA9B28146CC516ACD809E764C8DB3BD7F80C944959B74FFA0C
A674B3A52B5E428F6A5529408AEC4A8149338459F8BEE4E3EB8047907EE0174E
9379E76128411F6F62DA2124572295D7FDF91A1B0837AA7F80FED4EFD79B47D3
1ACAB7921E974E0F025141E0E37EFD447C37DB455D2F083DEA179DA4FBC32DCA
FF9A18635F0C806A7F79AB1668CB03AA08FB060A2ADB1D7FC295EACA3E7EA4F5
ED92E78990A082ADB3A32F0774CDB0A4428FFE3F0A1088EA71BD2DB74105301D
0957D57EE4D15D0E8C5B0F468202F91976A5D9C8BDB5514157F1C88F69F5F803
FC20B59D8A94F59777FF203C063C4273C41CC2B831FAC8B35A70EB34886F37C2
D18213DA6D79F0231FD18090D6EE761B5AD3510CB3E47EEF53A23BBC9033481E
0B0BF46B0980D70618A821BAD346F807B68B77266B06B756BACEB5FCD36A0F15
3536DAD78AFE7ADEC90B959AC3A19FA9D0303DAC5BE0058B7AC46EFC13F30FFE
A970858E80ADA63052023889668F4C3E84553C56AE4C8E2478A28257BE4461BF
0D5737FEF579DD93DFA22A948E88B3B323E0DD7E5B229A8753CEACC4610765D2
CBF708EDDB1B5DEA54A92603EF47888C851EEDE853AA9F0EF60D11E54B7BA047
1056B021C03FB2A2D2262AFC1467A7217C1C887F89586F84CE132D460067CEF7
4BB5AC6ED2CEDE02799D369A01933B7A77D835694536563232D2B7C11EF06056
690527A4EBD1F1355C3BD6CFC4FFB40C1CC5E799B3728AF8D6A742D6FB17DCAE
007D8E2C41A2EF916B6A2EAFB651D0E490A79CB8484AE4B453B00318B966EB78
912997CA884D714876239501D7F89D32735ABD099F2B35842AF2A6CFB7EFD6B5
7700B114375B3A18CC1B963DFC1D7F5B9FABC9B989941219026BE888DE73CD3E
463B692A4B59BA7A760DD7A81CDDA23CD0707F8B2CDBA530E9795CBE691C141A
143280C65FB2AE0253F1E002F576583BF8FF1FEE3ED0DB577DA27E45FA577E9D
4B958FC9C413E5FDF7E3F203BD2D3299DCFDAB3D314077FAFF599A6162779C3F
18AD0908F75EE8A4B38C1C582F30C6DF5FA2097A078ADFACAE547DA5926B3D5C
9A7A59226CBC34EC86D2CA91E32214DD857E80C33FB4286BC47DC77742A8C011
C9628BED9C7AD8647A15BA064C8DBC0B9A1993A9B392A4FB76D29C0565E07060
0C36FA9FEB325D9B4567CE2EFECCADDC8A013BEBF580573F64AF5AA364DDE757
9E59AB8F63B4E0D1C4D5047F251B4AE34CA73B1499B395127BF2453FB7F04A26
6A9662CD00305B894723028E0529C6B747E58310BBA39C615BD9DD02347E6B3A
AE64A949E5C87CCA39AE1F17BCA6C77E1A59B2C119DE916B29DE7054ED785232
C74B7B92C5138A7307297BF2B08A80874CF0D889281F4761B0DCFE61E56EDDE1
4DB1462E4F9859384B15882C6B0E2214137472F7DAB6811B1027FDA86CF66E03
2F1B0D4946100FCFC2BE23B43458474D510E94FCE182C53165413E1FC4EC239B
58976F94434C1FB78334D81374C359FC481521A3784357B8E3E7B676414CF22C
D112C8DD5A99D30F55D7EE28DF2F0F6174BED2CA19D075A462526DD5D645E764
B114853CA1BF1C54B28F3591C1B05ACF3D46952ED60024BBA20AFF928DAE4739
7075327EED7195DEE9EDE5DF536ECA77341301986811B7C76940F64EFF4AFBB0
62D33A9D22D14C37AA9EACFF7CC81EF9860D5DA595CC6778A7F06A3C36A4C792
D168DC61B0E00C91D60564524D7B1F773165050913614F8EF8A85BE29E113D06
CC844D519A65F780A78E56CA9D874106924BF00029F54AC39F6331A4A81BF656
2ECE87586E03C99C4FEC726E5D5CD4281510E8B82A5E5CE852D1AB080F8E3F97
843B172D926DE310DE9062984F6951B5AA2EBC98536501922111BACF45C80493
B3ABABB911186600AC62FEFFF4F7754935BE18AAC41C860B70833B92CB7228AB
2C8F68D03B6326AAE61A8AF0431F373DF8E1A969C52A99052A4D3A2FE770C935
8686071FF45FF489BCA0F4BAA4D5D965566BCD23CC0A112E0565D1E1920094A0
509510A0DBD662C731340D67F8BEC315412BA9A18E9744CAC5F1C047BDA80392
8A286C4E76A6B2EAEDFE2FDB17FF267D0F21C35E0E6977AABA48CD601358BFC6
54F3C7516FBE690A67828F56C593686101542A0830ACA6918C86EE5D21DBD34B
2EF84D336A889395E771CEC29602496D2F4CC3005863B6DE09084927E0DA3DB4
54B1BED8CD3EC75326188E28CF534185E66A3A161EED1F99B8496A9FCFAC1349
2DFBAE8110E9811B2898D889A581451395C7C58186048384504A909B92A16E8A
E2275E83777297529C5ED2573FDC622D7D4307DFE77A4B16D1848D485679E592
C1AB0CB02879C5C4AAA33FCFA22C0A4AEABE4D4DEE308AC29CABBA411987C715
206297C0971364CC5B83001B07895F0D8126F67F4A68120DDA56FC6E466A3CA4
7F0F2383A60025C5D0C64D459276BF2D8F25F13137C7F1CC459CB3B3E945760E
98EAF5063E373A084CD6829DC18D063618B2C9C5C3C3F9B01526D9D71A749845
22CAFBAF6CD275B0F8470DB58184D56DEFCA7213829FCEAC430A54AAB1C27135
F14DBBD172CCE6CD2B6095B0157B9B295F244E6197FFF3759E08318611701B27
F723F3786A03BA85152A3C6A3620836DA8BB5CE31BAA722DDB36BA5642CE4117
AD1D6B9E368CC0191FD3EC665A0F563B55F2738B16DD43CF81342B8A5B460CF1
7342B3EC42F3EBB3440E2E602354F10D0B89AA2077894331ED25BF6955E13DA0
B4DE3740C28682534E57DF995F87B37C537FD5D25484B3B641C95A5D96C622B0
4FCDDB40B675F081053377364DE99FFAFE6D22E975678C98EC8A9069AEC8E237
722DBA55BA4214EBF66B06D640012D108ECD3329117185F2DCC8334D331FDB4C
F16123266B94843C4586F7B0914CF4136BAF49D0A85D7764EBB31166A29307F6
343DCA5AE9814FF8EBFD456F77844FC27438F6061CE0C155A07D1064B66DAFAF
B39332B22F2C43C3AD99954E96E39B52434EB13675C377D3C5C7267BEFE151C5
2A60427176D702F257ED71B2803A6BF70C74D8EF4783865CE3532C2BFC6208F2
BEDF5E26A4CAEAC397152D34458B281D8EA05D6583D2796F440720BE08EE3F85
5A597B65071E7946D81D3FF2F85F8CC4417D0D02BF2477552010705ED42A0896
ABD62805E2042E248A874E814B3D78F46AF4F001A3885AB7E7C4F285F9BD614A
00DE6825572189A19315AD3976AB880E5F0AFAB2498FE1D79954BD53619CA376
01FAEC649E37E9038CEFC41BA172055892C47614A9035E7CD93575C377D3C5C7
267BEFE151C52A60427176D702F254590A4A2E016B5FEADE1A79C0AFAD4A8734
34BA54F6D717AB58F78A4BE43408C7C2F6D4465B31BDEBFFA59EB012DB2B39A9
370330D258EE8515E8CBC0DA34E79D8085F8BD147086881CD9C9335856F5F195
FCAFBC3813546176EEA6745F62F0715C865422128A163B6C6AE0D98CA8116AA0
AF078126540BD2D435D0AD6CA9233144A0545BD34F7449237157219D79611E52
DE72B51F2BB650628AC5E429F423F250EB9E8AEB5BA66E6FBB5338F24FE4F9C3
EFD3404FB795EC4D0857AA5D6620C95021DF41F3DCF687067554D464306A44A4
9AF8095E431F91B8EA9B312FC277BE315B18312C8BE99537C3E44E721A361BED
6541FF9AB02AB229B8D20C7CCA131B23CEE3EA3747DDE3939D38A4E5DE096705
B4034226D6B5DE97BBDD742027FE22B2AA7037F55F05E547ADB16F56669A201D
A41C1DAA9B4E66C8E5A03D5F1D98DE47AB51DD77014C2925F4F0125AC8AB5385
65E06699AE5D68759A52096B795842B6283A0129D49E7E9AFCA904B37EDB25A8
0BF2A04235CD244B0A88652F5A1EC5546FD4DEAA2A82A209E244948D832C75AC
8BD1ECDD9992E9F8CF3DB923D549EA4E6D98A6FEDF3B2BE1E54BB8EFB775F1BC
E8B6B9B0696233F5AF80CD6A74273F5204CCD208C109EE75EF233DF172A38D21
74B4730947637701EFBB2FBA3063483F9E82D2336227E1D03B98C42383BF31B6
8F6A6309C9BC0124812E4286E9DB31983877FBC16B4E5EC481D8E9EF87B4C4C1
08E799E71AEE8C115164BD9BF92B1A79C9C7090465E9A00FBC634995A712AB2E
112E3E6AABFC1D6F293F9EE845A2ED6C77763127B0725900DD92FEAB15171D27
2BAF7200828B2E085A16B4BB005B30C1614AEAA2AEC112F30B3AF57D9EAE465F
BEF66FE82623DBED8135D5D1E2A2D9811D78900B7D347046FF9C2A9DA7AEE1F4
2E36FADCE69D1C31BA552A09B30216F9A60D1F58E74D0931CE5AB03850ECDAF2
01BBABA430326604E56F26766AB98A5C51659EE74A875CB811177A20A894351D
75B4E76BFF75C71D425F9409954DF168966159B2A302B801CBA292D1C07EB52F
3849F14FD66B8A34A64B53A37CF300EE316C982A0D58ACB2AB0B6D52C9A745F4
40BE173AB90CDB8D5A62492E44D2391EBD6625AEEDB22442CCEB84056435B241
9148A456405A6BDEBB44025A835D94E3FE7ED4898A10D61824D760F2B86372EC
36424D8A7581AB38447347DC26F8B6F0422F3340A01614CCC41D40D27BF1870C
1EFB412C14EBB08548C09B8594FA27E14DDF887194960B9E3222121B24B97DB7
866E8CE52B81CF44DA54017243EB1546BA7FE32409951CADA934F8896AA60374
62E2444EA33B01A22F873D195661CA3A1BBAEA7BCB4D93C90C0E83A3C7BD7646
FCB6C28886EC210A1F84DB25137A35AA5C7691B72AD442BDDAD18F30DB190E4D
004740C567EB0F86531E771C74DD3701419E5B08ED32C290A30B02CF572199F7
4645C0D9B4DB9DA965633F5DCD87B03DBADCE87FC499FF9DED0E6C8FD6715B57
97EDAC56AD49F59AC389979AC060DCC4606454904FB9E7BC9FCCAC1D11162783
57D8659BCC81753C2906EAC08FC3FB9AA3D2A83ADAAE5427689ED559EBE5BEE0
A331DE6080DA757EC74FFC5E9B1D2F70A87D381F424FC2F34BF902F401264C69
EECF460CF82F033635EB5B3A4F7DF718E0EB68A4F615AF7AD898C9CCA5105A68
7B74DAC1CE89B910A9B6D2C887A3C469F9DC2A96B15D33FE7C565961C2A1C0E5
FDAF8955FBC699FC847F077A81047021DF46F69AD1EB8532A8962EF0DB618EEE
B9F1CACEBF7299500D3C3520DA9E6E7040E6A0131184185A428C37E133A909D0
2EA7CC5DA03D0AE482ECB5F7AABF9749CF4B5BE79087218032FB6D3C67E6A4D8
646298E229C517E89E253C6E46CE01444ACD693258A53F98DB0DF475C8D74928
A381F1E74BB27AF07B164374998F867ABA7A5DFD196AC274D49269CB03F74834
07DC1F346E0934D208422226264CE8AFE6E870382132172F06F105BF2DB51EC3
DF2714104F031BF8D85907DFF2849E4C3C7B62E653903867AB470C9661EC1297
4B4B88A0AD2FFB4491A03346BB7DA151B13D4957485E52C2815090CA3B1221A1
2F749E5C4197196D48244E65F7A54E14EA3DEE4621E32EE2D28136724789FF22
47D8C7EBBE4E95D9CF6F8D4D204CC6D61EDC66E28B7CBDA7CB79240357C0AF60
E817427A9126A9C32B377627ED3AD4456E3A67BF5BB49920F6FE6620D699A53E
1F1DF8D844BB4719549E214E37598BCD577141B8DD30BFF0E275AE21DCA9039D
A02B91411A735B115F242689F50313538F4B55B04A1613170A35B4A0E368FFB1
A287BEF1D44B51773DBF726C3C3A068A6FD312637F59D0DA55F3777E4CBF6A73
D17EF7A14D2B11EACC1D21E9D96DFEC09E9230E3FC37327DE16AAF88BCEA640B
CD466BF822D43A0234ED71A3E1F6F88994686783149A0710F86A46D0B55C396E
C4871CD89B3C4BAFC0110D887303109E7301CAF24954577CAC249BA77682DD4F
CC6DF13B34B101D1E96E034AD66AC6630B20566943B798A3B63363920E22A90E
55283446AC96AD3BD1EDC9E713BE102EC5636217774935F630167167EE4A5121
BAF566BA0C2DC80C17A4E7DCEE787E2D2F704584CFD5C339DA77CF42F6480A1F
D29C8002637CAED51E2CD3ED5979AADBCC7D727237F164BBF516B03977EC5D80
2D9E7F1994A7646B1A03255BC3D74A7F9B4DA617EACDDD1193FC40DA2CFAACF2
CF39D3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
9DC141B7F6830D6771F1A3CAE655CA173FA57D400530CA6FABDCCB4325478D0C
93AC7EAA9DF7605213DEAF94C7281D9AC68D884E15ACA3BA68034F897A2FFC1E
F76FA2A69CEE7F1E9543904F1773969F65553C3469FD85B2F2F89F0E547BFBFD
F62A3E47DAA4EAD6D47F0305CCDB297C320A48A3655FAFC810CEC6F6D68ADA4F
AB5DD7F61DB94072B0AB8F1ABF62A78E43E1578DEBD2D05109DEBBCEC64AC700
4C28C4F0A5E3A003423B9958C73D306B2B4A7C67A95F8B4E737992642BD3701D
39FFAD94524A7752560FE97B8E99A12AFCCC5044D989BCAEC863BD15CAB7CE63
0194962E4183C3838D9401260A743447DF953444B29D7CB004560D0685F73E87
72FDDAB87125F419F90D165EF1C2A06A9B7500C6AD185B4115777C6BF9C24D88
653589B431FB84E4DDB650C2F783594DE6123D3142FC5C99973AF211F2A2A05F
5A756073B85FEADA4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3580C547C2
54FBBBDC95998DEF2EA825E3BB2AEEACC0F30841835121B7A7D7A973F2EF67F2
795E6DD8CF55B9823AB2B15ADC328CC3AC493DE8C2F022EBFA14A2976D8E3559
B5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E9A716737B6BA413F846A887B
D1B3B89EEF73565F3D0D2D1E40E4C2811D37C9029692DF8E94F6FE39474EE13A
EEE65EC0E099C29064CBC0503FA4C89D845F91A107C8414C1648F6EBF6C8B1AA
7B2F72302AC2C6E6E9E4FD1EDCFCB8C648B2BDC18FE07B44B7E886DAB96F8B4A
BC3C584457B1565FE02E26EFAADB605C5CFE109AC7A355E2283555E10CA9070F
BB98E2337281FDEE7EC20EA060A062235F8848946BD058A0C86C794697BB0674
C1DA26CAC3FCFFE73689E2CCCAD5DE725AF6C7DE282CAA214D69B6793520439F
2991BEE6E427D4E82FADAC6C3829AFE1196FFD8D1D0F6BFAFF4F9062FDD08665
FFBDE33DB3EBD99D8110257DD0B832CB4209074A589041E903F6D89E22D34EBD
2B3C90EF5D9AF0A0DBD5145F0FAD88EB09D1BD84D00D951D4CF9252A4443EECC
AF1E56E5FF02B9070C1A92470E3AD7F1CD944E91ADBD1EFF555FF3EC5664191F
1C11943BB76D70D356FE5D145C73670D1A8F71E5C4FEE96C8D4DF87FF05432B5
165C8DDEF25DC98CBEA51FA99398860E1C252C17EE576B7ED658ABFD497DD5D4
E49663A5CA73CA347E27BC49C7DBD28DDB3AC7A78020551168A47ED789C2AD9A
B8C8FB7EA2F8C7D4D9FAB4B8DD91CB69558534CCE31AE7E157D0B060877AAEE5
14CFF0AD50200A157151F7625E63296E325E2C36D5DC45C5129C2D342CA7541A
75675EB2F1A5BF25461BB38C84D0651F4644CF51DAA8608BC3B698A22BAE29AE
3FE5C543DB648AB544E8212B3B2F97B5844022274F5EA46CF4E9D49CADFF1DC7
AD838B09A2CB6136CAE6AEA52ABA90745D527188599641549149217DF6B36367
A67BA60DB09562E82863F6C001ABEACCA36DAC81C30C11F98A77F4D100499847
E1102CC075FA1210881D95D6ECDD37B0B820176667500E58782156ED77373459
6699116573EB74FC1C83B091EA1700BD5B069BB7DEEE2BB45E7757F7BC00D85F
75BF5F32B350E2CF46BA0E8D0120BDB3E742C15DE5A8340318F907D7DB5591A7
08C83C63D6D457915A2F41B21629926169F4AEFD81BA2A880F4799EAE1C0C57C
FBC28FFFC956640872B49219FA101B88EBFA3E47EA4515043C418049903E3F36
885AD45509FC3CF7A376A608FC51751104BB96EAF8314E2322C457EC6683D385
525F118C799C34B50840604E7C248CA5BAE81E8C76C29FA3779933221D8A612A
2DFF00179C41CDD34E7015DD7198AD6EBD2BC01221F7E35F8662AEF8B6203C54
59E883141A505B275EE1333E6958254B6D96C9E54D47A12F4D299F67168AF7E6
1F19056BD1DEB7FE32A4F4E62D202CE86DDB34598B8CAED5B6DA81A6C816C747
568DD57D21AC8F8B1CD8B2BE97272017FC8176FB0988076E76EC6E8B4CA921C1
AAFC0EC3E24C38BF6D64E9C259ACF279C3272383D7526CEE1C178B1C6988F963
BB0D7534D41E675EF1BA59AA153AEFA7AA88C44F92801FAC61A4EFA2911B55BD
7DF444571A774CFABE590CD7C75BBE8B58EDC3A2C53FE35CC6B22EDC09857DBE
3019A7C60107821040CB0824EE588C4973D9A0D51FAE6E5FC9F82277403C5DCE
FC2C316D499F60E7C6C04DE9C117345C4E51748D3A5C5167780590DD9E188017
79FBC3307C0BB8A5784518676D62FF024E380036EC605313952366F3C351EFC4
33256002C59C39260DF18DDAB0BA5A40946D550B7831A2EE2670B2FC5DF8A50E
6F0C48860C52FEEFAA70B5953345568F1DA030BEF5C410DCA1D11F770EBC2E64
1196A40F44A2BD2529610091D8A9F09161A41BAC6A15727CE914A1009B2517FA
41ACD230B1E0CE76E289C42EAB07B0F60452B537A69B9EB54A68FDED4456122D
483AE830BE0C173A0D256118B0867DA2ACFA39F9F6EF1D81C607DDC242707D6B
53ED198367C7D54AC750A007498FA31E27B0F86C6D3AA81060727EDD60506506
EDE0AF44190FD947C4B9D41C4A6A03DF807F98C68F883721E6E7E6383207B054
006A409855639AB72C071CA7DBDEC1EB29885A11D100A9D443EC282E485CBCC4
8CA8861B0BAC0B3574ECAB561760E687C3BF7B72600494F60D3490DC63F40B39
F2C388F118806FAEF0361E5A30DA786E599D9055059C0C2180824BAFBDE47BB4
6F54EDD7D7FBE6B569AD9CA1AC51B9CAA30D805089E1E96AA5F1C7D8579C4D83
3DDC80D805CFE4868E62C90C06533AE6C9A73E86D96C6E3919B677C2599BAA26
96DDF00B27D9E1AA2D9A1986D83626E0D8D0C105CB6FC5F610237BB3C6E242EC
52D4D247307FDF5269B44DAAA80E7B4DAD286C0B4469A6264647AC1D5FB8AEBC
6481A94C6ED5EAD255050003F03E16A6529971CBCB06166030EEF983EF332497
5116CEE2F516B4E2977709EDBD3DB7AE516C55E742F598B2D718232DDAFB2043
F674EA73C9F043EB73E6A0511F1E28762342120515EF4AB7CD1C0D977AD77AA3
B19AADA40A0586A02109B864FE34566E17B4A1A09F9BA10DED06056B51C42FB9
B6A9C4362429C2FBCD39A24463D3E0AB8FCC9F3FD3A30F4F015CDE9893D5D66C
804F030B04D85B48DC345FC8249F699D5364BBA3E4FC59D1F7378FB3FA254230
B9826E6322C4D6231EFE10719E907FECF478FEF51DB2687D13CA64138054D591
B1C7894E2A0D724F4369326D31DC3FED9625DDBBEEADB867DDB7FF0678F202EF
8252CED93785F720E4DE92960A101294ECE75FFB72E6043F33FD3778024A3CBA
9DC490FD77F0F3AA902CB872E59AA81C0B0A6BC9DD687A18BA25D37CED0CD4E4
F0736A7C0EDA3E239C23A9BC94D2BB2581629D0C9CEDA46E01A5443002CFE126
DF21A740D9791D4FD8CFD7A635837144E85014CE922B9801C1C1939D2FCDDA6D
CCDC6E7B4B622D86519A9A42FB03DD17290E01444DE0216C35C52F0C3950222F
A43EFF75AEA3FA058494B0BCEE5A20AF99C473D1241DDDA5FDA97A2888AF5FCF
BB88F51495E5B2EECC7F07816F1CDFD16F7B82AE7FA98BF363EDEB32B1544C9B
7F8041AAC5EF16801613FCB3273DC62300B0AB0281C7CD4FBCE2B5356A2ECEE5
118D86CD0DC85A9A53BE7E1C06835390A532F3F6B1F8FF071E03D1BB27C6A591
AAF6BEBA1976526BFC9D408297302124C1A7A32D8F5976F7CA9EB64367E31057
BA0FDFF1E76B74CE02EBAE87CD872F21BD5FFD0A6B3A4A17BE19841B6B3E72D8
FF49563ED02104B2FD887CA074CA9C0F00E87A5D08AE35CB8763834BD6F9A58C
138E5C97C4C1059C7489A306E1E2D428B27933780412DE65BC035327144B153E
A7313133DF49A031282BFAE32A80AAB636288DBB885C46C5718498E0A8C3AAF3
9D9B7116E93D48189AAFAD5289F9B5E659E88FFA971BF1AB46A9BB02D26465A3
B7C450A0B6C5ECDAD7BAA8CECDD4D795902529AFCC3F1A325AA9776B33CEB0A9
6B243044EECD4FC971D86F6321DF5D41BDE10B57314C784BEE0713C7F20697F3
C699FD557D7E3CDBB0C43BB4DEF74A9B4B0D144564E5A47434533AE9CA24C26F
757696C3F1320096EB562924278CF8D650060CC2923372C0A870FCD30904A5B1
8BD06CD658AB4AF27B1BDB96A42FA469C5D3DACBC425EB6158A7A32EC17DCECE
34947BFAA3AFBDEBE5E62A6AD4B69BAF5891402BE5D913EC066F81CCB210DBBE
07CB52B6321F7F43646D5B940BF9377C91F9E00D3730EEF2FD1B1017CD104B27
A121D2D3EA73BAB53FFD35C67AC9C3B91DF9A4D26F16C6CC217C65F52CE2AA64
F93425A12D3F99FA56E866E9CF15B83C7F0DD201D74FDF7F448889F2CC1668F5
4D9DCCF7FABDDB6C50DF2485AB8138E3D841A9D8F9FE23F963239C92F9B480B4
B44A27E72826780E48006E544B1FCAF6881D65F8CB127FF9339190CD044880D0
4A8317CD53823F4F7EDDA13852C352BE7DCD8FF3A61799D5734B37023CF1A9F7
A19EC131C5AB6BCFA7D35816E58563B90DED88F59B4A7B7F95E8004CE4A07243
9889894AF8FF16E2FC2C82A5A8D5FE0BB2929C94EC4E0AB0128FABE45E59DCF7
E38BF93A153B0082245B574C006312B1AAA47CB75DC32200E796531DE49F1FCA
DDB0B6D68D701164CE198E7E59F21F9A157B136D2E2F34942D4ED126A95DBB4F
A2D09EF80D1F2C507DF980D3DB5DD408162D9718D28BF9E906D9591370733139
78F2D240675A01A7EE18656AAC3D73B851D54A2FA55862DD7F307110248F9338
A58F8A83C0D8481C4B7FB4BD0946A305A4E00B71FB9FF3F957634501ED2FAB20
17C34B786184A92CE1E3192849C4397A469C12B20727A4CA38A6CBF685720F41
25317A8D8DDE345042F6A491A150EEE8BCA4BDC0D235819216FEA662832F3B27
071A1EC66941FBA1C9F662A35F3B9FD0C4FA07AC816E38B9649984F5453E5E8E
61DB1897CFAEFF57C2FA041DBF351FD9F074C98C6D159862B0A8D9E94BB27AF0
7B164374998F867ABA7A5DFD196AC2732360D8EAB8507B874D48127F3226BDD3
42BE1666E638C85B4F2CB45644E610A3C02D768058BA2B97ED6782102760B5EF
9082705FB9BCCC4C76CB01A877C8242EEEDB3D2EC116D193A3BC7B6EC649B992
3A92343BFEB7CC18911F91847A571AB6E2806206612BF5DB0BC0C43B5D49E44A
0F36E5B0018C20AB43FB4C215C95659DD7D7207ED234B00EE34F824317E87669
99D17EAC8B28132D2BCC02202B078A014AF3BB404CDF3CAADE7A8ED6135F0B1F
0DAAC47B7D6479116DE48D61EF0B96D34BD63D94048BB513DE3A547E16A8CCBE
3E2F865EE8E446C3691A53B130795628AA0078EE24881E12F14EC441320B96A8
CCB6B013375B427BE239DF0B84FDAE2A7D3B6F925A272B7D99329893C7B86193
998C9AF6B6EBA334E42E05C376C8D62032A59B9D4E948DAFC6D574A33B9CE67A
5639E34BD8C4995F888953CD4B6449B07D5BFB94EB5B568EAE380B2F51007921
9C53405917D47D54E80538222B75ACB3F493582E58C0C3E1A010DBEF44CB2CC4
58F45CC832FFDA442EC29BF25310BF92FBF4379E93497CD0B8F74C1F61E432E0
D1F9F1E4A0135C64145D44C0D9BDB91E3922587E111D5BC2A9EC89E2F1971681
1BA35FEA5AF6530E3D2E308D575A409EFBAAE5D96D65773EBE8D69A606A65292
F61E9D66510A1A86F80719F3D684436EDE35AD651B2A02A0FE181C13ACE08EB4
A2BFC9A596472C721DC14B059F2291FAA610FE8C4CCD57A7A8C9F5071193E20D
0DA5811AD7326AE12B896F411E09C15B0506D1F805506D46DA29B54CD2EC33F6
18B8CA36FCDA32FDC097B192AF61F040CB1A2E88CBF064796261654AADFFC21A
7373A24B8BB3682F214B4CD39727CE28B6FC638E55474C57AC6AB696359F54E9
E05755F0478CF75B69C9C83FCE65FC3517A11D53456210054A54D76965628DC7
75D8B7AAB03DEDB6AC72F2187330278CD99954C7036E422BDF2419D6F7A4AE12
18E19578766556ACA88EDA2FCAA48B929E1A3403908A3DD636249FB28B7C58DB
A50771C080673C263D09152CCFA61FA12A5C83C65E54BD8645EBC6DF72B8D560
BEF748B624FE17F016DE8236E4B588D4DABAC4BC89F49090246D84C30C58439B
06ADCD02C4FBCC772B77EA42792FC42F4DCB37AF47A894E8376728C8DF2BD4E0
5147ADDE9902E5A3C0E5F4F0D96F4DD964D4FAF490734DC0750B3E204D6FF38C
1F6ECCDF44A025FEF9D2CE5A85658788795EEB8265C7F2726F87E1FA2DCAC6A4
CF31407A555660E2681176CEFB2BCA173F1D2016D6CA98017C7C118D8C67F71A
4BC3C8794BD8F2EFF6BE77ADAD22FF83BD861FCD07E1302D6A3AC105FF0DB8F3
7DE282B5B6062984CA5731AC4034A3B9A916F2AFEDB91D2A74E12A72DA524B0F
3ABBA5A8231299055A2126698FDE18C678282C0ABF7EBFAA85F3F57B143F9A2C
F7254D4E70B69FD185D5DA60AA63051DD7BE7118FD358A0B67A82EB1697DCE77
59EF3E2FBBC0EE740CD58511C97A3F0A327A90E16092E7A7AB17A304D3FC3BE8
3A41A452F3F7DE5CE57978C4EFA9784052953E509CD6DF4F2A88B66B9BCC14F2
5ADA1152E4AF8090F1EE4F5FDE9B4423B8E2851965E55433E560806D6753D233
90AF0FEF7A9FAE4339270B8C5D81435A477F5A736C4CDB790294163708221578
DB39135CEBEB89DEF4F8A058BB89CE6C9AC356F55822EEFE030D080291D452AC
EDC5D0EBA5BA7C1C7C3A820EA12732D95E3C21CAA8F9B9C27FEFBAB02B87A7B6
BF4FEBD03132F9075C271F205407839D9441A9850AB9E8BE225001F0CB10F8DD
82910F9A54F625D1D7729DBEC548D2C42A9F225184AAD4E80B65440A71C241D0
FBEDCC43893291BDCEA2DBB162B85E7721EB9AF1EDABB511D068C9183BC01DDF
F1781BA4CD3A2F9D42DEC908DCC13E41A9A0633280A6F2B466F2C552D54D2D76
D38567245A095F8C91294627FFAFF0399CCEB87FA7FA9A147695843FD9CF8D6B
EB3B9A8FDB3333B694B3E85E2E7ED6AE24C15111AEE8B0120DD8E29CC460BCFD
5FF697B554FBCB62F90A0A80260CCF63AAE519616F237B0C2A4FB0EA09E15031
9A8AA055E3E63BB78B7DC148E479DA8F84B4089802A732F2AFC037D6B41BD233
860D027981F2F662252C0709FC2C8B228CBA5632C5C642A3022162F4C6D54E6B
E4E1CE430372E9EC7FC8D62B62E950C7274748358A86D49F4C14AC5096BC97BB
F995895E82DBF188F011DB32D5B5240EADD9B21BC2CFB46A86BD9C48DBD11C72
2468DBB472370CF01EBE44062A4CDE2B9C33EFA4EF95A80220FE72248FE394FF
0E9CC2AD41EAA881BD417C9C3A47B945865D42CA061ACE401105AAFB6D143D55
39E15480FFA57A171D13C33D1BB81D4C8B5B18FD859DA64EABA78F8C85459E49
995EC05E1C5D85FFE38FE2EDF98FA2196ECE13CB4F39641D55BAC021806846CB
96F2C10D4575E5CB29FB0A23F9C53B79046EBAC012EEBC8AD94AB806E96E4BE8
1DD662C6717E289BAA716009C8DD404ECE7B7EBABB8F8300601476CD50E2FF86
B9D2E115188633278729806AB262316B6CA23F0447CECB0A876A61EE0592365D
4A01DC96667E2896098DC7535D51E34A1C528BD0F0E4ECCB638BC29AB4F9F0BE
B9F1B97CEA1344C6E44869135113CD900AC1F0F5F458F5047FFBA4AB5C77B5FF
C96866641D00B0AB0281C7CD4FBD93595C22662BBC2003235CC96E832A27D6D3
F9F1E0D6117DEE7766DCCD9B30F171DDE639B45488B890196ACF47966E41B425
1518F5F104AE5CD4A2FDD0DDF0A49EBF580E8B2F290EBBC3B35D92E472849BD1
0612A89E2410E3DC1B81890E9F2A1A8AFE1C6AF104DC95DDBD1FA5C73BEA61A0
C239F01DCC55940A347AF0D0EDBF29C1E6D9387C2E7063BE124399D38B97B84A
C32A989C4FC0D580164E5C4390B6EE412F54DE75B31F47A6B0432D6E0086288B
27F6F192F10CAC841F7506A5C3785FD3571B8D41E4680A8FCC063278A87F7806
2708C1E46535CF39C6C3E0846586077E38E1DF1BF4C8C223AB0EE6E6A8C24AB0
41F3C6E2B44AA95479E4E98133504C20146DD1716603D89315F3462668BCD5C4
4675717F9726265C663F183246F0377048C48AB0D05E92A03FCD29644A844F9F
61FB670F5521FE1FEFC260F3E926AE8AE9059A2A9C06619AA6CCBC3DD8120AE6
6A6A6A8862CB1530E9AD0C615805E8E15805315FEDA94DD73B6E7B423B990BD8
E24E7EE718BABB4A5747586EB25C06795D12B8C026AF4A0E1A6665AC061224F4
6C8EE81AEFECB5313DD807E658C25574D70239367BF057810A67BB0E61D84590
4E9BF2B1CFD04E1F92DCBA540C6A44B3025DA828E62EDABF89D41141C599FB05
C360657857D5364B1D5B9F766CF62197B85088749F3CAFA40A6A3223D4CED495
D44144DFC76AD0424D6077D5C415AEFEE988A756A598AB14923A0E69D24DA292
AB092D52FAA80F47282D973F48A5ECDA0EB2D0645E92A9B2106C8A8F1512C407
DE6B0039B5CBC69E106EE07FFFD590BEDC71CA9AD4AC12B09C223E6D195CFB78
B1758D1A87198C5F4E56019DD02DDE563C8FF0DC4B537BE320021EC1102A196B
E260790E28BD34CE2DCFC39617FE918475FBD0EC66FC2DC0504D44DEA1013412
7BD0D3662E05BAEF2FD08793AFD1D55A7C9FCAD52FF420A24B253F197A5AF0C7
005F6503160BDE5E7C9460CF1F7B521628787B8D52899DC4EE64CEDC583EF6DA
D6D831D091C08DC8AFA8FD5C40FB22842FE6426F2C86BE66A788D2098D50198D
B6B27A0F5A1ADAB1D6F5E9015E65845B48444847FFD8923E2AD093B00AF015CB
170CAAA63C6A4A24A808A932650890ADBEF2B237621D50F71CA58B21B16CDDFE
BDB0D3E5C308E5FB883C05DF56062C5BB4ADD96BA9E457869E5AF4F2FBB24CEE
07E329631F2C05A884542E408BFDE756C91AB084E55076BED621FA514C6B9EEF
4C5804E7FDFBB5D0A20D24A42C3F4BD35B8E99B6A625861D2DB4119661265B9B
7840134E4E7E56A90079CA7DA18D25F3681DD0131C46E14DC607375BEE543B73
20DE2F49D840FC89CB8AA5D5C0346582FF0C1D5E62A860C77CDFC3849E58F278
AF879D60E59164907EA4205A0BC3435596988D1C67406AD33743D341547B3EBE
F1809376BD5027E2C7593EF5658A9CA19D0B6B791190BBC0B763C1FEA3425581
0B8281AC54B0C751AE347896DE4EDB781EC82EA0697653DFA3919067E6E22759
994DAEC9A3D28BD9809FEE07FD469D98961546D53E84CBB7CF06445C229B5484
A91444CD19BA8FC48D47E48B7CBDA7CB79240357C0AF60E817427A9126A9C58D
0B51DB46594BF4D608E3C46ACB03FD405EE5CA4756E8697307318ECE80777A5F
A529030B795AA0CE8D74EF13E8A94B20BB08490E8968CD02762CE02CB727B8B6
F2F9FCCAC4A7034BD05D83CFC244D7DB0CEC691FA2A169C93B6B91C37DC02088
BCC1F9A10BDF85BD44CA1B3C813300A78E86386D29A7CCEFBAA8F35B4813CC9D
289E50EDB6667DDFC36995ABA438032624891D3480D1DDD1746672E4A11A8164
66C949FCB88A21E889779169F0062E74B6C195EBE60A0D0CFCD9EA63D68BF541
CC8CDB1256366907B21EB66B20C3240507494F7F10B401C9A267188B4684FC5F
88DC7ABF2F42F1418BDFAB8210BA22E315995DF287E83C08AD158AE3AC0636BF
C3614812566AA2907E501ECC18F0A78587E1259B1205482DDB69B0316C94CCD5
2F01753FDC5EBCB8388014947DFA87EDCC6CCA0FA7D3F1B93134816B1E636A23
27F6240BFF595E24EEDBCCBECE3E39354BABBC6606B1DFDF91D076228D14832F
0121DE3E42AFC10328969B5A3AA20F43EB98B9B23776602475EF5245111EE91B
AEBEDD15FB65955F91EC0F77A0E13FD1EB9CFB72156B8106016E3D49C2D5D9A5
CB1C2EB529E218150497C5EE8731DAAFBB2445723D5897B022541C44C3092FBC
68C718702C35B6334C7A025222CFDADD02347E6B3AAE64A949E5C87CCA39AE1F
17BCA6C77F2865CE66370F16927135F55194B9F6A1679797BD083DA152186EF3
5D59BB974980F8D0478935C577AACFD160223EFCDC28F428501DE2740A781E2F
AB047819D29E1C4F6E19AB6FE2B6725D8E51932E88F37C75D26D39E419CB18F9
F1704B5B90966A67F84AED0E31A74143E2C06238A90AC0353C714458518BD784
9F093D3B4C83C4E29A8D4550C09E8E89E7C834710685AD77CD51634BA21F6426
F2893A987DA9D0A45EDB6812A309A42859ACD3A12E232D67C6A3A81D429067B6
6D09DA1784D216CF9CE0AD5D7567AA288312539283644DEE44E8532B2CD41448
9BF61922F5E5FCAEA07EA280270600E05248DE1C26C6914BFCE14913B22B6848
FEFA6107790BE7B3C7F558922F7BC5A6641770F5E9F75C572675AE6E69E7AE37
632778223A0565DE2352C00C1694F3526F0BBE8E4F5D2936D9DA73CFA3DEC72E
83650F240B54E88E51C065039B4A97248049F215BB0F1087E6E52CB4F74973FE
DDC9FB0785CAA1BF17BBFA4E9D98849E6AB20FAEFA93C3F0A3587E7131E0EFC7
FA91D2E9AB6B3ED5569C5C5673B8815B12AD612CEBA426EE4DDAF9A20FB32533
CF4A100B0AADCC48DA3AB5445A26A913FCDFD3CA374AA0F61370D62DA0413A4D
37E0FC966D03BF5EC2AEB84BB69953BDC54749A357A31564AEB8D6502956CCAF
6086013C7CADDC2C3309492A3DB33F8E9EB23EEB04AB95FC5D970F37562FB1B2
1A3387D9111487D70E8DC84F449B871C5461E2339EC4685617621545E85237B8
1BC9EF8273933541E1D4FC806643893A641C49948FBA78BC9EE9FF1754D70709
127DE32FE92176B964274E37B450F25DBD9A0594D1CD925DDCC2EC217BECF375
87795A44A1BE03EF13B28C716B660158F64F1A97556C0ACD8EA75E6D9A918FA6
C536D97CA3805B6AF48C7C20E49586F974C5C4246A6BFAFA2F12135BFF313497
CE64AF947740416CEF31C75CCC596B82EDF5BAED377DC4C941943909EF16D457
CD214D05982AE778AEA1330D4DDD264FD3CB9F2F9B60BE3D172E2F03F5649A65
663454A8FAACC1838AD280B889F83B3CAD005996A6309A63BEBA0FE32D7601D7
BE745BCA2104F0A28816B184277891B9231F2831C0D7BEA85E0FA7139DA9D0FD
412974B1FFC634AE239841272C99CEF50C236C6047499118755EE07CD09E6599
CD2116750CF10C2510688D9DCA5C19DACFC81E5E9F5D58121D9C1555B2AB1980
6C5536397CFB0152D3DB996511621BB032EF0F402ED81971E9FC729AFC1E778A
3C0073C8A54C2223533E3493482391604EC3CD33EF1F056EE08A4BE44B8F5E92
D2F88DC8BDB5CF53E44C832B9BF5D45DF5914825ABDB71FAADB45F85B90C026C
CE185EA9A208F05F913C074EEAEBE390144ECA2EABD1ED2BB6C0448B5F48BBD2
8B37BD51EAC7264D45CD2BB8B613752CC6BC782A2A2621514057156F6626912E
1EB334EF140B2E5400E4721133F3D8831697F7A4F802E76BE91554C4476F1BD4
0DC9460D14489F24BD551B8FA02E734151BA067C878C0592C934FF2AC5B65943
ECE21D9AE53BE700B7E6D8326E1A9D0DB17A1D921E3306AB2B2A0EAE2EF71FD6
D214356F2F45DBAEB9560610E8BC8794666459CBFA46AD5B633112E17476602F
3D88EA2825F3F1697BE2C42DED91D22EC99444E7C55F697AE112BB165DB9A392
D09E79AF518630C4F063E876A35D6478131CB99C68581593A6CEBAFE9A9136C3
AAE071B00BEF0ED45908186740C9412068CEBAB515DF56E83B52503E7415A017
61AF688C996E2561756B8F923AE34B82BCF07343EB1546BA7FE32409951CADA9
34F8896AA60375161DD0303CC174E858BEEC37DBBE1180DABBEEB17414AAC506
AC2ACCAA6366E6F24A603AC3E2B599C47DE9C924DE33C24A26C32A540E57220A
D7ED50090ECB75DCE07A78FAF7EDF2347DFCB070CF8E3093B06D0B80CED64D7B
75A36876D66694E3DFCCDD4A5F9EE70883FDE7049696D5A131F19A7BC912EA7D
AC8E354F1CEA9C76D10F5213C1D6024677A39CBEF701D77D05FCB64F261AD82C
4B13C8BF269241C0DA67E5BEC040A958B14BB3D782151537A66FD4A5ECEC62E1
E0B1073E6F0B6DEAF86B33F38E1586B59E0F97561179C2C0F08E832E2DDBE7C6
6ADCEB5373F740B91CEEDB54EB08384809CF652F1E602E7F22C4B28CABC0B246
69D2C8E2B612C261A160E6B246FC96B24D1A4E4E55F03CDB489351C9A869BCB9
0A84060926AAD7CE866D35503E63EC4E883996473C15422838455099C979863C
9E50D108A802E91C5459F5CEFCBA7605BE16A140628F8FC7B19054CF4917BC54
655EBA7CAAA8578DE1C46E47A7C65EB3AF97E72594C518A0034038946DDA760E
EFFF9DFA2B7D6B8E4F38702AAFE923C4A9D7AFCAF6CC1041A6FCD1E20CAC60BA
728EE459CBFB2869B26FE46A42BA3AC5B28DE4438375EDAE3E3567D66FE5AFD5
95D8C00B3D93C7BE15407485744D542521314697ABE1F46A5B51AECE84C5E04B
6B5EB9E250F75311BEC3A629EB72C478BF39227E2F36C7B8784CC9B38A080F61
474B8E156AE4BE6B40950D60CCC8143CCD4A35302FACC114CABCF017E13CD355
D981F91D7779061E19F65BFAEF8043714E268522AE3AC353A57FF89632A6C65E
71A020F545E6495D90004324797D0CC5F7304230A44FC741B9F05E11FC433CDC
C87107EFF54952759D0757535B99B14BF3F25F5A199FCE51578B2BB8DEF6AF85
9C9A79087838CE9C208B047AEF3E6D7B4502BC8C138A192604DED084FB55FA40
EEE9FADB17C12120286594709DBA4209861C7BA29CD49BA3B82531BE625180BF
73F7D244D748E0D5F6E8F5EE09974351657B8A929CD02CE5F0AD3943BF2E28A2
CC54B4C09D26B3A00D1CEB6C2CC2A0CB3F29138DAA6F030AFBFBFD049C9B5BC0
DFC67AB558DBF66B5DEEB7D36FA95DE6143CAC0F79853042E620E5691A0DACD7
7AABFB61EF719932F369339C0F6A3EB2EE889370534CA9FFE7C38D93989F5ED0
3D6CDBD32C2E56BD3D6BDF07D4E327618B6D060AD97A6DBAA371140564FC74BC
FEE45739EB16F5BB52E1575C247BC236FD1171C9534B40832F14B492D4181300
6B3A3D5170CF214957F66974034DA4A3A49D63DC04701ABB8C5AFA6648411B5D
EB230DEEF8E09DBE901FF6275AD41CF470D73E25E8B728E94E19E840C12F5B5B
0DB44FCD7445DE590E3C091E8A4C53A4AC20CC1EEEA41843D47C3528D5F4CC80
22B8CB2E266FB035CBC47D19B458D3E7CE845336103DB7E5F1E3348A7120AB83
D82879213DBA51BCF1293678E2B373D9966AA2233E0C9794F825106489BBBD27
A801941CC6473E5E05E2BC76FACC2A6CCEF5F4885DEC251C372909D9E8C39BD6
48056DDB821EFFF0BF9419D0390E5F928545606BE9A25E02AA82B5A88657B00B
3789D324F65C19A34759DECBAD6831D6BA5CAC24F68FBB6FB966413300975B09
FF9A698A3506EB41EEF3F329B9B5AAFD1280BB384FE0F6A25F1182991A6ADED2
5D0908F77594D638A02277F43581520ABEB47B87428F4ED6CEF621D640E27267
C4FD66CE9C6CF0BB561718EF1A7AD805859EC61E0E8F76F69A70564800C8FB9F
5D5D2F89413A3A1555C56AD969E4481BC1E67662FC578EA35F00249EBF883952
FAEC67AA7520B6E17926BA32815CA1AE1BDC10CA4BDF4907ADA234C65EA62D0B
EEBD75005B6BB6050DC87D3F2FDBFDBDACC47ABFEEFA8312F931B1B8BFCAD417
56D8630A3ADBCA6532C3EA953DB8D8066F97A03C75F303A8FB751712FBEF76E1
C3B1C9CB63023271A53486E19576BFDE63F5586123A06E612EB5ED1CA2151A1C
35EDD4F989E126F86C080838FFD7F540A94499FEB2F9AC88C5C8A3BBA87D3778
24D887589531EDB49A15DEB1254DADDFDEF18251F7CB9713F082BCC4FF5CC6B1
6950031EEE5283E8CCC98FCA4D1C6CF0AD620CAA7868BD54816F6121D102A8E3
C0019F8F40323E44B6BE8B3EF7FE3444518A18EFED89C424C5C645ABE590232C
D6C8E17FFC724B0190424C7B39DB048DD4C19085122B8D39BD7F62CFF8703071
D204F989750E9FF6F188CE03696933CD1FD0016621BD6BC562663EF7A9717FE6
58AAB1B4DC4FEF48BDE18AB1C0428AF4332D1EE11C0ED2D3E83094A9A3536E79
C0842FBC92DE6A23BCD734FE584D1B5EC795BE8B6A78C8BDB36F575A07F124DA
4DA0F5874D1EE0396F63DBF167A1028A3B8816A70447B772118D3C53EED2F471
F4ABBDD2A014C2B0867D2C0530CCC410A2A768B4CF777EE80C208CBA9C152A90
7AC8797B317DBD51FBEF129E1F826744D0BD272280CE8FCF0A751366B5972467
C551A6B437A439A73B9D911EE67A239BA218F0C2CD3FFFC5BF1ED643ED19312E
207A4E25603286C219BBF030BD946DF98472A2BC01F60262586BDDA03ED86A3E
66EC0052CEB32566411B6352ECB698262775B0137805D92A676CE9909DF0D531
BD5506438BCD25EDD422BF34188C3FB2541FB0275276D9CC2E72313D305693DF
7925945FECBA14AC8A9052CF84700BA5BBA410D4C80B9A36A31F341DF77F88BC
93DFB9524FD4EB55EBA36AC04291C17DCC9F9A76942F10B229A370F070A47C44
B86B021F0BC455CD4D305F731ECDEB22D4A18AF0F4BC64DE9B1CDE132126401A
1B0C2FD769055FCD7CBDD8596F2BB3FB10FA45F49352996A4C24EE135E53D801
BAD0163E47C37410DD9A9BEBC92D9C4C5652F6E9763DD4AA1229E2AAD9FC5966
549AA95253A0AE6C0A7BB6D226BA1F3AAAB397C126450FE5B385885607A040D3
D2AB1076353F44F0B3019E4FE75D3861301043791FEC53D9D3DF896FB2B71AC7
DBDE63E1CDB4CDE6CEADA87D16F3BB71F5DDB909BEE8628E478603573F9FFDD4
2D1DA7BA6D125B96B6B3176C107D11408BBB2BC98689D002BEB5A6395AF413C9
82A9E25BFE73E22391AD1D0DEC1DD4E91AED7FE13BE59AB80727EFCD61525D6D
B5D83E17A26F0060A3C3DD12E5A4AEBED75293439B2EBE4C01113079E4893EEB
A0976781A342580B1A991D76A0510F4F9AF50FE68E145618013878DB07977CFA
381E37E5A0C8E3AA879733422B542B29E30120961DF11EDAF045FC3E894B7C17
29D307883F9B7EA09377DF4F6A541C1509DC54093733FCD6D19774116C99FBE8
1D02AEB1DBF258621405F4150E2D38DD80F3D20222B552C8AC6E9BC0C1E5143A
5DCA16BBC20A5316F9F408C1A0ED752F5393470DD641BB173B202FB9C5CFBABE
DF4EBB7F19628DE84941135314135CAC8661BE5785AE12E30D45A4CB81A15355
27E53F03BE9B096D9F83CDF2D9B406292BEFC538E150962B042AB74E7CA7E4C3
F2D7EC5BFEFD8F4AE27D86C9EB50175752588A926633166E6250FDE169203949
EE4E9165928223A93F0C61B5A207016DE908A1BAFD3079417AFECCE99B4584E3
6494CF19B46941D7602B3807FEA4D25CA2D18489EF9B86D5DFD1DFCF3EC4486F
3FD8BE688BA342E803FB610728BEE94A5BB5BAB7C622F974A3DA0E2BBC4FE38A
F37D16325FB9929DEE8C2848745C4BAB44FFD17B997EFF71C0B00B951A7570A3
41DBF602CEDF76C697EA0C66A69497113958A7DD2A69D1C3EB0FD639F213EE19
746EF950B9189A72FA9D81252C72C2E592DE6790AC519CE4A94D176626572DB2
EF3DDF990700D1AE6018FEE40F0A8552DD4A857B98400601D065991567A727A9
FABE7D2002DD4B17878205E67AB0E11479B358392FFCAE24A565ADBD22608FDC
9CFB16787D93FCA89CEE11CD82728AC7E86DF3B7FF6633BE44BFA9361E44A4AB
8595DC743EE6DF698FAC50F414217C1FBEC356F083421685CE1D1A0C8690E1AA
BECF48AEBD0339C6C2B026586112A03EB522C422FE33A75039D453948F5B344A
E95D49C10AA8EF35421843F27C82A7AC7DF9C0110BE022C49A1B6F9DEE793162
229823E29DDFBBE33BB1FA1D8784FAA2D2409F967CACCC1964797BC601BA678A
50176C75FC4630734266BAA50C7633FE464FE7FC4E168E9FA8C8FC3432E6A2E1
2A49E50F22DF3FC4AF97BBBF397F83C24613617AEBE3CEF148D23CD69F1FAAC2
21D701C67236E08C7DE1CAFCD66025CFCA26CA6070F3F138947E9552402C33EA
F5680FFDE98F1E5F353A07B59A0704AF6A1251535FBD60F8DF1BE13CC06BE30D
434EE42C60407656EE331B72CC2E4DB91922FB5658F5B83080E34099DEC75BBC
D5A95690E073C9B2183C3433261A50776538F253B53B70BB159158DFEE31DBBD
EECB6B2E718C7F4E88A59A1A242A02DC6162A278ED92B015D06B4158D9F2C8B2
04394D751376D1660693140C7111168672A20591F27A9C31AA4B9782E52461AC
06709B022FC20C98941D0ADE31D3E08955AAA31A3D2B002F575505C6CF1C1B5C
5149E1DB6E26A58F235AC0351D214B3DC904C32B2177F2CAC0739F26081CE1DC
F8FC3F46113860FEE0F20B51939B21E211F116E326E91E64CAE648A557B22924
023DC543D813971FDF6A7950E1DCB96AD3E34105E60A9B2DACE328D3697BDEE4
308E05AD63A70E54426225EDDD9B9315BDF73CA6C27DAB4FC93BDAEBEB3FB9E7
81C7E496AE90EE62DBFDE6F007EC034B226B897A7853B52CBA05FC5A4C461F11
2A1223F6FB12A35F89B3A704DCA249BB4143FBB248AA643CABF9CD20092FB40D
748A0256F1A1053F21BC73861EE79027348D934DFBE553FFEF709D4AF57F7831
CCC0DCC0DC915558A518FCC41266BAB2BFC6611749E836EAFA8ECF5C3B886DC7
45AAD935C54ABBD2EC1C3808772222EEFDFA9F653B7746A1145F8DA11161E713
C5B529192F6FC14B95588B4F1C223E21F9D8A223215C2E6535D0E81E90671E76
6C422B5476ACA18021D66F223A6ED2EAE1534A139466F7F62EFEBE37DF3FE967
8ACA19ABFFCD5B59A380CC4084CF47BACE5C1BC7F4528F51479C03EAD7477181
F724D242E49D367A1A46FCE4E987E770A4A7512B5276E36EC3072C6DC49A0627
18C044731B6DB8007749D1B605F397413DF96CB666EDE0A7CA54B96CB0F2A4D5
C9B8F91D3597D2B5C6C84472114D220CA3130E229B74A33C2400534D5A932AF1
24A4CB3911E6F3C5B365E1E8FF9C5FC769FCFF785FE7562BCEAAF1AD975A823F
912ACAAEF7377AE3976C33480C9370124BD9900CC42E855CAB65ACB75743446B
CB9FDAE4741E6CB68C4A28918A8BEF9FAB961E47F063585009F819BC47C986BD
A725781E537C8EFADFC82D9936FDD355AFA89FA6B3BA13F0C6568FF9951DB096
9A5E6E932885990E7EE6C9F7CCF0EA8148750F2F287771F728FDDCE8BB087687
3C49ADF8152818A6164F3626FC65ABCDAA308258FC5D3C77D62E37D7B6DCA45B
30F19485737C159D120A715BFEDB956284754663835E6596233135AB658439E0
EAC22B444BE9E231EF8B09F5CB3DA134AE5E952CA26A5737D4CBD70914E2CB70
7281F15B701F0287E340112C6C063B2F982E119F8A8EC00C8BD6EB20AB66BC1F
ABC48E4ABE10D7B441F04FF20C785A6F46E7AB1852DA3A667B138DB0BAB6525F
3E251647F3EFF443E8CFD42368663888593BEBFDE9C5107A8C8C23E5A620F4FD
CBB57367B80B8415257D0C6E7FFF3DF5779535BAF313EBA3B13455B9877521A1
1C16E4A3D062E99ADBABAE8AA2A47BF14ADA3F17E5CFDB626243FBB9663B7A3E
6AC92F9C869AEA43BCC70C5628EA55B38F9EDAB215637DE8E00597C351139020
5C0898FB37A661DF3B0E1C6F1D1F46EA7C23D970783A01FE28FD05E73043BB90
99B722DAA55AD8D09DBD33E0503B7CAE08215F25AD4E6709C84D962385827801
926E259CCE8A084D2F0B3B68A73E122788910B8D747D5BE6E83E2A6A8A3930B0
3457C867C1E1B22E927A19758038E224D931449159694228F4D5A33B09C6591B
12A9B82CBE1F3F03D7E973E74B0DBCA93376CD8F4BE0B0894A7A3A645696ED7A
4F1EAA9AAF11886E962D74A4E0836314CCBC66DE115245D3D89AE2E737A8F771
BCAA2E5F6490D5648022159DFC0D9204A8FF8FB8870BAE48457077FDBD705542
9D526395883E76F76C8D5EA996C4F2D9EF2E3EBF9C55539E4057558AD3B3C9AD
5C3BF5AFD5D14A68D93ED22B08D256D6122BC446865A524A6C07661FE6954F55
14C3CD1F23465EAFF7A6A283CB23269A95015FAA79DD7BFC9B8F01670C244F35
E7AA03CC2194E72C9EBBFDF1568C7B20ECCAD5A1843C918FBB7605B0897C9AA8
CA919D10F6DFF4E78854CEB5E3CA7056CA3CED35EC7BC0CFE9CAFF7ED10CDEDA
0593FCADFF0A38B25B3C2CB1D4C0FB985445B00A0D620A5DC1919F4F11B8EF9D
89442D495C241BF0CB3F2CD4CFA7805F434DFBD7B11B9DFC56D968CF3E2D9833
F6C889D6D5156417F816AAEB95DBD854216A4AF7172036D6A278149D897270AF
2709F54A6F4F64054FB97FEC13101E64760AAF7D7DBB42CCE23E4D3AE0CB4287
041F00058033276D8DC528867D1DD53D897990749752A93232E5C8D3A9A09C3F
1EE37CC63C10AD87723F6ED414CBB371DCCC21CFEE31836F9829441514DE11DD
E51721883B8E9211A738E2E48ED63A2AD172589D8BE04D58CE91C086F430E5F1
D0B6C7BC079B08ED329FC09B92C2AEEA81FAA9B2A848C1B24CD48FDF834B5AE1
3A181C0498EBE08C3B5C20BC3C33E8175DB6E641C0D52197D5346ED6DE331F26
D6EADFE2B7D651B09FA98128563ACE9A0185C5E1CA08F5A12A5F633C7126AD51
D4714305C8DE89D0F22DFF10997ABEB2FD88C69AC5E5FD519549FD755518688D
B56FF76362FD9E1C29E1A347A54D0EAB07CF3CB43CD00D5017211C217C91E348
7C2AE33E7563F69D123103622C03BE57B72AA77CA5BB946DB287CD00721AC2FA
B8FD0B45492FBF1F30FB17C942419155EA4A0634ABF70FFE6D8E18EC833F8FED
499030F4295211C9FECECD46649DBB1A855D6EB1321CB387A293FE1AF72A546D
1C427FC2343D5C24E60F1CDC69E178C52B5FB46AB460EFE17923AC043EEBF6E7
98AA56B4A806FB8CFDC78DC6E40AF400E7CA5FCCCBEE7EBE0D112338AF8E76FD
93965878F5700C25D57893BECE25AD843CD47CF7F93E874F5036143FD34187FB
FDEB34E15A47E442DA5D60028773E89AF91664E229B27B32CFC272B927108DA3
F84C1AD48F8B63525A2FB2E3CA4340E986163794C31E69921D7E80DE5F7FF1B4
6BAE7B400A42BCF29C031FD912114EBDF855E3DB5AE3882035496498A953AAB9
28F72FAD37A81EBF1C70449F59E4CD8B3629F8260F481F20B8F81BCF088B4875
981B3590EB6254FEE152B8F789FA9AA755EDE4F79337AC26BBB0E45C2E37A114
4F03A898E2EA8671174815AFA069D4578AF4C5D2D26BE97DDCE31521F652EB68
C617BBFCBF3479A65AE118CD76F29307F84149CB74014B306B79CEA0B26FC105
88E19F7193124A7C56697E33A26D97DB0B3F702CC17B55516CF4256C1D01F1F1
6BB321FD5DA3E9FC028B309B8B3DEA4F0892BEC340A42BAEA4D682F66F73339D
11595BD9332DAA40158D2CD9FCBA9AA0F2F8687395004F099930E60E4A7D5D56
F9874BF5AF78B43019ED100344397713B6E0A5C2D27341CEF84F6B67255DF8BE
275962DBE49B6C90F37B8B35A1736C5564E90E722144BA4696066CEC915F8217
66187E8B357717471AE3BD9FCF69DC71992EB0C058FB2484094A3968A30CCBE6
4E88F20E5C758F7A279110DB7222A1209E17F22E4F250B1AD234808045A23434
83AB069B4DCBF759C9FF16A8E893C28EF549CA3C0F7C816FFEA98DF66037812F
B523E2DFE42F854560B197492C3ABC823A2A6B63771906DB852C60819E135214
FE57D595F43098A0726269CF4D784E5D40F81E63ABD31EB5F410B0AC76172539
30CD965FAD065ED44073ED052F37A3183C8632C5B9F40FA449DF4655802BC352
0907ABE3D62CB3163AC0B78CDB4635E61A8095D23611D23583042DADAFA1E9AB
CCB6E74799A67776E5A51F51186523E41341D55555EAB59AB3D16B64C463A1D1
E84419C6D9D150EAD2CCB3F51DE5542AEB5EB40A8B0326A4848A330FE0639A3D
13A3693EC024614BE8D88EF0CC441BB9DAA02D41A0B8BB6958FCAAE52C970D9C
BE799A76206DA1F519B210CDE52E53936BF8271243F5505369467F06671F5053
B0F1F22A45D966C86DFCDBF699BC3E26BF856F4E1D32AE1694E5C1EA3D87459F
CA9ED5123D2C60F9DF0D2BBECBC70DF469EB036B3BFEB3C0EF048513FE8AF0C9
CD2C75CF9D37173C41AA84CE0FE734379DDC5F9671F01631067C50A5C5C5B348
D10398C80FF8F6C1DBC462FF12268E88E61CDB237AA20F1B01F82D6011F2A3BE
DAED780B2BA612FC13AC554F3EFA2AC7BC217D05B25F2A5671BD0DE26DCA1923
D34CBF6FFD83A37D93063B03A19840CD5B72C9F832315C1DE5DD4543BEE98903
7E08ED9DF97C74CF646C1B9E0113A1C06E0859215605B5F9E4549F71358B8924
4FE68AEFD3C9FA06D7D82CAA3D187B00245A828728B6D84C1293B6E0E43021E5
7EA6AFCDA719E1012BF53E719C9704F5272C50F0C7FD8BC5C0909FB47219CF67
77B17D91DBA6061DB40EC799FD22B6D4D1E76A3A4047E7EF0DAC335EFD295ACC
86CB58760D80A868AAB4B9BB8FF38A024A04095CFCA3BC3E708C05BB00C42FD7
577D15FD439D0FE7270F92A44952EAE610818623BBF9B30B90F7EF8CDB94B50C
536EF4D6E718E926DBCE923DAA8C705D3148EDCB5AF06EE0CD97136F331F128C
794D9D6EF7E18E83010405CAA3AF558B24EFB9BBE95032E362E2C41D66407CA4
D0F1FBB0C7F6B24028F8EB4342118FCF06E64A0B4FD2AC4543FF4C33F53EBEEE
C8611F427FB16BFFBBEB73850E2199B8D101C90D4E7180124006B220B251F5E2
D9C5E1AFE48A6325C7CF2180A85D103528A79957F00BF8849A73B9D49874E7FB
C852DF4A9BCEB4DE7DF3FB85FBA15A1D1070FEA87E179957981BA528840E4C5F
98BC050A5C19D3395911117B1DCB197A7DF573B91E5481522C7E5449ED049CDF
2A7FD91182935B9F6428D10FB47BD327A0077445CDB879391698851C4348C310
9D0671951505993DFCEFAA29DA23692B791D5E468B4D4AE9C07CBE80059C2A83
B08C6F1ECC9952D74D97F7BA2CBF800B76FB0D0F29D243A5B01DEDB224F1772C
9C9632A517073D4E8E1C205588BDD478788035ADBFCF366596F5E3DC4BEC3013
6B8BBA284D6DF2D0D66C0F9656E47E98A214318EAB91191B962D63247D4B6632
FF6D53076BCA820F31513270C66D023F358CFAF822994D21D9B4EAEAF81C3AE8
C464A89F33E4D3394EDD29B3B4B551C48CF2F739CB2EC7AC3F669435FA44EFAF
884491251E9099681293009DFDDBF03E92CB213727DFE46FF64199038C006B74
DD8D060CE5FE0B0EAD0138DB2DB97B20AA7D44F776816A160C72924E41136276
E7F0A92F26505C43586781B6BA4A1F3BD1B8490BB99769F346F8F023272CD1DF
9F8358F8A4D59C24055ECC09A7EAAF3667D8880357E501710A503A4F189DD327
B4AEF5CCE1E659B80BC47C93BD9089DF6018B2E38B548DCACACF0662E4C032BE
2E108D09AF79EC35F17D3C7BA5DA5F53C91F054E1E24BB0976CEB7DDB7FE0BE7
1987561E6E4CD95008D557CA7BFFDFB68A41EA8C5258981A89D3EA8E8A31F425
7A299412A33AF840CC154C2F881EA0D64F3BF02C625B92D884416C53CB94E046
6FDEB69F77E45AB50CDF50B95E9067C81D6F76E082FD964361DF750132859FC5
8F7CB33158C7F59C2F7B9A6AB2CFD80FF2382620934CE79EE21EDF009A9D2CD1
619F60923B0E961A26621A88D488A1F88DC584C640A57AF7F52A51C436A34E24
2E6103B7E529108C2570DFF0433A02B5A3751AC9A012B5DA92872CE69B8A0C83
6F561F1F0A2F90344A8562D6F126F33C84493FB8F660710588ACC6F588676339
818289CB2D19BB6357E64ABF5421FD338F17B562E955B4EB2F86D2F1F4487D49
231B4F7AC752BBDDCE1B88CE115002A81184815AF9CD5446664C39CE8B2584E0
69121F3561AA530C3E1F77717FA3924B7B7C32F3D4A9CA4FE72E6E2E05D14E74
56D7C51CB856383D1AABF0209B70104DD13E9BCF5121199EB486424448B45EDB
617EDB931969D6E994F19198D5EE9A7DB22D584FC7B6F9C35C47D639F99BB02D
03D19CEBA6DAE2E0F7E40FC15759128D6CCA81F95F17FA11AF7D0A61C666D3D5
F8C9E32673F7190951C58005F18A81DA0BBC618A937C4159C91A453A8C4B09BA
DB9BC4FB30A6B5EEDE3F6750AC8C65A60E2058A8D5F6F8767A0BCC79ED5D7599
21491ACDEF3D174358473672E3A8853487072F6B92EE7F40AA54AC46451B3F94
C3D0F23FD4B10497B25510D6DA4AE79246673B0800067C69EA1A7A7FF7F93ABD
957389284A9FCB3E8B92F3A14D9A19F59A963E9F90F4A84685377B43F208A3F3
319522EC28B0224E5C15C3E4B1B7B9157998C8EADA678CE616F3DD04B4085690
CCDA8AC7D0D48CDE08E0CE3392133FD8738F2C7FFF041A1EEFD2F29606E531F5
71BB23817ED3B50B86FE1EF1886C2396520C72721AF3C3586EC9851B46C82DEB
991B2201064613EC99273A8D379F25D07BF654BF51B4849387A64276D900EE84
3BD07D2209AA7B1D13D190FAC247A00166D91855CC803FAAB932CABE46253672
2E95FA155436F684807B2461AB528877FD45FB1E1B3687DBA8D66035F0452DA9
C97D2D983BEE4A33CBB2081AD530C0841CF04458A32468897FB6AF40B0C95868
C8C9AF6C241E8F743D418E1D967FAB4D3D4D2BB66A287D2BA92A6C662858584E
BFBA53E8DA4292DDF95057F1A668F7137A0C348F450B13EF02D74B030FF338BA
3381FFFC6801FC79CFFC4D05D0AE4263B8BFA4ABB706D283D01C44816E39ECA6
BA29A0243914BD2FDE73FEEB9594B29EC68F523551EC71ADDA3217AE8ABD71AC
BA23B26E3D17D41DEB9F5AD6FFA10A1C1F3A25F9CFEA2C3E3EC8D826E45D21DE
1CBD7460D61C5F1CC2EDFCAABE8E6BE1F2BC739461D428AC334947DE551F72E8
7A3B6BF6112C35C22EAA74710E524E881BC97B54A3D442872E97CEB0470CF5C4
4A6942014634A194E095385069E5A32D2861AE98B165F3651C49C701002EC1DE
3CA2B4C4C59B2FCEB1291C549BC9ABD6241D2D9C1EFC14C33D4FF442F40AF64C
B76961831E5F2BD08BE6351569EA1B4334B48EA578982D5F6BBBDB760E77D20C
08D6ECD45170DA75902F7B825C8692F013EECEC8550886144F8B1AF293A88294
3483D6930685127D91CD9BC95414944B9E6E669547342161554A7A065A686411
0BFF17FA65861C43364F9F77FD68C1FEC8BF2D4715E3B8B85239FB8AA1952F9B
D8D1956A1E204C16BD4600B66E35AA1894A23651DE5FCC01CA4CFB0EF2726F5E
F70E6F5572DDB601B3E5478BF6E8EC3A6128D1E27BF866F4BAF69CD1E1F46CEA
0F7F06F2A8E7B4D509DEFE193F94B2D08E7E60FBEBD9E586398B0ACAA04C99BF
3CE318F2722A8A64D56F9D6F5536ECACEAF139EE9AFCEE539BBC9881BB6CE76F
AFC31BD5EC1A698AFBEE2418D4F837ACE400F6B71D871C67F70A2572B1FEE2E0
E999C11A3CA9D474EEC6F836960BAD33BCFE265F5BD554B4D8A6F6B573F56E41
60D37638C8F4F9D33992EE720ED9066E54DF8BF378902CA83C4771E7EFC0330F
10963C8643AA4303C754CDB848EBAA80EF4DAF03D656334D7A3E9F0A270D48C4
E2DB401ED32140098BA5688A2BC30419360746E87D5B02C88332A03D30E6E987
69CF6EA7FFA7A4A021FC6644CAB2784E050A11FE8B188A6E1AF3199A54D8D459
907D9737C5E7929E55AF96F657F7F6D6B2EC17F6A56159ED98B450806EC9100A
418F1B5712C9C3F6C7F21AC95E4E681A9BAF6A358EC93A75683273445ADC0F6E
A36C6DA9CBD276DC4FAACAD5A1706A818E001AB1EF60A4D042BB74D7974422D6
1BC3709F6FC11798B9A9DB12E4DBB53A2BA5A4A53CAEBA196694627B8D137E3A
872753CCDCE85F7C14C426F6F84DB84A549211C1570CDDEFE0028AD45920B9AD
649E3CC9D18701E9ED109EF89042BA19C99E22DC0A7B2F6E166CDA7E45A6DE7B
93C0FE4B8FA63B559F44EDCAA8992EE302BC8A56B5C2A458062AE89D43E422D1
183612B014A7687524921D1F4D39C1DD6D8E324FDC64E1A25B4FA057A5AAA357
AAA3DD0D863BC8A442AE0588B6477833D08DDDDDA07EB0380EB95329B5EC7003
E957F931995C83EAB1684CA637424DC59853EDF5E0BF7D96D8A4A106E081B8C8
CCD2790DD4CADF2358679729F2D8F0077664EC97FD29D95324A995E399ED18CD
4A9D1EA23BF95C4A3A8932F7D47100FF8A7D4BDE1BC0D08A33D1B38B4B56A05B
CF4D0E881031C10DE091BAB394BF39FD5C68F4C39DBEC8BEEDA86F09129C65CF
388D6DADA236AB35C6DCBFA1165F47F8F52B0787EB4B70B81AA93C41A484CF7B
7D56968E9DD32ADCAC98FB5260D3A4E149600E82D5E42B784224A4D3881F4B15
81571B4582BDC6C9600092D219AE7AA092C4EC51735377A9271EFE69C67B6E0B
E553F4F21087430B643B6ED36DCA50E7423B69CF42A9608EFC1A00C860F6F387
444E68382AE684EF39AA1FF522A4126089FFDEAD73DED2F557DC3A6D1F3E5042
BBEBC8DCF1933679A8A7B87F71A7A231847BEE54D2CEBA98D38B7FECDD6370F4
846468A94D5D414484C85B396E2C3E68AE8CB2764C83F7FDA217D8BFD029A86D
0F960927F3CF2B91CE7310630D01C326DC04096B82284D6A75198D3709DB41B8
86F9E10F6E67755BF0887A3F1E71E49A160E7007DE13A58C5F12F17BF76F0095
5C1F1B0F125261DA0D2F7312CE5B3F3A1DF65993FB5FBC8B632D158A299E13B3
FD58F627B164A6E78E1E3006C77BC9FD874959462454D853ABCED82C9424ED6F
35257B4ABF64A86EC431D0AA0FB92EA868EC4AAF9A07D31C5F911576D58164D8
2FF078B00D92BB0887AD84C2E2099F73A2E468110AAB2BC8367160293093B65A
C8F5014791E514E1AE5F36D3D9F44C93A456A16CA61642EEB3AE4C6CD7E741C5
6977C745E2A505DE1D20595CD38C4917A6A543A4C446CB392FE82699C69851E4
91FDBF8BBED7319E3ECD5D678A01249736ACEB152FD76D455186F68CB548AC66
A102161C2F27FE152E6ACF099399BA400778A603F2F8C524548699C2C22D57CC
EAE568FFAFB42ABF6E443CC4D29A9D38A4E5DE096705B4034226D6B5DE97BBDD
74229BB7132974C601B6FA29471DC34814FC81A1E1A5155E5E4BC04ED9FC46A6
80DE6AD3D0BBF5EF644A3A2A34D62E54BCA32E0EB863C256F65A8F40EE3AC0C9
F6154C4E7FCC02B9229BFDD8109322DF0CCE8FE0405D523BD8020693E79D1B15
6E50676ADB21574CDC21A4E33DF29F1B06C127444311964F88706BD4BF54A5A2
16F2EED84DC85A9B7CEA26ACFEF57ACC243EC74C5DAC762566AC9954F3699C4B
E23EE4244A76684DE444A8B5E1B437D934C005321DC6A599CAFB5997D5A77B20
D702EDAD43518F2AAF4D31C633806D7FEDDC4387DD4EB828E9C26AF85EC9C850
CA2E91D2A89CD360A95B25207AB2023A9D860BE0434D3C426A71DFA8CEDBE3DE
4C8F927AEBBFBC5B6E30D586A2DD28668DA7A60C446E6E7ACD5E15CB2104827B
60B86EDFE9A595ED91541B47EA1D23F05440BE467933216C0A17193F829547FB
DB760A694E63171F7CCADD659E023677B6C9E422142EA732B3FD0DB80C421B10
E096DAB45662B19BCE708F47A49C458F7A4D93E6230237AA0A142BF88C8C80C4
2C920F0A78A29D8B8920635C97A117E0F66519015DDDEF46F228FBFA9A2B597E
F2230F102B62F5474685253B3F4D79F949F6C6468BBE43197E144A07BB163A24
8F9A2052CB8980119F3F2EFECCCF283B43EC5AE851FD964ABF5A25BA4E067180
41B73BF7154F5530E48A620A297B211C3996726C2BD5AA99752F72A9926BE214
AC88BF14CB44C210BF44141C72291EBB12D18E420A8C664C6F732F6D1E62401C
3DAB3E3D1F7E63DCBB389F1A8CAFA41289633BA01D275A4878C535AA80B3F617
70D3FF36D19AB569AD0865E26C9F0048B1100E26FB7D68D16395D93479B3BD86
6A4BF33913DEB54B49C133C73BCCC0F2F81D7ACBBAA1B71056D018CA5CDFEF0A
3D236B15BCBC0DB53FC2C548880DE426AD26EBF2259E03818F0F735BA0468954
522498086CCE1E87A94356682B8827B368FD56FCA8E01B8FEC2384E26B988036
7E568941123483344E4BBE07BCB511971D924EC2D0DC8284A3D4D4E5B2BF5190
8ACA6489430DC92FFFE690A0DE29319921DEE61AEEF9862229709047ED0BD0D5
7633C92A3B6EC442F4B65616E2A222233015FD4EAD4B12ED87E1056AC7EE1D4C
4D8B589A0EED1EA00FE4561A01D97635E635D27B9EB2020C908E91E81B07A92A
D544D201DE9C9E1C5EB09A9F44D249300D83C7A0C96976DCDAEDB923B0ACF922
D3DBFB6E2C4742B6590A8D1CC447CD275B15C8B8E3B1270C1BEB1C4042BBA0D3
4125774CAC77B4C773F55431F902C010DCD2B820343C96F968FAA7B781EE4965
302A8B4AD3F6880ADF3C06F87F30465B40B06FA33D011D6A6D33F60B0FB537D4
0D55F713DB1DA8A6CEBCCBDA7AA7F543872A40D0F73C0B0197B701639BCA947E
D76BC0022015D3A8B5EA02CD10C45038FC6C4E8FA08109D99FC73D616143FFB8
5D78805A95B8CB191C775A2DDEB69A7BCCCB91CDD1A857949EE410BA7DCF000B
A5716D4997848E0034288E97C143576D2AD37F46E21F017D2EE16C3E495391EF
6C45BE6D1FB3F56C8F84A7A13CCCA4C709C013AC47E2372B4552D66D524DB3B2
A8D3BB4E949A76A9715CDB9552BE2C55747D7A737FF06A1794DA3D9EED5B06EB
A81174E7FB12273E6E9B5A0507CA54A84B564CE9FBC6B7CC3667DE625CCB4B03
843809DADFF494B6906FA7DC5893341815D40B5BF0736BF1523F30B48189F871
18D9CAC94359426F03AE236B9B02B7EE66A54803D954F7A6FC408EC625E310DA
BE13D9B99B24B3B3248D3A707DFF1FAE467DA153E1F9B248C4FF07073F213C3C
4DE237EF7DDD3CD527317F3063086D8B6746817FD31B267DD378E15FB05B53E1
B9BDC776BFBE74BBC7DD92D941DD666CB592D479A99BC2C1E2FD6AFD5FD97EAA
B614956897B6940307208321C365A5104F1AEAF8EBBCD44A60F2B9E5E3804AA8
A2257269EA48C65BAC2E7660209330540A2F86B879E1A1C18C8CF9E95991FD55
5A215C21DC2E8456BB3DE2F45597EE0694AF8445C41A12A0DD5382793F0BDA76
329F5626E6328EBE3DB5770A4C3E21341C30490ACAE63027FA30376221ACC298
7A1EC275EDDD9D7CBB6C7A9EDEADEB5E905669FA4312AB7075A9D2B95F68FDFC
97568EC6D0D3A034E3207608B8754F7B74AA8DE3B033E16B17CBDDAED91C7E93
1C94DD06E27179C62B0EC1E6F4829B74A341E6D258E5D2A5483A200F7CF92D71
DD42D44B973AD94B63B8C04254AE7698444D303624FEB31000B530DF121F8F41
E58435168EC78444117FE734A959750305F80A59E851FD964ABF5A254606D3D9
F11A7D2CF95D913BFD238E32A2074C6755EB6518FF27E67EEE2AACD972FD5DF7
8932BA7924543317680052CED9038CEFD4CB025C63C95E789382461E84C460D0
B87B60DC612AFD88D57BE961724C6F5679589C836FFF832F5CB9AF3F91200B70
276088B489D0176963DEEF031CF9C7D69F7807063745705730D49D1B6F9776D4
F00CA12325DBB80C3B25D069B2D7B0AE6C673245C688EFD2770649F36BDBDFC5
AAAE4AA18B106C43E65C93925D9CBA13563FF9BCC0B4C20EADE38DD8AA492934
045E4EC71C98CC4489F682CAE39E3FE7543C5392CDD26DBB0B3ADDD1657ADE76
E9E50E17C3EA6A106B7CE738518C299326C82FA229D61C1DA78B0DBF62A24D47
AE5385477AED90C94041CEBA92D692FDB946D81E88F2A0BFD5C81EC157B1FEDB
13BEEA0264D39E3DFB7765742E60E70E5C58503A8C441C04A64A0C41F8C9F348
07DEDDF20BB1BC327346FE74C8B42C6EA815E150DE0739F413482171527DC8BB
6E8A106BF35F9060144E812983C01D2DCDA032E1396AB12864F6E2B0DBCD892E
146924C758EB39B567F94543DEEBC08AC64DAD8AB40300AA832FFE0B93BBB285
23001424BE631921CCDB5C585D344785274648B6D218EE5A97A36A0FCAC8282C
A19A33F4F18794570C0036D413CD45F779A7267C0C4BBA87AA3EC7166170B80B
7355E8025D1C5FE1C283D4C056CE60A6415C9AF0F31275DF573E48201033835D
18ACDF7E2D344277E00DEDB53F6E2B4D02CC4B110203360F1941FAC5C151BCB0
73FF6966BD93241449667E95206B16E8AF5B416BB5D64953720C98D0DF9E628F
EEA3D9137DF428A563CF4C5677613BEA94BA01EC0344D9F1EC840531381F8800
FC7ABC5436137CB6E96E88A7A79AE3E5A9D013F904770B1F2E9B707453F8ECC9
2EF08668C26FD29AB6E849715BFCFAC2784D902D6D9A88C6EC2B214AA99E1741
F6262F917B629295DA2E8251A291E71F4B71945D3F0043F27F1E73B67016A505
4E49146E62D90B91E73A2AFD5F8DFB8A676AF619E042C578EF66E1381BA6D7BE
4A082C82E1D52D2D175E22D4B5DEC2A17886B60100BDAF42D6303E71757A8D90
EAFE2315EA9C75115E08CFCCCE2667DA49B77A54FB455C41740DC01CF8792344
FF869188C14C268C3B7C0113AC260CA7EF55449F777294A5AE0C4E5C2A6B5DBE
5213523B863C4AC914313AB45518649AC4A3DFF807FC5D5BECFF35F1B5E29F0B
96F6F54498EF931ED7F5CCA16687EC33D681D1875B1DA5B591174692B557D7A1
E13FD1EB9CFB72156B8106016E3D49C2D5D9A5C8F44268E496316C1FCC57968F
790C5E7948B72C4AEBA232C81249255D1F4329FE92C8C5247752B2945D2D7073
FA96D9F7A5E8A9C1D5460FE747D637C095D3A56B3D31AE918D4550C09E8E89E7
C834710685AD77CD51634BA15620014CC1C4571AEBDF9A96304B33046CABA812
615A9F855B235B64B1A23A802278ED6635F3A42DEEE11D4263D8D466B82F3F53
CE916B65496DF9FE3E1C4CA1744CBD528FBDD02A5D564D59B23FDF9AD9CECB2D
86E4739499326D1B216F57E649801411B93613AE10E6C7EC319C8DB39FEEB1A4
83ED40E46D101D182AA65AD1F663FB2872D5C12771C6D0E14A141A52D9465223
B3ED9E26A5DB134F479D38E0ECB73664581BA1552F680511B5FE3EAA75A92B8E
5D150CB3584CB2DDC5796F17B54A16ACA1318ED4048DA2E9134E43358A1BE68E
4C0DC54C87637B754D815D79276638214467316210E275C4AAC7931329F4F5EE
62332F12606449ACD326A7D4B6CE7462CC6F76DC5822A0AAA4F76DFBD442B1A3
FEE883869A4478FEC898976D6734B7C995E8353CA6CE28B8EB8A90C87CB9B8C0
940AC3209DA93EA653EC384A8E42D6C2DC26A78D6571BA12E06DAB333D24CADC
475A0082954502887B4732C2B47F2AE2E881E755D62BF45FB7F79DC36C582C27
4D00747DEC69D0367FA04BE436D9AE303D028897CFE1D4D656FF6B09BF829D21
68CDC27B077C1A3E64030D40F357A595104A2AC5D6DC1A665719DAF2D483EA1B
294EA5D416EDFD7F390EE3B12312F51B3512559F1D609D0ED4BFCE77FEB6AEB2
7F89F410C8CBAA8F91583D37680193976D6C3705F05C752E2CD594D05B15173D
5A85A7C58E045EFB7FA6F55790E477C71A2F7CAA6DF3E02D22CDDC8D8002D81D
9C487AB4A715E0EF9177052EE94549A765946A8B3434A89A6247F6776FC13D29
ABDF15BE75966173483C2C93A8D637174260A2DF58C6E7DD62791E1830108466
254572D032CC7729E6FFDD9A90F880143C0F121CEDE3AFB2796DC14E05E21ABC
A7E51DA112553818527039AC74087AABBFF223926CB916049B1CEB4F3A3D2E7B
6F9559B3DC84917CA80C31C2E9C15D865ACFF7B9589EF18E1AED7DF8F5522F27
357C59D5262F7C99352CFAE72BB4CEA04252D710C3ECB18967E8E6D5F7846746
906429B350770BA66DB8665E5475F9B1C2C6B5CE2613FB833E084EF6168C4D50
F41664F6B9F81454C9E5B46E027897658FDF3A9AC2507E2147EE28B9D9E57ACB
4B26134B7BAA1E0D8A0CB6CCD9DC6C2638AD8D466E40C5FEFE671B86361D7E61
BC9301B8574F32C1FB4ABCB0F054105DCABE5FB69337D43B5F8041565448BADB
AD38EB1FD59613BAF2EA2AB937056D985042187DAF9028F365465B8A8972A5E0
7BAE06B7EFD6511117C5AFE08A8CF2D09B98B2CB663300F3E59C5F20EC407505
7A9808E67FE0047DB764BA8D3BECEB718B49F28C06E860468A29335B1ECB309F
98D9C5A45218CF06AC6A5DECC4CE1195D89E8F65C4C8F1711A4DCFF77C0B4770
8C81F19DEE6B8047EDDF8AD9B73F89BC7532278B0E2224FDAFC638CD6123F983
04954466C7032C6FD31C1182B01B67EAC31BBA1BCE3D06A02E8C72EC799C8C80
EB5CC6194E2C471F32A0CB11A1E708D4083170B29C9974EF1B6EAE926F436C08
00124293AC6F9CC95C5500009F078CFF7F00FC3FF5FE298A48042D5BEFC8FE20
95D7DC319BA8A1038D30AA557E85F214952C0686FA95E4D0CF8D9B3A81A90363
FCE9835D617D6F8A6C8E27206BFED8EB3CDE280D81A277054D0978F63B6362CC
B0496438741B081C0C30E70A8B3C0F8E5087F3BA20C24CF968810067A43B8CC9
18A4C2577274DB0597798F3A00959066342F7FF822BA1ECC9339A974C69ECA7A
22ED41C740AC428539CDBCC553AB595485C71E4068DF0A08DE94FA57D24B412F
DE89C9D0D1B79FCB833E154317EF15DD4F121A5EA67D57CD9F89D3B8FE28C59E
2F62A672C043A72B01FFB5616E30B5CDC42C9B0CB60A88D81DB881621EAD3929
CA33598B175719333CC57F4BE186FB93B800E2928D7CEE240386CE5670D9BC38
390BE7F6F97646B12E82709A0325FE1B3E3D1E390063997DF2FD43E993BD709A
EC833CCE09E4BAA0FE5E08AD4210A076497D9E260E278BD3482CBBFCBB1459F5
D886F07E5A6CE76B341E367C98C7C84577A93A74427575918730FD1A14C3FAC7
7440E9D4272A3051DF7ACA92E08417D7D921DC632BBF73D29C762877B29D8B9C
8A64E0F50209D31F349F0A533E41DDC582060673605C54FAC8D08832C859F915
3BF74E8FC676EE5D7B9C55A4AB1DAFF4219935BFCB2E2FECF757FE7DF4FE00E2
93EEB5F303639584A32D54C1177DF9EEF1B911AFEFE555EFD522B807AAB2EEE8
696D58412132941AC9EA75ED92530C5DF339535F9B6460D7FAF7E3FAF4910CEA
99EE04EBE92CB052A133885BFC012107AF3AB25476126B6F2E9D2579F814CA40
63BCC8EE90ACA916B45D609F1DBFE3D52242CBB13517FA79535312524927D69C
A604AF73CCFE928E92132108122762E0D8428B0F9F4F8AA2AE993C3F1EE896BB
E7AB8209568985A61B802E04CC3133492A12730537EA4AD9599669F4EA707E80
B1D7A7C7ADE9F5DEB6B69A36C7282E4420BCB33FB67F34B3BC115C638EAD2FAF
C82471A40754C4F51FF4FCF6D7E347A3168D825ECFB5C29BF89D04202ED6B290
B78CEECCFBF16E2F855056D2BC26A398EE55513566DF0B267792967EAA2F7158
56682C7EE9F15026DFDC46285F5ED848FAC1A133833F8498C2ED6B93CF62F853
E7BAB813C1B4B5E6FBB8B92F37AA01921F48C41EA970FE83EB160ECB4DDA7E76
1C43FD7CB786AC8793D74055BD031703AA22449D8AEE28F75B41FD7860FCE9F0
C79E95A5B0DC8E5FEA2D09FF3415F7D4E90E305716945DF7965A35699E84DAD2
056574F71F7B33321D69EB5E628B4987983A7447A74E41AB16AAA02036251E2B
B78798AFD23BE9C44D8F494CCF54173DA08E888B99D138DA348AD00454FA2A4A
18D74B18753D8528F4D84E6C53E553A360E9EE9206CFD2296613C1E6616B55B1
147525E3AA6CB4A418C1E83CB9550202DAEC6FB543806FC146838FB1DC065043
D16AB1411EEA2D09E3B25FF0E1DB530A6E432734CAEE5CE8414A848AD6004ADA
AD9325D8C5A28D9B2EB5A79ED53085342A87AD49F6A57E035C19D434FB5DCAB1
F03CEA457EED5B5D14E1C6495E2855A681E77C95E699242B1AAFACB57AFFA46B
D92BE09489722920EC6D1F349D3BEFAAB891874817C38854E0FC55B9B88B200F
68D944F48A51B3E239B9282A896F0E32136059C08E303BC568288A86ED886B88
86FB9E418A2BB03FA22D6A48927A1A7D1DB20A811B1C9C8CBFD8D15A24748DDB
536C13057FA1FB79EA931F0111B709A85B07006F3993C8BB2F61E5EE82A0ECAD
463D1EEF1BB71DE6C22120B8F29492D9E579F930A7309E98A03C2F79DCA6E4E0
09E2338D907EC65C181543C620045D0DCCCFCF30B9A62D95ACB04BC9CCBD0478
BBEF67CD76F21677D55C5608893CE6B9D28D889A2484F31A2FE5C7CB9609BDEA
120699D47D88B18949FE883215860ACEEFE96E47092005403FE9714E43BCD3BF
28A220F69F2C939FAF70599EE7D7DD2C701D43FED6C9DFDEC5CBBB6E964FBF91
62D07F9912651B726A145339C286D5D8277E1D998FA35A60D3C265D03A003BC4
B86CBD569BB7053E1B4F58E0998F84BC5754CF8B5DB5AB4FF3CC2E842A8AAFE7
D88098AEC1DD8737DC6D50C10B5182ED69484BD0AEEC4C81D255BED8DAC247F9
0B1739F15131BDCB002DE350D6417AE1960EB80DE4445D5CAAB5964F58CB87F5
6E8EBC016257E8F4697E576D16C3C43750759ECC43AB1574E50A79A163CE7DB9
491B25E2501F0C39456DCC77C68B1CEA895C30B552B5075C5426C4880890B4C2
2002A4A014DD2919641B0DF765CB5D6DD02AF76F9846D4511960E6251982E96A
09C3581D6392A32AA1D37B49A5BA31D1E3AAB31563B0DE91B3B15AFCCC297788
5F445082E5808DD0C52A7462DD5770B7F979A567BAB37642827FC36D4BB5E877
DAB37D03E4FAE7904C0B0C26A9F06586F1643C02F77C719F36F1E2656F5EF060
79D7CF12B1356275D2C664B030D92DE7FCBB5A090D6B99509794F206D951766E
9CDC1DA90BB0203CEB8082D11A8F4DC472F9EFEC0D61EAF3BCCA838788B84B2F
90CD6E562EFD56CB11C12BB81FAB0D65DEC2A252DC8B09BF49F37857ABDFCE3D
BD9D6AEA76451DF62E975BE79D7DA243126FE3BD0943821E73D270CBDB5F7E4C
2C9C8D4AD18AAC2FC1AD43ABB601C277B56114AE084FE975679E008AC85614BD
60D2E9F9DC81B1016EDF4E71FB4E9137F2D03FFDBA43BFD810544A103F0D53CB
983F9BA5E7C49FC89B10E9FC767E6BB4863286C1BFC0988B53151CF5589FE68B
29179A3E3C66E50577C9EB73AA3C0195BFEB85CC7AA6E861AE2512018427DD07
DCCA592D8E9D8C05B11778257A06DA3DCBE77F5D102B86AD68A815953562D337
837D96D935CC355FFA8641B4D7F01B9CD5BC7A087E99D1E4902CBB38AF4DFAC9
0D67E20BB9B1D94CF9FCA22FA61F3D6B9E9682B46356200BACD8C98679BA65A9
78B6BD6D691AC7F72FA805EAB867F1DC48FF55FD678236445E2B7A04F6705D0F
1FCD9028F78AE1EFC7ADD58BA85DE73785CE15D314A5973CC5053212644978F3
280C390BE641383FE880993F85DE51CA919EBEB459B1698631BD69B6FF32D08C
BBC4B7CA9869A9210680F01A82794A261032C0596461A453E00B8E4AEB65E2F5
DBF893EB938D0E7EAC1814D4D4B2712229DC622C38FCD88CFB51EDBE74591C39
5186C6CEFDA3F530CFD1BFDEBCC3A121BDEC33E5A9FA05784C8EF03F8B361E34
9EACEA2263CECDAC76A75523184F8188569A17A0777D6FAD98D38F1FADF0F25F
3FBCF2089B41EADC1EA368C41C2C07E5378B12A51BE26302B05AECD35EC5D66A
C681BAC773B81DA0566B3BC263484034C115108A189D9955E0D39499FB9F0158
E71567866ED045E949E25F10F24840D717023A577E1B1EB8B0595D0ABCB08F7D
ABD273A6C5FD8C2BD26471F1FDA405FDA0C1CD9FD3BB1A9F15953DDFB35C8A0E
ECF031A2B45AF243FBBC002BC6827AD09B819A6D6AA371BA533F453AD3EFFDA2
33AFD97CB0BC41276EC50C62B4303943FA8E8EEDA174CA001B3121E0BE972910
693D76E2FD73C2719B12D6B2EAEDB54643E94EEC556BE879296E1084241C2CAE
935A47A77B1CEA2158DF6AFEA8CC4192B22EC65B85CC9C953C007A2545BFE653
899B07779B825EA59A1BE33647679CBD69ACDED586964E7E8506D07695C72CF0
03570B8B29EB930CAF14FBAFD7D2D3C997014861989FD7CDD555C665CD362B2F
9737D19F593FF004E9306770A16DDA16375E957F6282F13D8D35E3C56AC39DAE
B592D3A618DFC3F6153EA621370894F7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /Box put
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890B0BBF10075D53739F7E84CEE95B40C3DB68D5
6E9847E37B7920412068C3DE2065A77281345980956AFAD312499818890B454F
5DD8C92695818BA4DAFEBCDD4D268763515CE077A64C5F3AB384A6DFD7DD9641
FCDA0A3344B3A14F82D478B4BE7BFC2822A4D67AD3FD07B11589B93842066528
1E51D954D7E6019F6921DB9B00ED303B4B8F557EAC7A0B0340A268B0DDB25B3E
BE0982129B0D3416CA5D07ADC689CAA181270B8141F9D0F60C60F156CB305E5B
E71D9A5D5FB3216BFB66284FCABF6D74564D1288EA99D3FCF6F29C3AA690A596
02C0AD2BB29A2D457C66031E5571A1454758212EB4D053F4C28FF629FA94DBF2
9677AC4B92C4DF5C7FFDE31A8F2D6F9477896C11CBA890DD464C9231B1C350E8
E8CEE17F2E0F5D10416F7D7FBC6085E9BE09E692951EA7B93A9F49CD458476E0
A380E1D122F275093ECFD398FCA6D714187CC12A2B16318F9E1D2B0E9EC134A2
C4D2674AA68D2E7EDBCCA383
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE50715EC09E2695DEE674510EF3316D5063189700AD11B06
A9B158A5C9F8A936CA75D225105149EB6052FA14D619092D73F356FD3F3C3FD5
D1E94DB7F9314D07150C7E075D88B33AB63819BF6541E7B7F30C7626F08BA3D9
C9446A52614B36A286CB84C14FBD5C09AF84E16A5EEC8E9AB476DEC31843EA7A
77D900709AF60D09B87E6267D000C9A961BA44F2B0A5FC7CCAC95D93BD7A2C0C
6BDEFBD41D7DD1DB2BF35B1BD23F1FF599194A044AE58A8A847A0A30A4181860
0D7A52B63B131A1F71845CC5FB1EFA0FA399B62F4D5CC32B5445B1A53170F9A3
7D5032501CA2C904FD0300ECCAD06E7BDFA504961A7DBF1AB5613C04521104E0
141075B747F32973FDCC7B6FF4DC48DE847AA47FC8A562E91B485A41DFC63617
3D5D9EF4C45B087BC34E8F14FCED37AC02A73EDF714E0C8692F37CF1D7E3DEFD
43B2B428F852258DEBEFA61BA82047BD2C432A5BA403904CA67F10A39001FE2D
8C879D563EFDAEF6192CD15484C142CDCE88A8F9A12D46B8FCA50DF4433B0B8A
ED6A63BB5AE222712FE35DA2CDD1FB80EE27A62221E3BC0386EA55208E782AC0
57FF3D28DE34FBFD69D7B90DE89F31B1EBDAECF91FE83282F55F8E9FF435AFF8
3A7BFEF9BEEC854EC912ABBA3F8F23AA05505670EBC3A55E5E44DF8F5E397156
668D902BA5011DDE2CC5C2432B5C0726C1E397C614FD4785A66DFC04FBA1A430
5A454573164C8530B7F87D0A87D9C2A2B7BBA69A5457C0CC70B58A5018F20130
4D0437CFC4AA07342CC4CF7E8DA48AE10F19464273ECAC6A6CB033D67E5BC790
001359DF6DF52D94AF9716523A8C294D6666A72E855D11A4216B864CAAE1A50D
0DEC12999B90A3A85579B979816BDA604226A3886F1422CCA06412E28712CA4E
8407FA7E7A1EA004CBF44330F65E628ABF1159B244A80957D687C76277F092BF
A29E28A2C8910CA6359948EF6264957163B39F9D5C62A298B8BE487FCD64E486
D2670E4D310F8BA9CB365CE886158201B6BBC5C90C6F35DA7444346EDBC835C5
65EEA1C53522EC981541B50456D7D164741286E4BF968AA56424B1FC9C028F36
C271B59DFE9A0958B957606C204847667EBC2AC0502E082FA6A89417D058BF1C
490B37A776A1105CE10D8DF9752463E3291529A682FC502A3BF9D504E5285C2A
65E9F02016A8EE47652DBC5D66F6395BDD86DC63C59FEE8FD7F0AE50CD566DAD
76CED8287DB8D07319EA378B6548019FC70C420B3441675658388C489A3AB5C0
64A764255013374B68132A3057A54E789156AB899635C326FF79173DA22C4248
0ED9044621FA74962A3BD9721AE58D3680065B439C50926149009C25B3234471
0A5523B9068BCF84310FE909E2DDBAE029366078E9BAEC339481EB0C05638723
28C4D00FC8C76BE6A2BF8453F5704C484D8A86D04385DA63EA709DB9EEBBEBF7
97F22878579A9AF5F7BDC5AA6C36A5609864AC63BD3E7A031E54019A33528E62
D8FA3A8278FFF48B27AE075D527CA17462D8827E2642DB6D53B0E0292EF48AA2
D396DEBFB326213AEE147758D835205A7F4D08C4547CEDE8B83488F3F03AC9BB
1CF2A3A2A4846ED7E22C7C9E32437BA03314F603ECAB550A398F57DC0BD8593F
AB2B9042C02A6FA75171300BEBA6CD37AFF9BD9F4C10B1CA11964091E886160E
90168F8FD9742D861D4AD79A0BDEA6C38C85475E180CB940BD31523F1F7F3456
C6565A3F645F3DF5AB12DB661C9588D7AF2E256D259422AF4C99BC2A09360041
B06138D4C8AEA57BD53674FBAEB1FE850FB3D02D0B1804227B1F17C161C5515D
DDD72AB135414D3B3F03ADB50C3296B8673A0A8297075CEAC5B010D38B4E9EAA
71253772733EAABEA0E85664D9F2EDDE190A702B047AFF81F9EDACF38EA9E101
90FF798997524CCDFB1B5412DFDD2B13A6873E34ADFD365E1B7B26BFF38DAD12
FD541AC6E84D9B27F85851F21A1E41CB9E94297F6223B165DCA78B97CEBA942D
8D6A681D267120DE544E8DEEF189473A9A87C1E9722844BEEA7EC63DA8E972B8
F2F1EA61DF7B14F728BEEF471064BFB29EF1F155BE7E592654E23426AC484039
DBD0D8BDDF32403DAFE9185BE88FF731324B742F6D214CA18F6A16619ADF993E
A3C29EC1083D844960917ED7160C40BA825AE81BA4851446A36E44730FB1EB74
0DA61FCD9ECF6E93A735EA64D3338684D572790908DE593D973CD71BDCE3A65E
7717F820BB5F883FC35B1EF1202A0DBC5D853B1D38AAEA706D2348D5678021F2
7D9189F18E22E547F3BFAF5237B32BE0F969439DF1AD631557A144616EA154C0
6444C9A612DB5D71DEC014DC23E0E6F24D6339DAD688554EFA8D7F2F1F3C5045
3B1F3AB23C5A41FCE22EBE6CB5F3FA040A290A09AED91A8E123B272EB9DAAE37
5BCEE83EABB1EF6BEA4CD0B948A0E30858731A0920427696DD9ADAE400AEFD16
B09BB1ECBCF8A18BD2EEB07063BC63BB44151A85BB8098D466CC0E7DA58C97C6
DA98946422F8DCCA2C0491E0BCC5FE747846A5C3B4B2241A393220E0674CDDD6
156F05E6EA3E4713711BC9ECF8FCD18D26AFECED449A89C0FF5850B6AECFAA58
4F69893F112C44522D60A8CBDB66779B82CE5F9EC0E991DCE3C26EB7875A8A27
449DA7E47C3E4161DC2EC748A8295D20
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA853
B843CABA76BDE9582090299F423519EE3AF8F83AE7F7828B314B6E36E9127419
F274E9FBF5622C5E48D7E95664D6C0C1006661038CF2C93BEF1DE34A163A2C86
693A13F4D0F052D2E183F36401F0C29862BC1B36A086524F76C7EE2C6D436A23
7009F146F1756DCADD3F70C51FDCE610E30C0F4AC538A2703423A07976ACA74C
25F4CFD6A92969E206375FB0C672E45948B0E832F2BE688EC22FEEB3E06BBC3A
272F73081A30830AE4214F2F029918FCA40BAEBED6299EDBECA01E08F27E5627
F53BC56F4AE7CE2D6273B27323AB829E2D51672A4990E3AEE84331583A99DA4E
63610AF8F10C50FE6196E3F4C1E4FC9BA6BE0ABDC81A0A7BF6A5792A97BD0A7E
7BBD31C3FDC01D734550843C8D84C6CC0B492CD1A6CCD57428F03A863E959C77
457D401028FD00FFA9BC422FD09D8B8A70446A61CB256A2FA0B59A2646D9C5FE
961894DB8B315C52008B4416AC35439E010BF90E43A05FCB2FBE8E62385E220E
588B7FE5509F1BB71150E159D01D24EE28008D4213227FE9BCAA34364B1039F6
BC142AAB19C8E9B15F0113781DF9C9B3BC145955552A901AEBA588D39D7E87F1
CAF27D315E168807021B0CD1B2CE13B611A7B5FC28DEB4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE27995D78FD99C5784B2B7C7C509E9B93BCC29
35CD2714C50B246A7DC70C99B7DBFADA1E01B81749EE49A70853CD45FC323019
A45BCA3DE39C3E7618C6322D264556FD657D9270933D8B167D2575CF146336BB
1C76735F3B09470E40B0624E52F21809704749F6D81E3B829D163D9F61E070EE
D8CA803E56CF227F71EB8061B83E035C7138A7CFB6D6CBAFB766754C0E8934F9
AB738930EB75A2713CCBE333CC60A6A8F2BFDB043ADC0B94FA3370BBFBC61D7D
25524B08C70599D58E7521F58D26AFECE212309BD7BCF62735379ACF3309DDC5
C3F30DD7D3A37804BB23274D7B30DD69E1B2C3CA70F2F79FA29543F526BB808F
04609B43776382C4389362AEA7FE4E03637B4599D176F103143DC04D5B5E53D8
568E7911839EB05C8F4A9E9C911D746C4C8EBC0A4E6AC3CF08AC86548A8FD6D4
7450B1FD87B119E547047F43E9CCDE1C1F8645DA03EEB02B27E36BB6C87F39D0
505579B2D0FF4DA9D4AA971DB4C82693DEB59FAEB3A14C1547C6C46C24FF3513
EBC97357AA2F25BCDC92F98CFF9F3D5881095B96FBB30E8330499FB4803EAF74
920BAFB89889071729076D755021515BD8DE5177013854B10911605F872456B8
F504547AE968C323B85DCAD9AAD5FC33F29A921D427EEE0E098E8591EA7F2D7B
A5CD8A91C01AE80B672831C286C900AD20776B50D4D2004F7295D860A2974B73
A9E8B594BC8BCA8356DB43399E6A6918A887A64B2EEE98060E47C0F371681713
13F92A306D1A7DD5FCA29CE223138B98E6C6BE9F3B305E2E4ECE098AEC270F11
2CADA74CFF4BD78C5DEF4354211E3953CD7AD90239C1FFCA061A21652104F54D
4CE1C6B388B901F937A299F65C3217180D4BBDA87A96F4C31014265EFD9206DD
DDD45DD3F56823BF8236F0E6B94537D9CEF904EDEC7EBFB0E60995CF6457CF0B
1D76EFC8D22A8E991888FC44FF9ED2954B7A9DF5CF6F256C8A86C3D98CADF1E9
24E6C6725EDE1262199758B2B070504BD81147F35D8989D2CA44BEDE6B8BA09F
511388851B9D9865887D4EF8AA7AE6AB234B252A506EA2EB59B1AD40A04BA972
EC6DC7C9E4ADEB7E40045F10F38E0C8D50CD28D96A028BE7C67D1CD148404CE3
0DE9213AC26B82EB823194818E6DE249207343C37BE9B926EEDF21E1D52251D4
37D555CB1FEF227CD15A08CA2A245C3C6508DD3592E809E0C72380B92F4B946A
7BAF34835CAC375077A843F61978AB4876871FBF42DF8EB5F877033452F08D41
970883CD836D1668B85BD642F7F50AE117B3ACD1A1372D5D4D2555A2E8E23E29
D8C8C5F39807B5A01188DBAA07A27A116C80E837DC740E86068952F0A57E9027
C39A603A4886213EC782000DEABF71EAE1B8944E2EEF19E1F7FBF442840845EE
D13FA9B4C5CB1FDE6F0DE20AAD69160BFBDA23C2D29311C4F82514DCF27C6B94
A8E727522E182DAB2869CD2C2B0F39016EB778060F35A6FE085A1BDB04A65CBB
6605D4D72E11338D87D5B0283A4B81EC83D03F502E7DBF202BA558B4EB271C57
922F0CF3980A02A40CEB2FEE42B631C999B71EC234FED7B269E5D91564F0AC54
D70F8EFC63B94F73ACBB4CD279716F68783C493794BF12502E04FC52064E63D0
05F2034A1E7E4192D1193BD94E99C0CCF702D9EC100066E1490894F5ABC92A92
C3F42F4101AC88024884C018C7D0DF65F7CEBDD46FADABA26B5433D34C2AEB07
6031841EA02F1C9622E0B64CD190A4AF3020654123563C5D6ED62F112077A1E5
88A8C8499A8917CAB23F00BC124FD93096D2603BC6C1734124CA3176AB14F488
26ED2E56C67571DB18177A07E082CB873440C4648D3FFF06A1499A5C7EDBE172
1759C1BEA3DE43B426C5E175B059005BF2911E685D076FF12D01742E9AAFACF2
CFCAF0517858C28A24FFEB5A26E46BB5B788713FB8009CCFE62C17E001C96636
A8DC58B71D4BC720F615D2873CD11E06DDB3A7788888A8E713D0E82FC861C0D9
ED98E873821095C6BE6CA909BCEB6C9BB1B0730BCBCB20E22D06AD1AAE225D51
25AAA901A78E86386D29A7CCEFBAA8F35B4813CC9D289E5244483DFEC10FF237
E38BC8E19B81502A19E0BD113AFF02F4E365A4708189A7BDEAB2D32A6E464AAE
B3505AF669EC3FE5A7C9320D907438DB23A82D8CB9777BECA40890C137564EAC
CE768714D7430BE1825C90D88DF40E753607A06AFC0046335F97A2FF20EA44F7
94C1DFD6B105FDFC6EBC6D5745C10D2C3BD560C939B80707B471D13D7A910F23
91FA6B63F2E6A01890368EA8F0D42E7A93B343C664BBCEBDBC0C99138A50E5C0
F57977D929DC9CC159568FBF5523D79229E9BA352E4193A44EE745F76035DBC9
34588B2B8FF44C8368C9C69AD17E91BD78559AD4BE219C8B110472F95FD5CEE1
A7EC2A78941AFD0B102C6CEF9D5BCD4C4FB87316BC327ABA5D5F5FF14BFAABDF
9FC06879D91DADEAA25F850083BE6CC26AE7437664ABB66CCEEA19D0BDE898CF
328861C3CB4423FD2C0C1AFA95A6195FEF30511D5C87876C863364CE4B089A97
6F9C29A14A61785C42D2C746A98194782D9A504B2A0A92D4E4B5062855A33404
2E14145F4684AD22D461E740FA8DD232D18E559DAB50A977CF474EE1410D7097
785D120CA5C6E051D096CC40E931BEB074AA9E32BBFA361593C78D0D2EDCB1CD
D560A14E93017099D24663633B06BBE3C20A2718C044731B6DB8007749D1B605
F397413DF968722DC03BD138B0559D3E5887B7EA9C9C54F8335F55CC3F1B9135
C70CD0214CF04A4EC5AD120D492F25CD6E1E80CE87C5709112938ACF9BB2E011
87FC035CEA0FD5C1147D41630F1CC9B82B395BDCE1885A1D5F3441B03AC321C1
5CDE681DBB192993B553048C58C55F0E420DCEA46CD16B75173C5D37047E511D
C980EBD803E01C35504C4092D93AE476AB15324149043E713261671835DDF160
4B8DA000941FC5F85C754D5132402A0A94EA3D0E37D6B9890461CF1C65AB7C2E
E42288BD17DB983600580BB1513D30983C4FCDD1836FEDC80308316401D8B181
EE2A3B114F68DED3488EB9ABDBCE6E73EC5A0AD42D7735045D594C43A33EA29C
BE2AB98CD0305DD935D8F0F5EE3205A7576650887883B3C9AC23E217F48154FD
6CE1454F09486B47A5A18DE65034D0CC9F9F66DE2BE45C2D6F1AF8B10F578B9F
F66D78D738FA85FC454C23236FF4B665EA0E6210060F6439E9CCA612DC7ACE7A
D12F478F25D40CDF7D23E3E543B75A97A7BC960A7F742A2C89212832C36801A4
C384B89A91D53E0CD886C7BE0692CEB0CF29D9B4BD53E08D9FC1A863599BCF9A
717F4DC319B4B59AF009C11A91ACB087542F94750DC53232E62ACC3C660965F4
5849011BD76FF8489964A7848FC6F3CFA44B7F502649EAD20FD32FA1999CB88E
A646C764BD2088A3EF00A4F1862F2CAE2F8B6A8DB26A1287AB3DD941A92AC57C
EC6D4CFCE0ADFD99BDC3BE161F4C1FBA9B854899BDB7E9D09A1E25A95E9789BA
DC6967F96E550903DF9B81969E38FA3DE2A058EE2076C77C33A93F2FBAECA0A0
EA98FA4C3D1F8700B04CEAEA603A0833E91FB4A44AC83C4E86308B6E89C99A84
8AAAF1BD143560B559176CAF28B1D8B2C8370CBAD5873329B24AD4A743F2CFD1
8B26B1128AA48F72767FF2268BED8317FAFDB532191FA35C2984AE7C50481FF3
126BAE5309893814BA28263EB863D5E6F01C423E6C5D3289B152CE19FDB55A11
282FEEFFF3E262F26041CB1AF30804A3CC34C06C6FBA8AED582215711B0A17F4
1B505FA0B5F906C537EFCDEE4C69AFFEF89B74C5B83E2DEE7642AA85B1615F9C
BA1C3C3197223C98A1ACAA495A6B8B8F1919AC158DC63FF4600FDF993CE8D2E6
3DAB7E352BE200322BBAF6DDD2628694612A7790EA8E1836533738405E9B7AB6
9DC77FE9A283B3A8C6A3651DE8AF71499D39CE0567AEA286091BEA9D6A443A5C
D35747785C433D4E18A02ABA38F55742DC36E4FF07A656AFDC3D0A32CFC097B0
5F9D90CC4B614AE7F58F3BFAF22EE6821291164B14DA11FB16C0E671A6104082
94D05830E44ED3E9908B59DB3B3506C60D3F766ECE69AE23369AAC3B5951B557
D62C7728D6E3F13BE05939C2A6FAA336EFA57001DE299223DDBB333D71003681
B4A816B378AFE37543607554F1F1B427784EFB366CBFF1CD7CD5FE3CB61842EF
56F134AB25DCAD2BD08AE61E233FE6FA79017D1883C61EF0334681CCACC5D024
F39309DDAE717CDDEBF80C88974D717C4539732DAD1226FE504620FDEEEC6266
41060E55159270B4794F9C0945FEAC295D17B4E252D015910B847534A519CFC3
2D52169510940A9E9AD636AE141331BE35D1D5308C927BA3940B773F20E5B3C7
813663D33205454A1A4B2D9173D593615C4459845E1AEEEE1ABCE3E5328D3F81
11610DB32C86FF6F9DBA1B8D6BBA3C4AF64523F37F176F3256E298D22DC5F1CC
F1A67A355219E2EE13D5D6369F656836EE0A77206E8236649E81A1F0E02D8D3A
3C8FAAECF7839D20329CBC5ACB43482D3A3A1E9C3A426BC7FE406E89FF25FEB2
34CCD7F3FB3C608FF37988C7DE6A41FB1020DBBCC762F2BF24BF424BBB2D3207
9DD408226AEAA0C4DCB8DF16CC6767B0BC73EBA052FAA5311407ADDD4BDB1061
3A860B10D2C219E96E61050B98FB04425912F484F5B79B9C0735F92C1B4353B0
76358780D1547206329F302AF6853E5DCFBFE199A76734AEC487BBB103A8547A
0090F0342D48DFF9EA9821454CB759B3D82921AB4B9278E652C2F30A8A121781
8CFD111E32142FFB160DB6422A5884151A4671D631260FB1758BAC67E14234D2
5747F1E68E0C36FEFBD535FA5C64B046AA8835817140B76DC22B5453AE8F3F76
C69B9F10988BE7D061F539CC8711030D2483F752706E27D43E3102CEC57B8A58
6D3FF862999D20CD6BBDB23762249BA7031D4D97DE2280C10756DAC422F0B747
E427E5DB0B265FDD57193B8E7F00C2162FB111DC4972B51E59320793EC60AA3A
F4A3F68AA5E11F657F898F59F67E0D285167231B9F444D42F17CB182EE584117
FC81DDB5BEF8EB957F817C5699C7293E47DAA4EAD6D47F00FC6443EFCDCCACE4
627CFE80E82179579BFE305B9AA1770E8E8970E70524F9F7AE081E64AD1F71D6
CC6FF054661866B68CCC383E5403F0A734ECAD86937D32FACAB6B04F3F9ADD79
94C11CE94999A3F38C88115D6082DECDC2125A4643102DFD0AFCD8682BE5CA11
AABA54285DEB171209CC4CF8879A65088C7381B9029B67CE9029093EEBBAEDD4
403C382D29751340F63D14C45D0C8ACE829FC3034643F4B76AB7BF41CDB0A2CF
B2CFF7A3E022256D29AE0E789DBA81CB4DDE7D4A970A3162D903EDE2880C20DD
FCB205309DA145A55A2C6763E0D8BC8A0BF42461DCA1CB7E613647A93FAEC756
3535886E28292A422264BAEA373D5F1AD84FC79DE23E2BA52D8EE1B1D3F80318
8614D6ACD81856288366086F50154919E5C99CF62A7700E896F5B69456110B9A
8BBCDA8551C3C14F979F3CBB597AAE41210AA7A444428DD055DD35D91A1DD465
3800988005F542BD304D2D1798BABD827BC8A689C3C35078CC3502DEF40DE082
B544B4AF7127EA6D5B8FF5A0735257BE29E36A29B707A51A697A4D8A360D4017
19C5FDD791A1C640D47AF86948448DD00039DB41E9C5BE1A7E6BB48920932280
BC552ECD04E2C33B76A0F6172098AA76CD4660980EFA1C84D5348740B8A4885A
BE1FC79E81913524DB238155870C6B9819E5842664A4049499CAFA7351D3D3BF
FEB9A51236038D4452E44A34F25718B7158C40F12ACA152F1EE78072533F8900
CC3A1869BE48305DA62447B28A45D6F516078C72A4B155A2715B713EC359F680
FCF2663644C985191135F0156722F0BF1DFACDE42BEFD5278ACEC4A55F1A082D
537B3C1EE890A6FD2ECE0EF3999DB161EF7DB88DA4B0C592385D35F705BC2A9C
CD7351AE879DBB7FB52F25A5A5DFA45DB0FDF9B94F0AA69918932E563C8827CC
340AC4350DD2FF1A3EA9F8F3711A16CCE9A37170F0C02A9C7143D722CFC08677
6227901157114767FEC20D2DBA71C87061EE8BF523D591180D29A8F8E14A7959
731A74DC4B215D7EC095EBE86A3CB7C28C2EA7E6A19A68B64EAF236A3468C0F9
453189A1DFA55A9459D1C5B8CDC769D992269E6EC4631B1B75F7E6A511DBD978
F3032D2FC6BD54FD7664FAF472BBF13AC7F619FDC4AD5B38CE04E4C555757F69
C669C5EC403770F681C400FAEA98F62F02633E0F85A780A61DF255239F9BC3EA
AD652E6D5E754B9ADE46841E52DF90C3F0D7CE5DD684566DCF0B43A0B0F975DE
AE2F7601EB63C39D6EE8C54611D9D515EEBB7192C63D22D02BB2A5A27270225E
C95173C09068553725ABA9423F4B268C58072241D2DC5C080E7881848222220A
63605F00205C205B35DA93F4D000126B2CE72AC322B4D962537889CF225B3381
6EB449BF2C28599EB66F071FFCE3410C547A9B74D216032B72854A0B8A6ADE15
EBBFD5CD2BA9FAB7E75099FF1B68329B68A2CE587608555325EF062CFF465B6F
184FB4C37A50F08B2F1CF6E09E92D6215A5C9BE511CF326505FC5EF2B72DC40E
3350D5D5358B49CD7A1713DE7AD5B63F462A77B6268B7AFB245DE6EE02BF2A97
B0542A5CFD6CAF309B7E10ECA06B51C2717DB5BDE8E80D6F29B33E9FE12AC804
AA0C6670967F6C3C2A7310CCC64AB48219EF140A1D9A942543FDE90924C9DB3A
5D667E0AF18066F4318101305AED22847F855960CC952649426FBD46FBB5728A
CA73B436527795BAA59086831567FDD5B3BA6931468115577ABD8222985FAED7
B6A1CC891D07185666E6E74DE886BB13021AADC9950E2EF1FB69E5350B281CA8
F05E2830521A7BE2EF1D993F75619EAC1B3A7A437612AB0E8513DF8F0F44E933
75553EA81965C83F6CA655BBD1410B7E8F600CA820DF8B4BAFE515BCC974BCC2
8E06AC06B07BB7E08BFA5CA8C5EEF8386971DE077781A9E67359AD8E75DFF208
727DC428911CB820B9211D2A3C6BE6A3ED0A5A2C1C623A6D6615F24FED298A68
097564A8429CB235119311B9888D0BE96AC4BFD340BCABB8EE589A69F749B180
3E3C1EF42D935EFB4AEBC656854ADB4AED11740BA3FFE21D9099979EBD752E36
A8EA33F541256C368B3217E226202117CFBE3DE2C6DBFB0BB25BB138BBF69BBB
484DDA6371DFFA6222F88F0886C7F8848E932CF0D89BEC7E504189315DE0E931
69236EEC7E3C7AD630E43CB5B3540FE72436B7BDC9E33F6D4B2E9C167ADE4932
2A5AA48B228CF68EE0032B1968EB88119A375D4DC1AF6E4FDBB4862DB295672C
BEF8C0780AD1CED1352575A76E2FB6DA0EA3472267A89135EB528CFD0877E8D6
E31A02A87587DC7D4030E320C514539B504A31AF3D7A4DD413750FA4B723142B
B074DCC9B55E3A49B384006A6320B55B1CF4B2482D465B5835341350E215B0D5
5DDC1F173119E073DB7DEED7DC4A04968B69F792644FA8B0757303F40F4E3D39
ACE81E6816449AA859A9754CAD99EAB3F59EBBC14ED7BC71D669091521BF6739
131AAC92DD77A116EE7E81836676237F88C519F8DBF39EC35FE36E3D2577738F
553F81135829F9118F4BFE20CD51190F2806A37A4B011776C7A572D2FCF18871
BB569C2DB5B9A3347F911C34150B85ACF4262B137D9E0FAF538F8838EBF6E79A
1ADFB94FEAEC654AE20E3A693C2D57AF9597BDE85CA476C09617B1CEE6A2B48C
DEB0450B99E5E00DD9825D72B3A9D95383171187CD0E33C8CD308C436B64C763
C407654A8C311D3B3C8F5901B2AC785B222E5DE6A3FC2A9B0662335A2DB9C80E
B7BF67101B1F500FEBCC23AE484F2222BFD38455BA078A1A500CB006AA6A7D46
70530EA460E36E1FCC24D0148C458B745876A5FE5919C3C624E46C02C72E1368
8BC50A383020829462604E0B5B2CDA9CEAAA07D3BFCE05B6A2BD017FA8AB3942
D6C7B09C6F75C799F437E74F0E185AD518B7E446C30415CA18B5F59F3C4DC209
7CCF7B2FC2F789BC49E4AB223FCEEAA22FF3F71E5E5E966DFB605D18E4B1CA2F
59697989C41141C74CAECABF8616AD95FD9ED3B11C918BB38D14FDE1FB20C560
4C70DC9E98857AA358B5F754BC18087F2F7BC99B501F212C04DDCF148251E923
37D102BDF468038B07C256081F5B8F3636CCE0A293F905974A0B37050C2ABC49
F5FDFCA8BE38549AE53F72B85A6F03B58AE18FC178D906B9BF3D12A818C8EBD9
90E7A12A38A89BDAD7E6A192877F8F9B9C3E5BDF412BF0E8C92A234BC8049091
778F36D558DE72E0CF1737994854EABAF8C2D221E0081D853369B8ADE0B18E8D
FDE785893B5EFD6019A709D99989DBCD244F0C11087A077D2103E494406B1DC8
1032B618349FC6ED24879F02A9B2C2924CD9E921B84C4E6C0ED0396E44A5667B
7AD3375595524D22C358B73374B5E7C4F285F9BD614A00DE6825572189A19315
AD3E7E3EE742E2EC53C778F677810DAD0C8F97E6FC8724E306E2E37B799A57B8
009493929890EBB3F0C168479B6999AD5B3C3DFE28AC43FD186B6BABA7FFA776
83212C8FAF6DC682C841008292750A376D0398DA95DF8AA168A651403C2477DA
990FC58E46BB65AB0676A40A8130F05A6CD8D0A2713820D615BA8AE46DCDCD93
BF182F0D752C9EFA34692B1E9877D715480B2CBC1181E6A95B05E9285F173BEF
A5424D243AA8BC7E87176773002363255E70443F86B6EF38C81511BA8FF4887F
3EE4357A421575258AAEDA4B5DD9ED6E3482283ACB506A2D6812D4676F3F6464
94832C8EC9EDCF022E141A5DE5496F54EF7A0050C0D1D2166C4A311A0C52ED00
D2305C70A416567F5EE877F0D165C4D4E6B00BF84FBE6428597412531988959F
3897745D7159FCDBB10B6459273EFD03520F2483A9E7FA0938D162FC5890998A
99BFE2406581D64F49F46B2D453844BEFB1931DD7E2CE0E540A398AA83F57164
3D64D9D9B4DAB92AE722C326065E48F4EC7FBF2E1158F0535DFFB59313804D69
60AA6F0C136BBED6E020CA50ECC4A6C90A628121B6317FB8E40E11E48E61DC6D
B3FD911235DC5A823A176D8387CA420A441980D3E8666043259B63FD3CE13E54
945B0A6BCB5633B1D580346D913BACD9742B308D575A409EFBAAE5D96D65773E
BE8D69A606A70A06E230290370856A89FA8D56529F252E7CC538FD5673744947
AA98663DA46206E7A75B1E7AC0247834B4558985AF6894363B2114294E668644
46DAA5CE2591121519A4117747BF9CCB78F9F8A3F5D44459BF81997F9E7A34F8
122CF87CF933F558E4660C9FE5D440B33AE6DD4220A093310E3E65B053A2EAB9
C183BD44FCF0C480796469C934250A5CE240A1171441D03FD75811F371B3895F
AA14A75448ED483C51D41076C0FE99D988D612DEBF78DD7EE23922F1A25B3421
F4AB7F9881955BDB0AD3FDECF4CC3BFC8CE815CF8DC0CF6D4C15FC110A14C6B1
7D87AB69D8E840ECB176762EE87EB04071EB8061B83E0359E6BCF317360AAAFB
7C198CD8DBE03A3CE7728D8819BF7826CFD7EE20738DE07BF2CB6AB91D17C579
3A8F9EDA9EEE6F64F51F736877EF6935ECA18A5F86EDFFDAB7E32A239E731333
107A831FBE6A6CAF1BB6D934295DDA357EB9FD1661523AE5AF8DDD8B198AC29B
D3B8DD91D49CFEA23E7D6EE63090EEC569D8FBEAF4E5CA52AF81F8FE49557D75
B147C85088703C68C018951631F2EA80DF28F24FD71D502A040CB4DACDAE1FC4
F892A2F092A3E45C31A6DF9C59631C5811D0CC79DCC5C2D73915AB87E8E31B37
12EFFC2E3FE1428B2DAA1853FEE27EF30CB0A494BA6ACDF6788877A3104070C2
23170140A7516D83EA6A99D1E4F756CB95EA4C2F9F4541B4ACFE9CA666C46C7F
031C67944AE235F4F872E636F24BA68ECAFED13668242C92CCF7FABDDB6C50DF
2485AB8138E3D841A9D8F9F80AC1BABB452DF2ECC9744C9C500556EF9EB6764B
4F8134DC429709776F04C4D5E4D04DAEBF5C475C7C3EB2EF7E035707E5A69C6B
F3D0C6660E636D6AD25B03A443509DE32694DEB838C8B360EBFFB8D45798018A
310214EB1672483CE4272074EBD88C9DCBDD1E51AC1353F7C1C6F691546B9315
12AA015585BF3EE444A7F201B20F79ED641D0EE7473C6E028D62D173D45A6D17
B4A1D1D916165B0BFB018964439FA7B3877858BBA8A26697C5929DF8B06BE1AE
01528C75262EF6C5B60BD81D2770945D3D6BB88DA9FDDAC13FEAF57217EC230C
CA301F89A1016CD564EF2EFDF0BDB775895C4746ECF87F40A23A8418AC968F2F
B30D5073CE2A53F750B082C4A6590AD501BDF6EBCDC02B48008D082AC5C1C042
7AD24E2C9976490B46BBC2187317D00BE0D30EB7BD4463F7A542C9A7373C3A43
39301CE2F890851EB3E99946DCD9A40E25DD883D396E1B7292137CEA7B60FAA0
52E4E631CD7AD08606E816F3E54E20DE4C1F23B16A9440AD00F6BA5601CEB6D0
79BB75886BE988058F4C5A79047AF8C75EEF3919EB6C5639046C6371F2024871
88A7BAFAAD7699E573E26B49D2D3520CE7EC27EA837EDAF9DBBF7EAD3B2858BC
FE820B4633E69F61EF0A9659847F8BDCD4238F576E09B591DD088900D4590818
6740C9412068CEBAB515DF56E83B52503F2A044FB87D284384D6AD0810B5407E
1085B1D5104BEC91C4AEF5E1E1F02AC9FCD1D87929953EE6CFB6C2FD8FD23C18
CA4063BCC8EE90AC1756B426A936BAED123DB1E3297770D868CC596E737A5234
E91EA9C52A86F396EC334621CC131F067BE82B7A00167945245303572FCD07DF
901E78AA828FB9ABAC42443EFEBDA80787A0F0A9682632A59B9D4E948DAFC6D5
74A33B9CE67A5639E34DBF36BE9F30BE03B0B8FE5F8EA006251B9E33FFEBB1BD
B2FDE76B58AF101A0AD64320E0217F90916924BEAA08BF7FF02DCAE8484C13F7
C5DEDB4EDC72B4042D30D14E8F4D415C5AB2A72BC3F9A63FC847DC244530BB6D
83D8451BC66D90AA787A9A653A4F75C63447142226B4AD05ADD80A9D7DF9C7A1
817250E78AD0204C9DCF16C79410605D4D744BFBA60FC22E964CE10AF512C228
F4CFC3DD85AEE7C9E61D62CE0FCACB72E14C2FDB87A97F47425D7D53DBEE6D4A
863D81138795F521C6A95DEC14BBB3E5A8BB3613EA73BA2AAE3FCA5D2E78ABF5
0BCFF51317165C88BAE59023144D99A71EDBB90FB84380ACDDA68AD46AC7AE3C
09162E8A4FC6CD4741B38836CB599DF98A21C5245BD1435E23F7395871AD1115
8CFCA33C04ACFDA3F0707836091A6260F217D91D4EA2F2B6FB87E2E004C0C5AD
DD2AB665537FEBACD5BC7C774D53CC63B57F7C9A28A5F0EA14F929D5598F4437
AB944A06B5EEC3343EB1EC04DCD09A2A4F2CB04C74B200EE87D92C452F79B850
8B5A3F364A4DD82BA880A7A5CD59F8F6000E1978A9EBD18D33DDE269A3E70362
6A0F204E36BEB8606041ED5927BF69A367EEAB44967489A34B460172AB269789
DDA62F516CB7FCE827E8B6C453F843B10EC212D258C3CAD385E8512B667AC78A
09A780813B1FF02AA967B12AAFAD9ECE68CFFB45E6E44703FC7AD68DBAA09BF4
E38DCE8FA46EF5CDFAAF3113D089D7C85E5859F27B8DC4C5D864F41B8B3B0F66
D6FBE907224496686847529F68DEA6FE86CDFE2FEB8DC3AB2D124146E08DA532
B277C8A73DAF87129F39235E00862E70D7E93430EFEEF4CA1441C63290D48E72
84386F6082C2362E4CCF3E66ECC33C744621B1FDDBC9F587FA9AD60FF1DD01D8
20488450336225C64FDBE7F75433FB87932A162CCCA0114944A1AC1E57C446C1
533D84AFF286AB0086008147E26E133E012707E204F21F5EDCA106FA0636B029
F12E6809CD8308A1512A4F3BBA0E02AA42C71D9E27302A88E52BB8B1924F057C
43DB0A92111ECBF02129EE8DF16E063B7BB9D34606831C82F4954E3E9F458653
B6CA43CE1F9164BB0FE39FBCF2876FDF951D8F9ECEF97273B7554C01E0528548
562040B9FEDE9638C09DB8EABA360ABADCD32C16E9F72E34B4CCD3A3F1A87879
31F61A705F34B65A7D17B8BE932648CE9E0B7240BCC29C59A4D84770FD34E97E
0E6CE2C95CBCD1A7AAD2312A280F0C0753434F33D438BD8EED69053BE9CBDC74
E87B613542F58DBCA1007FF58CD1A3F9D87400FB8A600F088414D8992ECDA0AC
C39AB210921E327FD8B10856C476FBFA10D11E87A61DFE3103AF0DA9F627E710
DB3D3C578C86CDBBDC0A2BE5F6D17EDD30DE14918A2AF0E1ED9254513D2002A9
CCD73361CC952A8238AF64FF352BAC31D36B071C4B68DF8BA0FE38D3A0188439
4AF829C39DB36BFA67124053D79DB19F848987C0F2E57CC79D75EC3262338CD1
3F13C659D762DB6199447516E1A5D4B3326832B50B45C50D8F3B912D34199D95
8BC7C6ACBDEF8BA575387DD0D73162CDDD96166F795C46B8AD5A7ACB5C30A9E7
9E85CB8BF53846F45871E08B42AF72B3F3760F5FA35BCD767FEE4E9808EBF054
38BA865AC5CE19DB05CF529A5DB0DFA4F1AE311FF2EE1311CEECDC45A5A65A71
E268231C07EC0F3AAC2337536495DDF6085A1BDB04A65CBB6605D4D72E11338D
87D5B02C7980703D1DF07EF2E12C9802AAB56426BFD7E71A8056C4D40E53D42D
AF400AA41C55881CED39A6EAD01854DB545A7D0E46716D81039491DB446916FA
5F10B5FF1AE36BAAB8A07828702857EDDDC1030D19928F2E260434DD44D61B33
1A026E3D72A9FC0E15EE51F97141125A74C5BBC35D82385C083D07AF133BB1BC
941AFDD9F34D5E0FDB49915C613B9E6CA03E2FAB053421BDE071AA7232D3FB8F
2F4E2C4C544F441AD84AB5DE68AE07093F707C67DB1DC2AF85CBA7D0FCFEE888
CC7FFDEFCBD573725714DAD9F6D32D04C681C42D15D8B8DCDEF77987C808BF0A
56664166455D888CA8A3B820DB6BE101296BDF05D296180E1F0068E431EB425F
A04DD315AE10FD3A72CBDDE3AF4825F7C3B591FB74909EE16F53AB0F444AEC23
3ED419193715DC8998AC0E556F16DB74C13D05E062FF908D37AACBCC9086AB4D
09E359B41CF74AED5B75C01085EEE6959AF5B321D1550C15C0E4AD2245D110C2
485C08BA84E13D79C4875E249580B771CDADB22DBBC1715016A91EB885A51BA3
F73CDCAD65BE718C0072A840C5D661E2BAD9236D480D9250A1EEDEC54A0D75E0
C853808E0E457AC644B40C5D496DCB96A463116389EAFF5982413681C556258C
6A96EBFA86A669F671B2056B5206CB2889A999E7573B012EA2371452E23091C6
5D76AAB3B0B47745CB8CBF9EFB538C274E3C64685888A61CD2FE2A3912714563
19C9B1F9D62740A6C1E4ACA130DD76A67920DBB1EBF803737388C01B84BAC1F8
C5D2AA3A3E6BCD63BDDD75FB5390E6DE2159D712C43EC39112935BA5FBC2D1C3
048DD4A16B2BECF9DC186E0B3479EC564EB9E63BE5C92779434A3938E1970D8E
A3CD40C7B8FB442058996268D90BEC85B51D5111091F54823FDAAC9DDFDDFCC6
DD12C114B7373759BE4A62F1370FEDE056CEE265838696FCEA5BF7EF4865F3EE
0054B00A9EF36E06722397867DF4DE78492BB8EF96B9D0B8AD794FC37229A534
DDDB4A69FCB5E94DCD2FB69D65D8D970C3C755E6F464E23802978FFD29A0F681
BB7C42AB16F3DC305839233A6D79FF1A8152419BC99C0B233ADAE39DC533F1D1
0843067264DF39491C34CB4BF88039971CBF0B811DA5D0453701393BCF3D6251
E80A93FEA61864BCFA907DA7513A5D5AB90346D805E2A2205BB410B3E1317CF2
47224ECF9FFD37BA6DB7283B75010E5542A389EA2F787A4693E254921B8DED4B
654A34C1C67C390186CE712378CC6217567E4233AB90D231BB07679EB2ABDE89
5E12261315A776E2579686DB956486C96942AD652B9188F2FFA1495493978225
54956039FCDFCEF8BB4382003153E604C23D313121A31905074446B1B55348E1
E2CEB827C74133EF89CC4C0E3BC93691F53282A0F0627B5C2BF0D24FF6B79AC8
74474B73FEB6FBCFE8F5D07B521EB0F086704D2F749380E92B97B1D4D15A6A6B
4A8E7F107E2E4ED3AF0A323F4ADF5BA2DBAE0C452EB77B9EB60BC8E8DBAC5E44
24AAD00B852219A60384F37D44F4096D8AE632FB2EBC0DDDFE6674552253C086
45F0BE1E25404BF8131379A057266485F454D5AE1081304809DF523EFE64D400
BA4D22773664235629410B1866D7A52B5AF7B22EDF4D13C1A0F81659D7C22C7D
D495DAEDFC651D4A939CCBFF875032E159EE437A2F68FBB9A796AD2042FF89AC
01843A0B408603CDC4D27FAA68D7A5407E0BA263CECAF34FF58FCCAD408B8B07
D84E95D6D79E0FDB6BA53C1C524097F7E1070005FE0374ADBE880B8E044E4662
EF0AF221544DE5DDC61A54CA0504D9C77E08FCF101D33E908A71B94B57A71E99
C8E97C95D6264824385F1E9C6AD73172B8777A6A9C884E2131126C9A2EA19A80
074BCB3432256BFE41FBDA108B3363B7102FEF09C25D849D7DAE91025A4C6D38
DB16CFE8E67900498C2F9834799128DF2B034852C673ECC4B4C9D77AC775F945
CF1F96E80E3B5528D4D09E1B5E78B3E352007805470CF8FD960389A736A651C8
E9877DF4A9DE3457D17C81740DAFE000798A2787814333C50AAFF69C863ADF81
27F1FC35DB9CD34EBC684818AB259FF8F84FCC533000D0E1E9DACA45F94E8282
61BEB551460C501428C4BFAB2B6067BAE1E2D71CBE46FFDE38A25CD0DA603BA1
BDE6BC382D8DB22A52CE0029B573F9F5F2F99F02A7E96171314C00E5F85216D9
9E98CE869F017082FB4B0C2DAEB278ED1C55B16BBB1D07807CA3D7E9844BC82B
B1B2426ACB9FBF557D742F35A403EFD9761F38E63ABF21DE56A291D2DF07EEE0
4F70626F4C73D605F7E228B23414CA58006F3D40E72FB71FDA23113D1B0FD21F
EF5897DCC7EF4C2CB4B9918C0626FBF8C4B10DFE83AF257544C70A57AFE06F7A
0B5F072E7235E9B1BA19B953CE9DE783BE36D5CCDC4C798C8CF098F26C8AF48B
458803BB26487C1396A12DC36FC9583A048A83F68049C707E5FC1473E7DF92F9
D2E2B830669F8630FB55709D85C29E7014A84F5920F3D806AF76ABAD9FBEDC38
8D8DDE6F49CA08F4FBD88644E60BAEFE49E53B1354C807588476C398F937F142
69C0E5733E34BBF9B416E034586C46E8419A975C8D37D0A16E6E3B361477A079
0C7141A679CF5F95FB8D5A4E24180ED6517E4F0FEDE76BFECEE5BE55608AC296
664FA0A919782A6ADDA23C38C361874254B5CEC048F7E120356772127F589F03
18D086E59953642D6C2D23CCCF3129CCBC9A3C3E966D3F3B431634B78DBC70A3
0BD571B782F24BF7ED544AE148467180DC2293FA812D817D2E5EB294948D9305
B66F6DDCD13D1E9F158AC88FCAF620320B38C49770AE23986F8CDC1C1DC9E4C2
14326056CD0B162BDFAE809998E0B6C0032CF12BE89CA00370A27B2EA4AAD3D5
A9753BFEF2BF2C41938C4F0D045A0A8D658A3D44DD192024F7346872E8479505
9D0A12F0E405BA2838BC4C0021571B3CC54019500DDC798B57B6D0D13127291F
2D47B02EC7F91571FCF8978A464394EA8092DE7AF606694CDDFE9C6DD15D99ED
151912F966FCD9C5B8EDEAA3693ECC7071FEEB02814EE5D641FCF55E6188E23E
33140F8E91CE236EBFA996C5167910021202680C57E0057A8D4EE1C5DB70F4B1
7B4DE35C678F54658E03C1C84B04C87E046D425D2C67D68D0A054F8A3F6FFE07
295936FF6131D4CBD8880F040048728D0EE1112BCED54AF013408AD290A34B2C
9CC0F6E3881AEB9427D4167265AD86FD668F97C05F88DA5099D12C2940A318A5
A146C3BD0689656726A6B409C00F85426E37C3B5EE1F6343C8B479309AE973BB
998BBBFE4C486AD89EAB0D0C26D0A0F17C220DF312D33508279355F50B3A93FF
5A9AA1B7495880B7D6CA5327DB81FAFE2021B109D7DC8DDB880AAFF3059366F2
93191CE257782F236FC2299F6C600339CFFA85D117825A1595466DD4A1542B74
D7A7D21A05BC2B931A723A236AEDFF5676ACDE6EE71DC9EEC11305EEE39BD2F3
14B4595C18B7A2C0EF1F5A33B8BE57F38548BE3C2CEE2DC1118746EEA119D980
4673924FC20C17C1ED4D389C4174811E9E24F85A8B77DD6AE21621F960DF0147
A4DFF91B1D7636794038D4BC5D6DABA9931AAA9EF77428F5D92F0D318ABB61FC
BEE8E8B0B00C0CD02DE5923FF7CA111DCEF22BFDAAE0A7FA0303A0269B0BF575
4A34A69D56270FBBCD33071471AC139C90CE7F8D08EA040D5658FE6880E58035
9DB44661981E8B79C0C2475836CA85BA749C7CB1687ADFFB0B83A7838452A6F1
83466DDD82D1A1D297D1973E6125FF805E17D38C76F5B4C7C83E8B807AB38A85
53E4B5345123312D43AD2E836E25F9B23583AF36D35161B3EB6C40B510603233
182D94662DBA29C1CFBB09441E94207F55E0B78627E2EC67AC26FA885E54E087
D698F1A4BF65FAF83FDEDF9FF98C673B7AD1BEAA697D3CB6D9C462D6C4E3B2DB
011FE15465A441C472834AF396EA9104317CE37F898A92279DB351D188A1814F
8A08AB09A1C3887E0A00795C3716FA975B5F1A2392EA4950D391482AE9F2AF40
D860BE6534F6DC2FF0E40D5A3A2E5B7AF64A3304B9E86E1BAFC54DE2082E90DB
FE87968918000FCCC4BBB3D0F0A77E13A6786072F77720ACE22C9983B434CD77
8C28637476392A5B7F44050B2198DDB2BD938BA9E0A07C349F6A296A1FA1D105
0D37288CA08255BCDF5929EEB634EE8C2A7455D8076E107197F4F97EA93751AB
E18A6D4E241BAF0011EC6FB1D192BAB823EE0AD7DD15D945A99E5A173DE39EA2
59EA2E3B442B92E2D055C196BFCE731A8139223DE5819D1764130EA68615B1B7
189F2451BC21E2E5AACC0CA211F50A13075ABCF9F440CDD30739CB3148475002
412C3BB280E2FFFB47BAFBF92207E0079853BC21C88A8E8AD88833808160A84F
3F9F293F7BACA804CD809616BE4342A5047C07E76889E53BCF1F1964657D64B4
3EAF4ACBAC482D06AFD458F0DC3F463AB5D1D4343512ADA1B78E710A10079F21
1FAA5227E4A5365D551C1BDE7D5E9A26CC8D7CCE79CA02A223ACAE1973BB47BA
EB51200930F442D8ADEC45F642DD8A886A39A3AC3798AB415E6CB6014A911751
975AC7A57F25C2EBAC6020B3B544551122AD08152B541949413594F05C56F93F
BF997CFCC30A827D98AE725BFCBD8A36A5062ECEF637B5AD07FF0ECFD58862BF
F0FAF3764B5D45112AF57AD63E2A0CE96F4E2C6D0F4914F2282C9D88E5F14C30
938EE6C68194808DD7333A1BC6BDAB8EB3E58F5E03DDB8BEB4E575471A0373B8
D9B96BF9A426019EAF34A2B13634F55E964F8B7C21D93731020ADA80E93F82F7
477A180FF3D6F876D5E3064BB81E67AABB0D1F22FAB247C46BEC449857DC4CF7
94E41D60CB1A7EC4E17F11916E951AC82C2D476ED88BE7999D64A4D6F3D28FD6
296AE76BEC4B0044AC2984337F2EA913D7D8A327644DDA7044E0146ACC2771C8
93B96FE305B9AD0F0EB9BA120D8DB54879A0463788B5F261ECCF04129094C34A
416DA82241BDB9F204686895F1936FFA3A8CD6C9014001A032465003A5310E04
016C3AE50698C63E37ACF756AFAA29249BAED5FACE19CDD5A5FEBB7411F952F5
0EBC070B8DEE5D8ED323ED64D790560A64E3B93CE0D8DD09A5E54B4E5F84D181
47590E054B70E3F30CBA53474D86655EC6E370B94F19A54C3ADAF77BFC22A207
36D7F3AE7941F78325CA190CBB2659BCC601BA85B214C53D2624B32B33E7D902
3B3B8CFB63CF6C8AF9623945555DC8CCB321E0DBB1291EABC3419C009A5A3750
6BC2760125DC1A4B1DF7AEE1C8D59D6FC70C5628EA55B38F9D2E0EDCA058EF58
2CEA8D6D8D1D374825390142BEA3D78744CA49BD54EEC1B72058DE679CDAD3DD
8F72FC21983A2467D000AE87A0F2AB99689F12B25A7E3E92666F3B44F37F00DE
38DA7BD7171FDE19B2407F893D523EB78494A60D0486B75FE82E88EAA03F6507
7776C747047E336053FBA35B5D9288B8F54F0FB93B7AF74423F534302DB937A8
F1EB48AC809BE050BAD39813DCF287E7B822B095692DE610C064F95504C55B0B
33BA921D3E00537474853D3679C8C3675A673E6E6554D774D715491E2407EE4E
CC6F36E9033E6406E6904C934DDF1025D0C7DC1253626A0C6EEF544CCF26CDB6
FF82F3378CB493CA2527D45EE2CA7873DA692889A66771DA94EBB0ADB9C6FE53
01F58A5814CBD0A6EA1306BA16CFC5D47C6DE264B0935EA548B052C16E049D2E
6645239263D0B6E64191746616E8FDAABAF671B02C86C840845174596C6E1F9E
DD7A3194C486E3FB319F985782FFEB05794CC8977E665AAE5D7512ACB22F3B53
500DA95245AB7BE1A90282BB20ACAFA2979BED0B38F659CD7EAE81E2E8703FC7
5242CB2E393771399BA25DC06AA5E5CDF0DB7CF70534F620EE513B13B181E1D4
193954E87405F8A3441BD4D94A1A3FEE76EBD21B800831E129F0DBDD7BFBBEB8
C1E91EDC4F4AB9327C327B4F5D6FED61B8B603FED7E020939F4E5DB2EE7F2A59
9819EDBDA44E136B801A216AAE5168BF1DDF7367A32DBA8D37A86E9E871087CD
C163F7596178F69D904F1A2ED4ED053A1AD9C8B08F37C8247738575EBBA55151
898F67901B52715557491B4DED0A19A1E6464D99B36FEDF9EF398C700948FADE
7A6E4B2335E903D3CCD64CFBB2675612197DD34000D9B35BC93FF2EFF7DB3731
D14BB8E0A75988ADBC792656B858C0919BAA073453B24FFD0A40D17D352B303F
2518E05CFDC4DFA697683ECBD5F9644163C2AC415BCB83023D233714C8195F99
F5CC3D34F7116627B18993033B383330B1D2E211B7812E89AE06248F41975F0C
F5FE0048F6752008074D6FBCC56FAB16DAA2FCEAFCB4B635CC9D88D8EF06C084
C8DEA328EEF308557EE7668528DB216195143E8CF31C5D103CA1E4F50FA5B17E
3209DF9F81567747542BD1857B6F5060D0F822B463D183FFFDF1A2886838CB11
B791158E1FB4FE1EA3317919026F198BDDB71847B77FF4BA89C15EF8B0055DDF
C3B366F7A7F361F9470E8C548EDB3CA0CF7B4B6B14740A6F22569A9BD942A13C
1FF22C22F84C48B07BC584F77651C95BD71456BA087709827B05A80FF78741C9
F300CD61CF880F6B9A1B6B68F3CCF0B1836A57B85F9CF1980E078225BC8614D6
C29F336C5E9F60656D2F7B1DC8BF269241C0DA67E5BEC040A958B14BB3D78215
17A66CD8D4E2DFC75C0F145FBEBB48466ADB7CE834363B89EC5BFC3C84FFFA50
5C304D514E5473A41499E485ABA13B8242308FE26F51C5F52B538A85716A62F3
27A10682B2CD1D31625B095EA8C29531809B80408BB9B61C2DD4CFBCF7322BAE
688DFD73F7115169B32AB8B6C05B20647C842DF6AAE5843C949952BE48F9E5C8
50205DBA79CDE4831797C62154E0B91E213252C58D39514E9BF54D46DCE12AF9
14DBE32DD3C1292D965AA7AEE47502E92B821CED44D2F499C69EA518C7503707
97B96D672132CA94E098A333D20D4CD01885C2AF1FA17CD5DC6C38DBE00CE0FB
20C5604C70DC9E98857AA358B5F754BC18087A289B6E43EB001FA13E44683DC6
CCED04122D1FFF56BEABC7D9E24D4245ACC125867ADCC571C1F70FA8326B84E5
E49B0DF425F90DF8FD6B5003D9C6C8787A337728D1FF40967525002205BDF49D
E4C1B446CBE6683FADB4A3F5CFCB29196D5920D78A27E926494D5F4D94DFCE0A
70D390644D376A01518956381347C7BD2E67F7F7AFF763F1E18A1B06587ED0BF
CD31833B1EECAF947E67DBA702CFA976DA0B21819E209EFB5641184DAEAFF3FC
3E99E8BE0D7CF6054D70678B01042D547F91A3D046DE70ECC42D5629143FBEE7
5E1C89CEF25CA0643BB2A4366A5EB1A89FFFF566E7A6ADF80D431A13D1F870E7
9B3C0A8801056776BD5C9CC6EC08DB9DEC5670442C353BFF385891EE3A1B5CE7
6BDCEBA951B61BA48FC22AEA6EAE2B2167EC229220EFB97306A6B0B1DF3BF3AF
690E1AD2E1C89A644871515102AEC5C04C666B0B98D0431F47F1A85B4D8E4AD2
64351DABB7512B0C01935C590257F4F2D842D172D57C7BA9A9B55CFB48945479
C09580F378E3BF2E5FB4699E24C566824C8AE99CCF0EA0BC1407B202F3CD1F9F
209A0EF9AD85DAF560741A702B11CE084913296F4F237055338B097C143077FE
9C8991243760D452B459DD4DEED2F039D4F536CABFA083BA6C80DFC355A362A6
DC65AF82C30005002C4E3FBAD8EBBE1FA99D924A09B20A1070399A6E816F7DDF
A1EC3DEC0FDA50ADF09D8FCC01AC0731EF06C3D620E42B145626CDD287909F4E
902B150B9740CAD83B848E819175C4E9E5718AC2498022087558E2BD4C2ABA98
16226EB744128F41014C24426A003C762E498A17C7ECFFAF85013B5C541204F7
98245660D577E5018AF01116B29BBDF7C3E0F5C07A8F7F502C150A82C241D7B8
AD117442D802DF52CEE62D333C8680E45AB29A6CC48999B19367801BA59E660F
C5B2B1E296511FB7643BD998F3C5BDA4BB16589BF177A238168FD3279DA37DC7
1D35BEB2F17B2EE77A251071F93B4C14D9EB565D29AF1B3FC5D973408F12F02C
B8EDDF6CE870E720C61D187C817FDF26B95211DDA7C94F44637ED9DB8797D38E
81C7724296419D91D7204489394054D1FC534C1F02D6A99428D8731ABCF5D2C8
3FAAC1AA920326C75F62F1790CF69B37AA1F2C7843A71A64C773142F47AA2F4D
D210FD30948A4CAA3DB59ABC1BF5F7269FE8A9F7205584B5A53EAEB35FA5C74A
AE3A3CF4BF3E3E7E1F8D696AD05F9A61ECA0BE81C9C8D7B6938CAD55A5115A0D
BDF308BFA8CB78723FB40B625D7418A892CFEBFF58AE1CD0F7C4BAF9F2B5F42E
39023760290E41AF5A67734E96DE631258A33BEC1D91D932FEA8A790C218DD6F
CF271460677DCA185AB61EEA65500D048E11CB8A8E505E9E31AC0991E75BFFF4
FBBB8CD834845AE5ACC4988201897A6224979A19475976933B742305066D1656
493996A2A629092FBD2C4E2EF1070EC9528F0BC7ED87DA4B04088C5EF94A7BD1
E361BAD8DE2B1AD0B30D5A2B2DC4A6A78E59C1144F200FE34CEC934F99C14E90
9440B5457AE7487222C8372A2C548AAB3DB4B6D1148F3EDB90B6970DC51ABEEA
F55FED4E2A045971D213CDC2DB3621FE6CDAFEE3D5283B5802AB247E9FD612C7
762E866A6E4C83D0AD28B315F84FDECB9089DE5CC2DDB60A534461E5C023C137
C1CAEEB86480FA9072E4E58620CFFBC8C6E51250F22B87D829BE87991F755B2D
BA4BD765F7A4F966BDDBC0507BCC1456887D508BCF6743C363A295839A2006DE
CA4E445CB30ABD3A6176FCE2E406CF339F06656D824A6E1CE9D33F2A289DD8BE
B1EA056C203B431634B78DBC70A309709627CC97B1FCB791BCA86C8000610FBF
38625B8733141A6BC83CB7D22D504C13E3B3CEC8F2FA3948635339B38E049396
532635B98C5018A15684F9BCC79AD6DB70E636F6A8AA79106C39A9F3738C63B3
9DD1BC2B4707286AB421867AE5AF3F3B38BCAB834C9E0D06A6FB148FBFBB8CCD
D33756619AF59ACB9D17A3ABEAA6C652186D6791FB3499BBC0AAC68B23C50409
89825428B9A87CE2959932BADE6D74857E0CEC3B9B3C66FDE7436030382F9833
2EDCEB3669E8934D1DFDF43498A55EDF16A009E3EE9178169A266871978FFA3B
FECE3465E9F0918267336E1AC2F84FA09BD0F0F01A5C693C8659E5ECE5F23D71
6597B983385CA0444C480FC2B7F3E50DEA1445D9E4CBC95417F273AB83ADCF6F
99961DB2281F99EF93041C023D40A1CEDBAEFD14FB9E03BD6DCEB7158A8BF356
03C688421CC6639823BAF2248AD544A48273795FF8EC6F39CD1AE0E3788194F9
6259F8A07ED67DCE8B5ACA00EA4C0E1FF55CBC8D3BECEB718B49F2297D416D2A
3401DAAE73B06DAC73507D4CBFD16D0B592E7A24A122ADD6648E60EC11A849E9
9BE97280ED370D6909828DE61CA45D557BC13B8DB8266AAF65EC987FC4455748
C8913FC00A0891208975BF20C63B321F0584F9623A71F05B694C7382FE2AD55D
3FA827EC09C4A5745707438921B72245BB1497191327B51CE018B956D4E09453
1061EA1994E911990FF81650F2589FE68B29179A3E97A3F0B35A3FE8DF5B2092
3D1396B65C30054793B82E7449725260F4476B1FB7AF7D0F95B5A683ED8DA838
06CBF2B803C94B5A135002CE4CC95AEEA4C65E463AC3961D2D195C1560E30A51
9F2CB74ACD79560771B58BD38E2D621DD4DFFB6670BDB87DD1763ECF666139E6
6CF7D277ABA5AAEA55AA7900864EFDF5F1C22E3C015BA8C46DFEA00293FCA8CA
D6BD2C799AEAC3A4FCCC29386254DE597AE4C6A8897F9E44E3EDC6BF21D70A72
AA4B05B19BC6EA6705003370A63CB708613C6CCF19C49E038F56DB0698B5AD85
2CBD82C783B81E0EB44C2CBF703208747659F0C260A6B4FD314B9EDD41620797
F020956A61C93EC15ACC8EE5F47D870C0A3D508444AFF044845F16B02C510556
5CBB43DE8DD9B1F8BA59187DD339A1F2AB6AFC3E79BD199CC74C43983D9E1CF9
C6433A30B98C5233D2B5EEC1C70F6F28FF389DA4C584C1C89C0B70F7654DB9ED
F8305228BA8CC820918A298F2B21B0F1F1EE8F3F3021152941DBD1298F498E3E
B9B5D24ED5D673E26A25811D4BCA9D693EF8ABE7827077B060A9FA8F120B9B0A
CC23C3BE38506A74046DCD02DC03658881A9C92C09B14BB2D87AA395EF6E1C8A
665B787DBD0A6B4CDE1903873187DA86D2C1B5D227166488B70C8A5BED21A826
EC20AC4384A8CFF8CECF07A59A790ACD24D7090BF490E9977036461B66EAC5BB
976C63961D3272E4B12630C2651431B3554ACC5D07ACEA1E064130D54CA09832
1FE35A05FF4CDF11A2EF3FF5EC6E4153117C8DAEBC28D7DE5CB57A30F23A2859
902409CD459F41BE1139A5F3332699713A1D0E26C392220832FB0A336EA4FA68
C4A0C748338792955E0242EC975D2BEB739CFEB56C48432AC33288E52F38272D
E73F258D2B99B1BA830B869CCDB7AE4EE70D46F3B11BC74281190FC625ACEF5A
3839BCB53FCA127E78284481518A84B2D8EFE81B677CFC3848BB5760CBA1D313
DC83B5E924BD35B372B51AF5029011D8526850A8606A7EF26357BD27079480B9
50359D72B23BFC19B9068B03663A126AD84F84BBC214706C4A30853D90BE5420
7C2842045E4CB16FC9F2F22D88BC3CA66DA2890FB3B6009E065B8E2B2C8E7CE6
92746D29FDF3DD6C73C55A1E990A07F8B008FCFEF55C25FFD265353A0D84229C
2226465DBD27291A7AAD14E94BB0761369E2E54C06B408FEE2918DFD868DC448
0DBD8F7B43707C0A9E349EA8CA18AD26F3D7A01485B45862200BC7051B706093
5838E474E21B30B609BEF51309650A12A975105E60AE0E07D48E52A869C40EB5
5CF31782D1D60AEC3581E275BC94ECEB7B517E88F6126B8A392F962903111524
616DDC2B199CF790ED6262043A642D66AD3FF1CFFEEFD6DE3A2FD816398A08E4
D6C40A823273E55BE1155DBA5E300663BFF1B1FE9F4AE58671187FC421025588
19D054345DF144731DD2332B0F7F5E84C46AFFBD87560A2465A0565E91E89D13
35338DDC277E41010807AA325DC5A5B0D8ADB5563588D38C1151A012779EA3A0
18FE29FB9EE32F0F94CC9D675700317A06B3722A56CE97F88218C359AFC59257
0530F2FB3325340C31C59DAC6DC1434CC7460144DD2B6AE8605D0B92975BC6AB
750F4A12BDC1C612B31C7A4A92402893A7BC2B0D206B0B603771A27B121C5E83
3A81740953E78C51C48C374BA974F603DF4E0C8BE81C50F1CF962495D645A9E2
6C29A8311282A2DFA57985CEEF4463E77633C6C4A987E2812B8CA402021F33A3
B306589E39D1229FAC3B0B2A925839C8C34CC82E728B395222C1E9B233D025EB
E4946011655C21E22D5420119C91515AC8E44D5503F057E05D147A27AAA2684B
F08AE584333C38CA8DE3206E4D672D1306407D69F633E5C7B79CE97EFA3FF7F0
A83DDCD78D676E71B6C51A64A87FD82AC7FD78224E2E7EBBD5193878AF0D3EE7
55BD5958FD3632E6703A5C8D4E469825F31A9820830FB63D5BB4E8414211B97B
3F5630E48A620A297B211C3996726C2BD5AA99752F7C9665CBA4F5559692B732
7B6720BE086562C6CBB48952E50EB4320D53CB983F9BA5E77BB3F6A96281564D
7EC007DE0E5657C31D96285557B332CEE2959749E610D02CA9F12ACB9624AEB7
824D5B0AE928DA1E4073F2400FA3691AD390CC9088C268D21D1CFC3186DC7060
235145C709EC93F4430AF3A4E3BDA695AC6822C4F42EBED74368F88C2909144C
30A00A6E010B4220EBFA66EF79E0BFADB40D1337D7AD3D3487FFA46B54D3305A
460F868CD853373258BF4870481D8FA433728039209E7FDD13ADBB9B5BD42CD8
AEFDD97BD87B20D735CE102C0F60A9D44BF1D75B17E7340B4E1A110BF7ED2BBB
B9AD9B8AB9094306E2BE2A76A177E4C9629776782C4D11EFF6063FD1B7402173
D75BB92549852043B5A93B2F223400E8EDAB84233CB6F8BBBB8203FC988E5357
B3D6D909980CCB2EE043DBD686D8D58CFBA611F328B18D450271C3A0CE600F9B
DCF81BCA19F13CA5EF9E68E735F0FEB865EF8A1D2272A5F7AF466136460A8ABD
44631A2723FF23A43636D5CDB34C008C74C0035ADA5B1C175BA90C3A1E4F0F30
828FD5292B686371FC3C112A2667AB8AEC7E16E2E0D368D38C1F7EBFADD460A6
0C2AF2262B8E243EA3CFAEDCDDC84FAF3EA75721AAE09BB9C2006BDA2CE24FFB
DA8613B2C3C1B926DD8420D84FF417D9F1B9C0E1467C8A79D9BD0901DBA0C1A8
2B9CC1E4C5B053B53BBFC5B1FD5B20DC08DA02B22AF2A316937AFF552A91D965
8FF8C050401606DB5BE4F2F78BC6DF142E1DBC501D25CC443641635A04B12CE3
436AA3D67CA3D126C9BA6902930C6B6F9297C81C1A312CEF52CDAAA7A2DFB5EE
919F1579EE7836C788DC08951D3435D796AD9D35480872D3841A39E538C32D0C
C0BBFEABEB5332BDE9BF5A1578C7F8365620CC9E2873390E2A422847962C92D1
4E8C4BA57F0E7041043638A7C4850BF9538D50441B5B14B34322B7DFD215C293
73484C9834C294941B263898CDA6103C53E0BCE514CF9C82A4EE22F45E5506B1
5636069D5FF92A83831C57634CD84D5FBDFED62624FB8C49FB6C900C6D9FE07C
263B8EEDFEFBDB6975B15F487C45B645447ECBC42477825FFA4A8D4292E8E709
65AC76C0DB39EAF542F7B0A2B7AA4276DDFD012C099FBF4E4DE350B091A34578
52C2D60EA86DFAC2443F3FB4643D826762550692E072BC167813C39C5FC897A7
210D1F291C27C6187A26A0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D6F6BDD983146333DDA29DB81DA54F44DCF5364857E
A20DB59006F78BA077D29ABE7A537D2358B1DC13AE97ED90F7D1AE27A1CB55C2
F534E2B546BA5531AE88840CAA741A57ED1F4587A72E74AFA15F15C69046ADB1
B3B6C392AFD856716F96B850D6FF61144F6A9E51CC1B8A86A35087D4A3A37081
D7529F94493EB4739C267B8C54B3A1FC2146237C1D110D4A10112D496250647F
37A36F59299DD9529CD003AD4E0847689E519FBB2B7796420D8EEF6ECA04DF85
390E261B43A555BA97B9F30C1CDDF679DEDA691E30773C286B1BA80CF1950B4D
B1835826E276E14DD0C69117C6D60A211DA5728E51F1E2D512647277B9CE8FB1
6D00896BB88B0A87F1898C0405B118619CB1786D4976E95D7F665952CD09A9DB
9B12A5D759909821BB1FAA64201B5D9092328325E5EDAEB91BAF1279E7930E73
FDE400C7E7A7EDAA030063C3D390A2674066DBAD1A9C3C1FFEF085A0B5E1375A
90141467A712075A718616EB0105CA91B3F4BF9007CD86D2AA045ED8F5B22144
D82C90F5D0F6EF0542C7D93C5D9FD9416A2662FCCFEE48E79225D0DEB8C81315
39566D7BC863F004227E862427E6DBDDD7768DB2F8314DFFB54617007C1984D4
43CB98799B2FF97319F3EC1C7389F3C9A5D9E476DA325EF01591BD34C53EEDB7
645170A6A6B6C1A85D0058926158D48A88C4EE4945CBDCBE85A87534BE299D79
E572DCE45E3329049548D4BCE4CCABD0634905E500C4CC7F09180759C51623DF
C9BA78264070E726D001C2DB30313E8BFF9DAEA9D9B474626C70B16A053495F6
00A42948F1F3BB2DB772E57DEBE00CE4F99647DD3273CC64467F5514ACE043D4
B7711E976BC9C60C8E1ADD22D80F626020656D5E8EA1872BC169F92A89067B9B
D98A4B83A2FCCAFDCC869DD916C5CBF812D3F52152CE090D90C29776BF27FADE
D563AF292C8F30EC9F6E065826D34C38C598D8626BFED7CB672F132E065B9194
F80315901081B98FF3AC06F5C24B6A33DC92C72A47BDF624179D8827CA4664F9
6F7003D7D0BD146203ABF25F89455E6E32D6DDA5BB840CFE9AAEC1BF786018D6
946A358899374F4A876C701772FAF0BE6B04F3F6D10EF7284A186924F1D3FE67
2C2B44FE74155C02740D38A9B9FE58D191A41E8F41CFC413F5D1BCF359E179EB
5C6192E90B3AB1AD69284E3208628285C01C42977C704903E52D0956E6D188ED
B2C1005327079D5A0AAA0434E04D93D4382AEEC5762713C43EFE2D98D3398D22
F03697F8024A8B75EEB4A4F4C904C19B7456A8D773702D6C258A7CBDDE2331FC
8CE4C4E7C3351D695C0123DCE2DB4E3AF2D4F632F5847AEE6CCE11AEE68B2512
8BA6303A7966E2F0B7A3CB154F213346AD4134127D0C276D9717D42E804EB0A9
190A41EBD0CC6D71A29CDAE0195CD207ECC91BD77514E101CB436C236C6197FA
C4351C17F54709CDD02097F9078E6CE79AF2E8AA6D97AE2933A955CD2A8A4719
80A40263C759BAF3D17824AD3DAA81ED55B2C63BF0BD26B4CAA44B4777F66851
CB630406539F5C63871C229535B66F01662625A149AC6DDA8493C7531506E6A1
8BF4121539CA7A36EF4C611A62D9187808620411BAEF64F9D3E5CE05DDB2E96C
D6B55D7F126973A973D58115F406041132FF607FC7B14FCDC184B70F179F8485
887E4DF7999D41EA8BBE54D7082A3C89ADBF4493F0D90F9DD24E0DAED2CD914E
DA9817519736DF90DAB520A158E7C14B251ABAD9AAFD264F759BC7AFEF1EF31A
1524414D49DB9BE2EA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75FB8D5B00DB7BA78FBFC5B95E167C6
CFB9A2275128DDCE62E56BBF35D257EAE99D627535F8E5ACB4A4D3E1E6D9D24F
9CDD9F80028D37C9CB4067A28D41E879AF98739929DDADA413EE35894A6A5B14
CBB136548C4B00E47FA77732DBEA89E10E98CAED50DEC8AB2536A447F7D46D4C
63A99114EFD23133E2FB8243221A2E8AB1CB892DE716CA34CE544502ABC9526D
F48B0762B57F8AAF2E120D5DCD70D140B498BA43863C45D94E6642DD04CBDC31
0087B2FC75CAD18883113AAADF162B023352069DD1BDEF229E16DE8D008A4CCC
BC317B47BE42354627EC77B91564A034FF2F3B60508154B08981B62A2E9974E0
E9A46A3AAC7F87B1FD8620A5A695852F2FF71CD16FA34635B526265F1A635254
75398013F04B49F67164F03610FAAC41229306EA37B9DF6E8DEB1C6C2BDEC9E6
EADDEF6E99BC482289181D89CF74F9995B40E5C55FBC81DC7686AE740022F764
C49FE9B49A108931E3CB077A9C53C764DBB47C789C795E97A537F013BC2BC786
BDA32DCD5A856714ACD5D2BB98B011650B2A5D8B881D6854DA373B002BA279C6
0649618BE2D9B1E10DECA9090F66F089E4D7C6D8087016FCB998B95F194BC9B6
E95BA14850E251A4EFF1C66B148E036AFB7FF007F18AAB4CAA2CEDB34F65F327
D58731A241E11468BBA16BA3494A4E80FF16410385FF17A1444B2D1596343B25
64124D648B1E0955CDCCE027BC9F127F79622FEB3A6781181EAD3F02101364EC
FB540C0B2473F20BF05A8315BBC31178398C4DF5CA482F899FBE7654F08D93E0
29994A566CDDC866CD6A1CF5DA076F94B31AE4EDE8237218A12D5E9DEEB9EB26
7CE99EEF40ED1A5A247FA60A89A2EF6AB95CAE1FB119500650FAD0C18B03564E
B61A0D261812A3EDE5BF402542BD215541E3A478F0933EB129EAE44484E084BD
DE7D2CEEF5E54E2CBE14A20F56A27B70B9C7DCBE9300AA2826EF2D6E38C9EE32
60EAFD1C1B7E9CAE9EE810B4C7934D08C44E8A3EDCADDF8FCD6E289C19A7056D
A716700F391FBA6480099E8276173D443884AC0600329C607B7521B1C1C0F575
F4A979FF04F1B3C17864FBC8B92B77DFD068E53CC9111E290624DC39FB79FEFA
C07D2DA7DEC9642694ACAD9C980FC6F26BBC4B98AA0F9624D8678DDD10596E3F
55CAF2F4419B78FF39B929627428C3A6736D8777332C017A9411BF924DE0E40A
24B0E1B797094DDD8EA17A7A281D007F1F6EE3CB17E0FDB167D05506A96F7296
047E208835176F3154E8757A1C21857556EE412F4434E8062A9F9101ADD125A3
2195B8CB98C9B19235FE35E0DB6F1FBF31ABF448C9261B75BF1EB61260DEF86E
BD69F26D77A20B25BE10094D4C196E26034F2577471EF7CDEFD087BAFFC6C93A
F8FE338E70387B4F1BA2119F24E0AC14D6C89D60DBE2E17850FEEDA72C8A882C
F268AA853D036C7633EF1DA737CF40C5F170EDDCB3B5518E28C971EBFB43D842
99D336736B15B05591122AE51D1486E1F2FA31E9C9379F2B3440AEB83539438B
B83563DD61FA39B66B4DDCE39F3E590823590CD7C75BBE8B58EDC2F2ECB1E684
00C6706D29DF0BCA1B5C649CF209DAFA7619F27D165264869A4D5EC574FFF640
76FD6BE210178957E86D8B7303BF3EBF660879783E563E5FD42AFA2E2C523957
8183B066D5A65BAE4AB038087E40257C1FE6F484941D7387A2F92A69CAD3FFA9
AE559D3043D7128482D9ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A60FC
7025B92E55DD5D5897F13EDBB3356F9E2B9DE1FE09288B3217E226202117CFBE
3DE2C6DBFB0BB25BB13A128CECEF9D4D51001EF6E00C9CBA158724AC4352EBBD
4085CC2897C588A09FDB14647F570BBEE55DC7F2AED102A1134FD48A8C8480D9
137F359E6287C5369650A06422FB0B3B29ACF32F3DDCB4DF8B5AC385B0E99329
08C1050CB6DB39BB10C1F4D149305E6D442E7D8B58020A01C8A417B670A41F2E
B01A30F2AE8C73D83360E849EC83AABD17E084BFD0A3606D42EFBDAD44BB98A7
440207EC9597D409FBD1E6B2429DCC30846293BF3060E9CAE54A81D21AAF3BFA
BAFE773F095BA4D5A0F9607E25DC3137296CE1D8E2B8FB0DF6B5FB6D5C415495
635BDFF798B08041C566CF1D783EC7B15B4330A37FC9C1BF23CE45EF19471FC7
2472E528053EC041E396333C90480C82F2B80E740D5ACBCB0882F35AE8A3E3B1
FE3903A941EA20902C10B0C3E73DF25106052700653849C02805E1C56026FA71
302E87A45A22ED99B04853D66E5A22B56F79FEF73918B7CBCC65CA7DB3E410DB
1AB7AAF9B483A4DB3B333B158517971542915D70737B3F22C6A831A9821624AD
61DC8A0DE77A1F4BA087E7E54F4602592AEB49D4AEA40B81B7B653D90E146B6A
AA318E165C8353C9CC1F0927D73E21ECE52D9C3EA6DE3CE70352D2ABEC8E3DD4
CCF226A6829DF67E37A242C5E0FDF6AFCEBB0621A8ADE7553CCA3725FB707ED9
526ED054C471B82AA52B6C090D4C6C776B5610954A6E5471F8D8344C07DB8E45
BE34098668A5FB9DB4D49F3FC041809ACDA455C62A76B51D730D8B124BC6B76D
049B17736CD9E28DA73506142B6AA54FDFAC9050332212CD062A6B96FB18552E
DB51B991870A6E579DC68B52DF7F950CE1BDB15548CAD879752198F3A2141F1B
77DCD2B7DC83E662C19DDE6A5207ACEA1E0C78CBAA7A47C5F3D0C745262B88DD
F05E7E3C1682E8E90674B781EF298DBA6CB1758D22EE8A7680B01DAC100D3748
CA1BC047117E5E9AFBA7839CAE44964C974F08DB4C947F074F5B3644BB3F93D7
F96770C73499AC0AFC3E20F0BBDFA01502C9A1C30E9DF357529D99BD156464C5
D64ED5C7BE1C1DB9852E09F62BB22A3A51BEC8BB98DE63D6763E8225E9ACAEE7
9D813C62B96A7CD2247A269F53AC59E3E886BC531628CD9FDA87188135B3D6CE
0F2CC637A8F2EEEA4C05990EB23142620576551DC347BCB2302D5D5FCBBB04D7
7DC4955E84168F9AC6EA2E25C8C38B8A36B337C6925E0CB5BD963CB791E28CB5
4B37655D9DC3BCF1F660E8262CD10AA45C67562303483314B5B71B07C7F8C598
D226227FA8C178C10D90A2F26A639CF016B843ACE6B352A0B859AAEB15A52403
FBD562D284EFBCAF3553CC5A757FA50D53E6AF18AF09A1B9C4792EEAB445547F
698E0DC00CC722B65CBD277C5DF3B4B1275090B71A4D4B3B7961171D67F8F6B2
6EBA8AB37B5C35DB16D8B776255132DE99F3F4B7530A72C49503FC4D5C84291E
0740415B51E89FC1E4887D1912C7FFB218D23A08172BC11116C8028E77D0FE5A
DDEF0931C9EFBA2B76B78F6A90C0E44F8236F55938C3CE5A9EEAA8379EE7D879
D13C3E2D204512584029A7E941946AB7D45710ED4396C6C9816137832A56C48F
C89066B9FF63B80A84B36F75AD6D455B580A4BBE440839A54B385C9E4571C466
AF1C084F04AF31AB83EAEDA618C70F735DF746994341A37D17E8AE636315CE9D
47B1A020296D23FD0A59D6AD28E34849187D767EDE855B520ADFA07DACBEC45B
BF0C25F00DD94C798C8CF098F26C8AF48B458803BB26487C1391BD9A5B51F33D
505FE3ED168109F1F39AC5C3357E48CB38906275AAE8D8CBE9ACD7740ECA4A47
A985E2E16051FA4178F6557DFC8FEF287CB787EFF59E86B4A72A199F16F2C24D
D5A6AD833A4BA6F96FE67FE603F3DE0BC536C9A2A04B73CB2E4EBCF70184C5E1
D9C9E3DF6D0AB7F44E679E8518074632F6BB0639E2AA1DBBF34708FDB8092FE9
343274DA68CD751A72052D4FD983EB8C149E081333B2F0E0A54134F91D7B4ACA
E954658CFEB3FF04F3F9F42C57124BF3FC0BA485E050DF883E4B2767E236BE21
9FEC94EF94D9F2096E76F1C558F40812444C6F0F4DA995C8C03162375AEF5BBD
6BC3B250625E4B5C2B2BF9879F853460339AEFAF4FCC58EA396431BD4F95BD5F
6DA31DDC13D860842BAEC5EB5C217FC685C06C5AE447C991137584534EFDDE0F
7BBB3FAEB89D737F9FDD69B4EDADB476A1E588A8C8499A8917CAB23F00BC124F
D93096D1B365B754E3D03ABC8B3DA3F4F6C2DB54682F72DFB7E665EF36DBD3B8
9455CA9BFE2FE8ED26203A2B353C3C9C7AFCAA09793C8A74DA25396CBC1484DB
565607911498AE56FF61F2AAB48F1B954211AF0A38D6CAB3BCD6697C7E56C29D
62A325714D3FE8C3DC019CC01E8738CCA2596AB05857E4B8F9D6695EF332BD3B
AA9EE551A4B142DDC13600318F45CBE1BB1A6E0CCF1CD79182D3B235B457CA9F
B713822F634A96C5D1923710DB4B98B063FA07A5FFE26234C70FF6EF6CA2A853
FE0F76AB1ED5B97A1060D13911F4AC44FA5358837F7CC6ED863F0FCCE5F79065
D7AF0839F444CFE8AC2F2FF46DB2B95247BD8261F39BA12AD5E50433EF517BD0
FD04C73FBF1058A8907ED43B4C144BDAA3C4E6BE9637FC8BD3E94D6257BE1B7B
FB179A4479EBA92EF2EE4E7B73DD295274E1D416F7AD7338FB3116A3CFEB9E33
8EF0D7B0FA721D7D11990750232AB90B60DEF84924B838AE79C6689275697225
1698C73A825EAF77F8C38CA8468E616771E6C9093D7E3479B0DF3F3160EA2059
B5F7BFD55E90340B4244BADD57DA5902E2C08D00E814009234E2A36EFBD854F8
68BC9301D33D0203F8D1F59EBCE526B06B610DB1B028D29F838A52AEC3BAA982
56BFC6A306ACDD86AEFA6F4F2AFCE55BF27AFC96D93AE476AB15324149043E71
3261671835DDF163EA8D3DA7CB1F0514DEECC225301813E4ECE6D689B0A04229
04F28E6DD3CAF0134F9E19DF8F5ABD86CB0F8CDD3A059F2F3421FF99BCAC2D54
03D67B0DD5ADFC6174D559534155A42F6626A6E7CFC849FBFFBB17679ABA8C34
B1296EAACD7DA7010ADED0D6A83F04F396CE83F0549B1168EB7DA7468011420D
BE034D5AB67817DA21F12130B85DF957C636987F2ED81971E9FC729AFC1E778A
3C062A85C2282BC39C571BD45057FD09085730695ADEFF892B4307BB163A248F
9A2052CB8980119F3F2EFECCCF2C04B55F44FC0D155C1E04055D6F81AE5E20A9
E98ADD7649142C6CC2FCBD09F82ECF0716F5378A8C51C139D72816DA8B61E413
EDA36A71E7B6110CAFAC612E3E67F979E774BA9C7A580D605929D6D790A34084
7DD751CF51F14D89B269A940060FB0B603D3A2A6839C1C36A3CB55707A0663E4
D7346CE1DD000B51AB4A815FECF291D3E8F573EEBB83E6F9DECA82BEB3F58558
67B2B884E4A9A334BC95558E4C1A9D0B93E9A8C0D83CB8354B69357920BEE4A0
4E464B774D6CB4588DE10B3DAF9F7E546F6AFE62D85E8D25FC1A0039346F9156
82672DE85AE82551277388BDC62DE6FD1A3DB14805DB66731CE5CE34765A6E35
825C99CB7AFE5A873340B50AEE34371B1D7C90AFB517178C9DFE59CE8B036E3B
067B364E0F77D36DC299ABF128FE2511732602A5885A6CD283AD3C1C87F360F7
BFF771183B302FF55667390AF2E314BC8E0EF10504B5612395461652E3B2D6B3
BCCE3F5D699B3E2227DEF786D7BBDAA2A35EB13FD17790793B2B4A9E06AFC15B
8B1E7C3534BF816D19A02789F1E1BE623EDD5DAF54733EB1AD965E8A5A3ECEEB
F44790D57FFB857764A8EC459BFF61D9A893DA0177CAB77BB183F54581052B66
D6CB569F8C51F03E409DCE0717779DEA582740E49F088BEAD6E482EB87350926
910860A95DE4100D2A9BA91424DAD1802F2EC862FB85A143D7B299223ED85252
02C31B687F2C19136157C6D83B33313266F1BA8B9E065A0E64509902D75FF0EB
AF919567B7A1CDA5E14FEDA66F60059ACA0ECA3D597FBAD8C7EC31F3C1C46E5A
E79F74B3589EA1C34BC2A4827253F72CEBA7495FFD2989718F2A54E5D0EA1719
ACDE43012A2AAA1F71550220B035B6AE978341404C817414D0579308612AD113
219204CA43994CAA4671A6A97BD8C6807C21360D0C3F7742F47CBC2D74EF214C
0B15C50A9B5A26205F096D63762A9B14F267CE0337485EF58E37EEF30EAB487B
6E7AB230EBC988C382F594B4D4D4B92E6AEC4A9F07841FF93433615B89BA1272
6F5B01CD5715C6432452ECEC048DCD14814E47DC1226F723CE25814E30876470
F16C5E8F87F74CFB89CA99219C25478E0A63F78F3460EDD4F64B4D2A5B3E660A
B83C0CD1BB032CF0DDA97FD7C35218928C48545178CCAA9646C6C89D2FB89665
3CB3AF6C9466BF2240E2A71EBEA84FE2BA8B2BAD7C2F670BD9087F7531490409
D02F3D87BE05852F9C004219582D45949B8C3A7907A725B1DBB3F1A92E0A0456
D103AD819382A9EB1E201AD6F522AF0386A30A2693B607A67E0AEAA7E969E420
86DC576CE06532479E48E7E905FB5E8F9FC3DC5F258FE3C18E7464AFBB0B0757
2E4E438A2F1A4E37E0909724BDD52F4D4B98C4AD8E1A1528BD444DD1B0EFDA76
FCA43DA6DFF11E72D5BAA35CCDDAB44EBBC0C71C3FD43F21DBC6904AEE4B01DF
4F1005122C3B92BB93F4E9CA79A797C3A4F27AA9924D6616FC860CCAA3402216
64068B6E7C7CF2E2432A65BA21DBEB0A83FC660BEB3F1A3357D218276A5D0FA4
EADB3616CBBE98428D5D811FF6FE99AD7ADAD0922C1BEAAAD9B337968A02FCA0
1148C302E8E3AAD1DD61DADD7A1FD82F0C2E744CC3B65AAC7C04E9646515EB8F
EF55DBF964A5C2AA9623B8674C8259A681E27E2C4AE26093689327A256571CE9
457E795AB6B63D78163F227F1385113B9D2A2F0C56DB55B7317231C2B2F371B1
559D8BEB245FFAA7955250F08E8F5B149E8F97D25635B98E9B51FE570826C75E
64296714597A74010F59376FB1AEB72D08E929E1630A7750DE134C6BC13E5AAF
A36ED9F7A8E5D9BECFBE4384E04B0D6FECCB0244DB29A8B801321969CD052FD6
1493FDA211564478C68C592E158DACD4D9005B983760C79C08C12658303A3F51
1EBE5F047EE68288BF3DE1225D981C287FA9BE1B690BA0F8059823BD2AB80BC9
DC78BD724DEDA7987A6DD44876D3FD2B0A21E719D5677DB0E64C7650DF6FDDAF
6038DA9D24DC1978AFD87934AF5BFEAC00EDE5DBDE3D585DB595D29361F8253C
26C37E09B4F87056EDD8C90917EEEB978E51957475B5717AC1BB4AEDD87AD40D
D35C3449819CCC9366AFE79A48A3BCA95DB66E5D14FE0A8C3FFFD51B5492DB49
BF8810AF0BDC54BB1D08740818CF45A63A694C8F8DC44FBA5607435A619684F5
02CF60F00AB8418D0C93AC7EAA9DF793A62FC3E0C50F55A84F67D932B8062860
39E75042D590F24D8FE9F50D35EC6FF30384385CF7C56DB4A483D83D7CDB2BA2
48A366D5E0651560A4BA2299074E853FEFDCE9480F0E55E126E1DE7E700FC3D2
2EC26F9B2761469B0EDEE8BA22F029985C6F5C6E52567706CB28468A9A6AD9F9
B873F1845718FCF81B2A15BF986954219C2577014CE55CEE9E4D5B2FC43C7447
A9605D5D86CC06E8029D4F57A392D2738F846305E8F3AE5B5E2BBC2F802F00B3
A75DE53FEBE1B7B9272A951A047119B40830A39909494E86AEE21694223DF5E4
A7198F31E2B8282BED7392C7BE2B61691EA52F310E0367BD918A9DB9077118A0
42EB52EB7800276E7502D8CB8A68A46889B0D2DAC7CE9E40D84F17B6ACCD8743
2BF87A6B87D3297452BA7EA1CA9EACEC454312EC1DCE09A40896B78BD1D5A73E
157AECB9F3F59C0D736946734C6DF70888665716037A35F574BB08A82641F363
6C82E2BB16E686C92C60EA329075C30D3F97A3214A478933678E9C5B2267C747
BAFD5934D95FBD2640BFF7E94C4C260BFD0FFF9D966F224AA72C22207BCA2267
52B21D21999E31A3DA1E51A3282038BBA7F7FC70987A57EC73E5A6B9508B48DD
49577EF2E015E8D9C0F64025C76E0550BC5D75F5C40F7C7768A67B861D5FC288
7F1635AACF2782022D039A8D49085ACB83B160C466909F562BD4C26A26BEE741
ECC847467858898AD528633F477B739EAAF07A516D86CC678FF6D5A199877F04
81B1BFA806A353E3270334E0880843F700FC1F6065FA37F248AE52A1FBA985A3
1F28AC72D636AE969256DC91944150153C99FBFF35539B5E3CEE76DF3204AEC1
961F654E12385D1EC21D1831C177FAC71FD55A5490C89142F2844CB7E6352B01
A07303DE29B299AF582319835E23408E414CE2299CD46784E6A7AE912C213D0F
380112FEBD737CFF6C1483C4520BA4A4B904A4031C519E155A116C14F576AEF6
6E86BF55B83AB07C8875DE7D96261C02AF3B27E36352F8DC981EF838587C80FD
855F1733F50F636A4C7426584812DA63B5F0B1E400E9F96CC34E7E2C3CCF88A5
17FE6F9C5FB51F8737E0EC21F7CD596D42A88458B89786C2F6D96AD2D415402B
06C2CBB2CB91B45D00DF27E5A47692A30A7D13527A7F3FDF0C07D30FB6436D58
753F6AE969F7207578FA40B7457C36BF9A0846A0C5007E8D72ACF2D32F854BE1
642416405BCCE8D41818D663AFDC9CD1C81B91D658B398D4C89F58C854451014
68001F40721E8DADDCBFCD8BC92D0D26A7DEDA6FE09F7DC39F9F2DE66A66190C
689A73A26C5E0137C208DCF1A7143359F8EE27AB1F3639B4C997B3FE3D863BD1
FE2D56BD513E5BE907EDBB61A117B7F1BDB61AE87F1906CFADE3EFCF095AA187
EE498BC5455C976C40C6E24D239FCFE9CAA763CD150D404C418B12590B6EEA0E
1A19CD139622317F5DFD2EFBD95A7589BAAD70364C33665F90E24D35581DA77D
776D1EEB96F837A3A2F5C501AF422A313B47DCEC7A019705E05AC514331F7A91
B4F74898E2FAD14576F81B1D688DD8F61B1E4450C0C994D2FA8F4EA0B31BC626
75775A139B54949665078867B4A024FC24B16AB6474F370F7F61C7A430AB2303
FC215B5B353C8B1D386CED0321AA1103F5F4CC57F15121A5265A4B316901E61D
0B6A13CBC0EB3B038B56DEB99AC4C60BB469AC2C2CDC1E415746055916E409D0
85688DEBC02A6E020EF5101E41C289C854F7452F28FFBCEDB0E2DEF7ACE89539
7DFAF366B982B1E79ADC6523109832853C664B53C4ECDF81B0004DBE82B86F5B
A36A3B2DE83040B16BFFBBEB73850E2199B8D101C85CBAF179EC5881CEBF7EBC
3B30AC8AEB18B09AC7183771066ECCF26590A7894CA6F91AC2CF4A1420693935
9518C6B25D2C97192E8E1F0AE8D3882052CD47181C522E1F417F28A12064034A
7290750EBC897F11987CE12AC4C09643CB0B9D921B4A6980F6B22FE3C7B7CF63
57CCAE079ED34837B5A08E55E6319BE14383542B9F6500CD29B4760D5B4C77D2
5AE31C4A75BD8C7EB02722DA8D894241446F05FD5DB3815F144E1EFB2D400AD0
25F1AD7295D531787D2C5D4E00A09F155BFDF971B5A4D0AC102C2CE8A28E1A82
794BABD4D8814B53865E03C0C0D6DE7B16FE54A2CD42AEA5FAB6694A64B334CB
750BB6A4D0230ADC13EBBF5AC7571B0778C0E9D25358DA06B20DDF35F409AF15
997127DFFA9ABFF8C858A51C83CCCC572024A6243D6BC209B8D579F6A057A27A
EF243C4B389CCF9382BA5143D6359D3BA2ED407299B5C9E361C08AA256350ECD
82F3B38BD30286E0A8B3E42F7CBEC366E60C18416B956C6377E02A43FDBC78E4
627ED79B16862D939F3A3000659AC050E7001000B2C6848457D632AF0F1DCFFB
6E5F5F586F3A72BC1E72A5F984E7235607EC39E49ECCE85A8E75B8B18D8D9B9D
2227C7649133EC6A81002AE7A4E697857358F58A400549BAA570F95B97AE0BC5
7BB244A80105AEAF034D50D17F2A2913B639720FF4675597704DB7721A0FB87B
BE7530ED3C037A517E7F4D92C7AB7A2B373039EBD068D131C7F302A2F9FB65EC
CCAD4616927004178B7B2CE55A8F36653841CD79FD3514557D69140D6E7E9813
2DE2FD992965837E604A8B2C51E4FA23D38F0387351BEFEAE26D641D49B7A349
0F09BF16B8D179FC176D0735CAD73632F8EE970DC0EBA43D2C700A1D58F29F7E
F1487F54EB23A1CE0AB8CB768EDF04DBF511A3BEB1869F9D5F0086E13F8C3349
8D55FB08ED70950200C50B7E71F8C21BA46E833E6C0DCF6556C1CC6A1C88ED2C
49C1700E8AC2E1EE384B0F6907DA0232BF5153AD600D17DE2777D5CC84335A77
6EC13A25F0B85F0EA2FB526C4A6975188599D789CE1B95719560247100F68FEC
756F7AA110B22AE36B9518755C2FAC2135E89AF71192E8CC3776F553A88FD966
801A249712B98F8F6684D7361A1286AF3E4083CC9E64F40A500F045A27CDFAEF
A66D28B966E7D491B5803E4E32D24FDE0B7C56732957AC35E7CEA2C1AA00C6C7
57576EA0E4C8F0F14614231A275836A622235EADEE4F56A388398B1E3B8EF7D9
F110CEE189C26CAAF7990882F149552ACBF1101C0CC34540AFE14778BB219B59
B3BB99066BCDDBD6A90DADFDC11833C934EC4E446C77F005D897D944251600E7
A6B304DD76E088EF97077EDE26FD1456F4EA599CF4C4B22F65104F6D0D96CEB9
463A89A504AB57C377BB062C02225DCA03E6485C035C6247166107D6C1A4FAF9
AE46BCF6A6475B4197423EF9DE9959CC5CDE05CA9B914F8749608248E964F913
5155384A2C0EF7347C378B111AD792A90E38E1552BA4D6E36C5AD7B56F4A5D0C
F8FE219670A817942121C56A6E64555EBD682B2A587F38458944A0E355F989A6
D77EA1E24367EB14A7D28DAC9A22E2DF55C42D244D9DB91ADAB25927B9001E6A
DAAB86BA6B2B4E28F3C65566E2DF0AB84140F348449C01E851C4736321D6DFCE
20133ADC7C1C76B14667721A220ED3DAAF96F20E29D2F08BB07743827690BF7B
6E45B4F8674A6FA270F14B4944F276428753AFF93D541651CD027D5B23BE4FC8
6005E73CF2508994E2244B800EA15AF8C16B9B8329E91644DB1EACF0C0C781C4
F4C411F79B1D23A87ADA31D3A48C7190B618659D7D0B64A40FC4773482AF8C73
85F80E163B9463C38F611AF4987F7203DDCE93170428CB54EFDA16BCA724284A
ECC3A2904C546D6F2ED297BD3D3A359F69CD6D9D92F5265392E03264AE22D81E
75A04AE68344A9F152859C697E93BC968A3F78C8604FB03A0AF394E19A0E50D8
A50838734E691BC16C50353B2441985488F0E70612603E3F0722046046DC94B5
017D456E865FB2E416C4E91494CB6FB74220158EBAAD27211EB43A348E7E1F83
87334F443CE79BEBA97AE481AD4AB1DC86D8BDB89DADA068799547812B285C06
A7820642245A91B895E018395581C536C3CA5680F622117252D1D72A6D9D057A
413F73C7FEA1993B5020F8574CE0C8B6FCE43E382AA3BBE0CAF9620ED0ECBE98
14BD19184B2C0F3B04B2D3ADE2358EEB27274D7B30DD69E1B2C3CA70F2F79FA2
9543F526BE2A04C6309DD3E47CF1FA44EFBAA756B02E839A6105021CA9B728D2
7C8018BECD829ACB6C3D9129E976A2427E1611066E0025917D1BDB7E9E37AD93
5833B94133FD5C6E5F76EBABE1C94999A54BC260661FD4DCE55956FA246836DD
DB17F52681C14DE689A8C6F2576DB779DA5064C8743100C8DA1A4DF6C8B7B019
CC31279CD27DDA52E1DA4CB052C16E049D2E6645239263D0B6E6419174661478
75F99B35930AAA74A477AFE29B1DAD0E6BD33735C477FB9BBFF2EB908D91B245
11AC525E15EA2EB389640906449D7A0A2979BBD6460F393365098CA717F915EC
27ACD59D2F35DDD0320956D2148DC7C2D7EFE859F41ED2661FFEFE5493FBEA5F
B1D26743416B6D20BA817AB49C66552CF7FEF8C99C29BD310590E1B613AAB89F
20B39C67B801932612BE59E8C4EA4B47A39D9D73EA96FEF2811F36BB337D4E9D
38D33E46E3F79F2BC92D811CC6DAB392EA379D23BED8DCA6132D76C53B78A28B
C434AF4C963E047E7CA794F2C7E845FC08034E600A9A20EDAEE67F65EBA7C2C6
1AFE1C7FD58404CCF6E173D56F8D3D3CCEC06A27BB12FF9B399DB1AF4BA9A570
5502F55E4CCF7160C54F7BC202236296A9052306639F4672E90E3B9DDE5FB364
F7BD728B86D3BBE1E37BC2104E79747402361416DDB4C1AD10889CB7851699BF
FD28D02FF638853114464CF170F3EAFC1572D2E56F2F0F692831903D20979257
C35CA8E92DCD33C7DD73FBAFAD2A3EC3AD445193BEC19A3ADD031C747FA67225
34BA34991AF3F1BF309ADE33C2780E971D3952648BE3ACB42BEC6D5B5DA0CAF1
9B5792A3F832853CB465BB8B66C50948800458912B40D3D1C93BFF447255A99C
CE4EC0E8B418284452650AC9F595D065353A0D84229C2226465DBD27291A7AAD
14E946490AEED2FF28FF48234265B4759B50D24BD711DAC55620DCFDC63493D8
B9EF33711947B65B0C07BB7FE129E074482B62CA26EA8970DCA4F35C139CBABD
4FFCF1E22865F11E640D484E5F57C00B1336A8F61DE8919B9F5A5D3533D903B8
948753E873822FF2E1C8DE9834854FF2955EDC15456438FED1B333FC882FEA17
CE5ECA50FE1EA7907A9A79564DBFFF9566BEA8DFAD1CD13FE4F4BD5FE272043A
59FBC65D5C5FFA73F59AE22BC7A9DE94C8D7D03ADE5D6DC0252CA2E3EFEDE150
916661FEF85C14B05424C0C51BC3E784E53A157C5192135A7055198A66789574
CA9DE18D9CD69BDDB4707F7B2C827516C1A6B49353FB7457EE57EF5908241374
2A4CD1BB78156D5809A689085E5EABA02F60389E94F86AAAF2B7E9E315B157F8
BE66C4AE3F0F649948253EC51D98A20B1C4150AECE1B644EF4F9B15154D3FF75
4428AE15D0D7F8837386F411D0FB2C1CEA22C286B7F058E8F48EBFC36AAD3511
F899A93419E74B4EEADDE0FE0B5D86C9538B9E3260EB814969E2E48645E1F5AC
047A8204F464CF29A60BA4DEAE3FFB984843DAA8E9420BDA882054B68A169C3E
54FF994669E0E0A4CD33F1B71EA3C7C787E612AFFBFDBB75E53941B46165FF34
0CEC0051A4EEF6A495823192E78065FD6060A0F7D8ECB4EBAE515878A31F197F
D069F443133F6271A817B670A41F2EB01A30F2AE8C73D83360E849EC87FE9711
CE71D9034EE8704CED9534746FB31E330BE53B043CBB36B38CE86196A8838829
AA72E7DAB35155314A35C56475A9CC8CC6267A6C8B55512546ACE6437740E677
EE22A40C38BB1F69F691122BFE48E6FE4003BED0D4270A59532C46091584E9CF
7759EF3E2FBBC0EE740CD2622E599A513A5A5F8F39BBA8D08AEB6465A1FB1258
980913106DE9470F037FDD15E6113A181DCB5104577F6303D8AFFF0D1623C49F
3A52C4EDA18B7B6BE5C494D3BE6EED741DC2B9D578DAF502D940AEA08876BE07
1C01DBADD0EBFBC4FF52507C34739FC6E798467FB71DAC5EFFE0D7BBC8114201
E03961015596BFDCD08FBB40B1153AB6626767FF1A48838221A3FAB6E8027A10
873C04482CAC5129F1D102860A54D8E656ECEA88768396EFEC282DC3DA70208D
6884BBFA2D4ADA174645BF47E448B703ADBAAB9F0DF2A0805C9B140D8CEB4474
0442AC4891051195B0B6624F3DB00520FF4657F7D127A24EB69B4ADCA04C25DD
A90364C4462F8DF7B588398EA6C9D82EC5A2888F03FD399BAAA3890E4F95DAA8
3D88BC9BF79C0F2F5A0752A8DC4E816B78B9EE734118C991282B1240D3E46337
C1FB2DB53C79D16B085D8400FFC9324014BE2A1D5CF3A0CC22E480CD066D1019
6C05A0EFD97EE57F50C5A59D1EC020C2C04DFC9F36C8253C4346DBC11A9D851D
A3A8E0D478DFDC64095D442198D9D530581F1C40D357CB03A7FBC28AB07B83B1
800E41C9104A62A074B44B977A4E4A9974A30FD61E80F89DE77282D37856765A
2E3980461481535061B2CC994D41EF6AC07B567DA70D25CD23C25C7D0B103312
B17D16087D670D7F854D5740F601C12493300841AF0F3A67E1E6093BE6DCB400
BDF8C5B29940B3CD12C56C7856D4B0ECD4E415CC9290C79FE24F1ED92BA45398
9EB7CE1FEC9D31E66BB00C09B952A829C5F56AE313967A0B57292667588D0A60
A045AE5775EFA566735F30BF915A60F7C027C153000E975E7513D0156C73F7F1
6C034A24BA4FA16E84B73917E43FF456B5C435C17071907E4739469EFE5675C0
FE6A19FEC026975039D81B532DE5BF0DA704808D7B0878A09BF1DCA721854AB3
AD69C48B50DDF960297D39DF2B708BEF605075EE12D7754830200D0EF7CB139D
07454666A9757CAF11889CBE919842FE4D30A9DF8ABD4B79FF6BFA7B048F1F20
3BF39512086211B6ED4A0CFB76CF072638DC21405F5C12971456BA64A3519849
2E0C81D7EC5306E4ED168682A02519583C8A4D3449A80F06DD05E185FC24E756
14597763D2683A5DA582CD0C910FE12D8CD6A6C6A3E4A1518E2BCDF099DA7A65
D2DA2A30960687F2DCF03E8EC3B3355440F8790D36B3FC528CCA877F264F9CD0
A9842A9410A0895DF75E1D19AFEEA0B92BC6D1851F9133071CFF77F6B7BB47F5
FA2D280B99D60757CB814F513009C4F8EA0E7C610D9815F6C9E2E43707530FF4
46F58B37C73CF2857A7ABB31EFD03F4B11BB195452F6D1A1689A2BBAE0007448
F08E8852AA459B4B19F3D15F6C7215840AB673F35C1710F16152A964659C8624
1FE188A2B151D9D4FBA51E499C40A5F15786F4013542378934CE6745950AC10A
8C4A87987B83CE610E61CF5F7C8B1546B7A57002CB5631ACEA320C6437B07E0D
6E591ABD90B6D1A3EC389BD83EE4E88353D85D994B25A9E343F133B43FBA30C5
2CA8A503F3FE224D15738C62BBA2C6AD31A0D44B1E9FD3E9E8CFBC32E32A32DA
E19CD9401354E70E1ED37284DDD65E8228E905026C46238C6F9CDB39DD032031
29FBC6B353DA5799579598B01A786024211AB36761C70E58AD2500BD0372EAE8
348C863EDE31E97ADF14D9F180343DA29EB6D49764B29141484BDCE75BEBD9D6
B46ABBBA618BBA0BB81B21C9AE3E8EF86BD5CBD90AAA608A3F65C0FB12D24CD2
86BDA10A436108F0D6B87BFF46E7E197D8541D72B9E70E255A281B2437BBC429
5CCDAA8DE64137227F139DC666BC06F880D67F16B316CBB5CDF1977988257A0A
CAEE781ABC1DDCDBC1B006CFE5A032B95CA40F19FE0EEEAA2ADC08162D9718D2
8BF9E906D959137073313978F2D5E7E701893AA6D9E4B7582ACD74AC46BE3E81
61DEF94EC7C83D65D86376FE392900FA19FEFED037760D1B21CC82451626B5EC
47DDE14A666942B10E15F853CC86DAC167AB448B9CAFFA4BC15B304C7446A71A
59F056B37F038E68455B580A4BBE440839A54B385C9E4571C466AF1B55CC04F6
46FB7704DFDF783B55A6821F7861B12877C5B1CBD6D3328DB47A624C0296A8AC
D7D8A62118514F9B7FBDCC8BB0867DE7CA55C54DB2D6B2CA2FFE02B6E5138C47
FB94BB66248014CCC738BF6E4D58E1E10A9648D4EBEA307F56725A45128EE8ED
27C7E7BA5EA1A04E90C7D88600D2E83D1E720D03106898433420031B98C0E76F
EF91C951381D9B54AE9092381AD48085761D7AC6A2F33FE7BF1189B74F71D864
956D63E797EB97023ECBAC73653FA3F8FF2205525F1BD257B57C0D292469C015
D85942E1C24C48466ADB7CE834363B8150FD58BE2A16804A4997ADFEE6E00F84
F822BF828C4636E80170B3D870EEB5E235C61E8556A2D58B28357C8A57EAE9EF
8D735BFB4715B7E2454D0F598F0BF61BA4085C37E9B93E79D1D9B0E845355120
13C74769E497F5FAD065CAD27B9EB2020C908E91E81B07A92AD544D201D7322C
9156B30A6056497FD3351D7C0F6F281460A76377D15113D005A1B66901FCCBC6
9829663359171CE6F8F94F8270E1C017E33650E24F353E423A9254DC034E6F5F
37A3D8279178B99FD3875BCED31F207E1DB47B8009A96BB72521D78213984E0E
177E9C7360E93C5A09A5977245779264257FFA0AFA05C2842C534A411593D10A
747F88319A809EAE7BCE9A7AB5B1E77B1B8CD7F56186183BB1EF5CD9063DF88E
60ECE319AC80193A8EDB7A58018CE9051284534C1F36D962ABF33DE5A6612AE1
2C94846951749EE3C9A2EE605514EC228BB66A22545962DDACC28AF52ECAEA85
FFD7C022053AB5E774464120A2090199B8A322D4E4B9F225EEF68B8281688882
693085432C07EC72C6FCD6B3EFF627203630AF2BD897DB3C7DD9D71FE2402759
53E222C1AB7FD8AFB2C629CD2B0512E17CC64DA35D43C4A831D03FCB1124534E
05AD6F4C749DF90AF06D25C8878E0AE2CD2CB6A8F5D480878EA65EAFB3C60AE2
36D848BF0FCAB713EDBFE54E4BA5BA08543D85A37CDB16D9BEB4252D67C718C2
A4595075C1818F6A1AA8F9BC84226287AFA57C086503BAC3DBAB76EC3D8BF52C
1ED0608B2273DCF4CB3A1CB631AFA51A23677CF06FBD07C632D409DADF45FD19
3E6EF5F8491B730E6F3509F43D146B66C6AC37133B518FE14EABFFBA280CD826
087D821A0DDCB63267A9A7701DD5EB7677649A26D94F03F5EA9956DD46B5F299
87154433CDDF37C40FBE2DFD467CCC73F5E1E9809CE9BEF643C2568A3365B3C1
540A2FA5E1DB9DDD2FDE4C295151BE1F1C9C1A407E38BAF13CD2B3CC3A3A5AD5
7EAD62A642F7BC52D0064D626BA54AAA0562F00EE394976F0A2F4870DB0C0FCB
EB6D169903ED4724723A954072436EDF60F30CD8AFF952E9BAC603C235A9D7DC
4D9416C47C0CA011F85308F5CE10B99E1B023E824D1B64CCFDC1111183811EC7
8038D8521F88E1E46C231350953FACECFD82FBD821919E3542B33690DA59D859
C51EE7A31E4510F5196DF93DC22D53B21CC59EF5E3DA0AAE2511A0731F4CFBEA
451BD48C15D194B7A0925481FA6EDB08674679A39EC0A7F739BC533CF7684AEA
10F0516B499942E56EFB6139518D822DC063095DB8763961CD892B5DE3777908
625E1A91DDE6077E98045C38450ED9E422045F45A358A7A162679E52850A292A
04B8BAA71A1D06D2FA9ED0B02168B32F6CC0FE765F2AF96425EEE41EAC3D35A3
AAF9348E13F1671DB099C4BA12DEB2C7D2C704581BD389D4C24C460375FF69B3
4D18EFC59636E9C7F8A9A62866F4E857F4EA7D25CC8749B07AD56F952B9069C9
1EF0CDF28573B5A46E82845D720CDEAC7E9079E9EA4FE64EA87FD6E64BBA672C
3E6A26B4F69ABD5228ADF4F9AC7621009AA271E0B41B6C1C6DA424F4E69290A0
78C85A84003435A91198648A941C64D12E8E1451D41BEA93204E6AD3AADA6F24
15A8BCD5C987B17D5F570A966383AA9F7CE59375525369CA6A559BEF0D5763C1
D7512AB6E16FAB0A633BD4BC90EBEBBBAAEA60A61E4B94F0D92A7A8A44160BF7
9651F0E264F81770C69C2A178F33BA78DF24F7346872E84795059D0A12F0E79D
D00A9FB4D7BD59E92911ECD5FC0D9343070BC392C6FF76BA32CC1704A1B7852C
077028B02958F0BAF81A04C5CACCF74BEA322B4845273B067CE1A9B7933BF8AA
212A5A80071AE2173470B43971818878DEB47C542509A9066C03C51A1A194CA7
1FF4DDDF5FB31C974FC3B57BCC10CF0A0F1770DABFA09730FEC742F9287F2792
B92D69DFB3B31F1C72FE37AE784561BFBBFF0182B969C8B466D474E73962888F
4872924DCFEF1D58B9118A1924AD8823E9CEA0F386D14195BEEFB3B9A269A587
593874C38B96EE3094BC95AEE6F1BE238B28F879C77F4A5C066EDD265C940ADD
DBFCAF37BA2500213239F12DC7E00B6615C66879D91DADEAA25F850083BE6CC2
6AE7437664AC6A98EE85B34A9A5F22879FB0BD63A2938F9981B2C52892697497
5F2499F50FA04347CAB53A5AAA7A2C22B671497C9AAE53C60DE5EE3A1E09CE2A
3246B9B5EA106E3D12338EC81D16316F21015487644B55DDA2E1146AA3CE0787
4FD5500C5FD4773525A9E12912D6B2A265DE09B43DD5272067C545347BF5F362
D403F91BA1E5BF9897E0FD98394A944BEBBE20D5795B41C85D883A7B825C2C63
2A45A8A619393CE6696FE4CF5165DCEEFA72DC1B32802595FC8A458C082BE1ED
19871BC4F4EE0CFB5116452A0583C7CDA275AEEF2B2CF35C073278159853E3F9
C4721801295766162B7BA50B9C4156A24084CECDF954E6508FB2866CE2EB3DD8
8426FB22EA87B5F38C119934FFA997C487C43CD58E4190656F7B352E24890560
FD20035A6FB8530E9EF89383C06A6EFE56864309B5EC0B1550029198E9E9F0A8
79549CA69DF4EE05AA2A5F075D57D8FBC08387EF2A58C54D8AB7580EE3ED58AE
B83B72CB902F538B6D5153870BDF50F61ECB986B27E37FD67F41027A5A2F1CEA
6F1F25312B41B125B4A46DA4550DB20C261D39AC844B996C9EC9203DF2ED2DF2
9C2AF195DBC923700981C5F5D55CA10F93D53C35497F93A5550CD9DE284722F8
FCE549F4133677FF06C973F989BB2DC8F8D2F0BC870CA2D0B0D46E0A05899D4D
1DA41A4FE88655F94A91F7A876708AFEAB29E9A7CBE0BC90D0E45B0149324F52
CEEEF248413B9AB45604C2037E471BD24485A77247B614E056C02723505DACC7
92086E18039526155ABFD0D65D612E0AC6E2DE0E5F9094E55F65DD77E8263B96
7745D99494FCFACFE9D03B9851FC8FEEBF287171660B9696015A69BA4A04B118
AF10776110E318873BED624E3B00DB455D1B321583B42DE5E0F9AD77BC7E6B1A
6CFBD3FF8AE2F0786C7F4EF8C2A5A242E84CFD4DC50ADFEA0C2E12FED1CA0C65
0C18287C6E4392ACEE9A1C8FB7FD9390F4072F37B10826AA7F8D15F5A74F536B
4F63EE567921FA7B005AAEDAD9D7CEBA399B3FDFF494D78EEF9EC6AC0826E99F
51EBF66192E45DF1F3899D636D518807D029E0FC354D9874CB4B618C65A2D08E
2F14862E3A62922390E1889F9CA029306E7E1E4568AD6F06729E1FB63B8B3886
CF88A7DD5419F12E32DE866604580CDC0B07E9FAFAA67755F81B3E69FE843FEE
F0899DD0F8C2F957399FAF825FFBEDACBF098A54372F2BC0BE39C9E243742CC5
3B20B2FA8508290E2C6D80A6AE0478021E111AC732FA0120B1877C6951F86EBE
AFE1C5725C894669FF44C8BFA89CF9FBAEAAC3B3A5CC1C9744253567A7830362
372E5EF5212EDE3106862F54A3D148BD88425747EBD84BF01DD06B761A5E4734
0C37814FE1FB817C7C68A5AFCE814BA03EA9F973E3F4E5F1A14EBF827DCA38CB
F9A44C73E3054BC981ADF1AA24A40520A6C06816598772E12C1F54F5186A550F
AC789DC46BAEA1D028891BCE072BC40599E587E8B93EABBD24983CAA7C21FD1E
44B7C3DB34900CFF47462A68A28CAFC810C1F1A3A51DAE21CA6F5EB4FF329646
3F528D5160C7E9F656D93EB214E1FA04F01DC2C6F15BD9566477F456E5395426
72B0D2AF645AAFB04077D440BE21B75A75962A0675857389A433E787DE991A19
617A6DC6D266439974A234EFCD5B6E0E955587621DA810E08997786BA72E91BA
1D2759753E96A327B6C114A5B6872C8C9C6213593ED56FEC6D5E9E8C3F5912BA
4BD3ED625CEF5EDBD37618D207AC9D2AF1C72C5852CBDE88CF595927081BC530
6B48BC1B97A9612FC1D0DEDCE26DD38CD0DB6335FC4A6B27E683A4B83116D297
C76128AA0CF27C1433A5B21C85C42294C5C5DA468B5307F0F0F9155EBDF9AB2A
053F432A3149B7BA168CA488A7C8F2A630D1B50C8AD964B732576A4881AE9CEE
27DEB4026FDD86F859C51A3605626B70FCD6DAA30568C75286BE9EE9B1A2C060
1C57F5B7B1717C456ED996C6B9DE9E1159AFDC804DFBA4D875BCD1C5A160EB35
A8EB174221DAFF096246849EDF70EF99B1C95A296106DE15CF1B4D743634DB5E
B2C1EE447A160AE2CF655A2941F1E48A71BC01CA5CACA1C98CC87E8404F41256
B3DF22C3C0E1650CF2AF1DE1F40487D51DC24E7D4347285682450EBB6D47DA23
67A369A11ED316CF1AC2294E853433340952C7F1E54D5EC0212C697D91FA63D6
E5955CAA4FFE0F06DD5A0C90BFABA39D0F2725E0DBA7C8CE305DE7C1B59DC219
7B35BE60C5CC7E02E8BA2137CAD04FC9B35F0225CE06E6F5F211FB7FC8593B44
6AF4B63916C86B2A9DE768BD8E3A1B5FA03C76B92004AD4FF5E2A0B60B0152DD
E9ED15EB68C155DFFD1BB283F3C5592858EB2D297AA93C055CFCB2813F3E8130
E33961FE59835F21DC12BA218780A5A6A0FAB8F42D90434A48E3F4993DDF5FDF
93C9E21EFE746214FDE117584140381D43F8F39618E4F57281998D97BF97B72A
12C91CBBDB13FF3DE31109B39281A3A2DE349F32AF7261E19E0B78B3EB858A93
2B26CE562FCDB42767D27812497EF6A45BADB374BD1C3CC6D8482BAF155701DE
02B1C3A9A93CF961399ECE1A897788B2B23EF0ECF516B4E2977709EDBD3DB7AE
516C55E742F598B4B9140A5364EF1F6F3A8F40FC28A8F80062CD6C9CA9EF8D5B
4FFDD23B55D05BBAE7F649385C4CDDA9A382634433CBC9D2C6BF444FE9559A1C
D46A71E1847119E030D30776ED4DBD5A2DF213D85A56B1CA85DEA53ED0299C1C
2C1EFB1C157CA626EC056A68B66C652833CDCF08803A5D0344DAA7CD767C726E
7BF288414284CCC3E6FB3DB31EC1858B0891E10C66EF859E5866B19808EBF054
38B9C5A297F739879F1507A6001113B11FCC641D676CD124BBE66287672778A3
BE351E58E961E816262EABE2E3D7E768B8F9BD9F4C10B1CA1196BC062E04A4E5
BDC05841A723BDDD67D0110B8331410F1DCF9E65E7338B42FFA5A5F8CB3945F5
86BFB542B229FECFCD917788FCB6F16EF60D1B1EFE2961140479458987FFE44E
8010F5D4D89FDFEEFB258BF9752463E3291529C0420927FF4C547AA776CD861C
6F7525577AD946263CABBD7656A1F5BF1E103CF93C0DD6CE244DD9B337968A02
FCA01585BABE4E6127C9DC4AD6EF6EE0D15AE4C65321DD0ADB8700E6F49D4494
A93081D9EDC3E6F33C0CBDFA4AAB10EFD2763ECF666139E66CF7D277ABA5AAEA
55AA79008640B603498A3906733A92966C2F11E260A5524656A9A0A0CB214AD8
10A3E22CBBCDCC9538BB8AA51657E0899F1723A90CB01EF65416294CAF223673
F451FC750AAE04876050E92E971F6A42046019E11D040BB87BBB7ECA6D7070EC
6A87416143682C4FE94904E5F5FC71490ADD5CC34BDFDA94B1438B4AEB72DD36
80CDFCE4008A7DC068555E6BFD1F3E8D1F7B13351D44FB1513CBB22AC8F22E33
AAA89275D3947828C6A9675B8FBB5ACFB75A80A168C6AAE8217A7459651CC8DD
6791A341BF41A595EB76C6C567A0539A035AE3749991DEA439FBF139A16A5534
2834F92738BD6BC724446933E8927F3AACE64BE6623CC75E74878FFEAF3702A7
C45E4B09188CFB4AC98BD8AEA47D89D629C49699BE537834825AE7B8A4467748
8AADC68ADAEF0E112CC860A42D5FB50529EA6CE284EDCD95D88ADDF46A74AC94
A09D60E190C548172D2E1D8F21295E6C0563A5EC278081506796D4A5CE91258B
1C760B7B24934B6B4671E42BF7C669EB92D9D974D5E29D6F1DE7DEFD01BE337B
CAEB58D4B2EE599A6F6A9747787AB8FF415A4BBB4AF81F71E37E6A0C5A09FDEC
8D3678C1FE53DDB897B389B6445A99DE978B0D81E4BAA92E8B121A1E1A04E893
2A5E64E2E417C6B64D84B19F7C2D7C143E2878CAF2F210793730C8E519720441
6FD5342DB3EFE5D9826106E5679AAAAC1804C8AB2084CBBB299ED351CDCCFC0A
735927A1468C4192AE8D8799A91A9EB19EA03D4883631BFC7012142611205589
FA4C2263FAF831B150E9615BA43E7E710108A7D53A4021CFFA25B6D7FBB581F1
58E22E137E896DDFEC3016130BE8F3E7C2E2C0DD5267771AA827C9A1EEEAE389
0F6E58D8C19D6F90AFD127A50E098A590E4D63BF187D8A93FE9F8CD6208492E7
A448BF4B4C63CF0C68AC833BAF4B22B26EFC197D4A893A5AEB6EB247627DB6DD
020C5B28A5F5867F1D07E70480CDC1A5036247F8F1C697A6FDA6211191D8856D
A7689FFA345D31BB30841E4EFC9ED1858353AC4063789B6A407EA26388F912AC
640B01F85B3B1CA9C3242781610A7D9AB6519B473F5D5D911F077A97BC333DBF
DF76A4A160238518C50D908A4EE7AFEF5FFA49D59C844204CC485B2C6E795EB0
3850ECDAF201BBABA430326604E56F26766AB54A6BDC7BC2DAA299201D951426
6A731C48B879BAF823745D6D43EF0BA7FDC43804D1B4235D8A4C02D3F7CB6F4A
358631F1AFD8CCF42255F33A0F71F5C59075B9BDCEFC4B659E93BACF45D1A498
4579F501A6AB5BEEBB25F619D67246632A04A14A7EA94BE0AAC62FDEE87E5394
5816B7A1E4B6764A0F87848033CD51F116ED75C3B58C7B93A5357D715FFA30FE
BAC7155B1E4FE28B0DC8DE04B043643319E48BC58438C6183E00F67077D2939F
24A13BE4C74F78384E7FD399CC47BB2F48CA5FDFE743D4CF1A918C5F58DF1D36
4E29610F516FB436F78E4E2174E4CA868698A7B0FF83E348376C235FE8985512
4C58E6471FC04A203EBD502D6C566B04255A82BB27AAF2426421F0093C603BD6
3827E28F17D57CE60091FC5A0371FAF14E7D7542B1B42D692328847E728A6BDD
31F576F64475E62FBF30074B701B39665F4BF41F69D56ED71F2662826D9A1865
668783704E8026D233E705AB5C4F2DDA808D365A7468BFCFBF7E680446F888A9
F1CC3A8642C108D34C4CED6F7DBE80F25D75116BBDADE2A54CBC728EB209FB5A
0BF3C85656D645C92FFDC31E79C6432D4A78712F4606601ACD7D328B95ABEE16
B14337A179D18E171F04F6E164C2CA9F56BC5D4E3E633D60C6EB6CCB0172E299
B1F6353CA60FB57A0FEF4F937EE9FA9C4CD65561E2E5608200B86DDC18C5C81A
4E75F8EEF896582C61017A720161EA2CE5BC374CFFC9EDDE8F98142B0E13F3E6
B825F861467649D10B4872EFC2B256A1C1D84D2CB53F1FA77EA74787017E92DD
E4CA70E9A40308B61A11D9B9DF27ED6A8E4E5C370542ED6B9BD96F7860B5FAD4
2B86273D30CE80C424CB288CBB7155E850CEDC95D7B9804A7F49654F2B9CC5E6
F2006EB0C32DF29D81A0FD4BE5ED75D83C8174AB99A32FB1ADEB641E165EB322
1FE1F3BFE28ADE72E1F7E45D55CA2034552666DFE7D5D94966CBFB46E98286E8
AB5BBCC5A8C431D8D7B220B033126AC26EA984A4660F22D390595911A900FEDD
4D3ABB86A7B1E2DDDCB2BC12801C4A8ECD0B107CB61341CEF6C18B52DF7F950C
E1BDB15548CAD879752198F95BB659F845681D61D02D28B185C9F052844D9A5F
91C6D8AFF0EA14F929D5598F4437AB944A06B5EEC3343EBDBBC872CFA84BDF47
71ABB21235F26ACF6B9807513FD4540AFEE246506B981C4C25D9FB5C08D065EB
272EEEA43D654F888EB2B5E2F8CD8F21B4A6E6FCABA356F58CA4959D605D6577
A03DE99BB78A0AA1139DF5414824E7D98D824B12E020C9DECF71C7CB5B1C295D
E9C0DE56949CA6905DC5CE4093E2F1A817C538EA4F64E96C20699C861C0558A8
3970B2B20819C87E06075DC32A70F10CBCA5201CAFB22E52F8C57F195F6E6524
13F527B2581AA0561DB3F64D6A0AEB2C3DDAB25909FEF00778D7003A85E904DE
41B35C4ED46D104E5A8928286996E80992529537DBE75F0705BE16EE2E8CA3CB
7BD913A9FF9C2E549536B3875FFBEDACBF098A54372F2BC0BE39C9E243742CCA
261A60A772848CD279AFD9FA3FFC6A1B269DF1B24692E01205A76CC4A6F6FABD
063ACE8A01DC45383306CEDF6B1DD84E223D306718D250574E4602EC0964E1E2
8AFA12B688D61276F94706B29796358956C55E2AFF9E1DD0699F84EC735F63CC
8A90417E80E396349CCE3D47F084C95E8971D17B6C14D5B2A021154D274B753A
A96964CC6355528E6E2C07E9AD472351050F942D4323A5ED11D5E0B35A7B1204
741A6C9845338FB9046C95CD41718836E7FF97C27619BB4DE3C72336A0079B6E
8D1359A7450C8F0045D6FBA477667651DABD08368A6487792F13685C59BE24D6
F350C447D7E64A7670BA35F435403F4EDB445B75C893FA3788B37E4CDBA2A5E4
342791D3BB7FB78376B78655F278DC7DE38988C5661E86299C1267B2AC179256
48E0FCA874964C393D4E43107D83CD07880A45EF3A59D1AB95BF8C8DBF57C2A8
AE8354450B6EF848E437B50688FD1B72A4F714CB783DC5D589BBCE42C18EC86F
E2791FA6387A4E1ACBF2A59249A40DA014F6B47B79E9197B49BB995DE8481BF5
77BC17BE663C13833162372FE843423B04BFEBD138588EF5103DF90B7DAAFE39
ABD4C779E1FC59035499DAC276D9DACA74673F9897A0DE47408BF576317D11A1
007B0E8E8ABEAE7A8356DA1ED8DB202FC30256FE361FF7265ACD2AE45430E2DF
A4499094A2BEFE920D6C09EE7D51FE5378A074547878ADDB5E7658E79045B4F8
F5309834FD69392B73C00329A2BD97A8631759792C5455A628C6B99BB29B6279
4CE4AFF4A8CC6A56311513E8AD879777812D6C68FD840C8936DC2A378F50F10B
3F288FAA6176508A79C1D18C9EB135546E055AFCFBBC8533C2A414DDC358E753
C911F4B1A3DCD0A137DF21FAFBA9E8FF83067F15AEABD3386CA97FBACB748809
5CA5EA7F68CC20
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC88F86B07C1097F9C5C5673B88582CEA8CD622F9B0C79
E463DF7F2F4C6640FF3852BEB520F7B23D8A22E7E601EF9CC6D0A2E6E82E6840
65B82C6A3A6692811E2B4F57723AA3A6E27076A2F63D6CE1FBA7ACD844E732FA
02797B386F2EDCE9FF9F84EEAD17B366D678E61C6176FEC09C94B74DFC090CCC
40AE9DA65E5DA02E7A7E8A840B45B752AF11A279BA06F821525DD0F477831176
84C80B29D318260FBC314986223F9EC4DB5B0EF2EF5D424C6DA581B49C709E1E
98149FEAAB15DFE7F94977CD2041DEBCB1FC8F4F3B288515CE43713570027C3A
C603C44D8AEA1F9821E0124F9AE3E5A1EA6D1C6304DD03CD20842B335D7FA068
735311F96609901AE3F757E6936FB0AFC41E8504D553FFC1556A37F78DE79AA7
B72000C7B2DAFF6236CD773386E362EC7CBB1284132F1FC2EA71CC5D2E2A146A
92B5ED12F71C8EC58BB4C207F5E12E9A87FF6ED8E4AE72E7FB4BF0253679DDA0
C7850A553C7C1F7CF3A69D7ED78AEE7A900DC7AB539750B476A9D5A1CDD4AE46
261FD41D059BEE4664BABF616718A6D39CC6F3B254793991A8B7E9FC23E36D55
9E4FAEEB77F3C3256EB11057091DF6015793701DA3A8867BE168CFB9B5D52529
CD81FFC45E2E99E588BEDDC15FE6965ED77A15A1811149056B35E0072A94447B
2B96971E35DE1AEB670A4FA101037918C9F3EB2C63A18B8BEDCCF4AF228E9A09
15EC3A18F8508C0A6228E3E140E9B8F13AF7217024CCD16C068639CCD9B566A3
7375580827FA4A69AEC8E237722DBA50BF57C2ABE940D44DB17131A820C6179A
8F984CA1472D619117DC6AF37242576C4E9A56BFF2D3E717DFA4CD1C1DF9A1CA
D2BC6E812806D30B4821F1AE91968D5D82AC13268CA45E353D5F4E3378154FD0
C9971F42B757733811FE1F00D6221A3F0677E7155A03A55E5876F99E6BD165B9
C6A43EC3CA9EB3F9CC21013C0AF85CDCC0FC6453406CEE1E199A2ADF708DDDCA
EA17D0A4089A8A29528E45C47F09C56AD5389C3EE8DFE85DB56117D0F31B3956
20B82B3226F6BC5C91A3B65FC42AD7937A6CC6A4D5646B2F2E0283A50977974D
BF8FEFEB2915C2BE937DB4124EB9A5AAFB7FB94EE981CF70228085BE33480607
0B534E0DB9515175998232F9E827505B27AD12B9AA2BD0774AB3D74F9B3A6AFE
EAFE31C8A721C2D46AA00C10681BA9970D09F345B8075BBD6B7FA756F09A7604
BB684B29637429617F368F7D57187F0828675A52382D41DE6CD9FB522E51359B
840F233C557593D4234CACC5126F3462210C42A9C2115B4F48C0011F6BA33F06
41BD5C87C4646E486588B8AE406DA5714D51034E2A41EE2715E3F2F6FD0E247E
CE02FE4CF276A5FA2F460E2C7FF0D79D50090ACF75E7E8A6A790970B4B1F2C00
C537A79F7CA2827B609A9AF889F295A9493597FAC6770A9B94E0BEF9D47DC866
62AC0A865E7A1AA970E9E54F0718916034ED6386D2F729893F8510EE36980BAD
9B3A53DC7C73457E37289134DAA88ACB8E69D1C61919A3E4BBFD71FFD0182BEC
55EE37CE97FD2C8848D595D6B268D59834E14846B0528C8BA611C82CBB4A6743
7C822AE458BB6B1525F30150DCA2267C2CFF0B3B4E12E0F02E25E1E9F770F43A
F4C98CA030811CFCB82822ED4F2ECE98EA10105A3E8E623C45F842FC5D899B04
475ADF61AD6844BEB68F8D13F1BE6AB5EB70A493CE672220B520F04C04685A34
AF41E185FD108C071A94AA2C607C154BED06159C2159BCB565C316DE43146AE4
E04FA74CDF3F0D0BB4BE90699C88B4780643DDE4D247F6866726831BA95FB161
13522D12721C4CF4E581D2A639DAC07BB3D565D6FCD413236419B7AD77D7F885
24FEDE6B0A80220A5AF9D3122A9591EB3D09164FAAF2714A89432D4C67E231C0
44DA48051C85B91C6E37DC5B5EFE4272F94FBAEB6078B41093EF7644AF139D73
2B7626479E58BF69EC61954972552F2CE2120D39CE2F3384DA01E7F23278A976
F242BE29C3A66BCB29DD3E98FCB45E8A279A80D926D0EA8B23E660BC627E8C0B
1227D7F8808A57433BA8E60EE59D52BCA279075C14D024325E46B110596C6A56
7722D151104F2129392B2A70421CF874698AFB8F47C7CD672149148A74EB14F8
3E6BFA7BCC06264D2755468CE6D49FE1E0ED8C7345374FC28B2EABE500561CBC
521EC21BAE7ECC2F2532627E33539F828A628F03C07C510C3758698AB2A4E731
9B27FEB3AB1F0E558C3A1A835A888EB0A9063C7F9C9F15EFDD1982BDCDA24E91
0203BA37F6188249B1C1B16F749A090E52CE8885A1AB769AD4A54F230449C37D
9191B6D753DC01F9C458668A2C1668B9DEE93875F7183FC26F55C342A5CEF160
41990545F8CF0EB3B959E1D93D6BE8B81834D1B0D4B133955E97C3F4338708A9
BB9F54AC01DA6EC7BED5951245070F96ADA55AA70DC72C8BC9B2B12BF2AF6497
2C949AB4F811F7AA86BA2BF5968219D8ECC15C9387C0769A8E3CE7151C9CB573
B226FF4572437FC07D7DE43B8870B4A7B0543288A3092E248A077C6A8C86FEFE
C17EB510204B388E1C042110E7159E7C81EBE842770A1E34F0B0D3E7D974FC6A
B21849078342BAD312BF56CD251BCCECCFD749ED7EA3B63A11A0A00E85F8383F
D1DC64D87C2F7D3443D018DC2CF56BB913D1BB9A8AD721505F1258349E1DC164
34DA93CE6D4FFCE663DA92298E543FF53C19233725423D821E097246F2DD3777
FA40D4B22A854AB1497A506272F9F2292616DE37203B97F56D4354201F770D8B
B11ED80597A619EE0310D19ACDBF2CFDC1846D72CF0EBAF4D0760DFF233D746B
43B7ED273395586C802EE0F3D5CB60C82A9FEFA82E4E8CA9BF5EFB6BFD0F5A67
011B8C46642DC08128E34ED4617A07FD023B362D6EE31705CB1CF45A43CCD9B8
3FE32B60636AB5A1C02847AB8BEB11F5D2B61952179CFF1EB7BC11990C5911B7
EDD7CAE2D4B0430E3098BF8148845465A30778348C2B2AD113FFBFEDCC42321E
5F59D0BA242F5F8F533FFA07FC8387536AE451A8AC52F6C99217548F2B02F44C
8D6175AA64314CD86586EC3745FA315EA20037BECF6C7C0D140EDBA8B6F2A522
56DA906F4439C7AEEBE66F99FA2906ABAA1A2FDCDB0BA8A9D85215150F1D55C6
F3066ABAF5729797792C28361E285F81A7038822F73AA837333249DE9A5DE9D0
38475DC6DD9FAEB65A0031F150838AA6106C4FEFBF66326989F1B58573E3B619
0EBCE5DF51BC99078C43D1159199C5277A63A05939C53175198A0CD2E555CBE0
503FA32467379250EF00921C66DE14ABD0D397DB2DD70D22A88DE03B1389A5F9
56DB743E93514F6F482B50AE4C1E7E0E526B1A4D9F70FCA745DDC79D65B84DC8
73B08F38E92E8D96FAA2325178E46B524060D2E8FFD67A1D02FF66C9B5E424E3
C0D75F30050B536B3F9093806687BF9EA462F19FBACD9096591CBA9358EB7351
EE6B200BC17018D319A15DC992F266AA2996E5A6DD12C29488D1240F3A42A286
300A8A1E37A857D1A44C0C549DEF6440FEA8B87E92FE07D4EA50F08D26B63043
DA04973F22977504393075F0302DC991C798873CF9E5703AE4CB2D811775CF91
30C1DA649C7843D7529E764404F022C0A8626F7E2975CB36406F910B0D05072E
F36B96B6A5D139AB6BDEFA7400B8A1BBC9B5A67656E0CB34DCBDA48BB6A5AE7F
D088ADCA08251B3002F1A0DC6C13B9606876BB078B7E87DE89BC5C3C0B31AC78
FDDA851D0382B3EB974759C0420E85BF5AF077297818A102EF1E68ACDBC4DA92
BAE72C69A916289BF0E1EBDDD822C4806C9910B73D9EC9FDF184395704FD4DBA
A13F090DF2E0C9082BA11A04045D28E8A338696E6C7B503E0CB2DB130B47A292
D7E6D3B5520F4ACF8881FF23CD4972C8BF083FC29495B1B9E78C81E9DBF2DBDD
1670974F70167C1BC6F0C95D82462D36105CF1A6DD0BAB3EE0B9B8A062E64A79
E067ED711707500A271F24A2F9AD0B5B0DEB4A6B000CC871D4D22A373061AA8E
0AB89E897C5FAA13FFD01C9C7C213E4A99C500071CEB579B221EE538EE7A3A82
5B7D209A24C760FA29586631F40D62BA53CCB49560F9BF9A031FA125340732ED
987B8A1646C40A862944CB94E8691ACF9CDAF6803DC32244DDE81D9B3F1E1E0C
872DDD2D30890C82BE34726CCEE77E5E30E02D166A4AECC9946D70C728B025A0
6B006B2F5117E25DDB5EF18A086C9F4FFCE4AB9371345BD0ED98564FA8E4B615
5BDD1B894C420D9AE0162101A28FAB1C239A14735C0EC7D3FFB9F961B97FB918
C13796EF74C95042B4E88B99BF3CFD35AD492C6454579348B26772815D2F4EEA
39145EF9745EF22066877169FD247F985A4497B3649170423C567C3CAC639448
9D98143902E97237A4B9D2B0BA5BAF1BF6EBF01243358BB6FF7916C001B99A98
ED77996FD1A3DA8C93D7FE330B4DFADCE4880D26D6C8CFFB945B8234D78DB4EC
A0ABC0E6CB9417CDB810BBD494ECD6B1177D5A18CDC5EB60DF1A67847581FF96
637D899676B9F92E8886402C62488A8F93EFD6A71B41C84F6346B9F9A31FCB15
23361241CE7B1FBA70E2188211965BE630B0040C1DC862D102A26A1614A6FDE0
390404FCDE8E311B28AC1E8271E053820111656E46DBE661C9F8F46757FC19C5
3B24C180DA59F69E9160168DE244425DC5D277A8593EF032B9B26161CED370A9
F96CF85D01220FF9FBD9F5D89E3C4118CA8A89A863AD350F9942624D919F6582
83CEEA40BBE4977972BD6464D2D18BFCCD11A97BC29CAC785D40D7229F42FE18
061DFE0AA2618CF41D0403DCDE3830BFF83DFBB2F51CFA0756887E502E39037C
8899C936327EF37771BC06C8DA06A097B983AB2CDBFEA749808E165070591D9B
5C1F4C412E461895F62B9D895923A49A94017672F620269D4C6CBC889F41CC0B
AE9ADC02E72F9772E30CF825FAE7977C1A158A72054DE193DEEC001187D69050
C43D8B3D29DB8B9D63B9231097C22021F59D56E5E2E8EFE527B5BC89136761CA
DD3B61CC75CDF1324F7C90C1D979FF96114111931A65E829C285E8BE04C3C8E5
B660E40F884A377D526CDFD783E3E6511D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492801936F5E8A1E4D3E7274DF2F942B199
6D1183CD9CE1840868C9F63FFD1470AEB47FFF33703961AA34F3DDAB60E003B8
2AC1CF96295105A1686F43AB0766CFB77AA11B6C2A35FAC32CE4B5F87EB125EC
C6514500A94323FE593E382C53036412B09BC866F7FDE874F7CC79FE5120FF31
49483DFA3A94C37DC02088BCC1F9216D904E39F0F309DD6CB08C7537A7232DB5
812FF744EB62B67DCA2A8F59A0CF417AE778624FB2EDB7C4BFFC78BF8F01FD26
CC7062272CDBEF76089EC94D81E8CE1799CE9683265DE8EC9081A4880B2A4A85
C0DFB2B43B0DE7F4966E008C066BF6EB94409974A30FD61E80F89DE77282D378
56765A2E39849D81D1712BA7193FB92D21BB87ED788C589CB8815BB33235118E
56661189F7EB8082AB27FB0134859D338FF8AFAD4A873434BA54F345A4579916
27A6010A110BB3620218BCDE98C1DD2EB7D4F9620BC4B7218AC15426E4FA49EB
96D19FEB158D305348CD49837AB3BD89872D7424F58FAC1115AFF9379C091AA1
66BCBD86EB1F0BC203EFC221EE7B9B1A706A9BCD08654565D2D020355736906B
6B49A9E2D4F5528A7AA7F82814BD4A0F872A3A9A3DB9E454670D51D7F880B571
05C366245B65AE81495FC155B67C8626FF33812B1372175E6FD7D43D9134ABD9
70E524EFAD438A22F57C0595450394AD4A2DAACA192E92CF195742D5AEE9022D
B0B214D3A0C5FB48201578146A0398875225D8B82A812671A9A853C1E216348A
B87B18A4184C84556C0476BCF80A677C10ED094F00C582E77F6E21A71D0C319A
466A6202027833484674C9ED2EE44D10C0CE6B2EEAA9BD1B768A46C803F4AAD1
A3DFA06621001C51AF2CA7A39AE14A233698EC7F74892831CCB18FB0F415637D
9DA636BFF95A389410C035039A8AA12C716CEFB63CAB2D660A2809569B1CE561
CBA1F7CD528FFCEE309C660D5004585BA16031D469331DA20C3D092BE8CE38C3
5CD2C51E4E4DA76ECF291E75620A44CF49E61F3E1B499563E06CA6CF44BD3931
9CE74AD419B077F15EAB31E5C4B86186A1146BAED05F01A4B2363194A109026D
51F307DBFADD52A48A918EF0FEB00E6F5C40FF92A66704671E56366DC3528793
C574A33D7CCDB6F875BBA9E474804EB0AD58416AF8C5C5D1F58D60E519AAD9DC
63574D9980BBEDB281B3C938D07FC7C596429076AF0E8834E0A9D16AEA620359
A8B6BF01600E4A11FDBAA2689E99E8FA8D84ECF93E6F861A0A32EE23534ECAB1
259C875ED86B498E434DE53A96830841499F9FC786D3256B046F7E559C2D53FE
6C61800BCB0EB3F63364E6189AC765FC2C0D760A4DE22E2259AC71DABEBCCB48
DA53279A00B644BEF46B61984E204506038E76EC13C6264E69B55D1971CD164A
05901F83FE1FA0A1A4419AB592E0C0708320E8D6C7DB6C9792C6DF48EDF14479
D008ABE5E434897E2C25C96B98AB8C92298D06EFEE8EEBD3FA6C2F84814D8429
F4EE5833E9AA37CE0AF7C4ED41B2F7F13DB459A5F8DCEC4BDBC477FC04BF8104
80116C42EE50F08A00E07D24CF1821EC37B5BC32291240A2988FBF3E808D9837
32B058B03A8835CCCE51B50E52817004E4D3B74E0CA32B58F48F98DA8885B49E
EB34067BFD6D4B1CD777C88DF9156585B5393B876ECEC4101176BE636CB678AE
18A2C2872E20FF8BCFDF1D312FC0FC0162F47FB4D8D9034DC195A6288F20F47E
A3BF4C901BEE4B08759E95A8672CCF928B1E737ABB84A750A16A4999D5A59AEB
5FAE6FA51CC77C15D780C5EDA3BDC42B5E33E32E35D9AF3AA182A47C78AE9F60
BCE49A4B4785A6F1FBAE9F6C8676D7B1F6342DCC35BEB26BF7381EF791D4E761
CF5199A06AC3DD5F5124033B63B9D23E40724FA9C3DCE3C2B9DED6CD9D11622A
F851DB191A0720E853FF0603877722871CDEA1DB2820B53B2B287724BBB8E65F
E1141502C1218C55773CA3C6D3D33286B6EF38C81511BA8FF4887F3EE4357A42
1575277B8F48B33842547F2E2696386D1920A869243F53420EBA5EAB54830A6F
7EE7E46C17DC37886D0C1D801AE1C9A1A0D4A523B18B181C72BACFBB9F3A3D03
1A22BBC605754C5F24579852564EF01DC4AD98F15D522BD15FB90246961C27E5
6CC157560A9FEBBFE627DFFC6E90B9C4CF09EC209962BD3406653A98653F419E
AFBB18DF86BE7A0BE656C42B2E9FE0492FCCCFF5BB4C531EC8F491AF5C3AC218
8A06D85305F4994827DD1017EEEE54B481F0629F77E65CB9A2FFB4CF40BABF9A
FBA92A0C51AE000C8433570F9FB1B78757A4ED5C2344F44E27B6BDB6C1C4998F
E9E141E38E374DE01977C142E0ED10318333382EA2E0FCB0B5E24F51F3B7FC5C
87B2FA8CD5B651B7295550E1BE5131565720F61FF5AC827C2A085375313DCF05
10DE1515077A8CE5BD7B6F4912D8BF877A487B252B5C8AF429CB12C6F5DEEE48
3B14BA4369E95F8C273681D55D9AFF41E5D245E820EC0195E99B6E47CBE1D39D
16881BC471F50A079F9FA757931F47EFFD4983A7A210F2585261A04A60F7D0CE
0CAD7375E13E761D8D7E9DEBE27751A86F225F2F36B7F17DA91A4EDF8D09AA0C
3FF6EFBEE498CA8589D0D52DD944C86245BD9D75B49EE17C674DFB08A6A6F06B
D839C1571FF4FC6FE4E23313A4C1BDB0013983EDC0EA4262A17C8D17CC29ED04
8CA1D1822D1FAF7B91E91E40D571A0BDCF87581D59EF8B0F11669B511447E494
E86464719934B4342C86ED7BAAA66B457B4C353644CD4FF8024C28F61A2AEF37
E4F659E4B3AE3CDBE2DCEA23358E192532476CD8EA1F5AF507CB853A32E8C1FB
80ADEDEB21109414C1615E41C6952F8ADF3C605E1665BD6D376C4643295F769C
4B52529A054F6B673D04B8C9C1E2AF82ABBF59E7E01EB6A7FBA4F7E2CB072755
9E9AA4A408FCCCC97F38EC859BB4944602BE875C0E8D3B9BBF3165BB4DE936CC
3A4BF19EA1C5D6C0D79F9DB3B7F186C94B032DBA0F9B5D7C90EEC6B06D7DB4B3
BE25B94CAC3CF1DDD1138FCD3D8133FF476197F30B005D7003EDC568C84C08EB
2BD4FE16949794F0A487F9B4CD388D917086DB5424750CEA579D039411C1E910
01090A4A7DDFE921FE09DA8F0F6CFE3C91EDB41A2ADEBC1668DD78E58D164E51
081B57847EB7A96CF69DC3B99D7E681A9B3BC669234B15780303EFD10F9B6887
E40A5D78E6B1E8352C61658CDD33BE34ED09BB1BEF9525DBECFE5A994960549F
12A588D00AF46A86B7B4209670E52D7342ADCC36DA56CF1B5C445288723EED15
A44F4804329268F442A5CBC84E7AAA3C6A481246858A42684EBEB008B52B2D11
273FA3254F51BCA6F444C290D052BCADD29BA4932698CF645E59497BBBC301E4
007A136572E6C3B4EE331219C084F7A17F8ED87A4184A45868C078936C6D8624
59D24BF2F6C83002C1C8FE00A72C7D2F3AAD415B961F52CB0E71C1237DF11293
0D074D76A35F19891E3842733F8AC91FDEBDF9F28DFC42EDDA137E5D0310BE80
2983122902301AA930F0C6AB8E84B4BB49A972F49D260EF7A5A6763155E7FF57
F30C4E6C5C39A6E22F1B51173429F30D827089B443D2A9EDD1361B39C0720698
232B4F17C90B1F928300F804876FBCF6235BAD1F0D3276F1C0B51E22AD1A4CD8
589F4711FA54E6D4E2B97F56C7B4A3EAE77A96BC88060137FC4891945C512870
DB25EE7877EFE8FB55E4646102DFBE7CD1740656164606556F9D7754A2F1FBE5
680A40139104B2FF7F595312B9628369FD0ADD4AE06A051107EA4D9374C9F1F3
CB5EA9D57FBE736BED07F48A363665E89BE08571244D15955E6BE8A23C751014
185DE948CA3D6F619D1B6A371CA4D8F9B99F349B12BB4826BE82D64ED19128C6
57C8090E62CC613FA441A239A35712BE749FE6B962B946D56AF4DB0E0BFA4FDF
D2600F36C66CCEA91BAB43F14CED19142764D33FD6BD4601F84AACA24A6FBBFC
F2740D669A3DDBFC05DE11A30BA6976F13CF89037C56AA3C9B7FFF11E9378A08
B9D0AF0BC5CEFAC36D191D62DA31D6CD94A54CC5CE59292C6E526F590055B18B
2E8AE45DAB0A4848457A42152F9BCF7C4A5E7EAEAB6500F9059E85CA54122ECB
FFB23D7A75DE5B6C8B56DD6E0C9984D8B63A12D9DC4BE10B98D5CD9EF55CB214
447854ACF32F737961660719E8594F3D869FAB0C30EB902DD122E16010687CCB
A357EC5C1C77239733D652E53439C76B0EB28FD20AF1751A73E37D5200F5A884
569B1400529BF0EA521607C9807ABD0BD1EE271A41DC8132A96A11C32D2AE1AF
E605C5D89189E06D03AA72F51E6E0EC760CBB47998286C6A77EAD71325D69BF3
460E9F422318C2C88A955A6054DC9013584E066CCC93A58F6C7E86A859D490BD
6B1BFE492563525B99F0A8D519F71659F32910FE815C9A30BECFC696AD2F2462
0366F20FA696484D5D8E1304268CD4715C7B381ADD4976C0C85746ED8890F4A5
090FB17C1F17D4BB2529C81CC95BC665DE53BE2D07493302A5492BEA01CB223F
EA3B6CA4D0A2AAEF5739C91205A98E76F2C80BB771975E7513D0156B478978B4
A1B2D58C58442527FD1B230401A550980BF7F878A08C53CB64A7A0812D490A1C
35149937E5B2316F4C5C943978A64F1539B2833C618875DC4939C3418A614580
90592C909431AACCECB4A68860482B626C6284982BB055F60DC46F81014B73CF
D07470A46D1EF523365BA14E68E74FCA43C0A00C038BB32C43288B1149ED2092
2A5889C1B76C61582F341E570DBBE34BE213E7DDC521F7F708F540EA78CD1DA2
FC5C50B24F253C617D02E4748262AFDC4A9828B04B090643FEAAB5CDCC83BEF6
255CE53ED82E3CBF84A4FD63188CB3259F3EE2C41080DB9F3D8ED49CD80D92F0
0EFC552C5FC51193AE194EDEE32B4761FA8430E43AA278C7115310D4303EBE32
72D35C30193CE6FC9FB10F9E1B2043C805E50EDDD149C02EBB5C748935836250
38AE8445CC317216B6F631ADFF1CB99732E5D194B05FCF5BBF3CC5BFCF432357
22B50C788D74A9CEAF23100219B1CF3A1F09D967E429545A65BB9DA24F20DE3F
79C14B02F024EBEE5C1E79A408C9BD1DD6CD949502DA3268A9830D9F9BA8A9B6
D46B9163FEB5A8D99F07A9A623AAC35969666506F5C9E5BB07EEE8B930422091
9D12354AFED37CD28F168AA61BB6A1D0581D6BE41A4B61E269320688672BCCCD
8D11AC7F1DFE87A4F744D9BE85F1998EB975A32C3FC5007F8842B0727B0E325E
B254CFAE25D6ED0D2FF3DFE90D89F8A653956B8B4D23228A79F78ACC325E1810
EF154A08C869BA1C2D5E911782160D0D3460455DF6A1E679B1606C1891884E4E
82FE3E98F1BB523264DA54953C19A2E022CE7F88B57D5E7913A8529CD8E1D401
D696FE9C511BB1F67305D3A251D31C35D065AC636325718AF716F6B2ADE4D957
956045B1613114AF6F23E2A347E3CAF4FD1B7A9D31F74839FF6A7BF24775E5ED
BF76871F1F34D95BA8A40B5315BF52FD45320721C30DD277C0478EBB6B2ABE9D
3BB94C816955D0BE4732ED588181E253CB5FA4D2D486752659C90B818032C459
3B1A8DABB9DFD465CC454484CDA735B7015298A13946619AFA7D123B500EE628
A13C1DF299898AA60F7556F5098FEAE629DED7BC7DF8B3E12873A023AD8116A9
CA07D422DB05A9DDBAD2E69B4AE827864CD1D0B2F39B156CD7903C1C42E115E9
C5203037C808BD295196AB0201055D27B9479396116CB75D3735842F6E706AEC
C9FEDB9FA111CD84C513E2A42DFF6E5073FAF13FF8DD5BCC77494B34F46433CA
C90EB63E7E0D25DE6C8A067AA5FAA944A72ABF81EF85D81B878A24E96D6E1658
3FA845226EC733F5EBF4B339B9233DB80680CC93187A2D8EFCBDD7E14B89EC68
F4328916B0033E155AAF48909C32EFFAF7CEFC601FEA3FC202C8478B0E1C44B0
D90C20D922F2497D46D286CEEFBB71E57F70E9EDD479DE21D36B886FBC035327
144B153EA7313133DF49A031282BFAE32ED55E46339FC63A949259C275415C65
53AB46244850F2042BAF29D0DE3BB879970E71C52EB8BC75FDDD1940E252E9F4
4D54A2CAB96E83FF24A58FB06B0CDE19AC9332910EC9C57B38834DF8ADB373A5
B5BDB1D57F414F3B927535C285C3DE5937D4545937D1E1BEC43B403A00BCE961
250BCADD76363A7478725408B0DE897990729C0F4C6C9F605EDCF4CDE45EFB46
A7FBFCAE9A895D47D5DDFEF32AAA31EB86B25B6F4766BB606E8733151D3FDA0B
382A3A64A3B8BA56C65FAA99BB540B469C141FF7FA87471BFD4FDF4C1C0D8AB9
DB1C4EDF7F1982539FBBD85CE3C02C6C5B50B31650CB2FE423749D1BA94D82FD
E860230A96E9BEDB12DFECC33451DD7E052CF00FDC0A854E0373252BD1B8AD4C
61E9683CB5741A968F8B23FA77F42BAF4FB5B95E50C1281EFFF3160CF4420027
76687500816139C7897B9EC592F01F97697A17967D344A4BC9A568285F416902
FC22B7ABDC397E50AD6499394EE2DB30D988461292FF926171B0E25FC7EA594E
01E0E7CEE1D3F78AF7E8FCC548E655D710716EC5F734EB4D4E85FCD8DE3C0385
4F50DEE5F66EBD5BF7B5E77D508FDCD0BAB32D0552F6F4383F779695C9A969DE
58BEC9A6FBC5BF379F8A8171E73CD14B200DF449FB9D09F917E5CA703C7E9393
7D8120D75A9928C1AF3429D433782EA64D49055E86E8F3BFD8E0F18BC122ADAA
911578E0CBDB48E59FF2BCDCC5833DF4F44DBCDA2F6F6698E3A87A89A3C3E0FE
565DDBD45AE467A782725D8B3E30CF0794BBE57E100BD329B282FC53B9F4E736
3300652BEB5E6C16350D3768F4E5FDC99AAA25AD6822B22B9CC8A0E125F5EDA4
C090854DD806FF8CF8D4707C3B6CBC968560E302D2DB868A2B8F010172B9CB2C
76FEFC4576A763849B0F2EF72159D86BEE849BE3D5964332F99386DCC44868F2
28512875FA401C3074E04673F0EF8B828BB878ADE5BED2698E34B2B91899AD22
102AE68685A195170DB2FF090261A42EDE52676469F7D401354C2B2E1D67E60D
997AF64BBDDF7F66F8BCC18F2DABFE74E400F039DA42A2A12950FAC5F3977813
674AA6FA7A412AD126F6D23805CB9620828ECA931CF728A5013723CE6C7DCEF2
25ABF4ADD3E77BFE2AF011B64FC897917F6E490B5BFC1EE11AE4C309F99ADA97
28F88E9101671F4637AE61246DF5E024406C0132D29636D15F82AC13268CA45E
353D5F4E3378154FD0C9971F42BC4BBD83227FB5AC66CDC561DBB0BB5600EA62
9EE2D8B40F661B25AB58E9494F503B4CB5024B73C130A7853A7020DFFA526840
EF5367946F3DF67C10B47377A99EBA1700A9C3A4809637444D659BE3DA1EE2AA
BF09E19A9852D64623F4601D627DE4D2456832FA15B53C70BD0603446EF814C5
9C554FF65D9BA49E0247C275E94BB4F38D76A281E581B4391D0FCA41838CEB48
8F1578C3E50C6D6F6E313EC2050144AB05DC94FA9F93B6FB895ED6564B0C2F3B
595C9F8B8A3106AC80DB85CE6637072ABDD0B7C78FF990ED9B7B6FCC574BBD58
553A0D582918728DC24D8C2C25B06AE091DB97DCDE55F701A63CD60C489CB78A
E75236970181644F995A049EEEB89045BA9B6CA9194A2EB640F2E213494457C4
32214A3172F113F9780D94ACB7915123B143D92EAF14B8AC793C2C3FC2A80B9E
7F7F265666D7579BCEA6D053FE58FA2BC93A306DA383DBF1AE8B44DEDD7C92FA
3787EC52353484893919ACBDA9EADBAD6D7267995C72ACC0658E69A52A68726C
A8BC2A1119161B0C97025B02598E2A483A2A4131B1634492CF417B218758F11D
AAB9D763A34A791B132731FDFDD9DC994C11AC11F9038B2B1B5F0771332BF011
73E24BE8FDC4516C7EE3EE4F8E17601D57F7527CFB176F118C4F4CD1931F0531
799091E33346B8D187E6ABAABCD253999F1101EFED7759E39C831DA47BD4A044
943378EDB6F83E59EC7A1AF42EE975797830468685029B24612716748B45D59A
752A5E328658FD97C5928BB2B1DD883F2F765EBB37367CDB40EB73F4BE5C47E1
9B535F7C68FCC529AA011CC06803B31EF9A85BAF11F98DF053BE2D0696B65715
DD63A14FE70BBF7EEA5114584A9104889D76FD2DB400DF06C70397503DF67C10
B47377A99EBBCE5334BBFDD27F19E63578110A8079C749D8407CA5E0E159F924
CB26E9AD37F597241DFAEA7979DF9E1754DC4D3DBC15F2BB7C9625F4B09ADB0B
CD6162C0BA1320D1ADE2D9E60528611520249698A92CF23C5E8F45272A009211
2013534861328A5E4673A4B180A8AE1BEA97194DBA43CF31BEFA92A9DF8D76C4
F49C5CF8BF118B9ADE372F8A6C79D6AE577A3784FC94031C64514BE9CE80266A
7B82AB79438F28BD4D270F57A959F26997929BD1F886ED7B598AB20A52DABAF7
035C85986DE59AD301B93AACFAD412169998C520F77AA5039D010E970C2848C9
192D17F84CA95BCD4C1C3ECDF1B6AB13817D8CB48E4478FE89A5E4C16EE24A3F
375E7C561701FBE2486B329E785A8113B00497A08154752DCC693E0D1691F99C
B068EC99B0F5292E5450773EE176953AC2977E2D4D982E5FA720F57EC7DF7CF3
9EA825E6DD1012BF8416161FE31633A6EDA118E563BDC1C42F403BEA03F2518A
C40027D89A07A5B9E4C87FE8878535BCD86AD832F8E7D0C2F12AB40F3AACF574
76FE504CB17DF50326B87126BC9E7E152BDA1C4DF31F6BD83A33C271653481D8
68ABE0CCCC8EC2079FE9F74D53DAB010AA035CF7C312E2CC6D8257D9814601AF
EB7EAD595A6AD78FA30CCA9B8C31131184682A1D548076F2FBD627B6907A18FA
20B81D4CC8F70BBF39971CBF0B811DA5D0453701393DADFB4EFED6873046F14E
850D30BCFD2B6A49A29126CEE3DE2818FFC776DD40D3CDFD8BE52F1D15141F83
FFE43634E803A7E943672A1CD5715F3392920484887065343623958661D01D7B
4EF7591B5F107F831AF680016FB20C71D6CB7D3DDEE35065C082B37FF060B6DB
75AF2038610DA1FCEAA9ED39DD8FCF258C2AA5852113C51CFC83661E3BEE2445
42BFD2849D498C239237ECDCB23458C56EF095AA2C80E04CF5E36852CB2C4A9C
64EF7FBCCADCCC9CB96FF071BC1C3B8023F9F47A64E9F02623E09979E99A088D
A06584BE2E6A1DFAC98532A65305D47C72326D831319551F503707DE018C4D20
B99F6ECAF512EEAAC20AFCA99A425CAA465C3DD484429CAC1A913AEBF5552955
6F1123474D93C05C07B8689FC4885699E4BB7662ADDADC48E4F63B4D8BCEEAFE
DC4E0DA7BDECA4F73DB58514B6A079B1D70FAC10A4EBC4EB0BE4D725F63A6FFC
E233BB31F876BEE000302935A55EBFE1CE914272A8F45D31FFB476B8B54F5F24
9AD4F43487F61D3712FACEC12FE7FE36DE5F27AF56018CC111F42CDB35DFA879
4F96DA3E3FD4544A636A804D2FD6F7EB7DAE639A22D4B5C213FA9BB8427F252D
90ABB66D7154EA5AF4A165DF641718078B8E7A364F21989024421059D0F608E8
471A5D01AB5CC953AA3EA5788239D1FD4176B9C310D7754436816A8E2F4FAD45
9D4943657ADD842FF3D6D1143830B37E50BA1A1058A0472CE2059E675557E53A
7F82EE0052240175DFBBA48F652EF1C3AFCB19D0A0AA9B58CE598FF93A44C537
0D03AC8DCA5CD34748A1BC13FB31B0EF2B5A2D8364E1A2935F3463195DE95A25
3AD84C9B7EB6D771E5127C8C2DA74A41FA6A57C96511A0362FEF840B200A177C
C877BAF5C7A30679179E92036B9FCEC9F2DE7420F45D1930A3BC84A4B0A07BE8
7C6830D19D19CB2F97317336F0988FF39084FE11179521E18BC7CF33EE9EB898
3F782B9793E3E2CDCD508876E200F3B1C6FC0878C363AA64CBA67A52C361309B
09C897726DC616466250AF1B35CB0117C0EA512125DC02C19B85C24B38B1B40D
53EE56F03AAA0C951A08B0132327FC9AAE3322228A26B0376635DE8F7420FB22
C933BF33A8DF702D160C3450D2ECBE06A78E86386D29A7CCEFBAA8F35B4813CC
9D289E50EDB050D88EA0547B54C7469642A1D00411D464546F593A5D6122A969
6CFB3A0C9B5ED57ED3EE4435D71ADBB80CF300A243A7967826FD409509531778
4AB2F2B4BC8427F7185480E47C868308F3906BEEE44131B11B2B14E645935822
699E31F5115E7854A22F46951A51F24526F0B264B14549D63F4E170943189C62
C9D370C182723B4AAE0F2C816A464CB9910A2F9AFBC83648300C8C4E43B32947
BA511D4783F11B5F18899CE22DC92237B4D55F40B11811F1756B58168F9FFB57
2D787B2FFE01BC07C04F2C5FCA484AAE98AF60C2AEF608A1119AA13FB6FA40C4
27D01B33CD5242B5037208B1CBC9EBF18103447074E8D5F6D3E19A4F5D703731
C17E595D0E697FEC6C9A25BD27229860BF8A14AB6E55B0B851D2FDA257448B55
7E0FF742F6290E265C8A88331305E67BEEEA9A03950593623270B2D4832F9D1B
482062EA4F43E2110E483CAB7EE567AC44F4BBB849BA89F2AE5877339D1F2ACE
6E53FF0543728D79386D23C7203BF068D8A609184ABEC0D139E1BF9FF2448128
0A0242E823E22A4E32669BC829EF1B7EC8DB26C9A15B8F75F819A88755E006B7
98A1373B918398E8EA3FBEF65ED35C6D8E31D2914E409D64B390B0BDE4387876
B755536EE103CAEC815A720C780794868BCBA2EC36DBD3B89455CA9BFE2FE8ED
26203A2B353C3C9A823F5D3BF0599B1E4A6AD4E0C2BAB7AA375883C30B83E37A
1369E2E54C06B408FEE2918DFD868DC4480DBD83ADBB437D97AB42BAFB1097B2
E2952E86C88E94BA7025D7653F7FA4217D853967AF5E3659D9628533AE56E651
09467DDEB103FF247068EF9B9B43A951DC93BDAEF8452EC7F5B2093E36A61F89
CC3B6C73ED2387A1E63212A1641D8DA3489F03F9BA2DF35DE06DC843B5446A96
65CBF1F29E04086D86EF34DD686EBD47A517BB819BE476703E26922419B3D635
AACF51D5A44C841A968C8DE9FAB8FD1E8B380A42D3AB886A9197C0079E12D9A7
9FE6FD1A569F18626BEF4DD08E57DD9280429B46221987A70CB2912AF7F3A027
1C6D709209D8E5C8146F320309F5BE02D7B3CB10A0374AF59FF5CD1357B57FFE
BA7F649AF87AA556523AA6991F6EE897A839A0677E64C338DCAE28398846CB37
52FA92F87103C237FB166E65293B2C06D7577E63341BE08A9EBD674FA7533273
4C44A2F33077E631A05A907B488FEB22E3422EBD9FBE52155099730258CA9A81
3FDBB0170172C4B89A46B0DA4FDB94B618898A7BCE7591566B1881971217CBDF
D0499BF3327B9AF9CAFBCA001B7C0328E4C7DB807BBA1BAFD5920294D27652FB
28885860F09618562CDB826792EEE2BAB5CB9131A76DEAC166A7C449A549EA51
11F0B50E5C30CE4E498AFDFEE909382EF0E686A3BEBF3DD936925F10C183245F
1B733C17D3B854D53BA686CF408DBEDB3F1F78ABA6D758ACCD6827327CAD96B5
3D99DB866F3ADE8CBB6FB74CEBCFFD03DA113B0397D52763EB0405B785D89C0E
713F556814E051C6CEFE7E83C2F379BDF5D54B0441CDC416AF42E97F4B023C13
C1003EA18ED8FC865E539CDAB99F4897713982986AC73CDEB3B476617F4BE25A
3C3068A83A513556D05359A393B6C6929BA1E914FB1E9AC14A1FC533EFF5BA5F
1C74DC3A24E5C007D1519DC68B52DF7F950CE1BDB15548CAD879752198F51D2D
891AD2DAF9A79FADA9891D47350986C60484889929D6DC2B388DDAF66FD4EDE7
10B8E01C10FDC551ACB318289F3B1B48224627B776221603B39A31DEB68B5D87
AD1C41C515735F1718E0BB5606C2C61197C0E5F9156400843ECBE178EEB5B0C6
59BA219BA4F370699C8678DE7489D95A094415358CA9BAFB89AFBEF2079EE97E
AD7EB71BAC01B3BDC0B3A663581AC44D7E7652336E2DD2AE066CE9F096EA448E
EEC36752787F85EB045535E44A67A09392A3376F58135BCFA5DE0696385BB0FF
B6345B7D39174F6AA2146D75497D79D160CBB55CF3BD474562426617AB28B54F
F006CF8C1037743225A3542A42078E4C2C937817BF9B0F2BE120B0C0F663659B
BD109420C6899ECEB55CA9534511D08883DE4ECD76DFEF5D261657763581A64D
A21CE46D1EE38D6003BEB288D35EB11730B666B9FBAE9CD11A2258BB34CDE155
22531898F3A7FA0AAF426EAC809B80408BB9B61C2FBE4C0F30F7E8F77C2A4486
5D97EEB9EFD4AB7C41035C47BBECF09337AC26BBB0E45CAEC8BE479279364FB8
46F886391CD122E422C56FA420378F19CA93390FCB59BED3C479301967EC4F26
F3CEAA224780C65D0357949E00E095AAEC6CE3913A5A406A455C4AE0BC827DEA
B840520352F35BD79F3811FA7BF788D1C1CF4A6165B8EEBC6559DD16E9BD7ABD
743CDCB7175B57B0EE7AE2CB7BCF00D3B674864CDCAAC830DD6D2B2353019C8C
BCEF379821785F60354A739F6DDBB748D0B86F21F9497121887FC365AB14D45F
B1BDCB0EE4A8E1C6763117EED34F871C1861A40CFC2742A66EF2BBB6B29D1648
7C3CFA6F892AF5C05CB39BD9EF06ECBCD35F10C42EA9DAF365763EC4B3977060
A9AEBAF74FF120E81AF13B3BAB884BB606362A32FE54F55883D5717EE6278FB4
9F6EAD48DBA338B09C565EBA8965CF383F4F4AE6DA98D1611D05E59ED9BE0029
BCCD10408AA78A9A1D1C8ACB7BB7DDF90F0B10B9704CD63F4BC399F6BC4CC276
0F7973D6FE77F7AB2E72FC28A8D2327257F5D1E734F6C9F5BFF0B949E663B43E
9FB5CAE5D39349BE33448D2F6258DA61AAF47917C66C7E2074C02FE9FAAE87F5
A611B1D378B62358BF5E25F652867D6CF825DB774EFD3AE4D7F6B695E7A7A4ED
77EE114F80E85A38F4D4F39348B96E5AFC3E8C5493E8FE4A63EBC10451308337
E1B50D361D971B735BF61EC499EBFA2196FDEDB2321F0A36B1B1C0E935AC8469
6C5AC192C57E6556FE8413B74A66B44F623D0C35CC8E183CD3F00890957BF447
2037451B79C52B101A5AD5E2ADEEA6BD41693342F71F1CC1E59B03AAB760DCA5
C8B9FE2979037AFB41051E6E7042312AA59FE168D6494F9E3CCB362688579A66
B4F180BA2519BAA2797FD877EEB5F500E45CB52475713BCC3DF290E23ABFCE03
AB007167423E62901E3A023A09FBBCFD4736945C9DAEBCFAC9ED3C19A835E75C
2C28D8B69B0B721B398DB8DC47CEA77C1BFC0CF412AC042C1C597CA2A3A81BA3
7D564231ABBEECB655904C18661FE3C41ED1F4334EED2A969E6BC5E6D37AC488
9AA37879A65DD2F8F5CE470E7F992C0D5CC50F3E3767BAD08962A9926FB0E1DC
FE4BCEEA8AF7475A54C670BBC48761BAC5A634060B7914EBDF5727D15A98F878
71B06E2B6B9B40E7849C5B566F3F4F5E1A852BB11E94721EF1D9536A4E43438B
FFB057EF8ECB3C939831527890B29F6F75580C0B64BC80D7A4D2A05C72BADC88
905AC471E0A2F692F6981DDB784F483EFF046EE7D280362E01370949D18B4561
8A585157125E5B161483B52EF4A974D60BDAF5C722D67EB410070991AF13AF6E
A8190C7736E1CEB74BB6D2AA231547356DD81C4CB7E9BF3401ECBAD71A78B257
66A63540CBA2C8B08013AB4791586424E8C00BB3E642A6460568FFD176941ECC
DE0FE73F40C0F9ACF91C95632C8275805A95C7653F712AB437341D51F3F0B4EA
AB69F7E2D9FCB810D66F032AA68F163F49F55272B131E5E6EB176C65036FD695
D047840C14F7F7C3700683A6539ABE1353C90246B8E1160C81A3FC3AF91ACCA4
C3250076C8E78848F75F38F675E54362F3A4A0DB236847CF783B0E2AC9CA7F7C
1B4B1AEF9E76633A3AB64FAD44946A50265D9C71DD1A355770967DF8B97D2913
1CA837EF8BD8D2A9911899DEF84A6C70E6B76D9783F331C0E9AB43237D22C489
F9681091AD4F7450E8E757210A401145ADFAC22679204BCE03B9B346B62199A1
AA39D156EAA2F6AC0535EF47CEA0A8FDDA1802A9E9C80D632308A3FAD59FC93A
CFF325EB5DF02E6C8A298C5E1D35BAE0A63631FF1AE00DA6A3D83E1CD08D78A4
CFCDF4677EFD614E46BA25E1441DEC497342E7EF2469478A9B1A190C52CE7DF9
40436A747B8BE79B32D629E14A73F28FB92283063BB5C0916FCFA3872524C7D2
F62CD91B882245105C6719E3399F1CFDCA1AE989FF4BB11CC08F971C5041B505
8FE5F71CAC0E0C360819B1C33D612408AD22B740B455963AABE12B3AE69BD228
F322F695F0C4CC62A0CCA22EDCD561C67D2DDFB5451451F3C27E48B4CDD5F28B
ED967817BF9B0F2BE120B0C0F663659BBD109420C689927ABCBA9DA81F0B2833
0E00E9D290B5334F38FF8EDEBB5CC442CC0A73D227E91F2C6345768368D4DFF7
8364CA8634EC0CF163B1A4A452233EFE5D843C24AC7A1DA764A07DD6990C619B
C582916D84BC7C1E7BF6D8FFE6BC5C5A5F3E0344E3362CF066785B2718EF27BE
DD441CB2CE6EB47299736D08F637B85F5939E47CCAA2F7314CE94A720DF9AB3B
DA89D7758E5794C717EE522FA72AF78C7819BD04C5B59737BBD6C22E2E22BFDA
F7CDEC0C8B0EA3033BAF8D0CDAA84365DD275592628A9BF05740B64A271F3873
91645E2CCA7BC5E8C069219D653E0E9E6FFBCB501230C60A5D0588CD8ACA58A7
9AF2178CC6566301347C918577D419B099312F3C5CCEF66ACBB334FBC0E2F6B9
9B3B687BF46EE3F9593809345EBB2A0AE063BDE6E2D4E0F14CAF3640DCE819D9
B836256A69E714D473D8203FF31741F7F5AF8960434EF9D42B093733094366E5
D413F89E7C54E85894B945A51324A834DA5B140FC57AEB1F0D014FDD9EF8D469
CFEB8E70387B4F1BA2119A322F3447E533C2B5FCA428E4FC55D4FE71464FB62A
8681C640F9640D910CC393BA92FCF7086FC5FF36E5CBC61E7F33DEE390FB4F2D
627DA91997FBF0E5792E02A779AEDC5EE1AF933CC4C33C5310EDC003A671288D
839DE34A0AB0AEE1DAF537AB0161ABBF9174EDD0D834ACE1E73DF1337A00E5A3
4F4044475F15EC039F13EA7D05FFD9C6147EF8D2AF7B059E1CDDC276CA7627F3
885878E0AF3B6556F9B8CCBE6918D86A763F7063770C406068E6FD645671D7B0
8465F77EAB99E15FCC2B42F9381F370E29B30A3AC45BBF502D5900B8AEFC8580
89C120C6027F0A91F7E0964F9FADE61480D9224F0ADF96018F3185DEC6C4F8EF
454A0A41DEBAE7BF7A16F17D727A1C821F80AF3245F40EB6241068EB5BC4DA58
52CE49E3EDD8F779D187CBFECF0416344DDA97E261157E828D7494B9437C0A4B
39D6E55D23D0624A4BCAFFB78FA7EDFFA0D597B8F93D7FC68E89FF742E82B979
9F30AFEF70CEC8328F5CF0C6CCB13037DA10CB4F91F6A3E8A5B9FFF0736BB5D0
62C59B911CD302F456569BE5C0AC8E33CF26761D23B955FD19AA6BD920710446
6A9A04CBD8F9DC947585D9FA5D06247899D32F656E17C71492C14B20C4249F9A
565A1BAED94BD61307BF3220045D981389D11861188B78D9A0873C2F602A13FD
E12F23C0111EDA919A27A6AE6290329FDEF27687F0D281A81ABDC3EAC27E00CE
50E523A67140BC479A89C01CA63F8AE10ABC3E896902A683EA8C50017213C650
94DA564747999F337746AF45B847653005D9EBA2E6D7EE17E06651B50B8C521F
89B7EB624D29780E7E5459B72274053CC700D6BC3A1C4E266C13EFC439A64DF4
10E3356C17E8E7AF67C80855E052CE163903E8C03A525E467DF8744A8B6DB57E
04C99BF7F56FE375A978118AC0AA3361059181C4A4577018E8150707C416596C
4151DF7D5DB5AD7787A917622B6A36937998D047B803772B4500CDDF5BACCB90
1AAA5018D27E91A1E1A41EA5B233C0C95EE16747A95BB2244BBBB48BB8E4948C
CBE2E59E11F2B8AEA96043535B1E57FB643657EAF37D806A4508E8A4D07B29B9
0AEC6B77483AA429DCF4896EE685873B50AF6922282F49528F3828523B5FFC3B
BDD91AB94755C46ECDEAC6841FE11E1452CB1303C74D65D05355B300F2BDD937
9EB902DC33A600187D236CEACCC042DA65DDB8566D7A932076927E443895FBC6
C391C87C0C52F6D80893D192551ED21AE022E86DDF258EFEF92295475D575989
FA1716B7FE56CDB18C4FF039BA147C2E17E940E8174AC8710855FC4F9E52DDC8
90CEEF08529FDF32DC0D5B8794C65B36277A3832961FE7A7ABB16622155C84B7
930A46EC1D0B6444BBFB934DBAFC9DBA2B8C0F9DC34D5C7D1341C3A7746546DB
1FAFBB76B4737359998168366D6E1FB5B051B7D6BAF3CFB4323B21D5808D636A
DC789843A91F21C6772E26126AD64D89C40665A7A04E67EEDAB237208133A847
21DEE8488F73617008B57AA4D8980E5812329BC2FD6827E6F13A063D4BB9CA62
991ADADCC3038C5854C6E322127AAD8F1EA5E6A37F7569DC09627906BE2A18C3
B36F7926D988F545F8B6FEC1C4318762DC0DF929D56BA259D7FD65B97AA9D7E7
002CF1E5A3AE7FE156DD21D0B894B04FE7F683003BBAC1A56C8580C0AB25EDA4
1D89ADCA7EB0ADD58CC307029911A9CCFC1CD1A53453613C6138C85528B8B794
6ED56C984EFDD3D7586D95E7DFE70FBD7E679F03A8E2E4C8C32FBCFB62FE4F68
4118DCA62967C066F4A2AE0815FE905859ECE6DDD10F3F7D37A1E0C9CDE51112
036B2FE00917C90AA9E0EB7903AEEF8073CD207EECBB9799CA184D336DDCDF2B
CCCA510FF751DB16CA829844E554B0E268E51495D7957B23583B13A7F2F06CDE
B8FFE7BFF6C66ED11F07B677FA3D586E24426102F0F6C5CBD0828C7305E1B5B7
94725A875C002332D5924291039BDF30E5C68667C0DDA575B44F8CE8CB67BC77
FF0521C75412DAA37825D029C3F8278287132B55E50EDEF3F6D40CFCF072575D
C4CA16C15BE9EA387AB9F149FDCBF4BCA52DE6ECDA330A5A96F58CA066B73743
D34B82E367BBBF93E86219474C40877B5305E2295604ECD7C70B55DF69E0C36C
AA62F25633F2B3E14F929B2DDC02580C50C6EB7CA5CB55338E7A63CD14B54941
8AF02D8AEE9FE7537C3F8E2163D2A185CDE8E2C211F55A5D1F1C331AB92880A4
E8AC5373B3445AA7B371851F864110E6F505454A24861FF7A33EE92017D0F321
610F93EF4383137DB8F82EDFC4AF5EA3E48ADA8ACCD37A45C070ED5A9EAC00E7
948FB7F2865EBE10F0D6D2008E4B29B75B0B0E7478EB42BC6853AA2C17E88F59
B6334E0F819E98EDA5F15F589A604537ADF1DDC415526A257154FADD1523F783
4D92B0A965BEA31B1E477538794B8B5076D65131CB664B12786A6FC8EF7E488E
612EFA83C24719B0FA9B330551C5EF5558CDA66682995E728E611637C9C82F7E
97BD9BCB514428B04DB9C4C230A0DB0637715CE6237027DF06A76A26C4D86008
2F9A40B0490EE262F52FA697BA219179F9CFBC03722F846383AEA24BEDA70A1A
BEDC08AFAEFAB484948D1C1395A5306D2EBD3AA0CE027E4703A2EF8A43EEAC60
49528F548148D7DCB55736A343D4F9EC8FCAFE2322B84B6C7086C5718D18D9E7
87C067EE858FC6A68B9B834875DF1E0B04D58B74C3A4A0927388A736F8DE5374
A7A8509F561BBFD9589D9FB42768AF8CAFD1490D4A0B81934C5282B3F55218ED
96902B67BCDC6A7ED32004314BB7E65A253E2DBCC63BC72E042067C03B951060
D509DF802F6DC401972F33F2BAFA420469666BD02CF410917F4D40C621E57B56
C1FECA7538541152DB014EE01EEC87509E0C38AE96D81DC913D9556EFF29C7CD
137FA3699DC6C6A1DBA3A2B727B14FFB2041DD5ED0E7F7692451422F7CA31B3A
514AE2DAB1B6699E93F67E852DB3FA36EE29B05A29928E4B5DCA8979D2A085B8
3DBCAA520451A6217593EB661F6C529F131B06CB5F2C4422EA541589B40921EC
0B28D80A3810CE9F91B848D03F504853394F6F1C52EEC7D6A54195E6F2174B35
8FCAAA1D2378361CB828524FC4F22D51781854DC7A3E66AF2DD3D0BB8F6C1354
38CBA5CBF87401373886FF9B7E7FA6E486650ED3595FFCB2B87D4BB5A3035486
CC1AA6B02ED2EEB33718FB0EA02B48686B15C308E058EEC007C05B8262865858
CE8D27CF47733B68AC158DC940879154CF5B0118D962365BA1D8319AE78BFA64
EEA95299D20984AB316538F7E1F6E0CCB694AC96D661DFADFBBCC5ED286A5613
F657D6BE95E596AFB478E5B32195CD6E1B219C655954E0D66BCE9EC4ED830D15
9320909D5589C52B018E46EBE636B6214175D6C3850D92D349760DB4CBB3B0AC
0E75AE8646F5B657658BAC2A1A0F656D75CE340B279F5113B9E77A1D7F5CBA5C
E696EB44E778F28694170D28A28D13C09F54EB7AC6A26463C2CA30A9A786D53C
12DC9A21F37A922F478DF9B677CFE4AA9B3F6A37C14DB3E7D35EFCF7063FD6CD
DD2A88A85F08A3A815EC7234991AF3F1BF309ADE32151E26638EDEAF429CFBA8
6FFC5C0E993FCF12ACC1A3348F5339306A9F79BF2523B16A083F710C102E07B1
0B568031F5D1B00F3C41E627B1DB9876EE658C50AB2A2BCAD6DE9A98DABB64FC
B881686DF332EC202BEF2F6DDF2F8C2F6E059D46578D81F96667F4AF1E1A4978
A646216D4CC0827B6966B069B0F0F74DB8045EA854ED7900C1EB157015D9C6F0
806BB3C7B9E85B0BDE1B9E7784F3B4FF13CAF4792C23049D18706CC30F6EC611
9D3A446B44ECEC87E538CD1A138A0F482ECC55ADCD02E5B445B1E7A8E709E367
25A1250C5907B8A7B5D6B23DA4D7EE58E3E87308560F434CC099010C42300837
F93F3C99645C39B92C18AAD0147814BF27C8FA6DCA0BBA0FFC3672913AE9D768
1FF0181501606A5E4F9A0F8ACC3B58D572EB1B94DCD63E2F778C03D3730A9737
0B5C3A2971008D87024F452170841BC580E9ADCB9A73A072E9E9CEC0A97ACCAB
7BA31F3DF2651051885BEE275764D894057DB9C7C5429065B05E20BDC108630A
22A660F0BB7A37EDBDF4490802A29A9A6CD2D8FDBCC9ED7C97094243D836D7E9
F5CA88E1E1B4DE04B482145F3D7D9E8E0D58191070F485D25B61D216B6DB3697
2474668ED13DC0F26CF6173CB95EE292780D0AA426705DF6B47B48A89AB3FEB3
D690F137E04C6B33A7774BC7BA643BBBFAFEDF7E42933B60EDFD3BF856051261
F1D2AD48DA8C7E7FF7EDA22313FE251CFF0343DA3A9AD467449B019D35656430
38E5D7C3FFBD41365DF9A53CF6A99E9FFA2DB4113C12AB9C616F074276C4840D
F918501E52D90668FF86A9BE37757CD0BC36C43B42377B2EBA78E9EEEBAEFF4E
9D48B3BCF50BB0B21C9BC4938C2DBEAF06904E797F157DF89F52909054DDC103
D742D787A25151FEF1803F946EBF5C0BB1242AF1A17959018E8D72F18A4CFABE
5400601B255D526E75283493EA286E5C67C0B1A6D446B72CD876F5D5A2FDA8A6
B734CC5C8B3EE785597C72F51CFC42CE221D0499E9B05E06CC365C5E9822E8CB
CFCE2D56555F98CAED6F9AC20EF569E656F19E724FC2EE08A2A4B8D81158A2BA
24C9E0FFE765A4AEDF85FC9FDDC57F60FF53A4A1E6EC44E40845BADCC3AA3356
5878D2AD53C81DDAFFC42B77EA78C168D4944182698382D7AF3DC36A0E5A1FE1
7C7D72BDD7577AD3E881A8F4349D064928513B5244709B9F7A8AB894B09F2CB0
4AFB101E9B7E0CDB1300435086A93C63AF30F93DB03EAA6D6721AB938CBA6D95
C14B6FCEACC630D85C14D120BBD1D59EAF9098A4A962AFAD6086FAA526B457EA
EEBD8755B1D03FE4D32537BC70D79AFC3E2CF0419DAD553727B078C6E1AFE88A
6F148ACC1035EA44308D26E36EDD1350FFE8092E306BD541EEFB26B9BB2AE6D4
412493E0CDB387795AEA0D3EA2D283BF456D5D8B747C7B61E717A341CCDFC208
E0CF7D75C43663539627DDAB0BC8C67428AA966C6997158D458B0C3CF3EE9B2F
D9A0BB4B0715B5B07FC444349887DA46E4E6E43DAF4B59044142DE6DB8A0075F
CD6ABE10AB1327F5B664351126F890914C29D0ABE717847B52729EF0E4E79190
ABEE2EC1B99F36FA1A129C74607FA741653B6DEF9E373B23BDD5751FD1E0EFF2
DAB8088ACBF61347F594AE5FEFECD65A10FE5B46708E07A61A5ADD61E2E1F43F
F7711F76F329D862FD7FB8F0D2FE9F2AE381DF85C70DD5C13C8D77E895244BA7
AF43D80DC8D934F8DB31539CE8265E5516C783A8A2800F05DD77BA5F88D0E850
B1508355BBCC9DDA1FD2D967EB9B7F6B389EE22D1C0802FACD28F8DB8AFC4DD9
E2B7C8DF1C241030B68FBDBA63C29C3A6171A59449C7E7ED6B6D8101E4C25074
22032A9D07812F70EEA1D19D58CB7113829CA08876C3E017FC35A4A24B6EB089
4BBB0A26B3FA812DAE342A3FFDCA67C6AE242E6D9336443B8B048272D96D632B
746C770C41FA1883E01C0C2BA85A38B9117199FBD2373596A22661658CDD33BE
34ED09BB1BEF9525DBECFE5A994DA102E8CD7C494DD907E1E6DCAE825B36E4C9
A9CEF1DDFC2931A321F98D52487DDBC12133B8ABEC648964DD38C89F4B8BB6BB
CEF131BC8B3DC19745DE6A499D85035E19016AA29E44FE86C16307D5395F763B
8FD58C3506E1E886943D3B1A17B4EC3602751BA8D00B612E755BCAF6AB8F5B95
8F7B91385E510CDAC287EC6519D789488B86B6A05134D14DFB0803175AA6C516
BA95620798134A244769D7B80A551FA50A0828C60DDDBB5CF4F87E288E1A94A6
47FB759F5B1DBA7BEFD7F4B54A83CF61D802F1295E50A36DCB3B9C6D05077C90
7791F2FF214B94C24BA50CB449B6497FA6D8310BCBED1C263140B0062DC0C4F5
0F4755B4CB54F66090F24BB7B3572D01FFFF3BAFA6428355378CA104CC8423E1
9C6BD6F22E8B3A5E0490DCA1A0739B08360328D72BCE1E92CDFB2759ECEC475B
2F457C207D4C53F057E043058240680EC09F02E9CBBB99296F0A813175985CA5
72A22E6E5C010A3312D40AAE7B811BEB36EDB37569C19B5D487765C27BD30AA5
DB18A649C442A73CB9DB07595681980B77285AF5BFF26BF518D1C8CA74BE87E0
B07B872BF2E1BD8EA525F59932669D32EAD460A13B19DAA1DF60A7167D061443
228D91D4159796B619D896D988D34B34FC108B52E90A6349C7537E83B090F0E7
ABBB615173872C98D1064DBF0304090E876C7855509CD57489F07108D995887A
EA9D20B3C038C173266D8ACED067119C4592AC1DCD83087C2DB81FB7FA5548CF
E3266DB0E088F48DBD44C379EFCF03E9283703341F8D147A88D61C5990E60900
1B853B273DB14658FF674F6CDF12D2FDE4B981EB981AB0EB210E41CD570A9DCA
D97A270CD3BC6F03C3625D0DF044FDCB15FC37B5BE0EC53F170CEE768BA5B6BD
2AF2EBA1DD4674FE5984566EC5423F3CA0298C3DF177645F4D99B91EF4DB2F47
A9B63AC87A56B664B086AD31D61D3E71F2246D02C38E201ADA89647A7B65E38A
9799249806AEB42B939458D9DD8F7A7C5E21AB5B3C8A312FF632A0DE2E46FD78
C82B8B73B4FAB1037FB0997B367483D2C8C0D44E6111CEE2EDEC57C65182B961
927DE098C08A66D1E33FF54A29BD64A882B930E983D3DD20FF35ABD97B9A6634
011C3FB84153BBA28CAFF52788C90E1EC674210A9409E4138DA73FA7168D6903
5EC3260E3EA1407F2AB1C418FA3A87FCC61AFA2409F0F018F8BD44A4C5F45ED5
B18852ECCBB8F8EC9E5B79391D3EB6485B96819DBC39FD92399C24EE8AC85E4D
8C211613CE4DDA344F5751F34B174C8860DD18EEBD72E9C41EBD5C67EBA078B4
972745B2DAC5A81CF1318FB88A0AD26D3675F5B13EDF295B9D3EC4F037086CF9
43737D35542894784BB2886C26846CD023CEE6DA3E6AA64069A051BDE9C0FF2B
13815A46CBBE5C67CDBCA204CB1D466CD3978F8A4FBCC99D5CD839B0BB982F75
ACF33109F8AE7ADE4954D0B1E18021C04F74818A0F268F04A18665F096E27320
86472B7C2D8FDC90DD6D74BE3CC067EA6A6AE7ED287AE31D240EA5DD32761761
BDA3DE029F11F0B90F81FC3D4C950FB11760A5152FAD0A33A0B56611D833CC42
A9C8492C628F50E3885C00D662DAE00DB2DB1059690B138CE1794020155BE6C0
9E7216168904F19D413ED0505F69FF85459A658EF4AA3557F832DEC88667274A
4F206B13B702DC4E76A76885AF0B09EB7F87792A4D46A46DE0F2FBBD5CFED601
6A7F8A61F00CB29BEA1FA8BEBDC37B3AFBB141634F0D84EB6821FC9B0C4B5386
731C76B14667721A220ED3DAAF96F20E29D2F08BB127AA8CCFDC7A2ED1CC6EF0
5E7BE3767D68053B9A33CC236F5836FFD27D21F892B9AE92E8480F5B8A2AB1B8
7FCBB8DFCF74E54FC5F6ACAB07941950B65988337ED4E7F949D867767CBC972F
D7C54DF4E71867A962B32107F60A404814315640FA21DC04E6CF5ADCD8628644
B608485894C2556304BE4EB8594545679241B1C73F885957AB3BFBB8B51A7ABC
231E9733A2E0A2FE83B4CC17513A15358E66C19E5A62DB24465EFBADDE92F851
E9F6D23EF60AF9131A1E73E0DC6575021FE4ED7538715647C78995157B0DA66D
1A34FAD9C47BA0C27A822029931E29E560A86CBD5BA52AF96078D4FBB581F15A
4FFDCD712EC46352ED1B976706A6AE560AD6A82C3B0ECC54C3F09D46C1354E5F
C1A63D9D5B91BB6B95C298D1E5875B235B64B1A23A802278ED6635F3A42DEEE1
1D408F043326C12523D372BEA69688A21D6EAF601ED48109540F8F120A45FDE2
CCCD226811D375A23B26115CFA8B023564A1C2E3E2A12AA6B6DC664E642E3084
A2F917474EC2779B0AB94B7D7DB913CEB5FD62CD64F588242FDC6788C452A300
EC067ADD004D1C912EA020624A428C7921C48A0D390C7D94C4019CEB022243FB
1D760AC53BCEEC80E5C6524D9749854CA58CCDE5BBCAB3731366C3B74072044D
3EF2EBC1CB3D7040EB171E7A77F97F4E08C8EA82E98341B6BA6B0FB60881580F
05E4DA3F302D70B39BFD629F0E84B5F4985889BFCD3AE3810C3DA334C7BAB0E5
221546611A586EDFEA1E6F8A564E5588C1B3C26A19F6D5C847C84253F1F89FE4
31A9B3E3471C609BFFD6A27A96351DC61E31AC8A43BE45CAA313CFFC773E3528
BD54573FDCF054FE2C4600A2C288219CB0DE04FF548E7224EBC2AC58F04CFA0F
ACBE73E02C957842D8D690434A0E6543948DBF86EA36C402070D95B8D5FF0337
24D08ECCAAABEE314527A827D08C9823050010D64FC246FB15D72A894E490347
ED1CEB1B92C62E4071B1C2A172FCCD65A047BE35F91AE318AC0661675FBBED5A
92EF24CB464B32AD1DCD36CB4D6288505EAA5156B5D49E23EC0368E3F06BE8A2
F5BCB00635370727DCE9FF9F84EEAD17B366D678E61C6176FEC09C955F2D1733
B24F2CBD38692849D4F4BE48C958F44463BF6DE45CD363F101470440E4BBA53C
22E94A6F4DD2F73B3BD856A1C5CB5956C1B4A641B6A8EB2F78739F2B7CF00CFB
5FED855873C19FCFAB9ABF86F86E7203E1D76E0469DB1BBBB53D8DA0AE66F82D
F83504EDADBE2B05994AC6838A6EEEE1C84627D4EEE54896EBA1FF56FD6EB985
9EB3F8AB9D5F77E601BED695A5684A1B63876F4735431AB39217E828E1B00CE0
37E54B6E4EC46B2ECAF26D6F3DA856C7BD013CCAC4870E82EF51E59D81D8884F
87ED2C83E760659686B20621C46E141D4734C50FB2D1FEDC7BF6629B4F957603
D78A9A97D2774EF4D5FBC8032955669B0469E352C8A9E5F1199B3D73FA940D52
83A76BF2C44C86E2EFF35393A4D2E6AA02F37B2F668A6D2D0CE9092BAAB0834C
3EE3438464845B950140ADD971D94571113689C1751B5815C99C4FD0FDB0357B
B5233F3D0F6212F013072DBFA04449D475485B80A6C5183D45D5B8D95C670953
FEF1FF5F049D7E6C4CBB71B8F9B34C5290A5DE0840623D95EF7AE0131A24C143
B0A27D31FD41415153D6FD97326A5B4B5DB26DD5B7FBD4B64F35E0B30FCDE41C
E1882A74B0D383A20886363A95911DBCC5FF8C62B894E007D9470313D245FE96
26CD62AE363C35A7577684DD37876E190FA9977E3FF18B5164DF83C3C86131F7
DAAF10CCB6A77EA95FBECF61745EFCBE974845DDF69534039326416647BD3B76
3BD16117CA26949D3FE668DC16C3377A4DAE8348AC878235ACD6743E692C1E52
E5FE51543C5E421C4499A83D84C97FA6FD2DE5B292D97D0335BFC690BCDC1C25
F395E6E870382132172F06F105BF2DB51EC3DF271413D79D0778302889C4BE46
0469FF24650E918FED191320C63F38E0CDBC99204AA6AD1309BC5668A2A524C6
D1C2B0E20A3533028129F4A085AD9DD05C3A4D0001737F95EB5493964FD43199
8133454CF0A83B9946D6D2235AE06DB9AB092BC46D3D72DBF4A0960790485372
B21965137026E35CA597ECFC11B62612EE40203051EA010CD006E9E823CE68C8
F9B9870EBFC4F1C57AFBB4602AC87D16D95A8D9C0063F7C7F83011DE73AE9D1E
55EC4247A3D70C55D537C1B1EF54E133B2817327BC12E2F6B422FDF15DE326F5
8C22DBBB9B75A883B3FAB2C2EB29885A11D100A9DB0CF3DB96D6050EF1A71186
778274282727D507E62B5B1A5C8E10233D19F645CB2A2367D4FBF82A225119E5
FFDFD65E11890902AAA75CBFB64436DC7B5B91416861A6DA39A1D26CF9515090
CBF63F37CA1E51253191C462F39FB2A1A1DA6CB051E930FA7ECCA07EF5C3B124
602165B50DA225AED375AADBAFF3CD4CAB3E2BC410D43B35E46232FC3FF19362
B6753D6F348D87664AC3BA9DC67C9657C5E27F39EFF4E28567BF5860D0930D7B
18F053C32E9EF3DE510D05F01B979454C6280A58F8BC5DD77C7BA9A9B55CFB48
945479C09580F378E3BF2E5E87439811E33CD0B7F53872A09469A81507EDEAEB
74DD1732428B0AE80B6024990BF2F379A375555566BAD84F37F4675E3FA0E01C
4F485D9D49327C84D9C3FDB21824068AA90C4BCBF911BBFBD73E1621E4508215
C9B660518C4B28344B0C14DF8F0F44E933755594E090FC847065685796D2A8AC
88B45E6286C1822DAFA49D48106708B703E0FA6385CD2A1BA1763535619531B7
FE751A9471D22041FE8862ACDE05B2FC6C209D48E875A62DDDCC337099C4B7D2
32328E804E695F2FD6DEF015E14E7B2E16E0E93439C1FF9AFF6D7814071BDF28
438F36B3E9BF9E421289872E50F1102795240F3824DC1F24663EF677F101EDC7
396517CBC2D9EEBC5F048B0811B8F3BF2BBA45C9A57E7B274DA25E8B1E89DBFB
2B7C07EDDFCC655BC55C28705A11470213F14821638900C3AF88825DA5C22E03
F1B371402A8597227D678E9FADB2EFDEBF0F6A4FCBE438898834564BF721A1CF
57C73B63EAF02FFB141C9777BADC50DC297EC99695A77009E86548E45C823F72
33CFE461B6FF1863D47A91403232E106D68DDB9F43BE3D7DE262C39C522573DE
41E18F1D6A578EF6456EBDCD1206243547DC61D5CC1A7DD250065F3ECA5C4583
845A6E0F89C9EDC505176F8E78D5C13AD7388AB725909AACDA6407138FC6775B
BDB678E7B033B4C75208DD8D4B7E7F275BD9B18913425ED0352FEB0145753D0D
60999FF81AD0F65DB02838BC4C0021571B3CC54019500DDC798B57B6D366B0BC
CCD9A0C7850A553C7C1F0BCD3B2B7714A5BACD0191E1F401358D5D54410D7E46
DAAA0D4EE5B2E86208F5DE84C0C4FE2EBBB0FAA165E317AE00BDC7108B0D08D9
F259C59D4A6E1D3A4BD9F0B7E0B28447E741364E315E7A1B23A42ADBB4BD729A
2F49DCCDD5C058073F7AFFACC51033F46A152CF9F800899D54676A2D0D85AB1C
7334C656E8A4C495EA195FBA53766189335DECEA4B16D6EE1A04AD6782EB8231
94818E6DE249207343C37BE9B926EED85EFA1F517DC9FF815B7E04662C35CDDA
0D6F2420778B9CCA91808C2D57835ED54D30044A1D2B4C83F23837302F50209A
BC0B83D7AFF7B2620C24FD99B3C555D8AC32D9E3A82E64207FACEED85F6550EC
37113B980562CA065AADD1A707CA33BF3D4D3ED2092259364560FC2FC21825F5
2F9F6DD01569B77B5F48CA425F79B625EFE4EBA4A9A2F273EBE4437900A3A581
ADAF1C66E388903ACE520E5C7CE17F748C0EDD02A6C8C7D86C7C19E0A70E4DBC
9DA162402165B406731DD7A423CBDB2F85D6722A0678BEF684FF736EDDC5FE2A
A948AE738ACC61854AA51DFECA58D6E39A107ECE8A3EBE7E645FC515D203AB7A
F9961F0943FF5F02016DD6F0563A2685191236462035F7E8F77C2A44865D182D
38F1B1D452527A7EA36B7FF506B18915F9455094283F61F7AE9533B3C4EB3153
8CA509A045BF85F65DDE2A9593C0D12A2AEB0CB20C8181CDFBD8134E7A8F250B
57CEB847D03CBAF47C14B4B94583F8D4BD6D6022114083AF19D4878C0FF0BEFC
71A812DF4B7B1939C6F49D0FE8E2AD55769E167A8C622AC8F1BCD71BC09377A7
798C58CF327A7A4CD91D7ED874D3948549355B2C66E26CA8608765C46EB4440A
28C0DC9FFDEA459395AEB10D7817728E517EE272FB1302C6F6C8CF5FD9BC6336
49241D5AE6D795B2BDAC4319FAE13580C0A406B20C54AE6DFC3D8248B005E334
974DEDC6612AB66ECAD3AF64ADF60CC07DF2795EC4B6E52A7491F8DE641E4DA4
A575AEB7D165BDB747BC6C90A3CD9FB434F4D12484E03E14C9CDDFCDF79DF430
A749D8D6D4C669B2628350B9A35A3592152435FA6FA9F76FDD45FCC5C10CBF26
40628BA4D6D646623BC8135BCED84E6A9B242B045F237440CC8D6174A35A96F5
47216AA9B0DC7AB8BD1D7451A64721E3B337E9FBCB312453668C23F0755CEFB3
356274AF82119E13EBFBD2F00B6A4018D3FD258A67B5097FA04A9B2C7F5C5F7B
D655B1174682FEEE2D2760C4F8894EC8D1B7717B55CE5AE4863E50BA346F736A
D492CED3516328CF13180FCF15269B11ACB22F3B53500DA95245AB7BE1A90282
BB20ACAFA1EC8BCE1F54620432B266A48DE69CDDC8FB5B49A0D4744B816616D7
161E5CF7173E3B304770C7F5A22AAA93B95BF2AE6BA99D42176DEA4E100EA4BB
8D71159ABA83504664F9F6AD78153CEFE299EE745DB3ED7296CDEFC15D5D7BA5
444E49E889FB48043889C44F91D75DFC3D979621D745E1D3C8739492445FE7C5
72BCE0AB6BE7E48DA5CBA0CFA815C7966A5DC89C8326BA9BA96C0BDEA6EB91B6
B8EFCAD3A6D830237569EC0DF2A546BE6DD1D5CFBF9D84B0EA7776154F90FBD9
FCD676BB03B407AAF88101D7E9CC89CBAD30CA994A3586535DD175A836C0B599
3CD3D00B8989B4F99031C293A457040CFF876121507E42BFCE6E335C0FEF7585
2628F28DA7C2AB04E11A3DEA179DA4FBC32DCFE4DC77E6B768F35E7566E858B2
CC4E9DD3BFC7614956C918DD63E1BF08478982A5EF03F2CBE964560A508E82C2
22756524C0FABD33553FA71C10A239CCBD5711618D8AFC1B8542C6AB92BD3F90
9E6D8E33EE92C3F5C3905DCE126300D914119D59CE53AC7B8F718013E922561C
BD9F5F20A40EF09A72B1959517A0630A94699E2A1BD9654F6A67841E1A749084
C0602F13B2F4140A0A7DE0827B61BFEAA58047ACD0F86DDAA2A0E4738D632C60
EB44F6DDDAF6DCA402066DFAC37A4B73916AB968204D34D6787CF5C3D092520D
B35768E70336C30AF163EF2E273FCC3AED542EE86C72A3EF8A138E760F424157
4033C78F368061F405924BF40E49AE3D7453C630FC3431FA13B3372DD0F85B87
3D44B459B287CA34E6BEFF51279788C2BA21B268496E1166D59F996162246383
26800BB1296614EC32F2F6A3E4D1197945244706C96AF8B2A766CDAE5E169332
D6446E97531DC518453ADF92C422EDBF9AF6881F745EC71298D454AD31AB998F
5821B82F5F5EA969F0A1407C8FEDAB69BA3EEE3097D5B123C2EDB3E0A3E10B00
9E48968EC723C6DECDFDE76C4A7E71F78C3181672697BB545B4C85DBAA4CF97F
37FE6C3D8E94BBAC9F95B142AF31B68D3AF480BF49C4C5B41E4E6B528A3A7609
539BB1E313BACC161E4DFD3BBD84E1216BD14A3F98E54CE3F758E2C884D6830B
00E1FB1F743CA5A4AB48FE672F22A7DC5E0BA296F8BC572DD635CA720C264DEE
AA337C69B5681BE101627FCB6E622B8AC60B8301F24CAF0BAE66C0A862D6B27E
0F1154A9EC0D95BEC68766AA267A757DADBB5CFE8349C55F794B95622CF9826E
B046D86FFB6D567AEF67B112126E2ACF3642047B5382C078DD1860C03FEB118A
E510ECC524C8EDF399728B732DE497D30A70D5315028CE0E1CFB87A39EAE9186
04F7409AB051DE1E0BF5DBF65ECCD01FF04DBA9F019F14B878DEDB4DEAC5A263
0DB2B77540A176C9461D305197AD48A99FAE28983406A9C3B59D1F0962E9097A
04EC1E76219DFC6D2A49D433BD23B5B401142ABDC8484587611434DD33C57F3E
064FFD74823B8B117CB8711489F93E7AC9D03812B2CC6054CD1C5864F4024BD1
5A595F0D4A93B656DC92FA30141DA059CDAC7EA92AF731E8C0004117C03B57CC
86218B52501224032183543E4FBCFEA9436DE7F21720DF10AE1147B362BF40B3
9A4375127239B54D19EDC2D37EA942CAECA467AA8F56F4B7FACA085DAE119785
B21002DAFBAC527A5F9F0CC72A2F0185768DB6B24AB246D39134D41DF92B0270
1A5D90094EB79BF159A65B012A2EACFC2FD63E73FA1ECA64BE4C153AC91451F1
22BDD5C724CB802330FAAE00D1D0B9A91F0F83DAD1DFED8E8E569D3D3DC4E370
33698AA060ACD6CBDA8D00D12D8F361B497A5239CE5829BC1E2071131FFF47E4
533DA66CD991640317676B3CAFF862B5F7DCF9166B6CACB6AB0C63945E75C988
2B8616725DC25C281CEC3BA76A094F4BE37BD61FC5008EA726DFFBD92E19194A
6CC786CAC8247738575EBBA5515E12B138B19618E23C7FD95CDB230C087E2A09
AC4501EA7C198102919FC478C05E3477CBAA05EF91CE00E7E99E08495F0FBC9A
D619AF7C3141F0105E06BF12FC8512AC127BBEB04755238CE44163870E68FEDD
6B7630F0362FE3B5629157B35AEA39A43B9BDA541D3F3F7B026A646BDEE43CD8
F4597703237BAF0F3C1F6BB4C2464AE7935A7F6EB8F55FD54C8634FE2C91DFD0
812FB4EEF97B34880ABB4EE9929C9CEE82C1B34B14E9821D890C325F96234272
8493F76B0E41010801C4786C62E1BEC458B6C240F4E57936C3D01BEDBA36B7E7
721E07C9503B49A6F22E8DA74289BFE2575672E1C179594D797DADE7EBD9315B
A35620ED4B7959F6FC8EEDAB2C3A13607785616554DD298CE8B01F7134BA9DB9
FFF47FCC219A25D6F4FAF15C63966615C1CB4CCC3FCB504FC7DC35EF6855E24F
9758827B199FD07E6755F87C91EA476E88A666F06EB8A6A15ADCE25EF355ABA5
56B226DB7673920A2C426EEF8DA67E650EB7B1DDB4DE7BEA261993A02BC2A06C
3291DEDF5015FA19A65662E6F248413B9AB45604C2037E471BD24485A77247B7
CBC2C390B1675974834EAF468188CA6B1C0DDB42372B06625C3BF00BE48C470B
0D86E721AFCA140FE6BF318CBE104D1F4F098CE983D357981D2CA05063CBEC5B
5FCB78191144E5302C584C766900ACEEA1303B6B72835080E0C877481778614D
372B043761D928D66FCB9D760D359AF79BEB8A88BE7913502E5684A8BF4031B2
FF05CF330A8DF912AC640B01F85B3B1CA9C3242781610A7D9AB9FD1D62221B95
FE357BF67271EE6EED93B251B11A906523D4441DAB9EA47FFE2D1A17D780BD33
8B7A205499FD94FB668628056509BC9BDE9DEE9E47E9CC8805340DBFBA4EB108
394BA498FE0C6D14D0FD8E30F76D51A3CF5FD0348AAF52495290E6DF4302AD80
B6BB6EC73304F7A0711FFC159164D6F9F6B7C3C24258D58F35232088B67BBE94
F5C2F0648DF86B62D63BC05E6D3BB770AF9B5A747EB1D345C895D6A0CA26D77F
403C0625482FC5FB3C760ACE2CCE66E68A699500F996D33805F590A983876514
A0F7841BA1DAF1C1C8B651154F11DFDE03CCC5709F6D806CFFFDB6FDF9361520
D63FE84C91B9FFB9528ABB5CF9781082DB56810D7BA76E69EF6048C1152C515E
8E922D80ACB29B5D11AF2E820BCD8653AB5ECE6BB9D75F9EFF927E8B3A98A77F
EF9B4A4BED85869A5224B9D147406F4D8CB1E0845DDAA83D64E722F0E49A9CE0
2493A70F6073CE5CAA0B731AD14517068178925302A76A184F4617081B0CB589
3B6415FE09755DC12B52586C4B1A52CE6BA5A17E0409DAD8B0E5499AE2072E84
71EA40586906C3E0A204A8F86CA2DA812DB4F23DD7676EC6C5195FAC78A9A9B5
5CFB489454857B739898FA2CDF1F066F7EF3F13B1C2E5110CC6273CE2DFE658B
0A72CFB0A76561251DCF8A9302D6F53ED0F720442A89467CA60BCAEA43270A5F
80A39279C5FADD1F62ADAA1745AED6182C7606529BEDCA3C0660DF163DF0A33B
6D25779D11BD0E59E99D9ECC9B223F260C2E8B41698838C87FD586822E597FC6
F6E17C2F1099744794F7E9056F78D5D832EB4F49A5E5277914908EEDA068246F
367E88835E166A90FB1A389A342323755A48BE728AAB48D8D37D238A935D5742
BE832148688883FD214FC6C24EA2A599EAA9C44772E82AEFCCF1B5DBF6A3EB5A
3F665C5A98F578A03948821E40D160898B2B557607A4483BC8446F5E8FDFBBE4
163029C291ED0A5C16D10A9361AE4FCDBBCAD734D335E56016AD0B0A7214FAFC
144604AFE4FBE09BCA323D5EB7F8A15D60587FC7D238187058CD969A7D3CB239
0AAEAD3C15E072DE0A84250C6046A0FE2301C72CDB2334AE6D267A009BD0A115
14B68C1764AB2F20E7735CFD4B13C2A8CBBE519A8F57C66D7EF358E4E877FF83
DADDD463072AF184A4C3FF125A05ED91939A0EF5F13443A9150F35AAC5623BCB
AF6CC5D7B3967B4356D3C2DD059D73A1F8086340A0CD4248B15F9D53F0FBC15F
EEAFBDA650DE094645F2CDD7998FBCF6C26156FE8413B74A66B44F623D0C35CC
8E183CD3F00B26CFC75174A96B29A309C8C682A5D13D60C88DAC9264A4609E57
0D265DE6182B00FBB0A75AC7D17C3CF29FD71743A358576FC9D03838EC6D0615
85F61F323D0211BC494BF4A034CF2FA7D9FF944DCCE92FADA46EBE4A677E2FAB
FE729527F833F6BC88619CEBB990D4AA98F4A3FFAFAD030063C3D390A2674066
DBAD1A9C3C1FFEF085A6637434ED807D5E58831A67F62EECC1B69AAC2294A0AF
A9653F7E7065EA1ACA0B22F411E04AE47B92F8CBA53BD66473B6C5C84C1F9F6C
7DCD21325425EB067F8FEF303EF421CE8A0D0B3C8C2500636011D0A399630771
6401B86CB37A5DAC995C097FBE19390E4B63696553E3B2843AC6516F43E6C280
FDDFE7F0CC8AC64DAD8AB403005A838C298F8762C2E5FA2F4957DB421D427E28
CA6143F63B988D41D1A114387F0A5FBC0A492177451C915FD543B77DBFBB4559
C6AC5C4057684AC7646D3F25001423282AFA69BA73D896DC83E7328A34558B99
34B7EE32751A596C9C4394E37324F68F2914E1397358C5C3B85964255F7346DC
21AB4F358BEB6B54FABD4DB53B8656425EA5CB4E832D653EAA60868049AFD4BB
025AE672ABD3D44DE5C2197C1F560167597564C426E25F6123954DA300C3D399
14C040078C58D72D9AC8286E61677F7CC1B774E02A43FDBC78E462DC4F6E1D5E
6F96CD859DDA19B589E529D843F91ECB03A07C2CA965F9970D7DA784840CB824
A16D67D19A33AED2D04FF154BED027CDE40CD78BCE5365E1CE48CD621592E13F
40A9276AFA5225EE9D2A0A3B5AEBCCA1B9F2D5F5A99B47A84017FBA09CCE8D03
EE6A6F5DD566CD2A6228577299FAF90989A827A025F2D713FD0563BE0EB2B36D
D94D1FAB63AB6E03F595C31DF949FA8CB2158D398E2B2E131401E52EDC2BD680
E8B41C9422DDBD5625BA71B8AE92BB7528C06E964C9AB92559F1CA6D3B3B36E9
91FC1F66E54A3EACEF4395BCCB9F6FA33793A8753A7F558D0C28196A0E97DA2C
4A8BEFDC45A5A65A71E268231C07EC0F3AAC2337536497BEC9858FFF4B55FB31
9FDED48FF7CACAF338F46A19774D3486E67F166EE0323CA9B40F91BCF3D31CB0
235F9AB21D08A533D6412301A9881BD9ED5CE53C15A90243751F129B35B4AEB6
B72F30468065D1A2ABF1AD34324CF3550760DF7A27D153F5B5FAECE0ECB55834
1F4CF2448FEE71A4466EA42D29B4D95429C78E6632A8869972ED0F4F1A939A5D
492C33E8F9453BBE8FD563B462EEC3DA760514F3096D12ECF20972B58E10A853
8F7BDD4F94DDFFA249B80FE0359DDB6BA2CEAD2CC4F2BAE1374497D443905147
91BC9B63BE11F0290270E87BFAC0732BD0CBEE4F9094C0FE960F9DBC0201DA45
F9F30586C8012FDFAB61A4ECB8970355239F79880CB3C1B52DCAA4A2E566FBF3
B73BF4B6CE34B39E8EDBF84BC2F29B7E4E705909AE062BFCB74F617E0E07CD0D
E83A89CB97C747E2650B06ACDD0442BBB75B30536B39D77BDDF47A15CCC4FF17
4D59F9DF7B4EEDD8EE99332C630156471F65EFADF944F96C7E5372370243FE70
D5A6AD48E6604227B9744A3850227D2F6D538F532DB3BA2DCACD98513693E980
B07489C7A93FC5E2541940D85B73BBA93E6FF391C38F94CBE34081FB2AC76CCF
58BC094CF7677CEE2603269DF38ECF3C0FDEB3036E6758F13A3950E745F8B56D
A6014F30B8AD52483346582F62278FF1C58865CD2BFA0701906D0C14E7159F2D
699471DF47F311414D17E47697249E9B2B8734970D4F3D07C604D20B52CE0D0B
92636233E92F7AE639BFD624575BBD45CE0DD4781D81A8E3983A914375340752
5BA8F33BCDFE7CC6B6E6B39564D3269ECDBEAFA36CADB20223A40C73B2F400D5
21248E0A23CBD40BA8F8F57AEA3AE6C8337DE1985045C3DCD4885FE2E51E1058
31548050229F749376B222EAF6270E3A5C6D880CD88DA11CE54869E036D61453
616296ABCB7F064BE18E00017C3021A7BAD2637680255666462EB602BA6ECFE5
B47B7B69B24D584A703433FDB41D2EB290A36864FA6CE2775C3037705BD43F0A
A671E4928170A01E8B21668CEE76A7E66EB51038DC4AEC22A936598B5E504291
9C15378D876643C8C63B7A1520747044E42D728942364FC91AC88F98EEB401E0
967A4AA9EB8704B47FBD14A23999CCD2038AA85C1487569DC5F152DC9C007C34
ED808D1E4DB9BE296AB69096C548D399EF91E5928E83C2E3816C61C7DC5F8F59
0EDFB9AB9D0AB3814934E8A7020477DEDD7EA8BA95C4DB19D660E3D61CE5C898
242B76ACCF751DE97332BC7FE569D7D98333714597C3380E998FC75FAB18CB23
997A0B177DBD1BFA64EF461182AAA93CFC9311512DFA21931BE29E862E350C97
460B044CD4B771B7BEC212DD7094ED2C21EC501CF5A62469FB97C6AE22D35E6B
C02A716A05B2E3A283A8464E40BD3F2222898383BD27E7AF84FD70833EAFA3AA
0476BE4D37FBF04CBB5D6143C9E43A06BCE32C438CFC7A05C734B6A85E711881
6C58A3F5B626026B727DDDDEF8EF857D04D02BC013E2190C6A6A353C3E86B508
E177071C6A2CC8C7B279538CC69FFF1A7B919B6F13C3E693527A2C4A13A38B5F
28A1184D233483B95B90559A5E2D649FE192D8AF13FFAD44C6DEBFDCED4D11E1
04973EBF4D30A09AE7BB1B164FCD36D853F1A4BB7C374B6671F754D1DFE3E847
7539AD2BD2758F0C90A06D294A45600ECC3E117FFB4F68AEB6BB6E23B388EA0C
82BA47FA81EB3A8E02FBDB4E4338B8575DDAB8AF9358D33036C4C7E80147E6C8
A71F03E7413802F0E9DACF0EC954FC68C5092BE089745DA64D191B7AA7D47B0C
6AA16E5F147E5C82AE34724B93E26C22647DE060FB6A06B10A089D55D0B052A7
7BB5FC862FB7B6D870D9514EE47D70518386B734787DE65A9CC59CA56E3C82EA
166778FD629768AE572A89138151604C9B87C393E7E52CD4C6D5925EE1F2E397
F2CDB1D8A080C0AAE8CEDFA09E5407E705E783E445D1CC2DBAE1B008B71E0088
28A189030A92E69D84422C469457404F2B7A2565E2EE8DEF5725BBAAC01EECFA
2AB7BA67ABBCEDC88A5D74FB9CA02ADED4644EB4DB7A522CD89C8809798AF2D0
2A5D3B3FB479D2E7ECF1DA3F99A5E5B62625423000D1E5C6551D72A795B5FBD5
DD071993CDD184FB80B38DAD561BDAD87886542383577FB8EB6DD9F5952792D7
53C427C67BAA656A9F2B76019A810EFBB988FD266BA61D3F011AF9EE8B3880FC
7D64538347F8866C9F265890B06428D3A8A39C3DEFED3B70D2A1FBF29F54F2A8
8547C181E2D12C9808E31EB15FC59373004502CD4740DD3E54A6FC00F6B88A51
971968B544393F22032E67ADA36D980FF9557C96B67F20EF227E04178C8A2B99
E10634ABA2930577040B086B13940915688C3FD12DD30E99B4262B0E5DFEDC3F
070789C082FFAEFC390C52FAF61D146364320FA707A27A116C80E83771A96E72
526050F96CE8EFDB4915D005E804FA7FE872110791B6056EA7E06D922B224A5C
0D972EC313AE43B0EB7A95BF7ED13C4AA7A4B8C4BD004547C597AAC06400BF5A
DD0B0DF1F2D30EEBCFEED42B8C9664717AF50AA80FAD4A1E8FC6725AE962ED5C
B6991E34A84E308FE26F51C5F52BF33402B1C4686164228056B81DD73F219459
24CB1E5F458C32BF1CF74A3A8E735D338B3AC3528EA11102A3D86C19F769BEC9
A6E166C8C3AFE23164A3E276B5FF364A28929D1A1BDD551236BE6AE0C7ABEAA9
D963B946EE04E47A5B5366B9DBADB6AA3F7A4CA15DD4054935B5FBEB2475C70B
7A708967D215C9520EBC1C225229B46E4C3F6F3D70BD58C44B669C3224670142
0E736A9C241F3E0F9C8DB6444AAEA46FAEF9273CC1C085450AAFB1BB93298EFD
6B0C49F7FD8B9618F4A3DD7A7E7AF7241681D3EAA0C8A7E42AC572D07F65CC9D
5E0A90F1CD3E73A5CBF10942A70FE86DF13E7C8343BAEB82F1CF0E1918226F63
980EDF2E4E1E2512B5DA711218BB8323FCC1704E1EB74D7DEA07D4D354A2EE27
C742299EFE32DBF5035A1C17E01CD93E95061CF4CC108DAE8BFE35DE04A608B7
49958AF46A9DC950870C1B215D1619D8815377AA43FCAF783F0234D51E74D1F5
C18557740B80BB8B3C209E20E573DF55F4E500ACED676E24C0B10FEA939AFF08
9EDB1596E1FEB5082D1468F084B008342B59F004C4BEDDBC922220A20C4C8693
F5E8405F468EB8E7A98083EE56D0650DBCE406768148E893D0209FEF36252263
7C3A4A81764C798409B2081A6D82B24014E5DAAACAD6D524A6A5BAF63252E322
4AC7DB3E226045C8A34B53A1029535CA9239C38F2147A771385C1ABF30FA63CE
9025AF106728DBC6FDD25B8579960AA6143CA014E50148A2C88B7A82D08EC743
08B93B383FF23C49A0EC220F374B2A7C0B7A27981230F7BAB458453F144B8A42
5EABD1DD34C94719616642532EA944482C31B9D2850812DF424F2444CF900C67
A965D3C6A73962E5C8E5BCC7C88C81A14D4EEE9F4066B812E477C338A9968348
48A05AB79DF86A2707B0595E5EF7684A091CEAB8BBCBF093872EA033E1F52343
417D6B84FFD2143A616F9DD8D6CC8B12B99B3837193BA2EE333536573F63DD78
1BB1240705C19A10B538F90D6DB6A8473256C28EB85DC2B96BE8A6C41250EA39
32C1F171D34CA6B424195A9409B8888955D80D0B2893EB82BDAFE4B1189A7DFE
6410DD11A8B55C625B7C80F2F478CE5764D459CEEFF3A3292080A3E4E31C7267
36134F13FFD3AA5B09A437853B0D9D1A616BC5813065F8F0DCA7BBDDFE7BB838
46BE991984D66715555049C6593F3C270F543E733EA05160D177AEC31C0121DA
432217B43E6AB53CEBA90F205384E98F5ACED090C1DD023842706F6E6B46437D
56BA06797107E507959050BD7AD38A898F297811E3D78B787FD028E1B7360AEA
4EC1FD0A460F1A7182301B3CDC8340373950CC2AE4872057819EDDD039249EE9
97CE6274A0BBC0D0F864258B52AEF8979319DFB7A2F8BF41AF78F31F5CEAE485
DAFC73D575246C4A9FBC3B21CB92CC5DD60A72FDB97A65F89C2A1EC1B1DED74C
A360B6E4295C6E79F2B5BF733366F0846204EC5C9BF03EADBD47B22F44BC6D8A
34BE498756437D72A19349581B4A03009BE0DC8DEDC6A9A8D34105A2D386E2CD
70BBD10B0AA22B7FF7369D160745BA8D0866023F655BA6D2CA8CDD38937E97B6
E616C8CFBD8C0D8436026D09F99C88E88B5CDB7607AA6C0B71F11CE8EC328356
62B0B40DE6E9B2972BA590B74895D7C810EE110CEABF5CE69F58B6C4DBE88294
4BDE56A5C69846DF6895F853D8047002B3E40923AC54C1D7398C3C0DFF0D8CF5
9531654FD48262D63184C241E269CC4959C88BAF0EE1AE4FAFEB8467261E00DB
2ACF9C8803CCD9FF5F454D914FF87D6A79FF13B1AE8547A95A2D1BE4BE4370A8
83A1C2D95F4B45A8DF8F42351DF6C0C8B60FC2E9726C87C9E754164E6BB4EC3E
28015C8219899C570932E1456B8739C68BE6B00F98027197EAD7B308260191D0
3C62B3BC75F30E8C8C8E5B9B261A0DC5119CB0FBA50A029B45790EA10391DB44
92C11389603F5A201FB812EA1F978C35BE94B77F3265F2FDD49FFB566AFFCC88
F9F1FEA17DCDFFB7D9119640BEE63EC2D005D539F6D3A56A8003D4199D362BC5
CCABD3925431E83CF555C65CDB5FB77151446831F97E0000A6603D20DA9B9E41
0723C571B25F952EAF3A594A8FAC90815C146A66067CD3BF5F7B254305E3C20E
EDBCD9FD8F7FDA9F53504A0941F8E0B93B966387611802958E82DA3808601001
F054005AE32A9202486F7CAD4242AE6C631AE05394A5E1E0E5232CAF50CA259A
C75B5387D8D2176685B102A2B4E74F8A48891075618F086A918A64E00AFF409F
D561C7BB890C37196EDE4D8AAC6484D2081386255ED4FD8913AA867AD7F1B6DC
AAB938D36B65E9A51DF12B363790295BB5A525B3185B1EA7D113F902BA878C83
36D6DF6018C2000725AE8B69062B2DE80B69072F0AA36DB7A22147899D77821B
A8FEDDCF001322654DB47B805E2F6077556DD3EBE3A712EC207EA0FBCB7CF48D
E126428489840B2B19F0437ABABA9A0D03A98F9C293E69D3D20B16CC809E360D
100C635CF88C194B86B8C9371C29EE16E2C311E3CC26315973515A38CDA2F432
32130DC3A66AE422E0EE5FCE423F795C41F68E5F98F9C3BDEEF67529D75F3A1F
6C449891E1038F24F21068D85A4575101BE82D847F2E522C5EFBF34ABA94BE3C
E8487ACC9C764EFB5E20DDD84FA8DDA5AF271891F87F14846F2E07477A2326A0
9A6A589EFFA103D9A8AA7E993F4072013D02D8334ED762FE332EC81AAF652885
8A70D8AC8A1765A81FF1CFF31DC72E407853D13C2B065144345E540D2017F3B9
9A6A4B945F6C5291A573CB4205F66F8BCC2892942484AD126217AEDC1425E16A
3FB6C26E553212C06967548EBF611425B65A6BFA9C532D472515B135C42180CD
C2BB937110B78739ECB88DBE9FFF417D7F200196D5F086D7209E765D5175AAD3
B496A11CD9E05B6EAA174499F81705E3B26429433ED33A5EB1C9EF2D9426C284
326BA0D4D9ECB5AEB8C862789D654D56C1AE5B9F1D8055CD244ABDF14223122C
3AE66F538B1DF061BB3B522F2AA2A1B2CE7E3C9ADAC01553C9082048C7DA1A9A
B3C09DD3A996E43A82F8232CA1622C60804843FBA1366C3079B29055B18C13B4
8DB0F1E49B3968D901BBABC07675A1866481AD5C3F61108BB4E51B1A8A16C472
9D9DBFABDDD577022F92ACFE77FF99CCF66E81FDE71B908797DFBBF821FE4A0C
4F3309359B35FAFBC2BC80D3DEFE1F6B625EC4471E65A931FFC704AE0B715E18
4F06C190871FC67E24C2B6454BCFC55B28D33A9DD456B88997E4D97FB1360016
CA65D34C2B64CC90442F94EC8FA4A227F600274597B76BE0B33C67D9B377A758
C516CF71FA91915A041E49F295D4DF49C1EA9899F4E7AE188756E22F9484D85F
09ABBD378013BBCF031E822177171FB7A67B724C311B5679A0102BC7F05DF847
EEBC7D70B118CAEEE6885A14ED41BB0FC3418E89A7AD7A9679EC753251397858
9F8E736DD46D47663E283850A22A8FE05BF1761DEB7E4033ECDD7F83343ACF75
AA8D5657A0E4A5CF2BF579D0081EE4A25AACFBCDCBB703CC6AD24C4603D1BA3E
0419A9EF33FDF8E4B915B0E1C7F06956360719D63B869FDDCF2DAAAD831000E2
EDD53EE151DE98E3929A250D7F7F11ED4A15027226D281ACE72AC0A10482221E
6E934D750E4E0FDED8AE2313417112FA03B251B92A70D7965ED0D4AD9B99F89E
9AEE038DE2E52C60B0C4DC37E49A27DC496B17E5183EF7C4F3E14E2F5E75EA1D
0B98DC88E1AD0A166E2570716F25B7529A13FDF14720F9CB43BDDBC6D0885E8E
140CDFE3BC3ACF317E251D526524031A85B49DDC01574D63775736320F533939
17EFB576889E79EC74718627E7441C63546F0BC722F055257CCC3BEA15157AA5
77BD3ABCEB919FD1932787B38DC3487EC3841AABE47634871CEE55A2F1FBE568
0A4013E0169A730FA31D8E1C5C8FCA8FB7B970B4EEFD1485B7B449D30100FF37
2FA8A8D2D13F8C1F2B7E8CB8DDB86A365155DD41EAC240FB1833401353462890
65E711D23E271817A5DC1767658828B6E8421207E6194AA9FCC007F910998A0F
81E3B2170CF8C2C851586391A3FE6B21A20DDEF2CE85831BCD981C25E3C081E2
781C407FE13CAF7C0A6F5FDE7C571C1A152C77043B7F59C17E8E17FCB8B4ED57
7045267EA46C8822358DC174CF6D7ECEFD866CA9836F17AEC41016E63A70F486
84CD8809C394033B8ACC9BB7CAD65B44777CA7974DCD10263F3CC340D7EBDBC2
03458A7D64FDF1F3403902410F069F27ABF43415C321B2AB1ED0A947452D08C6
547D2A728EC07CB1E871CF213F4A9218BFE766EA3D11CC6203F5C42C194788D2
0AD7E0CFD35BB8BD016C4AD8BF56E1B36E5E5DF849C24524E2162F924941199C
D04FA897B58E20B5DDB547C80A351345C38E1ACA52938E0864EDB07DFE697592
3A68CA7A4061A48A14A620DDC846EC1AE3F9D63F8705CFFBBF6A0F32C90A2C73
AB93DDE3CE849F6BF8E5C2741488F00EB087E7E121EC0A2D8191748507912CFC
A72BEEB4370087FF432DEFD5795B8EDF1C41DF998253DF1BD32818D5E7D7402E
0D42ADDE71B9144919E98C10C20D007BE43DB159221C95EEA51140CC32A5440D
9D4CED089ED4EEE179062FF9377DB0C7BF2D7B2B5B4E560AE45FF71C84ABF87D
E0E611BC65C469
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra un)
@start /Fa 205[406 50[{ enclmrm ReEncodeFont }1 664.176
/LMRoman6-Regular rf /Fb 3[830 137[610 5[415 5[457 682
3[726 97[{ enclmec ReEncodeFont }6 1328.35 /LMRoman12-Bold
rf /Fc 203[993 1[993 50[{}2 1328.35 /wasy10 rf /Fd 242[1594
13[{ enclmmathsy ReEncodeFont }1 1594.02 /LMMathSymbols10-Regular
rf /Fe 173[959 82[{}1 1328.35 /MSBM10 rf /Ff 184[869
5[830 13[553 553 3[307 46[{ enclmec ReEncodeFont }5 1106.96
/LMRoman10-Regular rf /Fg 160[909 45[606 1[606 47[{
 enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular rf
/Fh 143[474 52[261 59[{ enclmmathit ReEncodeFont }2 885.568
/LMMathItalic8-Regular rf /Fi 203[470 470 470 470 49[{
 enclmrm ReEncodeFont }4 885.568 /LMRoman8-Regular rf
/Fj 143[1107 8[664 664 47[0 3[886 43[1033 4[369 1033{
 enclmmathsy ReEncodeFont }8 1328.35 /LMMathSymbols10-Regular
rf /Fk 134[634 739 3[470 613 586 577 653 9[641 1[676
560 1[683 20[885 13[1012 1[1012 361 59[{ enclmmathit ReEncodeFont }15
1328.35 /LMMathItalic12-Regular rf /Fl 194[1012 1[361
1[650 650 650 650 650 650 650 650 650 650 4[1012 1[506
506 40[{ enclmrm ReEncodeFont }15 1328.35 /LMRoman12-Regular
rf /Fm 3[723 5[650 17[650 105[578 686 686 939 686 723
506 513 506 686 723 650 723 1084 361 686 397 361 723
650 397 578 723 578 723 650 6[795 2[1336 975 975 939
723 1[1012 885 1012 1[1192 813 1011 3[1021 849 885 993
939 921 975 1[614 4[361 650 650 650 650 650 650 650 650
650 650 650 361 434 361 2[506 506 6[361 2[1084 2[759
27[{ enclmec ReEncodeFont }69 1328.35 /LMRoman12-Regular
rf /Fn 3[1196 5[1076 17[1046 105[956 2[1554 1136 1196
837 849 879 1136 1196 1076 1196 1793 598 1136 1[598 1196
1076 658 982 1196 956 1196 1046 6[1315 5[1497 2[1616
1[1616 1682 2041 1293 1685 1[801 1682 1691 1353 1412
1[1554 1530 1625 7[1076 1076 1076 1076 1076 1076 1076
1076 1076 1076 1076 598 717 45[{ enclmec ReEncodeFont }55
1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fn(A)-60
b(G)718 b(2.3)f(-)h(1)f(Gleic)-60 b(h)g(ung)717 b(3.)g(Grades)g(-)g(O)
-60 b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray -741 4800 a
Fm(1.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(ist)h(die)f(Gleic)-36
b(h)g(ung)433 b Fl(4)p Fk(x)295 b Fj(\001)h Fl(\()p Fk(x)19823
4318 y Fi(2)20644 4800 y Fj(\000)f Fl(2)p Fk(x)h Fj(\000)f
Fl(15\))369 b(=)g(0)921 7346 y Fm(Gib)433 b(die)g(L\366sung)h(dieser)f
(Gleic)-36 b(h)g(ung!)p 1 0 0 TeXcolorrgb 921 9891 a
Fk(x)1660 10090 y Fi(1)2555 9891 y Fl(=)368 b(0)921 11883
y Fk(x)1660 12082 y Fi(2)p Fh(;)p Fi(3)3287 11883 y Fl(=)g(1)296
b Fj(\006)6941 10851 y(p)p 8048 10851 3554 54 v 1032
x Fl(1)g(+)f(15;)655 b Fk(x)13356 12082 y Fi(2)14251
11883 y Fl(=)369 b Fj(\000)p Fl(3;)656 b Fk(x)19071 12082
y Fi(3)19966 11883 y Fl(=)368 b(5)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800 a Fg(___/1)p
1 0 0 TeXcolorrgb 47990 6792 a Ff(A)-31 b(G)369 b(2.3)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
15730 54804 45 v -2331 21031 a Fn(A)-60 b(G)718 b(2.3)f(-)h(2)f
(Quadratisc)-60 b(he)716 b(Gleic)-60 b(h)g(ung)717 b(-)g(L)-179
b(T)717 b(-)g(BIFIE)p 0 TeXcolorgray -741 24339 a Fm(2.)p
0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(ist)h(eine)f(quadratisc)-36
b(he)434 b(Gleic)-36 b(h)g(ung)432 b(der)h(F)-108 b(orm)14902
28876 y Fk(x)15641 28328 y Fi(2)16462 28876 y Fl(+)295
b Fk(px)g Fl(+)g Fk(q)416 b Fl(=)369 b(0)1301 b Fm(mit)434
b Fk(p;)221 b(q)416 b Fj(2)369 b Fe(R)921 32314 y Fm(Erg\344nze)358
b(die)h(T)-108 b(extl\374c)-36 b(k)g(en)358 b(im)g(folgenden)h(Satz)f
(durc)-36 b(h)357 b(Ankreuzen)g(der)h(jew)-36 b(eils)360
b(ric)-36 b(h)g(tigen)921 34306 y(Satzteile)434 b(so,)g(dass)g(eine)f
(mathematisc)-36 b(h)434 b(k)-36 b(orrekte)434 b(A)-36
b(ussage)434 b(en)-36 b(tsteh)g(t!)921 37797 y(Die)733
b(quadratisc)-36 b(he)732 b(Gleic)-36 b(h)g(ung)731 b(hat)h(jedenfalls)
i(f\374r)e(x)p 30475 37797 3150 45 v 34097 37749 a(1)33625
37797 y Fd(\015)p 35219 37797 V 3882 w Fm(in)g Fe(R)p
Fm(,)h(w)-36 b(enn)p 921 39788 V 4542 39740 a(2)4071
39788 y Fd(\015)p 5665 39788 V 3583 w Fm(gilt.)p 0 TeXcolorgray
0 TeXcolorgray 6441 41161 14719 45 v 6441 44245 45 3085
v 13475 42942 a(1)13004 42990 y Fd(\015)p 21115 44245
V 6441 44289 14719 45 v 6441 47548 45 3260 v 7150 46345
a Fm(k)g(eine)434 b(L\366sung)p 18750 47548 V 19459 46251
a Fc(2)p 21115 47548 V 6441 47593 14719 45 v 6441 50852
45 3260 v 7150 49649 a Fm(genau)f(eine)h(L\366sung)p
18750 50852 V 19459 49554 a Fc(2)p 21115 50852 V 6441
50896 14719 45 v 6441 54155 45 3260 v 7150 52952 a Fm(zw)-36
b(ei)434 b(L\366sungen)p 18750 54155 V 1 0 0 TeXcolorrgb
19459 52858 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 21115 54155 V 6441 54200 14719 45 v 0
TeXcolorgray 0 TeXcolorgray 30427 41161 12895 45 v 30427
44245 45 3085 v 36549 42942 a Fm(2)36077 42990 y Fd(\015)p
43276 44245 V 30427 44289 12895 45 v 30427 47548 45 3260
v 31135 46345 a Fk(p)369 b Fj(6)p Fl(=)f(0)434 b Fm(und)f
Fk(q)416 b(<)369 b Fl(0)p 40911 47548 V 1 0 0 TeXcolorrgb
41620 46251 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 43276 47548 V 30427 47593 12895 45 v 30427
50852 45 3260 v 31135 49649 a Fk(p)g Fl(=)f Fk(q)p 40911
50852 V 41620 49554 a Fc(2)p 43276 50852 V 30427 50896
12895 45 v 30427 54155 45 3260 v 31135 52952 a Fk(p)h(<)f
Fl(0)434 b Fm(und)f Fk(q)416 b(>)369 b Fl(0)p 40911 54155
V 41620 52858 a Fc(2)p 43276 54155 V 30427 54200 12895
45 v 47992 24339 a Fg(___/1)p 1 0 0 TeXcolorrgb 47990
26331 a Ff(A)-31 b(G)369 b(2.3)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 58228 54804 45 v -2331
63529 a Fn(A)-60 b(G)1021 b(2.3)f(-)h(3)f(L\366sung)f(einer)g
(quadratisc)-60 b(he)1019 b(Gleic)-60 b(h)g(ung)1019
b(-)i(O)-60 b(A)1021 b(-)-2331 66552 y(BIFIE)p 0 TeXcolorgray
-741 69859 a Fm(3.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(ist)h(die)f(Gleic)-36 b(h)g(ung)433 b Fl(\()p Fk(x)295
b Fj(\000)g Fl(3\))20253 69377 y Fi(2)21148 69859 y Fl(=)369
b Fk(a)p Fm(.)921 72404 y(Ermittle)430 b(jene)h(W)-108
b(erte)430 b Fk(a)369 b Fj(2)f Fe(R)p Fm(,)431 b(f\374r)f(die)h(gegeb)
36 b(ene)430 b(Gleic)-36 b(h)g(ung)430 b(k)-36 b(eine)431
b(reelle)g(L\366sung)f(hat!)p 1 0 0 TeXcolorrgb 921 74950
a(F)-27 b(\374r)433 b(alle)h Fk(a)369 b(<)g Fl(0)433
b Fm(gibt)h(es)g(k)-36 b(eine)434 b(L\366sungen.)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 69859
a Fg(___/1)p 1 0 0 TeXcolorrgb 47990 71851 a Ff(A)-31
b(G)369 b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 0 TeXcolorgray 24746 81281 a Fm(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 54804 45 v -2331 6795 a Fn(A)-60
b(G)985 b(2.3)g(-)g(4)f(Graphisc)-60 b(he)984 b(L\366sung)f(einer)h
(quadratisc)-60 b(hen)983 b(Glei-)-2331 9817 y(c)-60
b(h)g(ung)717 b(-)h(L)-179 b(T)716 b(-)i(BIFIE)p 0 TeXcolorgray
-741 13124 a Fm(4.)p 0 TeXcolorgray 651 w(Der)423 b(Graph)e(der)h(P)-36
b(olynomfunktion)423 b Fk(f)564 b Fm(mit)423 b Fk(f)142
b Fl(\()p Fk(x)p Fl(\))368 b(=)h Fk(x)28490 12642 y Fi(2)29288
13124 y Fl(+)272 b Fk(px)g Fl(+)g Fk(q)470 b Fm(b)36
b(er\374hrt)420 b(die)j(x-A)-36 b(c)g(hse.)855 15116
y(W)-108 b(elc)-36 b(her)433 b(Zusammenhang)g(b)36 b(esteh)-36
b(t)432 b(dann)h(zwisc)-36 b(hen)434 b(den)e(P)-36 b(arametern)434
b Fk(p)f Fm(und)f Fk(q)48 b Fm(?)921 17661 y(Erg\344nze)358
b(die)h(T)-108 b(extl\374c)-36 b(k)g(en)358 b(im)g(folgenden)h(Satz)f
(durc)-36 b(h)357 b(Ankreuzen)g(der)h(jew)-36 b(eils)360
b(ric)-36 b(h)g(tigen)921 19653 y(Satzteile)434 b(so,)g(dass)g(eine)f
(mathematisc)-36 b(h)434 b(k)-36 b(orrekte)434 b(A)-36
b(ussage)434 b(en)-36 b(tsteh)g(t!)921 23144 y(Es)1154
b(gibt)h(in)f(diesem)h(F)-108 b(all)p 17582 23144 3150
45 v 21204 23096 a(1)20732 23144 y Fd(\015)p 22326 23144
V 4304 w Fm(mit)1155 b(der)f(x-A)-36 b(c)g(hse,)1155
b(deshalb)f(gilt)p 1138 25136 V 4759 25088 a(2)4287 25136
y Fd(\015)p 5881 25136 V 3584 w Fm(.)p 0 TeXcolorgray
0 TeXcolorgray 5455 26508 15706 45 v 5455 29592 45 3085
v 12982 28289 a(1)12510 28337 y Fd(\015)p 21115 29592
V 5455 29636 15706 45 v 5455 32896 45 3260 v 6163 31692
a Fm(k)-36 b(einen)434 b(Sc)-36 b(hnittpunkt)p 18750
32896 V 19459 31598 a Fc(2)p 21115 32896 V 5455 32940
15706 45 v 5455 36199 45 3260 v 6163 34996 a Fm(einen)433
b(Sc)-36 b(hnittpunkt)p 18750 36199 V 1 0 0 TeXcolorrgb
19459 34902 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 21115 36199 V 5455 36243 15706 45 v 5455
39503 45 3260 v 6163 38299 a Fm(zw)g(ei)434 b(Sc)-36
b(hnittpunkte)p 18750 39503 V 19459 38205 a Fc(2)p 21115
39503 V 5455 39547 15706 45 v 0 TeXcolorgray 0 TeXcolorgray
30427 26508 7601 45 v 30427 29592 45 3085 v 33902 28289
a Fm(2)33430 28337 y Fd(\015)p 37983 29592 V 30427 29636
7601 45 v 30427 34389 45 4753 v 31268 31634 a Fk(p)31921
31152 y Fi(2)p 31268 32223 1179 45 v 31532 33444 a Fl(4)32948
32533 y(=)369 b Fk(q)p 35617 34389 45 4753 v 1 0 0 TeXcolorrgb
36326 32345 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 37983 34389 V 30427 34433 7601 45 v 30427
39185 45 4753 v 31268 36431 a Fk(p)31921 35949 y Fi(2)p
31268 37019 1179 45 v 31532 38240 a Fl(4)32948 37329
y Fk(<)g(q)p 35617 39185 45 4753 v 36326 37141 a Fc(2)p
37983 39185 V 30427 39230 7601 45 v 30427 43982 45 4753
v 31268 41227 a Fk(p)31921 40745 y Fi(2)p 31268 41816
1179 45 v 31532 43037 a Fl(4)32948 42126 y Fk(>)g(q)p
35617 43982 45 4753 v 36326 41938 a Fc(2)p 37983 43982
V 30427 44026 7601 45 v 47992 13124 a Fg(___/1)p 1 0 0
TeXcolorrgb 47990 15116 a Ff(A)-31 b(G)369 b(2.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 48054
54804 45 v 0 TeXcolorgray 24746 81281 a Fm(2)p 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fn(A)-60 b(G)718 b(2.3)f(-)h(5)f(Quadratisc)
-60 b(he)716 b(Gleic)-60 b(h)g(ungen)716 b(-)i(ZO)f(-)h(BIFIE)p
0 TeXcolorgray -741 4800 a Fm(5.)p 0 TeXcolorgray 651
w(Quadratisc)-36 b(he)398 b(Gleic)-36 b(h)g(ungen)398
b(k)-36 b(\366nnen)398 b(in)h(der)f(Menge)h(der)f(reellen)h(Zahlen)g(k)
-36 b(eine,)399 b(genau)921 6792 y(eine)434 b(o)36 b(der)433
b(zw)-36 b(ei)434 b(v)-36 b(ersc)g(hiedene)433 b(L\366sungen)g(hab)36
b(en.)921 11330 y(Ordnen)407 b(Sie)i(jeder)f(L\366sungsmenge)g
Fk(L)h Fm(die)g(en)-36 b(tsprec)g(hende)406 b(quadratisc)-36
b(he)409 b(Gleic)-36 b(h)g(ung)407 b(in)921 13322 y(der)433
b(Menge)g(der)h(reellen)f(Zahlen)h(zu!)p 0 TeXcolorgray
0 TeXcolorgray 6346 14918 8297 45 v 14642 14918 4523
45 v 6346 18251 45 3334 v 7054 16974 a Fk(L)369 b Fl(=)g
Fj(fg)p 14598 18251 V 0.9 TeXcolorgray 14643 18251 4478
3334 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 16385 17100 a
Fm(D)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
19120 18251 45 3334 v 6346 18296 8297 45 v 14642 18296
4523 45 v 6346 21629 45 3334 v 7054 20352 a Fk(L)g Fl(=)g
Fj(f\000)p Fl(4;)221 b(4)p Fj(g)p 14598 21629 V 0.9 TeXcolorgray
14643 21629 4478 3334 v 0 TeXcolorgray 1 0 0 TeXcolorrgb
16439 20477 a Fm(E)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 19120 21629 45 3334 v 6346 21673 8297
45 v 14642 21673 4523 45 v 6346 25006 45 3334 v 7054
23729 a Fk(L)369 b Fl(=)g Fj(f)p Fl(0;)221 b(4)p Fj(g)p
14598 25006 V 0.9 TeXcolorgray 14643 25006 4478 3334
v 0 TeXcolorgray 1 0 0 TeXcolorrgb 16412 23854 a Fm(C)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 19120
25006 45 3334 v 6346 25050 8297 45 v 14642 25050 4523
45 v 6346 28383 45 3334 v 7054 27106 a Fk(L)369 b Fl(=)g
Fj(f)p Fl(4)p Fj(g)p 14598 28383 V 0.9 TeXcolorgray 14643
28383 4478 3334 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 16457
27232 a Fm(F)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 19120 28383 45 3334 v 6346 28427 8297 45
v 14642 28427 4523 45 v 0 TeXcolorgray 0 TeXcolorgray
24451 14918 4567 45 v 29018 14918 10954 45 v 24451 18279
45 3362 v 0.92 TeXcolorgray 24496 18279 4478 3362 v 0
TeXcolorgray 26223 17099 a(A)p 28973 18279 45 3362 v
29682 17002 a Fl(\()p Fk(x)295 b Fl(+)g(4\))33685 16520
y Fi(2)34580 17002 y Fl(=)368 b(0)p 39927 18279 V 24451
18324 4567 45 v 29018 18324 10954 45 v 24451 21685 45
3362 v 0.92 TeXcolorgray 24496 21685 4478 3362 v 0 TeXcolorgray
26274 20505 a Fm(B)p 28973 21685 45 3362 v 29682 20408
a Fl(\()p Fk(x)295 b Fj(\000)g Fl(4\))33706 19926 y Fi(2)34601
20408 y Fl(=)369 b(25)p 39927 21685 V 24451 21729 4567
45 v 29018 21729 10954 45 v 24451 25062 45 3334 v 0.92
TeXcolorgray 24496 25062 4478 3334 v 0 TeXcolorgray 26265
23910 a Fm(C)p 28973 25062 45 3334 v 29682 23785 a Fk(x)p
Fl(\()p Fk(x)295 b Fj(\000)g Fl(4\))370 b(=)e(0)p 39927
25062 V 24451 25107 4567 45 v 29018 25107 10954 45 v
24451 28366 45 3260 v 0.92 TeXcolorgray 24496 28366 4478
3260 v 0 TeXcolorgray 26238 27288 a Fm(D)p 28973 28366
45 3260 v 29682 27302 a Fj(\000)p Fk(x)31454 26820 y
Fi(2)32349 27302 y Fl(=)h(16)p 39927 28366 V 24451 28410
4567 45 v 29018 28410 10954 45 v 24451 31669 45 3260
v 0.92 TeXcolorgray 24496 31669 4478 3260 v 0 TeXcolorgray
26292 30591 a Fm(E)p 28973 31669 45 3260 v 29682 30605
a Fk(x)30421 30123 y Fi(2)31242 30605 y Fj(\000)295 b
Fl(16)370 b(=)f(0)p 39927 31669 V 24451 31714 4567 45
v 29018 31714 10954 45 v 24451 34973 45 3260 v 0.92 TeXcolorgray
24496 34973 4478 3260 v 0 TeXcolorgray 26310 33895 a
Fm(F)p 28973 34973 45 3260 v 29682 33909 a Fk(x)30421
33427 y Fi(2)31242 33909 y Fj(\000)295 b Fl(8)p Fk(x)h
Fl(+)f(16)369 b(=)g(0)p 39927 34973 V 24451 35017 4567
45 v 29018 35017 10954 45 v 47992 4800 a Fg(___/1)p 1 0 0
TeXcolorrgb 47990 6792 a Ff(A)-31 b(G)369 b(2.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 41384
54804 45 v 0 TeXcolorgray 24746 81281 a Fm(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fn(A)-60 b(G)718 b(2.3)f(-)h(6)f(Quadratisc)
-60 b(he)716 b(Gleic)-60 b(h)g(ungen)716 b(-)i(ZO)f(-)h(BIFIE)p
0 TeXcolorgray -741 4800 a Fm(6.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)458 b(sind)h(vier)h(L\366sungsmengen)e(und)g(sec)-36
b(hs)458 b(quadratisc)-36 b(he)459 b(Gleic)-36 b(h)g(ungen.)459
b(Ordne)921 7493 y(jeder)350 b(L\366sungsmenge)f Fk(L)g
Fm(die)h(en)-36 b(tsprec)g(hende)347 b(quadratisc)-36
b(he)350 b(Gleic)-36 b(h)g(ung)349 b(zu!)p 0 TeXcolorgray
0 TeXcolorgray 4584 9938 8297 45 v 12880 9938 4523 45
v 4584 13271 45 3334 v 5293 11994 a Fk(L)368 b Fl(=)h
Fj(f)221 b(g)p 12836 13271 V 0.9 TeXcolorgray 12881 13271
4478 3334 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 14623 12120
a Fm(D)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
17358 13271 45 3334 v 4584 13315 8297 45 v 12880 13315
4523 45 v 4584 16648 45 3334 v 5293 15371 a Fk(L)368
b Fl(=)h Fj(f\000)p Fl(3;)221 b(3)p Fj(g)p 12836 16648
V 0.9 TeXcolorgray 12881 16648 4478 3334 v 0 TeXcolorgray
1 0 0 TeXcolorrgb 14677 15497 a Fm(E)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 17358 16648 45 3334
v 4584 16693 8297 45 v 12880 16693 4523 45 v 4584 20026
45 3334 v 5293 18749 a Fk(L)368 b Fl(=)h Fj(f)p Fl(0;)221
b(3)p Fj(g)p 12836 20026 V 0.9 TeXcolorgray 12881 20026
4478 3334 v 0 TeXcolorgray 1 0 0 TeXcolorrgb 14650 18874
a Fm(C)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
17358 20026 45 3334 v 4584 20070 8297 45 v 12880 20070
4523 45 v 4584 23403 45 3334 v 5293 22126 a Fk(L)368
b Fl(=)h Fj(f)p Fl(3)p Fj(g)p 12836 23403 V 0.9 TeXcolorgray
12881 23403 4478 3334 v 0 TeXcolorgray 1 0 0 TeXcolorrgb
14659 22252 a Fm(B)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 17358 23403 45 3334 v 4584 23447 8297
45 v 12880 23447 4523 45 v 0 TeXcolorgray 0 TeXcolorgray
22689 9938 4567 45 v 27256 9938 10303 45 v 22689 13299
45 3362 v 0.92 TeXcolorgray 22734 13299 4478 3362 v 0
TeXcolorgray 24461 12119 a(A)p 27212 13299 45 3362 v
27920 12022 a Fl(\()p Fk(x)295 b Fl(+)g(3\))31923 11540
y Fi(2)32818 12022 y Fl(=)368 b(0)p 37514 13299 V 22689
13344 4567 45 v 27256 13344 10303 45 v 22689 16705 45
3362 v 0.92 TeXcolorgray 22734 16705 4478 3362 v 0 TeXcolorgray
24512 15525 a Fm(B)p 27212 16705 45 3362 v 27920 15428
a Fl(\()p Fk(x)295 b Fj(\000)g Fl(3\))31944 14946 y Fi(2)32839
15428 y Fl(=)369 b(16)p 37514 16705 V 22689 16749 4567
45 v 27256 16749 10303 45 v 22689 20082 45 3334 v 0.92
TeXcolorgray 22734 20082 4478 3334 v 0 TeXcolorgray 24503
18930 a Fm(C)p 27212 20082 45 3334 v 27920 18805 a Fk(x)295
b Fj(\001)g Fl(\()p Fk(x)h Fj(\000)f Fl(3\))369 b(=)g(0)p
37514 20082 V 22689 20126 4567 45 v 27256 20126 10303
45 v 22689 23386 45 3260 v 0.92 TeXcolorgray 22734 23386
4478 3260 v 0 TeXcolorgray 24476 22308 a Fm(D)p 27212
23386 45 3260 v 27920 22322 a Fj(\000)p Fk(x)29692 21839
y Fi(2)30587 22322 y Fl(=)g(9)p 37514 23386 V 22689 23430
4567 45 v 27256 23430 10303 45 v 22689 26689 45 3260
v 0.92 TeXcolorgray 22734 26689 4478 3260 v 0 TeXcolorgray
24530 25611 a Fm(E)p 27212 26689 45 3260 v 27920 25625
a Fk(x)28659 25143 y Fi(2)29480 25625 y Fj(\000)295 b
Fl(9)370 b(=)e(0)p 37514 26689 V 22689 26733 4567 45
v 27256 26733 10303 45 v 22689 29993 45 3260 v 0.92 TeXcolorgray
22734 29993 4478 3260 v 0 TeXcolorgray 24548 28915 a
Fm(F)p 27212 29993 45 3260 v 27920 28929 a Fk(x)28659
28446 y Fi(2)29480 28929 y Fj(\000)295 b Fl(6)p Fk(x)h
Fl(+)f(9)369 b(=)g(0)p 37514 29993 V 22689 30037 4567
45 v 27256 30037 10303 45 v 47992 4800 a Fg(___/1)p 1 0 0
TeXcolorrgb 47990 6792 a Ff(A)-31 b(G)369 b(2.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 36404
54804 45 v -2331 41706 a Fn(A)-60 b(G)774 b(2.3)g(-)f(7)h(A)-60
b(ussagen)772 b(\374b)60 b(er)772 b(Zahlen)h(-)g(O)-60
b(A)774 b(-)g(BIFIE)g(-)g(K)-60 b(omp)60 b(e-)-2331 44728
y(tenzc)-60 b(hec)g(k)718 b(2016)p 0 TeXcolorgray -741
48035 a Fm(7.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)368
b(ist)g(die)h(folgende)g(quadratisc)-36 b(he)368 b(Gleic)-36
b(h)g(ung)368 b(in)g(der)g(Un)-36 b(b)36 b(ekann)-36
b(ten)367 b Fk(x)i Fm(\374b)36 b(er)368 b(der)921 50027
y(Grundmenge)432 b Fe(R)p Fm(:)p 0 TeXcolorgray 0 TeXcolorgray
17063 53680 a Fl(4)p Fk(x)18452 53198 y Fi(2)19273 53680
y Fj(\000)296 b Fk(d)369 b Fl(=)f(2)434 b Fm(mit)g Fk(d)368
b Fj(2)h Fe(R)921 57332 y Fm(Gib)537 b(denjenigen)h(W)-108
b(ert)537 b(f\374r)h Fk(d)546 b Fj(2)g Fe(R)538 b Fm(an,)g(f\374r)g
(den)f(die)h(Gleic)-36 b(h)g(ung)537 b(genau)h(eine)g(L\366sung)921
59324 y(hat.)921 61869 y Fk(d)369 b Fl(=)p 1 0 0 TeXcolorrgb
433 w Fj(\000)p Fl(2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 48035 a Fg(___/1)p 1 0 0 TeXcolorrgb
47990 50027 a Ff(A)-31 b(G)369 b(2.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 65455 V 0 TeXcolorgray
24746 81281 a Fm(4)p 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fn(A)-60 b(G)617 b(2.3)f(-)g(8)g(Quadratisc)
-60 b(he)615 b(Gleic)-60 b(h)g(ung)615 b(-)i(O)-60 b(A)616
b(-)h(Matura)e(2015/16)-2617 4622 y(-)718 b(Haupttermin)p
0 TeXcolorgray -741 7929 a Fm(8.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)433 b(ist)h(die)f(quadratisc)-36 b(he)434
b(Gleic)-36 b(h)g(ung)432 b Fk(x)24562 7447 y Fi(2)25383
7929 y Fl(+)295 b Fk(p)g Fj(\001)g Fk(x)h Fj(\000)f Fl(12)370
b(=)e(0)p Fm(.)921 12466 y(Bestimme)704 b(denjenigen)g(W)-108
b(ert)704 b(f\374r)g Fk(p)p Fm(,)h(f\374r)f(den)g(die)g(Gleic)-36
b(h)g(ung)703 b(die)i(L\366sungsmenge)921 14458 y Fk(L)369
b Fl(=)g Fj(f\000)p Fl(2;)655 b(6)p Fj(g)435 b Fm(hat!)p
1 0 0 TeXcolorrgb 921 17004 a Fk(p)369 b Fl(=)f Fj(\000)p
Fl(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 7929 a Fg(___/1)p 1 0 0 TeXcolorrgb 47990 9921
a Ff(A)-31 b(G)369 b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 20737 54804 45 v -2331 26165 a Fn(A)-60
b(G)802 b(2.3)e(-)i(9)e(L\366sungsf\344lle)f(-)i(MC)h(-)f(Matura)f
(2014/15)h(-)g(Neb)60 b(en-)-2331 29188 y(termin)717
b(1)p 0 TeXcolorgray -741 32495 a Fm(9.)p 0 TeXcolorgray
651 w(Gegeb)36 b(en)433 b(sind)g(f\374nf)h(Gleic)-36
b(h)g(ungen)432 b(in)i(der)f(Un)-36 b(b)36 b(ekann)-36
b(ten)432 b Fk(x)p Fm(.)855 37032 y(W)-108 b(elc)-36
b(he)433 b(dieser)h(Gleic)-36 b(h)g(ungen)432 b(b)36
b(esitzt/b)g(esitzen)433 b(zumindest)g(eine)h(reelle)g(L\366sung?)921
39578 y(Kreuze)f(die)h(zutre\033ende\(n\))d(Gleic)-36
b(h)g(ung\(en\))432 b(an!)p 17910 40618 10564 45 v 17910
43447 45 2829 v 18619 42400 a Fl(2)p Fk(x)369 b Fl(=)g(2)p
Fk(x)296 b Fl(+)e(1)p 26064 43447 V 28429 43447 V 17910
43491 10564 45 v 17910 46217 45 2727 v 18619 45272 a
Fk(x)369 b Fl(=)g(2)p Fk(x)p 26064 46217 V 1 0 0 TeXcolorrgb
26772 45186 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 28429 46217 V 17910 46262 10564 45 v 17910
49306 45 3045 v 18619 48259 a Fk(x)19358 47777 y Fi(2)20179
48259 y Fl(+)295 b(1)369 b(=)g(0)p 26064 49306 V 28429
49306 V 17910 49351 10564 45 v 17910 52404 45 3054 v
18619 51348 a Fk(x)19358 50866 y Fi(2)20253 51348 y Fl(=)f
Fj(\000)p Fk(x)p 26064 52404 V 1 0 0 TeXcolorrgb 26772
51209 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 28429 52404 V 17910 52448 10564 45 v 17910
55501 45 3054 v 18619 54446 a Fk(x)19358 53964 y Fi(3)20253
54446 y Fl(=)g Fj(\000)p Fl(1)p 26064 55501 V 1 0 0 TeXcolorrgb
26772 54307 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 28429 55501 V 17910 55546 10564 45 v 47992
32495 a Fg(___/1)p 1 0 0 TeXcolorrgb 47990 34487 a Ff(A)-31
b(G)369 b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 59574 54804 45 v 0 TeXcolorgray 24746
81281 a Fm(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fn(A)-60 b(G)718 b(2.3)f(-)h(10)f(Benzin)-60
b(v)g(erbrauc)g(h)715 b(-)j(O)-60 b(A)718 b(-)f(BIFIE)p
0 TeXcolorgray -1391 4800 a Fm(10.)p 0 TeXcolorgray 651
w(Der)565 b(Zusammenhang)f(zwisc)-36 b(hen)564 b(dem)g(Benzin)-36
b(v)g(erbrauc)g(h)563 b(y)i(\(in)g(L/100)217 b(km\))565
b(und)f(der)921 6792 y(Gesc)-36 b(h)g(windigk)g(eit)620
b Fk(x)h Fm(\(in)f(km/h\))h(kann)f(f\374r)h(einen)f(b)36
b(estimm)-36 b(ten)619 b(A)-36 b(utot)g(yp)620 b(durc)-36
b(h)619 b(die)921 8784 y(F)-108 b(unktionsgleic)-36 b(h)g(ung)433
b Fk(y)417 b Fl(=)368 b(0)p Fk(;)p Fl(0005)297 b Fj(\001)f
Fk(x)19998 8302 y Fi(2)20819 8784 y Fj(\000)f Fl(0)p
Fk(;)p Fl(09)i Fj(\001)e Fk(x)g Fl(+)g(10)434 b Fm(b)36
b(esc)-36 b(hrieb)36 b(en)433 b(w)-36 b(erden.)921 13322
y(Ermittle)362 b(rec)-36 b(hnerisc)g(h,)362 b(b)36 b(ei)363
b(w)-36 b(elc)g(her)362 b(Gesc)-36 b(h)g(windigk)g(eit)363
b(bzw.)g(w)-36 b(elc)g(hen)363 b(Gesc)-36 b(h)g(windigk)g(ei-)921
15314 y(ten)433 b(der)g(V)-108 b(erbrauc)-36 b(h)432
b(6)217 b(L/100)g(km)435 b(b)36 b(etr\344gt!)p 1 0 0
TeXcolorrgb 921 17859 a Fl(6)369 b(=)g(0)p Fk(;)p Fl(0005)297
b Fj(\001)e Fk(x)8632 17377 y Fi(2)9453 17859 y Fj(\000)h
Fl(0)p Fk(;)p Fl(09)g Fj(\001)f Fk(x)h Fl(+)f(10)434
b(0)369 b(=)g Fk(x)21268 17377 y Fi(2)22089 17859 y Fj(\000)295
b Fl(180)h Fj(\001)g Fk(x)f Fl(+)g(8)221 b(000)921 22396
y Fk(x)1660 22595 y Fi(1)p Fh(;)p Fi(2)3287 22396 y Fl(=)368
b(90)296 b Fj(\006)7592 21368 y(p)p 8698 21368 7270 54
v 8698 22396 a Fl(8)221 b(100)297 b Fj(\000)f Fl(8)221
b(000)370 b(=)f(90)296 b Fj(\006)f Fl(10)921 24388 y
Fk(x)1660 24587 y Fi(1)2555 24388 y Fl(=)368 b(80)p Fk(;)221
b(x)6556 24587 y Fi(2)7453 24388 y Fl(=)368 b(100)921
28925 y Fm(Bei)434 b(80)217 b(km/h)434 b(und)f(b)36 b(ei)433
b(100)217 b(km/h)435 b(b)36 b(etr\344gt)434 b(der)f(Benzin)-36
b(v)g(erbrauc)g(h)432 b(6)217 b(L/100)g(km.)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800 a Fg(___/1)p
1 0 0 TeXcolorrgb 47990 6792 a Ff(A)-31 b(G)369 b(2.3)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
32733 54804 45 v -2331 38034 a Fn(A)-60 b(G)718 b(2.3)f(-)h(11)f(Mehrw)
-60 b(ertsteuer)716 b(-)i(O)-60 b(A)717 b(-)h(Matura)f(NT)h(2016)p
0 TeXcolorgray -1391 41342 a Fm(11.)p 0 TeXcolorgray
651 w(Gegeb)36 b(en)433 b(ist)h(die)f(Gleic)-36 b(h)g(ung)433
b Fk(a)295 b Fj(\001)g Fk(x)18610 40860 y Fi(2)19431
41342 y Fl(+)g(10)h Fj(\001)f Fk(x)g Fl(+)g(25)370 b(=)e(0)434
b Fm(mit)g Fk(a)369 b Fj(2)f Fe(R)p Fk(;)221 b(a)370
b Fj(6)p Fl(=)f(0)p Fm(.)921 43887 y(Bestimme)453 b(jene\(n\))g(W)-108
b(ert\(e\))453 b(v)-36 b(on)453 b Fk(a)p Fm(,)h(f\374r)f(w)-36
b(elc)g(he\(n\))452 b(die)i(Gleic)-36 b(h)g(ung)452 b(genau)h(eine)h
(reelle)921 45879 y(L\366sung)433 b(hat!)921 48424 y
Fk(a)369 b Fl(=)p 1 0 0 TeXcolorrgb 433 w Fm(1)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 41342
a Fg(___/1)p 1 0 0 TeXcolorrgb 47990 43334 a Ff(A)-31
b(G)369 b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 51900 V 0 TeXcolorgray 24746 81281
a Fm(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fn(A)-60 b(G)569 b(2.3)e(-)h(12)g(Quadratisc)
-60 b(he)566 b(Gleic)-60 b(h)g(ung)567 b(-)i(L)-179 b(T)566
b(-)i(Matura)g(2013/14)-2331 4622 y(Haupttermin)p 0 TeXcolorgray
-1391 7929 a Fm(12.)p 0 TeXcolorgray 651 w(Die)463 b(Anzahl)g(der)f
(L\366sungen)g(der)g(quadratisc)-36 b(hen)462 b(Gleic)-36
b(h)g(ung)461 b Fk(r)36 b(x)33976 7447 y Fi(2)34817 7929
y Fl(+)315 b Fk(sx)g Fl(+)f Fk(t)418 b Fl(=)g(0)463 b
Fm(in)g(der)921 9921 y(Menge)433 b(der)g(reellen)h(Zahlen)g(h\344ngt)f
(v)-36 b(on)434 b(den)f(K)-36 b(o)36 b(e\036zien)-36
b(ten)433 b Fk(r)-36 b(;)221 b(s)434 b Fm(und)e Fk(t)i
Fm(ab.)921 12466 y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36
b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357
b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36 b(h)g(tigen)921
14458 y(Satzteile)434 b(so,)g(dass)g(eine)f(mathematisc)-36
b(h)434 b(k)-36 b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36
b(tsteh)g(t!)921 17948 y(Die)800 b(quadratisc)-36 b(he)800
b(Gleic)-36 b(h)g(ung)799 b Fk(r)36 b(x)19420 17466 y
Fi(2)20491 17948 y Fl(+)544 b Fk(sx)g Fl(+)g Fk(t)992
b Fl(=)g(0)800 b Fm(hat)g(genau)f(dann)806 b Fb(f\374r)919
b(alle)921 19940 y Fk(r)405 b Fj(6)p Fl(=)369 b(0;)221
b Fk(r)-36 b(;)221 b(s;)g(t)371 b Fj(2)d Fe(R)p 10557
19940 3150 45 v 14178 19892 a Fm(1)13706 19940 y Fd(\015)p
15301 19940 V 3584 w Fm(,)434 b(w)-36 b(enn)p 23255 19940
V 26877 19892 a(2)26405 19940 y Fd(\015)p 27999 19940
V 3583 w Fm(gilt.)p 0 TeXcolorgray 0 TeXcolorgray 3623
21313 17537 45 v 3623 24397 45 3085 v 12066 23094 a(1)11594
23142 y Fd(\015)p 21115 24397 V 3623 24441 17537 45 v
3623 27700 45 3260 v 4332 26497 a Fm(zw)g(ei)434 b(reelle)g
(L\366sungen)p 18750 27700 V 1 0 0 TeXcolorrgb 19459
26403 a Fc(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 21115 27700 V 3623 27745 17537 45 v 3623
31004 45 3260 v 4332 29801 a Fm(k)-36 b(eine)434 b(relle)g(L\366sung)p
18750 31004 V 19459 29706 a Fc(2)p 21115 31004 V 3623
31048 17537 45 v 3623 34307 45 3260 v 4332 33104 a Fm(genau)f(eine)h
(relle)g(L\366sung)p 18750 34307 V 19459 33010 a Fc(2)p
21115 34307 V 3623 34352 17537 45 v 0 TeXcolorgray 0
TeXcolorgray 30427 21313 10687 45 v 30427 24397 45 3085
v 35445 23094 a Fm(2)34973 23142 y Fd(\015)p 41069 24397
V 30427 24441 10687 45 v 30427 27700 45 3260 v 31135
26497 a Fk(r)31757 26015 y Fi(2)32578 26497 y Fj(\000)296
b Fl(4)p Fk(st)368 b(>)h Fl(0)p 38703 27700 V 39412 26403
a Fc(2)p 41069 27700 V 30427 27745 10687 45 v 30427 31004
45 3260 v 31135 29801 a Fk(t)31605 29319 y Fi(2)32500
29801 y Fl(=)f(4)p Fk(r)36 b(s)p 38703 31004 V 39412
29706 a Fc(2)p 41069 31004 V 30427 31048 10687 45 v 30427
34307 45 3260 v 31135 33104 a Fk(s)31748 32622 y Fi(2)32569
33104 y Fj(\000)295 b Fl(4)p Fk(r)36 b(t)369 b(>)g Fl(0)p
38703 34307 V 1 0 0 TeXcolorrgb 39412 33010 a Fc(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 41069
34307 V 30427 34352 10687 45 v 47992 7929 a Fg(___/1)p
1 0 0 TeXcolorrgb 47990 9921 a Ff(A)-31 b(G)369 b(2.3)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
38380 54804 45 v -2331 43808 a Fn(A)-60 b(G)568 b(2.3)f(-)h(13)f
(Quadratisc)-60 b(he)566 b(Gleic)-60 b(h)g(ung)567 b(-)h(O)-60
b(A-)568 b(Matura)f(2013/14)-2439 46830 y(1.)718 b(Neb)60
b(en)-60 b(termin)p 0 TeXcolorgray -1391 50138 a Fm(13.)p
0 TeXcolorgray 651 w(Gegeb)36 b(en)359 b(ist)g(die)h(quadratisc)-36
b(he)359 b(Gleic)-36 b(h)g(ung)359 b Fl(\()p Fk(x)144
b Fj(\000)g Fl(7\))27175 49656 y Fi(2)28070 50138 y Fl(=)368
b(3)144 b(+)g Fk(c)359 b Fm(mit)h(der)f(V)-108 b(ariablen)359
b Fk(x)369 b Fj(2)g Fe(R)921 52130 y Fm(und)432 b(dem)i(P)-36
b(arameter)433 b Fk(c)369 b Fj(2)f Fe(R)p Fm(.)921 54675
y(Gib)487 b(den)g(W)-108 b(ert)487 b(des)g(P)-36 b(arameters)487
b Fk(c)h Fm(so)g(an,)f(dass)h(diese)f(quadratisc)-36
b(he)488 b(Gleic)-36 b(h)g(ung)487 b(in)g Fe(R)921 56667
y Fm(genau)433 b(eine)h(L\366sung)f(hat!)921 59212 y
Fk(c)369 b Fl(=)p 1 0 0 TeXcolorrgb 433 w Fm(-3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 50138
a Fg(___/1)p 1 0 0 TeXcolorrgb 47990 52130 a Ff(A)-31
b(G)369 b(2.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 62688 V 0 TeXcolorgray 24746 81281
a Fm(7)p 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fn(A)-60 b(G)851 b(2.3)f(-)h(14)f(L\366sung)f
(einer)g(quadratisc)-60 b(hen)848 b(Gleic)-60 b(h)g(ung)850
b(-)g(L)-179 b(T)850 b(-)-2331 4515 y(Matura)717 b(NT)h(1)f(16/17)p
0 TeXcolorgray -1391 7823 a Fm(14.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)433 b(ist)h(eine)f(quadratisc)-36 b(he)434
b(Gleic)-36 b(h)g(ung)432 b Fk(x)25140 7341 y Fi(2)25962
7823 y Fl(+)294 b Fk(p)h Fj(\001)h Fk(x)f Fj(\000)g Fl(3)369
b(=)g(0)434 b Fm(mit)g Fk(p)368 b Fj(2)h Fe(R)p Fm(.)921
10368 y(Erg\344nze)358 b(die)h(T)-108 b(extl\374c)-36
b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36 b(h)357
b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36 b(h)g(tigen)921
12360 y(Satzteile)434 b(so,)g(dass)g(eine)f(mathematisc)-36
b(h)434 b(k)-36 b(orrekte)434 b(A)-36 b(ussage)434 b(en)-36
b(tsteh)g(t!)921 15850 y(Diese)434 b(Gleic)-36 b(h)g(ung)433
b(hat)p 12986 15850 3150 45 v 16608 15802 a(1)16136 15850
y Fd(\015)p 17730 15850 V 3583 w Fm(,)h(w)-36 b(enn)p
25685 15850 V 29306 15802 a(2)28834 15850 y Fd(\015)p
30428 15850 V 3584 w Fm(gilt.)p 0 TeXcolorgray 0 TeXcolorgray
1239 17223 19922 45 v 1239 20307 45 3085 v 10874 19004
a(1)10402 19052 y Fd(\015)p 21115 20307 V 1239 20351
19922 45 v 1239 25406 45 5056 v 1947 22211 a Fm(unendlic)g(h)432
b(viele)j(reelle)f(L\366sun-)1947 24203 y(gen)p 18750
25406 V 19459 23211 a Fc(2)p 21115 25406 V 1239 25450
19922 45 v 1239 28710 45 3260 v 1947 27506 a Fm(genau)g(eine)f(reelle)h
(L\366sung)p 18750 28710 V 19459 27412 a Fc(2)p 21115
28710 V 1239 28754 19922 45 v 1239 32013 45 3260 v 1947
30810 a Fm(k)-36 b(eine)434 b(reelle)g(L\366sung)p 18750
32013 V 1 0 0 TeXcolorrgb 19459 30716 a Fc(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 21115 32013
V 1239 32057 19922 45 v 0 TeXcolorgray 0 TeXcolorgray
30427 17223 9635 45 v 30427 20307 45 3085 v 34919 19004
a Fm(2)34447 19052 y Fd(\015)p 40017 20307 V 30427 20351
9635 45 v 30427 24010 45 3660 v 31268 22037 a Fh(p)31742
21724 y Fa(2)p 31268 22297 935 45 v 31500 23065 a Fi(4)32631
22607 y Fl(+)295 b(3)369 b Fk(>)g Fl(0)p 37652 24010
45 3660 v 38361 22513 a Fc(2)p 40017 24010 V 30427 24054
9635 45 v 30427 27714 45 3660 v 31268 25740 a Fh(p)31742
25427 y Fa(2)p 31268 26001 935 45 v 31500 26769 a Fi(4)32631
26311 y Fl(+)295 b(3)369 b Fk(<)g Fl(0)p 37652 27714
45 3660 v 1 0 0 TeXcolorrgb 38361 26216 a Fc(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 40017 27714
V 30427 27758 9635 45 v 30427 31417 45 3660 v 31268 29443
a Fh(p)31742 29131 y Fa(2)p 31268 29704 935 45 v 31500
30472 a Fi(4)32631 30014 y Fl(+)295 b(3)369 b Fk(>)g
Fl(1)p 37652 31417 45 3660 v 38361 29919 a Fc(2)p 40017
31417 V 30427 31461 9635 45 v 47992 7823 a Fg(___/1)p
1 0 0 TeXcolorrgb 47990 9815 a Ff(A)-31 b(G)369 b(2.3)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
36086 54804 45 v 0 TeXcolorgray 24746 81281 a Fm(8)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
