%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 2.2/AG 2.2 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:22:50 2017
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathSymbols8-Regular
%%+ LMMathItalic12-Regular LMMathExtension10-Regular
%%+ LMMathSymbols10-Regular LMRoman10-Regular TeX-feymr10
%%+ LMMathItalic8-Regular LMRoman8-Regular wasy10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 2.2/AG 2.2 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0822
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75B6B271326A2E7B313EB4598DD7FEA
4A5D95437CBA46D85A5EAD76FEA956126B3EEC337FF78D906699CB9CD7B4012C
474EB33D12DFABB3BF569214525DB9B2D4B34136FDF936F96FFC813FE16DA5F7
9B0F2B3110B1F8C90170E014FE8F31A5FD35CB74EF0FA13C6DA74D7264618562
DABD7DB8E7F480D0521581902848649AD3EBE39E618667C59EA499B7081A0844
B6DC10555D27819E6CAA1CE453A7A68EF1A3EB2178BBF9B9BEA9DEC679DC10D9
E3553DE260FFD590BEDC71CA9AD4AC12B09E86D933AF49B4CB901556E63BD639
1B3C3C3C80C46745E1CA7983B9E80168018E04A84AB47C854C73FC58A393974C
1AFF488EBB29B293905951355C4D4A4F65BF1A72956515750DED0B87A8D3282C
72C634347874775B6F29EB873134F6BCC2EBBD3703E9619F762D64128A18C957
22E6C0DA907A17868AACF3229C176FC26BFBE255AD62737D234986AFF04FF03C
1DB4D1F2D9F60CF2E4DC5DAF88EF3517A2D91CCCBBB8753F92B3E0CDA5D26523
B84CEE3A0429655F8F25C89E65074A52CC6047885F4105DD62F1FB8CC7A4CFE3
22EBEEE15E3395B062B933EB55FA589373CE26568F78981B480F688646A5C8C5
63B8FAAF19A1F6166685C3FDC27532C931AC8B86E81FB0223686074ED596FA6A
922B662575F23B53B7C6B245AFE90258E743F284E22E30D2B418CAE285AA38F9
FB436D39371781DF4FAAD1CFF3BFEAA81F5D11DD76BADDD8122A4AA44B9F863A
DF8127F1FC35DB9CD34EBC684818AB259FFC3C7CE34C9DAEE69D70D010C70540
3B359BDAA5B9ADD10F6F7F2C19136157C6D83B33313266F1BA8B9E065A0C831A
47D767D4558876E85ABB0B8396FEE0C3327CFFEE23D0D7C24466E5410DD289DF
78C335D2BE90B5C581D536596D97F1F463EDD0A9C0118790E5780C0AC27A05B6
4DB13A023A3E5225E0377ED38749AE1F7714AE5E1D649A3AFCBBF060F416C0B7
47EC5BA54AA743154084CCBBC2A47037DDA09D9601412F731039746C1224A29D
191D9E221C06A7EF3CAD09AD5ADE65A51B6A915CA708D66C3EA93A0BE63CDF0C
D9A4546C9325291D11D02F4C2284918795A5B6E6CAA4CDA0371D452F65EC9097
657F51E83FCC22A30D649B80CEFD9F6FDD51AD33D3DB732FF26650A90912822F
9E77D8AC13393AA1B04DEDDF6C37B2D1DE50258300B9BB455AA872810C7948B1
EC866883E78F23DC9DFF60701F4F7C66B61198F8066DD493031D1A5EF91231B4
470B5A034CBA00791EE592FB4DAB538C280A8047F6290E265C8A88331305E67B
EEEA9A03950593605886E125446E5CCB325BF943C3D7F32D49651F5744A27DCE
6004208003A95DA1371E2EE456CC692DF7B71EAEFA2ED09E82012484AF7649C3
FA87A3AE44D93FB7A0D1A7A08A419AFFF7DF7065992B084D567645EE4D2FC29A
888E5E51A42920248E4BF77A7876799B1FD856AAB0EA73DCCBF7FB5979EF5F01
2CAF413DABCB3290E29A0CEE18F02BF93ACF5E651F75F1C47F2699BD0DA86F7C
5E18E1895ACE4B125EF346F608ECCD4DCDCD47DD7717EBC78AE3DDEAB5333174
18A8E967F635ADA03D2EFF80D463A521EB069C2B6271FD736442AF38A52EB58A
59D7A62D97171B45D2A6AFFB7E617C9265B466295CF70CB228FB295850D653FC
3FA379FB4FA0AD9F83269A99D550366B880AF05F913C074EEAEBE390144ECA2E
ABD1ED2BB6C54FAA70C9BA6C6794E3AC06D503EE876C915252EA75E6FA113380
E4E2A0CEA310D96BDFD883642BDB55525358ADA70C5ED0923B060EA6EEA5B735
D0D62E41842C07B79C0E8DC2D36639668C6CD6A238A166CD71EB78B443C9348A
21381CA53438D5305C70A416567F5EEADBA2F6F78371D3C4FEA5ABADD0268BCA
CE4E2E123AC89F962A94719AAC882E5F4F1DB0BB2D0B68AB58A2971B86A2F1DD
C8503FA9B4C5CB1FDE6F0DEEDAA2FE214955FAA891C7AEC18EF33485035BD4C4
7A61421FC2EC1724DBCF6E42D06B418F7CC6D43D43344D0242F5647C4B7D10A1
2937EA59229885DE2FF1F9AAE227FC7C70799C8989072BEBB498D8C5E2CB3113
7B0D8072BCBC73EBA052FAA5311407ADDD4BDB10613A860B136B85BFC9439A37
411A466AF67E5372FE007CDC6DD09BA49569AB9FB5659AF715D308A82D99CCFD
E7136C97A6F58A17DE0C8DEE0F0311BDB0253716CA92256CBFC731566966025B
B984A519FCED4498E4A4CD61BDDA5F6528C1A803B3E1AC0B42621E9410044946
69BCBCDE44BE8806D9BDB3CCEC3EE3C80AD06EE105AA7D96542F152AA1ED7554
DEBB52B79035787CA842053C119ECEE2F49FEE58257EA6F673ED5F34F1C1D20B
609A152EDECFA2687687FD75DD0D1B7A8652B30AC3BEBBF1041466A7C86EB124
857D6C7BF995035406C64054DED8BC381236C47E40D5C3CCBFC37A265AF506B7
5CB8F498914E17C88A9317DB23DE81CD6B0FF6176C13E0534B375CDE3CA6DD71
4546D5CCE9171FE3C81517DB81CA5A9C55306AED6DC20E8725CCDBFDF1767ACE
6635BE8ADDF24026ED1D06839C1347D10F3A4FCE7A438E9129F4DB2867A9FC6F
3B6DA51F9188DD862CFDC0F7B123089A4524CC7CB3DA0D395ED4410A1AEB659C
973D52B28D6CA92DDED5BE33EEE8274EC370F6E70DBE10E747E1984A1C41D701
E6220B001C5FC668C84C08EB2BD4FE16949794F0A487F9B4CD388E45AFF917E5
CBA23CCBA7C46C157E3088F4D1C99603AEEE24C8E12F61C371D29A74A310287E
56CD446FA24B18FB162042A1661D656C27C4864FF69822883FD8A04666526EE0
B13BCC0C763CDD3627A3737DD41477A8BCF7C9E4ED438464845B950140ADD971
D94571113689C1751C1E337AF9C22A2B3DDB491260E067DD767367DAE1B686E9
C748C5C31523B52641B2281242D1E85397223612744C25432992925546D047F2
BB9EBA43ABBBA8202D430AC56793DD7163B09607810A06BA0464A9EF6D1A9940
2E8CE168702079C5036C5C41344CC7081E8B778B0AAFAE9A96E183960EC2B89D
57EEB4E8BF20057979A98A4A171FE140F776F1EE9F81371ACB9AF0819EEEEFF1
853D61C53A0EFEAA6C8CE3B066A7C6A2626635CD202D499073369925415B084F
754454ACBF44DCF4961F68DBB0644DB142FC399C46C1426F4FF72A744B8EED93
75BA41440D27C8AC115252D468CCF773F3D5F482480A69070C62EC32EC68C6C3
AA0F4A29839430F1998DBC99F4E035A4449586122746ED4917BC8493FA539B98
E93F5B9CC9E1F2E48203BB19E97A02E63F8B30EBEE9FCA1B8B7B45FBB5A3D203
A9F5E0CE1DD74F1C6081D61317763D0C226C1B003F4F90367DD0CFAA01DAB7A5
752742E65D77FEA9864843B27572914CA4189749A74DBB0EA1CFAFCDD853C30D
AE8F7DEFFFFA76B640FC05A08046169186702A68296C34F9D85D052DC85A5008
0668D9F648ACE56F31BE567026596AC1DDC11E23572F8A2F5CAB5CA87E7A6693
1F8C27992A0CBC0E82213C70F8FAB28C4E998ABFC56EB3670631EC013F696F06
BBA6E69C74E351C19D61778A0C26187408EA2A22AA7C602BE0B0A43D9D5C6F50
C479A81EDA7EB59197AD64F2E723E14E152D46F20EB109482768DB89F9D80B15
A0764CB951D16524B621E0A4FA9D650CA87BFDBA7D2F9B0C79E4635A10CFB39E
E250AD0FE7AFA3E00B71FB9FF3F957634501ED2FAB2017C34B786183FAE20181
ECEBFD26A758579D770399E200761F62011E20C1121A5493374B3357EF1E884D
9AE0CA20D592749784164E51081B57847EB7A96CF69DC3B99D7E681A98A334B3
EBD99D8110257DD0B832CB4209074A589041EACAE6769B1E1BDD616AAA66BF5B
6754EE7CE90EE8C3B6EC620359A8B6BF01600E4A11FDBAA2689E99E8FA8D877E
D4864A177B0724F860C76601359426E7A7D188067BCDC4B53CF7EA2CCE9B98E1
386A4B21E08EE3469CB1623C5B26B49B21BD4DD5741495206082B647B69C9C0A
95A8E81B3DC5D54F473D67AA4E0B001530F5C1B8AEF5E26425A121D2D3EA73BA
B53FFD35C67AC9C3B91DF9A4D26971897589C1F0806C014F8B9B511C2B3420A7
A62D9F2561458A1ABAAA7CE8CAA45A9CF32034CD2106773B44BF8641403FE386
DFAC2247BE094A885352C70B1CECF3A803D037ACD19E72E02132283C34E1C1C2
771321F8DF446835CEB85520A70B252F935F7CDFB69A1F8A67E100DE4ED26442
237EE2121C14F116A1114838B333EF11ACB00673B7AB13AFD20D5219A7156212
A7B57DD9965B1658336AEFC575FAEE1B5EC42CDDC027C7AAC514A42B45AD641B
B166A82EFE254436F63898712D63BCE010820E28FAB0056987A9C8301084AE87
065001A8E03F79D063A005EBA683342B306C3691BF4510C724AB326DD8B68F8D
89E3A21E12FD05D033B7BB01DD0B9469C910B7A7DCBDEF0035946C6E3002646F
CD01738AACB9AD52BCD0D01E058DC7A4E23C0F133241F066096999887AD4D12D
DE20E8116EEC3497D2D84B19F68EBF7125FB02920466AD9D3E2059F46A636EEE
E6A62B6E1214CE593C8E6A44DA28605224EDE522641BB0C9DC62EE166334B991
9AD6E84C26DFE46FF64199038C006B74DD8D060CE5FE0B0EAAF85F92E22567DD
C967BF400AF513EDEDEBF50C61D9A387F5A1CA41DD1A493A88B3E8BDB15D32C5
B35103B8B35AF058F9C71DCA9348746900FE665375E9C805A494EFAA0254B867
5D83F5D851D392340AED402E9DFC0045FAEC9110B7F695DD49F678A39E12B39B
2397D00BB653C4EACE2D6BB43FEDB7C81DC72B42DD991040DF4E03CF60409902
439875EF9252089FEAD3867827760F7091469C50CF5A27A0AA6E874293E89DC1
292F3A57FD6F3A111AF44DABD4D5967C23313AD539AC493305C51E25A0D55888
AF8405815C5B5497FD0900A840A22B15E6DAC8C7C46F9E1EAE6A5E1AB2F9C2FB
E93E979D8C74B1ACB91AA68A8675D596ED91571E01CFA85CD8E67A35FD162D2D
B0FDDD53981D2EDA952854D4EA1322A1200FC37425534BEEE2188310DE7110A4
8839DED79BE381088BC7191A40BE595589B209749CD85963469855157489CA42
9749CFFE6D0ED4F0A5D956F69B4B2ECB5B720B5CEA5B78ED3B2DF39711F44C14
87A8A062B0E7D307423CF2852AD0574AC458EB60286FC8CBB7109522E57F5448
092DECCB9ECB3FBC2A06A959B629EF7444863CF361D2F7242677C023F1DEADA1
7285A073A8183732A4A9C3BCD2FB6401FE3A2B9773D93B4C930A1245F533F4D8
C0CF06C8BECE662221E1EB8A14C4AC6BE7C78897B8EFBDDA6CCEA95D0374813F
2DEFA6365ABB158E156B90C47D3F1CC44FC24152AFA50146C938B47C9A81DF3D
D92E5018D71033BC87D2299AA01C7D5507FAC1A256207D69AAEB2808D246E000
F747E1493900319D0180539C7C4D2DB88997FCF8347448BE6E53709C51019EB4
FED063631BBC5599030B8ED5DC485BB83444586FAE57AEB962FA8591023BBF63
07EAD2720BD9674E2AED09E56CC6D3BF9329D5236CC7811E1DA6A7A14025B683
9664B8ACB442DFCE57F35A5681980B77285AF53F0C37CE00142A9692805464D2
C4C8834BE9EC41F48EE50AF6797489236880AE3F3C82F0712F57138FD0BF4DD5
993987EDFB196606332A38B5F48C5EC53F4CEB73912C9B769C772FB4880C0EC8
0DEA4C4B3A668FDF5AB0BBB0D489F4EBED7726AEFF2C0E5D44FD29627094840F
72CFE4C7F584D303709EDF5068E879F2ACEE148D55098B00AD714B169DA93627
B568088CB2E68751997E96F9ED7A2E4DCC52B55ED92B262BDD8471D498B5988E
64D3F957588B2E07F07D84F8FB1587E4567B580C04CAE21D611BCB5B71705207
AF5D9EF01DEC661475905983E84F59B8F57165B37F41C142A79205CFD2B413DC
0BED36498AB32D6790E4D9ACB087055F956FA7DC5893341815D40B5BF0736BF1
523F30B485C21F8AC6718F554CA3351AC9D5C2D42B5DC972A1D6E1E1E77A8EB3
24726265816EDBA8EF142D2940FCF6BAF7CC0B027E211127BDA0F71F4DF0A717
D1E97BAADFC61D4F2D813D247827B40DC36A2CBA4A701C45942DB1C91B4790D5
6D2C38B8BF73E85DA1EF9EB934479F0419EF50019F3309C0ED73E498CD7FBCAC
60BA7227D5A1C4B1A2F58059EB1F91BF9908E7115E5ED381D39E07E0422F964D
88512672FDA487FC97405BE2A5326F2E6F6111C5CF93E4B01B4C39C37DE56BA2
662E21344E73C74148C1EE1F5ACA484AAE98AF60C2AEF608A1119AA13FB6FA40
C42F630A42C4B8309E79BEA25A9E2BE4D1A042E188EB198D37109089E1016DF8
FA12A8A16143D6FA33885C9B9DCBF9A611E34677614B1E7EDB0F8935947B3522
1BDF75B85C7C15DA448AD00C0CFC079A014DF985DD825122358D0FEC6EFFF366
C934ACA8C735019D6E645EA2B73C3C4CE1957EF7D59D40C8893628E46742615C
61E1FFA0ACDE9B6CA1B96417CF6F42243C234413F56EC5908D46DB91E8BCFAF4
506C6ADBAE868F880194C0BBEEFFFB52CFF48DC639DD9A89D4B210ADBC8CA4A2
5431549FB6A4ED42741F9996D7BB1EC714A2F30FCE7E6FFA1AC28B04BF3DAC8F
2DD4026EFD3B57466FF0C33301FB89443353F1F032FF5D7F7C97A02506798073
6DB81D421D3C8CF5D76D071D3748C32BF1C779E91314ACEE61D30AF8E103F301
AD9FF8FFCF4B8DD9CE727EBBBEE42C75EA7A1E22AAA8F03A4588EFBDF346148A
60B2EE49283186D67327CD487B978FD50D9BCA2508355C576FC7AB3C0B29796D
2BD1DE1D4B673B0D41B850D1C55B06B3B9CD4BDD4F35233B8E5A30A81849E456
D085F3907DBC3C2CEE2DC1118746EEA119D9804673924FC20C12DA32A8204CE2
2B0906EDEDFFC684F2CCE516A901673A41774ECFAE0BC6723E560B0FDAFB34E8
AD48A2E4BA5E649D9D6967AD053D7B484EF5E6955F9BBA365964A1216B11C66F
C7807A0CB53E4329544186F14A6519488060CE974FBDA4B3EF695BC512E973F4
736851AEBB3A3A4B2BE0F517E8BE682D617EE310A79C945126847769D6DFE822
CCDA7CF82CB2855CF7DFD25D8B7DEF7C80370B05A615D51A9DB64D82D53435C7
BAFD262DC7F7D015F4B8B6F93139EA35AB802943B5628BC95CEC4FBB62C5383C
2DC08DB367464FCC848329BCBE84245A4B5E96BA220B94F24D336A889395E771
CEC29602496D2F4CC300586460049ECA3DAD6839B597386E852EECBE1E315834
B81230D5822007395A5D78C698C7366C1C453FD7CC6E94C52309E5679AAAAC18
04C8AB2084CBBB299ED351CDCCF8CED3076CBB9E7F70CC4ACE14D54BD3389E38
DA769C57229BB8A735E82BA885886035E32F00C15325D93A4474131E70B6783F
A8DBA0D35DABEB8E162D2EA2ABCB6CCAB1EA6D2CFE3CE783D1708C7B09F9A92B
658455FB81B27E436BF0AE1EF7FD23C8AF7BC0ADE591EBEAC608D291B3DAF21F
61FC2EE6DF51A16B4969B5619E2B15FEDB0D9E5FC6F1CF4B28799093DD8F65BA
55CF0B996B1649EB4ECBA18F596C2A638DFA3A2A0E4088072A3C9E36431D9D38
5967828D60CC8C0C1792CEF900D2AB0171C4832FC0D633AF49B4CB901556E63B
D6391B3C3C3C80C467475A64059495BB77FF54F014CC293B27057DE8158DC15E
4702E4B2EE1E29A43806C04DB5DCA0F56AB93E3A62FE49DCAF28B2988B108419
10B4843922D37EE126411CD9B0A7AA48D9FF64C0A8959C2DDC8B5F4F725ED710
6CB5F78A0A7C58F795071033711947B65B0C07BB7FE129E62C326C560FF935F7
987487ECF74CFA1CC3A21E456DBE5A15FD85CF9289DF78EE12F3DEB4E33DCD96
7D167E9BF9D4320480F771183B302FF55667390AF2E314BC8E0FA0B5500EE02F
9B9B8774237EF1899A326BEAF8EDE7C91AB226BF18BD5558F69C9F18DB26F827
A88DB7FE3C55007FD399B8A04327DC057B08DB8F80AD718FE0C9DB9300804112
3483344E4BBE07BCB511971D924EC2D0DC87F32FAE262A45F1B3D83C153C9BA5
D98CC8FD4F4FCBB42AB18699EEE0CAF3C1BDD39D1C1AD55DAEBC24CFF24A4B8C
668D17B5DE1B8D5A413287D9E221BF6768D98EBB639E30DE5AEA07A6EC2C6585
47487FC2B6844308370B9C13B16A1777CCA3D56A827CA6E2FB8EBBA30BA2F91D
15944A84D2323AC844A204BD9197E14F5CB63D98FF4AEF68EDB4DCAF6F52EBA0
8FFC62384622982E88BFC0C209F3BDE45B9E7C914E0074C4F6D3A398A33A4BBB
B1A80EB0DA41EEA1A668FF1B7B51421F5E65A2A7FC13B78EDE21FFBFA6459AED
B6C7A96847EF66B919660191C510FC78363A5E89F1F6C668696A2F1286122C63
913DE4A0E9E7E42DAC8806F28F4191E7D48C94F67BFD060EE61BFA329EDE20E4
1F813357F2002FD7D3BC2795CA29E311AFECE51A8BEC4A742712F00B16A6798D
6760D9FEE55407C3C372441BBA4ECE8E15F552ABEA44EA8828FB7DC1DDE3C3C7
64DDE218B924E38BDF61B39EFDF0C501C59621439D79539ECE65CAAD81B406E0
401285D6645237F2DFCB947527D857FD477BA50486F6864CB7AB263AD0394222
4048C4B4FCB5EDB4621857E3D7C5274A91C1BA15C8DB81C34E62D5E268088D47
B520976CFC21F02925692DB1424B6E90786C303D590747608AF3CDD6A51B5610
7569C2CEA84B0A20C8CD27783C6CE8F4217C2A536AA09E9F1EA23BF95C4A3A89
32F7D47100FF8A7D4BDE1BC5D5F9E843D51141B789F15A6E67A8BA6CF7C24249
DA6D1CB8B8099660B2CDB5799972AB6ABCD46FD5E647C809AFAE524CD65D4404
D0323445D7B0D148E1843D354DED08220E4DE06BAFD7E5BDA769D1B7B1C02D5C
D155CA5711E89F94B5A63D96B1F47E96AE5F10E07D9A75E9F4AB1EFA1CFC42CE
221D0499E9B05E06CC365C5E9822E8CDA38979A9B632488C35752639E1A74D96
76E4E99291D57CB257C0260490AC60C0AC71C775FF45AFC56539492B0326EC7F
2BA3E5D66350AC0FBDF769E54B11A5DFF7770FCCD85F422BF5995D9097EB6150
0A872F31A131A36915D52E45FF52188FCA5ED5CC9D1A8CF9027A5F84AE69E009
AD9EA1A7CE89BCBA746C4D9789658488E28072CFE5DB009C0F464678859A0307
0758C38629FC34410FAF8DFE9E19D9B48709CBCAECB30FDF85C8D7EC43C53CFE
D2690FCE72F40947889ED65C9A6EF5A6CC38CA586464BE32B779E11299E7A4D9
E7D8D370CFC9EAA5658F702B1B540E09C79F2AE5A178E37F4FFE0300932030C4
7C0E2A0F69B68A357DDA4E9A4396479FD092AA676650FF0C8BE8043B7BC1D982
E7CAA79328DE04F0F7A33D4CD50CF50CEF7AA35548174F41D78903B40367915D
4EEBE9B48022704FD9FD5AC7065959E797BC0EA0A0C04F9BF6A3290C0F70D8D7
5D001C7B4D02B951D2AC0835AD03EEC01EC31FFEC4FD57B0891FBA2E75BD5D5D
17618A9ADDDD89BE8101CCA5E70934685EDDC8AB34F4C00FB81E38C0A432D82C
3A35416BE740A5410D67AFE52FC469CC030E6D9D7507E322CA3BED912006D4D6
0B9815FDD84D1055F1DC8B90A55077C7300F05F1B24073ED052F37A3183DB046
B7F6C1FD5174F5EC78D1B2379918C8034B08588C4B73C291338FE0EA5971F7D5
D6ADB1B3B6C392AFD8517B5714B5BCCBC707FA756BD71FF74D8B7E2347719C81
FDF729D1C66EB4EDA345525FD4FCBB4E5CB711DE81DD77B2F8790D4FA04FE263
E9D7F4313861B4D82AC088771F75EC9913D2BBB6905704CF35D7BF8C3CB2AFBE
30943D8E5A935A1CB7E6B2B198EB6F00A9B4C5CB1FDE6F08FC06F27174A5303B
534F3BBA4DD09492576A8AE7707A6EE67E4285B758500AC9FBEE678FB6BA1651
91DD7EF7C0D0B167D87DCBEA2E893E1D90E69E828F3C7E4B3D887C436EF0AC46
3759333B27DF0A49159707C99A752D387F23148EC1E6E2CB48355AABEA0D1067
FF0291CEBBD8F0B33C8EF8EE35119C43CD7FE068E1F016AADC734D465F1AA036
ADCC813FD66FDDFC026516FDA258B0E7B324063EF4F2C664871EB1A07B3A6946
D45571FC760DFF69A4885814CBD0A6EA1306BA16CFC5D47C6DE264B0935CC025
075B9DCC920A5FC0D6206DF1B2B7701C20E811C466B43EC76F0B831BEEBFC973
CFE32377259D400B4B53CECE877408B57AA4D8980E5892C1A2F0D275488BD6D3
6C72E34C50128DFE49F75A1FEA7FB038BD30EB7641081B0410578AE30297EAD2
323771F7914E461313032473DDE1FA7EC77B3FDBF561F7707C46753EB922F1FC
0A021C6DBE28CE20A9E7D22013BE81AA88E9D000D37BC695FC06786D0D9AF799
EE987D0C240CCD6046B4105E30246AF71F89F1FFF83FDB4A95D61ABACA8EE7F7
2E22676625D1C15185DE26BA4E0A86B4545DD3251C43B948E32B9361E6F02589
CE8192748B28520B4499C079D5A6DCF653451C60E412CA2AE3686F7DFA49F81B
A6B221FAB4FA62D772AACBF8AE866C0504DCAE2EA0AF63D45D80F3C7B78C8235
ACD6743E692C1E52E5FE51543C5E421C449B01ACC4DA8EF1641407D8477DF592
2A707E00F2E580F114842D70B0FBD115BE7EBCE816AB40D2ECDB17E15F2FC0A2
EC478A5E8B6E99DE9C6D140A175FB46282023C555D9C46AAD6903CAA69ABBDE2
0459E73BD516F4543A2768EB3C4A91948FCAE03F3DF3E6963455CFB22972CD64
2D2508BCC8524D89C39B10EE9B6B273645933425C0F3277F0872EFFCE44FC522
4F35829B3986C68827F3A7E5C449A0F3744E683F88050A9CC76AD73A11DD8736
3264F901C80F9ABDAD878915286731DE01010A7C89305D29328C5A9E08E4484F
46950FD8026C281C0A7FE832B121AEDEEA86B95B90559A5E2D64208061D6521E
51713336F64C86C8FDAD35CA3EA60BE1E28418837CFC7209F4A2C8FE8C837E22
2A744A617317C1A2DA959EE5B4C8D471608F6BE988058F4C5A79047AF8C75EEF
3919EB6C563901DDB25F63CD8CC50A4FC59C2F3F6FD9963174FF863D377318B0
337447EE38A02F76C2350AE180C2CE885D8154209ABFF386E03D9C1C9BA3F119
A8D3E1CA21561EF61633C6C76258048D5FE9D3C24F4C7136E69B3F433354A94E
86CA343E2368691757281F2FC35633487F2C0FC904DA84AD461AD0D85D554182
DCAF99902D2D66F92DA28B47F59B37173C41AA84CE0F9F23CEE493004F0FF6FD
69BDD8D9235ACCEB4E79BC37A36535F4C3ED8C840F18C166EBAEED6EAC75FD75
3B150D76FAA4EB347390DD083029D21A2C55D7B6A3523D21EFC5AD8E1B3DDE7D
3A3D4B0C70B9355E1549DDFA2C1693F085D63D1FFF71113ADE1A3119E073DB7D
EED7DC4A04968B69F792644FA8B7D19ED62AC8639359548F49F5DD637806C51D
4153C8D501C4CD925525081AA905C09F8160E70FD5AC55F22E65DDFD2395A029
F7CFAEC61194397D4F36743FDA257F5E52ADE498258156FB30BA45C49782D9B2
884339D885C1037412748E3893178EBCAE7F5E1C2AF64EDD2073883DC7FA8313
2026FC381D8D871D0D96566F0E4910D17122AF036242CD2F7BF079E4557AEA1F
9C18CF250FC519591574EEA6745F62F0715C865422128A163B6C6AE0D98CA762
20BD253E4F8EBA8FA68830E6BD9979FD51C83559412E0A8F956C6EE3D3022BAC
91E69FBD52FC3A58E650E869811726E41351E349B6167CA5058EE84D1258EFC3
F6086216347353760B35CDE282F10F4AB8020F1840772B7F1FA63FE456F6ECE4
D25E13A1FE5E1284DF66C11CA0F99279E81D9CE04C5C360D7677FEFC0BC3255F
01052F9002F00B43F697D889D0339D2FFBA5F17EF15B0741094C52F7909571CD
4F5B063685528C3842B0C5AEEFEADE049F2291FAA610FE8C4CCD57A7A8C9F507
1193E20BA413A2BEC0D54AB4B6D20E345CE6C281F4630A7BA2B58B0874ADBE88
0B8E044E4662EF0AF221544DE5DDC61B16BBC4C63057D7B7DE7FF432BBC34345
C13693EC4D94B81770B30242AD7D07C2EF599D28170AF9399BCF902283CB73F5
E1E9809CE9BEF643C2568A3365B3C1540A2DC0536B2E3741E7102381706FAF2C
F674AD2CF636B2190BDE4028A12064034A7290750EBC897F11987CE12AC4C9C9
D0A03AC28F0AB4D8CB29CD233EDE83A6C320A3336492E462A12F35E45673FB12
1E1AD75F20A8F4E8B293B3554E85513A94BE894217DECA2F18BF6FA92CFB8D52
AA144F6B96B585D142F943EC5C1B040C1139273FE878AEE9F3DCA6DAAB758BD7
FA7D29C266129C91A2A5804AB8E351F91924855405F02213933F1C51AF2CA7A3
9AE58473A6CFB6830C394E62423A0D22D51EF24DCBE949D3BEDE4D5E7C7227C7
6F79C4261DAC82AE92065F2FA5D2F5F4778B7E4FB07ECE69B6C047DEBE3E904F
F1F6CAB3323A710CF184E6783456BFC48FC51A1185D758C54FD5404E8C74F8C0
EE459510B9C7E3AB3E45300D17BDE9A59079A69EA69FBB406301E0DA4B2305E9
BA211FE10DB35F2B336DE3703B6892B61D3C3A1220861592B2C3EB381CFA3CE2
F571E3F3C9C616260C0CC2F30246CB9BDA7DAB0DA99529639EAC0FB9701025D5
5BD054E058D3E91BED1E3FAC7C61DA6E683693241EB0CBCB1EEAB6E9391172A9
ABA0DA832CD6120D4B91180003EC08809DB77EFF2D8B2787F7A6A10749DD2BC5
EF97A6A5012BF840FD697AB22A736B311E9FDAD71AC751B80C6D25673D893C00
A5CAC781C4F4C411F79B1D23A87ADA31D3A48C7190B7CDDDC9BADA8760AD44E3
1416EE4EA8C182C1D459885A26DE8C58ADE9F21BB47ED0B91E2B9F07C1D9511B
1C92B90C31BD32EEA61B1635C3E67283F73FFC302D910C079F442B33FCC33D67
A75F80431D059BF7D7804181BAA6773850F55A041447594422EEFFACCE6AF7CC
9768F726430BF669BD531EBD40F60C2966E53B67F590AD3EA1E5C759558C353E
220C1970E98DF57796C609FE7A9F107E993BC2D114FA43CE0B06A5B8FB130A39
36C4504264C9DD1512EA832CFF38AE62A7C42F405EBB4BE70A441D365D78764B
D1BAC318E2717E7BDA4097FCB8FCB635C4EFF4AEBC9645857AFC4009E803348B
D23C5B2FD805839AE005A2D13141E35806D8F53E8F34D70DF5C324DEB565421D
4A008B3ED3DE2EFAD93BC4967FF861E0FFDD170E32AF64FF352BAC31D36B071C
4B68DF8BA0FE38D3A019BF0B0683F68416E49F71D0563B201D364E29610F5162
3AF948EFBC5C66A86DA1267EFD0181C65C2F290D7483DA07D48BCF38067456BE
EE0F9BB5C87D20B5BE0C978E8B23C9D806CF810056FFB04FFF49FA1E0A7F252F
CB0B8008F669BD531EBD40F60C2966E53B67F590AD3EA1E5C6A6D1DEE26BADE0
A64FB79CF0E0225EA401DB454BCBEA13B0969A5E6E932885990E7EE6C9F7CCF0
EA8148750970F38E9ED1AF30488219EFD5FB94E8C012073C0C377DD3750BA2C3
40B265B989E10F811FFAADAB3C186FE1D5EFDC45179F7225B6871B570EBE05C9
D95D8F947BD7DDCD6F312E7BA4F23F9497EDE5276D2E75E43898FCEC26E2FB56
91ED61BE4D288EF4DAAB5311C545967F311D4C766E30AEEAD8CC05C552782512
386457BC43BBC3A1C5A71C6CD3EBCE191B0F1897F45E676D2D16E9493A282C04
16C372A531176DB59F10537A4717637CB959293010241DCF5DE1745E800BCA9F
DD7F16E43C168230EED11D88E0C284F01CD52E27B685371C875A6FE35B2A7ECB
1BDB3421056677D71FBF913829720B6BA3BFD44765F251AC675F0BCC13496C41
DD9CD116079B65CC2AD57E203F859A2DC0597E82C67732CA1D8C8F14F65C347E
47E8184F0C55550E89FF627653220F144C62A039A19FE0505B4C8BE27798576A
28A21ED866FA75CD39AD747A1FED8032C364998F74B32F2DC2604346B36438B9
4D02F565E815532EE90B7B3D7CAC53C8293DA32993CCB41A92BF13CFAC115252
D468CCF773F3D5F482480A69070C62EB07AE3D1A4EBD95ADCBF77272CB7548B3
6190D2CE0DAF44DB0D7CCFC2D97BC3D1F1C93A6EFF8788FEDE268E5E1DEEC878
5E73E610EEF47B530174834E8903227AB01617D17FB02704A83DE820062871A4
A78EBDA8476C8E42F4C7C7A8C01E4683D56C1003B2DA0CB9CAFBC9C801C35A79
A6FFD72FDB2C4444587BCD9FB3E7FFAA55C6F5BE216746C4EFED27ACEC65E4DC
E1A40919B6E3DF67A633ABF5040463B811487101CC4CFAB7DF857EF5780DD4D6
52A5E1B4841E4D3BEB50CC01A3F677E5CE63224718FB5738B043C9C519422001
1D87AA5F0083D58831A3BD98C5361B66226EA5E832444FCCE7159967558B4B95
D090CDFF8E001A877DD85F70B84D5618E5B911033EC03304518C35E55502546E
62683AA3563663FC85209DDA78F22714FB9DE80D3833DEEC7848D7C0B823B392
BB9B82D69AA1D690954DD77B0CC9B824007A79650A70B9355E1549DDFA2C1693
F085D63D1FFF71113B8E7114FF4CCA4DAB06CBFE577AB49D78602657410BEAC3
B89A81A375D899E5F8FA27100CAEB06F4081563B18DD8900DBBFEB56F3B9C5A5
2B60A36EDE79BF9451CBB78C86E51E437A784C051E021D36141E5F1B0E6F48F9
34FD3D1676C3926651F5B3F8666E369D50682A921BA0584EA7B324A31E114B11
AD245C3D14EBEA4A6D96765D6AE9A93E7D6EE63090EEC569D8FBEAF4E5CA52AF
81F8FF7173CA5E17824D6A9B57D1DF1CEC7712FA5E6E28EED828AAAED252C2CA
F15D3A748549B6F6A61F79CC9DA249FA343F036B5AE64868FC6AEED9AF95EC8F
2AEEFE4A91AD78AB4A5DD8C92695818BA4356E9666091CAEAC8D1A94CC5EFB3B
38138891E1078160934A07D13A3B9C6AE6DBD54CCA777CD3B07F91EDAC559A22
0F29084DD86CD8704D66AA605F5F0CE1B71D3CE9D446EE178BCCABFC1A8DC9A5
F2F0A23FCF10C02ED8BD1AF09AC4E8A0BD65C24238B77C65736CF4DE904FB5AE
36286FC74158421FBCC912FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04B
B01688839B0C980422DA618CBFC03A7AA614FAD29B25EADE9370F84E207DC9BE
C731AD6040FD9B804FA140EDBB028B70E194489B1FD064E515CD8EABBCD4488E
88242843FFEB446FE889E03A64359BC513D8C384449A753B1F986B3D714BFD49
F6DBF0306CED94DE945B5A67DB6869AFD9C6B8612064088FCC4B30D4DFB3EB1E
58EC9183F4B7B9107833EB41C864CA53EDD6880C3D75B079C2EA6F8A86C3D98C
ADF1E924E6C6725EDE1262199758B68530F81075FB9C13F2418FA6F805C3413C
81B051C4414E98260822E618B71F2FD585B9685A7A51091536FFA80EAD2211CC
B8909E9C8DEC28A6FA8042B461FB6C3A50DA35653238844F5D1F36E250DCCF75
A58E95F774F78E5780183125C43E7F0DD106694E2A18A232D38AA3EDCE09671C
951F04D6B0D0E599445910CC42F926DD71C9A02608843F19B70A1E36D8E39CD8
043BF8DC51096B86B861786DDE16DCA52D49E43890022B9245B023385A6B9F70
C8C457B2B4B6AD53D22C67800381C5E71D4CA126D9A5E6CCE65AFD00A134F3C3
57C1E7666BA9F121A12E2FED2FBB37DB087768EC44A893A76E2963BFC8E42229
7CA801E026300D15E588D5408211907F73B3562FBAB5A8019788ECB276143B70
119C6AF75A7B55FA993D254DA3CC53A0023563918536062337D2915453E121AE
D311B08F6BC261737012AAB970DBFD0E956CB2DC3B235BB50BFB85FF25992C81
E31E226BD2190D5EC592E7F48CB331B971E3B6080AEDB45B1AD95543D38398D5
F66A9DF2917F9F373AA2297896E42772AE31807F25CA184C60874656600C7581
CF306E4B796D7EB8BA80AB7A471BB817133799E5AF19B25596A888D753090893
07D8B4BDC7CBB362ED6571E7BE314685A1B6CAC5C05804D67B63178165101C27
F5EBCCF59911E33447DD5FBE255870CD61C8CF7AA8DE567D174EC90945404C5C
42FEFAAF8A22C28319F79216C6D454A864898EE9F831F856AC962A19C387672A
4D101E1BFB07CFF9F577580CB22734F16F145D933BD426559E2E0419506D9E40
6F23FD33710FAA59328B3659F559A5E547451191D88E3367B22AF1FA7FC1DFB1
99C117A4B48B3B60A98EA819BCA66D5B5E79997CFDEBAC31E26DAB725237AAF4
87936405544401A876A328D58784A92C4BCD75A6E7F80E84757D73B5B38D6ED2
FDB24C6EAAE0DB49F4B1C4F1C38029CF10B17A94559A898DC36BEF9C32BF4B4A
49F755B02FEC8C5060353DAD6839B597386E852EECBE1E315834B8173E1E9303
5C07283661D1CDFBC34C588C960D438F2354EC34DB8CBD26D38BCBF23B4CC377
A5BCFC19948EF5E39287CD0D12BB1878198F8AD9741387FAD81CBF4B916DE4ED
6ED1704A37090340AAD36FEDC22F60DDCFA34384A37D37135CFFBC2EDBF29E39
BEEC15CA9DE1721D4E6B854AFF69DD34A0A93BE91F9745A63AFEC3516B02EEC2
2B7893D9BAB1BB97CFD909531C68EEFE20CD2B55EFCF2446899175D189B06D74
3A93B49963136BB32D1B6B20CCDAC2B474E1C4AE3F7E57DD7A49C196B9D8755E
D03259BD7124373543A2C18439DB2227247B30A41C72B880D4F0CB6A8B9DEBA5
BE370090A641FC06A1499A5C7EDC95A4CEAB6B77A4F4A47CB6269D49966E24FE
51C7D95CC5CC0B29D318260FBC314986223F9EC4DB5B0EF2EF5CA77C91533814
1E9AB69F495A99B90D08BB5BB166C8B27DBD484526D2DBA06CB803B0E54FB18E
1D3B530E8F7410BE4F48600A144502EC6C0E97C248374359C89C36A10525E740
1ED978AD4C9E1AEC73F39A94EF9F26DBD3FAEC17F970A05A27FFB38DD7CB03F9
DD099E6596290A1E7D5C716E15A3F345F395F32CED2CB15B87902E04E1921FF0
79C79EC2E13B44602369AB74EF77341BF5205537215753B3A955FFBE9EBF4BDA
C587E59837487288B55FC06DAE4E133DC1A8FCCF41B71CF582343250BA953453
AB217D4F770A1E34F0B0D3E761E0A154DDA036BA52BD5D98D70EB58740DCC4BA
984C3010A88692D4F22EFC306A2CBF294FE3CE1EF37AA659B04631F2482F244C
74A197B143A962C6AF4BF5E2E6B7FA20F1781BA4CD3A2F985E4D91FD7DFC6712
CE7D2CACE19A749B192F87B72AC87E7A332FFA3709DCFECE9164496E9DEF7DCC
79E6B2C34C0BDE59F506812770372AEA533706FB1C83E14DFB03A77877AC3BFB
5ED0BBBBF6414EE5858A463D1D1546B3EA2B0BE0D9707B7DCB885D6B04DF891F
C807DDC7F0A3B7C78496338CC250F9AAE45862D763AEB0594FBD382E15CE64DB
734558A0B4956554FEC18293C59D67858003E36D5194EC9D21C4CE14300E0582
551D09E5F84F913DA16127D7F75790571F65D0A1684C94BC96A0F39C297F187E
8DCE5A41816ECDDF97DC2C8DCF5C8BCCCC03EA0E79A825421169F7A21B75F349
87BA586C6FF368ABDC475A620329D96C037786FDA53FCACCB9944666479515F5
C7B524358EAC006A594AFCB839778FD0925E2DAABE731AEB80B60197CC9E7A0A
D30AA6A43A8CE611B7AEBE74EF5ACAAC2A5C44EBE7ADE6DBA1F61E78E7CBE45E
C7002DC215762E93B8E8C5AA90FED3C4199CA2E23EC4C1B7563065AE247D4C32
6542E5D65E23EE37E497C4CE632EEC24FE0D1565B1A11ED423ED6FDA5789B264
B23EC9E61310033446DE54F873001FD2BEDA0F0C7051CB61F498F2BEE911909F
0CD83EA85B72444E7A879A8A45DA6017267198AF7CBD040AFE76C99D3F2D49B6
9E4DE0A3A861D1EC69EB786F9F7BB862DE9557DBBABF3A9BDFD6C700DCDD7442
F0C54E24B71C82212361760FA0A3A619BAF5F3FA4CA68DD1F7B87C4426210A65
E4E64ADA9DB1DDD5342B4E3BC771C29C5837FFFBAD42F40083C2E412EE5E6BF3
66A66234B04B0310308C22902DAE8CD6EE1B33BBF5F5438B120CCE1C66F54898
90731D895BC4215406A875ECFC07317E68EF2C3F555A3B98ED30070CE54B0FF3
40006DB115079B64B9C7888D2D783D99140C43040D8CD9165F643E676A125CAE
42E92DC32D807271357666762AE008F33BB3D8D3959AF1F3B2DB5A361C07E06C
4962448D02080B4FE69807BC5F37C37F75307C68061FE700D03EBA66C3DB5DEB
D271270A478AED9640392137548DA0CAE221FF8AD3D0959B08F66B8931D93180
F66A13E86FA2BC3A06F2A4771CF854FE240328C4A2F37B9C73FA6D0E2E9DEC7B
D65B80885F9C3574339A61253C3234BF4B8B1FCA2130E99F0D8F7F571155B086
E3922DE513B2D00E65C7E233BF57DEA5FD7A0EEC6074F1B7334E238D9F298DCB
340420EAD844C7E336A2E47224D29972E84786748433D03140C8520D7891FA55
D331755876F649E4B175F6DDB7E68AF105D2AF9B22A4875ACB9DE099EF4FE088
9D944C34C57BAA186858CAFA75BA7DFD613802C1AD6FA80F5E8199D0EEB9742E
B0F6BE1DA71827BC04AEB21F7090D84811C6686F56856D62B94E57DB6C8E2204
B06D6C40DDAC291B0C4B29733DCFFCA15AC3CC55BBF9B6CEA220C4B11F89A33F
AA0EBEC92FEB04C3A6A0FE09FAD6E6B1A2C0601C57F5B7B1717C456ED996C6B9
DE9E10A387013F420403409EFA81F6B5E80114385D6B52E2CF80C95F0BC5C7A5
9B86DDE788CF4544D70446CFD36D3A6D170746BD0A86AACFEC7C2D4CCFF39FAC
7EB56BE27D3662EBABB728E5EA5A88096175F2F9D4AD0E3F3F3A4356282D2C05
B69E55969AE74CD3A31D6E5204F3689191D34CD1DDE0E54E7D0AA3C8F86500AD
CB8C1E42A8910C7B7D3E046A6F68F5F70F441E5AD1D487917247805FBACC3F6D
1F980F1795301F225B536BCD65DCDDFD47AA3BD9BD6E5B01BEE566EFC53A6C0F
546A7E2FA8A48158192A163A5780E71276C60EAB7E25C124964778296D06CA3F
1BDE88C3656A7D9095905AE89E0904AC946EFC2DA21A2C8D0E5BBB31FA3647D2
B0AA7E01243B0C396418434D9F0B6F71FC815A42A6DF5A23909E98A97DD3D6B5
942A63B2BF9C697C5D32A76F096ECAAFC065535AB32B2BEA4DE9FCC4AC4032F5
5765C97633CB23DFF6429109D7C15DC6F453ABAD7378A8CA6091F5EA7C1EA649
164E98195A3E0DD6F6D4F4FC37AE95FA98E586D00E782A89ACF95301C4677DE1
8C43FAC3093100B9835B0D1EB4B6F3F4C62B4973BAB1985E2650F843FEB3FD3E
1D20E735806D5B10466AFA5462D276189F7DACE60B2EA02E66EB188DCAA375D6
039F7E33C33B3E6BBBC51039331DC4E3A266644E659F4CBCAC34142F4E33BA61
DA1E50699E9F98C0CFC424B7A487A48EA5B567B07AA8D634C702038C74F1EF0E
8D0E067E2A3D0BE8B2D378E5E3EAAD4EA0CAA84CBA89CC650B5F64E2C61EBD43
DACB4DB6017F17589D3C83DF54D3E49663A5CA73CA34C211E4A3E702644B67EC
BE26D5D5FD4F383F44FD0674FAA01201F6CA6BB7C3038236E4CFE4259868E26F
481E8D4965CE3DE7A8FA45ECD89CC4F37CE340AD3A923D8C7BCCBE3D2F962C25
14671FBE4044847062262A67530B2F73EEE1DE2A68B5B6105D8767592CC6C869
400F05E445FE8DA647EAFED062C59ED0A085601CA87C63177395EB94388654B9
1AF65067C3C4901A451292FF926171B0E25FC7EA594E01E0E7CEE1D3F284DF80
BEB86E63DED098A028B1DAF4450F5762B8ACF2D58FEA96584B0428E367EC94AC
69C92E942696B50AC2EBA9A7EE3F82F7477A180FF3D6F876D5E3064BB81E66F8
FC466006E9A148F39874A1488F1F0458409D442D286751F4BE860A2B46225D17
84698203C4F0EBA2C58BA431ED42C15DE5A8340318F907D7DB5591A708C83C63
D038CAC76A8D01486E55880DF02409AC7D972FB083250BE1BD84E30A1D039117
9FD995E5020FB2B56B488D0D628A1EF149B5DC15AEC0C2F352F81DBD13A92789
2557DF00AABA2F8E57345DF144731DD2332B0F7F5E84C46AF045D8F60DFBD4B1
B7E0041EF68AB5AF9B946FF936607C5B9878100F6F37AFB159DC12654EF3FA2D
2446A2E1FF662ED81565EF1E13AA97507A9841FE083B062CCDDB666C2B9881F2
49F56881B0FCA0E538AED8CCB91FB008F64F238B3398FBBD0D4765CAD178A6F9
3C5217BD25477113423B70CD3F5A5CEF3848B76BE67D51ABE9ABDF14ADB128BA
77A3F888F990BAD4D1810A9046288D9C33E403DC265A299C3D4F7F4116B07F16
25707CFFDEDD5CD67166CF19BFDB13F27E7FA18B6D6EE4E5D1A32026B5D6109B
F501513207D9C72D6CD3ACA35686FB366E3AD523DAF8C13CDD0260801639B302
4B7847E996039601F6AFCD6AD395373CB0F8C088F35F2CB696C5167910021202
6AE5BFD98CCC9F5ABFDB71AC67AB7696B479360490EC0B5608D336290176B3E0
B546698B6A12F524DC97030DF80255AC962A19C387672A4D101E1BFB07CFF9F5
77580D6654E34B9DAB4671298B2512B7B9A7095203545C01B66B695197A556E0
5CC460DA5FF8BAA066043F44D1AF37FB752DFF270E096FDD8292CA3859740F19
1992BADF5EC14EEF397E66B5A87C5E297B9D70710F1A72D8C33183D064806C33
974F0312ACD1605720B548189D085A7DE7EB3ACA856CC9FDB88C51B009070AFA
B115C5FCDD18611BC2858E8B13ABCDE7322323B3A2A02A0BF388E89B4B1DA459
EC1F94D869B259DD936CA24930E7085F7B9D4A931A52CE9D872CD46D534EAAFA
2CBC4627306C58257E9BD29F672BCD4D19F6D70059D309B72D0A48EC241A2D97
F1CB6B0C091A7A2F6B6EAC7A5B4D39DAA5C0E94FED9B20A5B4C20D441996D671
C582A6F5E57840EBD7706B507B169A266871978FFA3BFECE3465E9F091826733
6E1911A48AD0D72F5E8A10EE7679FBD1612A97ECE636E38A3106C65BD371F2E4
8C48712ED6CF7509792BD183F496F29DF1AC47CB3022D3751E6B7123FB71403E
154156959CF4C28FE80BD706FE0D5CD002D0612B6AE5D6AAEEDEE2635A6261D2
04B3F0A74072A491F62A09D70000B51A3A7328F6F57B13A373A9E0DDCE6E0CB2
0084673721880893A6BBD801CA0B0320DD3970FC1804D241E14CEE077FE6231E
317E3AF85EF0E05A754973811E8476FED0D97C6BD2E86767B769F8812A476452
F198421AC764F72D32EDB6A2042064C8ECD8521DCE96F73485BE76D00FD12DDB
C962AD844443159BC389C9D5F00D22937B4050DD4313E4E95EF702B6CAB223B2
08068E4E34C3D761FBD95ECBC414640C733DCB82B39EA37525A2F4CECA370AE3
64B05486B6A1E5378A10FB3CFE695C78588D933FB596832AA18D730A55B80EA2
24ABA4D376DA75C35FDE664A83A2078F2618C6D2AD6B30AB09391800020865F3
C5494FBA8B3BA18EA28AFB7387999BECED0CA2B21BA0C675FAA15E66FE378123
944C12592AA78C5303FF81D89FFDEA459395AEB1FD2A2313C4619C3924D3B184
3467F02786B0C20CD61091CA81D8B0118E50A9DFBBA040628F8FC7B19054CF49
17BC54655EBA7CAAA854782CB0A34288A49CA23BA885D1C34836249AEF8ADE9A
6865B9ACA692EB09DFB0B956B404C74657B72A77E339AB2D30826BB295C4BCCA
4F916835F5683F03CF7C7A4F89129B851BFAF13327FEC0B3B6A78C90C52C4162
8B8FC3A91D4351F88439C6FD7C7268EB45915895070514EB04FA7FD17D352B30
3F2518E05CFDC4DFA697683ECBD4C754359D2571426A9D9F41C2C3F1C6B7F475
D7C0E6DCFCF94415E6E5FCA3C6AD820A8ED4978E6E330DA55D36CC0AE236D848
BF0FCAB713EDBFE54E4BA5BA08543D84FB97B8A735E82BA885886035E32F00C1
5325D93A4470D6CEC673B6BB38C9AF59940CAB5680A26E061D2F6097E1F24083
6605EDAD3970BFDD1E7200FE6F7730D33F269C3281993F22458F76ED92628EF6
550CB6B7F6BBDAA6239930B988DD82FFD4612011CDDE53EE22DE1EFB9A8153AE
094F688025BA4F6EABB40CD8F32C222A02DF36EB0E3CBB36B38CE86196A88388
29AA72E7DAB35155314850B47E6A07D1FFE7A25DCE7AC6EEAAE6346518C73301
6908C686802E49EDA9528B7D8F8724EADAB1EA2DE9F26A4189C4EE9C0C48A729
85276AE70079BAA0ABCC95D8C6C7C51A42EEB3AE4C6CD7E7B194162962680130
D78D316A430395489A5ED95EB8E3E305DB3F493C27EFAED16ED25EF0CB5D10B4
D1CB3BD127B84D71670AFD502DF1B02F4C548E3C0112562503832AB107A179CB
30F3FDE24665CDF685AE08E368090C56CC9F59ED573A530FEAD470960521A0F8
5893CCA9C6D128B2FCE38477DD9E6262EEC4E33758D8990D8EE81BAE03AD70AF
745817CA28E8D95BEC3A446F706C62F540E3993BA57FC5A340C84FE6BBA81D17
C6F87FBB050C6304ED348A11503F3C9D96516FE8B7035647C141740881202D28
6AFCC07C9AA5892ACD87576AFFBD4C077811073FB7ED60C050B88F751D931115
8454899878B9D9B2BAC60C0EFAD2C3FBF05E60BBE75E9E0BB6B47C80B4555FE3
4A595C071A3AEC9EE2CFAD51447F0D660BF7CFF7EBC4A6A7A5E607ADAFE8D846
0FC48FB39C8126488FA258BA98FE0CB48CEC8A205638E2727D048378290A1807
3850169D11647ADF120FA59E478203E2CD1905166090BD81A7A6104DE2C960FC
8DD8350723042CB80FA217A89F4D2186D4AB9AEAA6C3C33ADEBB543EA93D2D21
D077C840335E8CBBD83005D8EBA6244D7FB96F3E09EB1562468428FBFE9653E8
0422F5B5B56F6D2EDDC1A7C76EF77C6E7D49BC39F0EB4B41A1A63D7A4813C0B7
46D62CE7EC7BF05AA1330149955E87E7CDFD02FED887BD571450A3A005F085C9
FBBC3165C34863C9ED6C46D85A5EAD76FEA95F530624E9602ED96C5227060C7C
B058DF3A612C3ACC7633F3B31609AC2AF79ABC77A6717A1AECF7A8190680364D
B40191A11501ED68DC615750C28D1FCF8B365CF7274890644046B293912B31CA
F9FDDDBE3FBC8272FF8275B209587F66DBDA32D5E8EAF654E12C2E333311F4DD
F1274C26E89E6BA8CDE849B5131E19307559490FD90164530AD6913F9101D522
DA03412A6C4C6B34EEA8369947170AF41CA70C6034C319BEB9D85084AA21B81A
F837AB4437DCE0C6B2F44FF369069917F3BB200B8F1EECD7E7499054695BCC2F
A76C09DC21A6FFE886214DF47B13C99B781442B0EBF2A9084634736A21128843
DF49C84B1A562D24B0253D61A9F5AB6BB0345592B42926CF2AC2C39BC2EFD6C3
CE7A4BE86E4A6713587A4A5E4093F98C751F993DE968A11E61AF16CE3C561BB8
21C5577F7ABE9CB433EFA43C454B12960451CEEB882BC04DAD2CAB995ADA5D24
7E6AA58C7B3A65D90C4598DE6DF2AA81DF1E70E561F8D9DF3E4AFB32361ACAB1
3BACD3E465D094B642AA00F5A3EC7103BDE77ADE41E32326604C59CA01612EDA
60907DA1869966AB23C9930A5861847008DB930762EB2AC36FC9583A048A83F6
8049C707E5FC1473E7DF9F79B4524411DE70346BA128368EC51D0F116AE19F25
B3EA9958F6F6FC76BC1B1FD42095FCD64BBA7209410D8D0B6C495901E11E5F26
14CEE534F79D061431A3BDF99A2394F2B5338FBCDEE56A1F9BE27CD71CDF37A9
45FDDD071A0D756B5C7604412DBCC1F6C1B64632B2FDBEC9FE7C7B0BD419C0EA
3D510268148135A883BF18DFB558ED898A4B67731DCA45170A2D8C8272237FE1
ED4B44EB22E96CC5D185F4864B3CBD0ACB36F6027A26FF421B7C784FD321E6E2
3B07BDF0C08EF4B725834C8844B15D6B19C84B411AFAE3A560333458DD227E68
E4FA64EB110B540C82CE4A83C0A4567FE859EBDFE76C6F359ED965A99750A337
D1FCB6E77FE5E754546F80A00EE37BB3A026D50C7A88DF5F480147D87DFEFE46
3F7CC90A8439DDCC075F1566878834A1E4AB49B80D2E1380568742D76A759A08
D6C227C3182E3AD32BB1121234B58DD4601187F13556C213E42934840ECE4123
BA815A5F32B956188C88BD1E7273E1A42F36C0C6E0FB68F94CE6EF26765CEE15
18EA3F8F5C9B1CA965B78641B435C57B1622701EC88E6252EE0010BC0D07FBAE
852C0E40A45497E7379CEF4E1179660F9ADFDC046B9F7C8C30323C771A4D0944
45955899DEC98013B1859C373054F3C9BFC0ABCC6C80A38B22DA623C9FFBDD1F
916DCBBEFBCA48B9D0A4064D3233150E265FBDF3BC254C83F4DCA56A2109AF58
EEC2216280187059B0BB02205C95B68BE31E790925D5149CA8007917ADC79389
68F07E16F5F94B4751047CE99D8C7D7FEF50B56093A078A201D76D7BE5F0BC94
F3E79FE5ACA089D4AE6C2C07422977E67A03EB08996F19C9541CE2EC94D8F614
CF1A13C8148E32511F945E11722732C2C880D735AB78F2C4841C34EB4D474943
A9B17A684350503AF8D290AD001176CE190FCEB0FA31F280E7E1EB0547B0F360
EB06F4187856FA7F4390F271709F017A0C728B4350413DCC9F2C1111A14CCE79
27E2AF21EFF9ADF465EDE13232A0AD323D330405D2359C270151A55191E82D25
DD27D0811958B1D70FFEC3788E83AC1B0E79154215D1E4FA7D91D2D5E3D756CF
0893685216141C827014D89F8C6558622D673C21C94E286D02F1D98ED9E2C921
1C4020388066C702777E026147E409252B78A0E49DF280E39A21C1E3AB378777
5C677BC4B6D17D206F7034D00AE8374B0F91B42213C8A199874E584ADEF939C5
FEB4BBC46D62B82B0C0CCADB597E64AC83AE8EAB8ADA0867F44733AB17DDAC0B
518911F430FCA9E1B5CEC2C1AEC79E41863F51BA25FDC441AF1D7D28B8BE3B7E
E92A80E9E9568E9578593DB548A47F93F0318F25373F734E7EBD519179662A17
691FABAFFC79D24D56627B9A8F49219BF35B5088C60561CEB2DD70B18DD00483
18DFB88ED9AAC98BAEC6F832AE48B457567048DAD42CB920575410FB9A5BA0F8
DF5287108194D7A49450C22020A80F3DAB47E11A056A350E57D4D96AB1C53784
E7B0EF4AB31F17572BC0E903EABD045B392C008974522EED3B22B39D30C27BF0
C7FF4FF6CD13ADE48814E228A9AA3C4ACF234BFB88A1A59640BDD574FCB07126
F84E5CC542
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3695D634CA0684474DF6319B365E4A64C90F206C9482
B87592ABCED68E71CF21347EC1299AD5C3E089B07B4D82789221081D1C75F39C
BF89BE5BA6C53DBF61FB3614B78F4A8FCD6AA69212F7C45D50561C28368FC5C8
7A4507A5A16BD33271BB572126735E72BE44078D1F71342A97678A63DBD2B69B
E0D1124BDF8EFE3FF6FF5A943CE835E6FE57C59ED52DF91DF9A97F17108D4EA3
AADA25B85BFD07F9BCA9D7C412F535755FFA6B31BCE8F6DAFDE2CD6CAD4FFFB6
9A018EAF4E1ADEC4489276D46A89226F820B309E311279955EBEA24DADEF30D4
B53885899BDAA0254B708B440525163FD5EC1B97E073026515F10BE924CF9FA5
9FE0FA8765619363B21655F6F293D14230591A731D24C72D595CBA1C1DA945C9
A23B5CB2D2456970CFE1D8A1FE004BE8A0E7FCA182860C639094E35D8E97E518
127E38AA43238FC881601B9EECD1EFE20D2491364B2A8F5727B511DF9C8D83F3
67CE2893F206DEF275133D4584E84B4399D4C62D85341BFE01AD71BBDC6A1D6F
EEE84A26446987CEA1944FB899E6942372E5F49DDD9E098B32B2A8E9E04C0A97
C658B4A4C711E7A6FF44D11082A43019E03AE944A050F9147A11E83E6F5BA38E
7177FDE69C69B186FF6ECB8A11C4CA36878AABD1EED1238DB190C9F462F86AB2
5BBC5AC42C6E10ECEB2F36E177EEE6ECE2D05BB28598351ADB26134F4D49A093
F258C601FE9F7D600E9DB38A5498F03E5B09A1679EF5888AE70B27F2D87BBEFB
7B54660B67374954612A3321347ABEC4B2ABE5B9C3FAD671EEB94CC075B8A2E3
F9297B881E61392025E558F8A317C77C353766F6DF0DDD51E8461DD0FFC1BCCF
7A55E6396B67E66E4F41A4CA7F462D4E5514003C8272D72527B469C3DA4CDFC3
F465F9DE40CA0766DC1A23B7861A8F9DAAE5A85CA389557EF5B23DA21C70F702
3F52371542370E0C6EFDF1FD3C00783B8F76E5229971E754C4152D77D0087FFA
6A1CE2DAA6C3B6DC8B9C013E577A7ABA3926D6EBA92B2D155D0F59C6C9A83012
19905E4EC44F6D4D173622B715BED3B7C35D4820F624A89A7B8226D42E834F92
FD69A4C846E061A0F205B1288D9810DC8CCF8DC725F0FFEBC92C18197CDCA6A8
44A9949C17A902F35725B415983FE406893E3A239728B13377426DF78CF38FF2
BEA8EFDD41408C3403D78F8ACC16D78C01E64BDBA1404288E6904EDBEBC4DDA7
8DDF48FDD2F95E670488EA8EA14AE10B772A37A47CECC1FDF76F680364068EB1
44999CA73CED0BE3E7CE1164E0EFB15AD30399CB79D57CB39BD57CD2B20497CF
9CEC7F52CB0F78C53DEBE6F2A55BDA6D80EC87697CDACFF9595A46AD4881C814
CC9F958705EFA8BB779B3B46AF69DEDF4D4E063E73F98EA1AA33871DAC284FA1
CB667C3D39C11F66EE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: TeX-feymr10
%!PS-AdobeFont-1.0: TeX-feymr10 001.001
%%Title: TeX-feymr10
%%CreationDate: Sat Jan 5 18:49:54 2002
%%Creator: Thomas Schröder
%%DocumentSuppliedResources: font TeX-feymr10
% converted after April 2001
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /TeX-feymr10 def
/FontBBox [-178 -195 823 877 ]readonly def
/PaintType 0 def
/FontInfo 12 dict dup begin
/version (001.001) readonly def
/Notice (converted after April 2001) readonly def
/FullName (TeX feymr10 Regular) readonly def
/FamilyName (TeX feymr10) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3166449D69AB0542CB99558019EE
97CFE9FA87FAC14B55E860B5663A3D528CD3784FC9647A2EB72CF1AF4E31964A
3073722CB69FA5370CC5D9CDBF105662CA6188C1B3BFA7658F71EA5765A0D152
E60FD5E1DE3B99CE70C03D8CB4F775B5B17CE9573F5046E61444C0DAFD894CFE
E17604820BBE5A8FA11A10565933C0A8320DC5D116C780706E315C54E72426DD
AF1E6786D883AD182ED327CBB03C39C1A2602471C39296B7681215EC4F0E0E0B
264FBAD453DD3B112065828DC04E265255F9FB51F5EEC233C6A752ECA0246E0A
A2BA69049BBF94E6C8F510D29A7735AE4D122DCCA7B22929270D51C3F1E68174
E38AC54D6418690C765264C7897AD12A84B2C5269A6BFBABF05C20A37C94D927
81FD24D7817897529ACEDD9B062949D02FB9B0E1B2D0BF765675BA16EBFC1C7C
DC437BEE4D9FAC437C6B9E5B0C00111499A90E1BD29C52263829FFEF1946619B
1C81623A436D2FBD670D126855C400F38CE0C88122C60EA0D331AA9636B27218
0CC9B0EDE940FFB5EBCF83EDB330F8E83C7166452669E04F2E95A7718ADBDA8F
F99C2DC815F7ED17655111692621430D077DE661F297A8B6A33FECC10B3892A2
4F8E139F3E446CC7D7F5D64E4DBEFDAD72AECAE4D64289A3E2BE0212CF4A91BF
04F60B14E7522795440054CCBC40C49886656B6918198778A498EDBE40AF4536
7F96E77E40A9D65B1D5447D2596B382447AB5549A11BD5B765F9133E1C5C3071
32075009D2AC8147BC53B4C07B14D548E0F914E600CBF320E1639435733D7563
0053CC74AE3E7F5B9741E8CCB3DAFC411B5F846FC583B7771A7088B1C9B9613B
86FBCA1EE9E8263406C1894EE246BE87CDCAD2BA7ACB7030E45B0866062055D9
EBF7F562FAB6190196A7B8AA1B61F407B2BE0F537129E27376C8DDC7C6416358
384B2A676AB3228144586258F2B82A5BD9AE9E5442462DA626088BAB0C29E8A8
0EC75BF6E5E897761B5D095E2A8EDBF2CA742F3BF155B4DF28110FB8B7FB9A6E
9229F9D0B47376BE7AE5CE6A6AD32F50B62023CB32E8E0CBCDE2110AD8251854
5F8934CDC91E522248E019A6DCA06A0C2D005D541C6ADFF72812F474050C709A
5ED08B5F83DA1FD76037AFF77515188E13073B30F9A49A970613659071E0A130
5A4DD21C42ADFC1DF8CEE802CFAB2A75B7460E9F46DAA8CE31D5F287D3163B98
5966C073653074E89114B1B8A097A43E58DC5E49AC1F70F04A922FF9955F9FA7
20A6FCB10A2670BB3F44D959FC897BA487147A0FFDDFD368EB1A41F4CCCB619B
A362730B373EAC754EF5CE2692576DE100E10402670F41FD38F11A1BB43B7F42
B4BD7BB5F4322C4A9D04BBE445358F4B59B1A5C85FAE03B06C950485E5B304E8
BDA4BB926C21E17B3EC2D4DBC9353CFB90DBC6976B566C310DC801A28907CED3
2126B72E26578DF77022D969D09E111BC1C489E88E7B0315E926B0376B085BB5
3CEAF925AEF208D454C49A6B239924FA18001BD1A7D3EA4E7904830A6A948A79
F50CA56EA772D92627A8380A37F3C30845647AB612D5F6B5CB916996A0EE6697
BC62B6266F4314BAAD796EF51EB965F7C30C001F16442E0CB7A6984B78AEFC46
7D6938EFB347E3287600228311BA24326714E77F1932B80334F933C2926274FA
21BAAD0605BBC9A01BDAD6D5ABB885A4E651B8DFAB60487319C1C386CE6A17CF
CE6F1E639526FE52759F1C88A2B52EED4B93C0AEFE101EEEE8C108F389F9D1E3
205904304DCD3F06198594F313F1BFF10CE7F410ABFE3BD5F47CC3D7DB91E197
AE2EFFB9015482D6C79EE33D31EBC91E7797ADADAB7F682F72DFB7B0B0B6AE27
CDA9C0538E1246167FDF86008881E9F917291B498DFD93885C05A1AC6F3A7C11
57128C3D6CA767C80C7AD866074879C24CC063341E85B910ABD13E4BBC7A48B1
53E24D05C43CAC6F3337ED734614EA91EBA620346F23693C7FAA9F488FEEF7DB
E525E547787CCBE1B9824B1CF0B92007A8884194388AE40560BE9D79CD4DE9CB
96359F98E85F2A49F75B7B66C6444DB0ADF62964CF1A47855F8C4688F95EE5A4
50C96A072FB8069A59B20CD2FC703F2F90D3AD1BAA56A93E3D2E2F33C6E2A7AD
258451B1411DD8DBF07CA0246640732F5ABE58B44AC29D9EACBB671334A141D5
FF7CB44C5D629EF4C3E479B76B6A11B47AE63003DE140FB162E88854291E52CD
218D3E70E007E24FEDE321E5814C501169EE40269A4130721A95CB23F48C32AE
DD7B0B4F6320A76DA8A605679B0863982D6B3D4903CD8184B2B829CE9FCBF77D
6CC854455B66AA88CA78910178F748BAD7A4F32521BA7CACB879CFC719BFE2BC
13CF49FDAEE217C53CE31DAB6FDCF81ECAA2E72A2CF15BD84D275BE55251F82D
C8A19F36545C0BDA65AE10E063F5E05A8DB056F7A41D4DB694C98E4246E3B38E
230D155F7ED10F13F00679BCDF5604F46E28FD15B81B55471B8262F8A2F72AF4
E5387E41E401274B350EEFA6C4F03A1E6E4A6B16E528088EA3C7E0299E38DF46
D345559937225879790AF29198B2FDEFE6FC99C66C69959F3FF98F67C07CE90D
F2993F8732E88A77355D4A186BBC8C299C85DB3CFE829BF9F22AA8D3BD63F0D9
CAC57A7CBE25193B289D8A9A614DA9202F69ABA8FFB96F4281592634A7FC4A21
456B69BF77848502657B7B934003418D2BC937720E67D4890E00A199636842D3
DB74B2F004A6E3F3EA6972D62C62E5D4F096AEB2F194E77B656822D9CFF41D2A
7C14F16D7F07E90306AC87B528175244B92D6C10024132A3A1FC2FE78F688904
3568D0BD312C635BF2C024B53B5624F8B17BEEEB424E619CBE804E24E6EE1BE7
3F159A72AB7ACE1C0347278BC542E4525E503DAB0127B4DB6D8538634CC60BB6
7851F14F0753BA3838ABD61E83ECC39C427E62AD4293F672F8E7C2A49B534F60
E877F23EF5EE0E849AEC5F5E12463F6F05D059854D701CE420D546867EE7E6C8
7CD2553F33682A0BF985671C6433700CA8FFB638E7C7BAE78BDFEFAD10DC5846
AFF08F08956041F2912B4D70FD34495C96D3F9B091293B9C738CF5C9563277EC
3C6863C4A69B09E4DDD525D77FD06C322DAE13FCD48A4EA7B1B6C8F0256FC16A
3B47A4BF0DA1C49EF53974B4BF01C9BF194CE7EEC2C3AFA9E4CECD8C4029CC6F
377E4269806EB0FB78AA812F1513C2CEFB8F50CD18615EBAC10976BD12CBC1CE
8CCAD0333D455C3ED1518FD7F80539AE63A5045D34B982ABB471ED8EB18B50D3
1A150C82182B6C31CC9B161A87361A6D96B63CF0D97A286090DA8CB72991B175
EF3D690C64D9CB5EDDFF5B00B7C179825A1794CA054B6F7A8CAF03DFD7E62F10
CE5BB34BB02E50AA4DD4FD704F147DE3DCEBD3B1DEBAF3483E01CA3076EB19A5
FA2A8815CD360568A9A05176CF4111CB27C54BC8B4B991853982BB7307283D8B
93E5A2D6DF853B6E17BEF7C06A182456EB73D4A1B77FD58A853B07B04ACE12EE
D04046A4E977A39963B144EAB63C7D27F2EE65F677B9892C999BC81B3BBDA70B
E7FFF8E673275F9B84D39E641BA990B9AD160BB73CC391B6C36A7C1D68438243
1606D2298D58EA3879D2CAE2D285011E229372F7FA98F55556F0C4007621168A
A3C1F9A9DE81DA70AB287ABC70C4BAE94321D94FAD2DC3754CA39F689C8221E1
6E7E57EA41F552EF612080D82122D5733CC48978F6BC62E40728DCB3134F4536
C33E222D0E79486EBF9A506F92CCE773BBDF3A764B3793E96393DB8EF1FF0FA1
F3801274B7B982FC53258A752D43261486A2A94B321D90C9393EECE5B3CBFAAB
D0BBA6E49ED462B20AFB384AC2D3E290BC8FE7805D5C0B0D37F04586BDC8C812
686C653A47B40A803819C86FB0C8EF10AA1344350972910363FC0E3DB49A5D75
BDBED15C823E1E870E2F0EFB93A856F3A63E28CB7ECBF17E444B271FD92157C5
8727745CE16AA9376735A8B02F2CB426BB91CCC365CEE49AE5C9938B08DB12B1
EEE55B954D3694FA0AEC0836883D86F6EA4E10ACAFB7CE5D16F858F6DFF1246F
B2135837B67DFE58003AF012885480947A19B0F90980366EC245AE6D8D33FD30
E080775680F701952B697FC8FC07A014B78DEC48017E46AD78EF6EE80BF81760
B2ADCBB63D91D25DCFC77F2B8867BC0092BD9DF8EDD0F7DEDF2458F1F938D05D
DD4C3A7D4B3008EE86F787EACD7C687B6BB09D362E814AFBC75209C457A19F37
C9780469DCD173C5E5BB7C88F4A8FF1E664AD95E1F5D005B4F15416A320366E4
41E5CE5C8A53B64D290AC210490EF404D08C7C93531FF8CFB841AFF5A0E5A8DE
1E25EB0D03018A76C701E737D941569CE252FF92E3C0A05798F47B75B501B03C
D92B56739CF0D76A13E06283CB4F55177E3D6B28C265954DE0EC80A4CDFD91AC
A2FEE87917A4C63BCBDB24928F99D4836A62D3793411FFAA4CC7B12C934350E8
0C241E5C83E1BF8BCE56FFB67F9C7970CD00D64E7CF92F0A9CB5E672852960AE
8959AE74D4DE18D69B095F9F83C2D98F5D6D14B13E76E4686B85A3B606479B6D
F3B52D950EBCFE01639F6B0D9C205C947D60F2F0540D0E8B1B78AF3C5376F94E
D5769B92FC21082A872ADC4BE261FE71F0EA2422B17EF9C0338F63F4D4BA4AC9
D6C76169A46B500885E2CFB8671C053163F186C242F539453A72E3CD4F416A30
6C7A154B28FD021A13A11C78D113E65FAE2A6602D55510502603AD648CA7C698
E61A5B8F3689308EF934594FC5EFFDB86BED8324C690350CB92005EA3EBBB9CF
83EF65EA37BB27D684B89F18AB93968DBB6D0BD835EDDBF6F9425AE707A9E732
7418E39DC60A6EB89299E14D62AEA38D7E1ED70829196DB28D4906BF73574AB4
5DCF1FD068BE2B5B597021EC43C0396D5F172A723556BD8937D6800A6CAA33F6
A061415D49DA0ECE5C1959D9AA8513D8E616BEF8C9411F93E9FBCB6D2637AEDB
B0E719D54E5840E6F71109A5BFB26839255C305080216C0FD2477BA7613C8198
8EB16ECFFBB6D745422204786A17705DABE8FC123005E476FECEBE1C3E240E66
9EC0C64922C42D88A87D2D9766DB3E6273110B2F9281D80F004D184E9484EF54
222058917A0DFF5AEDC9213979C8716488573FC308948F839BFADCA37353F9F9
C7FC6FF049F4DD9DBD476228E880E779C7122C3823385F85F86DA752C3E01A8F
8A103A854A8545E4109BE8AD304A60B54F124EF2A6AD3E5E7EBA6AE533E22954
261017699960A1E27D714C2E2D370FB1449ED84B4169EC1057AC8AE70B3962A8
2A16D2F5EC8818734A52C2211FFFB785AC27000B218464AAD820DCAAB31DBD3C
2F0ABE99FB90E8A188E9E95E3320B650E814FA72E425FC6D0B5E245330843CC3
DB6AB767C90E8EDD41E12FA1973E681A7180A3917CACA630FB0BB7A62FAAF292
EE1F836E10730B4797B72E335F6C291A3BFD7F71EE335C3A6233735DB2A379D7
4D1CC655A657023C0B72C819D778F70D9654BDF7C3DD44B733468029F6DBC37E
1D00A80D8D9E7DB37593FE4C2AF5E00949062085BDB51E9448A41DB88FC7401F
725593E1E2281E1F880F829778EEE4197E71F8E59420EAE7964C98BDA67D7224
51A7781696EE91A0E6138EEA37EEA66A29A778841BAED8A196FA2C9DC4DE9BD6
4915CDF114F441422F0FE6F6DFC899C05D171FC0E370C9D27025B9407AFBA04C
19CBF35CBA1E6328BEB3DC8BF3F27EADDDB063543BBE32195A9AB39C791A053B
9D6B918B1E101C98DA8A4EB26FB47BCACE2863C768381DF68C4C8033BB3BBEF5
E93514207A5AA561F78B3F9C70C691B40F4ED7449650276BAF866B77FC16D797
B91398B1797FC8A8CB148D5C234F59A7E4E6F661431598B68DBA780DC8B34A19
AF4EA912CB694B86D5C7672E57EC16F21F87944F7585ACC0847A31E2777D0068
69A9C658B4729A5A2DB08E093EDFF069067F02F93C4495F9F171AB52A1A5BF64
C71D97FA60A71E3E705E51531028D02B1AD3E8E032AC8E599DE4DA19227401AC
F79915BC3230D5D90FA77C29DB133FB7B4ED7B0D7BDD3B018BAB38126626BE19
57BA72362A12E23AB2C4F2C20CE67ADBB39FCC59111A7A0A61ABB82CE1711D0C
193F0D086B49494669F901CA6013B32E0160B72239DB3C2E229535BEF14DD08C
A8E603EF0B6A5D6FD9CE8EB6DEA304E959E394802B82E7C4BC31E75E1CF077A0
6F520EC408B4237E2C5D41DB0B4395D891BCFD008BDE2F5936C9B7D3D7F7F9D9
06FD7B552B784F7814AE16D8351899FC23B6772BB69B5BFB57D118FFFF07511E
8C6E994823E198A79376EF3E24C11B6FA1F6DEA71942741038EB332490625EED
2F92A7EAA26C64B36C180E45C35457FEEF8039855872511C30AE0BD536024FEF
2E0F40D53EB1845EF5EA9E10FD5C63E01D074E58590F0C8112BC26F1969F9C24
6A4027E715AA573228315FBE916274AE6D17F25A21DD9629263D6D83E1C5E6F0
D0A42464C558BDB4FDBF9201F57C808EDE384E12A8235EC30E90CCA8AA3C36CC
C09C6A6D74F9A30B50CF7D4ADDBFC902F6A006AACD90582B29ABAC673E1C6D67
3A70B27EEDD61AD0C422B387CE691F8ED807C137C5841779A540211331282F9C
2997E5A81A6BE710AEC12B347D9238B584F24C63DD4A34D620644424F315D15C
C710ED000B0D28DDB19A4D99AC1E0E5589B7A6F7B2C86F2F7FA4CB217F201436
991656F10224C5AA8341E6658ACFBCD76E73AFAB6E5B0FC14CB8AA60A1E845E7
5AAE0C73DD9F872EE3D28075C27156BB8D803A64E4126866360A54D16EFA11DB
13E7E52C0693982399545875D6ACAEA88BA0A3474783CCEF9A4B65EE64958091
8951AC0C438C2B0413761A253A43579B0B640FDD1497DE8C21A0856E475510E5
142E3842906AA80914CDE9402E4B37D2A6E53BD127D2D3AD5149AEB5ECD8CE0F
A7609D35FB71A5E542B436D5C7D71A4CB29EE71D11E0C2769C4FE6E728D24E56
A0169D3676D3B731B35E37C70B8015A53A9C15AF4F78D0FBDCE03FDD2C3D52C7
5D852346EA02BAE2FD29487245DE75FBAB597E741336005E4A549429A51271D6
5CBCFF634640DB0D056DD5EC6D5A7DB00E37F666CA703105ECCDBC670A47CDB7
48FE6D422825339A8CA5AAB0B1235F8D8BD2F5D6A3515FEFD32540521E20DA01
A0141AA1F8B223BC02156AE4E096FED912A6C33DF4E150052091700123102EAC
E6AE38599BA0A0CB94E1099475C28A540D3EBC4EEB382E906F6B4A1CE6940F16
77D474945B0DFDB54731F85B138577CCA34AD3BF8B7677378DCCF3999EEC8E5B
5BE10FE19D636B006E7D7290A3DDAE1DCFD312C2726B08676AC7B03A9E5BF580
BBD88C779EF23B655F9BBBC31F4D54BCD94E4D1FB85ED55AC4475DE0DF309494
49CF2BC0A9C60D7DE24DA0C0AB8F50953F4DCE4B2FF8E60DFF1EA75F4BAD4B11
3C735758AE622B81CEB5A8F845B2547C6A43812D4ECF9C9E042425176A20004C
2C4A815A38E237DA4ACD903D32B7F9844B2E42AA7F5A5008C4CFBB51F2A20C24
C4EA6D69F6CC5E79CC490EBDB8A9D4AF6103A6CE3906449DCD35B922EFBDE023
3D5ADD67F4F5BCF49D61F67FB313A8E2F92D29A0B15C6792D299B9510A5DFA30
56DF9000191FA35C2999FDD7132B3EB5E95020B032C8EE2BB4543DAAEA0DEC97
3133A99719D7ADBB2678384749B7E1ED994548266CF51E5DA1E7D78283F24197
0EB74E258585FACA9CC47BAFA7AE9E116FC4A042404FDEFC6D20C8510CDE6796
BF13356BC9A3EDF5DF353F6CB8D21EDF5EB9B50AD6BE2804F23B1727C373DC13
E4B7B7F5F1A0333C4BA7842F4E9F3D067DA11B64EC3D1EA2AFD82DAF0087AD2E
0876AFC12C5777A2743F938C01847747CC7525DE041402CBAA4C45F273A75DE8
528FD3BC80427F9E3AA1EAB57E9E2F625484D388DBA06AA511B556E660B7C58C
232E6191D34214218E9C35838F7532579EF7430063A099A176DA59B024B2CE56
FAD58E3E9AB280F49EFE8B13EB67D91B6BF3BBA8BD16CB5EE0B3FB9BEF37503A
F4114D06702D250FD78E921D8ABD0BA3647C711CB3FF3CB1EAB2DD7137A9CA46
4E545382727CD0F1D75102D7BEB5737B3D3009136C2DD9950F1DEC8859F21328
330224F695949BFE58241CABC4D378ED409FBA824D76C2EB94A55575E0B44B99
5F05EC9CCDC503CEA55FA4032192CEB9D7160B024084A468FCE4AB2F876A1B22
2FCE1702E00029F29A50C636A6C59226685F2B7F885CE26FF2D2836BD9C03367
13420C1A8BCFCB324EA9D26744B77B4BD9099611FC2209A53321B737E518950C
751B2F929CFD04EC824A2439E9BE1C56A3A02420C2B86C24BB936C7752DFE88B
A682B788BF0113BC92352E873AFFFC279F2F3ED949F3ECEED537F134E3C8A2C0
13BE80DE36288A86E93DB390E241AC83B926EAE86FFDF45E037CC3794DDFF403
DC64962FAF85B9714D399C221E36A633C0BB26EE127EDE93B54A6C34C1B1F322
7503847E9CA4622FF6CEB1E9828DABB65D66D658349E0404BD3E7871E3952C91
81DA87EC0F40B008BBE4253D7E8E7EF16C916674FCC41131B68BA2A9FDB59917
8206CB366282C90FC91B59C8A0FBBB26408CD0110EA1587A07E4FB09130E5B0B
852C429A88461C2C51F924B919B8C4F98BA8BF058EACE6ED42C208AAC866A1CC
DB9FBF4227F1CCD9FFAF49713AE4B85EC34FFD123CC49EA507D36DD69F0072CF
B01CCFDD0BDEB72A427A0485F0FEC84B315C854A341951CD338D8B4E7A77E3B7
41ADBA8C621DE2AEB91E65A0D3E1BDEBD508A0CB08F4C4E57D8481592C817520
4B6BCB5196CBA074
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81E
C655DFFD1BB283F3C5DEF1495FF97C798C213036AD02BB07FD42EC5932E79727
ACF464295E75CFC635036CF27FFC42DC2919CC167CA4C2E673040B7909AA26E8
123B3D9F176F6510B9526E94D4E38E62F8B9B96E2D2D51BDA2FB7C6992B79CD8
3E40292315B0EFE711C8FCB37968B8AE1BCADE6BD8A3BA1009B34137B90D924F
B2784C9E13F0795427324E80C175BC99140171AA2F40784356690DDB982F55FE
EFFCF946C6DADBC6A907C7DC28850415D9AFC1C8A868801B990CE2D26AE40CB3
4EE0281A60063AA71E48DB8A35E05C2BEA1ED5BEC68717E95B7597AD7CACDA2A
6A4E8808BDF0AFFBA31BE1697149D7BACECF4481DC61CEAB7476A2E00CD8EFF1
37E476FE5A098E607E25ED29F4BF3409309145BD0530C8A76E85F59EB0890ECB
A12DE954F33220ECCE5E9CC4B52E97089790D08FFEEA7D143DCC7C07BB2694CA
6709EE19C11515E6E967043F9162C39D9BEB2767B7B31EA068C594A63173F7F1
67F3D6FE97087D19F73EEE205A47785EF3C453E6F77A08AE9F93F4060DD19EF6
6DA5E780DCCA30F180F8DFB0CEC4602AD1201C63D91450E7B5F44AEF32087A03
0D933A941134E74040E6E7E797E18AF57941DDF7DE2072ADACCD3BF8D4CFF06C
5B946E21D0F5A799CD011CFFE4CF0F571B4377AD4768FBEBDFCF6B49F09839B9
35B1F7AB20DBC872DEDA90B79F113F5A4BE581DB49C5EB8C9033B8050C143424
1EDB333D1DCB862DC543CE420CC26EDF9639E4256570975B25C6C1F06CFDB2FD
9035344017BAA39283C14E3AE66A14DAFFE2CD87485598645C39B92C18AAD014
7814BF27C8FA6DCA0BBA0FFA552B9FFDD54BDD8C7F84484031FFFC0AE8932A64
53D2632D9379F30231361D03BF91F74904C7106B6F8EB6ABBB29858F65E937CD
E31D67C847719779DE0B34CECE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B9
E6512B667AC78A09A780813B1FF02AA967B12AAFAA0AF1B3DA27604A975C2DB6
FC1854457C67C54DC08DB989CA3267B2BE5B8178E6B7889A33771F86276E6DA4
F83033522871198AB3E954EDD88B5059BFBB42AFFC2738CA09B628CC646123FC
9C2BB8B9149CBADE7A7953FB4FBAEB6078B410935DF7D6D5064271899313C4E5
0DA12BF2F08521A17641A2F5541EC8419514939892C0E353FB1785CF9CB67C88
AF752C2A0DAB509A424DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF56E2000
AE4AA5B339C187F52630B52309834F266D778C720FA9BD9CBC1F322A39EFCAF5
85107BD5A5C188A6409352766D80E77B1270019E0EF57F31E9F13B9483F070F4
86122EE08A4870456161458B6C93A1602A5EE583461ED91A90CA5B743636AED8
1E5142CC0A7DC998CBCF84E39CE3B141286A5994C60855979B402FC1C092EA15
1A6F3762571629775247A6AC65DEFBCA10A51ED614E0C7FBC7335681207464AB
F8C4ED5B883E7A4D01199AFC3C88B0E2AB5FE014A84377451081CA0390DEBA75
7BEA45FA3171095052B839F7A2A9E41737F4A4CD704E8EAFC757116FE3012E01
AEBF584F6B34EB3F9C4B3893DF4E25B71CA17D427219E0E2F3F7ADB530841948
1FC1CD966965C72E9490C31153E2A0DAB73629A1DC0ED7C058AD150C4D5BE6CA
FCC7D71907232339F3FCD771914933CABF613F0F9FA3E206172B0B4ADD1D9744
00A8C2642147D4B652A8F1A7E5BD064E369FC591D4739533513C202E9DA91CDD
1581D1A58898DD6564B1710A88AEF94B888C52681BAEE1E3EFB4DBC694919D4F
41D01894C91D8E03F68DB550934E5D783537D2B57CEFE23ABACEC756F5D1EA5D
A74192035D2304EC4F9083716CA7906B80486BB5C79752270821CB12BE7ED0FB
9FEAA580CA187AA3C9475070809AF6881F745EC71298D454AD31AB998F5821B8
2070122634D5A247EE4D8672339B1D90113137D4FEAF3CF3A2456A8712556956
C5A48721B1B1E140ABFF7793081B2B092724FC0F129DE772236556BEEEBEBFB1
FAB1037FB0997B367483D2C8C0D44E6111CEE2EF443F84FAC7710AD0368D542E
8A629BBC3C6E2D85E984AA01B575B37DD1D9B0D453E3A73EE7A34FEFA5641BDD
67E694671B6250DAFA3D85E0A78E946C78E33A284D4F92B73D7AE87B13F108F2
C4611CD948F30F56B984E409650E9CDFFD63D996E25E5C0E0FFE02BBE2237537
8C945F31C26697A7ED159B529276995292581CB9B29A54F4F4B2D472C74909CC
47C1675DC6FB9A932C0552F8FBE17F4D8771BFC6109E6D709951694157B3CA9B
1F3952D101D6CE60D1A0A97C99EDB3FAD64BBD337BB747424BE88E67FEA44610
51A1F65159650D3A2FA882944E6E8DB113CE928969F6BE3E3B8BFB71302E87A4
5A22ED99B04853D66E5A22B56F79FEFE917A6F436B823B1A2FD914DDADEFB5C5
CA3A43E348D017CE2040752BF94A98902E608264DED8C3241F06469FE18C377E
448EDBB0823526BD66B40F0519F047195405629408224D070207499DF2F43E7D
52E442E3B6E9E3B08F88C9961E81373B96460077464C7DBE6C7C7887BEB3F685
B182706F5DB4C7C4BC2FB81A7D040EC5A04E5C5434D732318AE791EDC71A47F2
AB39A992EE304763BBA1AA81F9D74B24FA7EACEFBCAC72D673540922501841A4
F7EF18CA86AD20AD76325914FC0197DA6D7632947C4AB3AF2133D1A1E2719511
F62BEB9C879E76B74493C7D5EF38E01CC031CB4CE13C2EB6BA2695E1AB97260C
39A7CF8F690145893081D526990E92C1FB18CC4B968D70DFD13C6223FAC9AD31
2E1240ED981AECE8D13DC653D59255F868EF158EDD781E9D02889907B23F00D4
F6A0D9B74E591BADA348B09E22B1A783A8EF2AC87D34B6407522AB33411ECA4F
6C765C85ED1405A5F27B28A16751402AB278A8099E29940E719DE1E109E5BEFC
2A4098E77020110C37A90B5BDBE27995D78FD99C5784B2B7C7C509E9B93BCC29
35CD2714C50B246A7DC70C99B7DBFADA1E01B81749EE49A70853CD45FC323019
A45BCA3DE39C3E7618C6322D264556FD657D9270933D8B167D2575CF146336BB
1C76735F3B09470E40B0624E52F21809704749F6D81E3B829D163D9F61E070EE
D8CA803E56CF227F71EB8061B83E035C7138A7CFB6D6CBAFB766754C0E8934F9
AB738930EB75A2713CCBE333CC60A6A8F2BFDB043ADC0B94FA3370BBFBC61D7D
25524B08C70599D58E7521F58D26AFECE212309BD7BCF62735379ACF3309DDC5
C3F30DD7D3A37804BB23274D7B30DD69E1B2C3CA70F2F79FA29543F526BB808F
04609B43776382C4389362AEA7FE4E03637B4599D176F103143DC04D5B5E53D8
568E7911839EB05C8F4A9E9C911D746C4C8EBC0A4E6AC3CF08AC86548A8FD6D4
7450B1FD87B119E547047F43E9CCDE1C1F8645DA03EEB02B27E36BB6C87F39D0
505579B2D0FF4DA9D4AA971DB4C82693DEB59FAEB3A14C1547C6C46C24FF3513
EBC97357AA2F25BCDC92F98CFF9F3D5881095B96FBB30E8330499FB4803EAF74
920BAFB89889071729076D755021515BD8DE5177013854B10911605F872456B8
F504547AE968C323B85DCAD9AAD5FC33F29A921D427EEE0E098E8591EA7F2D7B
A5CD8A91C01AE80B672831C286C900AD20776B50D4D2004F7295D860A2974B73
A9E8B594BC8BCA8356DB43399E6A6918A887A64B2EEE98060E47C0F371681713
13F92A306D1A7DD5FCA29CE223138B98E6C6BE9F3B305E2E4ECE098AEC270F11
2CADA74CFF4BD78C5DEF4354211E3953CD7AD90239C1FFCA061A21652104F54D
4CE1C6B388B901F937A299F65C3217180D4BBDA87A96F4C31014265EFD9206DD
DDD45DD3F56823BF8236F0E6B94537D9CEF904EDEC7EBFB0E60995CF6457CF0B
1D76EFC8D22A8E991888FC44FF9ED2954B7A9DF5CF6F256C8A86C3D98CADF1E9
24E6C6725EDE1262199758B2B070504BD81147F35D8989D2CA44BEDE6B8BA09F
511388851B9D9865887D4EF8AA7AE6AB234B252A506EA2EB59B1AD40A04BA972
EC6DC7C9E4ADEB7E40045F10F38E0C8D50CD28D96A028BE7C67D1CD148404CE3
0DE9213AC26B82EB823194818E6DE249207343C37BE9B926EEDF21E1D52251D4
37D555CB1FEF227CD15A08CA2A245C3C6508DD3592E809E0C72380B92F4B946A
7BAF34835CAC375077A843F61978AB4876871FBF42DF8EB5F877033452F08D41
970883CD836D1668B85BD642F7F50AE117B3ACD1A1372D5D4D2555A2E8E23E29
D8C8C5F39807B5A01188DBAA07A27A116C80E837DC740E86068952F0A57E9027
C39A603A4886213EC782000DEABF71EAE1B8944E2EEF19E1F7FBF442840845EE
D13FA9B4C5CB1FDE6F0DE20AAD69160BFBDA23C2D29311C4F82514DCF27C6B94
A8E727522E182DAB2869CD2C2B0F39016EB778060F35A6FE085A1BDB04A65CBB
6605D4D72E11338D87D5B0283A4B81EC83D03F502E7DBF202BA558B4EB271C57
922F0CF3980A02A40CEB2FEE42B631C999B71EC234FED7B269E5D91564F0AC54
D70F8EFC63B94F73ACBB4CD279716F68783C493794BF12502E04FC52064E63D0
05F2034A1E7E4192D1193BD94E99C0CCF702D9EC100066E1490894F5ABC92A92
C3F42F4101AC88024884C018C7D0DF65F7CEBDD46FADABA26B5433D34C2AEB07
6031841EA02F1C9622E0B64CD190A4AF3020654123563C5D6ED62F112077A1E5
88A8C8499A8917CAB23F00BC124FD93096D2603BC6C1734124CA3176AB14F488
26ED2E56C67571DB18177A07E082CB873440C4648D3FFF06A1499A5C7EDBE172
1759C1BEA3DE43B426C5E175B059005BF2911E685D076FF12D01742E9AAFACF2
CFCAF0517858C28A24FFEB5A26E46BB5B788713FB8009CCFE62C17E001C96636
A8DC58B71D4BC720F615D2873CD11E06DDB3A7788888A8E713D0E82FC861C0D9
ED98E873821095C6BE6CA909BCEB6C9BB1B0730BCBCB20E22D06AD1AAE225D51
25AAA901A78E86386D29A7CCEFBAA8F35B4813CC9D289E5244483DFEC10FF237
E38BC8E19B81502A19E0BD113AFF02F4E365A4708189A7BDEAB2D32A6E464AAE
B3505AF669EC3FE5A7C9320D907438DB23A82D8CB9777BECA40890C137564EAC
CE768714D7430BE1825C90D88DF40E753607A06AFC0046335F97A2FF20EA44F7
94C1DFD6B105FDFC6EBC6D5745C10D2C3BD560C939B80707B471D13D7A910F23
91FA6B63F2E6A01890368EA8F0D42E7A93B343C664BBCEBDBC0C99138A50E5C0
F57977D929DC9CC159568FBF5523D79229E9BA352E4193A44EE745F76035DBC9
34588B2B8FF44C8368C9C69AD17E91BD78559AD4BE219C8B110472F95FD5CEE1
A7EC2A78941AFD0B102C6CEF9D5BCD4C4FB87316BC327ABA5D5F5FF14BFAABDF
9FC06879D91DADEAA25F850083BE6CC26AE7437664ABB66CCEEA19D0BDE898CF
328861C3CB4423FD2C0C1AFA95A6195FEF30511D5C87876C863364CE4B089A97
6F9C29A14A61785C42D2C746A98194782D9A504B2A0A92D4E4B5062855A33404
2E14145F4684AD22D461E740FA8DD232D18E559DAB50A977CF474EE1410D7097
785D120CA5C6E051D096CC40E931BEB074AA9E32BBFA361593C78D0D2EDCB1CD
D560A14E93017099D24663633B06BBE3C20A2718C044731B6DB8007749D1B605
F397413DF968722DC03BD138B0559D3E5887B7EA9C9C54F8335F55CC3F1B9135
C70CD0214CF04A4EC5AD120D492F25CD6E1E80CE87C5709112938ACF9BB2E011
87FC035CEA0FD5C1147D41630F1CC9B82B395BDCE1885A1D5F3441B03AC321C1
5CDE681DBB192993B553048C58C55F0E420DCEA46CD16B75173C5D37047E511D
C980EBD803E01C35504C4092D93AE476AB15324149043E713261671835DDF160
4B8DA000941FC5F85C754D5132402A0A94EA3D0E37D6B9890461CF1C65AB7C2E
E42288BD17DB983600580BB1513D30983C4FCDD1836FEDC80308316401D8B181
EE2A3B114F68DED3488EB9ABDBCE6E73EC5A0AD42D7735045D594C43A33EA29C
BE2AB98CD0305DD935D8F0F5EE3205A7576650887883B3C9AC23E217F48154FD
6CE1454F09486B47A5A18DE65034D0CC9F9F66DE2BE45C2D6F1AF8B10F578B9F
F66D78D738FA85FC454C23236FF4B665EA0E6210060F6439E9CCA612DC7ACE7A
D12F478F25D40CDF7D23E3E543B75A97A7BC960A7F742A2C89212832C36801A4
C384B89A91D53E0CD886C7BE0692CEB0CF29D9B4BD53E08D9FC1A863599BCF9A
717F4DC319B4B59AF009C11A91ACB087542F94750DC53232E62ACC3C660965F4
5849011BD76FF8489964A7848FC6F3CFA44B7F502649EAD20FD32FA1999CB88E
A646C764BD2088A3EF00A4F1862F2CAE2F8B6A8DB26A1287AB3DD941A92AC57C
EC6D4CFCE0ADFD99BDC3BE161F4C1FBA9B854899BDB7E9D09A1E25A95E9789BA
DC6967F96E550903DF9B81969E38FA3DE2A058EE2076C77C33A93F2FBAECA0A0
EA98FA4C3D1F8700B04CEAEA603A0833E91FB4A44AC83C4E86308B6E89C99A84
8AAAF1BD143560B559176CAF28B1D8B2C8370CBAD5873329B24AD4A743F2CFD1
8B26B1128AA48F72767FF2268BED8317FAFDB532191FA35C2984AE7C50481FF3
126BAE5309893814BA28263EB863D5E6F01C423E6C5D3289B152CE19FDB55A11
282FEEFFF3E262F26041CB1AF30804A3CC34C06C6FBA8AED582215711B0A17F4
1B505FA0B5F906C537EFCDEE4C69AFFEF89B74C5B83E2DEE7642AA85B1615F9C
BA1C3C3197223C98A1ACAA495A6B8B8F1919AC158DC63FF4600FDF993CE8D2E6
3DAB7E352BE200322BBAF6DDD2628694612A7790EA8E1836533738405E9B7AB6
9DC77FE9A283B3A8C6A3651DE8AF71499D39CE0567AEA286091BEA9D6A443A5C
D35747785C433D4E18A02ABA38F55742DC36E4FF07A656AFDC3D0A32CFC097B0
5F9D90CC4B614AE7F58F3BFAF22EE6821291164B14DA11FB16C0E671A6104082
94D05830E44ED3E9908B59DB3B3506C60D3F766ECE69AE23369AAC3B5951B557
D62C7728D6E3F13BE05939C2A6FAA336EFA57001DE299223DDBB333D71003681
B4A816B378AFE37543607554F1F1B427784EFB366CBFF1CD7CD5FE3CB61842EF
56F134AB25DCAD2BD08AE61E233FE6FA79017D1883C61EF0334681CCACC5D024
F39309DDAE717CDDEBF80C88974D717C4539732DAD1226FE504620FDEEEC6266
41060E55159270B4794F9C0945FEAC295D17B4E252D015910B847534A519CFC3
2D52169510940A9E9AD636AE141331BE35D1D5308C927BA3940B773F20E5B3C7
813663D33205454A1A4B2D9173D593615C4459845E1AEEEE1ABCE3E5328D3F81
11610DB32C86FF6F9DBA1B8D6BBA3C4AF64523F37F176F3256E298D22DC5F1CC
F1A67A355219E2EE13D5D6369F656836EE0A77206E8236649E81A1F0E02D8D3A
3C8FAAECF7839D20329CBC5ACB43482D3A3A1E9C3A426BC7FE406E89FF25FEB2
34CCD7F3FB3C608FF37988C7DE6A41FB1020DBBCC762F2BF24BF424BBB2D3207
9DD408226AEAA0C4DCB8DF16CC6767B0BC73EBA052FAA5311407ADDD4BDB1061
3A860B10D2C219E96E61050B98FB04425912F484F5B79B9C0735F92C1B4353B0
76358780D1547206329F302AF6853E5DCFBFE199A76734AEC487BBB103A8547A
0090F0342D48DFF9EA9821454CB759B3D82921AB4B9278E652C2F30A8A121781
8CFD111E32142FFB160DB6422A5884151A4671D631260FB1758BAC67E14234D2
5747F1E68E0C36FEFBD535FA5C64B046AA8835817140B76DC22B5453AE8F3F76
C69B9F10988BE7D061F539CC8711030D2483F752706E27D43E3102CEC57B8A58
6D3FF862999D20CD6BBDB23762249BA7031D4D97DE2280C10756DAC422F0B747
E427E5DB0B265FDD57193B8E7F00C2162FB111DC4972B51E59320793EC60AA3A
F4A3F68AA5E11F657F898F59F67E0D285167231B9F444D42F17CB182EE584117
FC81DDB5BEF8EB957F817C5699C7293E47DAA4EAD6D47F00FC6443EFCDCCACE4
627CFE80E82179579BFE305B9AA1770E8E8970E70524F9F7AE081E64AD1F71D6
CC6FF054661866B68CCC383E5403F0A734ECAD86937D32FACAB6B04F3F9ADD79
94C11CE94999A3F38C88115D6082DECDC2125A4643102DFD0AFCD8682BE5CA11
AABA54285DEB171209CC4CF8879A65088C7381B9029B67CE9029093EEBBAEDD4
403C382D29751340F63D14C45D0C8ACE829FC3034643F4B76AB7BF41CDB0A2CF
B2CFF7A3E022256D29AE0E789DBA81CB4DDE7D4A970A3162D903EDE2880C20DD
FCB205309DA145A55A2C6763E0D8BC8A0BF42461DCA1CB7E613647A93FAEC756
3535886E28292A422264BAEA373D5F1AD84FC79DE23E2BA52D8EE1B1D3F80318
8614D6ACD81856288366086F50154919E5C99CF62A7700E896F5B69456110B9A
8BBCDA8551C3C14F979F3CBB597AAE41210AA7A444428DD055DD35D91A1DD465
3800988005F542BD304D2D1798BABD827BC8A689C3C35078CC3502DEF40DE082
B544B4AF7127EA6D5B8FF5A0735257BE29E36A29B707A51A697A4D8A360D4017
19C5FDD791A1C640D47AF86948448DD00039DB41E9C5BE1A7E6BB48920932280
BC552ECD04E2C33B76A0F6172098AA76CD4660980EFA1C84D5348740B8A4885A
BE1FC79E81913524DB238155870C6B9819E5842664A4049499CAFA7351D3D3BF
FEB9A51236038D4452E44A34F25718B7158C40F12ACA152F1EE78072533F8900
CC3A1869BE48305DA62447B28A45D6F516078C72A4B155A2715B713EC359F680
FCF2663644C985191135F0156722F0BF1DFACDE42BEFD5278ACEC4A55F1A082D
537B3C1EE890A6FD2ECE0EF3999DB161EF7DB88DA4B0C592385D35F705BC2A9C
CD7351AE879DBB7FB52F25A5A5DFA45DB0FDF9B94F0AA69918932E563C8827CC
340AC4350DD2FF1A3EA9F8F3711A16CCE9A37170F0C02A9C7143D722CFC08677
6227901157114767FEC20D2DBA71C87061EE8BF523D591180D29A8F8E14A7959
731A74DC4B215D7EC095EBE86A3CB7C28C2EA7E6A19A68B64EAF236A3468C0F9
453189A1DFA55A9459D1C5B8CDC769D992269E6EC4631B1B75F7E6A511DBD978
F3032D2FC6BD54FD7664FAF472BBF13AC7F619FDC4AD5B38CE04E4C555757F69
C669C5EC403770F681C400FAEA98F62F02633E0F85A780A61DF255239F9BC3EA
AD652E6D5E754B9ADE46841E52DF90C3F0D7CE5DD684566DCF0B43A0B0F975DE
AE2F7601EB63C39D6EE8C54611D9D515EEBB7192C63D22D02BB2A5A27270225E
C95173C09068553725ABA9423F4B268C58072241D2DC5C080E7881848222220A
63605F00205C205B35DA93F4D000126B2CE72AC322B4D962537889CF225B3381
6EB449BF2C28599EB66F071FFCE3410C547A9B74D216032B72854A0B8A6ADE15
EBBFD5CD2BA9FAB7E75099FF1B68329B68A2CE587608555325EF062CFF465B6F
184FB4C37A50F08B2F1CF6E09E92D6215A5C9BE511CF326505FC5EF2B72DC40E
3350D5D5358B49CD7A1713DE7AD5B63F462A77B6268B7AFB245DE6EE02BF2A97
B0542A5CFD6CAF309B7E10ECA06B51C2717DB5BDE8E80D6F29B33E9FE12AC804
AA0C6670967F6C3C2A7310CCC64AB48219EF140A1D9A942543FDE90924C9DB3A
5D667E0AF18066F4318101305AED22847F855960CC952649426FBD46FBB5728A
CA73B436527795BAA59086831567FDD5B3BA6931468115577ABD8222985FAED7
B6A1CC891D07185666E6E74DE886BB13021AADC9950E2EF1FB69E5350B281CA8
F05E2830521A7BE2EF1D993F75619EAC1B3A7A437612AB0E8513DF8F0F44E933
75553EA81965C83F6CA655BBD1410B7E8F600CA820DF8B4BAFE515BCC974BCC2
8E06AC06B07BB7E08BFA5CA8C5EEF8386971DE077781A9E67359AD8E75DFF208
727DC428911CB820B9211D2A3C6BE6A3ED0A5A2C1C623A6D6615F24FED298A68
097564A8429CB235119311B9888D0BE96AC4BFD340BCABB8EE589A69F749B180
3E3C1EF42D935EFB4AEBC656854ADB4AED11740BA3FFE21D9099979EBD752E36
A8EA33F541256C368B3217E226202117CFBE3DE2C6DBFB0BB25BB138BBF69BBB
484DDA6371DFFA6222F88F0886C7F8848E932CF0D89BEC7E504189315DE0E931
69236EEC7E3C7AD630E43CB5B3540FE72436B7BDC9E33F6D4B2E9C167ADE4932
2A5AA48B228CF68EE0032B1968EB88119A375D4DC1AF6E4FDBB4862DB295672C
BEF8C0780AD1CED1352575A76E2FB6DA0EA3472267A89135EB528CFD0877E8D6
E31A02A87587DC7D4030E320C514539B504A31AF3D7A4DD413750FA4B723142B
B074DCC9B55E3A49B384006A6320B55B1CF4B2482D465B5835341350E215B0D5
5DDC1F173119E073DB7DEED7DC4A04968B69F792644FA8B0757303F40F4E3D39
ACE81E6816449AA859A9754CAD99EAB3F59EBBC14ED7BC71D669091521BF6739
131AAC92DD77A116EE7E81836676237F88C519F8DBF39EC35FE36E3D2577738F
553F81135829F9118F4BFE20CD51190F2806A37A4B011776C7A572D2FCF18871
BB569C2DB5B9A3347F911C34150B85ACF4262B137D9E0FAF538F8838EBF6E79A
1ADFB94FEAEC654AE20E3A693C2D57AF9597BDE85CA476C09617B1CEE6A2B48C
DEB0450B99E5E00DD9825D72B3A9D95383171187CD0E33C8CD308C436B64C763
C407654A8C311D3B3C8F5901B2AC785B222E5DE6A3FC2A9B0662335A2DB9C80E
B7BF67101B1F500FEBCC23AE484F2222BFD38455BA078A1A500CB006AA6A7D46
70530EA460E36E1FCC24D0148C458B745876A5FE5919C3C624E46C02C72E1368
8BC50A383020829462604E0B5B2CDA9CEAAA07D3BFCE05B6A2BD017FA8AB3942
D6C7B09C6F75C799F437E74F0E185AD518B7E446C30415CA18B5F59F3C4DC209
7CCF7B2FC2F789BC49E4AB223FCEEAA22FF3F71E5E5E966DFB605D18E4B1CA2F
59697989C41141C74CAECABF8616AD95FD9ED3B11C918BB38D14FDE1FB20C560
4C70DC9E98857AA358B5F754BC18087F2F7BC99B501F212C04DDCF148251E923
37D102BDF468038B07C256081F5B8F3636CCE0A293F905974A0B37050C2ABC49
F5FDFCA8BE38549AE53F72B85A6F03B58AE18FC178D906B9BF3D12A818C8EBD9
90E7A12A38A89BDAD7E6A192877F8F9B9C3E5BDF412BF0E8C92A234BC8049091
778F36D558DE72E0CF1737994854EABAF8C2D221E0081D853369B8ADE0B18E8D
FDE785893B5EFD6019A709D99989DBCD244F0C11087A077D2103E494406B1DC8
1032B618349FC6ED24879F02A9B2C2924CD9E921B84C4E6C0ED0396E44A5667B
7AD3375595524D22C358B73374B5E7C4F285F9BD614A00DE6825572189A19315
AD3E7E3EE742E2EC53C778F677810DAD0C8F97E6FC8724E306E2E37B799A57B8
009493929890EBB3F0C168479B6999AD5B3C3DFE28AC43FD186B6BABA7FFA776
83212C8FAF6DC682C841008292750A376D0398DA95DF8AA168A651403C2477DA
990FC58E46BB65AB0676A40A8130F05A6CD8D0A2713820D615BA8AE46DCDCD93
BF182F0D752C9EFA34692B1E9877D715480B2CBC1181E6A95B05E9285F173BEF
A5424D243AA8BC7E87176773002363255E70443F86B6EF38C81511BA8FF4887F
3EE4357A421575258AAEDA4B5DD9ED6E3482283ACB506A2D6812D4676F3F6464
94832C8EC9EDCF022E141A5DE5496F54EF7A0050C0D1D2166C4A311A0C52ED00
D2305C70A416567F5EE877F0D165C4D4E6B00BF84FBE6428597412531988959F
3897745D7159FCDBB10B6459273EFD03520F2483A9E7FA0938D162FC5890998A
99BFE2406581D64F49F46B2D453844BEFB1931DD7E2CE0E540A398AA83F57164
3D64D9D9B4DAB92AE722C326065E48F4EC7FBF2E1158F0535DFFB59313804D69
60AA6F0C136BBED6E020CA50ECC4A6C90A628121B6317FB8E40E11E48E61DC6D
B3FD911235DC5A823A176D8387CA420A441980D3E8666043259B63FD3CE13E54
945B0A6BCB5633B1D580346D913BACD9742B308D575A409EFBAAE5D96D65773E
BE8D69A606A70A06E230290370856A89FA8D56529F252E7CC538FD5673744947
AA98663DA46206E7A75B1E7AC0247834B4558985AF6894363B2114294E668644
46DAA5CE2591121519A4117747BF9CCB78F9F8A3F5D44459BF81997F9E7A34F8
122CF87CF933F558E4660C9FE5D440B33AE6DD4220A093310E3E65B053A2EAB9
C183BD44FCF0C480796469C934250A5CE240A1171441D03FD75811F371B3895F
AA14A75448ED483C51D41076C0FE99D988D612DEBF78DD7EE23922F1A25B3421
F4AB7F9881955BDB0AD3FDECF4CC3BFC8CE815CF8DC0CF6D4C15FC110A14C6B1
7D87AB69D8E840ECB176762EE87EB04071EB8061B83E0359E6BCF317360AAAFB
7C198CD8DBE03A3CE7728D8819BF7826CFD7EE20738DE07BF2CB6AB91D17C579
3A8F9EDA9EEE6F64F51F736877EF6935ECA18A5F86EDFFDAB7E32A239E731333
107A831FBE6A6CAF1BB6D934295DDA357EB9FD1661523AE5AF8DDD8B198AC29B
D3B8DD91D49CFEA23E7D6EE63090EEC569D8FBEAF4E5CA52AF81F8FE49557D75
B147C85088703C68C018951631F2EA80DF28F24FD71D502A040CB4DACDAE1FC4
F892A2F092A3E45C31A6DF9C59631C5811D0CC79DCC5C2D73915AB87E8E31B37
12EFFC2E3FE1428B2DAA1853FEE27EF30CB0A494BA6ACDF6788877A3104070C2
23170140A7516D83EA6A99D1E4F756CB95EA4C2F9F4541B4ACFE9CA666C46C7F
031C67944AE235F4F872E636F24BA68ECAFED13668242C92CCF7FABDDB6C50DF
2485AB8138E3D841A9D8F9F80AC1BABB452DF2ECC9744C9C500556EF9EB6764B
4F8134DC429709776F04C4D5E4D04DAEBF5C475C7C3EB2EF7E035707E5A69C6B
F3D0C6660E636D6AD25B03A443509DE32694DEB838C8B360EBFFB8D45798018A
310214EB1672483CE4272074EBD88C9DCBDD1E51AC1353F7C1C6F691546B9315
12AA015585BF3EE444A7F201B20F79ED641D0EE7473C6E028D62D173D45A6D17
B4A1D1D916165B0BFB018964439FA7B3877858BBA8A26697C5929DF8B06BE1AE
01528C75262EF6C5B60BD81D2770945D3D6BB88DA9FDDAC13FEAF57217EC230C
CA301F89A1016CD564EF2EFDF0BDB775895C4746ECF87F40A23A8418AC968F2F
B30D5073CE2A53F750B082C4A6590AD501BDF6EBCDC02B48008D082AC5C1C042
7AD24E2C9976490B46BBC2187317D00BE0D30EB7BD4463F7A542C9A7373C3A43
39301CE2F890851EB3E99946DCD9A40E25DD883D396E1B7292137CEA7B60FAA0
52E4E631CD7AD08606E816F3E54E20DE4C1F23B16A9440AD00F6BA5601CEB6D0
79BB75886BE988058F4C5A79047AF8C75EEF3919EB6C5639046C6371F2024871
88A7BAFAAD7699E573E26B49D2D3520CE7EC27EA837EDAF9DBBF7EAD3B2858BC
FE820B4633E69F61EF0A9659847F8BDCD4238F576E09B591DD088900D4590818
6740C9412068CEBAB515DF56E83B52503F2A044FB87D284384D6AD0810B5407E
1085B1D5104BEC91C4AEF5E1E1F02AC9FCD1D87929953EE6CFB6C2FD8FD23C18
CA4063BCC8EE90AC1756B426A936BAED123DB1E3297770D868CC596E737A5234
E91EA9C52A86F396EC334621CC131F067BE82B7A00167945245303572FCD07DF
901E78AA828FB9ABAC42443EFEBDA80787A0F0A9682632A59B9D4E948DAFC6D5
74A33B9CE67A5639E34DBF36BE9F30BE03B0B8FE5F8EA006251B9E33FFEBB1BD
B2FDE76B58AF101A0AD64320E0217F90916924BEAA08BF7FF02DCAE8484C13F7
C5DEDB4EDC72B4042D30D14E8F4D415C5AB2A72BC3F9A63FC847DC244530BB6D
83D8451BC66D90AA787A9A653A4F75C63447142226B4AD05ADD80A9D7DF9C7A1
817250E78AD0204C9DCF16C79410605D4D744BFBA60FC22E964CE10AF512C228
F4CFC3DD85AEE7C9E61D62CE0FCACB72E14C2FDB87A97F47425D7D53DBEE6D4A
863D81138795F521C6A95DEC14BBB3E5A8BB3613EA73BA2AAE3FCA5D2E78ABF5
0BCFF51317165C88BAE59023144D99A71EDBB90FB84380ACDDA68AD46AC7AE3C
09162E8A4FC6CD4741B38836CB599DF98A21C5245BD1435E23F7395871AD1115
8CFCA33C04ACFDA3F0707836091A6260F217D91D4EA2F2B6FB87E2E004C0C5AD
DD2AB665537FEBACD5BC7C774D53CC63B57F7C9A28A5F0EA14F929D5598F4437
AB944A06B5EEC3343EB1EC04DCD09A2A4F2CB04C74B200EE87D92C452F79B850
8B5A3F364A4DD82BA880A7A5CD59F8F6000E1978A9EBD18D33DDE269A3E70362
6A0F204E36BEB8606041ED5927BF69A367EEAB44967489A34B460172AB269789
DDA62F516CB7FCE827E8B6C453F843B10EC212D258C3CAD385E8512B667AC78A
09A780813B1FF02AA967B12AAFAD9ECE68CFFB45E6E44703FC7AD68DBAA09BF4
E38DCE8FA46EF5CDFAAF3113D089D7C85E5859F27B8DC4C5D864F41B8B3B0F66
D6FBE907224496686847529F68DEA6FE86CDFE2FEB8DC3AB2D124146E08DA532
B277C8A73DAF87129F39235E00862E70D7E93430EFEEF4CA1441C63290D48E72
84386F6082C2362E4CCF3E66ECC33C744621B1FDDBC9F587FA9AD60FF1DD01D8
20488450336225C64FDBE7F75433FB87932A162CCCA0114944A1AC1E57C446C1
533D84AFF286AB0086008147E26E133E012707E204F21F5EDCA106FA0636B029
F12E6809CD8308A1512A4F3BBA0E02AA42C71D9E27302A88E52BB8B1924F057C
43DB0A92111ECBF02129EE8DF16E063B7BB9D34606831C82F4954E3E9F458653
B6CA43CE1F9164BB0FE39FBCF2876FDF951D8F9ECEF97273B7554C01E0528548
562040B9FEDE9638C09DB8EABA360ABADCD32C16E9F72E34B4CCD3A3F1A87879
31F61A705F34B65A7D17B8BE932648CE9E0B7240BCC29C59A4D84770FD34E97E
0E6CE2C95CBCD1A7AAD2312A280F0C0753434F33D438BD8EED69053BE9CBDC74
E87B613542F58DBCA1007FF58CD1A3F9D87400FB8A600F088414D8992ECDA0AC
C39AB210921E327FD8B10856C476FBFA10D11E87A61DFE3103AF0DA9F627E710
DB3D3C578C86CDBBDC0A2BE5F6D17EDD30DE14918A2AF0E1ED9254513D2002A9
CCD73361CC952A8238AF64FF352BAC31D36B071C4B68DF8BA0FE38D3A0188439
4AF829C39DB36BFA67124053D79DB19F848987C0F2E57CC79D75EC3262338CD1
3F13C659D762DB6199447516E1A5D4B3326832B50B45C50D8F3B912D34199D95
8BC7C6ACBDEF8BA575387DD0D73162CDDD96166F795C46B8AD5A7ACB5C30A9E7
9E85CB8BF53846F45871E08B42AF72B3F3760F5FA35BCD767FEE4E9808EBF054
38BA865AC5CE19DB05CF529A5DB0DFA4F1AE311FF2EE1311CEECDC45A5A65A71
E268231C07EC0F3AAC2337536495DDF6085A1BDB04A65CBB6605D4D72E11338D
87D5B02C7980703D1DF07EF2E12C9802AAB56426BFD7E71A8056C4D40E53D42D
AF400AA41C55881CED39A6EAD01854DB545A7D0E46716D81039491DB446916FA
5F10B5FF1AE36BAAB8A07828702857EDDDC1030D19928F2E260434DD44D61B33
1A026E3D72A9FC0E15EE51F97141125A74C5BBC35D82385C083D07AF133BB1BC
941AFDD9F34D5E0FDB49915C613B9E6CA03E2FAB053421BDE071AA7232D3FB8F
2F4E2C4C544F441AD84AB5DE68AE07093F707C67DB1DC2AF85CBA7D0FCFEE888
CC7FFDEFCBD573725714DAD9F6D32D04C681C42D15D8B8DCDEF77987C808BF0A
56664166455D888CA8A3B820DB6BE101296BDF05D296180E1F0068E431EB425F
A04DD315AE10FD3A72CBDDE3AF4825F7C3B591FB74909EE16F53AB0F444AEC23
3ED419193715DC8998AC0E556F16DB74C13D05E062FF908D37AACBCC9086AB4D
09E359B41CF74AED5B75C01085EEE6959AF5B321D1550C15C0E4AD2245D110C2
485C08BA84E13D79C4875E249580B771CDADB22DBBC1715016A91EB885A51BA3
F73CDCAD65BE718C0072A840C5D661E2BAD9236D480D9250A1EEDEC54A0D75E0
C853808E0E457AC644B40C5D496DCB96A463116389EAFF5982413681C556258C
6A96EBFA86A669F671B2056B5206CB2889A999E7573B012EA2371452E23091C6
5D76AAB3B0B47745CB8CBF9EFB538C274E3C64685888A61CD2FE2A3912714563
19C9B1F9D62740A6C1E4ACA130DD76A67920DBB1EBF803737388C01B84BAC1F8
C5D2AA3A3E6BCD63BDDD75FB5390E6DE2159D712C43EC39112935BA5FBC2D1C3
048DD4A16B2BECF9DC186E0B3479EC564EB9E63BE5C92779434A3938E1970D8E
A3CD40C7B8FB442058996268D90BEC85B51D5111091F54823FDAAC9DDFDDFCC6
DD12C114B7373759BE4A62F1370FEDE056CEE265838696FCEA5BF7EF4865F3EE
0054B00A9EF36E06722397867DF4DE78492BB8EF96B9D0B8AD794FC37229A534
DDDB4A69FCB5E94DCD2FB69D65D8D970C3C755E6F464E23802978FFD29A0F681
BB7C42AB16F3DC305839233A6D79FF1A8152419BC99C0B233ADAE39DC533F1D1
0843067264DF39491C34CB4BF88039971CBF0B811DA5D0453701393BCF3D6251
E80A93FEA61864BCFA907DA7513A5D5AB90346D805E2A2205BB410B3E1317CF2
47224ECF9FFD37BA6DB7283B75010E5542A389EA2F787A4693E254921B8DED4B
654A34C1C67C390186CE712378CC6217567E4233AB90D231BB07679EB2ABDE89
5E12261315A776E2579686DB956486C96942AD652B9188F2FFA1495493978225
54956039FCDFCEF8BB4382003153E604C23D313121A31905074446B1B55348E1
E2CEB827C74133EF89CC4C0E3BC93691F53282A0F0627B5C2BF0D24FF6B79AC8
74474B73FEB6FBCFE8F5D07B521EB0F086704D2F749380E92B97B1D4D15A6A6B
4A8E7F107E2E4ED3AF0A323F4ADF5BA2DBAE0C452EB77B9EB60BC8E8DBAC5E44
24AAD00B852219A60384F37D44F4096D8AE632FB2EBC0DDDFE6674552253C086
45F0BE1E25404BF8131379A057266485F454D5AE1081304809DF523EFE64D400
BA4D22773664235629410B1866D7A52B5AF7B22EDF4D13C1A0F81659D7C22C7D
D495DAEDFC651D4A939CCBFF875032E159EE437A2F68FBB9A796AD2042FF89AC
01843A0B408603CDC4D27FAA68D7A5407E0BA263CECAF34FF58FCCAD408B8B07
D84E95D6D79E0FDB6BA53C1C524097F7E1070005FE0374ADBE880B8E044E4662
EF0AF221544DE5DDC61A54CA0504D9C77E08FCF101D33E908A71B94B57A71E99
C8E97C95D6264824385F1E9C6AD73172B8777A6A9C884E2131126C9A2EA19A80
074BCB3432256BFE41FBDA108B3363B7102FEF09C25D849D7DAE91025A4C6D38
DB16CFE8E67900498C2F9834799128DF2B034852C673ECC4B4C9D77AC775F945
CF1F96E80E3B5528D4D09E1B5E78B3E352007805470CF8FD960389A736A651C8
E9877DF4A9DE3457D17C81740DAFE000798A2787814333C50AAFF69C863ADF81
27F1FC35DB9CD34EBC684818AB259FF8F84FCC533000D0E1E9DACA45F94E8282
61BEB551460C501428C4BFAB2B6067BAE1E2D71CBE46FFDE38A25CD0DA603BA1
BDE6BC382D8DB22A52CE0029B573F9F5F2F99F02A7E96171314C00E5F85216D9
9E98CE869F017082FB4B0C2DAEB278ED1C55B16BBB1D07807CA3D7E9844BC82B
B1B2426ACB9FBF557D742F35A403EFD9761F38E63ABF21DE56A291D2DF07EEE0
4F70626F4C73D605F7E228B23414CA58006F3D40E72FB71FDA23113D1B0FD21F
EF5897DCC7EF4C2CB4B9918C0626FBF8C4B10DFE83AF257544C70A57AFE06F7A
0B5F072E7235E9B1BA19B953CE9DE783BE36D5CCDC4C798C8CF098F26C8AF48B
458803BB26487C1396A12DC36FC9583A048A83F68049C707E5FC1473E7DF92F9
D2E2B830669F8630FB55709D85C29E7014A84F5920F3D806AF76ABAD9FBEDC38
8D8DDE6F49CA08F4FBD88644E60BAEFE49E53B1354C807588476C398F937F142
69C0E5733E34BBF9B416E034586C46E8419A975C8D37D0A16E6E3B361477A079
0C7141A679CF5F95FB8D5A4E24180ED6517E4F0FEDE76BFECEE5BE55608AC296
664FA0A919782A6ADDA23C38C361874254B5CEC048F7E120356772127F589F03
18D086E59953642D6C2D23CCCF3129CCBC9A3C3E966D3F3B431634B78DBC70A3
0BD571B782F24BF7ED544AE148467180DC2293FA812D817D2E5EB294948D9305
B66F6DDCD13D1E9F158AC88FCAF620320B38C49770AE23986F8CDC1C1DC9E4C2
14326056CD0B162BDFAE809998E0B6C0032CF12BE89CA00370A27B2EA4AAD3D5
A9753BFEF2BF2C41938C4F0D045A0A8D658A3D44DD192024F7346872E8479505
9D0A12F0E405BA2838BC4C0021571B3CC54019500DDC798B57B6D0D13127291F
2D47B02EC7F91571FCF8978A464394EA8092DE7AF606694CDDFE9C6DD15D99ED
151912F966FCD9C5B8EDEAA3693ECC7071FEEB02814EE5D641FCF55E6188E23E
33140F8E91CE236EBFA996C5167910021202680C57E0057A8D4EE1C5DB70F4B1
7B4DE35C678F54658E03C1C84B04C87E046D425D2C67D68D0A054F8A3F6FFE07
295936FF6131D4CBD8880F040048728D0EE1112BCED54AF013408AD290A34B2C
9CC0F6E3881AEB9427D4167265AD86FD668F97C05F88DA5099D12C2940A318A5
A146C3BD0689656726A6B409C00F85426E37C3B5EE1F6343C8B479309AE973BB
998BBBFE4C486AD89EAB0D0C26D0A0F17C220DF312D33508279355F50B3A93FF
5A9AA1B7495880B7D6CA5327DB81FAFE2021B109D7DC8DDB880AAFF3059366F2
93191CE257782F236FC2299F6C600339CFFA85D117825A1595466DD4A1542B74
D7A7D21A05BC2B931A723A236AEDFF5676ACDE6EE71DC9EEC11305EEE39BD2F3
14B4595C18B7A2C0EF1F5A33B8BE57F38548BE3C2CEE2DC1118746EEA119D980
4673924FC20C17C1ED4D389C4174811E9E24F85A8B77DD6AE21621F960DF0147
A4DFF91B1D7636794038D4BC5D6DABA9931AAA9EF77428F5D92F0D318ABB61FC
BEE8E8B0B00C0CD02DE5923FF7CA111DCEF22BFDAAE0A7FA0303A0269B0BF575
4A34A69D56270FBBCD33071471AC139C90CE7F8D08EA040D5658FE6880E58035
9DB44661981E8B79C0C2475836CA85BA749C7CB1687ADFFB0B83A7838452A6F1
83466DDD82D1A1D297D1973E6125FF805E17D38C76F5B4C7C83E8B807AB38A85
53E4B5345123312D43AD2E836E25F9B23583AF36D35161B3EB6C40B510603233
182D94662DBA29C1CFBB09441E94207F55E0B78627E2EC67AC26FA885E54E087
D698F1A4BF65FAF83FDEDF9FF98C673B7AD1BEAA697D3CB6D9C462D6C4E3B2DB
011FE15465A441C472834AF396EA9104317CE37F898A92279DB351D188A1814F
8A08AB09A1C3887E0A00795C3716FA975B5F1A2392EA4950D391482AE9F2AF40
D860BE6534F6DC2FF0E40D5A3A2E5B7AF64A3304B9E86E1BAFC54DE2082E90DB
FE87968918000FCCC4BBB3D0F0A77E13A6786072F77720ACE22C9983B434CD77
8C28637476392A5B7F44050B2198DDB2BD938BA9E0A07C349F6A296A1FA1D105
0D37288CA08255BCDF5929EEB634EE8C2A7455D8076E107197F4F97EA93751AB
E18A6D4E241BAF0011EC6FB1D192BAB823EE0AD7DD15D945A99E5A173DE39EA2
59EA2E3B442B92E2D055C196BFCE731A8139223DE5819D1764130EA68615B1B7
189F2451BC21E2E5AACC0CA211F50A13075ABCF9F440CDD30739CB3148475002
412C3BB280E2FFFB47BAFBF92207E0079853BC21C88A8E8AD88833808160A84F
3F9F293F7BACA804CD809616BE4342A5047C07E76889E53BCF1F1964657D64B4
3EAF4ACBAC482D06AFD458F0DC3F463AB5D1D4343512ADA1B78E710A10079F21
1FAA5227E4A5365D551C1BDE7D5E9A26CC8D7CCE79CA02A223ACAE1973BB47BA
EB51200930F442D8ADEC45F642DD8A886A39A3AC3798AB415E6CB6014A911751
975AC7A57F25C2EBAC60249D7EFDECC8DD734D9BFC4A3D813CCF13D5DCBB6901
713D3B30B95F41BAA04890239EC93C0C768F202CD6C54AD1666090276C020D09
83979A82009507CA1D75018CB2E68751997E96F9ED7A2E4DCC52B55ED92B2383
2219A60384F37D44F4096D8AE632FB2EBC0DDDFE65419829EB54490428B5A480
80A0E95A00D0F166D1AA1FE9399D48292FBDEC55AE303FB7ADF8AFA0646A4031
E884B96CDDA0C7850A553C7C1FF72C1F2902DB13FC064D74055C6DC1C13773FE
58B2717DB9B9ADD4EE197B09C39A05717986CC8A452AE463C1E0043483206B2C
87D3A1B2A90E79D1775A4271DB221ECCFA25639CFDADABB269292C4AEE3AAB63
B382FDD2568A537E7296E0EE3EE6FFAC39345EC77FAD42B0D5F7F4E717F7F2F5
74F03B3BD6F5587B6D0B1157E28DD3226C5DC361A0451922BC220013FD87EA3E
36D8081D645083CB8C992985DB99D9BD2EC2FD6986E143A620190406409E997A
D5336173B743300775C574C35CCEDEF16C8D4DC6B158DFE9181891177C5B8D24
246EA73EF03626CC1C0ADEB130863434670C767A3533656C79DD1C174C26DD97
D462B4323F33B410DF519583F6AD6320CBFD44AEDF807280DB07957C96CE530E
F1CAC71F4E90EE0661E9284998AB98F1DD4E042B63E5D559DAFF754BAD59DF45
58D2D608FAF16668DAEAC1B6712EA6E109CB0C7CD17D94D85644B1EEF3318B83
B2050182EDF66FBAE371392DD0E59980FA8BE2BE136F12E78B7360ED81163307
DC4AE783223EDFAECB20D4B63BBFD75D6EB6A63CBA788D18B0976D0581EAAAEB
4173E6517945209973E0142B0C866367FD92E407301632F4E0E55E37EC3D1EC0
98C144D60AC1FBCB365F6F507132D14E9C75B5727D400344644D0C16A555C50F
6826750E2BE97DC29469CD33D9A16897A9B5AE6E69B40D9ED106E55F996742BC
BFA2C222B3D112C7E51C107F52B7D55F101AF9499DEA14079C31D65CD98FA769
BDC5386A26673535969F77CA4E19A46F1A7B1DDC2629AFE8BAF9435EB87419B8
8E20F71C865A3C7B1B589C0B5BA0C811390F929AAE6B10F2CB000A0D128B232D
9A9E24006A4FCB9FDA259C7421FFDFCC8077AD05D2502C7F4F71C4E72E1AF0F8
FB33760E8BAB3C99BCA59162FD934D3BC1ABC8DA0E68B876A3D20B11E908D9C6
195D8D3E9BDEFB663D03586210C44793F22D21EA39CC104695A06D169F15B92F
B1507FCC7B2AD411091E49BEE16A177AFE57D15B1C247D4DCCA097C1FEB8776D
7F800C040270B499862D6716D990BE8C78B89D127E5DB62C8691ED62D06D9AD0
43A69774FFC16ADFC9E6BBF635DFD8CA407A41CBA205AC0B51C5205028AE5DA5
139E8DBFBEBFF644019D08C6614925E0BBCC8F67701204263E971278EC573514
392567A8297A8020CDAACDA7BF1E9DD09B987DDE9A64E9BBAB13E9E3CDB2F0D6
755D8F7F5A6F1A68BB974C12EE5E31D9C605601059C696CBDC4AA4D640AB7E1E
74DDA3963D32C8CF1C8070E2FF25C6754963E1DDCD4A445A08ECB175BF51FFEA
9821454CB759B3D82921AB4B9278E652C2F30ECE53B8E26BC4A7D233105724D3
ACA93435328249AD9D85F067B5886008F1F2634C3706C594349F1E95F04ACC12
90C47C2EC1C285506A1AF4C7592C471FB73047F2C5D0CC5E15ED402A0F46027D
DE61EAD03E8DE7EE3E332FB47DC9991921667A93C1493DBA2ED817301E6A2B3E
B8267280CBC611ED14FB2F017FD1CB7E1E23C1459E378441B6291EEDEC8689A9
8633C9302B82763D3C8145F36BB0C81D710393EFB379209FE16ED2175265D14F
360C65B15FC344DBD4BD58CD7D2FE44C8E7DA87C2F677A6BC2CCBB064CFEC333
BCFD5A093BAB44BA86FEBFCCBFE378034F7433D52A8CA1EBC4E87387ACE2F4D3
1C0D4E1EFD2E59E5844566E465F431B5E2B656524B6D481FF9A3F2D25FF1DD76
5A0A8592C49F5A97EF2EC09D42FD75CE5F5014E8AD39200BFD0358D8D606291B
417D0B25542A1250212295A1C5FA6CE741245155039166B80818F6C1C57A8074
F01B52945FC6ABCF3ECD8410335AE6CAAA4F70C6857BFAC59ADCDFB637B2AE97
252B52101B6F33F63BCE5AE0E8811A1506AE38F13A4407E66CEF10819E7BB991
FBEA9F50CF9A75519684785B73039B66EA4D2CAFA158C9D5FE5DF0E2B1247696
8B3C810EF05B694C7382FFD55C6C07438705279946B3ADAA44E8AA7D7C5CFDF2
809CE997E956F2BEC8DA741392C241057A119BDFBDC3A4FBA76BE214AC88BF14
CB44C210BF44141C72291EBB12D0D78524FD0A6B0F8CA07C3E042FD932F96E9D
5D5FCCFAC2A074E4B55A869C96FCA78117347B9CFA480FF4A5D7494B5CF90D17
93F98D7EAE541772A11F0A66805BE625BC8BD48BA694011E44673A17D6C5E320
3CE27B1D97ECB9DFC9F30363291678A7D920F128855CDD17E51BD939D5CC041A
E13DDC40D378D93B056E4D96B1E598D94C540B0BBCC5FF8C62B894E007770954
E9957E64833D626DC831F868C5092BE089745D082DFBA7395913C4322BB882FC
FC1E029E64293585DCC8F91CC8B8E94D2D8BE7C5E8AF262A9B23992492626D80
3FE071A2DC7981C829121E731194F7C92D83695EDEB559F0D4A8F736C915558C
0E2C57645F8F7284E4F4002D9FBB4869162DE96A3A959E2C18AFD70D490F20A4
305479A29C6F7C694517271F4D577F67F6E02B76C71D6809A3ADEC3800693DF0
F27FA1F8923C3D6A3D02864609665BF2695A44D423EC8E19FC29A0F681BB7C42
AB16F3DC305839233A6D79FF1824077617CE70D065293604EBE3F2A343D4F080
00C6F621EBF52AC5C3627A231EDAB2CE032DEC53C70B6F333089A7C4C7B1AD1E
BF980096EC4AF841E416430F8B4406612F40493803D47C96A2745580EDC957AC
4291730A8792BD30B2C7B42D4AE17CC760410E1A0B555FC30C8CC7D8AF022DDE
36A1D32DC13EF721BD656F5752CFDE4501F8F7D4DBAAA13CBB93874433B04EB8
D0AC3511A660FA766DABECB800DCF320C6AC224BAEBCBE2350536D39CB187F38
C7734795D322D9CF120FAF88391E1B6BFBCF6DC5C4B7756E06B403EBE8AA158C
45390FC5BDBA029840F8071D67135E11DE300672BE196943B7DFA43C7D8C1321
057533D40EB0EB6973E8BA5BB736538520EC2DEDB6AB98AAB3B2C8FDB9A87D88
D52B68DA57097C8EDD95A31CD2A52BBF99D226F5829D9A7C2E01FC260CE9AA27
80337EEAE22E9AB830108A138E760F4241574033C78F37B59ADF8688A69754AC
A70F3D7C5D777D6B1B4021598B181CA087227D783A0BA41DD693AA5276475B87
6CCE4471CED9B2FD80D64C9CD389C036BEA9EE6DDD7C56066B31E290454D6D6F
0B20513119A844E6A8FB598FE53D075AF89DF7E89BEA4ED9866C07EA2D27A88E
8BFF0D46B935A93DEBED0BAB636582D103823BEAC6FE0A2813A357BBBDE0A70B
1DBD9977A5F4C77183F4CF9B18D3648CE5C15774C836A0A50D8BBB2E0EF842E7
44D6F2588DF12E619141FE6C067B4D3E4FCE173420B130353EAC9DCA92EFCA6E
083C0034671A4E268BBADA4583A16C3C57DB5A0B166B98FAC5C4F5BCA6531717
DC33855501EC63C6798AD222753ED58E344E9105D9412F3498D5813BB11DB09F
61562FDAF5B71B02810FC3BC4404EFFB1A389A3423243DCD9895C6238C883492
A1DA82310E6BF4F054EA47F0C0EF005C040A9C6FDBFBE1B6577633973D5A0917
4D60D1DF44958A1F7695ECE82296DF0D272C713BA3B61747888C6ED56E0810AE
5994B981AE7B6F030E18F7DDF0988262A9ACE305733BF769E7EAE2D38EA22941
B1A3B4FFF7D83FDE5ACF3EB0BFE5228B76C00058434E3250B79C6B1BB166A82E
FE254436F63898712D63BCE010820B87A82779ADE503EFBE1DA2772892E691EE
8576E76EFDE23F5D38373B81323A7E861EF6AB8AEB55CEFDACC6B86B8B1DECA2
23B4FB7B82B0FE9A4F5710BCE38063798946FEADE8B24223F5B5025384B43478
A75304F3BBD86D910BC5A1CF559D2ED72E787FC95B7327208EC71CFA4FD15002
6E0398156AE3FB3294437151D12C10153203F57EE8542E5BB4D820B1DB4E2202
A85718270018A852D0283044E9909CD4A49E4600DBC7FE9A727D18EA999ED4D9
93E60EA498309BD9EF487733FAD3B703CCF8812EE7FCD94A5FFF03959033FCD2
55AE1A59643044E28E299521ED007AB89F1C77E0F1D1BE46155FA2C45930779B
7E7E4FEE67471AD76F25C6AB3EED42FBEB0E316AD709E2AE779AAE53C60DE5EE
3A1E09CE2A3246B9B5EA106E3C612FFE2AFF6BE57E0827E470D7A1547ECC7FAA
C1BDF18BA40885282382FB1854E2317ABB61D9F28207671D7C5DECB586ABCDA6
A329FB5D07459B7E6C66685144EA4A66012C81B8CDC9315FC86703508D238027
8FB9B8E12B4546EDEC23AEFA3FDB17EE7A70C7AAEEBCCA32CB4A80149D5AA9B9
E08A9ECD62AB1FDC982ED7D8A79E6435D7AF354592CEAAEE1849027B06123A1A
004D39C1DD6D8FF88A1928EF19539813DF686F54832003E5688E20806B1AC588
986BD3673FFAD5EF6D07968BBB7CC49699FB8AFB9275E66A9995FA5B117AE914
25C30A0B85C98BEFD4717B42F60131BC8969A7E52BFC97C3C1CC59ED40A9743C
CD16DF8EA6C543FB1D7EDA23A93106E334C67A08EDA457EBCCDAA30204CB7959
E437397D97A33B2F0742144C4CD02ED194C16B0DDD9A95990FB45E3B2D0748BC
05B9CF7C911D9DA790DAB33E7A62605E65509A8ED6790A538D2731D40F4BBBA3
557362AD0A39F29E7E10E5CB7C93B974864CDCAAC830DD6D2B2353019C8CBCEF
37982223488CC62356886E9B27AFB1ABFE628A6567768FD3A5A6E0D3078192F3
7463DF15E7FD87D172622D47714FCF9E016E9F68B17D0305373271A4C069322D
42C893A30E0969093EAEE6A4764B47C15B0CEA5E5726B81B7983D6A21FEFC0E8
8AF09C8E66A6F27EE257E88F34E6654EDFBDF2F0C59395762E2CA39FC9FA837F
1F4E20F5E34DC340B03B65DA3AE06F801E6C37B04B18441D4497E178FDBBBCD5
7B4AB80E8594BFFC04C7F2EF1F1ADFBE5413CE8D008A7A3D4787A965192CA6DC
F61AB5B28E406FD90CCE1723F4584FBF0D451CACC5142CD5AAC12ECEA3435351
CF41BA050C469F1775237FDA7D6F1415A7C0E873965DD7EBFA9023144D99A71E
DBB90FB84380ACDDA68AD7F375E7B1E925556DC91B71027A8CD0E6DCF56E6B16
A8AF58C95173C09068553725ABA9423F4B268C5807224525E070888A77473C84
F15F2BCD2249D705EF92A9987F2000B6BA139A251BCF348F2A19EDEBB709068C
E06693E823D2064ECD6E129C444C8EFB61045BAD96270F0C2676823E37CC6630
F796F8CE5ACC4F49566EDF37EE388FF8A206103FB8A08DCCD7061AD53A8EF8E4
D0339BA198B847387ACA9492AEB601D13C01F568CA8236BDEECC2BB47D1CC5A2
28D37AED24A6B76E20BFD980910C422AB89549DFC533F5B87A0D016B3A67CAC1
CE1953C9CF733D36A534AE14DC6B1CFB81E838B97BEC540629204632CD9F913C
475363EED630B3B78199AD5E1B2A9E8032747E7283FCFD9F1B3523CFC02DD50D
55C0575EAF4EBEA0B665A78AF79CA8A0282200D23FB0EC43EE107184712359A9
6A8FEF977EF9350DEA65494BA63540CBA2C8B0801F796B491E1E20F202321AE8
696A2B452CFB700401591D51E3AE969B7ABA98EB37CB2C2A8EA5326178611E14
16C10094C819D594746B67554206ADA08992CBDEF437DADB9EFAD1A68A0C3496
BCA768F4AF8016D7A65BBA3AA69450135DBB27457FB4CAE16197347611DFE63D
A3C7C5ECA543C0DB4273AC81C68EBC2B8D9E9906F4B5E57FEEAEC867BBCCEA84
568ABD139F70C1EA8869611D9D4D50EC527DB8D0273C53F08C11B87F7F34DF5B
D6232B0B7A121DF149B5DC15AEC0C2F352F81DBD13A927892557D02B087ABCD7
81F10873619010B4C21F46955BCD54FA29C2DE073DFA597ACB9868737617F9A6
0D1F58E74D093D958C784BCFE203F3A7DBB81A0A202B5683587B8F726FB07061
50B5655CCF81257BB2516467D0BC24C0033AE346E2E8110E700A8CCE20183026
D4B921C473289CD30057BCF89FEDCA6F80E6E4D69A0DFF99D86DC88F11FD55B2
901C523D8246CE7C0CF953E081F923EC7288B07A587210AC0C6105BEA2372072
096958431641E18570C8426DADB748842A457D7D25D524AB32E027FFB7349F60
EDFE54F02B962930D3D0C3AABCE7BF840A7A035F2CC575D9180662D1D1E9C9DF
1DA7866A772E358CDEA9FBA4E6D02C8A7CBE4369FC52A6A243D4ACAB37996C35
41108E53C01126C61C85E2C725823EE5D260608D70D7DD6051D43612B33D86F9
BFB8222C59284721E202AF56F3070FC1B00861CCA95504DD63423BF603B14459
B7C691BF64BBBF65BF856CC55D2B72AC6766790C81ECE3210433F48CC7E50C20
D2B4169ACB7B7FC90ECE99FD80496C271B9FFE6B020BDCC75B131B92A963902D
10C5468AD2BBDE03169B37EB84B0D6297FA506FDD296949F8FE9C26D8DCE3A55
72C513E842F42BFBD3511F4ADEB1E990D07CD9D8A76084AF0E901B4CB170B03C
C44F6B34BC47F3A32E3494B87035A3444D643B1ACD115FDFB8CC64ADDCC52CC2
75B67FDE27917F53B28B06930BA5DAFD4DCA68502510E16F64F51F736877EF69
35ECA18A5F86EDFFDAB7EFF35504D578C1E449853FA9B6D42C49637CDFE9D0D5
60A464E23D9991624A9729675A00BF28953EABB831A75EA0C86EDE15204C2A7A
3D0551485714586B7E235C103FBD33C72468503347EA1A45344A43E0DC78100D
FE972CEB594B3F5BD9EE970A2FA1D9D3707D84206A483AC636D1D6CE52268155
E00A81DD292E4CBBF03DE6C212FBD00EA8D920CA5BDF2CC4DEF46FD4A183EB07
660D60FE4C932F510D2933E0819A4A0855E5AF6497F674F2BF93FC38DCE393B3
3E05CA7B26560B82E8E00D5DCCD6DB9A825A185874360EED1C72A524A9E19BED
13D137DFE3F016FAE2CD0B91088F3DE113E86442C14C4F16926330A6C6E22D47
B28A45D6F516078C72A4B155A2715B713EC353CD3955A2080C457601646F7B86
99BE56070C904B4AE6EEA6B9310742DC47A084620AFE85289172711778FD935F
7F172CF5DCFABFB73E4152C23C1D4F3AE318FCF4D6F9212BD6D856A88D5400C8
D857D0E1C13466E5A5BCA3EC298CFB844907A3A2241205FE395D66CB65B718A1
969CD70C45004729C72A770B9F215911C38079495C78D2F00357A3C184F2DCCD
0D253C059A7E16292254EEBCF1DC3E8B0858CCFEA9354CF2A2B91DE02AA2F3BF
31C712CEE0907062FB3BA362B20FD3207CA97F351AA8E0B5B82D49D07FCC23E4
1D496A78F5CF7CF48E450F6CAFA51ACC665AC822D3C2A0315B5D4EC98E088F66
5716037A35F57454BF376D9FC502AEFECF585A351CCEF2916EF79443F9F4083B
75C000F0A58595C268553250F0840DED73043C28FE9C60C3389B4B04D481C6C6
08A124139555341F279AD9208BDCF859CA879B2381682B797F6CD9958E8F681A
66644B1DE7E3D1250B6006640151C2AED2FCCCF8365BC753F832BF816836FA75
D8F39D406362712C641175DCC5C8F2EE505B3DA55B78F2E3EEB3406A2F3E1318
E4C1D8C9D81F1FFDCCDD173CEDBC2D24D8F53A36A3B4E45088BE50154B65E864
E53F051AB83F3EBF4B8ADDED5CD0C8485CADDDC4013D20491032006F03606064
730BEA092A7969C4C1E24E27AA21878331A8EF305226C637A05D6DED456225D2
32B898201992E056954AA07EBC00205EEB10EFA0072E4C6B3F4D609E07B05DA3
C9310324E2A2BF03255BC3E54466690ADD78FF12B33C0235FB06F22B19807687
9E2C6C094EAEAC8280E98289826AA284FF5E4EF43723651F4DA779E4911EF7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE505B8A69335E25F98573BFAC64A02542D3B835ABC68EE4F
0A1436DD48E963348F6F5650666F6BFF72D385A5FB67448213B032991B4970C5
79925CEFA92DDED5BE33EEE8275EEE83829329E11E4EB1E2E16669B21C3D36F1
FCA9535233B0BB982F75ACF33109F8AE7ADE4954D0B1E1802008B39E90FD6AD3
2DFBD4E8C89A9FA5772BD7C4CEA7C8F8272B4C34FD26058AA9E35E6DE5D8F2B1
B78BB131F06294B45300705B786BC0D0653933C657D716DCDE61AEAC6DBB9F5F
26C309EC6AA6E4BDF86680F4004C27DB20FEF95B0BE467B5B7F436B45DA8033A
3F755FBB8515426BB432CB6210B93F60C98D1DBC60E48CCFD9E1AC3BDDF3FB69
A81F2D36111B48751795F38F735C17DF38AD4FDD0C5FFB68595C9DA26DF72CCE
2D9DE1746CD44B3EBA803DD8B2F2E32BA01DF06CE7D42C9212B2B01EE474FC6E
4B7F47342D876423543604DDC5C2895A1C304D5FD05859F9D22F04286271B0B0
47E7337B66EB39E4F675D2E9820162D471EF229009DB3D390DA87529CA619E31
43BA13FC942C261D738A72D9EDF590013F0B471586972004FF7E9A8751D10054
867B96D565268B60A93844BB45B58D5B9BAC0B2865D54AA511982CB8071B2584
632DE0616473D1DD73635F2A6D25FF8F941042919E52A05B12F842F1D6B9FD26
377E37FECC26324BACBEF8C91D33E6F388E1C1C7839B309F0421354ED4AF83E7
2EFB01220706DC806409EFEA6AF162F0CDA852F6C2F6D03BEFFA448620E2B165
D805F3D38FD25271970060C270EE7CD123372D9200C16AEFE3A6FB08FBDAB8C7
18B7BFD8E914BE8BC9661C65F3AC99B44674BF9B284B0B1184C46B2458B341AF
1813A27004F390A9E7BC916F912529FD8391F01E14F3DE67BED8655873A59297
163D50C16C7ADA4B3A932692615492C046257CAC1D6CDB4B5C3DDA2A8BF0D987
8CB87C82F9B1263614F820AA96C05E737066229312A0EB520CB441C4FAB82863
5695F22CA1BAF21DB5A75AB19CBB23E87D004DC406CB53A08E39EE883EAC4B18
67AA06F893F188E68871208A74C74A3CE3688EA67B3FBB117B5CC4CA5E7CE82B
FDE9CB71B381230434B4CB0250E88073D2DC3A3C84172945AFFE17DEE3003001
271F0C712A8A64D56F9D6F55E3AD08B8905F82A6EC14E2D3BE2ECA463D8456B8
2B00BD0F4F464540132D696073AAB975AC8121FC897D208AF8E98A4B3C055C01
682B8FD8449B245CF0643F82EE4B4F72CE672FA7CD25C173BDD07C06963D8D87
0EAE23F5282724D9E355C751DDCD61AFE7A13E3FF281CF1B3CAB415B034B567F
36B473EA3524712443618E95075C017676548FAB8AE734175CDE49AFBCF651BE
1ED1A1F896A426A47F76C131F303611B80A2750EF70AD1E79AB71ADDF9A2DEC0
84AF4C2F74597E8ACD6050ADF974C0B13089D0BAB9B96725C4BD17221685B8ED
E261DE2A69EC5C655883100EADAAEB3CD094921E987BC3B26BF9A41A5416CCA8
13A309FA1CB3F49B4C3929965D31BB3CA358B39BCC9632D1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A229961ADB1D5023BD93644E4C23176BF787664F
CF245203C8C3E557669BDD382731E334C06F4B6EA145D5DF351211A0511605B2
8C540290A08A304CB1279FEB8FC14062F495A5EF2072B2957D98A1AB2E4B2A21
6F53829103F9CA4A8B6EB5766A44A7EAE4D5967EC3646F54568E9FAB28736D70
AE87CA7F3E445B1F49315332AC4AB47D53A418206CAA262848C9197CBD2CA0B2
23F528853822A88782EE48FD9AAE7E228A0221B135A53635F2F150996E2ED5B7
6D66912A9432D296EEFFF2D9E6B8CE0113CB4A8564045D99AB81C28FE04E066C
95471CB6E9DEC86410837C2CEF2D87B15F7098337AF640B942258966D3B5D7A2
2721A2F1DE01EC660EB6D50DC525053A939994FA0E69A7CFA307CAC51E54AEC0
1C1C98BA22C814A81F09FAA4FB6B6B73E2975FC8286359A401CBA9CE95A1D8E9
1E9E1B0FEB4E78B6D26FF825F72F742BE915FDCEF7D674E30640C96069F6F845

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA411984C107C8FD9285
F08FC3C879AE6D42023BE0E114B374F049F75FC09E974E64A63E36F76D0DCE3B
3E57F4A1C80AE684E56726F52F4A49A022808893BADF86ECD0EFEACC9F5B7E84
1DBC5A753D3803C89C438B0FB99CAF607B7B16433C977215E7F78D80C54177E7
D853C4EB05C108B4859A21AFADEEDBAB163F8C1C822C4DA3FB1A29EC3ACE79A8
C5A00293FCA8CAD6BD2A94098E88D45175D4D9A88D0F77DFD5C14FD6081321C7
AEE0F7914B79B9ED057E292AC7A96CEE551D96F4D85369D2B4167C0A622AFC28
80C6D6FCF36412F8EEC622F2783C9F1A0403E9A5D876942803F08147525ECF7E
0304D3BD24256912A2ED3C59B32CB4091040E21EA8F9253E6CB7433656B87E1B
0A17BA09B89DA54E89C36AC72560140421800FFBFCF4372B123AB0EAA5A28063
EA72DB6C8E32FA349461C1A8946B78E05C110976E5B4B81BD89C82D81AEC14F6
8511ECD14AC322A438BDBC4262A26D679ED4D87F89B2D3FF1A88AEC671EC30FB
4DDA9E1BD3A55C4D59BBFB7F5EFB232FCBE3C721D8D181B02711EE2C105FBB16
BAAF98F469068B96F7ADA96E4C628D450E7E1B4025089EDF05D020C458C7F3C0
A9E5F676EB11E606954B3A3613D4E1DE3727C04BAD9177A42914B371F4FECE62
5C47EC539B20F4FCFB72DD0EF45CC71FFA185F653F299CF0858E25008D1538FD
4D2748FD791113395323560E169AC68D884E15ACA3BA6934ACB18CFB0869D655
CC9E8B7B2A883E868B7D9AB5F1966D7364A38F999D57EA93937C58C1343F917C
4B77C7BCD394C7A7C155763DEF4609925F2B5D58FD32BB7BB54CE2DC59D09E42
CF83A35DC7802A111D96E6C592F5DA313DB18AEC1CBD734D9C289A53647EB6D7
735D9E91EE200FFF4250D413CF779E46A1A18E239FD522EDAD8AEA7F7EC5D653
0B3F2D2A59FED4C52F3D93BEEAFDDEACCA99724FC6248DFC44FCA9723223CBAF
554E37F1F63A7CC7241B6A3197C6081BB1F3246540E952D3CE37E2F63D1B34FB
1EBDC9A60F4AB8C27EF1D4E65E5E97328618BF64DE4BEE2CB0F263EF782C0D49
E6AC6384AEA13283716F280C3478C8EE4EA63876BB37A5F17C733167B2CB7DA2
0C340ABA91FF0B3C926798326D283B4A92B34FFB6273EF4F8128FCB12A4F2C8D
13768637D078225DEF89BFE7329F2B420491CAF1794C18E8AB1DEA1749E877EC
12EF096A2BE42692EA401E2A3A11F32513AB4829EF58D62DF6C4CD5658D8DEE5
58D56E17F13ED15C8E490FF120C6DBAE75E3AA5B8D06A527BA83FC7759239ED3
2C9487CE5089F76DAF6F1AEF63D276707539A79C0AA4367F4B1359BFE46E90DE
9ED306DDA195B893F42B5C037A98F21B48AB50B63BC616BA3F3C588FDD7480FA
2A14FCEE4706AA003DAE9F92D5C55727F7AC23F58C8EF808B093595E631544CC
051BAFED695D5C51797C4E9E14EC72010DB93C1EE96A8C4EA4856637A5669681
D8058179F67449AE6584B538A32295BC5C5F40DFC533F5B87A0D016B3A67CAC1
CE1953C9CF7334F7F3605E4426785042123F5784844950C5E30EFF8683D73019
7DEDF1DA5A31B8AAF9FB4F4C4E0E815AD1282D0003D149F5A1A1742EC110A5AD
42B236F512DE383DA77E7ABE6662843B857DF4EFF9DA9D4652CE666141182F86
363104165800E6AABE35B01B991AE910B7DC821CFD8A6B5C7F4CC6FC03C091CE
C66A50A9349FB3B1C2A695930A19809C222D522ADC89CF698C61B861F1B4CCA1
2CF4B2481E472FDDC90C7BF552E25EFA727413E0F7C59661F1ECF4DCCE59D724
2984AFC94A2233E590A733DF8E98FBB11F635BA1B2912109796C1C7ED9476FD9
4CA6A05BB8C3A756CCE5D25F8D2B1B99B73FFECCAF7C7531842B95B7A4A67149
2A44B7F43E4219879931BEA2B95C7510EA319DE31DA5E946E39856B07D81DF2D
0C98672BD99C91405F80083EEFA4F53DBE3356BE438546C0FB741303E40B31EC
F7705509E83E336BA0A9264629A6EC25B94E589B80B54A3BC1358EC3FA22E15F
C60EF3EC60091856CB963DA4B845FB3276FD3F0B755A375F5C9D4F03D038DAFC
2F7B2FC44D874EE1812B3F153E63FE095A87CC113B930AC5E5548B3701982522
7FD74D17B8E54FAF294389E3804F2D8827B368FD56FCA8E01B8FEC2384E26B98
803679524D46A5A1BC4BEEC335A5C78E90E121BEFE8C3E1729FA4353EBB08AE3
9BC8B715A541515BA68D3264DF63396D5C6B2FB989FFAAF363FBCD811050AD49
BEC1A5CCE5CF234EDC9466F1B88FFEF31523001CE48D8F355B2BDC20BDB11845
0F9F9C13AF26147A6F94636839CF1075286502027833484674C9ED2EE44D10C0
CE6B2EEAA9BD1B7182CE9151EF2A4AFE4FA32112954C5B86EF7AE3D015FAC570
F6596AF00C0F5C7D6336E0E19CA338CCD852E4AD9EFDB3784C6366C4A1EB3950
6A273761A898F69A36FA0E6ADE17A52A09061F578841058F3FAE9DDA4237FE83
F267FB2E492AFCBEF4C8E9DF3FA6967F6F5C9216D1F34F1F9025773C7EA50CD0
1DF13A42E9491468078630B74E277F5C32166AB539082917BFF7EF652D589681
C4958EC2FBCE0E01F764EC4EDBF1A7E60ECE54CB38A7251F23A0CD43453352D5
C5AB3E3F4D4D5CAD9543A3ADBD3DA129B2195F29379C4B88C50DF01F591763F1
6FE1D1CAD9382839AE8C789A6339F7D36DAFE163824896DC2C7B007941D39239
CFA195CE54BBFE9F13E4F119193F62F76BEAD5C3BEA1E7044636F7D3BAD00C99
38DA2463A42D22D0C888082F3DDEF6558D68EEE57DD7DE2478A2B21894DBA290
3489ABB6B2EB9F977F3F4D690B31E8F6E08514B46890A7D87B06DD81FCC70783
17F01C0E31E1A4C310B0C4E5DAEDBD08EDBCBC3BAC588F367E850F9D9D2A9F7B
17BDC34F34DA91337E5469B32C9ED1980C4CB36101226D4929EE7C9DC63EA8F9
780763E889B13FB2BC0150921CF2C5C11A3A9A52E09A006B8124A80BBF26C1B0
D309A6E8E5F3879805D13FB270799FDB98850AC5630E0DB9EA544860D688E9CD
F25E98769FDA84FA98DAA60F8B7B4B80EE209CC66F763542D242050EE1FD5980
C610C2AE6F94B0997E15984F42D43D629178D72F01CFE1AB79E6A2F569230CAF
55EB6CF686087DE12B3D6D19E4ED3FC032610EC4A97842F2BB59894122796E46
19F5CE7FC3B92ED8BC604ABBE0575CF97D126E1669A54A08243D46A59ACBF3D6
48C1AE05E9A2A4432B7BB69C467659C2247A0B25217E43C8C3A9D70992C1F31D
C6753222850ECF459A7BEFF8CE272B577AD0616D09DDA2A16584C8D40E7F673F
BC859CFE666140D9EA8AC68B343772084D45B94B8234219A28235DAA4CAE0221
E2C18D9ACEC0622533CD5D4DE4A73E4EBC70F615B86F0F94CB2242B9A1A169D9
F8F288743D1E3A6608CD85F75F066456236C022022138A9D77F352F917353464
4BF7E5B57B4024BF8569EBC2A52B22A941B3A6E25E0975F1807213EB4B15F281
7F78C65E88EAAE554A620FFF220994D707C8408749E0B1BE3E1A0D6A43944242
63E5C1227B11144E6D9936FEC600F494EDD20F9963136BB32D1B6B279AF3AB9D
5F77E601BED695A5684A1B63876F4735431DC5C43A3416B7D9498707C04E9115
D411FD74AD771B597490128C8B11A8B9D7DC54F36AFA934E907162B395AC6CCE
2024702BE0D79C81597D49BF022A2D851A47A2D0980909604AB40535E4200380
CBDCA96015D3822CF627EBDE4B073A3D382C0D49DB776D978DBEC0E0DB9C4D5B
396D449686339482AA1837850FE2D62A37076A214FF23F38C503ADFC71C5F898
C408A7E5479868EBD29C9ED0280B0DF0DCB558FC69B86672F4800F84EDBF06BC
D1FC75BC0F25F7863DAEEA197452481FB78DFEFDB25DB9C1715546D5A01E478B
28EDCF596E49354927CE1CA3BC97166513DF0DD4BDB67ABC55516176ACB9C1A3
95CB124A089316735E3BDF0CD8E74DBB2BBB4DBA7DCF000BA5716D4C23C75336
80C591C3F2AABA930D16B3E035ACCC32925732B3EFD6FDFA76A5EDC83BFD9948
87B537733C6365064602FC128B6FE1B7E2FCFD2FD1A3676A2E5FA0831F3CF67E
16AC8F8976E9DD1178ED7A8ED2A9A049F8D6ECBCCB7AAA479AEED2F233B51BF3
D9A2A91F226AF6C4CCEA67E397298427A0A7A59C4ACD748A13881C130EBDFF9A
C8500084FD75CB36F23C0BEA5C55AD278CA8D55637BCA0113472B8A6F1188617
4A37BB8BC122F8F3D7E5EBD6870DE90DBCD8AB3972CEF5BC502DB98B9C81A16C
EF4A50A48CA9E1CB491AD7475792BDEECEC4D91D676BB374DBE6F6DCF9A3C3CE
D6842C356858594C63EDBA283BEF68C48B1D5BC0A9F9A1E08F5F5A67D699C2FD
288E2840A294F94CBB55FCA7617F2744370D43F5E2B9EE58690787848E6766CC
8D703B64341ADC30B47F91282EDC52AF3AB927F3D32B1842C362C65CFAF72D25
E958FD536F7262E51BF95F2A67090FAF972407EBE347570AD63D00376533B99D
E6891224A5614BF4EF1DD2FD31DDEFFFB31877BBDA711E73F6CF45F31613A24A
30023BEA9A207AB22B9A84DAB00C9C40F7C6953CFF071E1637F543A9C767BF0E
BDCE91305EB05249562A4CD54490B02C9E0C18A6CDDC9846DAFED80EB5CC9C2D
3BD6BFA858DFD28BA7367F8CE68790E465CA10C5BD5401458A9F79AC19668143
123EA5A04FE3C20F7835E00413726E689E002C56B3DD423BEAD05D75F6F3F71C
5CD8623B1DB3881C6D925C0951C6696807DA71B2A6243E6AE7CD6EA69488606F
AF9788E84B4399D4C62D85B43354FFB487FDEBB3F2F05D1930A3BC84A4B0A07B
E87C6830D19D19CB2F97304564CCC8D838ABBD910E13589CF5EBC5DD20C62F79
E7CD714832ECBDB147C54FBBD70E578DD1B8E0D0CBFB6E67E4411B2C07E5378B
12A51B43F968C73FEE454454EC6D29BDA5F5E89BEA4ED9866C07190F669BDEB9
74AC424C8FCFF3C17AB9B7DB8AF11CCCA7F63CE26BBDF0ED84C9A57353E21802
D01FC0805FDEABCD251A329B0093D81FFA11EFC865939088A76CED8311D4355B
F65D138ADD45B04EA0C6CEC3C5EF6E9C87B23BC17EE5F9289F3A163C87B83931
C2D182EEF0A879549CA69DF4936D96FF7D662428235598FCD6DD8511DB50B45C
14C9B744BD98D8D42978A64051D825D512C6F54EEE069F2D12E8CD0B2F904558
7F1A01F5A732B226AF22FDBB02300FF1E679503C5583354E1535196170E9653B
E0827146E007F30C7FF2B337B412CE14B4692AD3E9BCE009D1AAC39B97AB1FF4
8334E802732D4B23AD08E64CD0EA508DB893617833CCD0593B7DBDA4351CB31A
8006452979E48AAD6DA7B1773F54F95693A5DC3207DBCBD73B067552BD50DC53
426C1306B46F002A6EEECA27573AB03CB34BBA039100AC626DF4085918B91237
93DECF156F4018399C3DF46C502892B1C31CC35457264B5C3945D52B74C2634B
7D524AE40F50EAEAA592F499107FB92E22D07071D76B34DBB969A12C5C35FA0C
AEAF0A927D5C7DDCE03DCCB229C4467F14BA6FBF2402581F6F84BE8AAA3CE7A9
06C63EFC4CEE531EFA8B150CEF52C48C478EADF2E58D3CB1CA23A337C6F222BD
9618E23C7FD95CDB02DC661ACA0D9FA5DA0CE8FFD6E3D0DC8157A389BBB3C8C2
D91E42A8F3E97D7D47B4034E440AF248939790081C2D4760DFBE929FECAA9913
3382DCEC91583A2C59F530DC560BA854234631E80192E51515D2BA0D44855014
654D1A999CAD1A5E9DD6E22CC2A7C10394B4FA2872BB77817D1E2258EB8E4A11
46898DFD4034416C03D9795EF2421BD5E57F37B1C07529D0CDAF240C096EA124
FDA5B87D97FEE3A170D269ACBB27E1067D627362649D82A5C3A57DC5041B1A13
FD2C19ACF31E6E14715CC3BBE5610A2F1EF8CF49BB7B91865638736C94EEF436
01F88970E7D93875080E51A9730FBA9AAC65020F185B10B98514C1FFC6EAD731
2BEB7AF06965DD0E501B8F4CAB74A5F64B4A95DEDCB0179FF112309666BEF5AD
61EB798D2240D716C6A657C2EADEBEDE79A4A4DBDB198C7D06A54BFE71B75777
2EDCB61AAB312A0F097AEBA832EB995E27D36EEE7386A786E482EC5ADD7C3EE2
C7FC6ACCFCA617E5ADE3D0B721C751699D83E88265D7F1B78D3C62F09DB17818
A5F1AD15C37D3EB3C5994CC70C22568949E624D8FE780D65910243575ACA26FD
559D963B070E54F97AA21DC6CF0C51F78E246AFA80E790BD5C16E7C3081360CC
A5AA4930D43C04A454C2DF2A67EAB46B72FFD337D62DEA0EECDAC0ACC8C1B258
E2E92DB4308976ACBAF5037EC19191219B28B56B22AB4FA9D2C6095F052CEC01
B7D399D097BACCF6C9E10E5C10982606645116C02BA07760B6EB83C36829DECE
216E9D4DB8034808F6E4E32CEF72DFAD9C60730CDB6C87A6D62040F5C74D90B6
068A5235A9B6ED455575CE888A5ACBE4C407C9A5B51BA2DE4A99CC2F0BD0358E
F36D729114E76BC14680A03096301E4AED065383A95AD5B56B485C2576912814
545EB4C9191CA240C9AB7C5170EED6B69AC63EE2AB32A29B2D317D76FBEBA106
D7FB803545AED50CDFCF7246DBA338D269EDA4D6177ADE1559A2967E453EA6AC
9AA63C2672EF797C6B569D71D35140EDBF0CEF41E2E467ED1518D82B08130625
B70FF9B93328071E36569CD507130E8F1A2F242264F855979752766874C540D6
43AAB88640D0E9347F6391F9FB61694AEA08DA49E20BC42CB63AAD25E7467AC5
384A146153A376198EB6A60DF3BF7828275184B22B4249C7E9A7149C40D1DA85
36AF51BD0187747CEDD0E230D7D2156928CFC8EE865A632AB4A611CAD82809B7
2668606C1F992A1D8ED0E05E441BBF12394F7EEB8B3819183C0B4D2F92C01428
AC9051C9F5AA344BCA6CEC10B732679DA262C5151B948E529F0C7A21052F1A28
CE3432A48774F657E6CE1CBBA31DD5B6A2A51DFB6604687AE4E6C3FC00077335
72C4C243D9DF0E9D06A41B396DEBEF9C74E4017237825DB5F7B38287124B1DF0
43B0FCB636084A02557992807415CC510ADE3468E921B07AA81F5FAF91E5BC1F
B3E8FAC2EB0B8B4851081B57847EB7A99F9A7B7A1834D94844D6E71620BD36A5
4FA4F01190D208744A52E593570C6EC8E49BD41ED979314ADAF31C5F5FE5DA04
8E15F885C0A3B24E090B54A955B493DE5BE4582B4C98B73630B967E4148136D9
9ADE052793419E5CCC579A53EF65B45958718732BC5854B981DCD0BD4A91BA9B
DFBFE3B71B65667AE5E27D9AC6340012BB6769BCBD30416E874194A2C4AA475A
156096793EF4ACF83A7ABCDB26BC852F5DE03B3D0A4233EE942AB48EDB7E7AD2
91C4F0BECF14318F0C968433143A19DAC00D94C51ACDDB5CD7B1CBFAF76EE833
E519C3715CFF2AC110797C8B2E92C0A1800E4FEE7E5C815A19621A9BC5B1D724
EE059687FE5220B6547F10E5C09F9E499346B2E180B923DD3A0469D988EA0122
1F330746FB913FA421FA364411BCB49DE285E7CCA8EA2BBD321844409FC9537F
03EE894655E7B06095437FEF27B81EB14663E3073EA7B4F3C8F586487194107C
63BF5C6AF68FC04C371C2F50ACCFCD94D505A649104701909913270E0060FE23
E1DD26C9FCD1A6D912D434767D7B8A4C9B926AF19C0DF700A101E6F5D1016D20
34CB499EC864B2332429C9661A98D41AE749165D28DA7E2AFEAD936AE066ABFF
CEEAA68CBDF5739A9E747AD286D01FD254E83FBDE2731167C114E683627E25E3
29840D68F0ADF43FAE666EA92F348B251B150668C4624FD1A83AF7FCB128EEA4
82A28A5F2C678E00CFAC6A5F3EF9A9280384C5533F7843E6670B24942EE5ADBC
27F1D1A6D28C2DFD8FA0571D0F96B18F190A1E4AD02916CD5AAC997080A82247
55C02404518AA498CF0543E39ED8BD5649948DC2AB15DFD1E50FF58784918CCD
F15F9000E546E4D972CAA80BDB3B8DE0E5509ADB513013C14BC3BF884B0077C9
CA4DCA2FB7C7EBBE81AC6285739DE018177CDBDC528E02E2DB1D249256E80132
A72215E735265413B1CB62F544C3791E2FE62B0384FFE09989361DA0D7AB8B97
9BD91DBF43FB52495F20DFBF177862FB7E2AA16B50DEA57563E4E7D3257AA9DC
B5ACC160FBBBF11FC3780E630A24EFB520A6F60B505174A3BA5AD35382FDB4F9
D9095FE29387298581754E13E220A73DC45F7C9A433ABB0C95B092BA558AB5F9
CB60A2B2B7D3726D4D06CAA2CB08BE1790227EA6F673ED5F34F1C1D20B609A15
2EDECFA26874115B2ECDC7317D6A8D4BF728F12F0F85E5554E9E55EC6EA9E821
7A7459651CC8DD6791A341BF41A595EB76C28B15527BB2894802F6E0E5B3B0B4
2C4E29643EC14B471076E26FA0401C5456071B3EB1BB3F89B77292DB05259285
9999FAB76E6EED4FDFB7F4E8AF8B78EEEA35103C16878DFD8D71077571051F78
E2F19FC9A2805325F934D2AFF7DD25DD7D7D3CAF4B756A92744DAE82DB7EC788
C66DE4D9D40638251FE20A5C8EFD39DA710A4716E17B0A64B72719C1AD14481B
2B5150C63198D61A3611651A828C14720C008F4FFA8D3075910926C632218410
3598068D0CFAF36FBB0CFA78A1197FCF102CBDC87BBA43365B631FC5A011CE9F
CB1A8CD9C7C03E8AD35CF856DCB95C747649996DB26A6F5886A43625C6A60E77
A37D5DF30EB0DA12624B76F586D52B66A64F52700746CE527471A6BB5E968EDE
4B8D2EC13F789CF1A4AAEB28A369B462663A4AB57D15D6C78153E9C5533E181B
368CA08340FBCF85576DC46136E789DFBB551AE2C2838982303318BB12F7ECB7
224FC5E7E4377C6E1F717DD65F6A274994CE25E0780071A93BC36DFBE6029F87
8FC59A654615785A05D05D6909EE7D51FE5378A0BFF5A15ED9D04A7D6DE8BE61
2DE0616473D1DD73635F2A6D25FF8F941042919CF810D7868D9E0C4930379FF8
7D4EFAAD7ECB31744985A5A1E520FB83F50F647650E90E3AB137912FB38808FE
40D40453B564B8FD5D5C6FC917E2A4CFA8FEEAD0D3121F61004FBBD05EAB603F
D46909A3D892F83A2264C4FA79369178B57C16A763CFC9BEEC276944BDEA2557
89EB0248216027C63FE9DA78EBF6575AB221C113F8E414A0ABB9B11B3D0DFA60
D4F1FDCE6B39387CBE54C520F44C0510C2DB10CADE05ACBC6787BB5EA465FF0C
FACD9BD10017A51F5781CAA9A414AEEA78ABC17DDD10E2B4D770A890088F2433
B0E8C971CB07C66E1B7D10869521223EF246673FE79AD708BEA8279138FEE23A
7FFD5603B9AE93A3F3B48BD6A3C0EA6FCB062F85188250B9E9257305C00CAE2D
5E87BFE61302B759176098C0CE2464D6436275229C8858737C55E8C217A46212
4495CBCA87983B8C8A23DE804C125D97F7149F4C3F33DCAC5FED08DC51843D99
4DCBF759C9FF16A8E893C28EF549CA3C0F7C8169C35E11BA428CD87225C7FF28
FDCD4FB898A052A0B1A4FD0E3B03BB4ACFE6940A2A8ADC1CC2AE21BE2B99735B
82ED5CD6F0A4C535708D4AF7A08C723C249E2405110EDABC0A0C0091B3AAB071
0DC00D013BFB23ADD7E58713D6F50C4EE4A1724BED4905EDAA8A46A337EA53E0
87176773EC684F397CAFF417D6C412A8F0B0A50A868AE11FF98F7A863BE2ECC5
74316F84B6B883943D8D811986971A6201A63A8D0B8B644D5701348D9D601EA4
C2A10E6FD14C29FEF6B211BD4356914FF31EF22D4E33B72BD8EF80DDA3D368F2
DE00F49673BD3CAF2983DABA4741F36C07704CF1E57A190FECA1C07F42C53E87
33A85F5D1751BA61595BA4880CE60BB7BE9A862223C5C6E41197EA80FB97B8A7
35E82BA885886035E32F00C15325D93A44741FE1EA6FC1C0132B5FC4AEF8D136
49C25047D5A37CC25F49DBD6D715FB80371B38377D2252CF0A85C938A803C624
19A78482CC2C6BCE14019813261209B2BE5BAFB5140A380D6719079991D4BFFD
5CFF4016400DC83E5BC6E29D32F4F4AEEF704A5E8F6E9AD1631F9E304203D296
FD006F2041CB837A1F9DA29079555C100265D82C9C1ADBF790F08E13E483D3EB
2263E895FA3541582667A785AC38CB4C011887694480448013E594FDC7C0D407
5CF23EDD14322BD5347564C463176A0223C98D80CB40CEFFD305298627548355
3D8A07FE60B2E85D5ADA1125B5EFAEC6D88BCDB45C0778BCA0D4AA7841DE1346
6DE9FD1FBEACE7C9E61D62CE0FCACB72E14C2FDB87A97F47425AE492128293EE
FA925E555E77E72F0216B34D71875B4D79B84516E95531B250C3F352B68B3A44
C5A4EFFB389F1BA701C8274C24B6B3A684DDB55A94C6BE29E490A13033C96F3D
D0CD46FDECE92D3164A4778B3F91C02B6F1EACDEED343F64C6CAC65D8218E75E
CDA7292A0F2FBB4F6FDA012374B67D02E99FBA47C206FAB3AE433B5CA20389DC
C90F998103A821C35734F0153950E5F72FF6A8AA6EB410F9A0DD26B8C9021222
71A38B7923957A15D11966B9E435D3C02792CB44A20B258ED67194ABE9DB2D7F
F5D548D12AE567FF26A95D677617CAEE4CA4B282C8E4C909E04ED65CA0335AEE
2E38537138BB6A9C5FFF29E24BDA9D2F35DDD0320956D2148DC7C2D7EFE859F4
1ED26EA3022E22AD612B2F013E31B97F10172423BF5A5406C951592268E393BF
A04605EAF9BC3D8611E3607832D68510008F296B41CBDAC3A4FBE58E4A0A7139
B77AA48D0E9B385193A438B4357D0866EF0727504C48C199E97D12E58178CC1F
0438842223DE23A662482960E68DD0C70A9F1C2526D896AC099E3A80CFFF873E
D6A4217C46957761C494AB9B449F059AE819C2C548749B54EB652F76630E3A62
B63A3562A54144C6ADC85EB548911B66840F812555122B46A03394E895089131
50F65DA63402166F691C9FD7515D76F88B3EC71C77B2FC5DF8A50E6F0C48860C
52FEEFAA70B5953345537F57C8CC20403BCD3BC892094A5128E251260C8CEE4E
37A4322C021122E962CD756DE48DA93798FBDD034F41A5A27B2EE094302A2973
11DA3110A873E6F7DF8F113B60494E325B88AC132D54A5A908B5F2A32F38960F
40797D24A219AAFCC0FA245C6731A2E8E561C63B7BC3147E3CE83E5238AB3271
A5B75ECE9721E484AEA8DEFA2A777D8DC46327C16278EBDA432267B7341E9AFD
5F6E12D659B4086687E740D8095E63F70CAAEF65D1CDE376470425ADEAA94000
C80CAB2AD7ACA1D2D0827EFFDD05D4EF5C4B2E9D77EACBBE3D271C3DD27C28F7
54521E715BE966E243270A5F80A39279C5FADD1F62ADAA1745AED61BB9F57054
887C1A67A03BD63D38DAAB64D6298026C401908F420B0D93133DD2DC58828E00
7E0C19A802A795C3F4D81CFB8F041A7DF0647C4175A9FB3D7E1F335DD114FBBE
B5DDBAB7FA350C8593FB3FFB4653C90385399308DD757F25625D53DCF0B9E238
6BBF0900E0E011E8ADFBF78987B0FF0AA4C418F45F2D92CFEA647A6508A8ED9E
9359B8B197E71BC91760CA2142BEC03AB7FC544C630BF0A1F5832E0D2619B8C1
EC0024EF9121CCE324DBD5304DFFBED9620EF9547592558767041EE4823E86D2
D04B58E6084D3117388A7BC517A62B79D15B613C7179F423BE472FF4F71DC5AA
368E0EA45AE3A0C9A76C320DDC340550973435D5593A75071F79CF9F58F15C92
A6FBF7BB5A8D72DF46095F63990A29877ED1DB307A71C06148C3C941C5621797
FB5B6216077AF948D21F19461C01EB61F3B9FB7C8E37A821C28E4BCB80DD25CA
F8C992AB1C117152E944D47992413B4D7D1EB9E03780803A4FF311D28758F65B
D5C77819E5D1E2696EE70519534343E3827EEE216EC733F5EBF4B339B9233DB8
0680CC93187A2D88C7153CC6668E41C25F7F6B8F03CDCB969B3E4144A54F6C3E
1EBCC7E045A26989E420C7A3279EC7FEEE5B8D8919E0D1E69B1FE209C5F74C45
8DBC2B47BDF624179D8827CA4664F96F7003D7D0BD1465A904D45B8DFD10030C
5BFD9FEB992196F63AC3417C576DEABEA662B5BCED70A87CD0D4798B97D61B2B
B33D779CD76D4DE4A69CB97F313BD8C3043369E961348F41BBC1A415CB387A35
DF5272A9AC765A0BBD8CEA4AD8DA1E1165D4410060824D13F79652B119EE5520
7B3DC19A5C94297598A699CAAE9C9F8FFB86FF1286CFA04302F7BCB01E2EE84B
DA72BB756191E47408B194F0C5A0A86237D816A81C502AB62EDFB6C4B0552007
ED672902C0442D8292CAD8F848007099ADD8776C15B57643B5BAB4968D6696A3
486B2251BA5739F9B229E9C09CF9428E7A631B949FAF68211DD20AF3D34A3498
F21B00999ACC476DB87EDB1309B66F009808B3E847A873C89176E748078A88E7
AE44F5EF74DC514FD192BC3581A31F2DA8A5556CFDBD18492F7075C9C6693914
B9A8F47F30452D5F272EDBE95C81F96A4EC47EA032C6BEEF9F2E6565A0071252
8F2B2483BB3238BC779091D87E5D195DBD7CFB9AD96E1000B85467D359020C43
A00570AAEBD3DBF637154F719CC5BD0584F68B6894B08FDBB5212B3BF054EC7A
E555280860D7F7A5554E5303A733731BAE1FCEAC6DC0C39FC5C37E035827B86D
C28D9CA4675C45994145E4498BD600D62DE637CFEF6F01DF05AB584287835441
5764B9BD69A8174B61269B223772DD50C38E2F028D6DC0211784C5DFB296C590
0AE5237B45130E4710D0836CF3ED8C8A945E9364D0A2E74EFFDDD223B25A18DD
02C33B8530C66E72A87F2C2C77759D9709DABAAD70831CB03B114552BA291898
734BC35B386DD73F210405FA82D4FF4C693D87EA5DCE08C6A7015F4382B06B54
4701EBB9BD360CD3838EBEE69874E2B28D2D25CC9AA17D40E3C0A3855570C10C
2D652B739F819559F2A9A66F35E67F69AD67944338F57340EB171E7A77F97F4E
08C8EA82E98341B6BA6B0E88BBDBBA73A64A421683D25AD6436A70B0C1C43A41
93883CCDCE5E9DEA14079C31D65CD90FC87D36C94C964E14E80E9A94ACB51EAA
6E118F884F366809A801BD2EA673A481F9F8A480CE34688058B459748891EECE
C925D07E69F38364ADE2D588CAED1762A638A1A744672EFD7B79C925C306A533
A8446931C0B495A15E2B9FAD45DAA0E7394A4F14409113BAFDCDF2DD76F3BEC8
E5C8E392F74B77F39F9A24CD51B1C90785BA381BCE9F6017BAFC485D707CAAD9
82C15D834ED8037525FB4F04A5681C5044FF8E20FCB88B47156407412D006CCF
EBD0E5F63029644C4DD89EDD03764A886747BD1DDF0C56D2B9099275B2F7A64C
887BD6424A4B3CA00EA5DABCD95302C49DCA68415FFD480A88AB7A99B853DC23
12424FCEB8F1B6B787CF46EC0AAA7D22AD11FDC64D98CD63A2309FDC77F40B81
FA139392F3546E4A960A24472C2DBB82AC6BFC124A041C05803F3007246A9456
3CACD3FFBA24CF0BB4AF9365A3FA68415F0883F7CB9C22FF50FB6754734F28AD
8AE2E2BE4946D54E1BF9F5B08BB2C93A086F4A820B473B4680A21C62B1C34069
60582537683B4CD384F086C683BBEE0BBA13E42C25930FD48CE731F818AF9BE5
E394CA5C8D84AEACB22DF4254D357F3A7E6B491907D648B724F859C71755BBC3
3E742382B4E62863966D832915156EC79CAA75C87AE8EBD96775BE02DD744C92
00A0413DEBC9ED5366D420385E93FFC102570E9ABD5AEFCDCC32DA4C0D6E828C
70FCDD9539126DDB18D340C2A9068948BCFC9D524C2F3F4496E7D88AE6043B42
8809596B78A21598719685617EB20EA7C8CF54FF6DE26DF2A7C418840BBDA3B8
ACBE006E0566428B1029791405511625ADCD6FAF887C734FB6E0639FE6B7DB46
6E4539A623FE61214D1652D195017688787B52E8D45BB213AB591824863549C2
8BBFF99635A5179E8A701EB1454223AB0FEF925BA6DF2F7ECE5372528327F0E8
2B94D81A648046E1AF5C3566C89A941F8C57D73B0CC109B50D3FF3E6299B294D
94AAF8ADD7F08F2165357DA495B9FB2DC949B0553D06689926221F28E2D15DB0
ED22C3B258EA1E8D74644E22933D5EBE4C195B43BA43F4ADB8FA1D12EA588075
8B0B66ABCB5359689B96E53223849E649F6AE1BBBC85220B3A60EE2CB9C8A975
367ECE7A4A49E6F5F727D96C6F633CD36C95B7AE4615ED8306A5CC70AA78F1DC
3F27144971F9DD3B2E4F28ABAB5F03A7A2F93C9A970D1B6B4E86B3A0EF63679C
D35D1BAA663336DF18166F27FBFA72EFD7E34802C331780943D1C667EAC9A01B
6176AD76F2D67FD1003547D36E0DA51E215709FF69322D42C893A30D5BEF4F72
54543BCB1AE8B9A31FACB97E8871D426129643DCA08B4C2465CF0F115CB6D020
EA583C2B3D912D80CFF0796A8ACF06A3700FF9118231DC7FB7EA5E15BAAE0BDC
C61995F8CD9792FB95207ADF6C83603991640A669776BF2BC7B41AA00DF7A314
D70CF604C0CE208637656E5A077826387909021E90A63242DCD4F182A6A4B76D
21676E2413F24CCDD669EBA8853C695C665F45683C780622FC07516C846CB94C
C3C3A9A1ECF89828149745DD561C9E6EAAF411A29D75013DF667C9A787082757
EA4E767E0412B5F9983B7CBF78F29A9B8AE282CFDED6A995C2EA254FC0465833
E13B768E2BA92CE70A6824D6B328CD89FEE0994DC62687079718EE927F118C27
A333904DC309FE38C3177D03D10B4D07298B84D3DB15F540BECB418F547292FD
6E15A7E95F13A1934AADE1CBB4999D8A915E7FED81140F55CAC640AC8506AD39
717C1C4B9EB0FDF13E48DCAE2405F22AFD3689C4DFA264B219688D851A66E102
9583CBE1986746B64A1FBAD528ADB4433DAE898C9E180AE76CE04F72FD23A3C2
36080ACC735BE93FF70FFF0675AC6C8238797C1345837D666DEA3C36E5F18466
EC591F6D7D13DF711A998338891EA5E79E46FD5518684D54178CA395EC3FF2E4
7B530F953DBFEB3C8D7CF797279EBFF089A67669FC86272C26181EE5D00ED29F
B770BEEC3EFC7109D062B3172FD467D95FBAB9F1C060435FC4727439EE55601E
DA7A8A153E24C9A5B11A1D6A0264342F04CCAA4BB5A79A10ADC83737626FA23F
E7195F2293F587A18A1BB668C80911050D26C136AF8ED60148D7AF6A6C9267E0
59049DC5CA318072ABBF88367653837DFFC1735E1C6FDF84C9B2E9E9B5221F89
BC2DB1381ADB11431C97A8DBC052426E3C95458FDE3DC7B60951DCDAE117C4B4
C84ED93CFE8F6C686EA17C776A02AA4E9514F1333E90196993EE9BCAB5C0836E
768D3B7BDBB412C05DF71EA942B886AA18C28E9EB07E4258607EBB818F5FA120
E88F97EE5D7E413582111B54374B5AAD461AE38DEC0284D781E031CFD284C968
1092D74B36F35BC58367C4A05D46BC73B2B3832000A800E9BDECCED09B50E356
E526DFF66FBFA709DE2661F0F3C2F479FA651F018A812EB018C3AF6DDE702806
569D1DCC4D3A4332D2F5AC8ECF03708130A5CE31A6EC915539AC277BC12C19FD
7DB788F0DD444DB29C75616086FD02B5F5BFB5DD7E0852804435EE83DB86046B
CB38A0A3D2BF4B3869C5C3D643BDA4F116CE21C2847108F46241B1E077EE3B44
52678014BA1821D88BE7BBEB9F20D53E34574FA61C037A6F15A6D7912F301A8B
999219AB9BF6F4A24533B1B1ECDDDD6694637624E926749AC021F4F38BEE8DF4
5F5601D9477A7DAC80AF7C8244917DA635EEFA010F61D05C5F320357DB771BD7
A674D75FB486A911840172E028189D005070FD4D481045801264AF54701AA1D5
F9FA4BD21778AFF7DBAC1F9BD167FCB3E2C3D6248C819344C9FEC6174849C3E9
DDF0C6BB078DE5DD14AF26D1AD82F3110F12B71DCD8BC06AF8767D9044474C21
144F5924CF474D50516809898ECE828DE881C1E2AA4A85F490D9704ECB039ED7
624E34F5532C5674B8E4A625D521FF30633D9E2844494A36F234BF9A8E21EC90
8337CEA9731946D7E555E86D6E19BE443270618BE421D6C9101DCE217CF27274
8BB9CD70068848B095A2F11E5AE7C363134DDADDF22A63D8ED8A8A7BE4B385C6
8B2892EBC7C02404D5341D337B72BE2F3547F7B899874E3FE52BDAE491C8EDA2
3431F8ECB06CD052B9BFE9F62A4A99356BF92526C5A213945F2E889DCB5CD540
602292B7257380B1D778FD3049239BDFFCE02B2F6DDBA32D5FF4EB96117462C3
BECAD4C02BB8C4AF17DD162515BED498AEBDFFA77AD3A0FF06CD8C7397CD22F0
308E079E5AC8F64873CF73121FE06DB13169236EEC7E3C7AD1C2BF07A67EFDF8
347448BE6E53701CA29972CB034A827124E8CACA8EF9F23F58D7EAB9092DDFFA
E53D284F6035E6CFC0BB2CA60F74EC613F44CF34740F5A1AD6B33ECFD7F0FC74
EDAD0C8B6E264319025D41069BFB4E7CFC47E55CCB73101601A59083BEBC849A
C224E932E67FF3154647C61D3144945A87029B1592AB90F713D72A2C77D678B3
A1F3237F7522F40539CF2FAD15FE866F5836A00A3BE60BE7772482920517139C
FC2B423322A0AE12786688C1D5C8740F766D9190DFCE704124FFA8EAE43C63EB
7DE075CBE059AA92F0C3892C1EFE4158E007D01934352D2B78A726A30E938939
A6B9AB43A5217E0CF798EAA6DAF554E79B1617EBE26BC966C81F84D51F465C50
A9E888433EEF640F46C5F9DAA43E9581649B54778C8D3E751E2672FCF8781942
D5A066FA12234CE94B94CCB6706EBDE3CE7C09CE1C2450D8BE5C6A79E97D62B0
42D4894C2565F7A4D16243A6BB0AD8D5662A85EBD7CFED55722B12C8E070FEEA
2648A9AE95525065CFD4F1FAFFF7CD0CA9A0EF849BB02EAD3AF8F83CD875E238
9AC1E7CAF21C1A88B6B83084124419E86CE0E18B3140C530FB693FBC926FA731
ABE19EFB8B984474678FAF062FD42B1E2DD8A662380F94303C8F8E47ED3D61C0
10DC1BE66B0FEBC7318E632D6677B9B3A12F3F5ECBDF1082D8EC9E522BEFDC30
C1061631ED1633106A3562D7EEB74EB4A7BF5F91BF124F5547EE4C5B2F9DC83E
6D18DB4FC12F7A8E9820207DF26473C9C949A2D730C02A5063946E868A53B43F
C51E04F40B45F0A3D5D3B4F2AE14E7199BFE84B55CFA5C5D53627386FA021BCA
6D60986E2D7301BB1FAEF875BBB8646743F2A1E9FFEB2C9E4F00A776CACB3DFF
8C1AD8E193457B563750382ABDCB60B310ADA2D2631C82AD38D03359238402F7
70A9AA6B97E7A7609EEB5EC48882BCAA45727AF5B1CF8CC1DE4A1BA0D9460DBB
9FBF6061BC6A5FAE1F8F869D07BD8A2E4BB1446AE96A1B467707AFC04ED99A79
DC1033D39B162FEAB15787EE8E662EB91493620B6A210BFD10D05F918E8103FE
45DB7DF8DB6F7C5B8E2E6F140ED598513E3711508EF1A209EEB9E795A8F14AC6
94F80F6267CA1AFBC008C3024B41572E8C4ABD397C4BB16A22A45884FC765AAB
1BE8EDC36D6B621865797B9893D7E3576FAD29A84F1254847CB5236AF73B72FB
6E2127E55D1894B070E714DA74C1E4C41A7EC36E40AD2D1F1F1CB9EFA30B9D6D
DBFDF38DAC93D7F774F2FBCFC8C68F3B975E3293EB9600D4332152A12ECFFA9E
D2408A4055D909DCB2A8ED7FFA77607D4749EDC6490F0B0425EB5C4260AAC395
D1B1542BDDF61D375BBD98809CACF688526394295FC76C248C5EC3CC2B8D96EE
3094BC95AEE6F1BE238B28F879C77F4A5C066D2DBB1D421D3C8CF5D76D071D37
48C32BF1C779E91312314069084C46F9795641EF3F6005F3C00355E52AEC81ED
C81737D52857A23FA98FAE8044179C39BE2C981AAC25F77E4DF116E24E0B2C3D
ACF2BB4D4F11C5FE4243E035533235BD0E64F98CB091B751A50DB5B4C4BA4032
2F88B6DFADED7EFD67BCBD93C389241403508075ED2137858BD91431D4CE0768
8B25F9E03099B65F6883F67D6560813C97EDA6C22DC8BDCAFCF42F804B7B7C34
97EDF0E39B4743E6E752BAD5146680146303CFC404495672602454E757DA4084
4B5C919F2886BEABB3FEA294A6906CAC83605B8858EC262872A6307A996878BA
0579843628BFB2994C93A44D36480886E3D41812FB1295A6B9022AA16382166E
80542F0A0FD69A47B4A1F79890FA8BC020D13366599357187B3E27C15AD9E01D
FAD0D18168F913BDDD80BAF233AB271BCABC8454614EF1930E7241CA8A391286
421ACA8CE38BCCE0A80729DA7693BF3BB4DA9B7334790C53D467D0FE46568BDC
9FFFDA026A4C6D2A2D286B4D859867ABF6B77F0A1D6BC6FA14ADB27D2D4F46DA
BF621ED7D2283324182145D5E6AF6C6F8B3B1191BA654CAC8E73309C87813656
911BFA5ADFEB2359C0A48A21C1D28F7B3DF30BF9D28490AF191BF3D55D8F9010
DC43A5714CA77D0D41A257D075E54AA9B2CEDE5C8C39E6BE7D839E8797C0AFFF
712E8C87DE2AC209C3E3AF1FCD802A3EB8BBAD37AA4A36A3BD6DFED9BC3104B7
D31460E3FA77DE5FE6CA96518D2B414C8050CD4CFB10247BD52E7434123A297C
8B1F4141D7C0811A97714A2A8A669BC9B0D7F08CBDD2E1C176F1A842468DFD2B
843CBDB3F4590276EF586612E6644F4272D6C48EA6EBECDF883BC083E22FD071
5E504B5712C140FE78672A67BDEF04A01650623E4EA1E35312873D47943DC535
E2271088995D412D41AE167F567B7814B47E0942C3474476C62E296861F2EC2C
D8930F2FA913420B9694F4DD29E0491824B0E605A6FBF7CC193E14F9F780EDBF
DCAD8B5B6597806C04AC0617E243E0D737D4A2A098711DB3F4C8E8DE1389BA96
D97CF300415273FA23459E59D373C12205F7F21C2F1DAE3862CE6FC4C59AF4C5
1B407D44468B593E4D1D5A2187F0B6262FA6B9121B4470324385644F94DD0700
F003DC574DAB04D2FAB7EA4FB76F05AD2A23A3D40A22664F86B1D2C8E751BB36
9CA2DFD04B58A617A349551D48924B2D6F1623148917C9288E029A41CCA8A7C5
A97A519BC2CA436C30CBDCA1FDC2D06D5BD2B9E1E97437B38399B4B066FD0338
4DEE296C07BE696F99C593EB67BBEE48DE045B230E6A9E01641227CB03BF5133
0794E26EA90A69E3ED6626E683AE56B6CB32B46ED4BEF7A18428E4D186F7EA4F
D80D4A74FDC94C9DD19ED0F4F38AB2E82D63888CF89274A3678AE6F550432DB4
1B68ED3659A66A113E066238B7FC74E626A813CE4D62FDA00BCF5BE7F1FF2F91
0D91023262E5FDBBFF778598B13B1C734CD065B9361FEE63B2457F51570F3E92
38BFEE568F7ACD8B24E68AEEAE4E48C215990BCD4EA343F44251267065F2DEFA
B896ED48859ABF3D83144B0E17DB98FBE3AB3D5FCC9B27ECA93B7A80B93F531D
8D93659EC8BF539633B176D05C12301556F56D22BFDB9912882ED7CBFDA6CF18
4470276B176E704F3E22C9B97CD4154BD64483769D2D9649FC597894BD722B47
47A668824294DF01174A8B9496301B2316BF51E25FDEDE608D384B057165BA76
2679E890C1F534DEF8BB256BD2A83CF998793324535884BDDF8D8F804004D1F2
1A9CFEFB8700EFBBCB0FBC006C8C38BC1B0861E324296C796D22E46C188794E7
88B48C94CA6E7C45EEEE22FE0523C3FA22D46BF5A11123C6B27A92FD81EA77FD
7D033A0D4E30A6E41C39862C2793DF071CFA5CB06F8EBAF2B73398289AC1C0CA
2FD3EC6A3ECE8816AA5C60500DA5759D88CA15549397C3052ED84AB231B88E71
B9D3FE88048DAB5228DBA497189E9D5FB2A75DD37A909F53C828A653E838F107
D94261FE2B3E2634DCB355054F960BCB6132F1A3C194CEFBC97DFD910687AC1E
1DA3E0BA31B03F2A684B2B67B7872C2BF19025267FC6A09959A108AC431063CD
06B7ED16307DF8C4B8D01ADC0E5CAE7D08D6E1B098B19F634B7F6C90C403F4B2
3498BD773C1D27DC7A29A845A025D7B189A57369F7ED51FF083F9F446B590A71
E50901E483119FF0E94C5E3F66E498C82811CDE551ECB3C8DCC93024F925D8D5
715A9B8E95A285BE2D0678B08BF54D8DA66DC41B525D3B999BE6DBA509245DE5
FC9388B25443B5AE283F699209EE26330C1147CC7A267B98AAD8FA62236F850B
BEFCB62173379E63F3A46C1A2ECE15BA6B0EDD72E068A69E2D0FA31A71182DA5
71626D0FF82C51636ED391C1715DCB5D9B78A622A9A011E97F56CC227A68A738
22061D8FA83419459407269669F48D987D3E76BC17390F84323EA98F5ADA485A
644AB4BB0025686733CADE60C6F5200E82EBAEE12A0281843D1FC8BA60B09DE8
4CDFB898D4351A04F97F8343037015133C8BA2ADB4619FEBBA1D497313C39F36
4B606C0A338E8D6C239D3DFB054041F8B06FC38805E5883EC379BDA47F6E2734
1D514047E4BD7BB21CCE4F87BD968678CB38F74D98910006CB2F0B1C370EBA74
BC7588C19018FF764F37FEFAB96E5A28CBA330405A0ABDB5EBC394A5DFF3CC96
F2B54796F7B70F728CD2EF7883F6F398A3C5A7CA65EE3529479DDC821BF7159A
8FE615DB2690FC585705543AA3A1BECEF832E8910836B1A1CB46BB9070478BB6
3AC46AA93CB8B89B768C6D8A01300D51C912BE7CBA6297E68387A161F72C8757
1075004864873464594EBF58A033EBACB07D494EAE6ABE2C88597191B5CD8CA4
4546062312833A623AB479A3D25974A0C68CBEC9149E3A8468303C28E2F3CF54
BCD776F5DAAE0C4EB4F415F4F5398FFBFFCE2306E488B1142FC951F6D08FFEEA
7D143DCC7837D34EE0442D2E487C9425C59EAF0DFC887D850F2AA26AFFF21332
C8A46FEFCBF589BCA0F4BAA4D5D965566A03AC71222CEFC9D45441BEBB71387F
E0181111A6AB0DB6C33776B77E2A610EEBCC8CD86407F75AEC6D1F6873CB4106
E2364916F4BE30F6BBD961ABB1526DCA531E52D432586C14236297E4858A76D9
F8C9B92F93B36D860B2C8A653133292531D02747F8BE666A2DEE13D6978B315F
723A7E8296AFBFEE1989A09F9F9B3D44C4DEA306753C7C6E67538B52D5257BAB
74F1244D4B946E8FB15D412EBFB8337A4691A493649AA85614D8CEAF016FC478
48EC87A57D378DBA55CB4D84348AD6D40996C7864EF9CA45F8256521C68AE338
8425F89D176EEFF381E4AF17F292588D074C0ADFDA80F30FFB2587943DFDB4C6
864CF1FC7152CC2086075372DE2A2DF4A55A241F8CC5DBE10F55B255AD038DD0
B5956386FC77BA74EAF3B570505F2980A9C0768AE084F593A704587E8BE31E2B
A9B2D07D2626039DAAD5FD1E5EA7BE0555A5E3C70B03BF88051207534CAEF686
3D457F765764DB722F7BDB7F01696826682B04CF280F51BC2300C56A6A6FA770
0D6F6C131841B0ABEEBD9CDE22BF421C982054831B13C0CCD75CFE65E106693B
94A2FDCEFE1D9D56A1660D2EE33C92ABEB1B329FF4F40C46139B6F891661A25B
BB1224B79350C3D82817771094FB885B5CFE64121AD310A917412083C2901219
1D2332B5C62C908BAAF052C9518B193CD1E44EF267F66A375C15DEAD013C9268
6370EB8BD397598E677CF38801E6571FC25375382455D058B86A86C44BC53857
5B0F0BAAC10A1AC7E1463E831174CEADC7FAE2DC4CEAFB2DC3DC14DB7424FF1B
10D6C3DE27362935935B5D912CA4516CFFE95D1A818C070C671819BD3677FA71
35525F51BE6E45860121C4BF9C53691B9C060610E429744B45DF032165ED466E
72502FF627C7C6A484DAD8F20A89703DE9CA97EF19DA6FE918E70F8317C4E537
FF9D6CEEE5278FF99CF84193B36278E44371173996AEC4092C1B220F54498911
2CBD3BC3406168DEA14A60F7D0CE0CAD7375E13E761D8D7E9DEBE27755ED5B52
5D2805AA092D802E4CBD4C8CE92063974B9ADBF953225F155A27BAF0BFB58CB8
60B0F1A8C0020B31D82E24D65FD385F67FF21D9D25E554F3C2028B749B6DF5F5
8318996F3A5292C112CF2E452806009FF81AB4F087521A36DCFA84C0294F13C9
BCA7740E2626B15FE526F0C62E715D3283D1F4E0797A9901190872804002C4E0
D8258EA7974AFA03E084E812C8824580C07D466C892DECF4394880A276A5FE44
FDB7781EB411872090D97DDD803C8389ACC9981B0F0321D92EB74EB39128BBAC
F9B45022C21226D02545627E1FF938AC1A373333B68E810458E2756AEE568464
E39A9D4FEF2E8C745F8C84845942D407798169BA40EC55167EBD32D2B3818E7F
F1839CBFAD42D5CB65C1DC7E164771C986F3859FABFE25A533F35542708EDC4C
4AF8E4762F86EB156CF0EC3A7CB1FD8B24CC9023EDED6C7ED2AF0881D9FEE209
CE4025BA6F60896270AB53479700D5E930F710682B895414D8D15A3CF1254822
B3585BBE6B544DEBC72AC06DBB25870F58792A873B5EB6DC81FBDA19A36259EF
7169882162AE3D1A0160817288A83DC3CC63DE40C1316698F13A2552CAE644AC
A9AA960B45B0538D47DD519D40D6633F10C8F4F12FB8A3F2A67F412D7C5431C8
A9C99D3A535DA05E6E005F142ABAF83FFBFC845F3610FA803AE4A5D8738D51A4
BAD1812A8111FCC2EEF8FDBC70A40B5551A06499BB39794CB9F4EDD09FEF1DB8
1A77C19C9BDB4426F2E6E52F6410BD76E442F20C4ABAF2E72109A764DB70C0C2
B6A928553E7F0FD02E242C65BE92FC109B2B38EF8C02F86120E587F7F3E30AC7
2746C788F104490DC1B3A97937AFE44F3CAC5974FE986FDA5D5AF706F0A30AB0
EF438151C7D39682CE254139A48259DC08D6ECE0EF01BCD9EEC871AFD57FD3D8
B35EB6678880C0AECFEFE1DB37030977C13AD37F82413A8371E443E19808D80B
366E84FBEFACF55316F9F408C6AD6C7304D035D2BE126B6AD9BDDC5F19BD5C8F
9088497080838EEC6B3D05776260AECBDC5DDCBCE7BE2CDFBCFE791BAE78B9AD
45F59F6ADDF749694930CF1A5FE382F0D37F9B02A6A9560BA2EFCA1B13DD3D1D
23CE806926478B99A4C099068C1161C29945EFBBB38E044D2CF050ECF064622F
37FC6C9BCC6182DF2EC8C2AFF25CDAD43BEC7AAED1F6BAD964197FDC6B983423
846BD4A97F82516242F03398F33FC863BA14FF3610F3746A7324B7C95A560BD0
1C155439EB43D1A040652D85A0322C021122E962CD756DE48DA93798FBDD034F
40FE88F55C88892053C5F1EB2BF8DBF444E3818EEE8F7029A3B9310742DC47A0
84620AFE85289172711778FD9E7EDAC6DCFF2AFA682C65C411D784E143285DB6
A5B53751CD550A2501C6831C2470345AAFFCE518400E0BF4A1A27D65468350AA
8B62B3ECEFB69302CEB42B8A623449837C1A15DF8265004A1444DC87DCB223E9
4E355529093A79A184024CDE96A21805D11F435647C2D5928926549DBDC5EDB0
96B329D941FA34285785D12156A3A0D0E5EF2873CFBFD2C69574BD0CE8C16E6E
4A5CB4922F133136AA81CB3DE0F664F4AF8AE7CAE9F2844D17BBDC178AFFB0DE
B4493D2BEEDE36A67C03278F02394F4611CEA11A59B78B90C463CFD7F6D5DD0D
ADFE734BEC65B610BCBF61D6AF7A7DB810D3E807A7884AE4336F3FEBD08B7B93
B550CC6D1ED120A8D5960CF0F71F72FF52A8A4C819D119551A8B29CCFE9B2A9B
A7D1C7E352E7F66C743DEBCE803DB9D0AC3D43B3FEA2C8B56861892AC1CDEFCD
025A369028ED682598E299F1E08030EE5E3F02C1460B205FE49DE6CDFDB1CAD8
CB3C5DE944E1F7209FC8F1F1C58B3068605F768CB488A01868F8753DF567A40D
1BAD11443D918F984196E70E85F4B9FD8D4D3AB543B62558A07BB53306C444F2
7F4774E268B26F46D9C824B829652456E4F4C8389E298F554671CE3FF079902C
D32D6AEC688F02A7365B66797DE1EA022E3A60A8BF306700778714A8D7AA7699
529CECBBAEF480301E226CD042F3FA8B503B2DD25AC39630336BA5F3E7C3DB6F
F743322FA4C356309A51086A81FF0013114FBF80690668A1637B833E73EDDDCB
66F518B116B86CA8FAC0CCFDCB9B61757536A48FC7AD806DBD3966B0BA784ABF
9010BBD74C2694B7C00A94355E2974D0DF9B8A816032FFC47D1CE99576CC7B31
CCB4A65F5F5AC69F3E71E5A3482C4254223A15094E872127FED1F5D38300AA68
06CA02A69CD2E1558AAA21C046DBC85E34E5750A38E5F879F451AE93C752C428
76166F666F05929903F158D1D81EA10DD1DDE92553E61C308BB5ABD61D93652B
87F1E3E1A4269E5E47AD155234D9D6EB4DBCF69EE93965D4CC8D86D95693BDD4
FF71195A7693EE04184B463C7FA663B5B21513A1EE1A4A58820442EB127441F4
B6AD10B04BDFCBF20DF33BE0769C7B471582A92385EC0D227B3A95092FADBFAA
EBA58AC09BD65B876A29C061B0522035F2637BBE816A6D28A9D0E9C296CA20C3
AEA47549FE095A87CC113B930E138581D36D25AC400CEDBA37A55CF4BD0B7750
11606708AB5E846B6302B1D58E2DABB37541DF88049C1F1B097DE8D223C145CC
25F858E34B6DD76A23A3C12BA8430544967C6B8B7742BD2AE37C7E3092708F80
D5D104E951A42B1620A0FB636CB27AB38E630A10E94EC04C46A563D1C5E94BAC
3B253D60B51835BB1246CCF238F394F8BD72279BC3B0D28AB8A3A0E4558B4E33
BFCA4A814D824EE4CA5383C6EB8811A9AA1897A0F984F440B9BB0EFDD09656C6
15245BC716B20226AAF44834DA5F3BCC3029DB39095E006F462A4F8DB010CE72
D2EAFC631BC4AFD026878619663C9B531A8CDDED690D96080BC8A4AB8CFFE180
9DF7903F68462EC99F3C1A1D113CB87969B0370D0DDB829296DCB0F19D3D695A
D1DE3E935E231AB657C704B4FAADE3CCBBDB4BD397B3D34B2D59D4B2A379AE13
47C5A1FE39542C9E436E95E598C9C34E74DDF7A657AF1327EA3EC00A5555F562
92FBFC83F4332A5DB7FF85ACE0F25ECF30A3C903C1ABE850250AEBD3348B4369
F1E29FF8ACF45C2E723C552B0ABD5D86E89FDE9CB948245958ECA294D6CE7C91
7986B7DD6A94513E702CDB3622910115D16C1E73CF1C006997D0443B9CBE917B
04622881825FD25359A10F84AD9A18706CC30F6EC6119EEBFC8923BD0C3FC8C6
6A1DE3D99C61AAB661BD6B6341820AF8C5F6E5CB567FA718C8AEB1F645676383
8558E8D86351EBA6A136E7AB27A213C2A5FEE7B2877C3AFC2D659251850A8910
6609CC1A998112F8A9BAC569D9F80305E6C1C2C634E83B6570EBC5B25A63ACAB
A40ED7A24F1E84D3ECA5D9DE0663B989CA1CAEC6FFCBBD1BAB985CD27DFBAEA8
D46A46A845873AD2697988C6E1A9F0234E9E23EB0640DEF4ADBF1D7A31B6ED8A
751DC827439AAE07C35FC6931CB2408175B107D282904556162ACF05935ADC9D
0738AFD43FF5D94534DCD369BC6549D8D02596DE943C067A52E1E24EF1D6536F
5BB8D49CEC9F91A24D7DA3CCB31836FDC1A688D138EF9A6D8EB01EC2BEF8E607
82B002F9FD6B59AA59A6E9FA5530D19A746D13B0DB4B4E1C88A075985F4FB0CC
E69F6BE6CBEB98041B197FACD07A7E4A5D5A40943817D4C5FAC9354819BD29B6
57D61E81E30C54CBEA8BBE362BAC7F3B95A95485F2E5B2882B7A319BC8E3FC4D
348CF2B2A4CC73B586A861454781CB7774E41F05A2E94B0E866CDADDA1E917CF
65F7F4A9C543537128907C3FF2732D0D1797B7F8ABD913B69C093070A33EEC83
7BDA83589B765C620B0E5248ABCF6F7103627C547F3209A31017CC3D1A4A2923
026994971B130B0AAF1163F1C2350D64791158CC97CF571D31B97ADF9F19960B
8AA81E1A6DA768E99E3A7516341DA64093C33CE11E30603EAD00851CC85FB604
0F3EEC04C219609AF5CD8E6D5FB4E6933E8AF9010742E2CFAD0441A6BE9A2A41
17A7F9E5BA5D778534CD20FC0557477D50B35761D9E73D6811CD76FBC92C391F
6DD4B7FCE4B01FDE4183802BDCDD0DABB7E45153142DFBACEF9E8CF1A9C62799
EDCAC3524D5D64F47BB17917E3551622498029BFA6D16B5439507C71753EE604
A02C0977E659362334DECA487AC35BAEAA198D799DF62B5798CB8B992DA3A862
57C5F46CA0F21A528FA0FFF1C5C74B1B3ABAE5DCE90679DEB66F53BE2CA7D733
9C78DF2E6C79D99FBEC94C4E4D9AA8649CDEFA8D0F98E2FE5AD4FAE6BD0253C0
C81E6C53CF5C3A9E3FCCD9AE73E6B30DED997CDDEBEB00524F2A761302F86500
670B53AD5302A17C0E521BC9A763886CACF9F3C928CA32DF3CD52D7B4DED38DF
6AFA806721FFB140C7764FE876B236547F6FF63E8241797FF0A1B21ACE3FFB29
1D964E14685ACD82521A7641D47B9C7A7991D1BAA8A61764AC5EC0B4DC2C568B
CCF8C27B8893041F84F2C6DA434EA611EBCCDB6749115E0117434BA38AE08C30
E8E9E32BBBC255BC629313D67EB1DA256678EE073EE3098DC9CF8BBE54D707AB
8EAD4E8929836FE52E18111F2D8DA0F826724AECD94E2A12E71C3D8F5564A0BF
809F070913D296748F5DEDB73180511FF7DED21A7EE658C1698B9E23D261DF44
6F6E3A1973EC4F8CE8CB67BC77FF06EC7415DD4E0555ACB4E3E205CB959560DF
FDCEC50F06313A7ABD5C1E303E7733C8ECB9E373B82A765EB1C7E8269D7CBA82
E7A7E0D78EE4E4ABE079AF558868F760E55F1645860121C4BF9C536ACEAC611E
FAEDCC9135C58F8F73D47D434DC4A4E0C28D786150BC229E49B5D231FE5E26BA
C879B6A7E1A6BEA341FE52B9EA1278E210D305677B9A4739C67ACF82AAC65287
E9B36C6A176F6C48EB9546ABB29BAE08654BEDFA19C04BD41F2637BCFFD66D79
B090D239BB28B04F50B777FB61BD9504ACFB19DCA7A80459FA2D232EB3A54483
56BE6F698F204F7B7B6680A96D10E86ACA275209AD06FA154A9644B30B1ED326
D901112FE8A794E0FAD713D213201E897FAEB296D9F1561BFEC348748EAA62D3
616BC1FB3B02028F02A16677837630530736B2B762B080834C86577196CD1A1B
ADB8F623740E254E199F1E9E20D2F4FFE1B88A9240EC90E15D50975BDB44B280
1336F8BF31F6CDBEC9F61F64A1F45434CA44F972054541E7FBB280604DDA7044
E0146ACCD7C0E542FD78A033DB3A1B1DC776AC5B020A17EAAAC7779E0A3CC65B
CA1401CA17CD57A724AF31557ECFDBEEB8A0917F2D1FDF88FA9735C944C04B91
9B7BB6A60DD4DDFB93BA866DD60870727416BDB4B2EBA1FF56FD6EB9859D8F10
A5EF7511324A8C312CBD99F9FC9ED41C012CDEF990D26C3FE47512F303857357
F9004A87B2E9415DC4E7342CDCE87E866DF89959D51C64C7A1E697B5E0C1A472
39EBD00B8287895C5C402C2B0927E26F644FE0A0586E61BF61D1D8560F0DF373
04FF4416DF41C117ED952E26353037F5F98AC1F6B61BF76A1D0E31DD3BE06C17
B47719E26788AD5F07D4BFBE2D63497A1A7101794221282DBBA1E3B1FD2907E9
303FB2C0D82E084E93E793F749EE27339664FFEA182D252E29E5CBA75BECF2AF
D7A0B06B3F26FCDB1B066E0025917D1BDB7E9E37AD935833B94133FD5EC753F1
DCB954F6F3BA326F6EAE01EE136C28E07259578E4FA54BDA3571B44FD93CE445
B02B59D02C0F8B607BDCCFA7108E128AD7DD891AF4A025B18F12F50DFCF371A8
C762AF5BD7C49E875699AB0AF95A0BBAAAE5C2676268588F672683C2914ABC34
95243812CB8F338A7D1612E6176DFA80083B80D29060F3358C5A1D43CB748968
30584114CFF5B5E4633767410C519E5C9C7439AECB922F531C2ADF25F29002B2
6C35D8F3EDCF0B1F51A01691E505DA03AB3799AC275F44E8736A5C39A6E22F1B
5117C49C6AC5B8EBC8C27115D97D2B96D392E1B65D16FCEF1B57F4AD5FDD535B
220B601D739431BED69D17722A791585314435E5914049C2DD6CE999371BFDD9
007F47198EFCA05EC6C3E0C3EE5B059E431CD83EEA8085E3337E32DEED5C9FB4
9D23AF2905D7FC8FD35C3A2FDA178DC51B0D9F7E1037D75E9BCE429E3FEDE10E
EB0AA4E778FACD39FC3CFD65308D694AEF8EE0F13E9CF1D70516391662003AFC
9EC243CA42A9BD5B179C5C3F2FA8A9D8446A8F7217744839EAE377C268C9CD01
3DF9AA0CEF47F9E91C6D804F5CE9187DBCDE2A53AD5E8DEEA70B9D144D3E1EE7
2343AD613C086F289220EFB97306A6B0B1DF3BF3AF690E1AD2E1C89B1558EEAC
B478D3B2E478DE9281B6E20003A1C9315A19F242D41FD61584D9DA998FF73ACE
B0BAC18B87248FE9CA0926F40AAA23EC01EA99F5CCC32D1FA8E110131022CD02
8DC1B5EB22D5F83D6A295AB9E01BF45591DFC3B824887444592036A2427850EB
D6C17EF1545EEE457EA1678BDDE07910ECA06B51C2717D311B9AA2168BF3B98D
7A98306F317B4996A236E3D010EDB74229DACF2B0C73252E5596901EAC3E8EF6
60794518DA4747A84B2E3BD35634D69BF594B4985F9921A8F5693E14F37FE3F2
1E030748189C553B9F62C83765B0149330CE51A19086B2FF0BBA147BFF007856
63883D258292F858BE9854981D7C999B88588E3BDEA834A3B0F64592C48FC8E8
A9E7FB346A9DF4B7B0F0004359C8ADA7FC13B78B46897727EC1FCE4CCE8C1370
012B655C013DDA26E8CD8AA6F0EA14F929D5598F4437AB944A06B5EEC3343EB3
4FE1D7D924761911915BDD9535892BDFF3D4DC3CCBD3F46CB1F9CF94C24746C3
FDA17F2C848A47115838262A37F585C8FD1E8D1BED5B24BC6E9028702C35FE1A
D1EA3AD9435854CF9F5595B56A90380C329B741FD07F83B92847E837087FE717
9E9020062622DE064EC1424A36576EF6AEAF1EC8DF726B18D5D53249D2AF9FAF
5F15F83738BB5F0A9BFAFA5B3695990FA096D503F95CEFF2B974D5211EBFDC9A
E8E0012701B060002FBE2AC96B82EB823194818E6DE249207343C37BE9B926EE
D855B4409D4B280567E8D5B9EA8E8AF21A352BEEFD6F0F07A034D964A12F35E4
5673FB129E93C02411478A1DC95D4205C341AA7F9C85A2217F87CD7DBECEE1D9
F961062F09F9C0D736005B019E1685D4F8227777F591A7BC6B800446E46A8522
29AD1A3B5F8810C562DBC3C2A657D99F2B89EB410C1E2132814A27BCC19CDC2D
8E1FD97611BC0768DF588EC15E0CA186AFE27D174EC90945404C5C4A700D8A1C
DF8A379C22193172C21D5E646D1A0325272F5D59E16213B1695B23DB88C6B2BD
570674C31EDE23F7C1E5A83C56BFBB321D5319361C749ED4373122A4D63FA6DE
F19465B3F1F7D9F110CEE18BAA0053F153AAC4D8526D51B72E18F4D380225458
93B0EEABD4BE7C8431A12536B4640FE61DF82B5E597B9C22477AA8D5E57FC502
03EE6EC6625ABEC849DFF88D61AC67E9BC8B5AF7C649CDD908D2A09232034154
E661202D47C172935B8AE3BDFBDB8295B064FE209FFE7A0BA4B21EC68E9BA6A5
412214B1D01A8AEAD5455CFF8C50589F8768346EF7FD377F80E7C28C46D8C9E7
E26E49BE5FE11E02D971E8D41F7F57F05CEF38E5357DE4E51B60BD29C0CEFB04
093E296A810344712DBDF37CD7CCF72FBEE154F85B97ABA5AAEA55AA79008646
68FD409CE450E41549B3753CA7D4E65257BFDE0A7E429558BA31883BB4718F18
F49FF8B690A9DA6FE9E32BBBC255BC629262CDA5F0B9477E6F64C0AA0C5F1ED2
BC24B77548F1E02FDE503DD3A3DC42C9107CA0BAC50A027BB01514BD98B8DB73
5A003189700AD11B06A9C4A63D7C1E96E43DB878F609A31C4F08764E0D6952EF
D3DA2ECFC4020032D3A480A00C51EDF3E147D41B57EF0DE3631E0FEA8C967A22
762041AB77C58B77C66E3857F3D747ADAF544F977AC8650851AA63AC4A5A3C9D
85C046EB10EF486F5D8CDA247F21D30CA3A26EB0356226F2893A987DA9D0A45E
DB6812A309A42859ACD014A94FE2BA8B2BAD7C2F670BD9087F7531490409D02B
E31939CC314F9940AE48775B4094985B207F8A8330328DA36500D75CA74B2708
61D027B81EB14663E3073EA37AA1FAEB418BF5FC0965BF7B274782C8D608698A
04F4F8CDDF4FC55650DD5BDD8F860E60CDD9B72B0340F5AF25044EAB05EBAC5D
4AFE97D7071C95A6C055A02AC93D89BD26B1A463F3F2DC46DD4C7847179BC0AB
88D400A7331B16CD6B1ED20C0AB3E91BDDA9D98A37E2DA191CC183C0E334E0ED
C575DEEA0C73666D12F2D112B93EF7E363EA051284534C1F36D962ABF33DE5A6
612AE12C948517D49DF9243C4E6488D2D3CC9C266FD12E129320B51A833B855B
2D114B9CDF03235CC9EE42DC89D92E105C446F82DC45EF18338BA160FAC6BD85
3566B00FAE35137D917F5BC93B59FA2A4A18D74B187587ABDE7A3C8949663441
4350F718EED93425742D97CC0F23FBC88F8CD4E4AC34A887AB7A471BB8171337
99E5AF19B25596A888D753085BC56C85ED0E58AC65EE130778C2075581987320
B17CD38D3B525DAA4F7948DED4A7EBF15DB868CA1C8E2C708D8D1151137A4BED
2E66AAA0B54708441DE5A1A15C14A676EF40F0B1FD936E8ED5F486656F38DC10
95F93FBB61F865EFA251BBF7CB8C8C0E667685A662BF38551B50DF4F12EE6C72
352170B20BB76CFA92AA7EB62E988B0DCF32C90990E500883DE3AD5020993AAE
38F46361DA371C433FE1FAADC280D88F13A904FDE0ECF34BFCF41D02C7EC97BF
0EC18B289D66EDD30965D9F1D5530DAF05CD7F73D6E7D19466EA5E74E9C1ACA7
F6914AB89819983CDE688BD2B59EC2B9341D2DAA72F7FDE531734C44A2F33077
E631A05A907B488FEB22E3422EBE4FA6331CF20668A8CCCC9DB2CF90204227B7
CB30197B823E5B46DDEFC40DDAB835FB69ED4FB4DD697B9DD91CE6E04633BC3D
109747E0911C7859CEB157765BAF32485B278904F0928D97C2A77894DADB2161
05AC441F75426D7D5176B540A8362813974AAADE10FCC23D5B3A3C308431877D
9C918F7B851CF6995C8055B4722B9ACD04C3EA77541646B2F08237C3BC9598A1
164C54C878B02839FBDFB30634D11FB51C84C0BE7180B2E3DFE45A76D10B7C08
88F4FED85152A1ED4D5D3EAAD53C17F4BB21DB58148E2064C505944D4DAB0687
C2E3254A4529520AA0E828A1025966B1EAC9280C98EABA19973BB596EEB41C7F
AAB530481B4B7C9067FA404D6D6F0B205131194F972C2BEDC3EDA6BA5D0A6EEE
FD0E22C9638CC4D71153A5C7C973779B1EC4B75707407ACBBD070A91E0E3FDF6
589A34F8599566F61D53D783E8998719D173F4FBA16DEE1DF371A889E06E4F7A
DDA8BD1E557EE7668528DB216195143E8CF31C5D103CA1E5A4B2760D2257AD91
8525794DE9B9603F2F5CD0813754B01B848614C5B184B42EA51452F540CA75E1
8B3418B0CFD7E6CF23E0D97980F20EFD24A6644AA26EBAF342B6FFE52F001742
B779171454EE86CBBA0E84F9060C62A783C4E50F25F6AF33E8E354F8922402CA
313F30CE2B5AAF4F0AEB57E8D40B40C0D6206DF1B2B7701C20E811C7F4EA25B3
9CD927968771EDC9EF952A81E23ADECDE18A26F6B286FAC18078C9EFE517926F
CBB34E12E947B5133C6AB445471F2E852AAAAC4158DEA40B85DEFCC5C2163C9B
84EC735F63CC8A90417E80E396349CCE3D47F08B94D7CC1A3091D8B9A27050E5
C2B717DF445BD1A455E0CC9652EDE5612AB895CEE0901707F717AB92EBE58A43
628E680B06372211F15B3ED73705851BBD2AD9D78C65206A2EA9EBE4DD2E4ACA
345BB401A7B127F68F2914E13A26DC06ED4D34A5E4A2F4C5A85BBDE0A289CFE5
90834151E0EAF9DE3500921A7818FB318487A712CCC0EE98AD29A8165D453AEE
422EFF10547CC2E44F566E8880D18422A90D318A8A0384439B38D63B94757252
062EA448D37B071EA58A0D10AFF07F15A799749C255C27EBF3185DE248BA875E
379F4A7EDE97DBB2267C2570E3E1800AEE56AD3169DF77B34C78393AEF4F631B
E98E7EC2B798E2E8BBB0F86ED7405EF78932BA79245433BA99A92974C2C8AB19
B9FC36FB7D7384A96B40014EAA778E34870D52D97A6023F4CFFBF0171337AC5E
8807FDF4EAE492D56442670B6ADE57FA17D6CBBA25AD30EC072C6D63909FB472
19CF6777B3DE3AF03927478E4442B9F54CB62FB018F0D9F2DA2F6980D9AE6F26
2CCAC067BF45F6153EF62EA528B388FB2E87A3467D96C2EFA24E139633A0AFA8
16EC666651DB46970100F696EB582F5EAFD33A8B88C6D49F1AAEFA49BCD8351E
3AC1950186E0DB76B4D664B39CB56007BF7CC32B258A7A5FD6E4EB10CE7B2A26
45BC0E66C2F87D912E00B87BF7BA14634F2A124390DC9A66405F0492BD7ADA00
774482CE637951C52741BF812CC8628C03FF84F7203C68B23FB90759086338CB
D1B8FD37454BB7ABB594CCFE0E61F5230043EA6048C1152C515E8E922D80ACB2
9B5D11AF2E820BC899E1530644E4601D291DA077BE63D94C9BCB476ADCDF9F7D
9260E89443A3941E74A7B6EAEF6F0AAE5F86D1579A6D8EC97E89ED5CD37A5D14
188AA679C8D06FE448A855ACC1B24B03D138396F3619557849327871EA80F511
2F13784DD90A5C4E41D608F894BE066CAA01A20DC5399BF61D27D3FE8CBB2563
6F48E6A41F205D04A802E0037F62FB7E2AA16B50DEA57563E4E7D3257AA9DCB5
A88FAE85A98E8C2289567906FE61337CAD44686AFE62DD58DA8D1804E5F7DEF0
9F937900E84C954EADD2B24E0A4E9D849AA906EBEF5A8EDFAA15CD75A5242C58
B6C87AAB2CBBB8A87C093937215405A4E4D84599E02FD91903DF45A1578D2C46
89435808F9E7C73326B6BE3FA791037719067B3095DE6AECEB391BE48AB4A656
2EA17FFDEFCBFFA0AA8B7BA7C420375522A9227F5C6AB46188E5A2AC3AEEA68E
98F50A2C69AF4EC912ABE989D3DBA2740261A316E5A60641D8F473334EC7AD0F
22F61494AE9B649FE7C2A583FF7F08C602C23DB580023B783FD6D227C819E880
C0397FD013532341AD01037918C9F3EB2C42BC92876896D2EFF9720D7F11514A
F082D8FEF0981B76DDE46319F736A1C95C55FB5433A62D119572AFB7A0926BCA
7B7C3F049E83937A10814CAA1208B1BD57A5F5BA8A60E81A132001279992C0E0
E4C22F8808F59B539675861B466B1A25784FD88040F73228885B0DCBFB9C26C3
1B5DCE76908811A58284EF5DA3F03039163C3257E05E42E9321DBA53B67B1247
42DFCD6290EDA80E3FD63D19D1DD9C6100692BC796026CCF0F9CFD9CDFEA694B
24E3806F650BA1EA285218EFC63595982E476B6C3330A2632ED66E0FA7039C3E
1106954DEC779DA2E2BB5334AC2EE14BA69A672C13C234C1FAFD2392C817B8F7
5F7BF5DB7799134508222C366A75C97300B22076223180291353EC474DDB7E76
34A2C07AB2984387AB81FA02CFD9119D368356FCD26EF35ADE09679247F84FF0
B0FDB00AFDDC8E61A7938E3F656986B621457707CD4A768DB8E0D0B769688B30
F7585A83E2D8A22B97AAFB8A7E15A27B7EEFC207C6FBB80B1211DDDF11DE98FF
FF15A225E1C5E43C3307E3A3161A8022F7EDA09F4E7074C46C6A65A9F82381C6
A44128F311BFE9D3FCD8F5E62795B99065784C27D70C018EA15CB10BF51AB19B
318875F992AC74ECFEE099B33FC49DAD9A6EE3021BD25445615CBA1D49EDB557
D8B388E3E9EB328C8457C9C11033389D3B73F9C7A0A572F03A6759FCA1A5E038
38E8D6A897962EBECE623DA3707FD82C852415C8C662AFC86F8D2CF4E37B8CE9
519A5898A31DA1733E55023E8220B983532B3069E5C864DB9927697BC95CF8F8
4D49521F3AD3DED56A594865E9453E9B6E4D14A6DE55C32C2FC84A282A9C74CF
ED8584A20853C2256B943F1D9C92F5E27C5CEB905E9389B47CE51D38915F3EB5
D6E3F045F5F2A89C6086E50271BD1C0F87469254BF3BC4E4B7DB5B9F8EF5F769
4A3E2D8C66261EAD8E363B28FDB80C23CA20EF22B786342C370879760E6E7AF5
B088CD919158184A698A5B025C8AD786566EB1CFF3D3BC47BDD7B0A213FE9B50
95D928B58F6ADB4DBA59BAB443C7BAD37EDAD8AA862AEE8DE68821862F8E651E
65C11E4DAA7CB04CF1D94032E866BE55EFCEE0AFFA2E6398966A38F2E11F4CF4
23741FF7A8E660C1DC64A95FBFB654FE16F3786F52D0C1E2981C375B337E3FD7
5018645FED9423318C78B237C0ADAF59A2221F17832E12A4FD81CE8936B1D350
0F7118B1C64EC03C0E8B6E29287A5333047E1386876C3AAB79C82F12AF6A2EA2
B953188F9C9B88B714C42CAC634915CF3A217CB2A5D13E0E8CC8A1B40DFE0468
16BC8A17FE3C8984152A5AAC67194C637AA1A7613682F965072512A1C0058AFD
46A949CA7078D3BCD2E3A7F10E4CB35037167737C1AD669ADC8FBFCF2A894649
B686589D995DDBD9BFCAEFEE5123856742635621E95FC129B67DF64DCE995551
2FFAFF1778F597CDE394B25A984C21AD0756F47E5E201723D3BFAF10B42B2349
3B4958644D7BE27CCFCFC9C3D47D73E9FAA0DE99F0B98EA3F5B31724C6547C8C
23DA18931320CD11E4B7A64BD4D09C0C9AD7ACCD3402C6971D61F37515C6CAEE
EAC922B892D23C47E8470B6F2182720DA55410BA34789B593064E7C1A5CE0888
66CD6BE26CFCAB0499EE9767965CF8E4A86477EA05C8C7E23E6B3BCBF0410EA1
55BBDD551A786790C2259821A3C3F78894CB756C05A831EA17D3D24F62FEDCE9
3A172C8A2C437E0A4D5DE66103079A924018F263B9FB14C662E626BEA809DC1D
7DC0DD21DCDD5FAFAF7FAC651FFC6B457C321A425950FCE3E008301D60083FB7
4588C1C72E2155A28E635E4DF941B6E43C98FD52625785C5F6A237B392245658
6179A2D915BF91E5F4EC183B2FFC5DECA976596743C5D9852BAE98DAC79BEC7D
C3D0E2110035CF92EF4B77FA2EA9B4C9D7E8322DCB775EA9C265DD97BB2B555F
12B0B13F5781083E9417D1135BEA103BA89E162BC9FC6DC9CC62D47E4CA33F10
3E87A22BAD2E35C06B4561CC9C252E7CA0966A8B9B6B79D2C540E1AA52B1ADD3
DC187109FEECE3AF184DACB6714650AFFE20534C9A64BAE28239DA344D814CD5
BCE3940CD4D0B7D5455EEECD72F84DC47B5496C09BA692A3285F257EE87C8428
DBE7EDE6D236EE36B98192BF4E1F60CA4B643AF9F1BCD695522E8C4F3912EB35
A9EAAA457BA3E27C207C86C331E0082E1CB1CAC451E1FBE556D5BD1DE0D4D6FB
6A9F538340796466208184C18EE1FDEB94966600A8B7206959EC62B8EB539F5F
E8F75B4A52ACBD33F0088B45FC024C3302BF6A69AFDE70683F671BE15E64FE83
A4553F52F7FB460C34003BF52A79FEF0E3489BA07D384A667DA5C930D321C173
F3A9AA841AE4A4A066AD3739C04F19E3179C158DA9E568ECC89CE9D07F675C8D
C7A67C8766C1640C09BD9E28E3E8EC6466E774E56BC9333933B0050CC5985FC6
F5F48ECE2705E6B611CC6A10425F9409954DF1682A96C4F301F83C0FEC59D120
B3F652F5184CB07A83099F9CBDDEC9665BBFC8BD64975436806787F05F481122
0E44F4C72DED3AF77B58244BF74455AE55DFAB5A1729BE3B83D84F0606253141
103DC2D1F22DB0761A12E90C31515816DCE5043612BD13D43AB9806C9E41A58A
EF07E8474F0A6AADCE7A457459C0EDA2F4DF4997F8F7BF3258331F4CEFFBEDB2
02555CCBDD09FB0D3742B599C133A82D6FECDBBD2B603C0E059189E3BED625BB
7CE49CD3888CFCA24930BD0E089B55BD8D09BE2D27A0E302416E679BEC2D99F6
3085D9852BB1B4982BF2F4E76C33BFF25F48CEC246687566E7CA72AB771A74EB
93E364E1973022D8AD7BFFF04FB8389F85BB1A31B0C8AC5E4A7F82297BA7530C
44877C9DA09BC86FD69370B3BCF2C1416D4D48E3E9AAB52F8D4D76D46443E034
B0AEC2BD2EB0B044E4C5CE30F13420DC0633DFC0CA913D47413A7800473B6324
F981598A49431F0E88B795CEE7FDBA7D2A7F0D3223FB5FE698C82811CDE551EC
557D3618A11C6A5F96DF143782CC4A3F637CCB4B31F9BA681DAC8920CB88E14A
A3C108E27035B1FB4307648EEFEA2815FA4C2017A99FBAA48705207A5BE93B9C
CD174CCE20463BD7806825AE2F28060776DCE5BFEC742F597DC91DF9913FCC0C
A631A9730CA8EC7082055158C289E4EA860444BE67233A13C98846AC997C8ED6
78DB77016C40D6B873F0D84A002B70E041857FB50ED5EB2FC37986AD527686A6
26B206447C97EAF936946225D216CC35E30CC5364DB081C710632C34AFA7B62E
B21A7DF93C542E9A6A57CF979527F7B1ED51A6BC6496ED4D47A3758FE963DF7C
293996BCA3D44490C94A01ED885D2F08326F95671E8BE168B3D71DC847D16346
DA1850957BB4F2338A913A4D5B5C4BF10BD5F045A7445A29C37DF7F18E045EA0
1C6E9EBE6F94AA33936749980259F1F2B9AE030BDF51B9904809C4819330D531
6614EF387772CA248199B324639BA94357A64EC83E563BEAFC4133E62DCA47DF
6B33E67925DA334D804CEDC277DB1049CC1BE098DD55C7F742F6926F0CCA79F6
AA5D866EA30076604F173C385ED90757882E86A0E54C188733C6307C181BDDFF
B1A3E4EEAF8E9D8779061B9CB306AB334C744D892AB2A92DB08F233BE7A389F5
AEE311E7B3595260E1214CFCF3D41B0686BA15D3C3CD5BB234C5AFD57F50122E
AA7FB57D2AC8E9DDC61CC43D088C50E24631F60757E49F0C4E738FFB4C76E6DA
0493F1F95C07851A33BBCE800FF5A2ED76481FED4C0EC253A6BBF065B367B517
25751CDD756000E5625F8C1BDA1A122156BF17DE98802AF4A25AAB13FD93EC6B
A7EB1EEC05A3868D03BDE7B98A56B2510CA62B393A61D4F8AD586D7A23FF0D4B
8067903CD362DC9179ECF41098117A161C244ACC5A24AE30AD3F8C19E53D8843
3F7EAFFC19B789FE47AB319E7CAAC51A6D414EFFABC9BAB1B708E8338FEFA835
348E40F2BEA727EBC84E7568D295BC9606799D88889326D999DF25864F3C3054
9584F3FD7E02556AFA5E25582B6B928648A6967B7A99BD3905A69FC0F29B6CDC
7EBF8619101F8228092609828A23945AA820198EE45633C7986E0F64DCA14F34
B4BEEC246B21F5B8A7B42E4D520FADD576E2BD37A3F95E1A67B554BF4EFEA71B
6CBB0BDE4C69A40BBBA331CB2676F07D4585E05E96845BB3630C6BDE3E75E46F
DE0A0B760B8571DC77450226656B0352A0428F28CA6FC859BB72B44B2C254127
FCF8531C1534A9348881802A1517D9C6FDA3E051EA10774066BA9738DA5D4C67
553E480DABDDED84729B2D80AB84D03E7415C80F015A79E280BA683210C5928B
679133629493BFFA064A6AE4E01567A2B06A906FE1F48C29DCC1096388A7C8F3
93FCE26270073E5BFE4B2DA961B8F8DD4A28FFEDD7AC52282964DBD305CE1FB9
B74A0AFACD581460D86D2B3388A8436D2689EB5CB09BFAE54328AEAC4DFDF05F
DC83E9C540A780E66E09A6043A1DAA9AA99C4102F4B5856EBA5675805C8C8671
B45E2E55571F33B15B6E23814F41A89E5EB7B8D4EDD9CFE3B45168E6DCC78AAF
ECC4443B44BB0B41CD54B9F91826FDF90FEF0130AFB0757154F2659C8B083D50
D7C8DF187AE483F84CFB3C325A4F3FF6651B03236C930A19AE06C8ABAE20A26A
ED569A277C634A52B27F7EC29B64AA57AED4106527A05819AA538A9307EAB780
3E6ECF7441FA2DD99DCD89C4D25FCDBE7792FC55045824A29FF61E59A4CB86D7
DD5379AE24CD52F26EDE855B20D5463ED29D7106F8AC471B8FA44820DF2E4BDD
BE2C01D9EE6527C4550A0985D33414B35970CE6649DBD38666C2834CF920E605
534DEF5E701BDC76E7B9C72E9DF794C65330DA98A2EEAF6DF2CD0D921CDD1ED2
F4231A3D74150312B83C7F0DD201D74F601FF5991DD676D5597625B30023A4E0
DE7A270CD3BC6F03C3C27CDC21053DD9929F1ED7F662B9C2EEFBE4575D9D4E68
80ED476D5936C614CBAB3020624B7296EEF7BE54E8883A9A5714E6877D2DD1B1
72EE80C822A42A69DEC78B484EB75157022F04E810DE4D84485A88F7FFF10353
1E236F98FC484C4622ABB9E62EDFB21C457296B530AAFF163EAF48A76EAAE320
66E08277F402DCCB6969AED750E0169F4B8D18E8E8D6DD94AD845862D666A116
4A549F627968BDA88748B3ADC81C21C8FDD2E2DFC75C0F145FBE2D385194F212
FF3AFCBB85567B586258525B464C5C7AD47723DF0548BF72F0B0554B3143CDCA
D6572AFEB9DAC755537229DE72F03766E5701F4536D2BA88BE4F2C8711EA5B15
713765E24498CB68CB7955FE5A833635B9A338C43E6201A5ACB9FCF142C60709
838F8A18FBBADD3016ADFE92056C6691BED765A5C8D433CB35F38C6D88B971C4
06C87069F1D9291FE9663A4FB76F9F98C2C7A2B1C8167EB0831EB3CC85596E34
1CB47F5382A7AE454A839BA7A3E9FFE98673449F3F0474D90F948AA9B1253D61
A9F5AB6BB0AAC8B7CACF4DE04ADF360DCACDAB13DCE96E215CE1377DA4E4A1C5
3E26603C97688DB2A5B626EA1BEA528027DB7D8E8FA0131FEE731D1FC16133F0
583FCAE5CD69AA2580EC5DF9D1C3F66C36E571C31853885589F83AF1D4FC1A46
AB7546E96C9AEEBD902E075FE120B1601F4660C9B3C5AE99DED7730317F3AB6A
16A3F20EF4A0527824CD66BF90330078F04CFFD30D69C976E6C8E0973F1A8AF7
0B8E43249CCCED49CC9B43980556193FA59CEE8BAF63E415C400DAEBF4C551FE
ECEAA4D82FF0B2DCE92D094524D0F3A7EEE751E350AA1332E033A8C6E2BC6965
A8DAA93ED145F1B6EDB2610A06C3B89165994FD2E47686899FD2338A19EC6C92
2DC4A068F35B9ED3BEEC29ABEB6591DD8D87D930BB294425ACB5C5BEAEF8715B
A5714BCA85FE11E8B6A1417A994D55D060AF44672B83F3C561E6C76917872A22
8840F8D2AEC8131958BF8855E5B31D1302ABB6893D4E1A8735F4A12628832947
D4091956B8977F39788582534E57DF995F87D1E94FDB3B67A1CB06F991B05731
5871FB0A1A71D79FF841B8E64C36A837200EC5758210E903D3D694DAB37B8926
273A31DB44435B17FAD6D134AB6BB6FB48FF2BD148882E1AB2918B13A655B9B0
B38E84AB3FCC5AEF377D425634788DCA699D6CB068B7A08F26D1271F7D540037
A5B8D6E4246C2CDBBC517561D6E1A54522F51163721AE13506E92647404FDC99
776213E3C7C3B99D6FA2E67F9064EC92468956738F941DD16F66B81213DF8139
7FE8C5FCE0C0F447E18E8992E13EE434253F409710FD5EB71F8D323498B2EFF7
0B8FCD422EF0EC9B5959F3B05CA78F85D25069ADBB60BAC0FD0F0E71C048580C
8AE5582A8B63461DAA0CAE45C1E2E94EF7B3AC82F57CB5F43744C43978E7444C
0F244F0BDFFCBF9F64D5D91ACA56DCA66C4F016EE7FC5C595D10A30C8F537692
3B44720CADDED3E3011AA7E2389868
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AE61BBACA076E8D7A574CBE1D26CE1AA011CBADBBEC510
AC62B4B219DB7004CBA39059014930D43C04A454C2DC9259A5CB694336732534
E91C85C0BA6CB89BA225013F5D4BA685200505C07E64B2D4D04910AD36F7607A
1F49CA66CB1799FF62F4B6004A6F2F81BA6E4B03157AF42FDB192340DB65AD2F
2D3AACC0EF280C59CB7C3428A021D3A862C1D10BEF7FE76CCC335F6DDBADAA9B
42A95778F78610F6A47D8A5A322D01FD4258D7617C68ACC07E8FF81098FF084D
9E44B1D059C53F7E34F0239798DB5F75ED2150480DD677F5CCF1CEEE63581875
FE81E991C81636CF4146058A2C52D99BBF39FB4C7FBCDE46F1D9E6E73B1BD662
B3C599792AD669E0F7CF476194093E227746DE89445E33998652E2A88758267B
63E17E83EAF7D63267B884A696F1BCF1A3450AC18C8847F4BD470C9B90831A2D
4D9C33C5DF90CA060ECF932B970B60C46D283A649C7C7C7D61AAE6F23C16814A
59153E83584512C0E1CD8D7B2B2919E0607A6ABAA92CE070BC8C1DEDC1B91AE5
72DD05EA245453178D57491827DA74912933356724B9386BA27F824E908EBFFD
1BB9F8503C34739CC15677AEF227DA50451836FFA20A22DCAFD61850C81E31DC
424E008D3648C230C8DAE6E410E652DCC3A16B7EABC23C594309D007B98073A0
C7C1928437A4921290018BAAA4716648CF08FA37E3408D9812EF7638EED57652
D8A559B0476411A57C00D1A2283AD95E1A2BFFD0BB054079EA3A26FD8D7C552C
5FB5DBA0F9B5F0DC9B8C811C90AA233513035B2A181590A0FBF661204D6A5244
EDEEC6D04452692B25FE66599231791806BFFEA3EE1C24530AD38DC4E2AF82AB
BF59E7E01EB6A7FBA4F7E2CB0727559E95AF6B88F298CE66E65983EAA4850445
24B898D91976F3882802DECEDB9E1A6758038B66628AF5A7CA0D9CE81E1ABBAE
C6F704F75D96F696D8EA10D35010B85605789B07F5750F870D2F1BFA34BB23F1
15D3578C0D9F9C6C7A99485987D469C4F74DA038DE722494F24BF6C4CC397AF6
8D6D4AA9FFE6D42B465D1046C8144E21588C206134C732ED4A5E8AC51B45AD02
A01894C458427F525F8743CA02DFC822A161C7C28D3F854128F5B2A8ED2D7AEC
641BE454B49F3489501DBA69F815D3615C1D4FD04D2117512D9DA55564F026C6
224FD995D1A6B370E3D52D212E513A483A03DD86DECAF2F13957BBAD81363C43
CE5D8B4A67355C6EB30D38D421E9E67C26749F93E7BB307E4B0754F56F9F9B52
26168BA2CF10CD9CF7FAFD1EFCB04CF69D39304A74B620050E7BF85F33CA76A3
835E2A2143DC0F176F77F0CEACB2F59A7E6BD4C4A2ADEFD2AB1C7F5C69D8973D
8B85026D6CA8E1374CBE5AE973241CCD4D34F12DD133686109FE47D5DBF920FE
FD46D25F0E01E5FBFCB72163D409F98971E2985F8B6FD5F5F56F557C2804A940
29301701B1FF52F7DA5F216E21FD4917F4B72C667772D56D583CF99F22850CEC
7E93B222E98DEFB34C633BDD07F61D79F787F653B9C66705D5BF7E9E2DE9EEC8
5D30A41C8A777A8E15248F21614F356FE4D238CA304899A4B3CB4B8613DAB8A4
15CED60E752F7987F4FDFA91C26DE4E266A83E4FDBCA0AF75F961AF24155B0ED
C0738BCDE68EE8DD60B839DE481853BAD7D7DC01303D9CB07647075BA98CABF0
781E7DCF80FB7AD8B636977DD16F78D5B6EF7939184AB61E81CE3387768C1497
8D277FC17C300981079AC2BF44B16F55F48818DD76A3F20EC6D9BA3F1910A6D6
FFD4014882C80F9D3D5BB9153BA657FDEE4BE4DF596295FD7471213E200A1C04
C6F945F1497A05076836B978733D94FB4D64350B38A7272872C7D5F3F92818BE
4A3CF37831804F2BB7F8826E59FB049109F1FE0E6E81BBD2D67AE6FC0274DEAC
81DD7855573F94C75E72E77D805C7E1DBD096F6A3506935C19A8819977909C94
F5E2CD6FA8C7D2BCABE22D997C7147C96447C05D00D24DC828A79FD37AAE9773
7F91A6A42560B72D5A2FDB0D9E233BE14E3DA5F30D6436076B629C9FB904EE9A
B5315FDE69DF851B1E4A48BE3F60AE82363CAE1DD4F82C92C9F357A33A7539C0
A9743FD87C0824098B6EB641EFA5F8F89036E4252662C6190E205B18D679C1B3
8510CD0B38E6B9A0F265CB80D973959299EDB610CC33C9918EC64DDBEF909148
E41B9A203B20BF878EA56CC519C8BB53B2E23FA1C30F775F874E4B599A3124E7
DFF61E07AC18A1CAAFBAED62FC0EDDD90CFD0936C67EFDD4371FD44FEAF5A751
64ED0597C32325A9E11BA043B683B94383D6ED8ADFC990EC1521358B39B8DE99
70B588102E34B25670E4BBA04FE9427279B592B02468EC4F0CC78D10DDFB6F07
814E37755BD7A4B6D483A354EB363E0D021255FB0A332BC7A925A7040EB1CA0D
E2276791C39DE7794813E747AF6887B0BCB2FF0B0D28B049F33D1D71CE5B3C98
521448596D3EE38F3039296890FACD676F7D101A39E4F806DEB5173E66FF7F55
3517A4ADFA0729458D8E5F9496E3EDD762F972CD8E4B50F6F98F2AD5379397EA
7FE98BB2AFA829BA6F873C242D6866269891B7406864A6B599C68F7CB8E40CD6
C4FA697C98D4B34B831695AC51C87FE6099A4876BB6E9B1876405252BCA2ECFB
4504115796AC425EEADE70BA92793B3DDF661AF4F67B64194029C75927964602
65356D657E6658DA041581F194EF249CE823980806F9145E0A83448057F79398
D64DEB7B582D9A748CDBE2857B6905EDDDBBE4CF0A502A92BE99CA9F6BA41213
9D361ADBDD7440F4C71C8C311B32CA4248DBCA8FEF30099EDC1B50F5F24E1FA1
E3B3BE0FF23EBB31F25BFBE907C611A77CAD1C6BCE6C83D0F723C12758D23E79
1F168EF7E116459AE6ADE4A41A534755FD540A5DB2E7AD7252C6D11E5F169FB3
21247A088BDB3DC77AB340819E9127392A46D21FE29C798168B86F73C3706A6D
A4B18D3AC08595BC371BFA17E30D9187795CE4ADA5FB8636A753D3526E5A316E
1DE67743A7CAD8B67BBDA67AED6D9809AB69E5713B8C647A7EAF1F33518AAA4E
E09DE1A4BD770A8B51D56D423928D8837B551650E88928E10CFD56315BA52849
8BD8DD19642A984762AC38C8DADC09DD68034D3451B9AD8FDC0F297E4D7AD1C6
983FDA03BA7FD56F43A1C7C4A12C341292530B662A89442FD4EC2F65B91F3182
EF11F004516D84895A75A4B4C5219A2623254DABA7DDCFA7A62A039BED2596B4
D281C5FF26DE0FC2D09452B2E14AA7E7D979A9FE58EC90F6C2808C1B1C518F7A
97D2DA2BF8F06F46D695995CD305D273229869906254DBA6E82E817463974FC8
E7E608F7D58C546AE5C01DA7A30AD3FDE3A2B54C931CF57774E7090902C27C14
5F558080B90CC72F92F709A757CF6434E441D9C3F474790BCFCC6E24A7BCE57B
77EF3ED7805D8909A4E40CFF39BCEE116BAC593030F24162EB586570DC22610B
77C1853530695C848DFF35D5B78AE3B79E78CEC93934F240828F9755703D5B22
C8172B650B8194B04EE422FF3D5A0E340B25FCB4E09F627292C9BD87B28B90D7
D6A99D09C7AEDF5EBC7E404DA8F8FCBA9FACC54D624936D05432F5F78174808F
FEA5329065149CAA065B86489C4FD708D61A623451D9F6813D53DBBAEA823DAA
F4EF7F45AE3953BD8A14B6FB5258051BB1DF4D0AD8E3158066BECDD7033870B9
FA0AEB1757E191DA795F73ED4DCF8564D8C9AEDCBD794B4755D639B139C262EA
728A08E84DA95AFECCA05985C6922BC89EC570889C97CE812CAC9E3BA174E4DE
0872E5F36CCE0EEBD2A891FEFFD3E0A4FD2382F5065F89766A84E2125FC83102
A57DBB3DF84DE8FC4349C074202A50F44A694182178EFC736B512888A7546B73
D6E5EF55992E198A10A500BD2A5271986107B26888B3381CA2425AE4E2075BED
B9EF8DEC213806ACC562D50D48C7CA16A31A7A678C95DD945AC6553820585C82
CD8F53FBA047018956B1F679E4B3DEB4E13C0384F8348C36D3EBC83336956117
AFCA33E14054541C521A9588E275E4D05E9EE8EFC505738B7A82B7DE143EBCE5
37C75A5CFF15774312F1E1D52596442977470BA455114F2699642D1019225543
A2B4A6EC00269940D234EB32C5D00D2D5AE8C84ED5BE16A2ED8ACBAAB7CE3D27
7B1BF937DF395D5A4D304BF6728086B13F00D0A97EF70D018DD3F3F6BE1407FE
EB87863D131103D8C1BB189B8559795B4B4284A885F44D73119B0DC3B0A65587
776970D705491B8C0ABDD641DE9DCB726059DFFCE5AAF2A279DAC654C753CE2F
D02BFD5BFCA521BE32F344B6266A4A0C02E53A4AFD4ADC46F70A21D99CC3BE6F
DD8F4CE71F934E1526DF268C97A75FC9CE443CEAF2648E7321A150B00C952DEE
1F6CE61D3F921A51BE1068C2D0C9F9C380CDF1D73911A03A8A16D4F5B1DAC204
3297CE8A3F8B6C0BEE00646A911ECB464506A06FC5E9C69388AA6CD94C8D66F9
E1AECAB27B8612FB30D2DFD2F4382810B9D3BFAC32003481FAB0E6C04E06EC71
D6B18574BF2A728BFBFC6B94D757021BEBE95E103FE05FBB0D45328ABDBFEEC5
6C3160F4D2E01A9A07EBC96DB055EFF5410EF73D87C8A636D9A0E8236E719C0F
EBD71D40FD375652F6CA79098C5B0EF1836BF4A93AADC4CEDE171C6B6612EC41
E9EEC3BB908F5B888D888D0C33905AAE75AE836EFB008226001BFA10F7D66DD2
07BAC905988AA4157A3A638E224645E6131ED841036FA6CFE1116333E1F1CE3B
D18C744F7A5F346422BA415230CFCED93EC0CFDB19B1C0C6F90B2BD6F06E253A
125F1431BD5C4AC80042C060C109559F1BEBF7153F96BE51482340953C393C66
8644B9506F735B7E25FD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E0861476C6BDA40AA30151943B874CFB63DE5620A7A8F2CF6EA77EC
ECDED0887B6C00B24C7A463FC10FD2C2F18D67BFF9FC9E621DB4AEBA91880FDA
C1B255D3EAB46E6243AE85845FB84DC84256134A55488B1A6B00C672C13F4D70
9C289E50F5C1D8EF063ADA63F3351D5E8B2A5BCCD284480B0930FB24143DD785
1B5539E97DAEBC0C57E6CAD4465492780B560D7A64F4AACF00DD611A0D4AA2A5
9BF972145C6A25C355CF276F00AD5F5E4EEA8D2788534B0E643A05643E8A8303
8029E832F016A7F41B9B176926F360586A5C26C99195A6646B1336FDDC2FF0E4
0D5A3A2E5B7AF64A3304B9E86E1BAFC221A8165D453AEE422EFF10547CC2E44F
566E8880D7B62B55E06213C9491954D1A8509555EDD6F3AFA775472B61C784BE
8968101A50626A429AEFCD373482B35575207D2AA2476912EE771037F8D51B80
31B5BA4FA023A643AA617DC3B38D8B3697CECC8AA4F174F5B2C1124A9CC2E373
ED1F6F3EAEBD1C8C533E943977A590361A53953D75312631D6F07794B1D85325
1462B649443CE79BEBA97AE481AD4AB1DC86D8BDB89DADA55F2D1AE640852657
EBDB5BBF685EB2A4606DE426020640D534E795EF9019F887473996793F6FC92D
A11EA37B2EE094302A297311DA3110A873E6F7DF8F113DDE6AB0E182E5162DC7
0CD52C99C5542185168CA1F712BE96EE3F15292DEE4B72E4FDC197E724033F7B
B9128F40DFF15856EC96F5C3BA6E6CD5AA138B168C23814295B0BCA199FDEBF2
CC7849276A1AAA5F1598EC7A9A573A79CCD04CF98E4C6E81DE8EFBBDD3C355E7
3E38FF48F0FC3A3DF5B4891F92369E9379CE45F6CBE7E3178917EF80132FC8FF
0C7E7C01CED707EE67D626949BAA454CCF3DD58FD7DFF7B255BB8D78045C6F33
68050136CEEAB37F705812FB77CE978619015F83689687231C03FEB091AACD0C
096AC82B79642D2AF6CEDCB5190340A318A5F66CBDB3D64C3E9E49ED75D95704
9B85E0F168D4D12950FA8BA9E1FC687A5056FEB861893A67198B49D5704BCBE1
4EA52966BBF2629035D0209A74C21D10B0BABEEAB1C52E626749175FB4B267D0
D6F8C04CD391EFEDE4224FD7CE35E7D5460EF05BD7AA8B7DA39A26DC8F9E6003
B2EC15444EAC35A6E054D213D0A6FE97C994ED2EA14FE6FA12DD0D4E6E52A32B
048D621B04296FE74CC3CC0336E26E4AF4E9A6A0BE3FBE05D453553E147AC46A
2F2F1F5ABF0D0F03D78AE6E30F27C037FF2BB6C0229DD7564D4BDC48715E8499
206DA2C42BC1E19DB531D2A35036D25CAC3FEB287907389CED035FDEB68D4F69
6D170E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
9DC141B7F6830D6771F1A3CAE655CA173FA57D400530CA6FABDCCB4325478D0C
93AC7EAA9DF7605213DEAF94C7281D9AC68D884E15ACA3BA68034F897A2FFC1E
F76FA2A69CEE7F1E9543904F1773969F65553C3469FD85B2F2F89F0E547BFBFD
F62A3E47DAA4EAD6D47F0305CCDB297C320A48A3655FAFC810CEC6F6D68ADA4F
AB5DD7F61DB94072B0AB8F1ABF62A78E43E1578DEBD2D05109DEBBCEC64AC700
4C28C4F0A5E3A003423B9958C73D306B2B4A7C67A95F8B4E737992642BD3701D
39FFAD94524A7752560FE97B8E99A12AFCCC5044D989BCAEC863BD15CAB7CE63
0194962E4183C3838D9401260A743447DF953444B29D7CB004560D0685F73E87
72FDDAB87125F419F90D165EF1C2A06A9B7500C6AD185B4115777C6BF9C24D88
653589B431FB84E4DDB650C2F783594DE6123D3142FC5C99973AF211F2A2A05F
5A756073B85FEADA4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3580C547C2
54FBBBDC95998DEF2EA825E3BB2AEEACC0F30841835121B7A7D7A973F2EF67F2
795E6DD8CF55B9823AB2B15ADC328CC3AC493DE8C2F022EBFA14A2976D8E3559
B5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E9A716737B6BA413F846A887B
D1B3B89EEF73565F3D0D2D1E40E4C2811D37C9029692DF8E94F6FE39474EE13A
EEE65EC0E099C29064CBC0503FA4C89D845F91A107C8414C1648F6EBF6C8B1AA
7B2F72302AC2C6E6E9E4FD1EDCFCB8C648B2BDC18FE07B44B7E886DAB96F8B4A
BC3C584457B1565FE02E26EFAADB605C5CFE109AC7A355E2283555E10CA9070F
BB98E2337281FDEE7EC20EA060A062235F8848946BD058A0C86C794697BB0674
C1DA26CAC3FCFFE73689E2CCCAD5DE725AF6C7DE282CAA214D69B6793520439F
2991BEE6E427D4E82FADAC6C3829AFE1196FFD8D1D0F6BFAFF4F9062FDD08665
FFBDE33DB3EBD99D8110257DD0B832CB4209074A589041E903F6D89E22D34EBD
2B3C90EF5D9AF0A0DBD5145F0FAD88EB09D1BD84D00D951D4CF9252A4443EECC
AF1E56E5FF02B9070C1A92470E3AD7F1CD944E91ADBD1EFF555FF3EC5664191F
1C11943BB76D70D356FE5D145C73670D1A8F71E5C4FEE96C8D4DF87FF05432B5
165C8DDEF25DC98CBEA51FA99398860E1C252C17EE576B7ED658ABFD497DD5D4
E49663A5CA73CA347E27BC49C7DBD28DDB3AC7A78020551168A47ED789C2AD9A
B8C8FB7EA2F8C7D4D9FAB4B8DD91CB69558534CCE31AE7E157D0B060877AAEE5
14CFF0AD50200A157151F7625E63296E325E2C36D5DC45C5129C2D342CA7541A
75675EB2F1A5BF25461BB38C84D0651F4644CF51DAA8608BC3B698A22BAE29AE
3FE5C543DB648AB544E8212B3B2F97B5844022274F5EA46CF4E9D49CADFF1DC7
AD838B09A2CB6136CAE6AEA52ABA90745D527188599641549149217DF6B36367
A67BA60DB09562E82863F6C001ABEACCA36DAC81C30C11F98A77F4D100499847
E1102CC075FA1210881D95D6ECDD37B0B820176667500E58782156ED77373459
6699116573EB74FC1C83B091EA1700BD5B069BB7DEEE2BB45E7757F7BC00D85F
75BF5F32B350E2CF46BA0E8D0120BDB3E742C15DE5A8340318F907D7DB5591A7
08C83C63D6D457915A2F41B21629926169F4AEFD81BA2A880F4799EAE1C0C57C
FBC28FFFC956640872B49219FA101B88EBFA3E47EA4515043C418049903E3F36
885AD45509FC3CF7A376A608FC51751104BB96EAF8314E2322C457EC6683D385
525F118C799C34B50840604E7C248CA5BAE81E8C76C29FA3779933221D8A612A
2DFF00179C41CDD34E7015DD7198AD6EBD2BC01221F7E35F8662AEF8B6203C54
59E883141A505B275EE1333E6958254B6D96C9E54D47A12F4D299F67168AF7E6
1F19056BD1DEB7FE32A4F4E62D202CE86DDB34598B8CAED5B6DA81A6C816C747
568DD57D21AC8F8B1CD8B2BE97272017FC8176FB0988076E76EC6E8B4CA921C1
AAFC0EC3E24C38BF6D64E9C259ACF279C3272383D7526CEE1C178B1C6988F963
BB0D7534D41E675EF1BA59AA153AEFA7AA88C44F92801FAC61A4EFA2911B55BD
7DF444571A774CFABE590CD7C75BBE8B58EDC3A2C53FE35CC6B22EDC09857DBE
3019A7C60107821040CB0824EE588C4973D9A0D51FAE6E5FC9F82277403C5DCE
FC2C316D499F60E7C6C04DE9C117345C4E51748D3A5C5167780590DD9E188017
79FBC3307C0BB8A5784518676D62FF024E380036EC605313952366F3C351EFC4
33256002C59C39260DF18DDAB0BA5A40946D550B7831A2EE2670B2FC5DF8A50E
6F0C48860C52FEEFAA70B5953345568F1DA030BEF5C410DCA1D11F770EBC2E64
1196A40F44A2BD2529610091D8A9F09161A41BAC6A15727CE914A1009B2517FA
41ACD230B1E0CE76E289C42EAB07B0F60452B537A69B9EB54A68FDED4456122D
483AE830BE0C173A0D256118B0867DA2ACFA39F9F6EF1D81C607DDC242707D6B
53ED198367C7D54AC750A007498FA31E27B0F86C6D3AA81060727EDD60506506
EDE0AF44190FD947C4B9D41C4A6A03DF807F98C68F883721E6E7E6383207B054
006A409855639AB72C071CA7DBDA97D6000031341B9DF942E732F5332C61623F
AEA9CABAD9EBC22A55727BF40CAB44696D80CF4535A74576AA51C2086D8E71C3
4694CF2C4CD167F58BD2BC3015B5E9E22E47F1B4F33641BF53F82CD8E6D7EAD8
4B4B41F5D612653E3CE63C5F1C17D7739FEE56260D0D7AC778EC22A4FFE4E1A1
56DDF0127E2C87A8AD82DEE1B8090C9F567438C6CC6F9A9024949B47ED2EAF15
2F6F7F6D65B53C5EB5611852AFD27654A467FF3CA388E840184DD63D487C130D
8C59F8E6BC0A3D6A21AA60543F3470B82919E014251C3C2EB411F1DFD619D6F7
2BECD582160DF691CF265A4ED6A5B90EB70E2BB7C7C23B7B83DD252E46ECF60E
FFA06545EFC162942911B3230B8D462CB20900BA1DF90BED14A3164DA8B2883B
0B2CA52A8B48F33FF5153CCD63701C3C4909B75D5369025324B818204AD84401
2346CA7C8EBF4325EC599D755882E751A70A0EA8471040EE4E7B14727B086F27
E43E6E3EA6EF0DE68E1F646A51C66694B87FE408D52ABC831EDE8F5F1DDDA31A
87F742D872AE90EA4AE7BA3359AC2FDFF19FDF6DCFBF5AE04BEE398F16E09681
886CD627610737CB42966EA3FA2B7AB0E97B3290EDAED775EAB0D7D553F222A3
B01D18896F7C0BB5793B266B83FE8D6970C6DF9DB4946FCC6A48F4A7A4DF51BF
0EFB57472C5FCB1195C608C43B811DEBAF2573482AFDDA9F1D252FCF3DCCDCB3
A7254134186256FD8086D05B4D5C88D88BEC3ED1305354BD3093BEFC7C7667A5
8DE4AB7B8519C0DF7B5A381FF8E1C1630957F9540EC304140C4E1569529D4333
36951DE4EE9BAAA0025B2EAAEA5F3111D898979125D2AC348ECA164E3BDB5752
ACF12F16A5BE9A050B0DE704CD8EE4010F3AFF1C1D939E2B603A03E917000E98
03BBF7BBDAAEF0CB19B70861AACADC529A2B37845C5DD5660382C6C0E28E9AB2
3FE483B45C38C36D8EC170B82BC1471F59C8EF9AF423C2B9D07AFBC9394BA931
CCE81E77B0D858FFB2A0ACEC454312EC1DCE08F417F33043900232407BD79E48
47F7E33662A718F59641EED914E347D87F942815288234D8A66AC0A17AFEF783
0896B2536E30A5E1758B293E6B721A13DCA21512CEDA044F32E8B794E5C27EC5
AA845072ADF11FB8B9FCE68B86E1F42DF06C8C3B0209EA4903C10D598937DE19
43C3BF34DAE0370280ED092373C4BB5D5E33BD9913253527B52187FBE2AABD92
72349E4C037061F44EFD734AE04EE640275953E222C1AB7FD8AFB2C629CD2B05
12E1788A849978622CDD235325B07090D8770796F7E1B46654FA39B6E9E00B01
FAD7705D8DC604634225C5915DEF943C83C61E38D8291F5649AA86BBEC109701
5893E2518287ADF862FA731D18CF33BBF61F01565E3C825B0D6146C3B549BF2C
28599EB66F071FFCE3410C547A9B74D21730C5C14796A19EF175214EB32A5FC9
6F88FDB8F030E4F4D64B007D7DEB8854FDFCAF09575BF519FC93753332AC4644
690024FD13CDE6D313A06587E6329F6CC3FF5887EC376737D9648BDE5AF9F5E9
12FE02AA7158BCAD2ED2787595D81BC7EEB571CF559090A230BA564503FFB362
F8485896191BE975E5791869162F1B7D62625512150439080FB47F44979B7713
3B3038B71477715A00DD0FF50F7A508EF9B24E26424B1E91373F67E464D8057C
5EF17F1C3EB72CAEBA74FF65DF0E53D42DAF400AA41C55881CED39A6EAD01854
DC00759544C94107DA1B4A6EE178FE71B207D088EE8EEEE27BEEA5713D78F437
DAE50160FAC28C1C21FCF83DE1B068F4EA110AB03B0C896B05D2E06F3512C764
B686FB513091A8F7BBACAF0CDB9B68E1561371E8F78898E721F2D97CCF14E0EA
440A74DBD51ABBEE7629C98D586F55A099E24B9E47DBDF449974F4BF9DA358EB
CD3125FEECD3AA4E5800D626CC47D247CC610668FF164EFBF2FAB08962CE007D
0933ECF029B26AE0383C3DEF69C787AEAE40C86DC4B5985B84A35ECF5F72BC11
EC5133020BE851291CB10E58A558D6440E61F72C3299698BD64C754711D99A68
E296DD3E74E0DF56E079235A8B3CCD3ACE5E151E7BE06A82A194C7BD042EE90B
6808E242689FE1217FAC6ABF3636ED201011F687AA6A1FA145D82FF25F1E67BC
40979F9B86E0222012DCA626F8A2147CC79F29BB1232A872ED519283A94B4B5C
53088DCDF88951BEE2F5C77A7220FD0E0E33955350C8B54E142451A146811977
304D8551EA5D5B43FD74F3CDA70053F59A816531D1983A33A1CAE23796DF4BFD
E65F0A787FE094AD9DDEF9A9A339D0EDE90B2FC30FF1DCAE9BF86FD2DC770443
807638D11534A2588BE7E2A7D96F6C7CF45FCB17040AAD4A686AD5F5776E32E5
C129BFF10F485B8221483C2AD47B0ACA1BF7DC7C7E2C5EB5F68377A82ECF178C
FC51F75D4815BBF76AE0E639B048A38D0D6B9C0C7CE81C66030F183313C9B8DF
CB2AEC3B072A52D0AD3D4BCED50924B9FD409ACA233C082BC703ED67F8956F3C
757799D61A801701C34CE2B01B4C39C37DE56BA2662E21344E73C74148C1EFC9
2D47B30BF10D01299C451CE6DB3C8E9EED4DDD03EC7F2CB4308976ACBAF5037E
C19191219B28B56B22AB4FABB4CAE2E44AABAAE30F105376C3964BF75AB5BE76
33110DFA2EBAA4303C4F4992D05A21F628B7901829DD8727C72A21E60A61A014
02B7ACCC86DB1731F1F1240F7D6AF39BBEBE2E4AC9E2B9D116034191A1A804EA
935EF447972AC31EE36F887D0CF61A575444B31180850172135F49B08CEE0ECA
2F070C601E09DA0B9690C4E3D619F63DAE2A782AD53550CFF43B4DAC2BD3A84C
1A663BBF1E7DED373D5F1AD84FC79DE23E2BA52D8EE1B1D3F8031887C2FFEC30
19C77E70F4D2F5C6D7F44664C00B6ED737598DC827204956D533E0A0670D60CB
D73D1E1B9865CC77628A339997D35387DBE2CA7CDD580C06A7DCD556D236FED5
8998C2ED6B93CF62F8E991B754899CE46B900EF1DF6700D6A10203D03263B1C2
8B26EADB953ED292A732C09F6E21CCB01746D41D1EC44BE55DF5BBD8D6B0F995
907A3F00E21C72DC6C55F36DB35C15D5A480A1C9B106373503BF86D1B7DDE8B8
CF683227F8217212BEC21B21293A5DB3AC79055A14E1A2AB1902F879F1361AF8
C72DB6C585BD959FF8D0CB69DC465F32137D1B4A8F90B14440FED7E0558C96A7
E0F31A48B1DD6F27D321F6F925E13D7F64103E2A76CFFBC91DEBC2DD56E244F7
1424AC1383F7C36EB303FEBB2C20AB71FBBB922EB64626FAAAA9DB4DBBD3EC59
5A29BF660674457A70F9DE40609B822F2C9362414E03C630CA6F8225F6159C5E
AF6D02B1B53941ADCC6C283EE3E5846EC08A76EA5C201D9F9939BD4822B69A8E
CA52A0C3D37CAB4DB8AF57358071159ABA83504664F9F6AD78153CEFE299EE74
597B731803732D18A9B4687989E55BAAA158678817EEA4D4BC409CC94D3224E7
5B5764B9DFAA97EA454B7FA5E0008109FAF5273613D3368B9DCD15C20059F4AE
94766BE6B3A8DB9C099B73ACAAF2F2106069D58578B215A960603072616F29E7
208C0082C50185450C6BF6C94254D23AA87200828B2E085A16B4BB005B30C161
4AEAA2AEC739ED67EFC7F9128A17CD447047E6DBADB7AE9A7B205FC0B9A71A1D
06D2FA9ED0B02168B32F6CC0FE765F2AFDB1A4BBBF3C3B3194AABFEA61341C59
B612180E4E1C757DF26B0FAE953B015680FADAFADAD02FCE8211CA27869B4F1D
5A66BD297F621C92AA4FF0DBA776F5D2EDEE6444CEBDE8CDCEAF38C0BC9E406A
35F44C6B412ABEC733613BC8EC9D3FFB2658CFA615819B889A7655CA63B822AC
4C0C274A29EE2FC01C25913BC44D69B3AF2FE2CDB6BD6A50B8FEE8251B5C7BA4
C53EF135F48394EA3A85BC33748D6E5A8941D32C44AB4AFF960DD4F1417EBD89
F5137975F8E5DCCB8B33D8D65C433103611DEBB530443E9AEC490116A94C1982
EEDF6795FBC0C7B3D1CCD423718AA4352155EE7C5B20A9A4C76C3FA9EE672E6D
FEAEFCD319C1BD6EDBD72C2756146C4C05E5F4D03ECCDA89824CDA2FBA8C1B5C
69DC9941DEB2E1BD49C7165227301581EAD2219D8FA49A6B1525AD2D1F56968D
9CFA81E057F63766E498C82811CDE551ECB3C8DCC93024F925D8D397E38646E4
17217FD59ECACC94B7272DC613F965E02BC279C743DA9F3E4CC07736067986E3
97D9FDE103446E46A1AAB5337B999E290BB4078ED610795231E3FE9BE3F9412A
0DCAEFA2A20B54EE054AE15F26A7304A9A97B43F362FA6E06DB5C689DBE39D73
BA8C9C093FF36C008E40F4B344148D1C44B49B3E6398E1051D1F85618EC5E85D
C2D761FBD95ECBC414640C733DCB82B39EA37525A6CC1AB858A2F1FBE5680A40
1376701A40566DE91910F0DD4542E6D53AE3D03F5C9672AAE928778827329D98
927B4066DB71B23B0A9CF1F1FB873365EA1FCACDD36E46D81878CF1665E3FFD0
9C78FFF428AC27BCF0318D084E9E69BE5E4D11753CE4F2239662ACFCE7408320
14D11E9DBC0885282382FB1854E2317ABB61D9F28207671D780045C1AE05E9A2
A4432B7BB69C467659C2247A0B2523D5FA4B19149114134BFB10D1CD4AACC908
540C9F6C3B934D500BA9BFC908A2BAC4B3062E37B68DCA401224AC43264A49E4
A05E2A67BC0B4901E9BCFB5BDCE3DFEC18B9D8C3D98B00B67B9CE1D0D743B5B2
7A58A5F889A5F45CF71943537DFDEAB03839B3A0481192391FACD2C83BB0FD3B
5F3789A77B21A4B5B85EF3945AB516BE7B6C3CE8B284125E634C71F84A9BE9E9
2B7D3A40B4134415BFD7D3C840D4896A183FF4E395EB7A69DCE16AF779DB5B0D
F5A6E689945AD1D5EB23E4F322BFD82BE007D82B25A8F741E75742241AD41FAE
4BB693A50E24F925F3A8DEBF22818C0A197A853688E3AA3162E6138192E19652
A23F2341ACE718440F9AC620FFF89CFB7FCB1955C7DC8D08845B20E2CECCDCBB
DDD028E973830BDDE3DE50E1EC47D4F787582709775477B23AB62F13004BC700
9F6F9B4154C3175252997B2568FB7D2841619BBF4D267B014DB3FBC5FE022863
4C1A1B606249BCE54D2BD2F83E49FCECE08C8107A98B612A4BC3C2E8B2504E0C
A6E7B65FEFBD5F5B994DFDDE5C38B305841459D20BCC18C1C11B941AB9E910DA
5459627D2B60C7A3E39A4C63D2D220071473D27C7F601B0E36197BFA431548DC
233902D54DA502FF6390727543507A36A01100B17076AE6C6FF5F775F9AB4DE4
90FA6577D5C87A08B6F333E1C2EEABC20A070EBDEA0E8CDAD78E42F9D49AE24D
11B9B064801D47F4195A26B07047B80849C0A77BEDA560ECAE3FCD7FF41BA70E
625C8EDB00FEBBFEF051806B0984B004F3D2E932257CE2471463D4570D4E89F4
CD31A93C312EA467473043C03A66FAAD8EF6D6DD77674A3480CBFA62794496BF
3806E9733ED13919BA719C14D80A9BBE54DCCC081319941D71102442574818D8
E2E330E2FE5102B7F4DF3E4FF29EC1C4277079D25627DCD5E40E3E202D717693
4072863C746B869F6C929ADFFC2F1C50DEA895512A4C1F23D36738229726DD7C
61478DFF4D616CDCEAEC1AD70D9CED72500BD933A54CB39EEB6372778ECF5B6C
0C2F014F452A4C413C3602323512D5D98E29A6CE6EB31F175724D2E55F0EBBB7
4DF4FC0A490BADC05A80BF9BF5C44F374AD00024E9602ED96C5227060C7CB058
DF3A612C3ACC7D92A6524E0D2ED49E31D611F993A4676961DCEBA9BE752C035F
CCC3F5D98ECD3DCC13EBA3049418E59C5418E30A4B5DE99814AD4A0798392364
FE0BEFFF89A5599AA6D612BE687DC0C5D496402627FB963A90B3C438EFB1B51F
4345427455BE9A926C7A8FF4F45AFEACD58AA7A9FD2376654682C61FCB9E7659
E2B0A319D5E77A57BA9C9BC664DCA8D0D1EA25C291CCED6B43B67052CD04D314
DC2642E25A3C3068A83A513556D05359A393B6C6929BA6D6E1C2E0FF72A920A5
FEFD64E894D64D1FE6765657E6D13CF39840FFB6EE0B0A7D70A27C36C456F678
CDC304C1336EAC4EECDB1B8AFA3CE22F8B07A8C48FDD4D133116F267E4972D6B
C1206AE144FDA6C03120F6891A4FFB638068A5E986B3C401AEC31AE98C6CBF5D
B8F608C0481530FF07B5274188AB0109E96DCAADDEB2432FC8030F246F69020C
A5542A08A0F20CF0D414B21E921D3428906B4105328F470074E8775AE6FACFC8
F1DEEDD149E7E9DFDAE333E185F4E23E0A66DDD15BDED1FAC380B91F8A5D602B
7BE25FB77A60D04DDE53028BEAFC09870C49D2C7C114818E66FDE710A442C8D2
0A5A230113328B822833ACAA19182C7E3FE4F4251B1887A2C605FE1895D30E48
FBB8C3E12E312EB7BE3084D2BA1FAC3D91C6E7195BCC41A1034C34F4D728E9E8
20131692793929CC3D4196A7B9C7D6CC7D75E360338F293DB4C2900598D990A8
6C1172A20BC3423FD37E586D41CC4BB36198BAB18372CB8469C8D988E06E1ED0
2B277AB08FCEBEA6003301365DC88ECAA304F10AA59C7F68FF91DB97DCDE55F7
01A63CD1077C51EFE1B3C161E0965B220EF5104EFFE258C055F0440EA22D12EC
3B15060C553536AFA1AB550740F72F33A20C22114AF8CE12BA8CBC2DC5376699
9328462C31843DFA32B67C16195DE9D59A0F447B8DB69CE8FD6E2EC5AFC1C9EE
282505EE165C67B85CFD9540F40E3918B753B5E6B23B1DDA74A819B97A3F23ED
FB82C88901DD8D01F33DA7BE791B44427DAB18EFCE389A6D7CBB108D60612A4F
85501EB8C86C9A1BBDF3E1C9FA6D058BE17FEB24E202E2F1348B2F930C2F482F
17D107B1AA4C3891353CB0BFDD664B7470201E0B68633EB54DE3215CD1B5C72D
81FE788754E00DF0759C4A699D1DABC7DF67F8841094D716BEE85BA2BB40F538
F55C11D50F882B7391384218E52CBBC2EFAF3B7F0B7478DD477AEF90C0AAF406
FE4FAF87B5EBACB8F10A27E2B97314A9BFED3E1145BF128BFAF9B50806C8FE8D
CD943DAF3FB4E3A363CE18EBC698EE542EE86C72A3EF8A138E760F4241574033
C78F337596189CA5ADB8F0EE8F6AE215F8555DC1C0D75FC743A95342FDB50A83
1C0AD845A66211A1D23A3F92B85B2C62F1971478ADD828089EF0860DAAEC478B
6249A125B59E355027F496C600CC5B6E47207438CBB389612CFB0A8353FE0C75
E666E589115090897416063D0E0A5D8F48FCA2049517C3A95D471EAE9D83E664
D7CEF78D51D42628DB9DF971790CFAD5F5B21FE2D0E497DF6E457E2D58805AD3
214F031777E35175370D71931B1B43BA4B41CA6E929E4FE678E3A1554629111B
2047829A0BD0C1FF587F8A58440D82194CDB01A2CFC41133C69AD75946DBFDF3
B51B7083CFA90832EB06617471F08399B1453DFBE9468CE73450462AC1FB753A
41D8AEF0DF67893C1D06F0EB17E40577DEDD7EA8BA95C479340B9E18848E9E29
CE90FD183B94C9CE1424E86B08846F902CD400D1F79C0987510AE4DE1B9AFE74
5FDD97A8AB335A47E3505ABAABE37D6DDD1273580D1BEC9E882B2F7A1A617781
BBE5E1C546331FDB4CF16123266B94843C4586F7B0914CF4136FE60CE159C111
A6468D2DAB04B3ACAC61986BC3AF397173F66FAB78AEA057C18ACF58136C94A4
28B207C2802844F98992021217D666CAD26486FD8A4E1F4023DE166DDC56CFCE
EC3CACED14896D6034D50A5444881CD326EC96A4DD1F222E2CD4FF98DC7F79C9
89CCC086CAA9FC1A12731194F7C92D83695EDEB559F0D4A8F736C91556BAC645
DB288C6C3B3C1AB46BFCDDA190E9E93C8DF81CDB2FAE27AC8CBABF042A6A15F0
CB3762DD40053E9181129C7E23E338A655247C509A950BD2C3ACCFCBCF71FADA
1B2BBB107A3EB31B9A6ED3200298887990213258C36AAF829DF67E37A242C5E0
FDF6AFCEBB0621A8ADE7535D5005CB504793522591E005AE22F2902A11B8BDB8
93FE33BEC2CF893B0D3DA4B73D66460D19A6BC8AF994F06C7B4B622D86519A9A
42FB03DD17290E01444DE0216A5AA6C89898662200C64E39E2DE83D693068512
7D91CF7488DEC4B23A97D080C2641931E59633708BABA1C0C4726ED2DEE2BE74
1D163595A8C8CD2CC3E3DB14FB7B59D06677C070216FCDA30F5723F772B1764D
9E2C9CD6BF18B9577D3098BCE77E3ACAAC49AE0FFF2957BA9610AADBCE94A435
5AA673AA61555EE91D01EFAB45F6927C79ACBB0DE25CB10C52A339D233EF1B89
5D0C0C9F53EE18B53AE69E1FE68FB06FBD58BF563372DBD30BCB727C37C65346
BDF7C38D8480A71A9FCF98F4F9501DCF69FCDE2EEF4C91B9FFB9528ABB5CF978
1082DB56810D7BA76DBFAD8A441DEDEE59F33D9D246AE8F987AB4E62BEEDCA18
AD1BAAC24515355F9825C843D0C6BBB366C705803BE26DAC704A6F74249E9F5E
B7CA37809EEFC33FCDBF9C3AA3D3F6744C6E2D6347C8510AC6D67E95F2077265
32F83AB19D0EFE83937474321B7E4C63295997DD487BC128F397E415393E6B62
F58F9DC86556254A8A71F70C8A1A808F67901B52715557491B4DED0A19A1E646
4D99B18F47F2988E6A31D07C0EFBD835CD0C526CDF34968DEF676CEB7C264985
93783878C0A96D083E18D9F88CF842B642CF66C86D11E1B064A2B59B90EA972C
B8CA3E598ACC37F45D571280B3333419C677B64D3F1A150213ABBEC728462BC8
6360DF3B3C743459AB088BEA49C5D06D6F670EF33BB3D8D3959AF1F3B2DB5A36
1C07E06C49624663BEC47141F9C5DCED967A0667DE7465B7EEC2606AB347B734
DB61A325BE0A37CEE6CC1D4C8F3B8D3031204E57290CA767EC7EF8F34D00DF03
5B7ED2E30077811C49CA8198D13F2F465616F7949B5DF28EDD3FBA26D6EF2B31
CC1B8AF7CC9A7435EA85ED80D8DAA2ACAA5B048E4E7A3EAE53445277C899FE86
E54B8BDB1490AC76FF84E5C2CDD9B0860E6FC31462CE7D19968ED81AA3D7E7FF
51C11A5041696C183D62872AA2923D802D94278A2835C91E17ACB22F3B53500D
A95245AB7BE1A90282BB20ACADC2092ED33B200AE21D0404DCF32BCB28A7373F
88202796E8A3BDFC3AA8DF0F3D5886CB8AEED26D9949014AABF728EEE764D9AF
9DD776179C1F610A95C6BAF7DACAD9924C15CD6BCBF8E6854D2A19F2002CF3AF
40155DD8484FF03FFC89357E3671F2D1F17FD79BC48A778BB8A47A28454F416A
08BEA0FFDCF8A90638660039D6EAD9A62F94912CB750BE2E146ECBDD16A1584F
3EA2AB3D9A37817508F66A73B1D3587E029313665143C842566C031A2A8E96F1
93D0622DA31ED62553CB9EB3A7474AEF7C77EC0AC421B42C9F91F41881A36A6D
E3DCB6855B65AAA49345C3E149A8A38EC38515582AE2C5AE270F31A408D74D7B
C3E2ACC996C889BB23ACC950355F6B935D49902A326D76A1E5D5E4B896D55B67
837FE1B0D9EDEC9711F4EEAD910DA5E294616DF435DF8515DA06F529E3B69B89
28C8C2623F38D58A7C524CE5851CC83DBE0891D0F79B16C55322527EFA589455
B7C07547E3BAAA4AA7CD8A23863C45B80455AF129EA1A66E87168EBF926C2A91
C52814E55DB5D14B64DE244E3A916F3EFAD1B4BF55BEEF99C74BD31541AC1F59
8A5843D1CAD6C5A53FB3BDB005D9CB9FA2170473D18BE8365338117FAE90B9F3
164E2A29FC652DD7326EC4D7384A9D9A09994282B995485CE83DD41EB5ABBB29
858F65E937CDE31D67C847719779DE0B331BC635E387DF38E4B5DC807AD09ADA
D44A2DBB0299A72F2185412A6B40EF8129335C9340BA899EBE5BA3C0960DD5EF
B9CF5F432E37CE6ECAAFCCE297DE8AF6A14C72A6881F25AC7EE3A0CCB8649F60
957249EDD95E20DF0B61F7FD754ADCB4B3957E1B8A795D720A30B7DE482DFBD3
1D5C6F38CE44881BC3306E363E443C146F13D4D1AEDD56E3B05494F5319B2137
78CE74863762473AF69F765F4DB0D262B403AD572C554AD1A2109C525633EAE7
7D49B4DE855E6EC975459F734315862E545465CA8FC27356F03A1FAA25631309
7576BA208F53491F0A9AB6D612FB079A508FEBF46CD11B37F0776F5A7D2E781D
74C76589D2C84E30D2E32CD528537F493C5C031A051F6DF41BA9A12CBA104395
E05AF03E4E92E2DE364418949B2BA265BA9D5D435DC4FD38FD80814AA0B16A9A
1F78925D6A768E0F32B56ABAD2EDC22F60DDCFA3438616FEAA0FFCCBE602E907
5C5E509F3AE372B038A7089D08F4003FDE33B9A556E5AC34D36E0ECCA433C8AC
D89F2664B7425A115D8E94BB9C0B114A6791477B96B2A3FB95D22020470157F0
CA89DE72A0B84B463F764547C7BF77B66A1EE01429DA599B66FF1E8819D7258C
7636B6D5ADE3216A592C81286B9F5692C5928F7E626CEE697A9DD6315AF32EA8
1B3A5913ABF12E778DD4A151B31CB64EDD852ECCC92114EF3E7FE61CC6FA35B1
AE3DFABB5F0210E61D092B489B0E9B262C6902E7DEA184DBA107D65FCF751CF7
2DF4710CA42F96220AD6AB44F1D739152A7105F942DC1C32548A18ECE796118C
172B354B5C191A6B8EFBF988B92C72F58E53A9A3C8C9E68C5047EC111326AC23
68B968A18CD51571C86D058185B6568A3353E787662881A5264145E7EA6BBDB4
910EB94C88D5826512174561816E191755CB663917A5F5996F56D9656E5552D0
BCB0AC2EB8F650F0E7BB68AA4DF1B515FA1FEF6DE2FDCCFA2140BFF5B1D12982
2D1F29B003E56B90BDB27E700FAB750E41B77997BB57C3923321C9D354EDF66D
FE4CAC53C721060702EE12C6641799994DEBD48FC041651BB0EDDC6FFA490EDB
EEC662621990084E2D40EB1061CBE4BA1C0F8622B1E20EC5774F24989B694F9C
A5702242CA2F72DD1379795FB9808D1BDAE2629F23EF2F1F4A0B9911D7B5E073
BBB3595BF342888BF7F35E2B2F8A76672BE3ABAF84181811D522642CE3638B26
FC335E38ACC53A8A9234A870A076B3EEE1865753CB872343CA675E620B28125D
DFE70F95EF1DA0315D212858B94C69C5A57DEB4526A401D4B3C32ADFB77B42FE
199EF9A11BC51EFEC8D1FCC22DC6C54B8C1B45B79029987D06593E111B495DE1
8CE4C660A7D0E51FF5AA8C6A6A80494F02A74C5F8B18341BEED641D1DB07D0DD
69386DFB3D814498881774ED4251FB9A201CB1483EA78FC5C87A4507A5A16CFB
D1C48CB4B342B148AA93A8CBD31ACE5D70E4A43CB6C544967073E8D291A0DBA5
2EDFD32C2FAED017F1DB11F2F7950385A436F2415AB16B29C7C199011325BA9A
98A561ED2CA2BC397B9896DCFB4F7658907CFAD33E88B016BD97512652C36383
256515CBFED05279E837D6BABBA8BABE7AB82BD95704270561CF44946833F863
5A22C6A257D1CAC3CE6E848153C2FA40CF3C5A2796DE8E297FCB960476A1278B
2F77926D99BC04FB7356D093376A35E398F6A2B78BAE02CB8591CF932DFD65A2
C369837DB8D3EBBDCFEA3A9CF5243CBC85CE3FF23ECA8CA48EA0E540782DE5E3
EDA1EC59EE43FA59859F35F62A539E5B69070B528273A685278C5988DB3A10AE
7849DB7CA9C9634F4D8720A5D5C77CB2E868AC902746BE0D0211389A42BDFA1E
54E2077719201B12718A05AAE5EA0784017541A96DFA28A9809899127695D9C3
583B23F551C2BB4719BCB2A53DE1B75E9EAA2613064233B0064282CB1CAB374F
B0B0617018E8BE957091D9207E64D8608191A91E390AAA1729198E0AE0AF5C84
1021CBF531E5ADFA6A8C380EBE25A756399D6981BC6BA77BE1C656004E34D740
2BF37742912D949F3B8598BB3B3F693BAB7E5FE69344E1424715751A6D480D6C
3C5E65AE158BA8F65B5691009EED173061CD8C5B7959ACB173B290B58F8756D2
6FF254E4792E0B2C48857EF194E4C4BF2BB661D16F8CB7283EF07B39A7B565AF
AB718B4F05C00AEA470B3E86104510B683AD6F9EE9564CC155271CFBFDE5DC05
5A847866E6E3EDE117A1C4940A7282FE52ECE6ABC85888DC059DBE81F40B6593
4AD2E4DF3C28454CF3FF6950333AC92AAC280B543D226AA9DC216155B0983887
C4FAB523150F1CD3EF8AD7DD891AF4A025B2B991EF45046CEDA5A2C849EFB86F
21F9497121887FC2B23D962A0E74F946EA19C26B2B56BBAF1D727BEA6D6AFD55
4E9AE54F81DAF3E56DDD2E1110B8BD1E328A19BFCB6E51916902C2CD37D25492
5C8492A676F6B6398098AE7E0AFEAC9181A6C434512F6A544CCFF36F8AE89971
7C50AD3D1BCC97B0D86FF2BC399B9EDDA8D732CDBB42F8C1F5B1EECC3BF4151F
2DDE2FC1D6B3350DBF6577975889C8397317B29C154B858B90EAAB7E37F70762
103BE8A3F319CB2F22CEF0A16AEB847A80C2356C2A517E36C944DFCFC409C0EC
1FED0E0A178870A0280524E2118E5858BDF08DA1B51C2AA30AD4F1261C451B81
0BE469BEDF7030476BFCE43C5107427779E312C146B0A32C0964DEA6F021614C
6023D46BD533A2277DCA975F9FBA0A5B229885DE2FF1F9AAE6695DC87C2C5CAA
2F2A5BE02C895D60E536D3DAB7BF60A742B81AB7A9DE66411EC11874E8F570E0
4190A05360B48165D86C58DB747A2455B41E7CB3D8C64769914F7458BA243644
8DF2CF7FED61BCAA295453173D7DF585741BE595C908BCD6394953021068458A
F39B805AA66A5B6F85F7AEF50D15823B9A49D69C59CC9F541E97B695FACF3E69
E313F7892798F0C5704B065899AD446A208D20D88E2825D91D4C5937490423D2
545CCC56E17E1CA5551CA503391F0EDD83AE7AFE6025C656A6688AEADDB0B23E
CAA74A401DD9A62024FE72ECBC66E7D043AFCFE52D2A9D0C4C94BF41A3211E7A
9453B50DBDFFAA1E3741591ACC2A31E29702B0066ECB801050AA3ED7CFF6EDFF
828202B84360FC6A885EC5D8F9A3D47CD8862C6C0316C5F34591A72FE883782A
6F271C63181F9524843DDE9E7F389B6D0220FB5D7DF9589F08AA50B80612D8C0
E09E0A018FDA822A9B0B3A35B1A0089F6C052512BFED349EF9E8A0AAC8A32043
51CC76C17DC87F0994A58E27081FBCF0407E8D8576CC5F6B3AA309D9C79B9252
299DA13DFE68404EE2F74CDC950217781F9C6ED40C6247A0E077BB143C31CE47
9BFF61D9A893DA0177CAB77BB183F54581052B61D6D9B006DE3E4BD74C1CA889
1A8E08C09A601506D576476E6E3E436E3D714BFD49F6DBF0448A53BC38148069
7908A28FCB3DC3663FCC6D06D14A96726DBB9B506BA8F2FC4BF3025ACD9739BB
6C231247C0862565232E6FEF1C876B1EE7E2684AF10BF66AE22BBD39804F6D13
1A1ED4D0F3C1606B9FC2B6C508EEA141016B2D6A3B44A47D46E0A4049EA3EA2D
A9EE8F7BF73F896AE9EDA26280CF2A8ACF2D0BF327EAF9369600101CBA0986E5
2A59A0E86D2637D606DCBE3D85B82DEDFE4DC2EF99745B7DFEE145DF48DA1A52
1AF772771556FF1CDF09490C4ED6B05D33A51977FD9A2CE9FB154F1F2C4EA05A
85A157B782CC25BDB37BD833AE3846B9BBA061EF08D46A53591A6F05D178A3B0
1A94446B5F508013B5C0B849A5F4DE887FE38ABA0FA5A6BB2E704D311E1F3E09
6B4DF58CB79B1ECB0352D5ED3DAA34F33C730F2841EA0C0AF84519C0878A8C71
A2FA06A0A045D56CDA4EB3967D5D2F30D1986CCB571F91D96EC8DFC16E97A326
62E8CBDD13F1D5A0023C7B41128D4859E7AFCAA164AA04D73B67BA0FE24D41D9
4194E5FC2564ACD7935C774DFD245EACF240CD5E1806A89D6122B7F23C4C6B1B
43F28E6CCD747FF301150AC50DCCA3B1678E3821635D89BEDF511017E77DE30E
4887C0E7B8F2A0D884F8C09A5CDCE19EB9B49FECBE25FD43EED0CB337CBA1046
9159C50C074DB46EA97B3855826396F410B9E754A9CA7EB572B01D2B48070146
A8B1ABB598F4893A4EB6129BE419C60DDEB161C31E5A968F97EC22B9B99C2597
B0C11D36B0C3A249A5B94B3953A5B71E293A8B4FCC78A826B82A5371D8665080
D807A6D803B2465B1AA3AF70CB001688679B1BFCA5B7F130280088CB63287942
58C66EFAF8F964A4F25208BF932CF3851245881C8660A1166134C82BC2BE6F13
6D0439FF5B2585A53C7CB0DE923464A3B8BA56C65FAA99BB540B469C141FF7FA
8740BAFE5B585C4770C89899376CBE4C3D95D4AFB522477D5B39796A0A76858D
65B37ACD6745664AA06C3F9047FFFA76B782F24BF7ED544AE148467180DC2293
FA812D8179ED3763E9450DBDE6163D435C4B87391B48D38FA18F4A151B14FE64
8CD35B1E0382749157FAA2DB513C78305BFE03DCAE54E87AEDC5061EE16FCD2D
8C0110F41812C6B1BED9EA76071C2F03E258851CED1A0F9C86DF9354F160BAFF
AE4204C2B9B0C17618166D5931C9CF27BBFB2AFCD73E9755D643A6C3E4299A47
E91581D4CE0FB23C9A4ED237CBF1439CD84FCBDF589A3C71D38BF5DADCFCB0ED
18901D650C57BA00129F3865E684342EE141A8A34EA830489F7CBE6C15A5257B
BF392BCB6F5F8BEFB1496440B684A48F8C31E62C9CE8C452E61FCAB06382A64F
79C4F697A1E967F8AB54BFD08819545C689845E813C0890A3DF8D15F751098B8
9A1B8CDE74BE36312504D8F7F6AC051CE1ED882DB34E14C29DA6FCCC1792489B
C74B93B7D7CA7A4789574661F5099C9AC16519DA9D8C1FFF820A4C18C1843A4E
829C45D79544830C1A90A5B7D4934A20EABC914AD04275216A1A379CFCD5CFDE
D6DB81282B5871D87462A91AAE84260A9DD0B0C154A0E46E37DBAF6947CD1D70
F9D3B2FD6D466A4F00A1F38A52BF6AA511B556E660B7C2726433F8F76F5F5C2F
25A54FE58791211FFC83C6394BD621BDDB9E5014A3C6B7EC23F84AD905461D86
CEED70891CA47219604BB9CF0DD06043E598E3E80679D37570B50E121357D85B
CC31D582AF2DCD63EACF0C3068C3EAAEBC0C431CA0728E7E72D8A61B52EDE6D9
2D114CAF118476FA55333828C9011A1B514D418F569867C12BE7F92FC6C68627
A5356470BDE95D795231E213BCD4A2FC290AB05B0BCE4285A33BC2AA5FB1F8CF
7D23CE3F199B1E265B3DC015029A4189E4F84A7E890CF81F8D15E31ACF330CB4
0EA18AAACD6646B4270551200C8101D6894379A71F5E31009BFA3E61EEDA81D2
F6DA4258EF4B7FE46C891AD10CBAC666F74FA85F54C8BE4A781F26602F90AC11
EC2EB166ED036BC332FEA64CB2D64EE8E6518FD01FA0402ECB611611BE2C16DF
5F7632E70456EB45395A84273A2424BCCB559C2BB8B9149CBADE7B23848E0623
23522240A388179DE4D224F19182BA7A3857711B1DFA5DBD6CA4827C23FFE2BC
ADEB2F949DC6A92EA2B80D4DD2F9F9347E39F037E0B3F85762A08817617CB994
F3D1A2886969D17E57EA7823085582EBD234DBB9652CD2214FD726105C4230FC
B366CBB6012ADD83DB7B1A142799FB8FBB0B7FD26FD3FC070C4686FD966E2AFE
E1D3975CEE1496F19A88639B4D472BD6D206D58C5F9799CA14816533C5454E9A
3E683060706930B76C047F36596B0F863A359B68FCBAADEA23DD52BAEDC24545
5943A3DFE5422C5E45E5D0CD32FC7834C12B40BD5BC0BB3EBCE2E73590C2DE4D
104A9CC66207CE0C7DEA7CA5D48A48141D28303E19FBB116FDC3E58CB86716E1
221D3D0A1F023313F3157BA519BEAD0FA73B2439AC374B7296B5444B4471EA99
EBD855B22B8E1C7EA1FEE81E0ACC1EF8BE89CA1551A47537FB35EB510D27F30C
54C417E1460EB851E03854028F16FC6D6C19BD953001E8F215A142B46D3A1271
D7E981651CDF37DBC6D9C9DB37595C39A173159C499CB9DA2BC3CF552F007E36
4BAC4D93D6E6823E197A94F29E1858BF77AF24754281FE3FAA2E1B52D713BF00
5F5549BFE57CF34B972AD10DFDA6729C03A248622F2A996EA6D14B8097914767
D02B9ABAB179FC828B2BD6E16129CAD41CF629C431F49D503B79B1F938287823
43379754159B40AD876EA42FAA612BAC8745CEC3027395757474C06B85A2BD6C
538EE1A008C219F930FF9F42A78882B407DC6C0B52D99ECCF89764E3718CF5AA
D7E22765DBCC10C339FDF8CAF8B9C8FB9A4C0A26571D79C1564AA234BB148B76
AB208EA16038463DCAC2C64AB82C15DB8510481D4F33C069AE4883B3B5C93017
B3DB5679983559410D658F703A1CED908A8885E842A2159F2B9C855595C1BD04
51DCDAE117C4B4C8CE576172E04754B10ACD95E66AFC2B9920385876CE723186
86ED9E447F8E1859A607EBD0A0CB1FCA94642068AAE41ADF926C933C713CE1AB
B062E661A9E70C12B909F67B780E35C0620D0B0AB6994EF5109B2DD0A3097860
82D0475E7A3AD4D79A2AA51D177FEF87BEDBBCE4ADA15AFF14CA9068F00AFFEE
9907B33DE5670BDB9E1AF76C75BC8890DDC92350281DFE87DC690841D64106D8
2363BAA3A06A501F1779340A819B39DDD66B01C729DEACADAFD61F87DEC6B34B
11D2667C3D20998879E2FC0D69849B42456B4170C939DF5B31E294906A2FF1D6
914E1C7A3E44F841F47C1E153E04764EB86CCECE595057D44010A948A5470915
C366A1844AA5CFACE59EDA94D3BB251F9B1728E12C225EBB64FC9D66FF7CD953
8565425DCD900AC231610AB97E4E43DC345FC8249F699D5364BBA3E4FC59D1F7
378FB7C8101D902520B3564A2BC6BAA3EF49264453597E2FC4DB0F18ED26CF4A
CB665CF384897F3E5156C9C207F4D1EE3E692F58E6AB54DA1A6F332BBBAAD31A
DE4037478B4FE020B1A7BBE22F9A3E8F6D8138F5B44C7DF6BED904149839F727
DE7A72BF2581AD87DF495C122E4C01D1F637596B50ECB7492559317EE6489175
1A498A97A3F9F96B6741AA862A1A7458B857B19DB0F8011291CC570D5751CEBA
D2DDFB4209BD589DA57CC399695D26BD337C5A7C1CF11DC52F6ADC5EBE658F1F
DD8BA29333F7D02C718300C10ACC486B0170E5374E61A8E57D28A7178A26A41D
0B4BC8D254EED3CEBDED79E5A441319ECC49DA89022050097178B21AA1327B1F
19F96DA9F4E14BE51AEE6667EDA6AF0524CD0C99394E0B82D64EFEFA51409FC4
5BEFA7DE397DEFD897E12A1CF64F2F766CADB0AEDC6357EBA9585154BB0BF0A3
81767C2D50C586EF3D88D47F8E5DF7CC69671F1FE38145508884E30B4DC76F5C
F54B5608A9167681EB225CF109C49C8FB4323313B232CDCC2344BF808805A4D2
0FA2DFE6874F82FFA0929D070F01E8E4467605FB8B7A5143E0EA721DAE16CB50
9FCBCDACE301EECF257B1E9BA488552799E40E102D9E559E0F92F3456C27BF25
FEC28A38C6C66F8BD36DBA309755E080058433952B698525612082298F0E6E36
968C8A94DA4F75CA3925E9D2221524462A1F98761B4E749C5341BC0E71E7D74C
36412F614BC37849AD3004BA89D16BECE2B9F5FDC218C305A5CF3A8194243538
8ADD4BDCA1CEE68645E1F5AC047A8204F464CF29A60BA4DEAE3FFB9DB63A00C3
31CD7A43C0A67E248D6097F3D94233FB04E834C200F6E27BB35E591601EBFF95
80F378E3BF2E5DDFE2E5B46E92B59FBD94B1C5CCD4204A19770A190BD9F1B36F
BEF11DC1F219E5F31DA8411BD601E70786FFE3AEE986E4FB350EEE8077AB14A3
DDFA2F11A0D89DF6A0242B1B43E068890AB3F47CDF4A11B6921E24528947E693
6CD4102FA9828E503D2F5760E144A976F44BAB926145AC80F073E6670E32EFDF
47A249652E266DFE7348AE950619738AF9DE5EBC1C51C6B486D3750307647DCD
9B560DAD9F95C4F6ADC601C09CDCC0262C6E8C4C3F2D13F78B9A23158682DC09
61E419589E32AEDA5BBD35B37F3806453E6BF41692DEC5CBC2465BF1CE78A971
F4AC9D469BCFF4001BD0D721F7363F042E35B40B02E56CECCCC14E21611A35FF
2E1FB51FBFC7B27C86A5A58A0F460A91638FEA5FB6D820FE9E6F5613F30B43AB
82895F7B7D3118598F5E312DB3A0237D88483418CF7B8F43A76955163D735887
D5E31A3D60BFF389F3B15A9942325A64EDDFAD7D57FE34FF34D3C9ABADE02D8B
8322E07C75A7222F073497874522385BEED66FC93E6DFE3BBA88C1CA93FAD69E
6538721ED2DA1375742A06D66A31009DA56472498878636226AC34ADA1597B2B
23416192F887D613121F0796E257FDB8D61E033D083625FFCC6AB0B8E81DDFE9
B58ECB933965934C5CA2043B9B0E564E7D598A9F34F5BF921A7F042B2676323C
31E6A64CA88BA03FE62BD3829753C7CD528303AC7616B3ACA5C70F47CE74D4FC
4CE1662AB626CC89784C4CD99FF63B5363C2099CC34044F2F6E9EB0EE5A1802F
6C3206ABE79594395C87C144C4A66EFE735373CCF3C501C3D5E9964D55A0BA6D
91D8EF5A5F3B6F9921F43FF16405F0115804F9C63EA6AAD43E50E998EB659961
75D87A3DF5BF3733FD17516C2F90E2A67D5E1CFD3CBD08C428FCE711882EFEBB
8E278432D6E9D53ADE1F20DE52410D6C61ECC8A1D14AF4EE6231EF8E5A18B574
CBA6D5E61B5B11D5B16C646BFD7EA160518EC3FAA6C6B68978BA54BE9B8E6527
567AB46EB843726BCB26A290C3CB2898E1E44C258D2B274A9CD17D384B8E746F
864961A99274341D829D2AB7082693239C3468B177C2037171BE511A90A773A9
7D8956A65CF6BF8D3F29A8376D99B07C1F349D3BEFAAB89187A28EF131E42925
1F2CF77425D378208A379C22193172318686ED9E447F8E185A51704ECFAE0BC6
723E560B0FDAFB34E8AD48A2E4BA5BDCA8675DE24CA0E11E8CC50606C28C01D5
14C4DBBDCE561D500BDA71ACAD0432FBD5DCE0CB7E0E88DA41736B398C231AF7
644D10FC159F0D132BD0A69CD6B3C962FFB48BAAD56929E71CD2296D1B563E5B
01C3DA1CFC868E0BBFFBF0CCA7BF4BADB8D4AE414A1410886EFF8D53B093FB67
31C02D847D0A2374A0F4627ED82BBB50568BF837ADD8939BE7366D1E3226749B
9E23E4C2AE4B9E9C98163FA2444334FB5421F839B7FE61A3E58CC805DEE17E24
CD3CBABB682FE69863D29863BC86FF201FAFEFEB59DA957AE93AD7983D200E24
3F3C6B71DF1AE09BB775B51DE3F49E2D6E5CBA9F47D591269CD9D9B9600F500A
E2645AB3BCA95A5445B5800D0B606938932DEA06FAE0B3073A0563E9A376A8A9
DC535B20DED3B6E05A5BB8F5F8147FEEAA2B144E80EDAE941055B55395D1C97D
E2F9FB03324E2127A46E9DBFB5A603BD4C7F84D1B05302F5FE7082DFC0776D80
58063F748D7A3CFE2987ADFCF5EBB603227FA2702D5777E90BE6B17CCF5605FF
93A95A46C416819ABA31AE1D46A259DE390F59D9AEB833BC8E4CF8C74AD4EE6D
9144207430E71101E681FC6F7CC8B309694819EA9FDFD6299E9140E054811B3E
A3F5D23B9220A659E44717F797F9C21CC470A32CFCF7AC318CDE98739B360390
E9AA01540BA9A34C78E06C7E4C305D6A22C4BBCAE2F14C074E7DCEE2E19700AC
FF7ECBBD5285BAA56335DCACBC3B0BA9D87F3FCEBF2730D812FDDDD016B803C3
8B892385B8B1F95D064734F8E130512DF6100016BDFA4A73702B71E03A7F5ACF
068911EFD0CFB2E8C13C17F0A53F4EDF3D510C5CF4EF08A4671FA8C3CA3524C3
7F0833D06D5E78CAC3312B6D593F03923EBDDCD10868090BCFE5B8A10B05EFF6
6FDDB2710B09EA981CCBC73518243BE8F698475A73A943BD96FC01F9C1F2B0A7
53D0922F379F445F8F760249E2A6F8B81FDEA7E93EE598631EBAA8590FFA4E22
B5A0CB4F9EEE8224B5A6D935A67F9EA15A00F38C0190070B0CC009B2EAD46F63
C6AC587D52FCAA8419CEE773F92C7A6775D700BEA329E7BE5173EE8C63AAC400
AE3544EF0334B820B6AEF318B1F51BA5615BF1A2BA3EAB6FB86ACAD4DBE2B70E
8198A1BC0A952880E09234A543243B3FF8E29549C849F559239032073903786D
0D9AF799EE987D0C240CCD6046B4105E3026C9AB9D31B9B869C08B929591DC9E
C5020390A17228D5D8BA37DB1D9EA2B06343A70DAE7702D4666886394441D737
A8BC550154F638794E4D388A2CC7621E474D78CD649EA9B498E23B5616DDB05C
F8505ECDC1C7F702FC7964BCB0BD373E7B3A256402590F001114408BD9D1B846
FC7E57F730BB0394CAB2F360AC6D0813188109A07B98903E8563B42BE296E2D2
0F02C44D6A7C946CC5FDF052322E21FC75A175250DE6FB69CD1F38C43BE5A5D1
134E117D38C827049CF60C90B5E3C756DB25A629E6A06F7E9383DDE95F51E448
FF6C91B34553F56CD713B8AEDF306CCF2727CAC4A13B4ACA339E375F34C292F8
819776BCE99708E6AEA28B37F2724C92DAA8241FC41FEE18C65BC0A1E9A73BB4
E5B392F08D4DADD53FA998FE04BAEE21591AEE7043814B10A9C5FDC801B144AF
82BBCCC3E63B027A4C33820033254F849A687903AF43FE03606451F9CE8C1AA1
87845043EBB928C4337F5788F3BE9C59F13BEBBFD54C6908AFA6743381CCDFE0
DCD5E9C7F2E4DC00372537A47EC2661E7181897AAD031B618CB8BED3F5BE7F28
A240AC25FEF9D2CE5A85658788795EEB8265C7F2726F83AC9089847F8EE4A2A2
79348346C7BC326C4FB78A42CDA7B37767CD4A16107CD330609D20AC2CD1754F
C84C08159F97FFB1C9913179AA9EFAF1F18BA2BDBDB30BCB72E975010F59376F
B1AEB72D08E929E1630A7750DE1349D9EBBEA662B5BCED70A87CD0D4798B97D6
1B2BB33D7538386DE98769691F9CE7ADA0F5D6C1AB83B98945A1FE2EC771E803
F077572234B5E42D053482045F9AF9790EB680B041DFA1B77304C21C3636EFCC
F24A6425D4C7AB6467845116549D2FF228A4E253490F1AC29E479B09092BE81F
54592BFAE740EF719D1C4CF3DAD51C0EC8CF99C152D715EE256197E0C73694D8
6D77D50158104721483C2AD47B0ACA1FC85E7C107D365ED9ED2AC7FA6B676182
278C43964D84DD5AE999505073B5DB8CCB34453CFE8ECB4A743FB9FCDA3E90C4
7DE886A1E1F78EE41727ADC35B52E8D7EC353E7D81A72D977DEAA8948076688B
6AB6E9F88A530B3CC87A06BBB6823FDFD028066CB13051690BF39C0B99116F72
76C1B414B03D92674B707ACC73F5E1E9809CE9BEF643C2568A3365B3C1540A2F
A304B2E7A7C849F280C7BF46E448EC325BFB498F928C2B9E6F083B6496E4785E
56925A4C7DDD6E26067973290A75074BFF0EAD54D62A75A2E230F9A250F75CC7
893BD1A287E7C0F083740C18191F515E47FDD5BAFB1ACF936F4D760FE6FDBBD2
2BAC44ED6ACB8B65E93437D4F9446D15C7B33EDE91FB98910DAC436FF1BFC288
045D72FCD36E6004EED30C878FC59A654615785F0D6CFD44DF10D14402EBEDFF
0B144B1C9BD22D7379558B84D0B2102894D7FECB5B225ACBE62F7A7D9611F4BB
E3EA8A1B4AA5A0E9958490F0238BB1A91CDB625CC10DE7C6C47939B4EA93C02E
CB01E4574405297D6A389358E75CEA07C146FFFA1483692BEFEE710E884911F4
52C33C0D107B936114715CC3BBE5610A5F11FB21782F3863E88BC5A3654F9F83
6B80FF3E72CFBB24D9BF8234B9EF2BC0495AD8661C4F061141B6A7FFA0C643DA
48BDD87DC466D2E8CA4596D6E4CAABF844DCCCED69D045E949E25F10F2F48C6D
08A7F95F6BFF0D8B38C974B43AC1FA919F23A2F2CF7A16BA18DF3377AE5D9628
F2881E4C77381AE42D708DF8E5C93474AFDFF7D0ADF1CF418DF3783F0BE805FC
51625D2C9C187AE05A0322D6087973C557588532474D9E9B852BFF97CA0E3375
34A18DD4178062E8D1B5FF84783F3F85772FDDF94A24FFF0C59395762E2CA39F
C9FA837F1F4E20F5E34DC29FBF63909499E455D87412DECC667F8DB576258F9D
E4494CA80A303950EF8E8D07AD70A62B8B43DD7108277F18D4727CC0F70F4ECA
4EC27770A98ED84A7DDE5BF54B236E08698BF2BCA853E8C08818CEC15A8AE6CF
6764C88AA7839A3FC0F865201B6D7BD76A690D8525EF5A5B34BD7C03CDEC6827
6DFFF44152ADD2940F8B3BB3E8C7295B779748273C485A5F88DC1C0E89509C64
277A9AFD2339BDAC1F73578793DBC56745B25BC1D8A4F5559692B7327B67D02F
33D75F3A4A5FDD27D35F4195C823BCF403F0883F63BB14C87CC36EFF06DBE273
EBD4D52570D5D9736461D2BFEEF8BFD513B0380993B8D52A6546D6933EE73A78
4541FE0DF9146E08836B3CF6AB7DD202746EC9DAC2B474E1C4AE3F7E57DD7A49
C196B9D8755ED0325CD6695D85DB4B8EB762BDA2CCDA2F5E5ADA62706D49CC24
FA839E86087FAD63292B44A10179A5ECA3F81567D364C80B22E64B31388226B5
C052471F24909E5601B34E58B8E16778C4284F21B29864E26D31511F85D2D281
4FD06A13AB49D23BBBA5D38653AAC7B813F29F4507177A439BF2B1CFD04E1F92
DCBA540C6A44B3025DA828E38898D98BCC98001B381FF0A1224CBD05F6F77034
14FD52B051306236464E9E509282CD12A5D63166ADDB5CB5A64257DEB8FEA60D
5D46F43FBD58B88F8C80CB0D55225B4072FA185E41F8C63625AACD0916A4648B
F5BEBC5510294F6127B0F5A90B25E1B529E86B0B4656620B937B8844F3FEE824
B277DEB9489E1A2312DA7F2B295D688C760EAC0A2EB45FE7328E735DB9740967
E6887D1A3A4DD0567B3FF2B21C4398EF3C4DAAA73D2E9E02B7C7F7C644EC2B16
74DD4546756FF8D79D108816E9072BCDD886FC6F5F3CA86AEF4D1EAD98A2ADD4
3AF213BACE9C5B2AB2057955B321ED78AB84B9E66B1794B1FFB686D3D3404DF8
AAE0CFE2B5B3A5052055154B1B7F8626D35CE312680EA766F146FB68007DDC99
50CA2C63425D1BCC328215041DF12E948905E2D850D697BE04E8C724C13AA0F3
16F39AC4A5EC21778AC2ED1F0B89E277F52CBF744AB0C6020ED7EF071525CDB9
3880A24EAEADF171B5C072FC73876F5A6555C04D0A86619FA46249868CE8429D
D51130D905B2EAC12D840FE3260CB6407AD048B83FAC3013DA3F21F03006142E
0CBB829A4B10DE8064B2332429C9661A9C2E8E030F0A233F36DDC03EF644B5B4
7DACE807262DE36F9A6D8EC97E89ED5CD37A5D14188AA679C8D06FE448AF32AC
B531A076037755496C3DF9CBE5B8211CA8E1F31614F7F5B818ABBAF1BF0EB39F
4DDDDB970B76BE54F7F7A30259A9ADBDD053FFE120C493DFF9FD4972DAE07FF6
362E1EEA4F86EDB1EB6F4647F4B1AEA267B4E0A719120D9F2529BA10324BA72B
5820159268B5B8DA137B9A175E244FAAFA41E2C596529D29B35F40CE459B572F
226E65FF340CEC0051A4EEF6A495823192E78065FD62DE55F6F4383F779695C9
A969DE58BEC9A6FBC5BF379A84EF152108D41E533813A8D6CE3DF04268CC777D
B1312530C84B3710067E9C64F38B4047F8095B3D4CD49B1A41445EC952EB3BFE
92DB36CC2EBBAF9FDB74F081562A4D800E247A5FE31B0ED3280975DE77370B3A
4C7B16C5FFC37C0DA8E883B53BF3E745C7C96F9B7010371E9BD19A71244BA164
D36CAB79428A2F246196AF20CB4A1195C76A6AD1DC54F4B9CBCCADFF6803B31E
F9A85BAF11F98DF053BAD442FFC86D9C66ED01B85534A1E39BD5C20DE216B337
4E0AFE1C1497851C7B11300C3D6948D6FF4B35E682CC4E0C428D1D8869EFE48A
460C0BFB2499E7ECE43FA2DC95D1B0BC98D291292FB3BBDD137B911276CE357D
DFE206332A5D9AD2E55E6C7A52C3C788330A0D2058010647AA09DE13F108CCFE
F2B3981D805A08114AF69F4C2AB4D3833BA77053DB6F3B56AFE0810E571E0C6F
978C6B2B03259930A18F5F6709744075E437A741A50F00A52971AA2CCC53F091
8CD6B59DD10597362F32F3D4A9CA4FE72E6C49FD9A142958C6A919FEA02F5D20
D2605E4AE05405B82B4FA7E283829329E11E4EB1620699F436397D450CCF09B9
9D6415BEFED5CA2206AF07C9D71DDFA09C7EB1A0FB3C347D08F9FA19FDD10DA7
91B8C3DC0072C4655388CBF8F904C17DC217C7A9CA604CF8401B289C1AFE7787
8571C8A04DF761B712FD53BAD0206AAF7C9D25D99E41C871A720E2850A668174
CDABD0D75F032F87935AC302F5AA765AC6B632B9F1B5CA0F31EA3F5C909F31F5
A2726F01F31C600BD5D4D7857FA703F287D2878A1157850F48A5E0F299DD9078
866AC4AC771A783095709EE54D544E286F873B83CA675BFB2D70090251C98C00
AC7B458D5A131A130D6F49A7ABF47833791F1170839F759226E53B46DB56C910
20F69669CFD455CCAC07F6895CB44BBCFD5FD8B3D978C779AF8848058B25DE07
E8F07D174E63681C9719E498C62A7FF00B01DF3772BF7583957E4A59BB4D268C
8E961A6E25E7A787826AB572EFBE735CE28EE4ABC81450157CB7DDACCB72A0FB
506E11683829AD9700B3205A433016971AF248EB25722C1A3E9F302BDBA57DA6
71A26A6A2ABE9D3BB94C816950EFBC6D60F1DD6EAAA05069536268C92FB0729C
26A6624D8E5F1B317E75E5E54D0FEB31A7A07AA201C7E71AB305DBE5BEA19037
AF794A3183554E6F777A577E7860B4C434CC046AEDD91D029AEE55F38591C3C2
C3F6501F4BA0C82C6D3ECD9ACC3C44B5755DD9071DAE1E651ED94B4CDB4FAE89
8A13DB3C180FED865DBCF458A707DE151974ED3BC949B1E4EFD29ABDCA377484
BE281D4412B860BD929DFFB4DD2CE9FA739A2E6443BDDD8AB8BF4806C61442FD
1B408994AB17E31B58C15CC4396CE75BC0580F75B3B8D213F057A79C695180E9
7F6337D3CF24FEDE2EC799CB33F442AF5F9A3D74162C8529E1C2C1A078F05D9A
4100AC215EBDC0DB880385A86AFABBDDE56F3C934CDBCC47F248C65B70B91AAE
6BF711A37AEE01A28076FA883B2DDF96DEAC86E741340C841085053B84D3EFEB
0AE2802373C5C5198B5FD89289E99F07DECA5B729F38DBF8A4D6D1068CBD60E4
512240D64E725B774718D8325FC31ABD6830BC42C5DAA100BE728339DA7921B6
B52966ECF58C3DBFFF634BE4C5915E30E306266238D44892D10104F28BEE3DF0
1BA17AF0ABCA9021EA8FAEEAB5E7451593CCD68A275FF7F3AF5BB5B6A066B301
AAB7DE996F9D3B8A2E27B821AA68B520CB26E9AD37F59724B0B2080BE20C808B
16AE246C842B64A80158CCBE6E94C3BF7BFF0C9D5556B71345AC51FE3987BE03
39203D3190EE92A37DCF1EA0F9948359B1687774F0F06D4FA923C30185C3BEF7
C1A8635D1DA9CC585AF0DB968692800B812141083A67AE2001F137F7BBC1C5B6
82179340B072E976F99070AD3FCD958C1EC54B3994EA142AA61C5A4B391F85C8
95CE26D36D02E61E11D4905717A1EF3CBEC92DD26021738105BCED3E94CECEB2
E6E552D1F50CAEC70B9544903F3219947F5AA0623939DE63A0A4CC4CFAA0A427
0372FCFF69A5BE0D06021F932030C47C0D7DBD4A92BE6783A7FE49E9118C94F7
9ADB280E5CC381F85B6813FA42C53DC7E39ED5DF5D5B049F09A5729643375568
FDAD7F86556D7A49C65A2B28B030CCEB0EFB960EDE63F3C6659BBF4D2971663D
0AB84621F15C186C03F2ECA7AD8D402F232034B7BCEDA9C49AB562DC60CEFF5F
8FCE66C909B7040538B5E7DE80B6DE055DC28C1B3A7E3FB5F50DCAD816D501A6
0C51FB1F38771C27251A51355BA8D0AC986594E4C39B51275186AC69DD79D334
CD078702167E6C23C85BE7D3C1625DDFCBB59703CCC55804CA5B48BE8104CDAE
C5DD651A47873B9C3C6D2A74788A7C7DBA8824430916ED58EF36FF0BF683190F
7BE10D2D3D97D0F9BF77003E536AE8355B16EA7CEB75BD87E8B6C74FAE88B997
3536BB9572ADEF166228948D362EA3C7D7A0A8A47B3B6BA95434EFA351DB7FB2
E836FEFC2EF2DFFD878374168B6C0526B8D0374825390142BEA3D6D328D1F1BB
C9C69DBA334DC3F9D142055B258BAA0A378779FEB0BFBB6DC2FA129B42E21426
11ED0A8ACAC6EE9F0BE2606C8892B9AE0AE8B1F6703464043980C187ED55B2AA
101F7ED5E4ECF1BAE72C82F807CEE69B5523238DC3D88A4CBEFE5BD31C5B14B0
03F38EA1D7463ED69AC7658A339997D35387DBE2CA7CDD580C06A7DCD556D730
C67EE8A0BB368DBD6E533D154FA36FAB2CA195E391CEC87748CA8822D9461047
58D289C7CF8ADA0085E2AF3F93DDF95057F1A668F7137A0C348F450B13EF02D7
4A5C526B5D84723A0D6B9998821A9350D76CBA16B7A8604D0C004732DAAC1F28
BC96B2CA2D069C9D161BB61869B707AC8533C980601D34D7BB58F9DC4CA6DBE2
12B7832BD8D23B4B94BDB2FC07702E1C15102298BE642223D82A657245E0D76C
774A8D5E115AEA624631B76DCA0885672C629B1DAD0E6BD33735C7824573A8FC
9A709699A599568EA6E014C54DAF72C2C01CCC3D884F3309D49BA6FF0F43BBFE
495B8E44F09A3B24E4E4CD5E6E53148CA239D55F0B521B7E702B47CEDFA6A0AA
7E59AB5C7C047641AC854B468CBF1A80D30732D0D646ECD29B71C57AF3B32B41
E8643D39F0FC72307D1AA5664532282A9E034175CB6C8ABDE4767789E9356901
42996D072E87FBEF1ACEC01745C8A8C7AD8234EBA1C79D398240DF656D5E8E18
EA4DAEF0D93BBAC1F7CA14A93AAFDA66054313BA8B9879BE24A6A444D0F72246
F75E100158E8DF19D7892F2C1633233CE188B2089389CB78470EAD7F8462E302
7B1A5AD709C2FB0845FC0660135C3A57368770FE85054F80C2354EDEE61F171B
62E74AC4BB1445EDFFE5D6EB6D70DEF2505B22A62A1AEC77ACD5EC5D1BD158BA
39995BEDB28DA1B54C9491FB2539A6DFB8FA042060DAB398229CC1BFBF3C696E
6F048A7C37F8F71F60BF315182497A086A6C4A5B98E62CCE9CBE73B5D64F675B
40CAED30538FCB2CD0F549B23CE029C497BC374E61C32B496D0AD8E022EB7E32
B32BF99AD30827653B6D218F9741A9D006158BCAF200225CAD9C20C8BAFAC69D
C801FAE8062F1D4AB141EE77B06E4E988F81B2D7D75E1CF0CCBEC9BC79A83311
10F415BCB193D58019EA05B9504DAB49A91F48D68F191A4AC8B5AC91D62328EF
718ECDBF76524D7587CF5222165EBD779C145556CA0AB5E56E0D04669327DE5A
631B9673363F66C0DDD904FAF61A62AA40D942EB31F138D5AFA1B75FF4A32974
E3B7DBF60FD0870068AE0152562BFA93E905377EFFF8DF8AAFF8B51BD1459E5C
9CEAC7A62B13D61FE899C61693BE03D6B82AF66B7BD7AF6E59494254A62440E6
70379EBF0466B062599C94B9B8ACAF299160C2AEAE2D874B7CDC475B9A89C6FB
0788D190AF1A77250B3907B79B59ADEC1223353192A08BD3C6CE02593106CEB6
C84F9AC2094757E11449C129FC2300138668FF7C1C76C3BEFD3BCA35DED8E430
6EEF5CD9870D578D1804AA90C958CE895C9582D0BF904C1183C0E9B5BE893E4E
2D9D4312932DAA3C09D6E69B5131DE1BAD5AF404A283262CFC9AA70BF950F924
57D6965E5E2A1303E1863DE8E17932739EEC1289723173F1A9D762ACC5B02C80
CE90879E1206F61A1D0BC37FE79BB877DE45F8CAE7680C83621C7FF05DC62B72
2D370711E52449863C38560F4CA33F38D080619961E8631547B89CC77C27C011
A81E24810F4F77D48CD1937CB19A7AD780872DB3792CF8440657E27BE0F3E5EB
E498DDECA9147FFDFB64CFA01545FEF6B1F8FF071E03D101565CBD12BD79B874
1477659012B73CFA933F9F13A817B28AE2BF8E9F267DDCB8DAC1A0711D58648E
5D3E9E3B2104CDC7171DA968C7854DABA3B09BF06A6E34DF084EBB2F7D6B768C
839ABA2F7A0EB4EBFC8BA254C20BBEA11B7521FA735CF77CF0CBD9725C360E22
A43EC408F2CDC2F3625DBCE623CFD92C3DB6733CF7422E1C00ADEB98A27912DD
7BED8F3802B7017DC777849674BB0177839D4E35B0B2F0ECBE2D6A10E695CD5A
825DDCEA239897E8029FF5483FA4E30810EEB19169E8D381DDA173A34E10B3BB
3742BBD4FB8D08B027C6F57D674D9C56A68B1909173F52E217A2FD5E55A6D9D6
7E2C76C00ADF0A59E6CC257CB562198F9087AD82C61622CB51F10D4BBE5CBE8F
646549B52D74E4DB7457F50043582A0BB588369F11DE8BE6B346BDFBE0260BF3
B9853D58F8F2EF4512A82E401A42DF1363FD7F3C5051B688148E0152180F62D6
A01217A981C6ED0724A82F923722791B9FC5FDEBAFA9268E6FAC31CDEB5DE092
CF094B68A32374A19AE607E0EF70EB127855B88494316461B2ED62DFA1106490
5AFD561556E5952AD58D7E8B4DE2A98E6CA768AFC128D856E1923E8FDE2ED15E
234F3CCA104CCF30BD68560B0C35023DAE420DD7C570A39F1135C4E9713AAD5E
584E186CFFB1DBDEF16D8A6BD80B7B4BC55699653AA4927A4409B327CEF36398
600F1C2C57612F32651FFAC1940122046046DC94B501D8F18DD2495F690393C9
97F5CED360CFF4DDE647BE66E6672C59C3365BFE92BD6C35F1C5E3D64A634480
CA6E9A0ECA595F7EF885701059CA2B92DAD06F4827CCCBB38AF1D143A94523A2
02282BFE3E2EB1F0F5FB5979EF5F012CAF95C8E107FC1C2333BA06CEE0893D3A
D9E796DB787A7D654CBC7D7467C175ED4EFEC68E9E3DF1AC805DD73BA7BE06FF
7973C86AA0282054100C6ABFE6BB074182BBE35F03985E59635A142D1C611E41
2EA0D84BA6A01750AC3AA9E0B49C02D7BD58978BC565D2CEB7E3B82C5A301A0D
76D2CB74DF9DE753C975BA69DD080E04F0C9A2A2F639911B5115C55F586A0AEB
7325880FD83B4E1876A51973FE650BE75340B555BF60DB989AF3F5387E8BD344
FE162CA5B1884F2B6F918475F9FF2CB93EC5F02BA521D0DF5BF333AF823A4650
D794D1859B2EB778CCB17E3EAF57D817283AE55A9A0C64EC2C958E7C0C2C9CAA
74CFF438F44B5E6F525A0E02F6DA8E74CF7DB0D91C7F3A0C0AA9E7571F606D50
99297EC8E1A3833C1D0D40459660C353297E1E4DA3ED12268DBF4409B8411BAB
D5549C2BB1B15B1A82D51355BB32E6E2BC00827EDF4CD8221470B823217D25D5
FC737A8F671D5D5620E9F53BA6E76AA62A7C562653E73935BE95441F85A33684
F367E3FBFC9C7A662A30F1DD5AC9CEC9C3C443D24E1D49BEAE28026A139C5834
BB63A23E831A92CE868BD859091E99309ABDC421B18831FF08D8597211BBCE60
48E3852775E542D725DF15DD0531BD7833766D101D7B23A24C3F2723EAD5AF75
85D1B5855E4A027A3C1EF83A51670B6F9D12A7064DF8D314548085ED46B57339
D8A4BCD8AD307342CD2F7BF079E4557A56508AEC6E7466720AD482BF21FAE22A
FEF942802141DE6FF48450140ADD3A3BEB7CE4DE728817400F3A4A8BBC3065EC
0E0E349F3FA61FF2D96E4CFC5307EA1A41C3450E5694F0A8F0E9AE5301F278DB
2C5D4733A7264AE1E420DCBCE5795A27F0319A229EBFD90EB852360552D10ADB
88F3655AF43CCD50E1C14005074C1110CA4386EE7C63870BF5C1409C8D5FD1B8
537D664F08
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra un)
@start /Fa 203[993 52[{}1 1328.35 /wasy10 rf /Fb 198[470
3[470 1[470 470 470 49[{ enclmrm ReEncodeFont }5 885.568
/LMRoman8-Regular rf /Fc 150[320 34[595 2[671 67[{
 enclmmathit ReEncodeFont }3 885.568 /LMMathItalic8-Regular
rf /Fd 154[966 101[{}1 1328.35 /TeX-feymr10 rf /Fe 184[869
5[830 14[553 3[307 46[{ enclmec ReEncodeFont }4 1106.96
/LMRoman10-Regular rf /Ff 160[909 45[606 1[606 47[{
 enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular rf
/Fg 222[1328 17[664 13[369 1033{ enclmmathsy ReEncodeFont }4
1328.35 /LMMathSymbols10-Regular rf /Fh 157[615 98[{
 enclmmathex ReEncodeFont }1 1106.96 /LMMathExtension10-Regular
rf /Fi 194[1012 2[361 650 650 1[650 650 650 650 650 650
650 4[1012 1[506 506 40[{ enclmrm ReEncodeFont }14 1328.35
/LMRoman12-Regular rf /Fj 133[604 634 739 12[676 4[641
603 2[553 683 12[762 8[1107 8[988 975 5[361 59[{
 enclmmathit ReEncodeFont }13 1328.35 /LMMathItalic12-Regular
rf /Fk 241[470 13[732{ enclmmathsy ReEncodeFont }2 885.568
/LMMathSymbols8-Regular rf /Fl 650 2[723 5[650 17[650
105[578 1[686 939 686 723 506 513 506 1[723 650 723 1084
361 686 397 361 723 650 397 578 723 578 723 650 6[795
2[1336 975 975 939 723 957 1[885 1[975 1192 813 1011
668 469 975 1021 849 885 993 939 921 975 1[614 4[361
650 650 650 650 650 650 650 650 650 650 650 361 434 361
2[506 506 2[1084 3[361 5[759 27[{ enclmec ReEncodeFont }71
1328.35 /LMRoman12-Regular rf /Fm 138[1196 837 849 879
1[1196 1076 1196 1793 598 1136 1[598 1196 1076 1[982
1196 956 1196 1046 6[1315 6[1196 3[1616 1[2041 1[1685
1[801 1682 1691 1353 1412 1[1554 1530 1625 8[1076 1076
1076 1076 1076 1076 1076 1076 1076 1076 598 717 45[{
 enclmec ReEncodeFont }43 1912.83 /LMRoman12-Bold rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fm(A)-60
b(G)718 b(2.2)f(-)h(1)f(F)-179 b(ahrenheit)715 b(-)i(O)-60
b(A)718 b(-)g(BIFIE)p 0 TeXcolorgray -741 4800 a Fl(1.)p
0 TeXcolorgray 651 w(In)405 b(einigen)g(L\344ndern)f(wird)h(die)h(T)
-108 b(emp)36 b(eratur)404 b(in)25633 4318 y Fk(\016)26159
4800 y Fl(F)h(\(Grad)f(F)-108 b(ahrenheit\))403 b(und)h(nic)-36
b(h)g(t)405 b(wie)921 6792 y(b)36 b(ei)434 b(uns)e(in)6962
6310 y Fk(\016)7488 6792 y Fl(C)i(\(Grad)e(Celcius\))i(angegeb)36
b(en.)921 9338 y(Die)579 b(Umrec)-36 b(hn)g(ung)576 b(v)-36
b(on)579 b Fj(x)14540 8856 y Fk(\016)15066 9338 y Fl(C)f(in)g
Fj(y)18927 8856 y Fk(\016)19453 9338 y Fl(F)f(erfolgt)i(durc)-36
b(h)577 b(die)h(Gleic)-36 b(h)g(ung)577 b Fj(y)663 b
Fi(=)615 b(1)p Fj(;)p Fi(8)p Fj(x)394 b Fi(+)g(32)p Fl(.)921
11330 y(Dab)36 b(ei)434 b(gilt:)20074 13322 y Fi(0)20724
12773 y Fk(\016)21250 13322 y Fl(C)22821 13298 y Fh(b)22623
13322 y Fi(=)f(32)25368 12773 y Fk(\016)25895 13322 y
Fl(F)921 16760 y(Ermittle)357 b(eine)g(Gleic)-36 b(h)g(ung,)356
b(mit)h(deren)f(Hilfe)i(die)f(T)-108 b(emp)36 b(eratur)355
b(v)-36 b(on)35303 16278 y Fk(\016)35828 16760 y Fl(F)357
b(in)38475 16278 y Fk(\016)39001 16760 y Fl(C)g(umgerec)-36
b(h-)921 18752 y(net)433 b(w)-36 b(erden)433 b(kann!)p
1 0 0 TeXcolorrgb 921 21297 a Fj(x)369 b Fi(=)g(\()p
Fj(y)343 b Fg(\000)295 b Fi(32\))369 b(:)h(1)p Fj(;)p
Fi(8)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4800 a Ff(___/1)p 1 0 0 TeXcolorrgb 47990 6792
a Fe(A)-31 b(G)369 b(2.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 25105 54804 45 v -2331 30406 a Fm(A)-60
b(G)718 b(2.2)f(-)h(2)f(Sp)60 b(ort)716 b(-)i(O)-60 b(A)717
b(-)h(BIFIE)p 0 TeXcolorgray -741 33713 a Fl(2.)p 0 TeXcolorgray
651 w(V)-108 b(on)563 b(den)f(958)i(Sc)-36 b(h)g(\374lerinnen)561
b(und)h(Sc)-36 b(h)g(\374lern)562 b(einer)h(Sc)-36 b(h)g(ule)562
b(b)36 b(etreib)g(en)562 b(viele)i(regelm\344-)921 35705
y(\377ig)524 b(Sp)36 b(ort.)524 b(319)h(Sc)-36 b(h)g(\374ler/innen)521
b(spielen)j(regelm\344\377ig)h(T)-108 b(ennis,)524 b(810)g(gehen)g
(regelm\344\377ig)921 37697 y(sc)-36 b(h)g(wimmen.)689
b(Nur)d(98)i(Sc)-36 b(h)g(\374ler/innen)685 b(geb)36
b(en)687 b(an,)h(w)-36 b(eder)687 b(T)-108 b(ennis)687
b(zu)g(spielen)g(no)36 b(c)-36 b(h)921 39689 y(sc)g(h)g(wimmen)433
b(zu)g(gehen.)921 44226 y(Gib)g(an,)h(wie)g(viele)h(Sc)-36
b(h)g(\374ler/innen)432 b(b)36 b(eide)433 b(Sp)36 b(ortarten)433
b(regelm\344\377ig)i(b)36 b(etreib)g(en!)p 1 0 0 TeXcolorrgb
921 46772 a Fi(985)296 b Fg(\000)f Fi(98)370 b(=)f(810)296
b(+)f(319)h Fg(\000)f Fj(x)921 48764 y(x)369 b Fi(=)g(269)h
Fg(!)434 b Fl(269)g(Sc)-36 b(h)g(\374ler/innen)432 b(b)36
b(etreib)g(en)433 b(b)36 b(eide)433 b(Sp)36 b(ortarten)433
b(regelm\344\377ig.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 33713 a Ff(___/1)p 1 0 0 TeXcolorrgb
47990 35705 a Fe(A)-31 b(G)369 b(2.2)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 52571 V 0 TeXcolorgray
24746 81281 a Fl(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(A)-60 b(G)718 b(2.2)f(-)h(3)f(Skitag)f(-)i
(O)-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray -741 4800
a Fl(3.)p 0 TeXcolorgray 651 w(Eine)576 b(Reisegrupp)36
b(e)575 b(mit)h Fj(k)621 b Fl(Kindern)575 b(und)f Fj(e)i
Fl(Erw)-36 b(ac)g(hsenen)575 b(f\344hrt)h(auf)g(einen)f(Sc)-36
b(hitag.)921 6792 y(Ein)398 b(T)-108 b(agessc)-36 b(hipass)399
b(k)-36 b(ostet)399 b(f\374r)f(ein)g(Kind)g Fd(e)615
b Fj(x)399 b Fl(und)e(f\374r)h(einen)g(Erw)-36 b(ac)g(hsenen)398
b Fd(e)615 b Fj(y)48 b Fl(.)399 b(Die)921 8784 y(Busfahrt)433
b(k)-36 b(ostet)434 b(pro)g(P)-36 b(erson)433 b Fd(e)650
b Fj(z)59 b Fl(.)921 13322 y(Erkl\344re,)714 b(w)-36
b(as)713 b(folgende)g(Gleic)-36 b(h)g(ungen)711 b(im)i(Zusammenhang)f
(mit)h(dem)f(Skitag)h(aus-)921 15314 y(dr\374c)-36 b(k)g(en!)921
17859 y Fj(y)644 b Fi(=)596 b(1)p Fj(;)p Fi(35)221 b
Fj(x)p 1 0 0 TeXcolorrgb 1870 w Fl(Ein)567 b(T)-108 b(agessc)-36
b(hipass)568 b(k)-36 b(ostet)567 b(f\374r)g(Erw)-36 b(ac)g(hsene)567
b(um)f(35)217 b(\045)568 b(mehr)f(als)g(ein)874 19851
y(T)-108 b(agessc)-36 b(hipass)434 b(f\374r)g(Kinder.)p
0 0 0 TeXcolorrgb 921 24388 a Fj(k)414 b Fi(=)369 b Fj(e)295
b Fg(\000)g Fi(15)p 1 0 0 TeXcolorrgb 1735 w Fl(Beim)434
b(Sc)-36 b(hitag)433 b(fahren)h(um)f(15)h(Kinder)f(w)-36
b(eniger)434 b(mit)g(als)g(Erw)-36 b(ac)g(hsene.)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 4800 a Ff(___/1)p 1 0 0
TeXcolorrgb 47990 6792 a Fe(A)-31 b(G)369 b(2.2)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 28122
54804 45 v -2331 33550 a Fm(A)-60 b(G)689 b(2.2)f(-)g(4)h(F)-179
b(ahrenheit)685 b(und)i(Celsius)g(-)h(O)-60 b(A)689 b(-)g(Matura)e
(2014/15)-2617 36572 y(-)718 b(Haupttermin)p 0 TeXcolorgray
-741 39880 a Fl(4.)p 0 TeXcolorgray 651 w(W)-36 b(\344hrend)325
b(man)g(in)h(Europa)f(die)g(T)-108 b(emp)36 b(eratur)325
b(in)h(Grad)e(Celsius)j(\()33591 39397 y Fk(\016)34116
39880 y Fl(C\))f(angibt,)g(v)-36 b(erw)g(endet)921 41871
y(man)503 b(in)f(den)g(USA)g(die)h(Einheit)g(Grad)f(F)-108
b(ahrenheit)501 b(\()28471 41389 y Fk(\016)28997 41871
y Fl(F\).)h(Zwisc)-36 b(hen)503 b(der)f(T)-108 b(emp)36
b(eratur)921 43863 y Fj(T)1683 44062 y Fc(F)2898 43863
y Fl(in)4416 43381 y Fk(\016)4942 43863 y Fl(F)433 b(und)f(der)h(T)-108
b(emp)36 b(eratur)433 b Fj(T)18981 44062 y Fc(C)20204
43863 y Fl(in)21721 43381 y Fk(\016)22247 43863 y Fl(C)h(b)36
b(esteh)-36 b(t)432 b(ein)i(linearer)g(Zusammenhang.)921
48401 y(F)-27 b(\374r)433 b(die)g(Umfrec)-36 b(hn)g(ung)433
b(v)-36 b(on)15977 47919 y Fk(\016)16503 48401 y Fl(F)434
b(in)19303 47919 y Fk(\016)19829 48401 y Fl(C)g(gelten)g(folgende)g
(Regeln:)p 0 TeXcolorgray 2468 51500 a Fg(\017)p 0 TeXcolorgray
650 w Fl(32)5299 51017 y Fk(\016)5826 51500 y Fl(F)f(en)-36
b(tsprec)g(hen)432 b(0)15064 51017 y Fk(\016)15590 51500
y Fl(C.)p 0 TeXcolorgray 2468 54045 a Fg(\017)p 0 TeXcolorgray
650 w Fl(Eine)388 b(T)-108 b(emp)36 b(eraturzunahme)387
b(um)g(1)21945 53563 y Fk(\016)22471 54045 y Fl(F)h(en)-36
b(tspric)g(h)g(t)386 b(einer)i(Zunahme)f(der)g(T)-108
b(emp)36 b(era-)3782 56037 y(tur)433 b(um)8323 55514
y Fb(5)p 8323 55727 471 45 v 8323 56495 a(9)9143 55555
y Fk(\016)9669 56037 y Fl(C.)921 59136 y(Gib)564 b(eine)g(Gleic)-36
b(h)g(ung)564 b(an,)g(die)h(den)e(Zusammenhang)h(zwisc)-36
b(hen)564 b(der)g(T)-108 b(emp)36 b(eratur)564 b Fj(T)45115
59335 y Fc(F)769 61128 y Fl(\()1275 60646 y Fk(\016)1800
61128 y Fl(F,)434 b(Grad)f(F)-108 b(ahrenheit\))432 b(und)g(der)h(T)
-108 b(emp)36 b(eratur)433 b Fj(T)26561 61327 y Fc(C)27784
61128 y Fl(\()28290 60646 y Fk(\016)28815 61128 y Fl(C,)h(Grad)f
(Celsius\))h(b)36 b(esc)-36 b(hreibt.)p 1 0 0 TeXcolorrgb
921 65665 a Fj(T)1683 65864 y Fc(C)2841 65665 y Fi(=)368
b(\()p Fj(T)5489 65864 y Fc(F)6566 65665 y Fg(\000)296
b Fi(32\))f Fg(\001)10793 65142 y Fb(5)p 10793 65355
V 10793 66123 a(9)921 68210 y Fl(o)36 b(der:)921 70756
y Fj(T)1683 70955 y Fc(F)2834 70756 y Fi(=)4347 70233
y Fb(9)p 4347 70446 V 4347 71214 a(5)5246 70756 y Fg(\001)295
b Fj(T)6672 70955 y Fc(C)7756 70756 y Fi(+)g(32)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 39880
a Ff(___/1)p 1 0 0 TeXcolorrgb 47990 41871 a Fe(A)-31
b(G)369 b(2.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 74689 54804 45 v 0 TeXcolorgray 24746
81281 a Fl(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(A)-60 b(G)718 b(2.2)f(-)h(5)f(Abgesc)-60
b(hlossene)715 b(Zahlenmengen)h(-)h(O)-60 b(A)718 b(-)g(MK)p
0 TeXcolorgray -741 4800 a Fl(5.)p 0 TeXcolorgray 651
w(Der)477 b(seit)h(01.12.2012)i(g\374ltige)e(T)-108 b(axitarif)479
b(in)e(Wien)g(f\374r)g(eine)g(F)-108 b(ahrt)476 b(zwisc)-36
b(hen)477 b(6:00)h(und)888 6792 y(23:00)470 b(Uhr)c(kann)i(b)36
b(ei)467 b(einer)h(Strec)-36 b(k)g(e)467 b(bis)g(zu)g(4)h(km)g(mit)f
(einer)h(linearen)f(F)-108 b(unktion)467 b Fj(f)142 b
Fi(\()p Fj(x)p Fi(\))921 8784 y Fl(dargestellt)434 b(w)-36
b(erden.)p 0 TeXcolorgray 0 TeXcolorgray 17321 12437
a Fj(f)142 b Fi(\()p Fj(x)p Fi(\))368 b(=)h(1)p Fj(;)p
Fi(05)296 b Fg(\001)g Fj(x)f Fi(+)g(3)p Fj(;)p Fi(80)921
16089 y Fl(Erkl\344re)527 b(die)f(Bedeutung)g(der)g(F)-108
b(aktoren)526 b(0,2)h(und)f(3,8)h(und)e(b)36 b(erec)-36
b(hne)525 b(die)i(K)-36 b(osten)526 b(f\374r)921 18081
y(eine)434 b(4)f(km)h(lange)h(F)-108 b(ahrt.)p 1 0 0
TeXcolorrgb 856 22618 a(1,05)435 b(-)e(K)-36 b(osten)433
b(pro)h(gefahrenen)f(Kilometer)888 24610 y(3,8)i(-)e(Grundgeb\374hr,)e
(Startgeld,)j(Grundtaxe)921 26602 y(K)-36 b(osten)433
b(f\374r)h(eine)f(4)h(km)g(lange)h(F)-108 b(ahrt:)432
b Fi(1)p Fj(;)p Fi(05)297 b Fg(\001)e Fi(4)h(+)e(3)p
Fj(;)p Fi(8)370 b(=)f(8)p Fd(e)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 4800 a Ff(___/1)p 1 0 0
TeXcolorrgb 47990 6792 a Fe(A)-31 b(G)369 b(2.2)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 30336
54804 45 v -2331 35764 a Fm(A)-60 b(G)718 b(2.2)f(-)h(6)f(Kredit)f(-)i
(O)-60 b(A)717 b(-)h(Matura)f(2014/15)g(-)h(Haupttermin)p
0 TeXcolorgray -741 39071 a Fl(6.)p 0 TeXcolorgray 651
w(Ein)661 b(langfristiger)h(Kredit)f(soll)h(mit)e(folgenden)i
(Bedingungen)e(getilgt)i(w)-36 b(erden:)661 b(Der)921
41063 y(o\033ene)508 b(Betrag)g(wird)g(am)h(Ende)e(eines)h(jeden)g
(Jahres)g(mit)g(5)217 b(\045)508 b(v)-36 b(erzinst,)509
b(danac)-36 b(h)507 b(wird)921 43055 y(jew)-36 b(eils)435
b(eine)f(Jahresrate)f(v)-36 b(on)434 b Fd(e)650 b Fl(20.000)436
b(zur\374c)-36 b(kgezahlt.)921 47592 y Fj(y)1555 47791
y Fb(2)2788 47592 y Fl(stellt)707 b(die)f(Restsc)-36
b(h)g(uld)706 b(nac)-36 b(h)706 b(Bezahlung)h(der)f(zw)-36
b(eiten)707 b(Rate)g(zw)-36 b(ei)707 b(Jahre)g(nac)-36
b(h)921 49584 y(Kreditaufnahme)599 b(dar,)g Fj(y)14206
49783 y Fb(3)15332 49584 y Fl(die)g(Restsc)-36 b(h)g(uld)598
b(nac)-36 b(h)599 b(Bezahlung)g(der)g(dritten)f(Rate)h(ein)887
51576 y(Jahr)434 b(sp\344ter.)f(Stelle)h Fj(y)12313 51775
y Fb(3)13272 51576 y Fl(in)g(Abh\344ngigk)-36 b(eit)434
b(v)-36 b(on)434 b Fj(y)25865 51775 y Fb(2)26825 51576
y Fl(dar.)921 56113 y Fj(y)1555 56312 y Fb(3)2450 56113
y Fi(=)p 1 0 0 TeXcolorrgb 433 w(1)p Fj(;)p Fi(05)297
b Fg(\001)e Fj(y)7801 56312 y Fb(2)8622 56113 y Fg(\000)g
Fi(20)221 b(000)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 39071 a Ff(___/1)p 1 0 0 TeXcolorrgb
47990 41063 a Fe(A)-31 b(G)369 b(2.2)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 59847 V 0 TeXcolorgray
24746 81281 a Fl(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fm(A)-60 b(G)1159 b(2.2)f(-)g(7)g
(Kapitalsparbuc)-60 b(h)1156 b(-)j(MC)f(-)g(Matura)g(2014/15)h(-)-2331
4622 y(Haupttermin)p 0 TeXcolorgray -741 7929 a Fl(7.)p
0 TeXcolorgray 651 w(F)-108 b(rau)405 b(F)-108 b(r\366hlic)-36
b(h)405 b(hat)h(ein)g(Kapitalsparbuc)-36 b(h,)405 b(auf)i(w)-36
b(elc)g(hes)406 b(sie)g(j\344hrlic)-36 b(h)406 b(am)g(ersten)f(Bank-)
921 9921 y(\366\033n)-36 b(ungstag)591 b(des)h(Jahres)f(den)h(gleic)-36
b(hen)591 b(Geldb)36 b(etrag)592 b(in)f(Euro)h(einzahlt.)h(An)e(diesem)
874 11913 y(T)-108 b(ag)520 b(w)-36 b(erden)518 b(in)h(dieser)g(Bank)g
(auc)-36 b(h)519 b(die)f(Zinsertr\344ge)h(des)g(V)-108
b(orjahres)519 b(gutgesc)-36 b(hrieb)36 b(en.)921 13905
y(Danac)-36 b(h)434 b(wird)f(der)g(neue)g(Gesam)-36 b(tk)g(on)g
(tostand)433 b(ausgedruc)-36 b(kt.)921 18442 y(Zwisc)g(hen)451
b(dem)g(K)-36 b(on)g(tostand)450 b Fj(K)17522 18641 y
Fc(i)p Fk(\000)p Fb(1)19551 18442 y Fl(des)h(V)-108 b(orjahres)451
b(und)f(dem)g(K)-36 b(on)g(tostand)451 b Fj(K)41252 18641
y Fc(i)42078 18442 y Fl(des)g(ak-)921 20434 y(tuellen)433
b(Jahres)h(b)36 b(esteh)-36 b(t)432 b(folgender)j(Zusammenhang:)16602
24971 y Fj(K)17709 25170 y Fc(i)18453 24971 y Fi(=)369
b(1)p Fj(;)p Fi(03)297 b Fg(\001)e Fj(K)24213 25170 y
Fc(i)p Fk(\000)p Fb(1)26085 24971 y Fi(+)g(5)221 b(000)855
28410 y Fl(W)-108 b(elc)-36 b(he)433 b(der)g(folgenden)h(A)-36
b(ussagen)434 b(sind)f(in)g(diesem)h(Zusammenhang)f(k)-36
b(orrekt?)921 30955 y(Kreuze)433 b(die)h(b)36 b(eiden)433
b(zutre\033enden)e(A)-36 b(ussagen)434 b(an.)p 1062 31922
44260 45 v 1062 34996 45 3074 v 1770 33792 a(F)-108 b(rau)433
b(F)-108 b(r\366hlic)-36 b(h)433 b(zahlt)h(j\344hrlic)-36
b(h)434 b Fd(e)650 b Fl(5.000)435 b(auf)f(ihr)f(Kapitalsparbuc)-36
b(h)433 b(ein.)p 42912 34996 V 1 0 0 TeXcolorrgb 43621
33791 a Fa(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 45277 34996 V 1062 35040 44260 45 v 1062
38114 45 3074 v 1770 36911 a Fl(Das)i(Kapital)f(auf)g(dem)f
(Kapitalsparbuc)-36 b(h)433 b(w)-36 b(\344c)g(hst)434
b(j\344hrlic)-36 b(h)434 b(um)f Fd(e)650 b Fl(5.000.)p
42912 38114 V 45277 38114 V 1062 38158 44260 45 v 1062
43213 45 5056 v 1770 40018 a(Der)347 b(relativ)-36 b(e)347
b(j\344hrlic)-36 b(he)347 b(Zu)-36 b(w)g(ac)g(hs)346
b(des)g(am)g(A)-36 b(usdruc)g(k)345 b(ausgewiesenen)i(Kapitals)1770
42010 y(ist)434 b(gr\366\377er)g(als)h(3)217 b(\045.)p
42912 43213 V 1 0 0 TeXcolorrgb 43621 41018 a Fa(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
43213 V 1062 43257 44260 45 v 1062 48054 45 4797 v 1770
45117 a Fl(Die)435 b(Di\033erenz)e(des)h(Kapitals)g(zw)-36
b(eier)434 b(aufeinanderfolgender)g(Jahre)g(ist)f(immer)1770
47109 y(dieselb)36 b(e.)p 42912 48054 V 45277 48054 V
1062 48098 44260 45 v 1062 51161 45 3064 v 1770 49958
a(Das)435 b(Kapital)f(auf)g(dem)f(Kapitalsparbuc)-36
b(h)433 b(w)-36 b(\344c)g(hst)434 b(linear)g(an.)p 42912
51161 V 45277 51161 V 1062 51206 44260 45 v 47992 7929
a Ff(___/1)p 1 0 0 TeXcolorrgb 47990 9921 a Fe(A)-31
b(G)369 b(2.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 55234 54804 45 v 0 TeXcolorgray 24746
81281 a Fl(4)p 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fm(A)-60 b(G)840 b(2.2)f(-)h(8)f(F)-179
b(uttermittel)837 b(-)i(O)-60 b(A)840 b(-)f(Matura)g(2016/17)g(-)h
(Haupt-)-2331 4622 y(termin)p 0 TeXcolorgray -741 7929
a Fl(8.)p 0 TeXcolorgray 651 w(Ein)312 b(Bauer)h(hat)f(zw)-36
b(ei)313 b(Sorten)f(v)-36 b(on)313 b(F)-108 b(ertigfutter)312
b(f\374r)g(die)h(Rindermast)f(gekauft.)i(F)-108 b(ertigfut-)921
9921 y(ter)368 b Fj(A)g Fl(hat)h(einen)f(Proteinan)-36
b(teil)368 b(v)-36 b(on)369 b(14)217 b(\045,)369 b(w)-36
b(\344hrend)368 b(F)-108 b(ertigfutter)368 b Fj(B)435
b Fl(einen)368 b(Proteinan-)921 11913 y(teil)412 b(v)-36
b(on)412 b(35)217 b(\045)412 b(hat.)g(Der)g(Bauer)g(m\366)36
b(c)-36 b(h)g(te)411 b(f\374r)h(seine)g(Jungstiere)f(100)217
b(kg)414 b(einer)d(Misc)-36 b(h)g(ung)921 13905 y(dieser)566
b(b)36 b(eiden)566 b(F)-108 b(ertigfutter-Sorten)565
b(mit)h(einem)g(Proteinan)-36 b(teil)567 b(v)-36 b(on)567
b(18)217 b(\045)567 b(herstellen.)921 15897 y(Es)434
b(sollen)g Fj(a)f Fl(kg)h(der)f(Sorte)h Fj(A)f Fl(mit)h
Fj(b)f Fl(kg)i(der)e(Sorte)g Fj(B)501 b Fl(gemisc)-36
b(h)g(t)433 b(w)-36 b(erden.)921 20434 y(Gib)466 b(zw)-36
b(ei)468 b(Gleic)-36 b(h)g(ungen)466 b(in)h(den)f(V)-108
b(ariablen)467 b Fj(a)g Fl(und)e Fj(b)i Fl(an,)h(mithilfe)f(derer)g
(die)f(f\374r)h(diese)921 22426 y(Misc)-36 b(h)g(ung)433
b(b)36 b(en\366tigten)433 b(Mengen)g(b)36 b(erec)-36
b(hnet)432 b(w)-36 b(erden)433 b(k)-36 b(\366nnen!)856
26963 y(1.)434 b(Gleic)-36 b(h)g(ung:)p 1 0 0 TeXcolorrgb
433 w Fj(a)295 b Fi(+)g Fj(b)369 b Fi(=)g(100)p 0 0 0
TeXcolorrgb 888 31500 a Fl(2.)435 b(Gleic)-36 b(h)g(ung:)p
1 0 0 TeXcolorrgb 433 w Fi(0)p Fj(;)p Fi(14)296 b Fg(\001)f
Fj(a)g Fi(+)g(0)p Fj(;)p Fi(35)i Fg(\001)e Fj(b)369 b
Fi(=)f(0)p Fj(;)p Fi(18)297 b Fg(\001)e Fi(\()p Fj(a)g
Fi(+)g Fj(b)p Fi(\))p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
7929 a Ff(___/1)p 1 0 0 TeXcolorrgb 47990 9921 a Fe(A)-31
b(G)369 b(2.2)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 35308 54804 45 v 0 TeXcolorgray 24746
81281 a Fl(5)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
