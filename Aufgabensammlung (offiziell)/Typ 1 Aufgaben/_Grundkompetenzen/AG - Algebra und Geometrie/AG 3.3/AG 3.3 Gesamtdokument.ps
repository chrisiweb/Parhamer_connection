%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 3.3/AG 3.3 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:30:30 2017
%%Pages: 16
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMMathExtension10-Regular LMMathSymbols10-Regular wasy10
%%+ LMRoman10-Regular LMRoman8-Regular MSBM10 LMMathItalic8-Regular
%%+ LMMathItalic10-Regular LMRoman7-Regular LMMathSymbols8-Regular
%%+ LMRoman6-Regular TeX-vect10 TeX-vect8
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 3.3/AG 3.3 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0830
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: TeX-vect8
%!PS-AdobeFont-1.0: TeX-vect8 001.001
% Filtered by type1fix.pl 0.06
%%EndComments
13 dict dup begin
/FontInfo 16 dict dup begin
/Copyright (see\040copyright\040of\040original\040TeX\040font) def
/FamilyName (TeX\040vect8) def
/FullName (TeX\040vect8\040Regular) def
/ItalicAngle 0 def
/Notice (converted\040after\040April\0402001) def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) def
/isFixedPitch false def
/version (001.001) def
end readonly def
/FontName /TeX-vect8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 20 /guillemotright put
dup 35 /numbersign put
readonly def
/FontBBox {-29 -14 1064 515} readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA06DA87FC7163A5A2A756A598FAB07633
89DE8BAE4F093966CD2192CE95EB0F323A6BABFDACCFCF27D91F7869A0E46CA5
9AAF6905783E8AC1F3F9875A76F97187738432F8D14E61574CB292FFB9740871
66839799D8CAF6E0DFE00012EE6D46A2B3655F29705BE37FD5EDA1C765AA2CF5
C5AD37207ED1EE9DB82FF31A33307FFA16911406557336AF92F50B603C7BD336
73EC060F68318378A6F599DDADA5A21504CADBA1E1F4B1A22962BA1BB39ADC7B
E8CC92F196549457877C9636A8A7EFAC1C3745644C0FD151C70B9FAD69B02C1F
FE5ED071CA1CF3D4A70909B6A39FC8C64A36612E534905E6FD8185EB3DA1BD0B
300DA9F893BAFCE80CAD0161511725A9A2FD057A4A448F41A5DCD553D90281E5
3F483D886E51549CE054613F23E810E59147C05A284AEFB9C34FECC6E4E945BF
E710C7935361C9DE43CCD9FEF6980F8B3D407EEF70039776E45328226EE94AFD
A3AB06B09EF15BFEBE7B467FFFC0F805CE87C0B835794172E87C30124C6807E0
5F404DB34A82DE5CF7D90392968E1A5427A0EDA28C50EDF382DF6BAE466B2695
37BD1E24DFF14D4BF1A509906B50E6F7F526C7053D7EB7F107162BA7729A3414
85EFAE0986EC550EFDFB0E4B7A4A5A677874826AFB256FFDDB70B775FAFC5B1B
EA41C4F0C0BD5C6FBB6C32541AEE0A058472C5A806F1FDE139B121513CD600F0
52839A2EC3B497E3E67CBA6D84A1770691C9FEFC37C7388D19DCEABCB40C47E9
2DFBFA783B47A38F5191350736EBADFA7C01A76837897DB481B79EEE4CE0709B
C38E747C7362E074A7B4EACC271CDF0A0EFC77DE37C7B1250BF47AC176AF3EBC
ABC63CF7DC89F03335C63CB9497897685C5B67B429F686562919B6E8C13DE245
5E7065B0333D8143A1CE9625C3751A1AC3FA87EB3EFDCF24E187D637B3C6A9DE
2DEC784C16C2425F9F174D2DFB5CC5B11B60A62B20719ADA677607E7663158BB
DEB616F9768EDC35CEE4D7D0B4F35A192A48A93DD07A79692D89998207965CF7
83EFCD56EEE669A6ABE9FB8D2C73D321DE49EBEFA80F178DBB1D4604505BAE39
402B8C7AC9B3D1EF5609A3D3189875E8DC78CFC1DF57E5163142D5BB8F53C073
1004910284E9E224C10F11B68C150EBF0DCE8AE40806B280F745CAAD6923D052
243A2D97DF798B27465D1F4AAEB205A9280AF08DBC48486C109FF36692BD95D5
6D70F2EE030651D6D9DAE3DEFB569D518F06C2ACD6058A3CCDA47CF1F19E0C1B
4ADD116732858AE35781784FB46609
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: TeX-vect10
%!PS-AdobeFont-1.0: TeX-vect10 001.001
% Filtered by type1fix.pl 0.06
%%EndComments
13 dict dup begin
/FontInfo 16 dict dup begin
/Copyright (see\040copyright\040of\040original\040TeX\040font) def
/FamilyName (TeX\040vect10) def
/FullName (TeX\040vect10\040Regular) def
/ItalicAngle 0 def
/Notice (converted\040after\040April\0402001) def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) def
/isFixedPitch false def
/version (001.001) def
end readonly def
/FontName /TeX-vect10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 20 /guillemotright put
dup 35 /numbersign put
readonly def
/FontBBox {-26 -10 1002 512} readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA06DA87FC7163A5A2A756A598FAB07633
89DE8BAE4F093966CD2192CE95EB0F323A6BABFDACCFCF27D91F7869A0E46CA5
9AAF6905783E8AC1F3F9875A76F97187738432F8D14E61574CB292FFB9740871
66839799D8CAF6E0DFE00012EE6D46A2B3655F29705BE37FD5EDA1C765AA2CF5
C5AD37207ED1EE9DB82FF31A33307FFA16911406557336AF92F50B603C7BD336
73EC060F68318378A6F599DDADA5A21504CADBA1E1F4B1A22962BA1BB39ADC7B
E8CC92F196549457877C9636A8A7EFAC1C3745644C0FD151C70B9FAD69B02C1F
FE5ED071CA1CF3D4A70909B6A39FC8C64A36612E534905E6FD8185EB3DA1BD0B
300DA9F893BAFCE80CAD0161511725A9A2FD057A4A448F41A5DCD553D90281E5
3F483D886E51549CE054613F23E810E59147C05A284AEFB9C34FECC6E4E945BF
E710C7935361C9DE43CCD9FEF6980F8B3D407EEF70039776E45328226EE94AFD
A3AB06B09EF15BFEBE7B467FFFC0F805CE87C0B835794172E87C30124C6807E0
5F404DB34A82DE5CF7D90392968E1A5427A0EDA28C50EDF382DF6BAE466B2695
37BD1E24DFF14D4BF1A509906B50E6F7F526C7053D7EB7F107162BA7729A3414
85EFAE0986EC550EFDFB0E4B7A4A5A677874826AFB256FFDDB70B775FAFC5B1B
EA41C4F0C0BD5C6FBB6C32541AEE0A058472C5A806F1FDE139B121513CD600F0
52839A2EC3B497E3E67CBA6D84A1770691C9FEFC37C7388D19DCEABCB40C4447
BD08FBD908C8A610D90066FFD3CE8CE6E9B42B941140FD5DB66E3B9FA9CC19B5
40F70910CE5B2270DBA517A4798E45675E17752E38E37C1F9479B869DE576DF0
CB9E7BBE9DF165BB48908B9741FA734909457C4CFED8B92CBA089DD789A85F13
E70EBEC52AEDEE54AC87AA5169E74B8CA5AC27B33BC9202814A0FD326D021F98
E1A3C38531AF19024166BE5BD08436E7C725DAEF8B0D2D5253D6A9DA8625CA52
D8F0222DF8C52215FC240E04C43C8178011E0C75E13BE96A55B5C80F75A95E8A
7F2DB117FABE7A52CFC4DFE360DBC132171F6E8A173A895E2123260436AF2310
14ED206449EC82DDBE23E07F9090CF5BF25078FFB40727CDFB9E51B6B649DB9D
49115A2BD0C88B9C19FF73D298835F92C703FCE970756C06D05847E6D8EAFE37
57943751EF77503B4FFD3622879AAD644B444E6685A0199DEB1D52A661AC0244
FD9D4DE92E2893038829E2C20146DFD820C965DBD33DFC925CBBFB3B450DFF9A
1BCDE624A41CB2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC88F86B07C1097F9C5C5673B88582CEA8CD622F9B0C79
E463DF7F2F4C6640FF3852BEB520F7B23D8A22E7E601EF9CC6D0A2E6E82E6840
65B82C6A3A6692811E2B4F57723AA3A6E27076A2F63D6CE1FBA7ACD844E732FA
02797B386F2EDCE9FF9F84EEAD17B366D678E61C6176FEC09C94B749918950DE
D5B9C221B0CAB9E827E3E8BBEF4018E6B622443A1BE37A5FA47B1E218EFCF1AF
6A6DFF38E77DCACD3AC2C426EE8342A3FD62997CF8C597659008C4FC1EA3224F
DB67A8CF6D5078F12FECD98B5E80CFE0284337B73C27F8C9D7F9F6934B3D8E7C
4719D0C3B184E47435DB52429A85CD87315FB8A92800C51F9FC7B77051DFFF12
1B70EF238C02844AC7349427034E40FC353D85F1C8E8AD6962C317C1306DC0E9
CA6631774252C2650C472AA1AD0802F2872C171ADD8304FCD58905A2F5F9D9DF
5E5F19AA08AB4EB9C4F41FE5701BE3A4785875A614766892C9E857B0130D8C4F
685DA9590BA94CE6D34568E56DDA47189AB457D9568950DC3E2369571FD932F8
711E07B5749FDC61D95A0415D87E14136432A749AFC11E6051C0806AD3E6B9A3
26D7D760E0873AA3A90AA117CCC21EB670EBA12AF4D303877A48F6E4FE280586
F49FD918354047E97A4B7F484A55FFA527573388F1276A2EC36C44E1AD4886DA
92648560FE1C2657B38B6BD44E7EE22AE9EF1557A1A471D8C349659D080E8D13
9566925CAC7738D360D07D895BF4917DA885DD96133A5C6AA3D7817ED40D463E
2A6DB611FF38DC6FE078E05E0B67BCF0E5D773F26A429FE5F040F70DAB7C74DC
B75BD662959B271D0B9378BA7BCA00EA900B268F2F193DD3F267F646450EB756
6A07450F6A68712CC030B52621C603E3867742BD254223139A0636B1E36383F3
F5C5FC136409162F35221A31DAEBC1304A2C9A9D22859D1776CD88BC399B8750
B55455FC5901CEEB859E5E11D735EA76D9DBA657B16A228F77C6722533F50959
D4AC8ECC47C8463DD1EB8B000CD6E19D0F3CAF8F1E05915670F9386ED73EE1C0
D2E81805BDFC625C5717D4CE3E694D40620979205FABCC5DA03D0AE482ECB5F7
AABF9749CF4B5BE790805E8D9AA0DBEDBCEC5599C64DC58CB532690B4BB9EFD3
1AA87E3A80D75383603152011530B8ABD2294D041DC14EAAE71CF9EA41C7E5BB
A0F0766E6B083C5A617E8ACEC320D6788F18C7B4C7FA3FA055BE6F6BC81706BF
59F396009DFDDBF03E92CB2624E5DDFCDE1DA1C862C9BDC34F968B6E9A179160
AD5FBA845C80A44F6FCBC9F507F5F1ED713B0ADC85B6DB25B9773493EDA922D8
1E3194BDA9CF6C6CAD374FBD8DB58EF1E81CA38D9FE51515D2BA0D4485501465
4D1A999CAD1A5E9DD6E167EF07A032465003A5310E61FC5159BE43BB20DB77D7
FC219393B4A5B034214B3BD6D89F1F41BFD2A9386B0133C6B56DDD2C30F8868C
534D966D458121F1D711405CE8932953D69522329B698729A634190804D743E6
35733BE09CDBFDFC9B81ADB62601A48AE4817BC3EFAFEE0F00BBE7A634A56E5A
BAE0E9F0563FF50BB4D45264194688BF82CDF91AF5DF5E5FC39A8288A8839839
09C4A49D0877B9485D1ED26C4834708782DC6D566BF67F4EFD6EAEDC7CD7086F
BF821E7CE2A49327BC8E4F2B23DC47BC6EEBF0AF8204F4A9F56AF89398AD5BEA
E92F354A9D2A57ED3FB399BA2BFA67306C1B777BFD980EF21B96FC416E7489B1
8C1EBE7778DA2A4D8FBC4F3C1001A37DC67DB90DEC3378FFBCBCD4382C279337
E414B96F2C18C589777E0B56CEB9A7E065B16067D2871CB71C96AA0E7FC9ADA3
D34DCF2FA72D6EA14DDE19D11D1B93E1F138D0728EF00A16AE211E63D3A0B05B
86A77889F32C7D3B4DA8C1660D0A7F814E9FC4D688BF122740E357AD60234F10
251B908ED21F9982887BDC04EB7A2B10EC4CFAE215F4EC1EA4A69F1E7AF4BFDB
D31184EF1AF14450B3E051E2AB9D10DDD7F4FE53A27E9B95BD597A74E2A9C453
2FEDA58E57390130B7B5A39590295049AEC27FDF383B23CC447D77F54CC3A41A
D2370F4720BA1315CAEB34DA4277310E73CC74EC96DE6764C9EF51B53954312B
67525033F69A7699877A2FC9C4062CF25AE8B0C4B200239A8EEDFAD4072CC8D1
4480849B85FC635D15B82026A7C325C70A305C2ABE07E1A4270D5962E21D9D95
D6C58E4D3D8CFFB3AA00D1CF0F2B1C9779914017478697649B8CA8A24EA0729F
8EC200A597EE3BBC5D2A7CAD53E09EF7F0CEA80A0BA2F1BF3D65BADEF65868CA
6E22AE5F6B1D9FEDE76375C384BC907376C383FF74202EF98272824BCAA6ADA5
05BC23FD7BE408364449D51EC188446977F1DB3AED6A7151CB42B23D5F92F0DD
269D75882A63D5875E5A304819C7043ABE9CA652E86A2A8C7DBE3B4862DF5466
CF0D5362D4261E3AC31D77C44709C7D092FFD11BA0D24FB34D5A3CA28BFBB5B1
18CC85D2F3C85FD749EE2173F8FC5B556D12F583F0F9933CF3664B4D4F09AA27
6CD03590429F00EA9313057F07C85B86BFAA3E113C1171F6E895707042928C39
723CF68A63D9A84E98C38D227AA3F3831FF41A0E24329E8C08037859370C6368
1E18B9F0A91CEEC3D5BD8284D30537EA41B48069186FD0C84E79CBF97D841C47
FE15B0136E8C0B8C4D9ACB07AFDE14287A32573F9EB460B21773A24B32F8520F
8F6A23F8A9AC4F6515E3CBFFACB93324CAF2AEA097061D943EB3D6DD5C300271
2E709693AE93205A3BDD546C980E3CCAE2E96FE686986F37A739B91A1F479539
DF264AD854E58A0EB83B0B4DFAF589EAEEBBAFB9063CF2446DB89A6474D787F5
37A82D0A287A53B322DF7C7CB495EF6F045D0DE4AB45EC5DDCA36101B463A74E
16ECA2B4D77E0F486F55ED9BBEC69C9502FA9EF1AC75B205170760ECDAAD9D2C
610D6F4241000CD278045B105247C87F63ACC06676A494387D55E85B88F90405
ED2F8E8C1DB1B9CCD4EBD971DF29D0EA9479063DFAA2BE0A8418BAC7FD93A9B6
57FDD5457D323C7488498320F09F0AD4274EC384D0A7542A6EE4DC22081E6532
0BCF823FDD19D411A8E3B634FBD90871D82DB6758EC3198F6CEFA7643CC608BE
2E630E7C86059AD128A9B07812039F79B7D3D5A44449B1B71E0FE28D17F3336A
B8367694C5867DDDC3DA2D3EB1086F21959ECC0915811401FEDE3F5008DAE9F8
12EDBE53C1090F42ACB0F5C1448B318C351EF978217FD8E6425D6AED12552952
F59C57A71F3CFBF619344E02533FFC2F578AAF20F224BC7D385863668F09E740
B4CF0091AFF820011A3AB96C92E1261FF4BE4D22E5D0E6605C6FFE813DF382EE
AAB8E728D2598C7A9A2B1CEF67441D4E087231E21F31CAF29DCA543E7BB01658
BE37575F4AC9A7C62FEC7C28F240F8F45BD3D438A7978E4DCEEB772280899A16
A3EBDBD8A7FF3DAA0182C16ABB7E9D355591445A3187B1BE5ED4678CB4E2774A
65EB9D4782B00E5CADBF5BE9F3443229D08C57E9B793D7EC5D142FF96AED16A8
0BF8316842DD5E3EB907DB5C9ECF1914FC32A11B8B89C6201EFF53D303B22C87
B9EFAF058F907BFCC8ABECACA9A48F47182B0E0A65118DBAA6BBC751D12CF4EC
608D5BD5CBBC295B840A032A0820D8308F7F06F4E1E6EED401ABEF28A3D0B78E
B2ABE29DA8B0472063CF66E5628E7F1162ED65BBE5B28FBF00DF71CBA7220A7E
D4475D38557F8B50CCB2D4CC6978D66E994B2131A6C94894BD33623C8E80E9BB
A37058EE9483EDBC326029B25701C12A76E77723866538196DC3005CA2757CA7
1CE1D4D596C94835FCD5984EDAF312E131DA76F226F878D58C86D5D1277A8146
FE45448EED10BE595FF4EBB101ADBCF95D22F70B550690DB091814A81A0DAB44
11F28583C184494F80863EE583B0EA24DB5DBB6738535C70176D07E4C2348928
384E90DAB260F85E06F070C56C409EC97978129D68BD40739C860B9C925A136C
AE2377AAA727C8512492002B3C0F849A094214F96DEA27638A814EE37D669A64
BD32CAA08AF8FDB0927AB32C9B0325591F0ED04539DCC83D115901EF541E6DCF
DC30C7FAA87E14111D81F4BEBA4A9630ED0ABEC89DBEF213EAC46215DE29A908
329D84F3FABDCBD98CC78ABF25DFC5B6E56E4C3C2BA649DDBFBAF4459AABD029
FBB5C2E372390011A7180CBD84432DFCECAB28080356986340F3892CAECCDE7D
39860EB460BB8E39C3D065F3498A6DF7304B5E971A247D56CBDE7A33A0BE7E85
6E3747B84F7A04577B489F68A5B3E1846EC08A76EA5C2022FA3403B333DEB4A5
E517BC49D3AC96BA7B65779ADA3A99FD5810EAC2BA057DA60A5AF84DC51757F0
CDB67DF781756DA0ED18001EA33C1B578F5679C3B9C7601CF235D7961F70EC46
1315E6448866F41067688597885FC6A0A3B1CE52A6F2B3C9D882F5BA2CD6D566
263A2A545C328D084A134A9A3F17A9B7873EFF564E62D1AD7873BE15E6D5C93D
72E813C194C6C9A2A0CFD05B8DB335A615BA37DD8FA01535874A42BAD10D5377
CDF6C0CD0C5D483583ACC6B5C8144580B343A2348135215D678FE8F7F1DE6797
4FDB225485A27F23E43BA9E4095B25C098482BF77FB3A8FBE623ECAC3D3F1EF7
E32B2220861A67E3FF1DCC92B811809A090ABE1788B2042BD5DB45C47940D544
8E07839C6A36257634A0E8F87B655756C6BA68B5DC4CF9D69BEE939CE5443E4F
DBE0443959ECA5EC1ED4CA6D2BCDF326C9D43D15D4EF14CCC7585E703228E92E
1368AC60C0D98DBD1FFF227434415376B4A3B3F4F18D64F3D0A71A1AA52B0118
E5DF3148CD6C48A28A7326DB696E9D677C2DC2897498CE31BCF5DB0FA999356F
038698399232501314E1775AFC0645CA6EA087DA8AB34CD1C43B0913BED5245A
28CA0657307AAF1840BB8A07C10523CB35585B9BD962D23F0B9C17507C8732BA
0093878C7C5A68F7B6AECAE0DBE6E28136ACDA083C64A5961A8D17FA33196674
939E4EB3EDAD6CFBA9C853990DCD607F320B0BA442121A5EE70826BFD48F8196
C15D766B8DAAB40286EA3D589FCF3F50DBAD3FCC0AF4C621E948B5890713187D
83CB4793C6C1F3DB7632D8C9EF8B8C439C558F0CDEDDC34D815D7E03B5A2B235
DB372FA419B7EDBBBECF5F94EE18AB2F056058059CE483236E748DE241AE3D9F
FE3E9C340247DF9D0F3CB07D2CB2ABC8F4D89114337946BF8371CA43809E5291
ACB34C219301F7C367D88AA2DD1F022C55BEF1351DA3E0F3828AC5406235CD0A
972A5BC3875B49F9FE41A76A060E213B7B87355520872CE33A7A290A4FD1B16E
E9C5CF8A8B9FE0A0883A5BF0E3A18EAD621C2078430EB0F2FD948D262DAE7606
13B707FC9CF2624185D73BB4CD141F0D847D2959D3D31D750A5CDA744DD86FBD
C4CB26E373452BBAA1EBB709234F9337A7AF9AAB921E65110E6CA6C359705652
93E25C4512DB1B726CBE95FB14FE392F7B6D4FD9AD58A21AC257F768D4B0AE4D
129F0F2A55C6D1543558A6FB41A248AFE090ACC7D1492CEF104A742B95A044EA
CB4854798F44BE68F1DE87958E9414782F7B3674D6B40E6621A6EB516F0BD258
5DE0D2377DF858D1E7BF63042F41C458EBC0782C4354B8886A6A4EC844A62DA4
1A99C2B1B1CF48B0A0B80315A38144925833E82744A4E8A183573F87902A2279
0F7C081596985CC26B51C5EFA5575527B8E1F9E731B65CE2E4D702645CACA8F2
F5224464D8D38E641F2C304136E2B1F6B36B55D508640C4F99C9F5EC541458C7
EC9968BE2FD6348B6A9D8DF1305BAE8BDD5DFE55D414D08C071B3A22A6959013
6E76822F28534FB807FADC85183D99E30FBA7A2767F3D1C3AF2D8C1754183E56
34B2A3CD137A8EFBCCC62A918DBE0ED606DC550C68454CA635C053228C7099E3
19CBC047121F93A0003B61F20B81E6552F215CC04CDA98F0389AEE15F9BD1CF0
E72D154BFC0B74A28BEF895B8F17D6C70B712825A46A68EBC06EB984889D1D1E
CA45142ADDFB6916C6BB9116EA94B2E9CFF90B16D7A104ADC8E191BD39F57824
4A4B215BBD57DAC7B437A1E81433209E6377755D115D7E362DE2087036A02D81
E931E63B2A31BE34C3D63C2EA0DE7A4B6A0638255A4617B2DE70D14DF14C3AE6
0D23F3D3127AF950E57CCCE804132B3F50E1EDE4D496F6FA8918BF0C1676293E
0A56415F9565E574B571749364D73AF2CC4E1D535520310A96EEF162CFD6E91C
9B25883F5D8630D746DA2D0FD460BAFD44EF43F9CE5A6B3796CB4A4AB4F9950A
A115D454B64F723ADF54809E0E8AA095A430723CB772B8BF9BA537234916EE41
4C9652147526F7F4245C0559045C91E1730BDDF91DA6F4444630E1484698C13A
D5DFF9AFD64E5A1B495793607A529DBA7EBBFEDB79C7F7511884579505940F50
61AE3275726570F2200496FE8139BCE43DAF613330AF7E59937C4A902330466F
7C2EDD3573C2D7D5CE66E04593CDF94439EE5C66F1314C202E264CED4768E288
FA08B0918D743467D59152CFB044E9519DC09A4AD35D19AE0E39ABF50BAF0981
3A3EE4AC43962FAF5CFD9C02F6F5C04AC43859AF599D11933A7AAA6A31161D81
D718B85372C28AADAF069CF7E4D1D07EE4B480B2C6C0DCA87E945660029C2C80
8865F249216C691EA2BF6E756EDADCCB3254490FD1D5781987B409AF4D7F227B
CEB7B232AE300B8D5B8F3E4AD543EC864D86760811B5FD18F1075222119807FF
109569C23E364EAC85F3B86D893501AD7DC7D809588DD896135B5439C731A954
D2F02FB843E50B94D74209DB0483B13D99208C7C28FC9D1D7908EEB2739252B6
26FE9A42384DD7A5475DB540CE20510E4B72F5AFA02DF7635DAA9B838AAD3C9E
6091143C66E6C63DD7865E5AC07D7CD353D9A628F28B0C1814541D60DD3811AA
0474BAB194AACDEB12B7DD2EEE36FF02C9A24ABCC6F7BEF85ECB9FC2AF513F27
576D362A4FE8CBC87027B685B175627FEACC159B603D1FDD6630AD71875C14A6
C952F8978C459F7DB57F78E8F399216D8FF40FFED19F37452A429B97B1FF62D6
62A839FA404EE74D31BBBA0DAB6E479B88F8646F6F0DF36EE3C0E505656EA69B
E76D3643195178A53B62ACE54AF12582780596F217083C7ACB680A17D3E05625
8AA295803CCAD381996031C9F2F4C5A538D3D6AA4A6889B883F99CDF29BBA8A5
DEEEE4E4AB6F33634BAE9631318671C92C9FBD7C34BA83F6FB47DDF0B7695E3D
C08BC834659A01FB18404F47216792AF5EC919899E3FB86AF44AE733633E35EC
546B116E750A695775E3A8FF98C940A56704FDDF0A39726F70D8F1C611FC968C
C7F0B607C23CB3518490BF04B2691169FC7F75AE8A358EDE85925201E1784A00
A8007F650ECF16EF9825F6B2003D7281D841D7680B84FA68E494EC1F47A5D459
95B684D6818AF88B924E20A8E2D9B561F9B35154BA438E4EF8044DA32649ED0E
AF9C44558C7565DD3B70552F1084C6D4E37752BE4A86E7BB250B2BC6EFE9FCA6
A74A7DB26E46868EF790F38DAE3E64F97E6E249ACE0AC68C96374C4CAABD0A4A
7B26AAE5892D835788DE93A0E01346982FC6B800992DF8522BABC5DADBA808A8
3791C77A0114559B7C1CC323F727C0164F15B5E1AD2F8A011E072DF8EA71534B
E95E57A19F039DA0BB56387C6C2841F559F3081DBE03AD146843005EBC8E686F
B92B2C917F8F4CFBC1593CE0699AE7709AC7EE419CB2D92FF625CA90F6F24642
87BD672AE813CF5582A28D36246B46FF57B5BECC8CFC866604B473CD85D9AF94
85FD050836F3DC6459B9D06AD14BB8979B60ACEF3D8EB662CA4A47E4BEFD3757
3A4CB7C9DDB2646C5F367ADE72F3FCBD038BC8C8DF7D51CDE43FD905348D6A9C
4408BFA22574ECF8A30CA573E0C67035334EAA4C6DD85D281655DB97E2FAB4F9
67511AC95FB4F30DF1A164B2F8E33CCFAC6F880C8E46EAF01FD0F697DDE173DA
613908C205488F6CFAB78F60857A7F0BD169BA4B1B27221E58DCDF493EE5E44F
9136A13117ADB6DC70C7AEF77FB502E126F4534980509B073B12696571E4C504
D9145B2604441A18C81966A79E2DA22E67E0B529EFB4228CD7F5F02D86CAF701
B1631C637660CECCF3ECC78FB3B48A61E113EBBBB3AFB415A2CAFDCDB9E014AC
22995CD2F9615EDC6F0EE52140C3CB56CF671217D021C496B451C0C336273926
E5F02576B34130E68BD9EED80C34ED4B5F5A78C81959ABBAF69747975D154C2A
FE702B7F28F1032838380F7E658633088FDA9A86EAACE7F6919906B67CE7350B
83D48BCF9BAA1B7F5D29BBFB51F7D448059D214266F8A3B52EA8F865176EBA82
4CE1E818EE1EA5BEE83F1526346B09F35F5C45D6781826AA284F790CDC347585
5ECD75F063A19AB956DEA84D48D8C4AE159DE9560E772E000A53D2494420AB38
D80A2484AF4771CD87D9B0C0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5017EF863393113850793875697709861E50EA63860BCBD
4746CCFF44F0A170A875B6245B17861E28EC28D50FB9B75978D4D7919969931A
416110D7D81BE6B6F0862FE61618E8B5575F5FB13461FB79B473A8EF5C815A19
621A9BC5B1C703AB24CC6AA36A96D66D67F077FD6D0977E8069DD79D487A67EA
1D9A22A508EEA8494F7BD45B8D65D86C58DB747A2455B41E7CB3D8C64769914F
77F5C7C882B7BF79F5205F9E9A1EC74128D2448189FA0AF72A54105E7A572DF2
54355335500897F2123353CD23FAC7E2B86EEE2936DCFD6F0539158D3B883FC9
107AD8C633ECBC2EC7B55F467F12BB61BB5E69BA4A04B118AF10776110E31887
3BED624E3B07B6F315F241825ABD849980EB243937D3DBD4B158DEC281D83070
0BDE3C3A46F0BBACD422F8C2D24A8FCD9B5351F64D0D5C17307DB0D983B2478B
82FBBF99BDCEB4B92BD72F54E3F35A448F9B520EA55BF8D0E39D1EC954B803C1
9DD4F5B58C4D2012E04E630F515E958B699A14BC349FF6B535D1F2F28A9FDBF6
1B31883D9235708F3988B2668540D20345FA57D34BFB75310C38B48C2012E0EA
444924FBC760A5E32C9378F20C4F652DF6A4537FC25299BE55008332B6ABA853
046FF3647FED0AFF1F33FB13863341D127CEA81A0F8D82CA44B3B19D36FF290B
4BD1B807749BBF6077B8F99CCE03F54E22E2B141D5417FC4E56B370A532044B4
4E8770C72E6CDA1458BC8D2C258ABBDAB9638306F1E4C6D8B2386E52CCE80CD2
A5F47EAB3653BB035A95679F52ADC07C1FCD50B0605AB38637ED07E3102DEE7F
67FCEDC487CC1BA684FAD744DFE06470630DD70BA62817A18843C3821806D490
FAEA107416545AC5106B50E0674260A62A03E86241BE8CC3D19649FFDA86260C
21FD2108D74DCA68507FD0943782A49FFA176231A70209782C28C2FABE2E9DC3
B5FF5FBCD73D4CDC35C51C1A6BF36DB06935B7069D631047678177A624F39326
6C1FD8A746248968D67684AA008E584D6F6EFAD0CE1229FA6EACC8F803B1BAE5
50E3DEB059711ACA4063BCC8EE90ACFDE2BEEBBD6699604F3C012B354AE87819
BF154809BBC3CE6504AD10F5B9C5BD3403303EF07D80812772BDE4C1AFB1D023
950AF134BAE3E3C4B11007ABC10394B4FA2872BBBE48D39FBBBCA36A4D7C11D8
068C99EE9726665E86F2EE6166E06C03941A06C823C44689B3052C811A3B7D00
7B43C1294792AB776F76D6762CE8776ACD7FF59D8C2081A7E493662434FC1CB4
1480462E7AAA4A8B632550FEC335F88D0F84B298E4C3AEB8EA0DC73026391451
21F3723873AF986D82256E6040E36D082327E1A9073320A7A6CEEF557FD59D90
62995D7DBCC7E3CB2CCC52FCE120E0C550582728B4B0B61D0A24A434382BAFB6
C5A5AC33AE5154BDC46B306EEE1D529AE1BC6A17A8D77322101207AA83E8997B
0A3DAC1FB9EAC112F528748D3A344CE6ACE2BFBAECF7E05991A309BD1C1708FC
79CBFC4002EEFC765A32D860F7A3DCA56F8A385C4262337A2FE6260BB8E43831
BBC2D23DF8206915EA5C10C1D44B49B9DFD1CD18850C4A1F472301D92F2282F1
1908B873501300675964D24F74F08F5B00328EC2569F7B2731B36AFFF1EDBF85
B8E21F27515AC79E4BBCC9D6372191D25FC7A8D3E2AA191538FA8D28E1AD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651C32F7372F56D5E845643350BBF6D0A6EAAC
D2586F3D71442DBEB5B1B049B691CF910A78299B8A9C0B39ED96503D55AF7610
48D41BF8E781511338BAF3A2E79B98DB9E6748C1FE829C1E574F41ED7A56E8DA
4EA2023CFC69FBCDEA39CB00C8BC5AC4B184E13F3ABA4A18487B10878E9D800F
8064BC68223CA5F86E7A9AB9BAC72FFF9546B6BB94F4426E5D273581A6D28444
44D82093FB03482F71774ADEB638DB46DCCB0C6BD2192A98CC4896B52E643BDD
07F61D79F78746C5238C5504416B1E2F271280ABB91D54CC819680322EAB72E1
250A760531BD7F2AA1DE45FC978490BB69153DA6D6161F7AFD7BEC1ABD547CBD
B6BCC20BBBB289486F6C7E238C2A7AE02B2539F6DACD88AD99A2B686FBEC34A6
F9EE29616642225A5AD8C4FBEB07FE262D75AA093A73E9E0B89695B5862C96EA
1243561331C2D9EE7B65B8214E519D57A88C79B55D644CAB29554F2E31FD6843
FF7B259AD5538BD0836F18ED0DE7F01D9BD148F8279585467B15C17D2D0C33C8
24A507CB2FB6E384BA8BAC55FAF929178B7AACAE1D371228606B58787EBCCA93
4E4F469709A6476CBF11C97862C34607A7DC2871810B501018824C0E0CFD58F9
7A957FF98D5BDA3E3E034C52405A6C2908EBEBE3E29F7C6A759857EEF72F2EC4
3A8642C108D34C4CED6F7DBE80F25D75116BBDA7CB4BBB73A61F7C685A3A9A51
8734F9E4D7E801AC7DE2E73CC759AC64F3CB8EBF8B5EB56F41B247F3F19315EF
7C24C48C184E2BC4350D72B6956D0C2F54961B34FFB476B8B54F5F249AD4F434
87F61D3712FACEC07D010DD43EF4D36C3C6BFC310B412ABDC95F0615C5BC5180
C92F0640CE6A8AF3AE7EB181C2E4C11086C530DF109AB7631B321258281DAADA
221C4D03BAA1CB2A3368AB891AA0006AFDE458F28C88624B7CD1FEC6CB09AFE1
5B7C4C75C0C00F4549D250A8D8D0B82FBBF52438CCC1953B78E7D9D431A1B5A0
4A73AF4A83C1332449D33F89196645962942DEBDD82A0C4A86F0317F943CAF80
38C03C57418377255201AE91F48B7FC6E0BEA32C7762AC27D37041D63165EB3B
E7A22843BBBC2A76EEB0E1C3F1A5DED8CBC163A406C10DEEF8375D51CA265048
A748D61C4B7C040606D6661334764F75102442574818D8E2E330E2FE5102B7F4
DF3E4FF29268D62FDDDC616ADC7E9F13E6B8A5628C9C333261C279378974A281
B8F074456303CAE324705BE0751EA813402C3D640582C972655ECB16686869E6
DA64131BED44D2F499C69EA518C750370797B96D672132C82296E416D4F3B55B
FBF76FD52217FB7A494737C74DC1BEAE9A4370CBCC6A3B60E897A2A10ACC9590
B7D182BB0BCBDA4B8FD30EBFD8E947926A7AD4A39C3E3BCC457B16FD9FA2606C
C3C0740F437DF5F1B361E2AB0102CED6B56AB56737158CF03B694FC508079D3A
31ACCEAF23100219B1CF3A1F09D967E429545A65BB9BCC05055A705CC4D79163
209A2105EAC6577EA6EB40D70A6D3A73572D79A8CBE198C9F63FFD1470AEB473
2DA147B30FA99C4C8C7BD336D401F5DBFDE3DB313266068F252FBF712D4F6AA9
CA51714523FC48BFBA1E33E36A67FD71C4DCEDF3CFB6AA5BAFC7DCCAEAA40FAA
E6D4925126349DE06E101868BED82BB51E91185394F31E2C049463AE81F753E2
F863AAF5E286731902E47CC79D75EC3262338CD13F13C659D762DB6199452CC0
3F88EA12757D52C10FF38B44A09610AFDCC3E9E0EA6D89BB91F93DEA53A676EB
142FADDFD883DC4F0C38023BDA6569691729EA004A3D96F0FBB300F4030B6606
13071727F3BA34DD98CFE4972844FBA68280761E4D48476D645F86023FE852EB
25C98058B68C3F7DE5C9E739BEFBDA9EC9C8F800F862999D20CD6BB97FA50A40
B29FC17AA00DB566B2EC94DE5934CE2EF61401B1AC09C515B31676917D11D6AA
C4F958DB61B11DAC0032A4A9BD935683E85A26C1F42BEEAD417F837272445BF8
5B73660BC2B57C89B3CFF6C85E86E42A9550DA129DC0FDC4BE50D5A5CD8DAB41
09CD47BC05EC9E0CBF809328C5737D7917AABD0AD9A87F485E0843606F7BF8F2
C0F92CCA49C489AC56BB4FAEB441E713B499545814BC2B3B2ED508A5547C4B8B
182CBE2ABB754E07D88DD634787FE1DF52B38F3EED60778915269E71DB74E889
71C070FBAE2C25A7104589EF38806E811726E41351E349B6167CA5058EE84D12
58EFC050B428623FD1E621555BBCA26C986ACA69714EE285E4183ECA0F278461
1B128DDFD3B8061FEAB76A85459C6339FB76BD776FFBE44A0D870B50D5C08E42
C27D4F909B92A16E8AE2275E83777297529C5ED2573FDF8BD7D6DAC8936854A0
E9B5873E0C43A98002905B1F09DFBD253E4F8EBA8FA68830E6BD9979FD51C835
5A7EC5C1747D467FB498E88120CCCAF6A701DAC4FE774492035D2304EC4F9083
716CA7906B80486BB5C79930F2D085E30DEBE15A07B6A046946D1BAEC088EEF1
31BE9C77E57EFDAB7374603762EAAA72B0B40EAF746A43B2DA7552C98FEA1ADB
BB93C025B00E2203899B2C287724BBB8E65FE1141502C1218C55773CA3C6DAB9
681EA8787E7960CFCAF502B7A3066310BE7A115570201F827CF41845BE0BF8AF
AE8348F559D6AD28E96669BF76C5EE35D36E883E3362E8151A38AD6FA6AEADF5
82AD81A19F11688A44032481C0698FF9E0E60C0930F7AEC84C4D7EE11BFC90EA
C5CF755173A99C3D0BF412FD30352B46B6FB6D0B977BF34FB3EA2C40A1ADAA19
182C7E3FE4F4251B1887A2C605FE1895D3045D915E59246A382A2EF44013126E
974503017108146FCA11C477865B61FF0136346A52E994D5242B0EDBF68D120B
D216209890529FBB3D24651664E84B70E52B35750A4D746C647119A3C81D1CE9
54F4F359CEE99946657FE87EFB947F6EF31DCC61CDDFC39A27718813E2CDEE9B
EE0507016F7651418558D452E73137413161CDD6645A9C7DB42FDD905FF9EE5F
A98B2F04DD744B336C400DCE97D3384AFA5C0BCEF133DD294C2AA330081B6EA8
216653BA182F7FB05BFD80CDF441BB594FE01CF3180D3C3C1F0B13A98CC0339E
144825766BC7D4CA384FCD2E9256B4C11C354D3ADB93059FC37FDDAD6C78C8A7
FD6219FC44CD0E30CF5FE94C5F95054EB0CAB8CB0BFB75B710119768A161F8C2
76614552655D1037F82FE0218C4D4CD7BEBA74BED51AFB08EB16469390FB9807
1BFB9020766AFFE943870234F365EB6EF863A8103CA6089A8A29528E45C47F09
C56AD5389C3EE8DFE85E6127D09DBF020D89506CD1270C0B3EA235BDEFE3E247
B0C655D9FF7B893CC31F7949ADAFA7FD22C8F9537DE472B6C31FC9AABE7ECAA5
701B0D2575AF8A8596254E937C142B0AC9512BCF447499C2005348B848036DC6
131C1F05FE139D653820FB3EEA998267FB51CF42EEAD7BB3CF28571C437ACDBC
56D765E2C7F61226CFC5613463DCE571BF49F20E7ADF22AE9612796DEB913805
9A4C12D608FD1228018A6DF526D5C66A9F11AEC07A100C7CCF020413C69C51E8
D0541100E3DF71D501F4BFA0AE8260E23761F29F3EF6B7AAFFB00FD028B380A7
31A931CCA7A1CD78F9CEFB9B43D1AB67E0C1B90B74C62FF8FD0FCC210E26E80E
A2C146A040FB4729A47526A644743B53CF0CD6CE4EEBB414C741759F68C2C929
2B509FC3F79A0124BA95F9FBAEAAC3B3A5CC1C9744253567A78303623728AA44
9365090D58BB4E0B099DA528E5BB6426A755DD97B90D0DF4AEC960EE3BCDED36
FEC31EAABE44B4E65AC2358864B4567F289298A69F79F6981B190F26774B50E0
D246A2676F9821158D56882769E3AF7B6C0F8F856AB15E34B7AFAD9FBEDC388D
8DDEEF29E5BA5830B9E88A403649AD203CBCAB5465F18682746D4C6A28F9D30C
71556F7C9822962D39A30A3D5D4331979C914CDACD8E52AB927C4F57377C6E95
AC3B74863596FA34250C38904577CB39ADAFC1AC17B04381C6754327FA7C65AE
AC1A2839AF94903A7EB7450AA2BCC638BCB6D2318C6E6FB8AABF70FC0CEC089B
5B2A64DC911A05B7D0FBD3BC15657FCC9D561808E50151C166892AA2415303D2
ABD61EAD6A46E042F2988E6A31D07C0EFBD835CD0C526CDF34968DEA783AAB27
AD15B45820BA2C8942FB131136588242112EA1F17FD3C2604EF52210F343C793
DEDEFB0A2B195538D4B0C6FF837473C372E70836D4C5747C4EEB85DCCE969D9A
7F061B9FA20CF2EFB32200703EF58C425B9A7D27CE0BA78897210D30DA8F7CD8
5D47409E582BDD2EB2D8D505FF764C914B4C11AEA7B23988D184F29AAC5C274F
5694862641C8ED8ADC2A7166E893618F4E1CE1CEF3D26E28BDA32D12B10ED201
A9F192758B996B3B8750FCA90CACA049EEF3CF6CF84697FEEEF16F2290BF3094
539F0406AF0030ED0D0769FFA19112C97076BFF950438DC37E9700A7BCA663C4
328967C977B430B63CE6CDFE50A651EC13D52174ED5C933E8C8525F88E6CE482
66186158BE0A5592691CD1E265DB2F523B702D4D0DBA35BE10A4F542DBD3E173
15E1E0A224FADE62569408F6ED842CA727BF331033E4F074D29DF85080F06956
1019E04A19756A102E1A32153D5C6216D9C9385A18202E78D9E7ABA944D21851
498AD5DFBBDFD2AD3A45C0FC93D273C16FDC07C095C8183E89A7FA85A0C12A52
763634899F898B819309587CAE703571A817E2A7D1FE8496B76E5248A3CC57AE
914AC32F028980AA50C18C5C8C44EE90A42542106F909E4F59803685F804B0C6
A98E5D37F963A15B1C0B736ACA11C477865B61FF0136346A52E994D5242B0ED3
7AEB62353B9A1D56DABD05371F9479BFA4CAEC5CBAAC32E2DFF165186D73C527
5BC9638D8A733D3E5905EB634982BBDBE878E238A3AD7D54A0F8D49FFBBEEA2A
08DE64815E836B7C7D1B6B6FE2F8CE38A96655B073C606ECCD8C3F2C5FF185A7
2F8B21D6486CD41A80EC051E875EAA89D64FA5F2126CCA7E93636A7CCA2158B9
9A15CD40585926E5ECB3811D95422BE5D90F0E736BB7657CF2A0A5233E11D3AA
E27591284292FB1BF22EA7654C2797659EB876A0CC35E0BD79F4A14F56FE1C18
E6232BC798A227D8F8F92AFC1924FF85BF0BD5547FBF0ACD890470AA5CB2E0D6
1ACEF149B0A7B73F2EE0136A9C23EF64210422CEE9C62889C3FB5D8D1371EDB8
5EFAE402433ED36B610862F00EE394976F0A2F4870DB0C0FCBEB6D1699049BDE
AE9A5B364AC04F853C9612C58189EBF3334336824F029CF3315CDAC8483406A1
AC1DF70188977249C809CC821BC0B7A2F8AAF27E7E115BE85D71C3003914643D
2327692E464DE4CD3E76C93397F7998AFD5A64D6903F2EF571F9A24136315988
08E0F91DBA758A23E515E9F18329599819EDBDA44E136B801A216AAE5168BF1D
DF74179AE8478DFF4DB502DBCCDBD61CA5B5E20E1CFC04C7B74A171F41A35364
E573321A926C7C3DE13338F52F2C91531C92ABA181B7CF0FF955A8DA29F11753
6ED7582733A6C86215121DCF5B0716611CCEFD11F5C5F00FCEA5EE9D46AA63FF
7D4278CC27249B1329305788A6AFBF6CAE00AA6B9DA46C51F1EFB3D014219FFB
966E070D8BE5B5CD57458FB78C6ECB6460A281A80F502523BC02292E16AA3B9C
A089F7320D1B9BA214E43E83C1FCBECD57341217FA2783DCEA90AC383E444674
6FC85E9B1D817C988AE526DA4338FB27A18C3E1F59CD6063225001812694472F
7AE07866B1F040B42849BB161F8C5058DA20F5AA785DC0E77188C18435A2E7FF
BA595F0C054E96CC44F56932D8FD589EC2438A167DD3799972464CE75AAB769D
CB32014BC32FD730F22927CBA09B8CD2167352E6BA2E96F35F1E67BC40979F9B
86E0222012DCA626F8A2147F672557FC3E08A242B2514C24CD74D2A6056E9B89
886CCCCBAE6F51A33757FD8DCEA2488E7B130462CAC1C61DDD7BD36BFA9D85C9
CB0414FA7B15EC02E8C08C8A4F789EA1A232F44B216B0A7C6B898EEEEA2EAE31
DBAA343678B35948BF6E9180221EDD0ACCA578928815D319AF73A7E10B5F523A
8B2E7812E325EA858A25C26ABBC4C25E327DFCCEAC871356DAF0CB205917DFD1
A8F1216EB4301EA62211CCB8909E9C8DEC28A6FA8042B461FB6C3A5425419977
1B7A614E53D6E49EAF8E8C75650D5793750C61F2D28FD6296AE76BEC4B0044AC
2984337F2EA913D381318ECB6383C6EBBFB2B61FE04B0B13B26BFA8A80D62E48
64239BF65B841617AD96D9D7F89ED64975DC69CF20F88E081FBADA15B871D8EE
AC0EAB134DD682DCBC9C187AD9788F635D7C1D238E43779FC2850256D81DD960
1364534E0C331CAAD340B7375427190D9ED5D06C044AC61F885A346AD0BCB540
FF5D3D13C722603FD1A9BAB8481D5ED4B852061899B5682BD0A153C50E9529CC
B01112EE116B684BA5B21D162765BF1FDA0BC109AB896DE24B0A0D57D9F4CFDC
4C1FFEF87FD2B0CA2E1A287BED88AF473AECEE97ABE431A8D1B05BCBE69CF10E
B696F21934226B6174010EE3696D11291F2E3F06359FB2DF0AD948D5F373AAE4
A4752F9BDE24042B95B58726FCFA82AF11ABD26D2D81FB0531381F8800FC7ABC
5436137CB6ECF73403915F269B7B231F5D9B1F61DF7CB03421C5F46040744911
2BDFD986A3F7EE975F79735FBDBB333D136FD72B54BDA112352814FB6FAB9134
72DAB4547A50C2C293458B1D854EB79608E52F06734E2CE9B3962B4FBFB2CED0
CD7D1C12433ED9CE0AF54C73172253EFC739D7552C51C4BBEB0896586854605D
658D8C7681595D0492047E97CECDC3FAB63FC92DE5F64B6FA36C08DA3B7FC06C
7D40B03E7F03EF36CE0390DB45EA1F0B6AA0630DCBC43B1E3BE9B7BA5722421E
932D83657C904434F3CD7B4C5C7CDE111CDFEA91C7326AC7FFC2A65A633FD028
806459C9CE8EE40DBFB9338561B425E7FB8A486E8BBD8925F744645C55EE47DE
4AA52ABD988594A7EC882C32556517E396269C90FFA27C5A51513DF558A8B499
C7B6158DA671139A282357F5CFD4CEE0BB8C7C8ED352E0A1E6DF242BC75F285A
7C4D903A367CDCB74C56BF8356F94810910AB18CEE5DD843B5FE4096F520222A
20FE01B307960B1F1030F6CC9B504E1FFFCCA352431A0D5BFCFCFAD30F97D9F6
2493B0CB7FEAFC9BAF90B7025D2E35ECC22A152A63EC110EF4B8FFD3E82A1F2D
18F3F163F77EF399A73A1B5FED7935DEC964AEDB4721F177FC89A5AB13A06261
BD660253A72E63479DBFE0FB8041A873898332B8C24FA875D3E200A018C78BE2
E930457BC33AD2FE3614781E71AB4D0073D71DC38239BC688D3F5F61CB43AE2A
53FADAA5926EA5679791D474BC0B7939D43C0AA387BDC9184255A3335FD10380
3857B8046544BF2723FF4B4331E2BC38EE8787EFC7FAF8A4D10DF88C738EBDF0
4155D92D9EC67D91F7299AAC56823CD4BE926D0EE4E8CD015DD85E4004694D39
E05F5E2AEE30F76D51A3CF5FD0316410BAC452BD8BB544B57ACF2F9FE83E3E68
109B182044F27CA200B432D886A12EF6332152F0E30D38E2B0F2F1E30D973B04
68FD4F84E83950B76B1A05B4DC730087F385C524B689F96E3FEA51EF125D16E9
073543865055A37AFD20C49BF08EF65CBC703EF6ADD2DB56EAA02A6C8649E61D
7F5B5320DB4E6C7F70B76CB486438D247D0100689A73A26C5E0137C208DCF1A7
143359F8EE27AB1E0B8333DD55B109F616080F5BF29107A418F686DD27656D1E
EBDFFF78EBD97F40F1B3C7C78221B0081DCEE066E353DCCC2B78551535EE5DA5
2B7AF5030F8AE1482313610CBFB4CADB3DB95CE2C74DB09F6C18D083A389BF57
68AD942959FF0302B3225CC885CFFC8807635C4262456DD0C12D6542D9EBA6F1
12F55563444FC3D79F4B3A2E9432F8E1948F77146199CC80880EA23BF76211CD
865BF221AF4EC556835774B08B04CBF20D471B7C228958EF19C9A18ED7B135C3
300D4E6C8B686A49D427CCD0DA4E7B07C8D2140B854F2E7C3CCABAAE3D2A8083
7BF7F8C88D26D37C4A69365579571DE66F500A75420DCB24BFEBE3ADB38A6CA5
8290D557AFA6B2F76D3C2C0D7C2FEF36D9A72D75E95EC194042007DB1738809D
C388263F3562D6BAB6320CB7B552FFB89F11EA22D02AE6333848C966B1B1E30D
A2B09FB2012717AC3CCA0F72FD3DD6E6E24621FEC52CE047DAB64EBA1EEF23FD
D6D15A5E4B14C74D3856E17C875B7531CD1BC116AC4F21FDF43764C2E9BBC3FD
8F6C02E213E218294D1063180597B8C427C9B17202A03F53B88544455AA87281
0C7948B1EC866883E78C9C909A89DB039C9E9960E315CC0D5A741134B101D1B9
61CCDDA1D8C89CF7B69B3CAC447A2D2CBE22433B7494A12D6898FB52E8D60EB8
F100DC970A6F6FF1EC5403388B6EF347797DF580DA0E0A4F13FBF20B25DFF786
1AC70BF7F778DA38E54F972D6A17B932EFECCDDE3DE2B3521F190FD862092C5D
24CE3B8037AC8FDD3EA687834689DE2FE4B7759C944FF72ECE869A601FD89830
4C6EAEF3D52B31B6CBA3D9E7EA775BBA2EC97CC91D926CC76EB3300E9B6FA5B8
477E9788C5245492BAF032951F69E716001DE419883FF01BB562BF7A8CD1C6CD
40BBB35A5685BF03CA5AA04FEDEFDF24B58001909B7B03761FF2070A0FA2CEAF
23100219B1CF3A1F09D967E429545A65BB9DA9111A6D08A31D0797C7D0DF1D6D
88ADC4FF697C5CC0F670731EC605C2C85F79D5C6DD740FA2EAE0C2119F4AEDB9
BD5451F2BAC4AF89052666E690F8ACD132C6B29910190FD862092C5D24CE3B80
37AC8FDD3EA687834689D1ABC946C2E4E79D4F3AAE440A1F525EEC2713C0767B
327F5AE99A990B727C6C7020F14175225EFEA39202B10588CB9B4E44FEFEEDCE
7B6160978ED7FF4A5199B53C9F904FB174E3C63454AFB214A8944B2299D75F55
E0414E65AD6A19F8F0894C659A61F005C6FCE1A0E970036566CBD52B4A8B1AA2
57C2DEB9689E200925D85FA23439452A82E6421B44C297B1935A3A5DE94E8681
FC6842809C1CD755943368A9554B60AA09E892F91A4B3291F21C9C651669E0D2
71F30024C0488C71FB30791F330A89ADF521505BF7D84597813143C60D3D1A51
5D52CB8732BA9FB066CFFD1C50E9BCD1885D95B60048D2EFAC8D2CC435BC0F25
C44B4AE7D581455520DA75F0AA2AD71C12CA16B7AA13D89CEE02664EA934E077
7BD01EEC83BB5674DE327954754A34A9A04FE68A437B8306B8463247F1E54DFF
D17B997EFF71C0B00B951A7570A341DBF602CED898087B72FD370FCBF53C18F7
6B79AB072E704173D21582B641515FE91E1433A56A4B1C717A38CF9C88CB71E3
781E9DD1EFDE5652E31772561D5A448F9B520EA55BFA4FC1C8FA49F5377E1680
6EDACCB60F0D8085FA97FE6D2E960552337321D82B49DE32AE60EB35A8EB1742
21DE36BBA0146AB08A3DFE98951927F9C3A83202250796C33F156EAB4EE9BB26
12B1FD223DC6C8A48B36B81681FCADD2C6095F052CEC01B7D399D097BACCF6C9
E10E5C114D067892630923CD601E96E722DB1BE432987A61FC0FC6820AA22F96
7BCB97046EA3C4A9A3A97D7C031F9E8AA24C0A18B40E952E098614C2DB3FA57D
400530CA6FA97ECC263187BFD652DC36561D27A9335BBCA18349AEF42BB9A57F
831F6379060E3650CDB2C87FA552F5999A1B5575D6CAFCB00B7BEF6E47AC23B9
20F7B535193DB8FCC1FB0DA6E544394563D24D8C87FE0F2722FBAC78768C4A89
FB6E27C2FB99B97F2312B6455CB547B771F0F0E66A2A9A030A92CEC7F3F1B26F
F6E2D1797C38DF3097789861DA2382708D050BC6A2263B7F797BD4F9FD0EF0E4
68AE9691921512F7DE93337F31701157FF310056D421E594F949B0E4980653F0
1704F8963B8BF87DC9CA5CEDEBE5D0088AAD263602357ED1BE61FD58DFA0317F
A126A715D3C293274ED2C5CAD0C162EBF98632D63BC149DC1379327ACED1EA72
9FBBF3D9C2829B9FA5A211732448B8F3125AC8AB538565E06699AE5D68759A52
096B795F2DFD666A3ED9C1AECFBC3AD200383477D05545B04A54FEA1159BA81D
2F515C46229D50F7DB0820570898CE57EB2DC4F2D4F37A3B26398A1D5AD2F84F
0E1339008A3DFF0A65F140E43A7EA149580132082317DD4A19E976C084A28CCD
E5BBCAB3731366C3B74072044D3EF2EBC1CD905BDBE9C01C812B0C32F4F09AE5
4B9C67CDBCE3F58B2E4658532D7DA349A085E560FA3A13FFD612BE78D9014A90
8651C8C8391C12719AC3EB6A7652B3689830029B200A417E9CD3E5580A9B0D04
F36C41B2F672218763100EA3EE9ECDDE8DD5AB6A6510CF16E8CAA48D18DE6EE0
20AEF0B89AE754BF7F8203F0C857CFAE8A868BC658413CB9D65DFF018B979021
09935414D50E1375DC1FA058A26A17105A2469DC27876F4035544028390706CF
1ADBB96A74355655EB64342E5FB6E18F2149FCF4C0F743AA1A1A120843D3681F
9DCB79A8474270CE46F97DD10CF6C8941D49919570F2E5F06D721403053F2058
E88858EDEE096C4034B5A2C6FEA57D50A9ECF4529BF907C09445B3E47801F2A7
157FAA847DA5E22F00136F21273615D5288ABEBB427E01E60CCE30B0F2B691E3
A8C1DD510CAC176665F9F845E184CC0594188DC4771B8904EEEBCC26570D5C83
6D34EF4DEC34F23A4282E1448187B3AA4BB9002792269E14A11BA6A5BC7DECE2
0029034C88696775902DF6CDFAE2AB99ABA68FADE90898D7F48AED17DBE9CC3F
44BB85BC31F795942D5D77E3AD79EB3B6CF717E5CD434CE1C6B388B901F937A2
99F65C3217180D4BBDAAD2E96F91B4DBF12F6C352FA5F0492B73CCD90086FDAD
B941A35FC77F7364BB75AE2083C7C66E6C13CF17915C99F16A44ED8B88CB1B25
44153A1AA8D2DAAD95397883491CB46911D35870C88509B392E1B931F0E402CF
17A63993FEC0044612E8EB5CA65ED931CC5E0FE1F28D6565F3C195C8183E89A7
FA85A0C12A52763634899F898B83763908EC0A1C9AAD283809A935DE0356C702
F538EB0C2D835A9CD11BC6D7C87ADA05A734DEE08CB62CF82CFB0166F0F1C54F
38D882DDE8DEE28A07A9E0A42143E0FC979F53C42E821C769735FB865860424E
A7F5CD9AC21C7B10986B3D714BFD49F6DBF0306CED94DE945B5A67DDD8EC188F
7FDBE2A9AD81F7002A27F2EDE3459E49C27632009CFD9CFBB246A971A093D8E5
027D67A89EB217A0AD71E56421A3B1386C8878EBDFF132070DF8A4E24787A29C
5AC9DD10D3BB974C0C92B89BF728B6BD03C5A92A87A52243943EB3E77E6CC38D
EDBB2DB8BE7778936B71AE27A5FA67289DAAF80C0F5EA7D9E67929CF4142CD52
DC6214105CFC9E95B7334F9BB9C94C9D81ACD2DA6F0CD9653A11636472F5845A
F507C8EBA6518215D75034119AF139B07DA441ED1B5D45704665D5E85622B48B
EC700AF8F765FD970E1F82C2659A38F8F63251495D697C3E0E8E7CDEB23ECBA6
03CE654F0B4CB297E3AA3E9EF091E6F7D0D07D34102A25E12F04FC9F4B80562B
21C6D0B8BE94778C7E73746B4845C1ADD96ADA56EDD51EAE4683113F66F87650
90E7AAE59D8053AE0BA8DB3BCB2AC0442D6E7DA7789B74A83724CB18C0203180
8CECB597CFFE81423BC0B3D05BCF9C2F8EA64AC3C5F7CE2DD08FA2E5253C21BF
1C0C1DD432FB523701060720730E9F51B7626597A17CCED52E42690F9808BF40
C0FF302E4E863FE458E0DDE830AE5FF2FD1A26930E14FADD837552972E4375BC
3F6F857EF419616A0D2E3D646143431C318824FC3BC21E55EF5123584D5A3508
FE86CC6FD9A1DBD506B027308CF215ECA53E73C0C347A0C47DE886A1E1F78EE1
8F3B7924E56DE4D18CDC352314CAEBF065F610B00B529D079F2291FAA610FE8C
4CCD57A7A8C9F5071193E20C5358A7495DDE0FBC9B11349A03CB50C3C6E5F571
A5469121D122E16010687CCBA357EC5C1C77239733D652E40DC6F755919054DC
900685CE73A8D5738C2BC3A5CAAFD59260886FCA15CD098A1B0611374A7A0A02
E4EB602399853AA05DC6ECC02F16174606AB2770299A4EAE74166D0EC9965C87
B89B8C1DB7526B19F7F0C20B11FDB0F0656E7ECADAF295574EBED60685F10EAE
1ED416C4346753181147EB065D30A883FD14933F4B11CC112DE73301F7F888CB
67DF1D266655E2FF6B267ACD8E1FD4B60843C4A4DEB96E4C3F6F3D70BD587BE7
BAFA3EAC91AFD9FDD8AA23A57F745E383FF8BB6DC0C752C8AE387F1D4C15E4B3
D2C887A3C469F9DC2A96B15D33FE7C565961C2A7F1CD5D80B4B11525BD2B8C3F
6F760C8245A1AD9F508AF0EABE76207E935CF4233C2614BB02993C18F5228D99
AC686A7ADBD6EA7163DD1362A8CE7A17C1064CB861BFA9277E75B0A8C76AA6C9
98C9AD482CED7C243C9688305E326F5741E280311FB6537C611BA2451F461DD5
2B51651F15E9BE11CB03C9FDCFDE3700BDDAAED61CD52A7DBF4395E223ACFF1E
E359821663C771DF990F78D69355A8C1D072E20D0E000DBE4A0656BE7F021DB8
63F63DE07FBB104CAA97C01188ABA1F0AC094030E2F0216F900EEF6D6E69E994
902A4C425BA976EABF2B11775929B1296FF602F903C70BB29D852EFCF3751A5D
80A8849721E155F887EAF14699937EC5E60FFB3A13AC9FCE3CC664E6C09D19F7
D23F8A75F6D1464A7A8025262B1C95F281E0164473AE82AA9B11484D9D6F8B66
D150591E00FCA26EC8CFB1C926563979CAD433B91341797AC8D4E9842A26D6B3
3DE375C1AB93D839DC4F2D41639E03C463B9D53DF9D649C8017386EB0C9E4399
A7AFD8703D384864AF49F4EA3FE72CC66F826A3A692434D4D3BE6ED6DABA6016
F812E8D85184C463B9F9044091F80D435E1366EDBD597C5085B9AC04EDAE551C
BE68E84519D138C233FED4D6CD32DE3F8DDD32A240FD49AEE908C7972AB2A420
AA567E0BA6781213329980CFCFB18CF7CBE6C7FA3C27329FE9A10D03889EDCDD
324E112D5BEB28766C0B807B8FF1FB8B81D0B4103EBB92A3F801177BDE9BDD61
E288E9C68A020BB9427C07939EB5649DED6075ECFF58FBACC2E7AE26BB9A0546
118C9BB6E9CA78AFB3C7D87A1C043EA301C3006F857EF419616A0D2E3D646143
431C318824FB0C49362FF7408933501D25922724867F1084DDAF1D0BF513B767
87E4A2F56EEF9FB845A2F7E97795A15160D23DE3668AA3D7DA417C906CBA8079
93A9162700BC9A16725D6510F607A4139FF20EAA6FAD50724816D76FE683810E
63BA4E40BA8E5C0A6D51ED6EBCD11B5068CACB85ABF6D9FC648CD35B1E038274
11BA7AD177E43BD16802D27FC2972286F2B152BE1F52E47D6BDD0DCD828F689C
74CE0750AD5FA10FC0E6B5F36EB62D69D698EEB767B4E9FFE73FCDAF8BD20876
DF126296187D1364EB31556C2401B79B8A2E285ACE63FCB0B137685611FDDAB2
E8FD8784FAA7132BE44229304ADC8A686D6732B0207BF2EB32EF468462CCE9D0
CEB6AFFC1DB954D41CE677D750AB42C1067EDFC2807B3CE00CC05F6CA1D87A1C
83530D8ED64611BEEC2A214EED19C0949910584F7FE49B03F896E7FCFD087089
E5CCD4368BEF556A281D166D457F08E37D782E7467A552F704EBEAF9F9AF6A64
9DD0F7E5D01633F0D869255EB21B016AFD3655F66750D3FAD23810392FFC09EF
C2864447914DF3ED2C719753BB1EED9C4359774194896CAB73A2F2ACED52AF9D
066794BEAF0EB7F06C1D428B9D34331BFA9C9A08BD09FD5054C8388DA82C3566
624F6F7CAD4242AE6C63D047AAC8EF82134EC418EA69430C0CFA1EFB2B4F9BEC
48808524500F3A6571A6EA4D65079538C1F9087E6FC665136B7ABFFE8DBF1184
D3C3AA9575819DDF023FF06A5F3B1A51AE4850C6FDD082AAF6FBB07DFB6A6227
A73AA255113DF4821BC5FB991DC6B178B121D38CE79E3AD729E30028E43296A0
548A7C64326F696544F6B1F129A854A81ED65184618E121FCB80CD031A30A0F8
7D7BAF534E49D13772304484CE3BD2A9C4955C7691B72AD442BDDAD18F30DB19
0E4D004697B5BD861801D55698E3D6ECE62CE5CC9FE34A8AAB8E3CB9409F8206
F24A189E57A0B5C178B7326860AF2A334383A1C7028DB9A3509F974F409FA0B9
5E779F2E9093E016D90FE788F6D726A04A5D06B0C05E69A239F52F5EA889627F
19006CC52D9E451DC21450FD3DBB18715AF6BAA336E150E02FB2831359FDB957
92B2E6431DD24BFFF2DB62693EDC9C5A4FA4A71EA0848A9364BA6446D5BD93EE
9AFA29111A71BCFDDA20BCD6006B0309EF0926199A60E28CFF48B79840BCB88B
39475A7E1C6815544584C34DF0E22A5EB61F0C232B03C08B27866537A9CA5F4A
B3D997E3153548794D9232AA20C29B6CF38FC8562EEA94D43B47E1F7AE890D38
03E91CE2738FABBC214C731AD70893D5FAF5B4BBEC5416501276491B79153F8D
F73808CA8940A65E5F0D1CD06A704E946B53768B5F92C841F47646E5CF24EC08
A8FA2348D271D2A84CAFAB1A979AA7E43DAAFD896177F1F70EADCF7E077FF92C
EEE279D1CD8F9B064103EEDACBDC40EB2EF6C28E91A0A1B0D7A7B0ECECEB25B1
8BCBACFAF313AC51BA6360C4F0BC34696FFE3C105348362C617D60BA3678C821
5B9F542D81152BD47EB69563510C525D05E195960D0EAEFB771050039A2F1CEB
A3DB1E042443B665E915991D932209B3F4C86295911FACB51BDAD45965CB3E4C
D451B5A1D6149A66BA1CA971CDE9629C0B16424CF3609285DAEB0115E4A8A145
939599F77990E19358425614D41218CD20852B1969CE91DB3F7B7E87BD9D405F
2E29BF660674457A70FF888A59085E68EB262A88EC25462A4A9EAFE20A956D43
50D8C90F998103A821C35734F0153950E5F72FF6A8AA6940836AB19ECB89B9DA
9A93D028D28EFCB73500DFC2F30D6C47A485B062196657C6B0CA8422DC11C6CE
AAD52991D1A9E5969D76BDE4FC976074F2D623721D38E3F361A941457847C5EC
09C01622C089AB3CB216A5C27D634731F3CA55BE5D1F91FFBA4A232B68F80792
19AA89F699A8C22C30EA308E6A5C8EEB5921F493C8F5B7691CD5C39E936ABF65
80C629A7592A909A4F89FBE2E3EEFC8BB99DF3B9CCE8FA93A71128B87293E690
C242ECD53B604B30AE8D7172F3E47139FEF1D23D2F930AF1B361E2AB0F5B11BA
428CD87225C7FF28FDCD4FB898A052A0B1A3C494AAB27E0C853EBD237F5FDBB5
82FBE603D54C4AA4887AB453337003BE0392AF8359E416849A0B2DEBEF46E3AB
2B8DE7532BD19CFDD69285BF725FB229FAC5B04008CA381E09AB94F1A9224922
B4A5C23593F8765E8124AB49FBC57F1B0A7E8F6FB6C483282DE613E28E0AB1E0
441517818CFD111E32142FFB160DB6422A5884151A4054D6076EF2F506E3DB3D
67A2D10FA038561B4D714B08BEC08EAA7D1909D5833FAB8D6671564F796B070A
2B3717577FF24B2CB8D87BFCCC85B1F91277DF1E391ED325F8383B11D57D9AF5
0EBCF7152E3715510FBF60F16750CF58F347797DF580DA0E0A4F13FBF20B25DF
F7861AC15FDBA1372D5D4D2555A2E8E23E29D8C8C5F39807B5A46FC1B70A9ACD
B172BAB4BC144943B3D3FE06E95C6B69FB006A083E8592BC01483D8DE50B9A6A
C86F872ACFC9489546968514D49014716D5975AEC37D2CCA662CFC60637C65FA
FBE78109CAB35AC2730A761CAAED96AFDADFC1FAE977B6BE8BB8B73909AA1117
B78A5506192B150BFCA046A36DFDA767967A43B3D1F3FC4F591BFE0EA1D77EFF
0602581EEEDD6C8F062E3E6783AD762482408DC1A5E5C900A43B0115F76BDB75
E9FAF644E1879C37A1E08DB03EDBCDA51187777E14F63F0C62F40BC85D30FFDA
81640FC9C58E6C4A95E1027273D38482DCFC5F6F6E64E4D57EB716ECD75C6A6C
AF0F0FB5F6A73A47FFFB9D63648979AD6DFC8C619CE8FE1EEE3B9FE2203DC6C7
5B27035ECC31BF4368E12CED705A5823BF6AC2348B46BB50393DD2B0D8A303AD
186A5DDB0595138C0E3D757E8DB9B67D98219241C0DA67E5BEC040A958B14BB3
D782151402720D5B4C77D25AE31C4A75BD8C7EB02722DA8D89430EC74AF0B255
2C97BFBD1C6C0062488763FDB07939C52A5D0D17AB4CAD27D6776A05245E5663
DB78466EFF0F8E67FEBFA63628520A97B48285DA87CED8A9520D6679CBA61BAF
3ADE6EF9B4205BC43BA3CDA488E512ED42BD142526394C5103BA4718D58F167C
B6741E06D4CE5E269D3AFCBBF060F416C0B747EC5BA54AA743154084CCBF021C
EAFA448258460E39549BC1781B89BDB53A9752A519A9BBB3CC59D3FBE6A84F1F
9521B6E05D0A0B2E0FCEADD4932A5E64E2E417C6B64D84B19F7C2D7C143E287A
BDB12AA1761639E638CE9D89C4CF0AAE1B38A2837E19E5AD8A4551A971DCF562
769FC5E4767C4CE91F8896FD3FE37FA5F235AE1BA3C6F3547FF24606651E5887
FE8CD61F46FFEAFF4A66DCCA05B42F9B762FF8905BAA1B6D15269F38A2D283BF
456D5D8BFEEBCB5B69717F22A0503101F9953D8EA3833BE27127E1C489198821
227C1ACA75B845E5D0C0F7D8416730AF4BE4FC931E965594E03272CE6647F502
4D51CD78D79C802EEABBCA93CBF968187FFA00C2E8D8E14D1017DC8428791C90
0E377B78459F629FB32E5FF3872C95854381F1D0D070EE364ED35377E1DCF455
DFB59E53117FB961AD0BDD708C34E6B895AEF03EA76FE4BDD1BECB4F085845D3
9491FEB49ACAAB78D15ECF938729214C68FFEFCAC997EC286F30AD0245F229D3
687ADCBF4D6FA08D7289D923565955106A2FFAFA8C9F636D647F334B648E11C3
659BA4FA71AB8342608C30E42BA95277382833BB9C14C6EEF11BFCEAE9139B89
256D5E8FE9B80F6DB3179657983AF5CC8F3C7EAEE084A74558304627D0C03A01
2B6CB42DBC8EEF10FC8E83696D58F0CAFCCAFABB836E9C1C7887C42265DD4193
C8618501A7FFCE13919D15CF5F00684B37087F633AB4C7B25FF2D7D54B31D2D6
96DC1E52C828A7A1155E6471DA39E1D47F152AF583CAE41F7F7FE0AA3F1F7DD9
175A2945C257765C4801FB768C6188F02FF2328F7D5B493D274CFA840BDE34CA
C6B57A04D9EAE9B90595D133E0CA2A3AF2DD6D4E50A9FA8AF67CE3FE823A4E3F
9E367C4D358692A287F5074A8C01BA5518911789F7767BD01F00D086DF326D7C
A50C1EFBB3AD48F21DC7670F524682E7CE6FB4EF66525E8F15F63E8A9F64DB78
90533FDF90C51ACDDB5CD7B1CBFAF76EE833E519C3715CFF2AC7C25F0EB8FFEA
273601D1E82984B8AE31AE343F37D03920CFB83E2DEE7642AA85B1615F9CBA1C
3C3197223C9F0D4AC9F585ACD311E1BA537EE424CCE1F22EBA8031443AC094A0
7EE8CC94D559627274D5026EA0DFDE5F67ABF5E84CC6B6717E8B794AB2DBFDDF
3A89648C906439A91CFB1AA195D9F12E03463930D05A3D71E1E9830AC1A31C2E
35BA7B396815CECCA18146C96709CFF862E8552E4FDEB7767292AAD81E5B4186
180C7D70697B73BFADE926163A5780E71276C60EAB7E25C124964778296D06C9
02559B89DA648B919EB362176B83298EE2D8B405DC67F2F888ABC36137C2137D
E0D7EBBF2323C750C674154FC6CA853B13A2D88CB67CECA9A1D3498D569DE012
062C1B959357A2A5903A5BA40F8E6CA80916037DB040BCE705D91E61D6FBF089
4C659A61F005C6FCE1A0E9700362C58C9FABCC46D24DB46E33983DE9AAEAA7DA
FD44C991F74087597F21C39DB6A2CA7C80E5410BFF7EA073A18DC2F6999DB161
EF7DB88DA4B0C592385D35F705BC2A9B1075F1B1568CE34A4F7FC812BF766372
E6F0277D8604E72E2594DF545E359F2932DB2764780688C794121E4A50AA7CD6
479A34E1B75657B41FFDB8AF1C9E3D3CE95EB410E74A1A29DC16D7FC12AA69BB
C23F9C6C4B24E6F0331C3747E378ED0C634370C3BAFFA2F1F9A03CCD801C4E1C
6911750F761F9907A438DDF4506C6ADBAE868F8E3D97C83E366A89B60E01C8D8
AAABC217C07193F92A25135331AAC542A41BAA9D9B246CDCDE58236DC29CD0BD
4C7842713E95F5CBAF73AB6456DF36FF580B2F42E21C6902705307EB16D94092
A85D8BF6BD657788322EA6A7F874F53F5EC3D5A4DFBE35B5911AC6E218ED62EA
FE23AC78C1FD52C0591102D74D3C6FDD1935694B7002E61FC34AA828BDB14CF6
B81946BBAE9D2B044B3F72DD84699E5735D7A8A57091D3709FA9D5314AD7FEBF
0797C5693895A99F6E03BF0F19D8246951FA87CA9FE08235526B59964E529D71
4203D3849619EB4D842660AEDFC5430F81C552C6AEA6BB170154C777A63D6404
15B9729D98238DF0E36467F8AE46C4A0A633D4B3F8CFBD1194BA8E3B5F981868
3EA2F04EE0AFC3AE4DFA747A1706F7FB6FCB5378D992B8498043D00CFC47D2AC
1081F1A0B01B07A92A8282B3EC6B7AB485F98415
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E08614768323AA8C00DBB95A351BA9BBC6F0B6715C3AAB9D7A99123
B1639F952E330644A650816C4C6B34EEA836994EEAAFEDDE56E0099D0E09EB88
EB093544B9BF4871200746A0409C475FC4232A38D8F3105B0FF44E4F132378DD
12D9E796412FD0F9478322215E9F59E69396C35AC4097C4995B60BF4D8B3AFD0
A002B3A6E4FA114131410D5658999B86DFDD3005F3AED1FA8F077AD1F27EA249
221585703F20FB70E37A26C6C3F2E101693C94612B65BF89F37AA3C10A40EE8E
49915F1A1B95D2193D8003DECEF9D76FDAA33B1AA9CEDCB21C2A3B05747FB3AB
DBD904B66EEC60CED2867442F5FE445587EB8BAC342210D5B0ED5550C4B54109
A1B5D3696111A1457BE695A3CF1A5C16878D44BE38107E327EC40A072AD969B0
353ACDECB582C109585F829065A21C707F26F67B7ED3B19BBC746D18319CD4D8
32E33C36461904A78A9060F82C61B7E0A286AE5A038A15A5B7405B057BE0796F
417ABEE10B8D34B4B70D5EE47F2256B265E4BA5270EE4239F92C6A4C8DE84181
3C30F45D0AD1FDAF194F7DCD648D8F14A5264B6277B6BC2B6A429FDCDC16A22E
F6E1D59F1CC4D51744A45891F00F44CD3A74129B0234BEEFB556B3D8DA07F98D
DC45C491103B6C2D4C14393B95D12FC9F4D36F563A537CE6665D8C4432AFFCBF
37F6900013D0DD0D4B5408BF106AC063E2B8EEA19EC3ADE5245DD627628FF3A7
68BF76B742AFC3A23E150839A9654E8B6B79FB414C0AE8E5F3B97181AEDC88F1
71136E7E9AA227A3ECE30C3E31934A06AD76C78E25AE7BC65295D28C82EF6E64
6CAFAE116B4BF26A666F28C3998D7F565D6B98E4DD7C81A973AE20D8066DB1E4
CD544B8BD796E6F46363F1F37B0FF58BF02832A9E9EE0BD2381E5808B2BCDD57
4A9A0544CD1D4C637E2C538C1EB86E4C4FD0F9C6FBA19F5B3B5DE88C7ECD11C1
264A84BA9335AB3AF1A97B552B785931BD241735EFDC4110E76D7440F9606C3A
1B08B26799B0C7906C320EE84950A6A54909C95A553E040CC062B61002B7CA0B
EEAE9C67C812B362E607D489EB309AA2AECAF3AC83890C0AB7A344550A1D33AC
DB38AE18D385BC90BF548B8DB17A865A8D1692102641DDF54AAB59349B1B5D09
9B1CD05D0DA3E55FA53A38D54E1B541697128237C758DD8EB51940335470843F
8ACF0D1D3F07B4EE33C299D65F529E70FB037D58C9D5FCE3CCD723D30089D39C
08A65A23D52BDEAB20DED8CA587D78E51346A46D7041341A393392E284
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman7-Regular
%!PS-AdobeFont-1.0: LMRoman7-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman7-Regular known{/LMRoman7-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman7-Regular)readonly def
/FamilyName(LMRoman7)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -102 def
/UnderlineThickness 34 def
end readonly def
/FontName /LMRoman7-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-483 -292 1562 1124}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E69EBAE83EE26F7ECE50E9B8349D1A7644F2E9
3FF9625116305D3A8AB7EFE9B6CDEC7FF1AFAC2914844571C1C3D55312245E95
1C742DA9DFD51D0481667CE0F0BFADE80CE5955045CAB5B7317D73EAFA74E339
ECC43C39A209A004E5BD75366B006A91D46E1E7C87E6F81FB54A33DD44AF5B3D
F81A333C02842D9C00CD0ED5C5E87B3F9AC063B5D70917E0D90240AB4483CAAE
03746F5AAA3B2FF10270E85CEC5F5B6C1D5C63A93DEEA5ED09EC9951684CFEA1
20C70415BE898E01D695953351189B085F769E96ADD30D2753E7E62AC6BD3326
4861C1295BC7CE82F9159E3523BA56EF6BF3440231B1CF44D9AD4FE3AF0DDDCE
1A9472E941EA03CE48DF71BFABD9E2B329B65B7E9ADFD6FDD24E7C92A41C5254
80BB35DC82178DDF164C9DD247F520BE204F342B1E0E4B08742CC7485D3F26DB
DE3C6ABC9BA64F5A9BF876A3F192FE06068E5424B8423977DEE5530512949172
5D2B28F016A12B3CAB43340F9F2056A32C91149910447F13521AA514BF404CDF
1380337F42EFFE0CA35736FC28E3279720116199109D73B15157E7F6A0447469
1906F7EA7419D404549A72E3714DB6268A66604608BF2CC565579E3472D3C225
987ABCDD43EBEA8D69E8EC0F70AEC9745FF15EDFD83A82E991A3ACB8D3AD3E61
28977A95968B667A2123FDAA74D9F418FF93FEB6F7079F421D9CDE30FE6A7C79
BADF32183CF1B98AD642CBDF68BD6367FF863324063350526B221D33A9029885
76DA13B9CC41540EF9099592334BC7009F6F8721E494E1ED2C1F9D1AF8CF0B7D
F6F02BA03B3B6B275328CB94B539DAD0BCFB00D2C15BBCA5112D232DB8182167
185B478934559B3796E58D2F2F6E03DBA0266168AE6EF6F49249000BC3F16AD1
FFB258A993A704E17346084DDEF46CF7FBC5FA5860CD27DA817F638B0F0EB4E3
33415AF8A9A6AB64C7141933B26EB15DD1008A0910A81DEB2A39B31A6D13251B
7E5E4D23AB35094E6C0BB0B0F24FAE95B748E6C2672F8AC186C94D685DE9030F
C501B4758F1C0C5ACC87A2EE5040653DE846BBFE45ACE727C3BED1B597513B7D
D837A6BDFF53AEB11163ACC243B1073280AAC00A6FEF056B5D654445784F3796
AF869C15DCF39B860BDF9292A3376F58135BCFA5DE0696385BB0FFB6345B7D2D
462A2A94C9E3F324BE1BC3F336404CA1076041DB7B455E4A937B049912F6012B
974D2061E7E1BDAAF50B9DA03EA415DE25F2DC4906B1A90BE3AADD483D833E4A
E962A25E9A4E9A5B2B808890A43D9E7F59104AADCF797D03F5430A40F35CA40C
36D30FA23AE8C9F95261398301BDCC64A4006D61D6E7CCA34A307DA379E088C3
623C7F03BCBCD562759C12B4BFEB798B4578ED8DBF7425B7A59A362B11C163A5
4E4CA1005281F0552378A33FA4EB480072AA303D33D5478995B533818649CC71
0E29409BCC90E1B54328E6A0C7231547157887149E9140E054811B3EA3F5D23B
9220A659E44717F034E11D8F99B54AD573C0386EF93C796E4644E6666213CBB5
15F1B16E2B05F82076631C38774FB9454F36831830A4581AB3426B888F236D57
DB2F5A50B37FD8EA4990475FC4232A38D8F3903D81C9A329939DB53A1B2F7F09
E24144CE3A48B8022207EC5890EA64DE55FCD86CA8D87CB293347A95C4C462D9
4D7EE9B48625257D4CBE71AC6D66BA0971925C5867848F9B3286C0033A88CA14
BE086F8D4E32234B96BF37BA75E6159F462DBE459C3CC79AE1D2AF03ADBF5D62
5AFA29921D8AFF223A3B323D692C4C908EE66282FDF5A5C5DC3E4FAFA983416C
0A07D23B82AA4EED7C1E74E5D54E5B3E33CB35844961E68842CFC30E62F392C5
C166ADC53780A1A78D59FD137AAA95FC1C9BE0A9A7F95C1D6750F4BD83E8B60B
622B7FF1AB525FFEA25F6999C735660A1170816ED400EFD373D263AA62AC5F6B
51795B53EAE9EF8D735BFB4715B7E2454D0F598F0BF61BA1FD085918B9123793
DECF156F4018399C3DF46C50294789976428984A7DFACBD3FE28A8903CB42EB0
ECB5A97C079EAFF922CB7CDD5F4A783115A6438E26C04AECD19DBE673E1D7C76
577E34ABE80ECF2F5D6E13CE0D60DA0196DD4B0E8AEB23739AF92B579720B119
F827DACF326AD2F36FD2EB62CF4C2B70796A23BE194527C9C41A1485422C5E37
700B921090A5DCCFA45FB5E90CE25DAD0B342502A60C0CFEF57A93F60E383D2A
08A73EDF714E0C8692F37CF1D7E3DEFD43B2B428FD5E9677AAEADB1F46A72EA7
C69EE9D97AA1F8DA68D7ECAF8837F3B650A7FC244C1C70567056000A41BDD9EF
7A2C1CB3D58CEB6263F98385AD7400228FFFD7B67A700D732CB7F8D9B878F934
95048439B2A9E2E5231A05DBBC4BE22B74FE346D9AD20730AFDD020D7B269BF4
9149C1BE1F6D0889B8919A01B74A0E596D35746D79100E7045B930267F0EEA9B
E820E13291132AEBF7C3DD43EEB252FCD82555908CD911F38C6954DA60851DBC
60E48CCFD9E1AC3BDDF3FB69A81F2D36111EDD693C2DEF0AADA7436FB16103C8
E0D0D3F83D6DA3C845A96179A98C7D0F7A3BA7915EE29DBFE1AE36DBC2151594
A7DD5C38E6CB8C5F4423E7EB86547851E8EBB0EE5F66E30EBC30C6BD031235C8
C2A656A6F43DF5E677B8717DB0EE7B2FE3B5533061616F0975B16DDF901FFA92
3157FB455E128DC8BB985C3F3E02C1DD84394E4B35884FF9A965BCFD48D45418
8A8725EAB4C857440EBEBB371D8C04A76E7B57B775F889B9CE9850DD24BF3CAD
EE7E8C956454650FC6D9ECFF2EAD27B4BFA2AA2F95E47942252534868BC0BDD3
AC613B170814F59D363D13AE5C18DAD1EB75118D4690A28A1913BD7621152899
F4B5FD24B0E8D03EDE1D442961F6074006CD33AEAD858BB6A4448C1243A03DF9
2D4F5D0DE403F7991165DCCAB03D5ACE06172EDD2479BDBFFEB7B9107833EB41
C864CA53EDD6880C3D75B079C131B8806D34BDE286AF78464D9FBF4D80433243
428F12F666C09ADF8063C7B805C438ADBE8AE3408EBB6FB4EE7AF1B21C91041D
828C72E2878F2F679C3A002B0547A7974053DAB9937E5FDB670E295524876CCE
45289944B9CC67F7AF33B63A06B6CF52D85F449B56CAF79BBFF2EB908D91B245
11AC525E15EA2EB389640A3CB7726DC814F0D43DC49B40676D6859E3A1225257
1F67AA1F04A4C533EE8B901CFD0AF403EEBA2C5288C890E62B258E26E398918A
03B37FA4B666C54EDCA4F9273A02C5DFAF14A6E9660AA8253D564A36E960266E
5B958CF632FAC74FB900E04B0B13B26BFA8A80D38680FF1AC67983B2E5C13CAA
C355E995A962D99273DB25B9DCFA030602595A3E4D3521698D10A5C00524A935
53CC5A757FA50D53E6AF18AF09A1B9C4792EEFB63868A8696DD77372304300B9
3CECBFA91BDD117F7D0EED87D94F45B85F3948863924D5F3355F744262A5D26C
F9515090CBF63F37CA1E51253191C462F391082D29CE214DF8C38971D55E4CAD
E3957A2F7BEF06C03392FB562C26C291810DE035C150F276290101A50BA06B30
700D69CDDC416DCB2FEB5648089AEAB659FF48BB752B10439B1C9A22F6F2C029
7F26F5E4F618CED60190167BE5425BEBFC580401E723102B68202FAEDE08741B
E7D06F9A19E660605FCD175D665E691BFDE2B6F50F1D8890FDB8C56DD06D24DA
09F8459475E23ACC3053926BF4350D36D28E2E8B90CF14F063913C8ECE59A563
B4BE5B7CE1DED13F0047C7A6B6CB36D18E727628710490D4EAAFB5AA2AEC52E3
A4F818C8BB866CE2EB3DD88426FB22EA87B5F38C119934FFA607308A552D55DA
EA683D36E075B0EB14B7D0A10134583647E4140325114C5985EED0B4F03E7872
206B3666256A93147E40F3C563185662EEE213EC867121100E851DD736AE1E16
36174399D9E9174DD406F83537F04D83D1A6A8A3F63EEF5726CCCE0DFD72D09F
402188A610AF85E4F3CEEE61BD96095821D9B1E85677D999737BFCF9EE4DED18
41F703375E81298CB839DFA85EAEEF22C16D4CACA1B436BD38DF995BD98FCB72
08A743DD89458DF1F326D4F23606C6B8FC607D92DA9CC396208246E7CA384F31
1F23DC5A7F7DB374E0E3D066CE1B8752B52AC4336C801C993E8901D31F55B80B
AD84AA00ACF31971CEFADC7BFE832A7BF7AD6421FE060E59E1F1CAA0AA6B8572
91BCDA9B6705F0B062A78EFC65E27E50176D0106543A53CC16344BD81A194FEB
D786139375B9B40C3AA704BEA3521ABEBAC57E0BB6721F8351D54F371B90D151
24C400CDBF7319457F7523B721B2B9C0C46DE3B1C3E60150E61B8B33CC90FBD8
67BEB880FA5184131C3C7C3BB39FB24F9C16AF9C4EFEE51EF298B5F600C7ED4A
58025B1F47E53E0B124A48CB687FEC13BC7E4B2DC43A8642C108D34C4CED6F7D
BE80F25D75116BBDA4BFDD75AE81DD5C91B731F89E0191BF23AECED19F8E92B7
E7E452835781D1407E2D2E39A8E797DC888B65AA9438CDA49EF4F7070D60E3EF
038472302B58EDB8556D03EA17563FF9BCC0B4C20EADE38DD8AA492934045E4E
C16914A15A90500C579A5F61209D9A1F503788BABB313BFCE406D67A9A82BE2A
A6D7C24DC708CBAD17ABD8F881379926A57EEF268AA1B135ACE909BC9E937ADE
20F8DF8F433958888AB9F4A9241C3C3B93264B8AFF7388B5863F4AA63C5B8BFC
1812A1DFA94AB358DDA188EE1CA33CCDAFFF557EFE61648E12A39638FB42AE59
1FE504A26324D4B7A1FADD93BD3CC207D8623EB59F6B3FDF302406CEA8282C56
5D63BD51FCAA7D8BCCFC7792A18449B15628CDFFB37751AB5F9D5F7E685C44F5
AFAC1CC00F6CBB2854BB490A12B5AF108B0A14AC43ABE52799D013C781A21599
D4F9EE73C8D9AEEC0CC189BFB799A0A848A335E8D4511098631B44730E684411
7D223CC2C44D6BB14C94A3D7403567D1E213B2A0E953A41EA94ACA7729143948
55FF53317C089A5F1C9BB6D17E40E54D391DCD5D08268EAB44BA2650CBFC0CA9
B55CBB19D2F371264C2592CCDB0D90F33A44EC9D5ED3D8388399A239F1DFE977
5FBAA1495A572719400771332BF013ECA9C9F04CC93440E1A8B0ACC1DCADB778
837360339A2E1389E93AF80E182633300AB8BD06D067F53E41FBE691B35FF475
692317C3E530C6D0D45E4C2FDB684FC5A51A4AE1642416405BCCE8D41818D663
AFDC9CD1C81B93B97403F64797942F9227920CAAD43D1B48EC23887DF1D4299E
9140E054811B3EA3F5D23B9220A659E44717F03213F78B17C4CEA5EBC76C94D6
DB8098AFEEDB9891A761E94BE8FDC4516C7EE3EE4F8E17601D57F7527CFB15F2
AB44542063A45F21700DDF5F6CA1D87A1C83530D8B4ECAC4F70DC503EB508567
C7F34ACED55A535E0B2C2F99A54A66E5F8C165CD0D254DFB8F56C192F0F96AB7
9248863E364B69357920BEE4A0333AD0D3897B1A83AE9A726B166E5BCDC33EFF
FD392924E57ECB5A258A29105957306BCD751AC2AD65E979A31E979859ACBC25
317F20BC71CEE2E19700ACFF7ECBBD5285BAA56335DCACBC3C3343362B00E972
8B7CF7F5E85673E4B8C4F424D594FAEC5D2F519849EECC61B4FFA86ABF086446
AA18D71F35ABC9090E857AB029E6C75123998FC42D3E0C3F20960FEBE9744E56
631FEB5BEDACD00C64C344DC67A6461977D165292C55A687F3837424612103BD
6BE8FE2C0B3F51EA8787E2791C791A0005560EE26C52E95B71C4B9F6D3B97A8F
B4658DBB9A2217CFF1C4E355520B7A0962E50FB274AE44172D12B6548A0EF59C
6710A1C0E5BB406AC1C7DA9D42364FC91AC88F98EE11E8609E02E01CE344504C
A96C76CCF23085F7ED4D85897E1BD84820F7BAFF4534CE2A3A3F8D082AC5C1C0
427AD24E2C9976490B46BE6902BE8C5822318FF299F6967B7B4020B64FF37AE7
F9184A18D2DC9D321C43C5E17E65894994FF8ED6676E92569C3881D5E3552A08
6DCF93168397474BFC8C2081F4BD4CC5368C977D4BEBCE7AAD6ABCEB874D8071
ABD4CBEA9EEB25E3E98734A0CA4A814D824EE4CA5383C6EB8FF097104A2AC5D6
DC1A665719DAF2D483EA1B294EA5D2A7A0E242E67E22527BD17C13D14367D478
A2DDA733AE8E4EDB063A3C2559073D8ACDE59EBD4B0EA25D371BE9FDC222AC76
124A59410EF51880CA64BDC73AD1A8116CFC524A749ACFB3F74DEAF14979CA99
648AC7971810F2E1A7C89B513B7DD837A6BDFFD36847BCF1099AE95AC0B4C59E
DADC2F0A01F9BFDC190E29BA33396FC8598E50D6DB8CF74E739DE8C200F17990
D35A3680EB7E38BE239A886D5153870BDF50F61ECB986B27E37FD67F41027DF9
1189E8B80209D1347529714C5C6182FC4CD1BAB40A0DA49B4878239F35C4B188
CDE7D6D2D4E464FC6E82E113F5EC016DDF11F79234A880A99AB7E17843842B2B
7DF39F2FE50C8A915F9509A822FB278023E56BEEA38DB3F20DA14C72D396FCDF
472EA459E0D38F1B3CFA112EAD8004E62533F9F3689D9F8CA2BFF3F9D381CB38
8A15FFD90C6B82284D6A75198D3709DB41B886F9E10F6E677234B9323869724E
5B9B138BD1ECD3D5A132DCFB75BDBD2F534C1DCB2C662679D6B692A04DA68DAF
F042AFE03B807C0F94414FE18030F79C658F753E052E06897C59638EF872A3D5
FE4C5AAE4166B724651DD36643371D0BAD85651FDA02B22AF2A316937A37662E
5A9F62E131E8C073216B618126D10754D562A97C214E88DCF08F2838AC082510
7B077BAC69AA8DC1EC35AF2C3E12674A53B3A55B64C0FC1BAFDC2E4B2E4ADAC5
7AC4E808834EA5E1F77F11AACA2D0CBD42EB7B100B99333D004155898A4ED1BC
CAE4FFCDC2F3625DBCE62375D1DF3471D83495B193392BAF4B8F10C50D3B5CC7
63A1912FA4115BE17055DD21A9D1746157123FEBE6D71C653AC219CF2559CA67
13618FC46751A5689967512AC84C42DFB2D9C47204DC6235CD4A16E5CBDD2993
0856F00BAB4302BB272DF7D1D0E328563A806FB4EC884B26DCAA25E29F413C38
47ED2A3B46F254A093582A6625A0A490C4C0D6C3E0DB49068461909FD61BE5C5
87D864754B774DB9CDC2DBDEAF1B36CA8567433D2BD104B323DEF03F10A6716C
DBFCC261B3CEA036E102753EC158B65F81A1DCD465276FB4FB5DD6A6D54935ED
0E068B072C3F11CF15C402D300D2FA7A62087EAE47CF016E3B3AD1A5C090108D
4964C7FD5E57B2BA987FB40FE2F0786E979497CF2A3361B379302099EC4A4433
F9E70B0455B6097E73553EED34DF8DA712C29AE750D6326FE3972951ADB39504
1F35A5340BE770E449DB18D15A5BF828FA3BA2E3A39502476ADBAE3D9D97B7EF
424139B2226BA59807A4E5B3CC008C51C13560F141E1541383137F464150D390
E63D23EBF909C3772B458F975E3A1819CB2732460837EDC62035D7D232AD000E
DFD831045B9F840D1138FE79B813421C3D5EFAA73A37175800660510E592C567
EF82459E96DAD799DAF44C46E76BD518F69F1E56264B8E31F7850BB961E933EA
F370C4188F155593F5323C48054E47E376980E36C6F813CEFDA7ADBD1B30743D
3D6592C079BC2E97A334CE0B60E80398A5776D4CBD63C7ACC86AF62962E59FE1
366D7A20F17CDD82F81E1E2491729B34261F1D14F41C3932EEE241576C9397E0
5345B2970824C46FF71F89F1FFF83FDB4A95D61ABACA8EE7F72E2267600B7B4E
90371976C5FAE1625D62879E4B5A7F10378A9900A1285F9EEE2D27FD0B5D3310
F30B31C9BD5155E41D265FEC25E2CDAB7E3E2BD29D6E460691CBD49F4CA39C2E
3F5BEC1DDDBC2AD2B526C6CD55B427B524171AAFC6A979F5C7C882B7BF79F520
5F9E9A1EC74128D244818C7755231A47C10DE60A539D53983C4875D056EC205D
4A58A7A4BF32E83444BC237F0D53323F563E8AD27F816AE9890E61BB4F263BF9
EF4C056B20BAE69307301C2EC84B9CE07311783290A0EA08384809CF652F1E60
2E7F24A27E9544BB71AD967C4B8437470E4D020FC6E867725242D9EA57ABD941
DF37787D29BE073480DDD048F9023C4AABF2F1C45331C30D2D0F083CEAB1020D
895E1277AEDEAEBBB24B4044034791B7D7003597C4740A96A9278A6CDCD30C40
B6D35742A408FA77154EB77D6F52481697CF0D79468E29838365121EAD77DB71
CBA6FAE1532A40463A498361603F8825518160640698D86D9D81B4497B256539
3D1001A05D4C79BF703F773E575A74386DEBBD9E2BA0930855DC9A7001462030
1BB34F666244ADAC2F0A14DF1F827CF41845BE0BF8AFAE8348F559D6AD28E348
49187D767EDE855B520ADFA07DACBEC45BBF0C25F00DD94C798C8CF098F26C8A
F48B458803BB26487C1391BD9A5B51F33D505FE3ED168109F1F39AC5C3357E48
CB38906275AAE8D8CBE9ACD7740ECA4A47A985E2E16051FA4178F6557DFC8FEF
287CB787EFF59E86B4A72A199F16F2C24DD5A6AD833A4BA6F96FE67FE603F3DE
0BC536C9A2A04B73CB2E4EBCF70184C5E1D9C9E3DF6D0AB7F44E679E85180746
32F6BB0639E2AA1DBBF34708FDB8092FE9343274DA68CD751A72052D4FD983EB
8C149E081333B2F0E0A54134F91D7B4ACAE954658CFEB3FF04F3F9F42C57124B
F3FC0BA485E050DF883E4B2767E236BE219FEC94EF94D9F2096E76F1C558F408
12444C6F0F4DA995C8C03162375AEF5BBD6BC3B250625E4B5C2B2BF9879F8534
6788AB1C09D22FBC1FA443333A33FB6AFBD532EC6C4386419470DE01010A7C89
305D2FE9D5048F27E64850AF042F96BFFFD3B3903C60869AB7A48EA310B15DA4
EA154E2A1ADE60DA0AA5FD94C653A9646B595BA4880CE60BB7BE9A862223C5C6
E41197EA81A4261D796DC4A59A6A3159A5DBF34A90316A3FAC59C10C51B97168
43F33B7143D941433B11A9FEEB5D4A9ADD82759CE59391338C51207B01ED36B5
3F1E1FA003F01933ECFE85CEF7B9E5F653AD3FD76A70C5B35A2390E5D3D1B61D
F90BED14A3164DA8B2883B0B2CA52A8B48F33C57C0DB68A17EB81101971427A7
7C3819B115C4F9BD50E7401655020C16B8DBA09D43CC3D8EF78F27314624B8A1
4BE490AD28B1CC9AB2133D79D6F030D91F1C967EB39A26D909F8B129941C49A1
B9D9D18DFB3515FCECDBA9E2C5C849CC0D1B54E47D44B807D264B8FFF9E4D785
C4DBDE67048E5DA26AC7D0ABD2820C2F4E7B76F2F0D593E2F23601462693C32F
E5B20E2D3CCCEA810BDD12127EC168BD36B291302D9CF74B61013834256B83DE
E05DA5770AACA51328C628017AC93638DEA121647C09131AF151165A4DF80041
603CE71AD9F2AC7E8DB53B169D9EA6708764E0219A156C3AC00500584B571230
AE6DA6569678017AEF602FFCE688FA6D251EB0763B1FFD750A61440BDC1E3013
A7856D01915A184EF2573168158585CB5CF86C76E2B23333ABF27FE159FEFE89
CA6E88F43E2C8F05A80AD2733BC68DABD124EF2BBA9219D082CE150C382BBDFB
C93FD42447B49C723F43F3A8E113ED7AE479D15646FD42EC3E08AE30842FCF3B
0E4E69B1ADA04C0BB9228826ADF5E7524C729305DA2D0F38669F0C1927595985
3EDCB47B5C404D62BF45C7F684E59B9AA6628DE7589B9A134A9B272E29346B97
58C5A3E0A4384749A7D88A354852F4D7C0250D658C633D68B6FAFE895787CE65
A90AF97FA6F55790E477C71A2F7CAA6DF3E02D22CDDC8887EF3C4A91948FCAE0
3F3DF3E6963455CFB22972CD624CE3B6F83E59EC7A1AF42EE975797830468685
029B2529BB230C9B0BD14ED17ED6CBBFEA9961EA9580E54EF314C03FEE22C049
040C5C7CAF309D5C0AD292DE9C9C6F811F9B9885F7A063D99B451BFD666E8290
9A1D8257267655B42E119AF4464083CD0B55B8BCCACC8D0360FFEFC502D81925
A8BA85A9363FC5924585E86456B993FF4E7F3B7C9BCC3D58D6FB6BD665CA0D2C
509270C53B5EA5788F9FD8E30152DD5AF9200F8AC8B8FA39413858E8A92DC214
36E2109EBA9AF8CCD5C58B548FE6133745BDAF49AC9D875019E23C31650A25CB
EEC6B93C575C363FAD7F4EDC642E12E3AC1F8D85467B5146B72FD47EC0C3BF53
0DAB4D120472AC822B3514D3C73DBF1486A8CBBAE0A9B811A0A78C455C560DD5
2D1C26B596C4BF214AEE07569DDBC3C288FD2689A4650B964238A8E854B65861
CE7FA9CF83E9683ECD6C6AABB289BC700B5EF5835B8480FA11C44612F4D39B6D
5FC5E14BDBEBAB995DF855C0876045D7FE5C6BC5A0678FB65430FAD099A573D3
8449690CC9B305D9C4587AC495570DF9C4F05525921AFF53DBAC2F44DC287DAE
5C2DBBCA73CAF31025A3FD47B8B313EC704B627AC2C11EF6DA56C96259C9C0F1
9EFB0035346F51CF938729214C68FFEFCAC997EC286F30AD0245F5BC7AC41CC2
B831FAC8B35A70EB34886F37C2D18213DA6AEDAB815137395B44EFCEFA299D8E
D3336348ECC3B286852DCDC7E2DD3206F64E3C71F4704A0B43013773E95E236F
25C7EB68DE604375D3D9AB22AF9B88E1494C240BD3320480F771183B302FF556
67390AF2E314BC8E0FA66201D68AD8E42921EA6EC4EF25A13D8A05734B00F2A4
922079FF1E8C00E7541B2DB7C9E5641428336BB88D57CA52AE79C0C7596E6199
7B1C1F3C19B4A0FD93542405DAAE9AE9D984422D428200823D674B1893F03384
88B8AB614BB9A9DD0AF18A2C283506A62524C3113CEF98F89E4E5D783537D2B5
7CEFE23ABACEC756F5D1EA5DA25AE6F6B9BD413D4CC15B85509750AF485DE8DC
E8D6F55D7ECA4C0234D36FF51BACC428CC989ADD61913D31D01A1C3A8A01E1FA
253D089243715F21EB9601217D77EB1166B4F50EE635A4C8F7A3B6866F93CA64
1F3F2CC93BB0B4B7F7435B508C0FB63B6F6E5679D2432045BCBDFE938B0919E9
E6D97837356B4B1F29D4B0F67C8A86432A7D16F9CDF82A54C3EE8257A7A35A79
626604E7D472D157227534D40D1E2F1976A39C4D85EFBE689724B632441BDAD6
1926474C6ACA7EDE43667FCC74ED0D3BE8A237C57D96EA5A5FC8E3F4093B2925
D99FAD2654A976F06E71BCF562095F81BF4684EE4D0ACDE9CCEFF38357C8ECE8
15E2CDEE9BEE0507016F7651418558D452E731374B2B403D498E7A10BC294031
B4EDFCA3EF758FE70625209C913DBB1D259FE3EA7584E7C1B3D19AC0B4F8781E
38F00E19C2F050BA73D021C39EA26F677C972818BF8C85C92AB85A99B0DEAB86
EF8680ACD46A04FBD48EAC90FDFA9C276CC51C86FEBB15424B17BAACFAD06CDD
33783266A7E3D42177830C3B5B440DA51D295CCDAB8AAC408D9A1B1B470A6263
805542515AA19B5E0E9FA83A47EBD7339E5B5CA2F739C797029BAA9D1FD7EE94
05CB29E40E5F563A4B14DBD67299AE5B408F7C31A53640E45FADCC9AED733F52
A53D468179AC6BA242538EC564F080D8F3822BC39ED7DAFE7AA2AAF8B31211F9
F84B7C1C08FAE4360B71CFA9672BDF5356746638CDD9FD68E308DDAD14225171
6F96B850D6FF61144F6A9E51CC1B8A86A350807C52553FFA5866AA125B236648
3963E4DEF11001EEC6930CC729A9B845FA4DB9CDCACCD1804B9444C284E42D9B
55A6860F927EAA1BC80BC534E9DFE3D3E2FB855CAF128CA197C0C36D4D35AF4F
7F0875D4A77395A3D686200E0F90767A6AF4C4E67B407B215422A6F409D59C30
964F3BC974B43AC1FA919F23A2F2CF7A16BA18DF3377ABCBB767211584805688
C232D2B236F56713C8459A2E1184B9CB6494575BE7C27F44B99EBB6713BB8306
E5B5A64940ABD01D6955B0F8DDAC8BE19EBB36D94E529FA605325B7540E1F13D
801C5535585729C06A53A8E6819D45D30C952C8F3DE9FE43B77F8D7ECD9644E4
E71960139240BA6A561046451DE4BC24A07DF636EEE26184D68D5D1B3387D89B
A1939D7E997D0D0045D200A4B5D7338A9E15423EA63C44B727AF545A3BED91B8
BB33418E2837B1C33C57153F687ADDBEBECDCE5D5144613798CBF687F6E26E1F
A87B9A81A3249FCD0540EDBD9496769CD6DF30E83C54188D11AF8339662D164E
F37BF8635D5E0A836CD5501D232D35EC5F35D5AD07347B69DBC55E6DD283F1DF
013D25AAFBDD441F7139AEBC595F5E82AA5C049129D443B80455AF129EA1A66E
87168EBF926C2A91C52813319AD62843999D71C5599F89C29824458186DF6558
A571A168E21535FA1B41FCC74614129FECD357C3BE8A0184044539B0B98F7001
609622A6FEC4DF544A81A302E99E72FAF66CF529D8F9233B2279D201F6E6DC03
8F5026D8B1DED75739A29DDAD519705EC0C3A425F84078E97E45B13DE201E971
AF222C24758A9D002CA04DDD891FF8F68DC30DA60205116AB7833FC159283054
AA61D40A0CBC0C7F55A5CB694336732534694A184539909D5294C011F6DEAB86
E06EACF7F5DA3BC32030E4E23C5E0E7E82C14E482049435B525F265179BE321E
5CB431C0BB2A9C74164177E51D621C2E0B050FDEB852D3A6F1748B19BA93BE7F
4D3D2A68B2366102ABAD3D8ABE1CFB0A9DE45C819726A4FC31C9828CF2AC80B7
3CE2768B06545FE265D8796B869F6C929ADFFC2F1C50DEA895512A4C1F23D365
4894896CAB73A2F2ACED52AF9D066794BEAF0EB7F7CA01099D7E9417A4303042
44193B8B5CE6EE63CED9F89397361A53953D75312631D6F07794B1D853251462
B4D6D3CACF4A77D3C395367C6D3242A71CDD4F4AF7C959D59B85C046EB10EF48
6F5D8CDA247F21D30CA3A26EB408404AA91EBD84A394F47883D04366386D9294
5935D89721D6087973C557588532474D9E9B852BFF97CA0E3699EC6CCBF43EE9
C02CB6F255587300FD433C3B4D9FF6D7E6155E70BCF5C758071838AF50C44016
FE62E8E2409117A971CDE9629C0B16424CF3609285DAEB0115E4AF0CBD6033CA
32952BD67B6EF0BDA8CE6C8BDDB68BEA3F005EA38B527FF8D8EE2BE0E4646AF3
13E90021B03E9EA55F51C97073905D5F48F6F789FF4E73AD9F901D26B2549681
BFEB0FE849E292D6FA3E7B6584779D8BB079760984BEA49E3CA936874EAA3662
DC4A2057235CEF0B98B1D489459F860F97BA62BABCE86CF3127088FE3ADCC340
E3E8149222A29A3A4117DDEEF5925608991F068276A0F01F8F2DA6B617473941
A1ED19DF2F6C55C067882743EAF52AC5C3627A231EDAB2CE032DEC53C70B6F33
34CA5BE3B470A5800B4FEDC4A99823CAFF87E567B965741B20EFAEEBE5F14FF0
89AC9771948B6A6CA310BEC377BC5BD9666700C095207E57106950D839087BE2
8F05EFF5FF3DDBCE4060684BF01E1B6243EB49BC46825B83A561098FE27425D2
AE291D57D931114C65F4BE3FBD5396A4C0F15860AFD1DAC1D9EDEBA1A64811CF
F78285B947BACCB3075EDD207C35BC17DA8E255C9216E000486D0D4B5736F0ED
CC75AF25592EB7E7829E4EFAE3C6BAD0D0FB82DF5535F92D8DA29782A1875C6C
8E74B0C86C0D388CF35B5A21FB57B445CC3B9E9DB8993E4F73FF91CFE29D5D11
D4A151152979A546051AF86E03D22C944CF66D4866679A412BBBC86A1FE55F53
69B12A05851331961B2E762F8520AB299EAB77CC0EB53BDCF9FC767A18B14D4B
4106408FB0AA8EB4827123538FEDB696ACC0379E615A4D13584225045A6DCBDC
95357C0DBA3F35EFB019F86F9C260F525B340DC1C81FED5A23A13FBD66C14903
212C33F14DBBD172CCE6CD2B6095B0157B9B295F244E6193A754360FDA3DC799
FD07482666F47C17D8A5BAD6E21289214494EEF9B605BC284EE34062E3B392D2
CD3154DE412B6682C3FF51D628BE1DBBD89A7AAB946AF7132EF12FFD61F346CA
D55B0BEF461C749ACD6B2E995F9301A2D58A026EFA8516683FA3A30649486C00
2BFB9868AAC00675319DD0C6220DF64B6153B1AB46DA2C41B5D25F30F5100385
2B5883FD2CC9F33C5535522E2BE0AA2CBB4D835DAFA62094DDF19E30DAE8C456
02051A73839EA4169EDC6A984C0E944711C77542A66680C9339C7F2D5F398863
50B352014576858A26DF969402AB30E0F9C56BFA26E66C5852C838BC3BDB4D66
9E857C7280605EDB28F7580F633FA842B9DF64946EA241FAF1EDF50092203DF3
91D7BE7B3FAF26B96747A8E7DC923BA8EF6C979285192296487B40E1D4297E22
905E096C47A26F4DF59753254BDFC17BD9B7A268F55CD5423525A001FB54EDD9
5705AFCC265C01B8B693840EF15076D542F1B785673805584DDEB0759E96D578
4D36A997284B6844AD72A716B636EAFACC763141BB17A96BCFC81274142D452C
210D2E21B4A29F76C95C2F8D3C3EF4C1190B633B9866031EEE59152E1AE5A5B5
EC87675B021FE9D71441E352111EB41F8598D0BEA2FCD4557D0D226934EECFDD
C7D0B0B71B55EBB86502516ABBA71A3837CE8DEC9CF5422C7025D1B1B6A0427A
15A585A40D5265A4CB711011332AAE28B73F532D192FA4ABF53BD1A28704B849
39C7E339BA3F41FD618C0860BE1C2EFE74B9CDF43C0E475579A4C94BE107E1D2
23D4E55C35805B79260E90985DA5E5B2F43DE15867E8CEA1EF8D26E4FCB55C69
418D7A4DCEF51473A6EE573872539DB46C17F1DB0C4292D035FE3A7CC3A47698
A16A6AEFE5210979A18FAA96F35412E6FCF4F9AC6C13F8766596D923DE6A4819
F3DDB1411C376787DCCC443D250EFF9E8D6EBF66746CDACEED55FF7A4E26CD6C
CCB5CA09AC2835EF3FAF19B53E44F7EEB34100518711558C11495E7F26989BF6
328610AED78D0AC8A6526EA1459A6290C26944439B59CDD0C32A0411F64D4486
41380DA7B565BE0416FE1EE4BDA71618D70740BBB31824F933519552EDE5612A
B895CEE0901707F717AB92EBE58A40DF877208ECFD4FEB93F67D4250619BFDDA
4FE45BA45B48C1C90D143C5F6FAD3E4A3F80C2FC2B6A1EA45B1E466EAE18CE6D
D3662306521C620472E803A4E69106EC596B65DE168AA57C32E41FCF507E742C
E254F19EC5974DD55F2CF182099C4AAD383FC67EA4612F4F154D279844799CFD
B2F7C0EFA1E5377DEF19C99195A6646B1336F0B435511AC6077F046C5DC0D040
0E1D29B35CA24FEA1D9EFF92CE5721CBA24721E4DF7EF63891D98E4EA24E48C0
51A1BF427D1B34CD1E4536CEDA1113783F70F630B14B3274ECAB561760E687C3
BF7B72600494F60D3490D9DCBF94F4426E5D273581A6D2844444D82093FB0348
2D81C66BA91937FA1C7D5A6E4647A70CB32D9A9EA279662BBC85D89C0E713F55
6814E051C6CEFE7E83C2F379BDF2B420D21DBE1EB344E7ECCD28B98FBB721C20
95CA9E6C470F322E752B75D29D4A5C6F7445C5A0556A316E33A65642F9FD69A9
27D3CAB630A9A2D3227FF0ADAE13A58B2BE27F7FECB251C07A0CBF632410D7D9
48427FF67F8230B247CD9CBB403670A11457E550B1E5EB5E4E06868A692D1037
2015A8CDA28AEDDE6E02E37ABF96D6709E4E87046CBD032205EA85DDD9A97250
3511D86A08E1612DC43A35978D6AC89C5D7D115D20015326BBB45A5A12F93BE7
FCC667A5B810B665519E7E1450E00BB9D0279908E9435515BF52FD453207213F
3E13FC83A36F2D86CD55AE90566F76305CD31DDAB1E54FFF4D1777ABF5636C62
F91467A7217C1C887F89586F84CE132D460067CEF0F8FD6A28091D0C6088D01C
99BB01C54605A556A601887D5668FFE584012272E231983CB5E976DBDB2D13A7
FACF5B51641DEE00FF8F167815566347A097F48184A0C788BCB663D03AB33653
4CE24C80F654A39D2C5D50CA531399E2B4714126024DD013CCE6E2B4DDF83466
480BB9CA1557E26816643192F6AB4C4265A5C2599F55E134AB7B391B2E2A253A
D125B82674AF983FC223A55FBF610E578F7D36058B06F3AABB121CA1540BA17F
0A43DF8A4F8C6B3BD94BB607BAB73B0B10D6049C11BCB7A16C178EA5D5043C7A
287733031776912B98D449008C02ADD520A8D6BDED06C1CB188FA1FDDDACA9B8
69567B7E0DACCE40DF1214A2D9E14CF4FEEF1DF3BEEDDBA0B678076B40FF0732
97414ECD1FEF73532047FB1478F8554CC72457D4405831517FF93411F08B5F5A
17C1E554F67E8941A76EE187E8B93EABBD24983CAA7C21FD1E44B7C3DB349390
3B8F262D3B5D3B93ADDCB366B3F06E7E7F6D9B01FC36D2C3AA3F46E30A2EE663
C2CC64E2DA3631AB809AE25D720045CCE64066306B98AED8E8A2C89898F7DFE1
20A975CD88A995C71A69F35BD0CA4542824B1F4329D0528F08CC919FB1211D04
CCAF2BBC827A2CA8FC1D6F293F9F9E7422C2C2489D209D78E0A2FD3FA71C28ED
FC157A6DAE99C2D6657E242BEBBC0D9C6CCDB639869DB9B6470007FEE14336FC
9DA7B204022166F1C1DC489D5F23473D85F91027838110F8FF6DD6820A929BE4
0D89789D4B6590CD1BB0F246FCF1A109CCD37C2993F63B6A23D412C0F0B26251
A1FA52F08BAE1D64B9FC32A684AE896F3C1B2039A8D5F5B248E0162152E10311
F769908CB2C184E8F25E2458B4AF11A7366C4FAB27ADC304A99639761F8AC28D
03EE6A6F5DD566CD2A6228577299FAF90989AB45ACA1AE22778230E2D5EB6497
E5FFC3F42F921D984F2EC213AF4DF00F86FCCA06B7DE925085317CCF8666F7D0
49A68C4F8F52F0A87021F773E844F7E60E12E4EFF10A7F8846E38E374DE01977
C142E0ED10318333382EA7E43ED46E2F5AA2BC7C534357A65C25929B54898BA9
B77ADBECDD79FBCC7A4425EDDAA7F49257148F05FF52F887D9E81B0A41EBD0CC
6D71A2E4B5528296D8827B8E9F5B52589A52D66CD401D3BE7B698CB264399D90
1F1DF4D93C994772816DF9B504269E3B619082247D5EB409EF1F3F2BB093FED8
AF1342C465247B7B603CFF4F4EA2A435358DD7902FC0E967F6DECA7277FCA73E
841737D9AA46C8ECC16CEAA06FED505EC60F7460026CB41957431FF39E8719D1
73F4FBA16DEE1DF371A889E06E4F7ADDAA1683857A01BAA2C5C2C79D8578DF1E
5081EFB6EBBD89C54174336231E9136F61962383C65150264A443188423A5BA2
90029A43D2C713E325980C175D8C20994382EEE81767C48C39B007A51A697A4D
8A360D401719C5FDD035193630EF10C079981B1AB12F9D212615B7D1235C3BE1
7350B4AA21AC42B13A3B38664AFC53F5576EDAEB55639A52B0F2EE315A2ED05A
5189E0C5A31E35448577FAD65000E3730E533349E8F1489D91F013E82CFB4AAC
7719787C2A0FD5B8AD117442D802DF2E90371189C82C75ADB19B8F7986D1FAB1
30F2F1223A418F7E4305EA93BAB382BE551F956EABE86D2B4607112C42403079
AA14C3C7D93A027E0B8E70A601C127E6A6B6C0BAD35B773E02E482F79B3D27DF
2C15EB4AE7328764FA12F97E35C81C44C78DE729C22623B8B7AE9B12E3819E92
AEAA9F128B18E3A3F0E6CF2E96D5F1983944FA511E9C698911C0C0174D9710DB
F62B89E5C419AF7FBC6590D6281B114C8B8C26A2AAC6544C006D19740298DBB1
EB1FD9E609F81FDA316992058FC36C23CC8E7F505F0AC9317680A50F412884F0
B424AA60711B28D31C755C6C03BEDD7679646020B6B0365C6F1C69AA30A23658
3567EF7E3BD1106C5BB506DB994C5F5824813B878784571BD807C450C963C276
80C27310CD065D11C45046EC33B07469F871F47071A5D5E737B0583EF1AD0174
55210C8B14FE526229CF9CC4C22A42A4E9F9365D91CEFA249A039485BFA3183A
29ACBFE0C0E5F2D242B83CCC05D2B4BC05B37305EC4BCD95990ABF2E14210890
DEA4EC2B1364DC3AAFE9A8D253B055B6F1530D4C0E5E38467F77261BED14BB65
7335E73B505C78E45959BD7D3CCAE985C38FE4B7C097046A55776CD7B8BC2CEC
5FBD89CD5923B39084F5F5BB2B97C4CC6C95FFA157D26C7B0821BABD3C5AC8EA
0E588D33D1DE8DCD3C807A29DEACFA8107F864DA54E966773B499500AA173329
8BB285AD011A4248A165613D075FC5AC38C955D3C281CABE7BD4241CB4AF9E7D
BE74C7DAB52EF2E3DC5AC84EC658B95979BD72B7D5F06053643B0EBEEA272FC9
3296FF26C5E19FFF0DF9E2E43264A353C3C6AAE69F735111454DC5B3D7BDE641
77D18907706E2EC4109E8FCBF8D1BD96CD04972281DF8466450C56E73D1DF1A5
1672434867A8EEF136C02E5FC6659D9B34C3539349E3AD8C27A2A9D0B6C8033A
ACBCBF0029B8C7842404AEC20DE7719BF2A4AA4B0533ED035D6E3154953C2125
E14ED97778F2DE90335F414D78ED9B926E4CE70179D6E1EB737BA4E4FCC45896
D3FF57E947302818E3C1265E4220CF40106367E33CA6B9B0D41ED6AB55896E5C
48063CA21CFE8C6ED7DC2F9C1E06C5CC27274E1F10DDF9968E2970D991AFD093
5E8752BACFDDBDBD1CA772A7E629C57886E6CB1583C44950ACA6A750662B898F
6532569B6CACC50E3A48F40D2D8392CB58F1357B29DD0448D11408D702F1820C
7BA5DE4094005193B4342E5DEDC5B1A2A8C655519941BE69B3A228205B0F27FB
F622F41F8D24E5F8724F9FB343A5932597E9543C3B39D4B6F6349453E5ABB9FF
64B055C3177BFF557CF72455B7625CCFE31C7A1F0EBE472F168EA0286569D768
BC6AAF292D74AD8130BFC2658F9DB8CB612AC543B4A5512727DC011460913E0D
299610C1B6ACFBD39955BA1657BFB86EC8A8FA9D2EDEF808636CE394898642FF
E0B0330D747E4E19758FF051630E99585D24C91627F49E83271B7498CBD67ABD
E015CB2C4B6EF12DF26E116198F86D5F3AA5601708FC9D021A2A3D8FF08EDC1D
254AA9E355048C87857CF229376A7330A01EA53D617553D5C57CB1722553E997
ABE85A3386876C1B1FD07D0C0289A1BAA29D44E06ADA406B5796EFF88385FA6E
A055ADFCA81B08A8D005011D16EB3EFE2EDE65011D003A3D796C9E031BD71A26
856C726FEDDFCFE5B6E52BAE4A52659D5C1DDF799E24B9B95964996E7738A532
5E683C011047AC22877DA827C1473C1B28D7CBE6BBF16AAAD6528A92D12A1BC5
63EB44F689E2BF953730FAE01911DA542E1CB8C3EE8569817F00EACC5F0A844F
8B263CC5ECCA686818060AD02A38890882836514F593D9BC57C39F0E777BE87C
953965460BC44694D27E18F28D9D59051FD85BBC6789FC44AAFA6D3AE571FB07
50BB36D12726A318A0F0B8118C26DC90A6170A08F68AD5F924CA8B35196A0C17
0C5016A0260888C8EA6B4AF18978AF1707F189389E6B85C4396797E362836A8B
56466E9DF60D71C2F82B6FC9E762657E8A4AD339BA55BB19D357DB388DBA1D25
C9DB2FDCA3BD231DC134763B8CE18FAFA33CD3D8F28B38AE222BA56673DEAC2D
FDA9F9A9635ECCE31B6CD3542AA43722748EBAD8C81EE73B03FB45FB27701FD7
C3CF1E5DC7C05F1C8877B6246750E57C8B3C1A23432811954A21977992FFCD30
F1D33330B151C5BA7CA009F27DFD7BB38B6AAF0D464E6A2F905C553DA080A42D
688763EBDBAC71788DAF6CF106DFF90F450E7B24F16BD441F2FDFDD1B4174B45
501FFB0478D14C301A3B8429B3DDBB1CECE415FD51353AA3CDF6F1605BF29783
3CEB1FF3C98550BCDC5427F0D3CCD9AA1189F6A2A8800991CB9D8204F0C5D2E9
6F447E8CD23B3F1329E1F01A6087195B37D993CCC2992E4434D1B356BD56EDF5
FA06536231A59CB8548D2DDD50B72F99FD64C63AD02717F0B582E737091B05A3
BAA49FCAE6E32DC9D1AED22C2EAAB7636B8A12ECA7752E0477CC7F945AA8CA30
ECC8B0139151A2C09112706B19396BFBA6BCAAF617825376C9716B6CAC7F723D
7F0CB707ABCCB23D597FE93D3F846475BF62B45A2972D906C53B7C1E0B5F7006
777AD11B35632F6C54773FF3E432D45103C75A2A0537B9FCB7B78BD85CA99B49
ACFC71131694C405F36C8F710B467AB3742BB9AD33D56B118DFCC4F09721BD57
C38734D3DB8B53825B6489DF0A09242519D5D2FA30D939C1B685275504105915
2DF3F9D6BDE77DD5870ADEC8900D6346957B84CEFAEF9C366993193033D9926E
A4B86477CFEFB8533662A1317E068C1AC1D3103066F6DE7720004588251B42A7
C1789DB6A7774F959C5D8057B25A3313E080DFD69AD1398309849B29450280A8
DAFD32389C576D13D8F4D6292DA5B55401B1B83B60463BB10E367494EA80EAFA
1DB401B3162B5CB94065F9F70134684E400B446FC4990EAC80902FDD76D9C777
4B62431DDD06A5994EA2F4130131F12047829A0BD0C1FF5929CDFC0636E15604
09FD893C6DF3CF208C7CA7B20F2994D7F6A166F0A2E988FC20F16EB782F9BF10
9726F7FBB86C169F1FE7A3D115E94D83126336DCB8867A795FA1E9B999A926B3
C76160D8DA7321E6D222C9572BDC4DC96A03F8030FC501B4758F1C0CDF3A5FBB
4A0CDD161BE9750C83DA625EF5CC0FC9F75FB7A90677C02630C6B4D7904A3989
3EAC86362504A872500F5A72E99FD49D0BF7AD01FBB205E243C953608656A6EA
9191FB546BB3433C2DF4A53DDDBCAE30B6296B964C56A1BBD2139CB6629CDC94
B5C6DAA74681BE30C4E671CD96973F8D37C19E11F78D8401BCD1AC9DD88DA85E
2BEFCEF4CFD74F365925C41E731121C2541984B98D3CBDE7CB0B654E730B78F5
4976068AEDF0FFEB7DD80B2AF0AD023ECB8F8B6686EB6A4ACF3575A4130B81E9
7C2A9BC215A2E2A34BEB5AC50441984DB26FD7837618BCE16AA4C235EDB1DCC2
D867F0394260095CB0228A39EAE9DB373AB2165E4550B85B02278E625850CD18
B3174AC4E4B00BA693AB9974D37479F0C2FF85F88B0CC9508AFA4B6C0252CFBD
56AF94BDD4483B96AD2955DD8B1A35CF423DD8F3BECD441A5E7B07AD5C1D6686
6465AD9DFD2D25D7026D8483CADDD8976020D5E788AACACF1B28C8C2396D5C8C
E61D98B0DF3F958D0132923ACE057116BF388C8C0FE4267213204FF4C360FA2A
C17072EA6C9F52E42816C85AF34C21215E706B5BB75F60ADD7C8BCCD30CF4503
A25C97F1D066C4FE0B26E710DB3D3C578C86CDBBDC0A2BE5F6D17EDD30DCA07D
A1E588A8C8499A8917CAB23F00BC124FD93096D5F0DD38F8639201D8955E11C5
3CA69AFD141242589D03EC88C2FA9A72C364D0FC44D1556A57DDA0E73A6DE96E
49039F22434ECCF66634DE56E73349B1EF64A98457F36B73E535607DB32A0017
79973DEAB1CFF05FE0BED47958AE32238BE4D2DBFC52FB6837D0AF6FFC27B43A
9CF9097944AF5DC34C546E5E430CBB82782A160E0C10C9308A7E8E533A2C71F4
69930F2967664F0D17A94A65D60A994D261F70D0F14165FDEF1C160A16A35865
B057F759947E88E67E7AC8E934D993EFAFC5D3C280C6065CC8ED42792E71E4B4
F1A2AD2F2CBBD1A04CAD375F74F86A859508D8EC38910D05E5AAB0AC7F4AB9CE
3BAE1E96309F7116E93D48189AAFAD5289F9B5E659E88FFA971BF1AF80FFC24D
D5A6AD833A4BA6F96FE67FE603F3DE0BC532F14590CAE05FB023A6E44AEC660E
02AD5C0E438F96404FD7968A21235C8DFBB74DAC70A7CEDA2DED1E0A30EDE962
2F3C22A1B53C2AFD10D395E36081D1ED265E96E0FAB4A3F72A50F8C443BB34DE
842F3EBDE357648BB47AEDF9A478142AC751441CDAB0F96FFBFF9461ADD96443
E0EC152087A89E5F2534B32D3AAC58C2BC29E4E3E881263A3500C656827B3B49
A5F4F7357F9C88B45034BDCF610CCD8AE0F36B68AA8C5FD2E0E871DBD2628AEC
086D312B341622FF8A2E7844FB047452524DE681D9A7E3CAD76ADC7DB84DEB6D
A73092F21F04F718009DBA58BF41A259AA2C6DD59F4CB5511FBAE3C48B1B02C9
87984999753952C076E13A8D1AAFF5A9FBFB8AD210C285C6EF4C5A73ACA804CD
809616BE4342A5047C07E76889E53BCF1F11F055223B29AA0AC2EA497E7C94C1
D7BEE1AF116EA48F72DF46095F63990A29877ED1DB307A71C06148C1532659CB
14E22749372883A262140C4E6714F5D76BB3EBB29EF330A07650344DAF45A481
6FFF15F540DAF3BC8E0D1D853369B8ADE0B18E8DFDE785893B5EFD6019A204D5
6C6B6F759FDB452EFA0029231EE1E3133136F8B9E38079AC392046EAAAE81E15
5E2002BAE8B740656A007238D5102E8DB6FFC8039417A0D61750E1EE624DDF05
CF5C6200671FF0A54D301FD690A4644B1B7131A6F791AFBB0B9345DAC334501E
A44EBA4529207463D3E93304DFA100D3070A0CCE970653875954E3E747A5E47E
0FD051DFAFFFC0A69B14BBD009A0C0F023D4D6706CCC0547E72E4D4D5A6E66BA
E16BA7764D8D8582DFD200384EC13BA67B2E52F2B9E896549C8050F55E35B4AE
9BFCD93E73D556CA233093AAFA54FFA50A3C775B46790D67CC095767133E1B49
8BD7FF2FD14AAB2ACA0DFFAF62D9DF37AEBAC4C63057D7B7DE7FF432BBC34345
C13693EC4D962AE125016EC2FCBD09F82ECF0796933170EF1AE2684BEA7EA8CD
5379606456C278156A637F56CEDBED2B1B467439CBDAAE0EC8A9AFA8F017285E
26A452F417D271C6A11598F0BA5A856038C66F720952543DC7BD168459A2E72B
1674DD4546756FF8D79D108816E9072BCDD886F145DEB0759E96D5784D36A997
284B6844AD72A716B4520719737DDBB167F06DC088C78888EEBB74C92AC1A4F6
0375325331FA1EB4009CFF19FB5E44A47072D26967711C02AEB1DBF258621405
F4150E2D38DD80F3D20221834853EBB08AE39BC8B715A541515BA68D3264DF63
3E553B44BF7C85D411526108BE7B72351E48E30F6EDA6EBF84D6FB660D65C6BB
E76370F0389AB1DC905D2BEB7D894A79EE9FF01BB0A1B8C24DB58F7FAAF67B92
282C5C36B4857710432575088796B70BD3A63507E8E5BED7D90C5AE3B4BDE678
D0712508C2D49378842275701D9CB5625AE70867A9C17AB3E3DCACFF68183009
E938354A0BBBC3C090B33F185DC6A9CA2EF3D53B18AABDC8BCF46DBD517F2029
FE2439769D67DEBDC8AD8C861E90E5322E47474CE681C93A77466C064827E8CC
A4DAF7D623EAB780ED6A433BA72FDD1F106A1DCA830D55B2C51F74EF757545CE
DFB38717C0D90AB406A2F62CD9027E5A7B4D1677387A4D01199AFC3C88B0E2AB
5FE014A84377451082FA441FC3204748B39BBE76D32933BFB3185C3972FFB693
EC1ADB8628B9430467A2B760BE974AEB670A7EF50605368FF110BB19E18B570D
C8E76669D1D95412A61ECC2735B13210067E9C64F38B40C795864961669C3B1C
C78EEB57882F78857C87E574E30710BA9731D8F27AE69A64A58A4127CA7332E5
039A2A7E32F2389255B0491052BD8D78E8A4F454633B52B445FEA99105FB0699
4859518A629793C85487C0571E75403D111C5EFE83AB5351D2B15EEABEDA778F
7B38E900A0C764E942530CC560BDDC236A2F8D5707F95831BF9C8B8A7E4BFE41
314FA52F040B02BA7E5A89408B4B0278013E81BF48B8D0FC7705BF95C71E80F9
2528EBB5E1D86F18AF20AAB3741FA0DCF025C39BA8A34F1E77B2FC8CF73D877D
1A660D5056FFD18F89560A2465A0565E91E89D1335338DDC277E410106A08C91
01671F4637AE61246DF5E024406C0132D29632965E6A9FB777EEB850C7481B4A
353EB9279731512C9C4977756A5A66EF30FB955E04347E34C0950E250511BCD9
789E307933FDFB4E9E1B6DEFF59372DCC9947F32A79D7289BAAD70364C33665F
90E24D35581DA77D776D1B5E1463B35717DFE874692145232E89FC52487BD40E
CDEAF495ABAD9978D951090105823AC61EE692C31077A888DA24451396E267DA
4FEF83F58B46A22BC54F9D7BA69B28EA222FCCDA3CD2A9C193BC563E5B01C3DA
1CFC8686F231881D85C822D90730ABBDDC0F2CF53AC189CA3486EFC2B1F1F3CE
C338951D7225A3C56702C50A9C7BE8F6B2D87540C78E629FAB784FD7902E120A
854649A9140A3B161547914512C2BE377C5CF6EE12260C020BAC20520358D1A3
845B169ED30F20910B97CD7498CBD67ABDE015C894BAF317360AAAFB7C198CD8
DBE03A3CE7728D8819BD92E6D6B738525FEF89E5722C14B7DED7E9AAE85B0FDA
ABF3DC2CEA9691547D4E09D991240353279EEA6062F40AA0A5930535277050AE
35FDD9142B447900FDB1DA0408B9B357EBAB1A189F424831F6578541FB21A36E
4C6B81A48E045FAB03CDAA01086862BCEF11AF66D26B9A0EC8B24486E7038C3C
3492C914860E06521EC9E80568141FED581FEDED9A2A1841400CBA00202C1803
739A8B96168A902F9850B1E071372B6BCF391E58BF827DCBDC8D3552FAFEE3CC
C1C812E9FAC331FD70975E3A0C72D374EA1C7283CACA75B3E1991251AF9DDBCE
C84F40FBD93EA5EDB59A570932E1456B87390CEFA94CC862DD34E1A5EB26F4F1
C298D34F3811D5DDA7F33DC6E913E04ED6654B3E75616D118C53B8834047CAC3
2A61BBE94CAC3E83712CEE4ABA3633A9BB597D6161CBB2BEDFDF7850C36EFD80
635C555B6473652776F685FEDEF296CE31772978C232A76C2B1F015C7400C5AC
4CE9C669856108F8E198DEB599AFD5FBF1E5DCF14BB07A558DD211A5BBED1313
D9A555292CA8BE2FF6BA35919ED1905AB63D933A501A7D4829F8BA7E405259E6
81AF12CAE9CE1679120CC4D0A851D0260C1157555524CED262025524283F4864
FC0D43C252DA11E15D135E7C5993472E8E1B01705929B12A1FE8F431B62C19D3
A6401941DEA15094F4380B740727E2C059CE994AD4BD0065D122E44FFE52EEFF
539E3EF6FE0861324819BD29B657D61E2BA950218A3AAEA34717506A1EB7A024
989A6D910914C0224A700E1245ADAD0EEC6C924AC2337BEB55ADB1106E0FF486
3C43F7B4CC4E411E4AB3FCE54B2EC4E0F6D4EBCE888A5ACBE4C407CC3A3D84CF
6EB91BD761D60494E147C7D1FE0770F1CBC5908950CF1F984E972E628C1884D4
C6CB1879CF83861E20F5E034E2160F15F3A79225FB98E5732484C6FC1C6AB916
350E6C724CD682DC94D4A705033B67E3AEF408650C944FE043312773834D2D1F
04E5A80489DBFA423356BBEDEEF5391001A05D4C79BF7053B491970137286B97
14F17338EFCCA9CCD3FEADA6AA5065B39264D0905BD24925C8573F0CB15855AD
42F3498EACF1BEF09BB4C2F62A61BB5B2AE508AA8F06DCC288F0FE1CA765C93B
BB6B7085F338C8C65BE17C875B7531CD1BC116AC4F21FDF43764C2E9BE5245FE
A58CAEBE7C450BBA192F680BDF496A8D3BC5C595720748064D77BF335721FFFB
55A4D879BB5CBE06D1B4109F39235E00862E70D7E93430EFEEF4CA1441C631EA
EA573E84A9B36906B7EE0A734C90647664B563B827AE2CE32241CA1AE9D54F1E
3710F18FFA2F912FD822B4967160AC31A8ED3AF8897BD16EBA220B626CAB57FF
D0AE5B17FB9397AC08625C202E9BB2A81577A0BA6A227ACA000D210E28960E4B
2A4750F99F46AD331AC05EF80EC5D9BF8C5871C78DAAED58E7D84095FA260EA1
3D49E70EF2CB3938D4F6120313BE0789A496A7ED316DD9911FC260C042EA679F
78F37398401D0670B1F871F98366F1CE05C72AACDAAF2CF94A6DFE0713DB9B8C
BDC0D146C3FE006B6DF07609B047450F38572C60BB4C4565531421F7EA00675B
A045A8D89AC58B77200A09C675E45379518D08232A65591D0EF3D501D9F1A88D
8BB0EDE87EF9DC29B264F4B77C153EF24C817D33A96AD5D4759E5B655E25DAE2
DC59CFCF6E7C9CB506508BA61B65AB48E09033F98FD64969BE4101DFDDA522FC
2A22773A5148DF78B658E9D886D93F3F45630436BCC3F8ADD162DEA2677D403D
D789F9D80B15A0764CB951D16524B621E0A4FA9D60036ED9CF3306707631F5C6
139DE66EA86054E2297F50D3A071890B36BD310D1A184C084913958D22575E85
FC2C8849A89DE2733B985650ED4AF7BA55E5268D7DC5005AA5C4DBC2B2F72F6D
19FA0C4EFE4E73FE9669F35AADDE7EFBE88804F4BCBB80DAEF44BD3C3C36FABC
9898C6264C174FD165CE4103019F38D5451344CF5637BBAE7F5DC6C6ADF1A8AB
F2C8E1C883EDCE8BA8A0360B28CF7C97E4581EBA032C3EFB399326E705DC06FF
7AA54AD78964644E60F47D9F89D1C1D46AF5304326F7002E83160C862FA2EA4B
D5D79CF87BF6B5DA64D15164FEE55A96EFFEFC41E51F352F5ACF474B8D104A56
77B231727E89E7C025D48D50A8899DD24D4DF5D873698E715099552407576CFB
DE99EF91E5928E83C25CB21F1E27774CC20D0BB253BB4F31114F6BB6EB3FD64A
A40D1E89750D1C3DFAA613AB2A3A44B1EB69C07BCBE3A853130C1166EE98EFFC
BA88BB2F98BDC3B721DB34D4C6186E5CB2E597FE260E5D6B2D41C54C50D263F6
BE4E847828EF874F28F29FB2D79236BDDF5936B95A2DB43452C78FB25F02D3C2
23C8C0550BA61E177A84043B797AAFB22C9FB5EFE995BFBF4D6BF76BDEAACA47
D04546EFFD1AC386043D6E178EC111E3F1A80BC2BA01FAB65E3C91AF82D52014
12387D0EF09278670404E541771CDCA5BCA8F492C4ED21BA33412725C5E2BBD4
1E82C1E2B1EA057A0446E0A67EBAAF942A4B734D8F5C5A0906A7708DE6359942
925FE084E64F04080E8616D61609F020AEC64C5DFFC9C560604F639319AD3493
874D67FB56FED2C58DD18152F75E9E3A65D567E0B3803B0FC882B80D1E1C4022
CD9BAEFB623FA7347D5C551D372AD585BB4189795DC7DADF2A16E3969F492D2B
D5BD8A16E33683A8AAF33E89571963AD2AC7E5987073ECAC4D16FD02C19C53EA
68FDE62754AEB1E15936A08A441DEDEE59F33D9D246AE8F987AB4E62BEEDC965
24D76D2A60F888B1514F7C668D8E781B16E78E2D26A089E4540394D11AC283E2
26D766CC4CA81187599C2EC27C15A653B47F78162F06BE7AF1A10ED5AD4E6D50
2E0809DE2FA190BAB9326EEF9FE6A563644E59B5BF520D9B78BEF7310F51AE03
A0F69BA3A5A4B36E62F6AADF25541360D7C2D3174873F55307E929B392CE3475
109E273B2120FE0AF6DB142F9D944983B19A5C42053282E1FBA545DC61AB7CE2
363FF6B65CB9752CE148C3C8CBC46327992E3DA45A24ACE4A7CCE31AAE1ED295
693AD4BAFE5795A70042EA7FD8C960D6B0A97BFF954666906CB1550912A15A90
500C579A5F61209D9A1F503788BABB313D53F3E9D159BC5086CFE6D15C4CFE00
627CD8309098C1E2C32F0C3950222FA43EFF75AEA3FA058494B0BCEE5F215E12
CD6D836AABD89D461F44F96A1C9F166E156FE1F157062D8E062552AB41688EB7
E6869190C0E77E0EFC999B7752F69281A72D0FDD5334B63F8D214124A76F97D1
7DE269640C43F5923329E440A4BC1282B989F287F0D1CAB7DE6EDD1689FD3081
EFF9B99D887C2344393FAA788E4EF1E3A259171749D0FAE1D3030BBB940F9EC3
7E951A3D8185011BE8B8BFB0A270084FF6DC5290ADE2B71AFEE12DAE40F0E80F
7C388E7F4D07DB3D4F16AE25081FB3CAE365F6E262500B0209CCA5CAD7328D86
54B768BE8AC6EE634E969D614648349BF8090B0B84D517897DDB2EAE3A89D1D7
9F2B876A3017B70C6E41B33B67AA6E41384C36A1EAB57E3D94961A53267319F6
515B36EF974CACEE6D87377A7F70F555DF45E883869A4478FEC897E20111FB24
3E4876AD9015F71AC4F78C20D80F5BE8A18969127A85D3D37535EB04FDC8F5D9
F4C526815BD2B25475332FFA3709DCFECE9164496E9DEF7DCC79E6B2CDB8685F
9A00BD4D219AD9426EB21FDF7EF88482CF7D39980FEF343E48EA15A6D4AD5901
4E61259C607ACF39EFAECB45785D28DE4EAD3AF23E8EB270FF2FC011EB0C2F9C
37763ACA5F131550E8340404E208B9C0B0A118F40330333200C869DDC5AAE042
53AC240F7A64999F24219A433A83A51C08D9C48CBADB1212E15060265B49FF43
7F3665CEB74AAB78797EB9381948B2E1E9DAB2CE7AF6769ABB52292E6028414C
7FCAEA0A7E62E4DFD5645313C264A6AF6DCD95E738A5F5EA5A782D78190BE37B
673D308377400E45E873E7398025B179511840510271C3A7DBB533A8F72733B7
F3B44F48E78519E114A8BDC93D4004DDBF90308F450553308B687B3632982D41
F6C7D9C0067F4133FB6C00C5A8FE4A6821D4B1F212C29ABDFC67286560B51E71
CE4F9FA406446C3F30BDB2FCE712EB0B96E669973336F2CE1184E77B7909FA1E
1DCF959B81115D8704C021434CC2FDC35A4FDC88E365F40B9D576708BD06D81F
2CAD674EC6C36A4EA424B2244D6A11245A709B1EBDE59284C4AF21FE924836FD
6426EB6F46AF578C48599F3580DF7BF9FFA6065F23DCAA5136F02D5495AA0FE6
F3443FB8021AF3643FBA3D359AF988E92A615BF6B0926527B1A139E3E9BA7802
C3AEA4369ECD1D2BD907A92D9FB2111CE9D03DAFA9841DD8656751732BF4DBEA
2300984BF415806DEDBE04E21B390EB5AD1CCAB3DF4D9D4BA52A19D7F130F686
241ABD632E10FA40DACB66558B794EF9FE03CDD2DCD9815EBFA632AF006932DB
F41747A26DEB70BA0ADFD649CA5DE1A7D75748289177CCCBB1575F44C6391449
8DA66DAAE16ACFBA477449F3289735FA3A1FE1C1C1650E1513F4D2BF5379B7F8
4E3E20C0E73538F9836D811D9E3D576799B4D997A146B201C0CA57A43E742506
5DA621C412CAA4A9CC950E9FA24A37B972CA21C224BF2450D8B589F20EB78914
D41A03E5F36F6CD5776D5D7B4CB98AD7F84E55A0A878C50A2E25AF0EF256FA0B
1569DF04042EA71759231F737CCF8D83C42593F11B79A0BF6419623493980FAF
C3B66E61F5F9B0EB1C18F4193DBF746C28E840228249C86DCE69F46F4CF9FD81
D2B3B00D96E850AB79E09C3B6A9685A39FA361FBE453258EB50631BEE54F2CA1
707288636DCC8AF7929683EBFEFFA829F014B17EF00EE6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81A
9AC387913FCA9209F9142F9CEB88DC7864ACE2139716A8B8BCE22870B2A8AE03
61A40FACAAD0F82B44B4D6E4ECBEF48C6E2F39CBB2B53B18DF7F144E9FD272CE
6A23BADEFC0FC80B646A2FC08C8AA1C44A2A00554667CFAFF8A417D246F28CEE
905824D8C0FB19279F86AE6C8C6B3B5D4AB4CFAC640686BC6FEEB9C1DE214972
4C015A2D62C7ACB01966717F9C4AAE6203DBC7E60275D3E38C7F66058EB798DF
3A42628DF4378C539BAE628054B5C31D23B50C2B33943C5AB05E8304A43319C5
8B569F751361768EF816F30DA12ABDF5C63C5B1602823BBFC0C03B7A421A836A
CD4083FDE377A8E800BF093CC74B3F067CC1DF9F37F37B225D1A63E440A719CD
8CC6D148F1442F1386DBC7309C37D13848552D03C07E06969315884369E30CFB
BD715C131435EE885780EC50DFD4D90B568153D7F09788C8877FF9D119C062EC
9DB71DDBB40357DF31989908E4FB3FDA3303E6BC7EBC8C3F90ECE5DAE3E02206
E93022A0609D842ACA6AA03E96F8C117951E672EC54FCF9A8273B7989D201B16
1E870432822FD897B71CEC0427D5FA06B29F527B6A236CE267095F2193898745
610FFAD3AC143DC9CA8CB1C3931E36AA844248234F51BCA6F444C2905A4E241A
269ED51FF329D5C0C86D9C66ED01B85534A1E39BD5C20DE216B33240C40D188F
4E304C4610FA7CCCF0512FDD24CB36B40AACA15B0FA0098083597E359F090380
51C4BC551BACA6F728980ECFB1E999F4E0E329B15FE526F0C6285E5D05CFB53B
F7212E2933DD050FB0820AFA1B2ABFB2AED5544B06AD48DAD5E377C2F375CAD1
3A904419D9E7F6D38731EF1E8CB0917657EB749149E1D61A1EF50C19E72FC8AE
9D835BE39DF765ADAAA523C72A653D19D310CC10E9080C619F102E6C0EE4F80F
05C1AA36C2027A88763A7F0AF2DD0CCE40F2CEFD4D785A43264BAD874D4FB758
1C7082EA167108BEF6F7E34D958D6105130AE25923E7EB77C0FDF5286780C376
3D9D24E27F7FECB251C07A0CBF632410D7D948427FF6782B8850466A1FE66362
4FC26E88758AC01C1C98B568253442AD48691C2A47DF05F6A7466E87D3020FB2
D824E71394F6605CBE638D9A6B5A0DF28C4D81535BA76F76B16C6815E977CA50
513DA81445E93555250A43815E80B39AC00F7086BCB4B36C35CF2E4A42B114C0
7AC99ED39EF436CBA30F8EB1A6E543782DABE3FF805D54945D6DC2C09A0F32C2
954C689BB04A12A787B88A966DBE3F4C2EC9888B56E96241D345CBE471FFB513
9002DD5225DAD211F5C72F3127A60A33D311387E6DBB2951640D74E59891DDBB
4526022E00B54489023B0FBCB6540E7EB3B2ED0460F81AB38B9240BAE8424443
749F272CA43BE6C9B5CD3E674BCF858A46BB2D1898684401E25CC37C0FF9DB9C
5064E2E468F5906C1338EBF0AB1F2B5C97A5E4D6127212AB225F2857D0014DE7
F40568FC538A0EA2E76E1F62790DA67887A81FED8BABAFE9416AA5E06C7C4C60
0BF38B70C87E5ACE2C713203A64DACD5FD072694C71A3AF841F9E3D07C7B3788
5856BBA23EFEA2AB1902F879F1361AF8C0421A296FEED926836406E96C49A48D
AE1DA613DD54D9C840D4896A183FF4E395EB7A69DCE16AF779DB5DE506A534F2
9DCF33411B194DEE2EC1B99F36FA1A11D14A28C0E938F608AF10E3B31B98C36E
5AAA15FF94A95B38469000FBF31BAE9CE8703754A099D21B3329E0471463D457
0D4E89F4CD31A93C312EA4674730466C3EBE9F8964D358AA76DE110300CC7B89
8FBD8BAA1FEEEF4E78760F8A25C60981E6372E49D71614BB4E6EC7B1ED60BBA0
8F874D9E1B1661393BD85DEB50C29E3DBFD4613BD0DB2A70E57CB73CEEE6A51B
72B52020AB471FA444491570EBF12F70F2863F9CBC2CE3E571F5D8ED5009FB80
9985FBD9A3E99D1D6124A3B4DE50749E55267744E046627E381FF09727EFEBB5
2E59282E0199771B95DB671D4B2AD846EBC0109861075A936D6F2508D429C625
85777EB9E6E9DFCA889F03CBE5A9FB59C55523ACF1E394505886FBE4D6F739C6
6BA65248D16465F0743C602C6E12438E7E9CF6405EEAE7CDC599E8BF2CE72DE9
FEDF547B68A41FC346A14D58EABC55ED2D98DA057A876FB35F46EFA6A949A75C
F1DAD4E176B50DB98341C8D442F31C7CA70CA4411B4511BE399A1EFFE6AA02EB
E529146BB9E0D14D16625D3C830ACB43B26371195013F74FC07E862198AB570F
44DAA7CD767C726E7BF288414284CCC3E6FB3DBC5D11E9807F8B247CB591852F
EC9392079A91D02F4954FF97236F55AF6FBCD9AF0E167742D0BD0E131BE7AA98
E955D662DC9AD78F82C29C3DDC08B6A551B0CE96E180903891204F4EBE911581
EA3BE89E4CDAA342B9E52F30E55B902ACC35DE87E70DE8EDFE7D803CB0770A2B
0B8180E5389A54B85BC69FF37B8CE078CBFF5CC6F11D65E7B61ECADC94491C5F
F034CEA604CDF5412886758D49CE07427C96AEECF83C52A4555178C7AB4DC1FB
491ACDD3A0CE09DF3D2AA01AFC9DDFC002A9863D9382764DC241811B3912F36A
B2CB1440EAF4C36D14A899C877A1F71CF5F205C8FF35460B37921BABF917E5CB
A23CCBA7C46C157E3088F4D1C99603A5AE29019C97D03FA54726D906264C82E8
AED7E4AC8F66E56EDDE14DB1462E4F9859384B15882C6B0E2219186DD528D0DF
17F15FF78FCEB2CA616D526C530E1BF18C3FC7EFAC5BC5F623465E81758FA863
78485C3F65040DD351580824450D62A12078BC053A65AE1FFA91D645A9E26C29
A8311282A2DFA57985CEEF4463E64E0B7DD8D11FB10DC168A704C2C70DAEC483
F6942ACFB86DB9C4EF5E16FD6E2A4523B99D267AA808751385186A779C73E575
948744853BCF5547A7870E7F6196444513F4AA8D5FECEAC8EE88C8830B526ED9
264D4F56562FF445F348D19317A058A4FCC154CEEC13E60A53EE79C07932518C
BCF295C49DD58CF10B322634A4B9ACF5325B842EF91A19C55CCA6ADEB88B59E2
4FE4A96A8CFF57627DD17FCDC5BFFCC5CE9C78BFA2B830328F9A6D45FEEC239A
D76BEED158DB3BE2DC4BA1DC216B2D085F251E56B085F80C7C11DD39ACDF31FF
8D01256B7CED1EDFEEE0376E57B6E45D2F375499F8118EAF5C7F6607DAFC48AC
6FD2258F0314DA293F61D30028BB0FB43F50BFFB3005B677A74AC48E341259FC
DD1E8D932840FCA3727301C942C987A026992772DC2A0B06D5E4AB1186D81001
AE4288BC2EADC60BB6225D9CB6CA887922B117EB0E7F81000CCC4A20522124F8
B7DEACA9E6FB322B9B66DE572DA955FF06BBF51728AE6724360C97CE27BF0DDC
551716E8E06DDDE418B6E3E407307088DF1BF21C09F61DFBD19C30D92CBBEDE0
59D026A5A2D9B65246D93E36A7276E70D11DE1DFC7E967F6DECA7277FCA73E84
1737D9AE81C25EFAB95DC9FD91A124F9F5AE28E844C6C3EAF7DAB0FEED7AF2A9
13FB2CE66241C5102CAEC3992BEEF1999CE2A5574EAC934945ADEA6DB4E4DCB6
4BB074C6094FFB7D2AE0633C33C8E4823681C0A61ED898C571006202CEAFB5C3
E352E7F66C743DEB4EC14A3AE0EF469A2CDB23445830D0F304FD7A9EB6B8AEE7
919322D2FDF6C7D7906EDC7EBCD9E9B6AAF63DB3AFB9D9B87CC743CD66342BC3
BABA111186A0F38F642261843011FB3389DD944969E83C1B8315BF63C3BA9B84
9EDD5F620C7E451943A4E3868D2F9A6B78E6AC615258E663C9D255FBECA07BE6
FB4B14EBF66B06D640012D108ECD3329117185F2DCCD3CFCECB7224FC5E7E437
7C6E1F717DD65F6A274994CC40546439FA5A60BC3719653E525E49FF6F778D8B
ACE4664D86C8FDAD35CA3EA60BE1E28418837CFC7209F4A7357804EDDB05D506
686757C79C2ADE54B913F1ED476E3D86BEEA512B1FC55E137D23FE61B7D69D1E
E48363146DB3EB9914CE42558ABC90B623AFF1FA2CB3EE64202B74F76E195C0E
3F2B12B433D7DA1F634865DA6E5ED7511E1D930D074D76A35F19891E3842733F
8AC91FDEBDF9F8A426019EAF34A2B13634F55E964F8B7C21D937310590871C58
2F30C6DF5FA2097A078ADFACAE547DA592695486DEDA95AD49D2958D1F43A3CC
E7B7B9DB269FBAD050E6082D8DB99454AEF0AD0088753DEB92924B8AACE496E7
45ACE597058C23D84C0FB8BAE6E8B396D944701FDF7FD723D145E93B12A799B9
D0210E411564EF88E75FB2380977263E4EB261F6718EBF15ABA15B45CE0008CB
D8D2B7A1FADD93BD3CC207D8623EB59F6B3FDF302406C8F16686E31B66D8C1D7
E8DAA6804AAE5DE138E8A311A4A1330604D0E557EE03662BD31AF90587A45AE7
42E8CF9E4697F94F59B8AD259D2DDF433930B270C63EEEBF992ADB20C9F233D8
85BD42C04DC9300D4CFA004F89A55999A93B5A3EC2D3098ED38FC4CBC6BE50F1
4FFF4452CB1B96ED0E58AC65EE13077831824210531E56CCF19CDD93E462A12F
35E45673FB121E1AD75F20A8F4E8B29789DD95CA5047CDB13FCDE826D3AAE15B
CC039B1C6A9C21674AD3ADB75770688524E0B4D3151C5E51D640C741C6A05E85
EC79363ACC8A5F234575C256306A3E2B5F6A6ED4C48F6D4440488AE7C9B57B85
DE61CE78FD299609DE1D6795CBFB4CE95D68E3C7CB1D4A8DA1D0AEE7CAD1983D
695AD1DE3E935E231AB657C704B4FAADE3CCBBDC7C31C1FE52D8A57D79602D65
BBA312E072096DC25768434E7B56ABD8AE83CD6836A2A624A32128393B9D463D
FF8B865FBC10316F6EC4806316954E90817A74BFFE390FE7B5348DB0B4782BA6
D48AEE80D379CFEE11E4F1CD9A521023438259A1AFAA427959EE4927606F08F4
255EF756643EB591366950DCA06596B169C9665511507959228D5480C7AA0DC6
1F197A9CB5C80A00332184637C6FD2198C1D859D45F35E20C5554B0D72C262A2
3CCB48B112D5ADD2E056258AA295803C60070F8E89217F14F953CC4015C38151
4C1E1BDF36283AAFF8AD785A49E091119556FED39BC1843053FB2909D78D0CC5
BD0202C8FB9DFE45DC35209300AE63A15A7D983219EB991B300213F2BFD5B477
A7342D64AC059315DDAD1A2FA1F4E8CC6969A0E25CD23969EF9E387BB3BE62A3
51C14DAC4BEA7FB4C8F38C6C51F6431DE0F8FEB6C3091AFBCAEEC0FB3F3992A7
7ACADC778ED2784B3423154B7FC03D43F47C6F505869EC5039310EF1F4ACEA1A
40014BA27BD58490D243E14831C19698C0C0C9683827A13C1735D2C649C0D4A6
BE354B0E303F96F1A7DA6410CC5D3F84EC5C9F615650160747A724AF9C66AE82
CB864AB947E3582308319FF3BA95FAA268D83B462FC0BD10BBBB8DB7B12BB101
1EEA4891546F4AC7FCA094F32499C0F8AA33D2C7D00283804FD75276BF2C4F9B
E9BD77A75D5A1E7BEC988F06F62D50278904F0928D97C2A77894DADB216105AC
441F7544C3EEC8F09A260BFCE7C040D10575084BC081821FB759B9016DBA3AB3
9FC05FA6C191F7A83C324AF0629A269BCC414DDA1570B980F3596906BE0D23A7
1396BA0A0F3335B74FE5BC3367497C95A462341C8707177AF767B83F28AF4C0C
F952EA0D9C4176D5ACFBC48D8A48074357B1B8E5B17C698F2052A9C6410435FF
3D114F67EACD436BEEC8ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A6FDD
7D52F256FFCDF706B456B6886F5FF5F416C079AD248559BBDD2767549450C680
3B603B312979604965F7E8298F454E098DC4EE83D9EE5A229DA5B97FF0861841
31743AFD0DC1CF828D0993C56493FBD38744296B82E3908A1A0CE811E0CA2E52
A0EBB9F4998D40FD7B001C660CCA6AEA8C43CE8FFC9D1AEB97BAF55DA23B2FB4
A868BA0A41CE90D7BB6633CB481DC110FC14AAB8E9264F5EE49798BC49D9D9D4
9B9CB9429CA197321B545625093FAB4BE53BC96D108520D9CE9193DA216221F8
42FD0F3CB18D4D9C66FE5891B484C4F3ECCE8A8CDF069387E4FF4967E9F11717
A630BB0422421290360984C499D5C2F4750008B8107BD17C259B723F956B5B14
7E7C0D6AACEB4C9F0ADEEF68329D5CAE9EFC75DC15A9494E876104FF7675D11D
E1DFC7E967F6DECA7277FCA73E841737D9ADD1D1BAB1961E212D20880069F0F3
B5536CDE53D4A4D5012B54B227A0C18DA8A43ADB7593E98E5E0C75197138FE3F
BB31F876BEE000302935A55EBFE1CE914272A8F50A983AADC0604FD17B2A2F43
06AC9C0E2C687D1D9ACDBB674244037384B36372980DE4F1819DC2B4F825D7F6
AF5769BA3C34DE43B531F84B485EF8F360082659FFD797F6E37B87EAE0447EDA
DEB00764A38DAB429277B77869A70AD62AEA3CFD663916700C95E0023599AD8B
F5E4383BF2D5B1F79DBE83B6B7836E42C2E1AE0093867B0F2F8C4E44A16A51FB
C10F2F4BD0EB7475E396C85116A9D3FDF82014EB00C07DCD76514565D3E6DCBA
5BBF1E7E65EE55B3A8CC8D2229A01DD3EE09EEFA659502F90DEA0CEE99851BA7
2A097446FE8D54CEE9CBC3B88AF70F6D0234ACB6350CB1C56BB44AA5D7005841
0088780E87F8A0D2F6D2FA07D508BF3F6314B934962984C7FE400CC9AB1E5F79
2699F15AE7E181FE3ABC4B4C70E21F3AD9AC49685171C47A257EBC1FA6B40E10
B77C81889061E668B9444D08F3EC366CF071C473CEAF7FA64B863164AA97F309
B76EBD1D860A54D8E656ECEA88768396EFEC282AB93B7CCADBEE9CAC7E77D79B
A760EF4C53A3C983853C30DFA6B0093FC96F298AD1B5807C33A89AB14673D370
619267FFE6A05DCE65C7B986CF466B6A832F1921A6949469ACC2B5EAB9F109C3
6C9122359A60190E6C42C713A9BC911105DDAB231758BD41BEE389B057A1F7D2
5215EB9D0F26C738D1E8782D670AFDCFCBEF6BD68AA64D6CE1D7C82A1E46EF79
FDC5CF1DF72D2275F3857BFBB4FF234B2192EEE72D2CD5E415EA5C1C28F4B537
D15C66B6CA739B8D92F22E3DDFDA20460C55C375A40A34BF6BDB012F333DA135
67389FF89C666BAF1696FEE4BDC1B32589E1427C1749969DAF3B72CFD1F579F4
A62E705B6DD2AEF3D166BA507A1EDB131616EFCF91246FC75DE3D8A915DBC82A
1E46EF79FDC5CF1DF72D2275F3857BFBB4FF2296C19E66F93DBC8E9CA5E86793
FA37889936F823DA9CBA746BDC1BA4A84F7B70846E33CE5F285F32FC4E53A284
1E737ABB84A750A16A4999D5A59AEB5FAE6FA51F6C8CCF447A19D91B8CC30481
B5C49B6ACB4DC451F9C524349EAD4DF1F0DBB3869B74C2373223236E809ABE92
C2630C9A877AE16BC30D56A0B208DA546903B801BE445518F14E701BE121A6E3
C832FDC31C1546BF0855A6767030D9B6B47266B4A1084BE171D03696A026FA7A
544E4D106B9A315700669D9D8A3D985F44DE6070E8E4AF6424F3048173F52CB3
EECA756C4D24FC6054D922F59B105DBB74686310F635AE6153D9E18A0514882D
4CCFE9D44B8952190FB9EC8360698A45EC064FF735101C9B16BC27110FDAE792
2D97BF0BCEDAEBBDA6BE7764CAC582CDFB785921653201A8230C66DEBA105E89
909D76D034C9A5C6A216EE8C2D9C96FF0A04F2EBCCA2467174529C592950326D
E46CC1E57DD4B2A8821A8506BEF79EC524565788A28F5870230E9DA69ABC8078
8F2F72CEE5F5594F71A24092D1CA9BE1635F769E2AC1459B0B3AC1DC117B6296
C31A438AD167AD6C39AA2FE5CCA6028CB3A7EA6A0BB569A91BCF947E682976A4
A993A413FC97F6F1331B12604C28FE4D8F7FF429F96D0DCE41EEC1EA29EA44F3
F8493AB33413FB84F35B3C0016089A6C4D67EA0050A0381699FE2E38BEFB071B
9FFE3D7574FBB32CA8ABAF8CDE383085DFFD5EBEEF83D696C0FA27B86904477A
22C09610E936D310AF8455122F4C6B61307071FBEB6E8DA8C43C5E1C317DD3AF
44E46800FED97CA40252808F6AED21A9D6F3EF87869378858BA7E6E918D5E464
49525A4A5A2932DB6208081585CD9A312B09793B1C1FA05637430A13E5AE3E1A
3D5B471CAD468007C4A6BFEF07D313E1ED2F47BDF624179D8827CA4664F96F70
03D7D0BD14633673BF1A66D0126713294E13C1A4571B8A9E6D98EE5C2084E767
98939F0AEF7E64F621BE09010CB6F43790AC69F122BD9618E23C7FD95CDB02DC
661ACA0D9FA5DA0CEB0D82EC823434BFCFE218A4B5FF0264F1EC9818FC80F9E3
E06FA21B47A2C431ED3DEFC7267AD9DE87E23C2411D06FCABEAAA6D87458CCF2
5F198AA55DBC4F8AFB25E33D6830FF6333593140C974A8B13E94CF0E77EFE6EF
C2F0C2FE513C93C7EB2528CC8B0472B5A579EC88E8BBC1480D4976695D2851AD
FE75F0E8AAEAF174FD8B2D5264FDA6E40432CB09DCCF5C286D5EB04E5A7D952E
716DDE9DD17F51C40339BBD717BA9555F70DBFCE390F10FFC62821D7082423D4
6EB801F8502449684418493C3E014D603933A576C6B0758D49F3155D448D505F
73A5206D1647639FBCAEA8108A2649D23FC552CAD67A60480964C6CB0783A8AF
EBB8E005813FC0D89420F1930E18323460DB56C9DF95B90D45EA22620C2FA7D7
521D7D4B3FC1FDA5061C6F4B994301864942F3C18428C06EF16DAA37D7CAE4F8
5E3CC5AEF1EAA75C658E90F0246C18C21CF073CC1D7732019B86C11D799B79F3
3BB09CB6771F637D534DE9FE49A53A3812D7DBF47D9E8A2D353B48627891CB99
B8C759187CF9112E3619F9ACCAD376725BFF2760B9ED7576B9D9EADFA0D51077
ACDE9DA732031E629834097D62B5D90F48DA5BDB8D01BD0DF36D531892BB3AAC
16F85A63CA278DCC38682E1BC6D134930242730DFD14B49376780164C5A1F030
379CC9E763CF518CF9E2DD410B31012ADDA5B9ABA7F5EB2EAC54DB67BF9CD44C
49474B134D42210504E4254BC7510C4BDFDF53EB3D5F54D0C6A53862B4ED64CD
18471A49B62240FEF22F4D82468E075498FE2FD44122E511E5FB2FDC8CBDF6A6
9012CF9846CE3A9A6DE5C947140AC48B22EFAE3EF8FE12D52CB3A260C7E0FC2D
A6ED47D61F83DBF89585DAB88E81AE9FD0426205126E4CDCC23EB4C431FC6C1D
BBF79938BA64859723C4637574DAA16916B8CC6DC32495D5247D877E4B863070
61E7A19A3AF4137889983657F78257CE77F03D0E9DA4E29707C31DCF1707AA65
83AFB9A309EB1599591812BBB5C8F3CE43DCDA76D261E3F7734DE2DB7D9BFF35
01E5A6D23CF1541ABF3B301F226510EBF89944E4E9C5376A9F2841845CB62FDF
58F84CEF83450F3CF96A040F4C2047DEB00A172677774217ABBFEDC33DF60D1B
D15D023EC0FCBE6548410923051F875718FAC168E4E2720E8D959D339DA26151
5C42555EF75A03385FDF6C7DFA8FD7D02B80E1A845766CDB597CACBFE0700303
409164B5CD1CB0F12CC3632AFDA9076C2B4D0CA7D89ED2FD03763D20BE507F7E
56122CF46DFFFDB6FDF9361520D2E388DBC639CAD5B2E83C049DA71FA49785EC
5565D2B3A261A66C9F2C8501A2E9324D5E6F0F1294E1C0AC67EBF4A840618B23
172EE2D3E6538CD9B1E12B834A6D01EB50C781646E30ABD086CF9C09A6B0FEE7
416646141CCA188014A29CCA5AFD1215D847550DC0F06DD1F83FA50D4F154867
B579F69E34040E2AFF508CE7AF4B0D544E70294FCD49BCCFB65347FD1767DFDB
6F85337F7B399827B860FB08BF9D15DA7739FAB5D8E03BD8F283FB6832C3E10D
341F8D147A88D61C5990E609001B853B273DB140A7DC69895E465C1ABABD4CDC
88310748221F5BDFDC2306912DAE1934E475C3AEB56C96D1978FC7659ABBE845
A08BC6EC9EDABFDB1CAFF5FB8203CE3B25721168DC1E382A5267627FEF41D963
44A05EEE4C43E2AE24657176B6C8D3A0EB5A8C229616709EDD4096C1D4D817E3
96C6A55FFA4D67E59B58C6D9BAD063D247787282EC4820B3C3A8D7EAC66D120A
3911D284DCAE2018F883AA804CCEC457CC6213EEDC75C8890DBECB670000924D
3BAE8E7A8066D804B89BD943B49ABF548E5D92C1D6151D1ED96241CF76510076
26E9D2EFFD007A8E985FEC263E6C90BAE36C27D704E88F1F7BE09A971CABE15B
724B62BB0C1A5263449707BC0ABED19F4F1ABEA27322584D473A1A888AA4DAE7
7864042EF587A6D6C04DCE664BF83492D166B205011A3E283257FA60C5AFAD3B
71CF6D6772E5E77FC5742D4D77F4B9576213835AE7E32A2B401C36C3D58214F6
DEAB86E06EACF7F5DA3BC32030E4E23C5E0E7E82C4D1F9BD7278685C4CC54FE1
C1C4332F05F5AF14E70FADCA465393A7DEB7DA08B3012A99FB2FC7F6FF7AE570
BDBA718AC1E0ACEF9AEAE22E5FA653C2698E05E0E072A7DBA0702C0CBE5EDF6B
D0A5B47D7929F5C9317680A392DE0CD7AAC72A99F351D824F86D33CC89BD70DD
41F435624F598030F2E7121F6A610D640FC7E512A28BF6C12496361A53953D75
312631D6F07794B1D853251462B4D522B6EF8FE6D2DC18EB4C02C6BFCEC3E71E
20E6D98720013BBF6307EAD2720BD9674E2AED09E56CC6D3BF927657BE2D0749
3302A5492BEA01CB223FEA3B6CA4D0A35D6F2C5D17804371F9AEBC100D7A6D14
14C37CBD273EF593B596973EB054344F62115963E3F61A1A2774E6837D2DB796
482A00E2BEFBD6E3758A5A1CE621ACE547811799B1D7893DF52D57BD6C1A6B74
4024CFC65AAF320264BA65EA8FE3B2E77F515CF05968797241B5BA06E190C023
55C664139419373923D5BE1FDD292F80E973E271248B2E3AF05887FD5142811C
2572A1D4B9F9539CC6D9F441AEB22F4E871755911D8FAEA73E35EB7835FA1C6D
A4635171C47A257EBC1FA6B40E10B77C81889061E6696F50954EB8B347918C49
20C7142A2AC68231DD2AF574910705DEF2893D8D4BD1C3ACFA2BC75EB9471489
0422528F5121B7A7D7A973F2EF67F2795E6DD8CF55B98238D6654F8B47476E40
98ED693455F82F098F49FF48762D1C9622E0B64CD190A4AF3020654123563C5D
6ED62F1387AA1BC5F00137C6AF5840026DA68D8DF87CD5567644A09B52124E10
51A715399BBD1A6D3704BCBBE1FFF89BCF8129B98D35736FD2CCBB0E36AEB664
3C283A61B6E8613BC8134939CD28AF21976B42B06A63719C44432BDB419B04C9
19DA628C6A5B0F4F626E8935AE2943365C505CF5C7955AF2EFFD964AB8EECB15
C33CFF111F801E31FA0889D1561CB28638D1D24AA9F358AAFF93B9564AB4CED5
632C12606449ACD326A76B011D9FDD66C24C5342A5575E940A10EF9A7C4E0857
59F390036755C4BFE971F6DFB9FFAC965ED71736140A0D41AD571329C7FE5460
ADECF79C3543E3592283C6770B4087ED9EB76ABFB56774C4A21133E594461685
A92D372D4ED3F9DB786D7E7245B9B5DE70958048F037C56C14FDBCE691048469
BC488E501EB5DBB042B02CFE90432FA7D98B533F89DB0F21A61657E268166431
92F6AB4C4265A5C2599F55E134AC2DF346CD7C05F0C4B63DC1C10E03B9D34C67
27AACF1040ADBF7713E3898334BD99CFBE66C4FDBDD9B9180626E338FA32B67C
16195DE9D59A0F447B8DB69CE8FD6E2ECA90C6B424F1D39D11670BA89B298DE4
0E91D1CBAEDF3D811318D493DC71793E84BBF3E2BEE2EB813B03690C774E6DCC
F2D7221490784231EA6CF28982A4470A7156F1C7312FFAE07D32B62AEA32B58B
8D127C00F3B953C795C84E1A158E799D50610BA45F2003568AF44E2EE4DE711B
A128C91C36EEE43CB41592BD13837B9EC9735996A1376BC209B8D579F6A057A2
7AEF243C4B389CCF9385CE645C882CDB6A03A7921BB9F85B93AC64F9C82C455C
AC60CC9896FD453CF3AF2307B191F79C5C6F070D7E814EFF05F881CD7EF43871
21F72EEB3A9ABF13F7A9C46AABD4D0D976EBE8AE53D3AFDDBB926B54EF0C41B9
8D10342A2BA4F9908402DEF9AACE7BD76B3D4A244E3AC7442DB6A705BCD7E2F9
DD7C73DE15B222ABDF7DC3B76EEF17AE4CBDF387FB03FAA5AD122CB4A90F479A
EB32B0CA993ECF07D050F04D4CA153663EFF8A63016F79C7D0E464A57671FED1
E50936B0CE6E364B62411E6DF77D4A4DDF74455394437C3A7B477AC27F75850C
FED5BDB2F07349EFC5134BBD646BED8080D44243E74485FB82236249FF6726F2
D6775F15948A9D4DC82D6F60D7DC6F714656E89DC882B95552C5215183E5FB51
605BAA7948D6E5102CCC8E7AEE127E914C372C6E2DD84989E78792EC3F50C186
322A81E6A8368780A2E815A7EC49B29EA2F4594EFA2C1C079B0C777ACD0210BD
A4F06EF57BFEFA0FBA572A16A81DD123F8434BE971D9EC8149468CC0F2C45ACC
D61E6DEA7CCE2D711A218FC3953EA7B36F464567F208953F9AEEC1EA50C522B5
A42C4A99B079ED011928C2C8CFA17D95D50A7C1599E62D4FCAB001D5F9DA84FA
530D65FD2738BD6BC724446933E8927F3AACE64BE6623CC4CDCA1DC0B686ACA4
41E316ED0CB3CCB6ECBBD05FB823FD79EEBAD2F9F0891F553381C5E352B4D7C4
C1678904B22D75C8E8D4ADF7A319E9EAC6238093C798878E5D5087FC5390338E
CC499C043E346A4DBA66B7EDE932FFD9780C75301CDA60558F65241DEE49409C
10DB07153317E1A13947E293CC426E38653A16E2A7EDF6D500E9237793DBAF2C
6AB5E2DB571739092A476FF45FA1A1CF898E3FF479C1EF67CE435AD93677B705
BC81144F2E45854E93CA8D00E814009234E2A36EFBD854F868BC9301D33BA670
0EEC06C030DC43B2245F9D24D31A31F06EBC65712C870E62BFDB244441198618
3617BF19EFB5DAF155F0957D038B6FC5BF776DB24668F0F4594572EAE33CFF78
6BFADE79FFCBAA6606E892B2E41A173AA590B6C92E254AE642A2EEF5D51BE02A
C50855B9158840F97FA94CC03CF388C8AF7468EB28FD5E0CBDF9E23D1FF320EB
F19E60F85CB9568AA9C68C085E87B32EDCAFFCED2FA9A1619C3D1065724C6F56
79589C83053D4C8C9B53912E217B51E90F13A589F452936A798BADF461C448C5
480CA1D7A929044CC07FCD6CF9DD7FCE413A0B2CF777529685854F63EC8FB112
3A12157DE158671515E8FA0324852EF95789F16A8421B4FA121305A1AE54DD69
30796B192862AD337BAD6CC06279077389A26E7EF7030CB43C182223AFAAEE62
0EB7E7F02C11C1B52C95B6B66A2DF1FBE1991088128B8B12C2B28A050B50BD46
CC83DDD732C8EA609E2857FE8377112784FC50B3E2940B0D30B506FB4732B2E8
8F32140F3893EFF849FE4E17A69F02E7B4C69CA806A1A347B174992DB8D542BE
C631C8069D0DF3B6F3A5A80891684979154D98437D6BBE4C8EEC74B6D9BB7D6B
C5924BF9AB0BC0438C5F9AB06D6FA688C48C7DCAB3F09B9350C42F6BF7A4521B
21554098DCD8F7DA254922301AC847E5CE09E60F0839874318C8389E298F5546
71CFE508839634A81ECF5A229D2B16EF77A39178507E41DE72C0B30162242B3E
F7756A035C0529533E59108C550FB89650C5B0600791191AE0D2C2D576DBD6A7
3FB4C0722AACB08ABBB932D5E6A03F957B7C64E89BB59C4ADF019950C6276EA6
1AA9465BBB3A56AAC8D14E62B83EF68CDE87804FE10153467FC0AFC951B645E3
0ECCABC655E635DB463BE72AF1223D0690DDB88C7DA9D59148324E7CA0701024
42574818D8E2E330E2FE5102B7F4DF3E4FF521CA5741D8C57CCF85B7887E6A7F
6B6E4F61160966AF27B74B21C9F3D6882E3E909D80E0762C58ECC4E243CCE91A
946487E546C6E433A5C5B9FB7D5B97F2B4B202F94545C8C3A9D70992C1F31DC6
753222850ECF459A7BEA8D8482342AEEC5762713C43E7E94884C06329D340EEC
ED08ED58B05FA74B94FD084CB58F31EBFD5EBC6440498768C234573DAA11A489
B87A3C6A208E9CB0B30F7AC129D5E7217B10FF89AD4A78408DF8ECB0A02D9EED
19239FB927915A02D3D85B0C237669DC17FE1A48D20EA8C5D2A68A4127CA7332
E5039A2A7E32F2389255B0491050D86369ED418F2926916FB309B314347EE3FB
1EA13799ACEB62CB55BE2301E115BF38D18AE8461F466E207613B6C091C7A10F
D77A10F08ADDB19E494C72ED471DF04820F4F3A6713E67E7C08467C617E31DFA
524A30DB697FB4139002DD5225DAD211F5C72F3127A60A33D311387E6018F5BF
F946CE8D7834A3410F5E6EC14CC8E47337898E5E8367724E6A7662499EA3FCC2
78B616531C0CB5BAD1940ECE80B6479023DA0394E3CCA13502D03B122C2218B8
7DC1A0A15DCD491B2BA40939A647E01CA6143950A0D13DCCE128401BAB4E3322
2A22ABB177C6607F014F0310C1E7BD29FDC20E11094E2852779FC5C0D5DB9D39
648317DD0820EFEB02CDE5BF84E5F1E8C8572A5A86DD74D4FB3A9FE077F2E6D4
384BE6BC394E71C5DB81E42B90ADB935FE3468186ECD90E2F15FDBB395191E6C
465F4AA552F9CB59DC4B0FEE8C937A0920796C09CB74B3EA1DA5B74EB358437D
0CEBB9E03109C593BAC09CA9962533B3AB0EE6EF76418EDA7CC6B8795043E5FB
6F899C3CD8486A6DA3E670E6D13BC51C01FAFED3D47621376F2A271728AB7439
3AB3183B6CFFE1D0E2948B24D2A7E6A98712527A7F3FDF0C07D30FB6436D5875
3F6AE969F727C534CE5C9001F9E7A0149021BE5A65DB754E14D890F42F4D23B8
5DB5F2BD66726A544C10942C271713B28F9F33282D2063886DA7006EB5C0F757
82A3C48BD6B7D4DA8C112653B00D7E484A88A248FD17FF0E7A075A554F98C451
C7059F491D1C8BE038ADD1FA4019E1C78B8C7656766444617C98548A8EC0CC14
829F7C67999234D302FD1E40C28703DFB713F881EA0F4B81A8F1FDE4B3C92CED
078A98A433D6F3C4B442E014E3E5A5E82E52DB5332A895046FF12D01742E9AAF
ACF2CFCAF0517858C28A24FAED300D643F1880D27C0F7D73029F171028FDDF8B
55080BBC908D26B5CD10691FB92BC2FA54A04EB649B111671B43973E31253DAD
08488B1C71AA6F08A5FE3F6222ABC942F7B152702F7E48B93155A7DE83B3A6DC
7FAF8C2561841226C56160914266B1D28D74185B0E0FAC89BEC8ADC3FC027EC4
7FB0EDE4D2906CF1B55597831D98B643B81D2FCEBC963155762A1019FE6A9467
DB7E5464F6CEA824787BF86ED78492C31CE4E8AD0913637E245B375AAA5B76D5
95F18A4289312E74FA9C289A53647EB6D776E3BBBC735D9E7226D2B353CC752E
FEC2E91DF8E2DC63650E22804A5B31B13418130BA661F22AFB71F8026DC8F788
188647382BE1B7891A84B9697E22FC61EE575564D48A537CB190E26707CDE0E1
B29B2BB9C4F4716519A4A62A05A7B901F7AB8E77C6FB72D7CB3D6953F1416C40
FE153C7E73D86FD65663DA0E08018ACF34CF9BA5D7A937AEBEEC84B992D45A26
80BAC63497C593C90728B12A42833DA3C710044C03A37A680D1F806296BBF942
428E9FADC28CB5AF48F8947D9BFAF2F57F0F6C4AD7C698D46568068F98C3564F
42D2F7F26014DE37C4DCCB6B3082CD71C69A1E1A3AB1C1298DF12BB54B3EAC9C
3325FDF74E1B6222A84D10CF5EE66EC13A71302C6786D05D419441162EEAD0BC
CA6315D5D70AC07AC571FE97F03509863B9CF7A0E4A8D5214D07B149EABF51C8
5F0C8A7B7BA0AC8B5A90540E5FD5922F512C0A83999C07CEB7A37F71BB8C4C08
F359CB4473250995CB6F5DA6838536F3FE0B38EC7BB696C8285F78C66D154289
455C5FF2D23C1A59A2944DC972F44474CB35738074BCB9FEE4077CC0C49D7185
B623A143311EC892D1BB9554D34547816955434DFF68BFBC34A074CB3BC8C175
4662B5D3FC0462AC4967765A50D653FC3FA379FB4FA0AD9F83269A99D550366F
C8714B92BD48CCF7CFA30A7E92FA628D056602E7EADE6F2B3E168EE1B0AEBB2A
BAC2B90A514D97941B12553B13AE64F9F960EE62E049E6D9BC9858A3ED3CAA1D
77CFB4A424858251438F05B3EA1F686B35F0072DCABF52B26423E8BA630090AF
D344BB225F08F47868D6C4D857CF0A3C6CF4B205301FE5A2F54624315981DB9E
59213A134B651EB7A024989A6D910914C0224A700E1245ADAD0C701A6F5E771B
E54B09E2D6EBFD77645845B7C08389FFD5AA6D6AED2DC26C28A403BBCA3435C3
FB7971E9A56226D46A1174136F0A04A5CEB915B8E21F640745A0AB62F15FA8D6
5B74900DE1EA95B981FBBCE8D846DAE64D91AA7BFBD49CADFF1DC7AD838B897A
D728B35D869CF7874A1F48CA79E025C3D54743A3B0CFA14625FBF274F3794F04
4EDB9552BE2C55747D7AF3101C5F1A2A1BF6C0E2572AA0624592BEBF74CDD683
40D52E137B1DB6FF17B6629B871F0D3AF01E55645C56BFB97243ADC4813F842D
E44CD9352178217879909DFE3C012CF2809984881E57668BFAA1644FA922FC56
B0B93D32362BA966DDE41AE6A21FD20EB82747C47F18DC85145900305F388143
6FF377B1500EE02F9B9B8774237EF1899A326BEAF8EDE7CF319D42D7B7B61296
2A9DC4B8DD8DD87504652967C679E5629FE5449DD1BA7DE9ABEA28C4E2496F87
61C0638E0F7508D281F5762ADE506C2DA47286A8A2312B11DE4B488136EDBEC1
4C5256B9940F0800E6DD26001BE1FD4BF642AF9525279536814044F4AE7DAABC
43A230FDAC3D9FF0B8CCCB4C1E7696D16531A5EED36C30AA15C66D5398C145AE
DCE5826302220B185F12F8DC154E4B79B163C08F53AE78243C52D4E02E82A4A4
310980801A463964F3A0BBB90D85756EBB96B5021481EA4E845488B79682BD09
F8D07481630EC3129072AEA5778A135D164A571B22D1D619980E73841F84F59E
0500496E84FD5E9A7E4A28D9EFBDD34A443F263B41A3B2076595CE2A7DAAA94A
4B95D7E9C281194A84A9ECEFEA5023317F88FB64830A2CDD5277003D6F1D46A6
DDD51B3C62188C66D7D12CE54F29D09DBF020D89506CD1270C0B3EA235BDEFE3
E24373517FF148B2CDA2B90CB5884440F464CD57295728A8AFB1A5C97B6B8F47
63D21E005D89FAEBBD7D8B06F3FCA5D7107E8B918D946E250F561E5E394ACA6E
AD2890CD407F38C53B3E51C9FD432F22202E89A91B046BA4CDDA6E23B0AFB2F7
9CA39D61350D26435EB900ECE26C5AFC283144EA933E003739EA80DD65A63FD2
020938E02C1C72FD8A4A14DB003C5D21197F835B183FDC1269D70A0B14D4F9BE
76C4CAED815AF7DEF664098CF1A167444F32FDE1796595709294CCAA488C37CA
EF08DFEF5DFA13FE0CCA32024C378A87CFE7506B67F7A6FBF8635703C7EFF67B
9F15A7315285D2565D7434FF3C75A20CB3C1B57AF37CA806711890C1AC5997F2
1A14E7523CEDB295474F36E7AB3493706076D62F4C407BE252B5F31039CFF52F
2855C8AF27ACFD99EAD434BCC277A4805E6F068CF203053B151CD82DDFA79D31
F0B4A0485F51334BDF5CD5E855A60000B2D49835C34DE75CAF4932693BCE009A
5801BF822C193040C8E053C3F1EE0BB0AAAB446819939C850C76B37EEC59A516
F15F22949AC658037300F1E113F3BD1B4F3ED7F9F55C21A04F1A6DF8168FA228
6D8C7EB944B03F3907EC73E5B4F9B71156B357F62608909B7E4BA8223442AD48
691C2A47DF05F6A7466E87D3020FB2D9D297F492DC248B55340E2A24629A4571
D7AC9D41CB1CD871395666525A66CED4C7C65E4402789D5449C1EAE25572A971
B89B24C4EA34ED7970566C889F7580291E4ECD8437710CB5ABCBF542F0502075
D90D8D5C92B3A5DB6B82BE461BA06DAA237F43C9519956A524A451083DFC810D
15C13657013193C8D83A659B914A4D5509B9DAD79DADB3E321F7ACF4A5C3757F
7F2F7FB43CE1F03A69148A9AF4418922E61AD0A92C1D2165ABB9F9059EEB9CD9
CC802AEDFADED447518971D17B6C14D5B2A021154D274B753AA96964C14FAF79
7738C1773B9AD2B42BC431C60418D244656DBCACF4FD754ADCB4B3957E1B8A79
5D720A30B7DE482DFA2B2F4EA38E7D327F0F4C117F34AB17610F5D7F76C203B9
C613AC9569CE318E21C11AE858AB0BD573C2E4B6873BC24F7DA45361E9DA0209
FB87B737182BEEB4E4D214B234397772C3DC75D6F4C27F992B1370CADC87C117
FB3C208612F02ABF65DA95B47B8C56930CA76C2B5CEB502575C9764019856433
A5BC9EC9E87FCD37FF357A0F402E4860AA1EF85DA46E6CF1472B62E5B02DCFB7
DC61766C8C32C4C9BE1C2A32798652FE0695FE3D11AA43A7F64CE81A00BB186B
6DB03261532247A8570D8234C82272497284B49FD0B1A273C1EDA6B778AF995C
C50BFE91EA5DFFBCE16BE8F29E054D8AE6823CCE5FCFD2D5B4CF559A079F2FF1
C3615FD8AF94F0747C51AF46854168068B6E7C7CF2E2432A65BA21DBEB0A83FC
660BED9D09AA6A1B7C9AF629B6230BFD81E2AC57A8E54B8671CB0B0C92106267
78ED2352CD5E55393D0D97ABBE2E2E919071234506BEF22737891913D14DB366
F3BECEB340174B5075BD1BF8DF1D951426BA4EB4992B5A523877A0D38D0DAF51
0C5EF83D1C082F1869429B0A2626B6321C7BB92529610091D8A9F09161A41BAC
6A15727CE914A54817D54BA0959261F9098B70D161B2E281A539F8903CE68F70
83194DC83C7784B7734022650FBDC39FE0CA077981D31EE3902D9683ADA479FE
08929D2CEF858CDA96B276C02DB29FED2749139BF0A51A5A9E0B6B832255876E
EC28E36BC5BAA44BB4F42B537DE4174FD68DA8D6B5D961BCB298D3B571CEC6E7
71B02211A1768768D62E319BC0C6ACBDEF8BA575387DD0D73162CDDD96166F79
5D7473C654F93676CD7156CC449C1204FFDA4D2FC79A2DD9070FAC9792851F1C
C40481634C777018C2E5F8ECF2D2873E36999482BF45A003B819B9240E0346C8
43AF01A8431626B5EC47DDE14A666942B10E15F853CC86DAC167A9E7CCDD1760
2B9DDA972CF72053ED0681C5482954794CA0FD6CF1BAC22B20AAF0F9C2771DB1
46D3D081B9E5E2BC3BA66933054518026CA3C35805BA4101E5B57DFE360D9A79
B8AB56EA0BFB2AC47F2E423410C34A1D841C3745CD7CF6EA2746B4240DC02A35
64071F527443F534C4E334E0EDC575DEEA0C73666D12F2D112B93EF7E2B3F6F6
07C8D81FAC551B3FCB526BCDB745ABA11C62B5D0F388ABC36137C2137DE0D7EB
BF2323C750C674154CB73FEEE0F45A6CEC462468AD09E6EBBCD1EB55B342D8AF
E712FC23069DF8D162A2B400EDE05DF412F5D3AF84C24E3EA6496A486815A615
0C8063B5D2D0C03EFB23D0346B6DC488FD13E33323F969C14BB2980F7880873F
E0D8C5FDCAF439138776E7DBABC3145199DF6DB27C986E2ECE566F492BE91D3E
606E4A83B0F6AADB39F36AC8B75F5AF5608562153DD6A09E462ADBE677E6F550
F9392138F5FDBBEF4498694C0884FBE6911B1ED7148B9DBEA829DFFDC4FCD4B1
697443A99FFA4491F2B85D31FA193D2A423ED09D98769F099C8FF9B12A99BB88
B018D3A3FA2570D142F7D6039F6115845E21FB2D04A6E73B21EF6C43C1F84EDF
F3ADFDE37CC5A8BFA27004F390A9E7BC95A6425CFBD042F61A533698803D7B49
B793B3AE361752E44EBF16EF3C433E3B1CE1D4F04E229750408081A183BBBACC
01394A174BEF5457BBD5BC6E1546F63B15C0E95C4016CA528EFD65A0362B6049
575644DF499E000AC0DD66D5035F4F4BA4A66901948A2B1EAD65E327533BC1A3
EEF5BB2106F16DD0043E90AFCAD0D0DD2D55D65A53AC7D013C3C685371FE4ECD
63538030115B4AF2D9DF46E1E5B36E223885BB7E1E8B28BFAECC3D34152E7A95
0505550B8420A45DB0FDF9B94F0EEB86576319AE8FD72E288AB89F4ABD066FFA
0C1E746C7B89C30C25057A23DF1469CAA260ED4AD93BC9534EA4C863878D79CA
F427454F554B6B6182B53B81600AB819FB02988E9727FE6F8AEF5969EFF87EA4
00501A3B3236EBCDF84D69BD5B50DB0379832507E2D44391785BDA34FFA7A954
D8B5A461462F841C697CA38AD65C2A9B6E6F0794B78456A5C731C81BE1EAA683
02091E5C94635386A95F6FA9E9A4FB99FEE4188424A1C4BBAD6AB6D894316E0D
D2875727CCDEC5327FCB7A2C9A509864D67E82E305DF8551143EB41BB6F2DF38
A3BF8A308E89347B8454CF7E3A9737ABF94C6914A674BE9E9540028000B909A4
34F417B4808AF41D9964639CAB6B5D5F88E93AAA4F12C642D0F5B9E942A2D8F6
F358A5ECDB8D62A82BEA336E043FF1EB660F261482EA4A2A2643579E252A64F0
71A7ABB75A726F1EC0AA65DDC25283DFD37A7C28A3A5C25871D190E4758A89DC
70366AD98D5AEF0690A7F07D6FA3435DBF76FF8A70E8E030DBAA42C157E03DAB
7E352BE200322BBAF6DDD2628694612A7794213A139737C8CBC667F0052EEF61
ECAD138AD5B484A510670C8526BEDF26F171C5F4C80871ACD7CD327CB2140CEA
EB45541CB32FF7D147CB85CD34424CE13529BC0316A8CD1A2FF5BAFF93EB96F0
A79F34E2BE615A70822E964E4DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF7
CB0BF72EBB0DDC10C55C02FB02663AA47E2BDC5A51A5204ED1DDE0E54E7D0AA3
C8F86500ADCB8C1E42A8910C7677643246468572F84A6C7DFD02A58EB57540F4
BD855E19C7F5D385379D5EF73C32A46CC6418D742FDE62968972B6D9C1403EA9
4C9B96CC5168ABAD8FDEA9A92B42CCDE045D6052894C5915607E3BD7DCA54D8D
3A8018F4B3D918247CFE6240C82AAF61A7D3FB6C48487185D7629E1E557A7D64
B43EAF4ACBAC482D06AFD458F0DC3F463C13A51C9F3EE6A9AF7CD4F34009615C
025BFD7D46F4D3774E90371976C5FAE1625D62879E4B5A7F10378A9D5FA168BC
BE2C4F28F49F023763109ABA63C19FE12603C3630C9A877AE16BC30D56A0B208
DA546903B801BE401DA923A4FEC8948DC1EF163019E604B15ACE59F9353B87B4
E558B560043129C527722B4E3302256A98811185A964289B557663D53DE4C578
F6993FC10789AC6FA67E0FE9BB9646A156B1131100E35CFB1CC7432A5967F4F7
B12EF69C367F0DD4D73689183798A4A2605095672AF08993B871697F1DB6E55F
2EBB231F88BFE9882F3847AD19A58AF79CA8A0282200D23FB0EC43EE10718471
2357C9CD77FAC71FD55A5490C89142F2844CB7E6352B01A57928821321C28792
5BF53DB2C28B55AAF8797624292CF4FF2BF2869A9A97398E0C20F5F017CA9DB7
BAB3BAB60A4A135AC78F06F126D2F0B140C4EDF6BB63C31D8694ECDD4D2CB53F
1FA77EA74787017E92DDE4CA70E9A40D7C2C6AD7AE02AA5AA6382253CB2BA6EB
CCFBC26B35B847969664852D66255D2A28B0EA534319E195268F9BAD924F519D
57A88C79B55D644CAB29554F2E31FD6843F89FE5AFF614A0A2B1B15A1041800B
B72CEEA17CF4A93E4A45D937196ABFC771853ADFBECB7AC623150AAB3E83B839
9A040A96BD14A374280F97B486E04FE58DB7996163D1A0A06FB5E7EE151EE99A
61A68FC2FB7A553605C1C178C1B0BD37D5F03F931477AA59235FC33C523F93DD
B154CAE4648BBD1EBF369E7696C8B79441C929EE3F22A8D2433B35637CF0AB9D
FC59F00E558297BCD6CD33D34A39917EA3055C85D171C0378299712D1177AA74
69F6D3289DBE70F640BEB821AD49E34383E63C474FB5CE992AD09ED3258C6DA4
AD3060787B31EABA5D487A53150496CA0FEC05242DBFF4BC8B67AEFD8E69441F
E11F56E548CD6C53D90433C03F373B8956556A2AC81C1A18951D0D0301E8E446
7605FB8B7A5143E0EA721DAE16CB509CA5BC1566250CDE486DD72554B45330B3
EEF2AE90BAB0BA3584794B06B2827C2455060A8B4F2DA480577C0B4FC164B2BC
961B806063B735900768E75D440300F0BB48990015EE2C13567B53E2CD413C8F
E45D47E1D403E1937F41DEECE7E5FC166ECC5C25B81723F35B6E2C376C48E13B
FD6CA218A1CB03FCB945FC24376A45F2DE0C21302961C32FE86D15E6D7C8B374
DD4AC964B2D7E5430E4819975096240AD78AD226ED88CB897914239C1FB71611
08D3C8461070445E6F16A2C5B87A779636760C9A55D76EDF0FB44C63EAACAD82
CB34C3725DA52A528B5F2D46595E0F9CABA13C6DE8A64BC21FA255C664192E8B
8D050CA8FF5186A7AB03ECCC79A923BBBD362B788F5C9DD0A21678CE95F86EB0
E0B34512888B67CE482A44888AD47FA1E523C17A201E21DB85365DD8B855E4BD
A6A34B1F1A75D038B3D9F60F63119EC9FA765E6E318CA3DBEB24E584016D0028
6C69375E9E0B1B272B51BB1829FEDEA7A3D13A932AAE28816D999955116FB5B0
15C6D1321FD3A8564300DCB79BF86028FA508EA08521B0DEE85037F5D40DEDF9
8CE5BA1AB235E1190BA23732E42841B2BF6E2FF9AD07EFF1919E9BA90194E24A
69649F0DFD0046D2E3204890487B10BB0D95FCA6A5DE809558C5ED205EA35EC5
8EAA7D1909D5833FAB8D6671564F796B070A2B34F218D3C00F8CC890179E563F
D9E79C9FBB0F67B045A72E87355AC254508F6207BA17A89280FE34639833E298
DD429E5E03218E29844B569E2EBD6271DBA6A5B619FFB1D5441C2957D3FFA255
A16DCC32BB7BB54CE2DC59D6B5903F25A823A88C7E731F647895CECD96CA4A2F
B086715F0F6F21CC05DA1CE1392F29895BE53E4212079FB40AA52765CED0D79F
987D963CC392365BB3DDF7350A2BA1432525A147759BBB495C5D5B99EA24A21A
41A2E09B42D5D461FD91C88AD7CE0DFB5E45C649F44580845F0B7AFFB286FAC1
8078C9EFE517926FCBB34E12E947B51338114629439E6B8AB2B752FBF5AD056E
F2A9AC6BEAF5E450B1FE7D0D6EE6721F4F33BA41B670AF286F43223FF5EDD4C2
937A154FD01A8619131F6C724A435B996176C587EBF5CDB65E8DFA20E2077404
B83803AA3A4643B1A0FC052E929369E76CD017089645873DC47E51E1E4CB83C7
C6ACBDEF8BA575387DD0D73162CDDD96166F795FDBB33B64E6957AEEF5C17D83
2383CC11E5D6419158E31FFA9105DE3F3CE50081BC034F92EFC99C0E85370EE0
A0A93C2D221DD2FD3ED1A35B28385846EB372D926895B7B8A57F831F6379060E
3650CDB2C87FA552F5999A1FACE9CCB15D6826F49C36CAFD8B32FFFBEF97A93A
E4A3E58A6C7D8D18BD2AD151059F1A220E400E7F38B995AD9A5CDFC3B366F7A7
F361F9470E8C548EDB3CA0CF7B4AB632A511312DB573060A7E73001ABA76E395
D789B19AED0DA8E04B88C9EEEB2DB80D4D07B52CE914D9DADF84393D28D1C70A
CA3396BB25213A0F8087A08EFE3C136A19BD219A656D83139769F56B466B95CF
4D412DF23AB31EAA4548B4769A0AED35C6A162A2F8042E0762A936094AC463E7
526A427499AFAF4ACD6C6A475373979424F3A2E497487AA4432468CF994F92CB
D51443ED5564F721621D94678DFB09463FE15EF2DAF9BB3C19BE207736A8A25C
7AAFF1AAB5EB6BBB58BE6AD339C572D0B9CB60F17836462098578BCD5050EB47
A9F4313EDADA4845CD683F833C49DC522636D5B7FB6EF764097A17DA725C3AF7
934DAA4C9145042A3AAC758995A7355F79D0696406789946AD5E325197F08B2E
D6DAF07474FCDF67A10B68E6603A71D05FB29B08D5DE5830B2D48BF66CF1EDD5
3C5873765AEC1EF988F9221374D8509B9985D992DBC6439B33A20F5F03741B47
E291575E3BDB0305B7E996AC870C048681A32BEE7006163F27C153000E975E75
13D0156ED6FF55EF678A9F13829F5C336597F0A2025CD5AD78D6FBBAA8A9D5FA
08DD485C3B1D952361F75B6CA0D9B4B2177EC8A4F76C9B6DD93C12E49D04DC07
1AD33B118361CA862E5654A33560BDEE0EFA73596387C452421EC870435E9B5C
CE6FFD54A41EF225416BAEC7C61A9DD8A584A75FD5AD5AA0468323052D1205BB
E6E794D7FC7861CE26BBD7B1080089A09EF7487C5B23731B3E3C83CA192A5F5B
CEBB0A6708A1C2E809B78A6F7C3C88C96916978713CE5052FE6AC212A20E02B8
6BE559E9AB16B32D0DF2464BE167293ABBAE194FA860BF629EABFCEFAB8D28B0
DC8D6633B8E67BB0EAB7E9CB648FB756B08F3A9EEE2AA9151C0B5BC8F426FC26
0ED5511ED5ED3EB0D122400EFF5A8D8743FC64B26BF9E44921A707C2CF3EDBA6
861322B03197426A1A86E9150D3A1EC4F892A2F092A3E45F5E98B04F46C2A763
DAFF6642ADC1ADB069D7BEB4251E00095DE4570C8DB66373ECF7838754B13556
18B870681B3ACCA62C7535209C546D9201261AA71B05F2E629B32A53476531B3
6AC6458551956CA08156AF9C33D3F192E19D445B0CE59CFD89084011AED6E918
BA1FC040AF011A728FE7ADDEE2A72866497FBBF49B8FDA5FF5956B77E26288E4
F97D9C29E03AE381D34ACDBB00E3CE315A4B8A69682FC8663358A8B205832879
EEEBA63035395B711D887D314BBF92D3F1CABDC48E9156123182A8C9355BFFEA
19B66F88C2E08549559AE4BEE134388BB171D094B892243D05DBADA8AF7B5557
4CC26F4B1DABBD0AA237447854D3CC7C8C48CDD889C389D35E4D4BF0BCF9866D
E8E798AEE276B5FF364A289222E6D4251DF41E0518AFB4B041209BF77FCCB5AB
DC05E978BFAE410EAD0B667BD22674A4D2FBF20E45EBA5D846EF69573C5C757A
1F12F37795F73AA2A50EA7671125D3AB854DDD7DC1FFFC217A60BC0F8284D412
4E5A355BB7F9168E861CDBFEE4C98770C9340589046D29896E8D1807150C2282
F11907184A43E192338977159D77AC6BF76682B29B82D49241BE743F44B94E41
23F330E87EE1DF050E94B96E0E045830EFA7A23D6D7EA98B4262F9F5C1186772
E4BB26D59398A63538135BC312D0784932BE8D96BF2009528DDF1BC203377C67
CA2A599F1F4BA039BBB26179F2A72599892A0016821EDC6BE3FD98C5EF08ADDD
F69890FB2039F35F223F154C1A9FA36793CDAF2C98FBA727B8BCDBC1AC8C3EC2
D1569BE951DF9250770DB3C4996836EB36CCA89B5ECB87C67462CE46FB1F6012
45917A88EF37239AE1E64620ACEBB94FF5664A8B29A07AF0C8BA954FF5FAD579
F5AB59E3E886BC531628CD9FDA87188135B3D6CE0F29B3D5E39C9D5C62A298B8
BE48AAF79E7C22E2D14BDE2E5D9942D17B627CF1C749FE8F1D3581BBDFDA99DA
9966795B0AB5D098057BB2FFC2399D9F67A7A4381C92831862B1C4A68B8F974B
CC432016F24F184298438154B603E4AF54350CB8CB8E904E7535440A06549348
0FDA1C5553EB7D3841B9FD401A469962DF6BE268D3CEC78F0CDD5C4E98E05D53
13AA0122DF71AB6B4097497EEB38F0219B7ACEB0DA2442304FF353060D432603
4A5CD9EC8F710303A3372CA1DAC1ECB83AEF8ACB06C7977F5BFC46DE9A856EB4
0233E8396ED168B99909F4774CB9E46474D1A0C405B5D3394AFC2E2FC73EC0D8
693A9561AD2C3F9E2368199E9CA3CF34E140D7DBDF0CD2C2808BF33DBF1DDBF3
09EFC2864447914DF3ED2C719753BB1EED9C435A286F422A96281CB22A04A78E
F3F2DC126FF7A05EAE5E13FCA6E1CE59D2E0E0A1A24075AA9F2EB2A871F588D6
AE9A8293FEF7E667094888C4727B20698DA61FCA9506DA63A051A3404D96334D
AFF3A84B4AA0E78957C95F4757BE7B5E2246AA9E837F39F113D935DB9E74C2E9
4E865092A8903EF51E091BEACB8ED266CB65288944A5351E6CE205497C7CD0CF
1764834C8E19FC6FEE6D053776150D5B340DB70968FAAED1226A949C78D17673
3CA14272F11D8FFE42C9877EDD26B9DCE4C271C33EDB0C544D105F72949C4199
9FA96E8674AEF974C204054B3D7DDAC5DAAD49D3AE53F560771D493F83C8EAD6
D875F8B1D7AA945126E46BB5B788713FB8009CCFE62C17E001C9663FD0AE8351
CA80AB4E920481716E9E5301A9C483A41C4F88EA7BB624069C9C4288D7C77278
5564E019F13CA5B5076065298DBBC12087570F4CB1612BEFA1CB71BC1CF1E1E4
2CA7644DAE010536B0D6D72D3EBD3C54FDC10616768487E3FA1A4B633CB6598F
3F77F3F0723B3CED8B0436C6090F06E79A8BE6B9EC347BED7AC15B9A3B0CAF76
A10B60AB33B369EBFA1BABC1CA2D5134F45D29A6B3466696347DCFF0347BA427
3054B8062D3DF6FF094944A7EB1508D679FE6C78EA43F8CBB8763319637257BF
B4D343104C891292AFECF8A055EAE81C7D2B8D845D3F92F70C173FA2444334FB
5421F839B7FE61A3E58CC805DEEFAA3AA60BB3CE6D39B62E74D162022753ECFC
F0A21A7A4DFEF217E907C79DB9CF3744EB03FEBA08935FE07797623F8880D5E2
B1D9C87CDF16AE86047B3D6CB83D9A71FFCA7C6312BCBDB6C2DD778AC3CB9698
5BDA63F16670B196300B47BD67CC8C0C1792CEF900D2AB0171C483242574D42C
3CBEE053515E87D6C4094BBE3F2AA63EF2C4585BFB7318D42CFE278CA6866BF8
1718901D53F6E6BFA4E63CB1AFA9A96D3518E5AD9ED32CDFF084D1C0E48BC191
1D4BC8F03084DBC222062695EBC2322303F2F233DE2163EC110EF4B8FFD3E82A
1F2D18F3F163F77EF3938D434215081269F715A374FA5F84623E10A2BA408EC9
E58416E4E063B6038E188C8600586723E2BC939E5DE156685493BDE54C0F85CC
0EC17EF505AB4D120472AC822B3514D3C73DBF1486A8CBBAEA93E17A8FE6B6F2
BECFE199946D22396E06DA8FCA17A058A976C72E9D95AA2B96376A3B83379B8B
8ACBACD4C14CAE49D3AE53F560771D493F83C8EAD6D875F8B1D7AA97E0046812
CE43B02B9A8F4A127E7C98CF0C0887861FCB647E6544A4F7393C18B2E5098B1E
6B0D879A638AA3B43FB9FBF4083B75C000F0A56FFE04BAEE21591AEE7E8A5E77
78F334C4E5AD44BF7FB5BCC56F8A2A99AF8702B6D030938BB82D3A6C8A7A5067
A7C564BF22F7B8870889F3FC139EF250FC2A6B8179F719AC6B30787677BDB2AB
4971538878B4522D1AEE2980FC421B2977AF4C08D2E2444E3F0CC46869343243
748527080265184BBFB937DD2108E0681778521870E80CEA2A87AAD5CC5FB7E9
D98C7C8D7F27643D015A4423506A9A2A9E1CFFF12053445D7A9181F685FFAC78
6ABEAB809427D3C924672E418A82BA95EBDC70B433B74131B5C935D70CE9DE75
407AE7A8AA3CF719981FD9E8EBE567A6010D7D07A8BDB9FF4DF6D881CCB85B91
B03BBB90B546A8132BE0FCF7FF5E396BBD869E1C46E86FE01EB1933E3D0E464E
5C2954470D1D1B46F239D6F7BC4BDEAB3579B57030F0E4B1F2BB0827598CAD34
1C90FE154344F677A4930BEF4F9CDE56B5EEB3AA469E3B149F0E450313D8BEE3
496EA31276759DBFFB7C70799C8989072BEBB498D8C5E2CB31137B0D89B90345
3F5F150324F5348BEEBAF5BE5B3848DC05D38764669DAA35E748AE0594653E8B
CC03F4311C6D23DA238771D8272321CF91BFA1122D03C70C03D0DC795CE5DDB4
4C56D106B4FDE566BE0703C2CA5B82FD992F0455C3A55EE88A463989ED02012C
271DF94A89C2B2CAD7E98C16E5366E0BEFB97591F93A80A73ACFFEC5BC068C95
7E196730276B14D1BC62CAF592A9AE687C10A7B390DC5D4AADB5A324571B4378
6F7366B3855C49CB4B509062CFCB8C042B8A34B375AF23FF38A61A83649BC8A9
CD8AC766645BCF05BDB873C53A55E5F4C393B1DEFE0EAE6AB40B638BF7CD82D6
588B91E20B11196E28D48161E66E9C50182B206651A907169B590701B03E969C
99AAF746ACC0CDF1C92EECD88D1E8F7C7E97918CAC0BCCC71A7F053306D5F044
8B643260BFF264F2F8A60EA6030C526FBD4D7A4B6F972BB807A84285D2B304BB
3BE0140AD5B8AD117442D802DFB8236D91C53D752A3CE0A4287A722065FAEF3D
D2CB339CB847F010999B7BB911AB7A25D56BC3B35A05F4FBF9948E22A898C22F
BA08F73821E418266513E5DF17F3FE23C7A2FC0F6A9A9284A30DCA31653DF8A8
4E31B83DA707177DEA9F920C27F147DBAB635123372C5C038B3552801154F46D
16D8EF74EB3C1875E40A0ED8A06DE196CDE1258B372905579B411633904A8E2A
43CFC58F9D351BDE437460ED4EE3A1B77EE442B6B0220329878E4BF0BD4451D2
E602F8834756E3C922F584E5F9075D366889C9B8BB9C6B7E2213C6BB5D23CECD
4025F6DD88C98D619C6D8FE4C1756289408C92394040B089A8CD1EFF20F28BAE
5D6CF8107DBAE010A48FB1DA9387DD8C40DCB823B5D1C138E3322F687CC8E644
986EBD62BEE6F957CABC7987D69F376A77423B85B4211C632DA77530262D2E55
EE81A4458CE92A5ABBF142AD54E12FC5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic10-Regular
%!PS-AdobeFont-1.0: LMMathItalic10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathItalic10-Regular known{/LMMathItalic10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic10-Regular)readonly def
/FamilyName(LMMathItalic10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathItalic10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B30E8028C685C8FFFC2
3C0E2BAF712D9A4BE80B6E38C9F5A449DD2DCD493C0A130001F01DB02EE2BE50
8CF3C1EE0898661980578B4396FB3179F301761100231D260FCA63E74EDCCEC8
08E4BD0AB6545195F32F881C99FE3877DF3BC94657DAE2BD20767AE9DA7D582A
DF256F4A52C57F9D228B3E1CC5DC93FDDE8E791DB1E6FA18E0B9B2423868792A
2BC90B78D9F9640524C758D0FEFB713A9A0D66350CD78C8FC945A63D8C07C8FF
5D66E1D7D963B7567F270FB876D2FF1E76F1FC1AD80246E413D337A718699FE7
EC080448FCCD4B5AD8453287D86BC727C140A6B2C1F62439396AEDC897D546C6
F8241122821F88FE9BA1342B044AE9A33CE496ABD5D7F76B1CBCD331A08C6DD4
37A78E15453AE3B1AB6664CFBD92B9982E6C0F5AAD267804425AEC523A184899
3A2D0259E64F914D353ED128EA5774EA6F87DEFDD1BCA35A413EA5D75E42E3B5
66539B7414AF09F23C1DAEFD913327B6CBEE7B5F6258CFB98B288A2A2019D344
E9335FA5D1887F0A3E6CD430AA65E3A59B396F035C7E84875F5A5E374875FE5F
2B49567A6E8C851A51D8BA4F6AF388BAFFF88D02B166F37F0CE1D4D4201AE26E
047084E2ED3E3662B60089E355AEFEB3964748C5F836C437C042B64BE3AF79DE
75AC4E7255CEC0F20E6D9400D29BC8D9BC2FF1E08D8E020F33BDEA08A38A5E90
CDD238866C66BFEF1B3B61F2564CCDD80BD048586674B94291DB7268CF59686E
D95927FBF8CD3224572B687E01791F40D51A230B9F12EFD86A7F90A0978CF220
FA314AB43197FE6E7C4F22C4BF4C4DF7ACC7EFE7C6B152984BE0FFDD1714ABB9
CE834B59B859F89231021E34E2BEF6C78D5697E25CB5D72D2A5F8093158818EC
60233DE494228ED13DC8AB6685A5332341BC02AB2064AA00FBE26BFD27263C04
461327FBAA2D88B6D1477815F4188980ECF40CD3AD1E29DFA34769ABC993DE8A
AF8A0E27487EA582D55E45F676072FD72BF68652A4BAEA84DBC69EC21CBB0A68
F265FCC88CC89C3D9B0B9DFEB768EEFE20CD2B55EFC851BB5C4DB38FAAEEAD1F
5AF6801E270D8B35AC2F519FA7AD4487A2383121482B77276D6532DC01E77478
3650F59A037F4ADE1CD2E9CB17614D0A930928C8B79C3A3C57BC424B6E90786C
303D590747608AF3CDD6A51B5616033EC03304518C35E55502546E62683AA356
36607E78EEDC4B8B17CEC6B82F4CB8D2D71A37921E6FE3E0084B6F5919598FBD
C52F4A2DA682DDFDD93FE807ACC6151DACB35708D019A7B9AF5B124290AAF614
2E7DDD1A93770F487496B751E99D688D566744409009D0D543B49841D3CAA4B3
0149A064134B130013E09391736C9F4056288B9852045CCE9733E7FEF517C0FE
21F8D0D38C1B389F7A42AE5AB8763DCEFAF1A889AE9820EB7C4C979FDA673925
65777B417F4C056746722ABBB027E11161D5B06F7D3F117639086ECA82E4E126
6FE543214FEED63EF481304A2C9A9D22859D177036692AB13A9F2183C9B0A453
6829527A871675F983B57AE69AA5EA146A5F40DEA2745C6DE79084042534D18E
559DAB50A977CF474EE1410D7097785D120CA90AA4B0933C1D7EBFF54013A009
C9286A37159372E49935FCD0B18758DF9ADE23E13279923AF89148A0A751C7E2
192D8CBCBDAC4C27D2FAF381075988973322DC7BC65301C6FA19CE0D88532369
2603DBE17DDCAD64F1CD334523A9A17448F86B398FECB416D635B39D924302C9
69561C704F60EAD3DC1DFD8ABEE45AAFB293A32F6702E0FF3BAFA6428355378C
A104CC80E5FAC3FF84BB2D4E8D4CCE33E0B1A39A42F8BDFD0A6ACD22E3E4A8E7
0082F0C085AF03D89E764E4677099F2B24DC6056DFC1DC238085DC4E78C139FF
3A8FB26BFB0F2F0056228FE28DB2DF160599E3A94522133EBAD7E14B89EC68F4
328916B0033E155AAF48909C32E9D604C6018E7285C9712F76BFD82B5151EABE
7353ECBBC6D66BBCB322FC0E5EA78CA5E1C2AEEE1911ECC178D83C1616504A3C
04DDF1492398733A065ED812ABEB418E912A48686B70D31C609FD94F2B4BF2DD
02B93DE998A309023373FF754A301DC4203744C86A1FE55F5369B12A05851331
961D8D355F8630CAD26310FA1CF73FC6AF27C47EA6CBA30BFC36A14D14DA58FF
858442417345F334C40626B4C6E200E65491F44D51608264DEF2E9ADFCDF0EE5
287659647FF54DB1E704D7C1AE35DFDDB7E1B56625B726D92F9F6D894ECE749C
B0DF4F066F1C2E6516E5D322D5D0CBB0D260A1CF47C750BB5D231F5E277E515D
5C82E317CD595009E52CCE155CA5CF23C6094001720AA2FDDD0966257F06AEAA
AC9BA1FE0F38AFF7915DE817CB08182D317A9257FE1D91E9C0A5EF6BF51DDBD6
0698F49E950FFF3E56CA717A1218E076D198FEE5882D9AAB6AFEF67CCA887313
7EB689AD7ED69949F9E57FFAB2A510C20B04B65B64B0130B93D0B9F64212BE66
4C064E8E94697F8947B80F894D0660AC0F5CA00779C4AE501676A2117A504B73
F1482F78D2B91B5D6F2B976466F890C36D948D8E634C5667BFE029A7CE9BB39A
B5A04CC340DB897221D28A26CDC212725E0CAAE2705FAD872D6C7E7ADD59C705
B1BF948D4AA76BC824B8FAB52F908BD27EA21718BFCC47BF236AD096C4C06341
9EBB5483D9117BCBA9E4FA7FBD5CE49A47682306D7632D80943B0A6129D5B36E
1B7D703A4833D59FCA3E093B3C8249DC1B31DC9090C60F26006F86C0DCB6802D
55A43296CE946FA735307208BE1771CEB75DF61F552077C5FB6CA285816B8DFC
1D22E62865C1CD309A24A683686A8E3AAC300FC73DE4FA231FD789BE60E065B4
DB8A29400487B6E1618BC3A2F4F965787CB531F58DE28AA382C07F621FDABBED
09850BF8B0B4E708949C3CB2F5B970C3A909883DA76D647983BA56BE02C9460E
CB7A2172DE74A34AFEC39CAA4E5DD4335ED96AC7AF7750EB8343B20D827ADA7A
7D08AD7544FC52653FE16013E1CCA0F69EA9740D35BCB62990626E06367B313F
73B96B83C700EBBCE587EF238E01010C47DDBE4E84B3F6E84089D9F601318362
47BED8D67A303A65AAD30AFFF5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE20B44A2BE90
C36DA2687DCB7DBA40F6B99E51650B25F4E51941B49774F8273B5E98306C87E5
3A03E6B35B82A143A76D58265254C13E6E1A9D0DB17A1D9294C759AEDDA6D4E5
CB498912E3AC15AF88E6309CB00AA35170DBDDB43739D05EECE15112FADEAFA8
DF7BB6157C5374FE3D6DE742A6980C8C55A9DD737F2069BAABD6F1B8A83AE84F
8ECCECD0CDFA74FD3C4FA486433D06974C660A27F619ABC0E178D15C8C217270
1E6C1493BDCD772A1B9A9CB8C1205F7896343973FBB99481B1A6B865510896B0
133C9D9C98E813E0B142027A215FC75181A42E65C3E1CF5269B00E31FB47B4F7
7FD95A823A176D8387CA420A441980D3E866604325998BF88E4D0A27D4DE5AB3
F44DF52033A1EE28195614165597150B847315C78C3871F7DF0D5B8BBD40BB58
C6F12D16BCB3BE5B4EB51671AE9357176D5AC14505504C43A33EA29CBE2AB98C
D0305DD935D8F0F5EE3205B6BA139A251BCF348F2A19EDEBB709068CE066960D
6D0E7801038F92981250C3BDD77F02C296953F4FE2ADEEEE96C2499E4D5C40DE
EFB9EEC8853BB3E2BAED185D6B4A80C1BFA827E4F15E623A96FA4C467940BECA
B15E072F4D80E6FA1492BDE59F46CA026F44D74B0536463124DFF7ACBDE3E03F
7063896D3B578B229735564F4BD7CF18486E33C6AD14424873AC44919FAAE46F
12CC16254F52A26FE47FE41504D3E851A066522DD56FAD7828E5E203F328AD95
5AB433987B2296EB3B524700CCC455A521EFDAB11378FA57CAB556A4F4B23D7B
C51D926CA86263840FFCC3BAF798B72E5EE24711B2E41CFA13CA06EAD93A614C
723C4F04DFE12601EAE9032D9E7EBD76815B0E7D7B5ED680E72DFE1A015404C4
DA634DA90A421166E24C51625758E355EEC2396A5A7BD8631FB6AAB1BBBA6F88
C2E08549559A64FB8667D2E82AD4433C0A9953E58E73D10DA44A7CD2DA1DECAC
19910769678FC5D9292D3709FCC162BFA5612BC578D3C2A2707CC946E5D1FF75
F727D45A8A2B28B95ABBBE4AD396736DCD3404FB314CFB957757B3A177A9A853
C1E216348AB87B18A4184C84556C0476BE51E70F2469172097ABD94AB45C10AF
3F3FE34DF9CDCC1B27E608674E546D2074A3AD2FDED543CBEB81BC451E0C5934
49E31AA562B4741A6B88834D87621FE73F3A3D0F6A0A2483964AA9CEFF0C08B8
45AB92F0C3FCE73E4C56D825689D816FDB1A4713F18099602C64E20DC14F1F22
085EA743F9C98587768C2816E4F17DE2EBF094D3B7F6541DF57D2C3DD302EF1A
8522595A8126DCB625465AD2370DE571CD6B910687EACAE370E9DAD995532710
0476C03B131A04FAF2FF0BCEE900B64B23005C03657FA91B02D5E8D679C227DA
8E3202E5584D0670E527BC95332D13B3980549FA02073BC15A78896EF1DF68BC
C50EAB2BE6FDF3FE47F44382604F862C325A5D563B3E7BBEB30BBE16035E080E
8FEFB94BDCA9B0C35BD20B737640F3A298A95484BFACDF4042ADED538BD62F0E
56B631C83838C6D52E80C827321977F7865D10CE97CA2774F2773009C966CCA9
1A1736D45950AE1DF665EECE2BA7DA09E455BD139F7D3911F48E1BE5D86F74CF
E9E43CC26433B1629F9EE5B00CDC1A77F816D94488534EED218923148D0ACADA
4E7EAE558069849FD51D8ED3E300037C501890C4465D71D4E6546813347F0E7B
E0B89407039CF0788A7243C3044621CB3E65487B72A54E2049CD5E15ED402A0F
46027DDE61EAD03E8DE7EE3E332C1893E843238E69EE9BCEFC817012AB37F9DE
43EFED5270345F1A725A726F554599A7CDB3D38F336B09B980DCA75CC3BB2067
DE4A625B65E33BF7C5A4365FCB62CA4FB1A025964D8B66865C2F9F714F5D0325
C2BFF8B479CA34F080DAB124E1FADDFAF3D59697EC4E1A2A761DC91B2470E1BA
130358271B797A36FC8CE33A9A9E82FB786FE8709499260BDD3592E809E0C723
80B92F4B946A7BAF34835CAB011BF90B5EEC2B739A109B37B07E8A668E68D117
A608A75CFF00F7ACAA23C940555F6C8B2141EA551B15AE7C01A2B72C2207B66C
15430AD9390B5920585579B9DD406B9079950669763106C9D8B16D0AAC8815F9
8A15818D4AA1FBAF363B899827711651101B499AC64184FD20533FB7D592E28A
4431E1C30A523DCB49ABBEEF236068B03655C718AB51DEA84219D7710CE3BE55
4AC10B712825A46A68EB78AA3D2C058488C29EE1A6BC900971FEA8BCF07341D7
B3BDE931760FD3C19C9A445F10907355E926ADFA5757E73CF123CCEE63997352
8604FAE8139078F1738FDB78BE9E806E91506AAFA231F0FEE5F90D5AA9E862E3
0E05197AA0700E59F874FC9783BAD5DA960A1BBF958DBE1DDE280A937955E533
9F573978AFDA870D31F0BE5ED8FC0CCF161B28BE66F462F417FC15EE79D98B2F
15FFA7271DF32BF49A147695843FD9CF8D6BEB3B9A8FDB3333B694B8D02FE897
7B2DF4970EE03C65448E5F85C74B44F1E1E44CC3409440737FCCF58A9899769E
BE684B749A17A6322C021122E962CD756DE48DA93798FBDD034F4D77985162D5
3910DE1DA60560F84973A847723B615C939D69B5D8D2BA0F0F0470AB6C672AB5
94515E77B6C7ED87EB5CC6194E2C471F8876C13CFE68DE87995127ACEA37046A
42AC0058159FDCB85363C9140E4CB8F01612DF8E6B72A5B8C1F72A3001FCD5BA
AE8A4A4ACC962224D4E3873D2DD75BB1C61281E75298D261E198F64BE99AD5D1
5052BE4101EFA8E39744C2315DF6513626FFDC2E306F95939384F0997DFB2891
C6512FF8E2B56A74010EE3696D11299FD9A45832817E07070F52EF429603136B
7ABFFE8DBF1189DD2A5B5EBF6B7F14B8887FA437CB20DCFA2F0747FA56525239
87E37DFA97082369335AAA53A4D891DD3CA40653DBEB7CA9B48948F5212C2422
D5E49397386B7304DC993E27FD0132D5F48E5D967396C92CC5641A02B1817B5A
2ECF3E3E820C3CBF690D5A6D4299765578EB49DFD964A4B74F21DBCC8F96697A
CAC75B1E69BE9B771B1F029518A84A313834E9E3C9722947CE71592964580EC2
72453796044F1B27681F825F22F82E55D70888F553CF9FF715F820B4BBFDD5D2
F1626083FB8EF288D2C84DA1D6ED0451C01DCC92B8A4010A5FB94633C8EA9037
A12B3EF73B4F903EE544DAB90F0A3BCA7A7AB687037FC81218629AF962EC95FB
A423CCCD94DAE6EDE99695DBBA7DC49648D46F2741B3A91D9032F24ED8F7853E
8D65902E30019D6E645EA2B73CCF0BC0BF2E27A0174B3FCD809A2C7FFF041A1E
EFD2F26607BE82827500CCB8AAB416C5BA69177FE94D14189B85DFEF3367BEBC
D4324522446780A62B214EA056223468C987C1883B80126A31ED2FB79312E42F
B01F5D430BDEBAEE24F2EAC8C34CBFBD8C73616E0D8B344B3203E5D01E8E0C42
12EF567A0234F0D1673BDC63E43DF565AB45FC363D0CBC0649976191237FCAD9
D6B9E25671F9AC599A40C37B2439C06FDFDB69E0B4BFBE38C79866BCD14C2C92
449525BD879F6DB1F382396C934A72101EED2985EC52C26E5B8E62CCBE00BBB5
D24ED5D673E26A25811D4BCA9D693EF8ABE784D7A453D2995F020A0BC9F8959C
4ABDF4FE7C245CA0CED918E347DE8BD4C3C7EF12F4BAEEDA8DD594F9FDD3F6E7
2F15E6C158940CC86C3E3CF3C86B416FE6BF97BC5A04AFCAD446335287E949B2
DA10840861A6AB8C7F48740F24D48CCF3F5864E1E2B38C83022B58077DB66E40
1BB927308AC68C3BB28D26B8F8173B23E8A40C8F17456399E05AFC0E2909211E
814D397E652ED9EE4DF997633E5348F62AE2D0F2714F918C82E9D446F1AB2C3B
DC43BF81B4BB62B6863A4CFAE37F715EDF3EA5A33679FCDB3D4BDF4FF32CC5BA
82DFAEC4C878C506E54F4678678ED72CDA32888E0742B960442432CE407A2900
08A593645C3BA29473B07B9B4A09D6EC83705AD534722FF10AC70B57187ECFC0
EDF5C1A83578340AE2AC05CDA9853771F11134ADBE2BB894EA141B160B3A6BB1
A35F0E7FFCAA67C0164C2EA6B6C929A92C24959728C3922DB6CFFD9D1A2659FA
165E8B7CC0959E57AA808F141CBC4C0D9C28610AA8D48B04743794FF766255FC
C8628F625AAD83C7A0C96976DCDAEA268D8984C6D93DB82004DB8D6D49AF9889
2AAD14BB8222997715D8CEA214F826A1E6314ACB088FB1817109E2704F51546A
52E994D5242B0ED37C4A84FD93446770C3DD7431F955A5F3734F6931BD7908B1
C0EDB1A574BB7925D7A941014B105752CFDE450793C1CA66CBB224FBF95B8DE8
FB0274CC120718A9ADB97DB098B78A35C263B535B361A120CD4CABF7E48B4DF4
4EBAB119C6057DBFC2B0085C818FDDA774EBDBE7A9501F93A0ECCDCD40CE7AC4
9715D8BD0A6803D8B14E7555688E30A3A930E83872D8BFAC1B099162FCFC58DE
C166F58F94E71C97FF5F6DCE124A44ECC6675D2791793D9D00F85A36FE45E57B
D5CE0C7A57713AF055C0A0F972EDA41ECFDF65AF0146DF74E0240022D6B75361
C9DE43CF50EFA61F56E5B463649E058E104A8537D3D81053D9DDDB1E58DB4166
E6EA59A4BD30F90835BB5715353EBF18B8D78C3A8E085E0825AADF5CA658B222
EC0071C59FC159F3DC2C3746BDDC39F1AE04D2E173B080DD050FC4A9D2E6119B
F80D107CDAF7D939FC7D5243FABF7CABD168957C0290DF568B818F514EA83266
2C580500C0575C9D919968B1D02976D700F1D4CAD5C1319B772F7BD8C911577F
2C8861B304696DDC7CC881A1AB590B7E461DEF507D885BF10131BC8969A7E52B
FC97C3C1CC59ED40A9725BF156AD73F326859D2CB98E99180E8013E922561CBA
08E454596F8369028CCB95F05432204FE04146BB130669F473301DA3F5C5D300
555AAC9230CEB38F253DB2EDC92B38EABCEF94344ACE8D6A0F557143AEE3EE3C
AE11090B0EE84F16C154B608FF630D62476E35C019B5DEAFD5F83E3C8B0A5A51
24AC92D53113C9773D6E27F87E6CE93ACCD2C4E4103FEB184076F816ABF37783
C71E3285B54CF01CF73CEC5B7877077E421392293506C39170592F617BC8E498
A4419A69F3E76C4A1DB85360D56B2BD1201EDA870C73647C187BFD9BAFDDF89A
2AB03992BDE602486E273FC28CA962BAB90AEC62F1C351596257BE6C7FC02B49
73BAB1985E2650F843FEB3FD3E1D20E7358602F0185501100FA347EFCC22DA5B
DDB8CF7ACB4B264041056168CB6D42230045E7AA3F84DC7F506506EDE0AF45CD
CE88A8F9A12D46B8FCA50DF4433B0B8AED6A63BB5BA66A550D2453ED7551F097
16732B9B7F6CFD3DBEF029332338CDFCE1F3CB0E7863E79AA792B335CB8D7294
7CD666202167DF4DB18E58917EC6842451E3F7441B4E94F3024A413A86139AC9
A4AC68381550E3E98D5590D950885F4AF37B677DC5FB7D45B0324F1F3964D3ED
3CF385E2BB735EBA4E9C05D6F238CE8CC902D1CB601CDC94E4F1693236039B86
0E4D935429CC99B6A1051D63F6CA940D46112D96057F4EFAAF8BE15176E475E9
5DF937A3818F1A0C5BB937E81189912695D91C1FF017D6ED3EC8B076E28447EB
420D12CDF741FC2782257F20E4430D5388DBB4C564C26AF25696553753718AE0
425FD9EB6661156D18D45CC2A95E63CA3CD3EA4EA68C83BDC1A519124C438E43
CEB5C4BDA5A093F493F51B52788B4525A50B6738B00E5697688998D4B8689B56
38004350A9746BC923F15CB8D51E96EF23A385AF1114173E61A36005E192E6AB
013593706076D62F4C407BE252B5F31039CFF52BDC136F8F3B0DFB89AA1D0FA3
717BF3CD52E7FC86C8FC5394A3FBEAF9140B86917135468FE006F159D3299B3E
7BB357707F5CF0EAB4498E85746B85E0FCA48B718DD31133B3E861C51677E4B5
16A714E18122D9B0F78E928AF7AA0CFC2742A66EF2BBB6B29D16487C3CFA6F89
2AF0D56F40DC2BD0DDDFB684C57458BD2527808DCC5C70B1237EF107191BD84E
ACA3B6BB0E0B6F65BE4FFEC8131ACF9117A54F7FFA5DE7B0DD369BF65E34A8B9
C3288D974FDFBD004DD1920351A6A59B6E946FEB8F2BC224D1E3877C58971386
83452EA8A986BD2385C65246A71EE8354A106F5E771BE54B09E2D6EBFD776458
45B7C08389FB94F322B2AA7037F55F05E547ADB16F56669A201DA419833F6349
401CA8D7E45983976ADBA0F5A42385E23E7CA5C85EB548911B66840F81255512
2B46A03394E8950D913D6C3AAB962CB9E16A240013CDB4F38DF570E3B1EA7D96
FBCA02691CF790EB99F57B180C4BC71579F931AE81751D390CC7B93D11434906
0759E600067CDDEEC9411745973976EF232F76C9D0C0793684D68FE95129C325
B22253F5584C994060D3830085F5B2B4D380F11A63ADCAA46D9A2F9F96D45D53
8AFC13852FC7AF1DA794D7CBBD1634E74040E6E7E797E18AF57941DDF7DE2072
ADACC826FA821D890C325F962342C0D2A9D3E105A19D1B5612777834D15EAD8C
AD4CCFE92F79019521AA7072575D5F68B81CEB69D06DA03FAE476A30AC752C65
104F6D0B35BC3A046DC29FEB61EAFAC41DDD746500C460609C2327B8222A6675
6A22485E8EED2EF67049EFDBC5A3974CD114D390CC9088C268D21D1CFC3186DC
7060235145CD22ABEAAE3BF5ED74076F822C416646829BEFCA4ABD7FD07CC0F9
98B96AB3E3E182E29B819FD861E52B04E009FCD61211DE4271273CF39110B40F
EEF6B961452F14E08FF252E8F9DFC8C9093A07D46B3102148B03F0B16A43CE74
7192B5A2F9860B20D5214B61CD6B1DE194DB09E0220F3C9427AB5FF346430D60
D8F895722E36DD2C2DB1D7B4721B91E3B18B10A96E8ABB5CFD28CA18CD9013BD
4FDF0D7C5500A05DBAA0C671065C069B7A80127C6837B587A53F157BD60FAD74
49153823E9F7778158B67FD5FD998DF5C85F1CE42E38D68E2825C8A95292A77C
4342D9D235FAE9DC24349F29614784C3339DBF4C4D4D9524354056E7A1F53FF5
ED7B2E617D6273562E2837A23DAD7A3A04157AD65BCE334146CC6E744517BFC4
25440BEF2458E31A8DA7AFFA42839CC734E717BDD52F97832A211EF30AC150E4
622CB7BDB175B84F2AE6120EBDD79276940F6F4166BE43785529DA66B4E92420
257742777F616DD1B289B760B6851EA1A9D31C01577A0026C7929C83D8058455
81723BB6B76B4C3C2E2E5B8584AD015374BD017C7555F8C422617BE29C1D0078
D5942D9ED60284FE63D8514C89CDA3C719DA2D9AFB16D8A9B9AFD9BF39009C96
865580E510F180C63CD039D399B1D9C4208BDE9E78CC83004995898EFFC985D0
07AE44672530620E26EF50BE56EDE1966C41E28D9E33FEC6EDF59F573E7EE66E
795AF40F411EE46E679F57A19EB61F1CA27ECB4E7912CF6BF38A261A3524EA3A
004092AFBD59A17235FED8ACF5C3F48B1949C72088EED64E45DD9874A61523D2
3195A73DAE814FB2C017C88E478F892B195D82AB304A526515E4BB7167FA243B
FB37AE424572A24EFC245742B43E993EB7AD283A44C701B0C5803D57FAFACDC9
F059CFD93AC75D51A5C4E44700A4B12A886AE75CEF0729F6A654B1C4BC2058C4
07F125EE256A951D8CF895A44E006FB367DB0CEAD4A5479C77743044EC0600CA
E66913D3A8966E9C9CDA6AD12BE81304B8910956B479E189047C61C4F872D14C
F0881BBD1006BC9B62A95FE764579DE0CC58266347C210AA27A3700E11D47169
D9703C24A911062B984910FAA37F52B7E3E586EDD0CCD68CCBD3F0A6D5543797
4BFD4E3FE21D4D2625E6464E87FD22DE22E1ABCF02029E8BFE2D5D3CE6C857D9
9DF783C57DF5AD1A8C88BD1E7273E1A452E71ECD0526592466EB7FDD34012942
70A5AB13AAFEF6987160E858F76C4FCD46D406AB2BE566E420A2B0A885D32369
82543BA9F60F7C0EFA5EFCE34DB39D8690F60922A5775D8CFB67D6DC3F623BBB
ABB95F57397A31C93330A149C5D9572A20B10E286B7ADA3AE06F801E6C37B04B
18441D4497E178F84E90AC55B87A0E337A5DA9985EF7DBF5E1072D4D4BCAD8B1
B41483B8FFC69B77AFA35274588303F9E8178B4F618596988817E8404FDE7B73
0558C056E1E29D254B3349C1A49BBEB1B913570A51B2F96D302EF8913C6BB608
340C77DEC27C2DA43A817662FDF1896DB204DCF51405B8BB00BD9B73E650FFB7
1DEAFD8526EE87B9D95973107E39BDBB431AA70981E77AA5E5E76F43E730D9D3
D04D8EC0D24FA7770BE6068F5403ABE805AB2A81CEC34D986C8FC303AE9B7A5F
45D61E02D0AB82AFBE793D708ABDC1F5F00A0A3C2A83A328B249EBF2C31AEA9D
19FABD53C63170E5B8F42D90434A48E3F4993DDF5FDF93C9E21B6978C71CC1D3
103066F6DE77BD7D99E0ABA1EBF44D7924828F7B6EE2FCA7825AF4865C8FBAF1
AB0D4645AE25880CBFE7C4F91333D6CD3899778644A33617B7649220AC7AAD30
DB394D570DC876A06C08E3CF3E7821D6EE31ACC7B0D19BC1490311150931AED3
497ABAA74303D3F334379ABB3C4B89E108BA2572D80E6A42885C6207D748A49C
57C9DF28361032F041B46A66ED989AA7F51CEAB8BE9661E2A837C34105FC0BD6
ED0484606D5341C850C8AD20647328F3D39E0D60348BCEB447E7CB60046602A0
C11A73E08A7F3F8BC5E5831303447C940325E2C4030CB990C55DA515B2D8AC50
8773330AEB5E669D85B963F1224D72FB99578B809358856E4E99B28E138E2DB5
85C9F3D15D6909EE7D51FE5378A0BFF5A15ED9D04A7D6DE96DA88FCD560B3DF5
EE5FFD826E4297FB433EF36C4D483A8111C0CA001BE9D46BB30653430174D252
E3FA20748D268461351FE0B61DE543845126C26E1C03761D9DAD12DE7023463D
D07C26FF1769A4C8A2518CFEEC51A39529D3C48148D04F9849297269694EA337
11BAC422631D16D7B35981BBC7D284979A7C20DDCA027B1239DF2C49F418E93E
53E45EFE805F33EF3FC77FB91BB1CF9846CD383D3857F11CCE7FFF92A6670467
1E5501CEC6717F5D94FBA532977DE4721520D9476D3BBCB9E7989E1D924CD89F
F87DFBC5B77ED158C0EF082D34ECD61EE6500525F5169291029FE664A0666EBE
DE4A90D83C78C8CF9C395B039CDFCC5990A998A4ADE314CD325A932A3B571361
31A621C34E2C7663048CE95B636F859634B4865E03C0C0D6DE7B10C0F3C6084A
A3488AAF0485C522F23E0C00E858FACA0C6955664DC644D392DF1D684784B276
D45105FE5E81A7EB8419BCDE89B51D55F3E52675324E6002C3F2CFEF6999F99A
A0A6E0C4931104741A6C9845338F0D171803EC04C9534EA0F95912CFF265C212
EFD14EC183298277594958908F51713BAD79429321A8F96E2E1F02AD70E2FDBE
EE625BB43CC8EC7178E13A405DB7AFFDF91F37FA0152864BE7EB0098C6052D73
F356FD3F3C3F55166FC377E829EB5FF5B4B2E22C79E8CF744F0A8735C3247550
398E2A60F51C6FB52496A39EA1E3B673DC2BF79331E978B15B5319DFAAA48D23
AB92E8A97C2CE2BCD216B45A7F12D8A7E2D3DF509B594ABD65472705FDFD994C
874BA8127BCDC22EAD65654CB5C2B1D6281AD3B91FAC8450BF5CAC4771C8DDD3
1A7FAB9DBDB206D03671A3FC18C15E34F70561F433B936432C3D97BFA325CE80
96FD87B5398776E6126918E71A0BE95CC782FFA77F2824E6051A7F871A464772
2F3BAFE7A94C7C573F0711EF874B2B84317DA3CC28FD0E2B4890487B10BB0D95
FCA6A5DE809558C5ED205EA798108AC33B498F8F495661C0069515C10E979589
DE9D276A9F4F58E4908EFA20B7551C67CB65DFB3A6A4F465CA4B10FB25DA5307
0C2BBB4411D9608F4FF0B2E171883F26B6EE0EE9D75EA112DA1C60FD628B806D
89E7739199D1B28FF3B7381972A2A314542D041A7F548020D1E621E944FAB2E1
7F6874422629C08443F8B24AC016B8E4ABF0F4C8CF8587EDB0874A4551E00462
CF53D08212FE1019B9B015F2CA593A2DD89199120346AB81E636CD8913E7D19E
7444F69437431B1A29274230E39961C7BEED7354488ECF3EF7B3069EF25ECDCE
357DC6CBCC1EE0BED9873F59F8A6A02CFE7365C3B60CB191ADBD1EFF555D1209
1B4F8175E5232D6644A2260837F172756F06AD289DB5DCCEAF267EE06D621BC3
C3F02239AA26973696EDA9DE94D205818CD5AC4E30E92D029483909939354AB8
82CB998C1290727A9E2960C608C0E9A1EE967B95EFBFF4B8A8DFC42607B67945
09B9C24848EDCA32122C634A5915D13634B978BA6EBE421EEC7CCC237877477F
D269AB3699AA11D5D263EC9EA9D2EEC20CCE3CD1E1D48A557EDC4418FD50C74C
AECABF8616AD957D6A0624FC9D4C24EF7C6BE851ABB49F9BED16F7E9B408317D
4C933F30D085D52C6C4F5CA2C9BBE16D812EB053BEA48C141A79C7ED32B2D312
7E3B9BC63324DB4EC096FFB2E49F5DEDBD72973EEDD3D9CEF5B4636A0B888F17
ADC676E012A737EFA5B743C0FEDB224E360B0423B9AF9223BFFC63A514AF6BF4
AE2B867B9CF1B3A178A9DB0E20D9DDC923F4CFF2865F95A8FC0595724B004739
A669943B050CCEC5C81D68C4D3B152F038F5EB1239AB0F027CEA8756FAA7AC4A
F2361EB14BA5BA08543D80BAFF6D584AF3FD6733CCCB73CDACDD126F221BA9AD
08DCF0C6B2F1CDBAC5CBB4AF4E5AB320A83EF5F8EA5483B097E6B9AFFA3E9950
914CB0781D5442DC61E235A20CCCA0AF62E1CDE6B88280D2580EBD61D7CB962C
4EA67FB949E855754BC800985A57640B2B6105B2D2C996F6D445A3880EECE2D6
24A0A5EEF780CEABD8C958BE3A49E2FCCA62822E409FD1491EACC6F092296AFF
00D80D3B9085AC06E2A1040FAF2DE1FD6AFD5FD97EAAB6149568937E28732F66
788A17E10B2C434A2821DE83747E516D07CED3D54476DD446BEA201F714664CE
83D20AD69E65C9608D902D1438E9C14862F5B9D7E218877590C769C1156C7F32
C88BFF4EDE18EC80DF2A54210D9739022860C06A39B492201E3AAF5C41EBE3D6
131603EF1AD7BB91A3C80BD1F932776555B160EA2BF88EB3CC515C103CEEBCBB
60CF7B9B31610B918ACBE6C1B4F5419C8704101CCF2DAD0EA820F2C4A2EC29E0
36A55D98AE4F2F7798E441130A27ECE1919743A27D8C11967BFB5DA67FA2F7EB
9F3E2FB2F84DE3CEAB2B97B606A0BFC6874869A86E3A570E2DF20B8B48A09E24
63A388E3D7498A032F336C94C4D72CADCDE00D0F1CE10F1000B123324B81F66B
94E111D316F66105F277E5B6745FF4A5CB0EE90FA42E15294734C922ADF76891
CF36EE5A6C9F0FE755DDA7EECB0F135DBDAC33218BCA18B0B8D728F5EB7AB0D7
C7210B0256813F0E2C08646BE73DF766E216FCC9E0D3B13991A130805D2D18AE
3897CF65C8389617F534EC699BB12C33F00195B2619C7CF300FAA3ABADA58D1B
CE5C9DECE27A33E0A15C428AEE554903D3BCA3A994480430B3817F4C87A42296
F8015D26518F63510488252D55642E3F3B8CEC5F62621DF565C08EC5B4DE3CAD
BB53CC6A863D33150646C3B199E4E4DA535522CD9B9EBDE34A75C83AF1249069
F2BBDCE740367F31FAD328F6A15B0148E05213561A4CEC53350C650C18287C6E
4392ACEE9A1C8FB7FD9395E3BCD04102E568DFC9326B499854BCB7C7CBCD9F99
88D665867EF86DE95F31449EF355650C284961104DE93C35754AB8BB89FD722A
F048CAA68E214A189C6177D8FA9E8E7CDDFBEF79999598E57464E82D184CF76B
E6CC5513C1D6024677A39CBEF701D77D05FCB64F261AD82C4CC5169161520C5D
9CAED67D9869D7CC5684BE0ADB2847347D40BBD5AC1B23C3F46E77E9AB8D8989
F1EB540059C689A238349B82BD0EFB82FA41790431CA16082699BE0D9AC7AF75
85D1B5855E4A02B8CF0CE31B93F38B2FABAF949357A2A5903A5BA40F8E6CA809
16037DB040BCE16A891C5AB49AC0C200FB38A6E36220611A604F7E99414CA31B
0BE8A05CA56FE842051FE87EC913E4094304B195764305158EB48AF7F083C785
1D5328D6D205F19A648875924147AFBE2E6D1929EBECD716C6D7EE18FABC752D
7A946387E6DF677C977AB426EB6CF686087DE12B3FC56F8A3020EC96B8B48C55
D6D0B9CDAD690F8976A673606372FC995A2BBF8251E535C79F8A2DF891E2EC77
69B965DC7F3D4A20C36689FF9D753FF4989314E161922661530174737903DE67
E775663B85B3BEDF0AD31AD80BCBECCB2DD144D59AA23A265D273C60C32D8DEC
992FB8783D6B96BED7E150B0ABC19457CC6C0C6036B1526E7C70D01851498AD5
DFBBDFD2AD3A45C0FC93D273C16FDEF7995FE1609C8111412825F41ECFCE0BCA
12B0D2FDB845B8D40548A9CC009B87404941B1C18BF3AC52BD2CD7830F2C8625
9D60B1008F585FD03FA898F0FA2804E0BA140664C84E8D514660A5434A2AD96A
53C0EADF3FAA50FE43334F1D3E8E7A1D220FA70EA9CBF0B38D6DAA1168CDF13A
AA0C951A08B0132327FC9AAE3322228A26B0376899F5254F06E2E9CE1A5F6F4E
98AE34499DF8C812F1549A64127BC951DB04055489DBA72C24342D68B5C88F08
50258F70E467C0A77E0A3D71A628ED2C5458AED855E91ACD80329D8AE47B8A92
2B0D8AAB4E42DE1B24F8DFEFC5DDA28F18BCCEAF2AD29C826602033327589A7E
01A03D768AFEFF5E808B3F760DB00C4DF1F7A259E0754BBE846417B4E3AB988F
FBBA9B64E0A2CD60D97715676D05899BD474843E3A99ED6986DCAC79DB20904E
41A09C852DD76D9D1546488B7E05ABAA458C5CE797A3276858EB64C4052D3D96
A3CE36F0B700EB6704E48BD3E0A0E74BD4EFB91C0F6EE88AC486232CA6612E23
D24F35302E3DCE3FB1ACFA385D9CAC57566163FCCEC2157AFC8FDF16B78CA989
54123ECF3A49397E241F49FB97F33B3BA70ADEE45A3A79CC5F7ED4B329F1E198
3859FD1BEE59B17E63032F15D6FE8A368B398CA9379AB1292756DF706312ADAE
0DE1BA31FB51411ED41D825CF153F8E257E41973FC8AB4B56F00251395F767FB
698F733380DDFF1177314C326BB19FEE02D4F50615AC4FF3F906E9D890A8263F
B0C59B5280873E4E6598AA9C9E43322A60E0B185C99C966742BCBFA2C222B3D1
12C7E51C107F52B7D55F12FA92D04ABDE47EFEC71E4973F629B392CE3475109E
24A9CB97D72FDDA174C3E0F92D268D63B559A404DCE76203E40E39A3CFAEDCDD
C84FAFD1AB548A688C4F78596130895CEB1E08D9B76B4AEC9AB10D23A71396BA
0A0F36494637BCAD21A297C69FE7FC09DE4E7768D68B27DA22E569BE5FCE6EDA
DB8A3512329E3473F6983DF6D12821259A3C2BEF198E85BA6F0370AA38A32C33
C2818E0FBFD805854E1D4C655A690689B7B5A19F8162E5D8454B7F07DD61A4B9
064D01DD620E7F7D63E814FFA7D512A5ACD1DEC6D8087016FCB998B95F194BC9
B6E95BA14850E75FD3766C8D058CEB08DBC89FDCFE829432331073236BB0A16D
8651341B0180318EA6F8F74453C82F5F25F7B6A106B79EC06C7B364E6040B557
C7D6B0F7E5E5521E26C7EA5DCB1279D5327814B63E4301F91DE974B8DD75048F
AD28522D7DDE76E26C270701183E0047942C30D06A3F3002DEF40DE082B544B4
AF7127EA6D5B8FF5A073543EAD99C30A5438CFA2F9D3270AD44DC4EB4988B9CD
A590A100D2D405A7A5606EC5452A69E1CF38CFE5F50CF4707C913D7F009E6211
1080520DCB21D96FCA0AE67C01FDD539DE075AAB0F3F214029548ECB03F2BD47
F24840FEBC88BAAD3DBC74CF2C7FBF0C76FAA4EB347390DD083464CF78220F28
E45A84B0FF35C585C18B19C61B51CBE65CE551BF6619FADFF828D9486B7F8A14
BC0986AB3D745438CC326BF63BA1331B9C1D9CFE9B875E8F942D6384366C54D7
3D83655895D321F9F0E05BCCD097059201A0A981BB4191F5A5700F9070E60CA3
84045DC239D4F32E1ED1447846216EAA9017CEAD458F7A4D93E6230235332599
5A9C662760414C01404043E413839CF8C96D57CEC3919419478EB7CBFE4FA275
38E2780FE896E01C6EEE60F41970D2F3C7E76111744C5AB9164ABFA43D98F03A
5969A65EAC76ED7C42F48FC144EE377D810BA7902B7ACF7AFB47225F6D951949
8F979AB08B72AB42EC1568C7387DF84047386A45E5EBC9E125A002A6E1670ABB
B617AF8C93AA8B50BBA0F69C64A315706D38591372BADACF811DE96CFDA0CFDF
EEC52BF01E44723D3E0C74580FBD3AD9D5639E3D24E6C41BE139B761890E3FF0
13C70641EDD7ACD77C30FB52A523A63E5294B8EAB30ADC515E8B32888E7CBAE6
92581563B7D42BA2E6E677B95C8A900D21882177D42806D5DC56CAFD7BA86892
B7BAB3BAB4AB20D81160B6A5A4468B2B2585EEEF01CD882063EAF33D596D7A8C
DD807B3CE00CC05F6CA1D87A1C83530D8ED0AD81BB4191F5A5700F9070E60CA3
84045DC239D4F32863D69E7127AC4128988F493604E1BC8DCE99225BC7F4E3E5
E7B76996E1D85CB9B62BDE07EE8346E30F68FB6FEA4D8AC7A08A586B816A9FBE
78FF96BF1E3CD5279D766B8209423447A8D65255FA160E5A73F58D41D160383B
6496094E1E0FC28F18CFBF2656D0A5F8453F45B79EA697BFC582EF3A79C9F067
B1C1D5C9E915592F7FABF0CEBBBC7FDAEB7C853A4B7B464A26A459F4A2593310
2505568FD38A699B6F5D12FA5ADF74710D81998509EAD3CB8479AFF246CB315E
B1D5A0DFC029CAFE08AD0BD8A7B3C3C6AD3E1BA62C2CD5C22EA42545D0BBC786
CB84071307C631D1EFD0526D78F2CAD37D9E52911D53498066B05BE4ACC809B0
EC851E3DF647BBA2684C5C2EE1F17F3E3AF4F2B9465A27C53F34A8AD00327077
74DB00EB977319EEEC95A7DC4044F60BD2A1149862434B7002E649B2FB0F4F64
4413C2ED9D0848242FAE8AAEAC174E13353B6D8FEEA3D9137DF428A563CF4C56
77613BEA94BA02909D71F2E138A6E29C9022DD472018166F27FBFA72EFD635A0
C98C9BB1216EDA7BC3094324CEA4FD5A951822B88D4D3C542F83821C56B4F44B
70462F9975A6E314A0DC85EE552380B3C65806969DDE440BC68EE43F280DFC8F
CBF2B0D464644727B8F99841EAEFF1D1139D8A35ECE6B4364D9758FFBC1925F2
D660C815F17983702788B552AA8A148EE6D3381A60C9EABB784FE719965413E7
0922C775798319F29DA8C996F21B95EC298B4C5C98084678F4B0E7A983AF06FC
F09E37E9D83826C781804806823F9C2E8169F93C1362FD1CA679E9372DD0CC0E
22DE174FC769F639D589612C93B39CA0EC2673CFEAD8AF1AAAA2C95D32043C84
7D11D7DA737251FB47D0B21212E70A0939B9F83BEA96C9925A5BA00548A3141A
3981955A3DD467806D6753D23390AF0FEF7A9FAE4339270B8C5D87698220CC29
F4A3B54C712E006E1D6BD993668999C3AD55259B918E8AE8B2EF2E39529212B6
5E7565AC5AF02535EA834B271794C994A3F9821E4E9B9023B08C7CE8D6A21FA2
0D44F2E50F091E00982F4FD83A14682E0D74377FA1D9811D78900B7D347046FF
9C2A9DA7AEE1F42E36FB8E5BF10131BC8969A7E52BFC97C3C1CC59ED40A9774E
74234C0A8CCB717FCBA052088FF015136D44AB75775042F4A1B5C4BF78895E49
CC6FF69C287D243D1823064223B30C1DE13371A453BD5E8D063C114C81188DAB
837AC5DF2CE86DDB34598B8CAED5B6DA81A6C816C7475374C769221759F4F112
4070141F4CD01914C01DBBD3B78D42DF7783CDAF3688E57564736CA6775316D9
2B81447AEE3B20BF39D2C3956923C9DD71A04C7A9CF032A8B59750419811A938
63E9697071E14D3267A7FD5A42D036849E7EF3CDC194DF7541D34D08480F1A1C
A16F2E2F8DFC3F27FEF845B6BE5E2D7E3FEE447977657E7523CFA8C1579E8C0E
01A1B8EE9BB2CDA455133F8E7F06D46E13EF970ADEEF68329D5CAE9EFC75DC15
A9494E876104F891E432E60DA31233D7314E18E98E17B68924D0EF745FE58AA2
8C5262CBEAE15984ED81596EB2039CC1A9D523C2AB0C2D8ACA80286C639DB8F2
6360A8CD13FA687EA73AE445AC583FE784CD69B918457FC63ACB5FA24E41C9C5
D09F65A6F56EC07545AB05B3175433ECDF6F8FDC108C00510BA9F24361EA4C88
733185E2FC5BD3720DAF78D085F58921929EE1D3B4A47E26C446E0B8F2BECEC0
A3478E9052B7E802445AA7F372F527344AB7B4970CE00316D3D2289389868FBB
2765D46E6C083F24CFE6F8EA77A5D04B06B9B14430A07AB625B16993CE202A5D
BF6296C0D54412312CCCD8E06297A576398B0ACAA04C99BF3F0D5C69A5E8EA1D
48018A4D4D2B0BF2738325C89AB1AA693C18F2990562BC36359936008697985A
C6C0E4C53E15E091081DE21AF12C1240C57540E73362D1F9A09044DD5C91896E
629F88B5154687013151452CC2EE73E36B4AAE26D44CF32E3CA37C0A3C956D02
51A3799F7AC8EC8C819669B9C11CB98612D45C4BFBFED2C841F42B1FD8ACFA96
502FE6FD8068F002D6E1D9C3FFE7E5403F304CB606AA3C0CC50C7A259AF32F4C
81D9B39470D9993CB8B42B38B7ED6634AFE0B2C249699E212509817638845FAF
5173D416B3A6CEA55846C3FD406C74CE152AE8FD19CCDDCCE9A4F454633B52B4
45FEA99105FB0699485952B9E37276C8B62F82F71EE259411685F5F363A593AF
59646F6DC488FD13E33323F969C14BB2980F7880873FE361EC1FF295C9CD39D9
7DF78A991A8AA43640ABAF6B71B20A43B58E76A1A69A835DBA2C92162ADBE102
CCB7071CFF50612695EFAFBC424FC5CFDA2EA2EE5BA19AC90B8749E58A7CB4A0
8F719102D33FC44E4F60F1E032C33BDC58528EBC5B96912E91FA3FB99C6D3512
3233B7F0C5817DDD68A0421ED9E9D07EEA401241782D7E93AD542EFBA0BA4543
C27621FDBA8095A57A0ED59D1FD8F749B8AF4A760E262351B93B0E6FD807A859
AD9FCD5879179BB4505B7B1FDDB27FE8CCA96BA7BFCBFA62794496BF3E3B05FE
121C6CF638019FA59777873D64A78C27A3B3F9DD419E5D0087CED3DA9536E8E3
F43FC7476E29B41AD045AD7394E7AA0197EB3648B68FAD548A1F010A0D2854BD
75F66CF39169E60361E855523B4D169535C3A393F72F9BC6059F3AA22CFDDC29
409ADE33D6640B858627445087F076E399B82F87FC6E2A968DE0F4D26B30D7AE
A11F82A61DD3FADFBC43552E075CF52E6F149345C500DE1660CD2C4EB718886E
4FF6A9F8F6EFAF9552AD1D7CE7F384C6E8273A0A358EF12B2D5FA77789F403D8
0BC3F9827474C3779C8AE4A89B2B8ADCAAFC569580B22876B264CA14821AAE50
A011D7D48BD7C9BB2ADCC1D5EF901211A4F3E9DBFFEB7C118A262B76D731AE8F
617B133E0072672EEE0702704C1FEBB6EDF4FFE3FD1A7179364678410FB22651
47CC48EB782897DCCA20F9F64BC69325A128D90C148D32CA4BD058F155500605
05296ABE9C50A140E8BDD2EC94722567E6F8CAA21317E5BD575957EE982F42F8
EE85C18ECD99D1036E49FBC1B5C7D6072816931040F6C3BA06E71BEA1C640181
90825713D5D13DECF2FAD9DBFD939B0DFEF5275B9387723E2CF9F6CF2C4D2EB9
42BB3D915186E222EF53C533AF3B273BAA6B122954822C27F9880CA42AAC79E8
25472320B2ED5E62B161701E73234DC803CFAF7C88ED35A539DC0B3940FC38A8
21AEBAF5D0C7E846542A358E0B8F82D796ED1BDF199365941F774F8CB1F07D54
98B68A580366AAB899B1D0192C7D2330D65F128C47B2481B73BD918ABE71DD28
D15C2A476A1F590B805B34823811DFB2D6043F84F490F9C8A22669C96B4F9C67
5EFCAF37DDEDE95D2E26B67F52F6BD844E38D979F0A73E147D487175C1343FB4
93F3507EF5D8E83EDD5CEEF1219E2011D5882CA13BA85F3A2B087A857F580967
598F1A8A76880DE72549B225B16F3C658FAD48846DDA151B49A49BB5E30195EE
E427B918A4003EE06F58949C5D490EA4FA7D62401B6960B67C6BA16CD195B8B0
D15F068E2A3F062D83619B6A560F791D8A6CE243FCF8CF14E88D9561353CFB6C
402F332E2F5724015EE25B879433A41FCA23CD0EA64F1F4EA0E002D8B94CDA14
4057B4D5F9FD416ADAF8EC00314CF01AB198A63A8378E88CFC8CF4BC1D68E7BB
5E5FA31C7FE59913F4F347AC795F33F9B507A130D3DA2D04F96047C1326B1EC7
5083E98A12DD6B4B628B58EEA1933D71C74170A4A90A0A46B340B4A942C5298D
45E76181F6CC9330D1886DA0E4B5B9B847EB5E4C355223E7ACD864FED15AC6B4
19A1FF22E8FAFE52317E497969DA5959A45A25148FF67A5ED5D62852FAE2AB87
FB3D6939202853B28E6B0935EB6CD9F724281A88BBB95F736F7ECE8A3EBE7E64
5FC6C55C424F73BB55E9EA795D3FE450576F09B34137B9095D7CC63E91F5F54A
0DBCCA6A3AFF2B0474CA0247D3BE3DA38F37ED2146F86839C5C7DFA75180F91D
A770499EC3557EA6A969E84632DB4B0E45FDD2EA413C9018EA39B8D5CDC47B09
F99764969397D0CDDF5F542AD1921FB7D02847D33F9C206A1543D8330BE5BCA9
C497445B9B994AB9FE703896E48D789F8837E132BD5C1E3887E867A2406A1D00
ED8800AA2B2F18B4350469ABAE78B8E79986E1225D981C287FA9B867CD18587F
202F06D6C0255E05FAE3868112C2C8B5C800EA9A482B50F8B7224BC9D6A2C79F
A0D79AA7CAF3D0907ABBF6B25A4E52E70E7E76B5CFEEBCD454B0495D14AF2ACF
D3A3BD80448EB6D0B6A868399E61A203D8BE1615150D6A2530A70E19BB50D7C7
3E48FE1A24C99A0E9277FA3962F38183C939E7BC8A2F7C1DD480D0E267148D37
D7536C7D94D8F1090C62C4B94BA9458ABC2D6AEDF3D173F8FF1B5B55B6D3C774
6C63BD1506D2CF3D35045A854B402E559928B228C77F94EB8381DDC96A2CD62F
B6090E8E2FFB6CED99027377CD4924BDBD41D927875D4AAA2F0630A54161A8C9
2EC094734CF97059C9E9EE400204F283E6566760DC5F76FE4F4EEF7B32ED3482
DBF08A43A5DDBC57E1F272813DF7B7BA6C60290C646F79745A41552F95F74536
C803FD0E67B1A0045A814D9FDFE14D64893669743B6BC2F7C99701486E6C7B0E
D3357320847B6C1DB296E14620C75A20AA65A6DC8BC3550FF2CE286B1721B357
D8D5675C689D09FADA9C34874FA8E1F6CC764E9B66E51593DECD161F00FF8913
B9D177E927FEFB7CB7EAE0AB9011CE61C5FC759989760346A03C21E38E9060EA
7FA3DFAD6EAB4221EA8913DB78B64C87434C75560D94ECAE01938A2D328D01DB
8C5090B52E080AB2F5315C4AD78A636F8D5BCD5047F31E4BA86E75B44ABB2307
3C97B59B444976F34F301F293AA9A1A07CC4F2F5AE7A21D316DCFAE3B8F04667
C8781B753A1C2F49F3E394A693BB77E604D90F2461DE49B012C727BFEF8BD793
85E6A66D7B8922F1DEA6111F02F036463A99902F4EE427C99294C33BDDFE7BE6
918577EBD16BBA43C3B063B025F5E50D42E7400083C1C9B860B740F2B4D53A86
56B4EABE3095AF28A4B77D72AFDF3784DC26B85BDDEE6500EE00260B500BBF92
A95806960DF734AFFD732DD289A3DBD48DAA0E89417143EA94DA0BC73701373B
BB6375EA7AB2ED618FF4847FF3229CED950E4C0FC0338BDA52A1542B27824D22
DD6B7DD7BAD6C8CF1D70B9CA4381DA2CCE50261937E9AEBC14D169EEAB368669
11279BC4AE282B4D5758925E4F2A77032A2C9E76BC80DB51B351D838ECD34DCF
E9063DE6C5F2D3D72E35B4E3AEA1DC06E7F54EDE050EE86AC15314B5BCCBC707
FA756BD71FF74D8B7E2347719C8037B479BF9176D2E877C9D142237E9933716E
C92EBD34393D4C306556730E3E8985968F63B3D05F76F471A46C3A38E635D27B
9EB2020C908E91E81B07A92AD544D202817FA08CE19229209F81567747542BD1
857B6F5060D3130AF05C4BF0CDC15AC1C6890F75A27B586191E6A3A92959E529
D3851A44695658ABF4602097E351BFE646475A42E29DB5CF911E1928F4BBAB26
ACC93D60109ED9FB2284C7EB7B87D5A0C6D303EB0A418E7BDD4883DC17437B30
6213AD403A0C7538708E80D4690BF4B02DC685838A4E18BF09005A96DC5D8D10
E3E559B84C1913F5F6C757234D7EDD3618CD33389BB0DEDA50870E63F394C4C8
430BBD1F3153BB1E66022BCB537FAF72106AE7DF76703FB9AD2773972A8075F7
A95632ACC7CA1CE2F6383FC4539D3C5601B5F86EDDAFB5A4165FB7214365F2FA
F0AD93ED476DDF08B79D9D6AD2AC84767B72CE22E47CD7926CF3A92BDE997D22
49AE8F3E679A0E5A514FF86ED56721BCD89F8CE6C17D844225B58D3F4A2A5DF6
E8FD1D4AD339BA55BB19D357D637FB4DDA9E1BD3A55C4D59BBFB7F5EFB232FCB
E3C3EEF9602BA288D241AFAD9B21B8A7567DA118DB4E6B80BBB721324ABEED8D
C1747380E0BF4807000D2BDE7FBDA6681F6C527384BE31DE23DE1125D2F95FE4
EAB91DFB1757C946564CA45DBE230E77E08F2F88FE6B2FE273B226C56FEABADC
DA0A0FA7FEA862CA96A0A19ECF65AC1259DCD874A48BC4898F271F56CC829F8A
3E560518A5DA13EF73D3664F687D37FE586E3F9D0E147C34753C38F928CEA77C
0FE29BDBE9954DD38C1151A012779EAE49A4C4A8C7BD0E74E4B3142195DD8F5B
2A24F02D5477277EEF9B49A0E3E2DF4FEAC551B910E8AB17977A1A7BEA13097E
DD59B660C3B8991F7857064BC3D189A1B890403A3CBA2984EB136ECA5AA00290
C864B2640E6546456C004B780C53D467D0FE46560B44CA4FF989A4D77F1AE04B
8BE27798576A28A21ED866FA75CD39AD747A1FED8C8025F759AFA7A2B028395D
93C523C2BC8084E9DABE27869947769D5407C95B41DE91E117E6D507F526A4A3
3C0380192959F484C83B18DCADED9564846D5A1D808B6E050D73B666D5037967
F52141D82D77418A32F8DAB7553372BC25B88C0FCF030F32CA5B6E0E95558760
ABD14CAAD2542B807009054090770432D63B1C903E51580C5AB417883A321FB7
D218D63E37114B23575DA9A755FA859DA64EABA78F8C85459E49995EC05E1C5D
85F9C2BC97807170F11E547FC3D3A09261C3D3798EDA35F6337A9B8D92F22E3D
DFDA20460C55C375A40A34BF6BDF5B2A677F87FE1DA580CCB52FDEFC4CED687A
947B608F512075FC50F0B56252E25C074B5077CBD24975242C7F1D51886C6D14
6428F9DDA27F83DD3BC7DFF1430B5EA019B68770B8E34759A013BE3F7112742B
51FB828DF363470A0290FC816969EAE10DCB6744451344CF5637BBAE7EAA41FC
95DC1DB50DABC0C0F1ECC2033F5D08BD978194703938BC7BDF2367FBB6044A51
6A18C45A3FA24489F3424AA83D00338FBBD0C8D5C49243CB5CDE3AA2C591C0BA
D772AFE6DA049D04565EC8CC63D2086683BDA65E8298C888536E43B43EE27728
E640BCD4E441E1F68A416E37E251B808A9C18D539F62B135280C0F70D8D75D00
1C7B4D02B951D2AC0835AD03EEC2FB54A4486B7166B269B174B9FE9BB5FE9437
9B638B816D1538EB3D1BA708653BEC6F7AC682EFC326331F40C432B554926A3B
90C568D41F8240D632ED778BA9EA1C30FE3A5BBC8DE4D1B2E64127A9EECAF4EA
40816B2D839042C8DB554403EC5566D6D4B270A06BA454296EC17A81A55D1AF7
D1036FA5C7935303AD6D0DDE22CC3126DA2163A408980547FA5474AE86F48C3C
5FBA2F06DBF43568E64B6783AC3979608E0F6D544D92EC2B0F3684CC2E38D4AE
022E9414A86AC30CD79198DE3038D43DEE9C410358EC203E0B2890D204E55C3D
6EF69FC60D33727DAE53261DE1B9B21B55CDBC9D4398BB4F2D84360AB0D794FF
746A3F92A5534030BEB136E2DED01B58B8684AA0C7C98394A619847CBE1B8988
32903CBA5A5C107A345F72A4771A25089F8EDF4B99228F8DF27DBA6110FB380D
505ACECA36FDC875EF8CB78D05D2660B6D2432215092B5C9DBE4332F71F94E5D
EBCEB0CDFA770759982EB114278D95865162F36380B1753891DE54AEAA3FC89F
4F03274161CE059A110CC3AD0D6F2A44A2252140A842EFA8905AD967B2D46666
CCFAE58CE02E0B25ABDC9F82B6BE0CD9D4CDC225B90255441E9155C36D7218EB
07D98F1090C4DC508EBD20628389456D4ECE6D701656ADC48EE398ADF868D277
777AD2F477516B6676A165AE58B26B9DEE99768BFD8F085EFAA28460323E61C3
4723FC8529F41A2D27877D016B1F58EF688D9DCA5C19DACFC81E5E9F5F3BC175
7FB28F8FD39312BA79A229868F2C81C2F455F4716B8209423447A8D65255FA16
0E5A73F58D41D1603A9965907DEEC3588B74A13E142F6BABAB0A3073E0D1779F
E5D2FDEAFD48E196820A06695A0BCF6EF8806E036A07CBFFE245B4D5889C9730
D6ACFB73B7ECF503EA4B2B7817E986BA77EC41DBACE2826B07DD73D336E5B30D
A017C569221759F4F1124070141F4CD01914C01DBBD3B524A0DD415F312D6535
13ADE6EDE9E560BA16573295F325029301654412E6D469B1819D69ADAFB7ADA6
0888B3CE82A835A408F3A2ABE61D1117202663935BC91CA74D5AD177131619AD
3A45F6089A425F30DEEF5E1A8ABDD6ADB9FEA818A9334BA7F82041E7517A3B6F
CD69192ABBD09794F80315901081B98FF3AC06F5C24B6A33DC92C2206493A436
667331B98B6E645EE4A6336D61C681B410EE69CD2CD8A2F9407624CB6C4FDE1E
B2E566134E05B66004DBF065DE8B4B52CCDE94CADD191D9C5B9FD2151A620D87
25500D0CDB45FADC5143ED2FBB9677F517DD15910D854ECE013F324BD4B1E305
3B3E48DEEFEDFB47D236F1DF488EA9100D499A87C0AD139B29B5F744A095671A
46A4D8C49A6411284F5FA1D77D388A73386B82C8361A6F33E603D270322AEE5A
89F8582BF66E77D02358A005949165868F2DCCD219F66A8E267179A07E3D7B15
B0BD3F6E198B30EF06157E1A6ECC2D6E44036DA3DE4A6C670938D3E7419FD02E
246015A49306DA63E60F1E730852B153B86879DFE1185BF04B4E527C706E1142
59F99364CC80A0254541A3FE4712B1D0739BEA5B0586EDC6E2EB337D5B5D62A9
7BCD03931315E78D198FB6DD459C417C75F38F1F42E5DB5AF73EB73A7B35FE72
D8366C232C279E29E89BB44C19F6098ABCDB06E2D56FD40D8CEFA3E404EEBD87
2519D89ECB766FAB70ABFAD26F89E6170494F2CF2DCE2783D4B1B9284D485DD4
0BCDFCBB490A47B6F97A55A86B68F77C160BB6F3E5DEB7A1043916E944750F8C
E0F1E7226536AA7589E6118B332B7B3B42882AA896B999038DB847C0A7A69FFD
3DE16FEC30880B8BE3BE6923E2EDF90AA077E3000EA2A3FC5A51D3C1504EA556
786ACD76361FFA0EBFCDCE08ADDF149731756044BF3ACAE8BD6589B20A16C2E1
CE69B430C9E868EBEEAA1DE24ADAFD5731FF7E0F4C5C5F208770EA65282F1BDC
C57C82290F487E07231F5A0C22F4A1F8FEF13ADD9340D93B251BE2DDB7878AB2
780E82046D08B891F62F5AC692EED2C2ACB4FD57AA72D396F607C18FBB59D827
ADEE4BCB7550339CCF16751CBEA5035BD87A2668C28A6FBB81E9A15B54807B1E
DAC16FDF558447CCF3F25B87B75D65CD273817AD9EF1B59F2E39BC7FDB54F99B
E636CB607AF67F5DD1CC0D1186A79503C01528F80371293657DAEDB98F4A35D0
A1C0964A5FA43F7E29A7D6BEA783C0D02790EE255ADD6063BC0B908C01494A6E
3DBD2F5E24463742B088247AA53FE69872229C22D6B8FA2AC945FD3277E1E636
35660D43AEA17DF36603C5DD5F0C49F8B8C539AF5E92D1DD2CF08D65E5F687F8
93483C6FC56D8F24F07C97EA5A80F1C3512D6F1E9A94CE6D4205C18F15B21ECD
20D872D6B0DBA9ECBAD801177B0EFA572ABF4EE6F29D00C325F96526F08D2A07
B4F53B9FAD6199644165A2747A198D84C14B909B92A16E8AE2275E8377729752
9C5ED2573FDED847DA28F037522D515DAAC753E12D73A83837A2A110661C1A95
B667863A506412B686CFE36B3816E7768EC4E9F9B557AEB8D5496C0603C271C3
3EDB0C544D1E8F5EF96BF2056A346F656EFAB9595A6B92B409383CC8618B7E28
A1ED57CB36EC875339EB25DADAA0E1A671EEEB20112CF9181FF3D2F637A0229A
852C8EA274290FC9FABC2ECAAF5700A7F5DDAD62661B7105E36192334A1032B2
379E91017F5588E6C249100E188AF1B795ED02DFFDD151A64C0A415BC11600D3
0B34D1933177E5EADBBBE662CAD3C02792CB44A20B258ED67194ABE9DB2D7D1E
687C2C1AF8F72103F1A7415F526A2CF3C16B800781B16620B074E222B6426D8A
F577A5B7F2B019500E8FB95A4320B92014405AD0EF2B7E4FB2E203561018F0CE
73735F416EFD2327DD0406D7E014791771EE369B64E66EF0136AA0AF07812654
0BD2D435D0AD6CA9233144A0563E87024449D162DDB5D13A00C702E7F8EE4224
A614C899EB206C1608ABD57E5A6E99FCCD4E9D867A7520BCBE8524F4F1D53C8C
771345EEFB47B19409E8133BA2DB93989F72755F5501B7148E3040A0A5DAA88B
32FA99725FA0D2B5E729844D8643CABBA1EE16FA335E299A90D6F9FD0B90AD43
8A22F57B516CD022E21F6FA83A84FB5E1BD1465E84EC54E446A1C97758619456
F282EF53958976A09D4D8F15D1416F2287A3BB0D4C4560D8DF4183D3598FB958
4A4433C9131C7ED025D70571F948225DE8A566CD611F999BA08C6049AE055983
BC088472F9AF3FF9E9436E8886ADB7A8C820E4ED6A1E6B351C971695F0EF66BA
3DDBB7C8C9FC95227DFD0943D0530597C7B138A1563D13721EFC225D77B6A0E9
A85568F1F7ED8B8D41FBE103C6136279B0D43F2A67BC9E6303B82C2188A22AC7
03419C1016875C2FC0BAE37802A884CDF665D0494FA0B277D5E2231591FA9009
13F054A18E11BFC8F0677F7473BBC8F898D0459DD66C8549C5C3A80DC5E3CEAC
D449EF85D68E16B5AE0ACB271D298270EAA54F518FF6356D0543D1C17BA3C86C
CDB1C2DC4C0EC8DD28775C5765A293D8832550A07BD9D5125646D0F84D580E64
A869F708EE80E4BA2C0BDB767A49ED635BE37E23FB873E2488086BA272753E30
7CC05615ACCE79A420946ADDFEE44DBE0218ABC12DD547B396BD23D3AA1B0ED0
0AEFBA5A2A7B677B7E74E8D0B328CFE669E072CDA61AB95EC4B460F8D5182D9E
A24D58E3247453CAD7C3DBE115BCFEDABBA1CE8E49FEC7EA94B7EB5B4F2EF6DC
B912FF552089F383D270C1312811B28CDCCB8A2F8972427A47CE65C55791AC67
DF9ADFAE77B2F36DF5E525250725A95D15EFD0B5EC317437135C5FA68E8FC8AA
1C0A2E529502832B329B1EBC55089A05E75430FF04AFD1CF67018D820E1C9CE1
4CBF5AD328803FD6EDF431C43C172F4B2FCD303237B01E13D2AAAE0E8F21B93D
E201E971AF222C24758A9D002CA04DDD891FFDF1814141805DCDB4DF615E2CB6
4980C415B399C243997B57A05ADE88FBF2D6B94F12E4EA3A9BDB285BED832577
4E6D93399D380FA3A3EB3B1952DBD67DF83AA89AFA5E86548DB7D37F18CA0AEE
C4C4A57FC7997D3EC9C30D109AB27BB61B4A077FADD338C2A01580D84E0135EE
D6CC0DFBB081D7E78C44DEAEF007F7421EC91B233C05C4EFC57DF0C8EE88C508
D30C7DB7017BEF93A6640D1BD1A18C48B4FC5A91FE145FF8C4CA9DAF7F285A01
20393CA672930A53702E62937C18838A430C60992C0D5CC50CAD8B60536DCC4F
9E890C18E8E4AA4B404CB08B7DB3BC608451F061DCC9970506D4A778672A022D
1935DC9687192B653B317A87B49D8713DF67297C00D508B81DDDF7AB87AB7A47
1BB817133799E5AF19B25596A888D7530858B9F0069858293901A0273116E893
95A49AB5121BE8828455E7A2915DAF3D8379BB7312E1C6950255DE162889AD2C
E3DB0B46E25392CD6FC3BEFB27A960CC43B18E5AD8DF2BE90A92E2F1DBDDCEB0
B89F8B1D06278E80D559ACE37590BD79E91F1F373692B89D75C0207CDCD629FD
9A6FC5FB394169622625F2493AD95E1A2BFFD0BB03E8A3B8D0BA678E6DAE545D
73489F0EF522D68614EF84C8815378EAAE04EC52C52383F17A36C62FD56D576D
51D7419ACAD48FDF7A50DF4C57678DAB75530E30256E5DD43ACAF7D1768E07A3
A5D82FF4461C1ACAEC045451980CD65D0ED66738BCB61B03E6DE126317ACD924
D5A61FC316647537432B01750AD448731F49E12F1FAE92E92DEA190D3A5728AA
57F99008E157FCDC9D79CC6D60881693C26DF1ED955316C7438D4366B8BF0735
BC7321DEC56AF1CA27D5175E66EC9D1E98995562DACE57A09F962CEA188C49AA
43A8117C0B9DD6DF82B5C4C610882FCB3FB67ED0DC5C080E7881848222220A63
605F00205C205B35DEEEB913FC942C261D738A72D9EDF590013F0B471586910C
5D32327692DA3F04D0384963F405F6363F314FB76160AF82CE3CB43CD00D5017
219264F47E5F287393BDE1ED7EEBDBF96773D2F86DAF0FBDA9D2E7F9AB662F5C
5C2875876CE1CFE159231A026D3A3F89047579FD28BBFA844EC3FE5000715365
23BE6CE38B2BDED7B82D188B4BFE09FC95EE0653382141E52322B25F345E5A42
6C787889A68E4AC4B42F81DB73914A1F2AF8786E14A6C637920DD28B96E1E4A9
1089C233532E8B068DC248F98C067187E8B1C669375D4A39A4B9A2CE5EC5D739
DA2B40EC33E0CDE38446CF75B0410510BF6C0986B29955638DE8B183E49F976D
08BCDC3AD62B13E1AF63B076ECB3C414A1932FFBE54A90B12646B3A5FE44632B
ED79898DE54B5A3FF6B2339060BE3C24F17A58EF1425F820C9D2D361EEFBEADF
24702BE0D79C81597D49BF022A2D851A47A2D5842FCD3CBABB682FE69863D298
63BC86FF201FAFEFEAAEE9F609047DB5AB1D11EF4A587E569A48CB4193904A7D
389BCD00049F7B93C11BE0AE28B2F7489FB39310DAEAD9DB8587895C5C402C2B
09D4D592EDAA637B4E4E7C4809C572437F24D25C6D3DE6269767AC8C8E508E60
06A9481BA24A0313720ACE3287858A257253A7069222760D7D0013351AADA097
C8E757E011474E6ED4A5848DD303B1BAB79F9C3CCE502975AF480167AE56B7CA
E8B367EF6A965218928C48545178C855960E92C1FB18CC4B968D70DFD13C6223
FAC9AD3120EE6460C06696BB9333FEA9280FC3B8AB50243705F5368293472583
DD53F4D15F219219825BEA068392E9EC16CA0CFA2C35C2588C904D214B34BF4A
AF793DB9E52A967E1BC66AA59E72C1E086AD76C16B90459447D5348941787499
3C2CD9524D308BAA850F7DFC5F4A0A8C97DAB3A309DCEEC6FCDD4B4EA03B0641
FA1568B75DCB34FEC581E5188BFBF724C6DBE270AB50996255936E9F97BA7C1D
2C43FA3D3E9419426BF17DFC2CB1112F643874CC5508A0084305994178AD6CF3
CE058A3D5FC2F1368CACAA1B5075D535AB33E72BFDCB847408D1CE24CF792BE8
8E7C39BEA5C8986EF4AB4CF30D9238EA1B016D674FD5D655E968D0D2343F91B3
BF55375A2688D65F10D16609678160A07404956E7C906469BDBD0776126ECE13
4BD8A4967C8D4CAAEB97FCA86D77E3E150439D42F685E9403866DF6F25481C94
C0C99771491E1E13819CF6A1189F414CBCCC6580590696D0585C6A8BD7970E1A
B75C14BC9BE5948D3AE141749B470B52A16BEE3D3FD7ABC4C8C12FDFDC9F3D23
CA188DAC0F9ACBAE773FC5C3E21A2529235DE4A8E037290EACAB5F6DB04560FE
0FFAA2E7A95D64AE10ED690AE5FDC8E6BB2E89D50BBFC0FB864A538E3BFFFF99
4A2BD75E4BB6D0402E35CE86F040836605EDAD3970BFDD1E7200FE6F7730D33F
2692C1C8FBCAF232FC4C567CFD7F82EE726DBE6FC611C2B168803074D86EFA1D
7CCD206638F69FFC139BB72D6630EE32B6BDE1A2038CCC141F0E9803BBF7BBDA
AEF0CEA2F16572A6AB06A98D112379C8DE23C75AF530BBACF4AF6D37B1FF0A69
D770C6CA0EB548FA1E4795007691AC1E569060D2BFEEF8BFD513B0380993B8D5
2A6546D6920D82FE7A0CADC3AECD739C9C425D09CB50B4B4BE281F825EE4790C
51BC2300C56A6A6FF1C97EE2A865D8ADDB1F58BB6F7F51BE768A7F22345097D3
B7F5934F498DC045495FE30A88149C84C0365F8A22D6F614AAEE0D8590A3228E
A7210E9F835FB1A374C884BE8F5F449D57BFA3F90777391E141ADB4233C55760
2C11AFE2BE15BA500520D97D70B8C5DF5728C67DE8D67A76CC66CBC040648C96
19E4EDEBACEB1DCFFF624E01F41470B30242AD7D07C2EF599D28170AF9399BCF
9021DB6FDB4B486F8D1A112381C5734EE86B0FB93CD0E33DBE464831B22E0FC8
B728A8E7C32AA81D5DE095F80BEF98348268CDBE3A6E650D1FF951D6E70FD1B7
2B69FC1DECD51E5B3FAF4D4E2B6682C3FF51D628BE1DBBD89A7AAB946AF7132D
C40A86D6A0CA26D77F403C06D65B7394BF1FC7D06D391AC2D796F99D4B3778E5
0274F69BB81ABA1EEC1B49E3EA6F3017A57913CDD7960CD3DCE6FDC0579AD9AF
1ADCB53A60E8E89DF07C2A11C0E1F89B02D061B7C9EE6272D679BD9DF99EED9A
ABA70EBC005B7E807A854FD70F2270129E9537CE44D5D84E9A18DAF2A99D8EE9
50A877FE3D065AE6DEA92FD943B1D0E23BEEF2AE37886822F96207A011C77BDE
D2B8F8AF3E78EFEBAFDC88074933F8A6212A9555DB7E62A74F7AF17554C98186
84AC2CFF3C2FD4893F5877A8561FC3B716A8AF83B9FAEF975CAA1FF1A1317BD1
8D8E2D9EADF26324E6856C1174916E4B587EE40C1D84FF3E1C152FD1DD1AED48
BBF2B65F5D053BC247765F377C51A8FF392A822244F5550DDDE2FA03948C245F
DD381DCD880E4FEE1806CF60BE8AF5ABCB55D2B9B2A3B7E520FD5EBEEF83D696
C0FA27B86904477A22C5956B9F4F58E4908EFA20B7551C67CB65DFB3A6A4F461
F81E930D074D76A35F19891E3842733F8AC91FDEBDFF9B02991071BCF4EB1F20
0B6A2B575E124ABA8BC9EB8BCB2E28746BE164AFCBF8F5E8058815645D2180D8
C19FD9507AAB3A6F5F1E07791446F9E9D18741DD7643D81CEF663981D4C77975
75C9D319B53086DD9F4FA1AFBE7AAFA88E184B027F08FB8C4E85D8F183D2C20E
7518C87355CDFFB13F08DC13655D7241194A25388FEDA8896ED4426BC57B7C49
7318CDB711169EE774783650F59A0374BB54A1ED4D5D3EAAD53C17F4BB21DB58
148E2064C50A9F6A81125DE0B20F41B614C43F8A3E17EEBDE48A96129FF37148
A4F8A3163A86130EAAFA6559D341D2C06B15B9989CA1A9335BBCA18349AEFFC9
A45F2E06AC34A1963C88484F6200033392BBDB3D0230505613CDE40BDA790115
7A5FE0D7C76E8BA15289E4F4CB4579DE212076226AB00041716E2E8A6D3A83F7
95C24463CC5357F755C48E49F4F1034A8645A68D436C4B3B05D9C17F15D490A7
0F55BE1A6C135C1123CB216D7EA57C5B766BE0F3D7F6438FA7E464BFF671439E
45063D94B1C0EEB4C75EB7B3A707A6D447DAEFB6250ABAC1656D6C58C85D379F
973BD6FDB5D9614FFE4770E2D14125F609C0F565C8E6BC119C8429EE319B1E09
E4044F8B211549D63E21662A9898569E109D05035ABA29A766F7213A59B096F9
573543C0DF7639C25F8835E33DAF3DF2F6F64C92D54E2A04A2F2C6DE7A3E2D85
412A6B40EF8129335C9340BA899EBE5BA3C09A5EA9022DDE36A1D32DC13EF721
BD656F5752CFDE450E7419492CB8924E2A7A8B42B02C25CAFE2EB3E9292F3140
1F18B7A460A2DE4498F25A81DEC9360CB9AD88152557EA0CE391699ECB7795D7
7D73BE33330D2310D88D551341DFC0FAAD37018CCA129A4897876302C02AD891
11C6F6A86232F92FC49DBF4B870C28C308C0373A7CAC17B3AF4A355FBA4E4E99
A88103935A91A910B6AC680A8443FAF374AAEBFE99BCDFD32EB647D987E14238
044540635DCD14388C7164E96AF3E71BE046AC145BE61D1F7E05D35E427C2DF8
9FFC8F337C8CD0510F06A63566E4EB2CB55AA8D41836E7D79DE62BCB02AD2276
6F99A555AF5A7C62B29A667D82CC8B62E2101F579D727DAD1E967D5ED6565642
8E2AE9ABB2ED239303AAD05165D1F22B1B09390CBACBCAAD5FEF89E5722C14B7
DED7E9AAE85B0FD48987D885D64EFEFA51409FC4D512C520EF5235E1EAD70820
A73DDC800C45740A543AB3F5D165D628AF8BF482F17156F487D03CEF1C4312CF
8BF51ECD810D5C249C164B113A26FC69AA03ED308F28A23FE7A7DF7F4EE6D261
9E6972FF513DB641F42A787D55EB5C5481EC05510082BD8CF0A1B8BB3F616533
5C2E2D45A67FDA34DE10D99FA8A5AEBF9FDCF0D0C98D97E9993761E296DCDA09
7E8C0EF2A22C80CE90879E1206F6D82500B4E4476AE7277593CA5D811ED13CF4
85B3CAE0E09EA59B0CE2F3498B404DAAC6D78275FA2419FFCDEB7CA8C3FAEEC2
FD5A3D2AA01AFC9DDFC002A3F7A882575B6426A82F101D8FEB1CBF633184CB85
7786618427C3FD501865604B85880B053A592E36D0A0439EEADF2729FD3E48D7
EC7516E263C79D6A97268DA464B57C9DAE510F7C12F9E53A150D29B92CECA783
F8CB98D7603A10E2F8C3EA53645E2E7FB17FA52F6950C2021CFBC7F3914AFC8A
E0EDD3B2A799A6FA035D98B392348CE2832E27937D3712B626E7C8B5F8709BC9
CC5164A73ED747948E27E1F2FA81FE54BE6C57EF8C2B2E460F086E37CF0518B7
AF4FC2F56904C2849F7F05BD9E5029B6CDB2A53EAEB35FA5C74AAE3A3CF4BF3E
3E7E1F8D696ADFB0C7D3A71BA2D3F48A9951FD6B2822789384F7D9EE8BABE25B
4DF76423A7DB7ABF711BB0C7C703843BB4FDB6F24D9DCF7630AE1F32E2A5255F
F980420131F5D01C8D965C477B14256AEADF217F5E4092D1D03ACD2FADCF192A
CF8D04EC033C9F923DBBAA571FFCBE6538892DCEE7F8B7BC7F8DAEBE2F881355
6E1640562B8A6FF2A374421B208CE7AF43956360D95D5DAC9009FAF1D1CAEDF7
D190758B2DA4315C703763D6B35A4836A2AA71B39B7AFB1B18B2ED5B28AD0CF0
A7C36886429F9D70DA0C55A9AFC9822A90D62328EF718ECDBFD7503A07500270
42AE2159E4766D7DD0EE3EE4E3041C7296B853D23BB846CFCFC2AA22FACD7BBE
1E6145317F8597015B23BC0E7C0CC67B89834F51A623C6CE6BC46EAFDA0A8E5C
8EC998673E8BBA752EC20192F3F75ED447A2FD360331C1CD8686EBA29BB13973
05685C70E04F2F1979A76D58AD6522C03465C8A95005A3196B4F3318C4B6A284
3D602D6E71452B81B6174297632E4D6D0076E004A1E50F84519931D3DB4472EF
6B297F33B64E1D5B3E5ADBE694DB2F0F49AFBC114D56DCFFF474CE1F37185CBC
27A67ADB398679604EB8066C2169DF9B3D06545DF91D168E2969F0B19E6B0A23
426FB94F8135293307B3B31E53FF3AC7DEDDEB8B58DE8CC9D9F5713F4700B7E9
A84FE7CE3DF0EAD22F818F7FA33152317F0EE87C08E016CE1B60ABA5E90D4FAE
0816344A2C0EF7347C378BA1DB0421C0638C2ACDE284A3B7A86C83CB26D848DE
1C82950B150A66F68C50ADB4EABDB42978CAC19F926AD566A04B24019EE4E79C
6713C13389E8E195970A7FDBD6EA7163DD13620DC3B0519FCA804466227DBFDF
991169A7926413C37502460EEEC7A7B70724196B0427A8343731A864944F77E8
633A984C13321E9E63F80701102BD91429509F3F85C5C4F1D0BE6B5E30297364
B5C51B1B22716CB83D74265B5E62292B44A996B5BE94C426AF00C9A634784AD0
0FA3186F28D1AEA94041A69E4805EC6BAD0FBA8C4652512FD9E712D76EE84F31
D15A2E051CF50D7279B6DD370743F0E87CF2BAE8BA843458CD4BCD99F41B674A
665ACF57843B287E4EFA0EEE9A38374BE4096AE4D664B57F8B0C4E9DA8DC8557
6E10CEA25B2448B02EBFC77284059121E590CFA1AE4F44824F16E6E8478E8BD2
CC9D6BF481EC63A6C40EE6922EF30EEDB860AE7B0B8E760854720BC45BDC7838
F6F9F97E8EDD10139BA7EE44E78896C4058A70968C5783506819BD4EBF569FF8
097701628FEABA474161A2E3EA40FE34AEA6BD0498BD9ADAE3BD317299B6A289
43997DBC8C98923AEC3750511E050C8CFC4AEAB6B1B87D13B7E5E77553DAB5F3
9C2C2E7456ABBFA99139680BA6BFA45767992447C41F4312CFC3142C4CDCE351
F5B5AADB0F2CC97C981D1FC2FDC92B6CF1621A7E769A04C55AD161778D86E573
66125C7E27EB282A865D3EAA0F60274C1A8EE05D0CD20B9AE074243FE51E6BAD
89B94977FF65AB02270A451EDE6BCD949B98D7DC962CD7E7CA0251C4D90C0B02
E19063AD9D2D9CE7778595B7406EA93AD5F7B92A69C30A418D5B00993F8AEA97
F02FF74E8C1B2681A4DBAB5A1C2024B58643C229DCD7A7DAF9F0E4ECDE57FB0F
A418C6C82415A6A0AAE36A502E9F079D0F5C686281128711C93F4138C7430364
163AEC6E715B9CECA70C5D50EF33DE73E32509ED556A847B9F5F0C882B5EFF2C
B573B8706F688DB79085F02448E7B2B2BC2518A80B8AF8324E83F46E902C6DAC
AD2D66306AAD9A7F016879C1CA4E377DBA12204788AC5880D8869329B1470B5E
6EBAEC8D9D2A138B5C888DC44FBA56BD7F5EC0F64B9BAAE90D58A740E1D67DED
CA4783F2FDE136094A60ECAFA03C48DF5A6A65F92D2E9EAADD4AD4625DDBEC32
41C39E5803CB6FDD90F0D3923F8CD64E9D0CB16A51D65D864AA64BE7448615FF
B3F1D2C0C3652AF4C000FAFF6840039A8E14AF9B52C85FBAABE9CA584C935FB1
530A0E95D0F1EBF808C86F40C568FD2C1D531B4DBB20795048634B150E4BE1AF
8DCDFE86193DC8533870BA39F770AFD6BB23364D5C226284125367D1C4E079AF
51BC935934801B499BAEB0810DD72788661502A74D4D914B3F50E40722E161D9
382B083EC3F5E9C7D08C3D1563E8EB0337D779DC654F1AEC24795A15A74D0311
3B2FD8EB13EE1C12324EC4CCF7B8678114BE344646CCC1AFD060882B1871CE4F
9FA406446CA8158F3EBA0303C4F30F37F3ED78DE404942A523C47A1DA7516444
3F42E796539615A166671288208AE41EAA9E53C7EA1BFC2505BF53624551E944
72DD0C0142A4E3B2E38B220CDCA87116885B5750C3B15DB6ABD61EB3022DA326
8555D4054137C68848E3CAEA22209415C7798A642C13CAFAA700A60711536271
E371837B1D531E732F69C39C59DA8E1FFA560C13EF23943CDD82E063D1BE33BF
3AE9FEDBDE26BE5F48386D6C57E4C3772EA9FE46C9D680BCFAF9004BBCD0E76B
BB06AE9637694D362DF85F85802E0D5734D80553C3978D6D13358208FA1946A8
6C8DFF65A35D63812C0609A52ABDEB97825BA94A4B32AD7BA805435AB38EFAC0
1F1A052E2320AC1B0754920B9680BC325148245E2BE87C414D59F9DD7BF7B2DB
2BB5F073CE737524925CD641F360719B92DDB84789B9309F59BF8BE58B1A206C
B7B26D2469C71B91D49FC3E4FE85EBFAE5E8C8CD5BD5D492CDA840D5C6AE973E
91714997423BB6C669281D10736819ECB9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D6F6BDD983146333DDA29DB81DA54F44DCF5364857E
A20DB59006F78BA077D29ABE7A537D2358B1DC13AE97ED90F7D1AE27A1CB55C2
F534E2B546BA5531AE88840CAA741A57ED1F4587A72E74AFA15F15C69046ADB1
B3B6C392AFD856716F96B850D6FF61144F6A9E51CC1B8A86A35087D4A3A37081
D7529F94493EB4739C267B8C54B3A1FC2146237C1D110D4A10112D496250647F
37A36F59299DD9529CD003AD4E0847689E519FBB2B7796420D8EEF6ECA04DF85
390E261B43A555BA97B9F30C18F4F39F192B2A2CD3C1D68ADB1867509CDA93D1
CF858DE8EC69D57E5A7BB2741F4713569CDA64AA18018935D81D1ECAC3C42C4B
6105C3B521226A3AA2ED3A5EA5FE176CE753C04BCA19E4C4A11ECC428F62886F
B3AE8EBC12CE6421C3E633443649187C8B38E5EE9428E1E533FF1260DD242EED
B955A9E3C2F73B641A68A0EF3B9E26314B306649FD15D7B593CF3F02EA2E6627
C292001D28A40628F89D0C92DE66489694C976E71D9214BE0875849A35084581
5873E4D6FF4EDA98E456F41F67A7063A2EF9ED5AC30A07BB8768BA5FB2C1EE44
7A160AE2550F60FDD222B65748644DDA99D93E7DC65A7CED88177BD120582479
C07D3D44A06196F25997B19A302A2C2369AC6512762AB3BEF08265F3D767F8E7
C13F9FD63D8CF4BB41CF35D9602BCA62509DE9B7EB10819562B7EF99C8335772
9A2C4DA4D22D405730FF6A49E67BE1CC0A18CC5C106FD4A3E144D1074D0E7C34
EB9BB935BC5E655B8B3C84A0BC7DA6FE56FB44DF02452CC4BF7E37F9117E9D97
88AFC8089C4BC9E39F564B0C6FB7EABC7BAE61A7E3C6A0EDD7B9AD890D6BC646
66CEACFF195F68E316581A0F0CBA51DB46FE593ADFED6A89D63C99A69C13AC61
6C53A55D36BC22744071D511A2E406B507D64CFF454E3D3A699AF66413EC719F
805176D2A4D2B2C32C4948FBB87C645710C734A1927474873DD20C86A1B5EE88
ADAC846D1D3B6F61BEA096CF365F53162EA8C5138AEC00777307D7D75E91F3F4
EE8EF5F914A1707A9894F308A61FD20D167ED728FDCE51B2C79A29F57AF974F8
20E3F918A2DFA3BFEB23F58D9B53E278CB4806AF066C2169DF9B3D0654FB87EF
BD4C7B753F6E823169F76D911C8B31B07E074F8F00701775D335FEB1B2364C16
4319055DF4B81282E0782EDD5F5B32329244B113D3A4716D2FC8CAF0DAFB63A8
C28130E1591A1CBAAC95DB1854F135C2B69D08AF8BDAC3E1529D72FDFC7DBE06
95066506563F0A5F1D42A2CBBE06E804BB245229C55D43AD2D7FAC1F6D924EB9
18AA5E62E5A3504028501C9323EDACAF4275501F8A8CF9DC677D2EB6376DDDD7
64D923EE55BECA77B6AC16B9A27B3CD5B71E5D9CB70B9AC9C0F86BBEA4E16CA0
1B3B0B2CA52A8B48F33C5B0F997563E18B28804119292866F8B534249B0DC97C
6DA36565148F3FC891B295E7A73C62066CF520A47BE4A727CDFE1EF9A647275B
392C3F8DC504BCEC6716EE42F1D1F4936FBBBD70FECEEDD79B58A570F3054882
5C34185A184FF8283E41AEB0F7B210A16F187998265FAABEC625523524D5386C
3A1DCCF42389A260FB4BDF2F5BBADBD746080FF5267505C65011720B3376581D
6E53425C805C607126908C070055BCBFABF73C8CE3FCCEAEA6042AA48E95A20B
BBD0B24F76351F588628CF9392E17EBEE3CF3A7E3B8527401BB80C03D122AD00
E56D15E087AC3B5542EF11AC49FB7B7FDFAF305B8BFC1812A1DFA9CA0D053413
A79D8F4DA9241688196B1A97F96375A3F547B85F8BE5C507310533DE842D1F1D
4E8DB2019C80F46D654E4096C49FB4B1257D1C2F4C7BE32627243D76433A180C
7A387702171E2FC14C3FBF89BC38D83F24D216A9A8291BD4331F71490BA6C23B
A95BC0A7C9D5A45540729DE2AFADCF0A1F2E67026722F1193CC5676B580617EF
C4E5A4AF7CE65F3FEA5D23020B4B017CD82048946A33F9E2E820D33F8AAA2B36
9B1FCFB95711DFA9E3413074BDA7AB0E34A9EF0D044F3A5BDF8B8524F7AB7A23
1315A31A8DE9A9EB3A09BDE315688A745F01E89CE0D1E7261F429403923342B7
7A6DF13EF833B7071F4702254BD686794041DB8AD44AA38527CCD040894D64CA
81576FF48EFEC4BE83963EACB9411F049210AB48EDC6AE83CB5A09C897AEED1F
072DA37974ED8B668A59366CAC5F884CE9D0867913B29E7F211BB08CE15C2EAD
12E39802757BB1E802CBC8418D22D52568764EAC73F6432E47661296772A4C15
2CED7F3696AD21D6ACC2A5C53648CAF8CF94C24746C3FDA1B4C6488FD639AE1C
DA5CADCE0FB4BC742E45043744F4BDC6069C9E4E61676A636AF2649B37D5A56A
32ED009D3B3FF394533504DFF49E4A710C8E53EF79F1826ACC8B02B8725F198B
8A54E958F788DDE11762001EC57E19A01965621DB0EF5C70EF980075207BDD72
4A2E4C9A9957B7437ABBEA964C3A240C5B766CCD10D4DAFECF28A1453FCA942A
422486D091F442CA222FAD2E0FDC832B2B20FEAC326477E598626C381D5D7BC0
FAA5F5EAF3867D0BA210BCECC6D8A460BA78B97D68FDBC8DA5FE4A633B4A92D6
0603B9BD14F6F269E121949FC9F8CBEFE6EAD98DF5B0795DAD507C1399EE094D
72093F342AE160CAFA59D13C27D11853D98B17D15664BC7680361404CFF9ADB9
E9F4BAFC2FA70D110E03846CD81FA327486265ACA3FAC8B55DBF86C2893706D7
22179DA729D41264A039D4B84B2AB59EDB627C42F162AACA53E2296E14072671
C3F39C23CFDA66A3E143A24467F6CF21BA293D9BB19DB3D34B2A3985A7B1C768
0B5C927EBBA6A206D05633B5AD2DF43A32DEFC2D52DA985F00A43C9CD5E48E2E
45321A239CAB567773588B529F1717D7B389BBA718ED5579FE37D43D66643576
0AB1E2968F405AA61FD67E7FE5203510444DE5246335DEA0902EB3CA37EB9806
717E75E622821C7EDA5BEBBCEC3451F99D56752DA89F641AD4C1079E68598F2B
CB81523B28368889B2233A65D19496929AF45708851241E6B05E5DA28E1FF2CC
E4570E00430CCCCBD95E96FD90F5F37EBAD32A03717DB1A6CC2866A5F5D54BB2
0CEB2426F36C43EE1DFAE85B355A7A1052918438D697783BDD47AC561F057B7E
446F46222EB4901D1D62296081F1A9CEF25C1973F5B758C8990E65148A9EA67E
ED1E4199E6ED0E1936F600CFE31824A1129A423A346999F9C774EB877C6AA716
35EC8EE9FB41A343AD66AA4D92370670BD7740E5256754E5D3F6AF971AC53EE3
C47CBC1EDD8A72D10AC2AA3B75415FE9AC9F11B439036630430EB980025ADC3C
955D9472E9F94C374F01887E87997D63AA436618C281E0A0543FBC857079269A
67D3238EC76F6ED2976367A601B8F904C0178AD856086DA913227CB278F36855
209BDF29B929C810B37B2B7EFFD518E17511A5F11C360534D7ACB34406BB0A65
0A511ABC154612DD7F63E6E1D911FEF3FC14B79947DB6F20DE24D81DC0996415
9F5341A42B1D797163917E4B63EE4E51956A7976650821E6960C155A291FCBB3
29BCD433797AE2CDF6178498F7265B86C6AACD265136A34F709699EDF33E7640
0D42DDA95B3D53D587A1FD1E170BB872E1CA65045BD9928A209FD652E9E3FF82
B77D509EAE56FFA1568EAF86880C4FBC46635C123EA09B990C9336C564E84D28
61DC6B1B9E61041653534A0F648FBF989320BC778CD23BDC306EE1639358FF50
E33D9AA1F3C1D3EBA03B8B30FD03D3E799595A5C260D01C38C3CD98DDF61BC4F
A371D512456E16D97231110B4BB0BF0E3E920AC809D348BCCAD1B0ACED830B5F
F291B87CDA9E2283944824DF65A4BC1C49BC9845BE7CDB2A0C5A8133E28DBE33
2F854EF7E54E850F0C128DE5614F4D454F28BBF5D3C08787D7023CB100715AF0
2912D816E76EA16E61C1F9C40644A42D94893286FEF6AD4F32BE2452718C757F
BE4AAF9993CA40F28B534371A9908D3701A53337F041AFC59EE0787D70AAE570
F671088B863E11495A88BF4EBB265DA464FE4416A7FF181104E454FE0C3F7E0E
DC6664AF43A4D881525B3AF19DD61450415C5CFB24887BF55FC6C6B9C059B2DF
6B4CA7B901E2D39003623E763D3B72A4EFE10F7E70BE45
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA853
B843CABA76BDE9582090299F423519EE3AF8F83AE7F7828B314B6E36E9127419
F274E9FBF5622C5E48D7E95664D6C0C1006661038CF2C93BEF1DE34A163A2C86
693A13F4D0F052D2E183F36401F0C29862BC1B36A086524F76C7EE2C6D436A23
7009F146F1756DCADD3F70C51FDCE610E30C0F4AC538A2703423A07976ACA74C
25F4CFD6A92969E206375FB0C672E45948B0E832F2BE688EC22FEEB3E06BBC3A
272F73081A30830AE4214F2F029918FCA40BAEBED6299EDBECA01E08F27E5627
F53BC56F4AE7CE2D6273B27323AB829E2D51672A4990E3AEE84331583A99DA4E
63610AF8F10C50FE6196E3F4C1E4FC9BA6BE0ABDC81A0A7BF6A5792A97BD0A7E
7BBD31C3FDC01D734550843C8D84C6CC0B492CD1A6CCD57428F03A863E959C77
457D401028FD00FFA9BC422FD09D8B8A70446A61CB256A2FA0B59A2646D9C5FE
961894DB8B315C52008B4416AC35439E010BF90E43A05FCB2FBE8E62385E220E
588B7FE5509F1BB71150E159D01D24EE28008D4213227FE9BCAA34364B1039F6
BC142AAB19C8E9B15F0113781DF9C9B3BC145955552A901AEBA588D39D7E87F1
CAF27D315E168807021B0CD1B2CE13B611A7B5FC28DEB4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA4119883BE0E2CCD156
1113CDC4983460A31A70C6614DA60CBEA3A564539DA028D46BD8A6C8E870451A
F92C3A3D555E94EA81503E0D53C0AE8AF190625DF8F48C433C5CA5E61B61960C
10E340864F2D181B835CC0F9C87C9CC0E95FB3F1824BF5ABE0DA3110FBD87806
4770B0F94B263E2C7A3D9DF14D9BE01BEF9882A1EC2C8DDA5931F895D02E4FF1
CAD0158061CC26D5256590E51541844B9AE3A861D6412B59941B7186BC31AAD8
9CC7F07EF9A36CF5C32F54ABEE8B83306227DF64A1F4E9B350DB04B85024FF0E
6FF4C8FDEECC5DF7106C24975E54928A3679928D4D84C98B3D33843CFCBD8AED
A1A74438EFDB0BD68AB2061EF46D65CA446C190A6BF6E0D8DEFA1E8EDDFB5541
473187ABC3D34172433CC652E9B2516AD0EEC9F452135D6AC8D97A90DD4C972B
69C05585BD438731D0DA714733FABC30765D6775BB68C69704D0BA5D6DE6BC5E
10342040FAE3CA1C359295C7D2967195AFD2D94BADCE1E95F17F0F95B5A683ED
8DA83806CBF2B803C94B5A135004A20823158454E29255E8846AB1AB9E444B82
AC000DE047EE32B5C7659AA3999D8CA1D3941D1FF042DCB7834420A2CB78723F
B40B625D7418A892CFEBFF58AE1CD0F128156868B917147969EF8319C216ED3D
620588A8D3D13C4737BB89F1FE17EA91AD0A119E1754916E4957C40F7642AD75
0E847F04D456B101A89F4E76E6BD785EB1F605D78CC0AB1425CEB017B47C1D40
BE68CE2BB94BFFF5120F91CB493BAD5966F870FFA6AE560AD6A82C3B0AF0C810
C12CA6C41677519886FD5CD163D6FB351E2918F4E5B5D5A27FB8E57A24EDF9D7
42EEFF2C7558A4479E25DBF75353BF0CB3E744B9009BFCB1D37E21EC06E4D7E0
2762A656C0E348FB75DA17FAFCFA53893D1ACEFD8C3EB97C9E7E5C3C5A303193
004DF6B0E2446527C65DDDF917C6C8B730247D89C817FB276D85EB671AD64DB3
4BB09368AB12D82CC4A183ED86D2841E499B785084AA21B81AF837A206A50773
FDDBF92515FD7870D5A35EA64BA957FB2F6990DCDDDF2859681D7B7D5566779F
26081CE1DCF8FCBF985B41005EA0771D928990C0BA6CB7E33875B819AEB1EFE3
7A3656C9B2060A89B3D1A0ED127FEDDC4387DDB2E10EF3FA3985EDC86947215D
585BABD246585FD44C7FFBD5B878504A44F08C38AB4A35ED5CC53EE38F810C49
4CDE233ED8AC7E692EDA8CE219D733D37296CEE1118362904F622FC22656FA58
65B5E26CAD7951FBF3D7B27121FF01DEA6F49C7A4498656B8A12ECA7752E0477
CC7F945AA8CA30ECC8B017D3365E4F2C4D6F555DAC9A6D17C263F63D55D6424C
58ACA31C6B17A617B342EC92A2FB13D4FDD77DC3A85B2508B70FEF36DD289991
A16B4097497EEB38F0274AAA1341AD3BB645B0D7F97ACB233FFA576119456D0E
E8D5F85BD47E3C79CDB4AD769ABB374D1B705D61C428B44B213057725969D808
B280BE2A969D2207BDDCAAB6AB26EFDBF7E27A57CE61292AAD6582B3A661F4D4
8AFE06644856C8C9DCCC07407A115D6D45B7DF6929B1C79277F3957EA1805B97
8529CE833B1EECAF947E67DBA704AF3F29618A894235D7DBFC1153A5F74EED26
102EEDB139492E743E82CB61CEFAC99D77B61F60FD9B0C1645E399B20090DBB6
8DFAAF4C6C1919FEFB6E3E8EBF926C2A91C5281153D5B28BEE5E71772C8921D6
9D11ACDDE095D43077D6D8E8EEF114F60F85935BDBDDA3362A11E0BF7854BF4B
BC52EAEB261E696CD413485DF93CADCED318B5FA421EF0BC594EFBA262EB2C41
4E43D8ACC9CB195D12F3B2ADBAA0D95A443F525372BDE229F13C485324C60FD1
D7DFE515B666ED51FB61F69E18AF955D6620C95021DF41F66204845581723BB6
B76B4C3C2E2E5B8584AD015374BE36AC1E08E1C53C079B8BEAA3E0F907086AA2
3BCD6FA9812375C8E8D4ADF7A319E9EAC6238093C798878E5D558B30ADAFC1AC
17B04381C6754327FA7C65AEAC1A2839A9FF799456B6E5B9BF421E82415746B3
63938E88CA325AE4BC6B36475154CACD25A07C74FEAA2928802611B4AAC8DA96
F7CA93B7288B2491380B2F4F87646F6BA42247F5B593A0787ACF533199348D11
730EFF7C25DD5ACD0221075ED47DD6FE8909C387D8F02A88FD24540AD71A0FED
2665CFCF412B99167152D35BC0E671E657EDD876C39BA0ED4E790A79D8AD6723
4A2C9360790E4981671E3F898A1157850F48A5E0F299DD9078866AC4AC771A7E
ECE3275C26835080FD2AC78DE88BF65298A8EB4181F1646B5867D0EA3446F4FA
176517141B75FA51F69D54478E279EC2855938CB532FC260FEF5CF3FE05F4F6B
1A6AC463C1D1A24E7B41EBAD57574D43E06E13690F831AC63F570D466C8DE97C
2E08CC01056475E95FB467E2F3B08917792C1DAFD35FDA10C0E14D125C730ADC
BACC2CBB9BCBB0BB982F75ACF33109F8AE7ADE4954D0B1E1802506DBDA73CFA3
DEC72E83650F240B54E88E51C065039ED16C5B958CF632FAC74FB900E04B0B13
B26BFA8A80D5663FAC4A5C3CC6895C0717E2271C6A3F722B2F6C2CCB04097EAF
EF211683EB8F6FF2306B741C9455B48094D2958B832B76458887F0FD9D971D2C
75AAA237EFCFBE0F14F797E71B0E19D074858D2BB30FEDEF6C34FAC40779F603
770BA127BD4B9E4F5EC52314B25837FD118062685FAF4391CC91AC0ABAE56089
30E599D101B7ECAFC159AC2335D6DFEDAAD93A074010C5626DD9470582E82C12
2DAC32220AEE7C75A5BAC24E9E43AD56BA6B5B915CA1A908C4180B7DDB99E3AF
5C45072D5FDE12DD81276D7304AFF3059366F293191CE257782F236FC2299F6C
60070DD031F172CB2FAA0C0BFDAD40BD3AE7D647B0FFC9298FF9481A19CA03EB
E2F1EEE59A3D6E3FC23B65AED24295DFD94966CBFB46E98286E8AB5BBCC5A8C4
31D8D7BB6D38C459ED7811962AD08A130D7781F378AEA20293910A7716341DA6
4093C33CE11E30603EAD00851CC85FB116890A7C58F795071033711947B65B0C
07BB7FE129E446F1A58F097CC13CA9BC695F782ADBE50737CE43B15AEE7EBCB9
0CE9D7EB1913D307114496116FF0087A48789461E310DE9062984F6951B5AA2E
BC98536501922114CBB2D9698493EEFA925E555E776D6916E68159716FC183FB
83834CA958EF2A4210A873E6F7DF8F113E86D87F7B364763BBA1AA81F9D7B871
D7EAAFDE0578B3E819F2D472E963C4FB539A61127D80FD783E271DBEDD8994F8
A2E9F96F4F81D178EDFD36B63A9E05D8F4BD13318C16396253CDCB9E1EE7A887
8F02E0B498DE9C1A5F110347B7B612146B59530538023BDA6569691729EA004A
3D96F0FBB300F40752DDCE2039C3501C39A9BA928B1D8659DC61EA8FFAE3EF62
6E8DFDABF455CDF54137FD5767DDE33F596FB9092ECA87A3C469F9DC2A963BAE
1D62AAC7FCCED1E324FDDF9D8F218A4582B7A960AE3348951B354102F98ED6F5
CECE5E7AB94E4C153F2640352EBA54B29D78CFF190A9A579019521AA7072575E
04ADB576B153695BA7A1E5CE46859C2DD7FDE2A8A29D9B363576450FFA66C49E
1490EC01CE4136D822D1417AB863C2615FD14A8660B38ABCA4443ABFF10E768E
8F7111B56497589A27735FF35E7B24046953FF85DE78194EB09326163E0BE25F
EE7097C1E3E30A0E951D01191A5AA3F9C85EEFEC49D94E6CE014A1ADFAD5E55C
E850355395BE8CACE75623A92D174676B5E58FB5AEB55BC09B1253748B61B4E0
0C448F26300F752F87176A0D72ADC1049F1BA37779AFC8C0315E0ACBA62242A0
99D69E30F242662DDEB54855AB5A822665960214F59D363D13AE5C18DAD1EB75
118D4690A28A1D6DADB8D380DEF7DC1DC78624C748192FA321C96B32DC21BE36
1D551D1B385BD6E116AB4C51D88BB4064EAEF6B236771B40D48806F82B4B5AA6
5A7A9B6E99FED552EA69501712749E5A5B5853AA7B9B07D495DF21CB098D67BF
C068B6AB2BE77394036C1E47B0216326BA81B0560956FFC4E34068475EF1CEB1
4C9B76587477C97FBB3F2E79514BBD7348B51EB29A8C2600B4AADD0F5E3BE9CC
B3FED2291BCFAAC2BB1DEC83A0E2B7A991B51F8E013966502C52A5BF754C4576
88247EFD0188810C246E7996A913C39B6BD772E8E2779F18D831F362BB4F263B
F9EF4C0597363C080CCD796ED31AAA1DBC5B5B92DBEF4F2ED4D894E7922F4D6D
D0447518D11B4CEF600EB513433961C7A143CD8BAF27A0AFA9C36A4E9C01B62E
F23D5B983D46233804BCD6CF66E574064E2B0AEEF95960D114990524D5DC1454
D461B2681AAC16693FF62D9E03AB3AE26F59F2C3D020E853171B0D1612A3DFA5
264D6B64371277AA3BCD9ACC3C44B5755DD9071DAE1E651ED94B4CDB4AA3E0DF
26F58D771229C2A3A491455426500E410A707B6D3F70FB9B6E9F731B075C021D
B2F0DC106177F0F23E571BF5DD26AA443B6B73E80D855F5EBFF6A5BCEC484EFC
DAF46A81723BB6B76B4C3C2E2E5B8584AD015374BD01765F3100E650C89539B2
AF2E61A62B64A00691C60CE02EF361078A9CB36CDFE0F56146DB8A861E46E024
CD96E0F79C3543E3592283C6770B4087ED9EB76ABFB566467E35AA5C7691B72A
D442BDDAD18F30DB190E4D0040FEC5188A06D85305F4994827DD1017EEEE54B4
81F061EE69C6527835848FBD6FD2D909977882A9A1E80EFBDC62425E90D4BBA9
60C6183A0C7B0266262DD42BF755353F893CDA853C2BB015030D7B406227533A
54C96DB2FAD1B4BF55BEEF99C196F3F3A1CFAE0B707390C2CBC0BF4FF57DBB83
6CAD172881189CF2F40FF2D982A69CE0AE0177D2B99C45E9A8560952054F76AD
C3DBFF181E66CF1C8D5FB554A2F65F830C94637D7840AFC0480B3860E809A67A
4AB8B9C17DCEF9C77F2520250E5F37B5BBA8AB593BA29473B07B9B4A09D6EC83
705AD534722FF109147FED12C18200177C729F813D56D632F88A4EF310F82499
6CAB50A0E70CD5AD69A8E0A853C02606DCF3DCC9B44E707FC2CDE157EC885EA0
000B6E49EA8C144C8F161D0C97AD763A9984EF36254D60840F1D27C02F470CD4
FE38DB53C9751654A3CD885FDF9CB1FDE0591CAE397EA2AD7D02924D28F0E623
F2F6BCBC8D113354383EFA653E29CDBE7BEB586A6B3F98F1001371EEB6651EE8
A2DBE8C13D52F1D7C715543A52E979ED23F0C381C4838F3CCBDCFE61B2341904
1344C543B3CCE044D71BC8B1CCE437A1D4749B3DF4476D6446779B23795550FB
9C592FC511EA5784F53B487900CE67B48EC95436E8F813C093D52026755F8851
85BD27073E37CF15E87821569940BBBF7D2D874089E71163335BECDDB3283AD2
10DFB235327779649370B599FEBFEE3381039097FEAB7D91BE5CA1D916A19EC1
92E979852EAEC1D621492AE6D4412493E0CDB4B6F96654DB7995DDF16B0AD6EA
4BDB87E110D76E8A7525B1389A6FBCBB36B4B1996CDB1B3C1B48B24D078D6E76
CDB0A4428FFE3F0A1088EA71BD2DB74105301D095621BF7F4CBCB931F9ADB92E
0D61990B09C6A749C3666BB7EDBC6AB5DADCB2E3143D95295E23EE37E497C4CE
67670C9882A8FDE5AA396EBD58CD1FC98261FE9546C44C774FF23BB4F42F155C
81CD0A69588E4AD3C11D0D92D1E3A595BF037B7C03061B9E7D322712D7DEE63C
22CE0688C128E91DDFBEAF65EB7B28D41FC2ACFEE9D6D55AAE94D4DFF5DC38E4
26811BE86A560B49BA721CD63D785259C2FFE0C1EE9442889AD25165226B49D7
050D44AF017141EF38FDFA07FE94011A0BF512C9250112ABD68109FC551CCF5E
9DD8D6D3A5DB1E28A4B5BEDCF9AF7F440FFEDD52A48A918EF0FEB00E6F5C40FF
92A66704671E550CE535E60BE83D8AAB025DD37D558C37D51209A50DC3E0E677
2D9F4081BCA683FFECEE5B7BB6173763C2E6DB6DA403BD4C7F84D1B05302F5FE
7082DFC0776D805802E326E02DFCB88273A36FA3EBC622FD1E0B5232FF2FFBB6
7DF96AAD1694ABE315FCEE9A3EC7FA5167B3BE85FEF3FF5C349366A23D445BFC
B9F5194642812FC3C2B9A4A8B921C9D806CF810056FFB04FFF49FA1E0A7F252F
CB0CB706821DD89F3FA8506F268809EDFDDC647A3C41FD3C38D3ED615803F7AD
C6CEA91AB7B45CA7AF8DB57AA5106D63B9AD271E681133A39732C72F4CD00E82
6B2CA80938C1A7CBFE350C693B23476C3C77F0D21406751D2DEF682ECEF1BC56
E92FDE53A26F9395671BD1653E8DF6C273987CBA56DBB99E2CEB0F7A54B87129
A7365B3CE172720D096686CB6BC7604D84382347522297D1EF900E8AF4C95C7F
64567C9D80D1829D7FE5F45647ED6B99C6D96B7790D83A01C80C7E195EEDF6CA
42F8B32E1766E71797E7119BABF0145D6824F051CD6391BC93472F780F0AD257
B1FE7D0D6EE6721F4F33BA41B670AF286F43223A8C195DF77B2944603F47BEFF
D06259B256CD1A08F629A3798B4018CA0C7AF81DAF1E403F552653EC2A9E090F
39FFF2414ACE57162F9F96CED4305F6E30A982C30AA9006F0DF331590F567D1D
45E31B8BBA96BF55C9C28A70D205D41A6B9F33B860FB6FE9ED851FBC935D385B
C7A3DC99DB3507F1F81968EB88119A375D4C1CC45A51F4D95AA1618380D5DD66
986E77AC8BDFCADB3783908FAA63F7A90AC16BAD16D41CCFCB9F98E764295991
7378033C85592A0C3497A03C16190EBDABB792C9575B056F82DEF5E5DE6C520D
FB49F8C9AAC43057DEF2AAA2C007B57A0804C7B5109446AC568DBCD7E4C1F3B4
4208EB77FA9E7FC2A676500E19C782F3251E0B37E75AC2E92C115E57BA7F1F6F
C86C27FAB634179A515FAE8AB259EB719E1F850331D50EF2E7C281D4235E59F6
6D42485387E9168CD6EEC10C70E602507FE411657A64143555671F08112EE95B
249B7A07735A368399AAB302B5459C4C427F2A440692D6B4EC91B8324D1B1111
CF6555DA1A22700A873237336B7F31FC6FCFA81352B9B54AE78C9B2B1F9096DE
E84232CD4B0A794D061C547E8F1798A64F9917FF908D97D255D19A4CE2EF7161
4A3A93D4995639E91B97483486C376CCCE5866A2B146A9A3B873938F7874C50D
3018716A2AB033126AC26EA984A4660F22D390595911A900FED791730987ACE9
F2A8EC2DB98F85783C01623FD3612C7D922F4ED0A53C6BA6B301D3F42EEDB6BE
D24CEA54F2A861DC64D113CCB97938F3E012AFBE090104D292F51CAC874E4BF7
544FC32259CF8F8B62269A0A1824B829CD85B4140B40D85641C1BED7B28B217E
936D4B4D9A1B7E2ADA50A6FA842125360BF3DC1144957CE059FCC6CEF5820C6F
C3A77F5F55D30C021BD7151232F1B06A8F6962857CE95295B3979711C27FEC43
D0CFA6242997EC007B390B4306B56DB0021606D2B39110AE5BCA2097D07C7971
00747C7353F4D4ED064CD9EF59E908C9F2E422011F78FE6D542317CCB82B906D
58ABEC0C1485BF530515E971D4F9F578518E37E431CD2798239CC4C94E716D2B
79AA362E40524F69A53E53B860719FF10404082F3A6318BC86D3EEB72CBECD42
3EB147F95B5ACFEF144DD981CD39C7B4AEBDA5D1CFFFAF6EBBE3E5F0B87996D3
F1E129F796770CE972003AC25FEAE68EE79FAB1ADD72BE7A65945445C012E4A2
EE26383CB45E7393AFD880E436F3C8D0A1D3F3212BD35164A1D77AE9CD36B336
070C7C809F2EE79138D5B9FDD43B088E0293273AC148E78E0C9AD9681CA7F830
EBB4233C443F9C36A543B27050672E563A806FB4EC884B26DCAA25E29F413C38
47ED2857E1188EFEAE13FA319E5F388B89BF950C292C152AEEA009CF76E7D4AE
D20EB63AEEF38F8BDB6AEC7B662107D43632D26A845F4C4F01F4E15975C89124
DADA58C9CA538811CC3AE2ED2176A6762E968A406843B9FA47CA8D1CC68F52B8
84A074C4C4441015E906C4412AAB326B562A80859632903B05A54B2D50C6F8AE
4A852A3DB40FFE11EF959011C9F6AA26EDA302B3191CECF5AE2FE329B4E4C17E
EA977B58FB6FA47D6FFBD7B0C78E1B9C0308C46D47583255CB5BD83002BD6CE5
C271B082DF83FDE3D050DA1C4A4896F091965DAFAAFEE8AB73E68516B5714E20
B98746E4A57BDB39F02F686DE4B50AC46A084588FFE2634130C75C7F9C638FE6
16B4FE7EF39F517A6D2F7EA23A2D8FDD855B94E52711EC27C88BAC6C68007CD2
B57FEF8EAFB72E249AB2DC31E7A965807EA75DE120EE0C24E309D1BD84D00D95
1D4CF9252A4443EECCAF1E56E75A69BBF9BC36324E1AE948C6AC16E4B2D65CFE
125AD689443BC0C120073E96DD4AE86F022260FCFE119FD46171A1E85BFC2FD4
16DC8EF9BB6E5F9BF310A0FB62EF904E9ABDB05487C88DB06E31E23F07B15EE3
7DC5F4533724D785C22C645809C6B3B4BEE746AAFF10B7E5B883E4F758C6A6B0
4A4D2B3CFF2DA15F1ECEFA37A93751BC46076F01E2D91BA27FAF9AB7A1C19176
A84492BF9B8D010255944700567530AACDF070093E6F56C076EC42F6A62EA6DA
BF34AC911826F482DD5352979B400C493522A4B260C55A31AA1939D028730619
E314C9B4191E97160B441CE68DA94A34B11825621F93CE20F71385693E6B75BF
C0436205231264EAB0C83E88C20504D9C77E08FCF101D33E908A71B94B57A71E
9FE1929502DA3268A9830D9F9BA8A9B6D46B9163FEB5A98C1D3FA2444334FB54
21F839B7FE61A3E58CC805DEE48D310A9A8816072B532A5CCE96ED940B3ED7CF
A73F133941FB77D05D1547586057159EE81BF46E2F73407610A22238B5B60B74
9DF353AFF7F47BDD61C91DA2DBEAC55AEA58E2677AC6AEF085D4C0C92A802161
1C8CE90616C2125A13BD10638D8471EF80438FB02DA52997D43ADF76450709CC
F7086C6B621AF0CC131A5A3D36C13E3BA27F7F95453D2F151439B2CE1C5D8B76
218DE43DA423332738E7FCC667A5B810B665519E7E1450E00BB9D0279E73147C
8D6163DD185B9F341733DD7D909095F94F916AB636527D3338B3E89A18C5A3DB
F575BD2DCEBCE2997BEB1A464DEC3EBB1E4EFC65AF3CC8F25525205CD1C22682
CF877589B206A1363B24D9F8E434FFEB507EA58F36B33CE9CAE8D6A897962EBE
CEDD21DEF42A0ACB73580FE2BC9BE7CBEB6ECC8848D17A70BA8DB8DD6E5B41F5
D79830C6965E0B63963876786B6FD9FBBBC704C1DB36ED8E50612E9853577796
D136C544D5107A7E7474557DE05998518F3DB193425614E326853BEDE444C0BD
672100C53BE8D10D1E9B8A9DFD05C44C457C2669807F31630FFE83B57AE69AA5
EA146A5F40DEA2745C6DE79084042792C12050FBB44FF8C272FC1493F1A99DDB
2E1FFE7A632122F9ACD205A00D5C6228AA1D43F1C6F0E9EA338B2540945CE3E6
CF103794C29AEFFABC3FDBE2919FD6DED4EC6EF3F1C3B79341CD06E983A7CE90
09A72B6EC01E7B5E4319818BC1F6FCDB8314C064230E5FBC126CAEBF6D87C774
EEE28CFA47054DC41A389203BFB3D601BC9A43195F808617B87F28E6C6EE881A
8F2F137A3962ADF24D819FC8500084FD75CB36F23C0BEA5C55AD278CA8D557E3
E49C66F955940D517A38DF6F58F26AB3AE4A670E4B14B78EE172A61824E037AD
5F12DF23C63FEF39B8BA4E1C9F5B532BF9F91C7EBE72EAA2A9EA3245230A0811
09CA98554693CD027EB52EA2DC82F92564B809A3F2D593B0FEDE787EF2B60406
1C0118BEA317D3620FD9DDBF7E26320128E6EA1FBF971CCAE4F84C16417C62E5
8916048A08A2A5A6416617A6D6AFDF832B4DBBEE2065A7C30C164483682C351F
F9A5635B535146BE6FAABB489BF46C09ABAE092A7FDB9B3BA6BB7A3CDDCD4ED2
E3DFD19A3E91747C5BEBF6692FB8A31F5ABE35A198ADB0555C4F69AFAC2A7A61
33F46882944B7D444B9CF969977681A8893B61CCCE14E388A7FBE9450BDC4365
D2E660A69845C73C4AACC97633FE6492E65F77E77C47A81E657F37163298D9FB
594E0FCC622BB066A369CC2474D56EA9D08FC5505615DE0DA8F40992ED9BCE27
7024155EE3A67C4310CC972F167258DF2BA832668CE0CFDE1AD430251A144DE0
C366F0FEFB1A03D99E9A095445785C633F2214D0F78706B73FAF83DEC48FE616
D0820ED6185E535DB5B40DE287DC5EFE67A2DC0DF375C832B0315453DAB18093
497D0F8FE0F01E28499677DF134EF6C6B454C14B43489E50A6249960384EB4B8
4EC4C71E91D872B1DB3B7EE416EAF20F2802135F1BD4EDF9C332B35169B5E03A
6D5C3304FF212EDE3106862F54A3D148BD88425747EBD84BF45C239EC2855938
CB532FC260FEF5CF3FE05F4F6B1A686C1DC2AB81DCEB396BA47EA5E363C4FF36
6CBFCD581239DBBBCBCAE0D1C27B5342D62B68098A7C22BD843E8E48B4516126
2BC8B0012694C3EF26452F9B772CD7C7AFD66238A90AC0353C714458518BD784
9F093D3B4C83C33AABF01A7623989D0E44CFE448D332EFBED44A2D79E36F6A77
DB8B0387D8BD56253A7ADBDD5E5514567FEB07BA75065465257FAC9F7EE6EA74
F7C07916C7B7569E6769A3F4AB6498FDD8109322DF0CCE8FE0405D523BD800A3
3A1CB3EA16BD2E6D4B219D019242B90623603F7AA2E4809CAB1BC91BC2BBE4FE
6F206CFF3902D64929BFBDD2C1765385D8B5DE106435BCC52F1F278910A7453E
1D5F75F2AB65B7BDC9F704E15D8F7E4DE009307129C043A95105CF54722827FB
C24AEF08F6DD0BC6A79A2DB1FA68A70E79D1775A4271DB221ECCFA25639CFDAD
ABB26B8725D1F300AA4CB2620D7426002161F983AE95E542EE2E2BB88BEA021A
8F9C69F0AED078B7DF20965C58338046925900278C6C485D0A6DA4A267B12A56
BC42393BD5745AAA2B6ECD37DDAC21C5037E3A7AF8607F194FDB42077B9A7956
4DBFFF9566BEA8DFAD1CD13FE4F4BD5FE32087A31679580610905847A6491773
0466C7322554E5742C19EA83852D31F31DB5D189EEC3DA8EA2578F636B5F41BB
A9D2541A949E5885287EE2DCF7A2359122F3E9F7099EF323D25D3F3E547AB57F
428FD741DBE14E0C10896BEDBF25262B1C95F281E01772258400BCE4FCAF84CD
0C31F145EDF5AD4A686AD315556E5D82BB9E05390DEEC769C63967F79359D1B2
9406C4A85E362016840676DE91F62737BB54C4AFB0862E0CA5BF70E39BBAB45A
9653B24873E7E9DEF64D7D71D17CEFEA32CE49FC76E715BBFB44B21491114B87
7E71A371CE6563095F56B93D56DF696400ACD04765BC7937583D99CB6110398F
577234A79D34F58AD6DDFFBC47882C37104AB288B2B12B3DD933BDA035B20130
4263EFF2F75FBE80521CA52FDCB634318CACBF994B414731F0AA47BEE69D44B7
4BB321203363B2AFBAFC319A963DEEE6EA0851CAB4224C27161748515EED8C9C
455107A2D2C9454BE2E9D8027DB687567832CB06403D4AC83113CD862F941412
A59FD8BC7A0FFCD765CDC64A4922496D357B670B5931DFDAC489CAB1E595094B
D211C565837DCB8FC96B2E2F7B5230E7D8E6A2F20D8B4AD01B5C57AACA10BE4C
2870ED7DEEBE820C02ED2F967DA29AEA44A0C27A83D641317366D9ADA6980826
80809E2BB7409C559024F299DFFB89904AA737169B00CFE54FB18E1D3B530E8F
76F3FCF210793730C8E5197204416FD5342DB3EFE5D981B8FBB04B8E74A754DA
EEC62F8C96BE042568C0C11AB8DCEEF3D97094ED2C21EC501C3F055320126651
F8DFCA0F679A963DDFB35C8A0EECF092834CE115EBFF2995FB1C0D9FF029B665
9B40BF3DD9AD2D9BCE76781B0672E5D03D83EA001C76B681675F5E4400D758C4
23D376E2C71D3FD79FF10136EB44A8DE87DA279FF7D54B40F95497E4BCAEBE1D
94D945CB8D94E4C4EF01A237EB374D341C9335A8204CE22B0906EDEDFFC684F2
CCE516A901673DE9BFA7B534C0238CF65B3DD3986298DE5016DE66B3DE65B44D
AC05EF13006A116C82E1319A636C7D42C6CAAC3426CD99C982B6A384D3544080
599C565CAEA48390EC85B56B4F48165F2B6E7741D38060E9754C750B46E00400
7A810C5C57CDC1BCC32B6E3ADBE6DE90B816AC700557576242C3771C9529F24E
B9BAD18CE82FE046C615B231FD5B7731010E08A50DD46A8C53483171E1C0E496
42378FD9C4078079DC3F513AFE06FD0483C1C9B860B740F2B4D53A8656B4EABE
3095AF2954AB8C9C9429877A4FDB250372CF4005094B9F67493B24CD121BDB9C
ED994238C39531CDDC197EAC24146158470E9FF32F841AA46FE7C3F56249A8C4
22C060B15F19EFD62D6F6C8571B6512A8DF217954E5EEA59EA0C7514A9EFE422
402E174C0FEF0F7CCB94004DA5B914E04456DE785F61423DD2C022E5141779DD
5793EF2D2F1DA1B3B52DCD9C4CB0C0C97CBCBFCC599720FC9CA0A2B443622451
EF807AE7A911A5ED5DA44F01487230A3702428CADF654B3723329DA39C7D667A
4C093048E3F1C940CFD3865876D414F840BAFC74BB84483695C1D6DBC323F681
E02AE80AEB1757E191DA795FDF71D10E1D5D11BD5A346F95B26656486721814B
59840243587FEECAD354A0315AAAD233F3ACED3874214E6075A658B3CC670D60
B0DDDC1D67DB235577B68003BA14073E2702296B284F8035EC576B5F08183595
C8E603F6DD62558DBFE78E0CE89ADA53850CB7085567F6AD3F4B37851566D69A
A649F979F01EC0528917E8327FB8B6B10274907C8E9A28945C75A24FC4D34A48
3CDFE067EE6B3F7DFE0ABCEA24D63DBE441094C54A5CDE299FE165DAAC8998F8
3EB73042AF090482D49FD4B5855DC6EE7418369A77021FCF968E05F679C190CB
D07A885B950660A2382E7CD7B7002939E0288B91610A30F1CA7CA36C60AFAD6F
C5E58E3FDCE100D52F0054B40B7A80E2A6FD5ED19A91CD6DD05C0AAD0FBAED29
B58F44D329532A25918C1E086C99AA62F066A1B7203AD9A06DA81FAD9B66A132
CF59715BE9AA739EED284E71AB71AC3F28AC8B2EEDD90D659B5716C42B867EEB
2AC60EFEAAF648EE71342136E2C42D1F5F66E7F073ACE7AE37DE55B277110EC8
7721D864EF9C47AFF828B76AAFD49BA75C28AC30B740FD86ABCD594DE52FFE1E
8D9B7985276547A258E9EFC4E9DA426F1EB112BB419990F24BE10C2B55898EE5
DAB69E8EC309510E40D74FA3DDE0C03D41E65C1326CFF71597D42A88C5F165B4
0DC5FE351A488EECFB1CCA0F83BCDF8693F6741B5652CDD7221577418293DE70
71F9320746F2B642762681856B6914A433441B0CB90C066A800775863CBAACBE
017625D6CC7710DFF503930E0ACE85229B43DBFC4D13E8DBC08792D874DC3BFF
4152935DC8C9580C62E4B14B3FAFCAB961CE4F99A7A9823ABE7EF8902A72A17A
C233949D4A78A69DEF4F35816A39E65B1528AE7D952D4A4FBBF146D7799C84D4
BF099E8276173D44B8435FC9732D99B53ABB1D1A4BF921D4D949B639CFD1B18F
804C216D2A33EFADCE97C8B29D62BAF21D8F6CCD8E743AC0D684E993EC7E0245
8151AA08FB1A272DBECE98CE29CCF1D4313E8E0AAF085D8B6B9F16EBC2952319
02C47ADFDC7D1A6464979271831AE7C64A9339735A0DDF75B0BBEB0611F97DB6
82B0F4E53D0379830C58DDF88933643D9AE1E12DEBB5D4FA7F72DB92661D8E55
5464D404356E4818909340AB8C2D04F02C94A70910FAD931DF314334BB4009DF
504ADB0D12F095585ADA472EC3CD85FFE22FB48F0DD147238C6F9CDB39DD03A0
0EB61E7B446F0107939270D745AD443B138E28095FA826AE7F9792BE62F1947E
7A10CB5090BA6B9E5DD40B96587C8AFB8E2B460FB31AB75E66B71D78722A6C0D
37AD648B3C00FE9A37E8B467A1EF9D63611D0A487410C53D7ABDB6372F3B9D49
4F926DD9AE917498F04698A3355DE4035CABCA20CAC4E921BCC80FE35732D112
74E9CD266267E79AD816D34FA912FA57D79C545C59D68E387E2C492BBF58F526
2710C26D171A78C05E29FE350FD041BBE692DD529AF6971C7895A7B691E56FF1
BDF019F8E7711B281ADA45429A53279306AC833780EA85DD29EFF113A45ED10C
6F26C51D0AD9C7ED80F0B42E99E8810A74EC938262C644EA5D623EDEFFE6FFAE
2FE71247CF2583ED38D3FE3EAEFD45DBF94F76AB4216A691854BBD6B1BF69746
6E817428B862D12960CFEBA1B042758F30A49709ED252597C5618DFF2BCAC8D5
74B7596FB684A74BED274599CC68EF5837783246F49B6B236929EC93B54E39FF
3EAB0611A495146547E7C56B4B7E03E87F2C2A705A77944A06229BA9BB70BFE7
77B4621BD8A61E158EFF0691227239BC3784C48C76A0C0E5B337EC3F17B060F3
5D5515591CC13E70F9905123E9C78A275A0F912C4A766B5FADE47588232C1847
141D567C22A1B58BB8C59B5280873E4E6598AA9C9E43322A60E0B185C9940DDB
49F067828F6251F206B9139C73EFDEA04394CB9E37A293B3A9DABB636660607A
7E48C869ECB1BA72724EAEDED4E53901F122D6B2C87003799E07677990B0D25A
794BFBF59C49BDF10FE8764ED45339BBDFA5CBE9EF536EB130671BCEBB303155
A091396968DF831BCFAB93B6490ED1F4EB53244A6F8F47DC2876EC5BF7E70F5A
D30A0430C9DDE4EFF41BDF647A49ACDB394CBBC16970BFABDE0E2F504BD6F48D
79CBBA8FC9C5C0E22A125D65EFACDEEEE09D3A46C1CE8D949E2546CE22CC64A9
AF910B8DCC9E9912E424AE0903BC53835643AE90547ED445B347FD2475868C97
0C7E5A32FBD34D315D8CF221A78744F3E50D241F2D9A8752CDE11CD2F3990AC1
F7629E881B1776F7BD63C74246EE4152C7921EFB9B167E0D5FB4337242383674
39FA88B0F570FEF82A085CA1E6CC7C7FB202BA4EB0529197FEF3F91EA45C6A5B
C6436A23EA54909F0E7E3E71DD0E3AB44CAE48BF0F90A955E7892C7C1359EAB6
C581B44B7F2B3CECFEFB5E44A47072D269659F221E8DA94598691F7744079052
26AC4AA63AFB215596D55788B41F056CEC4952227A4E4EC2C94535F8BC7C71C6
33B1F399244D07E3E50A06F80ABE3D784B5D91A0279DFB7F0A105A46A677D885
C95CFCE259B27E2C1CC123A67675427DE8A8ED258FAA4D9E70FF03895288C741
24B4CC8E2B628E209D10FD56A259D25D6C38683CCBA9241C9B274957174B9E5B
DA800D7E57DC728011214FF685B6BC33F2E09B05BB58D5581657F37DC9E8B4F9
87B09BD9399047C7A0757216F4547EEF242993061BE90A6A618CF6410E79F824
14F1B5F2D9A9D170CA6F4B3B14500CF0B8AE765DCD9F9DDAAA2086E7D3403D5A
A74C206BE178320D01B4DF145D6DC515C88CCA35CBE661080F51C818F3FA54ED
DE170BB255A37C7E086235E633033E1C17980B67C057D16DF63C7CDF646FFD2E
088DA1EE7CF72CF54960AC57A24452DF6518DA6708EA217FD84E66AE2B63EDF5
027C8E2DDDF36D7294D3D40083D5AAC2E1A99A1A20094D0CA4EF9F3BDDC85A08
EF93AFA9BDDC7EB5019FC3548CBAA57D5075D212F76D6235922F916AA097BF4C
E47841CC9958B65773A36A6ECE3B9E512C5D4AFA34AD556EC5D4C11A98B55015
C9B092A0373AF3A64F22DAEE3547C62EA7BCA12C8A9511F77CC7063D51821BD4
51341F64C1215B6DADF3A2F2B81CEF17116C5AF6E28B1FC34478DE2D233D9348
A27922819F02B87AB786299F5AD46C635CD522993861B6AF55C210E01953A95B
161FB8E3EEAC2A9796D65DCD7E9C0BFC0A73BCFF7408BCA0B8722FFF6803B32B
B743F6E43B997697D926F814FD9E33B0A2CDD7442BC7B2F338E314A92695B19D
501BEA073535DA36AB230E3D91EDC1384F92AEFFB95144DD8B7B2A28BD444DD1
B0EFDAF667A918171169D86699C1270A89E7E3BB7ADEBA9C882AAEE60A026DA2
5D51A4670316C7ED06DFD4EDBF4044F0E2C7A839CDE35C906328DD3D2FB8C804
1BED2909530C1E888A7EF2F7EB3C0F5586C7BED7BFBE20CF28F9A86AA5BDE4D8
C1AF83E7189A5F2BD9C528900A5597DA8909EBF9D190C37BEB947A8AF7259241
667AB36C33689DE429F195AFE9408A253D5113153D8F44AD85CCF7143355866B
BDA288315AC7CCED9F6717F6AAAD0A48098B87D367BBA590FE10AE111811E198
D306F31DFF8DB9BBEC1EB6626F882CF58652ECCDECB714960238AF0160C19DD7
0225B513C40D395057C57741298476A0983DFBDDE20109095E1F1528CE55E045
B490A02C0408F0692AA7A2AE98D9269AA91431D4EEB657893A10D5EFD24773BE
E08C6CEB17D1AADB098E8F63D0F68B8BDBA682FE94E893DA5C0DC94A74F29E79
CEB7804E9A4BBB85C37DFDE5982B9221E541C2B279D50373A9A4635C69D5EF0C
9419EC2DCAF4576F788C6F5015CB5CA8D5E7D91802CB02A1E206F8F6FE98BB0B
FE8646CCF705322E7CA9BD012F211E568B6DC765568252517BB2A1CC99016C87
A3DADB3A9056A23C7B6220B3465FB648AD0E80FD5D813AAAA68F59D3EE3FB96F
B232E6B4CAA46D86AE1ABFC2B6CC56AF263AB29CE906375ACF6815DF1DF5CDC8
2F3A95ACFB81FE489D39D81FBD90234687FA5FDCA4751392D22AD2C3E2A9453C
252D55642E3F3B8CEBA50561694C99C244A6C28AB016CF6063D0B8D2C5B93C03
F195A8F536C6DD08CA7DE3558080F1363A04FABAF5130FF931260BC332666E5F
5A99C92C2899F8DDD7B2402E6DF53D598D28B951DC1B5E144F08E2205E0EEA76
25A8763C7918ED33A8FF0772F2096039A0089483CC4381D64EE53E948D40EE57
0BC5F88E5809FB1DE1AD60E1A282169401EB7BCDC54638DD35410D589FC43CA8
FD42128092192045E2F112F13FAC8F8395006039515389E45A98509F975652A2
A76FD7DFA9768827E9FF4BAE96480208719DA8BBC7FD71B2D5045B1D100AB5BC
1535A37E6033EB313E70DC5BF1158CEC129E1D3DFC1D7D4C4F5F0F7A087806A6
83B30321C9EDD3C6D856C24C61FA4E461E46D0951F7F5CAF28C68A9AA12F76FB
CC6A04743E6BFD2BE6F8DADDFF8658C544587BA2D95E184B5BE8BFB8E5F9D632
E2F4B1145C62A10B826EB2835D6C252514651F21F42C291092849A2697D706FF
CBD07126B5170B28B9B36B934EF6D7D06CBC867FC146DFEE1793F359409B9833
03559F8D4DFEF81A9B1FA762109D5886BF9CE95E98D986A56C70EF9640224A51
8BF378352F3F0B64F6DE5CCD30C75E2A1247111E8E9FAC29391CB9F78B8C120E
8D5DF0F60E6B91D868E32C2E5428084CC25D0CF13F47C66CFB29C189D6F03E21
0E5FAE2AF41517008BED8A6AF7F513A0AF021E3B7732E27359FBBB27666BB46E
FEC4A7A5B56A5B1FB18A6304EB53B685412B40D6531DA7E2A4395ABA34065475
6FAD27AC7E1E20250E3AAB09E78E7F66CB3CC2F58931943DBB3896EE56F9DEE0
666C2404FD76B79CE4683557FCCE840211D107D2241F12F7CDF133FD5B63C1A0
C81A221AE04144951F5ADB4347A9E758343E1E401C0952BE0AE8910A8B3293B8
ADDE783E997366FFAD600A1A10FD14DF3427AEC68303201D3369FA86C1B343F9
138BD260300B28AC27BCF0318D0848E85BAA5E3469EACB167C30F7D7763F20D7
41FD762A59B067CBA7FBABFD2A446D883D561A94793EC689B51258534F2525EE
8072950A606224285C7B6382E516245ABD1F73431AAA0DCFC1B35B907F5C256B
9AE75E681929472AC25E15ED402A0F46027DDE61EAD03E8DE7EE3E332C113682
41797FF0A1B21ACE3FFB291D964E14685ACD81A3DBB5513DF47FC74899D1667D
16B0E416351249B7E72E51314E2B9C4EE955718D2ABF962EAFC815FFB963C964
864D35EFA403EEEFF266832962DD23C0B73D2145AAA77A86AD4F59C46A342A8F
B701CA5F0C3C448668C93CDC17994558B8D3B2B2CDA012FCC7B136E8F3B51E79
9525BBB1165ED4F66607FBDAE87DBC74E3C75D89154290E260A08980D0A49803
D0DBC88C9BB1216EDA7BC383287BE3DB6063EE2CC3DB9679E2D7516D46C285CF
B00018FA4A11517448BC7B6F248F02C6541CBEBC35DEFC3125F041D2D61F1945
18C4D2C3D47A818068D2D34AFD592569DF595A05B2ED51EECFFB721A249F48D1
4F0D22AB166B053953E469937FBB4041A22A09F10267CD6E25F6ADD08EF980D6
7F16B316CBB54DDC63B2CE43268AE2FD35AC0AD2A6005C25EB3D7080AF9BFB44
108B3E1ACC5E74D31BCB4E770D1A24F73040361A4E950D35C728F7A1C035D87B
E62B95ECECC5CF2B4E66EE66CDF7DEFC0CE3B032DC2AD36A520A71377B3F14A0
AAF3D1DD1D481CE13BDE5BF13087030A29EC8E9A8387CB5388DCFF0954CED18D
EF985C6459F6E913D5B007EDADA13BABC7001D2064BA0B2EEE00A19FD7B7A078
95FB592B70D96E3F2EF5D976A0689E9EA6C83142985184B2AEB6C471833859B2
F5A44BE38ABF97260F42123173D95C7B7969D836F428552EA30DC6B2AFD405CD
5B83192659611141984F5F58F1D521169C6147C14D78AB7FA62DB4F6CD1C928B
D31A06DDA739F61BE5916898C79905A8E9FAC7152E46185BA70220621A850B3F
91AC3D5C8DFF59909EB59D1EF235ACEEAF8708333076CF897B31CA9FFF2A7775
A0674F038C272B381C800751BEE00F64A168A12F4CE34649357E5E39D0358D47
3D3C29969D0ED1D05DB25828ADD42E9D3EB29663F996701CEEE5C0307853498D
A2E95A4F9355EF0F26AB850E9DDF44EF7334B514528A8B1A90394FFF99AC5E8E
CAE12389B1A302E16B7DB5970B85A0331A12B93067B327601606A6D5C8C3F294
CCCBB0CDA265928C6BBFA0749412DBBE85553C3320B5AA968430AF0661DA68CC
E572EFEB3EB028C53C95C729CC82D7C505201729DE0D6C3FE1DD5FB053F1B1A0
B2D82F14FC817B0C4B6B32A3E3E9F2D46F43BCCB6C3D53BC7278726A709CD713
6E3C710FD10C65124495CBCA87983B8A117588134B999A39D91E2C927FC07925
FC878FC61150192F8FC3DA51D74C2E82E9886BA5A167160D90E7547B0824E7BF
8740614322E358FFD48A0CEEF7B2924583D2D33BB42E8C4ACB378472DDBD9A7D
0B30FAE6173A4510623B6800BA4FE2CFB45A8CCD7A0703587B3465380FE8E586
525DB8993E4F73FF91CFE4706844C0DAA6DD5D5492CA1736A52B8B9D95AE23A9
C2D6A47C03278F02394F4611CEA11A59B78B90C463CFD7FC8DADB6E7A1701344
89283FF3BAD56002C296953F481973114B3B3B3CC7E6BFB2E25C8E23E9FB7084
38749D52ABCE5A58B5F5CAB2215E89174EA3057DB24DB54AAB55D9927C57C8AB
1F96E8DF8A65CA4271A50C0DAEFFA24EA4992B3952F47A03C4A55EBFBF7055D7
A24621F5FDA30E4D26D985EE5BC30B1FDD755BB8673D81F8D823DF30F0C825AB
38AC66F59627B32231BCC66962FECBE2E49651F9DA2B23DB42549516E6C4E63F
522569029ADBA6DC4160A20D083FF0BE0C53E5711C82AC01C4740478F55C4D6D
A862B50F90997989CE492D8848CC35DE6E9C8E81AE5C0DA212DEFFA85E2C93AB
0EB50A89B21A41869FCCCCDB9F3270976FD78208C47A3B2E2B576F5FBB0D0FB7
6803390B0BD68DF1D4DC3BBBB1B671CB59DDA8ECD91A19EC113B5B282AE1250D
C1C2B45DE76F2B1841B888D7039F0E3EB3E9C7582324682BB474C2F3C2838CC4
4C15CD012FC4FEFBEE6E1FE8B9B745EC34DCAF66122179EC9A89543D735684BA
3BDA793277226E6ADACA398207E8D29FCBBD8F6DA5C9DCF1E682A24EE12B834A
6D01EDCFAB016B836FB91AFC16D82DEC58B66E5A851B5B793F7B8988789CE918
D8148519E42F38A682739788E35454BA4D0E46745F76247B0467BEACE92AC27E
DFCE981A8391328C5E0EAFBA6F05F457E704918C7E046E9486413C247261A5D1
338832437E97A0EBB4121AF186B564F09BEFF29D25BC8614D6C2153408FE0170
AB1BABD300EAF21D7BE2D3FC1BAEB86102799FD2E5C0912CC1ED85E65E0875D2
9094294768C08E9C21BF90B450BF63FAE1D094B0469EC86248118B7153016F75
F4AEF85D9F6A03ACD84A6B7E1B7D106D8ECE13D3CBBFF3F112E6F8F7DB8DB933
EB7D5D2FB569061CAE94BC5F00FA8542376AD7861619AF1B1F596CBC863EC91E
23C539DD3038D6DB6EFD508ED55FDC58A95B1F41318B8D76F7E2A72E0E9F1F3C
494A4C162B902FE213E3590F539EBE44F4A8DEEB5208E4E2D4A93D7E69BFBE44
BA101869057565245B2DEBBFC1974E0E779C48F9FA49189D45C42487EBD31D0C
CAF18D75440D43A1842CCBC76AC5CDD1020F6BAF52144B0522D0821EB120836F
2F5F0D0EF7A76DE6C100849053AADAF06D5D61887CAF8BF685C6C55270DCAE83
DB2185B64AF6FCC285DA8FFD5F37DFF96BDBBF67C168BAA62ADA19F37EC033F3
D7348B9A390D82CEDAE44840DA63F2E0B85000556408CA692E585713B5FD22FC
90DCFE3E55C525FD30BBC70CE036E5186A0F8B4DD78E42CFACEDA4C80ED2A7CD
A10B312C1D62D3FB414E1CA718ED2CD156A5E79665AAE55152C47C416C607AAB
E726BFF1B661D77D16ABD35852DDE09F6B14A499319F043C7866933F50800F6F
D1788B3AA00C08358050B9E9092339C0BD7A494EF97D357057B13843C3312ACF
DE8CACD53D969020B1B90028C373D3448904737EC79BA23405490E40C2C038A8
9DD8484D4B114BB83BB21A23265EB13FC896A973CC451AEC9610C3D90C636388
3465F2ECEDF0B1962C885DAA6FDEB9CBC3CB5C25B7BB7F637C80369BB5F89D83
40172237B0935ACE5A5CAF6818803037B192D630E70BDCF177F190BB552E1387
1E6F48B23A84934141A0CA8969208165DD500A80ED96EFFA1CF769F4A2A6DD03
3D6A0D6F7CCBB94EF78D26B63043DA0497623FFADF06714AC001DB6B02F685B8
BE15590E6A22B701A05865FD2A7DB8EAB47B5C7412801C3531CE0AB579674917
B13500771CA22B6E60EE2558A14F50B9ADDF464E981C6F4DE34C9ACE648C69B1
B16517ADF508BF63F64AC355326F80141BA943A9A264898304A491450FD1452B
D2AF938D86F8A294FDDA952D6D1D3BFB983F8E15237903E66E9D73908B590CE5
13EA03F1BEC3BA356E4315040E7625FC66C6076E6B2A494B8658DA0C443A4D35
223F7096A5E3E82BFA7038A745F8600DC1016416B6C33322872543BA4008EA3E
443C146F13D4D1AF80CDFCD7E26DE76469479963BBA48B780779CB9F496B330F
2BA3AC50A5A93D31607964E58D19D8317B77DCB090E633C8BD6423C688F32BFA
52D69583DA7951BE3881062C73EBAE63437E0AEC873DC6AB1C058826B67F358D
5A55D7EF57797CC169C8CCEB649B4FB256007BD4C33C5A9629AAB0C541232229
043FFA5A85815E02567735CD43DA08B9BF2A61E80986B29955638DE8B3793466
1AC87392E4EA5BEC2AA8D2AB8668979F101BE3014FD92807AB8E05CA56B1366B
BCF7084C6AE4FF962AC134B00FF80F062602FE59BABDC995CFFDDDC461889CC0
59F07E1AE12D34AADA818EEA1C09DEA9D1A62626E83C93295DF9984E3F05EFA9
0864CA6021B2A194147AD18E43156C122CCE24C4A474BA19F3AFCEF6826C7E44
ABC9F2A6F66D76500DC159815C02D54738395FA5A15F4BAA4D77BCA32DE67243
C4871F75B38BDAC4A5AC848788B84B2F90CD6EE7454F4458D3738EA82291E50C
E0D8542F775920C658A959215C7F1003E5B419D1AABC66034E5810BC32C823B8
19EB39A15C0F25BE8974B2AED53DF9B9A07F8F3CF0686BFAF6FD087846521727
917D6F46BB0094BC2CEDACC34330A6FCBD135F8274447BECF3CD0CC59E89A4EE
D187C518A4B0CE3ED26A8680117668DDE6C4BD033A6486951F37580A8247A328
55A2BC6E72540BAD6C1226A25547A8CE9FDC3593D7952C3A4081AE876838DBDF
8CC693AA578A70D0DA8D436ADF309D17DDCB215893FECE512FE5CBC2E88AEA76
162E36FF72ADA3162BB3DD712B5DAE2E1C1B547256E53B9BDEF27BC2D035C2E3
356119D1E4BD658E9EB5C64396D14E541FDA2AADE81DB81A77C19C9BDB4426F2
E6E52F6410BD76E442F147437B780D39884C8625CB19F9E63518C06F87233313
44F45A48E8753B3037437066FBAB76331642EFAF3A04F4F2688006DD457A32A8
EC2E072DF6628C92570F32CA85186E3A24A6DB68DF6B13457BF4C0551CC88E8D
FDFE152885E4258C6BDC84ABC8F347CBBF230FC69B3106F6FC309582A8F0D6A9
A658BC112F0CD5EDBBA164DC9E9B3414D00E9F5B712394804BD7C260FC63797A
999F4405E08A4737EF3B38F974D988A0858DF435770A2979BBD6460F39B9AA01
70921E498A0B9DAE37730EA649A7E646EBBEFDD8D1D88B7E0E7E32031C88C5B0
088A8B3963382682D6DF68751A8B327B80F7C5BEFE443720A753E5ACACE513D1
695B4815384EFE20C74BB62F8FBBF658F5DF087AC669D8DC37769E59A5AC6BF0
61C79FEE265DBB5E59E4A4C3486F753F84F4C01F1149FE56AA0AE2654BA1F354
A80CB1353AB59CA4C7A2FD4490D7A6F79A3B1800AC35FE2C326F29090704D06A
A53B7559CCD26C3A1276047DAE14D431D216D9C57B7B8A99DC6A5D903B6D5C78
B08FADE7F897DF81CCB6AE7B126C45B8FB860925BE5A839A7A6E0FAF7F415B3C
CDE7AADBCF72697BCC9D14602093FC2B351212FCB66B4CE90406085978F8EAEE
A93ACE3211F1E3CD3053CD18E028C0F863D4E0357BD6FA23A0EDA912AA0B6D28
6B8FC1B50502469A33B924B8B1E51AB7B211557104868E0C87775581E8BE8DF0
9388BDE0F3E1533742A3B66F6646CDFFD8C59682EE5ADA1067E700E76F997C37
52440988DCBA914203E9FA0A3F181FD8F8F16532653D5DFC0BDA01637CEEE0B0
BCAD4418C925FADD7DF27A7AAEAE52FCE3DA1801C5FED45FD5EB73B9CEAB98A5
E5B24B1B627B7A8FAEC8F05A0162F18FF86AF9B2A5B3E2A8E7AD8930C9777AD0
ABCA4BE94F04B8A5A08ADE3960EB9D90AC64F9C82C455AC07551DF3DA72DE6C0
83E4FDF42A54520864E06191CCC44BA2CBC269D90D21B62674F16AC59608F55A
F52A737C2FDE518B2CF2EDE51F8138244BC64548AC3433A806A9208B81071A62
AE7E7856ABEC91B8CD1DC24AC1E0C2938291B56674AC94A09D60E190390F8687
5E6AC2C2BBD76EE6A5A0A79C913B08A5485352B7835A49BF6FBE403C1007039B
BF9A402E75D90D80A113707EF6547FD37D7CFF577F6D2D67A0D8934E3C3B067B
5DA2FCF7FB7D93FFCD490B11631704A4AC399AEB8BA48A087BEA2DFF55CF5E3D
E25AC0B17B4E1B19B82953E9EA3115B3FCA17C742D9DF10DD24AB48FBD5581FB
A297938A3C986ED15B14730C7BE57941002077B2A57BCCAD899A3107F56611D4
1953D3FFBD1A8EF84C78ACA985CA83885CB990B37E0E0DDA6646AB9194B2F93F
D18C1EA75B4C1FC380622AB54A020EE2840E81EDEE21CB15FE404657430F1CEC
53089FACE2A8F03C15A285D6D5EC59EC7768091844E60AFC17E8ACF7C7C27E0B
1C3CC897E2AE06E13F82220F713FB9CDC6E1B6D006F1701E6121F9535A2078DD
3E501F557DDE43593A2E737A9DC43C2207F32E36A018A395DDEED10008B99307
C8FE95CD051EA8D9813EEF656514EE122BCB2C4FFCF37EC52C37A51EE51865C7
D571F39F991FE47B4AEE466D4B7F29FC6361F640209C939D8516182CA5F0966C
CBF971FEDE25E73CFD81758DCF08BF3BDF8C4F3B76185AE27922D871427153E6
15BAC69F2BC1FA11191AD9D88C5221B4DC5E93B3FCC0C53978168F7067A4524E
9975D0CB9F4DC70136069FA91A9D4B50682C67F604FB476967E255F808AD2C72
C58D03227FFE9382A570237B28BA2056E22D6C99B1CDCB346A94ED90773E4600
5F669FC201CDB5C042578020B27D766EFB15F2746E8F0F28984F5A8CE06301E0
9E143FD215F3AADD855C9CABD5BCC174D4FBD61DE7DDB8C4F838BAAE8EB9E7E3
262FB036E1056B4DF4226621238B3E46BB43615BDFB102AF45C3650D5D8E92FD
3139798FFF45038D9CF42250667824438FC04BF0DE8C15F48270096248080F1E
68B6C6D9888690D7D2C56568F77049927852E3D982CD9484EB8115BFB080B2E1
3090929978105673588C1E62156E783E088A932409337991C492C016267E4119
CEA3E08006ABCE3153250B475A89210CB06CCC844411CF3ABACE77C0DF145A07
76D18CED92FEC6B910B9C59DA6005CD4628E3F76C8C5B641671D84717592A22F
E5AD2B756AC65DA4791C5CAD5D6C7128962A81910C6EC8950A4891385193A438
B4357D0866EF0727504C48C199E97C6CF710D7B2F371B1559D8BEB24AF9A45FA
126B16A3F3CBD02AEB9B7AA3CB78BC844250DFB6357162031A064F3FA4402762
B9A97AD4B9327DD9A466BEC479D67863C8365E8B0C46E6F63C5E01D9477A7DAC
80AF7C8244917DA635EEFA010F63B43760E904FD5C98BBE16C26863B9F911E93
00CDA91933C66A50049D3D53923591F97EC19476C97E2F57912ED4C0EFDBB393
1F13AE71B3668E35A598CA509B920A6AAE939BD25E5DE4F8BE8BB2E92544EA21
3C70F13601462693C32FE5B20E2D3CCCEA810BDD12127A8D31D376578942C226
789972FCD53625BABFE9264F59E55FDBBFAC0581982D7EF27B675C6B14C5440F
3DD5A5DA2DD123D581F2B19F01E71BDC28D079CE0A3E0E35864D82C3BFA39629
DD1DC75B726E9D4F8694D3A4EAB1BC34000682758EB76975A74A0F767536B566
2C61BF17C69103D2D33436B4117694575FD284FF8E0AF8A0ABC2E57D3D9DB77A
F75DF6E73CB25E3E15458E7F703D2377C58F1A0EE48F5529487A198EAF6D2556
58FC52EE48924FFF69004FA27AFC6164414F826281AB33ABE7825209F4ECA591
236A24C128F79EE69A4BD6937975F2BA14236B16F5572D6356177B514A7997A8
3FFC7EF194061FEF3F397F08C0A0CAC3E2A3DCF502E610A41FFF797EE8CB26F5
F87D22BC1766A64775804CA60869AA0BAF795333376EB432F33826E93F38013F
7E8E1C994213A58EF5198D98159ECDCE6C61894EF7547F81789F6CA3A2D050C6
AF323BCC78A6461A0FC6437CC5F56CF547D3C97AC798D4FEFE2F219B7AF0F044
76C42C0BCE3308F1E5DF5343790F3E7E644F182C632983BE3D2874FC6153EB25
E7859C77DF0ECEAA29C9357762094A1716770312D212014FAABB7F00D0B89B30
40CDBC1BAB561F3AE6E787D6B6578DF7E73E21CEE54B1687510C56BF53B36F30
86EC7040D5847F7B5095BACD95228E1F6EDD85621B964362403342B8075BBD6B
7FA756F09A7604BB684B2963742964881F728EA8956E9BBCAD2750F982C76A75
7EB7A7D9420E722F2EDA89D27CB3A01C52FBADDADC00D01AD62B26FF20B24818
C5E58EB2A68AF2A559D6C21D3167BF901A46032927B79411CF355A9EF3F028A0
BAFF629CFE81D098BFE6C3692E03ED3F5E1479C3146D4AFFCEB9EF8843691D06
43F4F9B2EA17738F6763D37A1E6528CB757C0DDAA2C03ED197214BF849AAB4F3
738C2C57EEA8279EAF1E0837FD4FF9CD28F9156100AF21730FDDA0B96153FBC4
53A35828852673385C8A4058EC70DEBA8B2B0C762884B23A26B4A37469626F80
926ABD0B62C27C82A699BDC74A72B284D08F6357BD51AB0E7A4CCE1241894AFB
A1C099D37DCDD677A4F1EDCD09993D20C046089A98EA5B70E06CE96FA647A638
E474A98F1EC24FFE4A5B5B06C74BA977CBFEDB6DDB047C077ECD6D1576A4D2D4
43369C812B565D0C6D5F709665976F88C9252630D2695FD5FABED63A4ECA535E
D7CEB85527AD9702A96C6AD33F56C836BFCBF45F183B012CA717EB0FB1FC5F50
F87F1FCDB8888497BCA59767356ABF77240A3345F1AB381F29B3607EE6E5B03B
AFD196B6D3F7BD55A328FE4997A6F8588D8F6CC978937F7C5E21AB5B3C8A312F
F632A0DE2E46FD78C82B88E9E0EB40945D6DC2C09A0F32C200895A724E660E0E
BAF1AE490F61B48A6EA28CAA24485D2371A9179053803AAE4E97A6DA73F1E146
22919E9782026DC6A0B3AB67592D548B4F0E0AB5EB81214D5EC5ACCDF2C02B26
79D5AF2DFAD808777D2040627A001DA6F8451F528E3EA95ED5F1DBAAE4B960DB
BFAB172FB597CA543B2CAD83623444552B046E87C24AC1920CF03D40A8612DCA
1CC8DA7A3FE099DAE9C138DDD73ECA92B70D58AEA8BAD797B3D3E3968F4116EB
DE50A4756AA163C01B3515A52556C0CC165BC0E2D2A1E3A7D87373B3B93A7A5C
6A3AEBE2BA17C53408393417537F7F723DB71C80C8EBF1D239416C879E67A838
32242A353515B5B347774F32B8B6C033ADC43F6BF29CC1E9418F2926916FB309
390A94B8B38E9A8216C9978E8F7B5604F513D919157DC262C886461F8CB661AD
96006B9E5A5B478266D3EECE40DA1C5834DD52CD36DE0B36B8826F304B9A865E
B3762CA8D1DEFB42BC4FA62D0F0B04880FF00A2E0D919394BBC57D428DC67CEA
074D6680C563368D6E5DAC9311577E398987D0FE8F2FFE78A57D39F89CC3A1A0
3CCA0B4EAAEC3C270451B5A9923E5532842A938FF436B01AB54EE1CE32BA926E
34A8F8C31F7CAD9A568E3F27DF88EED64E45DD9874A61523D23191699A14DA46
332FE1E3FC91864C799C5EEBC7585E3375756EBEAECE19034C3CEDA7BA6E2AE1
26254ABEC87D36BC07BE4CEFC55958F286632A74E81D20B548189D085A7DE624
C1A16B2F5431B34B0B08C970F39BB0B33254A1DECA960AB60BCE7A4975433D1A
CFD965F3C47D22B2B8E48A419CE3AF64F519825659E854A8B28DFAE4BC9CA582
BD93FCEE09662E3D61168B88CE0BA15ED64565618977017F2E1862914A5BA0AD
57E8EA39FAFD78CD63D66736200589B86C00AFD0E4B4C9307EF47B1FA62AE780
CC9D48C83283471EBFB80AFF8FC59F3210C7F0904A374F6EA3E9F8CD20318FF1
1BE91F84D22CF0A357A12677453DB521E10C91F985674B5DE2626D6BFE9FDA94
62984E7BFBBB3ECF535EC546A8CD9E1D5DCDC5F03905A1032B11D2E8550FF811
AFF97366C6E43F92DCD0BAB1E05EABBF944FCCD2A9D3BE999605C7577C9C6046
030E8755BDA79E2608DC2861062BA5099C8A01B44923BC1467EF2FC0E98A2BB2
8E5933E2F6E50D3587AD695C59DD5CD608BEDBED9AB15A643F7E1EA8EED8CFF2
C663E499511AB71ECB5F7DA6540FF8CDCBC948477638373995AB14CD756C4CA3
7202E05E0BFE9B82060563104E6B17623B63316E7F818E3D012DEE9A00F8F8EE
C8BBB4319727EC195D43DD298F75F65C1B0C1F6BCCF6F1817A506A6B9A300237
C8A095ABC581B8C41255D7A7EC8394BEE356C5B2B39D936D5F3C5B6BF7B68D23
4DB91B8EBCAF23B357752270F813469904235C1C631061F3C226D1A133689492
067B896557C71E3E01DDCC9F7E15A928C96DDB38FD4AB81D76078FFF182B04C8
6EFE0E9DA6FA4E54CFD0015235F4D51C1C753EEFDD6ADCEB45DF4D007130EC41
46D47345E7DDE2364F639290F3BE9C180B2542F62103B3E4E27B987E08F89771
F55ED5172634F9A1A9BBB28ED1D3C21FD0B721C751699D83ECDBB6C95869C26E
F6419C4C12E7A2941391819066BE346FD8D187FE8D81D8D42F0A83A77B0D024F
515EB1171AA1269395C9A7FDD9A6B76A18F75C77CC3B8D79B88B97D1D6DA7254
073953C78E97517EF7FB7B5798EAC16D813DDFFF35ABD92E13ADF85FA7B62AFD
478DA17E8D1F0D615CBD7F3E302E4430D8AF79983D51712C0928ADA6938F1BBF
331D54AF9C627586F74CA8427063BE94F50763B37B84ADF9713ED6A822265DB7
C71C9D0B14D7B711CC0D223D7B1AEB1F7ECB0719785E7939562D393379C71DD2
CDA477BECE7F37A15EC7446C442F8153AB5F9D0245D994C854FEA2EBBE3874B5
25D9EB978518AA70955B1057C6ECA8D62D155F82819DEE90580F6881A628104A
62A074B44B97799A15B7347FF6E9BE216CB5DE5D367EE01C808604D05B54C8AB
8C3F498D0AE331A2DEF9D4E3C06BC4ADF8132F74749B32B221D2B19CA0C3B7F3
32DD484BF31F27E8CCA02625C7D97A289538A8BFB71342EE3899DE4C4D470BB9
C711864B743D5814B07B9FC3ACC17CB6A528591EF762ABA32B801E4AF89319F6
B0B5F32883144D56858DB2E80A210FE250E64C24A95C9342F0DCC0ADAC144861
611FF341B5900ECEE7FEDD7AF1AD89A2C4DD21BBB1436E6DF8B230D7AF6ABF63
C7B805C438ADBE8AE3408EBB6FB5ADA048BA368135DB440925CABA05B8A13B2D
30D14C2AE5AC5BAFA3332C7E50DC7F4449D54E259BC077A76D43BDBD27C7EA54
BDFAFB92C64EC82EC805FC436052C5F3022872F91C4A5E9CADF1E05B437E2EE2
BD928F8C684197B945CF8D84B36F4B1BDF7AE2D1BFC36199AFD022ECC87F122F
B8133356E24E01E4993454B1A423A007162F330F648A428C753F20205F80DE02
4236A3B324F05BD01D36D82EEF86CA96462CC10A9928197F72CA2F565D9D9C14
93F2A9A9900487DE2D38AB7BB5DFE5BAB299B856C408D28D6E9C0927AF998EF7
264773589AAB76866C8A62B4D0BBBEB154A4D9849A7CE08107B542C8C228D93F
3C1D90089268E6CF4305749440837314F73735274F754906B3EB804514B98E63
23F36019D7A2EFC2B06F8BE03AFC1BA88831D98BF3CCF251C95E5549EE90FBFE
5BB42A7150737F7B9FAF7E0D5C9B7C3D6B9AD135B437B7DD011061B1EF585D71
90F2C24F9A9A113FE91E9C14B91C2F1A8D34B1DDDF6531B6B4968A465FADF737
64E81E3594AC3AF5771BAC834A3CF62FF7833FA751010AC10E43EBD1E81973D8
49A47781BC49E3F3969C234A12CF28D98C7F1C2250098C54A1E838A9D3F0008F
AB803B79FD1B102A81DC7F29506FBE9930DDC15185DE26BA4E0A86B4545DD325
1C43B948E32932D13B47541F511340C52E88644A4EF851F14F3251ADE0C9CC0E
AF96076E3AD1F6363E98C7DAEF57C1F4305C9DE26F1C5B3D5F332617D47C65B0
28700F013759BBD215431B0222EB51FDEA07AC8015D417881C4AE4BAECC75F6E
5BA686EB8295CAC3E26D38CA17A0A8A2C9BBA5A3932F9CDCBEA8B1E374667775
8ABBDBC1D46AE38AC1E7E5473E9E2180AAA23C0F2324A24BACC8ECAC6EABDE9F
DCDD38F8C79C5BCCEA527FC5AB93458E52166291BE5219A1933A31D81F58661C
D288782137E0BE8D5226913218E6CBDABD031C5698B48F381A17E7FEA660546D
F3F774D3814481FF721C94CAF73D5DCFDFC1B2B104E77F7769C22788334A91C9
1F02CE675DC1491CBB17B1B56997FCDE6343BCF09C5B5F5940EF2F7168AA26F2
BB51E02E56341EBE6983FA9BDE51EAABDE38560136F81075FB9C13F2418FA6F8
05C3413C81B051C4427FFFFF4209E8C4F911B346B8EC2F885B8BC033D2E208F8
0BAEA20EE17D21E9FC6DF59A679DCC89DCD541913CF5CB617AF622635735FD89
EFC23AEC1C65AA548C78AE537C42201918738F7E6B88789807A6939D90F4FFDF
9393EE9D550C2000B3979E5D08DD2F69BBFC04DEA0F5BC42997EDF96F99B3108
34A0C6D460022BDAC477D3C5C7267BEFE1C46EB72998C391CB01B9C19C031350
9FBAAC996F56D2F57BB71FEB3B18C858C89EA5F5C6FCB57F05C6D18806219B7D
B3ACF4C0BE0BD9341B83454536D53C7A91A2E68B916688CB28364B662A046C97
9741F9F717BCB8D46C59B43C09A0763721D798C0E29EDB530610328EA757CC7E
2666680C24892FA94F395EE810DAD8C17FC6F3140D823B6950F81FF45F752721
620DB1801182B5B385C0F9B64B028722F22735F9450CFF4155C7D0899FEF3D2D
47FF9B5451E0C8193DE50F92391D7A5EBCC360750585E50EACAD25F55A657BE4
BADBA11C5267472916FE42DA9ADAD35346932C06C888AE80DF78CF01CBFBE182
16BB13E0349748B4A57BCCAD899A3107F56611D41953D3FFBD1A8EFA21E37D3E
BD682120F16D0C5CD183D626883D5D0AD264CDE599366BAA2EB284777A24DD12
9026E160A6453D3AA1277D10FFBA3E063138D07B5AF07270C97B5C4BF5741391
22B662DE05805DCBEAFC5985067ED28606969DFD920E240D1CCABC97F3829D48
F5E78825737DE521197A89C847E6846EC08A76EA5C2093E6817270512342821F
A421DE5DADEC1223353192A043D952F5CB93C8A1FDDC2B0852631CCF8BEF9262
1606CE2CFA8C707E2BD307DA0034D3712A88590E36B304030ADA0D2ACD2B57AB
D9E60C1880C04908F595816387879D6569D2E42BA1351FA2B1B3B99C881ABBF8
36F8EC13A5A32A91CDD341E13F803B3C1B2E2A253AD125B82674AF983FC223A5
5FBF610DA352E834B4D4B68D4B20E4C27264E85810890E2340073DFFF0C60DB2
93D87643C0CDCF76C3C79B6952D59C46B15E1939BB624B52A5AA86EE07E447D8
FED8BFDB2700790714620234115C10B5CDC5920699437B7A1A31096F34145704
C80E19A4165AC73F32D0ED08C8FD0D0407325DF94D34069567237A5D8E44ADEA
1BDF127D3C4CEFE84A759910042E59278F8D41B5E0E5F747AE7B0ED09E52D74A
F8FB65399CBCD9C9E55381077CE767994941E9A5D75A8FBBEDA2F3FDF20CF64B
DB8E969FB1F684291242494E52311C02C8A34C0A58AF240FD0EB827E12F79C9C
DFDACCA4E46381A1B3B7E814BCA3F0319A60E233CBD4306175827D8B37C9D9C9
FFD6F7D227ADDE10C1CC2ED80EF653BD31F3A5DE2031C8A89B7626221B948A4E
98E17F6D7F9D3792C31B011AE13DDC40D378D95DD3C52924AD5FCE2A868BD451
D8DADA2D6AEB4B9CC5D73AE2D6251A229F7E76732ECD3187A2C605FE1895D30A
777F2254B2B54A972B3583047D43D202EC047CC23B86F4B8A7E164D87DCBEA2E
893E1D6C48B481547E35A6325B5146F6BC8CA293A1517460D654D63423CA65D6
445A2332A8F2EEEA4C05990EB23142620576551DC347BCB73A011A8645606BE9
A25E02AA121B2B40BDF5629CAA763E03027F58A2A0EBCC7E875A6463DDC5BC93
7BA06088CF78E67EF8A283F56B783DC1AFB27D500AECD59D43E0685C1474012A
51FB8BAA4051D825D512C6F5B230868A44331AC21B914310CBB494457AB6FEED
1B5EAA0BDA5226BB7BA9496445507523358DE4A06B547EB33806C4F943CC8F13
42FC9D638B4550B2727E8682A7A6649577BC07041B903BF3A87EB2EB67845910
BBCEB2A446111B25F62DC4A7E06BD07C60A9C3AB5931B0AB096BEDA976EB37FA
D0D4180B1BF1840A543D8B914710979E7D175DD4F23518CE5F739057AE59C2F8
78EEE00BD6616EA0A4161B9030CF28D8B9C63B56B019740BA3FFE21D9099979E
BD752E36A8EA33F54121104601AC7AAE77183C14FA5B76B08C3D154265A22CD6
8C7A31D3ECB9C3167D895F2258475EB78FD45B00850036152EEB5128796E46CB
0AF4B537987C2ED552B37D8606531F7FA87D87B0C1280BC971742F808B8FE400
33F99B36CCD345102C54FE2208132979EF8740F922F120AE7680046CCA214F7D
DCC1A0BE0EFC7B05BE85D1DF560853DE75D887C411A4C185B878B8003E1782E9
A3484F8F03FF153E19B677C2599BAA2696DDF00B27D9E1AA2D9C8A312F77DFB0
4790905077BBC7B59C5C42CAB2E88D25936CD7472DDFD8AB58FAA53C19513758
125599564D1196DAE0815F9DDF6E6A7F3179DD39B987048E8FBE346C1C6E4B9A
34F6D0492707FF62210299A4423C3ACC13EC8BD44EE1C52A29C6D3CEBD747AFF
17A6AFF908C79C7969FDC600F30F1DD52DC3204F710A77E590211592D6E87F22
16DA55C31E3FE7541B2DB7C9E5641428336BB88918F004874249609BD0FE79F0
F38DA7A1FD78290F4048648B162B3E9065FC84FBBC16345D0B4283EAC2D28D78
D6ECB58B929D51B9BE378C131CD89E1B60B0BDE06438CE4E2E123AC89F962C7C
2483D89EC65012257DA5064E0F3EA0B1CB2A23400F7E6102C826516CEFE76A20
C4B77FF5006F9417D29C73AC3F7C9BCC3D58D6FB6BD665CA0D2C509270C53B5E
A00E0CDE2B9DF23F53001D92DFF312F7854D31792843FA1EACD5D888DBE81779
B167FF173C21262A94FBD27B57EDF49EF31E4E41854BE55FE0FC7F464A0B8025
29328A8729BC1DFCFCE83EA2537298F5EF26F50A843C388AD5EF929329238F65
D85DDFCA7FAFF1EA78D0EB247531EFE2310AB13095F0ECAF0C112689F0AEBCA7
C65F3333991B1F87394EFCAAE0F73E6C3DA018A2270622DAB4E7FF48F21470DF
C21DD4EF21EF8CD36DF5195B0F971C7DF6BBC18AA3D72FE522BD30B111CA08D0
AC4BFA35BD39E31382EB2FA5E5B55C4B8F762EC507A3BA71D96F18FC65FC73BC
484C694843B8C195EBE60A0D0CFCD9EA63D68BF541CC8CDB1252E03C54F89637
A3099F1E6F704C5D05B3DE9003CCB87A1F5265E399E1E43F03EC6D8F915AAF95
548A7C45FE1F337702961B19DDD3634F58057E38B21F897429B05E25A390DA1A
9A16DA891583A755B987124713CD716D91616D24B30D5073CE2A53F750B082C4
A6590AD501BDF6E8A4221395B2F35826AAAA4737FDC0FC2D92581F94F9BE5976
7473437C06B83385AC9411C3D47D893F2AFEDC6D63AFF581AA672B92965E2EBA
4725344BD3C039A064ED7BFF085B9D03597AC3B18B05B7D271BEF9B8173A6C4B
9D891A03711ACD7355594B806021459FB6F81F2408C4EA76794E0557D90085D8
AFC0EC6F43B313FD8B3F70D05F19DDC54C6E90786C303D5907AC95DEB577D555
1ACCD1D93A25DB7B4B658074AC111838A2837E1B4B925B8F5DA833999F9D8865
D8A7FEED34D4B3BB450CFD9F633A42D95220FA6EBF2EF1742F6F09991A1DEB29
D5E902888C14B899A1B3B5BD118312FEF1845914F13A6BD824D25086E2FD028E
34A40B73D899E9DED256C08D453522EB67A43DAC70E678EE906658810BFAD7B0
28AF312744F90D3FF214ED4FBA2CB788DCEFA36A3E21CE8404AB53E29152CF7C
52BFA54671B43450F22F40CD7C9E22CCA67E970187CB71046428D932FE275FCD
C1B9E7775D3F90C8C914E2180EF257611A36B8585D61F3AB1EA8EFC8C4D59728
0B733BC21446FF257E5F543969BD8610DDFC6E89E70322C72CB2D1B1326D1D99
DAAEA07F43D5B205C6E4B8B714A2E8AEF7B93732D36A3AD5B97EF9ECC640ED83
64E03E4DB3FDD8438A7DDCBEF21AE3C1183FCA1700A890FC13F64F08836CC52A
65AE324B88A02933C3EE0FD55F7E0DE57C9C600299C13FDD5BC2925E45370E6D
FDA7F1FE26B2867446551D4A0FEC357CB6004AEB3B96AFB85217D7881347B99E
3C3FEB6591BA51AC97CDB42FD6EA972C57A0BAA11AEE3CE1E7922319FF098115
DC12EB4F9B69EAD5F20B2587627A1363DB3004BFD28CAB7523CDE638FE675524
934AA31E8077D2BEA37F9B96BFEA9BD1B2E8D3E620718FB4B96CE141B5D7F109
82FBFB79416D72C5D328A36EEDBFFAE2CA64A9A7AF92767A77845751961ECEF7
777382B7728DAB66822D010735E8C9EFCBF09CB99C2D396A863A4641DEFCB24D
256C597D91C96CD746C0B35268CFB43CCD80BEDD36DA982A93CD1C355DF003CA
B6343AF8330F7DF65C3779E0A0017EC44F7FBB2CF73884016E37AC7FEBD295E4
580B8086E65C6742AD026A972C430A6941A29CAABF4B752E1B323B7B9F4D5097
FAF3D631D3AEF118A53F65B1A0A34A7DB66CF5455B5D0022646A3C6E91716735
589AD2781F5631A2BB5B353FB01E6E61CBFE9D9340898811AAF0B2D2BFFB2B34
4A7D6765660C584B69EF00E8E3D5D7C2EA4808BDE6287731B70785C23D7BFCE2
FFFE0316E6155161ADF32C7BB0A4FBD22740CB79F0E367B37B96726BC571CFA2
3B1739B485A13B09E00EF1DBB6F326E8CC293BEF9088C5D4A74644FE34F8BF53
54ACE1B4B8008CDDBC0D570EF7C5756176883D1F765DDE7429DEA1084A05823C
6885004B2A7EE2FF60FF4C2FC2FDDCDF57E1898319A0608DEAE20378C1CABBFB
F5225CF76F2C351397D319064B95491692973EB657B7951B7D89B574E0F75818
736008F7A14D6600984878B9D27C77026452B6D1FA204F7C5E005FDC3BDC2C69
B50EBF17966A167E22E820B4287D2D4E614E5E28BF4E4B779D148CE48942F574
BEEB210D9558AB1F0A587918B3AC329513ECA625CC1CE00E2E38AA19A2769170
7DE966AC1A4B13FE1633A3353A6AD0B81F79E9187E1274D30D0300210191BA35
B1FF4398E900BAD952A6B2C7BD77136AB5771E0151ED5BB5AC05C37CF8396DC7
4D6D08F4F635C3FAE86775E8778C2651028EE97BEC301C6098716417367995F6
443412E88F02900067D834D4304D89DB4F3BB97479D325B3C0CA9868A1B41EB5
FBA4C673AD1B10713F4C876FD6DC30590C59320161859D0850ADD4FD116A17F7
8BABBE02F8822214841BAC66C8EBA2E3F039FAC927EE2EDAC6CB6BB6228E054C
375E7E5A8CB708A8357EF38DA4397947F61539A0449488EECA8FDDF1FD6A6434
0C6C36581CD5356BCA652F04261D58A929ABF69F435DA1DDF23F33A8A675A860
441967419342B24B05FD25E4C1CFDB3D489D64BC002E225983745BBB15E93CDB
94C747C6C4A3590A0B19375FAA6326B6DE423A1EF22B2DA4EEDE8734D9C04FD5
21EF0570B32BF84DA4B7D0014D4B11EEED4DC1A2E45F48D1757F0F3F1541C36A
F34047DE7BE98C5371B38C5E53CF722643916F8BF8869838CF3D44A06E47862A
50596B642ABB00839AEBC4FA8A8F4EB286491F2E775A0495ECFB02C636751297
5C609DF54B63ACF0C19B0D4EAD49DE3B43237444C6D6ED96EC9CCB5AC9C3BA61
ACFF43C245B83576D797C1828F6718B97DA3AE76187773D0C8E5EDCCFE8559DF
2FE102EFADC2676F70B84027E82495BE6DDF7C710668BDC9229985DD318B77F3
6CD9C5BFA7FCEC170B795CA5AE9BDFEA31A94311D50DB18C65654310C625CDE6
C016A4AD9B8C5143DE762E1E98A884A073D95DF9248F725B8819BFF80474EB65
F4E74227B5A32813E08325542C873F3E5B20F2D81E3D49C925E40205C98F50A9
AC16CC84825B0AC3ED023776424E281DD683BDEC68F9BA304F9C7FC6ED3AAF74
B7BD78E5E3D41B6FE76A90408317CAF8E749ACDBFC539AB973D182ABB9EC297F
0A54081D3F6961A67EFE1DB15001F9B183561A7C1AFAF21BA45C8F75D901C9EF
EBFE00D48E166FC91CA1B8DF1EB469DF96B19DB13855451BE1638412AF75F6E4
CC3DA088BD60EFA8FEC0DD0E566FB388F6C2E6A0E53A847B5A15D318E5FB208E
05D50CF25F79DF05899F7197FAD7C0E55C14BD1089A68A7EE2DEA4F7CF9D1174
493199ABB9D48E7C3A5C79C3BE4EF6B7AB563F9BBA9628478AEC4A8149338459
470DDC912BE3082E56C9D659D4B403C179DDFF95F564EB7AA7F8DA9A8A2A9347
F7F718A39D1BD4A405F7D19A9B7041455623B955B9C191A2805DE4D063798E42
7374336858E305A9D18380E50E96C44B9B066074E170E89A7B2403285417C6BD
C74D2481F456D47638C68C57AD5511D89EDF24EBC6B0EA56507C3D9D0E5422D8
C1D5657E53654F3BC733EC219689C86FCE58243F8C74C0035ADA5B100978BD26
A57057A392CE488DFA405B0EAA2327F638B99C40B285FC1304144C30A00A6E01
0BFD252FD5FB8623FE147733C6C8BBDEC60CF560872D34629D17F30A893E24DB
6616140010A8074C585669EE38B3A02B75EAE1ECDA3866F640300D9680CC4B04
3DFF12A4EB989D058032C6D1C7EADA86C6143A258CD6A5598AA85D1A40DF5326
C2BC1398D2561B6225DECB73937B0BC4BF6A8B8DB9BDB992D346CACDF134311D
F50F0F021B5D0590025EA7A2062BB1CDB5AC5FEE6A7DF611188F39908F8D044F
98A76EEB6309587C4C0799B8DF3692882AA256FB46231DABFBDEBE5757AA6771
B5118BEB1251D391147FE91F51CC41823BD6AFEBA8C68CE3DC5C107179CDD7B3
2D26F4DBAACB9077BB034791B7D7A2B6DFCEEC86CB51641FCBF14FC09AEA37A7
79D8D125106E765EC78742FEFCE44B1B71C1A00656CC499E542211C049920D25
12891891887373D86FD65663DA0EB64F9B39784A1A98767DAF6992B2EE03B181
030A827420494329E7F9345B2BD6001C6F858B264B100E3CABACE935A9E69E81
1ED9CBC96E7DE20D725F7AF1994188820B6C3A0FEA9BE458AD910A11F4388B35
9A47A40DF9843D73E0F11D12F678E15D9520D0FD050E564904EC4A9530687066
0D6E61408CA13FCD6B0686B145C225EBA70CC8AE1766B74BE4C648C8E9075654
71B99FCF7519CBF15B28D8DDF0F387423F986EAF77FF028F4B55B1F22A1905C1
FC02D8050A540CDB956859E0FDFEF421CBCA98373CACD559D0AA662EE903F379
7CB138E60D8A1D6ED7407A9C90D06A46C64C67FCF454444A6B2E210C20A19020
3866CB17904A987724653A6EBA1FF9AA6F588B896F118E6171448EE7C7D5EB56
6AEB87C964BC30E2F17BF7933567F2A203DB524956C2FCC5CFB9385A86F81B4A
3C7962FB42BFFB35C786EE3763FEDDB39C9060169F5A8E707BD4D33210991AC8
ACD1A39D35EB536A21FE70AB0F7FE94FA9FCFDDCB96AC06B25389790D23264EE
AD6EE09B11B5E400E9F96CC34E7EC509F7CEE772EA11EE20BBF4134A0EDAFA77
BB0CC6996FBD9530D9D9D94FF32CC5BA82DFAE0E66FA849C890CD3F9946CE1AD
7AAFEB92125DDFCC6921CD99CC6B7367B582E8AFE82F35B4706E2CBB27D31BF3
372CCE031874ACFD9AD05B47E54FD5A0EDB72A67C6319321560FAC2BC019A171
D315AF808430D9A8443632C020A4515CB41262E1B9D0EF2EB19E764E2D906D42
2FD430E2E9B2CDDBB219E0E0F9ECD81F9EAF5CC08F43F8C3B2EC31BE629A7F82
B3CC246D0A0CD446840703E5221E17CEF1FE5EA7168AD8A8885AA2B617CF9CC8
9E9176EE4EE1636E0759DD473C1867E7FF636619F88C662721DC1C3E3533899E
CCEAAB61DAA4099197FDCE71511991276EC4A3B2A18573A44B498D827A8A3911
19C8A999C5AED41D0650BECB263205CB5A2D0FFDF15A9995CEFF28A7112D5187
A2DF64F128DF59C3D969DA5D85FCFB6401038D09D77F4864EB66C8DD91F850EF
6DA9ABC92CE6A0B3F132890D732E92A692910073F499133DCE724A35665A48CA
0C3B4888B2EECA07C64C218293EED11558EAA81F7B36AF4E877189EA6FFC828D
5A66ABF7A25158A53972F5D5CD7D48A2109599BB38B41D8C7BF973F063337091
07856E989518ACA1C0CAF6040DDFC8C906B7A7E4631BC647C41C0A093FA35F55
95F2445BDD547448689C518731AE4C25C12CA2549ABF617BBF1F9E1B1B3948A3
1B286A31563E4F54783FCD2ADAF1EF9A2B346D99DDA86FAF0945D0EEEF11C279
FCBF409A8731590FF206D3D283406457D10F9414DD45F7D578879A1C04B90489
D803E7EADECFEDFCE5AB551ABCE2A9E109266EDD88F186DE70B48EB7CC7DB07E
F4CBDAAA6AD35F39FB8F42A9FF394091D22CE26D6E900E9C23C8C0EE5E1CDE0C
59254BA2030815EAC3B7505BFAD149A2706DCB2A974E04CDD3E6F80255C40E42
1912F66F85ABA596C26CA80FD99F3E7F0449E4D65E76905BDA40053A0AC6F9B5
719BBB67777C12F1B08DA281FC86EA02D7D79CDACEA0F2E38E993B049C047F7E
991D0F2934A6B79996764385E40352763877B88314EA4B9D86B349B0950E890E
724DD7388DB2ECF6A4590AA98BBBA3173C7F8444836D214C4AC27955EDE53044
811E208A6A532E7C99ADA39997E243CBCDF61BFF86FECD3B71B28907FBBC6F00
8302DD4FB5E05C033502D73B7A4F4EC6E159397D4AA13876758C55B65D8A8E78
5E97125440CC66A8A1F8004ABB583319BA306075C04A62B49E20CB160B6BC81E
7144F03240B194D6A054B85FBBD38DC915EA8873D0ABA7B2A68C8A932B6A164A
8E286317F38E483766FB010A9B6A99EC1B400246FFEB5178402CB1FB5DF23A89
3FD4FF6B7CF8A2B7009E4A6A83B887178F4E160D094F96DDB608E557F27CE993
BDF129DC53DE83F12349BFECFB2A9CB6AF1C62FFFE99769823981343DBBF3198
7B4EF6ABB30E7586C6C1D0C1765055FF393A40F4EEC10F47A43455E24167E8ED
AAF9A14461C155168B6F18916A6CF891C05A819462577A312B1A78737AB1E7E2
4424AC07757BBFD130AC89BE39B3A114B3A72AA8FF7ABC0FD8A71080F061B592
B308C84AC090826B332BDB6B1F9B82DB52DCB1163C7B989A977079D7821446B6
63B2994875BE9B368DDA8DB17032BB3472ACA4B783E79F88F4CC316C70F6CB21
946AA9A5DCF43DCD1A8AB1C4E2388CF4DDDCB3B64BE9CF83A7A84A70D355AF69
62D6F6C0F210FC09E99D70E56CE70BFB8CBFC8A42A9CAFFC21AAD867C83AC9F8
64636FA176217B8FBD50A31F6949D8C0157A09ED10AB05EA0618736BAA34B76F
40CAE8F8712E1BECE4E13440CF9F4C36B9BEBD3B76D962076F716F707195FDF4
814DD999025661A98F76BE6A56055C3CC72375209F187D820C67EC9F4CC8669A
B6374827F3B3DB94E568D6D4173C60381B731AB53F92553630647F4E6B40A017
1071FCB41BC901BE3A1E8F8FB030EE1BD551C7B6BF7911803D2108457C72CB42
3AFA8D861199CC9258FB96290351E7F22C0516F4035428C0EF589505F6FC6819
3730291679EC7A813E8AA4DC56945D411176AD8C4BB37CAB1F2DA58B1A5A6E33
F5C3B8E9B99C367B3289D61F93F498F4E720FC062C9E8663B7148E40D266AB34
5F022A4A6EB36F1ADA1FA0138AE87E1D6EFF0A2275C26CABF35BF494E8D1FAFE
BDCCD52B3FD09AFD5EEC0B74218BAD77F97DEFA08A12D49A93623D59A64BA618
49F236142A1231FF717CCA47D8D02AF1FA1559885B34C4F009B0ECAAD761A3DE
725177E9A8987285C16097F3CDFD1C86B6A7CE8F533414AF83A1BFC5CC8DF522
94A9328092A4835DA3F316B4368F731DD2F78022B329E929991CEA065AC388FD
2E8AF94DA80BB851E398326B3CFCC253C433507E5838F714F22F47909A71D57E
53928F84B8794AD2CF25818136CD747CA26E829800CEDC98DC22B642E96D692F
A376FAB9E9E7846417AEBD169178FC93331954BABFAB882AB8C8DDB4F69B2CEF
356B4F3B84537C2CCF3227FA30376221ACC2982861665993B66F84E24E05BD57
F86DD75FBA48FD047633477F543893AC88C9FBB1722FB135A3B9C98779FD2AF7
5228F56A15C6372A17B7243A8B0FB26F46CC8D6AEF816E2A17A045E82D7D1474
080C06ECB38D26D7B01080839ED8D858AD4C77965B3AC23A115D33BB2A82D75B
24EB06A3311E9D7076F6E4D15B7333DDA2C14CD79F0DDDD9855A3BF9603EE31B
8B39675783902FEB127F5650BEABD23E91DB98D09BE6630185D3B67EFC4A353D
B81882007269A8ADA632632DA6DFEF255081F7120DEE92A1DE355F41AD43F221
63683C38FD1905895789EEB70EA4E277A9CCEF0D73E7F6FB2F645EE0C7D66484
DF4F580A685E95F32C00E92527E48BA4E1F22B32A5D40C720E1A9011C0FF1989
E9D19B0717A0E9C8FFDE9B49B32B74BD8DE18893E92CCC167DB36DD044E8D059
B146F8FB0720B69A1D98D030A877E2888D7683CADF4F3AE11C17D3CECAD5C61F
16E76C22CC05BC62E0B00A93FCF8D136038E9A78494829CC2C0877D63D12990B
BA4CBB1599F6A21DA4F70E83ED6EA9706A42737064BBC2E9D1EA08B8505930B2
90B685BD39F68C9E491F0316930CF2C3E76B55B3148E7230278815BD0700BAB2
37FDA5EFE065365DBC1F0D4C7F8FDB45F2899604E2DC5786F22F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A22C101EA7D32C984637C2D18213D9AC4B493FFF
C27F6AA52F79A7A706432A7A317A4701BF6FE7587CC217F9F568BA881D7ED60D
954F44ABC6A952039EB1EDB1CF471B02B6CF072D0C11818D3575FB1329423759
57685BC315EE526112B79CB9C38B939602D8F7A3F70B39F1723B8E668821D206
4ECD6E129C444C8EFB61045BAD96270F0C249220A27CBD23A3057371330B4041
566CF5A666F6C6BDDD95BAB691BB29CFEA534319E195268F9BACF587269D7952
B93A2A83A3CF9F354A11A0C2347358D42ACC3604047F3018E58B864765F50BE5
C7C774FBCA4D2B999829CD3ABD54294195B48964E2F4A500D70C6060927EC467
53645F880BD138BCBADAAB5156B5D49E23EC0368E3F06BE8A2F5BCB006353336
BAD8401FF4B1DF0930F442655DA6AB37967C3C55F4C9861C55E3C1B2AE06880C
3B37C9A46AADA02F4AE6AB7EA22C30C640EF5A3908CEFF6CF08E0CFE18E0200F
403D1D51214983C3AE473B87FE98F87F9EFAE42CC0722DF38E5473E93841DF55
4A6799F7B532647689F1F293BBA247184AE8ED5F5ACE6532C3403BF3B198357C
C923D631F20F9B898CA7BFEC383B58BC769E619350ABE1237A697EFCE5CE8536
2A32BB2BBDB61102506B6A62E7FA04B29562BD225A48FBB403E3EED57438DEFC
5C1E75A319EC933043BC492D2DCD34B265A68FE2EF884B94B63E9A9EB8855C9B
4ED897AC1FFC1ECEA424639C295ABD73CA7378F595DD0B8B3AEB847F74D6C1B5
1F4ABA92B0AE842564151BDD746C8C527A5E38075F97DC3BE16D7C9639450874
1B95A5FD762FB88F43DECBDAA701CEB6B41EF09C5BE5E239B2C7A8CEFF12B083
4E28E983B71A0E2781E40EB105E1882BC6B4B0A3EF125ADEC61BC6627D79965B
9FF4BD3F392819136157C6D83B3395D7D5DC5B6374EC88152A7743B7CF49D913
E4622E21D124E1263C17DEAEAD92095DCE9F0E497880B1DC286782B380745FF3
418FF622203C765C0585E03E371BA236D4C265DFFCA4C32AD79BF0C55A6A97DC
F8E18E2F13D838CAE9A4A7682F670DCA4525F9BF3DC253D02D1B5C201770119C
369A7E6F1FE072B19FD7C2B227EA414CFCC981ABC398BD956CD8B6A35580151D
791C4A8F97A5BA88CFB197C0C36D4D35AF4F7FF4B28B3CD4BDAF8ACAC204097C
6E1C7535EAB6C859F64F2EBE6BE7A12CD496187CC1954393B6D89964E31637B1
5A170B8D83A4EAD689AECE624295D27774CF307514CD4F10EDB3B2D04FCE20E6
64E95F419E74A331AF21080A4DD0B0693676BBDF4FC643426C4488F6237244D5
5FBE69E9E56A584561B13556C598AEE1CA2D6ED5118A5D9ADACE44FA0E71FAB0
292D9C09FC870B6FBE64F1E604E9FEB31CFCD0FC6D2ED006D342D08B4F355533
D912FDF120C6C3A6447DC3EF02BF0F21279952177CF5158129800932E238F7E5
1BB9D3C9DB19A60283C5BD107C75BC6AE4F798EDE79B1FBCFAB7CC4F5DAB8C34
1893F1B34D556A6C62D6D7B874373D83A2EBEA4F5827DED76A0E6EB97D8B11AB
F038F26172098D7E765D909A6DBCE2A99C5DBD52F2167A4D5F5060B11D84E85C
40285801A4AFAFCF618EADCEBFB64B009705134B55EAEAB00EF2C1511F241432
86B672DC7E6ADC1824EFAF8C92A651956B2996373302F223C5751A47DA780080
F1952226EE911B7CE942BD5A5024A91F36DFFF8C5784877AE16BC30D56A012BF
4CAACD8C4B153B63CA5FACC99CB454B671723BA2C7413D733CD0EAA255A14485
032AB27A02908F57A40021B826D517601FF6A612C7023FA012D357BDB21766FD
3945096FE9AC9BF3FB8443B8EDA92FA03F384101685D9231AE9FC1CB6AA14E64
4C7E2511860B0CF66DCB7854204A65CA9702CEC34D67DB765B3886F28388DCBC
4BE22B74FE346D66141F2C18BDFCF0F4D6974487231BCE570D3895D7AEB7424F
AEF8DCD7F7BC33B34BF3EB97D4D14EB56373FD300D9665307128657A5DCCD05C
9D899BF63FA6D73BC4D83173AB7FE029496930AD67584FB0DE898C3C5D42568B
EBBDFC8FE6053A7F12F6867AA690395BB6E2C6A7CEC51F4E393CC960CF5F62AD
A4911536477344642340C3757D39C5F6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
9DC141B7F6830D6771F1A3CAE655CA173FA57D400530CA6FABDCCB4325478D0C
93AC7EAA9DF7605213DEAF94C7281D9AC68D884E15ACA3BA68034F897A2FFC1E
F76FA2A69CEE7F1E9543904F1773969F65553C3469FD85B2F2F89F0E547BFBFD
F62A3E47DAA4EAD6D47F0305CCDB297C320A48A3655FAFC810CEC6F6D68ADA4F
AB5DD7F61DB94072B0AB8F1ABF62A78E43E1578DEBD2D05109DEBBCEC64AC700
4C28C4F0A5E3A003423B9958C73D306B2B4A7C67A95F8B4E737992642BD3701D
39FFAD94524A7752560FE97B8E99A12AFCCC5044D989BCAEC863BD15CAB7CE63
0194962E4183C3838D9401260A743447DF953444B29D7CB004560D0685F73E87
72FDDAB87125F419F90D165EF1C2A06A9B7500C6AD185B4115777C6BF9C24D88
653589B431FB84E4DDB650C2F783594DE6123D3142FC5C99973AF211F2A2A05F
5A756073B85FEADA4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3580C547C2
54FBBBDC95998DEF2EA825E3BB2AEEACC0F30841835121B7A7D7A973F2EF67F2
795E6DD8CF55B9823AB2B15ADC328CC3AC493DE8C2F022EBFA14A2976D8E3559
B5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E9A716737B6BA413F846A887B
D1B3B89EEF73565F3D0D2D1E40E4C2811D37C9029692DF8E94F6FE39474EE13A
EEE65EC0E099C29064CBC0503FA4C89D845F91A107C8414C1648F6EBF6C8B1AA
7B2F72302AC2C6E6E9E4FD1EDCFCB8C648B2BDC18FE07B44B7E886DAB96F8B4A
BC3C584457B1565FE02E26EFAADB605C5CFE109AC7A355E2283555E10CA9070F
BB98E2337281FDEE7EC20EA060A062235F8848946BD058A0C86C794697BB0674
C1DA26CAC3FCFFE73689E2CCCAD5DE725AF6C7DE282CAA214D69B6793520439F
2991BEE6E427D4E82FADAC6C3829AFE1196FFD8D1D0F6BFAFF4F9062FDD08665
FFBDE33DB3EBD99D8110257DD0B832CB4209074A589041E903F6D89E22D34EBD
2B3C90EF5D9AF0A0DBD5145F0FAD88EB09D1BD84D00D951D4CF9252A4443EECC
AF1E56E5FF02B9070C1A92470E3AD7F1CD944E91ADBD1EFF555FF3EC5664191F
1C11943BB76D70D356FE5D145C73670D1A8F71E5C4FEE96C8D4DF87FF05432B5
165C8DDEF25DC98CBEA51FA99398860E1C252C17EE576B7ED658ABFD497DD5D4
E49663A5CA73CA347E27BC49C7DBD28DDB3AC7A78020551168A47ED789C2AD9A
B8C8FB7EA2F8C7D4D9FAB4B8DD91CB69558534CCE31AE7E157D0B060877AAEE5
14CFF0AD50200A157151F7625E63296E325E2C36D5DC45C5129C2D342CA7541A
75675EB2F1A5BF25461BB38C84D0651F4644CF51DAA8608BC3B698A22BAE29AE
3FE5C543DB648AB544E8212B3B2F97B5844022274F5EA46CF4E9D49CADFF1DC7
AD838B09A2CB6136CAE6AEA52ABA90745D527188599641549149217DF6B36367
A67BA60DB09562E82863F6C001ABEACCA36DAC81C30C11F98A77F4D100499847
E1102CC075FA1210881D95D6ECDD37B0B820176667500E58782156ED77373459
6699116573EB74FC1C83B091EA1700BD5B069BB7DEEE2BB45E7757F7BC00D85F
75BF5F32B350E2CF46BA0E8D0120BDB3E742C15DE5A8340318F907D7DB5591A7
08C83C63D6D457915A2F41B21629926169F4AEFD81BA2A880F4799EAE1C0C57C
FBC28FFFC956640872B49219FA101B88EBFA3E47EA4515043C418049903E3F36
885AD45509FC3CF7A376A608FC51751104BB96EAF8314E2322C457EC6683D385
525F118C799C34B50840604E7C248CA5BAE81E8C76C29FA3779933221D8A612A
2DFF00179C41CDD34E7015DD7198AD6EBD2BC01221F7E35F8662AEF8B6203C54
59E883141A505B275EE1333E6958254B6D96C9E54D47A12F4D299F67168AF7E6
1F19056BD1DEB7FE32A4F4E62D202CE86DDB34598B8CAED5B6DA81A6C816C747
568DD57D21AC8F8B1CD8B2BE97272017FC8176FB0988076E76EC6E8B4CA921C1
AAFC0EC3E24C38BF6D64E9C259ACF279C3272383D7526CEE1C178B1C6988F963
BB0D7534D41E675EF1BA59AA153AEFA7AA88C44F92801FAC61A4EFA2911B55BD
7DF444571A774CFABE590CD7C75BBE8B58EDC3A2C53FE35CC6B22EDC09857DBE
3019A7C60107821040CB0824EE588C4973D9A0D51FAE6E5FC9F82277403C5DCE
FC2C316D499F60E7C6C04DE9C117345C4E51748D3A5C5167780590DD9E188017
79FBC3307C0BB8A5784518676D62FF024E380036EC605313952366F3C351EFC4
33256002C59C39260DF18DDAB0BA5A40946D550B7831A2EE2670B2FC5DF8A50E
6F0C48860C52FEEFAA70B5953345568F1DA030BEF5C410DCA1D11F770EBC2E64
1196A40F44A2BD2529610091D8A9F09161A41BAC6A15727CE914A1009B2517FA
41ACD230B1E0CE76E289C42EAB07B0F60452B537A69B9EB54A68FDED4456122D
483AE830BE0C173A0D256118B0867DA2ACFA39F9F6EF1D81C607DDC242707D6B
53ED198367C7D54AC750A007498FA31E27B0F86C6D3AA81060727EDD60506506
EDE0AF44190FD947C4B9D41C4A6A03DF807F98C68F883721E6E7E6383207B054
006A409855639AB72C071CA7DBDEC1EB29885A11D100A9D443EC282E485CBCC4
8CA8861B0BAC0B3574ECAB561760E687C3BF7B72600494F60D3490DC63F40B39
F2C388F118806FAEF0361E5A30DA786E599D9055059C0C2180824BAFBDE47BB4
6F54EDD7D7FBE6B569AD9CA1AC51B9CAA30D805089E1E96AA5F1C7D8579C4D83
3DDC80D805CFE4868E62C90C06533AE6C9A73E86D96C6E3919B677C2599BAA26
96DDF00B27D9E1AA2D9A1986D83626E0D8D0C105CB6FC5F610237BB3C6E242EC
52D4D247307FDF5269B44DAAA80E7B4DAD286C0B4469A6264647AC1D5FB8AEBC
6481A94C6ED5EAD255050003F03E16A6529971CBCB06166030EEF983EF332497
5116CEE2F516B4E2977709EDBD3DB7AE516C55E742F598B2D718232DDAFB2043
F674EA73C9F043EB73E6A0511F1E28762342120515EF4AB7CD1C0D977AD77AA3
B19AADA40A0586A02109B864FE34566E17B4A1A09F9BA10DED06056B51C42FB9
B6A9C4362429C2FBCD39A24463D3E0AB8FCC9F3FD3A30F4F015CDE9893D5D66C
804F030B04D85B48DC345FC8249F699D5364BBA3E4FC59D1F7378FB3FA254230
B9826E6322C4D6231EFE10719E907FECF478FEF51DB2687D13CA64138054D591
B1C7894E2A0D724F4369326D31DC3FED9625DDBBEEADB867DDB7FF0678F202EF
8252CED93785F720E4DE92960A101294ECE75FFB72E6043F33FD3778024A3CBA
9DC490FD77F0F3AA902CB872E59AA81C0B0A6BC9DD687A18BA25D37CED0CD4E4
F0736A7C0EDA3E239C23A9BC94D2BB2581629D0C9CEDA46E01A5443002CFE126
DF21A740D9791D4FD8CFD7A635837144E85014CE922B9801C1C1939D2FCDDA6D
CCDC6E7B4B622D86519A9A42FB03DD17290E01444DE0216C35C52F0C3950222F
A43EFF75AEA3FA058494B0BCEE5A20AF99C473D1241DDDA5FDA97A2888AF5FCF
BB88F51495E5B2EECC7F07816F1CDFD16F7B82AE7FA98BF363EDEB32B1544C9B
7F8041AAC5EF16801613FCB3273DC62300B0AB0281C7CD4FBCE2B5356A2ECEE5
118D86CD0DC85A9A53BE7E1C06835390A532F3F6B1F8FF071E03D1BB27C6A591
AAF6BEBA1976526BFC9D408297302124C1A7A32D8F5976F7CA9EB64367E31057
BA0FDFF1E76B74CE02EBAE87CD872F21BD5FFD0A6B3A4A17BE19841B6B3E72D8
FF49563ED02104B2FD887CA074CA9C0F00E87A5D08AE35CB8763834BD6F9A58C
138E5C97C4C1059C7489A306E1E2D428B27933780412DE65BC035327144B153E
A7313133DF49A031282BFAE32A80AAB636288DBB885C46C5718498E0A8C3AAF3
9D9B7116E93D48189AAFAD5289F9B5E659E88FFA971BF1AB46A9BB02D26465A3
B7C450A0B6C5ECDAD7BAA8CECDD4D795902529AFCC3F1A325AA9776B33CEB0A9
6B243044EECD4FC971D86F6321DF5D41BDE10B57314C784BEE0713C7F20697F3
C699FD557D7E3CDBB0C43BB4DEF74A9B4B0D144564E5A47434533AE9CA24C26F
757696C3F1320096EB562924278CF8D650060CC2923372C0A870FCD30904A5B5
D3DACBECAFBFEF8E180577CA9B15C30624DB0A397BB327D02945DCBA64EC32A2
D655E122616D69367A334E4E0B0DA261F9B513DEB62CD4F9FA3B78E824B56C3C
148066676DEB7FE362AE5F0C0865691B619ED8EE4D3417DD8BA24967B349EA86
0DFAA2147BE95A00D0F166D1AA1B924F2E96C24673A9E1C59F5B70BD2C9B7D62
FAEB6119E0F1C4345654D7C3C442D34EF5E344A819CFACC305F680F135FCDD61
69645C59195984192F994AD63C130BC28E26A37996DF61AE7EAB1C061FE75A01
49C4A665FBE328F1EE5F20C2557425963BA635204E89F80CAB3A5537A52C5576
BDAB08E5BFE1A7FCCE35DAA893E5CB7EAFFCC52EF45A55EA03A132AAA54B5AC1
B745CA3E8A11FAFF1F4873DF465C27AE3A558D36A8DCA52875B5E59A5E469DA0
5A766C9C67C95A518A4E514DB0410B1E140095EBECF8BC879A3A7321FADA2992
77D8D09E8CEE8238655D6D94058DA1F21D32BAEE70088C9E26969675F5F3B9C5
99CE5C7F64567C9D80D1829D7FE5F45647ED6B99C6D96F4814BBF524929CAAF9
701057C76C4620FCE8D9F180B175CEFD9C22E6EA61B63A8698A10F2496E208AE
42975993E68DA3E1ECEF8F3FB57A5CC84D1EFE015D946B3FFAEBF3970D6180CE
16EBE8021E7A49B60C397A289614BD5085D49ECD0464B494CD1AB564A93AC810
40C1DC10CE4D1B7A2CE5F56F369AB2355524440AF33BB7D04CF075F70A8BB95B
F53E8BA3FE48CD123E24A16E61424577ABA7335BD2FACD8E7E4D33D71E8F20CE
063F8887B456016CBC6216396DB274CABBBB38AEFC9E5FBC242C794C6584737C
39EB7D148F45787CD5799C8A99F9B2386BA4AD1134253D8AB94403B9C232105D
EC0670B1F871F98366F4510CFD898FAF5022413AC49AA92BEEA25BB7C0D502F5
2F397F3480C143C3413F1F3A732DD8185C51D692405F5CBD9D62F34059CD19DE
E5041502AD1D4E21E95678C9CE7B0D8863375993CB447759CC506C2FE22FE565
9ECA525C873ADEE581FAFD1F33A85B6169D4794B1D73940FA792128D0C9D92CE
1AC3301B7E99A4A14404AF24867E4632D6D7E9C8821D945DAED7FB5E33FD5121
D3770B4E550F3B03BB4ACFE6940A2A8ADC1CC2AE21BE2B99735AD3BCB80F857B
543BC64BE31FC83D5ED0A4866444501159BC24644F92E34598BDF81AA6149CCC
4D1063186032CABD2559F1CA6D3B3B36E991FC1F66E54A3EACEF4390B62970E3
45CB8027706AD0A4C81D4BA9759243F24513F650749EE3C9A2EE605514EC228B
B66A22545962DDA88F0B9794C85BD9F09D4B894679CC41EF3EB695333745C386
14C0C9BB060ECAB69004D3628756A3A9B624BC0BF87666BE037BAFBC79F33E07
B315ADF614ACAED323DDE76EFD5B8352A969A72EDF26CFAA43F084DEFF1E8EF9
6CF022BF1B10178ED4A484DBEC72E0B3FFC47FA639D2B851651C251B9EB5A26D
EF9EFA45B44CC4377562BCFF890F84385CF7C56DB4A483D83D7CDB2BA248A366
D5E12950FF97236F55AF6FBCD9AF0E167742D0BD0E131BED580131B97B3FAF26
B96747A8E7DC923BA8EF6C979283BD14FEF8A537923FC4D2AFDCDE8ABAA2C336
40801154F780C58A40EB1CDFFDB901F93C044C87B3CD95AF693F9BEE22D70709
254EEF9476C91C59EEEF6DDDC9E7C6176065A50FB9C34A61B893616AD0E8D424
F62EB81B5944CBAD8A5A339D8988EB92A5349043DB7A3928EB7B19D637A692D9
BBAD42B63FD02166F9334C2DA766219CD91E88EC56AB00C6C757576EA0E4C8F0
F14614231A2758308B86D0EF50FC3859C0CCD704BF425C64379E8F07D1B5ADA0
7671A1C06451FCFDED1ADDB0C30B8DD9D2BEF993776867AD5097020FB6169116
E0B71E4D73AB41B2C0B8A8C96CDEAF814991E9CE2872953169257887188135B3
D6CE0F2CC01B7569C39A81BDB082FA51342D1E0D112528EC7686BFA27045EE37
20261CAB35E64E5F27DBC431CC1EF45E7241D4FAF394D14F4872A439CDBAEE7A
A471A403B042E5240E924354D68A91356CFF91E85BFD704003D6109121880DA9
C89FECEC969068C3E576CFC5980329A197531AAB5F8EC42E5A582564C9931287
53A9BDEE22D46F9CEC8C17FF66C1F90D8C4E366D1380C525EA450CA2E00F1358
4B0AA7DD92F2646BF7F6A468310B4681C58D18345EE64DC11A1319A075FF8716
F6ABB5C02B7FDABFE16EFDE6DC492539AAEB170FA7E6CDC5BBCF8152ABA14FA9
FEC5040D1B278B4D30DECAD8C9757DEC18EA9CFC6E0E14AEB374E80298F0AB2D
166A3412F118F21548D17AC5E87463E58BC4780AF14EBBF41251615CE32FCBC1
B02EA66BA63EC534C60B61F1B413ECCA774BD09EF6BB51FAA8F7A70066AE0198
DB15A1E8C6D88EC1B4CFD5AF48A8912248A84EFD386C6B61A5E203369EDE9399
E5B127D646FAB0A8612DCA1CC8DA7A3BA097F00E10311791747231C40A3885F0
28D80A83C90AF0304AE44B7870D343DF102BE43CD5058C3BD0263C6869DB901C
F49CB3C8DDA06F58DBB99B72224350C95D75C7DCA3D3B50E94D207123A5B05FC
AB7FD90E2A9A4EB7FFC98E7D658560D837FB67D3FB396DC1BB9A920584A462D6
00D899D91052FD80F619495B0944DAB553727A204C65A18A0AFA2C09BA5A38BE
18C729AAF5B30735CE380AB814EDC24C3140E4E908E0F46D76D5CDE0830034E3
BDC2EDA5AB4B0FD9F3EBA604D81FD490832AEE5010AEB42AC994C4B96D4043E4
EA213A8D036EE89251243053215DB1D8C1E41016F1DA081F683DAF8038C03C57
418377255201AE91F48B7FC6E4EC379D23BED8DCA6132D76C53B78A28BC434AF
4C91CF2A686AF072D547A5AD7A1C457D4DE11410C601C40F6735883C113C2E7A
8DF0AB9C9B35E71B0BE1A3A7054B46ADCE7B9C2D686081DE6A26FAA3A118C170
CA7E61C62C69A0539A035AE3749991DEA439FBF139A16A55342C0CCFDC1FD13D
5DE9B840FDD96372799EBF4C9FC600AE4A386AB946BB2EA31EA37F257398CE1E
359B28940FB78E1BDC0FE5F0495F54931E74E8794276F856200CAA451413296D
37D0B3F10D8795B37F4231A18A53FFE7F6E2AD7BF9696E5F3C75320B4A2FB4C3
22929A703A21EE0DA6963B63E6969C1A2E0A8226817F537D50344486533B36D6
831B58CDCD3666FA965479B2A5F85AFA549BEE2C10D96F6EA3E032167058311E
D0AD1ED3B185D5177C1706377AF88E699F7437339478BE40C39D57DD280BEF8E
996D2DE1E3AC0A662937874153DA92EAF57D6D9CAAC78647F95F7E0B679C0D5F
E02E0CF9AA45628844A542741B05677858F156E9EAC6EC03872BFA8D9CB1975B
B906A15AA7FC59B541513CD6FD08039CF40A1F5B90A8BD181B029F5D3F069B78
8350621242D8B1E236626AAEBB912323B0AE7E3BA41EB7AD90518763B64B0B42
2DF1DF7C4D189E7A09327BEB82BEC7BB8F1C1D8540FA065E4DE78E3F622660DB
AB749090871FD2316356C3CF06A91C4723CB373865E3627DC24E3B67E616D26E
B4017C11A63255FD0C1CDDF679DEDA691E30773C286B1BA80CF195016E20600D
D87A29F1884E7C4B715935E2B9D435CB9B033FCB0EF177EC0C2D3AAD49BD2A0B
F511A722FDCCD191E7FA605A64384C2F529685F965F25D9E0B3809BDA31CEEC6
C3C0F4ECFA9007FD8BF48AC4747D6A07A1EE6BEBF045102A86D9482DAB615591
731CE5AA2C88B3F79EF2411B6AA55A17080ADA886EDFF49FFDB283EC049D3A60
14603FCE64694865A2B58D8CC192884D224F728990E714193809B0AF19ED917C
49C7460B2C1E8DA8866E52631328341167A07B6BA482AA6199B185491196BBDE
507ECC0B041E6FECE4DDE11AA3604ED345E4516AF2DFDAC2B63A59C758186ACD
65296DABA92B140969A508FBD0C338ECAB53C74DC4E883803F2FB7FB3BE45F0A
E4DE1B9AFE745FDD97A8AB335A47E3505ABAAC96F935F272C5E80621E49487F3
04500201A506926FCD5B96A70D335D41F59317F44A60ED73DAB72A2F1AC1DE7B
6483C2CB3E4716F48CE05507447E290E5C9AA8696C58454DDB9649BD8A846E6B
D3D374BEB6B9DBD5C10FF2C4BDD7B340A9C9F279E5D41653288CC946C4F57560
1FC13C670D86C1F2F7E12FEE710F4CB7B89DF870827686314C5556B2B4E1B37D
E4506ACC4224CFC00A8F833395CD2126393FB39C1F05FF8F31D2DEF37BB9B883
334F5039E64965302A8B4AD3F6880ADF3C06F87F30465B40B4ADC254154EC1B3
0B31896777EF5E98AD23F40DE32DBC7F7F231CC7937F8538038B8CC0118288CD
A498AAEF1EC3C2C2E9F820D2B1C9B1598BAEF7CE0226917D674ED5EFF6B95666
1666684C07055FE2A3B6D81785B7918E7475B4B5D9C27C58AA432F300714BED0
094A83839F08E766D600CA1F2B0E0857B65F4F547A468E7D3B3C9B12E1BB4417
4A99A2367CDFA06D801B1588A55CD8FBC5B1A37051DA8BCBFCE2CF04E2DBA863
43BADA5C89355A821D20CE90E170EFFC12D2D1F2356F8A3D634E5AA9137DBC27
B3165E6F804BE8F048CBABB1F17C135472030108CAE518B9E35E4E061ED9980F
D99D0EC0BCDB65EACFBAE325C5CEF40136DE44D1DD0956C1362CA7676F0E037C
FD3489C0DD45A62C8B6CD6D07686293565232BE739AF0DEB07EBD0D7AAE0F147
D8D2FCB7DB9C8D91A19A2C089220F147F36D9349174E5D0BF463CBB4A1566118
C4E0C6C04FF2683EDFB240D683186FB75C5EA1BE174E29CDF589B8409D4B2805
67E8D5B9EA8E8AF21A352BEEFD6F0A00D10FB44C63EAACAD82CB34C3725DA52A
528B5F2D43C092A860AE9CCAAD3330408DC5008EF4383FED9887D4217EF382AE
BDC3130A05259B885E07B50701A7A98C51CAFB9CCF772CB5742104AAF7F6B372
34BD3256784F955C4E46B8CB0250E88073D2DCBA11371D7F846959F2A4DE853C
FE0F9AF5A1E173349F287CBDAA4BBB6CDD4D9DD32240B40FE2F0786E979497CF
2A3361B379302099ED7ECFE2A6D644CA8735A4E96445BA9CEBB627718F858ABE
3139C6F13F534DDA1DA88A06EE36401A2A54A603C7AEA2AE0C60BCE75CC544A6
471C8094AA8C8F3509B2C39E8C5121B7A7D7A973F2EF67F2795E6DD8CF55B982
38D481EE6B063A416ACB9550790198029F2205E51C059AB8C8934F3A844D66DF
AAFF475C490B15E5CB1BD87A64ABB8058172DED8AB858A3708405E2A42E5C47B
6FB4337D528D3091C99DD2D487D033EE9A75B7ED9E43439B6ED4FFF46FAD3383
C8AB94ECDAA43C4620075378E78D21812702A63AC37031CAEE62F37E54EB76D9
D9A73EF32B73F7C60C9667C727E4FD346CB11D121777114AD0F0B8EA70A5EA49
5069A1DDF11DC589D2E91C1514C2799C50EEA81DE6AF42F220B87F22913A4347
A4522359194529F12D502EEA90204B4D372CA1B7455D51E1ED8E082C5D6BFC72
A19D514A9E5A3368F148BA687B89382110163A2F7D9823175E42D35054A32475
D0382BAF17AA04B8001BF83C1C822EFA66A75E01A68758FD97C5928BB2B1DD80
A3FEAC82A8998C0204D4F954529D2395D6191F3280126D6F1C924FFD9E94B76F
6EB9D89B157A3F26BEA91262446453DE7C661ED5D3477A95C24980073E63DD9C
91FE06D3673A778B833326CE8172363B1B4AEFDFEF230CE13CD54376DEDD8CB8
4534728EE8FE26808EA08264BC33019C4D63AE6E85DDBE826FD8145968FC237F
12812D78EAEA321B39323C00BDACA87A5E183E675CCAB1279CA8657CFEBCE03A
8E365AC6E14956714282AF3CC8E82F916BA8E9366E0BEFB97591F9BA5D835B77
624B250F7D2B61449686339482AA1837850FE2D62A37076A214FF49C714DD59F
00B920D3C62C04AAB48F6BD8C8BD63D8412DA21010EBD8E77BD4B7FAED7B613F
488652BEEC39174F8717DC87B4B835C7DE472E783CF2984139C440B18E35501E
042169E60B4CBF586E6627B5968B5BC6C000DBDCF62C0C48FA5185D3BA7EBB12
FF64DF3199AEC1CD0F875D525CF4D5F48CEF2728CD7764207FACEED85F65524C
042AB51A2839A6AA5109885F46BFF8F4C77C6C64C5FACEB83CF61D7087A1AF7E
0663AF1C2FF053C1379F4526BF7E6B7B0934D43B9A24F5A9BDEA3D6D9690B071
F9E0812F4FAD459D4943657ADD842FF3D6D1143830B3796FB801932612BE59E8
C4EA4B47A39D9D73EA96FEF28117A2FE7EC484B84DD4DDD8BF2C4162E29745A6
9E77158721947F2328348B3A1D3B71F26F2F83281B0E9F6BD8CA9EC886BEB2D2
7D8ED7FB312FC415A0BA6147E665037B95C91112C266328D8A85976B5C34C57C
B8F2B0FF2180C1659CC291CD5DF9CCDE6DA0FD3C77D56D063AD44CB0C857440E
BEBB371D8C04A76E7B57B775F889B9CE99047826FF7AEDEB09DFB0B956B404C7
4657B72A77E33A5B0B82EEF9893042350E8125A6FC1CC6271EB7B2024B4D6FB6
C262E8C6E110D2829E58B3F2115557F9DAB6884BC3F67124B5CF48327FBA645C
9485D04E301A710BF959472B33FCC33D67A75F80431D059BF7D7804181BAA726
6798477272F3571958BB8A5A5588FED7F69020B67CCA0A526228AE299C9352CB
5EB8F2D1664F33B77E60B8D9DC626B830A357F32DEBE2F5CEDD56FD132FC9354
FE6A0BA11D6366AF685F88D99F32705FFB5C319091904AA41328D97F1EE6A630
FEAA7E220886B3A57BA549FBB15D2EC39ED7DAFE7AA2AAF8B31211F9F84B7C1C
08FAE3052232DAE19CD9401354E70E1ED37284DDD65E8228E85DB73774D44B5F
F7010C93C6FFB55D0FA449D50FD5979A5A65E218E892C350FCADB5F66EB82D08
13EF551EF70F90A5306D2EBD3AA0CE027E4703A2EF8A43EEAC6048A7989E43B6
A83BC488F512F8067175476917012FBF038D7670BDEC95A9AB4C9D9BDD58FA74
D12663E6DE20CEC07766BB8045A2D75631964EA9A34813F7315679AB223BA004
961A7DBF1AB5613C04521104E0141075B747F6B0C8550FD0FDFA747EE9A89161
F93F178D7A24AB2C752411FFD2A7F655409064EC92E4D0E7C706E4A4AAE9D90D
76E95C6AAE9C67CAAE00C311F26461F99D0D13AA5A3CE4100B3D3F7436A5F496
503A3E108CBCD7AB1104D63A11434EF11317DC8D95979C461AA69DDB99797D1D
AB55BD899E1A8F4CF9FF67EE19B4FCB61AA4463C5F063D1CC9C9D08E167B32B2
66A48D168A7B15993737BE0E6A4878CC7B9DC973319C4730E532FC9A74A40B28
12488ADFB5F0B25ACA22605F360E3A1C8D92F3DA1BC112FD5958E681AE988812
2A244A44A8E65BACA3DDD206F47858FC1346FE69E6337177422452317D2F2DDB
529DFEA26CF589B0177E6DC6B89FD204E5235E57CC6849A365F9AEE986FECEAA
CFA19187A0ACAE8CFD363CE13CA8990DC82C4463CC061B079BA8C8459393D876
6BF4B26E479DA5A451897CBF7F8B7139ADF77EC4DA414C2CC5424CBACCA942FE
D7E0558C96A7E0F31A48B1DD6F27D321F6F9230C26C06E9757945C25657703B7
D438285B92A32531A40E452F3AEFBDB0DEA139D539F1465D50C5D1DF71C76971
EDDEC6721FC3DE57410DA12E83ADF38D46F77CE5B3BB090DAB3199D50AFD9740
758FD5FD216FDA214B1AD5EB1B5B430AF25A20A0B636FFEE11D8C68B83FCA0C3
42E95FB053CBDAB825988EF44CA9EB46E8BC9723187596489A8894E0373BF6D0
E1D56EA24BE999B697212048EDF14479D008ABE5E434897E2C25C96E232BB94F
320D56406F4EA3202920FE665809102BA715FE9BA6F8E302F4CD994EC08C00AC
6A66C51254F712853485F83AE2F256EB21595E795B727FD7B5FED0B59CCC674E
E4C7AD117137DDC1A13F7AD8BD899F9150D97CBA1FB9E910DA5459627D2B60C7
A3E39A4C63D2D220071347E5C82F572AE49002D43E0BFC4D3E0EB2729F2C58CB
B4928627B5206F1B0F805624D0F3FF6DA7F1750CE53A2DED1606AB2B516787BD
4341B92479E72AACF9ACC43EE1CE628DA7C0A7618327CF03CA722B49406D37C5
5A9EED80CC2ED3193AB0786C75301F9941E06B32D9D19990D47349E44C149600
B40429D6A683196C149DAEC4602CD09925170795EBAA968FD2BC7F2F2489CB63
B6620D6BD2F78E757851AA44975855AB9D1E3310DC01B08B5CAC046FC65DA479
1C5CAD5D6C7128962A81910C6EC8950B771A994C31A54DDC94C9A8E8625557BF
A0C123C0DBC7D0C180DDD97C3713D2D2751EBCDB6B4D935084759EDE51D9F096
07F27757905BDC13FC37F566F4BD5B50B88FF85D8F035FFA5B7481050ED9EF7A
99E3FE103AB285C9682CF3637E1F4F8AFE15ECA11967C6324047308F7F91BE95
FC29FD565D68BF89BD37A2E4A0B6BE71A47B6866270CB6BA139A251BCF348F2A
19EDEBB709068CE066905D01DA8454E8D690A5C6425A4804E4D928015F2C12A9
472E89EB71D7CA53FA5D8F6DB11C0E9D4C0DCAA264ECDB79ACA804CD809616BE
4342A5047C07E76889E53BCDA90900F7C975FF818253E68DF4F605F5D980FDEA
576582ABAA1A5BE750E1C27BAEF83DB40B1A210EEC07F1A6583E757F786E44CA
815920DE730FFA034ACC65076BE594772C8720A6086BD25E7B475591CF4511B4
AACCE4911BFB3ACF70CCC5DAEC9829303630C0DF3B8A635AAB2DF78DC1F33072
C0E7876EE75D00A8F49E16721B2540D9A6B0DF0E739A00AFB8FD2F8F970388F9
33F31FB0EF9DE53F9C542FE0FDED6C93CAA0F8ACF16AAA14BF2ACF5760193CAF
399CC3AE5F9CD0CFC2A5279D7A5EDBB4709CE6B571A405170C17EACF418182D0
5BFC70DCB72B8121DC06B9BF3D12A818C86B453CAC4D24CE79375A3FFE29526D
7FAA0AC521CD37FEA1C38DD4E27EB0DB9F439CCA2CEC2BB19918B1511768501E
DA83DEB207BEE258A6A76FCF157B681C6EBC9556BAFAEA2D50AEACBEA1CF66CD
77EA96AB711730D41C5D09474031D2BE6F0E742B2C29E285E4C42EEB2E56B0A4
1E6E1A0486FF6CAEBA8552AC633C0D6090CD1993A6F5469E24D4E8E1D9517433
165B44060DEBC0EB19723078BF31E2E22002C377FD12B59CE9DBA2E3ECB7B592
5DD5D94ADD48BCAF67335C61B7F2B2B654C70F5370E7512F964EF8F652DEE49A
1E9697EF2DAC775A78F0A7EA5AFB5AD36B17562F28EAF1127A154C08618F6A5E
BC2B684A4186AE0352D851CB502594A7A8F782E19C57B641701A8A9F372184A8
5D6B60DC69A4B3D63D65831F5E290272D0DA519423C9C9EACE5665B9820ED7A3
22E48F3D522EC04956072D246EAD2CAFEF93E7F63ADD9F89D07AF4D4F6808F53
E49731A82D70CDAA54DEB6C2E05E49FF6F778D8BACE1D2FAB4B8DD91CB695585
34CCE31AE7E157D0B060877F9EC0C84F6A727A6AF4C4E67B407BA12D400BE343
527F9FA3F75519EF87BF251487D1675AF4D5A6FFB289F3708BBB8B5C2D463686
03B7BB531CB6B642829DE89D1676AC18D4257E6E552F90F2727C710812F996CE
69E3606983CA5BA6BCC51BA1E894194A48BBD4FBD8E13E8DA00B902F8C3A5A8F
7F958EE6D12977120F43F44DB3FCEF5D70FE02676DE17B17C20584AE43DF77DC
208AA09976EEAD0EA8FDB29B5CDCAF1C59935EA4D93D24458957904FD4861B0D
140DBDB8E20C47C7832E06683D41A3E8AADCDB4D18753287AF757E77D486D155
3CA5C005A4B2D345EF77A5BB17D93E3B57C3ABD06C98798EFD0194C0EE9BE5AB
A27108EE33DF54A17B194E1893C19EDAD3239B98B7E2CFEEEA48439DE1C2F997
F90A763A3AF00B96F39E70214A1580018B2AC2BAF316A32FCDEA93672B2EF536
4848250B30E98EB0544B8B7DDD89BFCACC9B4C0D803B63F88C5C08188290B220
DDC47F76E4ED5B17A1DFBB33DB5BEEDA41CE6BF04096466D0C52248CF8B3F8BA
7270AAA04C87D25CF6E0DA014446BAA45BE424597766D01BD59A8A5DACB5C02B
7FDABFE16EFDE6DC492539AAEB170FA7E02749326A308657D62DC3F52A768327
79BDFDFB3E48877FB5639912CF78C5ECFD97E10345F82FED4461CA86821AB7BE
83FAAB047BEB3CC00E673F11CA74349B1543EDB9FAF6335BAA99060BD618AD6B
2B7E0B8C95951952D2F71466EDA46C13F269A0B70AD150642533237805A70705
E7E8CFA1D464395AA519D97AA19C58A18E06DAFFDF467ACE0DF9C51550DED53B
8C731BC9284C7A5E4FE792C7115370FB670C0F3E010E54F27A3F5942E73367CC
153CB1A673089B609C4844C707813AC460628223499206427041CBF62B48DD32
4231D5565EE9D16931D4C68C8D20BB49A849C52D39779DAAF3A8061A0383F85F
B9B692A0A29241EE13B4F6714D41A2D2F14740C1CE0BA7593334F55966002FD6
BB28788051EA99693A3F4133C343754BEF061B654AED3F79820F6A48356E328D
4184982B12BCE30C94C77E78E477DC51D75012B344C185270F3EB989B4C055DD
827990A74E385235BFAB603BDA0B695069D60F9255D7E20ED8D61CD65A55D05F
1CA5F834F6B069B6C906E8D62D451314F33A8677933BDC79E6DB204EE809E4FB
6E07D5C1C5DAEF0B1831FDF9ED71D4E4159855386184F085D53AE80E540A1E8C
FA9870E296BD6F1C861D2F7C030646C4FDC2FEF37BE8C5B69A1AF3270E247E08
32B1D90DFF47C1BDFBD574C70DA7D6BD90FB94005CF52A6020C47A7958108475
B2C03177F92A810A2103E8D828982AD110719E69B8E2DB21C123C19C2DE82636
59028257499356511749345036EA903D899A3914E989EF1CE2DBA40DCC1F7945
FCC4A907807BD26DF0FBBEF346A224D073A11E3638F95D02D43D6C26CD0F254C
D8A11ED77D05FCB64F261AD82C4A66621339A0AEA21D2A485E14007D8E4377D7
5506A96B3BD5F218F1792A17DEEF4773A7697A57EAEAC1CD4E47092E787EA08B
141651A5DEA6262F55BE37C9D8C98259B8DDD3DCC9C783A4B920C68CA3D3FC09
D85A0BF7B4D113CFA2904BA177935D3BF70AA40F7FC18A0A2F293A9B96032409
A8DD9213B7AFB2774F68B1AABFA0781A0649943791EB1F9662BA338A3C8A26C5
4A4FAFC3B62DDB18EA356BB449E17CEC1CC4BE656D5E44D3292BD8C69DB19403
0EDE4F9BA586108E04BAB903A27ED406444AF8B04DB5CFFEFF5F6C0736E62CD1
CEB660425F040200EDAE2413F8723636429D3C7381D84E984110C5AFAE51D0A8
CDD7778DA19EDC53575B0D7240E7096F83E0A6AE0068F21698ECC2C3C3E251A8
E3AD9C064EDF8A31C7B5DBF5CE62A4DBF3CB26C7FA0A572C6216AAD2CE7CC2C6
E39D30C2FEECFE95DD0DFB28134F644B67D8927A93447DCBF10D23AA19443F04
DD4074613EA37875C21C004FAA5E07697800EA297C448F91118448E60A36626B
32437ABA6F2AFD3B81E2A8B83CFDB4E649442AFD4E6C97D74CC4DF130B323633
3A5FE9C6593FEDF36144DBB3A50CECF7F866B3E31300A768C5D30AEC5E4FF8DC
F35E935A614069343E1A056DD350A3CEDE442F91A60DD16D94EE5537FD244DF8
D6AD68ECC29592EEF5AE6EEA071D0061F16D88796C4BA0C670D0E715ED933454
2485F1A3D080DE8FDF0905D12A6E339EC90324A66225FB5CB6DE1C61AE3D3510
8D69FE798E16FF882977AB94BA30012F9B0B4ED6F097AB7C0916A05D8ACE0E50
91A5821DD55AAF4F6702925D17E9B2F7527E6F43BCA12CB2DBD1053835A25E67
63C52C5D7CE3433331574D12292222F2A3392B051073470DE1946C7D36627CDE
FBFF46662F761AA8466E4A855CBD2A985C21BA79090C41AC69A342C663C67D09
AD06F94C65B165F58CC09DAE6D4E9625621F306995805BC17C9DBA1422056645
644209A91032D2AD2BB85DF9ADAE29072A59E3DADF826667255131523583DFEB
67AEDB6B8BB341B96ED23877946E726D61105F97387864977758BEF0E5FDBA5A
518782709A35A242A89054E18AB9ECA278490AE46D5B7C8BB7034EA0FA9749D4
D34735F5BB697EEAAAF9971F5F79F3CF854023A8480D6DCAB1CA0A899C18E6F4
E851C2F283D6C17E3BA0B1DFF3739116517A289A2421E6E4E9E5D319849F0496
FAF50BCC1AA0F2373F60C3285D03C8B71DD95C4B9EBAD3ACED5CBFA3FF62C313
8B541688CB1868A60087E36CF256D75DF1630E90BDD3B4FBCF3610ABC2EA2A49
5CC1C0D37191347D9BDD9ABE98E348C2215C120B2D0DB2B6E400BEF294AD0BE5
2E0885AC6834AAB075BC79D7B0BD195F64242395E6C807B7D00E12CC9CA7119E
3F5F3F66DA34A1D231C875BD3D30BD7F7634939B30936C735640C067C8A2C7CB
B362ED6505565793304F20C7B0A329282B1C80E89F3927104B2907AF0482AEDC
5572FB63D20BF232264AF04B7D6BA9F9BE777F13FF87A4D2F1B0C70D897BE444
6D1C0C9A7A1DF1F1EAABF70A125E057A1A138DB50FE32EB4BFAB58F0ED0273D5
42D866B50AF67C73573E130221A4BCEA884FB28CDA6FBA34753609609078BFED
F363B530749E19BB902B9AF4366E3925C61B116023370ADA000A7D6D9CAAC1D0
B30551BD75048EA77A05F8B383E366CB9122E63AE31C2646EF30F61780922F7A
B0DBA150CEAB71F3E23A0A1AC6CF56A5F34F23E78550222DA103879C5FF1721D
B37CFAA05F51ADD7C0ACAF27DB45F285E9D27F3D00AC6069EFB431222AA65BFF
66C245F20A8E1DE377A7C1AFDF3379AE8D9B6D934D398A655BED7884B8FA1C98
9250CD0E85E533B57927D828CF8471A5E819CC19FB83A8715F6A50CA82B54735
DEBC58B93029EC308320D2BDD7D6528EB08ACE88B9F1EE7AE02CA62455479CFB
F772AFAA62E0151C40CB68DEEAAB4338943F94F93089819590F029E85F962B86
75054DF4B2C3AAD6EF9CAE90A688F3548201D2640521DF064F04198C32DC8675
E767527B792276DB9E82B087798CCE5C00C85D14CCF65F3015DDE48958CFCD9D
EEF2F196C4A0A694FBD27B57EDF49EF1B9731B1DFA5DBD6CA4827C23FFE2BCAD
EB2F949DC6A9288A801B75665801BA3ABD21A88CFDA6DB72889E7F8D20C9EFDD
DC9ED667508CCE109F7034C3166F6B8298EB24E8FE61209B55B830F64574F2D5
27F3496BD72817F2C1A64CC449A1FC504232824322531FC6AD2337EEE5F0C667
93F58A920C1B2A729E054D3FF2ABF78D7D03EE54BAFFF461DDF6F1ADD578A1F9
5BF4F96808B2B7658DF687C9A775D9EA3C72674A561939FD225A44CED3448BF4
53FCD9A4F194FA648F9FC0971734BFA6B0193A12D4FDAEB0748EE2F49AC021F4
F38BEE8DF5049D9BEDFEE780E040423DDC5E3B4876FC8A9E07B698C0E93BF485
68B2DE12D3184BD3E1522B5FCE86EF5EA2D31294005E029CA39C0A3EE7C1C629
FFAC72EBF432874860D9F84ECAD802245FAADCD24341939781CFCA5E53F47AF0
2F5BD880DFD9241BA65E67534FC6B3ED4011717026939A54FCEACDEA67943DFA
384BEC535ACBED5EC55DCF366DA80D302FEE4203F0A207307CAA006A768F9EE9
0A4F4A1B9DA9D05281EED29F7F7F0CC54875CF107E8F35C40C193914BBC36385
AF5C270470FA2A37B4A9D8774A3000FF4128513867EDA173A2E1C27FD0351F44
C06BCC58D737F752658553BED0FEBCB88F506570A60A11FA4DB6F6728171F2E0
5CB7BEC0DA6AB9CBF0231E4F0CC5FC35B581BA9CA38D6EBBBD6F5612E941DFD6
ED0427B49443469DD062FB370F8D7241554E22BC34E850520603558DD211A5BB
ED13117819B6D60587C3FF1A6C11283200B83A849EB440CC72222A4D4E104FD0
B58642160A0A7BC252745EEB8E97EA4AEA74435A6FCF0C7E4C041BB3ABCC68CE
AEE80B1BD2C9D183186D44F0AF34047C9A788FD4C1813C54645D9FE161CCEDD8
C3EB717AB33F03D790B702F91D828527EA9110DED8BD27FDB593E465F6B322C8
464220FA80BE8354A4173547204DBBF2522385BB5DF73A7FE0AD6F0EC4F54A9B
7A7F52C1EBCBD3757265659C31F4F6F7DECBD05F6A0E312E90359C47B56C6DF4
02C567931D885EFFC74BDB08FBBF4D60B990868400C3B3DE9593878FCA710128
A817C2F790037911D4B314F7DB5BBB3C04DEECB0684B060C8610469D225FC542
81E2B0A5F315A2D8837CB00095A0EC4F61C22B3168EBA76A010EA5F7B05B0090
2B00F8074880519DE36B7F99558C4C0BAC128B7D4D61C2AA87093F0D91883508
56B53B52F953CAE2811BFECE1483D55FDF7EE46F39176CD5DBA96C8040CF931F
1AA27EB23E86EF469ABB746D6638B8DFDA8AD79118856DF980371286DDDBD354
58BAF1809FD0A223CD42FE080607C7657D0DF25F998F2DE5E8A9D9BA79796AE9
83F28FB24765714F73885B4AB937EDD1218E2ADEFBC26C760FD47A130546199E
A766F82E762B383B806FB4EC884B26DCDE1444C61904C07FC615DD790CA95A4A
1987300876CD4FACCFC4D9599AFC629AD1DCCB9209B632C9FF0A7F8979383E23
3F4120BC9224A30CC04814B17735836F009E1ACB4BE85223E05F919B98A4AA54
8A176C28DF50215BA0528D0CC045F10EDD3CF7D81351E247B106384A55806B61
33FA19DCC168744CDE14DF473917009488F8D0FF198F9BE2D660F139C70DEF78
DD68B5A21E57084C3DED3516A9C528A198B8EC86D45BA5D02FA4C81A1FDAD9EF
6012042C76BD65CB04968AAD7110919889177FDC3DBE26C546793143573ECA32
ED53541687DD53E60F80F2F7187176B579AD77F88622B5F3346F764A6F6314AB
DF2A22B54F652F094751DCAB62AF3DA89831F638039CF77A6CA044502AD9A7D8
C6AD979BD6E59ADD4959DF72786BDDA5CD9860368051C793F9D22877B80FFE5D
6014287905385E6A6347475DF74717AAEA9B3A7D301FD37C344A2CD5D1928155
BDA3EF9A41DF2E25D69256557ED20807BFA9ED644E8476AA700F126E6F4F907F
680D8FB6952BE06833630CEA70B4021BCC85F9A9201C6B53F3189E8B04BC37BA
7966B1A383BCC2FD3CF4B5E526713FFAC8CA4BF5ADD4D4FADEA06F18A44A7E7B
F02FCD2F52D4A3FE341376FDCAA3AFFCC71DC7D819C3A202A4E77553F9C31967
05904BE0543C91903100B8AE1D1CB499BA249B7F4E57CB61558746C1F508D053
F1131B725F86E204628FE2FA3B2E06339A2818597175B29A84B8905729CFEF90
60B959D8150C9490C796D2CCCDF318DBB9CEA0694502B7D8C08C0E8C618F5993
64FE4FD9AD985F99289C07208A1E5905BFFE966396E29C438F407347DC26F8B6
F0422F3340A01614CCC41D40D27BF18337A0A9D54A4E73C9B32EA49316CFBDCB
FB665D3A3E6554C06C0DFF463B43D5586FE36621A2C95FF3ED255A524BF12BAF
98AF3D9F16711D4F89D926213EDE41AF4D54CE14182A270C6D1833B6ABC5F1E5
2E37EDDC7234A84DD42541141BEBB06591529A4602CFA5EAE2D311AD1C1DFA72
32246EA894187C252D89E70DF61F3F8C55A07FB64DA6AD031DD8DB27CA413BC7
4B09840C121ADACED95D658E6B2F48F6B2595EBE95B146993900E6F1765B1235
0F7C195A9F164AA3649D1F02108FFE42C9877EDD26B9DCE4C271C33EDB0C544D
1DDEBA5249DE1896E73AFC4DA03AD282BF873745F89C5865673DFE5C16360B62
8BD0351C6CFDBFD4200A3A6C022180403502FE9C23C179BA3902CFD1BC557EB2
2C341BF25D64884A3447F30CD8CB9E3D45C91F256765B4382253FB30D86CA2B4
AB029CE2522D4073ED052F37A3183C8637CD35777CD3B07F91EDAC559A220F29
084DD86CD87220115E35BC22989E29BEB0A119FDB21C72816B29CBE1A0C0C26A
8FEAF6F526BD1D935DE67BC82CA3B4A3AB23D73E8BC1BEEA77D72D865AA68F5A
DDB8CA60CE3ED09C0D0A7D95855B2F5611E14707A444DBC3E4C66B4536E6E34C
734C935545B49CA1AC6D7566EFE5BED447B2B13C4ED87199D2C34745DF2E81BB
EFB063C3DAFA424164D7C41F29A803D73F4DFBF10052B755B95A19AE9BBDF020
2E4E484832107ED366418B237B9AE5F5DFB82B8C542006CDCAD0383D55C276E9
04551EE36D9D9973F2ECD108051F5D0E862272A215F877211CEF243C4B389CCF
93836C28A51FCAF5A6D08728DA3D95AD852D7E1B8F92B567448DE2CBC1DBBF8B
832911004BD917D760C612E52B1E6215CB75C101A8B017648C4DF3B98B82EB82
73626D12A59AB9850EC06EB8D90A12766AF17BA732C601CB3D7128C8316E9730
1E5013807F17FC346B591483DB4A31F63C3EA091D91B66DE20923521AF702F2F
B7382B450282850350E764479A66194341696E19DACC83FCB5B723BD957C4C80
51FEACE2AE27DD3DCAB49534A03D7BFBF00A58ABDD0C086A48AD0AE9BB415E4E
385507F3D50A6DBBBB88DAF930B97062AC89A5E23BB17ADC8593B9F1644BB6FA
6C7B5DB4598D76106609CC1A998112FB35E5708CD53BF197DBCA9EA7EF2777E6
A3A08C436874970DE3D57C278D51108BA38B633FE5E8FE9B11E972F72F787776
3A7C69AF528A9EA10F0F08BEE54351D0C01C8559EA47E1E4E96E1D8658ABFE0D
339FD946909C119BE86F3020345CFB73AAAF285B612F7F6F92452F7BA7B70C62
DCF277A0B9FA9AC611BF39A981E3997BBFB6AB9F32317C34BE3EBCE5D8E8EB10
8C5D75B3DA3133322205FAF32B5931C28CC7013A8D9928499814961CDBF1D70C
B5C07248FC835E54E55DB489A9D6B502C5B9ECECBE2CF78DC42F877BA17CE45E
F29D3B231CABD09C9C70723DEDDAE294DA2DAC3498F89EFE7838132B7E187B4F
87D21ED5728EE90842F3FBBB1902192FBAE40CB74C80E6B35FAC91EFC7EA0738
40FAE23083C3AD8C848C9A1F880FA674801131190B9982831C8CA53971A3DBFE
23F1E3879F85B00296CCE864802BB15B2F2BD4B0DC442BC70CF3DDCEA3A1E830
20A3D905CFD508419B7016D0F03D970BD2C42A98D7A5D999219FEB6E61D1FFCF
627D37345B1E6A133B6C9AC1E9461009C0A078862017B2A3574AC62A60B503C1
29D7C618C217F049B4D74A7E48738A792F6BB300D8EE47D79E2071A5B3BB3F34
0BD76CDB361C3A26AF2CEB9E359BD9E5E92EC8F6A19066B51C2937981B79BCD9
2436047E9CFD50943520808A6B7AD799A27DB6A2FD7FCE95CF0ABE556B181EEF
AA61A240D7276B9B4B4CDBB59A4E381052663F40FBEC155F3C47F05B707F3D2E
00C5BA6C35FB669F3FB67F2FE6612DE3605CE788D8CA6399AC35A4D7CF06979F
3C2FDAC25AAE6D028C6F0AC622F8241048991AC74ECC645B94E81431830D1ED6
C1F057AAD6EA580149ED4ACE2C4093E1F26B91C0D677AAD9444129C06A53A8E6
819D437D98605EDCF4CDE45EFB46A7FBFCAE9A895D47D5DDF98A44DC96A8F687
9E2135374C70D79D19EA9EFDD478165C933E9327FB8671DC9F1B6ECB2EC7EE48
3531E3DF9F05DD410396D179DA4C1E7F5C7BE4EFF59D55B381ED872E79A1E5D5
E4B896D55B67837FE1B0D9EDEC9711F4EF5DF8164D9AF89DBBE3B49616C51E82
65379ED8DE9A5E119D0B6EF07098D4E97FEBA8C650810E23D6351C7E6288B5B5
D84166B43FCB760375D26286BA01C7C0E4B8DC2F709B8C11F4DC6A1EE18BFA4A
EB8E8FCF1565480CC3CB43A8A619393CE6696FE4CF5165DCEEFA72DC1B328346
385CC6D1E2BCE00279474109AC67B7D0A034352C6BAD22947CDD08A647D93504
EA067D21563F33124B63B80EC372C2F70F13DDA614AC122D353AB33D8949B97B
1C646D326EE8F91642618758ADB2F329BFCA914C8AFC062E77E658B5B785D2AB
6863AA16D6C4C82EE4AF7AAD795A23AF1DE08C377E448EDBB08278C84FC63EB3
C673EF28A62BB1D6B54808E392A06964E43F536044F0B6B1D308983FEEBABD2C
D767048B591EE4F5F91703C1D1D820ADC7621C627F1F425B1D5F66AA868C2F30
8AAF3851887FDA4D03F83EDC6F2618FCC7298239D2C1B7132FB01AB333B3FE8E
CFA807692D19E6711BA655D09A4CD41E0B290F4767CC576F85D2ED391BA053E4
0533230EFE97DA7C363799EB6476AB06B03E56C5464E1D062EB95A770BF9D05B
EBA4F7D93A048A9E1ABF4BE64FB372AAA4638D6AC0B119AB24206E8A83ADFFF4
6AA1C0C6B0D01C269DC3A50CD2CFA21F3349160BF5A89D2D44816E9074118A7B
C2947A74A64966DD2F49850B2B3468280B217CC52B86D30DCDD84288E303C092
7335D510EC2AF2941CC55CD4548696F8D37CDBF6E4BEDA3CA8AA177F46745552
C5322E02984FDD10A913779C7DACB01E8E1587D9C2843A426FD73172A898EC8C
4702F89F660AD38ABB9AE811E6C73E3DFD155A247E6AA58C7B3A65D90C4598DE
6DF2AA81DF1E7D6BFC73854A5E51E73652B90264B50DF8CC22E516C5CC3B4A04
091A0C1E303470EE1E8AAD274E14259A48571ADBFB472686B200B23FCE6AC13F
AE056EA1B304C5FA72E002C4FA4B7EE1DC737637D95CC5287E9A8700D904CA38
13BE98BF1F3312B4ABDCB2CF777595158CBABDB64604745C56613FD2C27A6FF7
D30EE720575B4FCDBB284150B5EDD10AFE529E542684F7EE03E3A023570BD17A
6A73E80CB5EF01EECF257B1E9BA421CD3A737C25FE019A4812CB80DA5A9BAC8A
61F8253E05D6D3667FA8DFABDA05855CC3F8079F678B90006056985B5C836033
15CD4390495A44EE2C9A1F43FB8181F99584BFB274C4D2267327533B50EC14A4
3279E02760F37E159C9766B5A942E2FEC16BA0900825A18A3DC8F5CE8472C0F6
AC2DA7297E0FD2DD885436567D6AA32DF49B400068B4BA7E693A9810EED66FD3
4D380231C172142E9996C15D3F0AB35D8E8D97C63D51E2C209DC9E5A1ECE9D6C
D4C8E71C0F52A23CE328ACFEE7F580662A184260FB89D5A9EEAC9E6E45632E21
D0C09F9B76B3ABD7062800EECF73E62E6B46071ADBF432574099F87B084CC901
6AC0DD803D7D3B49923F41ECC6940662BBBB5E1C5D3A891CEAFC569E22DDE168
4555EA16E81E62AEB13D93E84426F12D8B5680E67E0CB7B9F6406285D7C05FDE
BE556F5FBAAF448A1A67E3FF1DCC92B8A4010A5FB94633C8EA979D397D2C19DC
9B35C23652C18D90B02C9E0C18A6CDD84013F414303479632E105CB504A8568F
31A10AD01DE747E81C11D89D826CB5889D4C31446C85E1117E3162161D96BAFE
89839B0C980422DA617C65DED5DDF78A55DE8AFB22423271D930C1A29B8821A7
4E8FC858682C5B3F8BEE353992FCFBC41B0E2A1A77170EE1A71837FCCE99C8E6
10006C5A8AAE834A0587D990024BBE83853AE1B0C7B5C121106509D02C6FEF28
6C526C0195133D655197A556E05CC460DA5FF8BAA066043F44D1AF3630CCA607
10DB200E5ACCE752D075E680855FD5E66CB01116BD777905D31CD8C625822A66
654AF840055C0DC3449F1A401C726463E8364747705567774718D8325FC31ABC
BDC4DB6B1A94DBC963FB1BA1018BB02F3E02EAAFB0BC60946A5E8888BFE28466
DAF11DCE29A6443914C79576E6E8E50591FC3D85580E60350CBAFF7DD787663B
E86E18DD52D12D7AEB599B7194415285EFDFC92B90CF957C7916510E8C0B34BA
DA30FA5C3092E0E82F21789890CB9CE70C845202556968EA6C4568FE0603F0C8
15D9BFEFDAD9BBC426C33F456B2200AB995E8F69B2C1374CAA1EF89B31187DF1
F05212E127632723E17919380C9F513B7DD837A6BDFF85A30C1B2CB6CBB2A725
5AD76FB3720B505EBF025E6B596E84D2D74C4FAA8BEC0F026F06DDED2FE528F5
55E9F86C949A6AB71BFABEF016EA7FB7C09968B1EE729409C3BF1DA6FCB81562
2C7867F7D7A4A080646636ABF7B06388A2C5F97DCE05200B4394392A6FE868DD
449773BDEB71DA37C609A831C2C5706432983B505372701FFC74167919736021
3A13F9863FF3D58F90E98C29986B14D00255326FD2569813094E8DA518E37896
E638DE9D44934631F3D75C32E59AA41E9645D0B2FA04B6245E7D18A299BCC3AF
3E85EED6B124F5D5BC258A8D370AFB3BF10602F1712F57138FD0BF4D5B657D2C
C50B1732E6D58AA14E6A71B04AC6CE584D308E88D167E9637B1C4ABB0B638493
71A7DFD5B382DA57F89F3202EFDD0A828D95E5192EF5CE9A1EFFA174EFAD513C
FE9712A3CC8F0F4590B17F5C7A41D99E217C5D61544A988ABBB3C96AFF2A063E
FF3B1563A4F4948CBBDC2D89AD0EE02DED4FEF2B67C911650A4D308ECECEE20A
D96793284647ABF2CB16651043792F983D6B19A9B435B32E268C5C50DA95EF3F
0F96502DA6A323C0FB989D53EB4A5AC25A0858B10DC043CBEE00ACA732667248
1FC77B5C6D849A38F126BF542F1844539E540383ED3CA51CE904EBB2674D67F2
9A482E5469F9AC6AD353810CA79389B236ACB6E85DE4B2B15B93B7BACB79AC25
F37A4E4D195B3798CEBC4F2F53E89DF89C1341B85609D0EE1DE1454775AB2FED
52B4F2A9EEE09EFEDBB10DCB0727F0EC1C6579CEF58284AF1EBDB905FDF5FD69
FAE986C0FAA31D8FEB88F452F56193C9D6D357122AAA06C55A9040591F302EEC
50FDDCD73F2E287FE61B3AC6E94EF7B3A3B57FB47CE3E2B32279C16898AC65C6
9BBCE78BD27F7400D93CA15021AF9FB97DE82874FE58772E82FEE206948FD9D2
41BD07B4671FF09BFAD35E4E556FBFC174D395D162DBB002671EDDD247A356EF
1F09DEEB5B7798D02A7A6D2FFCDD9467958904FE0CDB65F52BA057443EC42BF7
701F78CDDF9BFF0F7D37498A6E2F8AC2E4CE7FF33F6D6250BF0687ADF56193C9
D6D357122AAA06C55A90405918558A847E93232C034664E2C43DF499BE3810C3
8A4FE7FA5671C1DA26CAC3FCFFE7C6728D9E330928C1E5F8FEF3AA0D1DD58EC7
B28C4DFBB734A8EF6B5790019ED80E6B385C782AEDA53C4AFEC9C1E463A10252
BCA9BD41A7AD83B227CDF11421734919845780F5066621435C037E42F4BD839A
D5DE0166AEDE4836F8D941EC5DE95484524B45E743825AFE7A70620205B40BCD
46133017E9307FFBF225FAB6045756E12A3CC0AB7B0B0DE732B73277440917E9
6FB9B432472E75CBA79058A2EA04E3A97AB3F20DDA1623553ECDBB279066621A
67E74232CE504A69D869E5D40EB344E5D2C11E525F08CF4752ED279E6AA75A8C
17EE6E339E5C3279B78C4BF98B23BA5E886DCCBB6DB70C88E22549C24005F838
221BBD4E5B2EB8430CCA88F8E98A4B3C055C01823C4384724518CA938CE581FA
A7A0837A0DD1EAD10B0A7A3F70DB740709CF370ABC1ED7039F48790B9A77DDAE
1F630D0C76FF2B62B41880183F8842F1340E47398A599B339FA6AB520F9BA14D
1116A1EDC7110D329A68E9056D5FA94866A414680F9176A05F32B350E2CF46BA
0E8D0120BA2EE86260537E178406C35173ADA131F8880C15E753D2B1F62E5C20
19136157C6D83B33C18E1783032398653242852B84EF9D5130099A3A96A8CA8F
DD0FBDAE7E6414903365BBA84CE9C802F0EA2C9C6C3C3A8FA461F4269528720B
D3318C5D1915037B194077143F6CAD1847E738917CC3E420F1EC2505268CAEFA
BD788D35C389120901BEEE7BDDBACCB220DC470F0947E6589E3F608EDFD858AD
4C773175799B685B89D4019AF154D1EACAA924C19ED5885F082B33616605D8BD
B4DA87B105862D14EAB6A99218B3F66F11EA2F345629C405C36109693644014E
579BACFDB7DAF89C5D10CBC2237D4AE99957104759BEA0F7D0201F342B0E531B
F23E9A7ECDEFA160FF152DADAD834A43DD5CB510F4E2813868F4D47860CDD700
F88C4C679CE7730367475C40ED58FFD079341064F0916BDD424F82B5E00FDCE5
05FAC094D130805ED44BEECD08BED2831AD3E1DB8A69414C6E3C48839029C753
F817F94AA6939DAE286FEA07B203E7227497050CBD786CA044502AD9A7D8C625
67FA423BD85A6ADF41DE780795304DBBB993F877C56C821D371FFD74930096D5
798855AC2016EF05B721060B6D083CCD272E8A5BC5FED4DFC5301B554BC721F5
D4A86D6B6E5E4BA62B93B21B999853F22A141C4B62124279878C0592C934FF2A
C5B65943ECE21D9AE53BE702288F2A673ED01DCD21A0D693ED16A31B60ADEA03
4C50C1BA4977CA6D91D81FEE4DD97BBAAA39426C1271251B65BA823265CB4533
2722A6A87F8147A3419672873E34D817AE1624A14774AC800433554DB6054321
A98DD7FE25DDEB0B6743902EF57738A82305B707B99B0F3343006CFBE10D3932
8466F37D4AAB07F0ED98F38BFDA1907B8DF5490432EF00530540718B2278F2B2
4CE9865F20902D6358440EFC9EAB6A3EB0EF5E5E1F853052970408E1B96714C7
B1D4F806FDF86B8D90A399CBD792FE3855F316DC33187662B519FE386FA991BE
D6CD2F0AEBB87F65D5E67BA200E39A0DCDEBEAC51114475E9EE4972E9524DC3E
B093A2793D55347C71F101DD501B215E0C207067F1E695951C726032A6B11188
884D5B37EDC8DEF2EACD9C3985BA9ACAC69EE24347DC96A8F6879E2135374C70
D79D19EA9EFDD47815A5D1C816801ADBE116E0E90E6199B6C6B3594E3B700134
113B194CE8A149EF9121880DA9C89FECEC969068C72E1130531CAA841028DCD2
ACA3094563790CC22C491D56CEAE3C09162E8A4FC6CD4741B38836CB599DF98A
23B4AFE856783857077CCD79A9DE2B73A934084B0429E6757573EFB24394FA5C
76CC0DC9DB83B6F549C06ADBF50D34D13F029DC386682938DB4B1EA8D4A76DE3
FA56C3120356BCB440CFB3026D1AE05A68771F4A5D68600EFE53026F84915F33
1A5CC5FFB126553EBA84AC04C9278B46CD2896298503F9418812743989083194
3816E860ACAE53A0D20BE60F75AF092FD651C175A7E8184B1F00AFA46A8B9481
0EBC9C75D95160E58826E83C5AB759DF47D04295847EF4A6D9FE1590FB1C99AB
A94CABFF1F9A29A682CE3CB43CD00D5017219264F47E5F287393BDE1EE2D35BD
1C74BD8E120C808767DEA672D5CD1C5BB6EBF80E79BE71D293CE0F07C96F2FF2
9E10049024388FB285B72C0165E209B098D1AB782C8AA31DB9E1DB1E43513029
6CEFCCBF064E369FC591D4739533513C202E9DA91CDD1580245F96716E56A1A2
0CB8F3D82BDA0E323AC159FDA3F55DD95E46339FC63A949259C275415C6553AB
46244855FC7F517CC04E27182EBC4DAFD078E2C58CAF3E801A713C7341CD8C4B
451A43766C89DEE2E639514CB1CF6E1926258F1246CF004AF4D76C8434669563
04D117281509C19B59336E38ACDEB1043E96FF7CBD701050A1DB9E56B088EAF0
AB4A3166F740E482F0965F920B26577B79DC0326F1D3861E1D799628816A876C
6FBAAAF8270E05F06037E6FC9CE04E7AEA2C7E4A824F8054FE402799EE7998D4
DAAF0366719B4BA72DA3AA96B260E2E61726E38E8146DD549A8BD6501D24FD5B
FF0A406E9662794202DE1BE47DF0697DD7BAD6C8CF1D70B9CA4381DA2CCE5026
1937EB072D846239EB7928E4FEB7C2BDB9732C0BF2947543F5865BD1EF02842E
0B8EE7C73113FB217E372888F11E015415DA602B025CD7197FB2EDE22202B8A1
7630D41B7DDF0C6B82284D6A75198D3709DB41B886F9E10F6E6774918C7BE430
0283AE5AC540D464771454AC4CA92840DF191E6F52555846D993E48925F5EDF7
8271ED4545B079C802B4398224D50B111990D1F4436C860DA78F1A51C8853FE7
F024EDA854D4E210DA837B2F6092416AE6CC2E3EB3BB4D91E29CD932034A3C0C
7AB23CD6F81DA6E22497F3A7D2B5A15D8AE27CB18E25821E2342751B46A34BCE
B29CD1804B9444C284E4295DC997D72FDDA174C3E0F92D268D63B559A404DCE7
61561C9C2F36F92CB169B0F5A9A943C39CFE18B2F8F922E288A3E6C10E931222
AC23981C28052424B40E102A797F5FB2496CBAB06ECD53C4206FC54BD3A8F7E5
0CD9991CC4D18568C06D4DC79BE0B9754B8F88632FC3A74FA2A3A75F294B113B
6B31536B2CBD02EB30C17927926C6980904813ECDAB9DECBEAC369D774C7D9E3
698A2C28046A75F4A146E9341757950E773F1A6E323D4E74160C50AA26C78694
902CB92AA45721DF8F6521AAD74A6B73608413B8369365B495E9EEE5FD08FD41
83B1F8790D4FA04FE263E9D7F4313861B4D82AC08874F1F6E510DCD8F0D33CFE
7734AA15DE36B9FDAB2AB6C2695F4C1360B02B1915CF48CD487607D1822E244D
50E70BBC8C7C6F4F0FF1F348C9D3F1FA454D98E25393738ECE8B17A015A93C68
C30AD52B57382F43530354AEBAB1ADFFA9165CAEAD2464D8D80FF6C61F4410BE
7699FF1CFE457A7F62D21FC06688AB9336402C5F61327EFA5AA20E3A68314070
1ABBD926BB41B1B531E491065D57658E603D99F333C02C1BCB7046DAC7FFBE3A
D517E8C752069E90260B9ABFDA1218DD625BEF127AE1251A7C19DE1CE6AB3199
BD45A3407A477D1A7D972649F1E5AAA0572653B83B7CD2A8EC1D37916398FB7C
451BBC69B3A0F7130272EACA598756097D1277D0697F7F85DE08F52EB8B45BC3
8079205B0CC74F3E14C9239E2FA2EDCCF47DC58B8D9F6FAF1316A90F3B8A854B
7EF90FA0DFA208E4C47AEE28219B2A13C841DDE80B196F6617BAE9F33AC5E0DF
808A03015EBD9EAF321A2AF2256EA0675264922F9A98E6FBC0F4B6CEA62AA27D
A04D2DC9F3EB1838B3E3E37097799EEC8284028006F3F3248B5454ED6DC729CC
5070524D1E674D1EBE568B4DD7BD55A2512D895D3A9E698423B4F5FCD05BE0E1
9437423672A26B560AA588C1F1CDEAF6F8476BEDB79560B329B7EEA14B0ACDBA
0C5DCDCA4E851157CF457E4C23A2991E9515A7C59B4739743D0DF6AD4228B998
4AB1D1CE0BB1799BF7417AFD407564C80EB1E659F28C398B5B6A6A2EE27DFA1F
3F613094594116E0E809E5FA78225E75A98EE2F7A8F51F83F0D478AC079DB17C
688DB0D8524BF9081FFD7503D83AF30AC5B10042386B58DFF9CF6BC1FB6749F0
2578515EC78E18B0B5857EA9A9BCC45F774D01C2910CD553D0D58B8DB2D17A7C
0FEFD231037534E4F5EDCD09993D20C046A582667AA4D480A6C5B3F0F0180281
73D3C50F795D4A582E3A95100E3EA1DCF804353D5F1B8D36B4B1FBCDB3F536F6
EBDC9C5EAFB9015B8419E6490F34D1604E88BE58BBAA2FBB30F9AD411FEC340C
270BF01EDE1F3DB3F7BABFC41EEF179A9E95A7B2A70E3A9170C482371D53E7DE
40485D724E243666FF26FEB405D4C102DFC3CE9D3B37CE3EF01CD10EBE042993
5F498EC1D6DE2E5214EE15F229C7D109D80B8B72A6365A4A9445A71FC40ADF3D
A763B492483C51D41076C0FE99D988D612DEBF7B6F5F3F670E67B8FE790851B1
6E71241433FEA5650A3D44997A325090B59D663C6F389D2C5AEB2DFE00FF0196
977C845CC5FB1EFA0FA399B62F4D5CC32B5445B1A53FAC96128F43F852E00722
DB35B1CEC9ED226397F98EE5959254695BCC2FA76C09DC21A6FFE886214DF47B
13C608CE0CBFBD33673C5BA58E2B021580D63C76BF196397BC947A325090B59D
663C6F389D2C5AEB2DFE00FF0196964A9810725BFD45F14D03C5E6E79C4C60FC
2937DD6C285A2CF67DE36BD013A05DB41B01540963159E3EFBB837FDFDD9DC99
4C11AC11F9038B2B1B5F0771332BF0154CFB20345C143EB8F2A289EA703C2466
3DD7C203389346EAE4F4BB5979E878C00247A298BDDDFBFC7ED3CC779B8356AA
3B6A94BE9AA9D064423742EB700043207D012BDA4D538E4FF8BD62AE25DE20A0
745D88EDAB8F6007290B56F1126D6062165B9EE0BAB329A9F31B6F7170E18A9A
10AD016156A0BD2365C3C7E2A806B0D7FAF79144B1DB037E21A7F5B55FBF3C58
A2E07D021C172810C3F1EE9D40CA8BFEAB9B506088DB3CF99C78613AF62054AF
C664C8D97A90DD4C972B69C05585BD438731D0DA714115C39EA5D64B5FAA4414
4D1A6F2F8BFE9A6DDE8802BA267579FAC7524EE55393019EEE61EF4B3796F6F2
0F55363C3FD58807C44B06016EF5E2670A911AE147CC5A9266884C0974C5EF10
3E8B871C72619E1925054A3840BAB44F23BE99C97D290292DA35B180B5A4F17F
EAB6088ADBA7C003B01CB922571B8E5E7DDA3913705D4DE8588D17A2F86D2625
8A210A15C3EABF35EDE800133D57DCBE1A5E7C11FFFE09037D981E9E7F92EE4B
DC28CD057855FB1E82062A9AF6346A33335FE5A2F7479F099369D0897212D3AC
51A4DAFD12A7960E50EE75AF0989F452BA74CB6839FB91EFE5EDE536BD173D85
7986F47B116D4D10A03C9E501005C1DAF88B9DE2F188BC99B73DD4EB3E437DA8
C04652C6777C8CB99CB1DE5A337DF636D7D9AAF5BDE020CB61EB3C3D6D860CCC
FA596EC90F727C420C2B155D45427E2A28E0133FCF8A3AF8F27E7740F738BE61
51DB6CD334D3F0E3B93617D88210C740E6C3D80927B499D91860A491F3FF6E80
E6820B2A6C10CACA9E6C6BC14BF893C2CD777E65DF77058D1F1839AB311604C7
5736F7C59E6CD3E3824FDB960A88158ADBF7EC1ACECFF6C2F010CC1948191D7E
72FE450063ED6FD202A6087AD9B9308F45CBE1BB1A6E0C6CA95F8A0F1CFB7FD1
18B1C3FA4173EF16EE12FBB5116760BCB32FDAB651E02E56341EBE693A3885E6
B308B5A8C7734447A0B1796DD56E10E37FFC83D93D8209C94E8875A32581EF6B
6FDAF6B95614B79C6F3792F11FE976E595F7C90AEFF83F1339F130E4010B4B29
CA440E9AE71B7A08AA4B7794B53E143F79B679E67D518426DCEF42413E838E2E
D113DC3BE14EBB33E33DCB18B1DF5F8B1393C615F660C5541D333C0FAA7E84D0
C541BB5610F98F427E07231F5A0C22F4768569F81E5FFA73414E0C72B26D38BA
B265889EE9FDFA11A5F9EDACDC61F056E66E37D4279BB8DCCA45B1252FB2EE28
AC8806F28F4191E76E30DFB692DB3C78D9F2C00D9E35FD00D7A0DA75545E2E02
339DE907B958810CDFA367EB1AF7C0FB74BB312A28E9E01220D74208B6633EB1
AB7030F462A33851D943B0338BEF9A240D954A1DC35457264B5C394574BFCD32
BF43E4F9774A8F9606D9F23B79411FE826FC6BE58A7D3EEAFB06A2911421B2FC
B9A96154DDCC82A373CDC7675F6A797DE89C5F648EB118491CA43F4592A98C8D
2F457EACF7C4BCE91D14D3BD3ACD1D3BFCD6BE76FDF54F7F53C3FC706DBF0DE6
2D0A5E43AF6EC3215C01BD33328D04160C812A0EAA27CCD1C7A92F46684FC230
847A3F2A38106787F30381DFB2C5F97418C43350EFE0F5DF10D52BE3FB5970C2
A0D64166E6EA59A4BD304039B2FD14367ADC8521EC86ED4C13B361062C284F9C
292580A9157694133A3248571ECB8E57E7A7BA2FB8FC6D3ED30A21B96B9C7DF3
31925215582B744A4A5CC5CA9F2D81F6C28A94CC1BD00955D6A292A87F380029
E35DDCB3D2997B4B4CE4242C6DA2C8503FD66D764ECDABFAA0431773F2C13A3F
E14E1E6E8B1823F3E4573EFD937CC94851C12B07166465112915DCDC675CEC58
EEB57438A0AA99964CD241A93937F4895A7DBB6F3707DB9E1AF76C75BC88260B
6BFAA686477B3A666A755D677D30E76513FE40FD400CDE3A492C63E17B85D56D
A207C9996B5FD7E0FBD37D30AECB627F41013B785BF817FA34FD09EF6BAC1A5C
E9807C5A844B27366C691B1C85FCAC3559C280E4A0661A5515027D952BB70695
0813DD42EB8C3842795F463A942A9BC7599EAF8B994C97F21072CE8FDC90F2FA
469AF15F0B7234ECED88FFA5ED32B72003A8BC445C58625EDFFFB764D65F7381
B706C936CE9B8FEE42DD6F09568FD192E619C5A2B85B8853B76D64D5FD92D735
070D173C1BA0F0E5220558E7A5B63B6EF2B6F80901F03C5D73DB4A42B3596785
0FE4A96288075BE789874738DD4C58D692ACA4931F0FB345873A1D70D397D818
1B6368FE2FF7BAF72AA54BB88C42F3C748B8AD3355AD2BFD833525B065A230CC
9AE62D1AE8B38FEC831C51796E1F9C33B2224C9DB8B4D59F2388AF172CA3C3DA
27212EC9EC0BEADEE2973BCD619FDE48BDB4FB150F15EF345603771E25C5A6B6
0DFAD490E35D3143B98B271B20BB913F392AE30EF39138124A00402D9B059B84
036BE5980537C58DB85EE25B8D2F9BD552942A795D3616D85580EA0B0C18B8BD
50CB662CB93907D3312C68E5696D07963368E54C543B8C7E31D1EF37EDDB7C0C
0004791C962B7C94045D3CAC656F0CBEFC05B72BF6288B0D5A0A258FC7D6A45A
84802080D1607452CAAB956FA37DCDA517347B6A0874EE62B664D59451AB8F72
0B8A517DCC1C66D4720DDBED7EAE704A62832DB62B29B583CCDCD812303F37AB
5E97BCE0B92F9435321113089B3833FE49FED460A10203BF5293C792FCF96E65
3FB23AD8B976E2F2204A5E6FC768DB67200B88158FDBB1F15E6143963E60FBE3
3E53C054E0F72F9172E8DE121E5A8F0A6DFC089F22776519ABCB28AB77D81AE5
0A9EEFE3A651B7ED142B502AC246031C65034EE0641A8704FC0B8488D139AD2D
780167B60F8459C830979C1316607D562233C79BC5BEC500B99F38B9315C6E08
92D094194798C3D4C070BBB328EEBC5E61484084013AD5F2DE681DA42A320F77
A3EA3AF376E379C7CEFF54C09E04BAD98622FCDEEE580B1F42C0528FCE861117
DA0E482F500719E3D7B400316DC5DA607428B545207B4B8DE15723F4A2B28EDF
9093D7481C4D808A823D63729DEEE2D5BB9B10B58B159CF723F23A5D91094195
A321B24B1D88A2CF9829495E85661D321A9AC78AF48DA459AA97C388801A6F3B
DBE55F6D3AC2CB0717C53DA23DB3A5098C6E12C89072D454B086576D4DC9BE6A
9C6988BD3F716D2967D843760760247F738A6B14804C04B82489DA853872BD76
16DA1063B9042FE4148F5307AB016E4462F711C9CEEFD28947BC07BB0B171E27
45840558A511B1C0C7CC2C12C8AF2F2A1960E2C093F4F44FEB69169B052B54C1
E131B38F59475D9570CA39E1C5C97761CA1CEA4B1EEF5DDFFFA50251D0E078FD
274566746B2D828E087FAF74EF6B0079FCC02109D187F19FA630C892F6D7F4DA
032652C5D652CF2E1C59A2FDC58B4A1FD543429AA58704F9815DB6DB1EB39342
C6D296DEE3FA0EBC3A398D7E8E103CE7B1693394ACAC92A99C1FBF93FAC2D9A6
DA78FB9237FE0F6F61AA5E400710369E9FA95FED1ADCC3F9077F81AE7CFBAFAF
3FBF2FF2FF0E2A6587B3F8935C6BDDB918CF559AB00CFF83C24126F9F110ED7C
D25797243D0DAF0486FB3110BA1571184C907743FFE57468896F82114AE37D33
AF353FC804E8ABF33A8B5D371835E6FE6D2F065824EA47C6DB5BC9C98E803958
71DF3DDE6E49A7F952AD3FAC712D197A096501A04D995F5ADAF47060AE563B98
C0110AACFF4035CBF203CB569D4FE6FD47E02DDBE383260BC0988B3451626EBC
E915A7569151A34EEC113E35FB0B900320DD580AA07F29F454AB0DAC8A45F589
649012C911BF4A33F46694BC17EC4F64CE49329CE4B4648049569DF86407BDF6
CE2E01A58AA066DCC7B9754A9866CCE67AD298025BF39C52A6C8561E8E701353
4666DB96431B5A92FDC0E2835DCB7D2DE9ED7CD017610CF16E5122BBCCCCFCC6
6614B367914C76FD549CD605D3A0B33690BFE4CDA843263B0F43C7D463D49FE3
6A070DBEA0F0E1CEFAD627EB3FD38729F6E87567E60007674E4EAF1CEEA6E89F
F96F5DB7DF8A9EDCFD1F58CD93D8A88C8DDDB2CE11B17D767AB46EE94176590D
598F65746424DE1915D6AB27E4269B546670113D5EE7B15C46218C8F4CC96B89
27C1B8F901947113CAF5C3E2E2E4C798E64F8E400D6EB33579AA82E11970EB93
A9E5897E51481936B094FBE12D84BA626647689855ACD29753F605BA9A161EE6
3D39B700564B3B67BE3E20F66640DEBDACC45D47C2A490B755FF1452F1ECC864
6280FDCCBB422B4871C5714D8D52A10182F1415BF320FE47A2AFC4FA4E1DFE00
172B3586E512F9E30F49F411CC18318F1EC4AD105D966EF35742F838A6F05D3F
FBBCF5D6EA67B438FDE3399FB9C5D0D90DD53559A77A7BD992CE85F3B2A128F7
7983D53919DEF0F19151DEB13BBE5EDB22CEB1A2644BB7AEC020A1354B76C718
601BE8CBD37EA99E61CC75B2B4BDE6029CB75D89211080D436C1A53C471BEE73
9CC7DBBAC93095B46C558AE0CF20F57AA8B554A27380FED4EFD79B47D3B26B25
29D5FD319AF0A05B47AB5F33925E8E771BAA14A1A29DC447144A68F20832F105
E39B27E43EDBFFBB1BF87AB708C32077CAD2FE1846B3DE7431AB67520634B363
E2ED8DC99F8FFEE37E467A74E42A3E5C339098E8B763150B0592B46DEB84430C
ABD250A42C7C80DE39783B6299FC3A7DADE2E71BB3DBB711A9F8542C98DB691F
B1D4FA382014AC3BB8BA64C511280295B1231747CE2869148DBAC1EA4833CD0C
9A1AA81A6AAB5DF7DB6CC8D57DDDAF6A83B7D17D92D6BDB5B06AC504F1D235D2
6DC50472E64F721FA5F49B181F182CA876162E87AE8E9F6604FE2FC6F3AE232E
FF832528A5CDC27F1037D5413347EE2E505F5B17900B24352B473827499A78B2
43FD075677C61515D91B253FB194FD0DE82823E176A44EE4E0C41616D0F17D54
DBD138CA2ED73E5413D52F3EA9C2A8C9E2BF785D102991EE44F435B0DF36A882
5B776F14FDF2E2A950BEB2D9D8809444409EE93B6036F6398245CC81898CDBE8
32F17E504D6BF0D1128B93A8AE4298189D865B42BEA6F12E6877D3254F72C721
CED445ABB7997E2AEA556119EA3CCE4BCDEBE32E6DF0CC29CEBAFCFA080B5A44
F2D9FC3E8A1E6ACD21B11B6F6DB1E7E6498DFB8DA345621E05D5B021B74AA247
AD9A2474E5B9CCC1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra un)
@start /Fa 220[314 14[523 20[{}2 885.568 /TeX-vect8 rf
/Fb 220[443 14[738 20[{}2 1328.35 /TeX-vect10 rf /Fc
155[811 672 664 819 16[1006 80[{ enclmmathit ReEncodeFont }5
1594.02 /LMMathItalic12-Regular rf /Fd 222[1594 32[1240{
 enclmmathsy ReEncodeFont }2 1594.02 /LMMathSymbols10-Regular
rf /Fe 205[406 406 49[{ enclmrm ReEncodeFont }2 664.176
/LMRoman6-Regular rf /Ff 222[941 32[732{ enclmmathsy ReEncodeFont }2
885.568 /LMMathSymbols8-Regular rf /Fg 200[441 441 441
441 441 441 441 49[{ enclmrm ReEncodeFont }7 774.872
/LMRoman7-Regular rf /Fh 194[861 11[553 49[{ enclmrm ReEncodeFont }2
1106.96 /LMRoman10-Regular rf /Fi 143[557 14[585 25[870
71[{ enclmmathit ReEncodeFont }3 1106.96 /LMMathItalic10-Regular
rf /Fj 222[1107 31[307 861{ enclmmathsy ReEncodeFont }3
1106.96 /LMMathSymbols10-Regular rf /Fk 202[470 470 470
470 470 49[{ enclmrm ReEncodeFont }5 885.568 /LMRoman8-Regular
rf /Fl 137[458 17[484 408 403 500 16[597 2[904 8[772
671 710 705 65[{ enclmmathit ReEncodeFont }11 885.568
/LMMathItalic8-Regular rf /Fm 173[959 82[{}1 1328.35
/MSBM10 rf /Fn 133[418 497 497 19[523 418 523 470 11[705
680 523 692 9[705 738 614 640 718 680 666 705 65[{
 enclmec ReEncodeFont }19 885.568 /LMRoman8-Regular rf
/Fo 184[869 5[830 13[553 4[307 46[{ enclmec ReEncodeFont }4
1106.96 /LMRoman10-Regular rf /Fp 160[909 45[606 1[606
47[{ enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular
rf /Fq 203[993 52[{}1 1328.35 /wasy10 rf /Fr 194[1012
3[650 2[650 650 650 650 650 650 650 4[1012 1[506 506
40[{ enclmrm ReEncodeFont }12 1328.35 /LMRoman12-Regular
rf /Fs 148[664 56[886 16[1328 31[369 1033{ enclmmathsy ReEncodeFont }5
1328.35 /LMMathSymbols10-Regular rf /Ft 188[969 969 969
969 14[969 969 30[661 661 3[369 12[{ enclmmathex ReEncodeFont }9
1106.96 /LMMathExtension10-Regular rf /Fu 133[604 634
2[629 1[470 613 586 1[653 11[676 560 553 683 11[883 762
800 990 1[838 2[1258 5[1026 1[963 1080 931 988 975 3[650
1[361 59[{ enclmmathit ReEncodeFont }25 1328.35 /LMMathItalic12-Regular
rf /Fv 650 2[723 5[650 17[650 105[578 686 686 939 686
723 506 513 506 1[723 650 723 1084 361 686 397 361 723
650 397 578 723 578 723 650 6[795 2[1336 975 1[939 723
957 1012 885 1[975 1192 813 1011 1[469 975 1021 849 885
993 939 921 975 1[614 1[1012 2[361 650 650 650 650 650
650 650 650 650 650 650 361 434 361 2[506 506 6[361 3[723
723 759 27[{ enclmec ReEncodeFont }73 1328.35 /LMRoman12-Regular
rf /Fw 3[1196 23[1046 105[956 4[1196 837 849 879 1[1196
1076 1196 1793 598 1136 1[598 1196 1076 658 982 1196
956 1196 1046 9[2223 1625 1[1497 1[1605 1616 1470 1616
1682 2041 1[1685 1[801 1682 1691 1353 1412 1649 1554
1530 1625 7[1076 1076 1076 1076 1076 1076 1076 1076 1076
1076 1076 598 717 3[837 837 40[{ enclmec ReEncodeFont }56
1912.83 /LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fw(A)-60
b(G)718 b(3.3)f(-)h(1)f(V)-179 b(ektoren)716 b(im)h(Dreiec)-60
b(k)718 b(-)f(MC)h(-)g(BIFIE)p 0 TeXcolorgray -741 4800
a Fv(1.)p 0 TeXcolorgray 651 w(Ein)433 b(Dreiec)-36 b(k)435
b Fu(AB)67 b(C)529 b Fv(ist)433 b(rec)-36 b(h)g(t)g(winklig)435
b(mit)e(der)g(Hyp)36 b(oten)-36 b(use)433 b Fu(AB)67
b Fv(.)855 7346 y(W)-108 b(elc)-36 b(he)537 b(der)h(folgenden)g(A)-36
b(ussagen)538 b(sind)g(jedenfalls)h(ric)-36 b(h)g(tig?)539
b(Kreuze)e(die)h(b)36 b(eiden)538 b(en)-36 b(t-)921 9338
y(sprec)g(henden)432 b(A)-36 b(ussagen)433 b(an!)p 16558
10305 13268 45 v 16558 14253 45 3949 v 17267 11316 a
Ft(\014)17267 11980 y(\014)17267 12644 y(\014)17636 11737
y Fs(\000)-332 b(!)17636 12644 y Fu(AB)19666 11316 y
Ft(\014)19666 11980 y(\014)19666 12644 y(\014)369 b Fr(=)21784
11316 y Ft(\014)21784 11980 y(\014)21784 12644 y(\014)22153
11737 y Fs(\000)-360 b(!)22153 12644 y Fu(AC)24154 11316
y Ft(\014)24154 11980 y(\014)24154 12644 y(\014)p 27416
14253 V 29781 14253 V 16558 14298 13268 45 v 16558 17685
45 3388 v 17267 15730 a Fs(\000)-332 b(!)17267 16638
y Fu(AB)436 b Fr(=)21046 15730 y Fs(\000)-360 b(!)21046
16638 y Fu(AC)391 b Fr(+)24649 15730 y Fs(\000)-657 b(\000)h(!)24649
16638 y Fu(B)67 b(C)p 27416 17685 V 1 0 0 TeXcolorrgb
28125 16323 a Fq(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 29781 17685 V 16558 17729 13268 45 v 16558
21014 45 3285 v 17267 19161 a Fs(\000)-361 b(!)17267
20069 y Fu(AC)464 b Fr(=)21017 19161 y Fs(\000)-657 b(\000)h(!)21017
20069 y Fu(B)67 b(C)p 27416 21014 V 29781 21014 V 16558
21058 13268 45 v 16558 24454 45 3396 v 17267 22490 a
Fs(\000)-332 b(!)17267 23398 y Fu(AB)436 b Fr(=)21046
22490 y Fs(\000)-657 b(\000)h(!)21046 23398 y Fu(B)67
b(C)391 b Fs(\000)24751 22490 y(\000)-360 b(!)24751 23398
y Fu(AC)p 27416 24454 V 29781 24454 V 16558 24498 13268
45 v 16558 27783 45 3285 v 17267 25930 a Fs(\000)f(!)17267
26838 y Fu(AC)390 b Fs(\001)20227 25930 y(\000)-657 b(\000)h(!)20227
26838 y Fu(B)67 b(C)464 b Fr(=)369 b(0)p 27416 27783
V 1 0 0 TeXcolorrgb 28125 26472 a Fq(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 29781 27783 V 16558
27827 13268 45 v 47992 4800 a Fp(___/1)p 1 0 0 TeXcolorrgb
47990 6792 a Fo(A)-31 b(G)369 b(3.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 31855 54804 45
v 0 TeXcolorgray 24746 81281 a Fv(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fw(A)-60 b(G)718 b(3.3)f(-)h(2)f(V)-179
b(ektoren)716 b(in)g(einem)h(Quader)g(-)g(MC)h(-)g(BIFIE)p
0 TeXcolorgray -741 4800 a Fv(2.)p 0 TeXcolorgray 651
w(Die)1253 b(Grund\035\344c)-36 b(he)1251 b Fu(AB)67
b(C)95 b(D)1288 b Fv(des)1253 b(dargestellten)f(Quaders)g(liegt)h(in)g
(der)f(xy-)921 6792 y(Eb)36 b(ene.)1066 b(F)-108 b(estgelegt)1063
b(w)-36 b(erden)1063 b(die)f(V)-108 b(ektoren)26550 6220
y Fs(\000)-1033 b(!)26873 6792 y Fu(a)322 b Fv(=)28890
5885 y Fs(\000)-331 b(!)28890 6792 y Fu(AB)67 b Fv(,)32345
5870 y Fs(\000)-1033 b(!)32733 6792 y Fu(b)387 b Fv(=)34685
5885 y Fs(\000)-652 b(\000)h(!)34685 6792 y Fu(AD)36
b Fv(,)1064 b(und)41432 6220 y Fs(\000)-1033 b(!)41816
6792 y Fu(c)384 b Fv(=)43772 5885 y Fs(\000)-346 b(!)43772
6792 y Fu(AE)77 b Fv(.)921 41901 y
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 425.28244 a add def
/d 0.0 a add neg def /h 313.82936 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 41901 a 14143
25505 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 -28.45274 0.0 142.26372   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul
exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -85.35823 -113.81097 0.0 -28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 -28.45274 67.53923 -74.72447
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 152.89746 -74.72447 67.53923 -74.72447
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 -28.45274 152.89746 -74.72447
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 -28.45274 0.0 -28.45274 
 /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.4 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 -28.45274 113.81097 -28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 57.28883 152.89746 10.63374
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 57.28883 67.53923 10.63374
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 57.28883 113.81097 57.28883
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 152.89746 10.63374 67.53923 10.63374
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 -28.45274 113.81097 57.28883
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinecap
[  2.0  2.0 ] 0 0 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 67.53923 -74.72447 67.53923 10.63374
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 199.1692 -28.45274 199.1692 57.28883
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 152.89746 -74.72447 152.89746 10.63374
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 284.52744 -28.45274 199.1692 -28.45274
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 0.0 142.26372
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(u) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 0.0 -28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
14143 25505 a
tx@Dict begin  { -8.3553 100.8762 } PutCoor PutBegin  end
 14143 25505 a Fn(z)14143 25505 y
tx@Dict begin  PutEnd  end
 14143
25505 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ -85.35823 -113.81097
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 270.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(u) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 14143
25505 a
tx@Dict begin  { -79.18498 -96.35709 } PutCoor PutBegin  end
 14143 25505 a Fn(x)14143 25505 y
tx@Dict begin  PutEnd  end
 14143 25505
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 113.81097 -28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 14143 25505
a
tx@Dict begin  { 105.51688 -23.34795 } PutCoor PutBegin  end
 14143 25505 a 0.25 TeXcolorgray Fn(D)p 0 TeXcolorgray
14143 25505 a
tx@Dict begin  PutEnd  end
 14143 25505 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 67.53923 -74.72447
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 14143 25505 a
tx@Dict begin  { 63.01924 -83.82565 } PutCoor PutBegin  end
 14143 25505 a 0.25 TeXcolorgray
Fn(A)p 0 TeXcolorgray 14143 25505 a
tx@Dict begin  PutEnd  end
 14143 25505 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 199.1692 -28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 14143 25505 a
tx@Dict begin  { 201.40944 -24.98254 } PutCoor PutBegin  end
 14143 25505 a
0.25 TeXcolorgray Fn(C)p 0 TeXcolorgray 14143 25505 a
tx@Dict begin  PutEnd  end

14143 25505 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 152.89746 -74.72447
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
14143 25505 a
tx@Dict begin  { 155.64261 -82.73593 } PutCoor PutBegin  end
 14143 25505 a 0.25 TeXcolorgray Fn(B)p
0 TeXcolorgray 14143 25505 a
tx@Dict begin  PutEnd  end
 14143 25505 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 67.53923 10.63374
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 14143 25505 a
tx@Dict begin  { 59.2052 4.43878 } PutCoor PutBegin  end
 14143 25505 a
0.25 TeXcolorgray Fn(E)p 0 TeXcolorgray 14143 25505 a
tx@Dict begin  PutEnd  end

14143 25505 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 113.81097 57.28883
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
14143 25505 a
tx@Dict begin  { 115.86887 60.55801 } PutCoor PutBegin  end
 14143 25505 a 0.25 TeXcolorgray Fn(H)p
0 TeXcolorgray 14143 25505 a
tx@Dict begin  PutEnd  end
 14143 25505 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 199.1692 57.28883
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 14143 25505 a
tx@Dict begin  { 201.40944 60.55801 } PutCoor PutBegin  end
 14143 25505 a
0.25 TeXcolorgray Fn(G)p 0 TeXcolorgray 14143 25505 a
tx@Dict begin  PutEnd  end

14143 25505 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 152.89746 10.63374
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
14143 25505 a
tx@Dict begin  { 157.27676 3.34949 } PutCoor PutBegin  end
 14143 25505 a 0.25 TeXcolorgray Fn(F)p
0 TeXcolorgray 14143 25505 a
tx@Dict begin  PutEnd  end
 14143 25505 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 284.52744 -28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 270.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(u) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 14143 25505 a
tx@Dict begin  { 277.68733 -36.96912 } PutCoor PutBegin  end
 14143 25505 a
-172 x Fn(y)14143 25505 y
tx@Dict begin  PutEnd  end
 14143 25505 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 199.1692 25.14317
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 14143 25505 a
tx@Dict begin  { 204.13332 21.874 } PutCoor PutBegin  end
 14143 25505 a
0.25 TeXcolorgray Fn(T)p 0 TeXcolorgray 14143 25505 a
tx@Dict begin  PutEnd  end

14143 25505 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 173.80156 -53.82037
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
14143 25505 a
tx@Dict begin  { 176.89143 -63.66656 } PutCoor PutBegin  end
 14143 25505 a 0.25 TeXcolorgray Fn(R)p
0 TeXcolorgray 14143 25505 a
tx@Dict begin  PutEnd  end
 14143 25505 a 47998 41901
a
currentpoint initclip moveto
 47998 41901 a 855 43893 a Fv(W)-108 b(elc)-36 b(he)361
b(der)g(folgenden)g(Darstellungen)h(ist/sind)f(m\366glic)-36
b(h,)363 b(w)-36 b(enn)361 b Fu(s;)221 b(t)369 b Fs(2)f
Fm(R)362 b Fv(gilt?)h(Kreuze)921 45885 y(die)433 b(zutre\033ende\(n\))f
(A)-36 b(ussage\(n\))433 b(an!)p 15763 46925 14859 45
v 15763 50210 45 3285 v 16471 48358 a Fs(\000)-392 b(!)16471
49265 y Fu(T)181 b(C)464 b Fr(=)369 b Fu(t)295 b Fs(\001)21619
48693 y(\000)-1033 b(!)22003 49265 y Fu(c)p 28211 50210
V 1 0 0 TeXcolorrgb 28920 48900 a Fq(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 30577 50210 V 15763
50254 14859 45 v 15763 53539 45 3285 v 16471 51687 a
Fs(\000)-385 b(!)16471 52594 y Fu(AR)380 b Fr(=)369 b
Fu(t)295 b Fs(\001)21626 52022 y(\000)-1033 b(!)21949
52594 y Fu(a)p 28211 53539 V 30577 53539 V 15763 53584
14859 45 v 15763 56985 45 3402 v 16471 55031 a Fs(\000)-664
b(\000)h(!)16471 55938 y Fu(E)78 b(G)369 b Fr(=)f Fu(s)295
b Fs(\001)21859 55366 y(\000)-1032 b(!)22182 55938 y
Fu(a)618 b Fr(+)295 b Fu(t)g Fs(\001)26219 55016 y(\000)-1033
b(!)26607 55938 y Fu(b)p 28211 56985 V 1 0 0 TeXcolorrgb
28920 55617 a Fq(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 30577 56985 V 15763 57030 14859 45 v 15763
60432 45 3402 v 16471 58477 a Fs(\000)-363 b(!)16471
59384 y Fu(B)67 b(T)550 b Fr(=)369 b Fu(s)295 b Fs(\001)21791
58812 y(\000)-1033 b(!)22114 59384 y Fu(a)618 b Fr(+)294
b Fu(t)h Fs(\001)26150 58462 y(\000)-1033 b(!)26538 59384
y Fu(b)p 28211 60432 V 30577 60432 V 15763 60476 14859
45 v 15763 63878 45 3402 v 16471 61923 a Fs(\000)-417
b(!)16471 62830 y Fu(T)181 b(R)380 b Fr(=)369 b Fu(s)295
b Fs(\001)21737 61908 y(\000)-1033 b(!)22124 62830 y
Fu(b)683 b Fr(+)295 b Fu(t)g Fs(\001)26096 62259 y(\000)-1033
b(!)26481 62830 y Fu(c)p 28211 63878 V 1 0 0 TeXcolorrgb
28920 62509 a Fq(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 30577 63878 V 15763 63922 14859 45 v 47992
4800 a Fp(___/1)p 1 0 0 TeXcolorrgb 47990 6792 a Fo(A)-31
b(G)369 b(3.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 67950 54804 45 v 0 TeXcolorgray 24746
81281 a Fv(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fw(A)-60 b(G)718 b(3.3)f(-)h(3)f(Rec)-60
b(hnen)717 b(mit)g(V)-179 b(ektoren)716 b(-)h(MC)h(-)g(BIFIE)p
0 TeXcolorgray -741 4800 a Fv(3.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)433 b(sind)g(die)h(V)-108 b(ektoren)16617
4229 y Fs(\000)-1033 b(!)16970 4800 y Fu(r)389 b(;)18527
4229 y Fs(\000)-1032 b(!)18886 4800 y Fu(s)357 b Fv(,)434
b(und)23253 3983 y Fs(\000)-1033 b(!)23682 4800 y Fu(t)429
b Fv(.)921 28778 y
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 315.82562 a add def
/d 0.0 a add neg def /h 208.27428 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 28778 a -2355 24495 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 56.90549
0.0 113.81097 142.26372   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 312.98018
0.0 56.90549 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 113.81097
142.26372 312.98018 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial -2355 24495 a
tx@Dict begin  { 67.14848 91.61786 } PutCoor PutBegin  end

-2355 24495 a 487 x Fs(\000)-1033 b(!)-2002 25554 y Fu(r)-2355
24495 y
tx@Dict begin  PutEnd  end
 -2355 24495 a -2355 24495 a
tx@Dict begin  { 159.90427 -9.10507 } PutCoor PutBegin  end
 -2355 24495 a 487
x Fs(\000)g(!)-1925 25799 y Fu(t)-2355 24495 y
tx@Dict begin  PutEnd  end
 -2355
24495 a -2355 24495 a
tx@Dict begin  { 212.25764 96.73915 } PutCoor PutBegin  end
 -2355 24495 a 487 x Fs(\000)g(!)-1997
25554 y Fu(s)-2355 24495 y
tx@Dict begin  PutEnd  end
 -2355 24495 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 113.81097 142.26372
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 270.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(u) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 56.90549 0.0   false
NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 270. [1.0
0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (u)
show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 312.98018 0.0   false
NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 270. [1.0
0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (u)
show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 35882 28778 a
currentpoint initclip moveto

35882 28778 a 921 31323 a Fv(Kreuze)433 b(die)h(b)36
b(eiden)433 b(f\374r)g(diese)h(V)-108 b(ektoren)433 b(zutre\033enden)f
(A)-36 b(ussagen)433 b(an!)p 16167 32290 14050 45 v 16167
35606 45 3316 v 16876 33742 a Fs(\000)-1033 b(!)17305
34559 y Fu(t)724 b Fr(+)19806 33987 y Fs(\000)-1033 b(!)20164
34559 y Fu(s)653 b Fr(+)22736 33987 y Fs(\000)-1033 b(!)23090
34559 y Fu(r)758 b Fr(=)25814 33722 y Fs(\000)-1033 b(!)26153
34559 y Fr(0)p 27807 35606 V 1 0 0 TeXcolorrgb 28515
34280 a Fq(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 30172 35606 V 16167 35650 14050 45 v 16167
38955 45 3305 v 16876 37083 a Fs(\000)g(!)17305 37900
y Fu(t)724 b Fr(+)19806 37328 y Fs(\000)-1033 b(!)20164
37900 y Fu(s)726 b Fr(=)369 b Fs(\000)23917 37328 y(\000)-1033
b(!)24270 37900 y Fu(r)p 27807 38955 V 1 0 0 TeXcolorrgb
28515 37635 a Fq(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 30172 38955 V 16167 38999 14050 45 v 16167
42304 45 3305 v 16876 40432 a Fs(\000)g(!)17305 41249
y Fu(t)724 b Fs(\000)19828 40677 y(\000)-1033 b(!)20185
41249 y Fu(s)727 b Fr(=)22906 40677 y Fs(\000)-1033 b(!)23259
41249 y Fu(r)p 27807 42304 V 30172 42304 V 16167 42349
14050 45 v 16167 45653 45 3305 v 16876 43781 a Fs(\000)g(!)17305
44598 y Fu(t)724 b Fs(\000)19828 44026 y(\000)-1033 b(!)20181
44598 y Fu(r)758 b Fr(=)22906 44026 y Fs(\000)-1033 b(!)23263
44598 y Fu(s)p 27807 45653 V 30172 45653 V 16167 45698
14050 45 v 16167 48994 45 3297 v 16876 47130 a Fs(\000)g(!)17305
47947 y Fu(t)798 b Fr(=)19954 47375 y Fs(\000)-1033 b(!)20312
47947 y Fu(s)652 b Fr(+)22884 47375 y Fs(\000)-1033 b(!)23237
47947 y Fu(r)p 27807 48994 V 30172 48994 V 16167 49038
14050 45 v 47992 4800 a Fp(___/1)p 1 0 0 TeXcolorrgb
47990 6792 a Fo(A)-31 b(G)369 b(3.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 53067 54804 45
v 0 TeXcolorgray 24746 81281 a Fv(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fw(A)-60 b(G)718 b(3.3)f(-)h(4)f(Quadrat)g(-)
g(MC)h(-)g(BIFIE)p 0 TeXcolorgray -741 4800 a Fv(4.)p
0 TeXcolorgray 651 w Fu(A;)221 b(B)67 b(;)221 b(C)654
b Fv(und)557 b Fu(D)594 b Fv(sind)557 b(Ec)-36 b(kpunkte)557
b(des)h(un)-36 b(ten)556 b(abgebildeten)h(Quadrates,)h
Fu(M)697 b Fv(ist)558 b(der)921 6792 y(Sc)-36 b(hnittpunkt)431
b(der)i(Diagonalen.)p 0 TeXcolorgray 0 TeXcolorgray 10653
32209 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 230.46738 a add def
/d 0.0 a add neg def /h 208.27428 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 10653 32209 a 14684 25658 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 0.0
-28.45274 0.0 113.81097   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 142.26372
-28.45274 0.0 -28.45274   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 142.26372
113.81097 142.26372 -28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 0.0
113.81097 142.26372 113.81097   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 142.26372
-28.45274 0.0 113.81097   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 142.26372
113.81097 0.0 -28.45274   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 0.0 113.81097   false
NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
14684 25658 a
tx@Dict begin  { -9.10507 116.65642 } PutCoor PutBegin  end
 14684 25658 a Fl(D)14684 25658 y
tx@Dict begin  PutEnd  end
 14684
25658 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 0.0 -28.45274   false
NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 14684
25658 a
tx@Dict begin  { -6.25963 -39.83366 } PutCoor PutBegin  end
 14684 25658 a Fl(A)14684 25658 y
tx@Dict begin  PutEnd  end
 14684 25658
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 142.26372 -28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 14684 25658
a
tx@Dict begin  { 144.53998 -39.26492 } PutCoor PutBegin  end
 14684 25658 a Fl(B)14684 25658 y
tx@Dict begin  PutEnd  end
 14684 25658 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 142.26372 113.81097
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 14684 25658 a
tx@Dict begin  { 144.53998 117.22516 } PutCoor PutBegin  end
 14684 25658 a
Fl(C)14684 25658 y
tx@Dict begin  PutEnd  end
 14684 25658 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.25  setgray  [ 71.13185 42.67911
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 14684 25658 a
tx@Dict begin  { 83.08195 38.12657 } PutCoor PutBegin  end
 14684 25658 a 0.25 TeXcolorgray
Fl(M)p 0 TeXcolorgray 14684 25658 a
tx@Dict begin  PutEnd  end
 14684 25658 a 36165
32209 a
currentpoint initclip moveto
 36165 32209 a 921 36193 a Fv(Kreuze)g(die)h(b)36
b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434 b(an!)p
16424 37160 13536 45 v 16424 40547 45 3388 v 17133 39500
a Fu(C)464 b Fr(=)368 b Fu(A)296 b Fr(+)e(2)i Fs(\001)24095
38592 y(\000)-511 b(\000)g(!)24095 39500 y Fu(AM)p 27550
40547 V 1 0 0 TeXcolorrgb 28258 39186 a Fq(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 29915 40547
V 16424 40592 13536 45 v 16424 43979 45 3388 v 17133
42931 a Fu(B)436 b Fr(=)369 b Fu(C)390 b Fr(+)22566 42024
y Fs(\000)-653 b(\000)i(!)22566 42931 y Fu(AD)p 27550
43979 V 29915 43979 V 16424 44023 13536 45 v 16424 47766
45 3743 v 17133 46363 a(M)508 b Fr(=)368 b Fu(D)332 b
Fs(\000)23152 45840 y Fk(1)p 23152 46053 471 45 v 23152
46821 a(2)24050 46363 y Fs(\001)24715 45455 y(\000)-612
b(\000)g(!)24715 46363 y Fu(D)36 b(B)p 27550 47766 45
3743 v 29915 47766 V 16424 47810 13536 45 v 16424 51095
45 3285 v 17133 49242 a Fs(\000)-512 b(\000)i(!)17133
50150 y Fu(AM)434 b Fs(\001)20464 49242 y(\000)-471 b(\000)g(!)20464
50150 y Fu(M)139 b(B)436 b Fr(=)369 b(0)p 27550 51095
V 1 0 0 TeXcolorrgb 28258 49785 a Fq(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 29915 51095 V 16424
51139 13536 45 v 16424 54424 45 3285 v 17133 52571 a
Fs(\000)-331 b(!)17133 53479 y Fu(AB)362 b Fs(\001)20122
52571 y(\000)-360 b(!)20122 53479 y Fu(AC)464 b Fr(=)369
b(0)p 27550 54424 V 29915 54424 V 16424 54468 13536 45
v 47992 4800 a Fp(___/1)p 1 0 0 TeXcolorrgb 47990 6792
a Fo(A)-31 b(G)369 b(3.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 58496 54804 45 v 0 TeXcolorgray
24746 81281 a Fv(4)p 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fw(A)-60 b(G)718 b(3.3)f(-)h(5)f(V)-179
b(ektoren)716 b(\(als)h(Pfeile\))f(-)h(O)-60 b(A)718
b(-)g(BIFIE)p 0 TeXcolorgray -741 4907 a Fv(5.)p 0 TeXcolorgray
651 w Fu(A;)221 b(B)67 b(;)221 b(C)654 b Fv(und)557 b
Fu(D)594 b Fv(sind)557 b(Ec)-36 b(kpunkte)557 b(des)h(un)-36
b(ten)556 b(abgebildeten)h(Quadrates,)h Fu(M)697 b Fv(ist)558
b(der)921 6899 y(Sc)-36 b(hnittpunkt)431 b(der)i(Diagonalen.)921
9444 y(Gegeb)36 b(en)410 b(sind)h(die)g(V)-108 b(ektoren)16526
8872 y Fs(\000)-1033 b(!)16849 9444 y Fu(a)733 b Fv(und)20844
8522 y Fs(\000)-1033 b(!)21232 9444 y Fu(b)388 b Fv(,)411
b(die)g(in)f(der)h(un)-36 b(tenstehenden)408 b(Abbildung)i(als)921
11436 y(Pfeile)435 b(dargestellt)f(sind.)921 13981 y(Stelle)4594
13458 y Fk(1)p 4594 13671 471 45 v 4594 14439 a(2)5493
13981 y Fs(\001)6157 13059 y(\000)-1033 b(!)6545 13981
y Fu(b)683 b Fs(\000)9109 13409 y(\000)-1033 b(!)9432
13981 y Fu(a)756 b Fv(ausgehend)433 b(v)-36 b(om)434
b(Punkt)f Fu(C)529 b Fv(durc)-36 b(h)432 b(einen)h(Pfeil)i(dar!)p
0 TeXcolorgray 0 TeXcolorgray 3724 36448 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 355.65927 a add def
/d 0.0 a add neg def /h 179.82109 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 3724 36448
a 14180 29582 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -56.90549 T 7 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 261.19597 0.0 -94.4633 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -85.35823 0.0 T 13
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 117.79433 0.0 -62.02676   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 0.0
56.90549 -28.45274 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 85.35823
0.0 -28.45274 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
14180 29582 a
tx@Dict begin  { -32.4361 48.36957 } PutCoor PutBegin  end
 14180 29582 a 487 x Fs(\000)-1033 b(!)14503
30641 y Fu(a)14180 29582 y
tx@Dict begin  PutEnd  end
 14180 29582 a 14180 29582
a
tx@Dict begin  { 33.00528 -5.69046 } PutCoor PutBegin  end
 14180 29582 a 487 x Fs(\000)g(!)14568 30992 y Fu(b)14180
29582 y
tx@Dict begin  PutEnd  end
 14180 29582 a 14180 29582 a
tx@Dict begin  { -37.55782 -11.38092 } PutCoor PutBegin  end
 14180 29582 a Fv(A)14180
29582 y
tx@Dict begin  PutEnd  end
 14180 29582 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 0.0 56.90549   false
NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 90. [1.0
0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (u)
show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
14180 29582 a
tx@Dict begin  { -3.41418 64.30304 } PutCoor PutBegin  end
 14180 29582 a Fv(D)14180 29582 y
tx@Dict begin  PutEnd  end
 14180
29582 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 85.35823 0.0   false
NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 270. [1.0
0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (u)
show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 14180
29582 a
tx@Dict begin  { 87.06532 -11.95009 } PutCoor PutBegin  end
 14180 29582 a Fv(B)14180 29582 y
tx@Dict begin  PutEnd  end
 14180 29582
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 113.81097 56.90549
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 14180 29582
a
tx@Dict begin  { 113.24179 63.16512 } PutCoor PutBegin  end
 14180 29582 a Fv(C)14180 29582 y
tx@Dict begin  PutEnd  end
 14180 29582 a 1 0 0
TeXcolorrgb @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 170.71646
56.90549 113.81097 56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 142.26372
0.0 170.71646 56.90549   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.33333 0.33333 0.33333  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 142.26372
0.0 113.81097 56.90549   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.33333 0.33333 0.33333  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 142.26372 0.0   false
NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 206. [1.0
0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (u)
show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 14180 29582 a
tx@Dict begin  { 130.31361 76.53795 } PutCoor PutBegin  end

14180 29582 a 14313 30469 a Fk(1)p 14313 30682 471 45
v 14313 31450 a(2)15212 30992 y Fs(\001)15876 30069 y(\000)g(!)16263
30992 y Fu(b)14180 29582 y
tx@Dict begin  PutEnd  end
 14180 29582 a 14180 29582
a
tx@Dict begin  { 161.04262 35.8503 } PutCoor PutBegin  end
 14180 29582 a 1059 x Fs(\000)15213 30069 y(\000)g(!)15536
30641 y Fu(a)14180 29582 y
tx@Dict begin  PutEnd  end
 14180 29582 a 14180 29582
a
tx@Dict begin  { 68.85558 40.40283 } PutCoor PutBegin  end
 14180 29582 a 14313 30469 a Fk(1)p 14313 30682 471
45 v 14313 31450 a(2)15212 30992 y Fs(\001)15876 30069
y(\000)g(!)16263 30992 y Fu(b)683 b Fs(\000)18828 30420
y(\000)-1033 b(!)19151 30992 y Fu(a)14180 29582 y
tx@Dict begin  PutEnd  end
 14180
29582 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -28.45274 0.0   false
NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 43094 36448
a
currentpoint initclip moveto
 43094 36448 a 47992 4907 a Fp(___/1)p 1 0 0 TeXcolorrgb
47990 6899 a Fo(A)-31 b(G)369 b(3.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 38484 54804 45
v -2331 43786 a Fw(A)-60 b(G)674 b(3.3)e(-)i(6)f(Rec)-60
b(henop)60 b(erationen)670 b(b)60 b(ei)672 b(V)-179 b(ektoren)672
b(-)h(MC)g(-)h(BIFIE)p 0 TeXcolorgray -741 47093 a Fv(6.)p
0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(sind)g(die)h(V)-108
b(ektoren)16617 46521 y Fs(\000)-1033 b(!)16940 47093
y Fu(a)756 b Fv(und)20980 46171 y Fs(\000)-1033 b(!)21368
47093 y Fu(b)821 b Fv(so)-36 b(wie)435 b(ein)e(Skalar)i
Fu(r)405 b Fs(2)368 b Fm(R)p Fv(.)855 49639 y(W)-108
b(elc)-36 b(he)312 b(der)h(folgenden)g(Rec)-36 b(henop)36
b(erationen)313 b(liefert/liefern)h(als)g(Ergebnis)f(wieder)g(einen)873
51630 y(V)-108 b(ektor?)434 b(Kreuze)f(die)h(zutre\033ende\(n\))d(An)
-36 b(t)g(w)g(ort\(en\))432 b(an!)p 18381 52671 9623
45 v 18381 56073 45 3402 v 19089 54454 a Fs(\000)-1033
b(!)19412 55026 y Fu(a)618 b Fr(+)294 b Fu(r)332 b Fs(\001)23601
54103 y(\000)-1033 b(!)23989 55026 y Fu(b)p 25594 56073
V 1 0 0 TeXcolorrgb 26302 54704 a Fq(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 27959 56073 V 18381
56117 9623 45 v 18381 59168 45 3052 v 19089 57549 a Fs(\000)g(!)19412
58121 y Fu(a)618 b Fr(+)294 b Fu(r)p 25594 59168 V 27959
59168 V 18381 59213 9623 45 v 18381 62512 45 3300 v 19089
60995 a Fs(\000)-1033 b(!)19412 61567 y Fu(a)618 b Fs(\001)21377
60645 y(\000)-1033 b(!)21764 61567 y Fu(b)p 25594 62512
V 27959 62512 V 18381 62557 9623 45 v 18381 65856 45
3300 v 19089 64911 a(r)332 b Fs(\001)20671 63989 y(\000)-1033
b(!)21058 64911 y Fu(b)p 25594 65856 V 1 0 0 TeXcolorrgb
26302 64538 a Fq(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 27959 65856 V 18381 65900 9623 45 v 18381
69311 45 3411 v 19089 67333 a Fs(\000)g(!)19477 68255
y Fu(b)683 b Fs(\000)22041 67683 y(\000)-1033 b(!)22364
68255 y Fu(a)p 25594 69311 V 1 0 0 TeXcolorrgb 26302
67938 a Fq(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 27959 69311 V 18381 69355 9623 45 v 47992
47093 a Fp(___/1)p 1 0 0 TeXcolorrgb 47990 49085 a Fo(A)-31
b(G)369 b(3.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 73383 54804 45 v 0 TeXcolorgray 24746
81281 a Fv(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fw(A)-60 b(G)718 b(3.3)f(-)h(7)f(Rec)-60
b(h)g(tec)g(k)718 b(-)g(MC)f(-)h(BIFIE)p 0 TeXcolorgray
-741 4800 a Fv(7.)p 0 TeXcolorgray 651 w(Abgebildet)433
b(ist)h(das)g(Rec)-36 b(h)g(tec)g(k)433 b Fu(R)11 b(S)77
b(T)181 b(U)139 b Fv(.)p 0 TeXcolorgray 0 TeXcolorgray
11472 26987 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 215.67183 a add def
/d 0.0 a add neg def /h 182.09781 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 11472 26987 a 25015 26672 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 93.32495 0.0 -122.34688 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -113.81097 0.0 T 8
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 179.25237 0.0 -2.84544   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ -85.35823
85.35823 -56.90549 142.26372   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 28.45274
28.45274 -85.35823 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 56.90549
85.35823 -56.90549 142.26372   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def /ArrowInside { } def  [ 28.45274
28.45274 56.90549 85.35823   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0.12549 0.12549 0.12549  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -56.90549 142.26372
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 25015 26672 a
tx@Dict begin  { -54.62921 145.6779 } PutCoor PutBegin  end
 25015 26672 a
Fn(U)25015 26672 y
tx@Dict begin  PutEnd  end
 25015 26672 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -85.35823 85.35823
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 25015 26672 a
tx@Dict begin  { -93.32495 73.40813 } PutCoor PutBegin  end
 25015 26672 a Fn(R)25015 26672
y
tx@Dict begin  PutEnd  end
 25015 26672 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 28.45274 28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
25015 26672 a
tx@Dict begin  { 19.34766 15.36429 } PutCoor PutBegin  end
 25015 26672 a Fn(S)25015 26672 y
tx@Dict begin  PutEnd  end
 25015
26672 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 56.90549 85.35823
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 25015
26672 a
tx@Dict begin  { 59.18175 88.77242 } PutCoor PutBegin  end
 25015 26672 a Fn(T)25015 26672 y
tx@Dict begin  PutEnd  end
 25015 26672
a 35346 26987 a
currentpoint initclip moveto
 35346 26987 a 921 30640 a Fv(Kreuze)433
b(die)h(b)36 b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434
b(an!)p 16804 31606 12777 45 v 16804 35002 45 3396 v
17512 33039 a Fs(\000)-541 b(!)17512 33946 y Fu(S)77
b(T)550 b Fr(=)369 b Fs(\000)22115 33039 y(\000)-338
b(!)22115 33946 y Fu(R)11 b(U)p 27170 35002 V 29536 35002
V 16804 35046 12777 45 v 16804 38663 45 3617 v 17512
36478 a Fs(\000)-483 b(!)17512 37386 y Fu(S)77 b(R)380
b Fs(k)20793 36478 y(\000)-397 b(!)20793 37386 y Fu(U)139
b(T)p 27170 38663 V 1 0 0 TeXcolorrgb 27879 37187 a Fq(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 29536
38663 V 16804 38707 12777 45 v 16804 42095 45 3388 v
17512 40140 a Fs(\000)-483 b(!)17512 41047 y Fu(R)11
b(S)373 b Fr(+)20992 40140 y Fs(\000)-541 b(!)20992 41047
y Fu(S)77 b(T)551 b Fr(=)24562 40140 y Fs(\000)-417 b(!)24562
41047 y Fu(T)181 b(R)p 27170 42095 V 29536 42095 V 16804
42139 12777 45 v 16804 45526 45 3388 v 17512 44479 a(U)508
b Fr(=)369 b Fu(T)476 b Fr(+)22829 43571 y Fs(\000)-483
b(!)22829 44479 y Fu(S)77 b(R)p 27170 45526 V 1 0 0 TeXcolorrgb
27879 44164 a Fq(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 29536 45526 V 16804 45570 12777 45 v 16804
48855 45 3285 v 17512 47002 a Fs(\000)-417 b(!)17512
47910 y Fu(R)11 b(T)476 b Fs(\001)20416 47002 y(\000)-462
b(!)20416 47910 y Fu(S)77 b(U)508 b Fr(=)369 b(0)p 27170
48855 V 29536 48855 V 16804 48899 12777 45 v 47992 4800
a Fp(___/1)p 1 0 0 TeXcolorrgb 47990 6792 a Fo(A)-31
b(G)369 b(3.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 52927 54804 45 v 0 TeXcolorgray 24746
81281 a Fv(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fw(A)-60 b(G)718 b(3.3)f(-)h(8)f(Geometrisc)
-60 b(he)717 b(Deutung)f(-)i(MC)g(-)f(BIFIE)p 0 TeXcolorgray
-741 4800 a Fv(8.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(sind)g(zw)-36 b(ei)434 b(V)-108 b(ektoren:)17737 4229
y Fs(\000)-1033 b(!)18060 4800 y Fu(a)322 b(;)19647 3878
y Fs(\000)-1032 b(!)20036 4800 y Fu(b)756 b Fs(2)369
b Fm(R)23559 4318 y Fk(2)24085 4800 y Fv(.)855 7346 y(W)-108
b(elc)-36 b(he)593 b(der)g(nac)-36 b(hstehenden)592 b(A)-36
b(ussagen)594 b(\374b)36 b(er)593 b(V)-108 b(ektoren)593
b(sind)g(k)-36 b(orrekt?)596 b(Kreuze)d(die)921 9338
y(b)36 b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434
b(an!)p 1062 10305 44260 45 v 1062 13512 45 3208 v 1770
12309 a(Der)g(V)-108 b(ektor)434 b Fr(3)295 b Fs(\001)10118
11737 y(\000)-1033 b(!)10440 12309 y Fu(a)757 b Fv(ist)433
b(dreimal)h(so)g(lang)g(wie)h(der)e(V)-108 b(ektor)31584
11737 y Fs(\000)-1033 b(!)31907 12309 y Fu(a)323 b Fv(.)p
42912 13512 V 1 0 0 TeXcolorrgb 43621 12240 a Fq(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
13512 V 1062 13556 44260 45 v 1062 17114 45 3558 v 1770
15911 a Fv(Das)435 b(Pro)36 b(dukt)9509 15339 y Fs(\000)-1033
b(!)9832 15911 y Fu(a)618 b Fs(\001)11797 14988 y(\000)-1033
b(!)12185 15911 y Fu(b)821 b Fv(ergibt)433 b(einen)g(V)-108
b(ektor.)p 42912 17114 V 45277 17114 V 1062 17158 44260
45 v 1062 22357 45 5200 v 1770 19162 a(Die)435 b(V)-108
b(ektoren)9664 18590 y Fs(\000)-1033 b(!)9987 19162 y
Fu(a)756 b Fv(und)432 b Fs(\000)p Fr(0)p Fu(;)p Fr(5)297
b Fs(\001)17682 18590 y(\000)-1033 b(!)18005 19162 y
Fu(a)756 b Fv(b)36 b(esitzen)433 b(die)h(gleic)-36 b(he)434
b(Ric)-36 b(h)g(tung)433 b(und)f(sind)1770 21154 y(gleic)-36
b(h)435 b(orien)-36 b(tiert.)p 42912 22357 V 45277 22357
V 1062 22402 44260 45 v 1062 25609 45 3208 v 1770 24406
a(Die)435 b(V)-108 b(ektoren)9664 23834 y Fs(\000)-1033
b(!)9987 24406 y Fu(a)756 b Fv(und)432 b Fs(\000)p Fr(2)296
b Fs(\001)16670 23834 y(\000)-1033 b(!)16993 24406 y
Fu(a)756 b Fv(sind)433 b(parallel.)p 42912 25609 V 1 0 0
TeXcolorrgb 43621 24337 a Fq(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 45277 25609 V 1062 25653 44260
45 v 1062 31203 45 5550 v 1770 28008 a Fv(W)-108 b(enn)5440
27436 y Fs(\000)-1033 b(!)5762 28008 y Fu(a)741 b Fv(und)9772
27086 y Fs(\000)-1033 b(!)10159 28008 y Fu(b)806 b Fv(einen)417
b(rec)-36 b(h)g(ten)417 b(Wink)-36 b(el)419 b(einsc)-36
b(hlie\377en,)418 b(so)h(ist)f(deren)f(Skalar-)1770 30000
y(pro)36 b(dukt)433 b(gr\366\377er)i(als)f(n)-36 b(ull.)p
42912 31203 V 45277 31203 V 1062 31247 44260 45 v 47992
4800 a Fp(___/1)p 1 0 0 TeXcolorrgb 47990 6792 a Fo(A)-31
b(G)369 b(3.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 35275 54804 45 v 0 TeXcolorgray 24746
81281 a Fv(7)p 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fw(A)-60 b(G)718 b(3.3)f(-)h(9)f(V)-179
b(egetarisc)-60 b(he)716 b(Men)-60 b(\374s)717 b(-)h(O)-60
b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray -741 4800 a Fv(9.)p
0 TeXcolorgray 651 w(In)365 b(einem)f(Restauran)-36 b(t)364
b(wird)h(t\344glic)-36 b(h)366 b(ein)e(v)-36 b(egetarisc)g(hes)366
b(Men)-36 b(\374)364 b(angeb)36 b(oten.)365 b(Der)g(V)-108
b(ektor)p 0 TeXcolorgray 0 TeXcolorgray 20054 13604 a
Fj(\000)-861 b(!)20315 14081 y Fi(a)569 b Fh(=)22637
7206 y Ft(0)22637 9155 y(B)22637 9819 y(B)22637 10483
y(B)22637 11147 y(B)22637 11811 y(B)22637 12475 y(B)22637
13140 y(B)22637 13804 y(B)22637 14468 y(B)22637 15132
y(B)22637 15796 y(B)22637 16461 y(B)22637 17125 y(B)22637
17789 y(B)22637 18497 y(@)24159 8364 y Fi(a)24744 8530
y Fg(1)24159 10012 y Fi(a)24744 10178 y Fg(2)24159 11661
y Fi(a)24744 11827 y Fg(3)24159 13309 y Fi(a)24744 13475
y Fg(4)24159 14958 y Fi(a)24744 15124 y Fg(5)24159 16606
y Fi(a)24744 16772 y Fg(6)24159 18255 y Fi(a)24744 18421
y Fg(6)24159 19903 y Fi(a)24744 20069 y Fg(7)25794 7206
y Ft(1)25794 9155 y(C)25794 9819 y(C)25794 10483 y(C)25794
11147 y(C)25794 11811 y(C)25794 12475 y(C)25794 13140
y(C)25794 13804 y(C)25794 14468 y(C)25794 15132 y(C)25794
15796 y(C)25794 16461 y(C)25794 17125 y(C)25794 17789
y(C)25794 18497 y(A)921 23464 y Fv(gibt)428 b(die)g(Anzahl)g(der)g(v)
-36 b(erkauften)428 b(v)-36 b(egetarisc)g(hen)429 b(Men)-36
b(\374s)427 b(an)h(den)f(W)-108 b(o)36 b(c)-36 b(hen)g(tagen)428
b(Mon-)921 25112 y(tag)434 b(bis)g(Sonn)-36 b(tag)433
b(einer)g(b)36 b(estimm)-36 b(ten)433 b(W)-108 b(o)36
b(c)-36 b(he)433 b(an,)h(der)f(V)-108 b(ektor)p 0 TeXcolorgray
0 TeXcolorgray 20068 30495 a Fj(\000)-861 b(!)20343 30972
y Fi(p)583 b Fh(=)22651 27418 y Ft(0)22651 29367 y(B)22651
30031 y(B)22651 30695 y(B)22651 31359 y(B)22651 32068
y(@)24173 28296 y Fi(p)24730 28462 y Fg(1)24173 29944
y Fi(p)24730 30110 y Fg(2)24546 31220 y Fo(.)24546 31663
y(.)24546 32105 y(.)24173 33754 y Fi(p)24730 33920 y
Fg(7)25780 27418 y Ft(1)25780 29367 y(C)25780 30031 y(C)25780
30695 y(C)25780 31359 y(C)25780 32068 y(A)921 36935 y
Fv(die)433 b(jew)-36 b(eiligen)436 b(Men)-36 b(\374preise)432
b(in)i(Euro.)921 41472 y(In)-36 b(terpretiere)432 b(das)i(Skalarpro)36
b(dukt)19318 40900 y Fs(\000)-1033 b(!)19641 41472 y
Fu(a)617 b Fs(\001)21606 40900 y(\000)-1033 b(!)21943
41472 y Fu(p)772 b Fv(in)433 b(diesem)h(Zusammenhang!)p
1 0 0 TeXcolorrgb 921 44017 a(Das)380 b(Skalarpro)36
b(dukt)379 b(gibt)g(den)f(Erl\366s)h(aus)g(dem)f(V)-108
b(erkauf)380 b(des)e(v)-36 b(egetarisc)g(hen)379 b(Men)-36
b(\374s)378 b(f\374r)921 46009 y(die)433 b(T)-108 b(age)435
b(Mon)-36 b(tag)433 b(bis)h(Sonn)-36 b(tag)433 b(in)h(dieser)f(W)-108
b(o)36 b(c)-36 b(he)434 b(an.)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 4800 a Fp(___/1)p 1 0 0
TeXcolorrgb 47990 6792 a Fo(A)-31 b(G)369 b(3.3)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 49743
54804 45 v 0 TeXcolorgray 24746 81281 a Fv(8)p 0 TeXcolorgray
eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fw(A)-60 b(G)510 b(3.3)g(-)g(10)g(V)-179
b(ektoraddition)507 b(-)j(O)-60 b(A)510 b(-)g(Matura)f(2015/16)h(-)g
(Haupt-)-2331 4622 y(termin)p 0 TeXcolorgray -1391 7929
a Fv(10.)p 0 TeXcolorgray 651 w(Die)434 b(un)-36 b(ten)432
b(stehende)h(Abbildung)f(zeigt)j(zw)-36 b(ei)434 b(V)-108
b(ektoren)30174 7357 y Fs(\000)-1033 b(!)30261 7929 y
Fu(v)30890 8128 y Fk(1)31936 7929 y Fv(und)34537 7357
y Fs(\000)g(!)34863 7929 y Fu(v)374 b Fv(.)921 12466
y(Erg\344nze)434 b(in)f(der)g(Abbildung)g(einen)g(V)-108
b(ektor)23700 11894 y Fs(\000)-1033 b(!)23787 12466 y
Fu(v)24416 12665 y Fk(2)25462 12466 y Fv(so,)434 b(dass)30252
11894 y Fs(\000)-1033 b(!)30339 12466 y Fu(v)30968 12665
y Fk(1)31876 12466 y Fr(+)33183 11894 y Fs(\000)g(!)33270
12466 y Fu(v)33899 12665 y Fk(2)34880 12466 y Fr(=)36261
11894 y Fs(\000)g(!)36587 12466 y Fu(v)807 b Fv(ist.)p
0 TeXcolorgray 0 TeXcolorgray 5416 53575 a
 currentpoint currentpoint translate 1.49873 1.49873 scale neg exch
neg exch translate
 5416 53575
a 5850 53575 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 212.98529 a add def
/d 0.0 a add neg def /h 233.54988 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 5850 53575 a 11699 44303 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -56.90549 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 160.14827 0.0 -59.75093 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -28.45274 0.0 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 149.78891 0.0 -83.76097   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 113.81097
-56.90549 -28.45274 -56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 113.81097
113.81097 113.81097 -56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1 0 0 TeXcolorrgb @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
-28.45274 113.81097 113.81097 -56.90549   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb 11699 44303
a
tx@Dict begin  { 41.17043 -71.13185 } PutCoor PutBegin  end
 11699 44303 a -505 x Ff(\000)-732 b(!)11710 44180 y
Fl(v)12168 44303 y Fe(1)11699 44303 y
tx@Dict begin  PutEnd  end
 11699 44303 a 11699
44303 a
tx@Dict begin  { 120.48914 18.08035 } PutCoor PutBegin  end
 11699 44303 a -382 x Ff(\000)g(!)11924 44303
y Fl(v)11699 44303 y
tx@Dict begin  PutEnd  end
 11699 44303 a 1 0 0 TeXcolorrgb
11699 44303 a
tx@Dict begin  { 34.80528 14.22636 } PutCoor PutBegin  end
 11699 44303 a 1 0 0 TeXcolorrgb -505 x
Ff(\000)g(!)11710 44180 y Fl(v)12168 44303 y Fe(2)p 1 0 0
TeXcolorrgb 11699 44303 a
tx@Dict begin  PutEnd  end
 11699 44303 a 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 29426 53575 a
currentpoint initclip moveto
 29426 53575 a 5416 53575
a
 currentpoint currentpoint translate 1 1.49873 div 1 1.49873 div scale
neg exch neg exch translate
 5416 53575 a 1 0 0 TeXcolorrgb 921 57559 a Fv(L\366sungssc)-36
b(hl\374ssel:)400 b(Ein)h(Punkt)e(f\374r)i(eine)f(k)-36
b(orrekte)401 b(Darstellung)g(v)-36 b(on)36503 56987
y Fs(\000)-1033 b(!)36590 57559 y Fu(v)37219 57758 y
Fk(2)37831 57559 y Fv(,)401 b(w)-36 b(ob)36 b(ei)401
b(der)f(ge-)921 59551 y(suc)-36 b(h)g(te)429 b(V)-108
b(ektor)429 b(auc)-36 b(h)430 b(v)-36 b(on)430 b(anderen)e(A)-36
b(usgangspunkten)429 b(aus)h(gezeic)-36 b(hnet)429 b(w)-36
b(erden)429 b(kann.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 7929 a Fp(___/1)p 1 0 0 TeXcolorrgb
47990 9921 a Fo(A)-31 b(G)369 b(3.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 63284 54804 45
v 0 TeXcolorgray 24746 81281 a Fv(9)p 0 TeXcolorgray
eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fw(A)-60 b(G)507 b(3.3)f(-)g(11)g
(Geh\344lter)g(-)g(O)-60 b(A)506 b(-)h(Matura)e(2014/15)h(-)h
(Haupttermin)p 0 TeXcolorgray -1391 4907 a Fv(11.)p 0
TeXcolorgray 651 w(Die)467 b(Geh\344lter)f(der)g(8)h(Mitarb)36
b(eiter/innen)466 b(eines)h(Klein)-36 b(un)g(ternehmens)464
b(sind)i(im)h(V)-108 b(ektor)921 9808 y Fu(G)369 b Fr(=)3697
5535 y Ft(0)3697 7483 y(B)3697 8147 y(B)3697 8811 y(B)3697
9476 y(B)3697 10140 y(B)3697 10804 y(B)3697 11512 y(@)4665
6744 y Fu(G)5691 6943 y Fk(1)4665 8736 y Fu(G)5691 8935
y Fk(2)5260 10127 y Fv(.)5260 10569 y(.)5260 11012 y(.)4665
13004 y Fu(G)5691 13203 y Fk(3)6217 5535 y Ft(1)6217
7483 y(C)6217 8147 y(C)6217 8811 y(C)6217 9476 y(C)6217
10140 y(C)6217 10804 y(C)6217 11512 y(A)7619 9808 y Fv(dargestellt.)921
17173 y(Gib)433 b(an,)874 25014 y(w)-36 b(as)434 b(der)f(A)-36
b(usdruc)g(k)433 b(\(das)g(Skalarpro)36 b(dukt\))434
b Fi(G)246 b Fj(\001)24966 18140 y Ft(0)24966 20088 y(B)24966
20752 y(B)24966 21416 y(B)24966 22080 y(B)24966 22745
y(B)24966 23409 y(B)24966 24073 y(B)24966 24737 y(B)24966
25401 y(B)24966 26066 y(B)24966 26730 y(B)24966 27394
y(B)24966 28058 y(B)24966 28722 y(B)24966 29431 y(@)25934
19297 y Fh(1)25934 20946 y(1)25934 22594 y(1)25934 24243
y(1)25934 25891 y(1)25934 27540 y(1)25934 29188 y(1)25934
30837 y(1)26488 18140 y Ft(1)26488 20088 y(C)26488 20752
y(C)26488 21416 y(C)26488 22080 y(C)26488 22745 y(C)26488
23409 y(C)26488 24073 y(C)26488 24737 y(C)26488 25401
y(C)26488 26066 y(C)26488 26730 y(C)26488 27394 y(C)26488
28058 y(C)26488 28722 y(C)26488 29431 y(A)27825 25014
y Fv(in)434 b(diesem)f(K)-36 b(on)g(text)434 b(b)36 b(edeutet)o(.)p
1 0 0 TeXcolorrgb 921 33039 a(Der)449 b(A)-36 b(usdruc)g(k)448
b(gibt)i(die)f(Summe)f(der)g(Geh\344lter)h(der)g(8)g(Mitarb)36
b(eiter/innen)449 b(des)f(Klein-)921 35031 y(un)-36 b(ternehmens)431
b(an.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 4907 a Fp(___/1)p 1 0 0 TeXcolorrgb 47990 6899
a Fo(A)-31 b(G)369 b(3.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 38507 54804 45 v 0 TeXcolorgray
24421 81281 a Fv(10)p 0 TeXcolorgray eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fw(A)-60 b(G)764 b(3.3)e(-)i(12)f(V)-179
b(ektoren)761 b(-)i(O)-60 b(A)763 b(-)h(Matura)e(2014/15)h(-)g(Neb)60
b(en)-60 b(ter-)-2331 4622 y(min)717 b(1)p 0 TeXcolorgray
-1391 7929 a Fv(12.)p 0 TeXcolorgray 651 w(In)529 b(der)g(un)-36
b(ten)528 b(stehenden)g(Abbildung)g(sind)h(die)g(V)-108
b(ektoren)32049 7357 y Fs(\000)-1033 b(!)32372 7929 y
Fu(a)323 b Fv(,)34269 7006 y Fs(\000)-1033 b(!)34656
7929 y Fu(b)917 b Fv(und)38823 7357 y Fs(\000)-1032 b(!)39208
7929 y Fu(c)913 b Fv(als)530 b(Pfeile)921 9921 y(dargestellt.)921
14458 y(Stelle)434 b(den)f(V)-108 b(ektor)11145 13536
y Fs(\000)-1033 b(!)11471 14458 y Fu(d)696 b Fr(=)14223
13886 y Fs(\000)-1033 b(!)14546 14458 y Fu(a)618 b Fr(+)17154
13536 y Fs(\000)-1033 b(!)17541 14458 y Fu(b)683 b Fs(\000)295
b Fr(2)h Fs(\001)21715 13886 y(\000)-1033 b(!)22099 14458
y Fu(c)818 b Fv(als)434 b(Pfeil)h(dar.)p 0 TeXcolorgray
0 TeXcolorgray 3169 59385 a
 currentpoint currentpoint translate 1.27785 1.27785 scale neg exch
neg exch translate
 3169 59385 a 3603 59385 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 282.25159 a add def
/d 0.0 a add neg def /h 287.88039 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end

3603 59385 a 11439 45679 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -113.81097 T 11
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 211.45663 0.0 -70.79495 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -56.90549 0.0 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.5  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 164.05826 0.0 -123.82213   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.5  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 56.90549
28.45274 -28.45274   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 113.81097
-56.90549 28.45274 -28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 -85.35823
28.45274 -28.45274   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1 0 0 TeXcolorrgb
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35823 28.45274 0.0 56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
113.81097 85.35823 85.35823 28.45274   /Lineto /lineto load def 0 
setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ()
length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add
/arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2
y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1
Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
142.26372 142.26372 113.81097 85.35823   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.5
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
142.26372 142.26372 28.45274 -28.45274   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 2.5 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb
11439 45679 a
tx@Dict begin  { 18.46414 17.70567 } PutCoor PutBegin  end
 11439 45679 a -381 x Ff(\000)-732 b(!)11660
45679 y Fl(a)11439 45679 y
tx@Dict begin  PutEnd  end
 11439 45679 a 11439 45679
a
tx@Dict begin  { 66.71216 -34.56302 } PutCoor PutBegin  end
 11439 45679 a -615 x Ff(\000)g(!)11709 45679 y Fl(b)11439
45679 y
tx@Dict begin  PutEnd  end
 11439 45679 a 11439 45679 a
tx@Dict begin  { 3.98987 -52.25395 } PutCoor PutBegin  end
 11439 45679 a -381
x Ff(\000)g(!)11706 45679 y Fl(c)11439 45679 y
tx@Dict begin  PutEnd  end
 11439
45679 a 1 0 0 TeXcolorrgb 11439 45679 a
tx@Dict begin  { 38.56767 50.67537 } PutCoor PutBegin  end
 11439 45679 a
1 0 0 TeXcolorrgb -615 x Ff(\000)g(!)11709 45679 y Fl(b)p
1 0 0 TeXcolorrgb 11439 45679 a
tx@Dict begin  PutEnd  end
 11439 45679 a 11439 45679
a
tx@Dict begin  { 104.5066 47.45871 } PutCoor PutBegin  end
 11439 45679 a 1 0 0 TeXcolorrgb -92 x Ff(\000)12171
45205 y(\000)g(!)12438 45587 y Fl(c)p 1 0 0 TeXcolorrgb
11439 45679 a
tx@Dict begin  PutEnd  end
 11439 45679 a 11439 45679 a
tx@Dict begin  { 134.25964 99.72743 } PutCoor PutBegin  end
 11439 45679
a 1 0 0 TeXcolorrgb -92 x Ff(\000)12171 45205 y(\000)g(!)12438
45587 y Fl(c)p 1 0 0 TeXcolorrgb 11439 45679 a
tx@Dict begin  PutEnd  end
 11439
45679 a 11439 45679 a
tx@Dict begin  { 73.9773 64.34558 } PutCoor PutBegin  end
 11439 45679 a 1 0 0 TeXcolorrgb
-615 x Ff(\000)g(!)11668 45679 y Fl(d)p 1 0 0 TeXcolorrgb
11439 45679 a
tx@Dict begin  PutEnd  end
 11439 45679 a 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 34847
59385 a
currentpoint initclip moveto
 34847 59385 a 3169 59385 a
 currentpoint currentpoint translate 1 1.27785 div 1 1.27785 div scale
neg exch neg exch translate
 3169 59385 a 47992
7929 a Fp(___/1)p 1 0 0 TeXcolorrgb 47990 9921 a Fo(A)-31
b(G)369 b(3.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 61422 54804 45 v 0 TeXcolorgray 24421
81281 a Fv(11)p 0 TeXcolorgray eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fw(A)-60 b(G)838 b(3.3)g(-)f(13)h(Normalen)
f(V)-179 b(ektor)837 b(b)60 b(estimmen)836 b(-)i(O)-60
b(A)838 b(-)g(Matura)-2385 4515 y(2014/15)718 b(-)f(Neb)60
b(en)-60 b(termin)716 b(2)p 0 TeXcolorgray -1391 9741
a Fv(13.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(ist)h(der)f(V)-108
b(ektor)14521 9169 y Fs(\000)-1033 b(!)14844 9741 y Fu(a)692
b Fr(=)17599 6464 y Ft(0)17599 8412 y(B)17599 9076 y(B)17599
9741 y(B)17599 10449 y(@)18900 7815 y Fr(4)18900 9807
y(1)18900 11799 y(2)19882 6464 y Ft(1)19882 8412 y(C)19882
9076 y(C)19882 9741 y(C)19882 10449 y(A)20851 9741 y
Fv(.)921 16382 y(Bestimme)388 b(die)h(K)-36 b(o)36 b(ordinate)388
b Fu(z)16335 16581 y Fl(B)17532 16382 y Fv(des)g(V)-108
b(ektors)24429 15460 y Fs(\000)-1033 b(!)24816 16382
y Fu(b)757 b Fr(=)27507 13106 y Ft(0)27507 15054 y(B)27507
15718 y(B)27507 16382 y(B)27507 17091 y(@)29219 14457
y Fr(4)29219 16449 y(2)28807 18441 y Fu(z)29411 18640
y Fl(b)30201 13106 y Ft(1)30201 15054 y(C)30201 15718
y(C)30201 16382 y(C)30201 17091 y(A)31558 16382 y Fv(so,)389
b(dass)36258 15810 y Fs(\000)-1033 b(!)36581 16382 y
Fu(a)711 b Fv(und)40531 15460 y Fs(\000)-1033 b(!)40919
16382 y Fu(b)776 b Fv(aufein-)921 20065 y(ander)433 b(normal)h(stehen.)
921 24602 y Fu(z)1525 24801 y Fl(b)2352 24602 y Fr(=)p
1 0 0 TeXcolorrgb 433 w Fs(\000)p Fr(9)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 9741 a Fp(___/1)p
1 0 0 TeXcolorrgb 47990 11732 a Fo(A)-31 b(G)369 b(3.3)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
28277 54804 45 v -2331 33578 a Fw(A)-60 b(G)826 b(3.3)e(-)h(14)g
(Geometrisc)-60 b(hes)825 b(Rec)-60 b(hnen)824 b(mit)h(V)-179
b(ektoren)823 b(-)i(O)-60 b(A)826 b(-)-2331 36600 y(Matura)717
b(2014/15)g(-)h(K)-60 b(omp)60 b(ensationspr\374fung)p
0 TeXcolorgray -1391 39908 a Fv(14.)p 0 TeXcolorgray
651 w(Gegeb)36 b(en)529 b(sind)f(die)i(Pfeildarstellungen)g(der)e(vier)
i(V)-108 b(ektoren)32703 39336 y Fs(\000)-1033 b(!)33026
39908 y Fu(a)323 b(;)34614 38985 y Fs(\000)-1033 b(!)35002
39908 y Fu(b)388 b(;)36525 39336 y Fs(\000)-1033 b(!)36910
39908 y Fu(c)384 b(;)38436 38985 y Fs(\000)-1033 b(!)38763
39908 y Fu(d)858 b Fs(2)531 b Fm(R)42673 39426 y Fk(2)43728
39908 y Fv(und)921 41900 y(ein)433 b(Punkt)h Fu(P)181
b Fv(.)p 0 TeXcolorgray 0 TeXcolorgray 5418 67566 a
 currentpoint currentpoint translate 0.73232 0.73232 scale neg exch
neg exch translate
 5418
67566 a 5418 67566 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 443.86296 a add def
/d 0.0 a add neg def /h 294.77042 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 5418 67566 a 20788 56795 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -85.35823 T 11
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 305.01344 0.0 -138.84952 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -113.81097 0.0 T 16
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 197.4621 0.0 -97.30832   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 56.90549
-113.81097 113.81097   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -28.45274
28.45274 -85.35823 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 28.45274
28.45274 28.45274 -28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 56.90549
113.81097 85.35823 28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1 0 0 TeXcolorrgb
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 142.26372
170.71646 199.1692 28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
142.26372 170.71646 199.1692 28.45274   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.8 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 0 0 0 TeXcolorrgb 20788 56795
a
tx@Dict begin  { -56.3363 87.63449 } PutCoor PutBegin  end
 20788 56795 a -1107 x Fd(\000)-1240 b(!)21180 56795
y Fc(d)20788 56795 y
tx@Dict begin  PutEnd  end
 20788 56795 a 20788 56795 a
tx@Dict begin  { -58.0434 16.50264 } PutCoor PutBegin  end
 20788
56795 a -687 x Fd(\000)g(!)21175 56795 y Fc(a)20788 56795
y
tx@Dict begin  PutEnd  end
 20788 56795 a 20788 56795 a
tx@Dict begin  { 31.29819 -1.13791 } PutCoor PutBegin  end
 20788 56795 a -1107 x Fd(\000)g(!)21253
56795 y Fc(b)20788 56795 y
tx@Dict begin  PutEnd  end
 20788 56795 a 20788 56795
a
tx@Dict begin  { 75.11522 71.13185 } PutCoor PutBegin  end
 20788 56795 a -687 x Fd(\000)g(!)21249 56795 y Fc(c)20788
56795 y
tx@Dict begin  PutEnd  end
 20788 56795 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 199.1692 28.45274
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
20788 56795 a
tx@Dict begin  { 194.61665 14.79555 } PutCoor PutBegin  end
 20788 56795 a Fc(P)20788 56795 y
tx@Dict begin  PutEnd  end
 20788
56795 a 1 0 0 TeXcolorrgb 0 TeXcolorgray 54552 67566
a
currentpoint initclip moveto
 54552 67566 a 5418 67566 a
 currentpoint currentpoint translate 1 0.73232 div 1 0.73232 div scale
neg exch neg exch translate
 5418 67566 a 921 71219 a
Fv(Ermittle)360 b(in)h(der)f(gegeb)36 b(enen)360 b(Abbildung)g
(ausgehend)g(v)-36 b(om)361 b(Punkt)f Fu(P)541 b Fv(gra\034sc)-36
b(h)360 b(die)h(Pfeil-)921 73210 y(darstellung)433 b(des)h(V)-108
b(ektors)433 b Fr(2)296 b Fs(\001)16245 72288 y(\000)-1033
b(!)16633 73210 y Fu(b)683 b Fs(\000)19330 72687 y Fk(1)p
19330 72900 471 45 v 19330 73668 a(2)20228 73210 y Fs(\001)20892
72288 y(\000)-1033 b(!)21219 73210 y Fu(d)326 b Fv(.)47992
39908 y Fp(___/1)p 1 0 0 TeXcolorrgb 47990 41900 a Fo(A)-31
b(G)369 b(3.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 75705 54804 45 v 0 TeXcolorgray 24421
81281 a Fv(12)p 0 TeXcolorgray eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fw(A)-60 b(G)718 b(3.3)f(-)h(15)f(T)-179
b(rap)60 b(ez)716 b(-)i(O)-60 b(A)718 b(-)f(Matura)g(NT)h(2)f(15/16)p
0 TeXcolorgray -1391 4907 a Fv(15.)p 0 TeXcolorgray 651
w(V)-108 b(on)433 b(einem)h(T)-108 b(rap)36 b(ez)433
b Fu(AB)67 b(C)95 b(D)470 b Fv(sind)433 b(die)h(K)-36
b(o)36 b(ordinaten)433 b(der)g(Ec)-36 b(kpunkte)433 b(gegeb)36
b(en:)921 7452 y Fu(A)369 b Fr(=)g(\(2)p Fu(=)295 b Fs(\000)h
Fr(6\))p Fu(;)221 b(B)437 b Fr(=)368 b(\(10)p Fu(=)296
b Fs(\000)g Fr(2\))p Fu(;)221 b(C)464 b Fr(=)369 b(\(9)p
Fu(=)p Fr(2\))p Fu(;)221 b(D)406 b Fr(=)369 b(\(3)p Fu(=y)48
b Fr(\))p Fv(.)921 9998 y(Die)434 b(Seiten)f Fu(a)369
b Fr(=)g Fu(AB)500 b Fv(und)433 b Fu(c)369 b Fr(=)f Fu(C)95
b(D)470 b Fv(sind)433 b(zueinander)g(parallel.)921 26164
y
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 207.7051 a add def
/d 0.0 a add neg def /h 137.71161 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 26164 a 9236 29440 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 113.81097 56.90549 -56.90549 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 85.35823 142.26372 113.81097 56.90549
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 142.26372 85.35823 142.26372  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def  [ -56.90549 56.90549 0.0 142.26372  
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW mul add dup
1.4  mul exch 0.25 mul neg add /arrowlength exch def 4 copy /y1 ED
/x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1
Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n
1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5
 abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos
ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop
} repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div
}{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2
x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  [ -56.90549
56.90549   false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 9236 29440 a
tx@Dict begin  { -64.87221 43.24829 } PutCoor PutBegin  end
 9236
29440 a 0 0 1 TeXcolorrgb Fl(A)p 0 TeXcolorgray 9236
29440 a
tx@Dict begin  PutEnd  end
 9236 29440 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  [ 113.81097
56.90549   false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
9236 29440 a
tx@Dict begin  { 118.93225 44.3862 } PutCoor PutBegin  end
 9236 29440 a 0 0 1 TeXcolorrgb Fl(B)p 0
TeXcolorgray 9236 29440 a
tx@Dict begin  PutEnd  end
 9236 29440 a 9236 29440 a
tx@Dict begin  { 28.45274 48.36957 } PutCoor PutBegin  end
 9236
29440 a Fn(a)9236 29440 y
tx@Dict begin  PutEnd  end
 9236 29440 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  [ 85.35823
142.26372   false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 9236 29440 a
tx@Dict begin  { 88.20367 143.40163 } PutCoor PutBegin  end
 9236 29440 a 0 0 1
TeXcolorrgb Fl(C)p 0 TeXcolorgray 9236 29440 a
tx@Dict begin  PutEnd  end
 9236 29440
a 9236 29440 a
tx@Dict begin  { 103.56796 92.75578 } PutCoor PutBegin  end
 9236 29440 a Fn(b)9236 29440 y
tx@Dict begin  PutEnd  end
 9236 29440
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.49019 0.49019 1  setrgbcolor
 [ 0.0 142.26372   false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont
0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 9236 29440 a
tx@Dict begin  { -10.81218 144.53998 } PutCoor PutBegin  end

9236 29440 a 0.49019 0.49019 1 TeXcolorrgb Fl(D)p 0 TeXcolorgray
9236 29440 a
tx@Dict begin  PutEnd  end
 9236 29440 a 9236 29440 a
tx@Dict begin  { 41.54118 145.6779 } PutCoor PutBegin  end
 9236 29440 a Fn(c)9236
29440 y
tx@Dict begin  PutEnd  end
 9236 29440 a 9236 29440 a
tx@Dict begin  { -36.41946 104.70589 } PutCoor PutBegin  end
 9236 29440 a Fn(d)9236
29440 y
tx@Dict begin  PutEnd  end
 9236 29440 a 23913 26164 a
currentpoint initclip moveto
 23913 26164 a 921
28709 a Fv(Gib)g(den)g(W)-108 b(ert)433 b(der)g(K)-36
b(o)36 b(ordinate)434 b Fu(y)481 b Fv(des)434 b(Punkts)f
Fu(D)469 b Fv(an!)921 31255 y Fu(y)417 b Fr(=)p 1 0 0
TeXcolorrgb 433 w Fv(-1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 4907 a Fp(___/1)p 1 0 0 TeXcolorrgb
47990 6899 a Fo(A)-31 b(G)369 b(3.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 34988 54804 45
v -2331 40417 a Fw(A)-60 b(G)946 b(3.3)f(-)g(16)g(V)-179
b(ektork)-60 b(onstruktion)942 b(-)j(O)-60 b(A)946 b(-)f(Matura)g
(2013/14)-2331 43439 y(Haupttermin)p 0 TeXcolorgray -1391
46746 a Fv(16.)p 0 TeXcolorgray 651 w(Die)516 b(Abbildung)f(zeigt)h(zw)
-36 b(ei)516 b(als)g(Pfeile)g(dargestellte)g(V)-108 b(ektoren)34470
46208 y Fb(#)-222 b(\024)34534 46746 y Fu(a)728 b Fv(und)38776
45857 y Fb(#)-222 b(\024)38905 46746 y Fu(b)792 b Fv(und)515
b(einen)921 48738 y(Punkt)433 b Fu(P)181 b Fv(.)921 51284
y(Erg\344nze)327 b(die)h(un)-36 b(ten)326 b(stehende)g(Abbildung)g(um)h
(einen)g(Pfeil,)i(der)e(v)-36 b(om)328 b(Punkt)e Fu(P)509
b Fv(ausgeh)-36 b(t)921 53275 y(und)432 b(den)h(V)-108
b(ektor)10353 52737 y Fb(#)-221 b(\024)10418 53275 y
Fu(a)507 b Fs(\000)13084 52386 y Fb(#)-222 b(\024)13213
53275 y Fu(b)711 b Fv(darstellt!)p 0 TeXcolorgray 0 TeXcolorgray
7667 78188 a
 currentpoint currentpoint translate 0.93593 0.93593 scale neg exch
neg exch translate
 7667 78188 a 7667 78188 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 303.87553 a add def
/d 0.0 a add neg def /h 219.08603 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 7667 78188 a 43069
89274 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 85.35823 T 8 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ -15.93346 0.0 -319.80899 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -312.98018 0.0 T 11
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 319.2398 0.0 100.15378   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -199.1692
284.52744 -284.52744 199.1692   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1 0 0 TeXcolorrgb @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -142.26372
227.62195 -284.52744 199.1692   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -142.26372
227.62195 -199.1692 284.52744   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial 0 0 0 TeXcolorrgb @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -142.26372
284.52744 -85.35823 227.62195   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial 1 0 0 TeXcolorrgb @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ -85.35823
170.71646 -227.62195 142.26372   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial 0 0 0 TeXcolorrgb 43069 89274 a
tx@Dict begin  { -113.81097 270.30106 } PutCoor PutBegin  end
 43069 89274
a 43174 89531 a Fa(#)-158 b(\024)43260 90113 y Fl(b)43069
89274 y
tx@Dict begin  PutEnd  end
 43069 89274 a 1 0 0 TeXcolorrgb 43069 89274 a
tx@Dict begin  { -170.71646 269.73187 } PutCoor PutBegin  end

43069 89274 a 839 x Ff(\000)43906 89531 y Fa(#)g(\024)43992
90113 y Fl(b)43069 89274 y
tx@Dict begin  PutEnd  end
 43069 89274 a 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 43069 89274 a
tx@Dict begin  { -220.79312 207.13593 } PutCoor PutBegin  end
 43069 89274 a 43174 89765
a Fa(#)g(\024)43211 90113 y Fl(a)351 b Ff(\000)45108
89531 y Fa(#)-158 b(\024)45194 90113 y Fl(b)43069 89274
y
tx@Dict begin  PutEnd  end
 43069 89274 a 43069 89274 a
tx@Dict begin  { -178.11401 150.79962 } PutCoor PutBegin  end
 43069 89274 a 43174 89765
a Fa(#)g(\024)43211 90113 y Fl(a)351 b Ff(\000)45108
89531 y Fa(#)-158 b(\024)45194 90113 y Fl(b)43069 89274
y
tx@Dict begin  PutEnd  end
 43069 89274 a 0 0 0 TeXcolorrgb 43069 89274 a
tx@Dict begin  { -244.69376 256.07469 } PutCoor PutBegin  end
 43069
89274 a 43174 89531 a Fa(#)g(\024)43211 89879 y Fl(a)43069
89274 y
tx@Dict begin  PutEnd  end
 43069 89274 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ -227.62195 142.26372
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
43069 89274 a
tx@Dict begin  { -232.74323 146.81625 } PutCoor PutBegin  end
 43069 89274 a Fl(P)43069 89274 y
tx@Dict begin  PutEnd  end
 43069
89274 a 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 41305 78188 a
currentpoint initclip moveto
 41305 78188 a 7667 78188
a
 currentpoint currentpoint translate 1 0.93593 div 1 0.93593 div scale
neg exch neg exch translate
 7667 78188 a 47992 46746 a Fp(___/1)p 1 0 0 TeXcolorrgb
47990 48738 a Fo(A)-31 b(G)369 b(3.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 24421
81281 a Fv(13)p 0 TeXcolorgray eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 54804 45 v -2331 6921 a Fw(A)-60
b(G)795 b(3.3)f(-)h(17)f(V)-179 b(ektoraddition)791 b(-)k(O)-60
b(A-)795 b(Matura)f(2013/14)g(1.)g(Ne-)-2331 9944 y(b)60
b(en)-60 b(termin)p 0 TeXcolorgray -1391 13251 a Fv(17.)p
0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(sind)g(die)h(b)36
b(eiden)433 b(V)-108 b(ektoren)20919 12712 y Fb(#)-221
b(\024)20984 13251 y Fu(a)645 b Fv(und)25061 12362 y
Fb(#)-221 b(\024)25191 13251 y Fu(b)277 b Fv(.)921 15796
y(Stelle)432 b(im)h(un)-36 b(tenstehenden)429 b(K)-36
b(o)36 b(ordinatensystem)432 b(den)g(V)-108 b(ektor)33851
15258 y Fb(#)-222 b(\024)33950 15796 y Fu(s)679 b Fv(mit)37773
15258 y Fb(#)-221 b(\024)37873 15796 y Fu(s)615 b Fr(=)369
b(2)293 b Fs(\001)42234 15258 y Fb(#)-222 b(\024)42298
15796 y Fu(a)504 b Fr(+)44937 14907 y Fb(#)-222 b(\024)45066
15796 y Fu(b)921 17788 y Fv(als)434 b(Pfeil)h(dar!)921
52891 y
 currentpoint currentpoint translate 0.98486 0.98486 scale neg exch
neg exch translate
 921 52891 a 921 52891 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 330.05156 a add def
/d 0.0 a add neg def /h 297.61543 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 52891 a 18811 38339
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 -113.81097 T 11
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 168.44019 0.0 -161.61137 0.0   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -142.26372 0.0 T 12
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 166.16391 0.0 -131.45152   /Lineto /lineto load def
0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 168.44019  0 -161.61137  0 ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -161.61137
 168.44019  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-131.45152  def /maxTickline 166.16391  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 166.16391
0.0 -131.45152   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 168.44019
0.0 -161.61137 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 166.16391  0 -131.45152  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -131.45152
 166.16391  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-161.61137  def /maxTickline 168.44019  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 166.16391
0.0 -131.45152   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 168.44019
0.0 -161.61137 0.0   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 17566 35475 a Fk(1)17565 32325
y(2)17565 29176 y(3)17565 26026 y(4)17565 22877 y(5)16834
41728 y Ff(\000)p Fk(1)16834 44878 y Ff(\000)p Fk(2)16834
48027 y Ff(\000)p Fk(3)16834 51177 y Ff(\000)p Fk(4)21725
39685 y(1)2680 b(2)f(3)h(4)f(5)-19733 b Ff(\000)p Fk(1)-4352
b Ff(\000)p Fk(2)h Ff(\000)p Fk(3)f Ff(\000)p Fk(4)h
Ff(\000)p Fk(5)18811 38339 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 18811 38339 a 18811 38339
a
tx@Dict begin  { 168.44019 166.16391 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 18811 38339 a 18811 38339 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 18811 38339 a 18468 38625
a Fv(x)18811 38339 y
tx@Dict begin  PutEnd  end
 18811 38339 a 18811 38339 a
tx@Dict begin  PutEnd  end
 18811
38339 a 18811 38339 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 18811 38339 a 18811 38339 a
tx@Dict begin  { 0.0 0.0 pop 168.44019 166.16391 exch pop } PutCoor
PutBegin  end
 18811
38339 a 18811 38339 a
tx@Dict begin  { 5.0 6.2015 5.16667 2.33331 -40.  Uput UUput } PutCoor
PutBegin  end
 18811 38339 a 18468 38496 a Fv(y)18811
38339 y
tx@Dict begin  PutEnd  end
 18811 38339 a 18811 38339 a
tx@Dict begin  PutEnd  end
 18811 38339 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 28.45274
56.90549 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 85.35823
-56.90549 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
18811 38339 a
tx@Dict begin  { 5.69046 39.26492 } PutCoor PutBegin  end
 18811 38339 a 18959 38749 a Fb(#)-222 b(\024)19023
39288 y Fu(a)18811 38339 y
tx@Dict begin  PutEnd  end
 18811 38339 a 18811 38339
a
tx@Dict begin  { 29.02191 -25.03854 } PutCoor PutBegin  end
 18811 38339 a 18959 38749 a Fb(#)g(\024)19088 39638
y Fu(b)18811 38339 y
tx@Dict begin  PutEnd  end
 18811 38339 a 1 0 0 TeXcolorrgb
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 56.90549
113.81097 28.45274 56.90549   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 142.26372
56.90549 56.90549 113.81097   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 142.26372
56.90549 0.0 0.0   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
18811 38339 a
tx@Dict begin  { 33.00528 97.30832 } PutCoor PutBegin  end
 18811 38339 a 18959 38749 a Fb(#)g(\024)19023
39288 y Fu(a)18811 38339 y
tx@Dict begin  PutEnd  end
 18811 38339 a 18811 38339
a
tx@Dict begin  { 93.32495 106.4134 } PutCoor PutBegin  end
 18811 38339 a 18959 38749 a Fb(#)g(\024)19088 39638
y Fu(b)18811 38339 y
tx@Dict begin  PutEnd  end
 18811 38339 a 18811 38339 a
tx@Dict begin  { 65.44139 28.45274 } PutCoor PutBegin  end
 18811
38339 a 18959 39100 a Fb(#)g(\024)19058 39638 y Fu(s)616
b Fr(=)368 b(2)296 b Fs(\001)23425 39100 y Fb(#)-222
b(\024)23489 39638 y Fu(a)507 b Fr(+)26134 38749 y Fb(#)-222
b(\024)26263 39638 y Fu(b)18811 38339 y
tx@Dict begin  PutEnd  end
 18811 38339 a
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 37456
52891 a
currentpoint initclip moveto
 37456 52891 a 921 52891 a
 currentpoint currentpoint translate 1 0.98486 div 1 0.98486 div scale
neg exch neg exch translate
 921 52891 a 1 0 0 TeXcolorrgb
2545 x Fv(Ein)535 b(Punkt)g(f\374r)g(die)g(ric)-36 b(h)g(tige)535
b(L\366sung.)g(Die)h(L\366sung)f(ist)g(dann)g(als)g(ric)-36
b(h)g(tig)535 b(zu)g(w)-36 b(erten,)874 57428 y(w)g(enn)428
b(der)f(V)-108 b(ektor)10832 56889 y Fb(#)-222 b(\024)10931
57428 y Fu(s)616 b Fr(=)13541 56144 y Ft(\020)14202 56838
y Fk(5)14202 57886 y(2)14672 56144 y Ft(\021)15761 57428
y Fv(ric)-36 b(h)g(tig)428 b(dargestellt)h(ist.)f(Die)h(Spitze)e(des)h
(V)-108 b(ektors)41713 56889 y Fb(#)-222 b(\024)41812
57428 y Fu(s)675 b Fv(m)-36 b(uss)921 59420 y(k)g(orrekt)304
b(und)f(klar)h(erk)-36 b(enn)g(bar)303 b(eingezeic)-36
b(hnet)303 b(sein.)i(Als)f(A)-36 b(usgangspunkt)303 b(kann)h(ein)g(b)36
b(elie-)921 61412 y(biger)443 b(Punkt)e(gew)-36 b(\344hlt)444
b(w)-36 b(erden.)442 b(Die)h(Summanden)e(m)-36 b(\374ssen)441
b(nic)-36 b(h)g(t)442 b(dargestellt)h(w)-36 b(erden.)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
13251 a Fp(___/1)p 1 0 0 TeXcolorrgb 47990 15243 a Fo(A)-31
b(G)369 b(3.3)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 66879 54804 45 v 0 TeXcolorgray 24421
81281 a Fv(14)p 0 TeXcolorgray eop end
%%Page: 15 15
TeXDict begin 15 14 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fw(A)-60 b(G)718 b(3.3)f(-)h(18)f(W)-60
b(\374rstelstand)715 b(-)i(O)-60 b(A)718 b(-)g(Matura)f(NT)g(1)h(16/17)
p 0 TeXcolorgray -1391 4907 a Fv(18.)p 0 TeXcolorgray
651 w(Ein)384 b(W)-36 b(\374rstelstandb)36 b(esitzer)384
b(f\374hrt)g(A)-36 b(ufzeic)g(hn)g(ungen)383 b(\374b)36
b(er)384 b(die)g(Anzahl)h(der)f(t\344glic)-36 b(h)385
b(v)-36 b(er-)921 6899 y(kauften)414 b(W)-36 b(\374rstel.)415
b(Die)g(A)-36 b(ufzeic)g(hn)g(ung)413 b(eines)h(b)36
b(estimm)-36 b(ten)413 b(T)-108 b(ages)415 b(ist)g(nac)-36
b(hstehend)412 b(an-)921 8891 y(gegeb)36 b(en:)p 9101
9857 37189 45 v 9057 15789 45 5976 v 0.9 TeXcolorgray
9101 15789 12352 5976 v 0 TeXcolorgray 12164 11207 a(Anzahl)434
b(der)12261 13199 y(v)-36 b(erkauften)12504 15191 y(P)g(ortionen)p
21453 15789 45 5976 v 0.9 TeXcolorgray 21497 15789 12352
5976 v 0 TeXcolorgray 22716 12203 a(V)-108 b(erkaufspreis)434
b(pro)22687 14195 y(P)-36 b(ortion)434 b(\(in)f(Euro\))p
33849 15789 45 5976 v 0.9 TeXcolorgray 33894 15789 12352
5976 v 0 TeXcolorgray 35103 12203 a(Einkaufspreis)i(pro)35084
14195 y(P)-36 b(ortion)433 b(\(in)h(Euro\))p 46245 15789
45 5976 v 921 15833 45369 45 v 921 17891 45 2059 v 0.9
TeXcolorgray 965 17891 8092 2059 v 0 TeXcolorgray 1750
17227 a(F)-108 b(rankfurter)p 9057 17891 45 2059 v 14627
17293 a(24)p 21453 17891 V 10590 w(2,70)p 33849 17891
V 10085 w(0,90)p 46245 17891 V 921 17936 45369 45 v 921
19994 45 2059 v 0.9 TeXcolorgray 965 19994 8092 2059
v 0 TeXcolorgray 1949 19330 a(Debreziner)p 9057 19994
45 2059 v 14627 19396 a(14)p 21453 19994 V 10590 w(3,00)p
33849 19994 V 10085 w(1,20)p 46245 19994 V 921 20038
45369 45 v 921 22096 45 2059 v 0.9 TeXcolorgray 965 22096
8092 2059 v 0 TeXcolorgray 1710 21432 a(Buren)-36 b(wurst)p
9057 22096 45 2059 v 14627 21498 a(11)p 21453 22096 V
10590 w(2,80)p 33849 22096 V 10085 w(1,00)p 46245 22096
V 921 22140 45369 45 v 921 24199 45 2059 v 0.9 TeXcolorgray
965 24199 8092 2059 v 0 TeXcolorgray 1629 23535 a(K\344sekrainer)p
9057 24199 45 2059 v 14627 23601 a(19)p 21453 24199 V
10590 w(3,20)p 33849 24199 V 10085 w(1,40)p 46245 24199
V 921 24243 45369 45 v 921 26301 45 2059 v 0.9 TeXcolorgray
965 26301 8092 2059 v 0 TeXcolorgray 2144 25637 a(Brat)g(wurst)p
9057 26301 45 2059 v 14627 25703 a(18)p 21453 26301 V
10590 w(3,20)p 33849 26301 V 10085 w(1,20)p 46245 26301
V 921 26345 45369 45 v 921 27925 a(Die)308 b(mit)f(Zahlen)-36
b(w)g(erten)306 b(ausgef\374llten)h(Spalten)g(der)f(T)-108
b(ab)36 b(elle)308 b(k)-36 b(\366nnen)306 b(als)i(V)-108
b(ektoren)307 b(abge-)921 29917 y(sc)-36 b(hrieb)36 b(en)359
b(w)-36 b(erden.)361 b(Dab)36 b(ei)361 b(gibt)f(der)g(V)-108
b(ektor)360 b Fu(A)g Fv(die)g(Anzahl)h(der)e(v)-36 b(erkauften)361
b(P)-36 b(ortionen,)921 31909 y(der)541 b(V)-108 b(ektor)542
b Fu(B)609 b Fv(die)541 b(V)-108 b(erkaufspreise)542
b(pro)f(P)-36 b(ortion)542 b(\(in)f(Euro\))h(und)e(der)h(V)-108
b(ektor)542 b Fu(C)636 b Fv(die)921 33900 y(Einkaufspreise)434
b(pro)g(P)-36 b(ortion)433 b(\(in)g(Euro\))g(an.)921
36446 y(Gib)515 b(einen)g(A)-36 b(usdruc)g(k)515 b(mithilfe)h(der)f(V)
-108 b(ektoren)515 b Fu(A;)221 b(B)583 b Fv(und)515 b
Fu(C)610 b Fv(an,)516 b(der)f(den)g(an)g(diesem)874 38438
y(T)-108 b(ag)352 b(erzielten)f(Gesam)-36 b(tgewinn)351
b(des)f(W)-36 b(\374rstelstandb)36 b(esitzers)350 b(b)36
b(ezogen)351 b(auf)h(den)e(V)-108 b(erkauf)921 40430
y(der)433 b(W)-36 b(\374rstel)433 b(b)36 b(esc)-36 b(hreibt!)921
42975 y(Gesam)g(tgewinn)433 b(=)p 1 0 0 TeXcolorrgb 434
w Fu(A)295 b Fs(\001)g Fr(\()p Fu(B)362 b Fs(\000)295
b Fu(C)95 b Fr(\))p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 4907 a Fp(___/1)p 1 0 0 TeXcolorrgb
47990 6899 a Fo(A)-31 b(G)369 b(3.3)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 46782 54804 45
v 0 TeXcolorgray 24421 81281 a Fv(15)p 0 TeXcolorgray
eop end
%%Page: 16 16
TeXDict begin 16 15 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fw(A)-60 b(G)848 b(3.3)g(-)f(19)h(V)-179
b(ektoren)846 b(in)h(der)g(Eb)60 b(ene)846 b(-)i(O)-60
b(A)848 b(-)g(Matura)f(NT)h(1)-2438 4515 y(16/17)p 0
TeXcolorgray -1391 7823 a Fv(19.)p 0 TeXcolorgray 651
w(Die)434 b(un)-36 b(ten)432 b(stehende)h(Abbildung)f(zeigt)j(zw)-36
b(ei)434 b(V)-108 b(ektoren)30322 7284 y Fb(#)-222 b(\024)30386
7823 y Fu(a)646 b Fv(und)34464 6933 y Fb(#)-222 b(\024)34593
7823 y Fu(b)277 b Fv(.)921 10368 y(Zeic)-36 b(hne)453
b(in)g(die)g(Abbildung)f(einen)h(V)-108 b(ektor)23550
9829 y Fb(#)-221 b(\024)23676 10368 y Fu(c)727 b Fv(so)454
b(ein,)f(dass)g(die)h(Summe)e(der)h(drei)g(V)-108 b(ek-)921
13062 y(toren)433 b(den)g(Nullv)-36 b(ektor)435 b(ergibt,)e(also)20080
12523 y Fb(#)-222 b(\024)20144 13062 y Fu(a)507 b Fr(+)22789
12172 y Fb(#)-222 b(\024)22918 13062 y Fu(b)572 b Fr(+)25498
12523 y Fb(#)-222 b(\024)25624 13062 y Fu(c)642 b Fr(=)28207
10781 y Ft(0)28207 12774 y(@)29507 12132 y Fr(0)29507
14124 y(0)30490 10781 y Ft(1)30490 12774 y(A)31892 13062
y Fv(gilt!)p 0 TeXcolorgray 0 TeXcolorgray 921 52148
a
 currentpoint currentpoint translate 1.19202 1.19202 scale neg exch
neg exch translate
 921 52148 a 921 52148 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 340.86374 a add def
/d 0.0 a add neg def /h 265.17932 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end
 921 52148 a -14260 31486 a
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  0.0 -170.71646 T 10
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 478.00616 0.0 137.14243 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.6 SLW 0  setgray  113.81097 0.0 T 12
{ gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 78.5294 0.0 -186.64992   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 312.98018
-113.81097 312.98018 -28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 227.62195
28.45274 312.98018 -28.45274   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -14260 31486 a
tx@Dict begin  { 318.67064 -71.13185 } PutCoor PutBegin  end

-14260 31486 a -14155 31138 a Fa(#)-158 b(\024)-14118
31486 y Fl(a)-14260 31486 y
tx@Dict begin  PutEnd  end
 -14260 31486 a -14260 31486
a
tx@Dict begin  { 274.85359 3.41418 } PutCoor PutBegin  end
 -14260 31486 a -14155 30904 a Fa(#)g(\024)-14069 31486
y Fl(b)-14260 31486 y
tx@Dict begin  PutEnd  end
 -14260 31486 a 1 0 0 TeXcolorrgb
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  2.0
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 398.33841
0.0 312.98018 -28.45274   /Lineto /lineto load def 0  setlinejoin false
 NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -14260 31486 a
tx@Dict begin  { 354.52136 -11.38092 } PutCoor PutBegin  end

-14260 31486 a -14155 31138 a Fa(#)g(\024)-14072 31486
y Fl(c)-14260 31486 y
tx@Dict begin  PutEnd  end
 -14260 31486 a 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 38653 52148 a
currentpoint initclip moveto
 38653
52148 a 921 52148 a
 currentpoint currentpoint translate 1 1.19202 div 1 1.19202 div scale
neg exch neg exch translate
 921 52148 a 47992 7823 a Fp(___/1)p
1 0 0 TeXcolorrgb 47990 9815 a Fo(A)-31 b(G)369 b(3.3)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
54184 54804 45 v 0 TeXcolorgray 24421 81281 a Fv(16)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
